{"diffoscope-json-version": 1, "source1": "first/IOCase.class", "source2": "second/IOCase.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,65 +1,65 @@\n-  SHA-256 checksum e9f1e5634cd8377e043aee54ac05e515d4a87a800f020a7f8e8f1ba13dbf88c2\n+  SHA-256 checksum d1650ca33613df7dfbee642941cdf70e464fd821816d11e7de4b31fcfe849690\n   Compiled from \"IOCase.java\"\n public final class org.apache.commons.io.IOCase extends java.lang.Enum<org.apache.commons.io.IOCase>\n   minor version: 0\n   major version: 52\n   flags: (0x4031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER, ACC_ENUM\n   this_class: #4                          // org/apache/commons/io/IOCase\n   super_class: #48                        // java/lang/Enum\n   interfaces: 0, fields: 7, methods: 19, attributes: 4\n Constant pool:\n-    #1 = Fieldref           #4.#122       // org/apache/commons/io/IOCase.$VALUES:[Lorg/apache/commons/io/IOCase;\n-    #2 = Methodref          #123.#124     // \"[Lorg/apache/commons/io/IOCase;\".clone:()Ljava/lang/Object;\n+    #1 = Fieldref           #4.#121       // org/apache/commons/io/IOCase.$VALUES:[Lorg/apache/commons/io/IOCase;\n+    #2 = Methodref          #122.#123     // \"[Lorg/apache/commons/io/IOCase;\".clone:()Ljava/lang/Object;\n     #3 = Class              #63           // \"[Lorg/apache/commons/io/IOCase;\"\n-    #4 = Class              #125          // org/apache/commons/io/IOCase\n-    #5 = Methodref          #48.#126      // java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-    #6 = Methodref          #4.#127       // org/apache/commons/io/IOCase.values:()[Lorg/apache/commons/io/IOCase;\n-    #7 = InterfaceMethodref #128.#129     // java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n-    #8 = InvokeDynamic      #0:#135       // #0:test:(Ljava/lang/String;)Ljava/util/function/Predicate;\n-    #9 = InterfaceMethodref #128.#136     // java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-   #10 = InterfaceMethodref #128.#137     // java/util/stream/Stream.findFirst:()Ljava/util/Optional;\n-   #11 = InvokeDynamic      #1:#141       // #1:get:(Ljava/lang/String;)Ljava/util/function/Supplier;\n-   #12 = Methodref          #142.#143     // java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;\n-   #13 = Methodref          #4.#144       // org/apache/commons/io/IOCase.isCaseSensitive:()Z\n-   #14 = Methodref          #48.#145      // java/lang/Enum.\"<init>\":(Ljava/lang/String;I)V\n-   #15 = Fieldref           #4.#146       // org/apache/commons/io/IOCase.name:Ljava/lang/String;\n-   #16 = Fieldref           #4.#147       // org/apache/commons/io/IOCase.sensitive:Z\n-   #17 = String             #87           // str1\n-   #18 = Methodref          #148.#149     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #19 = String             #88           // str2\n-   #20 = Methodref          #150.#151     // java/lang/String.compareTo:(Ljava/lang/String;)I\n-   #21 = Methodref          #150.#152     // java/lang/String.compareToIgnoreCase:(Ljava/lang/String;)I\n-   #22 = Methodref          #150.#153     // java/lang/String.length:()I\n-   #23 = Methodref          #150.#154     // java/lang/String.regionMatches:(ZILjava/lang/String;II)Z\n-   #24 = Methodref          #150.#155     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #25 = Methodref          #150.#156     // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-   #26 = Methodref          #4.#157       // org/apache/commons/io/IOCase.checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n-   #27 = Methodref          #4.#158       // org/apache/commons/io/IOCase.forName:(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;\n-   #28 = Class              #159          // java/lang/IllegalArgumentException\n-   #29 = Class              #160          // java/lang/StringBuilder\n-   #30 = Methodref          #29.#161      // java/lang/StringBuilder.\"<init>\":()V\n-   #31 = String             #162          // Illegal IOCase name:\n-   #32 = Methodref          #29.#163      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #33 = Methodref          #29.#164      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #34 = Methodref          #28.#165      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #35 = Methodref          #4.#166       // org/apache/commons/io/IOCase.getName:()Ljava/lang/String;\n+    #4 = Class              #124          // org/apache/commons/io/IOCase\n+    #5 = Methodref          #48.#125      // java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+    #6 = Methodref          #4.#126       // org/apache/commons/io/IOCase.values:()[Lorg/apache/commons/io/IOCase;\n+    #7 = InterfaceMethodref #127.#128     // java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n+    #8 = InvokeDynamic      #0:#134       // #0:test:(Ljava/lang/String;)Ljava/util/function/Predicate;\n+    #9 = InterfaceMethodref #127.#135     // java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+   #10 = InterfaceMethodref #127.#136     // java/util/stream/Stream.findFirst:()Ljava/util/Optional;\n+   #11 = InvokeDynamic      #1:#140       // #1:get:(Ljava/lang/String;)Ljava/util/function/Supplier;\n+   #12 = Methodref          #141.#142     // java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;\n+   #13 = Methodref          #4.#143       // org/apache/commons/io/IOCase.isCaseSensitive:()Z\n+   #14 = Methodref          #48.#144      // java/lang/Enum.\"<init>\":(Ljava/lang/String;I)V\n+   #15 = Fieldref           #4.#145       // org/apache/commons/io/IOCase.name:Ljava/lang/String;\n+   #16 = Fieldref           #4.#146       // org/apache/commons/io/IOCase.sensitive:Z\n+   #17 = String             #86           // str1\n+   #18 = Methodref          #147.#148     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #19 = String             #87           // str2\n+   #20 = Methodref          #94.#149      // java/lang/String.compareTo:(Ljava/lang/String;)I\n+   #21 = Methodref          #94.#150      // java/lang/String.compareToIgnoreCase:(Ljava/lang/String;)I\n+   #22 = Methodref          #94.#151      // java/lang/String.length:()I\n+   #23 = Methodref          #94.#152      // java/lang/String.regionMatches:(ZILjava/lang/String;II)Z\n+   #24 = Methodref          #94.#153      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #25 = Methodref          #94.#154      // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+   #26 = Methodref          #4.#155       // org/apache/commons/io/IOCase.checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n+   #27 = Methodref          #4.#156       // org/apache/commons/io/IOCase.forName:(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;\n+   #28 = Class              #157          // java/lang/IllegalArgumentException\n+   #29 = Class              #158          // java/lang/StringBuilder\n+   #30 = Methodref          #29.#159      // java/lang/StringBuilder.\"<init>\":()V\n+   #31 = String             #160          // Illegal IOCase name:\n+   #32 = Methodref          #29.#161      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #33 = Methodref          #29.#162      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #34 = Methodref          #28.#163      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #35 = Methodref          #4.#164       // org/apache/commons/io/IOCase.getName:()Ljava/lang/String;\n    #36 = String             #49           // SENSITIVE\n-   #37 = String             #167          // Sensitive\n-   #38 = Methodref          #4.#168       // org/apache/commons/io/IOCase.\"<init>\":(Ljava/lang/String;ILjava/lang/String;Z)V\n-   #39 = Fieldref           #4.#169       // org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n+   #37 = String             #165          // Sensitive\n+   #38 = Methodref          #4.#166       // org/apache/commons/io/IOCase.\"<init>\":(Ljava/lang/String;ILjava/lang/String;Z)V\n+   #39 = Fieldref           #4.#167       // org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n    #40 = String             #51           // INSENSITIVE\n-   #41 = String             #170          // Insensitive\n-   #42 = Fieldref           #4.#171       // org/apache/commons/io/IOCase.INSENSITIVE:Lorg/apache/commons/io/IOCase;\n+   #41 = String             #168          // Insensitive\n+   #42 = Fieldref           #4.#169       // org/apache/commons/io/IOCase.INSENSITIVE:Lorg/apache/commons/io/IOCase;\n    #43 = String             #52           // SYSTEM\n-   #44 = String             #172          // System\n-   #45 = Methodref          #173.#174     // org/apache/commons/io/FileSystem.getCurrent:()Lorg/apache/commons/io/FileSystem;\n-   #46 = Methodref          #173.#144     // org/apache/commons/io/FileSystem.isCaseSensitive:()Z\n-   #47 = Fieldref           #4.#175       // org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n-   #48 = Class              #176          // java/lang/Enum\n+   #44 = String             #170          // System\n+   #45 = Methodref          #171.#172     // org/apache/commons/io/FileSystem.getCurrent:()Lorg/apache/commons/io/FileSystem;\n+   #46 = Methodref          #171.#143     // org/apache/commons/io/FileSystem.isCaseSensitive:()Z\n+   #47 = Fieldref           #4.#173       // org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n+   #48 = Class              #174          // java/lang/Enum\n    #49 = Utf8               SENSITIVE\n    #50 = Utf8               Lorg/apache/commons/io/IOCase;\n    #51 = Utf8               INSENSITIVE\n    #52 = Utf8               SYSTEM\n    #53 = Utf8               serialVersionUID\n    #54 = Utf8               J\n    #55 = Utf8               ConstantValue\n@@ -81,167 +81,165 @@\n    #72 = Utf8               isCaseSensitive\n    #73 = Utf8               (Lorg/apache/commons/io/IOCase;)Z\n    #74 = Utf8               ioCase\n    #75 = Utf8               StackMapTable\n    #76 = Utf8               value\n    #77 = Utf8               (Lorg/apache/commons/io/IOCase;Lorg/apache/commons/io/IOCase;)Lorg/apache/commons/io/IOCase;\n    #78 = Utf8               defaultValue\n-   #79 = Class              #125          // org/apache/commons/io/IOCase\n-   #80 = Utf8               <init>\n-   #81 = Utf8               (Ljava/lang/String;ILjava/lang/String;Z)V\n-   #82 = Utf8               this\n-   #83 = Utf8               Signature\n-   #84 = Utf8               (Ljava/lang/String;Z)V\n-   #85 = Utf8               checkCompareTo\n-   #86 = Utf8               (Ljava/lang/String;Ljava/lang/String;)I\n-   #87 = Utf8               str1\n-   #88 = Utf8               str2\n-   #89 = Utf8               checkEndsWith\n-   #90 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n-   #91 = Utf8               str\n-   #92 = Utf8               end\n-   #93 = Utf8               endLen\n-   #94 = Utf8               I\n-   #95 = Class              #177          // java/lang/String\n-   #96 = Utf8               checkEquals\n-   #97 = Utf8               checkIndexOf\n-   #98 = Utf8               (Ljava/lang/String;ILjava/lang/String;)I\n-   #99 = Utf8               i\n-  #100 = Utf8               strStartIndex\n-  #101 = Utf8               search\n-  #102 = Utf8               endIndex\n-  #103 = Utf8               checkRegionMatches\n-  #104 = Utf8               (Ljava/lang/String;ILjava/lang/String;)Z\n-  #105 = Utf8               checkStartsWith\n-  #106 = Utf8               start\n-  #107 = Utf8               getName\n-  #108 = Utf8               ()Ljava/lang/String;\n-  #109 = Utf8               ()Z\n-  #110 = Utf8               readResolve\n-  #111 = Utf8               ()Ljava/lang/Object;\n-  #112 = Utf8               toString\n-  #113 = Utf8               lambda$forName$1\n-  #114 = Utf8               (Ljava/lang/String;)Ljava/lang/IllegalArgumentException;\n-  #115 = Utf8               lambda$forName$0\n-  #116 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n-  #117 = Utf8               <clinit>\n-  #118 = Utf8               ()V\n-  #119 = Utf8               Ljava/lang/Enum<Lorg/apache/commons/io/IOCase;>;\n-  #120 = Utf8               SourceFile\n-  #121 = Utf8               IOCase.java\n-  #122 = NameAndType        #62:#63       // $VALUES:[Lorg/apache/commons/io/IOCase;\n-  #123 = Class              #63           // \"[Lorg/apache/commons/io/IOCase;\"\n-  #124 = NameAndType        #178:#111     // clone:()Ljava/lang/Object;\n-  #125 = Utf8               org/apache/commons/io/IOCase\n-  #126 = NameAndType        #68:#179      // valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-  #127 = NameAndType        #64:#65       // values:()[Lorg/apache/commons/io/IOCase;\n-  #128 = Class              #180          // java/util/stream/Stream\n-  #129 = NameAndType        #181:#182     // of:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n-  #130 = Utf8               BootstrapMethods\n-  #131 = MethodHandle       6:#183        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #132 = MethodType         #184          //  (Ljava/lang/Object;)Z\n-  #133 = MethodHandle       6:#185        // REF_invokeStatic org/apache/commons/io/IOCase.lambda$forName$0:(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n-  #134 = MethodType         #73           //  (Lorg/apache/commons/io/IOCase;)Z\n-  #135 = NameAndType        #186:#187     // test:(Ljava/lang/String;)Ljava/util/function/Predicate;\n-  #136 = NameAndType        #188:#189     // filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-  #137 = NameAndType        #190:#191     // findFirst:()Ljava/util/Optional;\n-  #138 = MethodType         #111          //  ()Ljava/lang/Object;\n-  #139 = MethodHandle       6:#192        // REF_invokeStatic org/apache/commons/io/IOCase.lambda$forName$1:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;\n-  #140 = MethodType         #193          //  ()Ljava/lang/IllegalArgumentException;\n-  #141 = NameAndType        #194:#195     // get:(Ljava/lang/String;)Ljava/util/function/Supplier;\n-  #142 = Class              #196          // java/util/Optional\n-  #143 = NameAndType        #197:#198     // orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;\n-  #144 = NameAndType        #72:#109      // isCaseSensitive:()Z\n-  #145 = NameAndType        #80:#199      // \"<init>\":(Ljava/lang/String;I)V\n-  #146 = NameAndType        #58:#59       // name:Ljava/lang/String;\n-  #147 = NameAndType        #60:#61       // sensitive:Z\n-  #148 = Class              #200          // java/util/Objects\n-  #149 = NameAndType        #201:#202     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #150 = Class              #177          // java/lang/String\n-  #151 = NameAndType        #203:#204     // compareTo:(Ljava/lang/String;)I\n-  #152 = NameAndType        #205:#204     // compareToIgnoreCase:(Ljava/lang/String;)I\n-  #153 = NameAndType        #206:#207     // length:()I\n-  #154 = NameAndType        #208:#209     // regionMatches:(ZILjava/lang/String;II)Z\n-  #155 = NameAndType        #210:#184     // equals:(Ljava/lang/Object;)Z\n-  #156 = NameAndType        #211:#212     // equalsIgnoreCase:(Ljava/lang/String;)Z\n-  #157 = NameAndType        #103:#104     // checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n-  #158 = NameAndType        #71:#69       // forName:(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;\n-  #159 = Utf8               java/lang/IllegalArgumentException\n-  #160 = Utf8               java/lang/StringBuilder\n-  #161 = NameAndType        #80:#118      // \"<init>\":()V\n-  #162 = Utf8               Illegal IOCase name:\n-  #163 = NameAndType        #213:#214     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #164 = NameAndType        #112:#108     // toString:()Ljava/lang/String;\n-  #165 = NameAndType        #80:#215      // \"<init>\":(Ljava/lang/String;)V\n-  #166 = NameAndType        #107:#108     // getName:()Ljava/lang/String;\n-  #167 = Utf8               Sensitive\n-  #168 = NameAndType        #80:#81       // \"<init>\":(Ljava/lang/String;ILjava/lang/String;Z)V\n-  #169 = NameAndType        #49:#50       // SENSITIVE:Lorg/apache/commons/io/IOCase;\n-  #170 = Utf8               Insensitive\n-  #171 = NameAndType        #51:#50       // INSENSITIVE:Lorg/apache/commons/io/IOCase;\n-  #172 = Utf8               System\n-  #173 = Class              #216          // org/apache/commons/io/FileSystem\n-  #174 = NameAndType        #217:#218     // getCurrent:()Lorg/apache/commons/io/FileSystem;\n-  #175 = NameAndType        #52:#50       // SYSTEM:Lorg/apache/commons/io/IOCase;\n-  #176 = Utf8               java/lang/Enum\n-  #177 = Utf8               java/lang/String\n-  #178 = Utf8               clone\n-  #179 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-  #180 = Utf8               java/util/stream/Stream\n-  #181 = Utf8               of\n-  #182 = Utf8               ([Ljava/lang/Object;)Ljava/util/stream/Stream;\n-  #183 = Methodref          #219.#220     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #184 = Utf8               (Ljava/lang/Object;)Z\n-  #185 = Methodref          #4.#221       // org/apache/commons/io/IOCase.lambda$forName$0:(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n-  #186 = Utf8               test\n-  #187 = Utf8               (Ljava/lang/String;)Ljava/util/function/Predicate;\n-  #188 = Utf8               filter\n-  #189 = Utf8               (Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-  #190 = Utf8               findFirst\n-  #191 = Utf8               ()Ljava/util/Optional;\n-  #192 = Methodref          #4.#222       // org/apache/commons/io/IOCase.lambda$forName$1:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;\n-  #193 = Utf8               ()Ljava/lang/IllegalArgumentException;\n-  #194 = Utf8               get\n-  #195 = Utf8               (Ljava/lang/String;)Ljava/util/function/Supplier;\n-  #196 = Utf8               java/util/Optional\n-  #197 = Utf8               orElseThrow\n-  #198 = Utf8               (Ljava/util/function/Supplier;)Ljava/lang/Object;\n-  #199 = Utf8               (Ljava/lang/String;I)V\n-  #200 = Utf8               java/util/Objects\n-  #201 = Utf8               requireNonNull\n-  #202 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #203 = Utf8               compareTo\n-  #204 = Utf8               (Ljava/lang/String;)I\n-  #205 = Utf8               compareToIgnoreCase\n-  #206 = Utf8               length\n-  #207 = Utf8               ()I\n-  #208 = Utf8               regionMatches\n-  #209 = Utf8               (ZILjava/lang/String;II)Z\n-  #210 = Utf8               equals\n-  #211 = Utf8               equalsIgnoreCase\n-  #212 = Utf8               (Ljava/lang/String;)Z\n-  #213 = Utf8               append\n-  #214 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #215 = Utf8               (Ljava/lang/String;)V\n-  #216 = Utf8               org/apache/commons/io/FileSystem\n-  #217 = Utf8               getCurrent\n-  #218 = Utf8               ()Lorg/apache/commons/io/FileSystem;\n-  #219 = Class              #223          // java/lang/invoke/LambdaMetafactory\n-  #220 = NameAndType        #224:#228     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #221 = NameAndType        #115:#116     // lambda$forName$0:(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n-  #222 = NameAndType        #113:#114     // lambda$forName$1:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;\n-  #223 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #224 = Utf8               metafactory\n-  #225 = Class              #230          // java/lang/invoke/MethodHandles$Lookup\n-  #226 = Utf8               Lookup\n-  #227 = Utf8               InnerClasses\n-  #228 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #229 = Class              #231          // java/lang/invoke/MethodHandles\n-  #230 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #231 = Utf8               java/lang/invoke/MethodHandles\n+   #79 = Utf8               <init>\n+   #80 = Utf8               (Ljava/lang/String;ILjava/lang/String;Z)V\n+   #81 = Utf8               this\n+   #82 = Utf8               Signature\n+   #83 = Utf8               (Ljava/lang/String;Z)V\n+   #84 = Utf8               checkCompareTo\n+   #85 = Utf8               (Ljava/lang/String;Ljava/lang/String;)I\n+   #86 = Utf8               str1\n+   #87 = Utf8               str2\n+   #88 = Utf8               checkEndsWith\n+   #89 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n+   #90 = Utf8               str\n+   #91 = Utf8               end\n+   #92 = Utf8               endLen\n+   #93 = Utf8               I\n+   #94 = Class              #175          // java/lang/String\n+   #95 = Utf8               checkEquals\n+   #96 = Utf8               checkIndexOf\n+   #97 = Utf8               (Ljava/lang/String;ILjava/lang/String;)I\n+   #98 = Utf8               i\n+   #99 = Utf8               strStartIndex\n+  #100 = Utf8               search\n+  #101 = Utf8               endIndex\n+  #102 = Utf8               checkRegionMatches\n+  #103 = Utf8               (Ljava/lang/String;ILjava/lang/String;)Z\n+  #104 = Utf8               checkStartsWith\n+  #105 = Utf8               start\n+  #106 = Utf8               getName\n+  #107 = Utf8               ()Ljava/lang/String;\n+  #108 = Utf8               ()Z\n+  #109 = Utf8               readResolve\n+  #110 = Utf8               ()Ljava/lang/Object;\n+  #111 = Utf8               toString\n+  #112 = Utf8               lambda$forName$1\n+  #113 = Utf8               (Ljava/lang/String;)Ljava/lang/IllegalArgumentException;\n+  #114 = Utf8               lambda$forName$0\n+  #115 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n+  #116 = Utf8               <clinit>\n+  #117 = Utf8               ()V\n+  #118 = Utf8               Ljava/lang/Enum<Lorg/apache/commons/io/IOCase;>;\n+  #119 = Utf8               SourceFile\n+  #120 = Utf8               IOCase.java\n+  #121 = NameAndType        #62:#63       // $VALUES:[Lorg/apache/commons/io/IOCase;\n+  #122 = Class              #63           // \"[Lorg/apache/commons/io/IOCase;\"\n+  #123 = NameAndType        #176:#110     // clone:()Ljava/lang/Object;\n+  #124 = Utf8               org/apache/commons/io/IOCase\n+  #125 = NameAndType        #68:#177      // valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+  #126 = NameAndType        #64:#65       // values:()[Lorg/apache/commons/io/IOCase;\n+  #127 = Class              #178          // java/util/stream/Stream\n+  #128 = NameAndType        #179:#180     // of:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n+  #129 = Utf8               BootstrapMethods\n+  #130 = MethodHandle       6:#181        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #131 = MethodType         #182          //  (Ljava/lang/Object;)Z\n+  #132 = MethodHandle       6:#183        // REF_invokeStatic org/apache/commons/io/IOCase.lambda$forName$0:(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n+  #133 = MethodType         #73           //  (Lorg/apache/commons/io/IOCase;)Z\n+  #134 = NameAndType        #184:#185     // test:(Ljava/lang/String;)Ljava/util/function/Predicate;\n+  #135 = NameAndType        #186:#187     // filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+  #136 = NameAndType        #188:#189     // findFirst:()Ljava/util/Optional;\n+  #137 = MethodType         #110          //  ()Ljava/lang/Object;\n+  #138 = MethodHandle       6:#190        // REF_invokeStatic org/apache/commons/io/IOCase.lambda$forName$1:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;\n+  #139 = MethodType         #191          //  ()Ljava/lang/IllegalArgumentException;\n+  #140 = NameAndType        #192:#193     // get:(Ljava/lang/String;)Ljava/util/function/Supplier;\n+  #141 = Class              #194          // java/util/Optional\n+  #142 = NameAndType        #195:#196     // orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;\n+  #143 = NameAndType        #72:#108      // isCaseSensitive:()Z\n+  #144 = NameAndType        #79:#197      // \"<init>\":(Ljava/lang/String;I)V\n+  #145 = NameAndType        #58:#59       // name:Ljava/lang/String;\n+  #146 = NameAndType        #60:#61       // sensitive:Z\n+  #147 = Class              #198          // java/util/Objects\n+  #148 = NameAndType        #199:#200     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #149 = NameAndType        #201:#202     // compareTo:(Ljava/lang/String;)I\n+  #150 = NameAndType        #203:#202     // compareToIgnoreCase:(Ljava/lang/String;)I\n+  #151 = NameAndType        #204:#205     // length:()I\n+  #152 = NameAndType        #206:#207     // regionMatches:(ZILjava/lang/String;II)Z\n+  #153 = NameAndType        #208:#182     // equals:(Ljava/lang/Object;)Z\n+  #154 = NameAndType        #209:#210     // equalsIgnoreCase:(Ljava/lang/String;)Z\n+  #155 = NameAndType        #102:#103     // checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n+  #156 = NameAndType        #71:#69       // forName:(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;\n+  #157 = Utf8               java/lang/IllegalArgumentException\n+  #158 = Utf8               java/lang/StringBuilder\n+  #159 = NameAndType        #79:#117      // \"<init>\":()V\n+  #160 = Utf8               Illegal IOCase name:\n+  #161 = NameAndType        #211:#212     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #162 = NameAndType        #111:#107     // toString:()Ljava/lang/String;\n+  #163 = NameAndType        #79:#213      // \"<init>\":(Ljava/lang/String;)V\n+  #164 = NameAndType        #106:#107     // getName:()Ljava/lang/String;\n+  #165 = Utf8               Sensitive\n+  #166 = NameAndType        #79:#80       // \"<init>\":(Ljava/lang/String;ILjava/lang/String;Z)V\n+  #167 = NameAndType        #49:#50       // SENSITIVE:Lorg/apache/commons/io/IOCase;\n+  #168 = Utf8               Insensitive\n+  #169 = NameAndType        #51:#50       // INSENSITIVE:Lorg/apache/commons/io/IOCase;\n+  #170 = Utf8               System\n+  #171 = Class              #214          // org/apache/commons/io/FileSystem\n+  #172 = NameAndType        #215:#216     // getCurrent:()Lorg/apache/commons/io/FileSystem;\n+  #173 = NameAndType        #52:#50       // SYSTEM:Lorg/apache/commons/io/IOCase;\n+  #174 = Utf8               java/lang/Enum\n+  #175 = Utf8               java/lang/String\n+  #176 = Utf8               clone\n+  #177 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+  #178 = Utf8               java/util/stream/Stream\n+  #179 = Utf8               of\n+  #180 = Utf8               ([Ljava/lang/Object;)Ljava/util/stream/Stream;\n+  #181 = Methodref          #217.#218     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #182 = Utf8               (Ljava/lang/Object;)Z\n+  #183 = Methodref          #4.#219       // org/apache/commons/io/IOCase.lambda$forName$0:(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n+  #184 = Utf8               test\n+  #185 = Utf8               (Ljava/lang/String;)Ljava/util/function/Predicate;\n+  #186 = Utf8               filter\n+  #187 = Utf8               (Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+  #188 = Utf8               findFirst\n+  #189 = Utf8               ()Ljava/util/Optional;\n+  #190 = Methodref          #4.#220       // org/apache/commons/io/IOCase.lambda$forName$1:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;\n+  #191 = Utf8               ()Ljava/lang/IllegalArgumentException;\n+  #192 = Utf8               get\n+  #193 = Utf8               (Ljava/lang/String;)Ljava/util/function/Supplier;\n+  #194 = Utf8               java/util/Optional\n+  #195 = Utf8               orElseThrow\n+  #196 = Utf8               (Ljava/util/function/Supplier;)Ljava/lang/Object;\n+  #197 = Utf8               (Ljava/lang/String;I)V\n+  #198 = Utf8               java/util/Objects\n+  #199 = Utf8               requireNonNull\n+  #200 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #201 = Utf8               compareTo\n+  #202 = Utf8               (Ljava/lang/String;)I\n+  #203 = Utf8               compareToIgnoreCase\n+  #204 = Utf8               length\n+  #205 = Utf8               ()I\n+  #206 = Utf8               regionMatches\n+  #207 = Utf8               (ZILjava/lang/String;II)Z\n+  #208 = Utf8               equals\n+  #209 = Utf8               equalsIgnoreCase\n+  #210 = Utf8               (Ljava/lang/String;)Z\n+  #211 = Utf8               append\n+  #212 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #213 = Utf8               (Ljava/lang/String;)V\n+  #214 = Utf8               org/apache/commons/io/FileSystem\n+  #215 = Utf8               getCurrent\n+  #216 = Utf8               ()Lorg/apache/commons/io/FileSystem;\n+  #217 = Class              #221          // java/lang/invoke/LambdaMetafactory\n+  #218 = NameAndType        #222:#226     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #219 = NameAndType        #114:#115     // lambda$forName$0:(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n+  #220 = NameAndType        #112:#113     // lambda$forName$1:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;\n+  #221 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #222 = Utf8               metafactory\n+  #223 = Class              #228          // java/lang/invoke/MethodHandles$Lookup\n+  #224 = Utf8               Lookup\n+  #225 = Utf8               InnerClasses\n+  #226 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #227 = Class              #229          // java/lang/invoke/MethodHandles\n+  #228 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #229 = Utf8               java/lang/invoke/MethodHandles\n {\n   public static final org.apache.commons.io.IOCase SENSITIVE;\n     descriptor: Lorg/apache/commons/io/IOCase;\n     flags: (0x4019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_ENUM\n \n   public static final org.apache.commons.io.IOCase INSENSITIVE;\n     descriptor: Lorg/apache/commons/io/IOCase;\n@@ -388,15 +386,15 @@\n         line 120: 11\n         line 121: 17\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0  this   Lorg/apache/commons/io/IOCase;\n             0      18     3  name   Ljava/lang/String;\n             0      18     4 sensitive   Z\n-    Signature: #84                          // (Ljava/lang/String;Z)V\n+    Signature: #83                          // (Ljava/lang/String;Z)V\n \n   public int checkCompareTo(java.lang.String, java.lang.String);\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_1\n@@ -803,22 +801,22 @@\n         78: return\n       LineNumberTable:\n         line 45: 0\n         line 50: 16\n         line 66: 32\n         line 40: 53\n }\n-Signature: #119                         // Ljava/lang/Enum<Lorg/apache/commons/io/IOCase;>;\n+Signature: #118                         // Ljava/lang/Enum<Lorg/apache/commons/io/IOCase;>;\n SourceFile: \"IOCase.java\"\n InnerClasses:\n-  public static final #226= #225 of #229; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  public static final #224= #223 of #227; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #131 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #130 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #132 (Ljava/lang/Object;)Z\n-      #133 REF_invokeStatic org/apache/commons/io/IOCase.lambda$forName$0:(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n-      #134 (Lorg/apache/commons/io/IOCase;)Z\n-  1: #131 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #131 (Ljava/lang/Object;)Z\n+      #132 REF_invokeStatic org/apache/commons/io/IOCase.lambda$forName$0:(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n+      #133 (Lorg/apache/commons/io/IOCase;)Z\n+  1: #130 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #138 ()Ljava/lang/Object;\n-      #139 REF_invokeStatic org/apache/commons/io/IOCase.lambda$forName$1:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;\n-      #140 ()Ljava/lang/IllegalArgumentException;\n+      #137 ()Ljava/lang/Object;\n+      #138 REF_invokeStatic org/apache/commons/io/IOCase.lambda$forName$1:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;\n+      #139 ()Ljava/lang/IllegalArgumentException;\n"}]}
