{"diffoscope-json-version": 1, "source1": "first/CountingInputStream.class", "source2": "second/CountingInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,159 +1,153 @@\n-  SHA-256 checksum 2d7744eaad4726873448a98adc93053decfb9eea389a54d9d2acd166723ac7f1\n+  SHA-256 checksum 36c52046f7712941b4406f7154099491d2f544ad42e263af15d9a03bfb1d5fa5\n   Compiled from \"CountingInputStream.java\"\n public class org.apache.commons.io.input.CountingInputStream extends org.apache.commons.io.input.ProxyInputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #14                         // org/apache/commons/io/input/CountingInputStream\n-  super_class: #4                         // org/apache/commons/io/input/ProxyInputStream\n+  this_class: #1                          // org/apache/commons/io/input/CountingInputStream\n+  super_class: #3                         // org/apache/commons/io/input/ProxyInputStream\n   interfaces: 0, fields: 1, methods: 7, attributes: 1\n Constant pool:\n-   #1 = Class              #2             // org/apache/commons/io/IOUtils\n-   #2 = Utf8               org/apache/commons/io/IOUtils\n-   #3 = Methodref          #4.#5          // org/apache/commons/io/input/ProxyInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #4 = Class              #6             // org/apache/commons/io/input/ProxyInputStream\n-   #5 = NameAndType        #7:#8          // \"<init>\":(Ljava/io/InputStream;)V\n-   #6 = Utf8               org/apache/commons/io/input/ProxyInputStream\n+   #1 = Class              #2             // org/apache/commons/io/input/CountingInputStream\n+   #2 = Utf8               org/apache/commons/io/input/CountingInputStream\n+   #3 = Class              #4             // org/apache/commons/io/input/ProxyInputStream\n+   #4 = Utf8               org/apache/commons/io/input/ProxyInputStream\n+   #5 = Utf8               count\n+   #6 = Utf8               J\n    #7 = Utf8               <init>\n    #8 = Utf8               (Ljava/io/InputStream;)V\n-   #9 = Methodref          #4.#10         // org/apache/commons/io/input/ProxyInputStream.skip:(J)J\n-  #10 = NameAndType        #11:#12        // skip:(J)J\n-  #11 = Utf8               skip\n-  #12 = Utf8               (J)J\n-  #13 = Fieldref           #14.#15        // org/apache/commons/io/input/CountingInputStream.count:J\n-  #14 = Class              #16            // org/apache/commons/io/input/CountingInputStream\n-  #15 = NameAndType        #17:#18        // count:J\n-  #16 = Utf8               org/apache/commons/io/input/CountingInputStream\n-  #17 = Utf8               count\n-  #18 = Utf8               J\n-  #19 = Methodref          #14.#20        // org/apache/commons/io/input/CountingInputStream.getByteCount:()J\n-  #20 = NameAndType        #21:#22        // getByteCount:()J\n-  #21 = Utf8               getByteCount\n-  #22 = Utf8               ()J\n-  #23 = Class              #24            // java/lang/Integer\n-  #24 = Utf8               java/lang/Integer\n-  #25 = Long               2147483647l\n-  #27 = Class              #28            // java/lang/ArithmeticException\n-  #28 = Utf8               java/lang/ArithmeticException\n-  #29 = Class              #30            // java/lang/StringBuilder\n-  #30 = Utf8               java/lang/StringBuilder\n-  #31 = Methodref          #29.#32        // java/lang/StringBuilder.\"<init>\":()V\n-  #32 = NameAndType        #7:#33         // \"<init>\":()V\n-  #33 = Utf8               ()V\n-  #34 = String             #35            // The byte count\n-  #35 = Utf8               The byte count\n-  #36 = Methodref          #29.#37        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #37 = NameAndType        #38:#39        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #38 = Utf8               append\n-  #39 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #40 = Methodref          #29.#41        // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-  #41 = NameAndType        #38:#42        // append:(J)Ljava/lang/StringBuilder;\n-  #42 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #43 = String             #44            //  is too large to be converted to an int\n-  #44 = Utf8                is too large to be converted to an int\n-  #45 = Methodref          #29.#46        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #46 = NameAndType        #47:#48        // toString:()Ljava/lang/String;\n-  #47 = Utf8               toString\n-  #48 = Utf8               ()Ljava/lang/String;\n-  #49 = Methodref          #27.#50        // java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n-  #50 = NameAndType        #7:#51         // \"<init>\":(Ljava/lang/String;)V\n-  #51 = Utf8               (Ljava/lang/String;)V\n-  #52 = Methodref          #14.#53        // org/apache/commons/io/input/CountingInputStream.resetByteCount:()J\n-  #53 = NameAndType        #54:#22        // resetByteCount:()J\n-  #54 = Utf8               resetByteCount\n-  #55 = Utf8               Code\n-  #56 = Utf8               LineNumberTable\n-  #57 = Utf8               LocalVariableTable\n-  #58 = Utf8               this\n-  #59 = Utf8               Lorg/apache/commons/io/input/CountingInputStream;\n-  #60 = Utf8               in\n-  #61 = Utf8               Ljava/io/InputStream;\n-  #62 = Utf8               length\n-  #63 = Utf8               Exceptions\n-  #64 = Class              #65            // java/io/IOException\n-  #65 = Utf8               java/io/IOException\n-  #66 = Utf8               afterRead\n-  #67 = Utf8               (I)V\n-  #68 = Utf8               n\n-  #69 = Utf8               I\n-  #70 = Utf8               StackMapTable\n-  #71 = Utf8               getCount\n-  #72 = Utf8               ()I\n-  #73 = Utf8               result\n-  #74 = Utf8               resetCount\n-  #75 = Utf8               tmp\n-  #76 = Utf8               SourceFile\n-  #77 = Utf8               CountingInputStream.java\n+   #9 = Utf8               Code\n+  #10 = Methodref          #3.#11         // org/apache/commons/io/input/ProxyInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #11 = NameAndType        #7:#8          // \"<init>\":(Ljava/io/InputStream;)V\n+  #12 = Utf8               LineNumberTable\n+  #13 = Utf8               LocalVariableTable\n+  #14 = Utf8               this\n+  #15 = Utf8               Lorg/apache/commons/io/input/CountingInputStream;\n+  #16 = Utf8               in\n+  #17 = Utf8               Ljava/io/InputStream;\n+  #18 = Utf8               skip\n+  #19 = Utf8               (J)J\n+  #20 = Utf8               Exceptions\n+  #21 = Class              #22            // java/io/IOException\n+  #22 = Utf8               java/io/IOException\n+  #23 = Methodref          #3.#24         // org/apache/commons/io/input/ProxyInputStream.skip:(J)J\n+  #24 = NameAndType        #18:#19        // skip:(J)J\n+  #25 = Fieldref           #1.#26         // org/apache/commons/io/input/CountingInputStream.count:J\n+  #26 = NameAndType        #5:#6          // count:J\n+  #27 = Utf8               length\n+  #28 = Utf8               afterRead\n+  #29 = Utf8               (I)V\n+  #30 = Utf8               n\n+  #31 = Utf8               I\n+  #32 = Utf8               StackMapTable\n+  #33 = Utf8               getCount\n+  #34 = Utf8               ()I\n+  #35 = Methodref          #1.#36         // org/apache/commons/io/input/CountingInputStream.getByteCount:()J\n+  #36 = NameAndType        #37:#38        // getByteCount:()J\n+  #37 = Utf8               getByteCount\n+  #38 = Utf8               ()J\n+  #39 = Long               2147483647l\n+  #41 = Class              #42            // java/lang/ArithmeticException\n+  #42 = Utf8               java/lang/ArithmeticException\n+  #43 = Class              #44            // java/lang/StringBuilder\n+  #44 = Utf8               java/lang/StringBuilder\n+  #45 = String             #46            // The byte count\n+  #46 = Utf8               The byte count\n+  #47 = Methodref          #43.#48        // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #48 = NameAndType        #7:#49         // \"<init>\":(Ljava/lang/String;)V\n+  #49 = Utf8               (Ljava/lang/String;)V\n+  #50 = Methodref          #43.#51        // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+  #51 = NameAndType        #52:#53        // append:(J)Ljava/lang/StringBuilder;\n+  #52 = Utf8               append\n+  #53 = Utf8               (J)Ljava/lang/StringBuilder;\n+  #54 = String             #55            //  is too large to be converted to an int\n+  #55 = Utf8                is too large to be converted to an int\n+  #56 = Methodref          #43.#57        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #57 = NameAndType        #52:#58        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #58 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #59 = Methodref          #43.#60        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #60 = NameAndType        #61:#62        // toString:()Ljava/lang/String;\n+  #61 = Utf8               toString\n+  #62 = Utf8               ()Ljava/lang/String;\n+  #63 = Methodref          #41.#48        // java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+  #64 = Utf8               result\n+  #65 = Utf8               resetCount\n+  #66 = Methodref          #1.#67         // org/apache/commons/io/input/CountingInputStream.resetByteCount:()J\n+  #67 = NameAndType        #68:#38        // resetByteCount:()J\n+  #68 = Utf8               resetByteCount\n+  #69 = Utf8               tmp\n+  #70 = Utf8               SourceFile\n+  #71 = Utf8               CountingInputStream.java\n {\n   private long count;\n     descriptor: J\n     flags: (0x0002) ACC_PRIVATE\n \n   public org.apache.commons.io.input.CountingInputStream(java.io.InputStream);\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #3                  // Method org/apache/commons/io/input/ProxyInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+         2: invokespecial #10                 // Method org/apache/commons/io/input/ProxyInputStream.\"<init>\":(Ljava/io/InputStream;)V\n          5: return\n       LineNumberTable:\n         line 43: 0\n         line 44: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/input/CountingInputStream;\n             0       6     1    in   Ljava/io/InputStream;\n \n   public synchronized long skip(long) throws java.io.IOException;\n     descriptor: (J)J\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=5, args_size=2\n          0: aload_0\n          1: lload_1\n-         2: invokespecial #9                  // Method org/apache/commons/io/input/ProxyInputStream.skip:(J)J\n+         2: invokespecial #23                 // Method org/apache/commons/io/input/ProxyInputStream.skip:(J)J\n          5: lstore_3\n          6: aload_0\n          7: dup\n-         8: getfield      #13                 // Field count:J\n+         8: getfield      #25                 // Field count:J\n         11: lload_3\n         12: ladd\n-        13: putfield      #13                 // Field count:J\n+        13: putfield      #25                 // Field count:J\n         16: lload_3\n         17: lreturn\n       LineNumberTable:\n         line 58: 0\n         line 59: 6\n         line 60: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0  this   Lorg/apache/commons/io/input/CountingInputStream;\n             0      18     1 length   J\n             6      12     3  skip   J\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected synchronized void afterRead(int);\n     descriptor: (I)V\n     flags: (0x0024) ACC_PROTECTED, ACC_SYNCHRONIZED\n     Code:\n       stack=5, locals=2, args_size=2\n          0: iload_1\n          1: iconst_m1\n          2: if_icmpeq     16\n          5: aload_0\n          6: dup\n-         7: getfield      #13                 // Field count:J\n+         7: getfield      #25                 // Field count:J\n         10: iload_1\n         11: i2l\n         12: ladd\n-        13: putfield      #13                 // Field count:J\n+        13: putfield      #25                 // Field count:J\n         16: return\n       LineNumberTable:\n         line 71: 0\n         line 72: 5\n         line 74: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -164,119 +158,117 @@\n \n   public int getCount();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=1\n          0: aload_0\n-         1: invokevirtual #19                 // Method getByteCount:()J\n+         1: invokevirtual #35                 // Method getByteCount:()J\n          4: lstore_1\n          5: lload_1\n-         6: ldc2_w        #25                 // long 2147483647l\n+         6: ldc2_w        #39                 // long 2147483647l\n          9: lcmp\n-        10: ifle          45\n-        13: new           #27                 // class java/lang/ArithmeticException\n+        10: ifle          42\n+        13: new           #41                 // class java/lang/ArithmeticException\n         16: dup\n-        17: new           #29                 // class java/lang/StringBuilder\n+        17: new           #43                 // class java/lang/StringBuilder\n         20: dup\n-        21: invokespecial #31                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        24: ldc           #34                 // String The byte count\n-        26: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        29: lload_1\n-        30: invokevirtual #40                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-        33: ldc           #43                 // String  is too large to be converted to an int\n-        35: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        38: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        41: invokespecial #49                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n-        44: athrow\n-        45: lload_1\n-        46: l2i\n-        47: ireturn\n+        21: ldc           #45                 // String The byte count\n+        23: invokespecial #47                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        26: lload_1\n+        27: invokevirtual #50                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        30: ldc           #54                 // String  is too large to be converted to an int\n+        32: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        35: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        38: invokespecial #63                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        41: athrow\n+        42: lload_1\n+        43: l2i\n+        44: ireturn\n       LineNumberTable:\n         line 87: 0\n         line 88: 5\n         line 89: 13\n-        line 91: 45\n+        line 91: 42\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      48     0  this   Lorg/apache/commons/io/input/CountingInputStream;\n-            5      43     1 result   J\n+            0      45     0  this   Lorg/apache/commons/io/input/CountingInputStream;\n+            5      40     1 result   J\n       StackMapTable: number_of_entries = 1\n         frame_type = 252 /* append */\n-          offset_delta = 45\n+          offset_delta = 42\n           locals = [ long ]\n \n   public int resetCount();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=1\n          0: aload_0\n-         1: invokevirtual #52                 // Method resetByteCount:()J\n+         1: invokevirtual #66                 // Method resetByteCount:()J\n          4: lstore_1\n          5: lload_1\n-         6: ldc2_w        #25                 // long 2147483647l\n+         6: ldc2_w        #39                 // long 2147483647l\n          9: lcmp\n-        10: ifle          45\n-        13: new           #27                 // class java/lang/ArithmeticException\n+        10: ifle          42\n+        13: new           #41                 // class java/lang/ArithmeticException\n         16: dup\n-        17: new           #29                 // class java/lang/StringBuilder\n+        17: new           #43                 // class java/lang/StringBuilder\n         20: dup\n-        21: invokespecial #31                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        24: ldc           #34                 // String The byte count\n-        26: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        29: lload_1\n-        30: invokevirtual #40                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-        33: ldc           #43                 // String  is too large to be converted to an int\n-        35: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        38: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        41: invokespecial #49                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n-        44: athrow\n-        45: lload_1\n-        46: l2i\n-        47: ireturn\n+        21: ldc           #45                 // String The byte count\n+        23: invokespecial #47                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        26: lload_1\n+        27: invokevirtual #50                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        30: ldc           #54                 // String  is too large to be converted to an int\n+        32: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        35: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        38: invokespecial #63                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        41: athrow\n+        42: lload_1\n+        43: l2i\n+        44: ireturn\n       LineNumberTable:\n         line 105: 0\n         line 106: 5\n         line 107: 13\n-        line 109: 45\n+        line 109: 42\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      48     0  this   Lorg/apache/commons/io/input/CountingInputStream;\n-            5      43     1 result   J\n+            0      45     0  this   Lorg/apache/commons/io/input/CountingInputStream;\n+            5      40     1 result   J\n       StackMapTable: number_of_entries = 1\n         frame_type = 252 /* append */\n-          offset_delta = 45\n+          offset_delta = 42\n           locals = [ long ]\n \n   public synchronized long getByteCount();\n     descriptor: ()J\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #13                 // Field count:J\n+         1: getfield      #25                 // Field count:J\n          4: lreturn\n       LineNumberTable:\n         line 123: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/input/CountingInputStream;\n \n   public synchronized long resetByteCount();\n     descriptor: ()J\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=3, locals=3, args_size=1\n          0: aload_0\n-         1: getfield      #13                 // Field count:J\n+         1: getfield      #25                 // Field count:J\n          4: lstore_1\n          5: aload_0\n          6: lconst_0\n-         7: putfield      #13                 // Field count:J\n+         7: putfield      #25                 // Field count:J\n         10: lload_1\n         11: lreturn\n       LineNumberTable:\n         line 137: 0\n         line 138: 5\n         line 139: 10\n       LocalVariableTable:\n"}]}
