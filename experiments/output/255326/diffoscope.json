{"diffoscope-json-version": 1, "source1": "first/TempFileCachingStreamBridge.class", "source2": "second/TempFileCachingStreamBridge.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,8 +1,8 @@\n-  SHA-256 checksum 073216300fcb7ddbdc19f767b46e086989506bb6a02bb132483ed301327ed7cf\n+  SHA-256 checksum e6c3efd68ffb59a33c1bbb28f01a73cb91072317b6a5843dcfa1e6f7374dc9fa\n   Compiled from \"TempFileCachingStreamBridge.java\"\n class org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge extends org.apache.commons.compress.compressors.pack200.StreamBridge\n   minor version: 0\n   major version: 53\n   flags: (0x0020) ACC_SUPER\n   this_class: #2                          // org/apache/commons/compress/compressors/pack200/TempFileCachingStreamBridge\n   super_class: #8                         // org/apache/commons/compress/compressors/pack200/StreamBridge\n@@ -61,28 +61,24 @@\n   #51 = Utf8               newInputStream\n   #52 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n   #53 = Methodref          #47.#54        // org/apache/commons/compress/compressors/pack200/TempFileCachingStreamBridge$1.\"<init>\":(Lorg/apache/commons/compress/compressors/pack200/TempFileCachingStreamBridge;Ljava/io/InputStream;)V\n   #54 = NameAndType        #11:#55        // \"<init>\":(Lorg/apache/commons/compress/compressors/pack200/TempFileCachingStreamBridge;Ljava/io/InputStream;)V\n   #55 = Utf8               (Lorg/apache/commons/compress/compressors/pack200/TempFileCachingStreamBridge;Ljava/io/InputStream;)V\n   #56 = Utf8               Code\n   #57 = Utf8               LineNumberTable\n-  #58 = Utf8               LocalVariableTable\n-  #59 = Utf8               this\n-  #60 = Utf8               Lorg/apache/commons/compress/compressors/pack200/TempFileCachingStreamBridge;\n-  #61 = Utf8               Exceptions\n-  #62 = Class              #63            // java/io/IOException\n-  #63 = Utf8               java/io/IOException\n-  #64 = Utf8               getInputView\n-  #65 = Utf8               ()Ljava/io/InputStream;\n-  #66 = Utf8               access$000\n-  #67 = Utf8               (Lorg/apache/commons/compress/compressors/pack200/TempFileCachingStreamBridge;)Ljava/io/File;\n-  #68 = Utf8               x0\n-  #69 = Utf8               SourceFile\n-  #70 = Utf8               TempFileCachingStreamBridge.java\n-  #71 = Utf8               InnerClasses\n+  #58 = Utf8               Exceptions\n+  #59 = Class              #60            // java/io/IOException\n+  #60 = Utf8               java/io/IOException\n+  #61 = Utf8               getInputView\n+  #62 = Utf8               ()Ljava/io/InputStream;\n+  #63 = Utf8               access$000\n+  #64 = Utf8               (Lorg/apache/commons/compress/compressors/pack200/TempFileCachingStreamBridge;)Ljava/io/File;\n+  #65 = Utf8               SourceFile\n+  #66 = Utf8               TempFileCachingStreamBridge.java\n+  #67 = Utf8               InnerClasses\n {\n   private final java.io.File f;\n     descriptor: Ljava/io/File;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge() throws java.io.IOException;\n     descriptor: ()V\n@@ -110,17 +106,14 @@\n         40: return\n       LineNumberTable:\n         line 36: 0\n         line 37: 4\n         line 38: 15\n         line 39: 22\n         line 40: 40\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0      41     0  this   Lorg/apache/commons/compress/compressors/pack200/TempFileCachingStreamBridge;\n     Exceptions:\n       throws java.io.IOException\n \n   java.io.InputStream getInputView() throws java.io.IOException;\n     descriptor: ()Ljava/io/InputStream;\n     flags: (0x0000)\n     Code:\n@@ -138,30 +131,24 @@\n         20: anewarray     #30                 // class java/nio/file/OpenOption\n         23: invokestatic  #49                 // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n         26: invokespecial #53                 // Method org/apache/commons/compress/compressors/pack200/TempFileCachingStreamBridge$1.\"<init>\":(Lorg/apache/commons/compress/compressors/pack200/TempFileCachingStreamBridge;Ljava/io/InputStream;)V\n         29: areturn\n       LineNumberTable:\n         line 44: 0\n         line 45: 7\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0      30     0  this   Lorg/apache/commons/compress/compressors/pack200/TempFileCachingStreamBridge;\n     Exceptions:\n       throws java.io.IOException\n \n   static java.io.File access$000(org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge);\n     descriptor: (Lorg/apache/commons/compress/compressors/pack200/TempFileCachingStreamBridge;)Ljava/io/File;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #1                  // Field f:Ljava/io/File;\n          4: areturn\n       LineNumberTable:\n         line 33: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/compressors/pack200/TempFileCachingStreamBridge;\n }\n SourceFile: \"TempFileCachingStreamBridge.java\"\n InnerClasses:\n   #47;                                    // class org/apache/commons/compress/compressors/pack200/TempFileCachingStreamBridge$1\n"}]}
