{"diffoscope-json-version": 1, "source1": "first/CharSequenceReader.class", "source2": "second/CharSequenceReader.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,183 +1,181 @@\n-  SHA-256 checksum e91f0d02a2516afbbeb8dbe966d7605a14efc5ddaaa3fdcbb04e692e5a9f032b\n+  SHA-256 checksum f66ed368344d6517a3cefb51f616e55c0a6721c2d5fe8ff5b07b8ca35e9fac4b\n   Compiled from \"CharSequenceReader.java\"\n public class org.apache.commons.io.input.CharSequenceReader extends java.io.Reader implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #4                          // org/apache/commons/io/input/CharSequenceReader\n-  super_class: #16                        // java/io/Reader\n+  this_class: #1                          // org/apache/commons/io/input/CharSequenceReader\n+  super_class: #3                         // java/io/Reader\n   interfaces: 1, fields: 6, methods: 14, attributes: 1\n Constant pool:\n-    #1 = Class              #2            // org/apache/commons/io/IOUtils\n-    #2 = Utf8               org/apache/commons/io/IOUtils\n-    #3 = Methodref          #4.#5         // org/apache/commons/io/input/CharSequenceReader.\"<init>\":(Ljava/lang/CharSequence;I)V\n-    #4 = Class              #6            // org/apache/commons/io/input/CharSequenceReader\n-    #5 = NameAndType        #7:#8         // \"<init>\":(Ljava/lang/CharSequence;I)V\n-    #6 = Utf8               org/apache/commons/io/input/CharSequenceReader\n-    #7 = Utf8               <init>\n-    #8 = Utf8               (Ljava/lang/CharSequence;I)V\n-    #9 = Class              #10           // java/lang/Integer\n-   #10 = Utf8               java/lang/Integer\n-   #11 = Integer            2147483647\n-   #12 = Methodref          #4.#13        // org/apache/commons/io/input/CharSequenceReader.\"<init>\":(Ljava/lang/CharSequence;II)V\n-   #13 = NameAndType        #7:#14        // \"<init>\":(Ljava/lang/CharSequence;II)V\n-   #14 = Utf8               (Ljava/lang/CharSequence;II)V\n-   #15 = Methodref          #16.#17       // java/io/Reader.\"<init>\":()V\n-   #16 = Class              #18           // java/io/Reader\n-   #17 = NameAndType        #7:#19        // \"<init>\":()V\n-   #18 = Utf8               java/io/Reader\n-   #19 = Utf8               ()V\n-   #20 = Class              #21           // java/lang/IllegalArgumentException\n-   #21 = Utf8               java/lang/IllegalArgumentException\n-   #22 = Class              #23           // java/lang/StringBuilder\n-   #23 = Utf8               java/lang/StringBuilder\n-   #24 = Methodref          #22.#17       // java/lang/StringBuilder.\"<init>\":()V\n-   #25 = String             #26           // Start index is less than zero:\n-   #26 = Utf8               Start index is less than zero:\n-   #27 = Methodref          #22.#28       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #28 = NameAndType        #29:#30       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #29 = Utf8               append\n-   #30 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #31 = Methodref          #22.#32       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #32 = NameAndType        #29:#33       // append:(I)Ljava/lang/StringBuilder;\n-   #33 = Utf8               (I)Ljava/lang/StringBuilder;\n-   #34 = Methodref          #22.#35       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #35 = NameAndType        #36:#37       // toString:()Ljava/lang/String;\n-   #36 = Utf8               toString\n-   #37 = Utf8               ()Ljava/lang/String;\n-   #38 = Methodref          #20.#39       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #39 = NameAndType        #7:#40        // \"<init>\":(Ljava/lang/String;)V\n-   #40 = Utf8               (Ljava/lang/String;)V\n-   #41 = String             #42           // End index is less than start\n-   #42 = Utf8               End index is less than start\n-   #43 = String             #44           // :\n-   #44 = Utf8               :\n-   #45 = String             #46           //\n-   #46 = Utf8\n-   #47 = Fieldref           #4.#48        // org/apache/commons/io/input/CharSequenceReader.charSequence:Ljava/lang/CharSequence;\n-   #48 = NameAndType        #49:#50       // charSequence:Ljava/lang/CharSequence;\n-   #49 = Utf8               charSequence\n-   #50 = Utf8               Ljava/lang/CharSequence;\n-   #51 = Fieldref           #4.#52        // org/apache/commons/io/input/CharSequenceReader.start:I\n-   #52 = NameAndType        #53:#54       // start:I\n-   #53 = Utf8               start\n-   #54 = Utf8               I\n-   #55 = Methodref          #9.#56        // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #56 = NameAndType        #57:#58       // valueOf:(I)Ljava/lang/Integer;\n-   #57 = Utf8               valueOf\n-   #58 = Utf8               (I)Ljava/lang/Integer;\n-   #59 = Fieldref           #4.#60        // org/apache/commons/io/input/CharSequenceReader.end:Ljava/lang/Integer;\n-   #60 = NameAndType        #61:#62       // end:Ljava/lang/Integer;\n-   #61 = Utf8               end\n-   #62 = Utf8               Ljava/lang/Integer;\n-   #63 = Fieldref           #4.#64        // org/apache/commons/io/input/CharSequenceReader.idx:I\n-   #64 = NameAndType        #65:#54       // idx:I\n-   #65 = Utf8               idx\n-   #66 = Fieldref           #4.#67        // org/apache/commons/io/input/CharSequenceReader.mark:I\n-   #67 = NameAndType        #68:#54       // mark:I\n-   #68 = Utf8               mark\n-   #69 = InterfaceMethodref #70.#71       // java/lang/CharSequence.length:()I\n-   #70 = Class              #72           // java/lang/CharSequence\n-   #71 = NameAndType        #73:#74       // length:()I\n-   #72 = Utf8               java/lang/CharSequence\n-   #73 = Utf8               length\n-   #74 = Utf8               ()I\n-   #75 = Methodref          #76.#77       // java/lang/Math.min:(II)I\n-   #76 = Class              #78           // java/lang/Math\n-   #77 = NameAndType        #79:#80       // min:(II)I\n-   #78 = Utf8               java/lang/Math\n-   #79 = Utf8               min\n-   #80 = Utf8               (II)I\n-   #81 = Methodref          #9.#82        // java/lang/Integer.intValue:()I\n-   #82 = NameAndType        #83:#74       // intValue:()I\n-   #83 = Utf8               intValue\n-   #84 = Methodref          #4.#85        // org/apache/commons/io/input/CharSequenceReader.end:()I\n-   #85 = NameAndType        #61:#74       // end:()I\n-   #86 = InterfaceMethodref #70.#87       // java/lang/CharSequence.charAt:(I)C\n-   #87 = NameAndType        #88:#89       // charAt:(I)C\n-   #88 = Utf8               charAt\n-   #89 = Utf8               (I)C\n-   #90 = String             #91           // array\n-   #91 = Utf8               array\n-   #92 = Methodref          #93.#94       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #93 = Class              #95           // java/util/Objects\n-   #94 = NameAndType        #96:#97       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #95 = Utf8               java/util/Objects\n-   #96 = Utf8               requireNonNull\n-   #97 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #98 = Class              #99           // java/lang/IndexOutOfBoundsException\n-   #99 = Utf8               java/lang/IndexOutOfBoundsException\n-  #100 = String             #101          // Array Size=\n-  #101 = Utf8               Array Size=\n-  #102 = String             #103          // , offset=\n-  #103 = Utf8               , offset=\n-  #104 = String             #105          // , length=\n-  #105 = Utf8               , length=\n-  #106 = Methodref          #98.#39       // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n-  #107 = Class              #108          // java/lang/String\n-  #108 = Utf8               java/lang/String\n-  #109 = Methodref          #107.#110     // java/lang/String.getChars:(II[CI)V\n-  #110 = NameAndType        #111:#112     // getChars:(II[CI)V\n-  #111 = Utf8               getChars\n-  #112 = Utf8               (II[CI)V\n-  #113 = Methodref          #22.#110      // java/lang/StringBuilder.getChars:(II[CI)V\n-  #114 = Class              #115          // java/lang/StringBuffer\n-  #115 = Utf8               java/lang/StringBuffer\n-  #116 = Methodref          #114.#110     // java/lang/StringBuffer.getChars:(II[CI)V\n-  #117 = Methodref          #4.#118       // org/apache/commons/io/input/CharSequenceReader.read:()I\n-  #118 = NameAndType        #119:#74      // read:()I\n-  #119 = Utf8               read\n-  #120 = String             #121          // Number of characters to skip is less than zero:\n-  #121 = Utf8               Number of characters to skip is less than zero:\n-  #122 = Methodref          #22.#123      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-  #123 = NameAndType        #29:#124      // append:(J)Ljava/lang/StringBuilder;\n-  #124 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #125 = Methodref          #76.#126      // java/lang/Math.min:(JJ)J\n-  #126 = NameAndType        #79:#127      // min:(JJ)J\n-  #127 = Utf8               (JJ)J\n-  #128 = Methodref          #4.#129       // org/apache/commons/io/input/CharSequenceReader.start:()I\n-  #129 = NameAndType        #53:#74       // start:()I\n-  #130 = InterfaceMethodref #70.#131      // java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;\n-  #131 = NameAndType        #132:#133     // subSequence:(II)Ljava/lang/CharSequence;\n-  #132 = Utf8               subSequence\n-  #133 = Utf8               (II)Ljava/lang/CharSequence;\n-  #134 = InterfaceMethodref #70.#35       // java/lang/CharSequence.toString:()Ljava/lang/String;\n-  #135 = Class              #136          // java/io/Serializable\n-  #136 = Utf8               java/io/Serializable\n-  #137 = Utf8               serialVersionUID\n-  #138 = Utf8               J\n-  #139 = Utf8               ConstantValue\n-  #140 = Long               3724187752191401220l\n-  #142 = Utf8               (Ljava/lang/CharSequence;)V\n-  #143 = Utf8               Code\n-  #144 = Utf8               LineNumberTable\n-  #145 = Utf8               LocalVariableTable\n-  #146 = Utf8               this\n-  #147 = Utf8               Lorg/apache/commons/io/input/CharSequenceReader;\n-  #148 = Utf8               StackMapTable\n-  #149 = Utf8               close\n-  #150 = Utf8               ready\n-  #151 = Utf8               ()Z\n-  #152 = Utf8               (I)V\n-  #153 = Utf8               readAheadLimit\n-  #154 = Utf8               markSupported\n-  #155 = Utf8               ([CII)I\n-  #156 = Utf8               count\n-  #157 = Utf8               c\n-  #158 = Utf8               i\n-  #159 = Utf8               [C\n-  #160 = Utf8               offset\n-  #161 = Utf8               reset\n-  #162 = Utf8               skip\n-  #163 = Utf8               (J)J\n-  #164 = Utf8               n\n-  #165 = Utf8               dest\n-  #166 = Utf8               SourceFile\n-  #167 = Utf8               CharSequenceReader.java\n+    #1 = Class              #2            // org/apache/commons/io/input/CharSequenceReader\n+    #2 = Utf8               org/apache/commons/io/input/CharSequenceReader\n+    #3 = Class              #4            // java/io/Reader\n+    #4 = Utf8               java/io/Reader\n+    #5 = Class              #6            // java/io/Serializable\n+    #6 = Utf8               java/io/Serializable\n+    #7 = Utf8               serialVersionUID\n+    #8 = Utf8               J\n+    #9 = Utf8               ConstantValue\n+   #10 = Long               3724187752191401220l\n+   #12 = Utf8               charSequence\n+   #13 = Utf8               Ljava/lang/CharSequence;\n+   #14 = Utf8               idx\n+   #15 = Utf8               I\n+   #16 = Utf8               mark\n+   #17 = Utf8               start\n+   #18 = Utf8               end\n+   #19 = Utf8               Ljava/lang/Integer;\n+   #20 = Utf8               <init>\n+   #21 = Utf8               (Ljava/lang/CharSequence;)V\n+   #22 = Utf8               Code\n+   #23 = Methodref          #1.#24        // org/apache/commons/io/input/CharSequenceReader.\"<init>\":(Ljava/lang/CharSequence;I)V\n+   #24 = NameAndType        #20:#25       // \"<init>\":(Ljava/lang/CharSequence;I)V\n+   #25 = Utf8               (Ljava/lang/CharSequence;I)V\n+   #26 = Utf8               LineNumberTable\n+   #27 = Utf8               LocalVariableTable\n+   #28 = Utf8               this\n+   #29 = Utf8               Lorg/apache/commons/io/input/CharSequenceReader;\n+   #30 = Integer            2147483647\n+   #31 = Methodref          #1.#32        // org/apache/commons/io/input/CharSequenceReader.\"<init>\":(Ljava/lang/CharSequence;II)V\n+   #32 = NameAndType        #20:#33       // \"<init>\":(Ljava/lang/CharSequence;II)V\n+   #33 = Utf8               (Ljava/lang/CharSequence;II)V\n+   #34 = Methodref          #3.#35        // java/io/Reader.\"<init>\":()V\n+   #35 = NameAndType        #20:#36       // \"<init>\":()V\n+   #36 = Utf8               ()V\n+   #37 = Class              #38           // java/lang/IllegalArgumentException\n+   #38 = Utf8               java/lang/IllegalArgumentException\n+   #39 = Class              #40           // java/lang/StringBuilder\n+   #40 = Utf8               java/lang/StringBuilder\n+   #41 = String             #42           // Start index is less than zero:\n+   #42 = Utf8               Start index is less than zero:\n+   #43 = Methodref          #39.#44       // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+   #44 = NameAndType        #20:#45       // \"<init>\":(Ljava/lang/String;)V\n+   #45 = Utf8               (Ljava/lang/String;)V\n+   #46 = Methodref          #39.#47       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #47 = NameAndType        #48:#49       // append:(I)Ljava/lang/StringBuilder;\n+   #48 = Utf8               append\n+   #49 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #50 = Methodref          #39.#51       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #51 = NameAndType        #52:#53       // toString:()Ljava/lang/String;\n+   #52 = Utf8               toString\n+   #53 = Utf8               ()Ljava/lang/String;\n+   #54 = Methodref          #37.#44       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #55 = String             #56           // End index is less than start\n+   #56 = Utf8               End index is less than start\n+   #57 = String             #58           // :\n+   #58 = Utf8               :\n+   #59 = Methodref          #39.#60       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #60 = NameAndType        #48:#61       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #61 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #62 = String             #63           //\n+   #63 = Utf8\n+   #64 = Fieldref           #1.#65        // org/apache/commons/io/input/CharSequenceReader.charSequence:Ljava/lang/CharSequence;\n+   #65 = NameAndType        #12:#13       // charSequence:Ljava/lang/CharSequence;\n+   #66 = Fieldref           #1.#67        // org/apache/commons/io/input/CharSequenceReader.start:I\n+   #67 = NameAndType        #17:#15       // start:I\n+   #68 = Methodref          #69.#71       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+   #69 = Class              #70           // java/lang/Integer\n+   #70 = Utf8               java/lang/Integer\n+   #71 = NameAndType        #72:#73       // valueOf:(I)Ljava/lang/Integer;\n+   #72 = Utf8               valueOf\n+   #73 = Utf8               (I)Ljava/lang/Integer;\n+   #74 = Fieldref           #1.#75        // org/apache/commons/io/input/CharSequenceReader.end:Ljava/lang/Integer;\n+   #75 = NameAndType        #18:#19       // end:Ljava/lang/Integer;\n+   #76 = Fieldref           #1.#77        // org/apache/commons/io/input/CharSequenceReader.idx:I\n+   #77 = NameAndType        #14:#15       // idx:I\n+   #78 = Fieldref           #1.#79        // org/apache/commons/io/input/CharSequenceReader.mark:I\n+   #79 = NameAndType        #16:#15       // mark:I\n+   #80 = Utf8               StackMapTable\n+   #81 = Class              #82           // java/lang/CharSequence\n+   #82 = Utf8               java/lang/CharSequence\n+   #83 = Utf8               ()I\n+   #84 = InterfaceMethodref #81.#85       // java/lang/CharSequence.length:()I\n+   #85 = NameAndType        #86:#83       // length:()I\n+   #86 = Utf8               length\n+   #87 = Methodref          #88.#90       // java/lang/Math.min:(II)I\n+   #88 = Class              #89           // java/lang/Math\n+   #89 = Utf8               java/lang/Math\n+   #90 = NameAndType        #91:#92       // min:(II)I\n+   #91 = Utf8               min\n+   #92 = Utf8               (II)I\n+   #93 = Methodref          #69.#94       // java/lang/Integer.intValue:()I\n+   #94 = NameAndType        #95:#83       // intValue:()I\n+   #95 = Utf8               intValue\n+   #96 = Utf8               close\n+   #97 = Utf8               ready\n+   #98 = Utf8               ()Z\n+   #99 = Methodref          #1.#100       // org/apache/commons/io/input/CharSequenceReader.end:()I\n+  #100 = NameAndType        #18:#83       // end:()I\n+  #101 = Utf8               (I)V\n+  #102 = Utf8               readAheadLimit\n+  #103 = Utf8               markSupported\n+  #104 = Utf8               read\n+  #105 = InterfaceMethodref #81.#106      // java/lang/CharSequence.charAt:(I)C\n+  #106 = NameAndType        #107:#108     // charAt:(I)C\n+  #107 = Utf8               charAt\n+  #108 = Utf8               (I)C\n+  #109 = Utf8               ([CII)I\n+  #110 = String             #111          // array\n+  #111 = Utf8               array\n+  #112 = Methodref          #113.#115     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #113 = Class              #114          // java/util/Objects\n+  #114 = Utf8               java/util/Objects\n+  #115 = NameAndType        #116:#117     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #116 = Utf8               requireNonNull\n+  #117 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #118 = Class              #119          // java/lang/IndexOutOfBoundsException\n+  #119 = Utf8               java/lang/IndexOutOfBoundsException\n+  #120 = String             #121          // Array Size=\n+  #121 = Utf8               Array Size=\n+  #122 = String             #123          // , offset=\n+  #123 = Utf8               , offset=\n+  #124 = String             #125          // , length=\n+  #125 = Utf8               , length=\n+  #126 = Methodref          #118.#44      // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+  #127 = Class              #128          // java/lang/String\n+  #128 = Utf8               java/lang/String\n+  #129 = Methodref          #127.#130     // java/lang/String.getChars:(II[CI)V\n+  #130 = NameAndType        #131:#132     // getChars:(II[CI)V\n+  #131 = Utf8               getChars\n+  #132 = Utf8               (II[CI)V\n+  #133 = Methodref          #39.#130      // java/lang/StringBuilder.getChars:(II[CI)V\n+  #134 = Class              #135          // java/lang/StringBuffer\n+  #135 = Utf8               java/lang/StringBuffer\n+  #136 = Methodref          #134.#130     // java/lang/StringBuffer.getChars:(II[CI)V\n+  #137 = Methodref          #1.#138       // org/apache/commons/io/input/CharSequenceReader.read:()I\n+  #138 = NameAndType        #104:#83      // read:()I\n+  #139 = Utf8               [C\n+  #140 = Utf8               offset\n+  #141 = Utf8               count\n+  #142 = Utf8               i\n+  #143 = Utf8               c\n+  #144 = Utf8               reset\n+  #145 = Utf8               skip\n+  #146 = Utf8               (J)J\n+  #147 = String             #148          // Number of characters to skip is less than zero:\n+  #148 = Utf8               Number of characters to skip is less than zero:\n+  #149 = Methodref          #39.#150      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+  #150 = NameAndType        #48:#151      // append:(J)Ljava/lang/StringBuilder;\n+  #151 = Utf8               (J)Ljava/lang/StringBuilder;\n+  #152 = Methodref          #88.#153      // java/lang/Math.min:(JJ)J\n+  #153 = NameAndType        #91:#154      // min:(JJ)J\n+  #154 = Utf8               (JJ)J\n+  #155 = Utf8               n\n+  #156 = Utf8               dest\n+  #157 = Methodref          #1.#158       // org/apache/commons/io/input/CharSequenceReader.start:()I\n+  #158 = NameAndType        #17:#83       // start:()I\n+  #159 = InterfaceMethodref #81.#160      // java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;\n+  #160 = NameAndType        #161:#162     // subSequence:(II)Ljava/lang/CharSequence;\n+  #161 = Utf8               subSequence\n+  #162 = Utf8               (II)Ljava/lang/CharSequence;\n+  #163 = InterfaceMethodref #81.#51       // java/lang/CharSequence.toString:()Ljava/lang/String;\n+  #164 = Utf8               SourceFile\n+  #165 = Utf8               CharSequenceReader.java\n {\n   private static final long serialVersionUID = 3724187752191401220l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 3724187752191401220l\n \n   private final java.lang.CharSequence charSequence;\n@@ -204,15 +202,15 @@\n     descriptor: (Ljava/lang/CharSequence;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n-         3: invokespecial #3                  // Method \"<init>\":(Ljava/lang/CharSequence;I)V\n+         3: invokespecial #23                 // Method \"<init>\":(Ljava/lang/CharSequence;I)V\n          6: return\n       LineNumberTable:\n         line 77: 0\n         line 78: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/io/input/CharSequenceReader;\n@@ -222,153 +220,155 @@\n     descriptor: (Ljava/lang/CharSequence;I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: iload_2\n-         3: ldc           #11                 // int 2147483647\n-         5: invokespecial #12                 // Method \"<init>\":(Ljava/lang/CharSequence;II)V\n+         3: ldc           #30                 // int 2147483647\n+         5: invokespecial #31                 // Method \"<init>\":(Ljava/lang/CharSequence;II)V\n          8: return\n       LineNumberTable:\n         line 96: 0\n         line 97: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/CharSequenceReader;\n             0       9     1 charSequence   Ljava/lang/CharSequence;\n             0       9     2 start   I\n \n   public org.apache.commons.io.input.CharSequenceReader(java.lang.CharSequence, int, int);\n     descriptor: (Ljava/lang/CharSequence;II)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=4, locals=4, args_size=4\n+      stack=5, locals=4, args_size=4\n          0: aload_0\n-         1: invokespecial #15                 // Method java/io/Reader.\"<init>\":()V\n+         1: invokespecial #34                 // Method java/io/Reader.\"<init>\":()V\n          4: iload_2\n-         5: ifge          35\n-         8: new           #20                 // class java/lang/IllegalArgumentException\n+         5: ifge          32\n+         8: new           #37                 // class java/lang/IllegalArgumentException\n         11: dup\n-        12: new           #22                 // class java/lang/StringBuilder\n+        12: new           #39                 // class java/lang/StringBuilder\n         15: dup\n-        16: invokespecial #24                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        19: ldc           #25                 // String Start index is less than zero:\n-        21: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        24: iload_2\n-        25: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        28: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        31: invokespecial #38                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        34: athrow\n-        35: iload_3\n-        36: iload_2\n-        37: if_icmpge     76\n-        40: new           #20                 // class java/lang/IllegalArgumentException\n-        43: dup\n-        44: new           #22                 // class java/lang/StringBuilder\n-        47: dup\n-        48: invokespecial #24                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        51: ldc           #41                 // String End index is less than start\n-        53: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        56: iload_2\n-        57: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        60: ldc           #43                 // String :\n-        62: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        65: iload_3\n-        66: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        69: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        72: invokespecial #38                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        75: athrow\n-        76: aload_0\n-        77: aload_1\n-        78: ifnull        85\n-        81: aload_1\n-        82: goto          87\n-        85: ldc           #45                 // String\n-        87: putfield      #47                 // Field charSequence:Ljava/lang/CharSequence;\n-        90: aload_0\n-        91: iload_2\n-        92: putfield      #51                 // Field start:I\n-        95: aload_0\n-        96: iload_3\n-        97: invokestatic  #55                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-       100: putfield      #59                 // Field end:Ljava/lang/Integer;\n-       103: aload_0\n-       104: iload_2\n-       105: putfield      #63                 // Field idx:I\n-       108: aload_0\n-       109: iload_2\n-       110: putfield      #66                 // Field mark:I\n-       113: return\n+        16: ldc           #41                 // String Start index is less than zero:\n+        18: invokespecial #43                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        21: iload_2\n+        22: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        25: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        28: invokespecial #54                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        31: athrow\n+        32: iload_3\n+        33: iload_2\n+        34: if_icmpge     70\n+        37: new           #37                 // class java/lang/IllegalArgumentException\n+        40: dup\n+        41: new           #39                 // class java/lang/StringBuilder\n+        44: dup\n+        45: ldc           #55                 // String End index is less than start\n+        47: invokespecial #43                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        50: iload_2\n+        51: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        54: ldc           #57                 // String :\n+        56: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        59: iload_3\n+        60: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        63: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        66: invokespecial #54                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        69: athrow\n+        70: aload_0\n+        71: aload_1\n+        72: ifnull        79\n+        75: aload_1\n+        76: goto          81\n+        79: ldc           #62                 // String\n+        81: putfield      #64                 // Field charSequence:Ljava/lang/CharSequence;\n+        84: aload_0\n+        85: iload_2\n+        86: putfield      #66                 // Field start:I\n+        89: aload_0\n+        90: iload_3\n+        91: invokestatic  #68                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        94: putfield      #74                 // Field end:Ljava/lang/Integer;\n+        97: aload_0\n+        98: iload_2\n+        99: putfield      #76                 // Field idx:I\n+       102: aload_0\n+       103: iload_2\n+       104: putfield      #78                 // Field mark:I\n+       107: return\n       LineNumberTable:\n         line 117: 0\n         line 118: 4\n         line 119: 8\n-        line 122: 35\n-        line 123: 40\n-        line 129: 76\n-        line 130: 90\n-        line 131: 95\n-        line 133: 103\n-        line 134: 108\n-        line 135: 113\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0     114     0  this   Lorg/apache/commons/io/input/CharSequenceReader;\n-            0     114     1 charSequence   Ljava/lang/CharSequence;\n-            0     114     2 start   I\n-            0     114     3   end   I\n+        line 120: 12\n+        line 119: 28\n+        line 122: 32\n+        line 123: 37\n+        line 124: 41\n+        line 123: 66\n+        line 129: 70\n+        line 130: 84\n+        line 131: 89\n+        line 133: 97\n+        line 134: 102\n+        line 135: 107\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+            0     108     0  this   Lorg/apache/commons/io/input/CharSequenceReader;\n+            0     108     1 charSequence   Ljava/lang/CharSequence;\n+            0     108     2 start   I\n+            0     108     3   end   I\n       StackMapTable: number_of_entries = 4\n         frame_type = 255 /* full_frame */\n-          offset_delta = 35\n+          offset_delta = 32\n           locals = [ class org/apache/commons/io/input/CharSequenceReader, class java/lang/CharSequence, int, int ]\n           stack = []\n-        frame_type = 40 /* same */\n+        frame_type = 37 /* same */\n         frame_type = 72 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/io/input/CharSequenceReader ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 1\n           locals = [ class org/apache/commons/io/input/CharSequenceReader, class java/lang/CharSequence, int, int ]\n           stack = [ class org/apache/commons/io/input/CharSequenceReader, class java/lang/CharSequence ]\n \n   private int start();\n     descriptor: ()I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #47                 // Field charSequence:Ljava/lang/CharSequence;\n-         4: invokeinterface #69,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n+         1: getfield      #64                 // Field charSequence:Ljava/lang/CharSequence;\n+         4: invokeinterface #84,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n          9: aload_0\n-        10: getfield      #51                 // Field start:I\n-        13: invokestatic  #75                 // Method java/lang/Math.min:(II)I\n+        10: getfield      #66                 // Field start:I\n+        13: invokestatic  #87                 // Method java/lang/Math.min:(II)I\n         16: ireturn\n       LineNumberTable:\n         line 143: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lorg/apache/commons/io/input/CharSequenceReader;\n \n   private int end();\n     descriptor: ()I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #47                 // Field charSequence:Ljava/lang/CharSequence;\n-         4: invokeinterface #69,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n+         1: getfield      #64                 // Field charSequence:Ljava/lang/CharSequence;\n+         4: invokeinterface #84,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n          9: aload_0\n-        10: getfield      #59                 // Field end:Ljava/lang/Integer;\n+        10: getfield      #74                 // Field end:Ljava/lang/Integer;\n         13: ifnonnull     21\n-        16: ldc           #11                 // int 2147483647\n+        16: ldc           #30                 // int 2147483647\n         18: goto          28\n         21: aload_0\n-        22: getfield      #59                 // Field end:Ljava/lang/Integer;\n-        25: invokevirtual #81                 // Method java/lang/Integer.intValue:()I\n-        28: invokestatic  #75                 // Method java/lang/Math.min:(II)I\n+        22: getfield      #74                 // Field end:Ljava/lang/Integer;\n+        25: invokevirtual #93                 // Method java/lang/Integer.intValue:()I\n+        28: invokestatic  #87                 // Method java/lang/Math.min:(II)I\n         31: ireturn\n       LineNumberTable:\n         line 156: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      32     0  this   Lorg/apache/commons/io/input/CharSequenceReader;\n       StackMapTable: number_of_entries = 2\n@@ -382,20 +382,20 @@\n   public void close();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: getfield      #51                 // Field start:I\n-         5: putfield      #63                 // Field idx:I\n+         2: getfield      #66                 // Field start:I\n+         5: putfield      #76                 // Field idx:I\n          8: aload_0\n          9: aload_0\n-        10: getfield      #51                 // Field start:I\n-        13: putfield      #66                 // Field mark:I\n+        10: getfield      #66                 // Field start:I\n+        13: putfield      #78                 // Field mark:I\n         16: return\n       LineNumberTable:\n         line 164: 0\n         line 165: 8\n         line 166: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -403,41 +403,39 @@\n \n   public boolean ready();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #63                 // Field idx:I\n+         1: getfield      #76                 // Field idx:I\n          4: aload_0\n-         5: invokespecial #84                 // Method end:()I\n-         8: if_icmpge     15\n+         5: invokespecial #99                 // Method end:()I\n+         8: if_icmpge     13\n         11: iconst_1\n-        12: goto          16\n-        15: iconst_0\n-        16: ireturn\n+        12: ireturn\n+        13: iconst_0\n+        14: ireturn\n       LineNumberTable:\n         line 175: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      17     0  this   Lorg/apache/commons/io/input/CharSequenceReader;\n-      StackMapTable: number_of_entries = 2\n-        frame_type = 15 /* same */\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n+            0      15     0  this   Lorg/apache/commons/io/input/CharSequenceReader;\n+      StackMapTable: number_of_entries = 1\n+        frame_type = 13 /* same */\n \n   public void mark(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_0\n-         2: getfield      #63                 // Field idx:I\n-         5: putfield      #66                 // Field mark:I\n+         2: getfield      #76                 // Field idx:I\n+         5: putfield      #78                 // Field mark:I\n          8: return\n       LineNumberTable:\n         line 185: 0\n         line 186: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/CharSequenceReader;\n@@ -458,30 +456,30 @@\n \n   public int read();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #63                 // Field idx:I\n+         1: getfield      #76                 // Field idx:I\n          4: aload_0\n-         5: invokespecial #84                 // Method end:()I\n+         5: invokespecial #99                 // Method end:()I\n          8: if_icmplt     13\n         11: iconst_m1\n         12: ireturn\n         13: aload_0\n-        14: getfield      #47                 // Field charSequence:Ljava/lang/CharSequence;\n+        14: getfield      #64                 // Field charSequence:Ljava/lang/CharSequence;\n         17: aload_0\n         18: dup\n-        19: getfield      #63                 // Field idx:I\n+        19: getfield      #76                 // Field idx:I\n         22: dup_x1\n         23: iconst_1\n         24: iadd\n-        25: putfield      #63                 // Field idx:I\n-        28: invokeinterface #86,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        25: putfield      #76                 // Field idx:I\n+        28: invokeinterface #105,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         33: ireturn\n       LineNumberTable:\n         line 206: 0\n         line 207: 11\n         line 209: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -491,245 +489,246 @@\n \n   public int read(char[], int, int);\n     descriptor: ([CII)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=7, args_size=4\n          0: aload_0\n-         1: getfield      #63                 // Field idx:I\n+         1: getfield      #76                 // Field idx:I\n          4: aload_0\n-         5: invokespecial #84                 // Method end:()I\n+         5: invokespecial #99                 // Method end:()I\n          8: if_icmplt     13\n         11: iconst_m1\n         12: ireturn\n         13: aload_1\n-        14: ldc           #90                 // String array\n-        16: invokestatic  #92                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        14: ldc           #110                // String array\n+        16: invokestatic  #112                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n         19: pop\n         20: iload_3\n         21: iflt          36\n         24: iload_2\n         25: iflt          36\n         28: iload_2\n         29: iload_3\n         30: iadd\n         31: aload_1\n         32: arraylength\n-        33: if_icmple     82\n-        36: new           #98                 // class java/lang/IndexOutOfBoundsException\n+        33: if_icmple     79\n+        36: new           #118                // class java/lang/IndexOutOfBoundsException\n         39: dup\n-        40: new           #22                 // class java/lang/StringBuilder\n+        40: new           #39                 // class java/lang/StringBuilder\n         43: dup\n-        44: invokespecial #24                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        47: ldc           #100                // String Array Size=\n-        49: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        52: aload_1\n-        53: arraylength\n-        54: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        57: ldc           #102                // String , offset=\n-        59: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        62: iload_2\n-        63: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        66: ldc           #104                // String , length=\n-        68: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        71: iload_3\n-        72: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        75: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        78: invokespecial #106                // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n-        81: athrow\n-        82: aload_0\n-        83: getfield      #47                 // Field charSequence:Ljava/lang/CharSequence;\n-        86: instanceof    #107                // class java/lang/String\n-        89: ifeq          144\n-        92: iload_3\n-        93: aload_0\n-        94: invokespecial #84                 // Method end:()I\n-        97: aload_0\n-        98: getfield      #63                 // Field idx:I\n-       101: isub\n-       102: invokestatic  #75                 // Method java/lang/Math.min:(II)I\n-       105: istore        4\n-       107: aload_0\n-       108: getfield      #47                 // Field charSequence:Ljava/lang/CharSequence;\n-       111: checkcast     #107                // class java/lang/String\n-       114: aload_0\n-       115: getfield      #63                 // Field idx:I\n-       118: aload_0\n-       119: getfield      #63                 // Field idx:I\n-       122: iload         4\n-       124: iadd\n-       125: aload_1\n-       126: iload_2\n-       127: invokevirtual #109                // Method java/lang/String.getChars:(II[CI)V\n-       130: aload_0\n-       131: dup\n-       132: getfield      #63                 // Field idx:I\n-       135: iload         4\n-       137: iadd\n-       138: putfield      #63                 // Field idx:I\n-       141: iload         4\n-       143: ireturn\n-       144: aload_0\n-       145: getfield      #47                 // Field charSequence:Ljava/lang/CharSequence;\n-       148: instanceof    #22                 // class java/lang/StringBuilder\n-       151: ifeq          206\n-       154: iload_3\n-       155: aload_0\n-       156: invokespecial #84                 // Method end:()I\n-       159: aload_0\n-       160: getfield      #63                 // Field idx:I\n-       163: isub\n-       164: invokestatic  #75                 // Method java/lang/Math.min:(II)I\n-       167: istore        4\n-       169: aload_0\n-       170: getfield      #47                 // Field charSequence:Ljava/lang/CharSequence;\n-       173: checkcast     #22                 // class java/lang/StringBuilder\n-       176: aload_0\n-       177: getfield      #63                 // Field idx:I\n-       180: aload_0\n-       181: getfield      #63                 // Field idx:I\n-       184: iload         4\n-       186: iadd\n-       187: aload_1\n-       188: iload_2\n-       189: invokevirtual #113                // Method java/lang/StringBuilder.getChars:(II[CI)V\n-       192: aload_0\n-       193: dup\n-       194: getfield      #63                 // Field idx:I\n-       197: iload         4\n-       199: iadd\n-       200: putfield      #63                 // Field idx:I\n-       203: iload         4\n-       205: ireturn\n-       206: aload_0\n-       207: getfield      #47                 // Field charSequence:Ljava/lang/CharSequence;\n-       210: instanceof    #114                // class java/lang/StringBuffer\n-       213: ifeq          268\n-       216: iload_3\n-       217: aload_0\n-       218: invokespecial #84                 // Method end:()I\n-       221: aload_0\n-       222: getfield      #63                 // Field idx:I\n-       225: isub\n-       226: invokestatic  #75                 // Method java/lang/Math.min:(II)I\n-       229: istore        4\n-       231: aload_0\n-       232: getfield      #47                 // Field charSequence:Ljava/lang/CharSequence;\n-       235: checkcast     #114                // class java/lang/StringBuffer\n-       238: aload_0\n-       239: getfield      #63                 // Field idx:I\n-       242: aload_0\n-       243: getfield      #63                 // Field idx:I\n-       246: iload         4\n-       248: iadd\n-       249: aload_1\n-       250: iload_2\n-       251: invokevirtual #116                // Method java/lang/StringBuffer.getChars:(II[CI)V\n-       254: aload_0\n-       255: dup\n-       256: getfield      #63                 // Field idx:I\n-       259: iload         4\n-       261: iadd\n-       262: putfield      #63                 // Field idx:I\n-       265: iload         4\n-       267: ireturn\n+        44: ldc           #120                // String Array Size=\n+        46: invokespecial #43                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        49: aload_1\n+        50: arraylength\n+        51: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        54: ldc           #122                // String , offset=\n+        56: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        59: iload_2\n+        60: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        63: ldc           #124                // String , length=\n+        65: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        68: iload_3\n+        69: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        72: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        75: invokespecial #126                // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+        78: athrow\n+        79: aload_0\n+        80: getfield      #64                 // Field charSequence:Ljava/lang/CharSequence;\n+        83: instanceof    #127                // class java/lang/String\n+        86: ifeq          141\n+        89: iload_3\n+        90: aload_0\n+        91: invokespecial #99                 // Method end:()I\n+        94: aload_0\n+        95: getfield      #76                 // Field idx:I\n+        98: isub\n+        99: invokestatic  #87                 // Method java/lang/Math.min:(II)I\n+       102: istore        4\n+       104: aload_0\n+       105: getfield      #64                 // Field charSequence:Ljava/lang/CharSequence;\n+       108: checkcast     #127                // class java/lang/String\n+       111: aload_0\n+       112: getfield      #76                 // Field idx:I\n+       115: aload_0\n+       116: getfield      #76                 // Field idx:I\n+       119: iload         4\n+       121: iadd\n+       122: aload_1\n+       123: iload_2\n+       124: invokevirtual #129                // Method java/lang/String.getChars:(II[CI)V\n+       127: aload_0\n+       128: dup\n+       129: getfield      #76                 // Field idx:I\n+       132: iload         4\n+       134: iadd\n+       135: putfield      #76                 // Field idx:I\n+       138: iload         4\n+       140: ireturn\n+       141: aload_0\n+       142: getfield      #64                 // Field charSequence:Ljava/lang/CharSequence;\n+       145: instanceof    #39                 // class java/lang/StringBuilder\n+       148: ifeq          203\n+       151: iload_3\n+       152: aload_0\n+       153: invokespecial #99                 // Method end:()I\n+       156: aload_0\n+       157: getfield      #76                 // Field idx:I\n+       160: isub\n+       161: invokestatic  #87                 // Method java/lang/Math.min:(II)I\n+       164: istore        4\n+       166: aload_0\n+       167: getfield      #64                 // Field charSequence:Ljava/lang/CharSequence;\n+       170: checkcast     #39                 // class java/lang/StringBuilder\n+       173: aload_0\n+       174: getfield      #76                 // Field idx:I\n+       177: aload_0\n+       178: getfield      #76                 // Field idx:I\n+       181: iload         4\n+       183: iadd\n+       184: aload_1\n+       185: iload_2\n+       186: invokevirtual #133                // Method java/lang/StringBuilder.getChars:(II[CI)V\n+       189: aload_0\n+       190: dup\n+       191: getfield      #76                 // Field idx:I\n+       194: iload         4\n+       196: iadd\n+       197: putfield      #76                 // Field idx:I\n+       200: iload         4\n+       202: ireturn\n+       203: aload_0\n+       204: getfield      #64                 // Field charSequence:Ljava/lang/CharSequence;\n+       207: instanceof    #134                // class java/lang/StringBuffer\n+       210: ifeq          265\n+       213: iload_3\n+       214: aload_0\n+       215: invokespecial #99                 // Method end:()I\n+       218: aload_0\n+       219: getfield      #76                 // Field idx:I\n+       222: isub\n+       223: invokestatic  #87                 // Method java/lang/Math.min:(II)I\n+       226: istore        4\n+       228: aload_0\n+       229: getfield      #64                 // Field charSequence:Ljava/lang/CharSequence;\n+       232: checkcast     #134                // class java/lang/StringBuffer\n+       235: aload_0\n+       236: getfield      #76                 // Field idx:I\n+       239: aload_0\n+       240: getfield      #76                 // Field idx:I\n+       243: iload         4\n+       245: iadd\n+       246: aload_1\n+       247: iload_2\n+       248: invokevirtual #136                // Method java/lang/StringBuffer.getChars:(II[CI)V\n+       251: aload_0\n+       252: dup\n+       253: getfield      #76                 // Field idx:I\n+       256: iload         4\n+       258: iadd\n+       259: putfield      #76                 // Field idx:I\n+       262: iload         4\n+       264: ireturn\n+       265: iconst_0\n+       266: istore        4\n        268: iconst_0\n-       269: istore        4\n-       271: iconst_0\n-       272: istore        5\n-       274: iload         5\n-       276: iload_3\n-       277: if_icmpge     313\n-       280: aload_0\n-       281: invokevirtual #117                // Method read:()I\n-       284: istore        6\n-       286: iload         6\n-       288: iconst_m1\n-       289: if_icmpne     295\n-       292: iload         4\n-       294: ireturn\n-       295: aload_1\n-       296: iload_2\n-       297: iload         5\n-       299: iadd\n-       300: iload         6\n-       302: i2c\n-       303: castore\n-       304: iinc          4, 1\n-       307: iinc          5, 1\n-       310: goto          274\n-       313: iload         4\n-       315: ireturn\n+       269: istore        5\n+       271: goto          304\n+       274: aload_0\n+       275: invokevirtual #137                // Method read:()I\n+       278: istore        6\n+       280: iload         6\n+       282: iconst_m1\n+       283: if_icmpne     289\n+       286: iload         4\n+       288: ireturn\n+       289: aload_1\n+       290: iload_2\n+       291: iload         5\n+       293: iadd\n+       294: iload         6\n+       296: i2c\n+       297: castore\n+       298: iinc          4, 1\n+       301: iinc          5, 1\n+       304: iload         5\n+       306: iload_3\n+       307: if_icmplt     274\n+       310: iload         4\n+       312: ireturn\n       LineNumberTable:\n         line 223: 0\n         line 224: 11\n         line 226: 13\n         line 227: 20\n         line 228: 36\n-        line 232: 82\n-        line 233: 92\n-        line 234: 107\n-        line 235: 130\n-        line 236: 141\n-        line 238: 144\n-        line 239: 154\n-        line 240: 169\n-        line 241: 192\n-        line 242: 203\n-        line 244: 206\n-        line 245: 216\n-        line 246: 231\n-        line 247: 254\n-        line 248: 265\n-        line 251: 268\n-        line 252: 271\n-        line 253: 280\n-        line 254: 286\n-        line 255: 292\n-        line 257: 295\n-        line 258: 304\n-        line 252: 307\n-        line 260: 313\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-          107      37     4 count   I\n-          169      37     4 count   I\n-          231      37     4 count   I\n-          286      21     6     c   I\n-          274      39     5     i   I\n-            0     316     0  this   Lorg/apache/commons/io/input/CharSequenceReader;\n-            0     316     1 array   [C\n-            0     316     2 offset   I\n-            0     316     3 length   I\n-          271      45     4 count   I\n+        line 229: 54\n+        line 228: 75\n+        line 232: 79\n+        line 233: 89\n+        line 234: 104\n+        line 235: 127\n+        line 236: 138\n+        line 238: 141\n+        line 239: 151\n+        line 240: 166\n+        line 241: 189\n+        line 242: 200\n+        line 244: 203\n+        line 245: 213\n+        line 246: 228\n+        line 247: 251\n+        line 248: 262\n+        line 251: 265\n+        line 252: 268\n+        line 253: 274\n+        line 254: 280\n+        line 255: 286\n+        line 257: 289\n+        line 258: 298\n+        line 252: 301\n+        line 260: 310\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+            0     313     0  this   Lorg/apache/commons/io/input/CharSequenceReader;\n+            0     313     1 array   [C\n+            0     313     2 offset   I\n+            0     313     3 length   I\n+          104      37     4 count   I\n+          166      37     4 count   I\n+          228      37     4 count   I\n+          268      45     4 count   I\n+          271      39     5     i   I\n+          280      21     6     c   I\n       StackMapTable: number_of_entries = 9\n         frame_type = 13 /* same */\n         frame_type = 22 /* same */\n-        frame_type = 45 /* same */\n+        frame_type = 42 /* same */\n         frame_type = 61 /* same */\n         frame_type = 61 /* same */\n         frame_type = 61 /* same */\n         frame_type = 253 /* append */\n-          offset_delta = 5\n+          offset_delta = 8\n           locals = [ int, int ]\n         frame_type = 252 /* append */\n-          offset_delta = 20\n+          offset_delta = 14\n           locals = [ int ]\n-        frame_type = 249 /* chop */\n-          offset_delta = 17\n+        frame_type = 250 /* chop */\n+          offset_delta = 14\n \n   public void reset();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: getfield      #66                 // Field mark:I\n-         5: putfield      #63                 // Field idx:I\n+         2: getfield      #78                 // Field mark:I\n+         5: putfield      #76                 // Field idx:I\n          8: return\n       LineNumberTable:\n         line 269: 0\n         line 270: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/CharSequenceReader;\n@@ -738,90 +737,91 @@\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=5, args_size=2\n          0: lload_1\n          1: lconst_0\n          2: lcmp\n-         3: ifge          33\n-         6: new           #20                 // class java/lang/IllegalArgumentException\n+         3: ifge          30\n+         6: new           #37                 // class java/lang/IllegalArgumentException\n          9: dup\n-        10: new           #22                 // class java/lang/StringBuilder\n+        10: new           #39                 // class java/lang/StringBuilder\n         13: dup\n-        14: invokespecial #24                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        17: ldc           #120                // String Number of characters to skip is less than zero:\n-        19: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        22: lload_1\n-        23: invokevirtual #122                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-        26: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        29: invokespecial #38                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        32: athrow\n-        33: aload_0\n-        34: getfield      #63                 // Field idx:I\n-        37: aload_0\n-        38: invokespecial #84                 // Method end:()I\n-        41: if_icmplt     46\n-        44: lconst_0\n-        45: lreturn\n-        46: aload_0\n-        47: invokespecial #84                 // Method end:()I\n-        50: i2l\n-        51: aload_0\n-        52: getfield      #63                 // Field idx:I\n-        55: i2l\n-        56: lload_1\n-        57: ladd\n-        58: invokestatic  #125                // Method java/lang/Math.min:(JJ)J\n-        61: l2i\n-        62: istore_3\n-        63: iload_3\n-        64: aload_0\n-        65: getfield      #63                 // Field idx:I\n-        68: isub\n-        69: istore        4\n-        71: aload_0\n-        72: iload_3\n-        73: putfield      #63                 // Field idx:I\n-        76: iload         4\n-        78: i2l\n-        79: lreturn\n+        14: ldc           #147                // String Number of characters to skip is less than zero:\n+        16: invokespecial #43                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        19: lload_1\n+        20: invokevirtual #149                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        23: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        26: invokespecial #54                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        29: athrow\n+        30: aload_0\n+        31: getfield      #76                 // Field idx:I\n+        34: aload_0\n+        35: invokespecial #99                 // Method end:()I\n+        38: if_icmplt     43\n+        41: lconst_0\n+        42: lreturn\n+        43: aload_0\n+        44: invokespecial #99                 // Method end:()I\n+        47: i2l\n+        48: aload_0\n+        49: getfield      #76                 // Field idx:I\n+        52: i2l\n+        53: lload_1\n+        54: ladd\n+        55: invokestatic  #152                // Method java/lang/Math.min:(JJ)J\n+        58: l2i\n+        59: istore_3\n+        60: iload_3\n+        61: aload_0\n+        62: getfield      #76                 // Field idx:I\n+        65: isub\n+        66: istore        4\n+        68: aload_0\n+        69: iload_3\n+        70: putfield      #76                 // Field idx:I\n+        73: iload         4\n+        75: i2l\n+        76: lreturn\n       LineNumberTable:\n         line 280: 0\n         line 281: 6\n-        line 284: 33\n-        line 285: 44\n-        line 287: 46\n-        line 288: 63\n-        line 289: 71\n-        line 290: 76\n+        line 282: 10\n+        line 281: 26\n+        line 284: 30\n+        line 285: 41\n+        line 287: 43\n+        line 288: 60\n+        line 289: 68\n+        line 290: 73\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      80     0  this   Lorg/apache/commons/io/input/CharSequenceReader;\n-            0      80     1     n   J\n-           63      17     3  dest   I\n-           71       9     4 count   I\n+            0      77     0  this   Lorg/apache/commons/io/input/CharSequenceReader;\n+            0      77     1     n   J\n+           60      17     3  dest   I\n+           68       9     4 count   I\n       StackMapTable: number_of_entries = 2\n-        frame_type = 33 /* same */\n+        frame_type = 30 /* same */\n         frame_type = 12 /* same */\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #47                 // Field charSequence:Ljava/lang/CharSequence;\n+         1: getfield      #64                 // Field charSequence:Ljava/lang/CharSequence;\n          4: aload_0\n-         5: invokespecial #128                // Method start:()I\n+         5: invokespecial #157                // Method start:()I\n          8: aload_0\n-         9: invokespecial #84                 // Method end:()I\n-        12: invokeinterface #130,  3          // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;\n+         9: invokespecial #99                 // Method end:()I\n+        12: invokeinterface #159,  3          // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;\n         17: astore_1\n         18: aload_1\n-        19: invokeinterface #134,  1          // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;\n+        19: invokeinterface #163,  1          // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;\n         24: areturn\n       LineNumberTable:\n         line 301: 0\n         line 302: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      25     0  this   Lorg/apache/commons/io/input/CharSequenceReader;\n"}]}
