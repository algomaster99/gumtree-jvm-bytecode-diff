{"diffoscope-json-version": 1, "source1": "first/ZipFile$StoredStatisticsStream.class", "source2": "second/ZipFile$StoredStatisticsStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,43 +1,43 @@\n-  SHA-256 checksum 3643f4ffe84f1036d18993cbd93bd77906cf2e6471828ec4a5ab87e89911dbec\n+  SHA-256 checksum 3a119e5b5fdea1632fe3a81bbabb564ae777b2581edf5a81e0050c51de4adbbd\n   Compiled from \"ZipFile.java\"\n class org.apache.commons.compress.archivers.zip.ZipFile$StoredStatisticsStream extends org.apache.commons.compress.utils.CountingInputStream implements org.apache.commons.compress.utils.InputStreamStatistics\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n-  this_class: #4                          // org/apache/commons/compress/archivers/zip/ZipFile$StoredStatisticsStream\n-  super_class: #5                         // org/apache/commons/compress/utils/CountingInputStream\n+  this_class: #12                         // org/apache/commons/compress/archivers/zip/ZipFile$StoredStatisticsStream\n+  super_class: #2                         // org/apache/commons/compress/utils/CountingInputStream\n   interfaces: 1, fields: 0, methods: 3, attributes: 2\n Constant pool:\n-   #1 = Methodref          #5.#16         // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #2 = Methodref          #5.#17         // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n-   #3 = Methodref          #4.#18         // org/apache/commons/compress/archivers/zip/ZipFile$StoredStatisticsStream.getCompressedCount:()J\n-   #4 = Class              #20            // org/apache/commons/compress/archivers/zip/ZipFile$StoredStatisticsStream\n-   #5 = Class              #23            // org/apache/commons/compress/utils/CountingInputStream\n-   #6 = Class              #24            // org/apache/commons/compress/utils/InputStreamStatistics\n-   #7 = Utf8               <init>\n-   #8 = Utf8               (Ljava/io/InputStream;)V\n-   #9 = Utf8               Code\n-  #10 = Utf8               LineNumberTable\n-  #11 = Utf8               getCompressedCount\n-  #12 = Utf8               ()J\n-  #13 = Utf8               getUncompressedCount\n-  #14 = Utf8               SourceFile\n-  #15 = Utf8               ZipFile.java\n-  #16 = NameAndType        #7:#8          // \"<init>\":(Ljava/io/InputStream;)V\n-  #17 = NameAndType        #25:#12        // getBytesRead:()J\n-  #18 = NameAndType        #11:#12        // getCompressedCount:()J\n-  #19 = Class              #26            // org/apache/commons/compress/archivers/zip/ZipFile\n-  #20 = Utf8               org/apache/commons/compress/archivers/zip/ZipFile$StoredStatisticsStream\n-  #21 = Utf8               StoredStatisticsStream\n-  #22 = Utf8               InnerClasses\n-  #23 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n-  #24 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n-  #25 = Utf8               getBytesRead\n-  #26 = Utf8               org/apache/commons/compress/archivers/zip/ZipFile\n+   #1 = Methodref          #2.#3          // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #2 = Class              #4             // org/apache/commons/compress/utils/CountingInputStream\n+   #3 = NameAndType        #5:#6          // \"<init>\":(Ljava/io/InputStream;)V\n+   #4 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n+   #5 = Utf8               <init>\n+   #6 = Utf8               (Ljava/io/InputStream;)V\n+   #7 = Methodref          #2.#8          // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+   #8 = NameAndType        #9:#10         // getBytesRead:()J\n+   #9 = Utf8               getBytesRead\n+  #10 = Utf8               ()J\n+  #11 = Methodref          #12.#13        // org/apache/commons/compress/archivers/zip/ZipFile$StoredStatisticsStream.getCompressedCount:()J\n+  #12 = Class              #14            // org/apache/commons/compress/archivers/zip/ZipFile$StoredStatisticsStream\n+  #13 = NameAndType        #15:#10        // getCompressedCount:()J\n+  #14 = Utf8               org/apache/commons/compress/archivers/zip/ZipFile$StoredStatisticsStream\n+  #15 = Utf8               getCompressedCount\n+  #16 = Class              #17            // org/apache/commons/compress/utils/InputStreamStatistics\n+  #17 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n+  #18 = Utf8               Code\n+  #19 = Utf8               LineNumberTable\n+  #20 = Utf8               getUncompressedCount\n+  #21 = Utf8               SourceFile\n+  #22 = Utf8               ZipFile.java\n+  #23 = Utf8               InnerClasses\n+  #24 = Class              #25            // org/apache/commons/compress/archivers/zip/ZipFile\n+  #25 = Utf8               org/apache/commons/compress/archivers/zip/ZipFile\n+  #26 = Utf8               StoredStatisticsStream\n {\n   org.apache.commons.compress.archivers.zip.ZipFile$StoredStatisticsStream(java.io.InputStream);\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0000)\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n@@ -50,26 +50,26 @@\n \n   public long getCompressedCount();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #2                  // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+         1: invokespecial #7                  // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n          4: lreturn\n       LineNumberTable:\n         line 1551: 0\n \n   public long getUncompressedCount();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #3                  // Method getCompressedCount:()J\n+         1: invokevirtual #11                 // Method getCompressedCount:()J\n          4: lreturn\n       LineNumberTable:\n         line 1556: 0\n }\n SourceFile: \"ZipFile.java\"\n InnerClasses:\n-  private static #21= #4 of #19;          // StoredStatisticsStream=class org/apache/commons/compress/archivers/zip/ZipFile$StoredStatisticsStream of class org/apache/commons/compress/archivers/zip/ZipFile\n+  private static #26= #12 of #24;         // StoredStatisticsStream=class org/apache/commons/compress/archivers/zip/ZipFile$StoredStatisticsStream of class org/apache/commons/compress/archivers/zip/ZipFile\n"}]}
