{"diffoscope-json-version": 1, "source1": "first/BlockLZ4CompressorOutputStream.class", "source2": "second/BlockLZ4CompressorOutputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,11 +1,12 @@\n \n package org.apache.commons.compress.compressors.lz4;\n \n import java.util.function.Consumer;\n+import java.util.Objects;\n import java.util.Iterator;\n import java.util.Arrays;\n import java.io.IOException;\n import java.util.LinkedList;\n import org.apache.commons.compress.compressors.lz77support.Parameters;\n import java.util.Deque;\n import java.io.OutputStream;\n@@ -241,15 +242,18 @@\n             list2.addFirst(Integer.valueOf(length));\n             list.addFirst(e);\n             n += length;\n             if (n >= 12) {\n                 break;\n             }\n         }\n-        list.forEach(this.pairs::remove);\n+        final LinkedList list3 = list;\n+        final Deque<BlockLZ4CompressorOutputStream.Pair> pairs = this.pairs;\n+        Objects.requireNonNull(pairs);\n+        list3.forEach(pairs::remove);\n         final int size = list.size();\n         int n2 = 0;\n         for (int i = 1; i < size; ++i) {\n             n2 += (int)list2.get(i);\n         }\n         final BlockLZ4CompressorOutputStream.Pair pair = new BlockLZ4CompressorOutputStream.Pair();\n         if (n2 > 0) {\n"}]}
