{"diffoscope-json-version": 1, "source1": "first/SimpleElementValue.class", "source2": "second/SimpleElementValue.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,194 +1,191 @@\n-  SHA-256 checksum 0aa80fb3417bf7151a7be473fefbde807d24168ab9843841420b8b251b4f3bac\n+  SHA-256 checksum 512b6ed3ca90910be9aaeeb47aa9e97d2bc23724ed4f578da44d9f8868bbb9d5\n   Compiled from \"SimpleElementValue.java\"\n public class org.apache.bcel.classfile.SimpleElementValue extends org.apache.bcel.classfile.ElementValue\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #48                         // org/apache/bcel/classfile/SimpleElementValue\n   super_class: #15                        // org/apache/bcel/classfile/ElementValue\n   interfaces: 0, fields: 1, methods: 15, attributes: 1\n Constant pool:\n-    #1 = Methodref          #15.#88       // org/apache/bcel/classfile/ElementValue.\"<init>\":(ILorg/apache/bcel/classfile/ConstantPool;)V\n-    #2 = Fieldref           #48.#89       // org/apache/bcel/classfile/SimpleElementValue.index:I\n-    #3 = Methodref          #15.#90       // org/apache/bcel/classfile/ElementValue.getType:()I\n-    #4 = Methodref          #91.#92       // java/io/DataOutputStream.writeByte:(I)V\n-    #5 = Methodref          #48.#93       // org/apache/bcel/classfile/SimpleElementValue.getIndex:()I\n-    #6 = Methodref          #91.#94       // java/io/DataOutputStream.writeShort:(I)V\n-    #7 = Class              #95           // java/lang/IllegalStateException\n-    #8 = Class              #96           // java/lang/StringBuilder\n-    #9 = Methodref          #8.#97        // java/lang/StringBuilder.\"<init>\":()V\n-   #10 = String             #98           // SimpleElementValue doesnt know how to write out type\n-   #11 = Methodref          #8.#99        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #12 = Methodref          #8.#100       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #13 = Methodref          #8.#101       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #14 = Methodref          #7.#102       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #15 = Class              #103          // org/apache/bcel/classfile/ElementValue\n-   #16 = String             #104          // Dont call getValueBoolean() on a non BOOLEAN ElementValue\n-   #17 = Methodref          #15.#105      // org/apache/bcel/classfile/ElementValue.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-   #18 = Methodref          #106.#107     // org/apache/bcel/classfile/ConstantPool.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-   #19 = Class              #108          // org/apache/bcel/classfile/ConstantInteger\n-   #20 = Methodref          #19.#109      // org/apache/bcel/classfile/ConstantInteger.getBytes:()I\n-   #21 = String             #110          // Dont call getValueByte() on a non BYTE ElementValue\n-   #22 = Methodref          #106.#111     // org/apache/bcel/classfile/ConstantPool.getConstantInteger:(I)Lorg/apache/bcel/classfile/ConstantInteger;\n-   #23 = String             #112          // Dont call getValueChar() on a non CHAR ElementValue\n-   #24 = String             #113          // Dont call getValueDouble() on a non DOUBLE ElementValue\n-   #25 = Class              #114          // org/apache/bcel/classfile/ConstantDouble\n-   #26 = Methodref          #25.#115      // org/apache/bcel/classfile/ConstantDouble.getBytes:()D\n-   #27 = String             #116          // Dont call getValueFloat() on a non FLOAT ElementValue\n-   #28 = Class              #117          // org/apache/bcel/classfile/ConstantFloat\n-   #29 = Methodref          #28.#118      // org/apache/bcel/classfile/ConstantFloat.getBytes:()F\n-   #30 = String             #119          // Dont call getValueString() on a non STRING ElementValue\n-   #31 = String             #120          // Dont call getValueLong() on a non LONG ElementValue\n-   #32 = Class              #121          // org/apache/bcel/classfile/ConstantLong\n-   #33 = Methodref          #32.#122      // org/apache/bcel/classfile/ConstantLong.getBytes:()J\n-   #34 = String             #123          // Dont call getValueShort() on a non SHORT ElementValue\n-   #35 = Methodref          #106.#124     // org/apache/bcel/classfile/ConstantPool.getConstantUtf8:(I)Lorg/apache/bcel/classfile/ConstantUtf8;\n-   #36 = Methodref          #125.#126     // org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n-   #37 = Methodref          #127.#128     // java/lang/Integer.toString:(I)Ljava/lang/String;\n-   #38 = Class              #129          // org/apache/bcel/Const\n-   #39 = Methodref          #106.#130     // org/apache/bcel/classfile/ConstantPool.getConstant:(IBLjava/lang/Class;)Lorg/apache/bcel/classfile/Constant;\n-   #40 = Methodref          #131.#132     // java/lang/Long.toString:(J)Ljava/lang/String;\n-   #41 = Methodref          #133.#134     // java/lang/Double.toString:(D)Ljava/lang/String;\n-   #42 = Methodref          #135.#136     // java/lang/Float.toString:(F)Ljava/lang/String;\n-   #43 = Methodref          #137.#138     // java/lang/String.valueOf:(C)Ljava/lang/String;\n-   #44 = String             #139          // false\n-   #45 = String             #140          // true\n-   #46 = String             #141          // SimpleElementValue class does not know how to stringify type\n-   #47 = Methodref          #48.#142      // org/apache/bcel/classfile/SimpleElementValue.stringifyValue:()Ljava/lang/String;\n-   #48 = Class              #143          // org/apache/bcel/classfile/SimpleElementValue\n+    #1 = Methodref          #15.#86       // org/apache/bcel/classfile/ElementValue.\"<init>\":(ILorg/apache/bcel/classfile/ConstantPool;)V\n+    #2 = Fieldref           #48.#87       // org/apache/bcel/classfile/SimpleElementValue.index:I\n+    #3 = Methodref          #15.#88       // org/apache/bcel/classfile/ElementValue.getType:()I\n+    #4 = Methodref          #89.#90       // java/io/DataOutputStream.writeByte:(I)V\n+    #5 = Methodref          #48.#91       // org/apache/bcel/classfile/SimpleElementValue.getIndex:()I\n+    #6 = Methodref          #89.#92       // java/io/DataOutputStream.writeShort:(I)V\n+    #7 = Class              #93           // java/lang/IllegalStateException\n+    #8 = Class              #94           // java/lang/StringBuilder\n+    #9 = Methodref          #8.#95        // java/lang/StringBuilder.\"<init>\":()V\n+   #10 = String             #96           // SimpleElementValue doesnt know how to write out type\n+   #11 = Methodref          #8.#97        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #12 = Methodref          #8.#98        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #13 = Methodref          #8.#99        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #14 = Methodref          #7.#100       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #15 = Class              #101          // org/apache/bcel/classfile/ElementValue\n+   #16 = String             #102          // Dont call getValueBoolean() on a non BOOLEAN ElementValue\n+   #17 = Methodref          #15.#103      // org/apache/bcel/classfile/ElementValue.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+   #18 = Methodref          #82.#104      // org/apache/bcel/classfile/ConstantPool.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+   #19 = Class              #105          // org/apache/bcel/classfile/ConstantInteger\n+   #20 = Methodref          #19.#106      // org/apache/bcel/classfile/ConstantInteger.getBytes:()I\n+   #21 = String             #107          // Dont call getValueByte() on a non BYTE ElementValue\n+   #22 = Methodref          #82.#108      // org/apache/bcel/classfile/ConstantPool.getConstantInteger:(I)Lorg/apache/bcel/classfile/ConstantInteger;\n+   #23 = String             #109          // Dont call getValueChar() on a non CHAR ElementValue\n+   #24 = String             #110          // Dont call getValueDouble() on a non DOUBLE ElementValue\n+   #25 = Class              #111          // org/apache/bcel/classfile/ConstantDouble\n+   #26 = Methodref          #25.#112      // org/apache/bcel/classfile/ConstantDouble.getBytes:()D\n+   #27 = String             #113          // Dont call getValueFloat() on a non FLOAT ElementValue\n+   #28 = Class              #114          // org/apache/bcel/classfile/ConstantFloat\n+   #29 = Methodref          #28.#115      // org/apache/bcel/classfile/ConstantFloat.getBytes:()F\n+   #30 = String             #116          // Dont call getValueString() on a non STRING ElementValue\n+   #31 = String             #117          // Dont call getValueLong() on a non LONG ElementValue\n+   #32 = Class              #118          // org/apache/bcel/classfile/ConstantLong\n+   #33 = Methodref          #32.#119      // org/apache/bcel/classfile/ConstantLong.getBytes:()J\n+   #34 = String             #120          // Dont call getValueShort() on a non SHORT ElementValue\n+   #35 = Methodref          #82.#121      // org/apache/bcel/classfile/ConstantPool.getConstantUtf8:(I)Lorg/apache/bcel/classfile/ConstantUtf8;\n+   #36 = Methodref          #122.#123     // org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n+   #37 = Methodref          #124.#125     // java/lang/Integer.toString:(I)Ljava/lang/String;\n+   #38 = Class              #126          // org/apache/bcel/Const\n+   #39 = Methodref          #82.#127      // org/apache/bcel/classfile/ConstantPool.getConstant:(IBLjava/lang/Class;)Lorg/apache/bcel/classfile/Constant;\n+   #40 = Methodref          #128.#129     // java/lang/Long.toString:(J)Ljava/lang/String;\n+   #41 = Methodref          #130.#131     // java/lang/Double.toString:(D)Ljava/lang/String;\n+   #42 = Methodref          #132.#133     // java/lang/Float.toString:(F)Ljava/lang/String;\n+   #43 = Methodref          #134.#135     // java/lang/String.valueOf:(C)Ljava/lang/String;\n+   #44 = String             #136          // false\n+   #45 = String             #137          // true\n+   #46 = String             #138          // SimpleElementValue class does not know how to stringify type\n+   #47 = Methodref          #48.#139      // org/apache/bcel/classfile/SimpleElementValue.stringifyValue:()Ljava/lang/String;\n+   #48 = Class              #140          // org/apache/bcel/classfile/SimpleElementValue\n    #49 = Utf8               index\n    #50 = Utf8               I\n    #51 = Utf8               <init>\n    #52 = Utf8               (IILorg/apache/bcel/classfile/ConstantPool;)V\n    #53 = Utf8               Code\n    #54 = Utf8               LineNumberTable\n    #55 = Utf8               dump\n    #56 = Utf8               (Ljava/io/DataOutputStream;)V\n    #57 = Utf8               StackMapTable\n    #58 = Utf8               Exceptions\n-   #59 = Class              #144          // java/io/IOException\n+   #59 = Class              #141          // java/io/IOException\n    #60 = Utf8               getIndex\n    #61 = Utf8               ()I\n    #62 = Utf8               getValueBoolean\n    #63 = Utf8               ()Z\n-   #64 = Class              #108          // org/apache/bcel/classfile/ConstantInteger\n-   #65 = Utf8               getValueByte\n-   #66 = Utf8               ()B\n-   #67 = Utf8               getValueChar\n-   #68 = Utf8               ()C\n-   #69 = Utf8               getValueDouble\n-   #70 = Utf8               ()D\n-   #71 = Utf8               getValueFloat\n-   #72 = Utf8               ()F\n-   #73 = Utf8               getValueInt\n-   #74 = Utf8               getValueLong\n-   #75 = Utf8               ()J\n-   #76 = Utf8               getValueShort\n-   #77 = Utf8               ()S\n-   #78 = Utf8               getValueString\n-   #79 = Utf8               ()Ljava/lang/String;\n-   #80 = Utf8               setIndex\n-   #81 = Utf8               (I)V\n-   #82 = Utf8               stringifyValue\n-   #83 = Class              #145          // org/apache/bcel/classfile/ConstantPool\n-   #84 = Class              #143          // org/apache/bcel/classfile/SimpleElementValue\n-   #85 = Utf8               toString\n-   #86 = Utf8               SourceFile\n-   #87 = Utf8               SimpleElementValue.java\n-   #88 = NameAndType        #51:#146      // \"<init>\":(ILorg/apache/bcel/classfile/ConstantPool;)V\n-   #89 = NameAndType        #49:#50       // index:I\n-   #90 = NameAndType        #147:#61      // getType:()I\n-   #91 = Class              #148          // java/io/DataOutputStream\n-   #92 = NameAndType        #149:#81      // writeByte:(I)V\n-   #93 = NameAndType        #60:#61       // getIndex:()I\n-   #94 = NameAndType        #150:#81      // writeShort:(I)V\n-   #95 = Utf8               java/lang/IllegalStateException\n-   #96 = Utf8               java/lang/StringBuilder\n-   #97 = NameAndType        #51:#151      // \"<init>\":()V\n-   #98 = Utf8               SimpleElementValue doesnt know how to write out type\n-   #99 = NameAndType        #152:#153     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #100 = NameAndType        #152:#154     // append:(I)Ljava/lang/StringBuilder;\n-  #101 = NameAndType        #85:#79       // toString:()Ljava/lang/String;\n-  #102 = NameAndType        #51:#155      // \"<init>\":(Ljava/lang/String;)V\n-  #103 = Utf8               org/apache/bcel/classfile/ElementValue\n-  #104 = Utf8               Dont call getValueBoolean() on a non BOOLEAN ElementValue\n-  #105 = NameAndType        #156:#157     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-  #106 = Class              #145          // org/apache/bcel/classfile/ConstantPool\n-  #107 = NameAndType        #158:#159     // getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-  #108 = Utf8               org/apache/bcel/classfile/ConstantInteger\n-  #109 = NameAndType        #160:#61      // getBytes:()I\n-  #110 = Utf8               Dont call getValueByte() on a non BYTE ElementValue\n-  #111 = NameAndType        #161:#162     // getConstantInteger:(I)Lorg/apache/bcel/classfile/ConstantInteger;\n-  #112 = Utf8               Dont call getValueChar() on a non CHAR ElementValue\n-  #113 = Utf8               Dont call getValueDouble() on a non DOUBLE ElementValue\n-  #114 = Utf8               org/apache/bcel/classfile/ConstantDouble\n-  #115 = NameAndType        #160:#70      // getBytes:()D\n-  #116 = Utf8               Dont call getValueFloat() on a non FLOAT ElementValue\n-  #117 = Utf8               org/apache/bcel/classfile/ConstantFloat\n-  #118 = NameAndType        #160:#72      // getBytes:()F\n-  #119 = Utf8               Dont call getValueString() on a non STRING ElementValue\n-  #120 = Utf8               Dont call getValueLong() on a non LONG ElementValue\n-  #121 = Utf8               org/apache/bcel/classfile/ConstantLong\n-  #122 = NameAndType        #160:#75      // getBytes:()J\n-  #123 = Utf8               Dont call getValueShort() on a non SHORT ElementValue\n-  #124 = NameAndType        #163:#164     // getConstantUtf8:(I)Lorg/apache/bcel/classfile/ConstantUtf8;\n-  #125 = Class              #165          // org/apache/bcel/classfile/ConstantUtf8\n-  #126 = NameAndType        #160:#79      // getBytes:()Ljava/lang/String;\n-  #127 = Class              #166          // java/lang/Integer\n-  #128 = NameAndType        #85:#167      // toString:(I)Ljava/lang/String;\n-  #129 = Utf8               org/apache/bcel/Const\n-  #130 = NameAndType        #158:#168     // getConstant:(IBLjava/lang/Class;)Lorg/apache/bcel/classfile/Constant;\n-  #131 = Class              #169          // java/lang/Long\n-  #132 = NameAndType        #85:#170      // toString:(J)Ljava/lang/String;\n-  #133 = Class              #171          // java/lang/Double\n-  #134 = NameAndType        #85:#172      // toString:(D)Ljava/lang/String;\n-  #135 = Class              #173          // java/lang/Float\n-  #136 = NameAndType        #85:#174      // toString:(F)Ljava/lang/String;\n-  #137 = Class              #175          // java/lang/String\n-  #138 = NameAndType        #176:#177     // valueOf:(C)Ljava/lang/String;\n-  #139 = Utf8               false\n-  #140 = Utf8               true\n-  #141 = Utf8               SimpleElementValue class does not know how to stringify type\n-  #142 = NameAndType        #82:#79       // stringifyValue:()Ljava/lang/String;\n-  #143 = Utf8               org/apache/bcel/classfile/SimpleElementValue\n-  #144 = Utf8               java/io/IOException\n-  #145 = Utf8               org/apache/bcel/classfile/ConstantPool\n-  #146 = Utf8               (ILorg/apache/bcel/classfile/ConstantPool;)V\n-  #147 = Utf8               getType\n-  #148 = Utf8               java/io/DataOutputStream\n-  #149 = Utf8               writeByte\n-  #150 = Utf8               writeShort\n-  #151 = Utf8               ()V\n-  #152 = Utf8               append\n-  #153 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #154 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #155 = Utf8               (Ljava/lang/String;)V\n-  #156 = Utf8               getConstantPool\n-  #157 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n-  #158 = Utf8               getConstant\n-  #159 = Utf8               (I)Lorg/apache/bcel/classfile/Constant;\n-  #160 = Utf8               getBytes\n-  #161 = Utf8               getConstantInteger\n-  #162 = Utf8               (I)Lorg/apache/bcel/classfile/ConstantInteger;\n-  #163 = Utf8               getConstantUtf8\n-  #164 = Utf8               (I)Lorg/apache/bcel/classfile/ConstantUtf8;\n-  #165 = Utf8               org/apache/bcel/classfile/ConstantUtf8\n-  #166 = Utf8               java/lang/Integer\n-  #167 = Utf8               (I)Ljava/lang/String;\n-  #168 = Utf8               (IBLjava/lang/Class;)Lorg/apache/bcel/classfile/Constant;\n-  #169 = Utf8               java/lang/Long\n-  #170 = Utf8               (J)Ljava/lang/String;\n-  #171 = Utf8               java/lang/Double\n-  #172 = Utf8               (D)Ljava/lang/String;\n-  #173 = Utf8               java/lang/Float\n-  #174 = Utf8               (F)Ljava/lang/String;\n-  #175 = Utf8               java/lang/String\n-  #176 = Utf8               valueOf\n-  #177 = Utf8               (C)Ljava/lang/String;\n+   #64 = Utf8               getValueByte\n+   #65 = Utf8               ()B\n+   #66 = Utf8               getValueChar\n+   #67 = Utf8               ()C\n+   #68 = Utf8               getValueDouble\n+   #69 = Utf8               ()D\n+   #70 = Utf8               getValueFloat\n+   #71 = Utf8               ()F\n+   #72 = Utf8               getValueInt\n+   #73 = Utf8               getValueLong\n+   #74 = Utf8               ()J\n+   #75 = Utf8               getValueShort\n+   #76 = Utf8               ()S\n+   #77 = Utf8               getValueString\n+   #78 = Utf8               ()Ljava/lang/String;\n+   #79 = Utf8               setIndex\n+   #80 = Utf8               (I)V\n+   #81 = Utf8               stringifyValue\n+   #82 = Class              #142          // org/apache/bcel/classfile/ConstantPool\n+   #83 = Utf8               toString\n+   #84 = Utf8               SourceFile\n+   #85 = Utf8               SimpleElementValue.java\n+   #86 = NameAndType        #51:#143      // \"<init>\":(ILorg/apache/bcel/classfile/ConstantPool;)V\n+   #87 = NameAndType        #49:#50       // index:I\n+   #88 = NameAndType        #144:#61      // getType:()I\n+   #89 = Class              #145          // java/io/DataOutputStream\n+   #90 = NameAndType        #146:#80      // writeByte:(I)V\n+   #91 = NameAndType        #60:#61       // getIndex:()I\n+   #92 = NameAndType        #147:#80      // writeShort:(I)V\n+   #93 = Utf8               java/lang/IllegalStateException\n+   #94 = Utf8               java/lang/StringBuilder\n+   #95 = NameAndType        #51:#148      // \"<init>\":()V\n+   #96 = Utf8               SimpleElementValue doesnt know how to write out type\n+   #97 = NameAndType        #149:#150     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #98 = NameAndType        #149:#151     // append:(I)Ljava/lang/StringBuilder;\n+   #99 = NameAndType        #83:#78       // toString:()Ljava/lang/String;\n+  #100 = NameAndType        #51:#152      // \"<init>\":(Ljava/lang/String;)V\n+  #101 = Utf8               org/apache/bcel/classfile/ElementValue\n+  #102 = Utf8               Dont call getValueBoolean() on a non BOOLEAN ElementValue\n+  #103 = NameAndType        #153:#154     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+  #104 = NameAndType        #155:#156     // getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+  #105 = Utf8               org/apache/bcel/classfile/ConstantInteger\n+  #106 = NameAndType        #157:#61      // getBytes:()I\n+  #107 = Utf8               Dont call getValueByte() on a non BYTE ElementValue\n+  #108 = NameAndType        #158:#159     // getConstantInteger:(I)Lorg/apache/bcel/classfile/ConstantInteger;\n+  #109 = Utf8               Dont call getValueChar() on a non CHAR ElementValue\n+  #110 = Utf8               Dont call getValueDouble() on a non DOUBLE ElementValue\n+  #111 = Utf8               org/apache/bcel/classfile/ConstantDouble\n+  #112 = NameAndType        #157:#69      // getBytes:()D\n+  #113 = Utf8               Dont call getValueFloat() on a non FLOAT ElementValue\n+  #114 = Utf8               org/apache/bcel/classfile/ConstantFloat\n+  #115 = NameAndType        #157:#71      // getBytes:()F\n+  #116 = Utf8               Dont call getValueString() on a non STRING ElementValue\n+  #117 = Utf8               Dont call getValueLong() on a non LONG ElementValue\n+  #118 = Utf8               org/apache/bcel/classfile/ConstantLong\n+  #119 = NameAndType        #157:#74      // getBytes:()J\n+  #120 = Utf8               Dont call getValueShort() on a non SHORT ElementValue\n+  #121 = NameAndType        #160:#161     // getConstantUtf8:(I)Lorg/apache/bcel/classfile/ConstantUtf8;\n+  #122 = Class              #162          // org/apache/bcel/classfile/ConstantUtf8\n+  #123 = NameAndType        #157:#78      // getBytes:()Ljava/lang/String;\n+  #124 = Class              #163          // java/lang/Integer\n+  #125 = NameAndType        #83:#164      // toString:(I)Ljava/lang/String;\n+  #126 = Utf8               org/apache/bcel/Const\n+  #127 = NameAndType        #155:#165     // getConstant:(IBLjava/lang/Class;)Lorg/apache/bcel/classfile/Constant;\n+  #128 = Class              #166          // java/lang/Long\n+  #129 = NameAndType        #83:#167      // toString:(J)Ljava/lang/String;\n+  #130 = Class              #168          // java/lang/Double\n+  #131 = NameAndType        #83:#169      // toString:(D)Ljava/lang/String;\n+  #132 = Class              #170          // java/lang/Float\n+  #133 = NameAndType        #83:#171      // toString:(F)Ljava/lang/String;\n+  #134 = Class              #172          // java/lang/String\n+  #135 = NameAndType        #173:#174     // valueOf:(C)Ljava/lang/String;\n+  #136 = Utf8               false\n+  #137 = Utf8               true\n+  #138 = Utf8               SimpleElementValue class does not know how to stringify type\n+  #139 = NameAndType        #81:#78       // stringifyValue:()Ljava/lang/String;\n+  #140 = Utf8               org/apache/bcel/classfile/SimpleElementValue\n+  #141 = Utf8               java/io/IOException\n+  #142 = Utf8               org/apache/bcel/classfile/ConstantPool\n+  #143 = Utf8               (ILorg/apache/bcel/classfile/ConstantPool;)V\n+  #144 = Utf8               getType\n+  #145 = Utf8               java/io/DataOutputStream\n+  #146 = Utf8               writeByte\n+  #147 = Utf8               writeShort\n+  #148 = Utf8               ()V\n+  #149 = Utf8               append\n+  #150 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #151 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #152 = Utf8               (Ljava/lang/String;)V\n+  #153 = Utf8               getConstantPool\n+  #154 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n+  #155 = Utf8               getConstant\n+  #156 = Utf8               (I)Lorg/apache/bcel/classfile/Constant;\n+  #157 = Utf8               getBytes\n+  #158 = Utf8               getConstantInteger\n+  #159 = Utf8               (I)Lorg/apache/bcel/classfile/ConstantInteger;\n+  #160 = Utf8               getConstantUtf8\n+  #161 = Utf8               (I)Lorg/apache/bcel/classfile/ConstantUtf8;\n+  #162 = Utf8               org/apache/bcel/classfile/ConstantUtf8\n+  #163 = Utf8               java/lang/Integer\n+  #164 = Utf8               (I)Ljava/lang/String;\n+  #165 = Utf8               (IBLjava/lang/Class;)Lorg/apache/bcel/classfile/Constant;\n+  #166 = Utf8               java/lang/Long\n+  #167 = Utf8               (J)Ljava/lang/String;\n+  #168 = Utf8               java/lang/Double\n+  #169 = Utf8               (D)Ljava/lang/String;\n+  #170 = Utf8               java/lang/Float\n+  #171 = Utf8               (F)Ljava/lang/String;\n+  #172 = Utf8               java/lang/String\n+  #173 = Utf8               valueOf\n+  #174 = Utf8               (C)Ljava/lang/String;\n {\n   private int index;\n     descriptor: I\n     flags: (0x0002) ACC_PRIVATE\n \n   public org.apache.bcel.classfile.SimpleElementValue(int, int, org.apache.bcel.classfile.ConstantPool);\n     descriptor: (IILorg/apache/bcel/classfile/ConstantPool;)V\n"}]}
