{"diffoscope-json-version": 1, "source1": "first/InnerClass.class", "source2": "second/InnerClass.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -81,29 +81,26 @@\n     \n     @Override\n     public String toString() {\n         return \"InnerClass(\" + this.innerClassIndex + \", \" + this.outerClassIndex + \", \" + this.innerNameIndex + \", \" + this.innerAccessFlags + \")\";\n     }\n     \n     public String toString(final ConstantPool constantPool) {\n-        String innerClassName = constantPool.getConstantString(this.innerClassIndex, (byte)7);\n-        innerClassName = Utility.compactClassName(innerClassName, false);\n-        String outerClassName;\n+        final String compactClassName = Utility.compactClassName(constantPool.getConstantString(this.innerClassIndex, (byte)7), false);\n+        String string;\n         if (this.outerClassIndex != 0) {\n-            outerClassName = constantPool.getConstantString(this.outerClassIndex, (byte)7);\n-            outerClassName = \" of class \" + Utility.compactClassName(outerClassName, false);\n+            string = \" of class \" + Utility.compactClassName(constantPool.getConstantString(this.outerClassIndex, (byte)7), false);\n         }\n         else {\n-            outerClassName = \"\";\n+            string = \"\";\n         }\n-        String innerName;\n+        String bytes;\n         if (this.innerNameIndex != 0) {\n-            innerName = constantPool.getConstantUtf8(this.innerNameIndex).getBytes();\n+            bytes = constantPool.getConstantUtf8(this.innerNameIndex).getBytes();\n         }\n         else {\n-            innerName = \"(anonymous)\";\n+            bytes = \"(anonymous)\";\n         }\n-        String access = Utility.accessToString(this.innerAccessFlags, true);\n-        access = (access.isEmpty() ? \"\" : (access + \" \"));\n-        return \"  \" + access + innerName + \"=class \" + innerClassName + outerClassName;\n+        final String accessToString = Utility.accessToString(this.innerAccessFlags, true);\n+        return \"  \" + (accessToString.isEmpty() ? \"\" : (accessToString + \" \")) + bytes + \"=class \" + compactClassName + string;\n     }\n }\n"}]}
