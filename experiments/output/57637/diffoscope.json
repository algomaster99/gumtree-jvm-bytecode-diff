{"diffoscope-json-version": 1, "source1": "first/CanReadFileFilter.class", "source2": "second/CanReadFileFilter.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -11,24 +11,24 @@\n public class CanReadFileFilter extends AbstractFileFilter implements Serializable\n {\n     public static final IOFileFilter CAN_READ;\n     public static final IOFileFilter CANNOT_READ;\n     public static final IOFileFilter READ_ONLY;\n     private static final long serialVersionUID = 3179904805251622989L;\n     \n+    static {\n+        CAN_READ = (IOFileFilter)new CanReadFileFilter();\n+        CANNOT_READ = CanReadFileFilter.CAN_READ.negate();\n+        READ_ONLY = CanReadFileFilter.CAN_READ.and(CanWriteFileFilter.CANNOT_WRITE);\n+    }\n+    \n     protected CanReadFileFilter() {\n     }\n     \n     public boolean accept(final File file) {\n         return file.canRead();\n     }\n     \n     public FileVisitResult accept(final Path file, final BasicFileAttributes attributes) {\n         return toFileVisitResult(Files.isReadable(file), file);\n     }\n-    \n-    static {\n-        CAN_READ = (IOFileFilter)new CanReadFileFilter();\n-        CANNOT_READ = CanReadFileFilter.CAN_READ.negate();\n-        READ_ONLY = CanReadFileFilter.CAN_READ.and(CanWriteFileFilter.CANNOT_WRITE);\n-    }\n }\n"}]}
