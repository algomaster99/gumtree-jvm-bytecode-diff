{"diffoscope-json-version": 1, "source1": "first/ZipArchiveOutputStream.class", "source2": "second/ZipArchiveOutputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -160,15 +160,15 @@\n         OutputStream o = null;\n         SeekableByteChannel _channel = null;\n         StreamCompressor _streamCompressor = null;\n         try {\n             _channel = Files.newByteChannel(file.toPath(), EnumSet.of(StandardOpenOption.CREATE, StandardOpenOption.WRITE, StandardOpenOption.READ, StandardOpenOption.TRUNCATE_EXISTING), (FileAttribute<?>[])new FileAttribute[0]);\n             _streamCompressor = StreamCompressor.create(_channel, this.def);\n         }\n-        catch (final IOException ex) {\n+        catch (final IOException e) {\n             IOUtils.closeQuietly((Closeable)_channel);\n             _channel = null;\n             o = new FileOutputStream(file);\n             _streamCompressor = StreamCompressor.create(o, this.def);\n         }\n         this.out = o;\n         this.channel = _channel;\n@@ -247,14 +247,15 @@\n         this.metaData.clear();\n         this.entries.clear();\n         this.streamCompressor.close();\n         this.finished = true;\n     }\n     \n     private void writeCentralDirectoryInChunks() throws IOException {\n+        final int NUM_PER_WRITE = 1000;\n         final ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream(70000);\n         int count = 0;\n         for (final ZipArchiveEntry ze : this.entries) {\n             byteArrayOutputStream.write(this.createCentralFileHeader(ze));\n             if (++count > 1000) {\n                 this.writeCounted(byteArrayOutputStream.toByteArray());\n                 byteArrayOutputStream.reset();\n"}]}
