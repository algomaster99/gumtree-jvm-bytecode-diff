{"diffoscope-json-version": 1, "source1": "first/IOConsumer.class", "source2": "second/IOConsumer.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -3,23 +3,23 @@\n \n import java.util.Objects;\n import java.io.IOException;\n \n @FunctionalInterface\n public interface IOConsumer<T>\n {\n-    public static final IOConsumer<?> NOOP_IO_CONSUMER = t -> {};\n+    public static final IOConsumer<?> NOOP_IO_CONSUMER = p0 -> {};\n     \n     default <T> IOConsumer<T> noop() {\n         return (IOConsumer<T>)IOConsumer.NOOP_IO_CONSUMER;\n     }\n     \n     void accept(final T p0) throws IOException;\n     \n-    default IOConsumer<T> andThen(final IOConsumer<? super T> after) {\n-        Objects.requireNonNull(after, \"after\");\n-        return t -> {\n-            this.accept(t);\n-            after.accept(t);\n+    default IOConsumer<T> andThen(final IOConsumer<? super T> obj) {\n+        Objects.requireNonNull(obj, \"after\");\n+        return o -> {\n+            this.accept(o);\n+            ioConsumer.accept(o);\n         };\n     }\n }\n"}]}
