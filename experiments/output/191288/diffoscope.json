{"diffoscope-json-version": 1, "source1": "first/TeeInputStream.class", "source2": "second/TeeInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,85 +1,85 @@\n-  SHA-256 checksum 83f4e060455886d637d611a2fcc1cf7180da05f2ef9f05b51a95acaee4eec466\n+  SHA-256 checksum 5230017b61394659f29ac36c5eefdfc301e0a2db83a9f40bc0a6d1894dabd38e\n   Compiled from \"TeeInputStream.java\"\n public class org.apache.commons.io.input.TeeInputStream extends org.apache.commons.io.input.ProxyInputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #13                         // org/apache/commons/io/input/TeeInputStream\n-  super_class: #14                        // org/apache/commons/io/input/ProxyInputStream\n+  this_class: #4                          // org/apache/commons/io/input/TeeInputStream\n+  super_class: #10                        // org/apache/commons/io/input/ProxyInputStream\n   interfaces: 0, fields: 2, methods: 6, attributes: 1\n Constant pool:\n-   #1 = Class              #48            // org/apache/commons/io/IOUtils\n-   #2 = Methodref          #13.#49        // org/apache/commons/io/input/TeeInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/io/OutputStream;Z)V\n-   #3 = Methodref          #14.#50        // org/apache/commons/io/input/ProxyInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #4 = Fieldref           #13.#51        // org/apache/commons/io/input/TeeInputStream.branch:Ljava/io/OutputStream;\n-   #5 = Fieldref           #13.#52        // org/apache/commons/io/input/TeeInputStream.closeBranch:Z\n-   #6 = Methodref          #14.#53        // org/apache/commons/io/input/ProxyInputStream.close:()V\n-   #7 = Methodref          #54.#53        // java/io/OutputStream.close:()V\n-   #8 = Methodref          #14.#55        // org/apache/commons/io/input/ProxyInputStream.read:()I\n-   #9 = Methodref          #54.#56        // java/io/OutputStream.write:(I)V\n-  #10 = Methodref          #14.#57        // org/apache/commons/io/input/ProxyInputStream.read:([BII)I\n-  #11 = Methodref          #54.#58        // java/io/OutputStream.write:([BII)V\n-  #12 = Methodref          #14.#59        // org/apache/commons/io/input/ProxyInputStream.read:([B)I\n-  #13 = Class              #60            // org/apache/commons/io/input/TeeInputStream\n-  #14 = Class              #61            // org/apache/commons/io/input/ProxyInputStream\n-  #15 = Utf8               branch\n-  #16 = Utf8               Ljava/io/OutputStream;\n-  #17 = Utf8               closeBranch\n-  #18 = Utf8               Z\n-  #19 = Utf8               <init>\n-  #20 = Utf8               (Ljava/io/InputStream;Ljava/io/OutputStream;)V\n-  #21 = Utf8               Code\n-  #22 = Utf8               LineNumberTable\n-  #23 = Utf8               LocalVariableTable\n-  #24 = Utf8               this\n-  #25 = Utf8               Lorg/apache/commons/io/input/TeeInputStream;\n-  #26 = Utf8               input\n-  #27 = Utf8               Ljava/io/InputStream;\n-  #28 = Utf8               (Ljava/io/InputStream;Ljava/io/OutputStream;Z)V\n-  #29 = Utf8               close\n-  #30 = Utf8               ()V\n-  #31 = Utf8               StackMapTable\n-  #32 = Class              #62            // java/lang/Throwable\n-  #33 = Utf8               Exceptions\n-  #34 = Class              #63            // java/io/IOException\n-  #35 = Utf8               read\n-  #36 = Utf8               ()I\n-  #37 = Utf8               ch\n-  #38 = Utf8               I\n+   #1 = Class              #2             // org/apache/commons/io/IOUtils\n+   #2 = Utf8               org/apache/commons/io/IOUtils\n+   #3 = Methodref          #4.#5          // org/apache/commons/io/input/TeeInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/io/OutputStream;Z)V\n+   #4 = Class              #6             // org/apache/commons/io/input/TeeInputStream\n+   #5 = NameAndType        #7:#8          // \"<init>\":(Ljava/io/InputStream;Ljava/io/OutputStream;Z)V\n+   #6 = Utf8               org/apache/commons/io/input/TeeInputStream\n+   #7 = Utf8               <init>\n+   #8 = Utf8               (Ljava/io/InputStream;Ljava/io/OutputStream;Z)V\n+   #9 = Methodref          #10.#11        // org/apache/commons/io/input/ProxyInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #10 = Class              #12            // org/apache/commons/io/input/ProxyInputStream\n+  #11 = NameAndType        #7:#13         // \"<init>\":(Ljava/io/InputStream;)V\n+  #12 = Utf8               org/apache/commons/io/input/ProxyInputStream\n+  #13 = Utf8               (Ljava/io/InputStream;)V\n+  #14 = Fieldref           #4.#15         // org/apache/commons/io/input/TeeInputStream.branch:Ljava/io/OutputStream;\n+  #15 = NameAndType        #16:#17        // branch:Ljava/io/OutputStream;\n+  #16 = Utf8               branch\n+  #17 = Utf8               Ljava/io/OutputStream;\n+  #18 = Fieldref           #4.#19         // org/apache/commons/io/input/TeeInputStream.closeBranch:Z\n+  #19 = NameAndType        #20:#21        // closeBranch:Z\n+  #20 = Utf8               closeBranch\n+  #21 = Utf8               Z\n+  #22 = Methodref          #10.#23        // org/apache/commons/io/input/ProxyInputStream.close:()V\n+  #23 = NameAndType        #24:#25        // close:()V\n+  #24 = Utf8               close\n+  #25 = Utf8               ()V\n+  #26 = Methodref          #27.#23        // java/io/OutputStream.close:()V\n+  #27 = Class              #28            // java/io/OutputStream\n+  #28 = Utf8               java/io/OutputStream\n+  #29 = Methodref          #10.#30        // org/apache/commons/io/input/ProxyInputStream.read:()I\n+  #30 = NameAndType        #31:#32        // read:()I\n+  #31 = Utf8               read\n+  #32 = Utf8               ()I\n+  #33 = Methodref          #27.#34        // java/io/OutputStream.write:(I)V\n+  #34 = NameAndType        #35:#36        // write:(I)V\n+  #35 = Utf8               write\n+  #36 = Utf8               (I)V\n+  #37 = Methodref          #10.#38        // org/apache/commons/io/input/ProxyInputStream.read:([BII)I\n+  #38 = NameAndType        #31:#39        // read:([BII)I\n   #39 = Utf8               ([BII)I\n-  #40 = Utf8               bts\n-  #41 = Utf8               [B\n-  #42 = Utf8               st\n-  #43 = Utf8               end\n-  #44 = Utf8               n\n+  #40 = Methodref          #27.#41        // java/io/OutputStream.write:([BII)V\n+  #41 = NameAndType        #35:#42        // write:([BII)V\n+  #42 = Utf8               ([BII)V\n+  #43 = Methodref          #10.#44        // org/apache/commons/io/input/ProxyInputStream.read:([B)I\n+  #44 = NameAndType        #31:#45        // read:([B)I\n   #45 = Utf8               ([B)I\n-  #46 = Utf8               SourceFile\n-  #47 = Utf8               TeeInputStream.java\n-  #48 = Utf8               org/apache/commons/io/IOUtils\n-  #49 = NameAndType        #19:#28        // \"<init>\":(Ljava/io/InputStream;Ljava/io/OutputStream;Z)V\n-  #50 = NameAndType        #19:#64        // \"<init>\":(Ljava/io/InputStream;)V\n-  #51 = NameAndType        #15:#16        // branch:Ljava/io/OutputStream;\n-  #52 = NameAndType        #17:#18        // closeBranch:Z\n-  #53 = NameAndType        #29:#30        // close:()V\n-  #54 = Class              #65            // java/io/OutputStream\n-  #55 = NameAndType        #35:#36        // read:()I\n-  #56 = NameAndType        #66:#67        // write:(I)V\n-  #57 = NameAndType        #35:#39        // read:([BII)I\n-  #58 = NameAndType        #66:#68        // write:([BII)V\n-  #59 = NameAndType        #35:#45        // read:([B)I\n-  #60 = Utf8               org/apache/commons/io/input/TeeInputStream\n-  #61 = Utf8               org/apache/commons/io/input/ProxyInputStream\n-  #62 = Utf8               java/lang/Throwable\n-  #63 = Utf8               java/io/IOException\n-  #64 = Utf8               (Ljava/io/InputStream;)V\n-  #65 = Utf8               java/io/OutputStream\n-  #66 = Utf8               write\n-  #67 = Utf8               (I)V\n-  #68 = Utf8               ([BII)V\n+  #46 = Utf8               (Ljava/io/InputStream;Ljava/io/OutputStream;)V\n+  #47 = Utf8               Code\n+  #48 = Utf8               LineNumberTable\n+  #49 = Utf8               LocalVariableTable\n+  #50 = Utf8               this\n+  #51 = Utf8               Lorg/apache/commons/io/input/TeeInputStream;\n+  #52 = Utf8               input\n+  #53 = Utf8               Ljava/io/InputStream;\n+  #54 = Utf8               StackMapTable\n+  #55 = Class              #56            // java/lang/Throwable\n+  #56 = Utf8               java/lang/Throwable\n+  #57 = Utf8               Exceptions\n+  #58 = Class              #59            // java/io/IOException\n+  #59 = Utf8               java/io/IOException\n+  #60 = Utf8               ch\n+  #61 = Utf8               I\n+  #62 = Utf8               bts\n+  #63 = Utf8               [B\n+  #64 = Utf8               st\n+  #65 = Utf8               end\n+  #66 = Utf8               n\n+  #67 = Utf8               SourceFile\n+  #68 = Utf8               TeeInputStream.java\n {\n   private final java.io.OutputStream branch;\n     descriptor: Ljava/io/OutputStream;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final boolean closeBranch;\n     descriptor: Z\n@@ -90,15 +90,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iconst_0\n-         4: invokespecial #2                  // Method \"<init>\":(Ljava/io/InputStream;Ljava/io/OutputStream;Z)V\n+         4: invokespecial #3                  // Method \"<init>\":(Ljava/io/InputStream;Ljava/io/OutputStream;Z)V\n          7: return\n       LineNumberTable:\n         line 62: 0\n         line 63: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/input/TeeInputStream;\n@@ -108,21 +108,21 @@\n   public org.apache.commons.io.input.TeeInputStream(java.io.InputStream, java.io.OutputStream, boolean);\n     descriptor: (Ljava/io/InputStream;Ljava/io/OutputStream;Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #3                  // Method org/apache/commons/io/input/ProxyInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+         2: invokespecial #9                  // Method org/apache/commons/io/input/ProxyInputStream.\"<init>\":(Ljava/io/InputStream;)V\n          5: aload_0\n          6: aload_2\n-         7: putfield      #4                  // Field branch:Ljava/io/OutputStream;\n+         7: putfield      #14                 // Field branch:Ljava/io/OutputStream;\n         10: aload_0\n         11: iload_3\n-        12: putfield      #5                  // Field closeBranch:Z\n+        12: putfield      #18                 // Field closeBranch:Z\n         15: return\n       LineNumberTable:\n         line 78: 0\n         line 79: 5\n         line 80: 10\n         line 81: 15\n       LocalVariableTable:\n@@ -134,29 +134,29 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #6                  // Method org/apache/commons/io/input/ProxyInputStream.close:()V\n+         1: invokespecial #22                 // Method org/apache/commons/io/input/ProxyInputStream.close:()V\n          4: aload_0\n-         5: getfield      #5                  // Field closeBranch:Z\n+         5: getfield      #18                 // Field closeBranch:Z\n          8: ifeq          38\n         11: aload_0\n-        12: getfield      #4                  // Field branch:Ljava/io/OutputStream;\n-        15: invokevirtual #7                  // Method java/io/OutputStream.close:()V\n+        12: getfield      #14                 // Field branch:Ljava/io/OutputStream;\n+        15: invokevirtual #26                 // Method java/io/OutputStream.close:()V\n         18: goto          38\n         21: astore_1\n         22: aload_0\n-        23: getfield      #5                  // Field closeBranch:Z\n+        23: getfield      #18                 // Field closeBranch:Z\n         26: ifeq          36\n         29: aload_0\n-        30: getfield      #4                  // Field branch:Ljava/io/OutputStream;\n-        33: invokevirtual #7                  // Method java/io/OutputStream.close:()V\n+        30: getfield      #14                 // Field branch:Ljava/io/OutputStream;\n+        33: invokevirtual #26                 // Method java/io/OutputStream.close:()V\n         36: aload_1\n         37: athrow\n         38: return\n       Exception table:\n          from    to  target type\n              0     4    21   any\n       LineNumberTable:\n@@ -183,23 +183,23 @@\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #8                  // Method org/apache/commons/io/input/ProxyInputStream.read:()I\n+         1: invokespecial #29                 // Method org/apache/commons/io/input/ProxyInputStream.read:()I\n          4: istore_1\n          5: iload_1\n          6: iconst_m1\n          7: if_icmpeq     18\n         10: aload_0\n-        11: getfield      #4                  // Field branch:Ljava/io/OutputStream;\n+        11: getfield      #14                 // Field branch:Ljava/io/OutputStream;\n         14: iload_1\n-        15: invokevirtual #9                  // Method java/io/OutputStream.write:(I)V\n+        15: invokevirtual #33                 // Method java/io/OutputStream.write:(I)V\n         18: iload_1\n         19: ireturn\n       LineNumberTable:\n         line 110: 0\n         line 111: 5\n         line 112: 10\n         line 114: 18\n@@ -219,25 +219,25 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokespecial #10                 // Method org/apache/commons/io/input/ProxyInputStream.read:([BII)I\n+         4: invokespecial #37                 // Method org/apache/commons/io/input/ProxyInputStream.read:([BII)I\n          7: istore        4\n          9: iload         4\n         11: iconst_m1\n         12: if_icmpeq     26\n         15: aload_0\n-        16: getfield      #4                  // Field branch:Ljava/io/OutputStream;\n+        16: getfield      #14                 // Field branch:Ljava/io/OutputStream;\n         19: aload_1\n         20: iload_2\n         21: iload         4\n-        23: invokevirtual #11                 // Method java/io/OutputStream.write:([BII)V\n+        23: invokevirtual #40                 // Method java/io/OutputStream.write:([BII)V\n         26: iload         4\n         28: ireturn\n       LineNumberTable:\n         line 129: 0\n         line 130: 9\n         line 131: 15\n         line 133: 26\n@@ -258,25 +258,25 @@\n   public int read(byte[]) throws java.io.IOException;\n     descriptor: ([B)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #12                 // Method org/apache/commons/io/input/ProxyInputStream.read:([B)I\n+         2: invokespecial #43                 // Method org/apache/commons/io/input/ProxyInputStream.read:([B)I\n          5: istore_2\n          6: iload_2\n          7: iconst_m1\n          8: if_icmpeq     21\n         11: aload_0\n-        12: getfield      #4                  // Field branch:Ljava/io/OutputStream;\n+        12: getfield      #14                 // Field branch:Ljava/io/OutputStream;\n         15: aload_1\n         16: iconst_0\n         17: iload_2\n-        18: invokevirtual #11                 // Method java/io/OutputStream.write:([BII)V\n+        18: invokevirtual #40                 // Method java/io/OutputStream.write:([BII)V\n         21: iload_2\n         22: ireturn\n       LineNumberTable:\n         line 146: 0\n         line 147: 6\n         line 148: 11\n         line 150: 21\n"}]}
