{"diffoscope-json-version": 1, "source1": "first/ProxyOutputStream.class", "source2": "second/ProxyOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,32 +1,32 @@\n-  SHA-256 checksum e92822e6a2001360e70b3194ac2da3ddd66fbebb80333764b70e0bd95b901ff3\n+  SHA-256 checksum a7a0a7678ce52d49468485a7e7c824959d46c8d0880d084dc5c98cd4403d59bb\n   Compiled from \"ProxyOutputStream.java\"\n public class org.apache.commons.io.output.ProxyOutputStream extends java.io.FilterOutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #14                         // org/apache/commons/io/output/ProxyOutputStream\n   super_class: #15                        // java/io/FilterOutputStream\n   interfaces: 0, fields: 0, methods: 9, attributes: 3\n Constant pool:\n-   #1 = Methodref          #15.#51        // java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #2 = Methodref          #14.#52        // org/apache/commons/io/output/ProxyOutputStream.beforeWrite:(I)V\n-   #3 = Fieldref           #14.#53        // org/apache/commons/io/output/ProxyOutputStream.out:Ljava/io/OutputStream;\n-   #4 = Methodref          #54.#55        // java/io/OutputStream.write:(I)V\n-   #5 = Methodref          #14.#56        // org/apache/commons/io/output/ProxyOutputStream.afterWrite:(I)V\n-   #6 = Class              #57            // java/io/IOException\n-   #7 = Methodref          #14.#58        // org/apache/commons/io/output/ProxyOutputStream.handleIOException:(Ljava/io/IOException;)V\n-   #8 = Methodref          #59.#60        // org/apache/commons/io/IOUtils.length:([B)I\n-   #9 = Methodref          #54.#61        // java/io/OutputStream.write:([B)V\n-  #10 = Methodref          #54.#62        // java/io/OutputStream.write:([BII)V\n-  #11 = Methodref          #54.#63        // java/io/OutputStream.flush:()V\n-  #12 = InvokeDynamic      #0:#69         // #0:accept:(Lorg/apache/commons/io/output/ProxyOutputStream;)Lorg/apache/commons/io/function/IOConsumer;\n-  #13 = Methodref          #59.#70        // org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n-  #14 = Class              #71            // org/apache/commons/io/output/ProxyOutputStream\n-  #15 = Class              #72            // java/io/FilterOutputStream\n+   #1 = Methodref          #15.#50        // java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+   #2 = Methodref          #14.#51        // org/apache/commons/io/output/ProxyOutputStream.beforeWrite:(I)V\n+   #3 = Fieldref           #14.#52        // org/apache/commons/io/output/ProxyOutputStream.out:Ljava/io/OutputStream;\n+   #4 = Methodref          #53.#54        // java/io/OutputStream.write:(I)V\n+   #5 = Methodref          #14.#55        // org/apache/commons/io/output/ProxyOutputStream.afterWrite:(I)V\n+   #6 = Class              #56            // java/io/IOException\n+   #7 = Methodref          #14.#57        // org/apache/commons/io/output/ProxyOutputStream.handleIOException:(Ljava/io/IOException;)V\n+   #8 = Methodref          #58.#59        // org/apache/commons/io/IOUtils.length:([B)I\n+   #9 = Methodref          #53.#60        // java/io/OutputStream.write:([B)V\n+  #10 = Methodref          #53.#61        // java/io/OutputStream.write:([BII)V\n+  #11 = Methodref          #53.#62        // java/io/OutputStream.flush:()V\n+  #12 = InvokeDynamic      #0:#68         // #0:accept:(Lorg/apache/commons/io/output/ProxyOutputStream;)Lorg/apache/commons/io/function/IOConsumer;\n+  #13 = Methodref          #58.#69        // org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+  #14 = Class              #70            // org/apache/commons/io/output/ProxyOutputStream\n+  #15 = Class              #71            // java/io/FilterOutputStream\n   #16 = Utf8               <init>\n   #17 = Utf8               (Ljava/io/OutputStream;)V\n   #18 = Utf8               Code\n   #19 = Utf8               LineNumberTable\n   #20 = Utf8               LocalVariableTable\n   #21 = Utf8               this\n   #22 = Utf8               Lorg/apache/commons/io/output/ProxyOutputStream;\n@@ -35,76 +35,75 @@\n   #25 = Utf8               write\n   #26 = Utf8               (I)V\n   #27 = Utf8               e\n   #28 = Utf8               Ljava/io/IOException;\n   #29 = Utf8               idx\n   #30 = Utf8               I\n   #31 = Utf8               StackMapTable\n-  #32 = Class              #57            // java/io/IOException\n-  #33 = Utf8               Exceptions\n-  #34 = Utf8               ([B)V\n-  #35 = Utf8               len\n-  #36 = Utf8               bts\n-  #37 = Utf8               [B\n-  #38 = Utf8               ([BII)V\n-  #39 = Utf8               st\n-  #40 = Utf8               end\n-  #41 = Utf8               flush\n-  #42 = Utf8               ()V\n-  #43 = Utf8               close\n-  #44 = Utf8               beforeWrite\n-  #45 = Utf8               n\n-  #46 = Utf8               afterWrite\n-  #47 = Utf8               handleIOException\n-  #48 = Utf8               (Ljava/io/IOException;)V\n-  #49 = Utf8               SourceFile\n-  #50 = Utf8               ProxyOutputStream.java\n-  #51 = NameAndType        #16:#17        // \"<init>\":(Ljava/io/OutputStream;)V\n-  #52 = NameAndType        #44:#26        // beforeWrite:(I)V\n-  #53 = NameAndType        #73:#24        // out:Ljava/io/OutputStream;\n-  #54 = Class              #74            // java/io/OutputStream\n-  #55 = NameAndType        #25:#26        // write:(I)V\n-  #56 = NameAndType        #46:#26        // afterWrite:(I)V\n-  #57 = Utf8               java/io/IOException\n-  #58 = NameAndType        #47:#48        // handleIOException:(Ljava/io/IOException;)V\n-  #59 = Class              #75            // org/apache/commons/io/IOUtils\n-  #60 = NameAndType        #76:#77        // length:([B)I\n-  #61 = NameAndType        #25:#34        // write:([B)V\n-  #62 = NameAndType        #25:#38        // write:([BII)V\n-  #63 = NameAndType        #41:#42        // flush:()V\n-  #64 = Utf8               BootstrapMethods\n-  #65 = MethodHandle       6:#78          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #66 = MethodType         #79            //  (Ljava/lang/Object;)V\n-  #67 = MethodHandle       5:#7           // REF_invokeVirtual org/apache/commons/io/output/ProxyOutputStream.handleIOException:(Ljava/io/IOException;)V\n-  #68 = MethodType         #48            //  (Ljava/io/IOException;)V\n-  #69 = NameAndType        #80:#81        // accept:(Lorg/apache/commons/io/output/ProxyOutputStream;)Lorg/apache/commons/io/function/IOConsumer;\n-  #70 = NameAndType        #43:#82        // close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n-  #71 = Utf8               org/apache/commons/io/output/ProxyOutputStream\n-  #72 = Utf8               java/io/FilterOutputStream\n-  #73 = Utf8               out\n-  #74 = Utf8               java/io/OutputStream\n-  #75 = Utf8               org/apache/commons/io/IOUtils\n-  #76 = Utf8               length\n-  #77 = Utf8               ([B)I\n-  #78 = Methodref          #83.#84        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #79 = Utf8               (Ljava/lang/Object;)V\n-  #80 = Utf8               accept\n-  #81 = Utf8               (Lorg/apache/commons/io/output/ProxyOutputStream;)Lorg/apache/commons/io/function/IOConsumer;\n-  #82 = Utf8               (Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n-  #83 = Class              #85            // java/lang/invoke/LambdaMetafactory\n-  #84 = NameAndType        #86:#90        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #85 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #86 = Utf8               metafactory\n-  #87 = Class              #92            // java/lang/invoke/MethodHandles$Lookup\n-  #88 = Utf8               Lookup\n-  #89 = Utf8               InnerClasses\n-  #90 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #91 = Class              #93            // java/lang/invoke/MethodHandles\n-  #92 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #93 = Utf8               java/lang/invoke/MethodHandles\n+  #32 = Utf8               Exceptions\n+  #33 = Utf8               ([B)V\n+  #34 = Utf8               len\n+  #35 = Utf8               bts\n+  #36 = Utf8               [B\n+  #37 = Utf8               ([BII)V\n+  #38 = Utf8               st\n+  #39 = Utf8               end\n+  #40 = Utf8               flush\n+  #41 = Utf8               ()V\n+  #42 = Utf8               close\n+  #43 = Utf8               beforeWrite\n+  #44 = Utf8               n\n+  #45 = Utf8               afterWrite\n+  #46 = Utf8               handleIOException\n+  #47 = Utf8               (Ljava/io/IOException;)V\n+  #48 = Utf8               SourceFile\n+  #49 = Utf8               ProxyOutputStream.java\n+  #50 = NameAndType        #16:#17        // \"<init>\":(Ljava/io/OutputStream;)V\n+  #51 = NameAndType        #43:#26        // beforeWrite:(I)V\n+  #52 = NameAndType        #72:#24        // out:Ljava/io/OutputStream;\n+  #53 = Class              #73            // java/io/OutputStream\n+  #54 = NameAndType        #25:#26        // write:(I)V\n+  #55 = NameAndType        #45:#26        // afterWrite:(I)V\n+  #56 = Utf8               java/io/IOException\n+  #57 = NameAndType        #46:#47        // handleIOException:(Ljava/io/IOException;)V\n+  #58 = Class              #74            // org/apache/commons/io/IOUtils\n+  #59 = NameAndType        #75:#76        // length:([B)I\n+  #60 = NameAndType        #25:#33        // write:([B)V\n+  #61 = NameAndType        #25:#37        // write:([BII)V\n+  #62 = NameAndType        #40:#41        // flush:()V\n+  #63 = Utf8               BootstrapMethods\n+  #64 = MethodHandle       6:#77          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #65 = MethodType         #78            //  (Ljava/lang/Object;)V\n+  #66 = MethodHandle       5:#7           // REF_invokeVirtual org/apache/commons/io/output/ProxyOutputStream.handleIOException:(Ljava/io/IOException;)V\n+  #67 = MethodType         #47            //  (Ljava/io/IOException;)V\n+  #68 = NameAndType        #79:#80        // accept:(Lorg/apache/commons/io/output/ProxyOutputStream;)Lorg/apache/commons/io/function/IOConsumer;\n+  #69 = NameAndType        #42:#81        // close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+  #70 = Utf8               org/apache/commons/io/output/ProxyOutputStream\n+  #71 = Utf8               java/io/FilterOutputStream\n+  #72 = Utf8               out\n+  #73 = Utf8               java/io/OutputStream\n+  #74 = Utf8               org/apache/commons/io/IOUtils\n+  #75 = Utf8               length\n+  #76 = Utf8               ([B)I\n+  #77 = Methodref          #82.#83        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #78 = Utf8               (Ljava/lang/Object;)V\n+  #79 = Utf8               accept\n+  #80 = Utf8               (Lorg/apache/commons/io/output/ProxyOutputStream;)Lorg/apache/commons/io/function/IOConsumer;\n+  #81 = Utf8               (Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+  #82 = Class              #84            // java/lang/invoke/LambdaMetafactory\n+  #83 = NameAndType        #85:#89        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #84 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #85 = Utf8               metafactory\n+  #86 = Class              #91            // java/lang/invoke/MethodHandles$Lookup\n+  #87 = Utf8               Lookup\n+  #88 = Utf8               InnerClasses\n+  #89 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #90 = Class              #92            // java/lang/invoke/MethodHandles\n+  #91 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #92 = Utf8               java/lang/invoke/MethodHandles\n {\n   public org.apache.commons.io.output.ProxyOutputStream(java.io.OutputStream);\n     descriptor: (Ljava/io/OutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n@@ -358,14 +357,14 @@\n             0       2     0  this   Lorg/apache/commons/io/output/ProxyOutputStream;\n             0       2     1     e   Ljava/io/IOException;\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"ProxyOutputStream.java\"\n InnerClasses:\n-  public static final #88= #87 of #91;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  public static final #87= #86 of #90;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #65 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #64 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #66 (Ljava/lang/Object;)V\n-      #67 REF_invokeVirtual org/apache/commons/io/output/ProxyOutputStream.handleIOException:(Ljava/io/IOException;)V\n-      #68 (Ljava/io/IOException;)V\n+      #65 (Ljava/lang/Object;)V\n+      #66 REF_invokeVirtual org/apache/commons/io/output/ProxyOutputStream.handleIOException:(Ljava/io/IOException;)V\n+      #67 (Ljava/io/IOException;)V\n"}]}
