{"diffoscope-json-version": 1, "source1": "first/FileBasedScatterGatherBackingStore.class", "source2": "second/FileBasedScatterGatherBackingStore.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,102 +1,99 @@\n-  SHA-256 checksum c44aa46150792d0bd4a3e8d511937732aefd73589502e0d190b1130bf0974ebe\n+  SHA-256 checksum e68d7e8a1aafb2a9b66cde9f117be5cb99ada688a3c279959261b27382ce859a\n   Compiled from \"FileBasedScatterGatherBackingStore.java\"\n public class org.apache.commons.compress.parallel.FileBasedScatterGatherBackingStore implements org.apache.commons.compress.parallel.ScatterGatherBackingStore\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #18                         // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n   super_class: #19                        // java/lang/Object\n   interfaces: 1, fields: 3, methods: 6, attributes: 1\n Constant pool:\n-   #1 = Methodref          #48.#49        // java/io/File.toPath:()Ljava/nio/file/Path;\n-   #2 = Methodref          #18.#50        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.\"<init>\":(Ljava/nio/file/Path;)V\n-   #3 = Methodref          #19.#51        // java/lang/Object.\"<init>\":()V\n-   #4 = Fieldref           #18.#52        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.target:Ljava/nio/file/Path;\n-   #5 = Class              #53            // java/nio/file/OpenOption\n-   #6 = Methodref          #54.#55        // java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n-   #7 = Fieldref           #18.#56        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.outputStream:Ljava/io/OutputStream;\n-   #8 = Class              #57            // java/io/FileNotFoundException\n-   #9 = Class              #58            // java/io/IOException\n-  #10 = Class              #59            // java/io/UncheckedIOException\n-  #11 = Methodref          #10.#60        // java/io/UncheckedIOException.\"<init>\":(Ljava/io/IOException;)V\n-  #12 = Methodref          #18.#61        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.closeForWriting:()V\n-  #13 = Methodref          #54.#62        // java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n-  #14 = Fieldref           #18.#63        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.closed:Z\n-  #15 = Methodref          #64.#65        // java/io/OutputStream.close:()V\n-  #16 = Methodref          #54.#66        // java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-  #17 = Methodref          #64.#67        // java/io/OutputStream.write:([BII)V\n-  #18 = Class              #68            // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n-  #19 = Class              #69            // java/lang/Object\n-  #20 = Class              #70            // org/apache/commons/compress/parallel/ScatterGatherBackingStore\n+   #1 = Methodref          #45.#46        // java/io/File.toPath:()Ljava/nio/file/Path;\n+   #2 = Methodref          #18.#47        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.\"<init>\":(Ljava/nio/file/Path;)V\n+   #3 = Methodref          #19.#48        // java/lang/Object.\"<init>\":()V\n+   #4 = Fieldref           #18.#49        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.target:Ljava/nio/file/Path;\n+   #5 = Class              #50            // java/nio/file/OpenOption\n+   #6 = Methodref          #51.#52        // java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+   #7 = Fieldref           #18.#53        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.outputStream:Ljava/io/OutputStream;\n+   #8 = Class              #54            // java/io/FileNotFoundException\n+   #9 = Class              #55            // java/io/IOException\n+  #10 = Class              #56            // java/io/UncheckedIOException\n+  #11 = Methodref          #10.#57        // java/io/UncheckedIOException.\"<init>\":(Ljava/io/IOException;)V\n+  #12 = Methodref          #18.#58        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.closeForWriting:()V\n+  #13 = Methodref          #51.#59        // java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n+  #14 = Fieldref           #18.#60        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.closed:Z\n+  #15 = Methodref          #61.#62        // java/io/OutputStream.close:()V\n+  #16 = Methodref          #51.#63        // java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+  #17 = Methodref          #61.#64        // java/io/OutputStream.write:([BII)V\n+  #18 = Class              #65            // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n+  #19 = Class              #66            // java/lang/Object\n+  #20 = Class              #67            // org/apache/commons/compress/parallel/ScatterGatherBackingStore\n   #21 = Utf8               target\n   #22 = Utf8               Ljava/nio/file/Path;\n   #23 = Utf8               outputStream\n   #24 = Utf8               Ljava/io/OutputStream;\n   #25 = Utf8               closed\n   #26 = Utf8               Z\n   #27 = Utf8               <init>\n   #28 = Utf8               (Ljava/io/File;)V\n   #29 = Utf8               Code\n   #30 = Utf8               LineNumberTable\n   #31 = Utf8               Exceptions\n   #32 = Utf8               (Ljava/nio/file/Path;)V\n   #33 = Utf8               StackMapTable\n-  #34 = Class              #68            // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n-  #35 = Class              #71            // java/nio/file/Path\n-  #36 = Class              #57            // java/io/FileNotFoundException\n-  #37 = Class              #58            // java/io/IOException\n-  #38 = Utf8               close\n-  #39 = Utf8               ()V\n-  #40 = Class              #72            // java/lang/Throwable\n-  #41 = Utf8               closeForWriting\n-  #42 = Utf8               getInputStream\n-  #43 = Utf8               ()Ljava/io/InputStream;\n-  #44 = Utf8               writeOut\n-  #45 = Utf8               ([BII)V\n-  #46 = Utf8               SourceFile\n-  #47 = Utf8               FileBasedScatterGatherBackingStore.java\n-  #48 = Class              #73            // java/io/File\n-  #49 = NameAndType        #74:#75        // toPath:()Ljava/nio/file/Path;\n-  #50 = NameAndType        #27:#32        // \"<init>\":(Ljava/nio/file/Path;)V\n-  #51 = NameAndType        #27:#39        // \"<init>\":()V\n-  #52 = NameAndType        #21:#22        // target:Ljava/nio/file/Path;\n-  #53 = Utf8               java/nio/file/OpenOption\n-  #54 = Class              #76            // java/nio/file/Files\n-  #55 = NameAndType        #77:#78        // newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n-  #56 = NameAndType        #23:#24        // outputStream:Ljava/io/OutputStream;\n-  #57 = Utf8               java/io/FileNotFoundException\n-  #58 = Utf8               java/io/IOException\n-  #59 = Utf8               java/io/UncheckedIOException\n-  #60 = NameAndType        #27:#79        // \"<init>\":(Ljava/io/IOException;)V\n-  #61 = NameAndType        #41:#39        // closeForWriting:()V\n-  #62 = NameAndType        #80:#81        // deleteIfExists:(Ljava/nio/file/Path;)Z\n-  #63 = NameAndType        #25:#26        // closed:Z\n-  #64 = Class              #82            // java/io/OutputStream\n-  #65 = NameAndType        #38:#39        // close:()V\n-  #66 = NameAndType        #83:#84        // newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-  #67 = NameAndType        #85:#45        // write:([BII)V\n-  #68 = Utf8               org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n-  #69 = Utf8               java/lang/Object\n-  #70 = Utf8               org/apache/commons/compress/parallel/ScatterGatherBackingStore\n-  #71 = Utf8               java/nio/file/Path\n-  #72 = Utf8               java/lang/Throwable\n-  #73 = Utf8               java/io/File\n-  #74 = Utf8               toPath\n-  #75 = Utf8               ()Ljava/nio/file/Path;\n-  #76 = Utf8               java/nio/file/Files\n-  #77 = Utf8               newOutputStream\n-  #78 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n-  #79 = Utf8               (Ljava/io/IOException;)V\n-  #80 = Utf8               deleteIfExists\n-  #81 = Utf8               (Ljava/nio/file/Path;)Z\n-  #82 = Utf8               java/io/OutputStream\n-  #83 = Utf8               newInputStream\n-  #84 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-  #85 = Utf8               write\n+  #34 = Class              #68            // java/nio/file/Path\n+  #35 = Utf8               close\n+  #36 = Utf8               ()V\n+  #37 = Class              #69            // java/lang/Throwable\n+  #38 = Utf8               closeForWriting\n+  #39 = Utf8               getInputStream\n+  #40 = Utf8               ()Ljava/io/InputStream;\n+  #41 = Utf8               writeOut\n+  #42 = Utf8               ([BII)V\n+  #43 = Utf8               SourceFile\n+  #44 = Utf8               FileBasedScatterGatherBackingStore.java\n+  #45 = Class              #70            // java/io/File\n+  #46 = NameAndType        #71:#72        // toPath:()Ljava/nio/file/Path;\n+  #47 = NameAndType        #27:#32        // \"<init>\":(Ljava/nio/file/Path;)V\n+  #48 = NameAndType        #27:#36        // \"<init>\":()V\n+  #49 = NameAndType        #21:#22        // target:Ljava/nio/file/Path;\n+  #50 = Utf8               java/nio/file/OpenOption\n+  #51 = Class              #73            // java/nio/file/Files\n+  #52 = NameAndType        #74:#75        // newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+  #53 = NameAndType        #23:#24        // outputStream:Ljava/io/OutputStream;\n+  #54 = Utf8               java/io/FileNotFoundException\n+  #55 = Utf8               java/io/IOException\n+  #56 = Utf8               java/io/UncheckedIOException\n+  #57 = NameAndType        #27:#76        // \"<init>\":(Ljava/io/IOException;)V\n+  #58 = NameAndType        #38:#36        // closeForWriting:()V\n+  #59 = NameAndType        #77:#78        // deleteIfExists:(Ljava/nio/file/Path;)Z\n+  #60 = NameAndType        #25:#26        // closed:Z\n+  #61 = Class              #79            // java/io/OutputStream\n+  #62 = NameAndType        #35:#36        // close:()V\n+  #63 = NameAndType        #80:#81        // newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+  #64 = NameAndType        #82:#42        // write:([BII)V\n+  #65 = Utf8               org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n+  #66 = Utf8               java/lang/Object\n+  #67 = Utf8               org/apache/commons/compress/parallel/ScatterGatherBackingStore\n+  #68 = Utf8               java/nio/file/Path\n+  #69 = Utf8               java/lang/Throwable\n+  #70 = Utf8               java/io/File\n+  #71 = Utf8               toPath\n+  #72 = Utf8               ()Ljava/nio/file/Path;\n+  #73 = Utf8               java/nio/file/Files\n+  #74 = Utf8               newOutputStream\n+  #75 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+  #76 = Utf8               (Ljava/io/IOException;)V\n+  #77 = Utf8               deleteIfExists\n+  #78 = Utf8               (Ljava/nio/file/Path;)Z\n+  #79 = Utf8               java/io/OutputStream\n+  #80 = Utf8               newInputStream\n+  #81 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+  #82 = Utf8               write\n {\n   private final java.nio.file.Path target;\n     descriptor: Ljava/nio/file/Path;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final java.io.OutputStream outputStream;\n     descriptor: Ljava/io/OutputStream;\n"}]}
