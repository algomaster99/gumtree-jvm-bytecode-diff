{"diffoscope-json-version": 1, "source1": "first/AccumulatorPathVisitor.class", "source2": "second/AccumulatorPathVisitor.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,150 +1,148 @@\n-  SHA-256 checksum ba830117dce23a1e7304bb5332f1387ed8546b99beea47c3c2f41184adb8e4cf\n+  SHA-256 checksum ab1f6440ad687b51c27292c8cb542ded7b11fae8c9d9bba9033c0031743497a9\n   Compiled from \"AccumulatorPathVisitor.java\"\n public class org.apache.commons.io.file.AccumulatorPathVisitor extends org.apache.commons.io.file.CountingPathVisitor\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/io/file/AccumulatorPathVisitor\n   super_class: #25                        // org/apache/commons/io/file/CountingPathVisitor\n   interfaces: 0, fields: 2, methods: 11, attributes: 2\n Constant pool:\n-    #1 = Class              #85           // org/apache/commons/io/file/AccumulatorPathVisitor\n-    #2 = Methodref          #86.#87       // org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #3 = Methodref          #1.#88        // org/apache/commons/io/file/AccumulatorPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-    #4 = Methodref          #86.#89       // org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #5 = Methodref          #25.#88       // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-    #6 = Class              #90           // java/util/ArrayList\n-    #7 = Methodref          #6.#91        // java/util/ArrayList.\"<init>\":()V\n-    #8 = Fieldref           #1.#92        // org/apache/commons/io/file/AccumulatorPathVisitor.dirList:Ljava/util/List;\n-    #9 = Fieldref           #1.#93        // org/apache/commons/io/file/AccumulatorPathVisitor.fileList:Ljava/util/List;\n-   #10 = Methodref          #25.#94       // org/apache/commons/io/file/CountingPathVisitor.equals:(Ljava/lang/Object;)Z\n-   #11 = Methodref          #95.#96       // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #12 = Methodref          #25.#97       // org/apache/commons/io/file/CountingPathVisitor.hashCode:()I\n-   #13 = Class              #98           // java/lang/Object\n-   #14 = Methodref          #95.#99       // java/util/Objects.hash:([Ljava/lang/Object;)I\n-   #15 = Methodref          #1.#100       // org/apache/commons/io/file/AccumulatorPathVisitor.getDirList:()Ljava/util/List;\n-   #16 = Methodref          #101.#102     // org/apache/commons/io/file/PathUtils.relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n-   #17 = Methodref          #1.#103       // org/apache/commons/io/file/AccumulatorPathVisitor.getFileList:()Ljava/util/List;\n-   #18 = Class              #104          // java/nio/file/LinkOption\n-   #19 = Methodref          #105.#106     // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #20 = InterfaceMethodref #23.#107      // java/nio/file/Path.normalize:()Ljava/nio/file/Path;\n-   #21 = InterfaceMethodref #108.#109     // java/util/List.add:(Ljava/lang/Object;)Z\n-   #22 = Methodref          #25.#110      // org/apache/commons/io/file/CountingPathVisitor.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #23 = Class              #111          // java/nio/file/Path\n-   #24 = Methodref          #1.#110       // org/apache/commons/io/file/AccumulatorPathVisitor.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #25 = Class              #112          // org/apache/commons/io/file/CountingPathVisitor\n+    #1 = Class              #84           // org/apache/commons/io/file/AccumulatorPathVisitor\n+    #2 = Methodref          #85.#86       // org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #3 = Methodref          #1.#87        // org/apache/commons/io/file/AccumulatorPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+    #4 = Methodref          #85.#88       // org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #5 = Methodref          #25.#87       // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+    #6 = Class              #89           // java/util/ArrayList\n+    #7 = Methodref          #6.#90        // java/util/ArrayList.\"<init>\":()V\n+    #8 = Fieldref           #1.#91        // org/apache/commons/io/file/AccumulatorPathVisitor.dirList:Ljava/util/List;\n+    #9 = Fieldref           #1.#92        // org/apache/commons/io/file/AccumulatorPathVisitor.fileList:Ljava/util/List;\n+   #10 = Methodref          #25.#93       // org/apache/commons/io/file/CountingPathVisitor.equals:(Ljava/lang/Object;)Z\n+   #11 = Methodref          #94.#95       // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #12 = Methodref          #25.#96       // org/apache/commons/io/file/CountingPathVisitor.hashCode:()I\n+   #13 = Class              #97           // java/lang/Object\n+   #14 = Methodref          #94.#98       // java/util/Objects.hash:([Ljava/lang/Object;)I\n+   #15 = Methodref          #1.#99        // org/apache/commons/io/file/AccumulatorPathVisitor.getDirList:()Ljava/util/List;\n+   #16 = Methodref          #100.#101     // org/apache/commons/io/file/PathUtils.relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+   #17 = Methodref          #1.#102       // org/apache/commons/io/file/AccumulatorPathVisitor.getFileList:()Ljava/util/List;\n+   #18 = Class              #103          // java/nio/file/LinkOption\n+   #19 = Methodref          #104.#105     // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #20 = InterfaceMethodref #23.#106      // java/nio/file/Path.normalize:()Ljava/nio/file/Path;\n+   #21 = InterfaceMethodref #78.#107      // java/util/List.add:(Ljava/lang/Object;)Z\n+   #22 = Methodref          #25.#108      // org/apache/commons/io/file/CountingPathVisitor.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #23 = Class              #109          // java/nio/file/Path\n+   #24 = Methodref          #1.#108       // org/apache/commons/io/file/AccumulatorPathVisitor.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #25 = Class              #110          // org/apache/commons/io/file/CountingPathVisitor\n    #26 = Utf8               dirList\n    #27 = Utf8               Ljava/util/List;\n    #28 = Utf8               Signature\n    #29 = Utf8               Ljava/util/List<Ljava/nio/file/Path;>;\n    #30 = Utf8               fileList\n    #31 = Utf8               withBigIntegerCounters\n    #32 = Utf8               ()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n    #33 = Utf8               Code\n    #34 = Utf8               LineNumberTable\n    #35 = Utf8               withLongCounters\n    #36 = Utf8               <init>\n-   #37 = Class              #113          // org/apache/commons/io/file/Counters$PathCounters\n+   #37 = Class              #111          // org/apache/commons/io/file/Counters$PathCounters\n    #38 = Utf8               PathCounters\n    #39 = Utf8               InnerClasses\n    #40 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;)V\n    #41 = Utf8               LocalVariableTable\n    #42 = Utf8               this\n    #43 = Utf8               Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n    #44 = Utf8               pathCounter\n    #45 = Utf8               Lorg/apache/commons/io/file/Counters$PathCounters;\n    #46 = Utf8               equals\n    #47 = Utf8               (Ljava/lang/Object;)Z\n    #48 = Utf8               obj\n    #49 = Utf8               Ljava/lang/Object;\n    #50 = Utf8               other\n    #51 = Utf8               StackMapTable\n-   #52 = Class              #85           // org/apache/commons/io/file/AccumulatorPathVisitor\n-   #53 = Utf8               getDirList\n-   #54 = Utf8               ()Ljava/util/List;\n-   #55 = Utf8               ()Ljava/util/List<Ljava/nio/file/Path;>;\n-   #56 = Utf8               getFileList\n-   #57 = Utf8               hashCode\n-   #58 = Utf8               ()I\n-   #59 = Utf8               prime\n-   #60 = Utf8               I\n-   #61 = Utf8               result\n-   #62 = Utf8               relativizeDirectories\n-   #63 = Utf8               (Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n-   #64 = Utf8               parent\n-   #65 = Utf8               Ljava/nio/file/Path;\n-   #66 = Utf8               sort\n-   #67 = Utf8               Z\n-   #68 = Utf8               comparator\n-   #69 = Utf8               Ljava/util/Comparator;\n-   #70 = Utf8               LocalVariableTypeTable\n-   #71 = Utf8               Ljava/util/Comparator<-Ljava/nio/file/Path;>;\n-   #72 = Utf8               (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n-   #73 = Utf8               relativizeFiles\n-   #74 = Utf8               visitFile\n-   #75 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #76 = Utf8               file\n-   #77 = Utf8               attributes\n-   #78 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n-   #79 = Class              #114          // java/util/List\n-   #80 = Utf8               Exceptions\n-   #81 = Class              #115          // java/io/IOException\n-   #82 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #83 = Utf8               SourceFile\n-   #84 = Utf8               AccumulatorPathVisitor.java\n-   #85 = Utf8               org/apache/commons/io/file/AccumulatorPathVisitor\n-   #86 = Class              #116          // org/apache/commons/io/file/Counters\n-   #87 = NameAndType        #117:#118     // bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #88 = NameAndType        #36:#40       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-   #89 = NameAndType        #119:#118     // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #90 = Utf8               java/util/ArrayList\n-   #91 = NameAndType        #36:#120      // \"<init>\":()V\n-   #92 = NameAndType        #26:#27       // dirList:Ljava/util/List;\n-   #93 = NameAndType        #30:#27       // fileList:Ljava/util/List;\n-   #94 = NameAndType        #46:#47       // equals:(Ljava/lang/Object;)Z\n-   #95 = Class              #121          // java/util/Objects\n-   #96 = NameAndType        #46:#122      // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #97 = NameAndType        #57:#58       // hashCode:()I\n-   #98 = Utf8               java/lang/Object\n-   #99 = NameAndType        #123:#124     // hash:([Ljava/lang/Object;)I\n-  #100 = NameAndType        #53:#54       // getDirList:()Ljava/util/List;\n-  #101 = Class              #125          // org/apache/commons/io/file/PathUtils\n-  #102 = NameAndType        #126:#127     // relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n-  #103 = NameAndType        #56:#54       // getFileList:()Ljava/util/List;\n-  #104 = Utf8               java/nio/file/LinkOption\n-  #105 = Class              #128          // java/nio/file/Files\n-  #106 = NameAndType        #129:#130     // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #107 = NameAndType        #131:#132     // normalize:()Ljava/nio/file/Path;\n-  #108 = Class              #114          // java/util/List\n-  #109 = NameAndType        #133:#47      // add:(Ljava/lang/Object;)Z\n-  #110 = NameAndType        #74:#75       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #111 = Utf8               java/nio/file/Path\n-  #112 = Utf8               org/apache/commons/io/file/CountingPathVisitor\n-  #113 = Utf8               org/apache/commons/io/file/Counters$PathCounters\n-  #114 = Utf8               java/util/List\n-  #115 = Utf8               java/io/IOException\n-  #116 = Utf8               org/apache/commons/io/file/Counters\n-  #117 = Utf8               bigIntegerPathCounters\n-  #118 = Utf8               ()Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #119 = Utf8               longPathCounters\n-  #120 = Utf8               ()V\n-  #121 = Utf8               java/util/Objects\n-  #122 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #123 = Utf8               hash\n-  #124 = Utf8               ([Ljava/lang/Object;)I\n-  #125 = Utf8               org/apache/commons/io/file/PathUtils\n-  #126 = Utf8               relativize\n-  #127 = Utf8               (Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n-  #128 = Utf8               java/nio/file/Files\n-  #129 = Utf8               isDirectory\n-  #130 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #131 = Utf8               normalize\n-  #132 = Utf8               ()Ljava/nio/file/Path;\n-  #133 = Utf8               add\n+   #52 = Utf8               getDirList\n+   #53 = Utf8               ()Ljava/util/List;\n+   #54 = Utf8               ()Ljava/util/List<Ljava/nio/file/Path;>;\n+   #55 = Utf8               getFileList\n+   #56 = Utf8               hashCode\n+   #57 = Utf8               ()I\n+   #58 = Utf8               prime\n+   #59 = Utf8               I\n+   #60 = Utf8               result\n+   #61 = Utf8               relativizeDirectories\n+   #62 = Utf8               (Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+   #63 = Utf8               parent\n+   #64 = Utf8               Ljava/nio/file/Path;\n+   #65 = Utf8               sort\n+   #66 = Utf8               Z\n+   #67 = Utf8               comparator\n+   #68 = Utf8               Ljava/util/Comparator;\n+   #69 = Utf8               LocalVariableTypeTable\n+   #70 = Utf8               Ljava/util/Comparator<-Ljava/nio/file/Path;>;\n+   #71 = Utf8               (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n+   #72 = Utf8               relativizeFiles\n+   #73 = Utf8               visitFile\n+   #74 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #75 = Utf8               file\n+   #76 = Utf8               attributes\n+   #77 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n+   #78 = Class              #112          // java/util/List\n+   #79 = Utf8               Exceptions\n+   #80 = Class              #113          // java/io/IOException\n+   #81 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #82 = Utf8               SourceFile\n+   #83 = Utf8               AccumulatorPathVisitor.java\n+   #84 = Utf8               org/apache/commons/io/file/AccumulatorPathVisitor\n+   #85 = Class              #114          // org/apache/commons/io/file/Counters\n+   #86 = NameAndType        #115:#116     // bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #87 = NameAndType        #36:#40       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+   #88 = NameAndType        #117:#116     // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #89 = Utf8               java/util/ArrayList\n+   #90 = NameAndType        #36:#118      // \"<init>\":()V\n+   #91 = NameAndType        #26:#27       // dirList:Ljava/util/List;\n+   #92 = NameAndType        #30:#27       // fileList:Ljava/util/List;\n+   #93 = NameAndType        #46:#47       // equals:(Ljava/lang/Object;)Z\n+   #94 = Class              #119          // java/util/Objects\n+   #95 = NameAndType        #46:#120      // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #96 = NameAndType        #56:#57       // hashCode:()I\n+   #97 = Utf8               java/lang/Object\n+   #98 = NameAndType        #121:#122     // hash:([Ljava/lang/Object;)I\n+   #99 = NameAndType        #52:#53       // getDirList:()Ljava/util/List;\n+  #100 = Class              #123          // org/apache/commons/io/file/PathUtils\n+  #101 = NameAndType        #124:#125     // relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+  #102 = NameAndType        #55:#53       // getFileList:()Ljava/util/List;\n+  #103 = Utf8               java/nio/file/LinkOption\n+  #104 = Class              #126          // java/nio/file/Files\n+  #105 = NameAndType        #127:#128     // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #106 = NameAndType        #129:#130     // normalize:()Ljava/nio/file/Path;\n+  #107 = NameAndType        #131:#47      // add:(Ljava/lang/Object;)Z\n+  #108 = NameAndType        #73:#74       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #109 = Utf8               java/nio/file/Path\n+  #110 = Utf8               org/apache/commons/io/file/CountingPathVisitor\n+  #111 = Utf8               org/apache/commons/io/file/Counters$PathCounters\n+  #112 = Utf8               java/util/List\n+  #113 = Utf8               java/io/IOException\n+  #114 = Utf8               org/apache/commons/io/file/Counters\n+  #115 = Utf8               bigIntegerPathCounters\n+  #116 = Utf8               ()Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #117 = Utf8               longPathCounters\n+  #118 = Utf8               ()V\n+  #119 = Utf8               java/util/Objects\n+  #120 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #121 = Utf8               hash\n+  #122 = Utf8               ([Ljava/lang/Object;)I\n+  #123 = Utf8               org/apache/commons/io/file/PathUtils\n+  #124 = Utf8               relativize\n+  #125 = Utf8               (Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+  #126 = Utf8               java/nio/file/Files\n+  #127 = Utf8               isDirectory\n+  #128 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #129 = Utf8               normalize\n+  #130 = Utf8               ()Ljava/nio/file/Path;\n+  #131 = Utf8               add\n {\n   private final java.util.List<java.nio.file.Path> dirList;\n     descriptor: Ljava/util/List;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n     Signature: #29                          // Ljava/util/List<Ljava/nio/file/Path;>;\n \n   private final java.util.List<java.nio.file.Path> fileList;\n@@ -280,30 +278,30 @@\n          1: getfield      #8                  // Field dirList:Ljava/util/List;\n          4: areturn\n       LineNumberTable:\n         line 94: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-    Signature: #55                          // ()Ljava/util/List<Ljava/nio/file/Path;>;\n+    Signature: #54                          // ()Ljava/util/List<Ljava/nio/file/Path;>;\n \n   public java.util.List<java.nio.file.Path> getFileList();\n     descriptor: ()Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #9                  // Field fileList:Ljava/util/List;\n          4: areturn\n       LineNumberTable:\n         line 103: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-    Signature: #55                          // ()Ljava/util/List<Ljava/nio/file/Path;>;\n+    Signature: #54                          // ()Ljava/util/List<Ljava/nio/file/Path;>;\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=1\n          0: bipush        31\n@@ -361,15 +359,15 @@\n             0      11     0  this   Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n             0      11     1 parent   Ljava/nio/file/Path;\n             0      11     2  sort   Z\n             0      11     3 comparator   Ljava/util/Comparator;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      11     3 comparator   Ljava/util/Comparator<-Ljava/nio/file/Path;>;\n-    Signature: #72                          // (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n+    Signature: #71                          // (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n \n   public java.util.List<java.nio.file.Path> relativizeFiles(java.nio.file.Path, boolean, java.util.Comparator<? super java.nio.file.Path>);\n     descriptor: (Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n@@ -386,15 +384,15 @@\n             0      11     0  this   Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n             0      11     1 parent   Ljava/nio/file/Path;\n             0      11     2  sort   Z\n             0      11     3 comparator   Ljava/util/Comparator;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      11     3 comparator   Ljava/util/Comparator<-Ljava/nio/file/Path;>;\n-    Signature: #72                          // (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n+    Signature: #71                          // (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n \n   public java.nio.file.FileVisitResult visitFile(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_1\n@@ -448,8 +446,8 @@\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"AccumulatorPathVisitor.java\"\n InnerClasses:\n-  public static #38= #37 of #86;          // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n+  public static #38= #37 of #85;          // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n"}]}
