{"diffoscope-json-version": 1, "source1": "first/PropertyListParserTokenManager.class", "source2": "second/PropertyListParserTokenManager.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,137 +1,137 @@\n-  SHA-256 checksum 5b906dc96a55040cb9cfc42a1df675d4a65ba9abce831e047071204a0c539014\n+  SHA-256 checksum 887c49b1e1f5bd92b0daab39763b7b8331ca5c879da070f4f8b23acddad4efd6\n   Compiled from \"PropertyListParserTokenManager.java\"\n public class org.apache.commons.configuration2.plist.PropertyListParserTokenManager implements org.apache.commons.configuration2.plist.PropertyListParserConstants\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #141                        // org/apache/commons/configuration2/plist/PropertyListParserTokenManager\n   super_class: #142                       // java/lang/Object\n   interfaces: 1, fields: 24, methods: 27, attributes: 1\n Constant pool:\n-    #1 = Class              #266          // org/apache/commons/configuration2/plist/SimpleCharStream\n-    #2 = Fieldref           #141.#267     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.debugStream:Ljava/io/PrintStream;\n+    #1 = Class              #263          // org/apache/commons/configuration2/plist/SimpleCharStream\n+    #2 = Fieldref           #141.#264     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.debugStream:Ljava/io/PrintStream;\n     #3 = Long               536871200l\n-    #5 = Fieldref           #141.#268     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjmatchedKind:I\n+    #5 = Fieldref           #141.#265     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjmatchedKind:I\n     #6 = Long               524288l\n     #8 = Long               2097152l\n    #10 = Long               1310720l\n    #12 = Long               1048576l\n-   #14 = Fieldref           #141.#269     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjmatchedPos:I\n+   #14 = Fieldref           #141.#266     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjmatchedPos:I\n    #15 = Long               288l\n-   #17 = Methodref          #141.#270     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjStopStringLiteralDfa_0:(IJ)I\n-   #18 = Methodref          #141.#271     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjMoveNfa_0:(II)I\n-   #19 = Fieldref           #141.#272     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.curChar:C\n-   #20 = Methodref          #141.#273     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjStartNfaWithStates_0:(III)I\n-   #21 = Methodref          #141.#274     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjStopAtPos:(II)I\n-   #22 = Methodref          #141.#275     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjMoveStringLiteralDfa1_0:(J)I\n+   #17 = Methodref          #141.#267     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjStopStringLiteralDfa_0:(IJ)I\n+   #18 = Methodref          #141.#268     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjMoveNfa_0:(II)I\n+   #19 = Fieldref           #141.#269     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.curChar:C\n+   #20 = Methodref          #141.#270     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjStartNfaWithStates_0:(III)I\n+   #21 = Methodref          #141.#271     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjStopAtPos:(II)I\n+   #22 = Methodref          #141.#272     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjMoveStringLiteralDfa1_0:(J)I\n    #23 = Long               536870912l\n-   #25 = Fieldref           #141.#276     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.input_stream:Lorg/apache/commons/configuration2/plist/SimpleCharStream;\n-   #26 = Methodref          #1.#277       // org/apache/commons/configuration2/plist/SimpleCharStream.readChar:()C\n-   #27 = Class              #278          // java/io/IOException\n+   #25 = Fieldref           #141.#273     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.input_stream:Lorg/apache/commons/configuration2/plist/SimpleCharStream;\n+   #26 = Methodref          #1.#274       // org/apache/commons/configuration2/plist/SimpleCharStream.readChar:()C\n+   #27 = Class              #275          // java/io/IOException\n    #28 = Long               32l\n-   #30 = Methodref          #141.#279     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjMoveStringLiteralDfa2_0:(JJ)I\n+   #30 = Methodref          #141.#276     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjMoveStringLiteralDfa2_0:(JJ)I\n    #31 = Long               256l\n-   #33 = Methodref          #141.#280     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjStartNfa_0:(IJ)I\n-   #34 = Fieldref           #141.#281     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjnewStateCnt:I\n-   #35 = Fieldref           #141.#282     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjstateSet:[I\n+   #33 = Methodref          #141.#277     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjStartNfa_0:(IJ)I\n+   #34 = Fieldref           #141.#278     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjnewStateCnt:I\n+   #35 = Fieldref           #141.#279     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjstateSet:[I\n    #36 = Integer            2147483647\n-   #37 = Fieldref           #141.#283     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjround:I\n-   #38 = Methodref          #141.#284     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.ReInitRounds:()V\n+   #37 = Fieldref           #141.#280     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjround:I\n+   #38 = Methodref          #141.#281     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.ReInitRounds:()V\n    #39 = Long               -2882324673712891393l\n-   #41 = Methodref          #141.#285     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjCheckNAdd:(I)V\n+   #41 = Methodref          #141.#282     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjCheckNAdd:(I)V\n    #42 = Long               576223262086791168l\n-   #44 = Methodref          #141.#286     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjCheckNAddTwoStates:(II)V\n+   #44 = Methodref          #141.#283     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjCheckNAddTwoStates:(II)V\n    #45 = Long               287948905469978112l\n    #47 = Long               -17179869185l\n-   #49 = Methodref          #141.#287     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjCheckNAddStates:(II)V\n+   #49 = Methodref          #141.#284     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjCheckNAddStates:(II)V\n    #50 = Long               -2882303761517117441l\n    #52 = Long               541165879422l\n-   #54 = Fieldref           #141.#288     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjbitVec0:[J\n-   #55 = Methodref          #141.#289     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjMoveNfa_2:(II)I\n+   #54 = Fieldref           #141.#285     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjbitVec0:[J\n+   #55 = Methodref          #141.#286     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjMoveNfa_2:(II)I\n    #56 = Long               9216l\n    #58 = Long               128l\n-   #60 = Methodref          #141.#290     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjMoveStringLiteralDfa1_1:(J)I\n-   #61 = Methodref          #142.#291     // java/lang/Object.\"<init>\":()V\n-   #62 = Fieldref           #292.#293     // java/lang/System.out:Ljava/io/PrintStream;\n-   #63 = Fieldref           #141.#294     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjrounds:[I\n-   #64 = Class              #295          // java/lang/StringBuilder\n-   #65 = Methodref          #64.#291      // java/lang/StringBuilder.\"<init>\":()V\n-   #66 = Fieldref           #141.#296     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjimage:Ljava/lang/StringBuilder;\n-   #67 = Fieldref           #141.#297     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.image:Ljava/lang/StringBuilder;\n-   #68 = Fieldref           #141.#298     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.curLexState:I\n-   #69 = Fieldref           #141.#299     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.defaultLexState:I\n-   #70 = Methodref          #141.#300     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.\"<init>\":(Lorg/apache/commons/configuration2/plist/SimpleCharStream;)V\n-   #71 = Methodref          #141.#301     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.SwitchTo:(I)V\n+   #60 = Methodref          #141.#287     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjMoveStringLiteralDfa1_1:(J)I\n+   #61 = Methodref          #142.#288     // java/lang/Object.\"<init>\":()V\n+   #62 = Fieldref           #289.#290     // java/lang/System.out:Ljava/io/PrintStream;\n+   #63 = Fieldref           #141.#291     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjrounds:[I\n+   #64 = Class              #292          // java/lang/StringBuilder\n+   #65 = Methodref          #64.#288      // java/lang/StringBuilder.\"<init>\":()V\n+   #66 = Fieldref           #141.#293     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjimage:Ljava/lang/StringBuilder;\n+   #67 = Fieldref           #141.#294     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.image:Ljava/lang/StringBuilder;\n+   #68 = Fieldref           #141.#295     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.curLexState:I\n+   #69 = Fieldref           #141.#296     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.defaultLexState:I\n+   #70 = Methodref          #141.#297     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.\"<init>\":(Lorg/apache/commons/configuration2/plist/SimpleCharStream;)V\n+   #71 = Methodref          #141.#298     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.SwitchTo:(I)V\n    #72 = Integer            -2147483647\n    #73 = Integer            -2147483648\n-   #74 = Methodref          #141.#302     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.ReInit:(Lorg/apache/commons/configuration2/plist/SimpleCharStream;)V\n-   #75 = Class              #303          // org/apache/commons/configuration2/plist/TokenMgrError\n-   #76 = String             #304          // Error: Ignoring invalid lexical state :\n-   #77 = Methodref          #64.#305      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #78 = Methodref          #64.#306      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #79 = String             #307          // . State unchanged.\n-   #80 = Methodref          #64.#308      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #81 = Methodref          #75.#309      // org/apache/commons/configuration2/plist/TokenMgrError.\"<init>\":(Ljava/lang/String;I)V\n-   #82 = Fieldref           #141.#310     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjstrLiteralImages:[Ljava/lang/String;\n-   #83 = Methodref          #1.#311       // org/apache/commons/configuration2/plist/SimpleCharStream.GetImage:()Ljava/lang/String;\n-   #84 = Methodref          #1.#312       // org/apache/commons/configuration2/plist/SimpleCharStream.getBeginLine:()I\n-   #85 = Methodref          #1.#313       // org/apache/commons/configuration2/plist/SimpleCharStream.getBeginColumn:()I\n-   #86 = Methodref          #1.#314       // org/apache/commons/configuration2/plist/SimpleCharStream.getEndLine:()I\n-   #87 = Methodref          #1.#315       // org/apache/commons/configuration2/plist/SimpleCharStream.getEndColumn:()I\n-   #88 = Methodref          #316.#317     // org/apache/commons/configuration2/plist/Token.newToken:(ILjava/lang/String;)Lorg/apache/commons/configuration2/plist/Token;\n-   #89 = Fieldref           #316.#318     // org/apache/commons/configuration2/plist/Token.beginLine:I\n-   #90 = Fieldref           #316.#319     // org/apache/commons/configuration2/plist/Token.endLine:I\n-   #91 = Fieldref           #316.#320     // org/apache/commons/configuration2/plist/Token.beginColumn:I\n-   #92 = Fieldref           #316.#321     // org/apache/commons/configuration2/plist/Token.endColumn:I\n-   #93 = Methodref          #1.#322       // org/apache/commons/configuration2/plist/SimpleCharStream.BeginToken:()C\n-   #94 = Methodref          #141.#323     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjFillToken:()Lorg/apache/commons/configuration2/plist/Token;\n-   #95 = Fieldref           #316.#324     // org/apache/commons/configuration2/plist/Token.specialToken:Lorg/apache/commons/configuration2/plist/Token;\n-   #96 = Methodref          #64.#325      // java/lang/StringBuilder.setLength:(I)V\n-   #97 = Fieldref           #141.#326     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjimageLen:I\n-   #98 = Methodref          #1.#327       // org/apache/commons/configuration2/plist/SimpleCharStream.backup:(I)V\n+   #74 = Methodref          #141.#299     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.ReInit:(Lorg/apache/commons/configuration2/plist/SimpleCharStream;)V\n+   #75 = Class              #300          // org/apache/commons/configuration2/plist/TokenMgrError\n+   #76 = String             #301          // Error: Ignoring invalid lexical state :\n+   #77 = Methodref          #64.#302      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #78 = Methodref          #64.#303      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #79 = String             #304          // . State unchanged.\n+   #80 = Methodref          #64.#305      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #81 = Methodref          #75.#306      // org/apache/commons/configuration2/plist/TokenMgrError.\"<init>\":(Ljava/lang/String;I)V\n+   #82 = Fieldref           #141.#307     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjstrLiteralImages:[Ljava/lang/String;\n+   #83 = Methodref          #1.#308       // org/apache/commons/configuration2/plist/SimpleCharStream.GetImage:()Ljava/lang/String;\n+   #84 = Methodref          #1.#309       // org/apache/commons/configuration2/plist/SimpleCharStream.getBeginLine:()I\n+   #85 = Methodref          #1.#310       // org/apache/commons/configuration2/plist/SimpleCharStream.getBeginColumn:()I\n+   #86 = Methodref          #1.#311       // org/apache/commons/configuration2/plist/SimpleCharStream.getEndLine:()I\n+   #87 = Methodref          #1.#312       // org/apache/commons/configuration2/plist/SimpleCharStream.getEndColumn:()I\n+   #88 = Methodref          #248.#313     // org/apache/commons/configuration2/plist/Token.newToken:(ILjava/lang/String;)Lorg/apache/commons/configuration2/plist/Token;\n+   #89 = Fieldref           #248.#314     // org/apache/commons/configuration2/plist/Token.beginLine:I\n+   #90 = Fieldref           #248.#315     // org/apache/commons/configuration2/plist/Token.endLine:I\n+   #91 = Fieldref           #248.#316     // org/apache/commons/configuration2/plist/Token.beginColumn:I\n+   #92 = Fieldref           #248.#317     // org/apache/commons/configuration2/plist/Token.endColumn:I\n+   #93 = Methodref          #1.#318       // org/apache/commons/configuration2/plist/SimpleCharStream.BeginToken:()C\n+   #94 = Methodref          #141.#319     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjFillToken:()Lorg/apache/commons/configuration2/plist/Token;\n+   #95 = Fieldref           #248.#320     // org/apache/commons/configuration2/plist/Token.specialToken:Lorg/apache/commons/configuration2/plist/Token;\n+   #96 = Methodref          #64.#321      // java/lang/StringBuilder.setLength:(I)V\n+   #97 = Fieldref           #141.#322     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjimageLen:I\n+   #98 = Methodref          #1.#323       // org/apache/commons/configuration2/plist/SimpleCharStream.backup:(I)V\n    #99 = Long               4294977024l\n-  #101 = Methodref          #141.#328     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjMoveStringLiteralDfa0_0:()I\n-  #102 = Methodref          #141.#329     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjMoveStringLiteralDfa0_1:()I\n-  #103 = Methodref          #141.#330     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjMoveStringLiteralDfa0_2:()I\n-  #104 = Fieldref           #141.#331     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjtoToken:[J\n-  #105 = Fieldref           #141.#332     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjnewLexState:[I\n-  #106 = Fieldref           #141.#333     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjtoSkip:[J\n-  #107 = Fieldref           #141.#334     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjtoSpecial:[J\n-  #108 = Fieldref           #316.#335     // org/apache/commons/configuration2/plist/Token.next:Lorg/apache/commons/configuration2/plist/Token;\n-  #109 = Methodref          #141.#336     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.SkipLexicalActions:(Lorg/apache/commons/configuration2/plist/Token;)V\n-  #110 = String             #337          //\n-  #111 = Methodref          #75.#338      // org/apache/commons/configuration2/plist/TokenMgrError.\"<init>\":(ZIIILjava/lang/String;CI)V\n-  #112 = Fieldref           #141.#339     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjnextStates:[I\n+  #101 = Methodref          #141.#324     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjMoveStringLiteralDfa0_0:()I\n+  #102 = Methodref          #141.#325     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjMoveStringLiteralDfa0_1:()I\n+  #103 = Methodref          #141.#326     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjMoveStringLiteralDfa0_2:()I\n+  #104 = Fieldref           #141.#327     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjtoToken:[J\n+  #105 = Fieldref           #141.#328     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjnewLexState:[I\n+  #106 = Fieldref           #141.#329     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjtoSkip:[J\n+  #107 = Fieldref           #141.#330     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjtoSpecial:[J\n+  #108 = Fieldref           #248.#331     // org/apache/commons/configuration2/plist/Token.next:Lorg/apache/commons/configuration2/plist/Token;\n+  #109 = Methodref          #141.#332     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.SkipLexicalActions:(Lorg/apache/commons/configuration2/plist/Token;)V\n+  #110 = String             #333          //\n+  #111 = Methodref          #75.#334      // org/apache/commons/configuration2/plist/TokenMgrError.\"<init>\":(ZIIILjava/lang/String;CI)V\n+  #112 = Fieldref           #141.#335     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjnextStates:[I\n   #113 = Long               -1l\n-  #115 = Class              #340          // java/lang/String\n-  #116 = String             #341          // (\n-  #117 = String             #342          // )\n-  #118 = String             #343          // ,\n-  #119 = String             #344          // {\n-  #120 = String             #345          // }\n-  #121 = String             #346          // ;\n-  #122 = String             #347          // =\n-  #123 = String             #348          // <\n-  #124 = String             #349          // >\n-  #125 = String             #350          // <*D\n-  #126 = String             #351          // \\\"\n-  #127 = String             #352          // \\\\\\\"\n-  #128 = String             #353          // DEFAULT\n-  #129 = String             #354          // IN_COMMENT\n-  #130 = String             #355          // IN_SINGLE_LINE_COMMENT\n-  #131 = Fieldref           #141.#356     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.lexStateNames:[Ljava/lang/String;\n+  #115 = Class              #336          // java/lang/String\n+  #116 = String             #337          // (\n+  #117 = String             #338          // )\n+  #118 = String             #339          // ,\n+  #119 = String             #340          // {\n+  #120 = String             #341          // }\n+  #121 = String             #342          // ;\n+  #122 = String             #343          // =\n+  #123 = String             #344          // <\n+  #124 = String             #345          // >\n+  #125 = String             #346          // <*D\n+  #126 = String             #347          // \\\"\n+  #127 = String             #348          // \\\\\\\"\n+  #128 = String             #349          // DEFAULT\n+  #129 = String             #350          // IN_COMMENT\n+  #130 = String             #351          // IN_SINGLE_LINE_COMMENT\n+  #131 = Fieldref           #141.#352     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.lexStateNames:[Ljava/lang/String;\n   #132 = Long               1044379649l\n   #134 = Long               670l\n   #136 = Long               512l\n   #138 = Long               1376l\n-  #140 = Fieldref           #141.#357     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjtoMore:[J\n-  #141 = Class              #358          // org/apache/commons/configuration2/plist/PropertyListParserTokenManager\n-  #142 = Class              #359          // java/lang/Object\n-  #143 = Class              #360          // org/apache/commons/configuration2/plist/PropertyListParserConstants\n+  #140 = Fieldref           #141.#353     // org/apache/commons/configuration2/plist/PropertyListParserTokenManager.jjtoMore:[J\n+  #141 = Class              #354          // org/apache/commons/configuration2/plist/PropertyListParserTokenManager\n+  #142 = Class              #355          // java/lang/Object\n+  #143 = Class              #356          // org/apache/commons/configuration2/plist/PropertyListParserConstants\n   #144 = Utf8               debugStream\n   #145 = Utf8               Ljava/io/PrintStream;\n   #146 = Utf8               jjbitVec0\n   #147 = Utf8               [J\n   #148 = Utf8               jjnextStates\n   #149 = Utf8               [I\n   #150 = Utf8               jjstrLiteralImages\n@@ -180,198 +180,194 @@\n   #193 = Utf8               kind\n   #194 = Utf8               jjMoveStringLiteralDfa0_0\n   #195 = Utf8               ()I\n   #196 = Utf8               jjMoveStringLiteralDfa1_0\n   #197 = Utf8               (J)I\n   #198 = Utf8               e\n   #199 = Utf8               Ljava/io/IOException;\n-  #200 = Class              #278          // java/io/IOException\n-  #201 = Utf8               jjMoveStringLiteralDfa2_0\n-  #202 = Utf8               (JJ)I\n-  #203 = Utf8               old0\n-  #204 = Utf8               jjStartNfaWithStates_0\n-  #205 = Utf8               (III)I\n-  #206 = Utf8               state\n-  #207 = Utf8               jjMoveNfa_0\n-  #208 = Utf8               l\n-  #209 = Utf8               i2\n-  #210 = Utf8               l2\n-  #211 = Utf8               startState\n-  #212 = Utf8               curPos\n-  #213 = Utf8               startsAt\n-  #214 = Utf8               i\n-  #215 = Utf8               jjMoveStringLiteralDfa0_2\n-  #216 = Utf8               jjMoveNfa_2\n-  #217 = Utf8               jjMoveStringLiteralDfa0_1\n-  #218 = Utf8               jjMoveStringLiteralDfa1_1\n-  #219 = Utf8               <init>\n-  #220 = Utf8               (Lorg/apache/commons/configuration2/plist/SimpleCharStream;)V\n-  #221 = Utf8               stream\n-  #222 = Utf8               (Lorg/apache/commons/configuration2/plist/SimpleCharStream;I)V\n-  #223 = Utf8               lexState\n-  #224 = Utf8               ReInit\n-  #225 = Utf8               ReInitRounds\n-  #226 = Utf8               ()V\n-  #227 = Utf8               SwitchTo\n-  #228 = Utf8               (I)V\n-  #229 = Utf8               jjFillToken\n-  #230 = Utf8               ()Lorg/apache/commons/configuration2/plist/Token;\n-  #231 = Utf8               t\n-  #232 = Utf8               Lorg/apache/commons/configuration2/plist/Token;\n-  #233 = Utf8               curTokenImage\n-  #234 = Utf8               Ljava/lang/String;\n-  #235 = Utf8               beginLine\n-  #236 = Utf8               endLine\n-  #237 = Utf8               beginColumn\n-  #238 = Utf8               endColumn\n-  #239 = Utf8               im\n-  #240 = Class              #358          // org/apache/commons/configuration2/plist/PropertyListParserTokenManager\n-  #241 = Class              #340          // java/lang/String\n-  #242 = Utf8               getNextToken\n-  #243 = Utf8               matchedToken\n-  #244 = Utf8               e1\n-  #245 = Utf8               error_line\n-  #246 = Utf8               error_column\n-  #247 = Utf8               error_after\n-  #248 = Utf8               EOFSeen\n-  #249 = Utf8               Z\n-  #250 = Utf8               specialToken\n-  #251 = Class              #361          // org/apache/commons/configuration2/plist/Token\n-  #252 = Utf8               SkipLexicalActions\n-  #253 = Utf8               (Lorg/apache/commons/configuration2/plist/Token;)V\n-  #254 = Utf8               jjCheckNAdd\n-  #255 = Utf8               jjAddStates\n-  #256 = Utf8               (II)V\n-  #257 = Utf8               start\n-  #258 = Utf8               end\n-  #259 = Utf8               jjCheckNAddTwoStates\n-  #260 = Utf8               state1\n-  #261 = Utf8               state2\n-  #262 = Utf8               jjCheckNAddStates\n-  #263 = Utf8               <clinit>\n-  #264 = Utf8               SourceFile\n-  #265 = Utf8               PropertyListParserTokenManager.java\n-  #266 = Utf8               org/apache/commons/configuration2/plist/SimpleCharStream\n-  #267 = NameAndType        #144:#145     // debugStream:Ljava/io/PrintStream;\n-  #268 = NameAndType        #175:#166     // jjmatchedKind:I\n-  #269 = NameAndType        #174:#166     // jjmatchedPos:I\n-  #270 = NameAndType        #184:#185     // jjStopStringLiteralDfa_0:(IJ)I\n-  #271 = NameAndType        #207:#192     // jjMoveNfa_0:(II)I\n-  #272 = NameAndType        #168:#169     // curChar:C\n-  #273 = NameAndType        #204:#205     // jjStartNfaWithStates_0:(III)I\n-  #274 = NameAndType        #191:#192     // jjStopAtPos:(II)I\n-  #275 = NameAndType        #196:#197     // jjMoveStringLiteralDfa1_0:(J)I\n-  #276 = NameAndType        #158:#159     // input_stream:Lorg/apache/commons/configuration2/plist/SimpleCharStream;\n-  #277 = NameAndType        #362:#363     // readChar:()C\n-  #278 = Utf8               java/io/IOException\n-  #279 = NameAndType        #201:#202     // jjMoveStringLiteralDfa2_0:(JJ)I\n-  #280 = NameAndType        #190:#185     // jjStartNfa_0:(IJ)I\n-  #281 = NameAndType        #172:#166     // jjnewStateCnt:I\n-  #282 = NameAndType        #161:#149     // jjstateSet:[I\n-  #283 = NameAndType        #173:#166     // jjround:I\n-  #284 = NameAndType        #225:#226     // ReInitRounds:()V\n-  #285 = NameAndType        #254:#228     // jjCheckNAdd:(I)V\n-  #286 = NameAndType        #259:#256     // jjCheckNAddTwoStates:(II)V\n-  #287 = NameAndType        #262:#256     // jjCheckNAddStates:(II)V\n-  #288 = NameAndType        #146:#147     // jjbitVec0:[J\n-  #289 = NameAndType        #216:#192     // jjMoveNfa_2:(II)I\n-  #290 = NameAndType        #218:#197     // jjMoveStringLiteralDfa1_1:(J)I\n-  #291 = NameAndType        #219:#226     // \"<init>\":()V\n-  #292 = Class              #364          // java/lang/System\n-  #293 = NameAndType        #365:#145     // out:Ljava/io/PrintStream;\n-  #294 = NameAndType        #160:#149     // jjrounds:[I\n-  #295 = Utf8               java/lang/StringBuilder\n-  #296 = NameAndType        #162:#163     // jjimage:Ljava/lang/StringBuilder;\n-  #297 = NameAndType        #164:#163     // image:Ljava/lang/StringBuilder;\n-  #298 = NameAndType        #170:#166     // curLexState:I\n-  #299 = NameAndType        #171:#166     // defaultLexState:I\n-  #300 = NameAndType        #219:#220     // \"<init>\":(Lorg/apache/commons/configuration2/plist/SimpleCharStream;)V\n-  #301 = NameAndType        #227:#228     // SwitchTo:(I)V\n-  #302 = NameAndType        #224:#220     // ReInit:(Lorg/apache/commons/configuration2/plist/SimpleCharStream;)V\n-  #303 = Utf8               org/apache/commons/configuration2/plist/TokenMgrError\n-  #304 = Utf8               Error: Ignoring invalid lexical state :\n-  #305 = NameAndType        #366:#367     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #306 = NameAndType        #366:#368     // append:(I)Ljava/lang/StringBuilder;\n-  #307 = Utf8               . State unchanged.\n-  #308 = NameAndType        #369:#370     // toString:()Ljava/lang/String;\n-  #309 = NameAndType        #219:#371     // \"<init>\":(Ljava/lang/String;I)V\n-  #310 = NameAndType        #150:#151     // jjstrLiteralImages:[Ljava/lang/String;\n-  #311 = NameAndType        #372:#370     // GetImage:()Ljava/lang/String;\n-  #312 = NameAndType        #373:#195     // getBeginLine:()I\n-  #313 = NameAndType        #374:#195     // getBeginColumn:()I\n-  #314 = NameAndType        #375:#195     // getEndLine:()I\n-  #315 = NameAndType        #376:#195     // getEndColumn:()I\n-  #316 = Class              #361          // org/apache/commons/configuration2/plist/Token\n-  #317 = NameAndType        #377:#378     // newToken:(ILjava/lang/String;)Lorg/apache/commons/configuration2/plist/Token;\n-  #318 = NameAndType        #235:#166     // beginLine:I\n-  #319 = NameAndType        #236:#166     // endLine:I\n-  #320 = NameAndType        #237:#166     // beginColumn:I\n-  #321 = NameAndType        #238:#166     // endColumn:I\n-  #322 = NameAndType        #379:#363     // BeginToken:()C\n-  #323 = NameAndType        #229:#230     // jjFillToken:()Lorg/apache/commons/configuration2/plist/Token;\n-  #324 = NameAndType        #250:#232     // specialToken:Lorg/apache/commons/configuration2/plist/Token;\n-  #325 = NameAndType        #380:#228     // setLength:(I)V\n-  #326 = NameAndType        #165:#166     // jjimageLen:I\n-  #327 = NameAndType        #381:#228     // backup:(I)V\n-  #328 = NameAndType        #194:#195     // jjMoveStringLiteralDfa0_0:()I\n-  #329 = NameAndType        #217:#195     // jjMoveStringLiteralDfa0_1:()I\n-  #330 = NameAndType        #215:#195     // jjMoveStringLiteralDfa0_2:()I\n-  #331 = NameAndType        #154:#147     // jjtoToken:[J\n-  #332 = NameAndType        #153:#149     // jjnewLexState:[I\n-  #333 = NameAndType        #155:#147     // jjtoSkip:[J\n-  #334 = NameAndType        #156:#147     // jjtoSpecial:[J\n-  #335 = NameAndType        #382:#232     // next:Lorg/apache/commons/configuration2/plist/Token;\n-  #336 = NameAndType        #252:#253     // SkipLexicalActions:(Lorg/apache/commons/configuration2/plist/Token;)V\n-  #337 = Utf8\n-  #338 = NameAndType        #219:#383     // \"<init>\":(ZIIILjava/lang/String;CI)V\n-  #339 = NameAndType        #148:#149     // jjnextStates:[I\n-  #340 = Utf8               java/lang/String\n-  #341 = Utf8               (\n-  #342 = Utf8               )\n-  #343 = Utf8               ,\n-  #344 = Utf8               {\n-  #345 = Utf8               }\n-  #346 = Utf8               ;\n-  #347 = Utf8               =\n-  #348 = Utf8               <\n-  #349 = Utf8               >\n-  #350 = Utf8               <*D\n-  #351 = Utf8               \\\"\n-  #352 = Utf8               \\\\\\\"\n-  #353 = Utf8               DEFAULT\n-  #354 = Utf8               IN_COMMENT\n-  #355 = Utf8               IN_SINGLE_LINE_COMMENT\n-  #356 = NameAndType        #152:#151     // lexStateNames:[Ljava/lang/String;\n-  #357 = NameAndType        #157:#147     // jjtoMore:[J\n-  #358 = Utf8               org/apache/commons/configuration2/plist/PropertyListParserTokenManager\n-  #359 = Utf8               java/lang/Object\n-  #360 = Utf8               org/apache/commons/configuration2/plist/PropertyListParserConstants\n-  #361 = Utf8               org/apache/commons/configuration2/plist/Token\n-  #362 = Utf8               readChar\n-  #363 = Utf8               ()C\n-  #364 = Utf8               java/lang/System\n-  #365 = Utf8               out\n-  #366 = Utf8               append\n-  #367 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #368 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #369 = Utf8               toString\n-  #370 = Utf8               ()Ljava/lang/String;\n-  #371 = Utf8               (Ljava/lang/String;I)V\n-  #372 = Utf8               GetImage\n-  #373 = Utf8               getBeginLine\n-  #374 = Utf8               getBeginColumn\n-  #375 = Utf8               getEndLine\n-  #376 = Utf8               getEndColumn\n-  #377 = Utf8               newToken\n-  #378 = Utf8               (ILjava/lang/String;)Lorg/apache/commons/configuration2/plist/Token;\n-  #379 = Utf8               BeginToken\n-  #380 = Utf8               setLength\n-  #381 = Utf8               backup\n-  #382 = Utf8               next\n-  #383 = Utf8               (ZIIILjava/lang/String;CI)V\n+  #200 = Utf8               jjMoveStringLiteralDfa2_0\n+  #201 = Utf8               (JJ)I\n+  #202 = Utf8               old0\n+  #203 = Utf8               jjStartNfaWithStates_0\n+  #204 = Utf8               (III)I\n+  #205 = Utf8               state\n+  #206 = Utf8               jjMoveNfa_0\n+  #207 = Utf8               l\n+  #208 = Utf8               i2\n+  #209 = Utf8               l2\n+  #210 = Utf8               startState\n+  #211 = Utf8               curPos\n+  #212 = Utf8               startsAt\n+  #213 = Utf8               i\n+  #214 = Utf8               jjMoveStringLiteralDfa0_2\n+  #215 = Utf8               jjMoveNfa_2\n+  #216 = Utf8               jjMoveStringLiteralDfa0_1\n+  #217 = Utf8               jjMoveStringLiteralDfa1_1\n+  #218 = Utf8               <init>\n+  #219 = Utf8               (Lorg/apache/commons/configuration2/plist/SimpleCharStream;)V\n+  #220 = Utf8               stream\n+  #221 = Utf8               (Lorg/apache/commons/configuration2/plist/SimpleCharStream;I)V\n+  #222 = Utf8               lexState\n+  #223 = Utf8               ReInit\n+  #224 = Utf8               ReInitRounds\n+  #225 = Utf8               ()V\n+  #226 = Utf8               SwitchTo\n+  #227 = Utf8               (I)V\n+  #228 = Utf8               jjFillToken\n+  #229 = Utf8               ()Lorg/apache/commons/configuration2/plist/Token;\n+  #230 = Utf8               t\n+  #231 = Utf8               Lorg/apache/commons/configuration2/plist/Token;\n+  #232 = Utf8               curTokenImage\n+  #233 = Utf8               Ljava/lang/String;\n+  #234 = Utf8               beginLine\n+  #235 = Utf8               endLine\n+  #236 = Utf8               beginColumn\n+  #237 = Utf8               endColumn\n+  #238 = Utf8               im\n+  #239 = Utf8               getNextToken\n+  #240 = Utf8               matchedToken\n+  #241 = Utf8               e1\n+  #242 = Utf8               error_line\n+  #243 = Utf8               error_column\n+  #244 = Utf8               error_after\n+  #245 = Utf8               EOFSeen\n+  #246 = Utf8               Z\n+  #247 = Utf8               specialToken\n+  #248 = Class              #357          // org/apache/commons/configuration2/plist/Token\n+  #249 = Utf8               SkipLexicalActions\n+  #250 = Utf8               (Lorg/apache/commons/configuration2/plist/Token;)V\n+  #251 = Utf8               jjCheckNAdd\n+  #252 = Utf8               jjAddStates\n+  #253 = Utf8               (II)V\n+  #254 = Utf8               start\n+  #255 = Utf8               end\n+  #256 = Utf8               jjCheckNAddTwoStates\n+  #257 = Utf8               state1\n+  #258 = Utf8               state2\n+  #259 = Utf8               jjCheckNAddStates\n+  #260 = Utf8               <clinit>\n+  #261 = Utf8               SourceFile\n+  #262 = Utf8               PropertyListParserTokenManager.java\n+  #263 = Utf8               org/apache/commons/configuration2/plist/SimpleCharStream\n+  #264 = NameAndType        #144:#145     // debugStream:Ljava/io/PrintStream;\n+  #265 = NameAndType        #175:#166     // jjmatchedKind:I\n+  #266 = NameAndType        #174:#166     // jjmatchedPos:I\n+  #267 = NameAndType        #184:#185     // jjStopStringLiteralDfa_0:(IJ)I\n+  #268 = NameAndType        #206:#192     // jjMoveNfa_0:(II)I\n+  #269 = NameAndType        #168:#169     // curChar:C\n+  #270 = NameAndType        #203:#204     // jjStartNfaWithStates_0:(III)I\n+  #271 = NameAndType        #191:#192     // jjStopAtPos:(II)I\n+  #272 = NameAndType        #196:#197     // jjMoveStringLiteralDfa1_0:(J)I\n+  #273 = NameAndType        #158:#159     // input_stream:Lorg/apache/commons/configuration2/plist/SimpleCharStream;\n+  #274 = NameAndType        #358:#359     // readChar:()C\n+  #275 = Utf8               java/io/IOException\n+  #276 = NameAndType        #200:#201     // jjMoveStringLiteralDfa2_0:(JJ)I\n+  #277 = NameAndType        #190:#185     // jjStartNfa_0:(IJ)I\n+  #278 = NameAndType        #172:#166     // jjnewStateCnt:I\n+  #279 = NameAndType        #161:#149     // jjstateSet:[I\n+  #280 = NameAndType        #173:#166     // jjround:I\n+  #281 = NameAndType        #224:#225     // ReInitRounds:()V\n+  #282 = NameAndType        #251:#227     // jjCheckNAdd:(I)V\n+  #283 = NameAndType        #256:#253     // jjCheckNAddTwoStates:(II)V\n+  #284 = NameAndType        #259:#253     // jjCheckNAddStates:(II)V\n+  #285 = NameAndType        #146:#147     // jjbitVec0:[J\n+  #286 = NameAndType        #215:#192     // jjMoveNfa_2:(II)I\n+  #287 = NameAndType        #217:#197     // jjMoveStringLiteralDfa1_1:(J)I\n+  #288 = NameAndType        #218:#225     // \"<init>\":()V\n+  #289 = Class              #360          // java/lang/System\n+  #290 = NameAndType        #361:#145     // out:Ljava/io/PrintStream;\n+  #291 = NameAndType        #160:#149     // jjrounds:[I\n+  #292 = Utf8               java/lang/StringBuilder\n+  #293 = NameAndType        #162:#163     // jjimage:Ljava/lang/StringBuilder;\n+  #294 = NameAndType        #164:#163     // image:Ljava/lang/StringBuilder;\n+  #295 = NameAndType        #170:#166     // curLexState:I\n+  #296 = NameAndType        #171:#166     // defaultLexState:I\n+  #297 = NameAndType        #218:#219     // \"<init>\":(Lorg/apache/commons/configuration2/plist/SimpleCharStream;)V\n+  #298 = NameAndType        #226:#227     // SwitchTo:(I)V\n+  #299 = NameAndType        #223:#219     // ReInit:(Lorg/apache/commons/configuration2/plist/SimpleCharStream;)V\n+  #300 = Utf8               org/apache/commons/configuration2/plist/TokenMgrError\n+  #301 = Utf8               Error: Ignoring invalid lexical state :\n+  #302 = NameAndType        #362:#363     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #303 = NameAndType        #362:#364     // append:(I)Ljava/lang/StringBuilder;\n+  #304 = Utf8               . State unchanged.\n+  #305 = NameAndType        #365:#366     // toString:()Ljava/lang/String;\n+  #306 = NameAndType        #218:#367     // \"<init>\":(Ljava/lang/String;I)V\n+  #307 = NameAndType        #150:#151     // jjstrLiteralImages:[Ljava/lang/String;\n+  #308 = NameAndType        #368:#366     // GetImage:()Ljava/lang/String;\n+  #309 = NameAndType        #369:#195     // getBeginLine:()I\n+  #310 = NameAndType        #370:#195     // getBeginColumn:()I\n+  #311 = NameAndType        #371:#195     // getEndLine:()I\n+  #312 = NameAndType        #372:#195     // getEndColumn:()I\n+  #313 = NameAndType        #373:#374     // newToken:(ILjava/lang/String;)Lorg/apache/commons/configuration2/plist/Token;\n+  #314 = NameAndType        #234:#166     // beginLine:I\n+  #315 = NameAndType        #235:#166     // endLine:I\n+  #316 = NameAndType        #236:#166     // beginColumn:I\n+  #317 = NameAndType        #237:#166     // endColumn:I\n+  #318 = NameAndType        #375:#359     // BeginToken:()C\n+  #319 = NameAndType        #228:#229     // jjFillToken:()Lorg/apache/commons/configuration2/plist/Token;\n+  #320 = NameAndType        #247:#231     // specialToken:Lorg/apache/commons/configuration2/plist/Token;\n+  #321 = NameAndType        #376:#227     // setLength:(I)V\n+  #322 = NameAndType        #165:#166     // jjimageLen:I\n+  #323 = NameAndType        #377:#227     // backup:(I)V\n+  #324 = NameAndType        #194:#195     // jjMoveStringLiteralDfa0_0:()I\n+  #325 = NameAndType        #216:#195     // jjMoveStringLiteralDfa0_1:()I\n+  #326 = NameAndType        #214:#195     // jjMoveStringLiteralDfa0_2:()I\n+  #327 = NameAndType        #154:#147     // jjtoToken:[J\n+  #328 = NameAndType        #153:#149     // jjnewLexState:[I\n+  #329 = NameAndType        #155:#147     // jjtoSkip:[J\n+  #330 = NameAndType        #156:#147     // jjtoSpecial:[J\n+  #331 = NameAndType        #378:#231     // next:Lorg/apache/commons/configuration2/plist/Token;\n+  #332 = NameAndType        #249:#250     // SkipLexicalActions:(Lorg/apache/commons/configuration2/plist/Token;)V\n+  #333 = Utf8\n+  #334 = NameAndType        #218:#379     // \"<init>\":(ZIIILjava/lang/String;CI)V\n+  #335 = NameAndType        #148:#149     // jjnextStates:[I\n+  #336 = Utf8               java/lang/String\n+  #337 = Utf8               (\n+  #338 = Utf8               )\n+  #339 = Utf8               ,\n+  #340 = Utf8               {\n+  #341 = Utf8               }\n+  #342 = Utf8               ;\n+  #343 = Utf8               =\n+  #344 = Utf8               <\n+  #345 = Utf8               >\n+  #346 = Utf8               <*D\n+  #347 = Utf8               \\\"\n+  #348 = Utf8               \\\\\\\"\n+  #349 = Utf8               DEFAULT\n+  #350 = Utf8               IN_COMMENT\n+  #351 = Utf8               IN_SINGLE_LINE_COMMENT\n+  #352 = NameAndType        #152:#151     // lexStateNames:[Ljava/lang/String;\n+  #353 = NameAndType        #157:#147     // jjtoMore:[J\n+  #354 = Utf8               org/apache/commons/configuration2/plist/PropertyListParserTokenManager\n+  #355 = Utf8               java/lang/Object\n+  #356 = Utf8               org/apache/commons/configuration2/plist/PropertyListParserConstants\n+  #357 = Utf8               org/apache/commons/configuration2/plist/Token\n+  #358 = Utf8               readChar\n+  #359 = Utf8               ()C\n+  #360 = Utf8               java/lang/System\n+  #361 = Utf8               out\n+  #362 = Utf8               append\n+  #363 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #364 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #365 = Utf8               toString\n+  #366 = Utf8               ()Ljava/lang/String;\n+  #367 = Utf8               (Ljava/lang/String;I)V\n+  #368 = Utf8               GetImage\n+  #369 = Utf8               getBeginLine\n+  #370 = Utf8               getBeginColumn\n+  #371 = Utf8               getEndLine\n+  #372 = Utf8               getEndColumn\n+  #373 = Utf8               newToken\n+  #374 = Utf8               (ILjava/lang/String;)Lorg/apache/commons/configuration2/plist/Token;\n+  #375 = Utf8               BeginToken\n+  #376 = Utf8               setLength\n+  #377 = Utf8               backup\n+  #378 = Utf8               next\n+  #379 = Utf8               (ZIIILjava/lang/String;CI)V\n {\n   public java.io.PrintStream debugStream;\n     descriptor: Ljava/io/PrintStream;\n     flags: (0x0001) ACC_PUBLIC\n \n   static final long[] jjbitVec0;\n     descriptor: [J\n"}]}
