{"diffoscope-json-version": 1, "source1": "first/SerializationUtils.class", "source2": "second/SerializationUtils.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -15,16 +15,17 @@\n     public static <T extends Serializable> T clone(final T object) {\n         if (object == null) {\n             return null;\n         }\n         final byte[] objectData = serialize(object);\n         final ByteArrayInputStream bais = new ByteArrayInputStream(objectData);\n         try (final SerializationUtils.ClassLoaderAwareObjectInputStream in = new SerializationUtils.ClassLoaderAwareObjectInputStream((InputStream)bais, object.getClass().getClassLoader())) {\n-            final T readObject = (T)in.readObject();\n-            return readObject;\n+            final Serializable s;\n+            final T readObject = (T)(s = (Serializable)in.readObject());\n+            return (T)s;\n         }\n         catch (final ClassNotFoundException ex) {\n             throw new SerializationException(\"ClassNotFoundException while reading cloned object data\", (Throwable)ex);\n         }\n         catch (final IOException ex2) {\n             throw new SerializationException(\"IOException while reading or closing cloned object data\", (Throwable)ex2);\n         }\n@@ -49,16 +50,17 @@\n         serialize(obj, baos);\n         return baos.toByteArray();\n     }\n     \n     public static <T> T deserialize(final InputStream inputStream) {\n         Validate.notNull((Object)inputStream, \"The InputStream must not be null\", new Object[0]);\n         try (final ObjectInputStream in = new ObjectInputStream(inputStream)) {\n-            final T obj = (T)in.readObject();\n-            return obj;\n+            final Object object;\n+            final T obj = (T)(object = in.readObject());\n+            return (T)object;\n         }\n         catch (final ClassNotFoundException | IOException ex) {\n             throw new SerializationException((Throwable)ex);\n         }\n     }\n     \n     public static <T> T deserialize(final byte[] objectData) {\n"}]}
