{"diffoscope-json-version": 1, "source1": "first/NNTP.class", "source2": "second/NNTP.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -42,15 +42,15 @@\n         }\n         if (this.replyString.length() < 3) {\n             throw new MalformedServerReplyException(\"Truncated server reply: \" + this.replyString);\n         }\n         try {\n             this.replyCode = Integer.parseInt(this.replyString.substring(0, 3));\n         }\n-        catch (final NumberFormatException e) {\n+        catch (final NumberFormatException ex) {\n             throw new MalformedServerReplyException(\"Could not parse response code.\\nServer Reply: \" + this.replyString);\n         }\n         this.fireReplyReceived(this.replyCode, this.replyString + \"\\r\\n\");\n         if (this.replyCode == 400) {\n             throw new NNTPConnectionClosedException(\"NNTP response 400 received.  Server closed connection.\");\n         }\n     }\n@@ -71,40 +71,40 @@\n         this._isAllowedToPost = false;\n     }\n     \n     public boolean isAllowedToPost() {\n         return this._isAllowedToPost;\n     }\n     \n-    public int sendCommand(final String command, final String args) throws IOException {\n-        final StringBuilder __commandBuffer = new StringBuilder();\n-        __commandBuffer.append(command);\n-        if (args != null) {\n-            __commandBuffer.append(' ');\n-            __commandBuffer.append(args);\n-        }\n-        __commandBuffer.append(\"\\r\\n\");\n-        final String message;\n-        this._writer_.write(message = __commandBuffer.toString());\n+    public int sendCommand(final String str, final String str2) throws IOException {\n+        final StringBuilder sb = new StringBuilder();\n+        sb.append(str);\n+        if (str2 != null) {\n+            sb.append(' ');\n+            sb.append(str2);\n+        }\n+        sb.append(\"\\r\\n\");\n+        final String string;\n+        this._writer_.write(string = sb.toString());\n         this._writer_.flush();\n-        this.fireCommandSent(command, message);\n+        this.fireCommandSent(str, string);\n         this.__getReply();\n         return this.replyCode;\n     }\n     \n-    public int sendCommand(final int command, final String args) throws IOException {\n-        return this.sendCommand(NNTPCommand.getCommand(command), args);\n+    public int sendCommand(final int n, final String s) throws IOException {\n+        return this.sendCommand(NNTPCommand.getCommand(n), s);\n     }\n     \n-    public int sendCommand(final String command) throws IOException {\n-        return this.sendCommand(command, null);\n+    public int sendCommand(final String s) throws IOException {\n+        return this.sendCommand(s, null);\n     }\n     \n-    public int sendCommand(final int command) throws IOException {\n-        return this.sendCommand(command, null);\n+    public int sendCommand(final int n) throws IOException {\n+        return this.sendCommand(n, null);\n     }\n     \n     public int getReplyCode() {\n         return this.replyCode;\n     }\n     \n     public int getReply() throws IOException {\n@@ -112,175 +112,173 @@\n         return this.replyCode;\n     }\n     \n     public String getReplyString() {\n         return this.replyString;\n     }\n     \n-    public int article(final String messageId) throws IOException {\n-        return this.sendCommand(0, messageId);\n+    public int article(final String s) throws IOException {\n+        return this.sendCommand(0, s);\n     }\n     \n-    public int article(final long articleNumber) throws IOException {\n-        return this.sendCommand(0, Long.toString(articleNumber));\n+    public int article(final long i) throws IOException {\n+        return this.sendCommand(0, Long.toString(i));\n     }\n     \n     public int article() throws IOException {\n         return this.sendCommand(0);\n     }\n     \n-    public int body(final String messageId) throws IOException {\n-        return this.sendCommand(1, messageId);\n+    public int body(final String s) throws IOException {\n+        return this.sendCommand(1, s);\n     }\n     \n-    public int body(final long articleNumber) throws IOException {\n-        return this.sendCommand(1, Long.toString(articleNumber));\n+    public int body(final long i) throws IOException {\n+        return this.sendCommand(1, Long.toString(i));\n     }\n     \n     public int body() throws IOException {\n         return this.sendCommand(1);\n     }\n     \n-    public int head(final String messageId) throws IOException {\n-        return this.sendCommand(3, messageId);\n+    public int head(final String s) throws IOException {\n+        return this.sendCommand(3, s);\n     }\n     \n-    public int head(final long articleNumber) throws IOException {\n-        return this.sendCommand(3, Long.toString(articleNumber));\n+    public int head(final long i) throws IOException {\n+        return this.sendCommand(3, Long.toString(i));\n     }\n     \n     public int head() throws IOException {\n         return this.sendCommand(3);\n     }\n     \n-    public int stat(final String messageId) throws IOException {\n-        return this.sendCommand(14, messageId);\n+    public int stat(final String s) throws IOException {\n+        return this.sendCommand(14, s);\n     }\n     \n-    public int stat(final long articleNumber) throws IOException {\n-        return this.sendCommand(14, Long.toString(articleNumber));\n+    public int stat(final long i) throws IOException {\n+        return this.sendCommand(14, Long.toString(i));\n     }\n     \n     public int stat() throws IOException {\n         return this.sendCommand(14);\n     }\n     \n-    public int group(final String newsgroup) throws IOException {\n-        return this.sendCommand(2, newsgroup);\n+    public int group(final String s) throws IOException {\n+        return this.sendCommand(2, s);\n     }\n     \n     public int help() throws IOException {\n         return this.sendCommand(4);\n     }\n     \n-    public int ihave(final String messageId) throws IOException {\n-        return this.sendCommand(5, messageId);\n+    public int ihave(final String s) throws IOException {\n+        return this.sendCommand(5, s);\n     }\n     \n     public int last() throws IOException {\n         return this.sendCommand(6);\n     }\n     \n     public int list() throws IOException {\n         return this.sendCommand(7);\n     }\n     \n     public int next() throws IOException {\n         return this.sendCommand(10);\n     }\n     \n-    public int newgroups(final String date, final String time, final boolean GMT, final String distributions) throws IOException {\n-        final StringBuilder buffer = new StringBuilder();\n-        buffer.append(date);\n-        buffer.append(' ');\n-        buffer.append(time);\n-        if (GMT) {\n-            buffer.append(' ');\n-            buffer.append(\"GMT\");\n-        }\n-        if (distributions != null) {\n-            buffer.append(\" <\");\n-            buffer.append(distributions);\n-            buffer.append('>');\n-        }\n-        return this.sendCommand(8, buffer.toString());\n-    }\n-    \n-    public int newnews(final String newsgroups, final String date, final String time, final boolean GMT, final String distributions) throws IOException {\n-        final StringBuilder buffer = new StringBuilder();\n-        buffer.append(newsgroups);\n-        buffer.append(' ');\n-        buffer.append(date);\n-        buffer.append(' ');\n-        buffer.append(time);\n-        if (GMT) {\n-            buffer.append(' ');\n-            buffer.append(\"GMT\");\n-        }\n-        if (distributions != null) {\n-            buffer.append(\" <\");\n-            buffer.append(distributions);\n-            buffer.append('>');\n+    public int newgroups(final String str, final String str2, final boolean b, final String str3) throws IOException {\n+        final StringBuilder sb = new StringBuilder();\n+        sb.append(str);\n+        sb.append(' ');\n+        sb.append(str2);\n+        if (b) {\n+            sb.append(' ');\n+            sb.append(\"GMT\");\n+        }\n+        if (str3 != null) {\n+            sb.append(\" <\");\n+            sb.append(str3);\n+            sb.append('>');\n+        }\n+        return this.sendCommand(8, sb.toString());\n+    }\n+    \n+    public int newnews(final String str, final String str2, final String str3, final boolean b, final String str4) throws IOException {\n+        final StringBuilder sb = new StringBuilder();\n+        sb.append(str);\n+        sb.append(' ');\n+        sb.append(str2);\n+        sb.append(' ');\n+        sb.append(str3);\n+        if (b) {\n+            sb.append(' ');\n+            sb.append(\"GMT\");\n+        }\n+        if (str4 != null) {\n+            sb.append(\" <\");\n+            sb.append(str4);\n+            sb.append('>');\n         }\n-        return this.sendCommand(9, buffer.toString());\n+        return this.sendCommand(9, sb.toString());\n     }\n     \n     public int post() throws IOException {\n         return this.sendCommand(11);\n     }\n     \n     public int quit() throws IOException {\n         return this.sendCommand(12);\n     }\n     \n-    public int authinfoUser(final String username) throws IOException {\n-        final String userParameter = \"USER \" + username;\n-        return this.sendCommand(15, userParameter);\n+    public int authinfoUser(final String str) throws IOException {\n+        return this.sendCommand(15, \"USER \" + str);\n     }\n     \n-    public int authinfoPass(final String password) throws IOException {\n-        final String passParameter = \"PASS \" + password;\n-        return this.sendCommand(15, passParameter);\n+    public int authinfoPass(final String str) throws IOException {\n+        return this.sendCommand(15, \"PASS \" + str);\n     }\n     \n-    public int xover(final String selectedArticles) throws IOException {\n-        return this.sendCommand(16, selectedArticles);\n+    public int xover(final String s) throws IOException {\n+        return this.sendCommand(16, s);\n     }\n     \n-    public int xhdr(final String header, final String selectedArticles) throws IOException {\n-        final StringBuilder command = new StringBuilder(header);\n-        command.append(\" \");\n-        command.append(selectedArticles);\n-        return this.sendCommand(17, command.toString());\n+    public int xhdr(final String str, final String str2) throws IOException {\n+        final StringBuilder sb = new StringBuilder(str);\n+        sb.append(\" \");\n+        sb.append(str2);\n+        return this.sendCommand(17, sb.toString());\n     }\n     \n-    public int listActive(final String wildmat) throws IOException {\n-        final StringBuilder command = new StringBuilder(\"ACTIVE \");\n-        command.append(wildmat);\n-        return this.sendCommand(7, command.toString());\n+    public int listActive(final String str) throws IOException {\n+        final StringBuilder sb = new StringBuilder(\"ACTIVE \");\n+        sb.append(str);\n+        return this.sendCommand(7, sb.toString());\n     }\n     \n     @Deprecated\n-    public int article(final int a) throws IOException {\n-        return this.article((long)a);\n+    public int article(final int n) throws IOException {\n+        return this.article((long)n);\n     }\n     \n     @Deprecated\n-    public int body(final int a) throws IOException {\n-        return this.body((long)a);\n+    public int body(final int n) throws IOException {\n+        return this.body((long)n);\n     }\n     \n     @Deprecated\n-    public int head(final int a) throws IOException {\n-        return this.head((long)a);\n+    public int head(final int n) throws IOException {\n+        return this.head((long)n);\n     }\n     \n     @Deprecated\n-    public int stat(final int a) throws IOException {\n-        return this.stat((long)a);\n+    public int stat(final int n) throws IOException {\n+        return this.stat((long)n);\n     }\n     \n     protected ProtocolCommandSupport getCommandSupport() {\n         return this._commandSupport_;\n     }\n     \n     static {\n"}]}
