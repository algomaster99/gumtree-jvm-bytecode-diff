{"diffoscope-json-version": 1, "source1": "first/CombinedConfiguration$ConfigData.class", "source2": "second/CombinedConfiguration$ConfigData.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -65,27 +65,27 @@\n             builder.value(orgRoot.getValue());\n         }\n     }\n     \n     private ImmutableNode getRootNodeOfConfiguration() {\n         this.getConfiguration().lock(LockMode.READ);\n         try {\n-            final ImmutableNode root = ConfigurationUtils.convertToHierarchical(this.getConfiguration(), CombinedConfiguration.access$000(this.this$0)).getNodeModel().getInMemoryRepresentation();\n+            final ImmutableNode root = ConfigurationUtils.convertToHierarchical(this.getConfiguration(), CombinedConfiguration.access$1(this.this$0)).getNodeModel().getInMemoryRepresentation();\n             return this.rootNode = root;\n         }\n         finally {\n             this.getConfiguration().unlock(LockMode.READ);\n         }\n     }\n     \n     private Collection<String> parseAt(final String at) {\n         if (at == null) {\n             return null;\n         }\n         final Collection<String> result = new ArrayList<String>();\n-        final DefaultConfigurationKey.KeyIterator it = new DefaultConfigurationKey(CombinedConfiguration.access$100(), at).iterator();\n+        final DefaultConfigurationKey.KeyIterator it = new DefaultConfigurationKey(CombinedConfiguration.access$2(), at).iterator();\n         while (it.hasNext()) {\n             result.add(it.nextKey());\n         }\n         return result;\n     }\n }\n"}]}
