{"diffoscope-json-version": 1, "source1": "first/PropertiesConfigurationLayout.class", "source2": "second/PropertiesConfigurationLayout.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -170,14 +170,15 @@\n         }\n         catch (final IOException ioex) {\n             throw new ConfigurationException((Throwable)ioex);\n         }\n         finally {\n             this.loadCounter.decrementAndGet();\n         }\n+        this.loadCounter.decrementAndGet();\n     }\n     \n     public void save(final PropertiesConfiguration config, final Writer writer) throws ConfigurationException {\n         try {\n             final PropertiesConfiguration.PropertiesWriter pWriter = config.getIOFactory().createPropertiesWriter(writer, config.getListDelimiterHandler());\n             pWriter.setGlobalSeparator(this.getGlobalSeparator());\n             if (this.getLineSeparator() != null) {\n@@ -298,31 +299,32 @@\n         }\n         return buf.toString();\n     }\n     \n     private int checkHeaderComment(final List<String> commentLines) {\n         if (this.loadCounter.get() == 1 && this.layoutData.isEmpty()) {\n             int index;\n-            for (index = commentLines.size() - 1; index >= 0 && StringUtils.isNotEmpty((CharSequence)commentLines.get(index)); --index) {}\n+            for (index = commentLines.size() - 1; index >= 0; --index) {\n+                if (!StringUtils.isNotEmpty((CharSequence)commentLines.get(index))) {\n+                    break;\n+                }\n+            }\n             while (index >= 0 && StringUtils.isEmpty((CharSequence)commentLines.get(index))) {\n                 --index;\n             }\n             if (this.getHeaderComment() == null) {\n                 this.setHeaderComment(this.extractComment(commentLines, 0, index));\n             }\n             return index + 1;\n         }\n         return 0;\n     }\n     \n     private void copyFrom(final PropertiesConfigurationLayout c) {\n-        c.getKeys().forEach(key -> {\n-            final PropertiesConfigurationLayout.PropertyLayoutData propertyLayoutData = (PropertiesConfigurationLayout.PropertyLayoutData)this.layoutData.put(key, ((PropertiesConfigurationLayout.PropertyLayoutData)c.layoutData.get(key)).clone());\n-            return;\n-        });\n+        c.getKeys().forEach(key -> this.layoutData.put(key, ((PropertiesConfigurationLayout.PropertyLayoutData)propertiesConfigurationLayout.layoutData.get(key)).clone()));\n         this.setHeaderComment(c.getHeaderComment());\n         this.setFooterComment(c.getFooterComment());\n     }\n     \n     private static void writeComment(final PropertiesConfiguration.PropertiesWriter writer, final String comment) throws IOException {\n         if (comment != null) {\n             writer.writeln(StringUtils.replace(comment, \"\\n\", writer.getLineSeparator()));\n"}]}
