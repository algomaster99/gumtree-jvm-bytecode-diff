{"diffoscope-json-version": 1, "source1": "first/Class2HTML.class", "source2": "second/Class2HTML.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,34 +1,46 @@\n \n package org.apache.bcel.util;\n \n-import java.util.HashSet;\n import org.apache.bcel.classfile.Attribute;\n import java.io.OutputStream;\n import java.io.PrintWriter;\n import java.io.FileOutputStream;\n import org.apache.bcel.classfile.Utility;\n import org.apache.bcel.classfile.ClassParser;\n import java.io.File;\n import java.io.IOException;\n import org.apache.bcel.classfile.Method;\n+import java.util.HashSet;\n import java.util.Set;\n import org.apache.bcel.classfile.ConstantPool;\n import org.apache.bcel.classfile.JavaClass;\n import org.apache.bcel.Constants;\n \n public class Class2HTML implements Constants\n {\n     private final JavaClass java_class;\n     private final String dir;\n     private static String class_package;\n     private static String class_name;\n     private static ConstantPool constant_pool;\n     private static final Set<String> basic_types;\n     \n+    static {\n+        (basic_types = new HashSet<String>()).add(\"int\");\n+        Class2HTML.basic_types.add(\"short\");\n+        Class2HTML.basic_types.add(\"boolean\");\n+        Class2HTML.basic_types.add(\"void\");\n+        Class2HTML.basic_types.add(\"char\");\n+        Class2HTML.basic_types.add(\"byte\");\n+        Class2HTML.basic_types.add(\"long\");\n+        Class2HTML.basic_types.add(\"double\");\n+        Class2HTML.basic_types.add(\"float\");\n+    }\n+    \n     public Class2HTML(final JavaClass java_class, final String dir) throws IOException {\n         final Method[] methods = java_class.getMethods();\n         this.java_class = java_class;\n         this.dir = dir;\n         Class2HTML.class_name = java_class.getClassName();\n         Class2HTML.constant_pool = java_class.getConstantPool();\n         final int index = Class2HTML.class_name.lastIndexOf(46);\n@@ -54,16 +66,16 @@\n         String zip_file = null;\n         final char sep = File.separatorChar;\n         String dir = \".\" + sep;\n         for (int i = 0; i < argv.length; ++i) {\n             if (argv[i].charAt(0) == '-') {\n                 if (argv[i].equals(\"-d\")) {\n                     dir = argv[++i];\n-                    if (!dir.endsWith(\"\" + sep)) {\n-                        dir += sep;\n+                    if (!dir.endsWith(new StringBuilder().append(sep).toString())) {\n+                        dir = String.valueOf(dir) + sep;\n                     }\n                     final File store = new File(dir);\n                     if (!store.isDirectory()) {\n                         final boolean created = store.mkdirs();\n                         if (!created && !store.isDirectory()) {\n                             System.out.println(\"Tried to create the directory \" + dir + \" but failed\");\n                         }\n@@ -98,21 +110,21 @@\n             }\n         }\n     }\n     \n     static String referenceClass(final int index) {\n         String str = Class2HTML.constant_pool.getConstantString(index, (byte)7);\n         str = Utility.compactClassName(str);\n-        str = Utility.compactClassName(str, Class2HTML.class_package + \".\", true);\n+        str = Utility.compactClassName(str, String.valueOf(Class2HTML.class_package) + \".\", true);\n         return \"<A HREF=\\\"\" + Class2HTML.class_name + \"_cp.html#cp\" + index + \"\\\" TARGET=ConstantPool>\" + str + \"</A>\";\n     }\n     \n     static String referenceType(final String type) {\n         String short_type = Utility.compactClassName(type);\n-        short_type = Utility.compactClassName(short_type, Class2HTML.class_package + \".\", true);\n+        short_type = Utility.compactClassName(short_type, String.valueOf(Class2HTML.class_package) + \".\", true);\n         final int index = type.indexOf(91);\n         String base_type = type;\n         if (index > -1) {\n             base_type = type.substring(0, index);\n         }\n         if (Class2HTML.basic_types.contains(base_type)) {\n             return \"<FONT COLOR=\\\"#00FF00\\\">\" + type + \"</FONT>\";\n@@ -147,28 +159,37 @@\n                 }\n             }\n         }\n         return buf.toString();\n     }\n     \n     private void writeMainHTML(final AttributeHTML attribute_html) throws IOException {\n-        try (final PrintWriter file = new PrintWriter(new FileOutputStream(this.dir + Class2HTML.class_name + \".html\"))) {\n-            file.println(\"<HTML>\\n<HEAD><TITLE>Documentation for \" + Class2HTML.class_name + \"</TITLE></HEAD>\\n<FRAMESET BORDER=1 cols=\\\"30%,*\\\">\\n<FRAMESET BORDER=1 rows=\\\"80%,*\\\">\\n<FRAME NAME=\\\"ConstantPool\\\" SRC=\\\"\" + Class2HTML.class_name + \"_cp.html\\\"\\n MARGINWIDTH=\\\"0\\\" MARGINHEIGHT=\\\"0\\\" FRAMEBORDER=\\\"1\\\" SCROLLING=\\\"AUTO\\\">\\n<FRAME NAME=\\\"Attributes\\\" SRC=\\\"\" + Class2HTML.class_name + \"_attributes.html\\\"\\n MARGINWIDTH=\\\"0\\\" MARGINHEIGHT=\\\"0\\\" FRAMEBORDER=\\\"1\\\" SCROLLING=\\\"AUTO\\\">\\n</FRAMESET>\\n<FRAMESET BORDER=1 rows=\\\"80%,*\\\">\\n<FRAME NAME=\\\"Code\\\" SRC=\\\"\" + Class2HTML.class_name + \"_code.html\\\"\\n MARGINWIDTH=0 MARGINHEIGHT=0 FRAMEBORDER=1 SCROLLING=\\\"AUTO\\\">\\n<FRAME NAME=\\\"Methods\\\" SRC=\\\"\" + Class2HTML.class_name + \"_methods.html\\\"\\n MARGINWIDTH=0 MARGINHEIGHT=0 FRAMEBORDER=1 SCROLLING=\\\"AUTO\\\">\\n</FRAMESET></FRAMESET></HTML>\");\n+        Throwable t = null;\n+        try {\n+            final PrintWriter file = new PrintWriter(new FileOutputStream(String.valueOf(this.dir) + Class2HTML.class_name + \".html\"));\n+            try {\n+                file.println(\"<HTML>\\n<HEAD><TITLE>Documentation for \" + Class2HTML.class_name + \"</TITLE>\" + \"</HEAD>\\n\" + \"<FRAMESET BORDER=1 cols=\\\"30%,*\\\">\\n\" + \"<FRAMESET BORDER=1 rows=\\\"80%,*\\\">\\n\" + \"<FRAME NAME=\\\"ConstantPool\\\" SRC=\\\"\" + Class2HTML.class_name + \"_cp.html\" + \"\\\"\\n MARGINWIDTH=\\\"0\\\" \" + \"MARGINHEIGHT=\\\"0\\\" FRAMEBORDER=\\\"1\\\" SCROLLING=\\\"AUTO\\\">\\n\" + \"<FRAME NAME=\\\"Attributes\\\" SRC=\\\"\" + Class2HTML.class_name + \"_attributes.html\" + \"\\\"\\n MARGINWIDTH=\\\"0\\\" \" + \"MARGINHEIGHT=\\\"0\\\" FRAMEBORDER=\\\"1\\\" SCROLLING=\\\"AUTO\\\">\\n\" + \"</FRAMESET>\\n\" + \"<FRAMESET BORDER=1 rows=\\\"80%,*\\\">\\n\" + \"<FRAME NAME=\\\"Code\\\" SRC=\\\"\" + Class2HTML.class_name + \"_code.html\\\"\\n MARGINWIDTH=0 \" + \"MARGINHEIGHT=0 FRAMEBORDER=1 SCROLLING=\\\"AUTO\\\">\\n\" + \"<FRAME NAME=\\\"Methods\\\" SRC=\\\"\" + Class2HTML.class_name + \"_methods.html\\\"\\n MARGINWIDTH=0 \" + \"MARGINHEIGHT=0 FRAMEBORDER=1 SCROLLING=\\\"AUTO\\\">\\n\" + \"</FRAMESET></FRAMESET></HTML>\");\n+            }\n+            finally {\n+                if (file != null) {\n+                    file.close();\n+                }\n+            }\n+        }\n+        finally {\n+            if (t == null) {\n+                final Throwable exception;\n+                t = exception;\n+            }\n+            else {\n+                final Throwable exception;\n+                if (t != exception) {\n+                    t.addSuppressed(exception);\n+                }\n+            }\n         }\n         final Attribute[] attributes = this.java_class.getAttributes();\n         for (int i = 0; i < attributes.length; ++i) {\n             attribute_html.writeAttribute(attributes[i], \"class\" + i);\n         }\n     }\n-    \n-    static {\n-        (basic_types = new HashSet<String>()).add(\"int\");\n-        Class2HTML.basic_types.add(\"short\");\n-        Class2HTML.basic_types.add(\"boolean\");\n-        Class2HTML.basic_types.add(\"void\");\n-        Class2HTML.basic_types.add(\"char\");\n-        Class2HTML.basic_types.add(\"byte\");\n-        Class2HTML.basic_types.add(\"long\");\n-        Class2HTML.basic_types.add(\"double\");\n-        Class2HTML.basic_types.add(\"float\");\n-    }\n }\n"}]}
