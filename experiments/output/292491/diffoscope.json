{"diffoscope-json-version": 1, "source1": "first/TelnetClient.class", "source2": "second/TelnetClient.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,61 +1,61 @@\n-  SHA-256 checksum 6b1769249947417827cdda437ced5ab5e4a9601f3410b406a4e57cf163de9bcb\n+  SHA-256 checksum 79c996dfce81806edab607f35bc7b714c6b7cef52401d3fd61e37636a5d553fd\n   Compiled from \"TelnetClient.java\"\n public class org.apache.commons.net.telnet.TelnetClient extends org.apache.commons.net.telnet.Telnet\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #2                          // org/apache/commons/net/telnet/TelnetClient\n   super_class: #44                        // org/apache/commons/net/telnet/Telnet\n   interfaces: 0, fields: 6, methods: 26, attributes: 1\n Constant pool:\n-    #1 = String             #110          // VT100\n-    #2 = Class              #111          // org/apache/commons/net/telnet/TelnetClient\n-    #3 = Methodref          #2.#112       // org/apache/commons/net/telnet/TelnetClient.\"<init>\":(Ljava/lang/String;I)V\n-    #4 = Methodref          #44.#113      // org/apache/commons/net/telnet/Telnet.\"<init>\":(Ljava/lang/String;)V\n-    #5 = Fieldref           #2.#114       // org/apache/commons/net/telnet/TelnetClient.readerThread:Z\n-    #6 = Fieldref           #2.#115       // org/apache/commons/net/telnet/TelnetClient.input:Ljava/io/InputStream;\n-    #7 = Fieldref           #2.#116       // org/apache/commons/net/telnet/TelnetClient.output:Ljava/io/OutputStream;\n-    #8 = Fieldref           #2.#117       // org/apache/commons/net/telnet/TelnetClient.maxSubnegotiationLength:I\n-    #9 = Fieldref           #2.#118       // org/apache/commons/net/telnet/TelnetClient._output_:Ljava/io/OutputStream;\n-   #10 = Class              #119          // java/io/IOException\n-   #11 = String             #120          // Stream closed\n-   #12 = Methodref          #10.#113      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #13 = Methodref          #121.#122     // java/io/OutputStream.flush:()V\n-   #14 = Methodref          #121.#123     // java/io/OutputStream.close:()V\n-   #15 = Methodref          #44.#124      // org/apache/commons/net/telnet/Telnet._connectAction_:()V\n-   #16 = Class              #125          // org/apache/commons/net/telnet/TelnetInputStream\n-   #17 = Fieldref           #2.#126       // org/apache/commons/net/telnet/TelnetClient._input_:Ljava/io/InputStream;\n-   #18 = Methodref          #16.#127      // org/apache/commons/net/telnet/TelnetInputStream.\"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/net/telnet/TelnetClient;Z)V\n-   #19 = Methodref          #16.#128      // org/apache/commons/net/telnet/TelnetInputStream._start:()V\n-   #20 = Class              #129          // java/io/BufferedInputStream\n-   #21 = Methodref          #20.#130      // java/io/BufferedInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #22 = Class              #131          // org/apache/commons/net/telnet/TelnetOutputStream\n-   #23 = Methodref          #22.#132      // org/apache/commons/net/telnet/TelnetOutputStream.\"<init>\":(Lorg/apache/commons/net/telnet/TelnetClient;)V\n-   #24 = Methodref          #133.#123     // java/io/InputStream.close:()V\n-   #25 = Methodref          #44.#134      // org/apache/commons/net/telnet/Telnet.disconnect:()V\n-   #26 = Methodref          #2.#135       // org/apache/commons/net/telnet/TelnetClient.stateIsWill:(I)Z\n-   #27 = Methodref          #2.#136       // org/apache/commons/net/telnet/TelnetClient.requestedWill:(I)Z\n-   #28 = Methodref          #2.#137       // org/apache/commons/net/telnet/TelnetClient.stateIsDo:(I)Z\n-   #29 = Methodref          #2.#138       // org/apache/commons/net/telnet/TelnetClient.requestedDo:(I)Z\n-   #30 = Methodref          #2.#139       // org/apache/commons/net/telnet/TelnetClient._sendAYT:(J)Z\n-   #31 = Class              #140          // java/lang/IllegalArgumentException\n-   #32 = String             #141          // zero length message\n-   #33 = Methodref          #31.#113      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #34 = Methodref          #2.#142       // org/apache/commons/net/telnet/TelnetClient._sendSubnegotiation:([I)V\n-   #35 = Methodref          #2.#143       // org/apache/commons/net/telnet/TelnetClient._sendCommand:(B)V\n-   #36 = Methodref          #44.#144      // org/apache/commons/net/telnet/Telnet.addOptionHandler:(Lorg/apache/commons/net/telnet/TelnetOptionHandler;)V\n-   #37 = Methodref          #44.#145      // org/apache/commons/net/telnet/Telnet.deleteOptionHandler:(I)V\n-   #38 = Methodref          #44.#146      // org/apache/commons/net/telnet/Telnet._registerSpyStream:(Ljava/io/OutputStream;)V\n-   #39 = Methodref          #44.#147      // org/apache/commons/net/telnet/Telnet._stopSpyStream:()V\n-   #40 = Methodref          #44.#148      // org/apache/commons/net/telnet/Telnet.registerNotifHandler:(Lorg/apache/commons/net/telnet/TelnetNotificationHandler;)V\n-   #41 = Methodref          #44.#149      // org/apache/commons/net/telnet/Telnet.unregisterNotifHandler:()V\n-   #42 = Fieldref           #2.#150       // org/apache/commons/net/telnet/TelnetClient.inputListener:Lorg/apache/commons/net/telnet/TelnetInputListener;\n-   #43 = InterfaceMethodref #151.#152     // org/apache/commons/net/telnet/TelnetInputListener.telnetInputAvailable:()V\n-   #44 = Class              #153          // org/apache/commons/net/telnet/Telnet\n+    #1 = String             #108          // VT100\n+    #2 = Class              #109          // org/apache/commons/net/telnet/TelnetClient\n+    #3 = Methodref          #2.#110       // org/apache/commons/net/telnet/TelnetClient.\"<init>\":(Ljava/lang/String;I)V\n+    #4 = Methodref          #44.#111      // org/apache/commons/net/telnet/Telnet.\"<init>\":(Ljava/lang/String;)V\n+    #5 = Fieldref           #2.#112       // org/apache/commons/net/telnet/TelnetClient.readerThread:Z\n+    #6 = Fieldref           #2.#113       // org/apache/commons/net/telnet/TelnetClient.input:Ljava/io/InputStream;\n+    #7 = Fieldref           #2.#114       // org/apache/commons/net/telnet/TelnetClient.output:Ljava/io/OutputStream;\n+    #8 = Fieldref           #2.#115       // org/apache/commons/net/telnet/TelnetClient.maxSubnegotiationLength:I\n+    #9 = Fieldref           #2.#116       // org/apache/commons/net/telnet/TelnetClient._output_:Ljava/io/OutputStream;\n+   #10 = Class              #117          // java/io/IOException\n+   #11 = String             #118          // Stream closed\n+   #12 = Methodref          #10.#111      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #13 = Methodref          #119.#120     // java/io/OutputStream.flush:()V\n+   #14 = Methodref          #119.#121     // java/io/OutputStream.close:()V\n+   #15 = Methodref          #44.#122      // org/apache/commons/net/telnet/Telnet._connectAction_:()V\n+   #16 = Class              #123          // org/apache/commons/net/telnet/TelnetInputStream\n+   #17 = Fieldref           #2.#124       // org/apache/commons/net/telnet/TelnetClient._input_:Ljava/io/InputStream;\n+   #18 = Methodref          #16.#125      // org/apache/commons/net/telnet/TelnetInputStream.\"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/net/telnet/TelnetClient;Z)V\n+   #19 = Methodref          #16.#126      // org/apache/commons/net/telnet/TelnetInputStream._start:()V\n+   #20 = Class              #127          // java/io/BufferedInputStream\n+   #21 = Methodref          #20.#128      // java/io/BufferedInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #22 = Class              #129          // org/apache/commons/net/telnet/TelnetOutputStream\n+   #23 = Methodref          #22.#130      // org/apache/commons/net/telnet/TelnetOutputStream.\"<init>\":(Lorg/apache/commons/net/telnet/TelnetClient;)V\n+   #24 = Methodref          #131.#121     // java/io/InputStream.close:()V\n+   #25 = Methodref          #44.#132      // org/apache/commons/net/telnet/Telnet.disconnect:()V\n+   #26 = Methodref          #2.#133       // org/apache/commons/net/telnet/TelnetClient.stateIsWill:(I)Z\n+   #27 = Methodref          #2.#134       // org/apache/commons/net/telnet/TelnetClient.requestedWill:(I)Z\n+   #28 = Methodref          #2.#135       // org/apache/commons/net/telnet/TelnetClient.stateIsDo:(I)Z\n+   #29 = Methodref          #2.#136       // org/apache/commons/net/telnet/TelnetClient.requestedDo:(I)Z\n+   #30 = Methodref          #2.#137       // org/apache/commons/net/telnet/TelnetClient._sendAYT:(J)Z\n+   #31 = Class              #138          // java/lang/IllegalArgumentException\n+   #32 = String             #139          // zero length message\n+   #33 = Methodref          #31.#111      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #34 = Methodref          #2.#140       // org/apache/commons/net/telnet/TelnetClient._sendSubnegotiation:([I)V\n+   #35 = Methodref          #2.#141       // org/apache/commons/net/telnet/TelnetClient._sendCommand:(B)V\n+   #36 = Methodref          #44.#142      // org/apache/commons/net/telnet/Telnet.addOptionHandler:(Lorg/apache/commons/net/telnet/TelnetOptionHandler;)V\n+   #37 = Methodref          #44.#143      // org/apache/commons/net/telnet/Telnet.deleteOptionHandler:(I)V\n+   #38 = Methodref          #44.#144      // org/apache/commons/net/telnet/Telnet._registerSpyStream:(Ljava/io/OutputStream;)V\n+   #39 = Methodref          #44.#145      // org/apache/commons/net/telnet/Telnet._stopSpyStream:()V\n+   #40 = Methodref          #44.#146      // org/apache/commons/net/telnet/Telnet.registerNotifHandler:(Lorg/apache/commons/net/telnet/TelnetNotificationHandler;)V\n+   #41 = Methodref          #44.#147      // org/apache/commons/net/telnet/Telnet.unregisterNotifHandler:()V\n+   #42 = Fieldref           #2.#148       // org/apache/commons/net/telnet/TelnetClient.inputListener:Lorg/apache/commons/net/telnet/TelnetInputListener;\n+   #43 = InterfaceMethodref #105.#149     // org/apache/commons/net/telnet/TelnetInputListener.telnetInputAvailable:()V\n+   #44 = Class              #150          // org/apache/commons/net/telnet/Telnet\n    #45 = Utf8               DEFAULT_MAX_SUBNEGOTIATION_LENGTH\n    #46 = Utf8               I\n    #47 = Utf8               ConstantValue\n    #48 = Integer            512\n    #49 = Utf8               maxSubnegotiationLength\n    #50 = Utf8               input\n    #51 = Utf8               Ljava/io/InputStream;\n@@ -72,124 +72,121 @@\n    #62 = Utf8               (Ljava/lang/String;)V\n    #63 = Utf8               (I)V\n    #64 = Utf8               (Ljava/lang/String;I)V\n    #65 = Utf8               flushOutputStream\n    #66 = Utf8               StackMapTable\n    #67 = Utf8               Exceptions\n    #68 = Utf8               closeOutputStream\n-   #69 = Class              #154          // java/lang/Throwable\n+   #69 = Class              #151          // java/lang/Throwable\n    #70 = Utf8               _connectAction_\n-   #71 = Class              #125          // org/apache/commons/net/telnet/TelnetInputStream\n-   #72 = Utf8               disconnect\n-   #73 = Utf8               getOutputStream\n-   #74 = Utf8               ()Ljava/io/OutputStream;\n-   #75 = Utf8               getInputStream\n-   #76 = Utf8               ()Ljava/io/InputStream;\n-   #77 = Utf8               getLocalOptionState\n-   #78 = Utf8               (I)Z\n-   #79 = Utf8               getRemoteOptionState\n-   #80 = Utf8               sendAYT\n-   #81 = Utf8               (J)Z\n-   #82 = Class              #155          // java/lang/InterruptedException\n-   #83 = Utf8               sendSubnegotiation\n-   #84 = Utf8               ([I)V\n-   #85 = Utf8               sendCommand\n-   #86 = Utf8               (B)V\n-   #87 = Utf8               addOptionHandler\n-   #88 = Utf8               (Lorg/apache/commons/net/telnet/TelnetOptionHandler;)V\n-   #89 = Class              #156          // org/apache/commons/net/telnet/InvalidTelnetOptionException\n-   #90 = Utf8               deleteOptionHandler\n-   #91 = Utf8               registerSpyStream\n-   #92 = Utf8               (Ljava/io/OutputStream;)V\n-   #93 = Utf8               stopSpyStream\n-   #94 = Utf8               registerNotifHandler\n-   #95 = Utf8               (Lorg/apache/commons/net/telnet/TelnetNotificationHandler;)V\n-   #96 = Utf8               unregisterNotifHandler\n-   #97 = Utf8               setReaderThread\n-   #98 = Utf8               (Z)V\n-   #99 = Utf8               getReaderThread\n-  #100 = Utf8               ()Z\n-  #101 = Utf8               registerInputListener\n-  #102 = Utf8               (Lorg/apache/commons/net/telnet/TelnetInputListener;)V\n-  #103 = Utf8               unregisterInputListener\n-  #104 = Utf8               notifyInputListener\n-  #105 = Class              #111          // org/apache/commons/net/telnet/TelnetClient\n-  #106 = Class              #157          // java/lang/Object\n-  #107 = Class              #158          // org/apache/commons/net/telnet/TelnetInputListener\n-  #108 = Utf8               SourceFile\n-  #109 = Utf8               TelnetClient.java\n-  #110 = Utf8               VT100\n-  #111 = Utf8               org/apache/commons/net/telnet/TelnetClient\n-  #112 = NameAndType        #58:#64       // \"<init>\":(Ljava/lang/String;I)V\n-  #113 = NameAndType        #58:#62       // \"<init>\":(Ljava/lang/String;)V\n-  #114 = NameAndType        #54:#55       // readerThread:Z\n-  #115 = NameAndType        #50:#51       // input:Ljava/io/InputStream;\n-  #116 = NameAndType        #52:#53       // output:Ljava/io/OutputStream;\n-  #117 = NameAndType        #49:#46       // maxSubnegotiationLength:I\n-  #118 = NameAndType        #159:#53      // _output_:Ljava/io/OutputStream;\n-  #119 = Utf8               java/io/IOException\n-  #120 = Utf8               Stream closed\n-  #121 = Class              #160          // java/io/OutputStream\n-  #122 = NameAndType        #161:#59      // flush:()V\n-  #123 = NameAndType        #162:#59      // close:()V\n-  #124 = NameAndType        #70:#59       // _connectAction_:()V\n-  #125 = Utf8               org/apache/commons/net/telnet/TelnetInputStream\n-  #126 = NameAndType        #163:#51      // _input_:Ljava/io/InputStream;\n-  #127 = NameAndType        #58:#164      // \"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/net/telnet/TelnetClient;Z)V\n-  #128 = NameAndType        #165:#59      // _start:()V\n-  #129 = Utf8               java/io/BufferedInputStream\n-  #130 = NameAndType        #58:#166      // \"<init>\":(Ljava/io/InputStream;)V\n-  #131 = Utf8               org/apache/commons/net/telnet/TelnetOutputStream\n-  #132 = NameAndType        #58:#167      // \"<init>\":(Lorg/apache/commons/net/telnet/TelnetClient;)V\n-  #133 = Class              #168          // java/io/InputStream\n-  #134 = NameAndType        #72:#59       // disconnect:()V\n-  #135 = NameAndType        #169:#78      // stateIsWill:(I)Z\n-  #136 = NameAndType        #170:#78      // requestedWill:(I)Z\n-  #137 = NameAndType        #171:#78      // stateIsDo:(I)Z\n-  #138 = NameAndType        #172:#78      // requestedDo:(I)Z\n-  #139 = NameAndType        #173:#81      // _sendAYT:(J)Z\n-  #140 = Utf8               java/lang/IllegalArgumentException\n-  #141 = Utf8               zero length message\n-  #142 = NameAndType        #174:#84      // _sendSubnegotiation:([I)V\n-  #143 = NameAndType        #175:#86      // _sendCommand:(B)V\n-  #144 = NameAndType        #87:#88       // addOptionHandler:(Lorg/apache/commons/net/telnet/TelnetOptionHandler;)V\n-  #145 = NameAndType        #90:#63       // deleteOptionHandler:(I)V\n-  #146 = NameAndType        #176:#92      // _registerSpyStream:(Ljava/io/OutputStream;)V\n-  #147 = NameAndType        #177:#59      // _stopSpyStream:()V\n-  #148 = NameAndType        #94:#95       // registerNotifHandler:(Lorg/apache/commons/net/telnet/TelnetNotificationHandler;)V\n-  #149 = NameAndType        #96:#59       // unregisterNotifHandler:()V\n-  #150 = NameAndType        #56:#57       // inputListener:Lorg/apache/commons/net/telnet/TelnetInputListener;\n-  #151 = Class              #158          // org/apache/commons/net/telnet/TelnetInputListener\n-  #152 = NameAndType        #178:#59      // telnetInputAvailable:()V\n-  #153 = Utf8               org/apache/commons/net/telnet/Telnet\n-  #154 = Utf8               java/lang/Throwable\n-  #155 = Utf8               java/lang/InterruptedException\n-  #156 = Utf8               org/apache/commons/net/telnet/InvalidTelnetOptionException\n-  #157 = Utf8               java/lang/Object\n-  #158 = Utf8               org/apache/commons/net/telnet/TelnetInputListener\n-  #159 = Utf8               _output_\n-  #160 = Utf8               java/io/OutputStream\n-  #161 = Utf8               flush\n-  #162 = Utf8               close\n-  #163 = Utf8               _input_\n-  #164 = Utf8               (Ljava/io/InputStream;Lorg/apache/commons/net/telnet/TelnetClient;Z)V\n-  #165 = Utf8               _start\n-  #166 = Utf8               (Ljava/io/InputStream;)V\n-  #167 = Utf8               (Lorg/apache/commons/net/telnet/TelnetClient;)V\n-  #168 = Utf8               java/io/InputStream\n-  #169 = Utf8               stateIsWill\n-  #170 = Utf8               requestedWill\n-  #171 = Utf8               stateIsDo\n-  #172 = Utf8               requestedDo\n-  #173 = Utf8               _sendAYT\n-  #174 = Utf8               _sendSubnegotiation\n-  #175 = Utf8               _sendCommand\n-  #176 = Utf8               _registerSpyStream\n-  #177 = Utf8               _stopSpyStream\n-  #178 = Utf8               telnetInputAvailable\n+   #71 = Utf8               disconnect\n+   #72 = Utf8               getOutputStream\n+   #73 = Utf8               ()Ljava/io/OutputStream;\n+   #74 = Utf8               getInputStream\n+   #75 = Utf8               ()Ljava/io/InputStream;\n+   #76 = Utf8               getLocalOptionState\n+   #77 = Utf8               (I)Z\n+   #78 = Utf8               getRemoteOptionState\n+   #79 = Utf8               sendAYT\n+   #80 = Utf8               (J)Z\n+   #81 = Class              #152          // java/lang/InterruptedException\n+   #82 = Utf8               sendSubnegotiation\n+   #83 = Utf8               ([I)V\n+   #84 = Utf8               sendCommand\n+   #85 = Utf8               (B)V\n+   #86 = Utf8               addOptionHandler\n+   #87 = Utf8               (Lorg/apache/commons/net/telnet/TelnetOptionHandler;)V\n+   #88 = Class              #153          // org/apache/commons/net/telnet/InvalidTelnetOptionException\n+   #89 = Utf8               deleteOptionHandler\n+   #90 = Utf8               registerSpyStream\n+   #91 = Utf8               (Ljava/io/OutputStream;)V\n+   #92 = Utf8               stopSpyStream\n+   #93 = Utf8               registerNotifHandler\n+   #94 = Utf8               (Lorg/apache/commons/net/telnet/TelnetNotificationHandler;)V\n+   #95 = Utf8               unregisterNotifHandler\n+   #96 = Utf8               setReaderThread\n+   #97 = Utf8               (Z)V\n+   #98 = Utf8               getReaderThread\n+   #99 = Utf8               ()Z\n+  #100 = Utf8               registerInputListener\n+  #101 = Utf8               (Lorg/apache/commons/net/telnet/TelnetInputListener;)V\n+  #102 = Utf8               unregisterInputListener\n+  #103 = Utf8               notifyInputListener\n+  #104 = Class              #154          // java/lang/Object\n+  #105 = Class              #155          // org/apache/commons/net/telnet/TelnetInputListener\n+  #106 = Utf8               SourceFile\n+  #107 = Utf8               TelnetClient.java\n+  #108 = Utf8               VT100\n+  #109 = Utf8               org/apache/commons/net/telnet/TelnetClient\n+  #110 = NameAndType        #58:#64       // \"<init>\":(Ljava/lang/String;I)V\n+  #111 = NameAndType        #58:#62       // \"<init>\":(Ljava/lang/String;)V\n+  #112 = NameAndType        #54:#55       // readerThread:Z\n+  #113 = NameAndType        #50:#51       // input:Ljava/io/InputStream;\n+  #114 = NameAndType        #52:#53       // output:Ljava/io/OutputStream;\n+  #115 = NameAndType        #49:#46       // maxSubnegotiationLength:I\n+  #116 = NameAndType        #156:#53      // _output_:Ljava/io/OutputStream;\n+  #117 = Utf8               java/io/IOException\n+  #118 = Utf8               Stream closed\n+  #119 = Class              #157          // java/io/OutputStream\n+  #120 = NameAndType        #158:#59      // flush:()V\n+  #121 = NameAndType        #159:#59      // close:()V\n+  #122 = NameAndType        #70:#59       // _connectAction_:()V\n+  #123 = Utf8               org/apache/commons/net/telnet/TelnetInputStream\n+  #124 = NameAndType        #160:#51      // _input_:Ljava/io/InputStream;\n+  #125 = NameAndType        #58:#161      // \"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/net/telnet/TelnetClient;Z)V\n+  #126 = NameAndType        #162:#59      // _start:()V\n+  #127 = Utf8               java/io/BufferedInputStream\n+  #128 = NameAndType        #58:#163      // \"<init>\":(Ljava/io/InputStream;)V\n+  #129 = Utf8               org/apache/commons/net/telnet/TelnetOutputStream\n+  #130 = NameAndType        #58:#164      // \"<init>\":(Lorg/apache/commons/net/telnet/TelnetClient;)V\n+  #131 = Class              #165          // java/io/InputStream\n+  #132 = NameAndType        #71:#59       // disconnect:()V\n+  #133 = NameAndType        #166:#77      // stateIsWill:(I)Z\n+  #134 = NameAndType        #167:#77      // requestedWill:(I)Z\n+  #135 = NameAndType        #168:#77      // stateIsDo:(I)Z\n+  #136 = NameAndType        #169:#77      // requestedDo:(I)Z\n+  #137 = NameAndType        #170:#80      // _sendAYT:(J)Z\n+  #138 = Utf8               java/lang/IllegalArgumentException\n+  #139 = Utf8               zero length message\n+  #140 = NameAndType        #171:#83      // _sendSubnegotiation:([I)V\n+  #141 = NameAndType        #172:#85      // _sendCommand:(B)V\n+  #142 = NameAndType        #86:#87       // addOptionHandler:(Lorg/apache/commons/net/telnet/TelnetOptionHandler;)V\n+  #143 = NameAndType        #89:#63       // deleteOptionHandler:(I)V\n+  #144 = NameAndType        #173:#91      // _registerSpyStream:(Ljava/io/OutputStream;)V\n+  #145 = NameAndType        #174:#59      // _stopSpyStream:()V\n+  #146 = NameAndType        #93:#94       // registerNotifHandler:(Lorg/apache/commons/net/telnet/TelnetNotificationHandler;)V\n+  #147 = NameAndType        #95:#59       // unregisterNotifHandler:()V\n+  #148 = NameAndType        #56:#57       // inputListener:Lorg/apache/commons/net/telnet/TelnetInputListener;\n+  #149 = NameAndType        #175:#59      // telnetInputAvailable:()V\n+  #150 = Utf8               org/apache/commons/net/telnet/Telnet\n+  #151 = Utf8               java/lang/Throwable\n+  #152 = Utf8               java/lang/InterruptedException\n+  #153 = Utf8               org/apache/commons/net/telnet/InvalidTelnetOptionException\n+  #154 = Utf8               java/lang/Object\n+  #155 = Utf8               org/apache/commons/net/telnet/TelnetInputListener\n+  #156 = Utf8               _output_\n+  #157 = Utf8               java/io/OutputStream\n+  #158 = Utf8               flush\n+  #159 = Utf8               close\n+  #160 = Utf8               _input_\n+  #161 = Utf8               (Ljava/io/InputStream;Lorg/apache/commons/net/telnet/TelnetClient;Z)V\n+  #162 = Utf8               _start\n+  #163 = Utf8               (Ljava/io/InputStream;)V\n+  #164 = Utf8               (Lorg/apache/commons/net/telnet/TelnetClient;)V\n+  #165 = Utf8               java/io/InputStream\n+  #166 = Utf8               stateIsWill\n+  #167 = Utf8               requestedWill\n+  #168 = Utf8               stateIsDo\n+  #169 = Utf8               requestedDo\n+  #170 = Utf8               _sendAYT\n+  #171 = Utf8               _sendSubnegotiation\n+  #172 = Utf8               _sendCommand\n+  #173 = Utf8               _registerSpyStream\n+  #174 = Utf8               _stopSpyStream\n+  #175 = Utf8               telnetInputAvailable\n {\n   private static final int DEFAULT_MAX_SUBNEGOTIATION_LENGTH = 512;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 512\n \n   final int maxSubnegotiationLength;\n"}]}
