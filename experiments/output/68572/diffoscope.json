{"diffoscope-json-version": 1, "source1": "first/Base64.class", "source2": "second/Base64.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -26,14 +26,22 @@\n     private int pos;\n     private int readPos;\n     private int currentLinePos;\n     private int modulus;\n     private boolean eof;\n     private int x;\n     \n+    static {\n+        CHUNK_SEPARATOR = new byte[] { 13, 10 };\n+        EMPTY_BYTE_ARRAY = new byte[0];\n+        STANDARD_ENCODE_TABLE = new byte[] { 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47 };\n+        URL_SAFE_ENCODE_TABLE = new byte[] { 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 45, 95 };\n+        DECODE_TABLE = new byte[] { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, 62, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, 63, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51 };\n+    }\n+    \n     public Base64() {\n         this(false);\n     }\n     \n     public Base64(final boolean urlSafe) {\n         this(76, Base64.CHUNK_SEPARATOR, urlSafe);\n     }\n@@ -161,15 +169,15 @@\n                 }\n                 this.modulus = ++this.modulus % 3;\n                 int b = in[inPos++];\n                 if (b < 0) {\n                     b += 256;\n                 }\n                 this.x = (this.x << 8) + b;\n-                if (0 == this.modulus) {\n+                if (this.modulus == 0) {\n                     this.buffer[this.pos++] = this.encodeTable[this.x >> 18 & 0x3F];\n                     this.buffer[this.pos++] = this.encodeTable[this.x >> 12 & 0x3F];\n                     this.buffer[this.pos++] = this.encodeTable[this.x >> 6 & 0x3F];\n                     this.buffer[this.pos++] = this.encodeTable[this.x & 0x3F];\n                     this.currentLinePos += 4;\n                     if (this.lineLength > 0 && this.lineLength <= this.currentLinePos) {\n                         System.arraycopy(this.lineSeparator, 0, this.buffer, this.pos, this.lineSeparator.length);\n@@ -442,16 +450,8 @@\n     int getLineLength() {\n         return this.lineLength;\n     }\n     \n     byte[] getLineSeparator() {\n         return this.lineSeparator.clone();\n     }\n-    \n-    static {\n-        CHUNK_SEPARATOR = new byte[] { 13, 10 };\n-        EMPTY_BYTE_ARRAY = new byte[0];\n-        STANDARD_ENCODE_TABLE = new byte[] { 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47 };\n-        URL_SAFE_ENCODE_TABLE = new byte[] { 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 45, 95 };\n-        DECODE_TABLE = new byte[] { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, 62, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, 63, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51 };\n-    }\n }\n"}]}
