{"diffoscope-json-version": 1, "source1": "first/EqualsAvoidNullCheck$FieldFrame.class", "source2": "second/EqualsAvoidNullCheck$FieldFrame.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -36,41 +36,41 @@\n         return this.parent;\n     }\n     \n     public Set<FieldFrame> getChildren() {\n         return UnmodifiableCollectionUtil.unmodifiableSet(this.children);\n     }\n     \n-    public void addChild(final FieldFrame child) {\n-        this.children.add(child);\n+    public void addChild(final FieldFrame fieldFrame) {\n+        this.children.add(fieldFrame);\n     }\n     \n-    public void addField(final DetailAST field) {\n-        if (field.findFirstToken(58) != null) {\n-            this.fieldNameToAst.put(getFieldName(field), field);\n+    public void addField(final DetailAST detailAST) {\n+        if (detailAST.findFirstToken(58) != null) {\n+            this.fieldNameToAst.put(getFieldName(detailAST), detailAST);\n         }\n     }\n     \n-    public void setClassOrEnumOrRecordDef(final boolean value) {\n-        this.classOrEnumOrRecordDef = value;\n+    public void setClassOrEnumOrRecordDef(final boolean classOrEnumOrRecordDef) {\n+        this.classOrEnumOrRecordDef = classOrEnumOrRecordDef;\n     }\n     \n     public boolean isClassOrEnumOrRecordDef() {\n         return this.classOrEnumOrRecordDef;\n     }\n     \n-    public void addMethodCall(final DetailAST methodCall) {\n-        this.methodCalls.add(methodCall);\n+    public void addMethodCall(final DetailAST detailAST) {\n+        this.methodCalls.add(detailAST);\n     }\n     \n-    public DetailAST findField(final String name) {\n-        return this.fieldNameToAst.get(name);\n+    public DetailAST findField(final String s) {\n+        return this.fieldNameToAst.get(s);\n     }\n     \n     public Set<DetailAST> getMethodCalls() {\n         return UnmodifiableCollectionUtil.unmodifiableSet(this.methodCalls);\n     }\n     \n-    private static String getFieldName(final DetailAST field) {\n-        return field.findFirstToken(58).getText();\n+    private static String getFieldName(final DetailAST detailAST) {\n+        return detailAST.findFirstToken(58).getText();\n     }\n }\n"}]}
