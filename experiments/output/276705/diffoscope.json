{"diffoscope-json-version": 1, "source1": "first/JavaLanguageParser$RecordComponentsContext.class", "source2": "second/JavaLanguageParser$RecordComponentsContext.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -9,38 +9,38 @@\n \n public static class RecordComponentsContext extends ParserRuleContext\n {\n     public List<JavaLanguageParser.RecordComponentContext> recordComponent() {\n         return this.getRuleContexts((Class)JavaLanguageParser.RecordComponentContext.class);\n     }\n     \n-    public JavaLanguageParser.RecordComponentContext recordComponent(final int i) {\n-        return (JavaLanguageParser.RecordComponentContext)this.getRuleContext((Class)JavaLanguageParser.RecordComponentContext.class, i);\n+    public JavaLanguageParser.RecordComponentContext recordComponent(final int n) {\n+        return (JavaLanguageParser.RecordComponentContext)this.getRuleContext((Class)JavaLanguageParser.RecordComponentContext.class, n);\n     }\n     \n     public List<TerminalNode> COMMA() {\n         return this.getTokens(74);\n     }\n     \n-    public TerminalNode COMMA(final int i) {\n-        return this.getToken(74, i);\n+    public TerminalNode COMMA(final int n) {\n+        return this.getToken(74, n);\n     }\n     \n     public JavaLanguageParser.LastRecordComponentContext lastRecordComponent() {\n         return (JavaLanguageParser.LastRecordComponentContext)this.getRuleContext((Class)JavaLanguageParser.LastRecordComponentContext.class, 0);\n     }\n     \n-    public RecordComponentsContext(final ParserRuleContext parent, final int invokingState) {\n-        super(parent, invokingState);\n+    public RecordComponentsContext(final ParserRuleContext parserRuleContext, final int n) {\n+        super(parserRuleContext, n);\n     }\n     \n     public int getRuleIndex() {\n         return 10;\n     }\n     \n-    public <T> T accept(final ParseTreeVisitor<? extends T> visitor) {\n-        if (visitor instanceof JavaLanguageParserVisitor) {\n-            return (T)((JavaLanguageParserVisitor)visitor).visitRecordComponents(this);\n+    public <T> T accept(final ParseTreeVisitor<? extends T> parseTreeVisitor) {\n+        if (parseTreeVisitor instanceof JavaLanguageParserVisitor) {\n+            return (T)((JavaLanguageParserVisitor)parseTreeVisitor).visitRecordComponents(this);\n         }\n-        return (T)visitor.visitChildren((RuleNode)this);\n+        return (T)parseTreeVisitor.visitChildren((RuleNode)this);\n     }\n }\n"}]}
