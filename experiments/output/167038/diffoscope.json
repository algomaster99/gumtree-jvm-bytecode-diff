{"diffoscope-json-version": 1, "source1": "first/CleaningPathVisitor.class", "source2": "second/CleaningPathVisitor.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,204 +1,201 @@\n-  SHA-256 checksum c727b4ffc6b65f627f61f5f0c294ca1883f09b5f27cd8232a7751e8b31bd27cf\n+  SHA-256 checksum 339de0622252fa37c04d2dba28c84c50d2f4fe6068182245409151e88123b33f\n   Compiled from \"CleaningPathVisitor.java\"\n public class org.apache.commons.io.file.CleaningPathVisitor extends org.apache.commons.io.file.CountingPathVisitor\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/io/file/CleaningPathVisitor\n   super_class: #40                        // org/apache/commons/io/file/CountingPathVisitor\n   interfaces: 0, fields: 2, methods: 11, attributes: 2\n Constant pool:\n-    #1 = Class              #95           // org/apache/commons/io/file/CleaningPathVisitor\n-    #2 = Methodref          #96.#97       // org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #3 = Class              #98           // java/lang/String\n-    #4 = Methodref          #1.#99        // org/apache/commons/io/file/CleaningPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n-    #5 = Methodref          #96.#100      // org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #6 = Methodref          #40.#101      // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-    #7 = Methodref          #102.#103     // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n+    #1 = Class              #93           // org/apache/commons/io/file/CleaningPathVisitor\n+    #2 = Methodref          #94.#95       // org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #3 = Class              #96           // java/lang/String\n+    #4 = Methodref          #1.#97        // org/apache/commons/io/file/CleaningPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n+    #5 = Methodref          #94.#98       // org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #6 = Methodref          #40.#99       // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+    #7 = Methodref          #100.#101     // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n     #8 = Class              #42           // \"[Ljava/lang/String;\"\n-    #9 = Fieldref           #1.#104       // org/apache/commons/io/file/CleaningPathVisitor.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-   #10 = Methodref          #105.#106     // java/util/Arrays.sort:([Ljava/lang/Object;)V\n-   #11 = Fieldref           #1.#107       // org/apache/commons/io/file/CleaningPathVisitor.skip:[Ljava/lang/String;\n-   #12 = Methodref          #108.#109     // org/apache/commons/io/file/StandardDeleteOption.overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z\n-   #13 = Fieldref           #1.#110       // org/apache/commons/io/file/CleaningPathVisitor.overrideReadOnly:Z\n-   #14 = Fieldref           #111.#112     // org/apache/commons/io/file/PathUtils.EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n-   #15 = Methodref          #1.#113       // org/apache/commons/io/file/CleaningPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n-   #16 = InterfaceMethodref #37.#114      // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n-   #17 = Methodref          #115.#116     // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-   #18 = Methodref          #105.#117     // java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n-   #19 = Methodref          #40.#118      // org/apache/commons/io/file/CountingPathVisitor.equals:(Ljava/lang/Object;)Z\n-   #20 = Methodref          #24.#119      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #21 = Methodref          #105.#120     // java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n-   #22 = Methodref          #40.#121      // org/apache/commons/io/file/CountingPathVisitor.hashCode:()I\n-   #23 = Methodref          #105.#122     // java/util/Arrays.hashCode:([Ljava/lang/Object;)I\n-   #24 = Class              #123          // java/lang/Object\n-   #25 = Methodref          #124.#125     // java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n-   #26 = Methodref          #115.#126     // java/util/Objects.hash:([Ljava/lang/Object;)I\n-   #27 = Methodref          #40.#127      // org/apache/commons/io/file/CountingPathVisitor.preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #28 = Methodref          #1.#128       // org/apache/commons/io/file/CleaningPathVisitor.accept:(Ljava/nio/file/Path;)Z\n-   #29 = Fieldref           #129.#130     // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-   #30 = Fieldref           #129.#131     // java/nio/file/FileVisitResult.SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n-   #31 = Class              #132          // java/nio/file/LinkOption\n-   #32 = Fieldref           #31.#133      // java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n-   #33 = Methodref          #134.#135     // java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #34 = Methodref          #111.#136     // org/apache/commons/io/file/PathUtils.setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n-   #35 = Methodref          #134.#137     // java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n-   #36 = Methodref          #1.#138       // org/apache/commons/io/file/CleaningPathVisitor.updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n-   #37 = Class              #139          // java/nio/file/Path\n-   #38 = Methodref          #1.#140       // org/apache/commons/io/file/CleaningPathVisitor.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #39 = Methodref          #1.#127       // org/apache/commons/io/file/CleaningPathVisitor.preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #40 = Class              #141          // org/apache/commons/io/file/CountingPathVisitor\n+    #9 = Fieldref           #1.#102       // org/apache/commons/io/file/CleaningPathVisitor.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+   #10 = Methodref          #103.#104     // java/util/Arrays.sort:([Ljava/lang/Object;)V\n+   #11 = Fieldref           #1.#105       // org/apache/commons/io/file/CleaningPathVisitor.skip:[Ljava/lang/String;\n+   #12 = Methodref          #106.#107     // org/apache/commons/io/file/StandardDeleteOption.overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z\n+   #13 = Fieldref           #1.#108       // org/apache/commons/io/file/CleaningPathVisitor.overrideReadOnly:Z\n+   #14 = Fieldref           #109.#110     // org/apache/commons/io/file/PathUtils.EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n+   #15 = Methodref          #1.#111       // org/apache/commons/io/file/CleaningPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n+   #16 = InterfaceMethodref #37.#112      // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n+   #17 = Methodref          #113.#114     // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #18 = Methodref          #103.#115     // java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n+   #19 = Methodref          #40.#116      // org/apache/commons/io/file/CountingPathVisitor.equals:(Ljava/lang/Object;)Z\n+   #20 = Methodref          #24.#117      // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #21 = Methodref          #103.#118     // java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+   #22 = Methodref          #40.#119      // org/apache/commons/io/file/CountingPathVisitor.hashCode:()I\n+   #23 = Methodref          #103.#120     // java/util/Arrays.hashCode:([Ljava/lang/Object;)I\n+   #24 = Class              #121          // java/lang/Object\n+   #25 = Methodref          #122.#123     // java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+   #26 = Methodref          #113.#124     // java/util/Objects.hash:([Ljava/lang/Object;)I\n+   #27 = Methodref          #40.#125      // org/apache/commons/io/file/CountingPathVisitor.preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #28 = Methodref          #1.#126       // org/apache/commons/io/file/CleaningPathVisitor.accept:(Ljava/nio/file/Path;)Z\n+   #29 = Fieldref           #85.#127      // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+   #30 = Fieldref           #85.#128      // java/nio/file/FileVisitResult.SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n+   #31 = Class              #129          // java/nio/file/LinkOption\n+   #32 = Fieldref           #31.#130      // java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n+   #33 = Methodref          #131.#132     // java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #34 = Methodref          #109.#133     // org/apache/commons/io/file/PathUtils.setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n+   #35 = Methodref          #131.#134     // java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n+   #36 = Methodref          #1.#135       // org/apache/commons/io/file/CleaningPathVisitor.updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+   #37 = Class              #136          // java/nio/file/Path\n+   #38 = Methodref          #1.#137       // org/apache/commons/io/file/CleaningPathVisitor.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #39 = Methodref          #1.#125       // org/apache/commons/io/file/CleaningPathVisitor.preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #40 = Class              #138          // org/apache/commons/io/file/CountingPathVisitor\n    #41 = Utf8               skip\n    #42 = Utf8               [Ljava/lang/String;\n    #43 = Utf8               overrideReadOnly\n    #44 = Utf8               Z\n    #45 = Utf8               withBigIntegerCounters\n    #46 = Utf8               ()Lorg/apache/commons/io/file/CountingPathVisitor;\n    #47 = Utf8               Code\n    #48 = Utf8               LineNumberTable\n    #49 = Utf8               withLongCounters\n    #50 = Utf8               <init>\n-   #51 = Class              #142          // org/apache/commons/io/file/Counters$PathCounters\n+   #51 = Class              #139          // org/apache/commons/io/file/Counters$PathCounters\n    #52 = Utf8               PathCounters\n    #53 = Utf8               InnerClasses\n    #54 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n    #55 = Utf8               LocalVariableTable\n    #56 = Utf8               this\n    #57 = Utf8               Lorg/apache/commons/io/file/CleaningPathVisitor;\n    #58 = Utf8               pathCounter\n    #59 = Utf8               Lorg/apache/commons/io/file/Counters$PathCounters;\n    #60 = Utf8               deleteOption\n    #61 = Utf8               [Lorg/apache/commons/io/file/DeleteOption;\n    #62 = Utf8               temp\n    #63 = Utf8               StackMapTable\n-   #64 = Class              #95           // org/apache/commons/io/file/CleaningPathVisitor\n-   #65 = Class              #142          // org/apache/commons/io/file/Counters$PathCounters\n-   #66 = Class              #61           // \"[Lorg/apache/commons/io/file/DeleteOption;\"\n-   #67 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n-   #68 = Utf8               accept\n-   #69 = Utf8               (Ljava/nio/file/Path;)Z\n-   #70 = Utf8               path\n-   #71 = Utf8               Ljava/nio/file/Path;\n-   #72 = Utf8               equals\n-   #73 = Utf8               (Ljava/lang/Object;)Z\n-   #74 = Utf8               obj\n-   #75 = Utf8               Ljava/lang/Object;\n-   #76 = Utf8               other\n-   #77 = Utf8               hashCode\n-   #78 = Utf8               ()I\n-   #79 = Utf8               prime\n-   #80 = Utf8               I\n-   #81 = Utf8               result\n-   #82 = Utf8               preVisitDirectory\n-   #83 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #84 = Utf8               dir\n-   #85 = Utf8               attributes\n-   #86 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n-   #87 = Class              #143          // java/nio/file/FileVisitResult\n-   #88 = Utf8               Exceptions\n-   #89 = Class              #144          // java/io/IOException\n-   #90 = Utf8               visitFile\n-   #91 = Utf8               file\n-   #92 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #93 = Utf8               SourceFile\n-   #94 = Utf8               CleaningPathVisitor.java\n-   #95 = Utf8               org/apache/commons/io/file/CleaningPathVisitor\n-   #96 = Class              #145          // org/apache/commons/io/file/Counters\n-   #97 = NameAndType        #146:#147     // bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #98 = Utf8               java/lang/String\n-   #99 = NameAndType        #50:#67       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n-  #100 = NameAndType        #148:#147     // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #101 = NameAndType        #50:#149      // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-  #102 = Class              #42           // \"[Ljava/lang/String;\"\n-  #103 = NameAndType        #150:#151     // clone:()Ljava/lang/Object;\n-  #104 = NameAndType        #152:#42      // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-  #105 = Class              #153          // java/util/Arrays\n-  #106 = NameAndType        #154:#155     // sort:([Ljava/lang/Object;)V\n-  #107 = NameAndType        #41:#42       // skip:[Ljava/lang/String;\n-  #108 = Class              #156          // org/apache/commons/io/file/StandardDeleteOption\n-  #109 = NameAndType        #43:#157      // overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z\n-  #110 = NameAndType        #43:#44       // overrideReadOnly:Z\n-  #111 = Class              #158          // org/apache/commons/io/file/PathUtils\n-  #112 = NameAndType        #159:#61      // EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n-  #113 = NameAndType        #50:#54       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n-  #114 = NameAndType        #160:#161     // getFileName:()Ljava/nio/file/Path;\n-  #115 = Class              #162          // java/util/Objects\n-  #116 = NameAndType        #163:#164     // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-  #117 = NameAndType        #165:#166     // binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n-  #118 = NameAndType        #72:#73       // equals:(Ljava/lang/Object;)Z\n-  #119 = NameAndType        #167:#168     // getClass:()Ljava/lang/Class;\n-  #120 = NameAndType        #72:#169      // equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n-  #121 = NameAndType        #77:#78       // hashCode:()I\n-  #122 = NameAndType        #77:#170      // hashCode:([Ljava/lang/Object;)I\n-  #123 = Utf8               java/lang/Object\n-  #124 = Class              #171          // java/lang/Boolean\n-  #125 = NameAndType        #172:#173     // valueOf:(Z)Ljava/lang/Boolean;\n-  #126 = NameAndType        #174:#170     // hash:([Ljava/lang/Object;)I\n-  #127 = NameAndType        #82:#83       // preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #128 = NameAndType        #68:#69       // accept:(Ljava/nio/file/Path;)Z\n-  #129 = Class              #143          // java/nio/file/FileVisitResult\n-  #130 = NameAndType        #175:#176     // CONTINUE:Ljava/nio/file/FileVisitResult;\n-  #131 = NameAndType        #177:#176     // SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n-  #132 = Utf8               java/nio/file/LinkOption\n-  #133 = NameAndType        #178:#179     // NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n-  #134 = Class              #180          // java/nio/file/Files\n-  #135 = NameAndType        #181:#182     // exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #136 = NameAndType        #183:#184     // setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n-  #137 = NameAndType        #185:#69      // deleteIfExists:(Ljava/nio/file/Path;)Z\n-  #138 = NameAndType        #186:#187     // updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n-  #139 = Utf8               java/nio/file/Path\n-  #140 = NameAndType        #90:#83       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #141 = Utf8               org/apache/commons/io/file/CountingPathVisitor\n-  #142 = Utf8               org/apache/commons/io/file/Counters$PathCounters\n-  #143 = Utf8               java/nio/file/FileVisitResult\n-  #144 = Utf8               java/io/IOException\n-  #145 = Utf8               org/apache/commons/io/file/Counters\n-  #146 = Utf8               bigIntegerPathCounters\n-  #147 = Utf8               ()Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #148 = Utf8               longPathCounters\n-  #149 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-  #150 = Utf8               clone\n-  #151 = Utf8               ()Ljava/lang/Object;\n-  #152 = Utf8               EMPTY_STRING_ARRAY\n-  #153 = Utf8               java/util/Arrays\n-  #154 = Utf8               sort\n-  #155 = Utf8               ([Ljava/lang/Object;)V\n-  #156 = Utf8               org/apache/commons/io/file/StandardDeleteOption\n-  #157 = Utf8               ([Lorg/apache/commons/io/file/DeleteOption;)Z\n-  #158 = Utf8               org/apache/commons/io/file/PathUtils\n-  #159 = Utf8               EMPTY_DELETE_OPTION_ARRAY\n-  #160 = Utf8               getFileName\n-  #161 = Utf8               ()Ljava/nio/file/Path;\n-  #162 = Utf8               java/util/Objects\n-  #163 = Utf8               toString\n-  #164 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-  #165 = Utf8               binarySearch\n-  #166 = Utf8               ([Ljava/lang/Object;Ljava/lang/Object;)I\n-  #167 = Utf8               getClass\n-  #168 = Utf8               ()Ljava/lang/Class;\n-  #169 = Utf8               ([Ljava/lang/Object;[Ljava/lang/Object;)Z\n-  #170 = Utf8               ([Ljava/lang/Object;)I\n-  #171 = Utf8               java/lang/Boolean\n-  #172 = Utf8               valueOf\n-  #173 = Utf8               (Z)Ljava/lang/Boolean;\n-  #174 = Utf8               hash\n-  #175 = Utf8               CONTINUE\n-  #176 = Utf8               Ljava/nio/file/FileVisitResult;\n-  #177 = Utf8               SKIP_SUBTREE\n-  #178 = Utf8               NOFOLLOW_LINKS\n-  #179 = Utf8               Ljava/nio/file/LinkOption;\n-  #180 = Utf8               java/nio/file/Files\n-  #181 = Utf8               exists\n-  #182 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #183 = Utf8               setReadOnly\n-  #184 = Utf8               (Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n-  #185 = Utf8               deleteIfExists\n-  #186 = Utf8               updateFileCounters\n-  #187 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+   #64 = Class              #61           // \"[Lorg/apache/commons/io/file/DeleteOption;\"\n+   #65 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n+   #66 = Utf8               accept\n+   #67 = Utf8               (Ljava/nio/file/Path;)Z\n+   #68 = Utf8               path\n+   #69 = Utf8               Ljava/nio/file/Path;\n+   #70 = Utf8               equals\n+   #71 = Utf8               (Ljava/lang/Object;)Z\n+   #72 = Utf8               obj\n+   #73 = Utf8               Ljava/lang/Object;\n+   #74 = Utf8               other\n+   #75 = Utf8               hashCode\n+   #76 = Utf8               ()I\n+   #77 = Utf8               prime\n+   #78 = Utf8               I\n+   #79 = Utf8               result\n+   #80 = Utf8               preVisitDirectory\n+   #81 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #82 = Utf8               dir\n+   #83 = Utf8               attributes\n+   #84 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n+   #85 = Class              #140          // java/nio/file/FileVisitResult\n+   #86 = Utf8               Exceptions\n+   #87 = Class              #141          // java/io/IOException\n+   #88 = Utf8               visitFile\n+   #89 = Utf8               file\n+   #90 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #91 = Utf8               SourceFile\n+   #92 = Utf8               CleaningPathVisitor.java\n+   #93 = Utf8               org/apache/commons/io/file/CleaningPathVisitor\n+   #94 = Class              #142          // org/apache/commons/io/file/Counters\n+   #95 = NameAndType        #143:#144     // bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #96 = Utf8               java/lang/String\n+   #97 = NameAndType        #50:#65       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n+   #98 = NameAndType        #145:#144     // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #99 = NameAndType        #50:#146      // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+  #100 = Class              #42           // \"[Ljava/lang/String;\"\n+  #101 = NameAndType        #147:#148     // clone:()Ljava/lang/Object;\n+  #102 = NameAndType        #149:#42      // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+  #103 = Class              #150          // java/util/Arrays\n+  #104 = NameAndType        #151:#152     // sort:([Ljava/lang/Object;)V\n+  #105 = NameAndType        #41:#42       // skip:[Ljava/lang/String;\n+  #106 = Class              #153          // org/apache/commons/io/file/StandardDeleteOption\n+  #107 = NameAndType        #43:#154      // overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z\n+  #108 = NameAndType        #43:#44       // overrideReadOnly:Z\n+  #109 = Class              #155          // org/apache/commons/io/file/PathUtils\n+  #110 = NameAndType        #156:#61      // EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n+  #111 = NameAndType        #50:#54       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n+  #112 = NameAndType        #157:#158     // getFileName:()Ljava/nio/file/Path;\n+  #113 = Class              #159          // java/util/Objects\n+  #114 = NameAndType        #160:#161     // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+  #115 = NameAndType        #162:#163     // binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n+  #116 = NameAndType        #70:#71       // equals:(Ljava/lang/Object;)Z\n+  #117 = NameAndType        #164:#165     // getClass:()Ljava/lang/Class;\n+  #118 = NameAndType        #70:#166      // equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+  #119 = NameAndType        #75:#76       // hashCode:()I\n+  #120 = NameAndType        #75:#167      // hashCode:([Ljava/lang/Object;)I\n+  #121 = Utf8               java/lang/Object\n+  #122 = Class              #168          // java/lang/Boolean\n+  #123 = NameAndType        #169:#170     // valueOf:(Z)Ljava/lang/Boolean;\n+  #124 = NameAndType        #171:#167     // hash:([Ljava/lang/Object;)I\n+  #125 = NameAndType        #80:#81       // preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #126 = NameAndType        #66:#67       // accept:(Ljava/nio/file/Path;)Z\n+  #127 = NameAndType        #172:#173     // CONTINUE:Ljava/nio/file/FileVisitResult;\n+  #128 = NameAndType        #174:#173     // SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n+  #129 = Utf8               java/nio/file/LinkOption\n+  #130 = NameAndType        #175:#176     // NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n+  #131 = Class              #177          // java/nio/file/Files\n+  #132 = NameAndType        #178:#179     // exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #133 = NameAndType        #180:#181     // setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n+  #134 = NameAndType        #182:#67      // deleteIfExists:(Ljava/nio/file/Path;)Z\n+  #135 = NameAndType        #183:#184     // updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+  #136 = Utf8               java/nio/file/Path\n+  #137 = NameAndType        #88:#81       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #138 = Utf8               org/apache/commons/io/file/CountingPathVisitor\n+  #139 = Utf8               org/apache/commons/io/file/Counters$PathCounters\n+  #140 = Utf8               java/nio/file/FileVisitResult\n+  #141 = Utf8               java/io/IOException\n+  #142 = Utf8               org/apache/commons/io/file/Counters\n+  #143 = Utf8               bigIntegerPathCounters\n+  #144 = Utf8               ()Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #145 = Utf8               longPathCounters\n+  #146 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+  #147 = Utf8               clone\n+  #148 = Utf8               ()Ljava/lang/Object;\n+  #149 = Utf8               EMPTY_STRING_ARRAY\n+  #150 = Utf8               java/util/Arrays\n+  #151 = Utf8               sort\n+  #152 = Utf8               ([Ljava/lang/Object;)V\n+  #153 = Utf8               org/apache/commons/io/file/StandardDeleteOption\n+  #154 = Utf8               ([Lorg/apache/commons/io/file/DeleteOption;)Z\n+  #155 = Utf8               org/apache/commons/io/file/PathUtils\n+  #156 = Utf8               EMPTY_DELETE_OPTION_ARRAY\n+  #157 = Utf8               getFileName\n+  #158 = Utf8               ()Ljava/nio/file/Path;\n+  #159 = Utf8               java/util/Objects\n+  #160 = Utf8               toString\n+  #161 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+  #162 = Utf8               binarySearch\n+  #163 = Utf8               ([Ljava/lang/Object;Ljava/lang/Object;)I\n+  #164 = Utf8               getClass\n+  #165 = Utf8               ()Ljava/lang/Class;\n+  #166 = Utf8               ([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+  #167 = Utf8               ([Ljava/lang/Object;)I\n+  #168 = Utf8               java/lang/Boolean\n+  #169 = Utf8               valueOf\n+  #170 = Utf8               (Z)Ljava/lang/Boolean;\n+  #171 = Utf8               hash\n+  #172 = Utf8               CONTINUE\n+  #173 = Utf8               Ljava/nio/file/FileVisitResult;\n+  #174 = Utf8               SKIP_SUBTREE\n+  #175 = Utf8               NOFOLLOW_LINKS\n+  #176 = Utf8               Ljava/nio/file/LinkOption;\n+  #177 = Utf8               java/nio/file/Files\n+  #178 = Utf8               exists\n+  #179 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #180 = Utf8               setReadOnly\n+  #181 = Utf8               (Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n+  #182 = Utf8               deleteIfExists\n+  #183 = Utf8               updateFileCounters\n+  #184 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n {\n   private final java.lang.String[] skip;\n     descriptor: [Ljava/lang/String;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final boolean overrideReadOnly;\n     descriptor: Z\n@@ -568,8 +565,8 @@\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/file/CleaningPathVisitor;\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"CleaningPathVisitor.java\"\n InnerClasses:\n-  public static #52= #51 of #96;          // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n+  public static #52= #51 of #94;          // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n"}]}
