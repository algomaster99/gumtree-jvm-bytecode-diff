{"diffoscope-json-version": 1, "source1": "first/ExampleMacro.class", "source2": "second/ExampleMacro.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -31,63 +31,58 @@\n     private List<String> lastLines;\n     \n     public ExampleMacro() {\n         this.lastPath = \"\";\n         this.lastLines = new ArrayList<String>();\n     }\n     \n-    public void execute(final Sink sink, final MacroRequest request) throws MacroExecutionException {\n-        final String path = (String)request.getParameter(\"path\");\n-        final String type = (String)request.getParameter(\"type\");\n-        List<String> lines = this.lastLines;\n-        if (!path.equals(this.lastPath)) {\n-            lines = readFile(\"src/xdocs-examples/\" + path);\n-            this.lastPath = path;\n-            this.lastLines = lines;\n+    public void execute(final Sink sink, final MacroRequest macroRequest) throws MacroExecutionException {\n+        final String lastPath = (String)macroRequest.getParameter(\"path\");\n+        final String s = (String)macroRequest.getParameter(\"type\");\n+        List<String> lastLines = this.lastLines;\n+        if (!lastPath.equals(this.lastPath)) {\n+            lastLines = readFile(\"src/xdocs-examples/\" + lastPath);\n+            this.lastPath = lastPath;\n+            this.lastLines = lastLines;\n         }\n-        if (\"config\".equals(type)) {\n-            final String config = getConfigSnippet(lines);\n-            writeSnippet(sink, config);\n+        if (\"config\".equals(s)) {\n+            writeSnippet(sink, getConfigSnippet((Collection<String>)lastLines));\n         }\n         else {\n-            if (!\"code\".equals(type)) {\n-                final String message = String.format(Locale.ROOT, \"Unknown example type: %s\", type);\n-                throw new MacroExecutionException(message);\n+            if (!\"code\".equals(s)) {\n+                throw new MacroExecutionException(String.format(Locale.ROOT, \"Unknown example type: %s\", s));\n             }\n-            String code = getCodeSnippet(lines);\n-            if (path.contains(\"filetabcharacter\")) {\n-                code = code.replace(\"\\t\", \"  \");\n+            String s2 = getCodeSnippet(lastLines);\n+            if (lastPath.contains(\"filetabcharacter\")) {\n+                s2 = s2.replace(\"\\t\", \"  \");\n             }\n-            writeSnippet(sink, code);\n+            writeSnippet(sink, s2);\n         }\n     }\n     \n-    private static List<String> readFile(final String path) throws MacroExecutionException {\n+    private static List<String> readFile(final String first) throws MacroExecutionException {\n         try {\n-            final Path exampleFilePath = Path.of(path, new String[0]);\n-            return Files.readAllLines(exampleFilePath);\n+            return Files.readAllLines(Path.of(first, new String[0]));\n         }\n-        catch (final IOException ioException) {\n-            final String message = String.format(Locale.ROOT, \"Failed to read %s\", path);\n-            throw new MacroExecutionException(message, (Throwable)ioException);\n+        catch (final IOException ex) {\n+            throw new MacroExecutionException(String.format(Locale.ROOT, \"Failed to read %s\", first), (Throwable)ex);\n         }\n     }\n     \n-    private static String getConfigSnippet(final Collection<String> lines) {\n-        return lines.stream().dropWhile(line -> !\"/*xml\".equals(line)).skip(1L).takeWhile(line -> !\"*/\".equals(line)).collect(Collectors.joining(ExampleMacro.NEWLINE));\n+    private static String getConfigSnippet(final Collection<String> collection) {\n+        return collection.stream().dropWhile(anObject -> !\"/*xml\".equals(anObject)).skip(1L).takeWhile(anObject2 -> !\"*/\".equals(anObject2)).collect(Collectors.joining(ExampleMacro.NEWLINE));\n     }\n     \n-    private static String getCodeSnippet(final Collection<String> lines) {\n-        return lines.stream().dropWhile(line -> !line.contains(\"// xdoc section -- start\")).skip(1L).takeWhile(line -> !line.contains(\"// xdoc section -- end\")).collect(Collectors.joining(ExampleMacro.NEWLINE));\n+    private static String getCodeSnippet(final Collection<String> collection) {\n+        return collection.stream().dropWhile(s -> !s.contains(\"// xdoc section -- start\")).skip(1L).takeWhile(s2 -> !s2.contains(\"// xdoc section -- end\")).collect(Collectors.joining(ExampleMacro.NEWLINE));\n     }\n     \n-    private static void writeSnippet(final Sink sink, final String snippet) {\n+    private static void writeSnippet(final Sink sink, final String s) {\n         sink.verbatim(SinkEventAttributeSet.BOXED);\n-        final String text = ExampleMacro.NEWLINE + String.join((CharSequence)ExampleMacro.NEWLINE, snippet.stripTrailing(), \"        \");\n-        sink.text(text);\n+        sink.text(ExampleMacro.NEWLINE + String.join((CharSequence)ExampleMacro.NEWLINE, s.stripTrailing(), \"        \"));\n         sink.verbatim_();\n     }\n     \n     static {\n         NEWLINE = System.lineSeparator();\n     }\n }\n"}]}
