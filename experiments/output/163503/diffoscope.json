{"diffoscope-json-version": 1, "source1": "first/ZipArchiveEntry.class", "source2": "second/ZipArchiveEntry.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,160 +1,160 @@\n-  SHA-256 checksum e22c8c01868dc34e66b5d15381ca977c1b0b7eb5e5aedeb3671e700741eac84c\n+  SHA-256 checksum 1583425cddeb4480753493f675b7ba532884b66870fcda7e297a2f2d99caffdb\n   Compiled from \"ZipArchiveEntry.java\"\n public class org.apache.commons.compress.archivers.zip.ZipArchiveEntry extends java.util.zip.ZipEntry implements org.apache.commons.compress.archivers.ArchiveEntry,org.apache.commons.compress.archivers.EntryStreamOffsets\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #9                          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n   super_class: #141                       // java/util/zip/ZipEntry\n   interfaces: 2, fields: 26, methods: 71, attributes: 2\n Constant pool:\n-    #1 = Methodref          #141.#347     // java/util/zip/ZipEntry.\"<init>\":(Ljava/lang/String;)V\n-    #2 = Class              #348          // org/apache/commons/compress/archivers/zip/ZipMethod\n-    #3 = Fieldref           #9.#349       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.method:I\n-    #4 = Class              #350          // org/apache/commons/compress/archivers/ArchiveEntry\n+    #1 = Methodref          #141.#342     // java/util/zip/ZipEntry.\"<init>\":(Ljava/lang/String;)V\n+    #2 = Class              #343          // org/apache/commons/compress/archivers/zip/ZipMethod\n+    #3 = Fieldref           #9.#344       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.method:I\n+    #4 = Class              #345          // org/apache/commons/compress/archivers/ArchiveEntry\n     #5 = Long               -1l\n-    #7 = Fieldref           #9.#351       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.size:J\n-    #8 = Fieldref           #9.#352       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.internalAttributes:I\n-    #9 = Class              #353          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-   #10 = Fieldref           #9.#354       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.platform:I\n-   #11 = Fieldref           #9.#355       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.externalAttributes:J\n-   #12 = Fieldref           #9.#356       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.alignment:I\n-   #13 = Fieldref           #9.#357       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n-   #14 = Fieldref           #9.#358       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.name:Ljava/lang/String;\n-   #15 = Fieldref           #9.#359       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.rawName:[B\n-   #16 = Class              #360          // org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n-   #17 = Methodref          #16.#361      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.\"<init>\":()V\n-   #18 = Fieldref           #9.#362       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-   #19 = Class              #363          // org/apache/commons/compress/archivers/EntryStreamOffsets\n-   #20 = Fieldref           #9.#364       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.localHeaderOffset:J\n-   #21 = Fieldref           #9.#365       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.dataOffset:J\n-   #22 = Fieldref           #9.#366       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.isStreamContiguous:Z\n-   #23 = Fieldref           #145.#367     // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource.NAME:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n-   #24 = Fieldref           #9.#368       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n-   #25 = Fieldref           #142.#369     // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource.COMMENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n-   #26 = Fieldref           #9.#370       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n-   #27 = Methodref          #9.#371       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setName:(Ljava/lang/String;)V\n-   #28 = Methodref          #141.#372     // java/util/zip/ZipEntry.\"<init>\":(Ljava/util/zip/ZipEntry;)V\n-   #29 = Methodref          #141.#373     // java/util/zip/ZipEntry.getName:()Ljava/lang/String;\n-   #30 = Methodref          #141.#374     // java/util/zip/ZipEntry.getExtra:()[B\n-   #31 = Fieldref           #375.#376     // org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField.READ:Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;\n-   #32 = Methodref          #377.#378     // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #33 = Methodref          #9.#379       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n-   #34 = Methodref          #9.#380       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExtra:()V\n-   #35 = Methodref          #141.#381     // java/util/zip/ZipEntry.getMethod:()I\n-   #36 = Methodref          #9.#382       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setMethod:(I)V\n-   #37 = Methodref          #141.#383     // java/util/zip/ZipEntry.getSize:()J\n-   #38 = Methodref          #9.#372       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":(Ljava/util/zip/ZipEntry;)V\n-   #39 = Methodref          #9.#384       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getInternalAttributes:()I\n-   #40 = Methodref          #9.#385       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setInternalAttributes:(I)V\n-   #41 = Methodref          #9.#386       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExternalAttributes:()J\n-   #42 = Methodref          #9.#387       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExternalAttributes:(J)V\n-   #43 = Methodref          #9.#388       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #44 = Methodref          #9.#389       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getPlatform:()I\n-   #45 = Methodref          #9.#390       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setPlatform:(I)V\n-   #46 = Methodref          #9.#391       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getGeneralPurposeBit:()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-   #47 = Methodref          #16.#392      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.clone:()Ljava/lang/Object;\n-   #48 = Methodref          #9.#393       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setGeneralPurposeBit:(Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n-   #49 = String             #394          //\n-   #50 = Methodref          #9.#347       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":(Ljava/lang/String;)V\n-   #51 = Methodref          #395.#396     // java/io/File.isDirectory:()Z\n-   #52 = String             #397          // /\n-   #53 = Methodref          #398.#399     // java/lang/String.endsWith:(Ljava/lang/String;)Z\n-   #54 = Class              #400          // java/lang/StringBuilder\n-   #55 = Methodref          #54.#361      // java/lang/StringBuilder.\"<init>\":()V\n-   #56 = Methodref          #54.#401      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #57 = Methodref          #54.#402      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #58 = Methodref          #395.#403     // java/io/File.isFile:()Z\n-   #59 = Methodref          #395.#404     // java/io/File.length:()J\n-   #60 = Methodref          #9.#405       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setSize:(J)V\n-   #61 = Methodref          #395.#406     // java/io/File.lastModified:()J\n-   #62 = Methodref          #9.#407       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setTime:(J)V\n-   #63 = Methodref          #141.#392     // java/util/zip/ZipEntry.clone:()Ljava/lang/Object;\n-   #64 = Class              #408          // java/lang/IllegalArgumentException\n-   #65 = String             #409          // ZIP compression method can not be negative:\n-   #66 = Methodref          #54.#410      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #67 = Methodref          #64.#347      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #68 = Methodref          #9.#396       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.isDirectory:()Z\n+    #7 = Fieldref           #9.#346       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.size:J\n+    #8 = Fieldref           #9.#347       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.internalAttributes:I\n+    #9 = Class              #348          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+   #10 = Fieldref           #9.#349       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.platform:I\n+   #11 = Fieldref           #9.#350       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.externalAttributes:J\n+   #12 = Fieldref           #9.#351       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.alignment:I\n+   #13 = Fieldref           #9.#352       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+   #14 = Fieldref           #9.#353       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.name:Ljava/lang/String;\n+   #15 = Fieldref           #9.#354       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.rawName:[B\n+   #16 = Class              #355          // org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+   #17 = Methodref          #16.#356      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.\"<init>\":()V\n+   #18 = Fieldref           #9.#357       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+   #19 = Class              #358          // org/apache/commons/compress/archivers/EntryStreamOffsets\n+   #20 = Fieldref           #9.#359       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.localHeaderOffset:J\n+   #21 = Fieldref           #9.#360       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.dataOffset:J\n+   #22 = Fieldref           #9.#361       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.isStreamContiguous:Z\n+   #23 = Fieldref           #145.#362     // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource.NAME:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+   #24 = Fieldref           #9.#363       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+   #25 = Fieldref           #142.#364     // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource.COMMENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+   #26 = Fieldref           #9.#365       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+   #27 = Methodref          #9.#366       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setName:(Ljava/lang/String;)V\n+   #28 = Methodref          #141.#367     // java/util/zip/ZipEntry.\"<init>\":(Ljava/util/zip/ZipEntry;)V\n+   #29 = Methodref          #141.#368     // java/util/zip/ZipEntry.getName:()Ljava/lang/String;\n+   #30 = Methodref          #141.#369     // java/util/zip/ZipEntry.getExtra:()[B\n+   #31 = Fieldref           #370.#371     // org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField.READ:Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;\n+   #32 = Methodref          #372.#373     // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #33 = Methodref          #9.#374       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+   #34 = Methodref          #9.#375       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExtra:()V\n+   #35 = Methodref          #141.#376     // java/util/zip/ZipEntry.getMethod:()I\n+   #36 = Methodref          #9.#377       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setMethod:(I)V\n+   #37 = Methodref          #141.#378     // java/util/zip/ZipEntry.getSize:()J\n+   #38 = Methodref          #9.#367       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":(Ljava/util/zip/ZipEntry;)V\n+   #39 = Methodref          #9.#379       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getInternalAttributes:()I\n+   #40 = Methodref          #9.#380       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setInternalAttributes:(I)V\n+   #41 = Methodref          #9.#381       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExternalAttributes:()J\n+   #42 = Methodref          #9.#382       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExternalAttributes:(J)V\n+   #43 = Methodref          #9.#383       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #44 = Methodref          #9.#384       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getPlatform:()I\n+   #45 = Methodref          #9.#385       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setPlatform:(I)V\n+   #46 = Methodref          #9.#386       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getGeneralPurposeBit:()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+   #47 = Methodref          #16.#387      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.clone:()Ljava/lang/Object;\n+   #48 = Methodref          #9.#388       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setGeneralPurposeBit:(Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n+   #49 = String             #389          //\n+   #50 = Methodref          #9.#342       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":(Ljava/lang/String;)V\n+   #51 = Methodref          #209.#390     // java/io/File.isDirectory:()Z\n+   #52 = String             #391          // /\n+   #53 = Methodref          #210.#392     // java/lang/String.endsWith:(Ljava/lang/String;)Z\n+   #54 = Class              #393          // java/lang/StringBuilder\n+   #55 = Methodref          #54.#356      // java/lang/StringBuilder.\"<init>\":()V\n+   #56 = Methodref          #54.#394      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #57 = Methodref          #54.#395      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #58 = Methodref          #209.#396     // java/io/File.isFile:()Z\n+   #59 = Methodref          #209.#397     // java/io/File.length:()J\n+   #60 = Methodref          #9.#398       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setSize:(J)V\n+   #61 = Methodref          #209.#399     // java/io/File.lastModified:()J\n+   #62 = Methodref          #9.#400       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setTime:(J)V\n+   #63 = Methodref          #141.#387     // java/util/zip/ZipEntry.clone:()Ljava/lang/Object;\n+   #64 = Class              #401          // java/lang/IllegalArgumentException\n+   #65 = String             #402          // ZIP compression method can not be negative:\n+   #66 = Methodref          #54.#403      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #67 = Methodref          #64.#342      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #68 = Methodref          #9.#390       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.isDirectory:()Z\n    #69 = Long               65535l\n-   #71 = Methodref          #9.#411       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getUnixMode:()I\n-   #72 = Class              #412          // org/apache/commons/compress/archivers/zip/UnixStat\n+   #71 = Methodref          #9.#404       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getUnixMode:()I\n+   #72 = Class              #405          // org/apache/commons/compress/archivers/zip/UnixStat\n    #73 = Integer            61440\n    #74 = Integer            40960\n    #75 = Integer            65535\n-   #76 = String             #413          // Invalid value for alignment, must be power of two and no bigger than 65535 but is\n-   #77 = Class              #414          // java/util/ArrayList\n-   #78 = Methodref          #77.#361      // java/util/ArrayList.\"<init>\":()V\n-   #79 = Class              #415          // org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n-   #80 = InterfaceMethodref #416.#417     // java/util/List.add:(Ljava/lang/Object;)Z\n-   #81 = InterfaceMethodref #416.#418     // java/util/List.size:()I\n-   #82 = Class              #419          // org/apache/commons/compress/archivers/zip/ZipExtraField\n-   #83 = InterfaceMethodref #416.#420     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+   #76 = String             #406          // Invalid value for alignment, must be power of two and no bigger than 65535 but is\n+   #77 = Class              #407          // java/util/ArrayList\n+   #78 = Methodref          #77.#356      // java/util/ArrayList.\"<init>\":()V\n+   #79 = Class              #408          // org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n+   #80 = InterfaceMethodref #243.#409     // java/util/List.add:(Ljava/lang/Object;)Z\n+   #81 = InterfaceMethodref #243.#410     // java/util/List.size:()I\n+   #82 = Class              #411          // org/apache/commons/compress/archivers/zip/ZipExtraField\n+   #83 = InterfaceMethodref #243.#412     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n    #84 = Class              #171          // \"[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\"\n-   #85 = Fieldref           #9.#421       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #86 = Methodref          #9.#422       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getParseableExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #87 = Methodref          #9.#423       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getAllExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #88 = Fieldref           #9.#424       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.noExtraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #89 = Methodref          #9.#425       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getParseableExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #90 = Methodref          #9.#426       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #91 = Methodref          #9.#427       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getUnparseableOnly:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #92 = Methodref          #9.#428       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMergedFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #93 = Methodref          #9.#429       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #94 = Methodref          #430.#431     // java/lang/Math.min:(II)I\n-   #95 = Methodref          #432.#433     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #96 = InterfaceMethodref #82.#434      // org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #97 = Methodref          #9.#435       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #98 = Methodref          #9.#436       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-   #99 = Class              #437          // java/util/NoSuchElementException\n-  #100 = Methodref          #99.#361      // java/util/NoSuchElementException.\"<init>\":()V\n-  #101 = Methodref          #438.#439     // org/apache/commons/compress/archivers/zip/ZipShort.equals:(Ljava/lang/Object;)Z\n-  #102 = Methodref          #9.#440       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.mergeExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n-  #103 = Class              #441          // java/util/zip/ZipException\n-  #104 = Class              #442          // java/lang/RuntimeException\n-  #105 = String             #443          // Error parsing extra fields for entry:\n-  #106 = Methodref          #9.#373       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;\n-  #107 = String             #444          //  -\n-  #108 = Methodref          #103.#445     // java/util/zip/ZipException.getMessage:()Ljava/lang/String;\n-  #109 = Methodref          #104.#446     // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #110 = Methodref          #377.#447     // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.mergeLocalFileDataData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n-  #111 = Methodref          #141.#448     // java/util/zip/ZipEntry.setExtra:([B)V\n-  #112 = Methodref          #9.#374       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExtra:()[B\n-  #113 = Fieldref           #9.#449       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.EMPTY:[B\n-  #114 = Methodref          #377.#450     // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.mergeCentralDirectoryData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n-  #115 = Methodref          #398.#451     // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n-  #116 = Methodref          #398.#452     // java/lang/String.replace:(CC)Ljava/lang/String;\n-  #117 = String             #453          // invalid entry size\n-  #118 = Methodref          #398.#454     // java/lang/String.hashCode:()I\n-  #119 = Methodref          #9.#455       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n-  #120 = InterfaceMethodref #82.#456      // org/apache/commons/compress/archivers/zip/ZipExtraField.getLocalFileDataData:()[B\n-  #121 = InterfaceMethodref #82.#457      // org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromLocalFileData:([BII)V\n-  #122 = InterfaceMethodref #82.#458      // org/apache/commons/compress/archivers/zip/ZipExtraField.getCentralDirectoryData:()[B\n-  #123 = InterfaceMethodref #82.#459      // org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromCentralDirectoryData:([BII)V\n-  #124 = Class              #460          // java/util/Date\n-  #125 = Methodref          #9.#461       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getTime:()J\n-  #126 = Methodref          #124.#462     // java/util/Date.\"<init>\":(J)V\n-  #127 = Methodref          #463.#464     // java/lang/Object.getClass:()Ljava/lang/Class;\n-  #128 = Methodref          #398.#439     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-  #129 = Methodref          #9.#465       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getComment:()Ljava/lang/String;\n-  #130 = Methodref          #9.#381       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n-  #131 = Methodref          #9.#383       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J\n-  #132 = Methodref          #9.#466       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCrc:()J\n-  #133 = Methodref          #9.#467       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J\n-  #134 = Methodref          #9.#468       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCentralDirectoryExtra:()[B\n-  #135 = Methodref          #469.#470     // java/util/Arrays.equals:([B[B)Z\n-  #136 = Methodref          #9.#471       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getLocalFileDataExtra:()[B\n-  #137 = Methodref          #16.#439      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.equals:(Ljava/lang/Object;)Z\n-  #138 = Fieldref           #9.#472       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.versionMadeBy:I\n-  #139 = Fieldref           #9.#473       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.versionRequired:I\n-  #140 = Fieldref           #9.#474       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.rawFlag:I\n-  #141 = Class              #475          // java/util/zip/ZipEntry\n-  #142 = Class              #476          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource\n+   #85 = Fieldref           #9.#413       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #86 = Methodref          #9.#414       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getParseableExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #87 = Methodref          #9.#415       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getAllExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #88 = Fieldref           #9.#416       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.noExtraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #89 = Methodref          #9.#417       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getParseableExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #90 = Methodref          #9.#418       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #91 = Methodref          #9.#419       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getUnparseableOnly:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #92 = Methodref          #9.#420       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMergedFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #93 = Methodref          #9.#421       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #94 = Methodref          #422.#423     // java/lang/Math.min:(II)I\n+   #95 = Methodref          #424.#425     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #96 = InterfaceMethodref #82.#426      // org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #97 = Methodref          #9.#427       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #98 = Methodref          #9.#428       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+   #99 = Class              #429          // java/util/NoSuchElementException\n+  #100 = Methodref          #99.#356      // java/util/NoSuchElementException.\"<init>\":()V\n+  #101 = Methodref          #275.#430     // org/apache/commons/compress/archivers/zip/ZipShort.equals:(Ljava/lang/Object;)Z\n+  #102 = Methodref          #9.#431       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.mergeExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n+  #103 = Class              #432          // java/util/zip/ZipException\n+  #104 = Class              #433          // java/lang/RuntimeException\n+  #105 = String             #434          // Error parsing extra fields for entry:\n+  #106 = Methodref          #9.#368       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;\n+  #107 = String             #435          //  -\n+  #108 = Methodref          #103.#436     // java/util/zip/ZipException.getMessage:()Ljava/lang/String;\n+  #109 = Methodref          #104.#437     // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #110 = Methodref          #372.#438     // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.mergeLocalFileDataData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n+  #111 = Methodref          #141.#439     // java/util/zip/ZipEntry.setExtra:([B)V\n+  #112 = Methodref          #9.#369       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExtra:()[B\n+  #113 = Fieldref           #9.#440       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.EMPTY:[B\n+  #114 = Methodref          #372.#441     // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.mergeCentralDirectoryData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n+  #115 = Methodref          #210.#442     // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+  #116 = Methodref          #210.#443     // java/lang/String.replace:(CC)Ljava/lang/String;\n+  #117 = String             #444          // invalid entry size\n+  #118 = Methodref          #210.#445     // java/lang/String.hashCode:()I\n+  #119 = Methodref          #9.#446       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+  #120 = InterfaceMethodref #82.#447      // org/apache/commons/compress/archivers/zip/ZipExtraField.getLocalFileDataData:()[B\n+  #121 = InterfaceMethodref #82.#448      // org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromLocalFileData:([BII)V\n+  #122 = InterfaceMethodref #82.#449      // org/apache/commons/compress/archivers/zip/ZipExtraField.getCentralDirectoryData:()[B\n+  #123 = InterfaceMethodref #82.#450      // org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromCentralDirectoryData:([BII)V\n+  #124 = Class              #451          // java/util/Date\n+  #125 = Methodref          #9.#452       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getTime:()J\n+  #126 = Methodref          #124.#453     // java/util/Date.\"<init>\":(J)V\n+  #127 = Methodref          #454.#455     // java/lang/Object.getClass:()Ljava/lang/Class;\n+  #128 = Methodref          #210.#430     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+  #129 = Methodref          #9.#456       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getComment:()Ljava/lang/String;\n+  #130 = Methodref          #9.#376       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n+  #131 = Methodref          #9.#378       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J\n+  #132 = Methodref          #9.#457       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCrc:()J\n+  #133 = Methodref          #9.#458       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J\n+  #134 = Methodref          #9.#459       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCentralDirectoryExtra:()[B\n+  #135 = Methodref          #460.#461     // java/util/Arrays.equals:([B[B)Z\n+  #136 = Methodref          #9.#462       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getLocalFileDataExtra:()[B\n+  #137 = Methodref          #16.#430      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.equals:(Ljava/lang/Object;)Z\n+  #138 = Fieldref           #9.#463       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.versionMadeBy:I\n+  #139 = Fieldref           #9.#464       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.versionRequired:I\n+  #140 = Fieldref           #9.#465       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.rawFlag:I\n+  #141 = Class              #466          // java/util/zip/ZipEntry\n+  #142 = Class              #467          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource\n   #143 = Utf8               CommentSource\n   #144 = Utf8               InnerClasses\n-  #145 = Class              #477          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource\n+  #145 = Class              #468          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource\n   #146 = Utf8               NameSource\n   #147 = Utf8               PLATFORM_UNIX\n   #148 = Utf8               I\n   #149 = Utf8               ConstantValue\n   #150 = Integer            3\n   #151 = Utf8               PLATFORM_FAT\n   #152 = Integer            0\n@@ -201,349 +201,340 @@\n   #193 = Utf8               this\n   #194 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n   #195 = Utf8               (Ljava/util/zip/ZipEntry;)V\n   #196 = Utf8               entry\n   #197 = Utf8               Ljava/util/zip/ZipEntry;\n   #198 = Utf8               extra\n   #199 = Utf8               StackMapTable\n-  #200 = Class              #353          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #201 = Class              #475          // java/util/zip/ZipEntry\n-  #202 = Class              #159          // \"[B\"\n-  #203 = Utf8               Exceptions\n-  #204 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n-  #205 = Utf8               other\n-  #206 = Class              #360          // org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n-  #207 = Utf8               ()V\n-  #208 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n-  #209 = Utf8               inputFile\n-  #210 = Utf8               Ljava/io/File;\n-  #211 = Utf8               entryName\n-  #212 = Class              #478          // java/io/File\n-  #213 = Class              #479          // java/lang/String\n-  #214 = Utf8               clone\n-  #215 = Utf8               ()Ljava/lang/Object;\n-  #216 = Utf8               e\n-  #217 = Utf8               getMethod\n-  #218 = Utf8               ()I\n-  #219 = Utf8               setMethod\n-  #220 = Utf8               (I)V\n-  #221 = Utf8               getInternalAttributes\n-  #222 = Utf8               setInternalAttributes\n-  #223 = Utf8               value\n-  #224 = Utf8               getExternalAttributes\n-  #225 = Utf8               ()J\n-  #226 = Utf8               setExternalAttributes\n-  #227 = Utf8               (J)V\n-  #228 = Utf8               setUnixMode\n-  #229 = Utf8               mode\n-  #230 = Utf8               getUnixMode\n-  #231 = Utf8               isUnixSymlink\n-  #232 = Utf8               ()Z\n-  #233 = Utf8               getPlatform\n-  #234 = Utf8               setPlatform\n-  #235 = Utf8               getAlignment\n-  #236 = Utf8               setAlignment\n-  #237 = Utf8               setExtraFields\n-  #238 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n-  #239 = Utf8               field\n-  #240 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #241 = Utf8               fields\n-  #242 = Utf8               newFields\n-  #243 = Utf8               Ljava/util/List;\n-  #244 = Utf8               LocalVariableTypeTable\n-  #245 = Utf8               Ljava/util/List<Lorg/apache/commons/compress/archivers/zip/ZipExtraField;>;\n-  #246 = Class              #480          // java/util/List\n-  #247 = Class              #419          // org/apache/commons/compress/archivers/zip/ZipExtraField\n-  #248 = Utf8               getExtraFields\n-  #249 = Utf8               ()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #250 = Utf8               (Z)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #251 = Utf8               includeUnparseable\n-  #252 = Utf8               getParseableExtraFieldsNoCopy\n-  #253 = Utf8               getParseableExtraFields\n-  #254 = Utf8               parseableExtraFields\n-  #255 = Utf8               getAllExtraFieldsNoCopy\n-  #256 = Utf8               copyOf\n-  #257 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #258 = Utf8               src\n-  #259 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #260 = Utf8               length\n-  #261 = Utf8               cpy\n-  #262 = Utf8               getMergedFields\n-  #263 = Utf8               zipExtraFields\n-  #264 = Utf8               getUnparseableOnly\n-  #265 = Utf8               getAllExtraFields\n-  #266 = Utf8               allExtraFieldsNoCopy\n-  #267 = Utf8               addExtraField\n-  #268 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n-  #269 = Utf8               ze\n-  #270 = Utf8               addAsFirstExtraField\n-  #271 = Utf8               copy\n-  #272 = Utf8               newLen\n-  #273 = Utf8               removeExtraField\n-  #274 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-  #275 = Utf8               extraField\n-  #276 = Utf8               type\n-  #277 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #278 = Utf8               newResult\n-  #279 = Class              #481          // org/apache/commons/compress/archivers/zip/ZipShort\n-  #280 = Utf8               removeUnparseableExtraFieldData\n-  #281 = Utf8               getExtraField\n-  #282 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #283 = Utf8               getUnparseableExtraFieldData\n-  #284 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n-  #285 = Utf8               setExtra\n-  #286 = Utf8               ([B)V\n-  #287 = Utf8               local\n-  #288 = Utf8               Ljava/util/zip/ZipException;\n-  #289 = Class              #441          // java/util/zip/ZipException\n-  #290 = Utf8               setCentralDirectoryExtra\n-  #291 = Utf8               central\n-  #292 = Utf8               b\n-  #293 = Utf8               getLocalFileDataExtra\n-  #294 = Utf8               ()[B\n-  #295 = Utf8               getCentralDirectoryExtra\n-  #296 = Utf8               getName\n-  #297 = Utf8               ()Ljava/lang/String;\n-  #298 = Utf8               isDirectory\n-  #299 = Utf8               setName\n-  #300 = Utf8               getSize\n-  #301 = Utf8               setSize\n-  #302 = Utf8               (Ljava/lang/String;[B)V\n-  #303 = Utf8               getRawName\n-  #304 = Utf8               getLocalHeaderOffset\n-  #305 = Utf8               setLocalHeaderOffset\n-  #306 = Utf8               getDataOffset\n-  #307 = Utf8               setDataOffset\n-  #308 = Utf8               setStreamContiguous\n-  #309 = Utf8               (Z)V\n-  #310 = Utf8               hashCode\n-  #311 = Utf8               getGeneralPurposeBit\n-  #312 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-  #313 = Utf8               setGeneralPurposeBit\n-  #314 = Utf8               (Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n-  #315 = Utf8               mergeExtraFields\n-  #316 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n-  #317 = Utf8               existing\n-  #318 = Utf8               element\n-  #319 = Utf8               f\n-  #320 = Utf8               getLastModifiedDate\n-  #321 = Utf8               ()Ljava/util/Date;\n-  #322 = Utf8               equals\n-  #323 = Utf8               (Ljava/lang/Object;)Z\n-  #324 = Utf8               obj\n-  #325 = Utf8               Ljava/lang/Object;\n-  #326 = Utf8               myName\n-  #327 = Utf8               otherName\n-  #328 = Utf8               myComment\n-  #329 = Utf8               otherComment\n-  #330 = Utf8               setVersionMadeBy\n-  #331 = Utf8               setVersionRequired\n-  #332 = Utf8               getVersionRequired\n-  #333 = Utf8               getVersionMadeBy\n-  #334 = Utf8               getRawFlag\n-  #335 = Utf8               setRawFlag\n-  #336 = Utf8               getNameSource\n-  #337 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n-  #338 = Utf8               setNameSource\n-  #339 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;)V\n-  #340 = Utf8               getCommentSource\n-  #341 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n-  #342 = Utf8               setCommentSource\n-  #343 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;)V\n-  #344 = Utf8               <clinit>\n-  #345 = Utf8               SourceFile\n-  #346 = Utf8               ZipArchiveEntry.java\n-  #347 = NameAndType        #188:#189     // \"<init>\":(Ljava/lang/String;)V\n-  #348 = Utf8               org/apache/commons/compress/archivers/zip/ZipMethod\n-  #349 = NameAndType        #160:#148     // method:I\n-  #350 = Utf8               org/apache/commons/compress/archivers/ArchiveEntry\n-  #351 = NameAndType        #161:#162     // size:J\n-  #352 = NameAndType        #163:#148     // internalAttributes:I\n-  #353 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #354 = NameAndType        #166:#148     // platform:I\n-  #355 = NameAndType        #168:#162     // externalAttributes:J\n-  #356 = NameAndType        #169:#148     // alignment:I\n-  #357 = NameAndType        #172:#173     // unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n-  #358 = NameAndType        #174:#175     // name:Ljava/lang/String;\n-  #359 = NameAndType        #176:#159     // rawName:[B\n-  #360 = Utf8               org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n-  #361 = NameAndType        #188:#207     // \"<init>\":()V\n-  #362 = NameAndType        #177:#178     // gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-  #363 = Utf8               org/apache/commons/compress/archivers/EntryStreamOffsets\n-  #364 = NameAndType        #180:#162     // localHeaderOffset:J\n-  #365 = NameAndType        #181:#162     // dataOffset:J\n-  #366 = NameAndType        #182:#183     // isStreamContiguous:Z\n-  #367 = NameAndType        #482:#185     // NAME:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n-  #368 = NameAndType        #184:#185     // nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n-  #369 = NameAndType        #483:#187     // COMMENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n-  #370 = NameAndType        #186:#187     // commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n-  #371 = NameAndType        #299:#189     // setName:(Ljava/lang/String;)V\n-  #372 = NameAndType        #188:#195     // \"<init>\":(Ljava/util/zip/ZipEntry;)V\n-  #373 = NameAndType        #296:#297     // getName:()Ljava/lang/String;\n-  #374 = NameAndType        #484:#294     // getExtra:()[B\n-  #375 = Class              #485          // org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField\n-  #376 = NameAndType        #487:#488     // READ:Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;\n-  #377 = Class              #489          // org/apache/commons/compress/archivers/zip/ExtraFieldUtils\n-  #378 = NameAndType        #490:#491     // parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #379 = NameAndType        #237:#238     // setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n-  #380 = NameAndType        #285:#207     // setExtra:()V\n-  #381 = NameAndType        #217:#218     // getMethod:()I\n-  #382 = NameAndType        #219:#220     // setMethod:(I)V\n-  #383 = NameAndType        #300:#225     // getSize:()J\n-  #384 = NameAndType        #221:#218     // getInternalAttributes:()I\n-  #385 = NameAndType        #222:#220     // setInternalAttributes:(I)V\n-  #386 = NameAndType        #224:#225     // getExternalAttributes:()J\n-  #387 = NameAndType        #226:#227     // setExternalAttributes:(J)V\n-  #388 = NameAndType        #255:#249     // getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #389 = NameAndType        #233:#218     // getPlatform:()I\n-  #390 = NameAndType        #234:#220     // setPlatform:(I)V\n-  #391 = NameAndType        #311:#312     // getGeneralPurposeBit:()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-  #392 = NameAndType        #214:#215     // clone:()Ljava/lang/Object;\n-  #393 = NameAndType        #313:#314     // setGeneralPurposeBit:(Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n-  #394 = Utf8\n-  #395 = Class              #478          // java/io/File\n-  #396 = NameAndType        #298:#232     // isDirectory:()Z\n-  #397 = Utf8               /\n-  #398 = Class              #479          // java/lang/String\n-  #399 = NameAndType        #492:#493     // endsWith:(Ljava/lang/String;)Z\n-  #400 = Utf8               java/lang/StringBuilder\n-  #401 = NameAndType        #494:#495     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #402 = NameAndType        #496:#297     // toString:()Ljava/lang/String;\n-  #403 = NameAndType        #497:#232     // isFile:()Z\n-  #404 = NameAndType        #260:#225     // length:()J\n-  #405 = NameAndType        #301:#227     // setSize:(J)V\n-  #406 = NameAndType        #498:#225     // lastModified:()J\n-  #407 = NameAndType        #499:#227     // setTime:(J)V\n-  #408 = Utf8               java/lang/IllegalArgumentException\n-  #409 = Utf8               ZIP compression method can not be negative:\n-  #410 = NameAndType        #494:#500     // append:(I)Ljava/lang/StringBuilder;\n-  #411 = NameAndType        #230:#218     // getUnixMode:()I\n-  #412 = Utf8               org/apache/commons/compress/archivers/zip/UnixStat\n-  #413 = Utf8               Invalid value for alignment, must be power of two and no bigger than 65535 but is\n-  #414 = Utf8               java/util/ArrayList\n-  #415 = Utf8               org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n-  #416 = Class              #480          // java/util/List\n-  #417 = NameAndType        #501:#323     // add:(Ljava/lang/Object;)Z\n-  #418 = NameAndType        #161:#218     // size:()I\n-  #419 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n-  #420 = NameAndType        #502:#503     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #421 = NameAndType        #170:#171     // extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #422 = NameAndType        #253:#249     // getParseableExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #423 = NameAndType        #265:#249     // getAllExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #424 = NameAndType        #179:#171     // noExtraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #425 = NameAndType        #252:#249     // getParseableExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #426 = NameAndType        #256:#257     // copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #427 = NameAndType        #264:#249     // getUnparseableOnly:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #428 = NameAndType        #262:#249     // getMergedFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #429 = NameAndType        #256:#259     // copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #430 = Class              #504          // java/lang/Math\n-  #431 = NameAndType        #505:#506     // min:(II)I\n-  #432 = Class              #507          // java/lang/System\n-  #433 = NameAndType        #508:#509     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #434 = NameAndType        #510:#511     // getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #435 = NameAndType        #281:#282     // getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #436 = NameAndType        #273:#274     // removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-  #437 = Utf8               java/util/NoSuchElementException\n-  #438 = Class              #481          // org/apache/commons/compress/archivers/zip/ZipShort\n-  #439 = NameAndType        #322:#323     // equals:(Ljava/lang/Object;)Z\n-  #440 = NameAndType        #315:#316     // mergeExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n-  #441 = Utf8               java/util/zip/ZipException\n-  #442 = Utf8               java/lang/RuntimeException\n-  #443 = Utf8               Error parsing extra fields for entry:\n-  #444 = Utf8                -\n-  #445 = NameAndType        #512:#297     // getMessage:()Ljava/lang/String;\n-  #446 = NameAndType        #188:#513     // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #447 = NameAndType        #514:#515     // mergeLocalFileDataData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n-  #448 = NameAndType        #285:#286     // setExtra:([B)V\n-  #449 = NameAndType        #158:#159     // EMPTY:[B\n-  #450 = NameAndType        #516:#515     // mergeCentralDirectoryData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n-  #451 = NameAndType        #517:#518     // contains:(Ljava/lang/CharSequence;)Z\n-  #452 = NameAndType        #519:#520     // replace:(CC)Ljava/lang/String;\n-  #453 = Utf8               invalid entry size\n-  #454 = NameAndType        #310:#218     // hashCode:()I\n-  #455 = NameAndType        #267:#268     // addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n-  #456 = NameAndType        #521:#294     // getLocalFileDataData:()[B\n-  #457 = NameAndType        #522:#523     // parseFromLocalFileData:([BII)V\n-  #458 = NameAndType        #524:#294     // getCentralDirectoryData:()[B\n-  #459 = NameAndType        #525:#523     // parseFromCentralDirectoryData:([BII)V\n-  #460 = Utf8               java/util/Date\n-  #461 = NameAndType        #526:#225     // getTime:()J\n-  #462 = NameAndType        #188:#227     // \"<init>\":(J)V\n-  #463 = Class              #527          // java/lang/Object\n-  #464 = NameAndType        #528:#529     // getClass:()Ljava/lang/Class;\n-  #465 = NameAndType        #530:#297     // getComment:()Ljava/lang/String;\n-  #466 = NameAndType        #531:#225     // getCrc:()J\n-  #467 = NameAndType        #532:#225     // getCompressedSize:()J\n-  #468 = NameAndType        #295:#294     // getCentralDirectoryExtra:()[B\n-  #469 = Class              #533          // java/util/Arrays\n-  #470 = NameAndType        #322:#534     // equals:([B[B)Z\n-  #471 = NameAndType        #293:#294     // getLocalFileDataExtra:()[B\n-  #472 = NameAndType        #165:#148     // versionMadeBy:I\n-  #473 = NameAndType        #164:#148     // versionRequired:I\n-  #474 = NameAndType        #167:#148     // rawFlag:I\n-  #475 = Utf8               java/util/zip/ZipEntry\n-  #476 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource\n-  #477 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource\n-  #478 = Utf8               java/io/File\n-  #479 = Utf8               java/lang/String\n-  #480 = Utf8               java/util/List\n-  #481 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-  #482 = Utf8               NAME\n-  #483 = Utf8               COMMENT\n-  #484 = Utf8               getExtra\n-  #485 = Utf8               org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField\n-  #486 = Utf8               UnparseableExtraField\n-  #487 = Utf8               READ\n-  #488 = Utf8               Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;\n-  #489 = Utf8               org/apache/commons/compress/archivers/zip/ExtraFieldUtils\n-  #490 = Utf8               parse\n-  #491 = Utf8               ([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #492 = Utf8               endsWith\n-  #493 = Utf8               (Ljava/lang/String;)Z\n-  #494 = Utf8               append\n-  #495 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #496 = Utf8               toString\n-  #497 = Utf8               isFile\n-  #498 = Utf8               lastModified\n-  #499 = Utf8               setTime\n-  #500 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #501 = Utf8               add\n-  #502 = Utf8               toArray\n-  #503 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #504 = Utf8               java/lang/Math\n-  #505 = Utf8               min\n-  #506 = Utf8               (II)I\n-  #507 = Utf8               java/lang/System\n-  #508 = Utf8               arraycopy\n-  #509 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #510 = Utf8               getHeaderId\n-  #511 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #512 = Utf8               getMessage\n-  #513 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #514 = Utf8               mergeLocalFileDataData\n-  #515 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n-  #516 = Utf8               mergeCentralDirectoryData\n-  #517 = Utf8               contains\n-  #518 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #519 = Utf8               replace\n-  #520 = Utf8               (CC)Ljava/lang/String;\n-  #521 = Utf8               getLocalFileDataData\n-  #522 = Utf8               parseFromLocalFileData\n-  #523 = Utf8               ([BII)V\n-  #524 = Utf8               getCentralDirectoryData\n-  #525 = Utf8               parseFromCentralDirectoryData\n-  #526 = Utf8               getTime\n-  #527 = Utf8               java/lang/Object\n-  #528 = Utf8               getClass\n-  #529 = Utf8               ()Ljava/lang/Class;\n-  #530 = Utf8               getComment\n-  #531 = Utf8               getCrc\n-  #532 = Utf8               getCompressedSize\n-  #533 = Utf8               java/util/Arrays\n-  #534 = Utf8               ([B[B)Z\n+  #200 = Class              #159          // \"[B\"\n+  #201 = Utf8               Exceptions\n+  #202 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n+  #203 = Utf8               other\n+  #204 = Utf8               ()V\n+  #205 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n+  #206 = Utf8               inputFile\n+  #207 = Utf8               Ljava/io/File;\n+  #208 = Utf8               entryName\n+  #209 = Class              #469          // java/io/File\n+  #210 = Class              #470          // java/lang/String\n+  #211 = Utf8               clone\n+  #212 = Utf8               ()Ljava/lang/Object;\n+  #213 = Utf8               e\n+  #214 = Utf8               getMethod\n+  #215 = Utf8               ()I\n+  #216 = Utf8               setMethod\n+  #217 = Utf8               (I)V\n+  #218 = Utf8               getInternalAttributes\n+  #219 = Utf8               setInternalAttributes\n+  #220 = Utf8               value\n+  #221 = Utf8               getExternalAttributes\n+  #222 = Utf8               ()J\n+  #223 = Utf8               setExternalAttributes\n+  #224 = Utf8               (J)V\n+  #225 = Utf8               setUnixMode\n+  #226 = Utf8               mode\n+  #227 = Utf8               getUnixMode\n+  #228 = Utf8               isUnixSymlink\n+  #229 = Utf8               ()Z\n+  #230 = Utf8               getPlatform\n+  #231 = Utf8               setPlatform\n+  #232 = Utf8               getAlignment\n+  #233 = Utf8               setAlignment\n+  #234 = Utf8               setExtraFields\n+  #235 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+  #236 = Utf8               field\n+  #237 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #238 = Utf8               fields\n+  #239 = Utf8               newFields\n+  #240 = Utf8               Ljava/util/List;\n+  #241 = Utf8               LocalVariableTypeTable\n+  #242 = Utf8               Ljava/util/List<Lorg/apache/commons/compress/archivers/zip/ZipExtraField;>;\n+  #243 = Class              #471          // java/util/List\n+  #244 = Utf8               getExtraFields\n+  #245 = Utf8               ()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #246 = Utf8               (Z)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #247 = Utf8               includeUnparseable\n+  #248 = Utf8               getParseableExtraFieldsNoCopy\n+  #249 = Utf8               getParseableExtraFields\n+  #250 = Utf8               parseableExtraFields\n+  #251 = Utf8               getAllExtraFieldsNoCopy\n+  #252 = Utf8               copyOf\n+  #253 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #254 = Utf8               src\n+  #255 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #256 = Utf8               length\n+  #257 = Utf8               cpy\n+  #258 = Utf8               getMergedFields\n+  #259 = Utf8               zipExtraFields\n+  #260 = Utf8               getUnparseableOnly\n+  #261 = Utf8               getAllExtraFields\n+  #262 = Utf8               allExtraFieldsNoCopy\n+  #263 = Utf8               addExtraField\n+  #264 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+  #265 = Utf8               ze\n+  #266 = Utf8               addAsFirstExtraField\n+  #267 = Utf8               copy\n+  #268 = Utf8               newLen\n+  #269 = Utf8               removeExtraField\n+  #270 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+  #271 = Utf8               extraField\n+  #272 = Utf8               type\n+  #273 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #274 = Utf8               newResult\n+  #275 = Class              #472          // org/apache/commons/compress/archivers/zip/ZipShort\n+  #276 = Utf8               removeUnparseableExtraFieldData\n+  #277 = Utf8               getExtraField\n+  #278 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #279 = Utf8               getUnparseableExtraFieldData\n+  #280 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+  #281 = Utf8               setExtra\n+  #282 = Utf8               ([B)V\n+  #283 = Utf8               local\n+  #284 = Utf8               Ljava/util/zip/ZipException;\n+  #285 = Utf8               setCentralDirectoryExtra\n+  #286 = Utf8               central\n+  #287 = Utf8               b\n+  #288 = Utf8               getLocalFileDataExtra\n+  #289 = Utf8               ()[B\n+  #290 = Utf8               getCentralDirectoryExtra\n+  #291 = Utf8               getName\n+  #292 = Utf8               ()Ljava/lang/String;\n+  #293 = Utf8               isDirectory\n+  #294 = Utf8               setName\n+  #295 = Utf8               getSize\n+  #296 = Utf8               setSize\n+  #297 = Utf8               (Ljava/lang/String;[B)V\n+  #298 = Utf8               getRawName\n+  #299 = Utf8               getLocalHeaderOffset\n+  #300 = Utf8               setLocalHeaderOffset\n+  #301 = Utf8               getDataOffset\n+  #302 = Utf8               setDataOffset\n+  #303 = Utf8               setStreamContiguous\n+  #304 = Utf8               (Z)V\n+  #305 = Utf8               hashCode\n+  #306 = Utf8               getGeneralPurposeBit\n+  #307 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+  #308 = Utf8               setGeneralPurposeBit\n+  #309 = Utf8               (Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n+  #310 = Utf8               mergeExtraFields\n+  #311 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n+  #312 = Utf8               existing\n+  #313 = Utf8               element\n+  #314 = Utf8               f\n+  #315 = Utf8               getLastModifiedDate\n+  #316 = Utf8               ()Ljava/util/Date;\n+  #317 = Utf8               equals\n+  #318 = Utf8               (Ljava/lang/Object;)Z\n+  #319 = Utf8               obj\n+  #320 = Utf8               Ljava/lang/Object;\n+  #321 = Utf8               myName\n+  #322 = Utf8               otherName\n+  #323 = Utf8               myComment\n+  #324 = Utf8               otherComment\n+  #325 = Utf8               setVersionMadeBy\n+  #326 = Utf8               setVersionRequired\n+  #327 = Utf8               getVersionRequired\n+  #328 = Utf8               getVersionMadeBy\n+  #329 = Utf8               getRawFlag\n+  #330 = Utf8               setRawFlag\n+  #331 = Utf8               getNameSource\n+  #332 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+  #333 = Utf8               setNameSource\n+  #334 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;)V\n+  #335 = Utf8               getCommentSource\n+  #336 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+  #337 = Utf8               setCommentSource\n+  #338 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;)V\n+  #339 = Utf8               <clinit>\n+  #340 = Utf8               SourceFile\n+  #341 = Utf8               ZipArchiveEntry.java\n+  #342 = NameAndType        #188:#189     // \"<init>\":(Ljava/lang/String;)V\n+  #343 = Utf8               org/apache/commons/compress/archivers/zip/ZipMethod\n+  #344 = NameAndType        #160:#148     // method:I\n+  #345 = Utf8               org/apache/commons/compress/archivers/ArchiveEntry\n+  #346 = NameAndType        #161:#162     // size:J\n+  #347 = NameAndType        #163:#148     // internalAttributes:I\n+  #348 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #349 = NameAndType        #166:#148     // platform:I\n+  #350 = NameAndType        #168:#162     // externalAttributes:J\n+  #351 = NameAndType        #169:#148     // alignment:I\n+  #352 = NameAndType        #172:#173     // unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+  #353 = NameAndType        #174:#175     // name:Ljava/lang/String;\n+  #354 = NameAndType        #176:#159     // rawName:[B\n+  #355 = Utf8               org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+  #356 = NameAndType        #188:#204     // \"<init>\":()V\n+  #357 = NameAndType        #177:#178     // gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+  #358 = Utf8               org/apache/commons/compress/archivers/EntryStreamOffsets\n+  #359 = NameAndType        #180:#162     // localHeaderOffset:J\n+  #360 = NameAndType        #181:#162     // dataOffset:J\n+  #361 = NameAndType        #182:#183     // isStreamContiguous:Z\n+  #362 = NameAndType        #473:#185     // NAME:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+  #363 = NameAndType        #184:#185     // nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+  #364 = NameAndType        #474:#187     // COMMENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+  #365 = NameAndType        #186:#187     // commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+  #366 = NameAndType        #294:#189     // setName:(Ljava/lang/String;)V\n+  #367 = NameAndType        #188:#195     // \"<init>\":(Ljava/util/zip/ZipEntry;)V\n+  #368 = NameAndType        #291:#292     // getName:()Ljava/lang/String;\n+  #369 = NameAndType        #475:#289     // getExtra:()[B\n+  #370 = Class              #476          // org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField\n+  #371 = NameAndType        #478:#479     // READ:Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;\n+  #372 = Class              #480          // org/apache/commons/compress/archivers/zip/ExtraFieldUtils\n+  #373 = NameAndType        #481:#482     // parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #374 = NameAndType        #234:#235     // setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+  #375 = NameAndType        #281:#204     // setExtra:()V\n+  #376 = NameAndType        #214:#215     // getMethod:()I\n+  #377 = NameAndType        #216:#217     // setMethod:(I)V\n+  #378 = NameAndType        #295:#222     // getSize:()J\n+  #379 = NameAndType        #218:#215     // getInternalAttributes:()I\n+  #380 = NameAndType        #219:#217     // setInternalAttributes:(I)V\n+  #381 = NameAndType        #221:#222     // getExternalAttributes:()J\n+  #382 = NameAndType        #223:#224     // setExternalAttributes:(J)V\n+  #383 = NameAndType        #251:#245     // getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #384 = NameAndType        #230:#215     // getPlatform:()I\n+  #385 = NameAndType        #231:#217     // setPlatform:(I)V\n+  #386 = NameAndType        #306:#307     // getGeneralPurposeBit:()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+  #387 = NameAndType        #211:#212     // clone:()Ljava/lang/Object;\n+  #388 = NameAndType        #308:#309     // setGeneralPurposeBit:(Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n+  #389 = Utf8\n+  #390 = NameAndType        #293:#229     // isDirectory:()Z\n+  #391 = Utf8               /\n+  #392 = NameAndType        #483:#484     // endsWith:(Ljava/lang/String;)Z\n+  #393 = Utf8               java/lang/StringBuilder\n+  #394 = NameAndType        #485:#486     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #395 = NameAndType        #487:#292     // toString:()Ljava/lang/String;\n+  #396 = NameAndType        #488:#229     // isFile:()Z\n+  #397 = NameAndType        #256:#222     // length:()J\n+  #398 = NameAndType        #296:#224     // setSize:(J)V\n+  #399 = NameAndType        #489:#222     // lastModified:()J\n+  #400 = NameAndType        #490:#224     // setTime:(J)V\n+  #401 = Utf8               java/lang/IllegalArgumentException\n+  #402 = Utf8               ZIP compression method can not be negative:\n+  #403 = NameAndType        #485:#491     // append:(I)Ljava/lang/StringBuilder;\n+  #404 = NameAndType        #227:#215     // getUnixMode:()I\n+  #405 = Utf8               org/apache/commons/compress/archivers/zip/UnixStat\n+  #406 = Utf8               Invalid value for alignment, must be power of two and no bigger than 65535 but is\n+  #407 = Utf8               java/util/ArrayList\n+  #408 = Utf8               org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n+  #409 = NameAndType        #492:#318     // add:(Ljava/lang/Object;)Z\n+  #410 = NameAndType        #161:#215     // size:()I\n+  #411 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n+  #412 = NameAndType        #493:#494     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #413 = NameAndType        #170:#171     // extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #414 = NameAndType        #249:#245     // getParseableExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #415 = NameAndType        #261:#245     // getAllExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #416 = NameAndType        #179:#171     // noExtraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #417 = NameAndType        #248:#245     // getParseableExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #418 = NameAndType        #252:#253     // copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #419 = NameAndType        #260:#245     // getUnparseableOnly:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #420 = NameAndType        #258:#245     // getMergedFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #421 = NameAndType        #252:#255     // copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #422 = Class              #495          // java/lang/Math\n+  #423 = NameAndType        #496:#497     // min:(II)I\n+  #424 = Class              #498          // java/lang/System\n+  #425 = NameAndType        #499:#500     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #426 = NameAndType        #501:#502     // getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #427 = NameAndType        #277:#278     // getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #428 = NameAndType        #269:#270     // removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+  #429 = Utf8               java/util/NoSuchElementException\n+  #430 = NameAndType        #317:#318     // equals:(Ljava/lang/Object;)Z\n+  #431 = NameAndType        #310:#311     // mergeExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n+  #432 = Utf8               java/util/zip/ZipException\n+  #433 = Utf8               java/lang/RuntimeException\n+  #434 = Utf8               Error parsing extra fields for entry:\n+  #435 = Utf8                -\n+  #436 = NameAndType        #503:#292     // getMessage:()Ljava/lang/String;\n+  #437 = NameAndType        #188:#504     // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #438 = NameAndType        #505:#506     // mergeLocalFileDataData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n+  #439 = NameAndType        #281:#282     // setExtra:([B)V\n+  #440 = NameAndType        #158:#159     // EMPTY:[B\n+  #441 = NameAndType        #507:#506     // mergeCentralDirectoryData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n+  #442 = NameAndType        #508:#509     // contains:(Ljava/lang/CharSequence;)Z\n+  #443 = NameAndType        #510:#511     // replace:(CC)Ljava/lang/String;\n+  #444 = Utf8               invalid entry size\n+  #445 = NameAndType        #305:#215     // hashCode:()I\n+  #446 = NameAndType        #263:#264     // addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+  #447 = NameAndType        #512:#289     // getLocalFileDataData:()[B\n+  #448 = NameAndType        #513:#514     // parseFromLocalFileData:([BII)V\n+  #449 = NameAndType        #515:#289     // getCentralDirectoryData:()[B\n+  #450 = NameAndType        #516:#514     // parseFromCentralDirectoryData:([BII)V\n+  #451 = Utf8               java/util/Date\n+  #452 = NameAndType        #517:#222     // getTime:()J\n+  #453 = NameAndType        #188:#224     // \"<init>\":(J)V\n+  #454 = Class              #518          // java/lang/Object\n+  #455 = NameAndType        #519:#520     // getClass:()Ljava/lang/Class;\n+  #456 = NameAndType        #521:#292     // getComment:()Ljava/lang/String;\n+  #457 = NameAndType        #522:#222     // getCrc:()J\n+  #458 = NameAndType        #523:#222     // getCompressedSize:()J\n+  #459 = NameAndType        #290:#289     // getCentralDirectoryExtra:()[B\n+  #460 = Class              #524          // java/util/Arrays\n+  #461 = NameAndType        #317:#525     // equals:([B[B)Z\n+  #462 = NameAndType        #288:#289     // getLocalFileDataExtra:()[B\n+  #463 = NameAndType        #165:#148     // versionMadeBy:I\n+  #464 = NameAndType        #164:#148     // versionRequired:I\n+  #465 = NameAndType        #167:#148     // rawFlag:I\n+  #466 = Utf8               java/util/zip/ZipEntry\n+  #467 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource\n+  #468 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource\n+  #469 = Utf8               java/io/File\n+  #470 = Utf8               java/lang/String\n+  #471 = Utf8               java/util/List\n+  #472 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+  #473 = Utf8               NAME\n+  #474 = Utf8               COMMENT\n+  #475 = Utf8               getExtra\n+  #476 = Utf8               org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField\n+  #477 = Utf8               UnparseableExtraField\n+  #478 = Utf8               READ\n+  #479 = Utf8               Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;\n+  #480 = Utf8               org/apache/commons/compress/archivers/zip/ExtraFieldUtils\n+  #481 = Utf8               parse\n+  #482 = Utf8               ([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #483 = Utf8               endsWith\n+  #484 = Utf8               (Ljava/lang/String;)Z\n+  #485 = Utf8               append\n+  #486 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #487 = Utf8               toString\n+  #488 = Utf8               isFile\n+  #489 = Utf8               lastModified\n+  #490 = Utf8               setTime\n+  #491 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #492 = Utf8               add\n+  #493 = Utf8               toArray\n+  #494 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #495 = Utf8               java/lang/Math\n+  #496 = Utf8               min\n+  #497 = Utf8               (II)I\n+  #498 = Utf8               java/lang/System\n+  #499 = Utf8               arraycopy\n+  #500 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #501 = Utf8               getHeaderId\n+  #502 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #503 = Utf8               getMessage\n+  #504 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #505 = Utf8               mergeLocalFileDataData\n+  #506 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n+  #507 = Utf8               mergeCentralDirectoryData\n+  #508 = Utf8               contains\n+  #509 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #510 = Utf8               replace\n+  #511 = Utf8               (CC)Ljava/lang/String;\n+  #512 = Utf8               getLocalFileDataData\n+  #513 = Utf8               parseFromLocalFileData\n+  #514 = Utf8               ([BII)V\n+  #515 = Utf8               getCentralDirectoryData\n+  #516 = Utf8               parseFromCentralDirectoryData\n+  #517 = Utf8               getTime\n+  #518 = Utf8               java/lang/Object\n+  #519 = Utf8               getClass\n+  #520 = Utf8               ()Ljava/lang/Class;\n+  #521 = Utf8               getComment\n+  #522 = Utf8               getCrc\n+  #523 = Utf8               getCompressedSize\n+  #524 = Utf8               java/util/Arrays\n+  #525 = Utf8               ([B[B)Z\n {\n   public static final int PLATFORM_UNIX = 3;\n     descriptor: I\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 3\n \n   public static final int PLATFORM_FAT = 0;\n@@ -895,15 +886,15 @@\n         line 197: 0\n         line 198: 5\n         line 199: 13\n         line 200: 21\n         line 201: 29\n         line 202: 37\n         line 203: 42\n-        line 204: 52\n+        line 204: 51\n         line 203: 58\n         line 205: 61\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      62     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n             0      62     1 entry   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n            42      20     2 other   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n@@ -969,14 +960,16 @@\n         58: aload_0\n         59: aload_1\n         60: invokevirtual #61                 // Method java/io/File.lastModified:()J\n         63: invokevirtual #62                 // Method setTime:(J)V\n         66: return\n       LineNumberTable:\n         line 225: 0\n+        line 226: 17\n+        line 225: 40\n         line 227: 43\n         line 228: 50\n         line 230: 58\n         line 232: 66\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      67     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -1167,15 +1160,16 @@\n         34: invokevirtual #42                 // Method setExternalAttributes:(J)V\n         37: aload_0\n         38: iconst_3\n         39: putfield      #10                 // Field platform:I\n         42: return\n       LineNumberTable:\n         line 326: 0\n-        line 330: 20\n+        line 328: 5\n+        line 330: 19\n         line 326: 34\n         line 332: 37\n         line 333: 42\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      43     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n             0      43     1  mode   I\n@@ -1214,15 +1208,15 @@\n         18: lshr\n         19: ldc2_w        #69                 // long 65535l\n         22: land\n         23: l2i\n         24: ireturn\n       LineNumberTable:\n         line 340: 0\n-        line 341: 13\n+        line 341: 12\n         line 340: 24\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      25     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n       StackMapTable: number_of_entries = 2\n         frame_type = 12 /* same */\n         frame_type = 75 /* same_locals_1_stack_item */\n@@ -1446,16 +1440,16 @@\n          5: invokespecial #87                 // Method getAllExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          8: goto          15\n         11: aload_0\n         12: invokespecial #86                 // Method getParseableExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         15: areturn\n       LineNumberTable:\n         line 442: 0\n-        line 443: 5\n-        line 444: 12\n+        line 443: 4\n+        line 444: 11\n         line 442: 15\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n             0      16     1 includeUnparseable   Z\n       StackMapTable: number_of_entries = 2\n         frame_type = 11 /* same */\n@@ -3050,8 +3044,8 @@\n         line 60: 0\n         line 141: 6\n }\n SourceFile: \"ZipArchiveEntry.java\"\n InnerClasses:\n   public static final #143= #142 of #9;   // CommentSource=class org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource of class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n   public static final #146= #145 of #9;   // NameSource=class org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource of class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  public static final #486= #375 of #377; // UnparseableExtraField=class org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField of class org/apache/commons/compress/archivers/zip/ExtraFieldUtils\n+  public static final #477= #370 of #372; // UnparseableExtraField=class org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField of class org/apache/commons/compress/archivers/zip/ExtraFieldUtils\n"}]}
