{"diffoscope-json-version": 1, "source1": "first/Expander.class", "source2": "second/Expander.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -9,14 +9,15 @@\n import org.apache.commons.compress.archivers.zip.ZipFile;\n import org.apache.commons.compress.archivers.tar.TarFile;\n import java.nio.channels.ReadableByteChannel;\n import java.nio.channels.Channels;\n import java.nio.channels.SeekableByteChannel;\n import java.nio.channels.FileChannel;\n import java.nio.file.StandardOpenOption;\n+import java.util.Objects;\n import org.apache.commons.compress.archivers.sevenz.SevenZFile;\n import java.io.BufferedInputStream;\n import java.io.Closeable;\n import org.apache.commons.compress.archivers.ArchiveStreamFactory;\n import java.io.InputStream;\n import org.apache.commons.compress.archivers.ArchiveException;\n import java.io.File;\n@@ -86,30 +87,31 @@\n     public void expand(final InputStream inputStream, final File file, final CloseableConsumer closeableConsumer) throws IOException, ArchiveException {\n         try (final CloseableConsumerAdapter closeableConsumerAdapter = new CloseableConsumerAdapter(closeableConsumer)) {\n             this.expand((ArchiveInputStream)closeableConsumerAdapter.track((Closeable)ArchiveStreamFactory.DEFAULT.createArchiveInputStream(inputStream)), file);\n         }\n     }\n     \n     public void expand(final Path path, final Path path2) throws IOException, ArchiveException {\n-        String detect = null;\n+        String detect;\n         try (final BufferedInputStream bufferedInputStream = new BufferedInputStream(Files.newInputStream(path, new OpenOption[0]))) {\n             detect = ArchiveStreamFactory.detect((InputStream)bufferedInputStream);\n         }\n         this.expand(detect, path, path2);\n     }\n     \n     public void expand(final SevenZFile sevenZFile, final File file) throws IOException {\n         this.expand(sevenZFile, this.toPath(file));\n     }\n     \n-    public void expand(final SevenZFile sevenZFile, final Path path) throws IOException {\n-        this.expand(sevenZFile::getNextEntry, (archiveEntry, outputStream) -> {\n+    public void expand(final SevenZFile obj, final Path path) throws IOException {\n+        Objects.requireNonNull(obj);\n+        this.expand(obj::getNextEntry, (archiveEntry, outputStream) -> {\n             final byte[] b = new byte[8192];\n             int read;\n-            while (-1 != (read = sevenZFile.read(b))) {\n+            while (-1 != (read = obj.read(b))) {\n                 if (outputStream != null) {\n                     outputStream.write(b, 0, read);\n                 }\n             }\n         }, path);\n     }\n     \n"}]}
