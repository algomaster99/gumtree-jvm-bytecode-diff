{"diffoscope-json-version": 1, "source1": "first/Lister.class", "source2": "second/Lister.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -17,67 +17,32 @@\n             return;\n         }\n         System.out.println(\"Analysing \" + args[0]);\n         final File f = new File(args[0]);\n         if (!f.isFile()) {\n             System.err.println(f + \" doesn't exist or is a directory\");\n         }\n-        final InputStream fis = new BufferedInputStream(Files.newInputStream(f.toPath(), new OpenOption[0]));\n-        Throwable x0 = null;\n-        try {\n-            final ArchiveInputStream ais = createArchiveInputStream(args, fis);\n-            Throwable x2 = null;\n-            try {\n-                System.out.println(\"Created \" + ais.toString());\n-                ArchiveEntry ae;\n-                while ((ae = ais.getNextEntry()) != null) {\n-                    System.out.println(ae.getName());\n-                }\n+        try (final InputStream fis = new BufferedInputStream(Files.newInputStream(f.toPath(), new OpenOption[0]));\n+             final ArchiveInputStream ais = createArchiveInputStream(args, fis)) {\n+            System.out.println(\"Created \" + ais.toString());\n+            ArchiveEntry ae;\n+            while ((ae = ais.getNextEntry()) != null) {\n+                System.out.println(ae.getName());\n             }\n-            catch (final Throwable t) {\n-                x2 = t;\n-                throw t;\n-            }\n-            finally {\n-                if (ais != null) {\n-                    $closeResource(x2, (AutoCloseable)ais);\n-                }\n-            }\n-        }\n-        catch (final Throwable t2) {\n-            x0 = t2;\n-            throw t2;\n-        }\n-        finally {\n-            $closeResource(x0, fis);\n         }\n     }\n     \n     private static ArchiveInputStream createArchiveInputStream(final String[] args, final InputStream fis) throws ArchiveException {\n         if (args.length > 1) {\n             return Lister.factory.createArchiveInputStream(args[1], fis);\n         }\n         return Lister.factory.createArchiveInputStream(fis);\n     }\n     \n     private static void usage() {\n         System.out.println(\"Parameters: archive-name [archive-type]\");\n     }\n     \n-    private static /* synthetic */ void $closeResource(final Throwable x0, final AutoCloseable x1) {\n-        if (x0 != null) {\n-            try {\n-                x1.close();\n-            }\n-            catch (final Throwable exception) {\n-                x0.addSuppressed(exception);\n-            }\n-        }\n-        else {\n-            x1.close();\n-        }\n-    }\n-    \n     static {\n         factory = new ArchiveStreamFactory();\n     }\n }\n"}]}
