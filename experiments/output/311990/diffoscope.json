{"diffoscope-json-version": 1, "source1": "first/DeflateParameters.class", "source2": "second/DeflateParameters.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,74 +1,74 @@\n-  SHA-256 checksum f3adfef6357594f60399f1be42f931fcbb4c202518b6145dc00a92e446bb689d\n+  SHA-256 checksum 2d01fcccb392eff735f04550e99c35433d983b35771c47c9d530c6b34771e1f3\n   Compiled from \"DeflateParameters.java\"\n public class org.apache.commons.compress.compressors.deflate.DeflateParameters\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #5                          // org/apache/commons/compress/compressors/deflate/DeflateParameters\n-  super_class: #14                        // java/lang/Object\n+  this_class: #8                          // org/apache/commons/compress/compressors/deflate/DeflateParameters\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 4, methods: 5, attributes: 1\n Constant pool:\n-   #1 = Methodref          #14.#39        // java/lang/Object.\"<init>\":()V\n-   #2 = Fieldref           #5.#40         // org/apache/commons/compress/compressors/deflate/DeflateParameters.zlibHeader:Z\n-   #3 = Class              #41            // java/util/zip/Deflater\n-   #4 = Fieldref           #5.#42         // org/apache/commons/compress/compressors/deflate/DeflateParameters.compressionLevel:I\n-   #5 = Class              #43            // org/apache/commons/compress/compressors/deflate/DeflateParameters\n-   #6 = Class              #44            // java/lang/IllegalArgumentException\n-   #7 = Class              #45            // java/lang/StringBuilder\n-   #8 = Methodref          #7.#39         // java/lang/StringBuilder.\"<init>\":()V\n-   #9 = String             #46            // Invalid Deflate compression level:\n-  #10 = Methodref          #7.#47         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #11 = Methodref          #7.#48         // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-  #12 = Methodref          #7.#49         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #13 = Methodref          #6.#50         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #14 = Class              #51            // java/lang/Object\n-  #15 = Utf8               MAX_LEVEL\n-  #16 = Utf8               I\n-  #17 = Utf8               ConstantValue\n-  #18 = Integer            9\n-  #19 = Utf8               MIN_LEVEL\n-  #20 = Integer            0\n-  #21 = Utf8               zlibHeader\n-  #22 = Utf8               Z\n-  #23 = Utf8               compressionLevel\n-  #24 = Utf8               <init>\n-  #25 = Utf8               ()V\n-  #26 = Utf8               Code\n-  #27 = Utf8               LineNumberTable\n-  #28 = Utf8               getCompressionLevel\n-  #29 = Utf8               ()I\n-  #30 = Utf8               setCompressionLevel\n-  #31 = Utf8               (I)V\n-  #32 = Utf8               StackMapTable\n-  #33 = Utf8               setWithZlibHeader\n-  #34 = Utf8               (Z)V\n-  #35 = Utf8               withZlibHeader\n-  #36 = Utf8               ()Z\n-  #37 = Utf8               SourceFile\n-  #38 = Utf8               DeflateParameters.java\n-  #39 = NameAndType        #24:#25        // \"<init>\":()V\n-  #40 = NameAndType        #21:#22        // zlibHeader:Z\n-  #41 = Utf8               java/util/zip/Deflater\n-  #42 = NameAndType        #23:#16        // compressionLevel:I\n-  #43 = Utf8               org/apache/commons/compress/compressors/deflate/DeflateParameters\n-  #44 = Utf8               java/lang/IllegalArgumentException\n-  #45 = Utf8               java/lang/StringBuilder\n-  #46 = Utf8               Invalid Deflate compression level:\n-  #47 = NameAndType        #52:#53        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #48 = NameAndType        #52:#54        // append:(I)Ljava/lang/StringBuilder;\n-  #49 = NameAndType        #55:#56        // toString:()Ljava/lang/String;\n-  #50 = NameAndType        #24:#57        // \"<init>\":(Ljava/lang/String;)V\n-  #51 = Utf8               java/lang/Object\n-  #52 = Utf8               append\n-  #53 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #54 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #55 = Utf8               toString\n-  #56 = Utf8               ()Ljava/lang/String;\n-  #57 = Utf8               (Ljava/lang/String;)V\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Fieldref           #8.#9          // org/apache/commons/compress/compressors/deflate/DeflateParameters.zlibHeader:Z\n+   #8 = Class              #10            // org/apache/commons/compress/compressors/deflate/DeflateParameters\n+   #9 = NameAndType        #11:#12        // zlibHeader:Z\n+  #10 = Utf8               org/apache/commons/compress/compressors/deflate/DeflateParameters\n+  #11 = Utf8               zlibHeader\n+  #12 = Utf8               Z\n+  #13 = Class              #14            // java/util/zip/Deflater\n+  #14 = Utf8               java/util/zip/Deflater\n+  #15 = Fieldref           #8.#16         // org/apache/commons/compress/compressors/deflate/DeflateParameters.compressionLevel:I\n+  #16 = NameAndType        #17:#18        // compressionLevel:I\n+  #17 = Utf8               compressionLevel\n+  #18 = Utf8               I\n+  #19 = Class              #20            // java/lang/IllegalArgumentException\n+  #20 = Utf8               java/lang/IllegalArgumentException\n+  #21 = Class              #22            // java/lang/StringBuilder\n+  #22 = Utf8               java/lang/StringBuilder\n+  #23 = Methodref          #21.#3         // java/lang/StringBuilder.\"<init>\":()V\n+  #24 = String             #25            // Invalid Deflate compression level:\n+  #25 = Utf8               Invalid Deflate compression level:\n+  #26 = Methodref          #21.#27        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #27 = NameAndType        #28:#29        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #28 = Utf8               append\n+  #29 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #30 = Methodref          #21.#31        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #31 = NameAndType        #28:#32        // append:(I)Ljava/lang/StringBuilder;\n+  #32 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #33 = Methodref          #21.#34        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #34 = NameAndType        #35:#36        // toString:()Ljava/lang/String;\n+  #35 = Utf8               toString\n+  #36 = Utf8               ()Ljava/lang/String;\n+  #37 = Methodref          #19.#38        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #38 = NameAndType        #5:#39         // \"<init>\":(Ljava/lang/String;)V\n+  #39 = Utf8               (Ljava/lang/String;)V\n+  #40 = Utf8               MAX_LEVEL\n+  #41 = Utf8               ConstantValue\n+  #42 = Integer            9\n+  #43 = Utf8               MIN_LEVEL\n+  #44 = Integer            0\n+  #45 = Utf8               Code\n+  #46 = Utf8               LineNumberTable\n+  #47 = Utf8               getCompressionLevel\n+  #48 = Utf8               ()I\n+  #49 = Utf8               setCompressionLevel\n+  #50 = Utf8               (I)V\n+  #51 = Utf8               StackMapTable\n+  #52 = Utf8               setWithZlibHeader\n+  #53 = Utf8               (Z)V\n+  #54 = Utf8               withZlibHeader\n+  #55 = Utf8               ()Z\n+  #56 = Utf8               SourceFile\n+  #57 = Utf8               DeflateParameters.java\n {\n   static final int MAX_LEVEL = 9;\n     descriptor: I\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n     ConstantValue: int 9\n \n   static final int MIN_LEVEL = 0;\n@@ -89,60 +89,60 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iconst_1\n-         6: putfield      #2                  // Field zlibHeader:Z\n+         6: putfield      #7                  // Field zlibHeader:Z\n          9: aload_0\n         10: iconst_m1\n-        11: putfield      #4                  // Field compressionLevel:I\n+        11: putfield      #15                 // Field compressionLevel:I\n         14: return\n       LineNumberTable:\n         line 28: 0\n         line 33: 4\n         line 34: 9\n \n   public int getCompressionLevel();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field compressionLevel:I\n+         1: getfield      #15                 // Field compressionLevel:I\n          4: ireturn\n       LineNumberTable:\n         line 42: 0\n \n   public void setCompressionLevel(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: iload_1\n          1: iflt          10\n          4: iload_1\n          5: bipush        9\n          7: if_icmple     37\n-        10: new           #6                  // class java/lang/IllegalArgumentException\n+        10: new           #19                 // class java/lang/IllegalArgumentException\n         13: dup\n-        14: new           #7                  // class java/lang/StringBuilder\n+        14: new           #21                 // class java/lang/StringBuilder\n         17: dup\n-        18: invokespecial #8                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        21: ldc           #9                  // String Invalid Deflate compression level:\n-        23: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        18: invokespecial #23                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        21: ldc           #24                 // String Invalid Deflate compression level:\n+        23: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         26: iload_1\n-        27: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        30: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        33: invokespecial #13                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        27: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        30: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        33: invokespecial #37                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         36: athrow\n         37: aload_0\n         38: iload_1\n-        39: putfield      #4                  // Field compressionLevel:I\n+        39: putfield      #15                 // Field compressionLevel:I\n         42: return\n       LineNumberTable:\n         line 55: 0\n         line 56: 10\n         line 58: 37\n         line 59: 42\n       StackMapTable: number_of_entries = 2\n@@ -152,25 +152,25 @@\n   public void setWithZlibHeader(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #2                  // Field zlibHeader:Z\n+         2: putfield      #7                  // Field zlibHeader:Z\n          5: return\n       LineNumberTable:\n         line 70: 0\n         line 71: 5\n \n   public boolean withZlibHeader();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field zlibHeader:Z\n+         1: getfield      #7                  // Field zlibHeader:Z\n          4: ireturn\n       LineNumberTable:\n         line 79: 0\n }\n SourceFile: \"DeflateParameters.java\"\n"}]}
