{"diffoscope-json-version": 1, "source1": "first/TreeTable$TreeTableCellEditor.class", "source2": "second/TreeTable$TreeTableCellEditor.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -10,25 +10,24 @@\n \n private final class TreeTableCellEditor extends BaseCellEditor implements TableCellEditor\n {\n     private TreeTableCellEditor(final TreeTable this$0) {\n         this.this$0 = this$0;\n     }\n     \n-    public Component getTableCellEditorComponent(final JTable table, final Object value, final boolean isSelected, final int row, final int column) {\n+    public Component getTableCellEditorComponent(final JTable table, final Object o, final boolean b, final int n, final int n2) {\n         return (Component)this.this$0.tree;\n     }\n     \n-    public boolean isCellEditable(final EventObject event) {\n-        if (event instanceof MouseEvent) {\n-            for (int counter = this.this$0.getColumnCount() - 1; counter >= 0; --counter) {\n-                if (this.this$0.getColumnClass(counter) == ParseTreeTableModel.class) {\n-                    final MouseEvent mouseEvent = (MouseEvent)event;\n-                    final MouseEvent newMouseEvent = new MouseEvent((Component)this.this$0.tree, mouseEvent.getID(), mouseEvent.getWhen(), mouseEvent.getModifiersEx(), mouseEvent.getX() - this.this$0.getCellRect(0, counter, true).x, mouseEvent.getY(), mouseEvent.getClickCount(), mouseEvent.isPopupTrigger());\n-                    this.this$0.tree.dispatchEvent((AWTEvent)newMouseEvent);\n+    public boolean isCellEditable(final EventObject eventObject) {\n+        if (eventObject instanceof MouseEvent) {\n+            for (int i = this.this$0.getColumnCount() - 1; i >= 0; --i) {\n+                if (this.this$0.getColumnClass(i) == ParseTreeTableModel.class) {\n+                    final MouseEvent mouseEvent = (MouseEvent)eventObject;\n+                    this.this$0.tree.dispatchEvent((AWTEvent)new MouseEvent((Component)this.this$0.tree, mouseEvent.getID(), mouseEvent.getWhen(), mouseEvent.getModifiersEx(), mouseEvent.getX() - this.this$0.getCellRect(0, i, true).x, mouseEvent.getY(), mouseEvent.getClickCount(), mouseEvent.isPopupTrigger()));\n                     break;\n                 }\n             }\n         }\n         return false;\n     }\n }\n"}]}
