{"diffoscope-json-version": 1, "source1": "first/IORunnable.class", "source2": "second/IORunnable.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,8 +1,8 @@\n-  SHA-256 checksum 48690468c3f3fe4a00a493bd3c3d34eae56e107110c324ca31e983c422f8c34b\n+  SHA-256 checksum 80919b4e46f17a6250cb437613d226e6ea4ac51ce7368de7495b6da4af9e1c56\n   Compiled from \"IORunnable.java\"\n public interface org.apache.commons.io.function.IORunnable\n   minor version: 0\n   major version: 52\n   flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT\n   this_class: #10                         // org/apache/commons/io/function/IORunnable\n   super_class: #12                        // java/lang/Object\n@@ -21,58 +21,52 @@\n   #11 = Utf8               org/apache/commons/io/function/IORunnable\n   #12 = Class              #13            // java/lang/Object\n   #13 = Utf8               java/lang/Object\n   #14 = Utf8               asRunnable\n   #15 = Utf8               ()Ljava/lang/Runnable;\n   #16 = Utf8               Code\n   #17 = Utf8               LineNumberTable\n-  #18 = Utf8               LocalVariableTable\n-  #19 = Utf8               this\n-  #20 = Utf8               Lorg/apache/commons/io/function/IORunnable;\n-  #21 = Utf8               ()V\n-  #22 = Utf8               Exceptions\n-  #23 = Class              #24            // java/io/IOException\n-  #24 = Utf8               java/io/IOException\n-  #25 = Utf8               lambda$asRunnable$0\n-  #26 = Utf8               SourceFile\n-  #27 = Utf8               IORunnable.java\n-  #28 = Utf8               RuntimeVisibleAnnotations\n-  #29 = Utf8               Ljava/lang/FunctionalInterface;\n-  #30 = Utf8               BootstrapMethods\n-  #31 = MethodHandle       6:#32          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #32 = Methodref          #33.#34        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #33 = Class              #35            // java/lang/invoke/LambdaMetafactory\n-  #34 = NameAndType        #36:#37        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #35 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #36 = Utf8               metafactory\n-  #37 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #38 = MethodType         #21            //  ()V\n-  #39 = MethodHandle       7:#40          // REF_invokeSpecial org/apache/commons/io/function/IORunnable.lambda$asRunnable$0:()V\n-  #40 = InterfaceMethodref #10.#41        // org/apache/commons/io/function/IORunnable.lambda$asRunnable$0:()V\n-  #41 = NameAndType        #25:#21        // lambda$asRunnable$0:()V\n-  #42 = Utf8               InnerClasses\n-  #43 = Class              #44            // java/lang/invoke/MethodHandles$Lookup\n-  #44 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #45 = Class              #46            // java/lang/invoke/MethodHandles\n-  #46 = Utf8               java/lang/invoke/MethodHandles\n-  #47 = Utf8               Lookup\n+  #18 = Utf8               ()V\n+  #19 = Utf8               Exceptions\n+  #20 = Class              #21            // java/io/IOException\n+  #21 = Utf8               java/io/IOException\n+  #22 = Utf8               lambda$asRunnable$0\n+  #23 = Utf8               SourceFile\n+  #24 = Utf8               IORunnable.java\n+  #25 = Utf8               RuntimeVisibleAnnotations\n+  #26 = Utf8               Ljava/lang/FunctionalInterface;\n+  #27 = Utf8               BootstrapMethods\n+  #28 = MethodHandle       6:#29          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #29 = Methodref          #30.#31        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #30 = Class              #32            // java/lang/invoke/LambdaMetafactory\n+  #31 = NameAndType        #33:#34        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #32 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #33 = Utf8               metafactory\n+  #34 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #35 = MethodType         #18            //  ()V\n+  #36 = MethodHandle       7:#37          // REF_invokeSpecial org/apache/commons/io/function/IORunnable.lambda$asRunnable$0:()V\n+  #37 = InterfaceMethodref #10.#38        // org/apache/commons/io/function/IORunnable.lambda$asRunnable$0:()V\n+  #38 = NameAndType        #22:#18        // lambda$asRunnable$0:()V\n+  #39 = Utf8               InnerClasses\n+  #40 = Class              #41            // java/lang/invoke/MethodHandles$Lookup\n+  #41 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #42 = Class              #43            // java/lang/invoke/MethodHandles\n+  #43 = Utf8               java/lang/invoke/MethodHandles\n+  #44 = Utf8               Lookup\n {\n   public default java.lang.Runnable asRunnable();\n     descriptor: ()Ljava/lang/Runnable;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: invokedynamic #1,  0              // InvokeDynamic #0:run:(Lorg/apache/commons/io/function/IORunnable;)Ljava/lang/Runnable;\n          6: areturn\n       LineNumberTable:\n         line 37: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       7     0  this   Lorg/apache/commons/io/function/IORunnable;\n \n   public abstract void run() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.io.IOException\n \n@@ -82,23 +76,20 @@\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: invokestatic  #5                  // Method org/apache/commons/io/function/Uncheck.run:(Lorg/apache/commons/io/function/IORunnable;)V\n          4: return\n       LineNumberTable:\n         line 37: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       5     0  this   Lorg/apache/commons/io/function/IORunnable;\n }\n SourceFile: \"IORunnable.java\"\n RuntimeVisibleAnnotations:\n-  0: #29()\n+  0: #26()\n     java.lang.FunctionalInterface\n BootstrapMethods:\n-  0: #31 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #28 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #38 ()V\n-      #39 REF_invokeSpecial org/apache/commons/io/function/IORunnable.lambda$asRunnable$0:()V\n-      #38 ()V\n+      #35 ()V\n+      #36 REF_invokeSpecial org/apache/commons/io/function/IORunnable.lambda$asRunnable$0:()V\n+      #35 ()V\n InnerClasses:\n-  public static final #47= #43 of #45;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  public static final #44= #40 of #42;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
