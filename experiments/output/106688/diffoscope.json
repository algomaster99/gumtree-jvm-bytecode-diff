{"diffoscope-json-version": 1, "source1": "first/FileWriterWithEncoding.class", "source2": "second/FileWriterWithEncoding.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,550 +1,552 @@\n-  SHA-256 checksum 5dec792ebfc017a308c0d66cfa00bf530e862443fd50635fa02144f3d6e3067a\n+  SHA-256 checksum 660267a1f93e7afe7112b9e3a983e5ad2c32ab1225596d9d43da39dba778658b\n   Compiled from \"FileWriterWithEncoding.java\"\n public class org.apache.commons.io.output.FileWriterWithEncoding extends java.io.Writer\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #8                          // org/apache/commons/io/output/FileWriterWithEncoding\n-  super_class: #19                        // java/io/Writer\n+  this_class: #1                          // org/apache/commons/io/output/FileWriterWithEncoding\n+  super_class: #3                         // java/io/Writer\n   interfaces: 0, fields: 1, methods: 20, attributes: 1\n Constant pool:\n-    #1 = Class              #2            // java/io/File\n-    #2 = Utf8               java/io/File\n-    #3 = Methodref          #1.#4         // java/io/File.\"<init>\":(Ljava/lang/String;)V\n-    #4 = NameAndType        #5:#6         // \"<init>\":(Ljava/lang/String;)V\n-    #5 = Utf8               <init>\n-    #6 = Utf8               (Ljava/lang/String;)V\n-    #7 = Methodref          #8.#9         // org/apache/commons/io/output/FileWriterWithEncoding.\"<init>\":(Ljava/io/File;Ljava/lang/String;Z)V\n-    #8 = Class              #10           // org/apache/commons/io/output/FileWriterWithEncoding\n-    #9 = NameAndType        #5:#11        // \"<init>\":(Ljava/io/File;Ljava/lang/String;Z)V\n-   #10 = Utf8               org/apache/commons/io/output/FileWriterWithEncoding\n-   #11 = Utf8               (Ljava/io/File;Ljava/lang/String;Z)V\n-   #12 = Methodref          #8.#13        // org/apache/commons/io/output/FileWriterWithEncoding.\"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;Z)V\n-   #13 = NameAndType        #5:#14        // \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;Z)V\n-   #14 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;Z)V\n-   #15 = Methodref          #8.#16        // org/apache/commons/io/output/FileWriterWithEncoding.\"<init>\":(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V\n-   #16 = NameAndType        #5:#17        // \"<init>\":(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V\n-   #17 = Utf8               (Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V\n-   #18 = Methodref          #19.#20       // java/io/Writer.\"<init>\":()V\n-   #19 = Class              #21           // java/io/Writer\n-   #20 = NameAndType        #5:#22        // \"<init>\":()V\n-   #21 = Utf8               java/io/Writer\n-   #22 = Utf8               ()V\n-   #23 = Methodref          #8.#24        // org/apache/commons/io/output/FileWriterWithEncoding.initWriter:(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;\n-   #24 = NameAndType        #25:#26       // initWriter:(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;\n-   #25 = Utf8               initWriter\n-   #26 = Utf8               (Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;\n-   #27 = Fieldref           #8.#28        // org/apache/commons/io/output/FileWriterWithEncoding.out:Ljava/io/Writer;\n-   #28 = NameAndType        #29:#30       // out:Ljava/io/Writer;\n-   #29 = Utf8               out\n-   #30 = Utf8               Ljava/io/Writer;\n-   #31 = String             #32           // file\n-   #32 = Utf8               file\n-   #33 = Methodref          #34.#35       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #34 = Class              #36           // java/util/Objects\n-   #35 = NameAndType        #37:#38       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #36 = Utf8               java/util/Objects\n-   #37 = Utf8               requireNonNull\n-   #38 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #39 = String             #40           // encoding\n-   #40 = Utf8               encoding\n-   #41 = Methodref          #1.#42        // java/io/File.exists:()Z\n-   #42 = NameAndType        #43:#44       // exists:()Z\n-   #43 = Utf8               exists\n-   #44 = Utf8               ()Z\n-   #45 = Class              #46           // java/io/FileOutputStream\n-   #46 = Utf8               java/io/FileOutputStream\n-   #47 = Methodref          #45.#48       // java/io/FileOutputStream.\"<init>\":(Ljava/io/File;Z)V\n-   #48 = NameAndType        #5:#49        // \"<init>\":(Ljava/io/File;Z)V\n-   #49 = Utf8               (Ljava/io/File;Z)V\n-   #50 = Class              #51           // java/nio/charset/Charset\n-   #51 = Utf8               java/nio/charset/Charset\n-   #52 = Class              #53           // java/io/OutputStreamWriter\n-   #53 = Utf8               java/io/OutputStreamWriter\n-   #54 = Methodref          #52.#55       // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-   #55 = NameAndType        #5:#56        // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-   #56 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-   #57 = Class              #58           // java/nio/charset/CharsetEncoder\n-   #58 = Utf8               java/nio/charset/CharsetEncoder\n-   #59 = Methodref          #52.#60       // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/CharsetEncoder;)V\n-   #60 = NameAndType        #5:#61        // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/CharsetEncoder;)V\n-   #61 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/CharsetEncoder;)V\n-   #62 = Class              #63           // java/lang/String\n-   #63 = Utf8               java/lang/String\n-   #64 = Methodref          #52.#65       // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-   #65 = NameAndType        #5:#66        // \"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-   #66 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)V\n-   #67 = Class              #68           // java/io/IOException\n-   #68 = Utf8               java/io/IOException\n-   #69 = Class              #70           // java/lang/RuntimeException\n-   #70 = Utf8               java/lang/RuntimeException\n-   #71 = Methodref          #72.#73       // org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;)V\n-   #72 = Class              #74           // org/apache/commons/io/IOUtils\n-   #73 = NameAndType        #75:#76       // close:(Ljava/io/Closeable;)V\n-   #74 = Utf8               org/apache/commons/io/IOUtils\n-   #75 = Utf8               close\n-   #76 = Utf8               (Ljava/io/Closeable;)V\n-   #77 = Methodref          #78.#79       // java/lang/Exception.addSuppressed:(Ljava/lang/Throwable;)V\n-   #78 = Class              #80           // java/lang/Exception\n-   #79 = NameAndType        #81:#82       // addSuppressed:(Ljava/lang/Throwable;)V\n-   #80 = Utf8               java/lang/Exception\n-   #81 = Utf8               addSuppressed\n-   #82 = Utf8               (Ljava/lang/Throwable;)V\n-   #83 = Methodref          #84.#85       // org/apache/commons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z\n-   #84 = Class              #86           // org/apache/commons/io/FileUtils\n-   #85 = NameAndType        #87:#88       // deleteQuietly:(Ljava/io/File;)Z\n-   #86 = Utf8               org/apache/commons/io/FileUtils\n-   #87 = Utf8               deleteQuietly\n-   #88 = Utf8               (Ljava/io/File;)Z\n-   #89 = Methodref          #19.#90       // java/io/Writer.write:(I)V\n-   #90 = NameAndType        #91:#92       // write:(I)V\n-   #91 = Utf8               write\n-   #92 = Utf8               (I)V\n-   #93 = Methodref          #19.#94       // java/io/Writer.write:([C)V\n-   #94 = NameAndType        #91:#95       // write:([C)V\n-   #95 = Utf8               ([C)V\n-   #96 = Methodref          #19.#97       // java/io/Writer.write:([CII)V\n-   #97 = NameAndType        #91:#98       // write:([CII)V\n-   #98 = Utf8               ([CII)V\n-   #99 = Methodref          #19.#100      // java/io/Writer.write:(Ljava/lang/String;)V\n-  #100 = NameAndType        #91:#6        // write:(Ljava/lang/String;)V\n-  #101 = Methodref          #19.#102      // java/io/Writer.write:(Ljava/lang/String;II)V\n-  #102 = NameAndType        #91:#103      // write:(Ljava/lang/String;II)V\n-  #103 = Utf8               (Ljava/lang/String;II)V\n-  #104 = Methodref          #19.#105      // java/io/Writer.flush:()V\n-  #105 = NameAndType        #106:#22      // flush:()V\n-  #106 = Utf8               flush\n-  #107 = Methodref          #19.#108      // java/io/Writer.close:()V\n-  #108 = NameAndType        #75:#22       // close:()V\n-  #109 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n-  #110 = Utf8               Code\n-  #111 = Utf8               LineNumberTable\n-  #112 = Utf8               LocalVariableTable\n-  #113 = Utf8               this\n-  #114 = Utf8               Lorg/apache/commons/io/output/FileWriterWithEncoding;\n-  #115 = Utf8               fileName\n-  #116 = Utf8               Ljava/lang/String;\n-  #117 = Utf8               charsetName\n-  #118 = Utf8               Exceptions\n-  #119 = Utf8               (Ljava/lang/String;Ljava/lang/String;Z)V\n-  #120 = Utf8               append\n-  #121 = Utf8               Z\n-  #122 = Utf8               (Ljava/lang/String;Ljava/nio/charset/Charset;)V\n-  #123 = Utf8               charset\n-  #124 = Utf8               Ljava/nio/charset/Charset;\n-  #125 = Utf8               (Ljava/lang/String;Ljava/nio/charset/Charset;Z)V\n-  #126 = Utf8               (Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;)V\n-  #127 = Utf8               Ljava/nio/charset/CharsetEncoder;\n-  #128 = Utf8               (Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;Z)V\n-  #129 = Utf8               charsetEncoder\n-  #130 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n-  #131 = Utf8               Ljava/io/File;\n-  #132 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;)V\n-  #133 = Utf8               (Ljava/io/File;Ljava/nio/charset/CharsetEncoder;)V\n-  #134 = Utf8               e\n-  #135 = Utf8               Ljava/io/IOException;\n-  #136 = Utf8               ex\n-  #137 = Utf8               Ljava/lang/Exception;\n-  #138 = Utf8               Ljava/lang/Object;\n-  #139 = Utf8               stream\n-  #140 = Utf8               Ljava/io/OutputStream;\n-  #141 = Utf8               fileExistedAlready\n-  #142 = Utf8               StackMapTable\n-  #143 = Class              #144          // java/io/OutputStream\n-  #144 = Utf8               java/io/OutputStream\n-  #145 = Class              #146          // java/lang/Object\n-  #146 = Utf8               java/lang/Object\n-  #147 = Utf8               idx\n-  #148 = Utf8               I\n-  #149 = Utf8               chr\n-  #150 = Utf8               [C\n-  #151 = Utf8               st\n-  #152 = Utf8               end\n-  #153 = Utf8               str\n+    #1 = Class              #2            // org/apache/commons/io/output/FileWriterWithEncoding\n+    #2 = Utf8               org/apache/commons/io/output/FileWriterWithEncoding\n+    #3 = Class              #4            // java/io/Writer\n+    #4 = Utf8               java/io/Writer\n+    #5 = Utf8               out\n+    #6 = Utf8               Ljava/io/Writer;\n+    #7 = Utf8               <init>\n+    #8 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n+    #9 = Utf8               Exceptions\n+   #10 = Class              #11           // java/io/IOException\n+   #11 = Utf8               java/io/IOException\n+   #12 = Utf8               Code\n+   #13 = Class              #14           // java/io/File\n+   #14 = Utf8               java/io/File\n+   #15 = Methodref          #13.#16       // java/io/File.\"<init>\":(Ljava/lang/String;)V\n+   #16 = NameAndType        #7:#17        // \"<init>\":(Ljava/lang/String;)V\n+   #17 = Utf8               (Ljava/lang/String;)V\n+   #18 = Methodref          #1.#19        // org/apache/commons/io/output/FileWriterWithEncoding.\"<init>\":(Ljava/io/File;Ljava/lang/String;Z)V\n+   #19 = NameAndType        #7:#20        // \"<init>\":(Ljava/io/File;Ljava/lang/String;Z)V\n+   #20 = Utf8               (Ljava/io/File;Ljava/lang/String;Z)V\n+   #21 = Utf8               LineNumberTable\n+   #22 = Utf8               LocalVariableTable\n+   #23 = Utf8               this\n+   #24 = Utf8               Lorg/apache/commons/io/output/FileWriterWithEncoding;\n+   #25 = Utf8               fileName\n+   #26 = Utf8               Ljava/lang/String;\n+   #27 = Utf8               charsetName\n+   #28 = Utf8               (Ljava/lang/String;Ljava/lang/String;Z)V\n+   #29 = Utf8               append\n+   #30 = Utf8               Z\n+   #31 = Utf8               (Ljava/lang/String;Ljava/nio/charset/Charset;)V\n+   #32 = Methodref          #1.#33        // org/apache/commons/io/output/FileWriterWithEncoding.\"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;Z)V\n+   #33 = NameAndType        #7:#34        // \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;Z)V\n+   #34 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;Z)V\n+   #35 = Utf8               charset\n+   #36 = Utf8               Ljava/nio/charset/Charset;\n+   #37 = Utf8               (Ljava/lang/String;Ljava/nio/charset/Charset;Z)V\n+   #38 = Utf8               (Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;)V\n+   #39 = Methodref          #1.#40        // org/apache/commons/io/output/FileWriterWithEncoding.\"<init>\":(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V\n+   #40 = NameAndType        #7:#41        // \"<init>\":(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V\n+   #41 = Utf8               (Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V\n+   #42 = Utf8               encoding\n+   #43 = Utf8               Ljava/nio/charset/CharsetEncoder;\n+   #44 = Utf8               (Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;Z)V\n+   #45 = Utf8               charsetEncoder\n+   #46 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n+   #47 = Utf8               file\n+   #48 = Utf8               Ljava/io/File;\n+   #49 = Methodref          #3.#50        // java/io/Writer.\"<init>\":()V\n+   #50 = NameAndType        #7:#51        // \"<init>\":()V\n+   #51 = Utf8               ()V\n+   #52 = Methodref          #1.#53        // org/apache/commons/io/output/FileWriterWithEncoding.initWriter:(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;\n+   #53 = NameAndType        #54:#55       // initWriter:(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;\n+   #54 = Utf8               initWriter\n+   #55 = Utf8               (Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;\n+   #56 = Fieldref           #1.#57        // org/apache/commons/io/output/FileWriterWithEncoding.out:Ljava/io/Writer;\n+   #57 = NameAndType        #5:#6         // out:Ljava/io/Writer;\n+   #58 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;)V\n+   #59 = Utf8               (Ljava/io/File;Ljava/nio/charset/CharsetEncoder;)V\n+   #60 = String             #47           // file\n+   #61 = Methodref          #62.#64       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #62 = Class              #63           // java/util/Objects\n+   #63 = Utf8               java/util/Objects\n+   #64 = NameAndType        #65:#66       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #65 = Utf8               requireNonNull\n+   #66 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #67 = String             #42           // encoding\n+   #68 = Methodref          #13.#69       // java/io/File.exists:()Z\n+   #69 = NameAndType        #70:#71       // exists:()Z\n+   #70 = Utf8               exists\n+   #71 = Utf8               ()Z\n+   #72 = Class              #73           // java/io/FileOutputStream\n+   #73 = Utf8               java/io/FileOutputStream\n+   #74 = Methodref          #72.#75       // java/io/FileOutputStream.\"<init>\":(Ljava/io/File;Z)V\n+   #75 = NameAndType        #7:#76        // \"<init>\":(Ljava/io/File;Z)V\n+   #76 = Utf8               (Ljava/io/File;Z)V\n+   #77 = Class              #78           // java/nio/charset/Charset\n+   #78 = Utf8               java/nio/charset/Charset\n+   #79 = Class              #80           // java/io/OutputStreamWriter\n+   #80 = Utf8               java/io/OutputStreamWriter\n+   #81 = Methodref          #79.#82       // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+   #82 = NameAndType        #7:#83        // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+   #83 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+   #84 = Class              #85           // java/nio/charset/CharsetEncoder\n+   #85 = Utf8               java/nio/charset/CharsetEncoder\n+   #86 = Methodref          #79.#87       // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/CharsetEncoder;)V\n+   #87 = NameAndType        #7:#88        // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/CharsetEncoder;)V\n+   #88 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/CharsetEncoder;)V\n+   #89 = Class              #90           // java/lang/String\n+   #90 = Utf8               java/lang/String\n+   #91 = Methodref          #79.#92       // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+   #92 = NameAndType        #7:#93        // \"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+   #93 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)V\n+   #94 = Methodref          #95.#97       // org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;)V\n+   #95 = Class              #96           // org/apache/commons/io/IOUtils\n+   #96 = Utf8               org/apache/commons/io/IOUtils\n+   #97 = NameAndType        #98:#99       // close:(Ljava/io/Closeable;)V\n+   #98 = Utf8               close\n+   #99 = Utf8               (Ljava/io/Closeable;)V\n+  #100 = Methodref          #101.#103     // java/lang/Exception.addSuppressed:(Ljava/lang/Throwable;)V\n+  #101 = Class              #102          // java/lang/Exception\n+  #102 = Utf8               java/lang/Exception\n+  #103 = NameAndType        #104:#105     // addSuppressed:(Ljava/lang/Throwable;)V\n+  #104 = Utf8               addSuppressed\n+  #105 = Utf8               (Ljava/lang/Throwable;)V\n+  #106 = Methodref          #107.#109     // org/apache/commons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z\n+  #107 = Class              #108          // org/apache/commons/io/FileUtils\n+  #108 = Utf8               org/apache/commons/io/FileUtils\n+  #109 = NameAndType        #110:#111     // deleteQuietly:(Ljava/io/File;)Z\n+  #110 = Utf8               deleteQuietly\n+  #111 = Utf8               (Ljava/io/File;)Z\n+  #112 = Class              #113          // java/lang/RuntimeException\n+  #113 = Utf8               java/lang/RuntimeException\n+  #114 = Utf8               Ljava/lang/Object;\n+  #115 = Utf8               stream\n+  #116 = Utf8               Ljava/io/OutputStream;\n+  #117 = Utf8               fileExistedAlready\n+  #118 = Utf8               ex\n+  #119 = Utf8               Ljava/lang/Exception;\n+  #120 = Utf8               e\n+  #121 = Utf8               Ljava/io/IOException;\n+  #122 = Utf8               StackMapTable\n+  #123 = Class              #124          // java/io/OutputStream\n+  #124 = Utf8               java/io/OutputStream\n+  #125 = Class              #126          // java/lang/Object\n+  #126 = Utf8               java/lang/Object\n+  #127 = Utf8               write\n+  #128 = Utf8               (I)V\n+  #129 = Methodref          #3.#130       // java/io/Writer.write:(I)V\n+  #130 = NameAndType        #127:#128     // write:(I)V\n+  #131 = Utf8               idx\n+  #132 = Utf8               I\n+  #133 = Utf8               ([C)V\n+  #134 = Methodref          #3.#135       // java/io/Writer.write:([C)V\n+  #135 = NameAndType        #127:#133     // write:([C)V\n+  #136 = Utf8               chr\n+  #137 = Utf8               [C\n+  #138 = Utf8               ([CII)V\n+  #139 = Methodref          #3.#140       // java/io/Writer.write:([CII)V\n+  #140 = NameAndType        #127:#138     // write:([CII)V\n+  #141 = Utf8               st\n+  #142 = Utf8               end\n+  #143 = Methodref          #3.#144       // java/io/Writer.write:(Ljava/lang/String;)V\n+  #144 = NameAndType        #127:#17      // write:(Ljava/lang/String;)V\n+  #145 = Utf8               str\n+  #146 = Utf8               (Ljava/lang/String;II)V\n+  #147 = Methodref          #3.#148       // java/io/Writer.write:(Ljava/lang/String;II)V\n+  #148 = NameAndType        #127:#146     // write:(Ljava/lang/String;II)V\n+  #149 = Utf8               flush\n+  #150 = Methodref          #3.#151       // java/io/Writer.flush:()V\n+  #151 = NameAndType        #149:#51      // flush:()V\n+  #152 = Methodref          #3.#153       // java/io/Writer.close:()V\n+  #153 = NameAndType        #98:#51       // close:()V\n   #154 = Utf8               SourceFile\n   #155 = Utf8               FileWriterWithEncoding.java\n {\n   private final java.io.Writer out;\n     descriptor: Ljava/io/Writer;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.io.output.FileWriterWithEncoding(java.lang.String, java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n-         1: new           #1                  // class java/io/File\n+         1: new           #13                 // class java/io/File\n          4: dup\n          5: aload_1\n-         6: invokespecial #3                  // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n+         6: invokespecial #15                 // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n          9: aload_2\n         10: iconst_0\n-        11: invokespecial #7                  // Method \"<init>\":(Ljava/io/File;Ljava/lang/String;Z)V\n+        11: invokespecial #18                 // Method \"<init>\":(Ljava/io/File;Ljava/lang/String;Z)V\n         14: return\n       LineNumberTable:\n         line 67: 0\n         line 68: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n             0      15     1 fileName   Ljava/lang/String;\n             0      15     2 charsetName   Ljava/lang/String;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public org.apache.commons.io.output.FileWriterWithEncoding(java.lang.String, java.lang.String, boolean) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/lang/String;Z)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: new           #1                  // class java/io/File\n+         1: new           #13                 // class java/io/File\n          4: dup\n          5: aload_1\n-         6: invokespecial #3                  // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n+         6: invokespecial #15                 // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n          9: aload_2\n         10: iload_3\n-        11: invokespecial #7                  // Method \"<init>\":(Ljava/io/File;Ljava/lang/String;Z)V\n+        11: invokespecial #18                 // Method \"<init>\":(Ljava/io/File;Ljava/lang/String;Z)V\n         14: return\n       LineNumberTable:\n         line 81: 0\n         line 82: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n             0      15     1 fileName   Ljava/lang/String;\n             0      15     2 charsetName   Ljava/lang/String;\n             0      15     3 append   Z\n-    Exceptions:\n-      throws java.io.IOException\n \n   public org.apache.commons.io.output.FileWriterWithEncoding(java.lang.String, java.nio.charset.Charset) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/nio/charset/Charset;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n-         1: new           #1                  // class java/io/File\n+         1: new           #13                 // class java/io/File\n          4: dup\n          5: aload_1\n-         6: invokespecial #3                  // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n+         6: invokespecial #15                 // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n          9: aload_2\n         10: iconst_0\n-        11: invokespecial #12                 // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;Z)V\n+        11: invokespecial #32                 // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;Z)V\n         14: return\n       LineNumberTable:\n         line 93: 0\n         line 94: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n             0      15     1 fileName   Ljava/lang/String;\n             0      15     2 charset   Ljava/nio/charset/Charset;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public org.apache.commons.io.output.FileWriterWithEncoding(java.lang.String, java.nio.charset.Charset, boolean) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/nio/charset/Charset;Z)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: new           #1                  // class java/io/File\n+         1: new           #13                 // class java/io/File\n          4: dup\n          5: aload_1\n-         6: invokespecial #3                  // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n+         6: invokespecial #15                 // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n          9: aload_2\n         10: iload_3\n-        11: invokespecial #12                 // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;Z)V\n+        11: invokespecial #32                 // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;Z)V\n         14: return\n       LineNumberTable:\n         line 107: 0\n         line 108: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n             0      15     1 fileName   Ljava/lang/String;\n             0      15     2 charset   Ljava/nio/charset/Charset;\n             0      15     3 append   Z\n-    Exceptions:\n-      throws java.io.IOException\n \n   public org.apache.commons.io.output.FileWriterWithEncoding(java.lang.String, java.nio.charset.CharsetEncoder) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n-         1: new           #1                  // class java/io/File\n+         1: new           #13                 // class java/io/File\n          4: dup\n          5: aload_1\n-         6: invokespecial #3                  // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n+         6: invokespecial #15                 // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n          9: aload_2\n         10: iconst_0\n-        11: invokespecial #15                 // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V\n+        11: invokespecial #39                 // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V\n         14: return\n       LineNumberTable:\n         line 119: 0\n         line 120: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n             0      15     1 fileName   Ljava/lang/String;\n             0      15     2 encoding   Ljava/nio/charset/CharsetEncoder;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public org.apache.commons.io.output.FileWriterWithEncoding(java.lang.String, java.nio.charset.CharsetEncoder, boolean) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;Z)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: new           #1                  // class java/io/File\n+         1: new           #13                 // class java/io/File\n          4: dup\n          5: aload_1\n-         6: invokespecial #3                  // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n+         6: invokespecial #15                 // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n          9: aload_2\n         10: iload_3\n-        11: invokespecial #15                 // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V\n+        11: invokespecial #39                 // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V\n         14: return\n       LineNumberTable:\n         line 133: 0\n         line 134: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n             0      15     1 fileName   Ljava/lang/String;\n             0      15     2 charsetEncoder   Ljava/nio/charset/CharsetEncoder;\n             0      15     3 append   Z\n-    Exceptions:\n-      throws java.io.IOException\n \n   public org.apache.commons.io.output.FileWriterWithEncoding(java.io.File, java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/io/File;Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iconst_0\n-         4: invokespecial #7                  // Method \"<init>\":(Ljava/io/File;Ljava/lang/String;Z)V\n+         4: invokespecial #18                 // Method \"<init>\":(Ljava/io/File;Ljava/lang/String;Z)V\n          7: return\n       LineNumberTable:\n         line 145: 0\n         line 146: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n             0       8     1  file   Ljava/io/File;\n             0       8     2 charsetName   Ljava/lang/String;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public org.apache.commons.io.output.FileWriterWithEncoding(java.io.File, java.lang.String, boolean) throws java.io.IOException;\n     descriptor: (Ljava/io/File;Ljava/lang/String;Z)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: invokespecial #18                 // Method java/io/Writer.\"<init>\":()V\n+         1: invokespecial #49                 // Method java/io/Writer.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n          6: aload_2\n          7: iload_3\n-         8: invokestatic  #23                 // Method initWriter:(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;\n-        11: putfield      #27                 // Field out:Ljava/io/Writer;\n+         8: invokestatic  #52                 // Method initWriter:(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;\n+        11: putfield      #56                 // Field out:Ljava/io/Writer;\n         14: return\n       LineNumberTable:\n         line 158: 0\n         line 159: 4\n         line 160: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n             0      15     1  file   Ljava/io/File;\n             0      15     2 charsetName   Ljava/lang/String;\n             0      15     3 append   Z\n-    Exceptions:\n-      throws java.io.IOException\n \n   public org.apache.commons.io.output.FileWriterWithEncoding(java.io.File, java.nio.charset.Charset) throws java.io.IOException;\n     descriptor: (Ljava/io/File;Ljava/nio/charset/Charset;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iconst_0\n-         4: invokespecial #12                 // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;Z)V\n+         4: invokespecial #32                 // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;Z)V\n          7: return\n       LineNumberTable:\n         line 171: 0\n         line 172: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n             0       8     1  file   Ljava/io/File;\n             0       8     2 charset   Ljava/nio/charset/Charset;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public org.apache.commons.io.output.FileWriterWithEncoding(java.io.File, java.nio.charset.Charset, boolean) throws java.io.IOException;\n     descriptor: (Ljava/io/File;Ljava/nio/charset/Charset;Z)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: invokespecial #18                 // Method java/io/Writer.\"<init>\":()V\n+         1: invokespecial #49                 // Method java/io/Writer.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n          6: aload_2\n          7: iload_3\n-         8: invokestatic  #23                 // Method initWriter:(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;\n-        11: putfield      #27                 // Field out:Ljava/io/Writer;\n+         8: invokestatic  #52                 // Method initWriter:(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;\n+        11: putfield      #56                 // Field out:Ljava/io/Writer;\n         14: return\n       LineNumberTable:\n         line 184: 0\n         line 185: 4\n         line 186: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n             0      15     1  file   Ljava/io/File;\n             0      15     2 encoding   Ljava/nio/charset/Charset;\n             0      15     3 append   Z\n-    Exceptions:\n-      throws java.io.IOException\n \n   public org.apache.commons.io.output.FileWriterWithEncoding(java.io.File, java.nio.charset.CharsetEncoder) throws java.io.IOException;\n     descriptor: (Ljava/io/File;Ljava/nio/charset/CharsetEncoder;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iconst_0\n-         4: invokespecial #15                 // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V\n+         4: invokespecial #39                 // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V\n          7: return\n       LineNumberTable:\n         line 197: 0\n         line 198: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n             0       8     1  file   Ljava/io/File;\n             0       8     2 charsetEncoder   Ljava/nio/charset/CharsetEncoder;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public org.apache.commons.io.output.FileWriterWithEncoding(java.io.File, java.nio.charset.CharsetEncoder, boolean) throws java.io.IOException;\n     descriptor: (Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: invokespecial #18                 // Method java/io/Writer.\"<init>\":()V\n+         1: invokespecial #49                 // Method java/io/Writer.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n          6: aload_2\n          7: iload_3\n-         8: invokestatic  #23                 // Method initWriter:(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;\n-        11: putfield      #27                 // Field out:Ljava/io/Writer;\n+         8: invokestatic  #52                 // Method initWriter:(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;\n+        11: putfield      #56                 // Field out:Ljava/io/Writer;\n         14: return\n       LineNumberTable:\n         line 211: 0\n         line 212: 4\n         line 213: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n             0      15     1  file   Ljava/io/File;\n             0      15     2 charsetEncoder   Ljava/nio/charset/CharsetEncoder;\n             0      15     3 append   Z\n-    Exceptions:\n-      throws java.io.IOException\n \n   private static java.io.Writer initWriter(java.io.File, java.lang.Object, boolean) throws java.io.IOException;\n     descriptor: (Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=7, args_size=3\n          0: aload_0\n-         1: ldc           #31                 // String file\n-         3: invokestatic  #33                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #60                 // String file\n+         3: invokestatic  #61                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: aload_1\n-         8: ldc           #39                 // String encoding\n-        10: invokestatic  #33                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         8: ldc           #67                 // String encoding\n+        10: invokestatic  #61                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n         13: pop\n         14: aconst_null\n         15: astore_3\n         16: aload_0\n-        17: invokevirtual #41                 // Method java/io/File.exists:()Z\n+        17: invokevirtual #68                 // Method java/io/File.exists:()Z\n         20: istore        4\n-        22: new           #45                 // class java/io/FileOutputStream\n+        22: new           #72                 // class java/io/FileOutputStream\n         25: dup\n         26: aload_0\n         27: iload_2\n-        28: invokespecial #47                 // Method java/io/FileOutputStream.\"<init>\":(Ljava/io/File;Z)V\n+        28: invokespecial #74                 // Method java/io/FileOutputStream.\"<init>\":(Ljava/io/File;Z)V\n         31: astore_3\n         32: aload_1\n-        33: instanceof    #50                 // class java/nio/charset/Charset\n+        33: instanceof    #77                 // class java/nio/charset/Charset\n         36: ifeq          52\n-        39: new           #52                 // class java/io/OutputStreamWriter\n+        39: new           #79                 // class java/io/OutputStreamWriter\n         42: dup\n         43: aload_3\n         44: aload_1\n-        45: checkcast     #50                 // class java/nio/charset/Charset\n-        48: invokespecial #54                 // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+        45: checkcast     #77                 // class java/nio/charset/Charset\n+        48: invokespecial #81                 // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n         51: areturn\n         52: aload_1\n-        53: instanceof    #57                 // class java/nio/charset/CharsetEncoder\n+        53: instanceof    #84                 // class java/nio/charset/CharsetEncoder\n         56: ifeq          72\n-        59: new           #52                 // class java/io/OutputStreamWriter\n+        59: new           #79                 // class java/io/OutputStreamWriter\n         62: dup\n         63: aload_3\n         64: aload_1\n-        65: checkcast     #57                 // class java/nio/charset/CharsetEncoder\n-        68: invokespecial #59                 // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/CharsetEncoder;)V\n+        65: checkcast     #84                 // class java/nio/charset/CharsetEncoder\n+        68: invokespecial #86                 // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/CharsetEncoder;)V\n         71: areturn\n-        72: new           #52                 // class java/io/OutputStreamWriter\n+        72: new           #79                 // class java/io/OutputStreamWriter\n         75: dup\n         76: aload_3\n         77: aload_1\n-        78: checkcast     #62                 // class java/lang/String\n-        81: invokespecial #64                 // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+        78: checkcast     #89                 // class java/lang/String\n+        81: invokespecial #91                 // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n         84: areturn\n         85: astore        5\n         87: aload_3\n-        88: invokestatic  #71                 // Method org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;)V\n+        88: invokestatic  #94                 // Method org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;)V\n         91: goto          103\n         94: astore        6\n         96: aload         5\n         98: aload         6\n-       100: invokevirtual #77                 // Method java/lang/Exception.addSuppressed:(Ljava/lang/Throwable;)V\n+       100: invokevirtual #100                // Method java/lang/Exception.addSuppressed:(Ljava/lang/Throwable;)V\n        103: iload         4\n        105: ifne          113\n        108: aload_0\n-       109: invokestatic  #83                 // Method org/apache/commons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z\n+       109: invokestatic  #106                // Method org/apache/commons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z\n        112: pop\n        113: aload         5\n        115: athrow\n       Exception table:\n          from    to  target type\n             22    51    85   Class java/io/IOException\n-            22    51    85   Class java/lang/RuntimeException\n             52    71    85   Class java/io/IOException\n-            52    71    85   Class java/lang/RuntimeException\n             72    84    85   Class java/io/IOException\n+            22    51    85   Class java/lang/RuntimeException\n+            52    71    85   Class java/lang/RuntimeException\n             72    84    85   Class java/lang/RuntimeException\n             87    91    94   Class java/io/IOException\n       LineNumberTable:\n         line 228: 0\n         line 229: 7\n         line 230: 14\n         line 231: 16\n@@ -552,183 +554,180 @@\n         line 234: 32\n         line 235: 39\n         line 236: 52\n         line 237: 59\n         line 239: 72\n         line 241: 85\n         line 243: 87\n-        line 246: 91\n-        line 244: 94\n+        line 244: 91\n         line 245: 96\n         line 247: 103\n         line 248: 108\n         line 250: 113\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           96       7     6     e   Ljava/io/IOException;\n-           87      29     5    ex   Ljava/lang/Exception;\n             0     116     0  file   Ljava/io/File;\n             0     116     1 encoding   Ljava/lang/Object;\n             0     116     2 append   Z\n            16     100     3 stream   Ljava/io/OutputStream;\n            22      94     4 fileExistedAlready   Z\n+           87      29     5    ex   Ljava/lang/Exception;\n+           96       7     6     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 6\n         frame_type = 253 /* append */\n           offset_delta = 52\n           locals = [ class java/io/OutputStream, int ]\n         frame_type = 19 /* same */\n         frame_type = 76 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Exception ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 8\n           locals = [ class java/io/File, class java/lang/Object, int, class java/io/OutputStream, int, class java/lang/Exception ]\n           stack = [ class java/io/IOException ]\n         frame_type = 8 /* same */\n         frame_type = 9 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #27                 // Field out:Ljava/io/Writer;\n+         1: getfield      #56                 // Field out:Ljava/io/Writer;\n          4: iload_1\n-         5: invokevirtual #89                 // Method java/io/Writer.write:(I)V\n+         5: invokevirtual #129                // Method java/io/Writer.write:(I)V\n          8: return\n       LineNumberTable:\n         line 262: 0\n         line 263: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n             0       9     1   idx   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(char[]) throws java.io.IOException;\n     descriptor: ([C)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #27                 // Field out:Ljava/io/Writer;\n+         1: getfield      #56                 // Field out:Ljava/io/Writer;\n          4: aload_1\n-         5: invokevirtual #93                 // Method java/io/Writer.write:([C)V\n+         5: invokevirtual #134                // Method java/io/Writer.write:([C)V\n          8: return\n       LineNumberTable:\n         line 272: 0\n         line 273: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n             0       9     1   chr   [C\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(char[], int, int) throws java.io.IOException;\n     descriptor: ([CII)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #27                 // Field out:Ljava/io/Writer;\n+         1: getfield      #56                 // Field out:Ljava/io/Writer;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokevirtual #96                 // Method java/io/Writer.write:([CII)V\n+         7: invokevirtual #139                // Method java/io/Writer.write:([CII)V\n         10: return\n       LineNumberTable:\n         line 284: 0\n         line 285: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n             0      11     1   chr   [C\n             0      11     2    st   I\n             0      11     3   end   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #27                 // Field out:Ljava/io/Writer;\n+         1: getfield      #56                 // Field out:Ljava/io/Writer;\n          4: aload_1\n-         5: invokevirtual #99                 // Method java/io/Writer.write:(Ljava/lang/String;)V\n+         5: invokevirtual #143                // Method java/io/Writer.write:(Ljava/lang/String;)V\n          8: return\n       LineNumberTable:\n         line 294: 0\n         line 295: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n             0       9     1   str   Ljava/lang/String;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(java.lang.String, int, int) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;II)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #27                 // Field out:Ljava/io/Writer;\n+         1: getfield      #56                 // Field out:Ljava/io/Writer;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokevirtual #101                // Method java/io/Writer.write:(Ljava/lang/String;II)V\n+         7: invokevirtual #147                // Method java/io/Writer.write:(Ljava/lang/String;II)V\n         10: return\n       LineNumberTable:\n         line 306: 0\n         line 307: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n             0      11     1   str   Ljava/lang/String;\n             0      11     2    st   I\n             0      11     3   end   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void flush() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #27                 // Field out:Ljava/io/Writer;\n-         4: invokevirtual #104                // Method java/io/Writer.flush:()V\n+         1: getfield      #56                 // Field out:Ljava/io/Writer;\n+         4: invokevirtual #150                // Method java/io/Writer.flush:()V\n          7: return\n       LineNumberTable:\n         line 315: 0\n         line 316: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #27                 // Field out:Ljava/io/Writer;\n-         4: invokevirtual #107                // Method java/io/Writer.close:()V\n+         1: getfield      #56                 // Field out:Ljava/io/Writer;\n+         4: invokevirtual #152                // Method java/io/Writer.close:()V\n          7: return\n       LineNumberTable:\n         line 324: 0\n         line 325: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"FileWriterWithEncoding.java\"\n"}]}
