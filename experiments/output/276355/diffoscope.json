{"diffoscope-json-version": 1, "source1": "first/FileImportControl.class", "source2": "second/FileImportControl.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -5,50 +5,50 @@\n \n class FileImportControl extends AbstractImportControl\n {\n     private final String name;\n     private final Pattern patternForExactMatch;\n     private final boolean regex;\n     \n-    FileImportControl(final PkgImportControl parent, final String name, final boolean regex) {\n-        super((AbstractImportControl)parent, MismatchStrategy.DELEGATE_TO_PARENT);\n+    FileImportControl(final PkgImportControl pkgImportControl, final String name, final boolean regex) {\n+        super((AbstractImportControl)pkgImportControl, MismatchStrategy.DELEGATE_TO_PARENT);\n         this.regex = regex;\n         if (regex) {\n             this.name = encloseInGroup(name);\n             this.patternForExactMatch = createPatternForExactMatch(this.name);\n         }\n         else {\n             this.name = name;\n             this.patternForExactMatch = null;\n         }\n     }\n     \n-    private static String encloseInGroup(final String expression) {\n-        return \"(?:\" + expression;\n+    private static String encloseInGroup(final String s) {\n+        return \"(?:\" + s;\n     }\n     \n-    private static Pattern createPatternForExactMatch(final String expression) {\n-        return Pattern.compile(expression);\n+    private static Pattern createPatternForExactMatch(final String regex) {\n+        return Pattern.compile(regex);\n     }\n     \n-    public AbstractImportControl locateFinest(final String forPkg, final String forFileName) {\n-        AbstractImportControl finestMatch = null;\n-        if (this.matchesExactly(forPkg, forFileName)) {\n-            finestMatch = this;\n+    public AbstractImportControl locateFinest(final String s, final String s2) {\n+        AbstractImportControl abstractImportControl = null;\n+        if (this.matchesExactly(s, s2)) {\n+            abstractImportControl = this;\n         }\n-        return finestMatch;\n+        return abstractImportControl;\n     }\n     \n-    protected boolean matchesExactly(final String pkg, final String fileName) {\n-        boolean result;\n-        if (fileName == null) {\n-            result = false;\n+    protected boolean matchesExactly(final String s, final String s2) {\n+        boolean b;\n+        if (s2 == null) {\n+            b = false;\n         }\n         else if (this.regex) {\n-            result = this.patternForExactMatch.matcher(fileName).matches();\n+            b = this.patternForExactMatch.matcher(s2).matches();\n         }\n         else {\n-            result = this.name.equals(fileName);\n+            b = this.name.equals(s2);\n         }\n-        return result;\n+        return b;\n     }\n }\n"}]}
