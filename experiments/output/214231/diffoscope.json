{"diffoscope-json-version": 1, "source1": "first/CookieList.class", "source2": "second/CookieList.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,37 +1,37 @@\n \n package org.json;\n \n import java.util.Iterator;\n \n public class CookieList\n {\n-    public static JSONObject toJSONObject(final String string) throws JSONException {\n-        final JSONObject jo = new JSONObject();\n-        final JSONTokener x = new JSONTokener(string);\n-        while (x.more()) {\n-            final String name = Cookie.unescape(x.nextTo('='));\n-            x.next('=');\n-            jo.put(name, (Object)Cookie.unescape(x.nextTo(';')));\n-            x.next();\n+    public static JSONObject toJSONObject(final String s) throws JSONException {\n+        final JSONObject jsonObject = new JSONObject();\n+        final JSONTokener jsonTokener = new JSONTokener(s);\n+        while (jsonTokener.more()) {\n+            final String unescape = Cookie.unescape(jsonTokener.nextTo('='));\n+            jsonTokener.next('=');\n+            jsonObject.put(unescape, (Object)Cookie.unescape(jsonTokener.nextTo(';')));\n+            jsonTokener.next();\n         }\n-        return jo;\n+        return jsonObject;\n     }\n     \n-    public static String toString(final JSONObject jo) throws JSONException {\n-        boolean b = false;\n+    public static String toString(final JSONObject jsonObject) throws JSONException {\n+        int n = 0;\n         final StringBuilder sb = new StringBuilder();\n-        for (final String key : jo.keySet()) {\n-            final Object value = jo.opt(key);\n-            if (!JSONObject.NULL.equals(value)) {\n-                if (b) {\n+        for (final String s : jsonObject.keySet()) {\n+            final Object opt = jsonObject.opt(s);\n+            if (!JSONObject.NULL.equals(opt)) {\n+                if (n != 0) {\n                     sb.append(';');\n                 }\n-                sb.append(Cookie.escape(key));\n+                sb.append(Cookie.escape(s));\n                 sb.append(\"=\");\n-                sb.append(Cookie.escape(value.toString()));\n-                b = true;\n+                sb.append(Cookie.escape(opt.toString()));\n+                n = 1;\n             }\n         }\n         return sb.toString();\n     }\n }\n"}]}
