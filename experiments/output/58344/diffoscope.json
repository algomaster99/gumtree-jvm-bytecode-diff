{"diffoscope-json-version": 1, "source1": "first/HexDump.class", "source2": "second/HexDump.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -7,14 +7,20 @@\n \n public class HexDump\n {\n     public static final String EOL;\n     private static final char[] _hexcodes;\n     private static final int[] _shifts;\n     \n+    static {\n+        EOL = System.getProperty(\"line.separator\");\n+        _hexcodes = new char[] { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' };\n+        _shifts = new int[] { 28, 24, 20, 16, 12, 8, 4, 0 };\n+    }\n+    \n     public static void dump(final byte[] data, final long offset, final OutputStream stream, final int index) throws IOException, ArrayIndexOutOfBoundsException, IllegalArgumentException {\n         if (index < 0 || index >= data.length) {\n             throw new ArrayIndexOutOfBoundsException(\"illegal index: \" + index + \" into array of length \" + data.length);\n         }\n         if (stream == null) {\n             throw new IllegalArgumentException(\"cannot write to nullstream\");\n         }\n@@ -60,14 +66,8 @@\n     \n     private static StringBuilder dump(final StringBuilder _cbuffer, final byte value) {\n         for (int j = 0; j < 2; ++j) {\n             _cbuffer.append(HexDump._hexcodes[value >> HexDump._shifts[j + 6] & 0xF]);\n         }\n         return _cbuffer;\n     }\n-    \n-    static {\n-        EOL = System.getProperty(\"line.separator\");\n-        _hexcodes = new char[] { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' };\n-        _shifts = new int[] { 28, 24, 20, 16, 12, 8, 4, 0 };\n-    }\n }\n"}]}
