{"diffoscope-json-version": 1, "source1": "first/FramedLZ4CompressorInputStream.class", "source2": "second/FramedLZ4CompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,367 +1,368 @@\n-  SHA-256 checksum 6e0fe806b32af43b09c4b156c781ed3f1ce8a397bce638a3c27193831133d5e0\n+  SHA-256 checksum bbe3266f6ce7d25f07b51958382088448be96d42fc14b958c99c57a3fd248031\n   Compiled from \"FramedLZ4CompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream implements org.apache.commons.compress.utils.InputStreamStatistics\n   minor version: 0\n-  major version: 51\n+  major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #41                         // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-  super_class: #96                        // org/apache/commons/compress/compressors/CompressorInputStream\n-  interfaces: 1, fields: 25, methods: 21, attributes: 2\n+  super_class: #90                        // org/apache/commons/compress/compressors/CompressorInputStream\n+  interfaces: 1, fields: 25, methods: 21, attributes: 3\n Constant pool:\n-    #1 = Methodref          #41.#224      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n-    #2 = Methodref          #41.#225      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n-    #3 = Methodref          #96.#226      // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n-    #4 = Fieldref           #41.#227      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.oneByte:[B\n-    #5 = Class              #228          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream$1\n-    #6 = Methodref          #5.#229       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream$1.\"<init>\":(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)V\n-    #7 = Fieldref           #41.#230      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-    #8 = Class              #231          // org/apache/commons/compress/compressors/lz4/XXHash32\n-    #9 = Methodref          #8.#226       // org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n-   #10 = Fieldref           #41.#232      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-   #11 = Fieldref           #41.#233      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-   #12 = Class              #234          // org/apache/commons/compress/utils/CountingInputStream\n-   #13 = Methodref          #12.#235      // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #14 = Fieldref           #41.#236      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-   #15 = Fieldref           #41.#237      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.decompressConcatenated:Z\n-   #16 = Methodref          #41.#238      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.init:(Z)V\n-   #17 = Methodref          #41.#239      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.read:([BII)I\n-   #18 = Fieldref           #41.#240      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.currentBlock:Ljava/io/InputStream;\n-   #19 = Methodref          #241.#242     // java/io/InputStream.close:()V\n-   #20 = Methodref          #12.#242      // org/apache/commons/compress/utils/CountingInputStream.close:()V\n-   #21 = Fieldref           #41.#243      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.endReached:Z\n-   #22 = Methodref          #41.#244      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOnce:([BII)I\n-   #23 = Methodref          #41.#245      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.nextBlock:()V\n-   #24 = Fieldref           #41.#246      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockDependency:Z\n-   #25 = Methodref          #41.#247      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.appendToBlockDependencyBuffer:([BII)V\n-   #26 = Fieldref           #41.#248      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentChecksum:Z\n-   #27 = Methodref          #8.#249       // org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n-   #28 = Methodref          #12.#250      // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n-   #29 = Methodref          #41.#251      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readSignature:(Z)Z\n-   #30 = Methodref          #41.#252      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readFrameDescriptor:()V\n-   #31 = String             #253          // Not a LZ4 frame stream\n-   #32 = String             #254          // LZ4 frame stream followed by garbage\n-   #33 = Methodref          #255.#256     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n-   #34 = Methodref          #41.#257      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(I)V\n-   #35 = Class              #258          // java/io/IOException\n-   #36 = Methodref          #35.#259      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #37 = Methodref          #41.#260      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.skipSkippableFrame:([B)I\n-   #38 = Methodref          #41.#261      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.matches:([BI)Z\n-   #39 = String             #262          // Premature end of stream while reading frame flags\n-   #40 = Methodref          #8.#263       // org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n-   #41 = Class              #264          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-   #42 = Class              #265          // java/lang/StringBuilder\n-   #43 = Methodref          #42.#226      // java/lang/StringBuilder.\"<init>\":()V\n-   #44 = String             #266          // Unsupported version\n-   #45 = Methodref          #42.#267      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #46 = Methodref          #42.#268      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #47 = Methodref          #42.#269      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #48 = Fieldref           #41.#270      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockDependencyBuffer:[B\n-   #49 = Class              #271          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-   #50 = Integer            65536\n-   #51 = Fieldref           #41.#272      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockChecksum:Z\n-   #52 = Fieldref           #41.#273      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentSize:Z\n-   #53 = String             #274          // Premature end of stream while reading frame BD byte\n-   #54 = String             #275          // Premature end of stream while reading content size\n-   #55 = String             #276          // Premature end of stream while reading frame header checksum\n-   #56 = Methodref          #8.#277       // org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n-   #57 = Long               255l\n-   #59 = Methodref          #8.#278       // org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n-   #60 = String             #279          // Frame header checksum mismatch\n-   #61 = Methodref          #41.#280      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.maybeFinishCurrentBlock:()V\n-   #62 = Methodref          #281.#282     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-   #63 = Long               -2147483648l\n-   #65 = Long               2147483647l\n-   #67 = String             #283          // Found illegal block with negative size\n-   #68 = Methodref          #41.#284      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyContentChecksum:()V\n-   #69 = Class              #285          // org/apache/commons/compress/utils/BoundedInputStream\n-   #70 = Methodref          #69.#286      // org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n-   #71 = Class              #287          // org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n-   #72 = Methodref          #71.#288      // org/apache/commons/compress/utils/ChecksumCalculatingInputStream.\"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n-   #73 = Fieldref           #41.#289      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inUncompressed:Z\n-   #74 = Methodref          #49.#235      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #75 = Methodref          #49.#290      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V\n-   #76 = String             #291          // block\n-   #77 = Methodref          #41.#292      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n-   #78 = String             #293          // content\n-   #79 = String             #294          // Premature end of stream while reading\n-   #80 = String             #295          //  checksum\n-   #81 = Methodref          #281.#296     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n-   #82 = String             #297          //  checksum mismatch.\n-   #83 = Methodref          #12.#298      // org/apache/commons/compress/utils/CountingInputStream.read:()I\n-   #84 = Methodref          #241.#239     // java/io/InputStream.read:([BII)I\n-   #85 = Methodref          #49.#250      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n-   #86 = Methodref          #41.#299      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(J)V\n-   #87 = Fieldref           #41.#300      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.SKIPPABLE_FRAME_TRAILER:[B\n-   #88 = Methodref          #41.#301      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.isSkippableFrameSignature:([B)Z\n-   #89 = String             #302          // Found illegal skippable frame with negative size\n-   #90 = Methodref          #255.#303     // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n-   #91 = String             #304          // Premature end of stream while skipping frame\n-   #92 = Methodref          #305.#306     // java/lang/Math.min:(II)I\n-   #93 = Methodref          #307.#308     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #94 = Fieldref           #41.#309      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.LZ4_SIGNATURE:[B\n-   #95 = Methodref          #310.#311     // java/util/Arrays.equals:([B[B)Z\n-   #96 = Class              #312          // org/apache/commons/compress/compressors/CompressorInputStream\n-   #97 = Class              #313          // org/apache/commons/compress/utils/InputStreamStatistics\n-   #98 = Utf8               InnerClasses\n-   #99 = Utf8               LZ4_SIGNATURE\n-  #100 = Utf8               [B\n-  #101 = Utf8               SKIPPABLE_FRAME_TRAILER\n-  #102 = Utf8               SKIPPABLE_FRAME_PREFIX_BYTE_MASK\n-  #103 = Utf8               B\n-  #104 = Utf8               ConstantValue\n-  #105 = Integer            80\n-  #106 = Utf8               VERSION_MASK\n-  #107 = Utf8               I\n-  #108 = Integer            192\n-  #109 = Utf8               SUPPORTED_VERSION\n-  #110 = Integer            64\n-  #111 = Utf8               BLOCK_INDEPENDENCE_MASK\n-  #112 = Integer            32\n-  #113 = Utf8               BLOCK_CHECKSUM_MASK\n-  #114 = Integer            16\n-  #115 = Utf8               CONTENT_SIZE_MASK\n-  #116 = Integer            8\n-  #117 = Utf8               CONTENT_CHECKSUM_MASK\n-  #118 = Integer            4\n-  #119 = Utf8               BLOCK_MAX_SIZE_MASK\n-  #120 = Integer            112\n-  #121 = Utf8               UNCOMPRESSED_FLAG_MASK\n-  #122 = Integer            -2147483648\n-  #123 = Utf8               oneByte\n-  #124 = Utf8               supplier\n-  #125 = Class              #314          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-  #126 = Utf8               ByteSupplier\n-  #127 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #128 = Utf8               inputStream\n-  #129 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n-  #130 = Utf8               decompressConcatenated\n-  #131 = Utf8               Z\n-  #132 = Utf8               expectBlockChecksum\n-  #133 = Utf8               expectBlockDependency\n-  #134 = Utf8               expectContentSize\n-  #135 = Utf8               expectContentChecksum\n-  #136 = Utf8               currentBlock\n-  #137 = Utf8               Ljava/io/InputStream;\n-  #138 = Utf8               endReached\n-  #139 = Utf8               inUncompressed\n-  #140 = Utf8               contentHash\n-  #141 = Utf8               Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-  #142 = Utf8               blockHash\n-  #143 = Utf8               blockDependencyBuffer\n-  #144 = Utf8               <init>\n-  #145 = Utf8               (Ljava/io/InputStream;)V\n-  #146 = Utf8               Code\n-  #147 = Utf8               LineNumberTable\n-  #148 = Utf8               LocalVariableTable\n-  #149 = Utf8               this\n-  #150 = Utf8               Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;\n-  #151 = Utf8               in\n-  #152 = Utf8               Exceptions\n-  #153 = Utf8               (Ljava/io/InputStream;Z)V\n-  #154 = Utf8               read\n-  #155 = Utf8               ()I\n-  #156 = Utf8               StackMapTable\n-  #157 = Utf8               close\n-  #158 = Utf8               ()V\n-  #159 = Class              #315          // java/lang/Throwable\n-  #160 = Utf8               ([BII)I\n-  #161 = Utf8               b\n-  #162 = Utf8               off\n-  #163 = Utf8               len\n-  #164 = Utf8               r\n-  #165 = Utf8               getCompressedCount\n-  #166 = Utf8               ()J\n-  #167 = Utf8               init\n-  #168 = Utf8               (Z)V\n-  #169 = Utf8               firstFrame\n-  #170 = Utf8               readSignature\n-  #171 = Utf8               (Z)Z\n-  #172 = Utf8               garbageMessage\n-  #173 = Utf8               Ljava/lang/String;\n-  #174 = Class              #316          // java/lang/String\n-  #175 = Class              #100          // \"[B\"\n-  #176 = Utf8               readFrameDescriptor\n-  #177 = Utf8               contentSize\n-  #178 = Utf8               skipped\n-  #179 = Utf8               flags\n-  #180 = Utf8               bdByte\n-  #181 = Utf8               headerHash\n-  #182 = Utf8               expectedHash\n-  #183 = Class              #264          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-  #184 = Utf8               nextBlock\n-  #185 = Utf8               s\n-  #186 = Utf8               Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream;\n-  #187 = Utf8               J\n-  #188 = Utf8               uncompressed\n-  #189 = Utf8               realLen\n-  #190 = Utf8               capped\n-  #191 = Class              #317          // java/io/InputStream\n-  #192 = Class              #271          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-  #193 = Utf8               maybeFinishCurrentBlock\n-  #194 = Utf8               verifyContentChecksum\n-  #195 = Utf8               verifyChecksum\n-  #196 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n-  #197 = Utf8               hash\n-  #198 = Utf8               kind\n-  #199 = Utf8               checksum\n-  #200 = Utf8               readOneByte\n-  #201 = Utf8               readOnce\n-  #202 = Utf8               cnt\n-  #203 = Utf8               l\n-  #204 = Utf8               before\n-  #205 = Utf8               isSkippableFrameSignature\n-  #206 = Utf8               ([B)Z\n-  #207 = Utf8               i\n-  #208 = Utf8               skipSkippableFrame\n-  #209 = Utf8               ([B)I\n-  #210 = Utf8               appendToBlockDependencyBuffer\n-  #211 = Utf8               ([BII)V\n-  #212 = Utf8               keep\n-  #213 = Utf8               matches\n-  #214 = Utf8               ([BI)Z\n-  #215 = Utf8               signature\n-  #216 = Utf8               length\n-  #217 = Utf8               shortenedSig\n-  #218 = Utf8               access$000\n-  #219 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)I\n-  #220 = Utf8               x0\n-  #221 = Utf8               <clinit>\n-  #222 = Utf8               SourceFile\n-  #223 = Utf8               FramedLZ4CompressorInputStream.java\n-  #224 = NameAndType        #200:#155     // readOneByte:()I\n-  #225 = NameAndType        #144:#153     // \"<init>\":(Ljava/io/InputStream;Z)V\n-  #226 = NameAndType        #144:#158     // \"<init>\":()V\n-  #227 = NameAndType        #123:#100     // oneByte:[B\n-  #228 = Utf8               org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream$1\n-  #229 = NameAndType        #144:#318     // \"<init>\":(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)V\n-  #230 = NameAndType        #124:#127     // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #231 = Utf8               org/apache/commons/compress/compressors/lz4/XXHash32\n-  #232 = NameAndType        #140:#141     // contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-  #233 = NameAndType        #142:#141     // blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-  #234 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n-  #235 = NameAndType        #144:#145     // \"<init>\":(Ljava/io/InputStream;)V\n-  #236 = NameAndType        #128:#129     // inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-  #237 = NameAndType        #130:#131     // decompressConcatenated:Z\n-  #238 = NameAndType        #167:#168     // init:(Z)V\n-  #239 = NameAndType        #154:#160     // read:([BII)I\n-  #240 = NameAndType        #136:#137     // currentBlock:Ljava/io/InputStream;\n-  #241 = Class              #317          // java/io/InputStream\n-  #242 = NameAndType        #157:#158     // close:()V\n-  #243 = NameAndType        #138:#131     // endReached:Z\n-  #244 = NameAndType        #201:#160     // readOnce:([BII)I\n-  #245 = NameAndType        #184:#158     // nextBlock:()V\n-  #246 = NameAndType        #133:#131     // expectBlockDependency:Z\n-  #247 = NameAndType        #210:#211     // appendToBlockDependencyBuffer:([BII)V\n-  #248 = NameAndType        #135:#131     // expectContentChecksum:Z\n-  #249 = NameAndType        #319:#211     // update:([BII)V\n-  #250 = NameAndType        #320:#166     // getBytesRead:()J\n-  #251 = NameAndType        #170:#171     // readSignature:(Z)Z\n-  #252 = NameAndType        #176:#158     // readFrameDescriptor:()V\n-  #253 = Utf8               Not a LZ4 frame stream\n-  #254 = Utf8               LZ4 frame stream followed by garbage\n-  #255 = Class              #321          // org/apache/commons/compress/utils/IOUtils\n-  #256 = NameAndType        #322:#323     // readFully:(Ljava/io/InputStream;[B)I\n-  #257 = NameAndType        #324:#325     // count:(I)V\n-  #258 = Utf8               java/io/IOException\n-  #259 = NameAndType        #144:#326     // \"<init>\":(Ljava/lang/String;)V\n-  #260 = NameAndType        #208:#209     // skipSkippableFrame:([B)I\n-  #261 = NameAndType        #213:#214     // matches:([BI)Z\n-  #262 = Utf8               Premature end of stream while reading frame flags\n-  #263 = NameAndType        #319:#325     // update:(I)V\n-  #264 = Utf8               org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-  #265 = Utf8               java/lang/StringBuilder\n-  #266 = Utf8               Unsupported version\n-  #267 = NameAndType        #327:#328     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #268 = NameAndType        #327:#329     // append:(I)Ljava/lang/StringBuilder;\n-  #269 = NameAndType        #330:#331     // toString:()Ljava/lang/String;\n-  #270 = NameAndType        #143:#100     // blockDependencyBuffer:[B\n-  #271 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-  #272 = NameAndType        #132:#131     // expectBlockChecksum:Z\n-  #273 = NameAndType        #134:#131     // expectContentSize:Z\n-  #274 = Utf8               Premature end of stream while reading frame BD byte\n-  #275 = Utf8               Premature end of stream while reading content size\n-  #276 = Utf8               Premature end of stream while reading frame header checksum\n-  #277 = NameAndType        #332:#166     // getValue:()J\n-  #278 = NameAndType        #333:#158     // reset:()V\n-  #279 = Utf8               Frame header checksum mismatch\n-  #280 = NameAndType        #193:#158     // maybeFinishCurrentBlock:()V\n-  #281 = Class              #334          // org/apache/commons/compress/utils/ByteUtils\n-  #282 = NameAndType        #335:#336     // fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-  #283 = Utf8               Found illegal block with negative size\n-  #284 = NameAndType        #194:#158     // verifyContentChecksum:()V\n-  #285 = Utf8               org/apache/commons/compress/utils/BoundedInputStream\n-  #286 = NameAndType        #144:#337     // \"<init>\":(Ljava/io/InputStream;J)V\n-  #287 = Utf8               org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n-  #288 = NameAndType        #144:#338     // \"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n-  #289 = NameAndType        #139:#131     // inUncompressed:Z\n-  #290 = NameAndType        #339:#340     // prefill:([B)V\n-  #291 = Utf8               block\n-  #292 = NameAndType        #195:#196     // verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n-  #293 = Utf8               content\n-  #294 = Utf8               Premature end of stream while reading\n-  #295 = Utf8                checksum\n-  #296 = NameAndType        #335:#341     // fromLittleEndian:([B)J\n-  #297 = Utf8                checksum mismatch.\n-  #298 = NameAndType        #154:#155     // read:()I\n-  #299 = NameAndType        #324:#342     // count:(J)V\n-  #300 = NameAndType        #101:#100     // SKIPPABLE_FRAME_TRAILER:[B\n-  #301 = NameAndType        #205:#206     // isSkippableFrameSignature:([B)Z\n-  #302 = Utf8               Found illegal skippable frame with negative size\n-  #303 = NameAndType        #343:#344     // skip:(Ljava/io/InputStream;J)J\n-  #304 = Utf8               Premature end of stream while skipping frame\n-  #305 = Class              #345          // java/lang/Math\n-  #306 = NameAndType        #346:#347     // min:(II)I\n-  #307 = Class              #348          // java/lang/System\n-  #308 = NameAndType        #349:#350     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #309 = NameAndType        #99:#100      // LZ4_SIGNATURE:[B\n-  #310 = Class              #351          // java/util/Arrays\n-  #311 = NameAndType        #352:#353     // equals:([B[B)Z\n-  #312 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n-  #313 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n-  #314 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-  #315 = Utf8               java/lang/Throwable\n-  #316 = Utf8               java/lang/String\n-  #317 = Utf8               java/io/InputStream\n-  #318 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)V\n-  #319 = Utf8               update\n-  #320 = Utf8               getBytesRead\n-  #321 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #322 = Utf8               readFully\n-  #323 = Utf8               (Ljava/io/InputStream;[B)I\n-  #324 = Utf8               count\n-  #325 = Utf8               (I)V\n-  #326 = Utf8               (Ljava/lang/String;)V\n-  #327 = Utf8               append\n-  #328 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #329 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #330 = Utf8               toString\n-  #331 = Utf8               ()Ljava/lang/String;\n-  #332 = Utf8               getValue\n-  #333 = Utf8               reset\n-  #334 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #335 = Utf8               fromLittleEndian\n-  #336 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-  #337 = Utf8               (Ljava/io/InputStream;J)V\n-  #338 = Utf8               (Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n-  #339 = Utf8               prefill\n-  #340 = Utf8               ([B)V\n-  #341 = Utf8               ([B)J\n-  #342 = Utf8               (J)V\n-  #343 = Utf8               skip\n-  #344 = Utf8               (Ljava/io/InputStream;J)J\n-  #345 = Utf8               java/lang/Math\n-  #346 = Utf8               min\n-  #347 = Utf8               (II)I\n-  #348 = Utf8               java/lang/System\n-  #349 = Utf8               arraycopy\n-  #350 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #351 = Utf8               java/util/Arrays\n-  #352 = Utf8               equals\n-  #353 = Utf8               ([B[B)Z\n+    #1 = Methodref          #41.#216      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n+    #2 = Methodref          #41.#217      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n+    #3 = Methodref          #90.#218      // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+    #4 = Fieldref           #41.#219      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.oneByte:[B\n+    #5 = Class              #220          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream$1\n+    #6 = Methodref          #5.#221       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream$1.\"<init>\":(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)V\n+    #7 = Fieldref           #41.#222      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+    #8 = Class              #223          // org/apache/commons/compress/compressors/lz4/XXHash32\n+    #9 = Methodref          #8.#218       // org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n+   #10 = Fieldref           #41.#224      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+   #11 = Fieldref           #41.#225      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+   #12 = Class              #226          // org/apache/commons/compress/utils/CountingInputStream\n+   #13 = Methodref          #12.#227      // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #14 = Fieldref           #41.#228      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #15 = Fieldref           #41.#229      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.decompressConcatenated:Z\n+   #16 = Methodref          #41.#230      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.init:(Z)V\n+   #17 = Methodref          #41.#231      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.read:([BII)I\n+   #18 = Fieldref           #41.#232      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.currentBlock:Ljava/io/InputStream;\n+   #19 = Methodref          #184.#233     // java/io/InputStream.close:()V\n+   #20 = Methodref          #12.#233      // org/apache/commons/compress/utils/CountingInputStream.close:()V\n+   #21 = Fieldref           #41.#234      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.endReached:Z\n+   #22 = Methodref          #41.#235      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOnce:([BII)I\n+   #23 = Methodref          #41.#236      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.nextBlock:()V\n+   #24 = Fieldref           #41.#237      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockDependency:Z\n+   #25 = Methodref          #41.#238      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.appendToBlockDependencyBuffer:([BII)V\n+   #26 = Fieldref           #41.#239      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentChecksum:Z\n+   #27 = Methodref          #8.#240       // org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n+   #28 = Methodref          #12.#241      // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+   #29 = Methodref          #41.#242      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readSignature:(Z)Z\n+   #30 = Methodref          #41.#243      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readFrameDescriptor:()V\n+   #31 = String             #244          // Not a LZ4 frame stream\n+   #32 = String             #245          // LZ4 frame stream followed by garbage\n+   #33 = Methodref          #246.#247     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+   #34 = Methodref          #41.#248      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(I)V\n+   #35 = Class              #249          // java/io/IOException\n+   #36 = Methodref          #35.#250      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #37 = Methodref          #41.#251      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.skipSkippableFrame:([B)I\n+   #38 = Methodref          #41.#252      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.matches:([BI)Z\n+   #39 = String             #253          // Premature end of stream while reading frame flags\n+   #40 = Methodref          #8.#254       // org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n+   #41 = Class              #255          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n+   #42 = InvokeDynamic      #0:#259       // #0:makeConcatWithConstants:(I)Ljava/lang/String;\n+   #43 = Fieldref           #41.#260      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockDependencyBuffer:[B\n+   #44 = Class              #261          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+   #45 = Integer            65536\n+   #46 = Fieldref           #41.#262      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockChecksum:Z\n+   #47 = Fieldref           #41.#263      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentSize:Z\n+   #48 = String             #264          // Premature end of stream while reading frame BD byte\n+   #49 = String             #265          // Premature end of stream while reading content size\n+   #50 = String             #266          // Premature end of stream while reading frame header checksum\n+   #51 = Methodref          #8.#267       // org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n+   #52 = Long               255l\n+   #54 = Methodref          #8.#268       // org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n+   #55 = String             #269          // Frame header checksum mismatch\n+   #56 = Methodref          #41.#270      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.maybeFinishCurrentBlock:()V\n+   #57 = Methodref          #271.#272     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+   #58 = Long               -2147483648l\n+   #60 = Long               2147483647l\n+   #62 = String             #273          // Found illegal block with negative size\n+   #63 = Methodref          #41.#274      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyContentChecksum:()V\n+   #64 = Class              #275          // org/apache/commons/compress/utils/BoundedInputStream\n+   #65 = Methodref          #64.#276      // org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n+   #66 = Class              #277          // org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n+   #67 = Methodref          #66.#278      // org/apache/commons/compress/utils/ChecksumCalculatingInputStream.\"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+   #68 = Fieldref           #41.#279      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inUncompressed:Z\n+   #69 = Methodref          #44.#227      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #70 = Methodref          #44.#280      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V\n+   #71 = String             #281          // block\n+   #72 = Methodref          #41.#282      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+   #73 = String             #283          // content\n+   #74 = InvokeDynamic      #1:#285       // #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+   #75 = Methodref          #271.#286     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n+   #76 = InvokeDynamic      #2:#285       // #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+   #77 = Methodref          #12.#288      // org/apache/commons/compress/utils/CountingInputStream.read:()I\n+   #78 = Methodref          #184.#231     // java/io/InputStream.read:([BII)I\n+   #79 = Methodref          #44.#241      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n+   #80 = Methodref          #41.#289      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(J)V\n+   #81 = Fieldref           #41.#290      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.SKIPPABLE_FRAME_TRAILER:[B\n+   #82 = Methodref          #41.#291      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.isSkippableFrameSignature:([B)Z\n+   #83 = String             #292          // Found illegal skippable frame with negative size\n+   #84 = Methodref          #246.#293     // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+   #85 = String             #294          // Premature end of stream while skipping frame\n+   #86 = Methodref          #295.#296     // java/lang/Math.min:(II)I\n+   #87 = Methodref          #297.#298     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #88 = Fieldref           #41.#299      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.LZ4_SIGNATURE:[B\n+   #89 = Methodref          #300.#301     // java/util/Arrays.equals:([B[B)Z\n+   #90 = Class              #302          // org/apache/commons/compress/compressors/CompressorInputStream\n+   #91 = Class              #303          // org/apache/commons/compress/utils/InputStreamStatistics\n+   #92 = Utf8               InnerClasses\n+   #93 = Utf8               LZ4_SIGNATURE\n+   #94 = Utf8               [B\n+   #95 = Utf8               SKIPPABLE_FRAME_TRAILER\n+   #96 = Utf8               SKIPPABLE_FRAME_PREFIX_BYTE_MASK\n+   #97 = Utf8               B\n+   #98 = Utf8               ConstantValue\n+   #99 = Integer            80\n+  #100 = Utf8               VERSION_MASK\n+  #101 = Utf8               I\n+  #102 = Integer            192\n+  #103 = Utf8               SUPPORTED_VERSION\n+  #104 = Integer            64\n+  #105 = Utf8               BLOCK_INDEPENDENCE_MASK\n+  #106 = Integer            32\n+  #107 = Utf8               BLOCK_CHECKSUM_MASK\n+  #108 = Integer            16\n+  #109 = Utf8               CONTENT_SIZE_MASK\n+  #110 = Integer            8\n+  #111 = Utf8               CONTENT_CHECKSUM_MASK\n+  #112 = Integer            4\n+  #113 = Utf8               BLOCK_MAX_SIZE_MASK\n+  #114 = Integer            112\n+  #115 = Utf8               UNCOMPRESSED_FLAG_MASK\n+  #116 = Integer            -2147483648\n+  #117 = Utf8               oneByte\n+  #118 = Utf8               supplier\n+  #119 = Class              #304          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #120 = Utf8               ByteSupplier\n+  #121 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+  #122 = Utf8               inputStream\n+  #123 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n+  #124 = Utf8               decompressConcatenated\n+  #125 = Utf8               Z\n+  #126 = Utf8               expectBlockChecksum\n+  #127 = Utf8               expectBlockDependency\n+  #128 = Utf8               expectContentSize\n+  #129 = Utf8               expectContentChecksum\n+  #130 = Utf8               currentBlock\n+  #131 = Utf8               Ljava/io/InputStream;\n+  #132 = Utf8               endReached\n+  #133 = Utf8               inUncompressed\n+  #134 = Utf8               contentHash\n+  #135 = Utf8               Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+  #136 = Utf8               blockHash\n+  #137 = Utf8               blockDependencyBuffer\n+  #138 = Utf8               <init>\n+  #139 = Utf8               (Ljava/io/InputStream;)V\n+  #140 = Utf8               Code\n+  #141 = Utf8               LineNumberTable\n+  #142 = Utf8               LocalVariableTable\n+  #143 = Utf8               this\n+  #144 = Utf8               Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;\n+  #145 = Utf8               in\n+  #146 = Utf8               Exceptions\n+  #147 = Utf8               (Ljava/io/InputStream;Z)V\n+  #148 = Utf8               read\n+  #149 = Utf8               ()I\n+  #150 = Utf8               StackMapTable\n+  #151 = Utf8               close\n+  #152 = Utf8               ()V\n+  #153 = Class              #305          // java/lang/Throwable\n+  #154 = Utf8               ([BII)I\n+  #155 = Utf8               b\n+  #156 = Utf8               off\n+  #157 = Utf8               len\n+  #158 = Utf8               r\n+  #159 = Utf8               getCompressedCount\n+  #160 = Utf8               ()J\n+  #161 = Utf8               init\n+  #162 = Utf8               (Z)V\n+  #163 = Utf8               firstFrame\n+  #164 = Utf8               readSignature\n+  #165 = Utf8               (Z)Z\n+  #166 = Utf8               garbageMessage\n+  #167 = Utf8               Ljava/lang/String;\n+  #168 = Class              #306          // java/lang/String\n+  #169 = Class              #94           // \"[B\"\n+  #170 = Utf8               readFrameDescriptor\n+  #171 = Utf8               contentSize\n+  #172 = Utf8               skipped\n+  #173 = Utf8               flags\n+  #174 = Utf8               bdByte\n+  #175 = Utf8               headerHash\n+  #176 = Utf8               expectedHash\n+  #177 = Utf8               nextBlock\n+  #178 = Utf8               s\n+  #179 = Utf8               Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream;\n+  #180 = Utf8               J\n+  #181 = Utf8               uncompressed\n+  #182 = Utf8               realLen\n+  #183 = Utf8               capped\n+  #184 = Class              #307          // java/io/InputStream\n+  #185 = Utf8               maybeFinishCurrentBlock\n+  #186 = Utf8               verifyContentChecksum\n+  #187 = Utf8               verifyChecksum\n+  #188 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+  #189 = Utf8               hash\n+  #190 = Utf8               kind\n+  #191 = Utf8               checksum\n+  #192 = Utf8               readOneByte\n+  #193 = Utf8               readOnce\n+  #194 = Utf8               cnt\n+  #195 = Utf8               l\n+  #196 = Utf8               before\n+  #197 = Utf8               isSkippableFrameSignature\n+  #198 = Utf8               ([B)Z\n+  #199 = Utf8               i\n+  #200 = Utf8               skipSkippableFrame\n+  #201 = Utf8               ([B)I\n+  #202 = Utf8               appendToBlockDependencyBuffer\n+  #203 = Utf8               ([BII)V\n+  #204 = Utf8               keep\n+  #205 = Utf8               matches\n+  #206 = Utf8               ([BI)Z\n+  #207 = Utf8               signature\n+  #208 = Utf8               length\n+  #209 = Utf8               shortenedSig\n+  #210 = Utf8               access$000\n+  #211 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)I\n+  #212 = Utf8               x0\n+  #213 = Utf8               <clinit>\n+  #214 = Utf8               SourceFile\n+  #215 = Utf8               FramedLZ4CompressorInputStream.java\n+  #216 = NameAndType        #192:#149     // readOneByte:()I\n+  #217 = NameAndType        #138:#147     // \"<init>\":(Ljava/io/InputStream;Z)V\n+  #218 = NameAndType        #138:#152     // \"<init>\":()V\n+  #219 = NameAndType        #117:#94      // oneByte:[B\n+  #220 = Utf8               org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream$1\n+  #221 = NameAndType        #138:#308     // \"<init>\":(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)V\n+  #222 = NameAndType        #118:#121     // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+  #223 = Utf8               org/apache/commons/compress/compressors/lz4/XXHash32\n+  #224 = NameAndType        #134:#135     // contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+  #225 = NameAndType        #136:#135     // blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+  #226 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n+  #227 = NameAndType        #138:#139     // \"<init>\":(Ljava/io/InputStream;)V\n+  #228 = NameAndType        #122:#123     // inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+  #229 = NameAndType        #124:#125     // decompressConcatenated:Z\n+  #230 = NameAndType        #161:#162     // init:(Z)V\n+  #231 = NameAndType        #148:#154     // read:([BII)I\n+  #232 = NameAndType        #130:#131     // currentBlock:Ljava/io/InputStream;\n+  #233 = NameAndType        #151:#152     // close:()V\n+  #234 = NameAndType        #132:#125     // endReached:Z\n+  #235 = NameAndType        #193:#154     // readOnce:([BII)I\n+  #236 = NameAndType        #177:#152     // nextBlock:()V\n+  #237 = NameAndType        #127:#125     // expectBlockDependency:Z\n+  #238 = NameAndType        #202:#203     // appendToBlockDependencyBuffer:([BII)V\n+  #239 = NameAndType        #129:#125     // expectContentChecksum:Z\n+  #240 = NameAndType        #309:#203     // update:([BII)V\n+  #241 = NameAndType        #310:#160     // getBytesRead:()J\n+  #242 = NameAndType        #164:#165     // readSignature:(Z)Z\n+  #243 = NameAndType        #170:#152     // readFrameDescriptor:()V\n+  #244 = Utf8               Not a LZ4 frame stream\n+  #245 = Utf8               LZ4 frame stream followed by garbage\n+  #246 = Class              #311          // org/apache/commons/compress/utils/IOUtils\n+  #247 = NameAndType        #312:#313     // readFully:(Ljava/io/InputStream;[B)I\n+  #248 = NameAndType        #314:#315     // count:(I)V\n+  #249 = Utf8               java/io/IOException\n+  #250 = NameAndType        #138:#316     // \"<init>\":(Ljava/lang/String;)V\n+  #251 = NameAndType        #200:#201     // skipSkippableFrame:([B)I\n+  #252 = NameAndType        #205:#206     // matches:([BI)Z\n+  #253 = Utf8               Premature end of stream while reading frame flags\n+  #254 = NameAndType        #309:#315     // update:(I)V\n+  #255 = Utf8               org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n+  #256 = Utf8               BootstrapMethods\n+  #257 = MethodHandle       6:#317        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #258 = String             #318          // Unsupported version \\u0001\n+  #259 = NameAndType        #319:#320     // makeConcatWithConstants:(I)Ljava/lang/String;\n+  #260 = NameAndType        #137:#94      // blockDependencyBuffer:[B\n+  #261 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+  #262 = NameAndType        #126:#125     // expectBlockChecksum:Z\n+  #263 = NameAndType        #128:#125     // expectContentSize:Z\n+  #264 = Utf8               Premature end of stream while reading frame BD byte\n+  #265 = Utf8               Premature end of stream while reading content size\n+  #266 = Utf8               Premature end of stream while reading frame header checksum\n+  #267 = NameAndType        #321:#160     // getValue:()J\n+  #268 = NameAndType        #322:#152     // reset:()V\n+  #269 = Utf8               Frame header checksum mismatch\n+  #270 = NameAndType        #185:#152     // maybeFinishCurrentBlock:()V\n+  #271 = Class              #323          // org/apache/commons/compress/utils/ByteUtils\n+  #272 = NameAndType        #324:#325     // fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #273 = Utf8               Found illegal block with negative size\n+  #274 = NameAndType        #186:#152     // verifyContentChecksum:()V\n+  #275 = Utf8               org/apache/commons/compress/utils/BoundedInputStream\n+  #276 = NameAndType        #138:#326     // \"<init>\":(Ljava/io/InputStream;J)V\n+  #277 = Utf8               org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n+  #278 = NameAndType        #138:#327     // \"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+  #279 = NameAndType        #133:#125     // inUncompressed:Z\n+  #280 = NameAndType        #328:#329     // prefill:([B)V\n+  #281 = Utf8               block\n+  #282 = NameAndType        #187:#188     // verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+  #283 = Utf8               content\n+  #284 = String             #330          // Premature end of stream while reading \\u0001 checksum\n+  #285 = NameAndType        #319:#331     // makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+  #286 = NameAndType        #324:#332     // fromLittleEndian:([B)J\n+  #287 = String             #333          // \\u0001 checksum mismatch.\n+  #288 = NameAndType        #148:#149     // read:()I\n+  #289 = NameAndType        #314:#334     // count:(J)V\n+  #290 = NameAndType        #95:#94       // SKIPPABLE_FRAME_TRAILER:[B\n+  #291 = NameAndType        #197:#198     // isSkippableFrameSignature:([B)Z\n+  #292 = Utf8               Found illegal skippable frame with negative size\n+  #293 = NameAndType        #335:#336     // skip:(Ljava/io/InputStream;J)J\n+  #294 = Utf8               Premature end of stream while skipping frame\n+  #295 = Class              #337          // java/lang/Math\n+  #296 = NameAndType        #338:#339     // min:(II)I\n+  #297 = Class              #340          // java/lang/System\n+  #298 = NameAndType        #341:#342     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #299 = NameAndType        #93:#94       // LZ4_SIGNATURE:[B\n+  #300 = Class              #343          // java/util/Arrays\n+  #301 = NameAndType        #344:#345     // equals:([B[B)Z\n+  #302 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n+  #303 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n+  #304 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #305 = Utf8               java/lang/Throwable\n+  #306 = Utf8               java/lang/String\n+  #307 = Utf8               java/io/InputStream\n+  #308 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)V\n+  #309 = Utf8               update\n+  #310 = Utf8               getBytesRead\n+  #311 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #312 = Utf8               readFully\n+  #313 = Utf8               (Ljava/io/InputStream;[B)I\n+  #314 = Utf8               count\n+  #315 = Utf8               (I)V\n+  #316 = Utf8               (Ljava/lang/String;)V\n+  #317 = Methodref          #346.#347     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #318 = Utf8               Unsupported version \\u0001\n+  #319 = Utf8               makeConcatWithConstants\n+  #320 = Utf8               (I)Ljava/lang/String;\n+  #321 = Utf8               getValue\n+  #322 = Utf8               reset\n+  #323 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #324 = Utf8               fromLittleEndian\n+  #325 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #326 = Utf8               (Ljava/io/InputStream;J)V\n+  #327 = Utf8               (Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+  #328 = Utf8               prefill\n+  #329 = Utf8               ([B)V\n+  #330 = Utf8               Premature end of stream while reading \\u0001 checksum\n+  #331 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #332 = Utf8               ([B)J\n+  #333 = Utf8               \\u0001 checksum mismatch.\n+  #334 = Utf8               (J)V\n+  #335 = Utf8               skip\n+  #336 = Utf8               (Ljava/io/InputStream;J)J\n+  #337 = Utf8               java/lang/Math\n+  #338 = Utf8               min\n+  #339 = Utf8               (II)I\n+  #340 = Utf8               java/lang/System\n+  #341 = Utf8               arraycopy\n+  #342 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #343 = Utf8               java/util/Arrays\n+  #344 = Utf8               equals\n+  #345 = Utf8               ([B[B)Z\n+  #346 = Class              #348          // java/lang/invoke/StringConcatFactory\n+  #347 = NameAndType        #319:#351     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #348 = Utf8               java/lang/invoke/StringConcatFactory\n+  #349 = Class              #353          // java/lang/invoke/MethodHandles$Lookup\n+  #350 = Utf8               Lookup\n+  #351 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #352 = Class              #354          // java/lang/invoke/MethodHandles\n+  #353 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #354 = Utf8               java/lang/invoke/MethodHandles\n {\n   static final byte[] LZ4_SIGNATURE;\n     descriptor: [B\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n \n   private static final byte[] SKIPPABLE_FRAME_TRAILER;\n     descriptor: [B\n@@ -867,15 +868,15 @@\n     Exceptions:\n       throws java.io.IOException\n \n   private void readFrameDescriptor() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n-      stack=5, locals=5, args_size=1\n+      stack=4, locals=5, args_size=1\n          0: aload_0\n          1: invokespecial #1                  // Method readOneByte:()I\n          4: istore_1\n          5: iload_1\n          6: iconst_m1\n          7: if_icmpne     20\n         10: new           #35                 // class java/io/IOException\n@@ -887,203 +888,197 @@\n         21: getfield      #10                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n         24: iload_1\n         25: invokevirtual #40                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n         28: iload_1\n         29: sipush        192\n         32: iand\n         33: bipush        64\n-        35: if_icmpeq     68\n+        35: if_icmpeq     55\n         38: new           #35                 // class java/io/IOException\n         41: dup\n-        42: new           #42                 // class java/lang/StringBuilder\n-        45: dup\n-        46: invokespecial #43                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        49: ldc           #44                 // String Unsupported version\n-        51: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        54: iload_1\n-        55: bipush        6\n-        57: ishr\n-        58: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        61: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        64: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-        67: athrow\n-        68: aload_0\n-        69: iload_1\n-        70: bipush        32\n-        72: iand\n-        73: ifne          80\n-        76: iconst_1\n-        77: goto          81\n-        80: iconst_0\n-        81: putfield      #24                 // Field expectBlockDependency:Z\n-        84: aload_0\n-        85: getfield      #24                 // Field expectBlockDependency:Z\n-        88: ifeq          109\n-        91: aload_0\n-        92: getfield      #48                 // Field blockDependencyBuffer:[B\n-        95: ifnonnull     114\n-        98: aload_0\n-        99: ldc           #50                 // int 65536\n-       101: newarray       byte\n-       103: putfield      #48                 // Field blockDependencyBuffer:[B\n-       106: goto          114\n-       109: aload_0\n-       110: aconst_null\n-       111: putfield      #48                 // Field blockDependencyBuffer:[B\n-       114: aload_0\n-       115: iload_1\n-       116: bipush        16\n-       118: iand\n-       119: ifeq          126\n-       122: iconst_1\n-       123: goto          127\n-       126: iconst_0\n-       127: putfield      #51                 // Field expectBlockChecksum:Z\n-       130: aload_0\n-       131: iload_1\n-       132: bipush        8\n-       134: iand\n-       135: ifeq          142\n-       138: iconst_1\n-       139: goto          143\n-       142: iconst_0\n-       143: putfield      #52                 // Field expectContentSize:Z\n-       146: aload_0\n-       147: iload_1\n-       148: iconst_4\n-       149: iand\n-       150: ifeq          157\n-       153: iconst_1\n-       154: goto          158\n-       157: iconst_0\n-       158: putfield      #26                 // Field expectContentChecksum:Z\n-       161: aload_0\n-       162: invokespecial #1                  // Method readOneByte:()I\n-       165: istore_2\n-       166: iload_2\n-       167: iconst_m1\n-       168: if_icmpne     181\n-       171: new           #35                 // class java/io/IOException\n-       174: dup\n-       175: ldc           #53                 // String Premature end of stream while reading frame BD byte\n-       177: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       180: athrow\n-       181: aload_0\n-       182: getfield      #10                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-       185: iload_2\n-       186: invokevirtual #40                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n-       189: aload_0\n-       190: getfield      #52                 // Field expectContentSize:Z\n-       193: ifeq          245\n-       196: bipush        8\n-       198: newarray       byte\n-       200: astore_3\n-       201: aload_0\n-       202: getfield      #14                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-       205: aload_3\n-       206: invokestatic  #33                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n-       209: istore        4\n-       211: aload_0\n-       212: iload         4\n-       214: invokevirtual #34                 // Method count:(I)V\n-       217: bipush        8\n-       219: iload         4\n-       221: if_icmpeq     234\n-       224: new           #35                 // class java/io/IOException\n-       227: dup\n-       228: ldc           #54                 // String Premature end of stream while reading content size\n-       230: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       233: athrow\n-       234: aload_0\n-       235: getfield      #10                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-       238: aload_3\n-       239: iconst_0\n-       240: aload_3\n-       241: arraylength\n-       242: invokevirtual #27                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n-       245: aload_0\n-       246: invokespecial #1                  // Method readOneByte:()I\n-       249: istore_3\n-       250: iload_3\n-       251: iconst_m1\n-       252: if_icmpne     265\n-       255: new           #35                 // class java/io/IOException\n-       258: dup\n-       259: ldc           #55                 // String Premature end of stream while reading frame header checksum\n-       261: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       264: athrow\n-       265: aload_0\n-       266: getfield      #10                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-       269: invokevirtual #56                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n-       272: bipush        8\n-       274: lshr\n-       275: ldc2_w        #57                 // long 255l\n-       278: land\n-       279: l2i\n-       280: istore        4\n-       282: aload_0\n-       283: getfield      #10                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-       286: invokevirtual #59                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n-       289: iload_3\n-       290: iload         4\n-       292: if_icmpeq     305\n-       295: new           #35                 // class java/io/IOException\n-       298: dup\n-       299: ldc           #60                 // String Frame header checksum mismatch\n-       301: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       304: athrow\n-       305: return\n+        42: iload_1\n+        43: bipush        6\n+        45: ishr\n+        46: invokedynamic #42,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;\n+        51: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        54: athrow\n+        55: aload_0\n+        56: iload_1\n+        57: bipush        32\n+        59: iand\n+        60: ifne          67\n+        63: iconst_1\n+        64: goto          68\n+        67: iconst_0\n+        68: putfield      #24                 // Field expectBlockDependency:Z\n+        71: aload_0\n+        72: getfield      #24                 // Field expectBlockDependency:Z\n+        75: ifeq          96\n+        78: aload_0\n+        79: getfield      #43                 // Field blockDependencyBuffer:[B\n+        82: ifnonnull     101\n+        85: aload_0\n+        86: ldc           #45                 // int 65536\n+        88: newarray       byte\n+        90: putfield      #43                 // Field blockDependencyBuffer:[B\n+        93: goto          101\n+        96: aload_0\n+        97: aconst_null\n+        98: putfield      #43                 // Field blockDependencyBuffer:[B\n+       101: aload_0\n+       102: iload_1\n+       103: bipush        16\n+       105: iand\n+       106: ifeq          113\n+       109: iconst_1\n+       110: goto          114\n+       113: iconst_0\n+       114: putfield      #46                 // Field expectBlockChecksum:Z\n+       117: aload_0\n+       118: iload_1\n+       119: bipush        8\n+       121: iand\n+       122: ifeq          129\n+       125: iconst_1\n+       126: goto          130\n+       129: iconst_0\n+       130: putfield      #47                 // Field expectContentSize:Z\n+       133: aload_0\n+       134: iload_1\n+       135: iconst_4\n+       136: iand\n+       137: ifeq          144\n+       140: iconst_1\n+       141: goto          145\n+       144: iconst_0\n+       145: putfield      #26                 // Field expectContentChecksum:Z\n+       148: aload_0\n+       149: invokespecial #1                  // Method readOneByte:()I\n+       152: istore_2\n+       153: iload_2\n+       154: iconst_m1\n+       155: if_icmpne     168\n+       158: new           #35                 // class java/io/IOException\n+       161: dup\n+       162: ldc           #48                 // String Premature end of stream while reading frame BD byte\n+       164: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       167: athrow\n+       168: aload_0\n+       169: getfield      #10                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+       172: iload_2\n+       173: invokevirtual #40                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n+       176: aload_0\n+       177: getfield      #47                 // Field expectContentSize:Z\n+       180: ifeq          232\n+       183: bipush        8\n+       185: newarray       byte\n+       187: astore_3\n+       188: aload_0\n+       189: getfield      #14                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+       192: aload_3\n+       193: invokestatic  #33                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+       196: istore        4\n+       198: aload_0\n+       199: iload         4\n+       201: invokevirtual #34                 // Method count:(I)V\n+       204: bipush        8\n+       206: iload         4\n+       208: if_icmpeq     221\n+       211: new           #35                 // class java/io/IOException\n+       214: dup\n+       215: ldc           #49                 // String Premature end of stream while reading content size\n+       217: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       220: athrow\n+       221: aload_0\n+       222: getfield      #10                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+       225: aload_3\n+       226: iconst_0\n+       227: aload_3\n+       228: arraylength\n+       229: invokevirtual #27                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n+       232: aload_0\n+       233: invokespecial #1                  // Method readOneByte:()I\n+       236: istore_3\n+       237: iload_3\n+       238: iconst_m1\n+       239: if_icmpne     252\n+       242: new           #35                 // class java/io/IOException\n+       245: dup\n+       246: ldc           #50                 // String Premature end of stream while reading frame header checksum\n+       248: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       251: athrow\n+       252: aload_0\n+       253: getfield      #10                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+       256: invokevirtual #51                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n+       259: bipush        8\n+       261: lshr\n+       262: ldc2_w        #52                 // long 255l\n+       265: land\n+       266: l2i\n+       267: istore        4\n+       269: aload_0\n+       270: getfield      #10                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+       273: invokevirtual #54                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n+       276: iload_3\n+       277: iload         4\n+       279: if_icmpeq     292\n+       282: new           #35                 // class java/io/IOException\n+       285: dup\n+       286: ldc           #55                 // String Frame header checksum mismatch\n+       288: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       291: athrow\n+       292: return\n       LineNumberTable:\n         line 208: 0\n         line 209: 5\n         line 210: 10\n         line 212: 20\n         line 213: 28\n         line 214: 38\n-        line 216: 68\n-        line 217: 84\n-        line 218: 91\n-        line 219: 98\n-        line 222: 109\n-        line 224: 114\n-        line 225: 130\n-        line 226: 146\n-        line 227: 161\n-        line 228: 166\n-        line 229: 171\n-        line 231: 181\n-        line 232: 189\n-        line 233: 196\n-        line 234: 201\n-        line 235: 211\n-        line 236: 217\n-        line 237: 224\n-        line 239: 234\n-        line 241: 245\n-        line 242: 250\n-        line 243: 255\n-        line 245: 265\n-        line 246: 282\n-        line 247: 289\n-        line 248: 295\n-        line 250: 305\n+        line 216: 55\n+        line 217: 71\n+        line 218: 78\n+        line 219: 85\n+        line 222: 96\n+        line 224: 101\n+        line 225: 117\n+        line 226: 133\n+        line 227: 148\n+        line 228: 153\n+        line 229: 158\n+        line 231: 168\n+        line 232: 176\n+        line 233: 183\n+        line 234: 188\n+        line 235: 198\n+        line 236: 204\n+        line 237: 211\n+        line 239: 221\n+        line 241: 232\n+        line 242: 237\n+        line 243: 242\n+        line 245: 252\n+        line 246: 269\n+        line 247: 276\n+        line 248: 282\n+        line 250: 292\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-          201      44     3 contentSize   [B\n-          211      34     4 skipped   I\n-            0     306     0  this   Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;\n-            5     301     1 flags   I\n-          166     140     2 bdByte   I\n-          250      56     3 headerHash   I\n-          282      24     4 expectedHash   I\n+          188      44     3 contentSize   [B\n+          198      34     4 skipped   I\n+            0     293     0  this   Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;\n+            5     288     1 flags   I\n+          153     140     2 bdByte   I\n+          237      56     3 headerHash   I\n+          269      24     4 expectedHash   I\n       StackMapTable: number_of_entries = 17\n         frame_type = 252 /* append */\n           offset_delta = 20\n           locals = [ int ]\n-        frame_type = 47 /* same */\n+        frame_type = 34 /* same */\n         frame_type = 75 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = [ class org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream, int ]\n           stack = [ class org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream, int ]\n         frame_type = 27 /* same */\n@@ -1125,99 +1120,99 @@\n \n   private void nextBlock() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=7, args_size=1\n          0: aload_0\n-         1: invokespecial #61                 // Method maybeFinishCurrentBlock:()V\n+         1: invokespecial #56                 // Method maybeFinishCurrentBlock:()V\n          4: aload_0\n          5: getfield      #7                  // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n          8: iconst_4\n-         9: invokestatic  #62                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+         9: invokestatic  #57                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n         12: lstore_1\n         13: lload_1\n-        14: ldc2_w        #63                 // long -2147483648l\n+        14: ldc2_w        #58                 // long -2147483648l\n         17: land\n         18: lconst_0\n         19: lcmp\n         20: ifeq          27\n         23: iconst_1\n         24: goto          28\n         27: iconst_0\n         28: istore_3\n         29: lload_1\n-        30: ldc2_w        #65                 // long 2147483647l\n+        30: ldc2_w        #60                 // long 2147483647l\n         33: land\n         34: l2i\n         35: istore        4\n         37: iload         4\n         39: ifge          52\n         42: new           #35                 // class java/io/IOException\n         45: dup\n-        46: ldc           #67                 // String Found illegal block with negative size\n+        46: ldc           #62                 // String Found illegal block with negative size\n         48: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         51: athrow\n         52: iload         4\n         54: ifne          82\n         57: aload_0\n-        58: invokespecial #68                 // Method verifyContentChecksum:()V\n+        58: invokespecial #63                 // Method verifyContentChecksum:()V\n         61: aload_0\n         62: getfield      #15                 // Field decompressConcatenated:Z\n         65: ifne          76\n         68: aload_0\n         69: iconst_1\n         70: putfield      #21                 // Field endReached:Z\n         73: goto          81\n         76: aload_0\n         77: iconst_0\n         78: invokespecial #16                 // Method init:(Z)V\n         81: return\n-        82: new           #69                 // class org/apache/commons/compress/utils/BoundedInputStream\n+        82: new           #64                 // class org/apache/commons/compress/utils/BoundedInputStream\n         85: dup\n         86: aload_0\n         87: getfield      #14                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         90: iload         4\n         92: i2l\n-        93: invokespecial #70                 // Method org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n+        93: invokespecial #65                 // Method org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n         96: astore        5\n         98: aload_0\n-        99: getfield      #51                 // Field expectBlockChecksum:Z\n+        99: getfield      #46                 // Field expectBlockChecksum:Z\n        102: ifeq          120\n-       105: new           #71                 // class org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n+       105: new           #66                 // class org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n        108: dup\n        109: aload_0\n        110: getfield      #11                 // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n        113: aload         5\n-       115: invokespecial #72                 // Method org/apache/commons/compress/utils/ChecksumCalculatingInputStream.\"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+       115: invokespecial #67                 // Method org/apache/commons/compress/utils/ChecksumCalculatingInputStream.\"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n        118: astore        5\n        120: iload_3\n        121: ifeq          138\n        124: aload_0\n        125: iconst_1\n-       126: putfield      #73                 // Field inUncompressed:Z\n+       126: putfield      #68                 // Field inUncompressed:Z\n        129: aload_0\n        130: aload         5\n        132: putfield      #18                 // Field currentBlock:Ljava/io/InputStream;\n        135: goto          176\n        138: aload_0\n        139: iconst_0\n-       140: putfield      #73                 // Field inUncompressed:Z\n-       143: new           #49                 // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+       140: putfield      #68                 // Field inUncompressed:Z\n+       143: new           #44                 // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n        146: dup\n        147: aload         5\n-       149: invokespecial #74                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+       149: invokespecial #69                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n        152: astore        6\n        154: aload_0\n        155: getfield      #24                 // Field expectBlockDependency:Z\n        158: ifeq          170\n        161: aload         6\n        163: aload_0\n-       164: getfield      #48                 // Field blockDependencyBuffer:[B\n-       167: invokevirtual #75                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V\n+       164: getfield      #43                 // Field blockDependencyBuffer:[B\n+       167: invokevirtual #70                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V\n        170: aload_0\n        171: aload         6\n        173: putfield      #18                 // Field currentBlock:Ljava/io/InputStream;\n        176: return\n       LineNumberTable:\n         line 253: 0\n         line 254: 4\n@@ -1286,24 +1281,24 @@\n          7: aload_0\n          8: getfield      #18                 // Field currentBlock:Ljava/io/InputStream;\n         11: invokevirtual #19                 // Method java/io/InputStream.close:()V\n         14: aload_0\n         15: aconst_null\n         16: putfield      #18                 // Field currentBlock:Ljava/io/InputStream;\n         19: aload_0\n-        20: getfield      #51                 // Field expectBlockChecksum:Z\n+        20: getfield      #46                 // Field expectBlockChecksum:Z\n         23: ifeq          43\n         26: aload_0\n         27: aload_0\n         28: getfield      #11                 // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-        31: ldc           #76                 // String block\n-        33: invokespecial #77                 // Method verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+        31: ldc           #71                 // String block\n+        33: invokespecial #72                 // Method verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n         36: aload_0\n         37: getfield      #11                 // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-        40: invokevirtual #59                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n+        40: invokevirtual #54                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n         43: return\n       LineNumberTable:\n         line 287: 0\n         line 288: 7\n         line 289: 14\n         line 290: 19\n         line 291: 26\n@@ -1324,19 +1319,19 @@\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #26                 // Field expectContentChecksum:Z\n          4: ifeq          17\n          7: aload_0\n          8: aload_0\n          9: getfield      #10                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-        12: ldc           #78                 // String content\n-        14: invokespecial #77                 // Method verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+        12: ldc           #73                 // String content\n+        14: invokespecial #72                 // Method verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n         17: aload_0\n         18: getfield      #10                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-        21: invokevirtual #59                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n+        21: invokevirtual #54                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n         24: return\n       LineNumberTable:\n         line 298: 0\n         line 299: 7\n         line 301: 17\n         line 302: 24\n       LocalVariableTable:\n@@ -1361,86 +1356,72 @@\n          9: invokestatic  #33                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n         12: istore        4\n         14: aload_0\n         15: iload         4\n         17: invokevirtual #34                 // Method count:(I)V\n         20: iconst_4\n         21: iload         4\n-        23: if_icmpeq     58\n+        23: if_icmpeq     40\n         26: new           #35                 // class java/io/IOException\n         29: dup\n-        30: new           #42                 // class java/lang/StringBuilder\n-        33: dup\n-        34: invokespecial #43                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        37: ldc           #79                 // String Premature end of stream while reading\n-        39: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        42: aload_2\n-        43: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        46: ldc           #80                 // String  checksum\n-        48: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        51: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        54: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-        57: athrow\n-        58: aload_1\n-        59: invokevirtual #56                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n-        62: lstore        5\n-        64: lload         5\n-        66: aload_3\n-        67: invokestatic  #81                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n-        70: lcmp\n-        71: ifeq          101\n-        74: new           #35                 // class java/io/IOException\n-        77: dup\n-        78: new           #42                 // class java/lang/StringBuilder\n-        81: dup\n-        82: invokespecial #43                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        85: aload_2\n-        86: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        89: ldc           #82                 // String  checksum mismatch.\n-        91: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        94: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        97: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       100: athrow\n-       101: return\n+        30: aload_2\n+        31: invokedynamic #74,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+        36: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        39: athrow\n+        40: aload_1\n+        41: invokevirtual #51                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n+        44: lstore        5\n+        46: lload         5\n+        48: aload_3\n+        49: invokestatic  #75                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n+        52: lcmp\n+        53: ifeq          70\n+        56: new           #35                 // class java/io/IOException\n+        59: dup\n+        60: aload_2\n+        61: invokedynamic #76,  0             // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+        66: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        69: athrow\n+        70: return\n       LineNumberTable:\n         line 305: 0\n         line 306: 4\n         line 307: 14\n         line 308: 20\n         line 309: 26\n-        line 311: 58\n-        line 312: 64\n-        line 313: 74\n-        line 315: 101\n+        line 311: 40\n+        line 312: 46\n+        line 313: 56\n+        line 315: 70\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0     102     0  this   Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;\n-            0     102     1  hash   Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-            0     102     2  kind   Ljava/lang/String;\n-            4      98     3 checksum   [B\n-           14      88     4  read   I\n-           64      38     5 expectedHash   J\n+            0      71     0  this   Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;\n+            0      71     1  hash   Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+            0      71     2  kind   Ljava/lang/String;\n+            4      67     3 checksum   [B\n+           14      57     4  read   I\n+           46      25     5 expectedHash   J\n       StackMapTable: number_of_entries = 2\n         frame_type = 253 /* append */\n-          offset_delta = 58\n+          offset_delta = 40\n           locals = [ class \"[B\", int ]\n         frame_type = 252 /* append */\n-          offset_delta = 42\n+          offset_delta = 29\n           locals = [ long ]\n     Exceptions:\n       throws java.io.IOException\n \n   private int readOneByte() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n          1: getfield      #14                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-         4: invokevirtual #83                 // Method org/apache/commons/compress/utils/CountingInputStream.read:()I\n+         4: invokevirtual #77                 // Method org/apache/commons/compress/utils/CountingInputStream.read:()I\n          7: istore_1\n          8: iload_1\n          9: iconst_m1\n         10: if_icmpeq     24\n         13: aload_0\n         14: iconst_1\n         15: invokevirtual #34                 // Method count:(I)V\n@@ -1469,48 +1450,48 @@\n \n   private int readOnce(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=8, args_size=4\n          0: aload_0\n-         1: getfield      #73                 // Field inUncompressed:Z\n+         1: getfield      #68                 // Field inUncompressed:Z\n          4: ifeq          28\n          7: aload_0\n          8: getfield      #18                 // Field currentBlock:Ljava/io/InputStream;\n         11: aload_1\n         12: iload_2\n         13: iload_3\n-        14: invokevirtual #84                 // Method java/io/InputStream.read:([BII)I\n+        14: invokevirtual #78                 // Method java/io/InputStream.read:([BII)I\n         17: istore        4\n         19: aload_0\n         20: iload         4\n         22: invokevirtual #34                 // Method count:(I)V\n         25: iload         4\n         27: ireturn\n         28: aload_0\n         29: getfield      #18                 // Field currentBlock:Ljava/io/InputStream;\n-        32: checkcast     #49                 // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+        32: checkcast     #44                 // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n         35: astore        4\n         37: aload         4\n-        39: invokevirtual #85                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n+        39: invokevirtual #79                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n         42: lstore        5\n         44: aload_0\n         45: getfield      #18                 // Field currentBlock:Ljava/io/InputStream;\n         48: aload_1\n         49: iload_2\n         50: iload_3\n-        51: invokevirtual #84                 // Method java/io/InputStream.read:([BII)I\n+        51: invokevirtual #78                 // Method java/io/InputStream.read:([BII)I\n         54: istore        7\n         56: aload_0\n         57: aload         4\n-        59: invokevirtual #85                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n+        59: invokevirtual #79                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n         62: lload         5\n         64: lsub\n-        65: invokevirtual #86                 // Method count:(J)V\n+        65: invokevirtual #80                 // Method count:(J)V\n         68: iload         7\n         70: ireturn\n       LineNumberTable:\n         line 327: 0\n         line 328: 7\n         line 329: 19\n         line 330: 25\n@@ -1552,15 +1533,15 @@\n         14: istore_1\n         15: iload_1\n         16: iconst_4\n         17: if_icmpge     41\n         20: aload_0\n         21: iload_1\n         22: baload\n-        23: getstatic     #87                 // Field SKIPPABLE_FRAME_TRAILER:[B\n+        23: getstatic     #81                 // Field SKIPPABLE_FRAME_TRAILER:[B\n         26: iload_1\n         27: iconst_1\n         28: isub\n         29: baload\n         30: if_icmpeq     35\n         33: iconst_0\n         34: ireturn\n@@ -1596,45 +1577,45 @@\n       stack=4, locals=7, args_size=2\n          0: iconst_4\n          1: istore_2\n          2: iload_2\n          3: iconst_4\n          4: if_icmpne     89\n          7: aload_1\n-         8: invokestatic  #88                 // Method isSkippableFrameSignature:([B)Z\n+         8: invokestatic  #82                 // Method isSkippableFrameSignature:([B)Z\n         11: ifeq          89\n         14: aload_0\n         15: getfield      #7                  // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n         18: iconst_4\n-        19: invokestatic  #62                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+        19: invokestatic  #57                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n         22: lstore_3\n         23: lload_3\n         24: lconst_0\n         25: lcmp\n         26: ifge          39\n         29: new           #35                 // class java/io/IOException\n         32: dup\n-        33: ldc           #89                 // String Found illegal skippable frame with negative size\n+        33: ldc           #83                 // String Found illegal skippable frame with negative size\n         35: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         38: athrow\n         39: aload_0\n         40: getfield      #14                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         43: lload_3\n-        44: invokestatic  #90                 // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+        44: invokestatic  #84                 // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n         47: lstore        5\n         49: aload_0\n         50: lload         5\n-        52: invokevirtual #86                 // Method count:(J)V\n+        52: invokevirtual #80                 // Method count:(J)V\n         55: lload_3\n         56: lload         5\n         58: lcmp\n         59: ifeq          72\n         62: new           #35                 // class java/io/IOException\n         65: dup\n-        66: ldc           #91                 // String Premature end of stream while skipping frame\n+        66: ldc           #85                 // String Premature end of stream while skipping frame\n         68: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         71: athrow\n         72: aload_0\n         73: getfield      #14                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         76: aload_1\n         77: invokestatic  #33                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n         80: istore_2\n@@ -1683,43 +1664,43 @@\n   private void appendToBlockDependencyBuffer(byte[], int, int);\n     descriptor: ([BII)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=5, args_size=4\n          0: iload_3\n          1: aload_0\n-         2: getfield      #48                 // Field blockDependencyBuffer:[B\n+         2: getfield      #43                 // Field blockDependencyBuffer:[B\n          5: arraylength\n-         6: invokestatic  #92                 // Method java/lang/Math.min:(II)I\n+         6: invokestatic  #86                 // Method java/lang/Math.min:(II)I\n          9: istore_3\n         10: iload_3\n         11: ifle          55\n         14: aload_0\n-        15: getfield      #48                 // Field blockDependencyBuffer:[B\n+        15: getfield      #43                 // Field blockDependencyBuffer:[B\n         18: arraylength\n         19: iload_3\n         20: isub\n         21: istore        4\n         23: iload         4\n         25: ifle          43\n         28: aload_0\n-        29: getfield      #48                 // Field blockDependencyBuffer:[B\n+        29: getfield      #43                 // Field blockDependencyBuffer:[B\n         32: iload_3\n         33: aload_0\n-        34: getfield      #48                 // Field blockDependencyBuffer:[B\n+        34: getfield      #43                 // Field blockDependencyBuffer:[B\n         37: iconst_0\n         38: iload         4\n-        40: invokestatic  #93                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        40: invokestatic  #87                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         43: aload_1\n         44: iload_2\n         45: aload_0\n-        46: getfield      #48                 // Field blockDependencyBuffer:[B\n+        46: getfield      #43                 // Field blockDependencyBuffer:[B\n         49: iload         4\n         51: iload_3\n-        52: invokestatic  #93                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        52: invokestatic  #87                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         55: return\n       LineNumberTable:\n         line 378: 0\n         line 379: 10\n         line 380: 14\n         line 381: 23\n         line 383: 28\n@@ -1741,40 +1722,40 @@\n \n   public static boolean matches(byte[], int);\n     descriptor: ([BI)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: iload_1\n-         1: getstatic     #94                 // Field LZ4_SIGNATURE:[B\n+         1: getstatic     #88                 // Field LZ4_SIGNATURE:[B\n          4: arraylength\n          5: if_icmpge     10\n          8: iconst_0\n          9: ireturn\n         10: aload_0\n         11: astore_2\n         12: aload_0\n         13: arraylength\n-        14: getstatic     #94                 // Field LZ4_SIGNATURE:[B\n+        14: getstatic     #88                 // Field LZ4_SIGNATURE:[B\n         17: arraylength\n         18: if_icmple     39\n-        21: getstatic     #94                 // Field LZ4_SIGNATURE:[B\n+        21: getstatic     #88                 // Field LZ4_SIGNATURE:[B\n         24: arraylength\n         25: newarray       byte\n         27: astore_2\n         28: aload_0\n         29: iconst_0\n         30: aload_2\n         31: iconst_0\n-        32: getstatic     #94                 // Field LZ4_SIGNATURE:[B\n+        32: getstatic     #88                 // Field LZ4_SIGNATURE:[B\n         35: arraylength\n-        36: invokestatic  #93                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        36: invokestatic  #87                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         39: aload_2\n-        40: getstatic     #94                 // Field LZ4_SIGNATURE:[B\n-        43: invokestatic  #95                 // Method java/util/Arrays.equals:([B[B)Z\n+        40: getstatic     #88                 // Field LZ4_SIGNATURE:[B\n+        43: invokestatic  #89                 // Method java/util/Arrays.equals:([B[B)Z\n         46: ireturn\n       LineNumberTable:\n         line 401: 0\n         line 402: 8\n         line 405: 10\n         line 406: 12\n         line 407: 21\n@@ -1826,32 +1807,43 @@\n         13: iconst_2\n         14: bipush        77\n         16: bastore\n         17: dup\n         18: iconst_3\n         19: bipush        24\n         21: bastore\n-        22: putstatic     #94                 // Field LZ4_SIGNATURE:[B\n+        22: putstatic     #88                 // Field LZ4_SIGNATURE:[B\n         25: iconst_3\n         26: newarray       byte\n         28: dup\n         29: iconst_0\n         30: bipush        42\n         32: bastore\n         33: dup\n         34: iconst_1\n         35: bipush        77\n         37: bastore\n         38: dup\n         39: iconst_2\n         40: bipush        24\n         42: bastore\n-        43: putstatic     #87                 // Field SKIPPABLE_FRAME_TRAILER:[B\n+        43: putstatic     #81                 // Field SKIPPABLE_FRAME_TRAILER:[B\n         46: return\n       LineNumberTable:\n         line 46: 0\n         line 49: 25\n }\n SourceFile: \"FramedLZ4CompressorInputStream.java\"\n InnerClasses:\n   #5;                                     // class org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream$1\n-  public static #126= #125 of #281;       // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n+  public static #120= #119 of #271;       // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n+  public static final #350= #349 of #352; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+BootstrapMethods:\n+  0: #257 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #258 Unsupported version \\u0001\n+  1: #257 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #284 Premature end of stream while reading \\u0001 checksum\n+  2: #257 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #287 \\u0001 checksum mismatch.\n"}]}
