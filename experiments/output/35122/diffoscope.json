{"diffoscope-json-version": 1, "source1": "first/MutableByte.class", "source2": "second/MutableByte.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,123 +1,123 @@\n-  SHA-256 checksum df2594d4d1a9205e12f81ae31c5b9d86f0c2c25b22f646e9f39482112ec41bce\n+  SHA-256 checksum 9fbc676cb7ed81f1c2c3d5ac7fbf46c115970324c8724aa7963029aec48673bc\n   Compiled from \"MutableByte.java\"\n public class org.apache.commons.lang3.mutable.MutableByte extends java.lang.Number implements java.lang.Comparable<org.apache.commons.lang3.mutable.MutableByte>, org.apache.commons.lang3.mutable.Mutable<java.lang.Number>\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #7                          // org/apache/commons/lang3/mutable/MutableByte\n-  super_class: #11                        // java/lang/Number\n+  this_class: #8                          // org/apache/commons/lang3/mutable/MutableByte\n+  super_class: #2                         // java/lang/Number\n   interfaces: 2, fields: 2, methods: 34, attributes: 2\n Constant pool:\n-    #1 = Methodref          #11.#81       // java/lang/Number.\"<init>\":()V\n-    #2 = Fieldref           #7.#82        // org/apache/commons/lang3/mutable/MutableByte.value:B\n-    #3 = Methodref          #11.#83       // java/lang/Number.byteValue:()B\n-    #4 = Methodref          #84.#85       // java/lang/Byte.parseByte:(Ljava/lang/String;)B\n-    #5 = Methodref          #84.#86       // java/lang/Byte.valueOf:(B)Ljava/lang/Byte;\n-    #6 = Methodref          #7.#83        // org/apache/commons/lang3/mutable/MutableByte.byteValue:()B\n-    #7 = Class              #87           // org/apache/commons/lang3/mutable/MutableByte\n-    #8 = Methodref          #88.#89       // org/apache/commons/lang3/math/NumberUtils.compare:(BB)I\n-    #9 = Methodref          #90.#91       // java/lang/String.valueOf:(I)Ljava/lang/String;\n-   #10 = Methodref          #7.#92        // org/apache/commons/lang3/mutable/MutableByte.compareTo:(Lorg/apache/commons/lang3/mutable/MutableByte;)I\n-   #11 = Class              #93           // java/lang/Number\n-   #12 = Methodref          #7.#94        // org/apache/commons/lang3/mutable/MutableByte.setValue:(Ljava/lang/Number;)V\n-   #13 = Methodref          #7.#95        // org/apache/commons/lang3/mutable/MutableByte.getValue:()Ljava/lang/Byte;\n-   #14 = Class              #96           // java/lang/Comparable\n-   #15 = Class              #97           // org/apache/commons/lang3/mutable/Mutable\n-   #16 = Utf8               serialVersionUID\n-   #17 = Utf8               J\n-   #18 = Utf8               ConstantValue\n-   #19 = Long               -1585823265l\n-   #21 = Utf8               value\n-   #22 = Utf8               B\n-   #23 = Utf8               <init>\n-   #24 = Utf8               ()V\n-   #25 = Utf8               Code\n-   #26 = Utf8               LineNumberTable\n-   #27 = Utf8               LocalVariableTable\n-   #28 = Utf8               this\n-   #29 = Utf8               Lorg/apache/commons/lang3/mutable/MutableByte;\n-   #30 = Utf8               (B)V\n-   #31 = Utf8               (Ljava/lang/Number;)V\n-   #32 = Utf8               Ljava/lang/Number;\n-   #33 = Utf8               (Ljava/lang/String;)V\n-   #34 = Utf8               Ljava/lang/String;\n-   #35 = Utf8               getValue\n-   #36 = Utf8               ()Ljava/lang/Byte;\n-   #37 = Utf8               setValue\n-   #38 = Utf8               increment\n-   #39 = Utf8               getAndIncrement\n-   #40 = Utf8               ()B\n-   #41 = Utf8               last\n-   #42 = Utf8               incrementAndGet\n-   #43 = Utf8               decrement\n-   #44 = Utf8               getAndDecrement\n-   #45 = Utf8               decrementAndGet\n-   #46 = Utf8               add\n-   #47 = Utf8               operand\n-   #48 = Utf8               subtract\n-   #49 = Utf8               addAndGet\n-   #50 = Utf8               (B)B\n-   #51 = Utf8               (Ljava/lang/Number;)B\n-   #52 = Utf8               getAndAdd\n-   #53 = Utf8               byteValue\n-   #54 = Utf8               intValue\n-   #55 = Utf8               ()I\n-   #56 = Utf8               longValue\n-   #57 = Utf8               ()J\n-   #58 = Utf8               floatValue\n-   #59 = Utf8               ()F\n-   #60 = Utf8               doubleValue\n-   #61 = Utf8               ()D\n-   #62 = Utf8               toByte\n-   #63 = Utf8               equals\n-   #64 = Utf8               (Ljava/lang/Object;)Z\n-   #65 = Utf8               obj\n-   #66 = Utf8               Ljava/lang/Object;\n-   #67 = Utf8               StackMapTable\n-   #68 = Utf8               hashCode\n-   #69 = Utf8               compareTo\n-   #70 = Utf8               (Lorg/apache/commons/lang3/mutable/MutableByte;)I\n-   #71 = Utf8               other\n-   #72 = Utf8               toString\n-   #73 = Utf8               ()Ljava/lang/String;\n-   #74 = Utf8               (Ljava/lang/Object;)I\n-   #75 = Utf8               (Ljava/lang/Object;)V\n-   #76 = Utf8               ()Ljava/lang/Object;\n-   #77 = Utf8               Signature\n-   #78 = Utf8               Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/mutable/MutableByte;>;Lorg/apache/commons/lang3/mutable/Mutable<Ljava/lang/Number;>;\n-   #79 = Utf8               SourceFile\n-   #80 = Utf8               MutableByte.java\n-   #81 = NameAndType        #23:#24       // \"<init>\":()V\n-   #82 = NameAndType        #21:#22       // value:B\n-   #83 = NameAndType        #53:#40       // byteValue:()B\n-   #84 = Class              #98           // java/lang/Byte\n-   #85 = NameAndType        #99:#100      // parseByte:(Ljava/lang/String;)B\n-   #86 = NameAndType        #101:#102     // valueOf:(B)Ljava/lang/Byte;\n-   #87 = Utf8               org/apache/commons/lang3/mutable/MutableByte\n-   #88 = Class              #103          // org/apache/commons/lang3/math/NumberUtils\n-   #89 = NameAndType        #104:#105     // compare:(BB)I\n-   #90 = Class              #106          // java/lang/String\n-   #91 = NameAndType        #101:#107     // valueOf:(I)Ljava/lang/String;\n-   #92 = NameAndType        #69:#70       // compareTo:(Lorg/apache/commons/lang3/mutable/MutableByte;)I\n-   #93 = Utf8               java/lang/Number\n-   #94 = NameAndType        #37:#31       // setValue:(Ljava/lang/Number;)V\n-   #95 = NameAndType        #35:#36       // getValue:()Ljava/lang/Byte;\n-   #96 = Utf8               java/lang/Comparable\n-   #97 = Utf8               org/apache/commons/lang3/mutable/Mutable\n-   #98 = Utf8               java/lang/Byte\n-   #99 = Utf8               parseByte\n-  #100 = Utf8               (Ljava/lang/String;)B\n-  #101 = Utf8               valueOf\n-  #102 = Utf8               (B)Ljava/lang/Byte;\n-  #103 = Utf8               org/apache/commons/lang3/math/NumberUtils\n-  #104 = Utf8               compare\n-  #105 = Utf8               (BB)I\n-  #106 = Utf8               java/lang/String\n-  #107 = Utf8               (I)Ljava/lang/String;\n+    #1 = Methodref          #2.#3         // java/lang/Number.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Number\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Number\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Fieldref           #8.#9         // org/apache/commons/lang3/mutable/MutableByte.value:B\n+    #8 = Class              #10           // org/apache/commons/lang3/mutable/MutableByte\n+    #9 = NameAndType        #11:#12       // value:B\n+   #10 = Utf8               org/apache/commons/lang3/mutable/MutableByte\n+   #11 = Utf8               value\n+   #12 = Utf8               B\n+   #13 = Methodref          #2.#14        // java/lang/Number.byteValue:()B\n+   #14 = NameAndType        #15:#16       // byteValue:()B\n+   #15 = Utf8               byteValue\n+   #16 = Utf8               ()B\n+   #17 = Methodref          #18.#19       // java/lang/Byte.parseByte:(Ljava/lang/String;)B\n+   #18 = Class              #20           // java/lang/Byte\n+   #19 = NameAndType        #21:#22       // parseByte:(Ljava/lang/String;)B\n+   #20 = Utf8               java/lang/Byte\n+   #21 = Utf8               parseByte\n+   #22 = Utf8               (Ljava/lang/String;)B\n+   #23 = Methodref          #18.#24       // java/lang/Byte.valueOf:(B)Ljava/lang/Byte;\n+   #24 = NameAndType        #25:#26       // valueOf:(B)Ljava/lang/Byte;\n+   #25 = Utf8               valueOf\n+   #26 = Utf8               (B)Ljava/lang/Byte;\n+   #27 = Methodref          #8.#14        // org/apache/commons/lang3/mutable/MutableByte.byteValue:()B\n+   #28 = Methodref          #29.#30       // org/apache/commons/lang3/math/NumberUtils.compare:(BB)I\n+   #29 = Class              #31           // org/apache/commons/lang3/math/NumberUtils\n+   #30 = NameAndType        #32:#33       // compare:(BB)I\n+   #31 = Utf8               org/apache/commons/lang3/math/NumberUtils\n+   #32 = Utf8               compare\n+   #33 = Utf8               (BB)I\n+   #34 = Methodref          #35.#36       // java/lang/String.valueOf:(I)Ljava/lang/String;\n+   #35 = Class              #37           // java/lang/String\n+   #36 = NameAndType        #25:#38       // valueOf:(I)Ljava/lang/String;\n+   #37 = Utf8               java/lang/String\n+   #38 = Utf8               (I)Ljava/lang/String;\n+   #39 = Methodref          #8.#40        // org/apache/commons/lang3/mutable/MutableByte.compareTo:(Lorg/apache/commons/lang3/mutable/MutableByte;)I\n+   #40 = NameAndType        #41:#42       // compareTo:(Lorg/apache/commons/lang3/mutable/MutableByte;)I\n+   #41 = Utf8               compareTo\n+   #42 = Utf8               (Lorg/apache/commons/lang3/mutable/MutableByte;)I\n+   #43 = Methodref          #8.#44        // org/apache/commons/lang3/mutable/MutableByte.setValue:(Ljava/lang/Number;)V\n+   #44 = NameAndType        #45:#46       // setValue:(Ljava/lang/Number;)V\n+   #45 = Utf8               setValue\n+   #46 = Utf8               (Ljava/lang/Number;)V\n+   #47 = Methodref          #8.#48        // org/apache/commons/lang3/mutable/MutableByte.getValue:()Ljava/lang/Byte;\n+   #48 = NameAndType        #49:#50       // getValue:()Ljava/lang/Byte;\n+   #49 = Utf8               getValue\n+   #50 = Utf8               ()Ljava/lang/Byte;\n+   #51 = Class              #52           // java/lang/Comparable\n+   #52 = Utf8               java/lang/Comparable\n+   #53 = Class              #54           // org/apache/commons/lang3/mutable/Mutable\n+   #54 = Utf8               org/apache/commons/lang3/mutable/Mutable\n+   #55 = Utf8               serialVersionUID\n+   #56 = Utf8               J\n+   #57 = Utf8               ConstantValue\n+   #58 = Long               -1585823265l\n+   #60 = Utf8               Code\n+   #61 = Utf8               LineNumberTable\n+   #62 = Utf8               LocalVariableTable\n+   #63 = Utf8               this\n+   #64 = Utf8               Lorg/apache/commons/lang3/mutable/MutableByte;\n+   #65 = Utf8               (B)V\n+   #66 = Utf8               Ljava/lang/Number;\n+   #67 = Utf8               (Ljava/lang/String;)V\n+   #68 = Utf8               Ljava/lang/String;\n+   #69 = Utf8               increment\n+   #70 = Utf8               getAndIncrement\n+   #71 = Utf8               last\n+   #72 = Utf8               incrementAndGet\n+   #73 = Utf8               decrement\n+   #74 = Utf8               getAndDecrement\n+   #75 = Utf8               decrementAndGet\n+   #76 = Utf8               add\n+   #77 = Utf8               operand\n+   #78 = Utf8               subtract\n+   #79 = Utf8               addAndGet\n+   #80 = Utf8               (B)B\n+   #81 = Utf8               (Ljava/lang/Number;)B\n+   #82 = Utf8               getAndAdd\n+   #83 = Utf8               intValue\n+   #84 = Utf8               ()I\n+   #85 = Utf8               longValue\n+   #86 = Utf8               ()J\n+   #87 = Utf8               floatValue\n+   #88 = Utf8               ()F\n+   #89 = Utf8               doubleValue\n+   #90 = Utf8               ()D\n+   #91 = Utf8               toByte\n+   #92 = Utf8               equals\n+   #93 = Utf8               (Ljava/lang/Object;)Z\n+   #94 = Utf8               obj\n+   #95 = Utf8               Ljava/lang/Object;\n+   #96 = Utf8               StackMapTable\n+   #97 = Utf8               hashCode\n+   #98 = Utf8               other\n+   #99 = Utf8               toString\n+  #100 = Utf8               ()Ljava/lang/String;\n+  #101 = Utf8               (Ljava/lang/Object;)I\n+  #102 = Utf8               (Ljava/lang/Object;)V\n+  #103 = Utf8               ()Ljava/lang/Object;\n+  #104 = Utf8               Signature\n+  #105 = Utf8               Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/mutable/MutableByte;>;Lorg/apache/commons/lang3/mutable/Mutable<Ljava/lang/Number;>;\n+  #106 = Utf8               SourceFile\n+  #107 = Utf8               MutableByte.java\n {\n   private static final long serialVersionUID = -1585823265l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long -1585823265l\n \n   private byte value;\n@@ -144,15 +144,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Number.\"<init>\":()V\n          4: aload_0\n          5: iload_1\n-         6: putfield      #2                  // Field value:B\n+         6: putfield      #7                  // Field value:B\n          9: return\n       LineNumberTable:\n         line 54: 0\n         line 55: 4\n         line 56: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -164,16 +164,16 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Number.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: invokevirtual #3                  // Method java/lang/Number.byteValue:()B\n-         9: putfield      #2                  // Field value:B\n+         6: invokevirtual #13                 // Method java/lang/Number.byteValue:()B\n+         9: putfield      #7                  // Field value:B\n         12: return\n       LineNumberTable:\n         line 65: 0\n         line 66: 4\n         line 67: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -185,16 +185,16 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Number.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: invokestatic  #4                  // Method java/lang/Byte.parseByte:(Ljava/lang/String;)B\n-         9: putfield      #2                  // Field value:B\n+         6: invokestatic  #17                 // Method java/lang/Byte.parseByte:(Ljava/lang/String;)B\n+         9: putfield      #7                  // Field value:B\n         12: return\n       LineNumberTable:\n         line 77: 0\n         line 78: 4\n         line 79: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -203,31 +203,31 @@\n \n   public java.lang.Byte getValue();\n     descriptor: ()Ljava/lang/Byte;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:B\n-         4: invokestatic  #5                  // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;\n+         1: getfield      #7                  // Field value:B\n+         4: invokestatic  #23                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;\n          7: areturn\n       LineNumberTable:\n         line 89: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/lang3/mutable/MutableByte;\n \n   public void setValue(byte);\n     descriptor: (B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #2                  // Field value:B\n+         2: putfield      #7                  // Field value:B\n          5: return\n       LineNumberTable:\n         line 98: 0\n         line 99: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/lang3/mutable/MutableByte;\n@@ -236,16 +236,16 @@\n   public void setValue(java.lang.Number);\n     descriptor: (Ljava/lang/Number;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #3                  // Method java/lang/Number.byteValue:()B\n-         5: putfield      #2                  // Field value:B\n+         2: invokevirtual #13                 // Method java/lang/Number.byteValue:()B\n+         5: putfield      #7                  // Field value:B\n          8: return\n       LineNumberTable:\n         line 109: 0\n         line 110: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/lang3/mutable/MutableByte;\n@@ -254,42 +254,42 @@\n   public void increment();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:B\n+         2: getfield      #7                  // Field value:B\n          5: iconst_1\n          6: iadd\n          7: i2b\n-         8: putfield      #2                  // Field value:B\n+         8: putfield      #7                  // Field value:B\n         11: return\n       LineNumberTable:\n         line 119: 0\n         line 120: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/lang3/mutable/MutableByte;\n \n   public byte getAndIncrement();\n     descriptor: ()B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:B\n+         1: getfield      #7                  // Field value:B\n          4: istore_1\n          5: aload_0\n          6: dup\n-         7: getfield      #2                  // Field value:B\n+         7: getfield      #7                  // Field value:B\n         10: iconst_1\n         11: iadd\n         12: i2b\n-        13: putfield      #2                  // Field value:B\n+        13: putfield      #7                  // Field value:B\n         16: iload_1\n         17: ireturn\n       LineNumberTable:\n         line 130: 0\n         line 131: 5\n         line 132: 16\n       LocalVariableTable:\n@@ -300,21 +300,21 @@\n   public byte incrementAndGet();\n     descriptor: ()B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:B\n+         2: getfield      #7                  // Field value:B\n          5: iconst_1\n          6: iadd\n          7: i2b\n-         8: putfield      #2                  // Field value:B\n+         8: putfield      #7                  // Field value:B\n         11: aload_0\n-        12: getfield      #2                  // Field value:B\n+        12: getfield      #7                  // Field value:B\n         15: ireturn\n       LineNumberTable:\n         line 143: 0\n         line 144: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0  this   Lorg/apache/commons/lang3/mutable/MutableByte;\n@@ -322,42 +322,42 @@\n   public void decrement();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:B\n+         2: getfield      #7                  // Field value:B\n          5: iconst_1\n          6: isub\n          7: i2b\n-         8: putfield      #2                  // Field value:B\n+         8: putfield      #7                  // Field value:B\n         11: return\n       LineNumberTable:\n         line 153: 0\n         line 154: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/lang3/mutable/MutableByte;\n \n   public byte getAndDecrement();\n     descriptor: ()B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:B\n+         1: getfield      #7                  // Field value:B\n          4: istore_1\n          5: aload_0\n          6: dup\n-         7: getfield      #2                  // Field value:B\n+         7: getfield      #7                  // Field value:B\n         10: iconst_1\n         11: isub\n         12: i2b\n-        13: putfield      #2                  // Field value:B\n+        13: putfield      #7                  // Field value:B\n         16: iload_1\n         17: ireturn\n       LineNumberTable:\n         line 164: 0\n         line 165: 5\n         line 166: 16\n       LocalVariableTable:\n@@ -368,21 +368,21 @@\n   public byte decrementAndGet();\n     descriptor: ()B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:B\n+         2: getfield      #7                  // Field value:B\n          5: iconst_1\n          6: isub\n          7: i2b\n-         8: putfield      #2                  // Field value:B\n+         8: putfield      #7                  // Field value:B\n         11: aload_0\n-        12: getfield      #2                  // Field value:B\n+        12: getfield      #7                  // Field value:B\n         15: ireturn\n       LineNumberTable:\n         line 177: 0\n         line 178: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0  this   Lorg/apache/commons/lang3/mutable/MutableByte;\n@@ -390,19 +390,19 @@\n   public void add(byte);\n     descriptor: (B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:B\n+         2: getfield      #7                  // Field value:B\n          5: iload_1\n          6: iadd\n          7: i2b\n-         8: putfield      #2                  // Field value:B\n+         8: putfield      #7                  // Field value:B\n         11: return\n       LineNumberTable:\n         line 189: 0\n         line 190: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/lang3/mutable/MutableByte;\n@@ -411,20 +411,20 @@\n   public void add(java.lang.Number);\n     descriptor: (Ljava/lang/Number;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:B\n+         2: getfield      #7                  // Field value:B\n          5: aload_1\n-         6: invokevirtual #3                  // Method java/lang/Number.byteValue:()B\n+         6: invokevirtual #13                 // Method java/lang/Number.byteValue:()B\n          9: iadd\n         10: i2b\n-        11: putfield      #2                  // Field value:B\n+        11: putfield      #7                  // Field value:B\n         14: return\n       LineNumberTable:\n         line 200: 0\n         line 201: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/lang3/mutable/MutableByte;\n@@ -433,19 +433,19 @@\n   public void subtract(byte);\n     descriptor: (B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:B\n+         2: getfield      #7                  // Field value:B\n          5: iload_1\n          6: isub\n          7: i2b\n-         8: putfield      #2                  // Field value:B\n+         8: putfield      #7                  // Field value:B\n         11: return\n       LineNumberTable:\n         line 210: 0\n         line 211: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/lang3/mutable/MutableByte;\n@@ -454,20 +454,20 @@\n   public void subtract(java.lang.Number);\n     descriptor: (Ljava/lang/Number;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:B\n+         2: getfield      #7                  // Field value:B\n          5: aload_1\n-         6: invokevirtual #3                  // Method java/lang/Number.byteValue:()B\n+         6: invokevirtual #13                 // Method java/lang/Number.byteValue:()B\n          9: isub\n         10: i2b\n-        11: putfield      #2                  // Field value:B\n+        11: putfield      #7                  // Field value:B\n         14: return\n       LineNumberTable:\n         line 221: 0\n         line 222: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/lang3/mutable/MutableByte;\n@@ -476,21 +476,21 @@\n   public byte addAndGet(byte);\n     descriptor: (B)B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:B\n+         2: getfield      #7                  // Field value:B\n          5: iload_1\n          6: iadd\n          7: i2b\n-         8: putfield      #2                  // Field value:B\n+         8: putfield      #7                  // Field value:B\n         11: aload_0\n-        12: getfield      #2                  // Field value:B\n+        12: getfield      #7                  // Field value:B\n         15: ireturn\n       LineNumberTable:\n         line 233: 0\n         line 234: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0  this   Lorg/apache/commons/lang3/mutable/MutableByte;\n@@ -499,22 +499,22 @@\n   public byte addAndGet(java.lang.Number);\n     descriptor: (Ljava/lang/Number;)B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:B\n+         2: getfield      #7                  // Field value:B\n          5: aload_1\n-         6: invokevirtual #3                  // Method java/lang/Number.byteValue:()B\n+         6: invokevirtual #13                 // Method java/lang/Number.byteValue:()B\n          9: iadd\n         10: i2b\n-        11: putfield      #2                  // Field value:B\n+        11: putfield      #7                  // Field value:B\n         14: aload_0\n-        15: getfield      #2                  // Field value:B\n+        15: getfield      #7                  // Field value:B\n         18: ireturn\n       LineNumberTable:\n         line 247: 0\n         line 248: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0  this   Lorg/apache/commons/lang3/mutable/MutableByte;\n@@ -522,23 +522,23 @@\n \n   public byte getAndAdd(byte);\n     descriptor: (B)B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #2                  // Field value:B\n+         1: getfield      #7                  // Field value:B\n          4: istore_2\n          5: aload_0\n          6: dup\n-         7: getfield      #2                  // Field value:B\n+         7: getfield      #7                  // Field value:B\n         10: iload_1\n         11: iadd\n         12: i2b\n-        13: putfield      #2                  // Field value:B\n+        13: putfield      #7                  // Field value:B\n         16: iload_2\n         17: ireturn\n       LineNumberTable:\n         line 260: 0\n         line 261: 5\n         line 262: 16\n       LocalVariableTable:\n@@ -549,24 +549,24 @@\n \n   public byte getAndAdd(java.lang.Number);\n     descriptor: (Ljava/lang/Number;)B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #2                  // Field value:B\n+         1: getfield      #7                  // Field value:B\n          4: istore_2\n          5: aload_0\n          6: dup\n-         7: getfield      #2                  // Field value:B\n+         7: getfield      #7                  // Field value:B\n         10: aload_1\n-        11: invokevirtual #3                  // Method java/lang/Number.byteValue:()B\n+        11: invokevirtual #13                 // Method java/lang/Number.byteValue:()B\n         14: iadd\n         15: i2b\n-        16: putfield      #2                  // Field value:B\n+        16: putfield      #7                  // Field value:B\n         19: iload_2\n         20: ireturn\n       LineNumberTable:\n         line 275: 0\n         line 276: 5\n         line 277: 19\n       LocalVariableTable:\n@@ -577,109 +577,109 @@\n \n   public byte byteValue();\n     descriptor: ()B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:B\n+         1: getfield      #7                  // Field value:B\n          4: ireturn\n       LineNumberTable:\n         line 289: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/mutable/MutableByte;\n \n   public int intValue();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:B\n+         1: getfield      #7                  // Field value:B\n          4: ireturn\n       LineNumberTable:\n         line 299: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/mutable/MutableByte;\n \n   public long longValue();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:B\n+         1: getfield      #7                  // Field value:B\n          4: i2l\n          5: lreturn\n       LineNumberTable:\n         line 309: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/lang3/mutable/MutableByte;\n \n   public float floatValue();\n     descriptor: ()F\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:B\n+         1: getfield      #7                  // Field value:B\n          4: i2f\n          5: freturn\n       LineNumberTable:\n         line 319: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/lang3/mutable/MutableByte;\n \n   public double doubleValue();\n     descriptor: ()D\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:B\n+         1: getfield      #7                  // Field value:B\n          4: i2d\n          5: dreturn\n       LineNumberTable:\n         line 329: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/lang3/mutable/MutableByte;\n \n   public java.lang.Byte toByte();\n     descriptor: ()Ljava/lang/Byte;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #6                  // Method byteValue:()B\n-         4: invokestatic  #5                  // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;\n+         1: invokevirtual #27                 // Method byteValue:()B\n+         4: invokestatic  #23                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;\n          7: areturn\n       LineNumberTable:\n         line 339: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/lang3/mutable/MutableByte;\n \n   public boolean equals(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: instanceof    #7                  // class org/apache/commons/lang3/mutable/MutableByte\n+         1: instanceof    #8                  // class org/apache/commons/lang3/mutable/MutableByte\n          4: ifeq          27\n          7: aload_0\n-         8: getfield      #2                  // Field value:B\n+         8: getfield      #7                  // Field value:B\n         11: aload_1\n-        12: checkcast     #7                  // class org/apache/commons/lang3/mutable/MutableByte\n-        15: invokevirtual #6                  // Method byteValue:()B\n+        12: checkcast     #8                  // class org/apache/commons/lang3/mutable/MutableByte\n+        15: invokevirtual #27                 // Method byteValue:()B\n         18: if_icmpne     25\n         21: iconst_1\n         22: goto          26\n         25: iconst_0\n         26: ireturn\n         27: iconst_0\n         28: ireturn\n@@ -699,96 +699,96 @@\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:B\n+         1: getfield      #7                  // Field value:B\n          4: ireturn\n       LineNumberTable:\n         line 366: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/mutable/MutableByte;\n \n   public int compareTo(org.apache.commons.lang3.mutable.MutableByte);\n     descriptor: (Lorg/apache/commons/lang3/mutable/MutableByte;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #2                  // Field value:B\n+         1: getfield      #7                  // Field value:B\n          4: aload_1\n-         5: getfield      #2                  // Field value:B\n-         8: invokestatic  #8                  // Method org/apache/commons/lang3/math/NumberUtils.compare:(BB)I\n+         5: getfield      #7                  // Field value:B\n+         8: invokestatic  #28                 // Method org/apache/commons/lang3/math/NumberUtils.compare:(BB)I\n         11: ireturn\n       LineNumberTable:\n         line 378: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/lang3/mutable/MutableByte;\n             0      12     1 other   Lorg/apache/commons/lang3/mutable/MutableByte;\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:B\n-         4: invokestatic  #9                  // Method java/lang/String.valueOf:(I)Ljava/lang/String;\n+         1: getfield      #7                  // Field value:B\n+         4: invokestatic  #34                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 389: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/lang3/mutable/MutableByte;\n \n   public int compareTo(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)I\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #7                  // class org/apache/commons/lang3/mutable/MutableByte\n-         5: invokevirtual #10                 // Method compareTo:(Lorg/apache/commons/lang3/mutable/MutableByte;)I\n+         2: checkcast     #8                  // class org/apache/commons/lang3/mutable/MutableByte\n+         5: invokevirtual #39                 // Method compareTo:(Lorg/apache/commons/lang3/mutable/MutableByte;)I\n          8: ireturn\n       LineNumberTable:\n         line 29: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/lang3/mutable/MutableByte;\n \n   public void setValue(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)V\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #11                 // class java/lang/Number\n-         5: invokevirtual #12                 // Method setValue:(Ljava/lang/Number;)V\n+         2: checkcast     #2                  // class java/lang/Number\n+         5: invokevirtual #43                 // Method setValue:(Ljava/lang/Number;)V\n          8: return\n       LineNumberTable:\n         line 29: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/lang3/mutable/MutableByte;\n \n   public java.lang.Object getValue();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #13                 // Method getValue:()Ljava/lang/Byte;\n+         1: invokevirtual #47                 // Method getValue:()Ljava/lang/Byte;\n          4: areturn\n       LineNumberTable:\n         line 29: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/mutable/MutableByte;\n }\n-Signature: #78                          // Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/mutable/MutableByte;>;Lorg/apache/commons/lang3/mutable/Mutable<Ljava/lang/Number;>;\n+Signature: #105                         // Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/mutable/MutableByte;>;Lorg/apache/commons/lang3/mutable/Mutable<Ljava/lang/Number;>;\n SourceFile: \"MutableByte.java\"\n"}]}
