{"diffoscope-json-version": 1, "source1": "first/ByteBufferCleaner$Java9Cleaner.class", "source2": "second/ByteBufferCleaner$Java9Cleaner.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,146 +1,144 @@\n-  SHA-256 checksum f526b872bbf2f4ae35f0c924a9a592db8f5ebca124f8849cb70ae113adc010e1\n+  SHA-256 checksum 6d79c3a944dce6ee4abb82b7a97c9f4f7331e1fbdb3aab6ea2f993055c0213f6\n   Compiled from \"ByteBufferCleaner.java\"\n class org.apache.commons.io.input.ByteBufferCleaner$Java9Cleaner implements org.apache.commons.io.input.ByteBufferCleaner$Cleaner\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n-  this_class: #2                          // org/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner\n-  super_class: #8                         // java/lang/Object\n+  this_class: #1                          // org/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner\n+  super_class: #3                         // java/lang/Object\n   interfaces: 1, fields: 2, methods: 3, attributes: 2\n Constant pool:\n-   #1 = Methodref          #2.#3          // org/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner.\"<init>\":()V\n-   #2 = Class              #4             // org/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner\n-   #3 = NameAndType        #5:#6          // \"<init>\":()V\n-   #4 = Utf8               org/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner\n-   #5 = Utf8               <init>\n-   #6 = Utf8               ()V\n-   #7 = Methodref          #8.#3          // java/lang/Object.\"<init>\":()V\n-   #8 = Class              #9             // java/lang/Object\n-   #9 = Utf8               java/lang/Object\n-  #10 = String             #11            // sun.misc.Unsafe\n-  #11 = Utf8               sun.misc.Unsafe\n-  #12 = Methodref          #13.#14        // java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;\n-  #13 = Class              #15            // java/lang/Class\n-  #14 = NameAndType        #16:#17        // forName:(Ljava/lang/String;)Ljava/lang/Class;\n-  #15 = Utf8               java/lang/Class\n-  #16 = Utf8               forName\n-  #17 = Utf8               (Ljava/lang/String;)Ljava/lang/Class;\n-  #18 = String             #19            // theUnsafe\n-  #19 = Utf8               theUnsafe\n-  #20 = Methodref          #13.#21        // java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;\n-  #21 = NameAndType        #22:#23        // getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;\n-  #22 = Utf8               getDeclaredField\n-  #23 = Utf8               (Ljava/lang/String;)Ljava/lang/reflect/Field;\n-  #24 = Methodref          #25.#26        // java/lang/reflect/Field.setAccessible:(Z)V\n-  #25 = Class              #27            // java/lang/reflect/Field\n-  #26 = NameAndType        #28:#29        // setAccessible:(Z)V\n-  #27 = Utf8               java/lang/reflect/Field\n-  #28 = Utf8               setAccessible\n-  #29 = Utf8               (Z)V\n-  #30 = Methodref          #25.#31        // java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #31 = NameAndType        #32:#33        // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #32 = Utf8               get\n-  #33 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #34 = Fieldref           #2.#35         // org/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner.theUnsafe:Ljava/lang/Object;\n-  #35 = NameAndType        #19:#36        // theUnsafe:Ljava/lang/Object;\n-  #36 = Utf8               Ljava/lang/Object;\n-  #37 = String             #38            // invokeCleaner\n-  #38 = Utf8               invokeCleaner\n-  #39 = Class              #40            // java/nio/ByteBuffer\n-  #40 = Utf8               java/nio/ByteBuffer\n-  #41 = Methodref          #13.#42        // java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n-  #42 = NameAndType        #43:#44        // getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n-  #43 = Utf8               getMethod\n-  #44 = Utf8               (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n-  #45 = Fieldref           #2.#46         // org/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner.invokeCleaner:Ljava/lang/reflect/Method;\n-  #46 = NameAndType        #38:#47        // invokeCleaner:Ljava/lang/reflect/Method;\n-  #47 = Utf8               Ljava/lang/reflect/Method;\n-  #48 = Methodref          #49.#50        // java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #49 = Class              #51            // java/lang/reflect/Method\n-  #50 = NameAndType        #52:#53        // invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #51 = Utf8               java/lang/reflect/Method\n-  #52 = Utf8               invoke\n-  #53 = Utf8               (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #54 = Class              #55            // org/apache/commons/io/input/ByteBufferCleaner$Cleaner\n-  #55 = Utf8               org/apache/commons/io/input/ByteBufferCleaner$Cleaner\n-  #56 = Utf8               Code\n-  #57 = Utf8               LineNumberTable\n-  #58 = Utf8               LocalVariableTable\n-  #59 = Utf8               this\n-  #60 = Utf8               Lorg/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner;\n-  #61 = Utf8               unsafeClass\n-  #62 = Utf8               Ljava/lang/Class;\n-  #63 = Utf8               field\n-  #64 = Utf8               Ljava/lang/reflect/Field;\n-  #65 = Utf8               LocalVariableTypeTable\n-  #66 = Utf8               Ljava/lang/Class<*>;\n-  #67 = Utf8               Exceptions\n-  #68 = Class              #69            // java/lang/ReflectiveOperationException\n-  #69 = Utf8               java/lang/ReflectiveOperationException\n-  #70 = Class              #71            // java/lang/SecurityException\n-  #71 = Utf8               java/lang/SecurityException\n-  #72 = Utf8               clean\n-  #73 = Utf8               (Ljava/nio/ByteBuffer;)V\n-  #74 = Utf8               buffer\n-  #75 = Utf8               Ljava/nio/ByteBuffer;\n-  #76 = Utf8               (Lorg/apache/commons/io/input/ByteBufferCleaner$1;)V\n-  #77 = Utf8               x0\n-  #78 = Utf8               Lorg/apache/commons/io/input/ByteBufferCleaner$1;\n-  #79 = Utf8               SourceFile\n-  #80 = Utf8               ByteBufferCleaner.java\n-  #81 = Utf8               InnerClasses\n-  #82 = Class              #83            // org/apache/commons/io/input/ByteBufferCleaner\n-  #83 = Utf8               org/apache/commons/io/input/ByteBufferCleaner\n-  #84 = Utf8               Java9Cleaner\n-  #85 = Utf8               Cleaner\n-  #86 = Class              #87            // org/apache/commons/io/input/ByteBufferCleaner$1\n-  #87 = Utf8               org/apache/commons/io/input/ByteBufferCleaner$1\n+   #1 = Class              #2             // org/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner\n+   #2 = Utf8               org/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n+   #5 = Class              #6             // org/apache/commons/io/input/ByteBufferCleaner$Cleaner\n+   #6 = Utf8               org/apache/commons/io/input/ByteBufferCleaner$Cleaner\n+   #7 = Utf8               theUnsafe\n+   #8 = Utf8               Ljava/lang/Object;\n+   #9 = Utf8               invokeCleaner\n+  #10 = Utf8               Ljava/lang/reflect/Method;\n+  #11 = Utf8               <init>\n+  #12 = Utf8               ()V\n+  #13 = Utf8               Exceptions\n+  #14 = Class              #15            // java/lang/ReflectiveOperationException\n+  #15 = Utf8               java/lang/ReflectiveOperationException\n+  #16 = Class              #17            // java/lang/SecurityException\n+  #17 = Utf8               java/lang/SecurityException\n+  #18 = Utf8               Code\n+  #19 = Methodref          #3.#20         // java/lang/Object.\"<init>\":()V\n+  #20 = NameAndType        #11:#12        // \"<init>\":()V\n+  #21 = String             #22            // sun.misc.Unsafe\n+  #22 = Utf8               sun.misc.Unsafe\n+  #23 = Methodref          #24.#26        // java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;\n+  #24 = Class              #25            // java/lang/Class\n+  #25 = Utf8               java/lang/Class\n+  #26 = NameAndType        #27:#28        // forName:(Ljava/lang/String;)Ljava/lang/Class;\n+  #27 = Utf8               forName\n+  #28 = Utf8               (Ljava/lang/String;)Ljava/lang/Class;\n+  #29 = String             #7             // theUnsafe\n+  #30 = Methodref          #24.#31        // java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;\n+  #31 = NameAndType        #32:#33        // getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;\n+  #32 = Utf8               getDeclaredField\n+  #33 = Utf8               (Ljava/lang/String;)Ljava/lang/reflect/Field;\n+  #34 = Methodref          #35.#37        // java/lang/reflect/Field.setAccessible:(Z)V\n+  #35 = Class              #36            // java/lang/reflect/Field\n+  #36 = Utf8               java/lang/reflect/Field\n+  #37 = NameAndType        #38:#39        // setAccessible:(Z)V\n+  #38 = Utf8               setAccessible\n+  #39 = Utf8               (Z)V\n+  #40 = Methodref          #35.#41        // java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #41 = NameAndType        #42:#43        // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #42 = Utf8               get\n+  #43 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #44 = Fieldref           #1.#45         // org/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner.theUnsafe:Ljava/lang/Object;\n+  #45 = NameAndType        #7:#8          // theUnsafe:Ljava/lang/Object;\n+  #46 = String             #9             // invokeCleaner\n+  #47 = Class              #48            // java/nio/ByteBuffer\n+  #48 = Utf8               java/nio/ByteBuffer\n+  #49 = Methodref          #24.#50        // java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n+  #50 = NameAndType        #51:#52        // getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n+  #51 = Utf8               getMethod\n+  #52 = Utf8               (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n+  #53 = Fieldref           #1.#54         // org/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner.invokeCleaner:Ljava/lang/reflect/Method;\n+  #54 = NameAndType        #9:#10         // invokeCleaner:Ljava/lang/reflect/Method;\n+  #55 = Utf8               LineNumberTable\n+  #56 = Utf8               LocalVariableTable\n+  #57 = Utf8               this\n+  #58 = Utf8               Lorg/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner;\n+  #59 = Utf8               unsafeClass\n+  #60 = Utf8               Ljava/lang/Class;\n+  #61 = Utf8               field\n+  #62 = Utf8               Ljava/lang/reflect/Field;\n+  #63 = Utf8               LocalVariableTypeTable\n+  #64 = Utf8               Ljava/lang/Class<*>;\n+  #65 = Utf8               clean\n+  #66 = Utf8               (Ljava/nio/ByteBuffer;)V\n+  #67 = Methodref          #68.#70        // java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #68 = Class              #69            // java/lang/reflect/Method\n+  #69 = Utf8               java/lang/reflect/Method\n+  #70 = NameAndType        #71:#72        // invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #71 = Utf8               invoke\n+  #72 = Utf8               (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #73 = Utf8               buffer\n+  #74 = Utf8               Ljava/nio/ByteBuffer;\n+  #75 = Utf8               (Lorg/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner;)V\n+  #76 = Methodref          #1.#20         // org/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner.\"<init>\":()V\n+  #77 = Utf8               SourceFile\n+  #78 = Utf8               ByteBufferCleaner.java\n+  #79 = Utf8               InnerClasses\n+  #80 = Class              #81            // org/apache/commons/io/input/ByteBufferCleaner\n+  #81 = Utf8               org/apache/commons/io/input/ByteBufferCleaner\n+  #82 = Utf8               Cleaner\n+  #83 = Utf8               Java9Cleaner\n {\n   private final java.lang.Object theUnsafe;\n     descriptor: Ljava/lang/Object;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final java.lang.reflect.Method invokeCleaner;\n     descriptor: Ljava/lang/reflect/Method;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private org.apache.commons.io.input.ByteBufferCleaner$Java9Cleaner() throws java.lang.ReflectiveOperationException, java.lang.SecurityException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.lang.ReflectiveOperationException, java.lang.SecurityException\n     Code:\n       stack=7, locals=3, args_size=1\n          0: aload_0\n-         1: invokespecial #7                  // Method java/lang/Object.\"<init>\":()V\n-         4: ldc           #10                 // String sun.misc.Unsafe\n-         6: invokestatic  #12                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;\n+         1: invokespecial #19                 // Method java/lang/Object.\"<init>\":()V\n+         4: ldc           #21                 // String sun.misc.Unsafe\n+         6: invokestatic  #23                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;\n          9: astore_1\n         10: aload_1\n-        11: ldc           #18                 // String theUnsafe\n-        13: invokevirtual #20                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;\n+        11: ldc           #29                 // String theUnsafe\n+        13: invokevirtual #30                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;\n         16: astore_2\n         17: aload_2\n         18: iconst_1\n-        19: invokevirtual #24                 // Method java/lang/reflect/Field.setAccessible:(Z)V\n+        19: invokevirtual #34                 // Method java/lang/reflect/Field.setAccessible:(Z)V\n         22: aload_0\n         23: aload_2\n         24: aconst_null\n-        25: invokevirtual #30                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-        28: putfield      #34                 // Field theUnsafe:Ljava/lang/Object;\n+        25: invokevirtual #40                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+        28: putfield      #44                 // Field theUnsafe:Ljava/lang/Object;\n         31: aload_0\n         32: aload_1\n-        33: ldc           #37                 // String invokeCleaner\n+        33: ldc           #46                 // String invokeCleaner\n         35: iconst_1\n-        36: anewarray     #13                 // class java/lang/Class\n+        36: anewarray     #24                 // class java/lang/Class\n         39: dup\n         40: iconst_0\n-        41: ldc           #39                 // class java/nio/ByteBuffer\n+        41: ldc           #47                 // class java/nio/ByteBuffer\n         43: aastore\n-        44: invokevirtual #41                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n-        47: putfield      #45                 // Field invokeCleaner:Ljava/lang/reflect/Method;\n+        44: invokevirtual #49                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n+        47: putfield      #53                 // Field invokeCleaner:Ljava/lang/reflect/Method;\n         50: return\n       LineNumberTable:\n         line 65: 0\n         line 66: 4\n         line 67: 10\n         line 68: 17\n         line 69: 22\n@@ -150,60 +148,55 @@\n         Start  Length  Slot  Name   Signature\n             0      51     0  this   Lorg/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner;\n            10      41     1 unsafeClass   Ljava/lang/Class;\n            17      34     2 field   Ljava/lang/reflect/Field;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n            10      41     1 unsafeClass   Ljava/lang/Class<*>;\n-    Exceptions:\n-      throws java.lang.ReflectiveOperationException, java.lang.SecurityException\n \n   public void clean(java.nio.ByteBuffer) throws java.lang.ReflectiveOperationException;\n     descriptor: (Ljava/nio/ByteBuffer;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.lang.ReflectiveOperationException\n     Code:\n       stack=6, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #45                 // Field invokeCleaner:Ljava/lang/reflect/Method;\n+         1: getfield      #53                 // Field invokeCleaner:Ljava/lang/reflect/Method;\n          4: aload_0\n-         5: getfield      #34                 // Field theUnsafe:Ljava/lang/Object;\n+         5: getfield      #44                 // Field theUnsafe:Ljava/lang/Object;\n          8: iconst_1\n-         9: anewarray     #8                  // class java/lang/Object\n+         9: anewarray     #3                  // class java/lang/Object\n         12: dup\n         13: iconst_0\n         14: aload_1\n         15: aastore\n-        16: invokevirtual #48                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n+        16: invokevirtual #67                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n         19: pop\n         20: return\n       LineNumberTable:\n         line 75: 0\n         line 76: 20\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      21     0  this   Lorg/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner;\n             0      21     1 buffer   Ljava/nio/ByteBuffer;\n-    Exceptions:\n-      throws java.lang.ReflectiveOperationException\n \n-  org.apache.commons.io.input.ByteBufferCleaner$Java9Cleaner(org.apache.commons.io.input.ByteBufferCleaner$1) throws java.lang.ReflectiveOperationException, java.lang.SecurityException;\n-    descriptor: (Lorg/apache/commons/io/input/ByteBufferCleaner$1;)V\n+  org.apache.commons.io.input.ByteBufferCleaner$Java9Cleaner(org.apache.commons.io.input.ByteBufferCleaner$Java9Cleaner) throws java.lang.ReflectiveOperationException, java.lang.SecurityException;\n+    descriptor: (Lorg/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner;)V\n     flags: (0x1000) ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.lang.ReflectiveOperationException, java.lang.SecurityException\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method \"<init>\":()V\n+         1: invokespecial #76                 // Method \"<init>\":()V\n          4: return\n       LineNumberTable:\n-        line 60: 0\n+        line 65: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0  this   Lorg/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner;\n-            0       5     1    x0   Lorg/apache/commons/io/input/ByteBufferCleaner$1;\n-    Exceptions:\n-      throws java.lang.ReflectiveOperationException, java.lang.SecurityException\n }\n SourceFile: \"ByteBufferCleaner.java\"\n InnerClasses:\n-  private static #84= #2 of #82;          // Java9Cleaner=class org/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner of class org/apache/commons/io/input/ByteBufferCleaner\n-  private static #85= #54 of #82;         // Cleaner=class org/apache/commons/io/input/ByteBufferCleaner$Cleaner of class org/apache/commons/io/input/ByteBufferCleaner\n-  static #86;                             // class org/apache/commons/io/input/ByteBufferCleaner$1\n+  private static #82= #5 of #80;          // Cleaner=class org/apache/commons/io/input/ByteBufferCleaner$Cleaner of class org/apache/commons/io/input/ByteBufferCleaner\n+  private static #83= #1 of #80;          // Java9Cleaner=class org/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner of class org/apache/commons/io/input/ByteBufferCleaner\n"}]}
