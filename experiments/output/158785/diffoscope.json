{"diffoscope-json-version": 1, "source1": "first/IOUtilsTest.class", "source2": "second/IOUtilsTest.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,8 +1,8 @@\n-  SHA-256 checksum 4ab95a653478fb2288d9f5b66cdf8215686ed043b67ac48a13538cba69953416\n+  SHA-256 checksum ae64202b80cbd78d149cc5f85c375b1235d614b2ea4cf316b3e0c6a8345c2a5f\n   Compiled from \"IOUtilsTest.java\"\n public class org.apache.commons.compress.utils.IOUtilsTest\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/compress/utils/IOUtilsTest\n   super_class: #3                         // java/lang/Object\n@@ -23,28 +23,28 @@\n    #13 = Utf8               Lorg/apache/commons/compress/utils/IOUtilsTest;\n    #14 = Utf8               skipUsingSkip\n    #15 = Utf8               Exceptions\n    #16 = Class              #17           // java/lang/Exception\n    #17 = Utf8               java/lang/Exception\n    #18 = Utf8               RuntimeVisibleAnnotations\n    #19 = Utf8               Lorg/junit/Test;\n-   #20 = NameAndType        #21:#22       // wrap:()Lorg/apache/commons/compress/utils/IOUtilsTest$StreamWrapper;\n-   #21 = Utf8               wrap\n-   #22 = Utf8               ()Lorg/apache/commons/compress/utils/IOUtilsTest$StreamWrapper;\n-   #23 = InvokeDynamic      #0:#20        // #0:wrap:()Lorg/apache/commons/compress/utils/IOUtilsTest$StreamWrapper;\n+   #20 = InvokeDynamic      #0:#21        // #0:wrap:()Lorg/apache/commons/compress/utils/IOUtilsTest$StreamWrapper;\n+   #21 = NameAndType        #22:#23       // wrap:()Lorg/apache/commons/compress/utils/IOUtilsTest$StreamWrapper;\n+   #22 = Utf8               wrap\n+   #23 = Utf8               ()Lorg/apache/commons/compress/utils/IOUtilsTest$StreamWrapper;\n    #24 = Methodref          #1.#25        // org/apache/commons/compress/utils/IOUtilsTest.skip:(Lorg/apache/commons/compress/utils/IOUtilsTest$StreamWrapper;)V\n    #25 = NameAndType        #26:#27       // skip:(Lorg/apache/commons/compress/utils/IOUtilsTest$StreamWrapper;)V\n    #26 = Utf8               skip\n    #27 = Utf8               (Lorg/apache/commons/compress/utils/IOUtilsTest$StreamWrapper;)V\n    #28 = Utf8               skipUsingRead\n-   #29 = NameAndType        #21:#30       // wrap:(Lorg/apache/commons/compress/utils/IOUtilsTest;)Lorg/apache/commons/compress/utils/IOUtilsTest$StreamWrapper;\n-   #30 = Utf8               (Lorg/apache/commons/compress/utils/IOUtilsTest;)Lorg/apache/commons/compress/utils/IOUtilsTest$StreamWrapper;\n-   #31 = InvokeDynamic      #1:#29        // #1:wrap:(Lorg/apache/commons/compress/utils/IOUtilsTest;)Lorg/apache/commons/compress/utils/IOUtilsTest$StreamWrapper;\n+   #29 = InvokeDynamic      #1:#30        // #1:wrap:(Lorg/apache/commons/compress/utils/IOUtilsTest;)Lorg/apache/commons/compress/utils/IOUtilsTest$StreamWrapper;\n+   #30 = NameAndType        #22:#31       // wrap:(Lorg/apache/commons/compress/utils/IOUtilsTest;)Lorg/apache/commons/compress/utils/IOUtilsTest$StreamWrapper;\n+   #31 = Utf8               (Lorg/apache/commons/compress/utils/IOUtilsTest;)Lorg/apache/commons/compress/utils/IOUtilsTest$StreamWrapper;\n    #32 = Utf8               skipUsingSkipAndRead\n-   #33 = InvokeDynamic      #2:#29        // #2:wrap:(Lorg/apache/commons/compress/utils/IOUtilsTest;)Lorg/apache/commons/compress/utils/IOUtilsTest$StreamWrapper;\n+   #33 = InvokeDynamic      #2:#30        // #2:wrap:(Lorg/apache/commons/compress/utils/IOUtilsTest;)Lorg/apache/commons/compress/utils/IOUtilsTest$StreamWrapper;\n    #34 = Utf8               readFullyOnChannelReadsFully\n    #35 = Class              #36           // java/io/IOException\n    #36 = Utf8               java/io/IOException\n    #37 = Methodref          #38.#40       // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n    #38 = Class              #39           // java/nio/ByteBuffer\n    #39 = Utf8               java/nio/ByteBuffer\n    #40 = NameAndType        #41:#42       // allocate:(I)Ljava/nio/ByteBuffer;\n@@ -159,15 +159,15 @@\n   #154 = Utf8               readRangeFromChannelStopsIfThereIsNothingToReadAnymore\n   #155 = Methodref          #84.#156      // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)V\n   #156 = NameAndType        #45:#157      // readFully:(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)V\n   #157 = Utf8               (Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)V\n   #158 = InterfaceMethodref #159.#161     // org/apache/commons/compress/utils/IOUtilsTest$StreamWrapper.wrap:(Ljava/io/InputStream;)Ljava/io/InputStream;\n   #159 = Class              #160          // org/apache/commons/compress/utils/IOUtilsTest$StreamWrapper\n   #160 = Utf8               org/apache/commons/compress/utils/IOUtilsTest$StreamWrapper\n-  #161 = NameAndType        #21:#162      // wrap:(Ljava/io/InputStream;)Ljava/io/InputStream;\n+  #161 = NameAndType        #22:#162      // wrap:(Ljava/io/InputStream;)Ljava/io/InputStream;\n   #162 = Utf8               (Ljava/io/InputStream;)Ljava/io/InputStream;\n   #163 = Methodref          #84.#164      // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n   #164 = NameAndType        #26:#165      // skip:(Ljava/io/InputStream;J)J\n   #165 = Utf8               (Ljava/io/InputStream;J)J\n   #166 = Long               11l\n   #168 = Methodref          #169.#134     // java/io/InputStream.read:()I\n   #169 = Class              #170          // java/io/InputStream\n@@ -244,15 +244,15 @@\n       throws java.lang.Exception\n     RuntimeVisibleAnnotations:\n       0: #19()\n         org.junit.Test\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokedynamic #23,  0             // InvokeDynamic #0:wrap:()Lorg/apache/commons/compress/utils/IOUtilsTest$StreamWrapper;\n+         1: invokedynamic #20,  0             // InvokeDynamic #0:wrap:()Lorg/apache/commons/compress/utils/IOUtilsTest$StreamWrapper;\n          6: invokespecial #24                 // Method skip:(Lorg/apache/commons/compress/utils/IOUtilsTest$StreamWrapper;)V\n          9: return\n       LineNumberTable:\n         line 42: 0\n         line 43: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -266,15 +266,15 @@\n     RuntimeVisibleAnnotations:\n       0: #19()\n         org.junit.Test\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: invokedynamic #31,  0             // InvokeDynamic #1:wrap:(Lorg/apache/commons/compress/utils/IOUtilsTest;)Lorg/apache/commons/compress/utils/IOUtilsTest$StreamWrapper;\n+         2: invokedynamic #29,  0             // InvokeDynamic #1:wrap:(Lorg/apache/commons/compress/utils/IOUtilsTest;)Lorg/apache/commons/compress/utils/IOUtilsTest$StreamWrapper;\n          7: invokespecial #24                 // Method skip:(Lorg/apache/commons/compress/utils/IOUtilsTest$StreamWrapper;)V\n         10: return\n       LineNumberTable:\n         line 47: 0\n         line 53: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n"}]}
