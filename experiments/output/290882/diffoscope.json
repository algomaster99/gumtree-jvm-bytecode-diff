{"diffoscope-json-version": 1, "source1": "first/HexDump.class", "source2": "second/HexDump.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,123 +1,122 @@\n-  SHA-256 checksum 97abce6bae8a303a9b3c608d960e409170cd976a184a9027c457642841ce7765\n+  SHA-256 checksum d56e989e7dbee80ea477c070acd93a2951cfef5c792440a1421dd599436b406e\n   Compiled from \"HexDump.java\"\n public class org.apache.commons.io.HexDump\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #29                         // org/apache/commons/io/HexDump\n   super_class: #30                        // java/lang/Object\n   interfaces: 0, fields: 3, methods: 5, attributes: 1\n Constant pool:\n-    #1 = Methodref          #30.#52       // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #53           // java/lang/ArrayIndexOutOfBoundsException\n-    #3 = Class              #54           // java/lang/StringBuilder\n-    #4 = Methodref          #3.#52        // java/lang/StringBuilder.\"<init>\":()V\n-    #5 = String             #55           // illegal index:\n-    #6 = Methodref          #3.#56        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-    #7 = Methodref          #3.#57        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-    #8 = String             #58           //  into array of length\n-    #9 = Methodref          #3.#59        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #10 = Methodref          #2.#60        // java/lang/ArrayIndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n-   #11 = Class              #61           // java/lang/IllegalArgumentException\n-   #12 = String             #62           // cannot write to nullstream\n-   #13 = Methodref          #11.#60       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #14 = Methodref          #3.#63        // java/lang/StringBuilder.\"<init>\":(I)V\n-   #15 = Methodref          #29.#64       // org/apache/commons/io/HexDump.dump:(Ljava/lang/StringBuilder;J)Ljava/lang/StringBuilder;\n-   #16 = Methodref          #3.#65        // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-   #17 = Methodref          #29.#66       // org/apache/commons/io/HexDump.dump:(Ljava/lang/StringBuilder;B)Ljava/lang/StringBuilder;\n-   #18 = String             #67           //\n-   #19 = Fieldref           #29.#68       // org/apache/commons/io/HexDump.EOL:Ljava/lang/String;\n-   #20 = Methodref          #69.#70       // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-   #21 = Methodref          #71.#72       // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-   #22 = Methodref          #73.#74       // java/io/OutputStream.write:([B)V\n-   #23 = Methodref          #73.#75       // java/io/OutputStream.flush:()V\n-   #24 = Methodref          #3.#76        // java/lang/StringBuilder.setLength:(I)V\n-   #25 = Fieldref           #29.#77       // org/apache/commons/io/HexDump._hexcodes:[C\n-   #26 = Fieldref           #29.#78       // org/apache/commons/io/HexDump._shifts:[I\n-   #27 = String             #79           // line.separator\n-   #28 = Methodref          #80.#81       // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-   #29 = Class              #82           // org/apache/commons/io/HexDump\n-   #30 = Class              #83           // java/lang/Object\n+    #1 = Methodref          #30.#51       // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #52           // java/lang/ArrayIndexOutOfBoundsException\n+    #3 = Class              #53           // java/lang/StringBuilder\n+    #4 = Methodref          #3.#51        // java/lang/StringBuilder.\"<init>\":()V\n+    #5 = String             #54           // illegal index:\n+    #6 = Methodref          #3.#55        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+    #7 = Methodref          #3.#56        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+    #8 = String             #57           //  into array of length\n+    #9 = Methodref          #3.#58        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #10 = Methodref          #2.#59        // java/lang/ArrayIndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+   #11 = Class              #60           // java/lang/IllegalArgumentException\n+   #12 = String             #61           // cannot write to nullstream\n+   #13 = Methodref          #11.#59       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #14 = Methodref          #3.#62        // java/lang/StringBuilder.\"<init>\":(I)V\n+   #15 = Methodref          #29.#63       // org/apache/commons/io/HexDump.dump:(Ljava/lang/StringBuilder;J)Ljava/lang/StringBuilder;\n+   #16 = Methodref          #3.#64        // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+   #17 = Methodref          #29.#65       // org/apache/commons/io/HexDump.dump:(Ljava/lang/StringBuilder;B)Ljava/lang/StringBuilder;\n+   #18 = String             #66           //\n+   #19 = Fieldref           #29.#67       // org/apache/commons/io/HexDump.EOL:Ljava/lang/String;\n+   #20 = Methodref          #68.#69       // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+   #21 = Methodref          #70.#71       // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+   #22 = Methodref          #72.#73       // java/io/OutputStream.write:([B)V\n+   #23 = Methodref          #72.#74       // java/io/OutputStream.flush:()V\n+   #24 = Methodref          #3.#75        // java/lang/StringBuilder.setLength:(I)V\n+   #25 = Fieldref           #29.#76       // org/apache/commons/io/HexDump._hexcodes:[C\n+   #26 = Fieldref           #29.#77       // org/apache/commons/io/HexDump._shifts:[I\n+   #27 = String             #78           // line.separator\n+   #28 = Methodref          #79.#80       // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+   #29 = Class              #81           // org/apache/commons/io/HexDump\n+   #30 = Class              #82           // java/lang/Object\n    #31 = Utf8               EOL\n    #32 = Utf8               Ljava/lang/String;\n    #33 = Utf8               _hexcodes\n    #34 = Utf8               [C\n    #35 = Utf8               _shifts\n    #36 = Utf8               [I\n    #37 = Utf8               <init>\n    #38 = Utf8               ()V\n    #39 = Utf8               Code\n    #40 = Utf8               LineNumberTable\n    #41 = Utf8               dump\n    #42 = Utf8               ([BJLjava/io/OutputStream;I)V\n    #43 = Utf8               StackMapTable\n-   #44 = Class              #54           // java/lang/StringBuilder\n-   #45 = Utf8               Exceptions\n-   #46 = Class              #84           // java/io/IOException\n-   #47 = Utf8               (Ljava/lang/StringBuilder;J)Ljava/lang/StringBuilder;\n-   #48 = Utf8               (Ljava/lang/StringBuilder;B)Ljava/lang/StringBuilder;\n-   #49 = Utf8               <clinit>\n-   #50 = Utf8               SourceFile\n-   #51 = Utf8               HexDump.java\n-   #52 = NameAndType        #37:#38       // \"<init>\":()V\n-   #53 = Utf8               java/lang/ArrayIndexOutOfBoundsException\n-   #54 = Utf8               java/lang/StringBuilder\n-   #55 = Utf8               illegal index:\n-   #56 = NameAndType        #85:#86       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #57 = NameAndType        #85:#87       // append:(I)Ljava/lang/StringBuilder;\n-   #58 = Utf8                into array of length\n-   #59 = NameAndType        #88:#89       // toString:()Ljava/lang/String;\n-   #60 = NameAndType        #37:#90       // \"<init>\":(Ljava/lang/String;)V\n-   #61 = Utf8               java/lang/IllegalArgumentException\n-   #62 = Utf8               cannot write to nullstream\n-   #63 = NameAndType        #37:#91       // \"<init>\":(I)V\n-   #64 = NameAndType        #41:#47       // dump:(Ljava/lang/StringBuilder;J)Ljava/lang/StringBuilder;\n-   #65 = NameAndType        #85:#92       // append:(C)Ljava/lang/StringBuilder;\n-   #66 = NameAndType        #41:#48       // dump:(Ljava/lang/StringBuilder;B)Ljava/lang/StringBuilder;\n-   #67 = Utf8\n-   #68 = NameAndType        #31:#32       // EOL:Ljava/lang/String;\n-   #69 = Class              #93           // java/nio/charset/Charset\n-   #70 = NameAndType        #94:#95       // defaultCharset:()Ljava/nio/charset/Charset;\n-   #71 = Class              #96           // java/lang/String\n-   #72 = NameAndType        #97:#98       // getBytes:(Ljava/nio/charset/Charset;)[B\n-   #73 = Class              #99           // java/io/OutputStream\n-   #74 = NameAndType        #100:#101     // write:([B)V\n-   #75 = NameAndType        #102:#38      // flush:()V\n-   #76 = NameAndType        #103:#91      // setLength:(I)V\n-   #77 = NameAndType        #33:#34       // _hexcodes:[C\n-   #78 = NameAndType        #35:#36       // _shifts:[I\n-   #79 = Utf8               line.separator\n-   #80 = Class              #104          // java/lang/System\n-   #81 = NameAndType        #105:#106     // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-   #82 = Utf8               org/apache/commons/io/HexDump\n-   #83 = Utf8               java/lang/Object\n-   #84 = Utf8               java/io/IOException\n-   #85 = Utf8               append\n-   #86 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #87 = Utf8               (I)Ljava/lang/StringBuilder;\n-   #88 = Utf8               toString\n-   #89 = Utf8               ()Ljava/lang/String;\n-   #90 = Utf8               (Ljava/lang/String;)V\n-   #91 = Utf8               (I)V\n-   #92 = Utf8               (C)Ljava/lang/StringBuilder;\n-   #93 = Utf8               java/nio/charset/Charset\n-   #94 = Utf8               defaultCharset\n-   #95 = Utf8               ()Ljava/nio/charset/Charset;\n-   #96 = Utf8               java/lang/String\n-   #97 = Utf8               getBytes\n-   #98 = Utf8               (Ljava/nio/charset/Charset;)[B\n-   #99 = Utf8               java/io/OutputStream\n-  #100 = Utf8               write\n-  #101 = Utf8               ([B)V\n-  #102 = Utf8               flush\n-  #103 = Utf8               setLength\n-  #104 = Utf8               java/lang/System\n-  #105 = Utf8               getProperty\n-  #106 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+   #44 = Utf8               Exceptions\n+   #45 = Class              #83           // java/io/IOException\n+   #46 = Utf8               (Ljava/lang/StringBuilder;J)Ljava/lang/StringBuilder;\n+   #47 = Utf8               (Ljava/lang/StringBuilder;B)Ljava/lang/StringBuilder;\n+   #48 = Utf8               <clinit>\n+   #49 = Utf8               SourceFile\n+   #50 = Utf8               HexDump.java\n+   #51 = NameAndType        #37:#38       // \"<init>\":()V\n+   #52 = Utf8               java/lang/ArrayIndexOutOfBoundsException\n+   #53 = Utf8               java/lang/StringBuilder\n+   #54 = Utf8               illegal index:\n+   #55 = NameAndType        #84:#85       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #56 = NameAndType        #84:#86       // append:(I)Ljava/lang/StringBuilder;\n+   #57 = Utf8                into array of length\n+   #58 = NameAndType        #87:#88       // toString:()Ljava/lang/String;\n+   #59 = NameAndType        #37:#89       // \"<init>\":(Ljava/lang/String;)V\n+   #60 = Utf8               java/lang/IllegalArgumentException\n+   #61 = Utf8               cannot write to nullstream\n+   #62 = NameAndType        #37:#90       // \"<init>\":(I)V\n+   #63 = NameAndType        #41:#46       // dump:(Ljava/lang/StringBuilder;J)Ljava/lang/StringBuilder;\n+   #64 = NameAndType        #84:#91       // append:(C)Ljava/lang/StringBuilder;\n+   #65 = NameAndType        #41:#47       // dump:(Ljava/lang/StringBuilder;B)Ljava/lang/StringBuilder;\n+   #66 = Utf8\n+   #67 = NameAndType        #31:#32       // EOL:Ljava/lang/String;\n+   #68 = Class              #92           // java/nio/charset/Charset\n+   #69 = NameAndType        #93:#94       // defaultCharset:()Ljava/nio/charset/Charset;\n+   #70 = Class              #95           // java/lang/String\n+   #71 = NameAndType        #96:#97       // getBytes:(Ljava/nio/charset/Charset;)[B\n+   #72 = Class              #98           // java/io/OutputStream\n+   #73 = NameAndType        #99:#100      // write:([B)V\n+   #74 = NameAndType        #101:#38      // flush:()V\n+   #75 = NameAndType        #102:#90      // setLength:(I)V\n+   #76 = NameAndType        #33:#34       // _hexcodes:[C\n+   #77 = NameAndType        #35:#36       // _shifts:[I\n+   #78 = Utf8               line.separator\n+   #79 = Class              #103          // java/lang/System\n+   #80 = NameAndType        #104:#105     // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+   #81 = Utf8               org/apache/commons/io/HexDump\n+   #82 = Utf8               java/lang/Object\n+   #83 = Utf8               java/io/IOException\n+   #84 = Utf8               append\n+   #85 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #86 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #87 = Utf8               toString\n+   #88 = Utf8               ()Ljava/lang/String;\n+   #89 = Utf8               (Ljava/lang/String;)V\n+   #90 = Utf8               (I)V\n+   #91 = Utf8               (C)Ljava/lang/StringBuilder;\n+   #92 = Utf8               java/nio/charset/Charset\n+   #93 = Utf8               defaultCharset\n+   #94 = Utf8               ()Ljava/nio/charset/Charset;\n+   #95 = Utf8               java/lang/String\n+   #96 = Utf8               getBytes\n+   #97 = Utf8               (Ljava/nio/charset/Charset;)[B\n+   #98 = Utf8               java/io/OutputStream\n+   #99 = Utf8               write\n+  #100 = Utf8               ([B)V\n+  #101 = Utf8               flush\n+  #102 = Utf8               setLength\n+  #103 = Utf8               java/lang/System\n+  #104 = Utf8               getProperty\n+  #105 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n {\n   public static final java.lang.String EOL;\n     descriptor: Ljava/lang/String;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   private static final char[] _hexcodes;\n     descriptor: [C\n"}]}
