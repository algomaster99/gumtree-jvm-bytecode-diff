{"diffoscope-json-version": 1, "source1": "first/ByteQuadsCanonicalizer.class", "source2": "second/ByteQuadsCanonicalizer.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,127 +1,127 @@\n-  SHA-256 checksum 9de0913cb025f7d961c25955ba47a3aa55f9b7ebbc21491d1f82108f20f17cd8\n+  SHA-256 checksum 77317022f345da024634f64010afb2ca97dfe6b4428359b7b7f3a3de3c51612e\n   Compiled from \"ByteQuadsCanonicalizer.java\"\n public final class com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #8                          // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer\n   super_class: #50                        // java/lang/Object\n   interfaces: 0, fields: 22, methods: 49, attributes: 2\n Constant pool:\n-    #1 = Methodref          #50.#277      // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #8.#278       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._parent:Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n-    #3 = Fieldref           #8.#279       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._count:I\n-    #4 = Fieldref           #8.#280       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._hashShared:Z\n-    #5 = Fieldref           #8.#281       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._seed:I\n-    #6 = Fieldref           #8.#282       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._intern:Z\n-    #7 = Fieldref           #8.#283       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._failOnDoS:Z\n-    #8 = Class              #284          // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer\n-    #9 = Class              #285          // java/util/concurrent/atomic/AtomicReference\n-   #10 = Methodref          #32.#286      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.createInitial:(I)Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;\n-   #11 = Methodref          #9.#287       // java/util/concurrent/atomic/AtomicReference.\"<init>\":(Ljava/lang/Object;)V\n-   #12 = Fieldref           #8.#288       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._tableInfo:Ljava/util/concurrent/atomic/AtomicReference;\n-   #13 = Fieldref           #32.#289      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.count:I\n-   #14 = Fieldref           #32.#290      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.size:I\n-   #15 = Fieldref           #8.#291       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._hashSize:I\n-   #16 = Fieldref           #8.#292       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._secondaryStart:I\n-   #17 = Fieldref           #8.#293       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._tertiaryStart:I\n-   #18 = Fieldref           #32.#294      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.tertiaryShift:I\n-   #19 = Fieldref           #8.#295       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._tertiaryShift:I\n-   #20 = Fieldref           #32.#296      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.mainHash:[I\n-   #21 = Fieldref           #8.#297       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._hashArea:[I\n-   #22 = Fieldref           #32.#298      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.names:[Ljava/lang/String;\n-   #23 = Fieldref           #8.#299       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._names:[Ljava/lang/String;\n-   #24 = Fieldref           #32.#300      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.spilloverEnd:I\n-   #25 = Fieldref           #8.#301       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._spilloverEnd:I\n-   #26 = Fieldref           #32.#302      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.longNameOffset:I\n-   #27 = Fieldref           #8.#303       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._longNameOffset:I\n-   #28 = Methodref          #304.#305     // java/lang/System.currentTimeMillis:()J\n-   #29 = Methodref          #8.#306       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.createRoot:(I)Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n-   #30 = Methodref          #8.#307       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.\"<init>\":(II)V\n-   #31 = Methodref          #9.#308       // java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;\n-   #32 = Class              #309          // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo\n-   #33 = Fieldref           #310.#311     // com/fasterxml/jackson/core/JsonFactory$Feature.INTERN_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n-   #34 = Methodref          #310.#312     // com/fasterxml/jackson/core/JsonFactory$Feature.enabledIn:(I)Z\n-   #35 = Fieldref           #310.#313     // com/fasterxml/jackson/core/JsonFactory$Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n-   #36 = Methodref          #8.#314       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.\"<init>\":(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;ZZ)V\n-   #37 = Fieldref           #310.#315     // com/fasterxml/jackson/core/JsonFactory$Feature.CANONICALIZE_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n-   #38 = Methodref          #8.#316       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.\"<init>\":(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;)V\n-   #39 = Methodref          #8.#317       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.maybeDirty:()Z\n-   #40 = Methodref          #32.#318      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.\"<init>\":(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n-   #41 = Methodref          #8.#319       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.mergeChild:(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;)V\n-   #42 = Methodref          #9.#320       // java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #43 = Methodref          #8.#321       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._spilloverStart:()I\n-   #44 = Methodref          #8.#322       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.primaryCount:()I\n-   #45 = Methodref          #8.#323       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.secondaryCount:()I\n-   #46 = Methodref          #8.#324       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.tertiaryCount:()I\n-   #47 = Methodref          #8.#325       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.spilloverCount:()I\n-   #48 = Methodref          #8.#326       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.totalCount:()I\n-   #49 = String             #327          // [%s: size=%d, hashSize=%d, %d/%d/%d/%d pri/sec/ter/spill (=%s), total:%d]\n-   #50 = Class              #328          // java/lang/Object\n-   #51 = Methodref          #50.#329      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #52 = Methodref          #330.#331     // java/lang/Class.getName:()Ljava/lang/String;\n-   #53 = Methodref          #332.#333     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #54 = Methodref          #97.#334      // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #55 = Methodref          #8.#335       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.calcHash:(I)I\n-   #56 = Methodref          #8.#336       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._calcOffset:(I)I\n-   #57 = Methodref          #8.#337       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._findSecondary:(II)Ljava/lang/String;\n-   #58 = Methodref          #8.#338       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.calcHash:(II)I\n-   #59 = Methodref          #8.#339       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._findSecondary:(III)Ljava/lang/String;\n-   #60 = Methodref          #8.#340       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.calcHash:(III)I\n-   #61 = Methodref          #8.#341       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._findSecondary:(IIII)Ljava/lang/String;\n-   #62 = Methodref          #8.#342       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(III)Ljava/lang/String;\n-   #63 = Methodref          #8.#343       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(II)Ljava/lang/String;\n-   #64 = Methodref          #8.#344       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(I)Ljava/lang/String;\n-   #65 = String             #345          //\n-   #66 = Methodref          #8.#346       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.calcHash:([II)I\n-   #67 = Methodref          #8.#347       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._verifyLongName:([III)Z\n-   #68 = Methodref          #8.#348       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._findSecondary:(II[II)Ljava/lang/String;\n-   #69 = Methodref          #8.#349       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._verifyLongName2:([III)Z\n-   #70 = Methodref          #8.#350       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._verifySharing:()V\n-   #71 = Fieldref           #351.#352     // com/fasterxml/jackson/core/util/InternCache.instance:Lcom/fasterxml/jackson/core/util/InternCache;\n-   #72 = Methodref          #351.#353     // com/fasterxml/jackson/core/util/InternCache.intern:(Ljava/lang/String;)Ljava/lang/String;\n-   #73 = Methodref          #8.#354       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._findOffsetForAdd:(I)I\n-   #74 = Methodref          #8.#355       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._appendLongName:([II)I\n-   #75 = Class              #356          // java/lang/IllegalStateException\n-   #76 = String             #357          // Cannot add names to Root symbol table\n-   #77 = Methodref          #75.#358      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #78 = String             #359          // Cannot add names to Placeholder symbol table\n-   #79 = Methodref          #360.#361     // java/util/Arrays.copyOf:([II)[I\n-   #80 = Methodref          #360.#362     // java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;\n+    #1 = Methodref          #50.#274      // java/lang/Object.\"<init>\":()V\n+    #2 = Fieldref           #8.#275       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._parent:Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n+    #3 = Fieldref           #8.#276       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._count:I\n+    #4 = Fieldref           #8.#277       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._hashShared:Z\n+    #5 = Fieldref           #8.#278       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._seed:I\n+    #6 = Fieldref           #8.#279       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._intern:Z\n+    #7 = Fieldref           #8.#280       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._failOnDoS:Z\n+    #8 = Class              #281          // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer\n+    #9 = Class              #282          // java/util/concurrent/atomic/AtomicReference\n+   #10 = Methodref          #32.#283      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.createInitial:(I)Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;\n+   #11 = Methodref          #9.#284       // java/util/concurrent/atomic/AtomicReference.\"<init>\":(Ljava/lang/Object;)V\n+   #12 = Fieldref           #8.#285       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._tableInfo:Ljava/util/concurrent/atomic/AtomicReference;\n+   #13 = Fieldref           #32.#286      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.count:I\n+   #14 = Fieldref           #32.#287      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.size:I\n+   #15 = Fieldref           #8.#288       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._hashSize:I\n+   #16 = Fieldref           #8.#289       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._secondaryStart:I\n+   #17 = Fieldref           #8.#290       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._tertiaryStart:I\n+   #18 = Fieldref           #32.#291      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.tertiaryShift:I\n+   #19 = Fieldref           #8.#292       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._tertiaryShift:I\n+   #20 = Fieldref           #32.#293      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.mainHash:[I\n+   #21 = Fieldref           #8.#294       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._hashArea:[I\n+   #22 = Fieldref           #32.#295      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.names:[Ljava/lang/String;\n+   #23 = Fieldref           #8.#296       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._names:[Ljava/lang/String;\n+   #24 = Fieldref           #32.#297      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.spilloverEnd:I\n+   #25 = Fieldref           #8.#298       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._spilloverEnd:I\n+   #26 = Fieldref           #32.#299      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.longNameOffset:I\n+   #27 = Fieldref           #8.#300       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._longNameOffset:I\n+   #28 = Methodref          #301.#302     // java/lang/System.currentTimeMillis:()J\n+   #29 = Methodref          #8.#303       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.createRoot:(I)Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n+   #30 = Methodref          #8.#304       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.\"<init>\":(II)V\n+   #31 = Methodref          #9.#305       // java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;\n+   #32 = Class              #306          // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo\n+   #33 = Fieldref           #307.#308     // com/fasterxml/jackson/core/JsonFactory$Feature.INTERN_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n+   #34 = Methodref          #307.#309     // com/fasterxml/jackson/core/JsonFactory$Feature.enabledIn:(I)Z\n+   #35 = Fieldref           #307.#310     // com/fasterxml/jackson/core/JsonFactory$Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n+   #36 = Methodref          #8.#311       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.\"<init>\":(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;ZZ)V\n+   #37 = Fieldref           #307.#312     // com/fasterxml/jackson/core/JsonFactory$Feature.CANONICALIZE_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n+   #38 = Methodref          #8.#313       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.\"<init>\":(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;)V\n+   #39 = Methodref          #8.#314       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.maybeDirty:()Z\n+   #40 = Methodref          #32.#315      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.\"<init>\":(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n+   #41 = Methodref          #8.#316       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.mergeChild:(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;)V\n+   #42 = Methodref          #9.#317       // java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #43 = Methodref          #8.#318       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._spilloverStart:()I\n+   #44 = Methodref          #8.#319       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.primaryCount:()I\n+   #45 = Methodref          #8.#320       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.secondaryCount:()I\n+   #46 = Methodref          #8.#321       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.tertiaryCount:()I\n+   #47 = Methodref          #8.#322       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.spilloverCount:()I\n+   #48 = Methodref          #8.#323       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.totalCount:()I\n+   #49 = String             #324          // [%s: size=%d, hashSize=%d, %d/%d/%d/%d pri/sec/ter/spill (=%s), total:%d]\n+   #50 = Class              #325          // java/lang/Object\n+   #51 = Methodref          #50.#326      // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #52 = Methodref          #327.#328     // java/lang/Class.getName:()Ljava/lang/String;\n+   #53 = Methodref          #329.#330     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+   #54 = Methodref          #97.#331      // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #55 = Methodref          #8.#332       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.calcHash:(I)I\n+   #56 = Methodref          #8.#333       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._calcOffset:(I)I\n+   #57 = Methodref          #8.#334       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._findSecondary:(II)Ljava/lang/String;\n+   #58 = Methodref          #8.#335       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.calcHash:(II)I\n+   #59 = Methodref          #8.#336       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._findSecondary:(III)Ljava/lang/String;\n+   #60 = Methodref          #8.#337       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.calcHash:(III)I\n+   #61 = Methodref          #8.#338       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._findSecondary:(IIII)Ljava/lang/String;\n+   #62 = Methodref          #8.#339       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(III)Ljava/lang/String;\n+   #63 = Methodref          #8.#340       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(II)Ljava/lang/String;\n+   #64 = Methodref          #8.#341       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(I)Ljava/lang/String;\n+   #65 = String             #342          //\n+   #66 = Methodref          #8.#343       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.calcHash:([II)I\n+   #67 = Methodref          #8.#344       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._verifyLongName:([III)Z\n+   #68 = Methodref          #8.#345       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._findSecondary:(II[II)Ljava/lang/String;\n+   #69 = Methodref          #8.#346       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._verifyLongName2:([III)Z\n+   #70 = Methodref          #8.#347       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._verifySharing:()V\n+   #71 = Fieldref           #348.#349     // com/fasterxml/jackson/core/util/InternCache.instance:Lcom/fasterxml/jackson/core/util/InternCache;\n+   #72 = Methodref          #348.#350     // com/fasterxml/jackson/core/util/InternCache.intern:(Ljava/lang/String;)Ljava/lang/String;\n+   #73 = Methodref          #8.#351       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._findOffsetForAdd:(I)I\n+   #74 = Methodref          #8.#352       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._appendLongName:([II)I\n+   #75 = Class              #353          // java/lang/IllegalStateException\n+   #76 = String             #354          // Cannot add names to Root symbol table\n+   #77 = Methodref          #75.#355      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #78 = String             #356          // Cannot add names to Placeholder symbol table\n+   #79 = Methodref          #357.#358     // java/util/Arrays.copyOf:([II)[I\n+   #80 = Methodref          #357.#359     // java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;\n    #81 = Class              #141          // \"[Ljava/lang/String;\"\n-   #82 = Methodref          #8.#363       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._checkNeedForRehash:()Z\n-   #83 = Methodref          #8.#364       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._resizeAndFindOffsetForAdd:(I)I\n-   #84 = Methodref          #8.#365       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._reportTooManyCollisions:()V\n-   #85 = Methodref          #8.#366       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.rehash:()V\n+   #82 = Methodref          #8.#360       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._checkNeedForRehash:()Z\n+   #83 = Methodref          #8.#361       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._resizeAndFindOffsetForAdd:(I)I\n+   #84 = Methodref          #8.#362       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._reportTooManyCollisions:()V\n+   #85 = Methodref          #8.#363       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.rehash:()V\n    #86 = Double             0.8d\n-   #88 = Methodref          #367.#368     // java/lang/Math.min:(II)I\n-   #89 = Methodref          #367.#369     // java/lang/Math.max:(II)I\n-   #90 = Methodref          #304.#370     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #91 = Class              #371          // java/lang/IllegalArgumentException\n-   #92 = Methodref          #91.#277      // java/lang/IllegalArgumentException.\"<init>\":()V\n+   #88 = Methodref          #364.#365     // java/lang/Math.min:(II)I\n+   #89 = Methodref          #364.#366     // java/lang/Math.max:(II)I\n+   #90 = Methodref          #301.#367     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #91 = Class              #368          // java/lang/IllegalArgumentException\n+   #92 = Methodref          #91.#274      // java/lang/IllegalArgumentException.\"<init>\":()V\n    #93 = Integer            65599\n    #94 = Integer            65536\n-   #95 = Methodref          #8.#372       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.nukeSymbols:(Z)V\n-   #96 = Methodref          #8.#373       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._calcTertiaryShift:(I)I\n-   #97 = Class              #374          // java/lang/String\n-   #98 = Methodref          #8.#375       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.addName:(Ljava/lang/String;[II)Ljava/lang/String;\n-   #99 = Class              #376          // java/lang/StringBuilder\n-  #100 = Methodref          #99.#277      // java/lang/StringBuilder.\"<init>\":()V\n-  #101 = String             #377          // Failed rehash(): old count=\n-  #102 = Methodref          #99.#378      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #103 = Methodref          #99.#379      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-  #104 = String             #380          // , copyCount=\n-  #105 = Methodref          #99.#381      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #106 = Methodref          #360.#382     // java/util/Arrays.fill:([II)V\n-  #107 = Methodref          #360.#383     // java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V\n-  #108 = String             #384          // Spill-over slots in symbol table with\n-  #109 = String             #385          //  entries, hash area of\n-  #110 = String             #386          //  slots is now full (all\n-  #111 = String             #387          //  slots -- suspect a DoS attack based on hash collisions. You can disable the check via `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`\n+   #95 = Methodref          #8.#369       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.nukeSymbols:(Z)V\n+   #96 = Methodref          #8.#370       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._calcTertiaryShift:(I)I\n+   #97 = Class              #371          // java/lang/String\n+   #98 = Methodref          #8.#372       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.addName:(Ljava/lang/String;[II)Ljava/lang/String;\n+   #99 = Class              #373          // java/lang/StringBuilder\n+  #100 = Methodref          #99.#274      // java/lang/StringBuilder.\"<init>\":()V\n+  #101 = String             #374          // Failed rehash(): old count=\n+  #102 = Methodref          #99.#375      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #103 = Methodref          #99.#376      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #104 = String             #377          // , copyCount=\n+  #105 = Methodref          #99.#378      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #106 = Methodref          #357.#379     // java/util/Arrays.fill:([II)V\n+  #107 = Methodref          #357.#380     // java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V\n+  #108 = String             #381          // Spill-over slots in symbol table with\n+  #109 = String             #382          //  entries, hash area of\n+  #110 = String             #383          //  slots is now full (all\n+  #111 = String             #384          //  slots -- suspect a DoS attack based on hash collisions. You can disable the check via `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`\n   #112 = Utf8               TableInfo\n   #113 = Utf8               InnerClasses\n   #114 = Utf8               DEFAULT_T_SIZE\n   #115 = Utf8               I\n   #116 = Utf8               ConstantValue\n   #117 = Integer            64\n   #118 = Utf8               MAX_T_SIZE\n@@ -162,296 +162,293 @@\n   #153 = Utf8               LineNumberTable\n   #154 = Utf8               LocalVariableTable\n   #155 = Utf8               curr\n   #156 = Utf8               this\n   #157 = Utf8               sz\n   #158 = Utf8               seed\n   #159 = Utf8               StackMapTable\n-  #160 = Class              #284          // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer\n-  #161 = Utf8               (Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;ZZ)V\n-  #162 = Utf8               parent\n-  #163 = Utf8               state\n-  #164 = Utf8               Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;\n-  #165 = Utf8               intern\n-  #166 = Utf8               failOnDoS\n-  #167 = Utf8               (Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;)V\n-  #168 = Utf8               end\n-  #169 = Utf8               createRoot\n-  #170 = Utf8               ()Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n-  #171 = Utf8               now\n-  #172 = Utf8               J\n-  #173 = Utf8               (I)Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n-  #174 = Utf8               makeChild\n-  #175 = Utf8               flags\n-  #176 = Utf8               makeChildOrPlaceholder\n-  #177 = Utf8               release\n-  #178 = Utf8               ()V\n-  #179 = Utf8               mergeChild\n-  #180 = Utf8               childState\n-  #181 = Utf8               childCount\n-  #182 = Utf8               currState\n-  #183 = Class              #309          // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo\n-  #184 = Utf8               size\n-  #185 = Utf8               ()I\n-  #186 = Utf8               bucketCount\n-  #187 = Utf8               maybeDirty\n-  #188 = Utf8               ()Z\n-  #189 = Utf8               hashSeed\n-  #190 = Utf8               isCanonicalizing\n-  #191 = Utf8               primaryCount\n-  #192 = Utf8               offset\n-  #193 = Utf8               count\n-  #194 = Utf8               secondaryCount\n-  #195 = Utf8               tertiaryCount\n-  #196 = Utf8               spilloverCount\n-  #197 = Utf8               totalCount\n-  #198 = Utf8               toString\n-  #199 = Utf8               ()Ljava/lang/String;\n-  #200 = Utf8               pri\n-  #201 = Utf8               sec\n-  #202 = Utf8               tert\n-  #203 = Utf8               spill\n-  #204 = Utf8               total\n-  #205 = Utf8               findName\n-  #206 = Utf8               (I)Ljava/lang/String;\n-  #207 = Utf8               q1\n-  #208 = Utf8               hashArea\n-  #209 = Utf8               len\n-  #210 = Utf8               offset2\n-  #211 = Class              #134          // \"[I\"\n-  #212 = Utf8               (II)Ljava/lang/String;\n-  #213 = Utf8               q2\n-  #214 = Utf8               (III)Ljava/lang/String;\n-  #215 = Utf8               q3\n-  #216 = Utf8               ([II)Ljava/lang/String;\n-  #217 = Utf8               q\n-  #218 = Utf8               qlen\n-  #219 = Utf8               hash\n-  #220 = Utf8               len2\n-  #221 = Utf8               _calcOffset\n-  #222 = Utf8               (I)I\n-  #223 = Utf8               ix\n-  #224 = Utf8               _findSecondary\n-  #225 = Utf8               origOffset\n-  #226 = Utf8               bucketSize\n-  #227 = Utf8               (IIII)Ljava/lang/String;\n-  #228 = Utf8               (II[II)Ljava/lang/String;\n-  #229 = Utf8               _verifyLongName\n-  #230 = Utf8               ([III)Z\n-  #231 = Utf8               spillOffset\n-  #232 = Utf8               _verifyLongName2\n-  #233 = Utf8               addName\n-  #234 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;\n-  #235 = Utf8               name\n-  #236 = Utf8               Ljava/lang/String;\n-  #237 = Utf8               (Ljava/lang/String;II)Ljava/lang/String;\n-  #238 = Utf8               (Ljava/lang/String;III)Ljava/lang/String;\n-  #239 = Utf8               (Ljava/lang/String;[II)Ljava/lang/String;\n-  #240 = Utf8               longStart\n-  #241 = Utf8               _verifySharing\n-  #242 = Utf8               _findOffsetForAdd\n-  #243 = Utf8               _resizeAndFindOffsetForAdd\n-  #244 = Utf8               _checkNeedForRehash\n-  #245 = Utf8               spillCount\n-  #246 = Utf8               _appendLongName\n-  #247 = Utf8               ([II)I\n-  #248 = Utf8               toAdd\n-  #249 = Utf8               minAdd\n-  #250 = Utf8               newSize\n-  #251 = Utf8               quads\n-  #252 = Utf8               start\n-  #253 = Utf8               calcHash\n-  #254 = Utf8               (II)I\n-  #255 = Utf8               (III)I\n-  #256 = Utf8               next\n-  #257 = Utf8               i\n-  #258 = Utf8               rehash\n-  #259 = Utf8               qoff\n-  #260 = Utf8               oldHashArea\n-  #261 = Utf8               oldNames\n-  #262 = Utf8               oldSize\n-  #263 = Utf8               oldCount\n-  #264 = Utf8               oldEnd\n-  #265 = Utf8               copyCount\n-  #266 = Class              #374          // java/lang/String\n-  #267 = Utf8               nukeSymbols\n-  #268 = Utf8               (Z)V\n-  #269 = Utf8               fill\n-  #270 = Utf8               _spilloverStart\n-  #271 = Utf8               _reportTooManyCollisions\n-  #272 = Utf8               _calcTertiaryShift\n-  #273 = Utf8               primarySlots\n-  #274 = Utf8               tertSlots\n-  #275 = Utf8               SourceFile\n-  #276 = Utf8               ByteQuadsCanonicalizer.java\n-  #277 = NameAndType        #150:#178     // \"<init>\":()V\n-  #278 = NameAndType        #123:#124     // _parent:Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n-  #279 = NameAndType        #139:#115     // _count:I\n-  #280 = NameAndType        #144:#131     // _hashShared:Z\n-  #281 = NameAndType        #129:#115     // _seed:I\n-  #282 = NameAndType        #130:#131     // _intern:Z\n-  #283 = NameAndType        #132:#131     // _failOnDoS:Z\n-  #284 = Utf8               com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer\n-  #285 = Utf8               java/util/concurrent/atomic/AtomicReference\n-  #286 = NameAndType        #388:#389     // createInitial:(I)Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;\n-  #287 = NameAndType        #150:#390     // \"<init>\":(Ljava/lang/Object;)V\n-  #288 = NameAndType        #125:#126     // _tableInfo:Ljava/util/concurrent/atomic/AtomicReference;\n-  #289 = NameAndType        #193:#115     // count:I\n-  #290 = NameAndType        #184:#115     // size:I\n-  #291 = NameAndType        #135:#115     // _hashSize:I\n-  #292 = NameAndType        #136:#115     // _secondaryStart:I\n-  #293 = NameAndType        #137:#115     // _tertiaryStart:I\n-  #294 = NameAndType        #391:#115     // tertiaryShift:I\n-  #295 = NameAndType        #138:#115     // _tertiaryShift:I\n-  #296 = NameAndType        #392:#134     // mainHash:[I\n-  #297 = NameAndType        #133:#134     // _hashArea:[I\n-  #298 = NameAndType        #393:#141     // names:[Ljava/lang/String;\n-  #299 = NameAndType        #140:#141     // _names:[Ljava/lang/String;\n-  #300 = NameAndType        #394:#115     // spilloverEnd:I\n-  #301 = NameAndType        #142:#115     // _spilloverEnd:I\n-  #302 = NameAndType        #395:#115     // longNameOffset:I\n-  #303 = NameAndType        #143:#115     // _longNameOffset:I\n-  #304 = Class              #396          // java/lang/System\n-  #305 = NameAndType        #397:#398     // currentTimeMillis:()J\n-  #306 = NameAndType        #169:#173     // createRoot:(I)Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n-  #307 = NameAndType        #150:#151     // \"<init>\":(II)V\n-  #308 = NameAndType        #399:#400     // get:()Ljava/lang/Object;\n-  #309 = Utf8               com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo\n-  #310 = Class              #402          // com/fasterxml/jackson/core/JsonFactory$Feature\n-  #311 = NameAndType        #404:#405     // INTERN_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n-  #312 = NameAndType        #406:#407     // enabledIn:(I)Z\n-  #313 = NameAndType        #408:#405     // FAIL_ON_SYMBOL_HASH_OVERFLOW:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n-  #314 = NameAndType        #150:#161     // \"<init>\":(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;ZZ)V\n-  #315 = NameAndType        #409:#405     // CANONICALIZE_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n-  #316 = NameAndType        #150:#167     // \"<init>\":(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;)V\n-  #317 = NameAndType        #187:#188     // maybeDirty:()Z\n-  #318 = NameAndType        #150:#410     // \"<init>\":(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n-  #319 = NameAndType        #179:#167     // mergeChild:(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;)V\n-  #320 = NameAndType        #411:#412     // compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #321 = NameAndType        #270:#185     // _spilloverStart:()I\n-  #322 = NameAndType        #191:#185     // primaryCount:()I\n-  #323 = NameAndType        #194:#185     // secondaryCount:()I\n-  #324 = NameAndType        #195:#185     // tertiaryCount:()I\n-  #325 = NameAndType        #196:#185     // spilloverCount:()I\n-  #326 = NameAndType        #197:#185     // totalCount:()I\n-  #327 = Utf8               [%s: size=%d, hashSize=%d, %d/%d/%d/%d pri/sec/ter/spill (=%s), total:%d]\n-  #328 = Utf8               java/lang/Object\n-  #329 = NameAndType        #413:#414     // getClass:()Ljava/lang/Class;\n-  #330 = Class              #415          // java/lang/Class\n-  #331 = NameAndType        #416:#199     // getName:()Ljava/lang/String;\n-  #332 = Class              #417          // java/lang/Integer\n-  #333 = NameAndType        #418:#419     // valueOf:(I)Ljava/lang/Integer;\n-  #334 = NameAndType        #420:#421     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #335 = NameAndType        #253:#222     // calcHash:(I)I\n-  #336 = NameAndType        #221:#222     // _calcOffset:(I)I\n-  #337 = NameAndType        #224:#212     // _findSecondary:(II)Ljava/lang/String;\n-  #338 = NameAndType        #253:#254     // calcHash:(II)I\n-  #339 = NameAndType        #224:#214     // _findSecondary:(III)Ljava/lang/String;\n-  #340 = NameAndType        #253:#255     // calcHash:(III)I\n-  #341 = NameAndType        #224:#227     // _findSecondary:(IIII)Ljava/lang/String;\n-  #342 = NameAndType        #205:#214     // findName:(III)Ljava/lang/String;\n-  #343 = NameAndType        #205:#212     // findName:(II)Ljava/lang/String;\n-  #344 = NameAndType        #205:#206     // findName:(I)Ljava/lang/String;\n-  #345 = Utf8\n-  #346 = NameAndType        #253:#247     // calcHash:([II)I\n-  #347 = NameAndType        #229:#230     // _verifyLongName:([III)Z\n-  #348 = NameAndType        #224:#228     // _findSecondary:(II[II)Ljava/lang/String;\n-  #349 = NameAndType        #232:#230     // _verifyLongName2:([III)Z\n-  #350 = NameAndType        #241:#178     // _verifySharing:()V\n-  #351 = Class              #422          // com/fasterxml/jackson/core/util/InternCache\n-  #352 = NameAndType        #423:#424     // instance:Lcom/fasterxml/jackson/core/util/InternCache;\n-  #353 = NameAndType        #165:#425     // intern:(Ljava/lang/String;)Ljava/lang/String;\n-  #354 = NameAndType        #242:#222     // _findOffsetForAdd:(I)I\n-  #355 = NameAndType        #246:#247     // _appendLongName:([II)I\n-  #356 = Utf8               java/lang/IllegalStateException\n-  #357 = Utf8               Cannot add names to Root symbol table\n-  #358 = NameAndType        #150:#426     // \"<init>\":(Ljava/lang/String;)V\n-  #359 = Utf8               Cannot add names to Placeholder symbol table\n-  #360 = Class              #427          // java/util/Arrays\n-  #361 = NameAndType        #428:#429     // copyOf:([II)[I\n-  #362 = NameAndType        #428:#430     // copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;\n-  #363 = NameAndType        #244:#188     // _checkNeedForRehash:()Z\n-  #364 = NameAndType        #243:#222     // _resizeAndFindOffsetForAdd:(I)I\n-  #365 = NameAndType        #271:#178     // _reportTooManyCollisions:()V\n-  #366 = NameAndType        #258:#178     // rehash:()V\n-  #367 = Class              #431          // java/lang/Math\n-  #368 = NameAndType        #432:#254     // min:(II)I\n-  #369 = NameAndType        #433:#254     // max:(II)I\n-  #370 = NameAndType        #434:#435     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #371 = Utf8               java/lang/IllegalArgumentException\n-  #372 = NameAndType        #267:#268     // nukeSymbols:(Z)V\n-  #373 = NameAndType        #272:#222     // _calcTertiaryShift:(I)I\n-  #374 = Utf8               java/lang/String\n-  #375 = NameAndType        #233:#239     // addName:(Ljava/lang/String;[II)Ljava/lang/String;\n-  #376 = Utf8               java/lang/StringBuilder\n-  #377 = Utf8               Failed rehash(): old count=\n-  #378 = NameAndType        #436:#437     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #379 = NameAndType        #436:#438     // append:(I)Ljava/lang/StringBuilder;\n-  #380 = Utf8               , copyCount=\n-  #381 = NameAndType        #198:#199     // toString:()Ljava/lang/String;\n-  #382 = NameAndType        #269:#439     // fill:([II)V\n-  #383 = NameAndType        #269:#440     // fill:([Ljava/lang/Object;Ljava/lang/Object;)V\n-  #384 = Utf8               Spill-over slots in symbol table with\n-  #385 = Utf8                entries, hash area of\n-  #386 = Utf8                slots is now full (all\n-  #387 = Utf8                slots -- suspect a DoS attack based on hash collisions. You can disable the check via `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`\n-  #388 = Utf8               createInitial\n-  #389 = Utf8               (I)Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;\n-  #390 = Utf8               (Ljava/lang/Object;)V\n-  #391 = Utf8               tertiaryShift\n-  #392 = Utf8               mainHash\n-  #393 = Utf8               names\n-  #394 = Utf8               spilloverEnd\n-  #395 = Utf8               longNameOffset\n-  #396 = Utf8               java/lang/System\n-  #397 = Utf8               currentTimeMillis\n-  #398 = Utf8               ()J\n-  #399 = Utf8               get\n-  #400 = Utf8               ()Ljava/lang/Object;\n-  #401 = Class              #441          // com/fasterxml/jackson/core/JsonFactory\n-  #402 = Utf8               com/fasterxml/jackson/core/JsonFactory$Feature\n-  #403 = Utf8               Feature\n-  #404 = Utf8               INTERN_FIELD_NAMES\n-  #405 = Utf8               Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n-  #406 = Utf8               enabledIn\n-  #407 = Utf8               (I)Z\n-  #408 = Utf8               FAIL_ON_SYMBOL_HASH_OVERFLOW\n-  #409 = Utf8               CANONICALIZE_FIELD_NAMES\n-  #410 = Utf8               (Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n-  #411 = Utf8               compareAndSet\n-  #412 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #413 = Utf8               getClass\n-  #414 = Utf8               ()Ljava/lang/Class;\n-  #415 = Utf8               java/lang/Class\n-  #416 = Utf8               getName\n-  #417 = Utf8               java/lang/Integer\n-  #418 = Utf8               valueOf\n-  #419 = Utf8               (I)Ljava/lang/Integer;\n-  #420 = Utf8               format\n-  #421 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #422 = Utf8               com/fasterxml/jackson/core/util/InternCache\n-  #423 = Utf8               instance\n-  #424 = Utf8               Lcom/fasterxml/jackson/core/util/InternCache;\n-  #425 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #426 = Utf8               (Ljava/lang/String;)V\n-  #427 = Utf8               java/util/Arrays\n-  #428 = Utf8               copyOf\n-  #429 = Utf8               ([II)[I\n-  #430 = Utf8               ([Ljava/lang/Object;I)[Ljava/lang/Object;\n-  #431 = Utf8               java/lang/Math\n-  #432 = Utf8               min\n-  #433 = Utf8               max\n-  #434 = Utf8               arraycopy\n-  #435 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #436 = Utf8               append\n-  #437 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #438 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #439 = Utf8               ([II)V\n-  #440 = Utf8               ([Ljava/lang/Object;Ljava/lang/Object;)V\n-  #441 = Utf8               com/fasterxml/jackson/core/JsonFactory\n+  #160 = Utf8               (Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;ZZ)V\n+  #161 = Utf8               parent\n+  #162 = Utf8               state\n+  #163 = Utf8               Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;\n+  #164 = Utf8               intern\n+  #165 = Utf8               failOnDoS\n+  #166 = Utf8               (Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;)V\n+  #167 = Utf8               end\n+  #168 = Utf8               createRoot\n+  #169 = Utf8               ()Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n+  #170 = Utf8               now\n+  #171 = Utf8               J\n+  #172 = Utf8               (I)Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n+  #173 = Utf8               makeChild\n+  #174 = Utf8               flags\n+  #175 = Utf8               makeChildOrPlaceholder\n+  #176 = Utf8               release\n+  #177 = Utf8               ()V\n+  #178 = Utf8               mergeChild\n+  #179 = Utf8               childState\n+  #180 = Utf8               childCount\n+  #181 = Utf8               currState\n+  #182 = Utf8               size\n+  #183 = Utf8               ()I\n+  #184 = Utf8               bucketCount\n+  #185 = Utf8               maybeDirty\n+  #186 = Utf8               ()Z\n+  #187 = Utf8               hashSeed\n+  #188 = Utf8               isCanonicalizing\n+  #189 = Utf8               primaryCount\n+  #190 = Utf8               offset\n+  #191 = Utf8               count\n+  #192 = Utf8               secondaryCount\n+  #193 = Utf8               tertiaryCount\n+  #194 = Utf8               spilloverCount\n+  #195 = Utf8               totalCount\n+  #196 = Utf8               toString\n+  #197 = Utf8               ()Ljava/lang/String;\n+  #198 = Utf8               pri\n+  #199 = Utf8               sec\n+  #200 = Utf8               tert\n+  #201 = Utf8               spill\n+  #202 = Utf8               total\n+  #203 = Utf8               findName\n+  #204 = Utf8               (I)Ljava/lang/String;\n+  #205 = Utf8               q1\n+  #206 = Utf8               hashArea\n+  #207 = Utf8               len\n+  #208 = Utf8               offset2\n+  #209 = Class              #134          // \"[I\"\n+  #210 = Utf8               (II)Ljava/lang/String;\n+  #211 = Utf8               q2\n+  #212 = Utf8               (III)Ljava/lang/String;\n+  #213 = Utf8               q3\n+  #214 = Utf8               ([II)Ljava/lang/String;\n+  #215 = Utf8               q\n+  #216 = Utf8               qlen\n+  #217 = Utf8               hash\n+  #218 = Utf8               len2\n+  #219 = Utf8               _calcOffset\n+  #220 = Utf8               (I)I\n+  #221 = Utf8               ix\n+  #222 = Utf8               _findSecondary\n+  #223 = Utf8               origOffset\n+  #224 = Utf8               bucketSize\n+  #225 = Utf8               (IIII)Ljava/lang/String;\n+  #226 = Utf8               (II[II)Ljava/lang/String;\n+  #227 = Utf8               _verifyLongName\n+  #228 = Utf8               ([III)Z\n+  #229 = Utf8               spillOffset\n+  #230 = Utf8               _verifyLongName2\n+  #231 = Utf8               addName\n+  #232 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;\n+  #233 = Utf8               name\n+  #234 = Utf8               Ljava/lang/String;\n+  #235 = Utf8               (Ljava/lang/String;II)Ljava/lang/String;\n+  #236 = Utf8               (Ljava/lang/String;III)Ljava/lang/String;\n+  #237 = Utf8               (Ljava/lang/String;[II)Ljava/lang/String;\n+  #238 = Utf8               longStart\n+  #239 = Utf8               _verifySharing\n+  #240 = Utf8               _findOffsetForAdd\n+  #241 = Utf8               _resizeAndFindOffsetForAdd\n+  #242 = Utf8               _checkNeedForRehash\n+  #243 = Utf8               spillCount\n+  #244 = Utf8               _appendLongName\n+  #245 = Utf8               ([II)I\n+  #246 = Utf8               toAdd\n+  #247 = Utf8               minAdd\n+  #248 = Utf8               newSize\n+  #249 = Utf8               quads\n+  #250 = Utf8               start\n+  #251 = Utf8               calcHash\n+  #252 = Utf8               (II)I\n+  #253 = Utf8               (III)I\n+  #254 = Utf8               next\n+  #255 = Utf8               i\n+  #256 = Utf8               rehash\n+  #257 = Utf8               qoff\n+  #258 = Utf8               oldHashArea\n+  #259 = Utf8               oldNames\n+  #260 = Utf8               oldSize\n+  #261 = Utf8               oldCount\n+  #262 = Utf8               oldEnd\n+  #263 = Utf8               copyCount\n+  #264 = Utf8               nukeSymbols\n+  #265 = Utf8               (Z)V\n+  #266 = Utf8               fill\n+  #267 = Utf8               _spilloverStart\n+  #268 = Utf8               _reportTooManyCollisions\n+  #269 = Utf8               _calcTertiaryShift\n+  #270 = Utf8               primarySlots\n+  #271 = Utf8               tertSlots\n+  #272 = Utf8               SourceFile\n+  #273 = Utf8               ByteQuadsCanonicalizer.java\n+  #274 = NameAndType        #150:#177     // \"<init>\":()V\n+  #275 = NameAndType        #123:#124     // _parent:Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n+  #276 = NameAndType        #139:#115     // _count:I\n+  #277 = NameAndType        #144:#131     // _hashShared:Z\n+  #278 = NameAndType        #129:#115     // _seed:I\n+  #279 = NameAndType        #130:#131     // _intern:Z\n+  #280 = NameAndType        #132:#131     // _failOnDoS:Z\n+  #281 = Utf8               com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer\n+  #282 = Utf8               java/util/concurrent/atomic/AtomicReference\n+  #283 = NameAndType        #385:#386     // createInitial:(I)Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;\n+  #284 = NameAndType        #150:#387     // \"<init>\":(Ljava/lang/Object;)V\n+  #285 = NameAndType        #125:#126     // _tableInfo:Ljava/util/concurrent/atomic/AtomicReference;\n+  #286 = NameAndType        #191:#115     // count:I\n+  #287 = NameAndType        #182:#115     // size:I\n+  #288 = NameAndType        #135:#115     // _hashSize:I\n+  #289 = NameAndType        #136:#115     // _secondaryStart:I\n+  #290 = NameAndType        #137:#115     // _tertiaryStart:I\n+  #291 = NameAndType        #388:#115     // tertiaryShift:I\n+  #292 = NameAndType        #138:#115     // _tertiaryShift:I\n+  #293 = NameAndType        #389:#134     // mainHash:[I\n+  #294 = NameAndType        #133:#134     // _hashArea:[I\n+  #295 = NameAndType        #390:#141     // names:[Ljava/lang/String;\n+  #296 = NameAndType        #140:#141     // _names:[Ljava/lang/String;\n+  #297 = NameAndType        #391:#115     // spilloverEnd:I\n+  #298 = NameAndType        #142:#115     // _spilloverEnd:I\n+  #299 = NameAndType        #392:#115     // longNameOffset:I\n+  #300 = NameAndType        #143:#115     // _longNameOffset:I\n+  #301 = Class              #393          // java/lang/System\n+  #302 = NameAndType        #394:#395     // currentTimeMillis:()J\n+  #303 = NameAndType        #168:#172     // createRoot:(I)Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n+  #304 = NameAndType        #150:#151     // \"<init>\":(II)V\n+  #305 = NameAndType        #396:#397     // get:()Ljava/lang/Object;\n+  #306 = Utf8               com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo\n+  #307 = Class              #399          // com/fasterxml/jackson/core/JsonFactory$Feature\n+  #308 = NameAndType        #401:#402     // INTERN_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n+  #309 = NameAndType        #403:#404     // enabledIn:(I)Z\n+  #310 = NameAndType        #405:#402     // FAIL_ON_SYMBOL_HASH_OVERFLOW:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n+  #311 = NameAndType        #150:#160     // \"<init>\":(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;ZZ)V\n+  #312 = NameAndType        #406:#402     // CANONICALIZE_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n+  #313 = NameAndType        #150:#166     // \"<init>\":(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;)V\n+  #314 = NameAndType        #185:#186     // maybeDirty:()Z\n+  #315 = NameAndType        #150:#407     // \"<init>\":(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n+  #316 = NameAndType        #178:#166     // mergeChild:(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;)V\n+  #317 = NameAndType        #408:#409     // compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #318 = NameAndType        #267:#183     // _spilloverStart:()I\n+  #319 = NameAndType        #189:#183     // primaryCount:()I\n+  #320 = NameAndType        #192:#183     // secondaryCount:()I\n+  #321 = NameAndType        #193:#183     // tertiaryCount:()I\n+  #322 = NameAndType        #194:#183     // spilloverCount:()I\n+  #323 = NameAndType        #195:#183     // totalCount:()I\n+  #324 = Utf8               [%s: size=%d, hashSize=%d, %d/%d/%d/%d pri/sec/ter/spill (=%s), total:%d]\n+  #325 = Utf8               java/lang/Object\n+  #326 = NameAndType        #410:#411     // getClass:()Ljava/lang/Class;\n+  #327 = Class              #412          // java/lang/Class\n+  #328 = NameAndType        #413:#197     // getName:()Ljava/lang/String;\n+  #329 = Class              #414          // java/lang/Integer\n+  #330 = NameAndType        #415:#416     // valueOf:(I)Ljava/lang/Integer;\n+  #331 = NameAndType        #417:#418     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #332 = NameAndType        #251:#220     // calcHash:(I)I\n+  #333 = NameAndType        #219:#220     // _calcOffset:(I)I\n+  #334 = NameAndType        #222:#210     // _findSecondary:(II)Ljava/lang/String;\n+  #335 = NameAndType        #251:#252     // calcHash:(II)I\n+  #336 = NameAndType        #222:#212     // _findSecondary:(III)Ljava/lang/String;\n+  #337 = NameAndType        #251:#253     // calcHash:(III)I\n+  #338 = NameAndType        #222:#225     // _findSecondary:(IIII)Ljava/lang/String;\n+  #339 = NameAndType        #203:#212     // findName:(III)Ljava/lang/String;\n+  #340 = NameAndType        #203:#210     // findName:(II)Ljava/lang/String;\n+  #341 = NameAndType        #203:#204     // findName:(I)Ljava/lang/String;\n+  #342 = Utf8\n+  #343 = NameAndType        #251:#245     // calcHash:([II)I\n+  #344 = NameAndType        #227:#228     // _verifyLongName:([III)Z\n+  #345 = NameAndType        #222:#226     // _findSecondary:(II[II)Ljava/lang/String;\n+  #346 = NameAndType        #230:#228     // _verifyLongName2:([III)Z\n+  #347 = NameAndType        #239:#177     // _verifySharing:()V\n+  #348 = Class              #419          // com/fasterxml/jackson/core/util/InternCache\n+  #349 = NameAndType        #420:#421     // instance:Lcom/fasterxml/jackson/core/util/InternCache;\n+  #350 = NameAndType        #164:#422     // intern:(Ljava/lang/String;)Ljava/lang/String;\n+  #351 = NameAndType        #240:#220     // _findOffsetForAdd:(I)I\n+  #352 = NameAndType        #244:#245     // _appendLongName:([II)I\n+  #353 = Utf8               java/lang/IllegalStateException\n+  #354 = Utf8               Cannot add names to Root symbol table\n+  #355 = NameAndType        #150:#423     // \"<init>\":(Ljava/lang/String;)V\n+  #356 = Utf8               Cannot add names to Placeholder symbol table\n+  #357 = Class              #424          // java/util/Arrays\n+  #358 = NameAndType        #425:#426     // copyOf:([II)[I\n+  #359 = NameAndType        #425:#427     // copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;\n+  #360 = NameAndType        #242:#186     // _checkNeedForRehash:()Z\n+  #361 = NameAndType        #241:#220     // _resizeAndFindOffsetForAdd:(I)I\n+  #362 = NameAndType        #268:#177     // _reportTooManyCollisions:()V\n+  #363 = NameAndType        #256:#177     // rehash:()V\n+  #364 = Class              #428          // java/lang/Math\n+  #365 = NameAndType        #429:#252     // min:(II)I\n+  #366 = NameAndType        #430:#252     // max:(II)I\n+  #367 = NameAndType        #431:#432     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #368 = Utf8               java/lang/IllegalArgumentException\n+  #369 = NameAndType        #264:#265     // nukeSymbols:(Z)V\n+  #370 = NameAndType        #269:#220     // _calcTertiaryShift:(I)I\n+  #371 = Utf8               java/lang/String\n+  #372 = NameAndType        #231:#237     // addName:(Ljava/lang/String;[II)Ljava/lang/String;\n+  #373 = Utf8               java/lang/StringBuilder\n+  #374 = Utf8               Failed rehash(): old count=\n+  #375 = NameAndType        #433:#434     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #376 = NameAndType        #433:#435     // append:(I)Ljava/lang/StringBuilder;\n+  #377 = Utf8               , copyCount=\n+  #378 = NameAndType        #196:#197     // toString:()Ljava/lang/String;\n+  #379 = NameAndType        #266:#436     // fill:([II)V\n+  #380 = NameAndType        #266:#437     // fill:([Ljava/lang/Object;Ljava/lang/Object;)V\n+  #381 = Utf8               Spill-over slots in symbol table with\n+  #382 = Utf8                entries, hash area of\n+  #383 = Utf8                slots is now full (all\n+  #384 = Utf8                slots -- suspect a DoS attack based on hash collisions. You can disable the check via `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`\n+  #385 = Utf8               createInitial\n+  #386 = Utf8               (I)Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;\n+  #387 = Utf8               (Ljava/lang/Object;)V\n+  #388 = Utf8               tertiaryShift\n+  #389 = Utf8               mainHash\n+  #390 = Utf8               names\n+  #391 = Utf8               spilloverEnd\n+  #392 = Utf8               longNameOffset\n+  #393 = Utf8               java/lang/System\n+  #394 = Utf8               currentTimeMillis\n+  #395 = Utf8               ()J\n+  #396 = Utf8               get\n+  #397 = Utf8               ()Ljava/lang/Object;\n+  #398 = Class              #438          // com/fasterxml/jackson/core/JsonFactory\n+  #399 = Utf8               com/fasterxml/jackson/core/JsonFactory$Feature\n+  #400 = Utf8               Feature\n+  #401 = Utf8               INTERN_FIELD_NAMES\n+  #402 = Utf8               Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n+  #403 = Utf8               enabledIn\n+  #404 = Utf8               (I)Z\n+  #405 = Utf8               FAIL_ON_SYMBOL_HASH_OVERFLOW\n+  #406 = Utf8               CANONICALIZE_FIELD_NAMES\n+  #407 = Utf8               (Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n+  #408 = Utf8               compareAndSet\n+  #409 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #410 = Utf8               getClass\n+  #411 = Utf8               ()Ljava/lang/Class;\n+  #412 = Utf8               java/lang/Class\n+  #413 = Utf8               getName\n+  #414 = Utf8               java/lang/Integer\n+  #415 = Utf8               valueOf\n+  #416 = Utf8               (I)Ljava/lang/Integer;\n+  #417 = Utf8               format\n+  #418 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #419 = Utf8               com/fasterxml/jackson/core/util/InternCache\n+  #420 = Utf8               instance\n+  #421 = Utf8               Lcom/fasterxml/jackson/core/util/InternCache;\n+  #422 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #423 = Utf8               (Ljava/lang/String;)V\n+  #424 = Utf8               java/util/Arrays\n+  #425 = Utf8               copyOf\n+  #426 = Utf8               ([II)[I\n+  #427 = Utf8               ([Ljava/lang/Object;I)[Ljava/lang/Object;\n+  #428 = Utf8               java/lang/Math\n+  #429 = Utf8               min\n+  #430 = Utf8               max\n+  #431 = Utf8               arraycopy\n+  #432 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #433 = Utf8               append\n+  #434 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #435 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #436 = Utf8               ([II)V\n+  #437 = Utf8               ([Ljava/lang/Object;Ljava/lang/Object;)V\n+  #438 = Utf8               com/fasterxml/jackson/core/JsonFactory\n {\n   private static final int DEFAULT_T_SIZE = 64;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 64\n \n   private static final int MAX_T_SIZE = 65536;\n@@ -4563,8 +4560,8 @@\n           locals = [ int ]\n         frame_type = 8 /* same */\n         frame_type = 9 /* same */\n }\n SourceFile: \"ByteQuadsCanonicalizer.java\"\n InnerClasses:\n   private static final #112= #32 of #8;   // TableInfo=class com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo of class com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer\n-  public static final #403= #310 of #401; // Feature=class com/fasterxml/jackson/core/JsonFactory$Feature of class com/fasterxml/jackson/core/JsonFactory\n+  public static final #400= #307 of #398; // Feature=class com/fasterxml/jackson/core/JsonFactory$Feature of class com/fasterxml/jackson/core/JsonFactory\n"}]}
