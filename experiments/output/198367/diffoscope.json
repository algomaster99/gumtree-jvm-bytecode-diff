{"diffoscope-json-version": 1, "source1": "first/ClassSet.class", "source2": "second/ClassSet.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -10,35 +10,35 @@\n {\n     private final Map<String, JavaClass> map;\n     \n     public ClassSet() {\n         this.map = new HashMap<String, JavaClass>();\n     }\n     \n-    public boolean add(final JavaClass clazz) {\n-        boolean result = false;\n-        if (!this.map.containsKey(clazz.getClassName())) {\n-            result = true;\n-            this.map.put(clazz.getClassName(), clazz);\n+    public boolean add(final JavaClass javaClass) {\n+        boolean b = false;\n+        if (!this.map.containsKey(javaClass.getClassName())) {\n+            b = true;\n+            this.map.put(javaClass.getClassName(), javaClass);\n         }\n-        return result;\n+        return b;\n     }\n     \n-    public void remove(final JavaClass clazz) {\n-        this.map.remove(clazz.getClassName());\n+    public void remove(final JavaClass javaClass) {\n+        this.map.remove(javaClass.getClassName());\n     }\n     \n     public boolean empty() {\n         return this.map.isEmpty();\n     }\n     \n     public JavaClass[] toArray() {\n         final Collection<JavaClass> values = this.map.values();\n-        final JavaClass[] classes = new JavaClass[values.size()];\n-        values.toArray(classes);\n-        return classes;\n+        final JavaClass[] array = new JavaClass[values.size()];\n+        values.toArray(array);\n+        return array;\n     }\n     \n     public String[] getClassNames() {\n         return this.map.keySet().toArray(new String[this.map.size()]);\n     }\n }\n"}]}
