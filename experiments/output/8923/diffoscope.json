{"diffoscope-json-version": 1, "source1": "first/DigestUtils.class", "source2": "second/DigestUtils.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -447,26 +447,17 @@\n     \n     public static MessageDigest updateDigest(final MessageDigest messageDigest, final ByteBuffer valueToDigest) {\n         messageDigest.update(valueToDigest);\n         return messageDigest;\n     }\n     \n     public static MessageDigest updateDigest(final MessageDigest digest, final File data) throws IOException {\n-        final BufferedInputStream inputStream = new BufferedInputStream(new FileInputStream(data));\n-        Throwable x0 = null;\n-        try {\n+        try (final BufferedInputStream inputStream = new BufferedInputStream(new FileInputStream(data))) {\n             return updateDigest(digest, inputStream);\n         }\n-        catch (final Throwable t) {\n-            x0 = t;\n-            throw t;\n-        }\n-        finally {\n-            $closeResource(x0, inputStream);\n-        }\n     }\n     \n     private static MessageDigest updateDigest(final MessageDigest digest, final FileChannel data) throws IOException {\n         final ByteBuffer buffer = ByteBuffer.allocate(1024);\n         while (data.read(buffer) > 0) {\n             buffer.flip();\n             digest.update(buffer);\n@@ -480,26 +471,17 @@\n         for (int read = inputStream.read(buffer, 0, 1024); read > -1; read = inputStream.read(buffer, 0, 1024)) {\n             digest.update(buffer, 0, read);\n         }\n         return digest;\n     }\n     \n     public static MessageDigest updateDigest(final MessageDigest digest, final Path path, final OpenOption... options) throws IOException {\n-        final BufferedInputStream inputStream = new BufferedInputStream(Files.newInputStream(path, options));\n-        Throwable x0 = null;\n-        try {\n+        try (final BufferedInputStream inputStream = new BufferedInputStream(Files.newInputStream(path, options))) {\n             return updateDigest(digest, inputStream);\n         }\n-        catch (final Throwable t) {\n-            x0 = t;\n-            throw t;\n-        }\n-        finally {\n-            $closeResource(x0, inputStream);\n-        }\n     }\n     \n     public static MessageDigest updateDigest(final MessageDigest digest, final RandomAccessFile data) throws IOException {\n         return updateDigest(digest, data.getChannel());\n     }\n     \n     public static MessageDigest updateDigest(final MessageDigest messageDigest, final String valueToDigest) {\n@@ -567,22 +549,8 @@\n     public String digestAsHex(final String data) {\n         return Hex.encodeHexString(this.digest(data));\n     }\n     \n     public MessageDigest getMessageDigest() {\n         return this.messageDigest;\n     }\n-    \n-    private static /* synthetic */ void $closeResource(final Throwable x0, final AutoCloseable x1) {\n-        if (x0 != null) {\n-            try {\n-                x1.close();\n-            }\n-            catch (final Throwable exception) {\n-                x0.addSuppressed(exception);\n-            }\n-        }\n-        else {\n-            x1.close();\n-        }\n-    }\n }\n"}]}
