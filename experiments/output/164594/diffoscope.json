{"diffoscope-json-version": 1, "source1": "first/Deflate64CompressorInputStream.class", "source2": "second/Deflate64CompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,138 +1,139 @@\n-  SHA-256 checksum add54d8f19c1483b1265bd6f1145497eeb28ea1a65cbe09b9ed2f3d890bd31ba\n+  SHA-256 checksum 3d000b6ca1af9acb4470addac0a736fe896aa0e8b8abf580d2a84c091771261c\n   Compiled from \"Deflate64CompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream implements org.apache.commons.compress.utils.InputStreamStatistics\n   minor version: 0\n-  major version: 52\n+  major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #29                         // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream\n-  super_class: #30                        // org/apache/commons/compress/compressors/CompressorInputStream\n-  interfaces: 1, fields: 4, methods: 8, attributes: 1\n+  this_class: #24                         // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream\n+  super_class: #25                        // org/apache/commons/compress/compressors/CompressorInputStream\n+  interfaces: 1, fields: 4, methods: 8, attributes: 3\n Constant pool:\n-    #1 = Class              #73           // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-    #2 = Methodref          #1.#74        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.\"<init>\":(Ljava/io/InputStream;)V\n-    #3 = Methodref          #29.#75       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.\"<init>\":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)V\n-    #4 = Fieldref           #29.#76       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.originalStream:Ljava/io/InputStream;\n-    #5 = Methodref          #30.#77       // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n-    #6 = Fieldref           #29.#78       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.oneByte:[B\n-    #7 = Fieldref           #29.#79       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n-    #8 = Methodref          #29.#80       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.read:([B)I\n-    #9 = Class              #81           // java/lang/IllegalStateException\n-   #10 = Class              #82           // java/lang/StringBuilder\n-   #11 = Methodref          #10.#77       // java/lang/StringBuilder.\"<init>\":()V\n-   #12 = String             #83           // Invalid return value from read:\n-   #13 = Methodref          #10.#84       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #14 = Methodref          #10.#85       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #15 = Methodref          #10.#86       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #16 = Methodref          #9.#87        // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #17 = Methodref          #1.#88        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.decode:([BII)I\n-   #18 = Class              #89           // java/lang/RuntimeException\n-   #19 = Class              #90           // java/io/IOException\n-   #20 = String             #91           // Invalid Deflate64 input\n-   #21 = Methodref          #19.#92       // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #22 = Methodref          #1.#93        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.getBytesRead:()J\n-   #23 = Fieldref           #29.#94       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.compressedBytesRead:J\n-   #24 = Methodref          #29.#95       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.count:(I)V\n-   #25 = Methodref          #29.#96       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.closeDecoder:()V\n-   #26 = Methodref          #1.#97        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.available:()I\n-   #27 = Methodref          #98.#99       // java/io/InputStream.close:()V\n-   #28 = Methodref          #100.#101     // org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n-   #29 = Class              #102          // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream\n-   #30 = Class              #103          // org/apache/commons/compress/compressors/CompressorInputStream\n-   #31 = Class              #104          // org/apache/commons/compress/utils/InputStreamStatistics\n-   #32 = Utf8               originalStream\n-   #33 = Utf8               Ljava/io/InputStream;\n-   #34 = Utf8               decoder\n-   #35 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n-   #36 = Utf8               compressedBytesRead\n-   #37 = Utf8               J\n-   #38 = Utf8               oneByte\n-   #39 = Utf8               [B\n-   #40 = Utf8               <init>\n-   #41 = Utf8               (Ljava/io/InputStream;)V\n-   #42 = Utf8               Code\n-   #43 = Utf8               LineNumberTable\n-   #44 = Utf8               LocalVariableTable\n-   #45 = Utf8               this\n-   #46 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream;\n-   #47 = Utf8               in\n-   #48 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)V\n-   #49 = Utf8               read\n-   #50 = Utf8               ()I\n-   #51 = Utf8               r\n-   #52 = Utf8               I\n-   #53 = Utf8               StackMapTable\n-   #54 = Utf8               Exceptions\n-   #55 = Utf8               ([BII)I\n-   #56 = Utf8               ex\n-   #57 = Utf8               Ljava/lang/RuntimeException;\n-   #58 = Utf8               b\n-   #59 = Utf8               off\n-   #60 = Utf8               len\n-   #61 = Class              #102          // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream\n-   #62 = Class              #39           // \"[B\"\n-   #63 = Class              #89           // java/lang/RuntimeException\n-   #64 = Utf8               available\n-   #65 = Utf8               close\n-   #66 = Utf8               ()V\n-   #67 = Class              #105          // java/lang/Throwable\n-   #68 = Utf8               getCompressedCount\n-   #69 = Utf8               ()J\n-   #70 = Utf8               closeDecoder\n-   #71 = Utf8               SourceFile\n-   #72 = Utf8               Deflate64CompressorInputStream.java\n-   #73 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-   #74 = NameAndType        #40:#41       // \"<init>\":(Ljava/io/InputStream;)V\n-   #75 = NameAndType        #40:#48       // \"<init>\":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)V\n-   #76 = NameAndType        #32:#33       // originalStream:Ljava/io/InputStream;\n-   #77 = NameAndType        #40:#66       // \"<init>\":()V\n-   #78 = NameAndType        #38:#39       // oneByte:[B\n-   #79 = NameAndType        #34:#35       // decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n-   #80 = NameAndType        #49:#106      // read:([B)I\n-   #81 = Utf8               java/lang/IllegalStateException\n-   #82 = Utf8               java/lang/StringBuilder\n-   #83 = Utf8               Invalid return value from read:\n-   #84 = NameAndType        #107:#108     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #85 = NameAndType        #107:#109     // append:(I)Ljava/lang/StringBuilder;\n-   #86 = NameAndType        #110:#111     // toString:()Ljava/lang/String;\n-   #87 = NameAndType        #40:#112      // \"<init>\":(Ljava/lang/String;)V\n-   #88 = NameAndType        #113:#55      // decode:([BII)I\n-   #89 = Utf8               java/lang/RuntimeException\n-   #90 = Utf8               java/io/IOException\n-   #91 = Utf8               Invalid Deflate64 input\n-   #92 = NameAndType        #40:#114      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #93 = NameAndType        #115:#69      // getBytesRead:()J\n-   #94 = NameAndType        #36:#37       // compressedBytesRead:J\n-   #95 = NameAndType        #116:#117     // count:(I)V\n-   #96 = NameAndType        #70:#66       // closeDecoder:()V\n-   #97 = NameAndType        #64:#50       // available:()I\n-   #98 = Class              #118          // java/io/InputStream\n-   #99 = NameAndType        #65:#66       // close:()V\n-  #100 = Class              #119          // org/apache/commons/compress/utils/IOUtils\n-  #101 = NameAndType        #120:#121     // closeQuietly:(Ljava/io/Closeable;)V\n-  #102 = Utf8               org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream\n-  #103 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n-  #104 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n-  #105 = Utf8               java/lang/Throwable\n-  #106 = Utf8               ([B)I\n-  #107 = Utf8               append\n-  #108 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #109 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #110 = Utf8               toString\n-  #111 = Utf8               ()Ljava/lang/String;\n-  #112 = Utf8               (Ljava/lang/String;)V\n-  #113 = Utf8               decode\n-  #114 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #115 = Utf8               getBytesRead\n-  #116 = Utf8               count\n-  #117 = Utf8               (I)V\n-  #118 = Utf8               java/io/InputStream\n-  #119 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #120 = Utf8               closeQuietly\n-  #121 = Utf8               (Ljava/io/Closeable;)V\n+    #1 = Class              #66           // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+    #2 = Methodref          #1.#67        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.\"<init>\":(Ljava/io/InputStream;)V\n+    #3 = Methodref          #24.#68       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.\"<init>\":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)V\n+    #4 = Fieldref           #24.#69       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.originalStream:Ljava/io/InputStream;\n+    #5 = Methodref          #25.#70       // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+    #6 = Fieldref           #24.#71       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.oneByte:[B\n+    #7 = Fieldref           #24.#72       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n+    #8 = Methodref          #24.#73       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.read:([B)I\n+    #9 = Class              #74           // java/lang/IllegalStateException\n+   #10 = InvokeDynamic      #0:#78        // #0:makeConcatWithConstants:(I)Ljava/lang/String;\n+   #11 = Methodref          #9.#79        // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #12 = Methodref          #1.#80        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.decode:([BII)I\n+   #13 = Class              #81           // java/lang/RuntimeException\n+   #14 = Class              #82           // java/io/IOException\n+   #15 = String             #83           // Invalid Deflate64 input\n+   #16 = Methodref          #14.#84       // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #17 = Methodref          #1.#85        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.getBytesRead:()J\n+   #18 = Fieldref           #24.#86       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.compressedBytesRead:J\n+   #19 = Methodref          #24.#87       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.count:(I)V\n+   #20 = Methodref          #24.#88       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.closeDecoder:()V\n+   #21 = Methodref          #1.#89        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.available:()I\n+   #22 = Methodref          #90.#91       // java/io/InputStream.close:()V\n+   #23 = Methodref          #92.#93       // org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n+   #24 = Class              #94           // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream\n+   #25 = Class              #95           // org/apache/commons/compress/compressors/CompressorInputStream\n+   #26 = Class              #96           // org/apache/commons/compress/utils/InputStreamStatistics\n+   #27 = Utf8               originalStream\n+   #28 = Utf8               Ljava/io/InputStream;\n+   #29 = Utf8               decoder\n+   #30 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n+   #31 = Utf8               compressedBytesRead\n+   #32 = Utf8               J\n+   #33 = Utf8               oneByte\n+   #34 = Utf8               [B\n+   #35 = Utf8               <init>\n+   #36 = Utf8               (Ljava/io/InputStream;)V\n+   #37 = Utf8               Code\n+   #38 = Utf8               LineNumberTable\n+   #39 = Utf8               LocalVariableTable\n+   #40 = Utf8               this\n+   #41 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream;\n+   #42 = Utf8               in\n+   #43 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)V\n+   #44 = Utf8               read\n+   #45 = Utf8               ()I\n+   #46 = Utf8               r\n+   #47 = Utf8               I\n+   #48 = Utf8               StackMapTable\n+   #49 = Utf8               Exceptions\n+   #50 = Utf8               ([BII)I\n+   #51 = Utf8               ex\n+   #52 = Utf8               Ljava/lang/RuntimeException;\n+   #53 = Utf8               b\n+   #54 = Utf8               off\n+   #55 = Utf8               len\n+   #56 = Class              #34           // \"[B\"\n+   #57 = Utf8               available\n+   #58 = Utf8               close\n+   #59 = Utf8               ()V\n+   #60 = Class              #97           // java/lang/Throwable\n+   #61 = Utf8               getCompressedCount\n+   #62 = Utf8               ()J\n+   #63 = Utf8               closeDecoder\n+   #64 = Utf8               SourceFile\n+   #65 = Utf8               Deflate64CompressorInputStream.java\n+   #66 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+   #67 = NameAndType        #35:#36       // \"<init>\":(Ljava/io/InputStream;)V\n+   #68 = NameAndType        #35:#43       // \"<init>\":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)V\n+   #69 = NameAndType        #27:#28       // originalStream:Ljava/io/InputStream;\n+   #70 = NameAndType        #35:#59       // \"<init>\":()V\n+   #71 = NameAndType        #33:#34       // oneByte:[B\n+   #72 = NameAndType        #29:#30       // decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n+   #73 = NameAndType        #44:#98       // read:([B)I\n+   #74 = Utf8               java/lang/IllegalStateException\n+   #75 = Utf8               BootstrapMethods\n+   #76 = MethodHandle       6:#99         // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+   #77 = String             #100          // Invalid return value from read: \\u0001\n+   #78 = NameAndType        #101:#102     // makeConcatWithConstants:(I)Ljava/lang/String;\n+   #79 = NameAndType        #35:#103      // \"<init>\":(Ljava/lang/String;)V\n+   #80 = NameAndType        #104:#50      // decode:([BII)I\n+   #81 = Utf8               java/lang/RuntimeException\n+   #82 = Utf8               java/io/IOException\n+   #83 = Utf8               Invalid Deflate64 input\n+   #84 = NameAndType        #35:#105      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #85 = NameAndType        #106:#62      // getBytesRead:()J\n+   #86 = NameAndType        #31:#32       // compressedBytesRead:J\n+   #87 = NameAndType        #107:#108     // count:(I)V\n+   #88 = NameAndType        #63:#59       // closeDecoder:()V\n+   #89 = NameAndType        #57:#45       // available:()I\n+   #90 = Class              #109          // java/io/InputStream\n+   #91 = NameAndType        #58:#59       // close:()V\n+   #92 = Class              #110          // org/apache/commons/compress/utils/IOUtils\n+   #93 = NameAndType        #111:#112     // closeQuietly:(Ljava/io/Closeable;)V\n+   #94 = Utf8               org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream\n+   #95 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n+   #96 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n+   #97 = Utf8               java/lang/Throwable\n+   #98 = Utf8               ([B)I\n+   #99 = Methodref          #113.#114     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #100 = Utf8               Invalid return value from read: \\u0001\n+  #101 = Utf8               makeConcatWithConstants\n+  #102 = Utf8               (I)Ljava/lang/String;\n+  #103 = Utf8               (Ljava/lang/String;)V\n+  #104 = Utf8               decode\n+  #105 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #106 = Utf8               getBytesRead\n+  #107 = Utf8               count\n+  #108 = Utf8               (I)V\n+  #109 = Utf8               java/io/InputStream\n+  #110 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #111 = Utf8               closeQuietly\n+  #112 = Utf8               (Ljava/io/Closeable;)V\n+  #113 = Class              #115          // java/lang/invoke/StringConcatFactory\n+  #114 = NameAndType        #101:#119     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #115 = Utf8               java/lang/invoke/StringConcatFactory\n+  #116 = Class              #121          // java/lang/invoke/MethodHandles$Lookup\n+  #117 = Utf8               Lookup\n+  #118 = Utf8               InnerClasses\n+  #119 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #120 = Class              #122          // java/lang/invoke/MethodHandles\n+  #121 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #122 = Utf8               java/lang/invoke/MethodHandles\n {\n   private java.io.InputStream originalStream;\n     descriptor: Ljava/io/InputStream;\n     flags: (0x0002) ACC_PRIVATE\n \n   private org.apache.commons.compress.compressors.deflate64.HuffmanDecoder decoder;\n     descriptor: Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n@@ -195,15 +196,15 @@\n             0      17     0  this   Lorg/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream;\n             0      17     1 decoder   Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=4, locals=2, args_size=1\n+      stack=3, locals=2, args_size=1\n          0: aload_0\n          1: aload_0\n          2: getfield      #6                  // Field oneByte:[B\n          5: invokevirtual #8                  // Method read:([B)I\n          8: istore_1\n          9: iload_1\n         10: tableswitch   { // -1 to 1\n@@ -220,35 +221,29 @@\n         45: iand\n         46: ireturn\n         47: iconst_m1\n         48: ireturn\n         49: goto          0\n         52: new           #9                  // class java/lang/IllegalStateException\n         55: dup\n-        56: new           #10                 // class java/lang/StringBuilder\n-        59: dup\n-        60: invokespecial #11                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        63: ldc           #12                 // String Invalid return value from read:\n-        65: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        68: iload_1\n-        69: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        72: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        75: invokespecial #16                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-        78: athrow\n+        56: iload_1\n+        57: invokedynamic #10,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;\n+        62: invokespecial #11                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        65: athrow\n       LineNumberTable:\n         line 60: 0\n         line 61: 9\n         line 63: 36\n         line 65: 47\n         line 67: 49\n         line 69: 52\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            9      70     1     r   I\n-            0      79     0  this   Lorg/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream;\n+            9      57     1     r   I\n+            0      66     0  this   Lorg/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream;\n       StackMapTable: number_of_entries = 5\n         frame_type = 0 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 35\n           locals = [ int ]\n         frame_type = 10 /* same */\n         frame_type = 1 /* same */\n@@ -271,37 +266,37 @@\n         10: getfield      #7                  // Field decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n         13: ifnull        72\n         16: aload_0\n         17: getfield      #7                  // Field decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n         20: aload_1\n         21: iload_2\n         22: iload_3\n-        23: invokevirtual #17                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.decode:([BII)I\n+        23: invokevirtual #12                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.decode:([BII)I\n         26: istore        4\n         28: goto          45\n         31: astore        5\n-        33: new           #19                 // class java/io/IOException\n+        33: new           #14                 // class java/io/IOException\n         36: dup\n-        37: ldc           #20                 // String Invalid Deflate64 input\n+        37: ldc           #15                 // String Invalid Deflate64 input\n         39: aload         5\n-        41: invokespecial #21                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        41: invokespecial #16                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         44: athrow\n         45: aload_0\n         46: aload_0\n         47: getfield      #7                  // Field decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n-        50: invokevirtual #22                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.getBytesRead:()J\n-        53: putfield      #23                 // Field compressedBytesRead:J\n+        50: invokevirtual #17                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.getBytesRead:()J\n+        53: putfield      #18                 // Field compressedBytesRead:J\n         56: aload_0\n         57: iload         4\n-        59: invokevirtual #24                 // Method count:(I)V\n+        59: invokevirtual #19                 // Method count:(I)V\n         62: iload         4\n         64: iconst_m1\n         65: if_icmpne     72\n         68: aload_0\n-        69: invokespecial #25                 // Method closeDecoder:()V\n+        69: invokespecial #20                 // Method closeDecoder:()V\n         72: iload         4\n         74: ireturn\n       Exception table:\n          from    to  target type\n             16    28    31   Class java/lang/RuntimeException\n       LineNumberTable:\n         line 79: 0\n@@ -342,15 +337,15 @@\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #7                  // Field decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n          4: ifnull        17\n          7: aload_0\n          8: getfield      #7                  // Field decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n-        11: invokevirtual #26                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.available:()I\n+        11: invokevirtual #21                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.available:()I\n         14: goto          18\n         17: iconst_0\n         18: ireturn\n       LineNumberTable:\n         line 100: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -364,32 +359,32 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #25                 // Method closeDecoder:()V\n+         1: invokespecial #20                 // Method closeDecoder:()V\n          4: aload_0\n          5: getfield      #4                  // Field originalStream:Ljava/io/InputStream;\n          8: ifnull        48\n         11: aload_0\n         12: getfield      #4                  // Field originalStream:Ljava/io/InputStream;\n-        15: invokevirtual #27                 // Method java/io/InputStream.close:()V\n+        15: invokevirtual #22                 // Method java/io/InputStream.close:()V\n         18: aload_0\n         19: aconst_null\n         20: putfield      #4                  // Field originalStream:Ljava/io/InputStream;\n         23: goto          48\n         26: astore_1\n         27: aload_0\n         28: getfield      #4                  // Field originalStream:Ljava/io/InputStream;\n         31: ifnull        46\n         34: aload_0\n         35: getfield      #4                  // Field originalStream:Ljava/io/InputStream;\n-        38: invokevirtual #27                 // Method java/io/InputStream.close:()V\n+        38: invokevirtual #22                 // Method java/io/InputStream.close:()V\n         41: aload_0\n         42: aconst_null\n         43: putfield      #4                  // Field originalStream:Ljava/io/InputStream;\n         46: aload_1\n         47: athrow\n         48: return\n       Exception table:\n@@ -421,36 +416,42 @@\n \n   public long getCompressedCount();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #23                 // Field compressedBytesRead:J\n+         1: getfield      #18                 // Field compressedBytesRead:J\n          4: lreturn\n       LineNumberTable:\n         line 120: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream;\n \n   private void closeDecoder();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #7                  // Field decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n-         4: invokestatic  #28                 // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n+         4: invokestatic  #23                 // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n          7: aload_0\n          8: aconst_null\n          9: putfield      #7                  // Field decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n         12: return\n       LineNumberTable:\n         line 124: 0\n         line 125: 7\n         line 126: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream;\n }\n SourceFile: \"Deflate64CompressorInputStream.java\"\n+InnerClasses:\n+  public static final #117= #116 of #120; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+BootstrapMethods:\n+  0: #76 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #77 Invalid return value from read: \\u0001\n"}]}
