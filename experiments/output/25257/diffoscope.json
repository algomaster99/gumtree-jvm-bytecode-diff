{"diffoscope-json-version": 1, "source1": "first/CyclomaticComplexityCheck.class", "source2": "second/CyclomaticComplexityCheck.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,142 +1,142 @@\n-  SHA-256 checksum bd588995a41392f9d5cbf732653159db94b28bab60dadde6167c54b1296814fe\n+  SHA-256 checksum 01be5b3b748a4b14015058ffae9dc431bd1fc8ae4636d0c989d36632b413f463\n   Compiled from \"CyclomaticComplexityCheck.java\"\n public class com.puppycrawl.tools.checkstyle.checks.metrics.CyclomaticComplexityCheck extends com.puppycrawl.tools.checkstyle.api.AbstractCheck\n   minor version: 0\n   major version: 55\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #7                          // com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck\n-  super_class: #28                        // com/puppycrawl/tools/checkstyle/api/AbstractCheck\n+  this_class: #11                         // com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck\n+  super_class: #2                         // com/puppycrawl/tools/checkstyle/api/AbstractCheck\n   interfaces: 0, fields: 7, methods: 15, attributes: 2\n Constant pool:\n-    #1 = Methodref          #28.#80       // com/puppycrawl/tools/checkstyle/api/AbstractCheck.\"<init>\":()V\n-    #2 = Class              #81           // java/util/ArrayDeque\n-    #3 = Methodref          #2.#80        // java/util/ArrayDeque.\"<init>\":()V\n-    #4 = Fieldref           #7.#82        // com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.valueStack:Ljava/util/Deque;\n-    #5 = Fieldref           #7.#83        // com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.INITIAL_VALUE:Ljava/math/BigInteger;\n-    #6 = Fieldref           #7.#84        // com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.currentValue:Ljava/math/BigInteger;\n-    #7 = Class              #85           // com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck\n-    #8 = Fieldref           #7.#86        // com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.max:I\n-    #9 = Fieldref           #7.#87        // com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.switchBlockAsSingleDecisionPoint:Z\n-   #10 = Class              #88           // com/puppycrawl/tools/checkstyle/api/TokenTypes\n-   #11 = InterfaceMethodref #89.#90       // com/puppycrawl/tools/checkstyle/api/DetailAST.getType:()I\n-   #12 = Methodref          #7.#91        // com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.visitMethodDef:()V\n-   #13 = Methodref          #7.#92        // com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.visitTokenHook:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n-   #14 = Methodref          #7.#93        // com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.leaveMethodDef:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n-   #15 = Fieldref           #26.#94       // java/math/BigInteger.ONE:Ljava/math/BigInteger;\n-   #16 = Methodref          #7.#95        // com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.incrementCurrentValue:(Ljava/math/BigInteger;)V\n-   #17 = Methodref          #26.#96       // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n-   #18 = Methodref          #26.#97       // java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I\n-   #19 = String             #98           // cyclomaticComplexity\n-   #20 = Class              #99           // java/lang/Object\n-   #21 = Methodref          #7.#100       // com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.log:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n-   #22 = Methodref          #7.#101       // com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.popValue:()V\n-   #23 = Methodref          #26.#102      // java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-   #24 = InterfaceMethodref #103.#104     // java/util/Deque.push:(Ljava/lang/Object;)V\n-   #25 = InterfaceMethodref #103.#105     // java/util/Deque.pop:()Ljava/lang/Object;\n-   #26 = Class              #106          // java/math/BigInteger\n-   #27 = Methodref          #7.#107       // com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.pushValue:()V\n-   #28 = Class              #108          // com/puppycrawl/tools/checkstyle/api/AbstractCheck\n-   #29 = Utf8               MSG_KEY\n-   #30 = Utf8               Ljava/lang/String;\n-   #31 = Utf8               ConstantValue\n-   #32 = Utf8               INITIAL_VALUE\n-   #33 = Utf8               Ljava/math/BigInteger;\n-   #34 = Utf8               DEFAULT_COMPLEXITY_VALUE\n-   #35 = Utf8               I\n-   #36 = Integer            10\n-   #37 = Utf8               valueStack\n-   #38 = Utf8               Ljava/util/Deque;\n-   #39 = Utf8               Signature\n-   #40 = Utf8               Ljava/util/Deque<Ljava/math/BigInteger;>;\n-   #41 = Utf8               switchBlockAsSingleDecisionPoint\n-   #42 = Utf8               Z\n-   #43 = Utf8               currentValue\n-   #44 = Utf8               max\n-   #45 = Utf8               <init>\n-   #46 = Utf8               ()V\n-   #47 = Utf8               Code\n-   #48 = Utf8               LineNumberTable\n-   #49 = Utf8               LocalVariableTable\n-   #50 = Utf8               this\n-   #51 = Utf8               Lcom/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck;\n-   #52 = Utf8               setSwitchBlockAsSingleDecisionPoint\n-   #53 = Utf8               (Z)V\n-   #54 = Utf8               setMax\n-   #55 = Utf8               (I)V\n-   #56 = Utf8               getDefaultTokens\n-   #57 = Utf8               ()[I\n-   #58 = Utf8               getAcceptableTokens\n-   #59 = Utf8               getRequiredTokens\n-   #60 = Utf8               visitToken\n-   #61 = Utf8               (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n-   #62 = Utf8               ast\n-   #63 = Utf8               Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n-   #64 = Utf8               StackMapTable\n-   #65 = Utf8               leaveToken\n-   #66 = Utf8               visitTokenHook\n-   #67 = Utf8               leaveMethodDef\n-   #68 = Utf8               bigIntegerMax\n-   #69 = Utf8               incrementCurrentValue\n-   #70 = Utf8               (Ljava/math/BigInteger;)V\n-   #71 = Utf8               amount\n-   #72 = Utf8               pushValue\n-   #73 = Utf8               popValue\n-   #74 = Utf8               visitMethodDef\n-   #75 = Utf8               <clinit>\n-   #76 = Utf8               SourceFile\n-   #77 = Utf8               CyclomaticComplexityCheck.java\n-   #78 = Utf8               RuntimeVisibleAnnotations\n-   #79 = Utf8               Lcom/puppycrawl/tools/checkstyle/FileStatefulCheck;\n-   #80 = NameAndType        #45:#46       // \"<init>\":()V\n-   #81 = Utf8               java/util/ArrayDeque\n-   #82 = NameAndType        #37:#38       // valueStack:Ljava/util/Deque;\n-   #83 = NameAndType        #32:#33       // INITIAL_VALUE:Ljava/math/BigInteger;\n-   #84 = NameAndType        #43:#33       // currentValue:Ljava/math/BigInteger;\n-   #85 = Utf8               com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck\n-   #86 = NameAndType        #44:#35       // max:I\n-   #87 = NameAndType        #41:#42       // switchBlockAsSingleDecisionPoint:Z\n-   #88 = Utf8               com/puppycrawl/tools/checkstyle/api/TokenTypes\n-   #89 = Class              #109          // com/puppycrawl/tools/checkstyle/api/DetailAST\n-   #90 = NameAndType        #110:#111     // getType:()I\n-   #91 = NameAndType        #74:#46       // visitMethodDef:()V\n-   #92 = NameAndType        #66:#61       // visitTokenHook:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n-   #93 = NameAndType        #67:#61       // leaveMethodDef:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n-   #94 = NameAndType        #112:#33      // ONE:Ljava/math/BigInteger;\n-   #95 = NameAndType        #69:#70       // incrementCurrentValue:(Ljava/math/BigInteger;)V\n-   #96 = NameAndType        #113:#114     // valueOf:(J)Ljava/math/BigInteger;\n-   #97 = NameAndType        #115:#116     // compareTo:(Ljava/math/BigInteger;)I\n-   #98 = Utf8               cyclomaticComplexity\n-   #99 = Utf8               java/lang/Object\n-  #100 = NameAndType        #117:#118     // log:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n-  #101 = NameAndType        #73:#46       // popValue:()V\n-  #102 = NameAndType        #119:#120     // add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-  #103 = Class              #121          // java/util/Deque\n-  #104 = NameAndType        #122:#123     // push:(Ljava/lang/Object;)V\n-  #105 = NameAndType        #124:#125     // pop:()Ljava/lang/Object;\n-  #106 = Utf8               java/math/BigInteger\n-  #107 = NameAndType        #72:#46       // pushValue:()V\n-  #108 = Utf8               com/puppycrawl/tools/checkstyle/api/AbstractCheck\n-  #109 = Utf8               com/puppycrawl/tools/checkstyle/api/DetailAST\n-  #110 = Utf8               getType\n-  #111 = Utf8               ()I\n-  #112 = Utf8               ONE\n-  #113 = Utf8               valueOf\n-  #114 = Utf8               (J)Ljava/math/BigInteger;\n-  #115 = Utf8               compareTo\n-  #116 = Utf8               (Ljava/math/BigInteger;)I\n-  #117 = Utf8               log\n-  #118 = Utf8               (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n-  #119 = Utf8               add\n-  #120 = Utf8               (Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-  #121 = Utf8               java/util/Deque\n-  #122 = Utf8               push\n-  #123 = Utf8               (Ljava/lang/Object;)V\n-  #124 = Utf8               pop\n-  #125 = Utf8               ()Ljava/lang/Object;\n+    #1 = Methodref          #2.#3         // com/puppycrawl/tools/checkstyle/api/AbstractCheck.\"<init>\":()V\n+    #2 = Class              #4            // com/puppycrawl/tools/checkstyle/api/AbstractCheck\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               com/puppycrawl/tools/checkstyle/api/AbstractCheck\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Class              #8            // java/util/ArrayDeque\n+    #8 = Utf8               java/util/ArrayDeque\n+    #9 = Methodref          #7.#3         // java/util/ArrayDeque.\"<init>\":()V\n+   #10 = Fieldref           #11.#12       // com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.valueStack:Ljava/util/Deque;\n+   #11 = Class              #13           // com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck\n+   #12 = NameAndType        #14:#15       // valueStack:Ljava/util/Deque;\n+   #13 = Utf8               com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck\n+   #14 = Utf8               valueStack\n+   #15 = Utf8               Ljava/util/Deque;\n+   #16 = Fieldref           #11.#17       // com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.INITIAL_VALUE:Ljava/math/BigInteger;\n+   #17 = NameAndType        #18:#19       // INITIAL_VALUE:Ljava/math/BigInteger;\n+   #18 = Utf8               INITIAL_VALUE\n+   #19 = Utf8               Ljava/math/BigInteger;\n+   #20 = Fieldref           #11.#21       // com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.currentValue:Ljava/math/BigInteger;\n+   #21 = NameAndType        #22:#19       // currentValue:Ljava/math/BigInteger;\n+   #22 = Utf8               currentValue\n+   #23 = Fieldref           #11.#24       // com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.max:I\n+   #24 = NameAndType        #25:#26       // max:I\n+   #25 = Utf8               max\n+   #26 = Utf8               I\n+   #27 = Fieldref           #11.#28       // com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.switchBlockAsSingleDecisionPoint:Z\n+   #28 = NameAndType        #29:#30       // switchBlockAsSingleDecisionPoint:Z\n+   #29 = Utf8               switchBlockAsSingleDecisionPoint\n+   #30 = Utf8               Z\n+   #31 = Class              #32           // com/puppycrawl/tools/checkstyle/api/TokenTypes\n+   #32 = Utf8               com/puppycrawl/tools/checkstyle/api/TokenTypes\n+   #33 = InterfaceMethodref #34.#35       // com/puppycrawl/tools/checkstyle/api/DetailAST.getType:()I\n+   #34 = Class              #36           // com/puppycrawl/tools/checkstyle/api/DetailAST\n+   #35 = NameAndType        #37:#38       // getType:()I\n+   #36 = Utf8               com/puppycrawl/tools/checkstyle/api/DetailAST\n+   #37 = Utf8               getType\n+   #38 = Utf8               ()I\n+   #39 = Methodref          #11.#40       // com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.visitMethodDef:()V\n+   #40 = NameAndType        #41:#6        // visitMethodDef:()V\n+   #41 = Utf8               visitMethodDef\n+   #42 = Methodref          #11.#43       // com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.visitTokenHook:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n+   #43 = NameAndType        #44:#45       // visitTokenHook:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n+   #44 = Utf8               visitTokenHook\n+   #45 = Utf8               (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n+   #46 = Methodref          #11.#47       // com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.leaveMethodDef:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n+   #47 = NameAndType        #48:#45       // leaveMethodDef:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n+   #48 = Utf8               leaveMethodDef\n+   #49 = Fieldref           #50.#51       // java/math/BigInteger.ONE:Ljava/math/BigInteger;\n+   #50 = Class              #52           // java/math/BigInteger\n+   #51 = NameAndType        #53:#19       // ONE:Ljava/math/BigInteger;\n+   #52 = Utf8               java/math/BigInteger\n+   #53 = Utf8               ONE\n+   #54 = Methodref          #11.#55       // com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.incrementCurrentValue:(Ljava/math/BigInteger;)V\n+   #55 = NameAndType        #56:#57       // incrementCurrentValue:(Ljava/math/BigInteger;)V\n+   #56 = Utf8               incrementCurrentValue\n+   #57 = Utf8               (Ljava/math/BigInteger;)V\n+   #58 = Methodref          #50.#59       // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+   #59 = NameAndType        #60:#61       // valueOf:(J)Ljava/math/BigInteger;\n+   #60 = Utf8               valueOf\n+   #61 = Utf8               (J)Ljava/math/BigInteger;\n+   #62 = Methodref          #50.#63       // java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I\n+   #63 = NameAndType        #64:#65       // compareTo:(Ljava/math/BigInteger;)I\n+   #64 = Utf8               compareTo\n+   #65 = Utf8               (Ljava/math/BigInteger;)I\n+   #66 = String             #67           // cyclomaticComplexity\n+   #67 = Utf8               cyclomaticComplexity\n+   #68 = Class              #69           // java/lang/Object\n+   #69 = Utf8               java/lang/Object\n+   #70 = Methodref          #11.#71       // com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.log:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n+   #71 = NameAndType        #72:#73       // log:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n+   #72 = Utf8               log\n+   #73 = Utf8               (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n+   #74 = Methodref          #11.#75       // com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.popValue:()V\n+   #75 = NameAndType        #76:#6        // popValue:()V\n+   #76 = Utf8               popValue\n+   #77 = Methodref          #50.#78       // java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+   #78 = NameAndType        #79:#80       // add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+   #79 = Utf8               add\n+   #80 = Utf8               (Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+   #81 = InterfaceMethodref #82.#83       // java/util/Deque.push:(Ljava/lang/Object;)V\n+   #82 = Class              #84           // java/util/Deque\n+   #83 = NameAndType        #85:#86       // push:(Ljava/lang/Object;)V\n+   #84 = Utf8               java/util/Deque\n+   #85 = Utf8               push\n+   #86 = Utf8               (Ljava/lang/Object;)V\n+   #87 = InterfaceMethodref #82.#88       // java/util/Deque.pop:()Ljava/lang/Object;\n+   #88 = NameAndType        #89:#90       // pop:()Ljava/lang/Object;\n+   #89 = Utf8               pop\n+   #90 = Utf8               ()Ljava/lang/Object;\n+   #91 = Methodref          #11.#92       // com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.pushValue:()V\n+   #92 = NameAndType        #93:#6        // pushValue:()V\n+   #93 = Utf8               pushValue\n+   #94 = Utf8               MSG_KEY\n+   #95 = Utf8               Ljava/lang/String;\n+   #96 = Utf8               ConstantValue\n+   #97 = Utf8               DEFAULT_COMPLEXITY_VALUE\n+   #98 = Integer            10\n+   #99 = Utf8               Signature\n+  #100 = Utf8               Ljava/util/Deque<Ljava/math/BigInteger;>;\n+  #101 = Utf8               Code\n+  #102 = Utf8               LineNumberTable\n+  #103 = Utf8               LocalVariableTable\n+  #104 = Utf8               this\n+  #105 = Utf8               Lcom/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck;\n+  #106 = Utf8               setSwitchBlockAsSingleDecisionPoint\n+  #107 = Utf8               (Z)V\n+  #108 = Utf8               setMax\n+  #109 = Utf8               (I)V\n+  #110 = Utf8               getDefaultTokens\n+  #111 = Utf8               ()[I\n+  #112 = Utf8               getAcceptableTokens\n+  #113 = Utf8               getRequiredTokens\n+  #114 = Utf8               visitToken\n+  #115 = Utf8               ast\n+  #116 = Utf8               Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+  #117 = Utf8               StackMapTable\n+  #118 = Utf8               leaveToken\n+  #119 = Utf8               bigIntegerMax\n+  #120 = Utf8               amount\n+  #121 = Utf8               <clinit>\n+  #122 = Utf8               SourceFile\n+  #123 = Utf8               CyclomaticComplexityCheck.java\n+  #124 = Utf8               RuntimeVisibleAnnotations\n+  #125 = Utf8               Lcom/puppycrawl/tools/checkstyle/FileStatefulCheck;\n {\n   public static final java.lang.String MSG_KEY = \"cyclomaticComplexity\";\n     descriptor: Ljava/lang/String;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: String cyclomaticComplexity\n \n   private static final java.math.BigInteger INITIAL_VALUE;\n@@ -147,15 +147,15 @@\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 10\n \n   private final java.util.Deque<java.math.BigInteger> valueStack;\n     descriptor: Ljava/util/Deque;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #40                          // Ljava/util/Deque<Ljava/math/BigInteger;>;\n+    Signature: #100                         // Ljava/util/Deque<Ljava/math/BigInteger;>;\n \n   private boolean switchBlockAsSingleDecisionPoint;\n     descriptor: Z\n     flags: (0x0002) ACC_PRIVATE\n \n   private java.math.BigInteger currentValue;\n     descriptor: Ljava/math/BigInteger;\n@@ -169,24 +169,24 @@\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: invokespecial #1                  // Method com/puppycrawl/tools/checkstyle/api/AbstractCheck.\"<init>\":()V\n          4: aload_0\n-         5: new           #2                  // class java/util/ArrayDeque\n+         5: new           #7                  // class java/util/ArrayDeque\n          8: dup\n-         9: invokespecial #3                  // Method java/util/ArrayDeque.\"<init>\":()V\n-        12: putfield      #4                  // Field valueStack:Ljava/util/Deque;\n+         9: invokespecial #9                  // Method java/util/ArrayDeque.\"<init>\":()V\n+        12: putfield      #10                 // Field valueStack:Ljava/util/Deque;\n         15: aload_0\n-        16: getstatic     #5                  // Field INITIAL_VALUE:Ljava/math/BigInteger;\n-        19: putfield      #6                  // Field currentValue:Ljava/math/BigInteger;\n+        16: getstatic     #16                 // Field INITIAL_VALUE:Ljava/math/BigInteger;\n+        19: putfield      #20                 // Field currentValue:Ljava/math/BigInteger;\n         22: aload_0\n         23: bipush        10\n-        25: putfield      #8                  // Field max:I\n+        25: putfield      #23                 // Field max:I\n         28: return\n       LineNumberTable:\n         line 114: 0\n         line 130: 4\n         line 136: 15\n         line 139: 22\n       LocalVariableTable:\n@@ -196,15 +196,15 @@\n   public void setSwitchBlockAsSingleDecisionPoint(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #9                  // Field switchBlockAsSingleDecisionPoint:Z\n+         2: putfield      #27                 // Field switchBlockAsSingleDecisionPoint:Z\n          5: return\n       LineNumberTable:\n         line 149: 0\n         line 150: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lcom/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck;\n@@ -213,15 +213,15 @@\n   public final void setMax(int);\n     descriptor: (I)V\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #8                  // Field max:I\n+         2: putfield      #23                 // Field max:I\n          5: return\n       LineNumberTable:\n         line 159: 0\n         line 160: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lcom/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck;\n@@ -411,29 +411,29 @@\n \n   public void visitToken(com.puppycrawl.tools.checkstyle.api.DetailAST);\n     descriptor: (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: invokeinterface #11,  1           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getType:()I\n+         1: invokeinterface #33,  1           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getType:()I\n          6: lookupswitch  { // 5\n                        8: 56\n                        9: 56\n                       11: 56\n                       12: 56\n                      203: 56\n                  default: 63\n             }\n         56: aload_0\n-        57: invokevirtual #12                 // Method visitMethodDef:()V\n+        57: invokevirtual #39                 // Method visitMethodDef:()V\n         60: goto          68\n         63: aload_0\n         64: aload_1\n-        65: invokevirtual #13                 // Method visitTokenHook:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n+        65: invokevirtual #42                 // Method visitTokenHook:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n         68: return\n       LineNumberTable:\n         line 217: 0\n         line 223: 56\n         line 224: 60\n         line 226: 63\n         line 228: 68\n@@ -448,26 +448,26 @@\n \n   public void leaveToken(com.puppycrawl.tools.checkstyle.api.DetailAST);\n     descriptor: (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: invokeinterface #11,  1           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getType:()I\n+         1: invokeinterface #33,  1           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getType:()I\n          6: lookupswitch  { // 5\n                        8: 56\n                        9: 56\n                       11: 56\n                       12: 56\n                      203: 56\n                  default: 64\n             }\n         56: aload_0\n         57: aload_1\n-        58: invokevirtual #14                 // Method leaveMethodDef:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n+        58: invokevirtual #46                 // Method leaveMethodDef:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n         61: goto          64\n         64: return\n       LineNumberTable:\n         line 232: 0\n         line 238: 56\n         line 239: 61\n         line 243: 64\n@@ -481,31 +481,31 @@\n \n   private void visitTokenHook(com.puppycrawl.tools.checkstyle.api.DetailAST);\n     descriptor: (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #9                  // Field switchBlockAsSingleDecisionPoint:Z\n+         1: getfield      #27                 // Field switchBlockAsSingleDecisionPoint:Z\n          4: ifeq          28\n          7: aload_1\n-         8: invokeinterface #11,  1           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getType:()I\n+         8: invokeinterface #33,  1           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getType:()I\n         13: bipush        93\n         15: if_icmpeq     46\n         18: aload_0\n-        19: getstatic     #15                 // Field java/math/BigInteger.ONE:Ljava/math/BigInteger;\n-        22: invokevirtual #16                 // Method incrementCurrentValue:(Ljava/math/BigInteger;)V\n+        19: getstatic     #49                 // Field java/math/BigInteger.ONE:Ljava/math/BigInteger;\n+        22: invokevirtual #54                 // Method incrementCurrentValue:(Ljava/math/BigInteger;)V\n         25: goto          46\n         28: aload_1\n-        29: invokeinterface #11,  1           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getType:()I\n+        29: invokeinterface #33,  1           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getType:()I\n         34: bipush        89\n         36: if_icmpeq     46\n         39: aload_0\n-        40: getstatic     #15                 // Field java/math/BigInteger.ONE:Ljava/math/BigInteger;\n-        43: invokevirtual #16                 // Method incrementCurrentValue:(Ljava/math/BigInteger;)V\n+        40: getstatic     #49                 // Field java/math/BigInteger.ONE:Ljava/math/BigInteger;\n+        43: invokevirtual #54                 // Method incrementCurrentValue:(Ljava/math/BigInteger;)V\n         46: return\n       LineNumberTable:\n         line 252: 0\n         line 253: 7\n         line 254: 18\n         line 257: 28\n         line 258: 39\n@@ -520,40 +520,40 @@\n \n   private void leaveMethodDef(com.puppycrawl.tools.checkstyle.api.DetailAST);\n     descriptor: (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=7, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #8                  // Field max:I\n+         1: getfield      #23                 // Field max:I\n          4: i2l\n-         5: invokestatic  #17                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+         5: invokestatic  #58                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n          8: astore_2\n          9: aload_0\n-        10: getfield      #6                  // Field currentValue:Ljava/math/BigInteger;\n+        10: getfield      #20                 // Field currentValue:Ljava/math/BigInteger;\n         13: aload_2\n-        14: invokevirtual #18                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I\n+        14: invokevirtual #62                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I\n         17: ifle          42\n         20: aload_0\n         21: aload_1\n-        22: ldc           #19                 // String cyclomaticComplexity\n+        22: ldc           #66                 // String cyclomaticComplexity\n         24: iconst_2\n-        25: anewarray     #20                 // class java/lang/Object\n+        25: anewarray     #68                 // class java/lang/Object\n         28: dup\n         29: iconst_0\n         30: aload_0\n-        31: getfield      #6                  // Field currentValue:Ljava/math/BigInteger;\n+        31: getfield      #20                 // Field currentValue:Ljava/math/BigInteger;\n         34: aastore\n         35: dup\n         36: iconst_1\n         37: aload_2\n         38: aastore\n-        39: invokevirtual #21                 // Method log:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n+        39: invokevirtual #70                 // Method log:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n         42: aload_0\n-        43: invokevirtual #22                 // Method popValue:()V\n+        43: invokevirtual #74                 // Method popValue:()V\n         46: return\n       LineNumberTable:\n         line 268: 0\n         line 269: 9\n         line 270: 20\n         line 272: 42\n         line 273: 46\n@@ -570,18 +570,18 @@\n   private void incrementCurrentValue(java.math.BigInteger);\n     descriptor: (Ljava/math/BigInteger;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_0\n-         2: getfield      #6                  // Field currentValue:Ljava/math/BigInteger;\n+         2: getfield      #20                 // Field currentValue:Ljava/math/BigInteger;\n          5: aload_1\n-         6: invokevirtual #23                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-         9: putfield      #6                  // Field currentValue:Ljava/math/BigInteger;\n+         6: invokevirtual #77                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+         9: putfield      #20                 // Field currentValue:Ljava/math/BigInteger;\n         12: return\n       LineNumberTable:\n         line 281: 0\n         line 282: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lcom/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck;\n@@ -589,21 +589,21 @@\n \n   private void pushValue();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field valueStack:Ljava/util/Deque;\n+         1: getfield      #10                 // Field valueStack:Ljava/util/Deque;\n          4: aload_0\n-         5: getfield      #6                  // Field currentValue:Ljava/math/BigInteger;\n-         8: invokeinterface #24,  2           // InterfaceMethod java/util/Deque.push:(Ljava/lang/Object;)V\n+         5: getfield      #20                 // Field currentValue:Ljava/math/BigInteger;\n+         8: invokeinterface #81,  2           // InterfaceMethod java/util/Deque.push:(Ljava/lang/Object;)V\n         13: aload_0\n-        14: getstatic     #5                  // Field INITIAL_VALUE:Ljava/math/BigInteger;\n-        17: putfield      #6                  // Field currentValue:Ljava/math/BigInteger;\n+        14: getstatic     #16                 // Field INITIAL_VALUE:Ljava/math/BigInteger;\n+        17: putfield      #20                 // Field currentValue:Ljava/math/BigInteger;\n         20: return\n       LineNumberTable:\n         line 286: 0\n         line 287: 13\n         line 288: 20\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -612,49 +612,49 @@\n   private void popValue();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: getfield      #4                  // Field valueStack:Ljava/util/Deque;\n-         5: invokeinterface #25,  1           // InterfaceMethod java/util/Deque.pop:()Ljava/lang/Object;\n-        10: checkcast     #26                 // class java/math/BigInteger\n-        13: putfield      #6                  // Field currentValue:Ljava/math/BigInteger;\n+         2: getfield      #10                 // Field valueStack:Ljava/util/Deque;\n+         5: invokeinterface #87,  1           // InterfaceMethod java/util/Deque.pop:()Ljava/lang/Object;\n+        10: checkcast     #50                 // class java/math/BigInteger\n+        13: putfield      #20                 // Field currentValue:Ljava/math/BigInteger;\n         16: return\n       LineNumberTable:\n         line 294: 0\n         line 295: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lcom/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck;\n \n   private void visitMethodDef();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #27                 // Method pushValue:()V\n+         1: invokevirtual #91                 // Method pushValue:()V\n          4: return\n       LineNumberTable:\n         line 299: 0\n         line 300: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lcom/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck;\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: getstatic     #15                 // Field java/math/BigInteger.ONE:Ljava/math/BigInteger;\n-         3: putstatic     #5                  // Field INITIAL_VALUE:Ljava/math/BigInteger;\n+         0: getstatic     #49                 // Field java/math/BigInteger.ONE:Ljava/math/BigInteger;\n+         3: putstatic     #16                 // Field INITIAL_VALUE:Ljava/math/BigInteger;\n          6: return\n       LineNumberTable:\n         line 124: 0\n }\n SourceFile: \"CyclomaticComplexityCheck.java\"\n RuntimeVisibleAnnotations:\n-  0: #79()\n+  0: #125()\n     com.puppycrawl.tools.checkstyle.FileStatefulCheck\n"}]}
