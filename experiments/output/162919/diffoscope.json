{"diffoscope-json-version": 1, "source1": "first/InstructionList.class", "source2": "second/InstructionList.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -77,29 +77,29 @@\n             throw new ClassGenException(e.toString(), (Throwable)e);\n         }\n         this.bytePositions = Arrays.copyOf(pos, count);\n         for (int j = 0; j < count; ++j) {\n             if (ihs[j] instanceof BranchHandle) {\n                 final BranchInstruction bi = (BranchInstruction)ihs[j].getInstruction();\n                 int target = bi.getPosition() + bi.getIndex();\n-                InstructionHandle ih2 = findHandle(ihs, pos, count, target);\n-                if (ih2 == null) {\n+                InstructionHandle ih = findHandle(ihs, pos, count, target);\n+                if (ih == null) {\n                     throw new ClassGenException(\"Couldn't find target for branch: \" + bi);\n                 }\n-                bi.setTarget(ih2);\n+                bi.setTarget(ih);\n                 if (bi instanceof Select) {\n                     final Select s = (Select)bi;\n                     final int[] indices = s.getIndices();\n                     for (int k = 0; k < indices.length; ++k) {\n                         target = bi.getPosition() + indices[k];\n-                        ih2 = findHandle(ihs, pos, count, target);\n-                        if (ih2 == null) {\n+                        ih = findHandle(ihs, pos, count, target);\n+                        if (ih == null) {\n                             throw new ClassGenException(\"Couldn't find target for switch: \" + bi);\n                         }\n-                        s.setTarget(k, ih2);\n+                        s.setTarget(k, ih);\n                     }\n                 }\n             }\n         }\n     }\n     \n     public InstructionList(final CompoundInstruction c) {\n"}]}
