{"diffoscope-json-version": 1, "source1": "first/RequestPayload.class", "source2": "second/RequestPayload.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,34 +1,34 @@\n-  SHA-256 checksum 240ae6af52d1954199c45ea6ffdf9f6baf51df8336433f0b7060aa4266a85b40\n+  SHA-256 checksum fb0bb8cb315ca4af000b27a6fd49e87f4826319c269afc89675ae43b10f04647\n   Compiled from \"RequestPayload.java\"\n public class com.fasterxml.jackson.core.util.RequestPayload implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #15                         // com/fasterxml/jackson/core/util/RequestPayload\n   super_class: #16                        // java/lang/Object\n   interfaces: 1, fields: 4, methods: 4, attributes: 1\n Constant pool:\n-   #1 = Methodref          #16.#54        // java/lang/Object.\"<init>\":()V\n-   #2 = Class              #55            // java/lang/IllegalArgumentException\n-   #3 = Methodref          #2.#54         // java/lang/IllegalArgumentException.\"<init>\":()V\n-   #4 = Fieldref           #15.#56        // com/fasterxml/jackson/core/util/RequestPayload._payloadAsBytes:[B\n-   #5 = Methodref          #9.#57         // java/lang/String.isEmpty:()Z\n-   #6 = String             #58            // UTF-8\n-   #7 = Fieldref           #15.#59        // com/fasterxml/jackson/core/util/RequestPayload._charset:Ljava/lang/String;\n-   #8 = Fieldref           #15.#60        // com/fasterxml/jackson/core/util/RequestPayload._payloadAsText:Ljava/lang/CharSequence;\n-   #9 = Class              #61            // java/lang/String\n-  #10 = Methodref          #9.#62         // java/lang/String.\"<init>\":([BLjava/lang/String;)V\n-  #11 = Class              #63            // java/io/IOException\n-  #12 = Class              #64            // java/lang/RuntimeException\n-  #13 = Methodref          #12.#65        // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n-  #14 = InterfaceMethodref #66.#67        // java/lang/CharSequence.toString:()Ljava/lang/String;\n-  #15 = Class              #68            // com/fasterxml/jackson/core/util/RequestPayload\n-  #16 = Class              #69            // java/lang/Object\n-  #17 = Class              #70            // java/io/Serializable\n+   #1 = Methodref          #16.#51        // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #52            // java/lang/IllegalArgumentException\n+   #3 = Methodref          #2.#51         // java/lang/IllegalArgumentException.\"<init>\":()V\n+   #4 = Fieldref           #15.#53        // com/fasterxml/jackson/core/util/RequestPayload._payloadAsBytes:[B\n+   #5 = Methodref          #9.#54         // java/lang/String.isEmpty:()Z\n+   #6 = String             #55            // UTF-8\n+   #7 = Fieldref           #15.#56        // com/fasterxml/jackson/core/util/RequestPayload._charset:Ljava/lang/String;\n+   #8 = Fieldref           #15.#57        // com/fasterxml/jackson/core/util/RequestPayload._payloadAsText:Ljava/lang/CharSequence;\n+   #9 = Class              #58            // java/lang/String\n+  #10 = Methodref          #9.#59         // java/lang/String.\"<init>\":([BLjava/lang/String;)V\n+  #11 = Class              #60            // java/io/IOException\n+  #12 = Class              #61            // java/lang/RuntimeException\n+  #13 = Methodref          #12.#62        // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+  #14 = InterfaceMethodref #42.#63        // java/lang/CharSequence.toString:()Ljava/lang/String;\n+  #15 = Class              #64            // com/fasterxml/jackson/core/util/RequestPayload\n+  #16 = Class              #65            // java/lang/Object\n+  #17 = Class              #66            // java/io/Serializable\n   #18 = Utf8               serialVersionUID\n   #19 = Utf8               J\n   #20 = Utf8               ConstantValue\n   #21 = Long               1l\n   #23 = Utf8               _payloadAsBytes\n   #24 = Utf8               [B\n   #25 = Utf8               _payloadAsText\n@@ -41,51 +41,47 @@\n   #32 = Utf8               LineNumberTable\n   #33 = Utf8               LocalVariableTable\n   #34 = Utf8               this\n   #35 = Utf8               Lcom/fasterxml/jackson/core/util/RequestPayload;\n   #36 = Utf8               bytes\n   #37 = Utf8               charset\n   #38 = Utf8               StackMapTable\n-  #39 = Class              #68            // com/fasterxml/jackson/core/util/RequestPayload\n-  #40 = Class              #24            // \"[B\"\n-  #41 = Class              #61            // java/lang/String\n-  #42 = Utf8               (Ljava/lang/CharSequence;)V\n-  #43 = Utf8               str\n-  #44 = Class              #71            // java/lang/CharSequence\n-  #45 = Utf8               getRawPayload\n-  #46 = Utf8               ()Ljava/lang/Object;\n-  #47 = Utf8               toString\n-  #48 = Utf8               ()Ljava/lang/String;\n-  #49 = Utf8               e\n-  #50 = Utf8               Ljava/io/IOException;\n-  #51 = Class              #63            // java/io/IOException\n-  #52 = Utf8               SourceFile\n-  #53 = Utf8               RequestPayload.java\n-  #54 = NameAndType        #29:#72        // \"<init>\":()V\n-  #55 = Utf8               java/lang/IllegalArgumentException\n-  #56 = NameAndType        #23:#24        // _payloadAsBytes:[B\n-  #57 = NameAndType        #73:#74        // isEmpty:()Z\n-  #58 = Utf8               UTF-8\n-  #59 = NameAndType        #27:#28        // _charset:Ljava/lang/String;\n-  #60 = NameAndType        #25:#26        // _payloadAsText:Ljava/lang/CharSequence;\n-  #61 = Utf8               java/lang/String\n-  #62 = NameAndType        #29:#30        // \"<init>\":([BLjava/lang/String;)V\n-  #63 = Utf8               java/io/IOException\n-  #64 = Utf8               java/lang/RuntimeException\n-  #65 = NameAndType        #29:#75        // \"<init>\":(Ljava/lang/Throwable;)V\n-  #66 = Class              #71            // java/lang/CharSequence\n-  #67 = NameAndType        #47:#48        // toString:()Ljava/lang/String;\n-  #68 = Utf8               com/fasterxml/jackson/core/util/RequestPayload\n-  #69 = Utf8               java/lang/Object\n-  #70 = Utf8               java/io/Serializable\n-  #71 = Utf8               java/lang/CharSequence\n-  #72 = Utf8               ()V\n-  #73 = Utf8               isEmpty\n-  #74 = Utf8               ()Z\n-  #75 = Utf8               (Ljava/lang/Throwable;)V\n+  #39 = Class              #24            // \"[B\"\n+  #40 = Utf8               (Ljava/lang/CharSequence;)V\n+  #41 = Utf8               str\n+  #42 = Class              #67            // java/lang/CharSequence\n+  #43 = Utf8               getRawPayload\n+  #44 = Utf8               ()Ljava/lang/Object;\n+  #45 = Utf8               toString\n+  #46 = Utf8               ()Ljava/lang/String;\n+  #47 = Utf8               e\n+  #48 = Utf8               Ljava/io/IOException;\n+  #49 = Utf8               SourceFile\n+  #50 = Utf8               RequestPayload.java\n+  #51 = NameAndType        #29:#68        // \"<init>\":()V\n+  #52 = Utf8               java/lang/IllegalArgumentException\n+  #53 = NameAndType        #23:#24        // _payloadAsBytes:[B\n+  #54 = NameAndType        #69:#70        // isEmpty:()Z\n+  #55 = Utf8               UTF-8\n+  #56 = NameAndType        #27:#28        // _charset:Ljava/lang/String;\n+  #57 = NameAndType        #25:#26        // _payloadAsText:Ljava/lang/CharSequence;\n+  #58 = Utf8               java/lang/String\n+  #59 = NameAndType        #29:#30        // \"<init>\":([BLjava/lang/String;)V\n+  #60 = Utf8               java/io/IOException\n+  #61 = Utf8               java/lang/RuntimeException\n+  #62 = NameAndType        #29:#71        // \"<init>\":(Ljava/lang/Throwable;)V\n+  #63 = NameAndType        #45:#46        // toString:()Ljava/lang/String;\n+  #64 = Utf8               com/fasterxml/jackson/core/util/RequestPayload\n+  #65 = Utf8               java/lang/Object\n+  #66 = Utf8               java/io/Serializable\n+  #67 = Utf8               java/lang/CharSequence\n+  #68 = Utf8               ()V\n+  #69 = Utf8               isEmpty\n+  #70 = Utf8               ()Z\n+  #71 = Utf8               (Ljava/lang/Throwable;)V\n {\n   private static final long serialVersionUID = 1l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 1l\n \n   protected byte[] _payloadAsBytes;\n"}]}
