{"diffoscope-json-version": 1, "source1": "first/RCommandClient.class", "source2": "second/RCommandClient.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -28,20 +28,19 @@\n     \n     public void connect(final InetAddress host, final int port, final InetAddress localAddr) throws SocketException, BindException, IOException {\n         int localPort = 1023;\n         localPort = 1023;\n         while (localPort >= 512) {\n             try {\n                 this._socket_ = this._socketFactory_.createSocket(host, port, localAddr, localPort);\n+                break;\n             }\n-            catch (final SocketException e) {\n+            catch (final SocketException ex) {\n                 --localPort;\n-                continue;\n             }\n-            break;\n         }\n         if (localPort < 512) {\n             throw new BindException(\"All ports in use or insufficient permssion.\");\n         }\n         this._connectAction_();\n     }\n     \n@@ -70,20 +69,19 @@\n     InputStream createErrorStream() throws IOException {\n         int localPort = 1023;\n         ServerSocket server = null;\n         localPort = 1023;\n         while (localPort >= 512) {\n             try {\n                 server = this._serverSocketFactory_.createServerSocket(localPort, 1, this.getLocalAddress());\n+                break;\n             }\n-            catch (final SocketException e) {\n+            catch (final SocketException ex) {\n                 --localPort;\n-                continue;\n             }\n-            break;\n         }\n         if (server == null) {\n             throw new BindException(\"All ports in use.\");\n         }\n         this._output_.write(Integer.toString(server.getLocalPort()).getBytes(StandardCharsets.UTF_8));\n         this._output_.write(0);\n         this._output_.flush();\n"}]}
