{"diffoscope-json-version": 1, "source1": "first/ClassPath$AbstractZip.class", "source2": "second/ClassPath$AbstractZip.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -9,58 +9,58 @@\n import java.util.Objects;\n import java.util.zip.ZipFile;\n \n private abstract static class AbstractZip extends ClassPath.AbstractPathEntry\n {\n     private final ZipFile zipFile;\n     \n-    AbstractZip(final ZipFile zipFile) {\n+    AbstractZip(final ZipFile obj) {\n         super((ClassPath.ClassPath$1)null);\n-        this.zipFile = Objects.requireNonNull(zipFile, \"zipFile\");\n+        this.zipFile = Objects.requireNonNull(obj, \"zipFile\");\n     }\n     \n     public void close() throws IOException {\n         if (this.zipFile != null) {\n             this.zipFile.close();\n         }\n     }\n     \n-    ClassPath.ClassFile getClassFile(final String name, final String suffix) throws IOException {\n-        final ZipEntry entry = this.zipFile.getEntry(this.toEntryName(name, suffix));\n+    ClassPath.ClassFile getClassFile(final String s, final String s2) throws IOException {\n+        final ZipEntry entry = this.zipFile.getEntry(this.toEntryName(s, s2));\n         if (entry == null) {\n             return null;\n         }\n         return (ClassPath.ClassFile)new AbstractZip.ClassPath$AbstractZip$1(this, entry);\n     }\n     \n-    URL getResource(final String name) {\n-        final ZipEntry entry = this.zipFile.getEntry(name);\n+    URL getResource(final String s) {\n+        final ZipEntry entry = this.zipFile.getEntry(s);\n         try {\n             URL url;\n             if (entry != null) {\n                 final StringBuilder sb;\n-                url = new URL(sb.append(\"jar:file:\").append(this.zipFile.getName()).append(\"!/\").append(name).toString());\n+                url = new URL(sb.append(\"jar:file:\").append(this.zipFile.getName()).append(\"!/\").append(s).toString());\n                 sb = new StringBuilder();\n             }\n             else {\n                 url = null;\n             }\n             return url;\n         }\n-        catch (final MalformedURLException e) {\n+        catch (final MalformedURLException ex) {\n             return null;\n         }\n     }\n     \n     InputStream getResourceAsStream(final String name) {\n         final ZipEntry entry = this.zipFile.getEntry(name);\n         try {\n             return (entry != null) ? this.zipFile.getInputStream(entry) : null;\n         }\n-        catch (final IOException e) {\n+        catch (final IOException ex) {\n             return null;\n         }\n     }\n     \n     protected abstract String toEntryName(final String p0, final String p1);\n     \n     public String toString() {\n"}]}
