{"diffoscope-json-version": 1, "source1": "first/CSVFormat.class", "source2": "second/CSVFormat.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,968 +1,964 @@\n-  SHA-256 checksum 685112d805427c9f61f0b7660e46b66fdb992e674f201710d0ad220efc414b5c\n+  SHA-256 checksum f5a498f7ae89cf7c6e1bbf0bdd4b613ce81cf755e33088f7d4ffbae400b4c7ae\n   Compiled from \"CSVFormat.java\"\n public final class org.apache.commons.csv.CSVFormat implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #37                         // org/apache/commons/csv/CSVFormat\n-  super_class: #103                       // java/lang/Object\n+  this_class: #4                          // org/apache/commons/csv/CSVFormat\n+  super_class: #172                       // java/lang/Object\n   interfaces: 1, fields: 32, methods: 122, attributes: 3\n Constant pool:\n-    #1 = Class              #548          // org/apache/commons/csv/Constants\n-    #2 = Methodref          #37.#549      // org/apache/commons/csv/CSVFormat.containsLineBreak:(Ljava/lang/String;)Z\n-    #3 = Methodref          #37.#550      // org/apache/commons/csv/CSVFormat.isLineBreak:(Ljava/lang/Character;)Z\n-    #4 = Methodref          #37.#551      // org/apache/commons/csv/CSVFormat.\"<init>\":(Lorg/apache/commons/csv/CSVFormat$Builder;)V\n-    #5 = Fieldref           #37.#552      // org/apache/commons/csv/CSVFormat.duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n-    #6 = Fieldref           #37.#553      // org/apache/commons/csv/CSVFormat.quotedNullString:Ljava/lang/String;\n-    #7 = Fieldref           #37.#554      // org/apache/commons/csv/CSVFormat.autoFlush:Z\n-    #8 = Fieldref           #37.#555      // org/apache/commons/csv/CSVFormat.trim:Z\n-    #9 = Fieldref           #37.#556      // org/apache/commons/csv/CSVFormat.trailingDelimiter:Z\n-   #10 = Fieldref           #37.#557      // org/apache/commons/csv/CSVFormat.ignoreHeaderCase:Z\n-   #11 = Fieldref           #37.#558      // org/apache/commons/csv/CSVFormat.skipHeaderRecord:Z\n-   #12 = Fieldref           #37.#559      // org/apache/commons/csv/CSVFormat.headers:[Ljava/lang/String;\n-   #13 = Fieldref           #37.#560      // org/apache/commons/csv/CSVFormat.headerComments:[Ljava/lang/String;\n-   #14 = Fieldref           #37.#561      // org/apache/commons/csv/CSVFormat.nullString:Ljava/lang/String;\n-   #15 = Fieldref           #37.#562      // org/apache/commons/csv/CSVFormat.recordSeparator:Ljava/lang/String;\n-   #16 = Fieldref           #37.#563      // org/apache/commons/csv/CSVFormat.ignoreEmptyLines:Z\n-   #17 = Fieldref           #37.#564      // org/apache/commons/csv/CSVFormat.allowMissingColumnNames:Z\n-   #18 = Fieldref           #37.#565      // org/apache/commons/csv/CSVFormat.ignoreSurroundingSpaces:Z\n-   #19 = Fieldref           #37.#566      // org/apache/commons/csv/CSVFormat.escapeCharacter:Ljava/lang/Character;\n-   #20 = Fieldref           #37.#567      // org/apache/commons/csv/CSVFormat.commentMarker:Ljava/lang/Character;\n-   #21 = Fieldref           #37.#568      // org/apache/commons/csv/CSVFormat.quoteMode:Lorg/apache/commons/csv/QuoteMode;\n-   #22 = Fieldref           #37.#569      // org/apache/commons/csv/CSVFormat.quoteCharacter:Ljava/lang/Character;\n-   #23 = Fieldref           #37.#570      // org/apache/commons/csv/CSVFormat.delimiter:Ljava/lang/String;\n-   #24 = Methodref          #571.#572     // \"[Ljava/lang/Object;\".clone:()Ljava/lang/Object;\n-   #25 = Class              #303          // \"[Ljava/lang/Object;\"\n-   #26 = String             #313          // source\n-   #27 = Methodref          #573.#574     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #28 = Class              #575          // java/lang/String\n-   #29 = Methodref          #28.#576      // java/lang/String.indexOf:(I)I\n-   #30 = Methodref          #37.#577      // org/apache/commons/csv/CSVFormat.contains:(Ljava/lang/String;C)Z\n-   #31 = Methodref          #28.#578      // java/lang/String.trim:()Ljava/lang/String;\n-   #32 = Methodref          #28.#579      // java/lang/String.isEmpty:()Z\n-   #33 = Methodref          #580.#581     // java/lang/Character.charValue:()C\n-   #34 = Methodref          #37.#582      // org/apache/commons/csv/CSVFormat.isLineBreak:(C)Z\n-   #35 = InterfaceMethodref #114.#583     // java/lang/CharSequence.charAt:(I)C\n-   #36 = Methodref          #37.#584      // org/apache/commons/csv/CSVFormat.isTrimChar:(C)Z\n-   #37 = Class              #585          // org/apache/commons/csv/CSVFormat\n-   #38 = Methodref          #28.#586      // java/lang/String.valueOf:(C)Ljava/lang/String;\n-   #39 = Fieldref           #476.#587     // org/apache/commons/csv/DuplicateHeaderMode.ALLOW_ALL:Lorg/apache/commons/csv/DuplicateHeaderMode;\n-   #40 = Methodref          #37.#588      // org/apache/commons/csv/CSVFormat.\"<init>\":(Ljava/lang/String;Ljava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZLorg/apache/commons/csv/DuplicateHeaderMode;)V\n-   #41 = InvokeDynamic      #0:#594       // #0:apply:([Ljava/lang/Object;)Ljava/util/function/IntFunction;\n-   #42 = Methodref          #595.#596     // java/util/Arrays.setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n-   #43 = InterfaceMethodref #114.#597     // java/lang/CharSequence.length:()I\n-   #44 = Methodref          #37.#598      // org/apache/commons/csv/CSVFormat.isTrimChar:(Ljava/lang/CharSequence;I)Z\n-   #45 = InterfaceMethodref #114.#599     // java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;\n-   #46 = Methodref          #250.#600     // org/apache/commons/csv/CSVFormat$Predefined.valueOf:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Predefined;\n-   #47 = Methodref          #250.#601     // org/apache/commons/csv/CSVFormat$Predefined.getFormat:()Lorg/apache/commons/csv/CSVFormat;\n-   #48 = Methodref          #103.#602     // java/lang/Object.\"<init>\":()V\n-   #49 = Methodref          #252.#603     // org/apache/commons/csv/CSVFormat$Builder.access$2200:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-   #50 = Methodref          #252.#604     // org/apache/commons/csv/CSVFormat$Builder.access$2300:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n-   #51 = Methodref          #252.#605     // org/apache/commons/csv/CSVFormat$Builder.access$2400:(Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/QuoteMode;\n-   #52 = Methodref          #252.#606     // org/apache/commons/csv/CSVFormat$Builder.access$2500:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n-   #53 = Methodref          #252.#607     // org/apache/commons/csv/CSVFormat$Builder.access$2600:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n-   #54 = Methodref          #252.#608     // org/apache/commons/csv/CSVFormat$Builder.access$2700:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-   #55 = Methodref          #252.#609     // org/apache/commons/csv/CSVFormat$Builder.access$2800:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-   #56 = Methodref          #252.#610     // org/apache/commons/csv/CSVFormat$Builder.access$2900:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-   #57 = Methodref          #252.#611     // org/apache/commons/csv/CSVFormat$Builder.access$3000:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-   #58 = Methodref          #252.#612     // org/apache/commons/csv/CSVFormat$Builder.access$3100:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-   #59 = Methodref          #252.#613     // org/apache/commons/csv/CSVFormat$Builder.access$3200:(Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n-   #60 = Methodref          #252.#614     // org/apache/commons/csv/CSVFormat$Builder.access$3300:(Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n-   #61 = Methodref          #252.#615     // org/apache/commons/csv/CSVFormat$Builder.access$3400:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-   #62 = Methodref          #252.#616     // org/apache/commons/csv/CSVFormat$Builder.access$3500:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-   #63 = Methodref          #252.#617     // org/apache/commons/csv/CSVFormat$Builder.access$3600:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-   #64 = Methodref          #252.#618     // org/apache/commons/csv/CSVFormat$Builder.access$3700:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-   #65 = Methodref          #252.#619     // org/apache/commons/csv/CSVFormat$Builder.access$3800:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-   #66 = Methodref          #252.#620     // org/apache/commons/csv/CSVFormat$Builder.access$3900:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-   #67 = Methodref          #252.#621     // org/apache/commons/csv/CSVFormat$Builder.access$4000:(Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/DuplicateHeaderMode;\n-   #68 = Methodref          #37.#622      // org/apache/commons/csv/CSVFormat.validate:()V\n-   #69 = Methodref          #37.#623      // org/apache/commons/csv/CSVFormat.toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n-   #70 = Methodref          #37.#624      // org/apache/commons/csv/CSVFormat.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n-   #71 = Class              #283          // \"[Ljava/lang/String;\"\n-   #72 = Class              #625          // java/lang/StringBuilder\n-   #73 = Methodref          #72.#602      // java/lang/StringBuilder.\"<init>\":()V\n-   #74 = Methodref          #72.#626      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #75 = Methodref          #72.#627      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #76 = Methodref          #72.#628      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #77 = InterfaceMethodref #443.#629     // java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n-   #78 = InterfaceMethodref #443.#630     // java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-   #79 = Methodref          #252.#631     // org/apache/commons/csv/CSVFormat$Builder.create:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-   #80 = Methodref          #37.#632      // org/apache/commons/csv/CSVFormat.builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-   #81 = Methodref          #252.#633     // org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n-   #82 = Methodref          #103.#634     // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #83 = Methodref          #573.#635     // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #84 = Methodref          #595.#636     // java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n-   #85 = Class              #637          // java/io/StringWriter\n-   #86 = Methodref          #85.#602      // java/io/StringWriter.\"<init>\":()V\n-   #87 = Class              #638          // org/apache/commons/csv/CSVPrinter\n-   #88 = Methodref          #87.#639      // org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n-   #89 = Methodref          #87.#640      // org/apache/commons/csv/CSVPrinter.printRecord:([Ljava/lang/Object;)V\n-   #90 = Methodref          #85.#628      // java/io/StringWriter.toString:()Ljava/lang/String;\n-   #91 = Methodref          #28.#597      // java/lang/String.length:()I\n-   #92 = Methodref          #28.#641      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #93 = Methodref          #87.#642      // org/apache/commons/csv/CSVPrinter.close:()V\n-   #94 = Class              #643          // java/lang/Throwable\n-   #95 = Methodref          #94.#644      // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-   #96 = Class              #645          // java/io/IOException\n-   #97 = Class              #646          // java/lang/IllegalStateException\n-   #98 = Methodref          #97.#647      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/Throwable;)V\n-   #99 = Methodref          #28.#583      // java/lang/String.charAt:(I)C\n-  #100 = Methodref          #648.#572     // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n-  #101 = Methodref          #649.#572     // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n-  #102 = Methodref          #595.#650     // java/util/Arrays.hashCode:([Ljava/lang/Object;)I\n-  #103 = Class              #651          // java/lang/Object\n-  #104 = Methodref          #652.#653     // java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n-  #105 = Methodref          #573.#654     // java/util/Objects.hash:([Ljava/lang/Object;)I\n-  #106 = Class              #655          // org/apache/commons/csv/CSVParser\n-  #107 = Methodref          #106.#656     // org/apache/commons/csv/CSVParser.\"<init>\":(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n-  #108 = Class              #657          // java/io/OutputStreamWriter\n-  #109 = Class              #658          // java/io/FileOutputStream\n-  #110 = Methodref          #109.#659     // java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n-  #111 = Methodref          #108.#660     // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-  #112 = String             #661          //\n-  #113 = Fieldref           #459.#662     // org/apache/commons/csv/QuoteMode.ALL:Lorg/apache/commons/csv/QuoteMode;\n-  #114 = Class              #663          // java/lang/CharSequence\n-  #115 = Class              #664          // java/io/Reader\n-  #116 = Methodref          #37.#665      // org/apache/commons/csv/CSVFormat.print:(Ljava/io/Reader;Ljava/lang/Appendable;Z)V\n-  #117 = Methodref          #103.#628     // java/lang/Object.toString:()Ljava/lang/String;\n-  #118 = Methodref          #37.#666      // org/apache/commons/csv/CSVFormat.getTrim:()Z\n-  #119 = Methodref          #37.#667      // org/apache/commons/csv/CSVFormat.trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n-  #120 = Methodref          #37.#668      // org/apache/commons/csv/CSVFormat.print:(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n-  #121 = Methodref          #37.#669      // org/apache/commons/csv/CSVFormat.getDelimiterString:()Ljava/lang/String;\n-  #122 = Methodref          #37.#670      // org/apache/commons/csv/CSVFormat.isQuoteCharacterSet:()Z\n-  #123 = Methodref          #37.#671      // org/apache/commons/csv/CSVFormat.printWithQuotes:(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n-  #124 = Methodref          #37.#672      // org/apache/commons/csv/CSVFormat.isEscapeCharacterSet:()Z\n-  #125 = Methodref          #37.#673      // org/apache/commons/csv/CSVFormat.printWithEscapes:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n-  #126 = InterfaceMethodref #443.#674     // java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-  #127 = Class              #675          // java/nio/file/OpenOption\n-  #128 = Methodref          #676.#677     // java/nio/file/Files.newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n-  #129 = Methodref          #37.#678      // org/apache/commons/csv/CSVFormat.print:(Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n-  #130 = Methodref          #37.#679      // org/apache/commons/csv/CSVFormat.append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n-  #131 = Methodref          #37.#680      // org/apache/commons/csv/CSVFormat.printWithQuotes:(Ljava/io/Reader;Ljava/lang/Appendable;)V\n-  #132 = Methodref          #37.#681      // org/apache/commons/csv/CSVFormat.printWithEscapes:(Ljava/io/Reader;Ljava/lang/Appendable;)V\n-  #133 = Class              #682          // java/io/Writer\n-  #134 = Methodref          #145.#683     // org/apache/commons/csv/IOUtils.copyLarge:(Ljava/io/Reader;Ljava/io/Writer;)J\n-  #135 = Methodref          #145.#684     // org/apache/commons/csv/IOUtils.copy:(Ljava/io/Reader;Ljava/lang/Appendable;)J\n-  #136 = Fieldref           #685.#686     // java/lang/System.out:Ljava/io/PrintStream;\n-  #137 = Methodref          #37.#687      // org/apache/commons/csv/CSVFormat.getTrailingDelimiter:()Z\n-  #138 = Methodref          #37.#688      // org/apache/commons/csv/CSVFormat.print:(Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n-  #139 = Methodref          #37.#689      // org/apache/commons/csv/CSVFormat.println:(Ljava/lang/Appendable;)V\n-  #140 = Methodref          #28.#690      // java/lang/String.toCharArray:()[C\n-  #141 = Methodref          #37.#691      // org/apache/commons/csv/CSVFormat.getEscapeCharacter:()Ljava/lang/Character;\n-  #142 = Methodref          #37.#692      // org/apache/commons/csv/CSVFormat.isDelimiter:(CLjava/lang/CharSequence;I[CI)Z\n-  #143 = Class              #693          // org/apache/commons/csv/ExtendedBufferedReader\n-  #144 = Methodref          #143.#694     // org/apache/commons/csv/ExtendedBufferedReader.\"<init>\":(Ljava/io/Reader;)V\n-  #145 = Class              #695          // org/apache/commons/csv/IOUtils\n-  #146 = Methodref          #72.#696      // java/lang/StringBuilder.\"<init>\":(I)V\n-  #147 = Methodref          #143.#697     // org/apache/commons/csv/ExtendedBufferedReader.read:()I\n-  #148 = Methodref          #72.#698      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-  #149 = Methodref          #143.#699     // org/apache/commons/csv/ExtendedBufferedReader.lookAhead:(I)[C\n-  #150 = Methodref          #28.#700      // java/lang/String.\"<init>\":([C)V\n-  #151 = Methodref          #72.#641      // java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n-  #152 = Methodref          #72.#701      // java/lang/StringBuilder.setLength:(I)V\n-  #153 = Methodref          #37.#702      // org/apache/commons/csv/CSVFormat.append:(CLjava/lang/Appendable;)V\n-  #154 = Methodref          #37.#703      // org/apache/commons/csv/CSVFormat.getQuoteCharacter:()Ljava/lang/Character;\n-  #155 = Methodref          #37.#704      // org/apache/commons/csv/CSVFormat.getQuoteMode:()Lorg/apache/commons/csv/QuoteMode;\n-  #156 = Fieldref           #459.#705     // org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n-  #157 = Fieldref           #248.#706     // org/apache/commons/csv/CSVFormat$1.$SwitchMap$org$apache$commons$csv$QuoteMode:[I\n-  #158 = Methodref          #459.#707     // org/apache/commons/csv/QuoteMode.ordinal:()I\n-  #159 = Class              #708          // java/lang/Number\n-  #160 = String             #709          // Unexpected Quote value:\n-  #161 = Methodref          #97.#710      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-  #162 = Fieldref           #459.#711     // org/apache/commons/csv/QuoteMode.NONE:Lorg/apache/commons/csv/QuoteMode;\n-  #163 = Methodref          #115.#697     // java/io/Reader.read:()I\n-  #164 = String             #712          // Delimiter=<\n-  #165 = String             #713          // Escape=<\n-  #166 = String             #714          // QuoteChar=<\n-  #167 = String             #715          // QuoteMode=<\n-  #168 = Methodref          #37.#716      // org/apache/commons/csv/CSVFormat.isCommentMarkerSet:()Z\n-  #169 = String             #717          // CommentStart=<\n-  #170 = Methodref          #37.#718      // org/apache/commons/csv/CSVFormat.isNullStringSet:()Z\n-  #171 = String             #719          // NullString=<\n-  #172 = String             #720          // RecordSeparator=<\n-  #173 = Methodref          #37.#721      // org/apache/commons/csv/CSVFormat.getIgnoreEmptyLines:()Z\n-  #174 = String             #722          //  EmptyLines:ignored\n-  #175 = Methodref          #37.#723      // org/apache/commons/csv/CSVFormat.getIgnoreSurroundingSpaces:()Z\n-  #176 = String             #724          //  SurroundingSpaces:ignored\n-  #177 = Methodref          #37.#725      // org/apache/commons/csv/CSVFormat.getIgnoreHeaderCase:()Z\n-  #178 = String             #726          //  IgnoreHeaderCase:ignored\n-  #179 = String             #727          //  SkipHeaderRecord:\n-  #180 = Methodref          #72.#728      // java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;\n-  #181 = String             #729          // HeaderComments:\n-  #182 = Methodref          #595.#730     // java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n-  #183 = String             #731          // Header:\n-  #184 = Class              #732          // java/lang/IllegalArgumentException\n-  #185 = String             #733          // The delimiter cannot be a line break\n-  #186 = Methodref          #184.#710     // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #187 = String             #734          // The quoteChar character and the delimiter cannot be the same (\\'\n-  #188 = String             #735          // \\')\n-  #189 = String             #736          // The escape character and the delimiter cannot be the same (\\'\n-  #190 = String             #737          // The comment start character and the delimiter cannot be the same (\\'\n-  #191 = Methodref          #580.#738     // java/lang/Character.equals:(Ljava/lang/Object;)Z\n-  #192 = String             #739          // The comment start character and the quoteChar cannot be the same (\\'\n-  #193 = String             #740          // The comment start and the escape character cannot be the same (\\'\n-  #194 = String             #741          // No quotes mode set but no escape character is set\n-  #195 = Class              #742          // java/util/HashSet\n-  #196 = Methodref          #195.#696     // java/util/HashSet.\"<init>\":(I)V\n-  #197 = Fieldref           #476.#743     // org/apache/commons/csv/DuplicateHeaderMode.ALLOW_EMPTY:Lorg/apache/commons/csv/DuplicateHeaderMode;\n-  #198 = Methodref          #37.#744      // org/apache/commons/csv/CSVFormat.isBlank:(Ljava/lang/String;)Z\n-  #199 = InterfaceMethodref #471.#745     // java/util/Set.add:(Ljava/lang/Object;)Z\n-  #200 = String             #746          // The header contains a duplicate name: \\\"%s\\\" in %s. If this is valid then use CSVFormat.Builder.setDuplicateHeaderMode().\n-  #201 = Methodref          #28.#747      // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #202 = Methodref          #252.#748     // org/apache/commons/csv/CSVFormat$Builder.setDuplicateHeaderMode:(Lorg/apache/commons/csv/DuplicateHeaderMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #203 = Methodref          #252.#749     // org/apache/commons/csv/CSVFormat$Builder.setAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #204 = Methodref          #252.#750     // org/apache/commons/csv/CSVFormat$Builder.setAutoFlush:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #205 = Methodref          #252.#751     // org/apache/commons/csv/CSVFormat$Builder.setCommentMarker:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #206 = Methodref          #252.#752     // org/apache/commons/csv/CSVFormat$Builder.setCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #207 = Methodref          #252.#753     // org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #208 = Methodref          #252.#754     // org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #209 = Methodref          #252.#755     // org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #210 = Methodref          #252.#756     // org/apache/commons/csv/CSVFormat$Builder.setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #211 = Methodref          #252.#757     // org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #212 = Methodref          #252.#758     // org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #213 = Methodref          #252.#759     // org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #214 = Methodref          #252.#760     // org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #215 = Methodref          #252.#761     // org/apache/commons/csv/CSVFormat$Builder.setHeaderComments:([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #216 = Methodref          #252.#762     // org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #217 = Methodref          #252.#763     // org/apache/commons/csv/CSVFormat$Builder.setIgnoreHeaderCase:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #218 = Methodref          #252.#764     // org/apache/commons/csv/CSVFormat$Builder.setIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #219 = Methodref          #252.#765     // org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #220 = Methodref          #252.#766     // org/apache/commons/csv/CSVFormat$Builder.setQuote:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #221 = Methodref          #252.#767     // org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #222 = Methodref          #252.#768     // org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #223 = Methodref          #252.#769     // org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #224 = Methodref          #252.#770     // org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #225 = Methodref          #685.#771     // java/lang/System.lineSeparator:()Ljava/lang/String;\n-  #226 = Methodref          #252.#772     // org/apache/commons/csv/CSVFormat$Builder.setTrailingDelimiter:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #227 = Methodref          #252.#773     // org/apache/commons/csv/CSVFormat$Builder.setTrim:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #228 = Methodref          #573.#774     // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-  #229 = String             #775          // ,\n-  #230 = Fieldref           #1.#776       // org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-  #231 = String             #777          // \\r\\n\n-  #232 = Fieldref           #37.#778      // org/apache/commons/csv/CSVFormat.DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-  #233 = Fieldref           #37.#779      // org/apache/commons/csv/CSVFormat.EXCEL:Lorg/apache/commons/csv/CSVFormat;\n-  #234 = Fieldref           #37.#780      // org/apache/commons/csv/CSVFormat.INFORMIX_UNLOAD:Lorg/apache/commons/csv/CSVFormat;\n-  #235 = Methodref          #252.#781     // org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #236 = Fieldref           #37.#782      // org/apache/commons/csv/CSVFormat.INFORMIX_UNLOAD_CSV:Lorg/apache/commons/csv/CSVFormat;\n-  #237 = Fieldref           #37.#783      // org/apache/commons/csv/CSVFormat.MONGODB_CSV:Lorg/apache/commons/csv/CSVFormat;\n-  #238 = Fieldref           #37.#784      // org/apache/commons/csv/CSVFormat.MONGODB_TSV:Lorg/apache/commons/csv/CSVFormat;\n-  #239 = String             #785          // \\\\N\n-  #240 = Fieldref           #459.#786     // org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n-  #241 = Fieldref           #37.#787      // org/apache/commons/csv/CSVFormat.MYSQL:Lorg/apache/commons/csv/CSVFormat;\n-  #242 = Fieldref           #37.#788      // org/apache/commons/csv/CSVFormat.ORACLE:Lorg/apache/commons/csv/CSVFormat;\n-  #243 = Fieldref           #37.#789      // org/apache/commons/csv/CSVFormat.POSTGRESQL_CSV:Lorg/apache/commons/csv/CSVFormat;\n-  #244 = Fieldref           #37.#790      // org/apache/commons/csv/CSVFormat.POSTGRESQL_TEXT:Lorg/apache/commons/csv/CSVFormat;\n-  #245 = Fieldref           #37.#791      // org/apache/commons/csv/CSVFormat.RFC4180:Lorg/apache/commons/csv/CSVFormat;\n-  #246 = Fieldref           #37.#792      // org/apache/commons/csv/CSVFormat.TDF:Lorg/apache/commons/csv/CSVFormat;\n-  #247 = Class              #793          // java/io/Serializable\n-  #248 = Class              #794          // org/apache/commons/csv/CSVFormat$1\n-  #249 = Utf8               InnerClasses\n-  #250 = Class              #795          // org/apache/commons/csv/CSVFormat$Predefined\n-  #251 = Utf8               Predefined\n-  #252 = Class              #796          // org/apache/commons/csv/CSVFormat$Builder\n-  #253 = Utf8               Builder\n-  #254 = Utf8               DEFAULT\n-  #255 = Utf8               Lorg/apache/commons/csv/CSVFormat;\n-  #256 = Utf8               EXCEL\n-  #257 = Utf8               INFORMIX_UNLOAD\n-  #258 = Utf8               INFORMIX_UNLOAD_CSV\n-  #259 = Utf8               MONGODB_CSV\n-  #260 = Utf8               MONGODB_TSV\n-  #261 = Utf8               MYSQL\n-  #262 = Utf8               ORACLE\n-  #263 = Utf8               POSTGRESQL_CSV\n-  #264 = Utf8               POSTGRESQL_TEXT\n-  #265 = Utf8               RFC4180\n-  #266 = Utf8               serialVersionUID\n-  #267 = Utf8               J\n-  #268 = Utf8               ConstantValue\n-  #269 = Long               2l\n-  #271 = Utf8               TDF\n-  #272 = Utf8               duplicateHeaderMode\n-  #273 = Utf8               Lorg/apache/commons/csv/DuplicateHeaderMode;\n-  #274 = Utf8               allowMissingColumnNames\n-  #275 = Utf8               Z\n-  #276 = Utf8               autoFlush\n-  #277 = Utf8               commentMarker\n-  #278 = Utf8               Ljava/lang/Character;\n-  #279 = Utf8               delimiter\n-  #280 = Utf8               Ljava/lang/String;\n-  #281 = Utf8               escapeCharacter\n-  #282 = Utf8               headers\n-  #283 = Utf8               [Ljava/lang/String;\n-  #284 = Utf8               headerComments\n-  #285 = Utf8               ignoreEmptyLines\n-  #286 = Utf8               ignoreHeaderCase\n-  #287 = Utf8               ignoreSurroundingSpaces\n-  #288 = Utf8               nullString\n-  #289 = Utf8               quoteCharacter\n-  #290 = Utf8               quotedNullString\n-  #291 = Utf8               quoteMode\n-  #292 = Utf8               Lorg/apache/commons/csv/QuoteMode;\n-  #293 = Utf8               recordSeparator\n-  #294 = Utf8               skipHeaderRecord\n-  #295 = Utf8               trailingDelimiter\n-  #296 = Utf8               trim\n-  #297 = Utf8               clone\n-  #298 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #299 = Utf8               Code\n-  #300 = Utf8               LineNumberTable\n-  #301 = Utf8               LocalVariableTable\n-  #302 = Utf8               values\n-  #303 = Utf8               [Ljava/lang/Object;\n-  #304 = Utf8               LocalVariableTypeTable\n-  #305 = Utf8               [TT;\n-  #306 = Utf8               StackMapTable\n-  #307 = Utf8               Signature\n-  #308 = Utf8               <T:Ljava/lang/Object;>([TT;)[TT;\n-  #309 = Utf8               RuntimeVisibleAnnotations\n-  #310 = Utf8               Ljava/lang/SafeVarargs;\n-  #311 = Utf8               contains\n-  #312 = Utf8               (Ljava/lang/String;C)Z\n-  #313 = Utf8               source\n-  #314 = Utf8               searchCh\n-  #315 = Utf8               C\n-  #316 = Utf8               containsLineBreak\n-  #317 = Utf8               (Ljava/lang/String;)Z\n-  #318 = Utf8               isBlank\n-  #319 = Utf8               value\n-  #320 = Utf8               isLineBreak\n-  #321 = Utf8               (C)Z\n-  #322 = Utf8               c\n-  #323 = Utf8               (Ljava/lang/Character;)Z\n-  #324 = Utf8               isTrimChar\n-  #325 = Utf8               ch\n-  #326 = Utf8               (Ljava/lang/CharSequence;I)Z\n-  #327 = Utf8               charSequence\n-  #328 = Utf8               Ljava/lang/CharSequence;\n-  #329 = Utf8               pos\n-  #330 = Utf8               I\n-  #331 = Utf8               newFormat\n-  #332 = Utf8               (C)Lorg/apache/commons/csv/CSVFormat;\n-  #333 = Utf8               toStringArray\n-  #334 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/String;\n-  #335 = Utf8               strings\n-  #336 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n-  #337 = Utf8               count\n-  #338 = Utf8               len\n-  #339 = Utf8               valueOf\n-  #340 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-  #341 = Utf8               format\n-  #342 = Utf8               <init>\n-  #343 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)V\n-  #344 = Utf8               this\n-  #345 = Utf8               builder\n-  #346 = Utf8               Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #347 = Utf8               (Ljava/lang/String;Ljava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZLorg/apache/commons/csv/DuplicateHeaderMode;)V\n-  #348 = Utf8               quoteChar\n-  #349 = Utf8               commentStart\n-  #350 = Utf8               escape\n-  #351 = Utf8               header\n-  #352 = Utf8               append\n-  #353 = Utf8               (CLjava/lang/Appendable;)V\n-  #354 = Utf8               appendable\n-  #355 = Utf8               Ljava/lang/Appendable;\n-  #356 = Utf8               Exceptions\n-  #357 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n-  #358 = Utf8               csq\n-  #359 = Utf8               ()Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #360 = Utf8               copy\n-  #361 = Utf8               ()Lorg/apache/commons/csv/CSVFormat;\n-  #362 = Utf8               equals\n-  #363 = Utf8               (Ljava/lang/Object;)Z\n-  #364 = Utf8               obj\n-  #365 = Utf8               Ljava/lang/Object;\n-  #366 = Utf8               other\n-  #367 = Utf8               ([Ljava/lang/Object;)Ljava/lang/String;\n-  #368 = Utf8               res\n-  #369 = Utf8               csvPrinter\n-  #370 = Utf8               Lorg/apache/commons/csv/CSVPrinter;\n-  #371 = Utf8               e\n-  #372 = Utf8               Ljava/io/IOException;\n-  #373 = Utf8               out\n-  #374 = Utf8               Ljava/io/StringWriter;\n-  #375 = Utf8               getAllowDuplicateHeaderNames\n-  #376 = Utf8               ()Z\n-  #377 = Utf8               Deprecated\n-  #378 = Utf8               Ljava/lang/Deprecated;\n-  #379 = Utf8               getAllowMissingColumnNames\n-  #380 = Utf8               getAutoFlush\n-  #381 = Utf8               getCommentMarker\n-  #382 = Utf8               ()Ljava/lang/Character;\n-  #383 = Utf8               getDelimiter\n-  #384 = Utf8               ()C\n-  #385 = Utf8               getDelimiterString\n-  #386 = Utf8               ()Ljava/lang/String;\n-  #387 = Utf8               getDuplicateHeaderMode\n-  #388 = Utf8               ()Lorg/apache/commons/csv/DuplicateHeaderMode;\n-  #389 = Utf8               getEscapeCharacter\n-  #390 = Utf8               getHeader\n-  #391 = Utf8               ()[Ljava/lang/String;\n-  #392 = Utf8               getHeaderComments\n-  #393 = Utf8               getIgnoreEmptyLines\n-  #394 = Utf8               getIgnoreHeaderCase\n-  #395 = Utf8               getIgnoreSurroundingSpaces\n-  #396 = Utf8               getNullString\n-  #397 = Utf8               getQuoteCharacter\n-  #398 = Utf8               getQuoteMode\n-  #399 = Utf8               ()Lorg/apache/commons/csv/QuoteMode;\n-  #400 = Utf8               getRecordSeparator\n-  #401 = Utf8               getSkipHeaderRecord\n-  #402 = Utf8               getTrailingDelimiter\n-  #403 = Utf8               getTrim\n-  #404 = Utf8               hashCode\n-  #405 = Utf8               ()I\n-  #406 = Utf8               prime\n-  #407 = Utf8               result\n-  #408 = Utf8               isCommentMarkerSet\n-  #409 = Utf8               isDelimiter\n-  #410 = Utf8               (CLjava/lang/CharSequence;I[CI)Z\n-  #411 = Utf8               i\n-  #412 = Utf8               charSeq\n-  #413 = Utf8               startIndex\n-  #414 = Utf8               [C\n-  #415 = Utf8               delimiterLength\n-  #416 = Utf8               isEscapeCharacterSet\n-  #417 = Utf8               isNullStringSet\n-  #418 = Utf8               isQuoteCharacterSet\n-  #419 = Utf8               parse\n-  #420 = Utf8               (Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n-  #421 = Utf8               reader\n-  #422 = Utf8               Ljava/io/Reader;\n-  #423 = Utf8               print\n-  #424 = Utf8               (Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n-  #425 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;)Lorg/apache/commons/csv/CSVPrinter;\n-  #426 = Utf8               Ljava/io/File;\n-  #427 = Utf8               charset\n-  #428 = Utf8               Ljava/nio/charset/Charset;\n-  #429 = Utf8               (Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n-  #430 = Utf8               newRecord\n-  #431 = Utf8               (Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n-  #432 = Utf8               object\n-  #433 = Utf8               offset\n-  #434 = Utf8               (Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Lorg/apache/commons/csv/CSVPrinter;\n-  #435 = Utf8               Ljava/nio/file/Path;\n-  #436 = Utf8               (Ljava/io/Reader;Ljava/lang/Appendable;Z)V\n-  #437 = Utf8               printer\n-  #438 = Utf8               ()Lorg/apache/commons/csv/CSVPrinter;\n-  #439 = Utf8               println\n-  #440 = Utf8               (Ljava/lang/Appendable;)V\n-  #441 = Utf8               printRecord\n-  #442 = Utf8               (Ljava/lang/Appendable;[Ljava/lang/Object;)V\n-  #443 = Class              #797          // java/lang/Appendable\n-  #444 = Utf8               printWithEscapes\n-  #445 = Utf8               isDelimiterStart\n-  #446 = Utf8               start\n-  #447 = Utf8               end\n-  #448 = Utf8               delim\n-  #449 = Utf8               delimLength\n-  #450 = Class              #414          // \"[C\"\n-  #451 = Utf8               (Ljava/io/Reader;Ljava/lang/Appendable;)V\n-  #452 = Utf8               bufferedReader\n-  #453 = Utf8               Lorg/apache/commons/csv/ExtendedBufferedReader;\n-  #454 = Utf8               Ljava/lang/StringBuilder;\n-  #455 = Utf8               printWithQuotes\n-  #456 = Utf8               quote\n-  #457 = Utf8               escapeChar\n-  #458 = Utf8               quoteModePolicy\n-  #459 = Class              #798          // org/apache/commons/csv/QuoteMode\n-  #460 = Utf8               toString\n-  #461 = Utf8               sb\n-  #462 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #463 = Utf8               validate\n-  #464 = Utf8               ()V\n-  #465 = Utf8               blank\n-  #466 = Utf8               containsHeader\n-  #467 = Utf8               dupCheckSet\n-  #468 = Utf8               Ljava/util/Set;\n-  #469 = Utf8               emptyDuplicatesAllowed\n-  #470 = Utf8               Ljava/util/Set<Ljava/lang/String;>;\n-  #471 = Class              #799          // java/util/Set\n-  #472 = Utf8               withAllowDuplicateHeaderNames\n-  #473 = Utf8               (Z)Lorg/apache/commons/csv/CSVFormat;\n-  #474 = Utf8               allowDuplicateHeaderNames\n-  #475 = Utf8               mode\n-  #476 = Class              #800          // org/apache/commons/csv/DuplicateHeaderMode\n-  #477 = Utf8               withAllowMissingColumnNames\n-  #478 = Utf8               withAutoFlush\n-  #479 = Utf8               withCommentMarker\n-  #480 = Utf8               (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n-  #481 = Utf8               withDelimiter\n-  #482 = Utf8               withEscape\n-  #483 = Utf8               withFirstRecordAsHeader\n-  #484 = Utf8               withHeader\n-  #485 = Utf8               (Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat;\n-  #486 = Utf8               headerEnum\n-  #487 = Utf8               Ljava/lang/Class;\n-  #488 = Utf8               Ljava/lang/Class<+Ljava/lang/Enum<*>;>;\n-  #489 = Utf8               (Ljava/lang/Class<+Ljava/lang/Enum<*>;>;)Lorg/apache/commons/csv/CSVFormat;\n-  #490 = Utf8               (Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat;\n-  #491 = Utf8               resultSet\n-  #492 = Utf8               Ljava/sql/ResultSet;\n-  #493 = Class              #801          // java/sql/SQLException\n-  #494 = Utf8               (Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;\n-  #495 = Utf8               resultSetMetaData\n-  #496 = Utf8               Ljava/sql/ResultSetMetaData;\n-  #497 = Utf8               ([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-  #498 = Utf8               withHeaderComments\n-  #499 = Utf8               ([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat;\n-  #500 = Utf8               withIgnoreEmptyLines\n-  #501 = Utf8               withIgnoreHeaderCase\n-  #502 = Utf8               withIgnoreSurroundingSpaces\n-  #503 = Utf8               withNullString\n-  #504 = Utf8               withQuote\n-  #505 = Utf8               withQuoteMode\n-  #506 = Utf8               (Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n-  #507 = Utf8               withRecordSeparator\n-  #508 = Utf8               withSkipHeaderRecord\n-  #509 = Utf8               withSystemRecordSeparator\n-  #510 = Utf8               withTrailingDelimiter\n-  #511 = Utf8               withTrim\n-  #512 = Utf8               lambda$toStringArray$0\n-  #513 = Utf8               ([Ljava/lang/Object;I)Ljava/lang/String;\n-  #514 = Utf8               access$000\n-  #515 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-  #516 = Utf8               x0\n-  #517 = Utf8               access$100\n-  #518 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-  #519 = Utf8               access$200\n-  #520 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/QuoteMode;\n-  #521 = Utf8               access$300\n-  #522 = Utf8               access$400\n-  #523 = Utf8               access$500\n-  #524 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Z\n-  #525 = Utf8               access$600\n-  #526 = Utf8               access$700\n-  #527 = Utf8               access$800\n-  #528 = Utf8               access$900\n-  #529 = Utf8               access$1000\n-  #530 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n-  #531 = Utf8               access$1100\n-  #532 = Utf8               access$1200\n-  #533 = Utf8               access$1300\n-  #534 = Utf8               access$1400\n-  #535 = Utf8               access$1500\n-  #536 = Utf8               access$1600\n-  #537 = Utf8               access$1700\n-  #538 = Utf8               access$1800\n-  #539 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/DuplicateHeaderMode;\n-  #540 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;Lorg/apache/commons/csv/CSVFormat$1;)V\n-  #541 = Utf8               x1\n-  #542 = Utf8               Lorg/apache/commons/csv/CSVFormat$1;\n-  #543 = Utf8               access$2000\n-  #544 = Utf8               access$2100\n-  #545 = Utf8               <clinit>\n-  #546 = Utf8               SourceFile\n-  #547 = Utf8               CSVFormat.java\n-  #548 = Utf8               org/apache/commons/csv/Constants\n-  #549 = NameAndType        #316:#317     // containsLineBreak:(Ljava/lang/String;)Z\n-  #550 = NameAndType        #320:#323     // isLineBreak:(Ljava/lang/Character;)Z\n-  #551 = NameAndType        #342:#343     // \"<init>\":(Lorg/apache/commons/csv/CSVFormat$Builder;)V\n-  #552 = NameAndType        #272:#273     // duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n-  #553 = NameAndType        #290:#280     // quotedNullString:Ljava/lang/String;\n-  #554 = NameAndType        #276:#275     // autoFlush:Z\n-  #555 = NameAndType        #296:#275     // trim:Z\n-  #556 = NameAndType        #295:#275     // trailingDelimiter:Z\n-  #557 = NameAndType        #286:#275     // ignoreHeaderCase:Z\n-  #558 = NameAndType        #294:#275     // skipHeaderRecord:Z\n-  #559 = NameAndType        #282:#283     // headers:[Ljava/lang/String;\n-  #560 = NameAndType        #284:#283     // headerComments:[Ljava/lang/String;\n-  #561 = NameAndType        #288:#280     // nullString:Ljava/lang/String;\n-  #562 = NameAndType        #293:#280     // recordSeparator:Ljava/lang/String;\n-  #563 = NameAndType        #285:#275     // ignoreEmptyLines:Z\n-  #564 = NameAndType        #274:#275     // allowMissingColumnNames:Z\n-  #565 = NameAndType        #287:#275     // ignoreSurroundingSpaces:Z\n-  #566 = NameAndType        #281:#278     // escapeCharacter:Ljava/lang/Character;\n-  #567 = NameAndType        #277:#278     // commentMarker:Ljava/lang/Character;\n-  #568 = NameAndType        #291:#292     // quoteMode:Lorg/apache/commons/csv/QuoteMode;\n-  #569 = NameAndType        #289:#278     // quoteCharacter:Ljava/lang/Character;\n-  #570 = NameAndType        #279:#280     // delimiter:Ljava/lang/String;\n-  #571 = Class              #303          // \"[Ljava/lang/Object;\"\n-  #572 = NameAndType        #297:#802     // clone:()Ljava/lang/Object;\n-  #573 = Class              #803          // java/util/Objects\n-  #574 = NameAndType        #804:#805     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #575 = Utf8               java/lang/String\n-  #576 = NameAndType        #806:#807     // indexOf:(I)I\n-  #577 = NameAndType        #311:#312     // contains:(Ljava/lang/String;C)Z\n-  #578 = NameAndType        #296:#386     // trim:()Ljava/lang/String;\n-  #579 = NameAndType        #808:#376     // isEmpty:()Z\n-  #580 = Class              #809          // java/lang/Character\n-  #581 = NameAndType        #810:#384     // charValue:()C\n-  #582 = NameAndType        #320:#321     // isLineBreak:(C)Z\n-  #583 = NameAndType        #811:#812     // charAt:(I)C\n-  #584 = NameAndType        #324:#321     // isTrimChar:(C)Z\n-  #585 = Utf8               org/apache/commons/csv/CSVFormat\n-  #586 = NameAndType        #339:#813     // valueOf:(C)Ljava/lang/String;\n-  #587 = NameAndType        #814:#273     // ALLOW_ALL:Lorg/apache/commons/csv/DuplicateHeaderMode;\n-  #588 = NameAndType        #342:#347     // \"<init>\":(Ljava/lang/String;Ljava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZLorg/apache/commons/csv/DuplicateHeaderMode;)V\n-  #589 = Utf8               BootstrapMethods\n-  #590 = MethodHandle       6:#815        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #591 = MethodType         #816          //  (I)Ljava/lang/Object;\n-  #592 = MethodHandle       6:#817        // REF_invokeStatic org/apache/commons/csv/CSVFormat.lambda$toStringArray$0:([Ljava/lang/Object;I)Ljava/lang/String;\n-  #593 = MethodType         #818          //  (I)Ljava/lang/String;\n-  #594 = NameAndType        #819:#820     // apply:([Ljava/lang/Object;)Ljava/util/function/IntFunction;\n-  #595 = Class              #821          // java/util/Arrays\n-  #596 = NameAndType        #822:#823     // setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n-  #597 = NameAndType        #824:#405     // length:()I\n-  #598 = NameAndType        #324:#326     // isTrimChar:(Ljava/lang/CharSequence;I)Z\n-  #599 = NameAndType        #825:#826     // subSequence:(II)Ljava/lang/CharSequence;\n-  #600 = NameAndType        #339:#827     // valueOf:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Predefined;\n-  #601 = NameAndType        #828:#361     // getFormat:()Lorg/apache/commons/csv/CSVFormat;\n-  #602 = NameAndType        #342:#464     // \"<init>\":()V\n-  #603 = NameAndType        #829:#830     // access$2200:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-  #604 = NameAndType        #831:#832     // access$2300:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n-  #605 = NameAndType        #833:#834     // access$2400:(Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/QuoteMode;\n-  #606 = NameAndType        #835:#832     // access$2500:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n-  #607 = NameAndType        #836:#832     // access$2600:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n-  #608 = NameAndType        #837:#838     // access$2700:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-  #609 = NameAndType        #839:#838     // access$2800:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-  #610 = NameAndType        #840:#838     // access$2900:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-  #611 = NameAndType        #841:#830     // access$3000:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-  #612 = NameAndType        #842:#830     // access$3100:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-  #613 = NameAndType        #843:#844     // access$3200:(Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n-  #614 = NameAndType        #845:#844     // access$3300:(Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n-  #615 = NameAndType        #846:#838     // access$3400:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-  #616 = NameAndType        #847:#838     // access$3500:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-  #617 = NameAndType        #848:#838     // access$3600:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-  #618 = NameAndType        #849:#838     // access$3700:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-  #619 = NameAndType        #850:#838     // access$3800:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-  #620 = NameAndType        #851:#830     // access$3900:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-  #621 = NameAndType        #852:#853     // access$4000:(Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/DuplicateHeaderMode;\n-  #622 = NameAndType        #463:#464     // validate:()V\n-  #623 = NameAndType        #333:#334     // toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n-  #624 = NameAndType        #297:#298     // clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #625 = Utf8               java/lang/StringBuilder\n-  #626 = NameAndType        #352:#854     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #627 = NameAndType        #352:#855     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #628 = NameAndType        #460:#386     // toString:()Ljava/lang/String;\n-  #629 = NameAndType        #352:#856     // append:(C)Ljava/lang/Appendable;\n-  #630 = NameAndType        #352:#857     // append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-  #631 = NameAndType        #858:#859     // create:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #632 = NameAndType        #345:#359     // builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #633 = NameAndType        #860:#361     // build:()Lorg/apache/commons/csv/CSVFormat;\n-  #634 = NameAndType        #861:#862     // getClass:()Ljava/lang/Class;\n-  #635 = NameAndType        #362:#863     // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #636 = NameAndType        #362:#864     // equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n-  #637 = Utf8               java/io/StringWriter\n-  #638 = Utf8               org/apache/commons/csv/CSVPrinter\n-  #639 = NameAndType        #342:#865     // \"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n-  #640 = NameAndType        #441:#866     // printRecord:([Ljava/lang/Object;)V\n-  #641 = NameAndType        #867:#868     // substring:(II)Ljava/lang/String;\n-  #642 = NameAndType        #869:#464     // close:()V\n-  #643 = Utf8               java/lang/Throwable\n-  #644 = NameAndType        #870:#871     // addSuppressed:(Ljava/lang/Throwable;)V\n-  #645 = Utf8               java/io/IOException\n-  #646 = Utf8               java/lang/IllegalStateException\n-  #647 = NameAndType        #342:#871     // \"<init>\":(Ljava/lang/Throwable;)V\n-  #648 = Class              #283          // \"[Ljava/lang/String;\"\n-  #649 = Class              #283          // \"[Ljava/lang/String;\"\n-  #650 = NameAndType        #404:#872     // hashCode:([Ljava/lang/Object;)I\n-  #651 = Utf8               java/lang/Object\n-  #652 = Class              #873          // java/lang/Boolean\n-  #653 = NameAndType        #339:#874     // valueOf:(Z)Ljava/lang/Boolean;\n-  #654 = NameAndType        #875:#872     // hash:([Ljava/lang/Object;)I\n-  #655 = Utf8               org/apache/commons/csv/CSVParser\n-  #656 = NameAndType        #342:#876     // \"<init>\":(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n-  #657 = Utf8               java/io/OutputStreamWriter\n-  #658 = Utf8               java/io/FileOutputStream\n-  #659 = NameAndType        #342:#877     // \"<init>\":(Ljava/io/File;)V\n-  #660 = NameAndType        #342:#878     // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-  #661 = Utf8\n-  #662 = NameAndType        #879:#292     // ALL:Lorg/apache/commons/csv/QuoteMode;\n-  #663 = Utf8               java/lang/CharSequence\n-  #664 = Utf8               java/io/Reader\n-  #665 = NameAndType        #423:#436     // print:(Ljava/io/Reader;Ljava/lang/Appendable;Z)V\n-  #666 = NameAndType        #403:#376     // getTrim:()Z\n-  #667 = NameAndType        #296:#336     // trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n-  #668 = NameAndType        #423:#431     // print:(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n-  #669 = NameAndType        #385:#386     // getDelimiterString:()Ljava/lang/String;\n-  #670 = NameAndType        #418:#376     // isQuoteCharacterSet:()Z\n-  #671 = NameAndType        #455:#431     // printWithQuotes:(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n-  #672 = NameAndType        #416:#376     // isEscapeCharacterSet:()Z\n-  #673 = NameAndType        #444:#357     // printWithEscapes:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n-  #674 = NameAndType        #352:#880     // append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-  #675 = Utf8               java/nio/file/OpenOption\n-  #676 = Class              #881          // java/nio/file/Files\n-  #677 = NameAndType        #882:#883     // newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n-  #678 = NameAndType        #423:#424     // print:(Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n-  #679 = NameAndType        #352:#357     // append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n-  #680 = NameAndType        #455:#451     // printWithQuotes:(Ljava/io/Reader;Ljava/lang/Appendable;)V\n-  #681 = NameAndType        #444:#451     // printWithEscapes:(Ljava/io/Reader;Ljava/lang/Appendable;)V\n-  #682 = Utf8               java/io/Writer\n-  #683 = NameAndType        #884:#885     // copyLarge:(Ljava/io/Reader;Ljava/io/Writer;)J\n-  #684 = NameAndType        #360:#886     // copy:(Ljava/io/Reader;Ljava/lang/Appendable;)J\n-  #685 = Class              #887          // java/lang/System\n-  #686 = NameAndType        #373:#888     // out:Ljava/io/PrintStream;\n-  #687 = NameAndType        #402:#376     // getTrailingDelimiter:()Z\n-  #688 = NameAndType        #423:#429     // print:(Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n-  #689 = NameAndType        #439:#440     // println:(Ljava/lang/Appendable;)V\n-  #690 = NameAndType        #889:#890     // toCharArray:()[C\n-  #691 = NameAndType        #389:#382     // getEscapeCharacter:()Ljava/lang/Character;\n-  #692 = NameAndType        #409:#410     // isDelimiter:(CLjava/lang/CharSequence;I[CI)Z\n-  #693 = Utf8               org/apache/commons/csv/ExtendedBufferedReader\n-  #694 = NameAndType        #342:#891     // \"<init>\":(Ljava/io/Reader;)V\n-  #695 = Utf8               org/apache/commons/csv/IOUtils\n-  #696 = NameAndType        #342:#892     // \"<init>\":(I)V\n-  #697 = NameAndType        #893:#405     // read:()I\n-  #698 = NameAndType        #352:#894     // append:(C)Ljava/lang/StringBuilder;\n-  #699 = NameAndType        #895:#896     // lookAhead:(I)[C\n-  #700 = NameAndType        #342:#897     // \"<init>\":([C)V\n-  #701 = NameAndType        #898:#892     // setLength:(I)V\n-  #702 = NameAndType        #352:#353     // append:(CLjava/lang/Appendable;)V\n-  #703 = NameAndType        #397:#382     // getQuoteCharacter:()Ljava/lang/Character;\n-  #704 = NameAndType        #398:#399     // getQuoteMode:()Lorg/apache/commons/csv/QuoteMode;\n-  #705 = NameAndType        #899:#292     // MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n-  #706 = NameAndType        #900:#901     // $SwitchMap$org$apache$commons$csv$QuoteMode:[I\n-  #707 = NameAndType        #902:#405     // ordinal:()I\n-  #708 = Utf8               java/lang/Number\n-  #709 = Utf8               Unexpected Quote value:\n-  #710 = NameAndType        #342:#903     // \"<init>\":(Ljava/lang/String;)V\n-  #711 = NameAndType        #904:#292     // NONE:Lorg/apache/commons/csv/QuoteMode;\n-  #712 = Utf8               Delimiter=<\n-  #713 = Utf8               Escape=<\n-  #714 = Utf8               QuoteChar=<\n-  #715 = Utf8               QuoteMode=<\n-  #716 = NameAndType        #408:#376     // isCommentMarkerSet:()Z\n-  #717 = Utf8               CommentStart=<\n-  #718 = NameAndType        #417:#376     // isNullStringSet:()Z\n-  #719 = Utf8               NullString=<\n-  #720 = Utf8               RecordSeparator=<\n-  #721 = NameAndType        #393:#376     // getIgnoreEmptyLines:()Z\n-  #722 = Utf8                EmptyLines:ignored\n-  #723 = NameAndType        #395:#376     // getIgnoreSurroundingSpaces:()Z\n-  #724 = Utf8                SurroundingSpaces:ignored\n-  #725 = NameAndType        #394:#376     // getIgnoreHeaderCase:()Z\n-  #726 = Utf8                IgnoreHeaderCase:ignored\n-  #727 = Utf8                SkipHeaderRecord:\n-  #728 = NameAndType        #352:#905     // append:(Z)Ljava/lang/StringBuilder;\n-  #729 = Utf8               HeaderComments:\n-  #730 = NameAndType        #460:#367     // toString:([Ljava/lang/Object;)Ljava/lang/String;\n-  #731 = Utf8               Header:\n-  #732 = Utf8               java/lang/IllegalArgumentException\n-  #733 = Utf8               The delimiter cannot be a line break\n-  #734 = Utf8               The quoteChar character and the delimiter cannot be the same (\\'\n-  #735 = Utf8               \\')\n-  #736 = Utf8               The escape character and the delimiter cannot be the same (\\'\n-  #737 = Utf8               The comment start character and the delimiter cannot be the same (\\'\n-  #738 = NameAndType        #362:#363     // equals:(Ljava/lang/Object;)Z\n-  #739 = Utf8               The comment start character and the quoteChar cannot be the same (\\'\n-  #740 = Utf8               The comment start and the escape character cannot be the same (\\'\n-  #741 = Utf8               No quotes mode set but no escape character is set\n-  #742 = Utf8               java/util/HashSet\n-  #743 = NameAndType        #906:#273     // ALLOW_EMPTY:Lorg/apache/commons/csv/DuplicateHeaderMode;\n-  #744 = NameAndType        #318:#317     // isBlank:(Ljava/lang/String;)Z\n-  #745 = NameAndType        #907:#363     // add:(Ljava/lang/Object;)Z\n-  #746 = Utf8               The header contains a duplicate name: \\\"%s\\\" in %s. If this is valid then use CSVFormat.Builder.setDuplicateHeaderMode().\n-  #747 = NameAndType        #341:#908     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #748 = NameAndType        #909:#910     // setDuplicateHeaderMode:(Lorg/apache/commons/csv/DuplicateHeaderMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #749 = NameAndType        #911:#912     // setAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #750 = NameAndType        #913:#912     // setAutoFlush:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #751 = NameAndType        #914:#915     // setCommentMarker:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #752 = NameAndType        #914:#916     // setCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #753 = NameAndType        #917:#915     // setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #754 = NameAndType        #918:#915     // setEscape:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #755 = NameAndType        #918:#916     // setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #756 = NameAndType        #919:#920     // setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #757 = NameAndType        #921:#912     // setSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #758 = NameAndType        #919:#922     // setHeader:(Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #759 = NameAndType        #919:#923     // setHeader:(Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #760 = NameAndType        #919:#924     // setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #761 = NameAndType        #925:#926     // setHeaderComments:([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #762 = NameAndType        #927:#912     // setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #763 = NameAndType        #928:#912     // setIgnoreHeaderCase:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #764 = NameAndType        #929:#912     // setIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #765 = NameAndType        #930:#931     // setNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #766 = NameAndType        #932:#915     // setQuote:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #767 = NameAndType        #932:#916     // setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #768 = NameAndType        #933:#934     // setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #769 = NameAndType        #935:#915     // setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #770 = NameAndType        #935:#931     // setRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #771 = NameAndType        #936:#386     // lineSeparator:()Ljava/lang/String;\n-  #772 = NameAndType        #937:#912     // setTrailingDelimiter:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #773 = NameAndType        #938:#912     // setTrim:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #774 = NameAndType        #460:#939     // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-  #775 = Utf8               ,\n-  #776 = NameAndType        #940:#278     // DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-  #777 = Utf8               \\r\\n\n-  #778 = NameAndType        #254:#255     // DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-  #779 = NameAndType        #256:#255     // EXCEL:Lorg/apache/commons/csv/CSVFormat;\n-  #780 = NameAndType        #257:#255     // INFORMIX_UNLOAD:Lorg/apache/commons/csv/CSVFormat;\n-  #781 = NameAndType        #917:#931     // setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #782 = NameAndType        #258:#255     // INFORMIX_UNLOAD_CSV:Lorg/apache/commons/csv/CSVFormat;\n-  #783 = NameAndType        #259:#255     // MONGODB_CSV:Lorg/apache/commons/csv/CSVFormat;\n-  #784 = NameAndType        #260:#255     // MONGODB_TSV:Lorg/apache/commons/csv/CSVFormat;\n-  #785 = Utf8               \\\\N\n-  #786 = NameAndType        #941:#292     // ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n-  #787 = NameAndType        #261:#255     // MYSQL:Lorg/apache/commons/csv/CSVFormat;\n-  #788 = NameAndType        #262:#255     // ORACLE:Lorg/apache/commons/csv/CSVFormat;\n-  #789 = NameAndType        #263:#255     // POSTGRESQL_CSV:Lorg/apache/commons/csv/CSVFormat;\n-  #790 = NameAndType        #264:#255     // POSTGRESQL_TEXT:Lorg/apache/commons/csv/CSVFormat;\n-  #791 = NameAndType        #265:#255     // RFC4180:Lorg/apache/commons/csv/CSVFormat;\n-  #792 = NameAndType        #271:#255     // TDF:Lorg/apache/commons/csv/CSVFormat;\n-  #793 = Utf8               java/io/Serializable\n-  #794 = Utf8               org/apache/commons/csv/CSVFormat$1\n-  #795 = Utf8               org/apache/commons/csv/CSVFormat$Predefined\n-  #796 = Utf8               org/apache/commons/csv/CSVFormat$Builder\n-  #797 = Utf8               java/lang/Appendable\n-  #798 = Utf8               org/apache/commons/csv/QuoteMode\n-  #799 = Utf8               java/util/Set\n-  #800 = Utf8               org/apache/commons/csv/DuplicateHeaderMode\n-  #801 = Utf8               java/sql/SQLException\n-  #802 = Utf8               ()Ljava/lang/Object;\n-  #803 = Utf8               java/util/Objects\n-  #804 = Utf8               requireNonNull\n-  #805 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #806 = Utf8               indexOf\n-  #807 = Utf8               (I)I\n-  #808 = Utf8               isEmpty\n-  #809 = Utf8               java/lang/Character\n-  #810 = Utf8               charValue\n-  #811 = Utf8               charAt\n-  #812 = Utf8               (I)C\n-  #813 = Utf8               (C)Ljava/lang/String;\n-  #814 = Utf8               ALLOW_ALL\n-  #815 = Methodref          #942.#943     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #816 = Utf8               (I)Ljava/lang/Object;\n-  #817 = Methodref          #37.#944      // org/apache/commons/csv/CSVFormat.lambda$toStringArray$0:([Ljava/lang/Object;I)Ljava/lang/String;\n-  #818 = Utf8               (I)Ljava/lang/String;\n-  #819 = Utf8               apply\n-  #820 = Utf8               ([Ljava/lang/Object;)Ljava/util/function/IntFunction;\n-  #821 = Utf8               java/util/Arrays\n-  #822 = Utf8               setAll\n-  #823 = Utf8               ([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n-  #824 = Utf8               length\n-  #825 = Utf8               subSequence\n-  #826 = Utf8               (II)Ljava/lang/CharSequence;\n-  #827 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Predefined;\n-  #828 = Utf8               getFormat\n-  #829 = Utf8               access$2200\n-  #830 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-  #831 = Utf8               access$2300\n-  #832 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n-  #833 = Utf8               access$2400\n-  #834 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/QuoteMode;\n-  #835 = Utf8               access$2500\n-  #836 = Utf8               access$2600\n-  #837 = Utf8               access$2700\n-  #838 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-  #839 = Utf8               access$2800\n-  #840 = Utf8               access$2900\n-  #841 = Utf8               access$3000\n-  #842 = Utf8               access$3100\n-  #843 = Utf8               access$3200\n-  #844 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n-  #845 = Utf8               access$3300\n-  #846 = Utf8               access$3400\n-  #847 = Utf8               access$3500\n-  #848 = Utf8               access$3600\n-  #849 = Utf8               access$3700\n-  #850 = Utf8               access$3800\n-  #851 = Utf8               access$3900\n-  #852 = Utf8               access$4000\n-  #853 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/DuplicateHeaderMode;\n-  #854 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #855 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #856 = Utf8               (C)Ljava/lang/Appendable;\n-  #857 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-  #858 = Utf8               create\n-  #859 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #860 = Utf8               build\n-  #861 = Utf8               getClass\n-  #862 = Utf8               ()Ljava/lang/Class;\n-  #863 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #864 = Utf8               ([Ljava/lang/Object;[Ljava/lang/Object;)Z\n-  #865 = Utf8               (Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n-  #866 = Utf8               ([Ljava/lang/Object;)V\n-  #867 = Utf8               substring\n-  #868 = Utf8               (II)Ljava/lang/String;\n-  #869 = Utf8               close\n-  #870 = Utf8               addSuppressed\n-  #871 = Utf8               (Ljava/lang/Throwable;)V\n-  #872 = Utf8               ([Ljava/lang/Object;)I\n-  #873 = Utf8               java/lang/Boolean\n-  #874 = Utf8               (Z)Ljava/lang/Boolean;\n-  #875 = Utf8               hash\n-  #876 = Utf8               (Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n-  #877 = Utf8               (Ljava/io/File;)V\n-  #878 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-  #879 = Utf8               ALL\n-  #880 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-  #881 = Utf8               java/nio/file/Files\n-  #882 = Utf8               newBufferedWriter\n-  #883 = Utf8               (Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n-  #884 = Utf8               copyLarge\n-  #885 = Utf8               (Ljava/io/Reader;Ljava/io/Writer;)J\n-  #886 = Utf8               (Ljava/io/Reader;Ljava/lang/Appendable;)J\n-  #887 = Utf8               java/lang/System\n-  #888 = Utf8               Ljava/io/PrintStream;\n-  #889 = Utf8               toCharArray\n-  #890 = Utf8               ()[C\n-  #891 = Utf8               (Ljava/io/Reader;)V\n-  #892 = Utf8               (I)V\n-  #893 = Utf8               read\n-  #894 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #895 = Utf8               lookAhead\n-  #896 = Utf8               (I)[C\n-  #897 = Utf8               ([C)V\n-  #898 = Utf8               setLength\n-  #899 = Utf8               MINIMAL\n-  #900 = Utf8               $SwitchMap$org$apache$commons$csv$QuoteMode\n-  #901 = Utf8               [I\n-  #902 = Utf8               ordinal\n-  #903 = Utf8               (Ljava/lang/String;)V\n-  #904 = Utf8               NONE\n-  #905 = Utf8               (Z)Ljava/lang/StringBuilder;\n-  #906 = Utf8               ALLOW_EMPTY\n-  #907 = Utf8               add\n-  #908 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #909 = Utf8               setDuplicateHeaderMode\n-  #910 = Utf8               (Lorg/apache/commons/csv/DuplicateHeaderMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #911 = Utf8               setAllowMissingColumnNames\n-  #912 = Utf8               (Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #913 = Utf8               setAutoFlush\n-  #914 = Utf8               setCommentMarker\n-  #915 = Utf8               (C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #916 = Utf8               (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #917 = Utf8               setDelimiter\n-  #918 = Utf8               setEscape\n-  #919 = Utf8               setHeader\n-  #920 = Utf8               ([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #921 = Utf8               setSkipHeaderRecord\n-  #922 = Utf8               (Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #923 = Utf8               (Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #924 = Utf8               (Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #925 = Utf8               setHeaderComments\n-  #926 = Utf8               ([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #927 = Utf8               setIgnoreEmptyLines\n-  #928 = Utf8               setIgnoreHeaderCase\n-  #929 = Utf8               setIgnoreSurroundingSpaces\n-  #930 = Utf8               setNullString\n-  #931 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #932 = Utf8               setQuote\n-  #933 = Utf8               setQuoteMode\n-  #934 = Utf8               (Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #935 = Utf8               setRecordSeparator\n-  #936 = Utf8               lineSeparator\n-  #937 = Utf8               setTrailingDelimiter\n-  #938 = Utf8               setTrim\n-  #939 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-  #940 = Utf8               DOUBLE_QUOTE_CHAR\n-  #941 = Utf8               ALL_NON_NULL\n-  #942 = Class              #945          // java/lang/invoke/LambdaMetafactory\n-  #943 = NameAndType        #946:#949     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #944 = NameAndType        #512:#513     // lambda$toStringArray$0:([Ljava/lang/Object;I)Ljava/lang/String;\n-  #945 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #946 = Utf8               metafactory\n-  #947 = Class              #951          // java/lang/invoke/MethodHandles$Lookup\n+    #1 = Class              #2            // org/apache/commons/csv/Constants\n+    #2 = Utf8               org/apache/commons/csv/Constants\n+    #3 = Methodref          #4.#5         // org/apache/commons/csv/CSVFormat.containsLineBreak:(Ljava/lang/String;)Z\n+    #4 = Class              #6            // org/apache/commons/csv/CSVFormat\n+    #5 = NameAndType        #7:#8         // containsLineBreak:(Ljava/lang/String;)Z\n+    #6 = Utf8               org/apache/commons/csv/CSVFormat\n+    #7 = Utf8               containsLineBreak\n+    #8 = Utf8               (Ljava/lang/String;)Z\n+    #9 = Methodref          #4.#10        // org/apache/commons/csv/CSVFormat.isLineBreak:(Ljava/lang/Character;)Z\n+   #10 = NameAndType        #11:#12       // isLineBreak:(Ljava/lang/Character;)Z\n+   #11 = Utf8               isLineBreak\n+   #12 = Utf8               (Ljava/lang/Character;)Z\n+   #13 = Methodref          #4.#14        // org/apache/commons/csv/CSVFormat.\"<init>\":(Lorg/apache/commons/csv/CSVFormat$Builder;)V\n+   #14 = NameAndType        #15:#16       // \"<init>\":(Lorg/apache/commons/csv/CSVFormat$Builder;)V\n+   #15 = Utf8               <init>\n+   #16 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)V\n+   #17 = Fieldref           #4.#18        // org/apache/commons/csv/CSVFormat.duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+   #18 = NameAndType        #19:#20       // duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+   #19 = Utf8               duplicateHeaderMode\n+   #20 = Utf8               Lorg/apache/commons/csv/DuplicateHeaderMode;\n+   #21 = Fieldref           #4.#22        // org/apache/commons/csv/CSVFormat.quotedNullString:Ljava/lang/String;\n+   #22 = NameAndType        #23:#24       // quotedNullString:Ljava/lang/String;\n+   #23 = Utf8               quotedNullString\n+   #24 = Utf8               Ljava/lang/String;\n+   #25 = Fieldref           #4.#26        // org/apache/commons/csv/CSVFormat.autoFlush:Z\n+   #26 = NameAndType        #27:#28       // autoFlush:Z\n+   #27 = Utf8               autoFlush\n+   #28 = Utf8               Z\n+   #29 = Fieldref           #4.#30        // org/apache/commons/csv/CSVFormat.trim:Z\n+   #30 = NameAndType        #31:#28       // trim:Z\n+   #31 = Utf8               trim\n+   #32 = Fieldref           #4.#33        // org/apache/commons/csv/CSVFormat.trailingDelimiter:Z\n+   #33 = NameAndType        #34:#28       // trailingDelimiter:Z\n+   #34 = Utf8               trailingDelimiter\n+   #35 = Fieldref           #4.#36        // org/apache/commons/csv/CSVFormat.ignoreHeaderCase:Z\n+   #36 = NameAndType        #37:#28       // ignoreHeaderCase:Z\n+   #37 = Utf8               ignoreHeaderCase\n+   #38 = Fieldref           #4.#39        // org/apache/commons/csv/CSVFormat.skipHeaderRecord:Z\n+   #39 = NameAndType        #40:#28       // skipHeaderRecord:Z\n+   #40 = Utf8               skipHeaderRecord\n+   #41 = Fieldref           #4.#42        // org/apache/commons/csv/CSVFormat.headers:[Ljava/lang/String;\n+   #42 = NameAndType        #43:#44       // headers:[Ljava/lang/String;\n+   #43 = Utf8               headers\n+   #44 = Utf8               [Ljava/lang/String;\n+   #45 = Fieldref           #4.#46        // org/apache/commons/csv/CSVFormat.headerComments:[Ljava/lang/String;\n+   #46 = NameAndType        #47:#44       // headerComments:[Ljava/lang/String;\n+   #47 = Utf8               headerComments\n+   #48 = Fieldref           #4.#49        // org/apache/commons/csv/CSVFormat.nullString:Ljava/lang/String;\n+   #49 = NameAndType        #50:#24       // nullString:Ljava/lang/String;\n+   #50 = Utf8               nullString\n+   #51 = Fieldref           #4.#52        // org/apache/commons/csv/CSVFormat.recordSeparator:Ljava/lang/String;\n+   #52 = NameAndType        #53:#24       // recordSeparator:Ljava/lang/String;\n+   #53 = Utf8               recordSeparator\n+   #54 = Fieldref           #4.#55        // org/apache/commons/csv/CSVFormat.ignoreEmptyLines:Z\n+   #55 = NameAndType        #56:#28       // ignoreEmptyLines:Z\n+   #56 = Utf8               ignoreEmptyLines\n+   #57 = Fieldref           #4.#58        // org/apache/commons/csv/CSVFormat.allowMissingColumnNames:Z\n+   #58 = NameAndType        #59:#28       // allowMissingColumnNames:Z\n+   #59 = Utf8               allowMissingColumnNames\n+   #60 = Fieldref           #4.#61        // org/apache/commons/csv/CSVFormat.ignoreSurroundingSpaces:Z\n+   #61 = NameAndType        #62:#28       // ignoreSurroundingSpaces:Z\n+   #62 = Utf8               ignoreSurroundingSpaces\n+   #63 = Fieldref           #4.#64        // org/apache/commons/csv/CSVFormat.escapeCharacter:Ljava/lang/Character;\n+   #64 = NameAndType        #65:#66       // escapeCharacter:Ljava/lang/Character;\n+   #65 = Utf8               escapeCharacter\n+   #66 = Utf8               Ljava/lang/Character;\n+   #67 = Fieldref           #4.#68        // org/apache/commons/csv/CSVFormat.commentMarker:Ljava/lang/Character;\n+   #68 = NameAndType        #69:#66       // commentMarker:Ljava/lang/Character;\n+   #69 = Utf8               commentMarker\n+   #70 = Fieldref           #4.#71        // org/apache/commons/csv/CSVFormat.quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+   #71 = NameAndType        #72:#73       // quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+   #72 = Utf8               quoteMode\n+   #73 = Utf8               Lorg/apache/commons/csv/QuoteMode;\n+   #74 = Fieldref           #4.#75        // org/apache/commons/csv/CSVFormat.quoteCharacter:Ljava/lang/Character;\n+   #75 = NameAndType        #76:#66       // quoteCharacter:Ljava/lang/Character;\n+   #76 = Utf8               quoteCharacter\n+   #77 = Fieldref           #4.#78        // org/apache/commons/csv/CSVFormat.delimiter:Ljava/lang/String;\n+   #78 = NameAndType        #79:#24       // delimiter:Ljava/lang/String;\n+   #79 = Utf8               delimiter\n+   #80 = Methodref          #81.#82       // \"[Ljava/lang/Object;\".clone:()Ljava/lang/Object;\n+   #81 = Class              #83           // \"[Ljava/lang/Object;\"\n+   #82 = NameAndType        #84:#85       // clone:()Ljava/lang/Object;\n+   #83 = Utf8               [Ljava/lang/Object;\n+   #84 = Utf8               clone\n+   #85 = Utf8               ()Ljava/lang/Object;\n+   #86 = String             #87           // source\n+   #87 = Utf8               source\n+   #88 = Methodref          #89.#90       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #89 = Class              #91           // java/util/Objects\n+   #90 = NameAndType        #92:#93       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #91 = Utf8               java/util/Objects\n+   #92 = Utf8               requireNonNull\n+   #93 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #94 = Class              #95           // java/lang/String\n+   #95 = Utf8               java/lang/String\n+   #96 = Methodref          #94.#97       // java/lang/String.indexOf:(I)I\n+   #97 = NameAndType        #98:#99       // indexOf:(I)I\n+   #98 = Utf8               indexOf\n+   #99 = Utf8               (I)I\n+  #100 = Methodref          #4.#101       // org/apache/commons/csv/CSVFormat.contains:(Ljava/lang/String;C)Z\n+  #101 = NameAndType        #102:#103     // contains:(Ljava/lang/String;C)Z\n+  #102 = Utf8               contains\n+  #103 = Utf8               (Ljava/lang/String;C)Z\n+  #104 = Methodref          #94.#105      // java/lang/String.trim:()Ljava/lang/String;\n+  #105 = NameAndType        #31:#106      // trim:()Ljava/lang/String;\n+  #106 = Utf8               ()Ljava/lang/String;\n+  #107 = Methodref          #94.#108      // java/lang/String.isEmpty:()Z\n+  #108 = NameAndType        #109:#110     // isEmpty:()Z\n+  #109 = Utf8               isEmpty\n+  #110 = Utf8               ()Z\n+  #111 = Methodref          #112.#113     // java/lang/Character.charValue:()C\n+  #112 = Class              #114          // java/lang/Character\n+  #113 = NameAndType        #115:#116     // charValue:()C\n+  #114 = Utf8               java/lang/Character\n+  #115 = Utf8               charValue\n+  #116 = Utf8               ()C\n+  #117 = Methodref          #4.#118       // org/apache/commons/csv/CSVFormat.isLineBreak:(C)Z\n+  #118 = NameAndType        #11:#119      // isLineBreak:(C)Z\n+  #119 = Utf8               (C)Z\n+  #120 = InterfaceMethodref #121.#122     // java/lang/CharSequence.charAt:(I)C\n+  #121 = Class              #123          // java/lang/CharSequence\n+  #122 = NameAndType        #124:#125     // charAt:(I)C\n+  #123 = Utf8               java/lang/CharSequence\n+  #124 = Utf8               charAt\n+  #125 = Utf8               (I)C\n+  #126 = Methodref          #4.#127       // org/apache/commons/csv/CSVFormat.isTrimChar:(C)Z\n+  #127 = NameAndType        #128:#119     // isTrimChar:(C)Z\n+  #128 = Utf8               isTrimChar\n+  #129 = Methodref          #94.#130      // java/lang/String.valueOf:(C)Ljava/lang/String;\n+  #130 = NameAndType        #131:#132     // valueOf:(C)Ljava/lang/String;\n+  #131 = Utf8               valueOf\n+  #132 = Utf8               (C)Ljava/lang/String;\n+  #133 = Fieldref           #134.#135     // org/apache/commons/csv/DuplicateHeaderMode.ALLOW_ALL:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+  #134 = Class              #136          // org/apache/commons/csv/DuplicateHeaderMode\n+  #135 = NameAndType        #137:#20      // ALLOW_ALL:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+  #136 = Utf8               org/apache/commons/csv/DuplicateHeaderMode\n+  #137 = Utf8               ALLOW_ALL\n+  #138 = Methodref          #4.#139       // org/apache/commons/csv/CSVFormat.\"<init>\":(Ljava/lang/String;Ljava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZLorg/apache/commons/csv/DuplicateHeaderMode;)V\n+  #139 = NameAndType        #15:#140      // \"<init>\":(Ljava/lang/String;Ljava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZLorg/apache/commons/csv/DuplicateHeaderMode;)V\n+  #140 = Utf8               (Ljava/lang/String;Ljava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZLorg/apache/commons/csv/DuplicateHeaderMode;)V\n+  #141 = InvokeDynamic      #0:#142       // #0:apply:([Ljava/lang/Object;)Ljava/util/function/IntFunction;\n+  #142 = NameAndType        #143:#144     // apply:([Ljava/lang/Object;)Ljava/util/function/IntFunction;\n+  #143 = Utf8               apply\n+  #144 = Utf8               ([Ljava/lang/Object;)Ljava/util/function/IntFunction;\n+  #145 = Methodref          #146.#147     // java/util/Arrays.setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n+  #146 = Class              #148          // java/util/Arrays\n+  #147 = NameAndType        #149:#150     // setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n+  #148 = Utf8               java/util/Arrays\n+  #149 = Utf8               setAll\n+  #150 = Utf8               ([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n+  #151 = InterfaceMethodref #121.#152     // java/lang/CharSequence.length:()I\n+  #152 = NameAndType        #153:#154     // length:()I\n+  #153 = Utf8               length\n+  #154 = Utf8               ()I\n+  #155 = Methodref          #4.#156       // org/apache/commons/csv/CSVFormat.isTrimChar:(Ljava/lang/CharSequence;I)Z\n+  #156 = NameAndType        #128:#157     // isTrimChar:(Ljava/lang/CharSequence;I)Z\n+  #157 = Utf8               (Ljava/lang/CharSequence;I)Z\n+  #158 = InterfaceMethodref #121.#159     // java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;\n+  #159 = NameAndType        #160:#161     // subSequence:(II)Ljava/lang/CharSequence;\n+  #160 = Utf8               subSequence\n+  #161 = Utf8               (II)Ljava/lang/CharSequence;\n+  #162 = Methodref          #163.#164     // org/apache/commons/csv/CSVFormat$Predefined.valueOf:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Predefined;\n+  #163 = Class              #165          // org/apache/commons/csv/CSVFormat$Predefined\n+  #164 = NameAndType        #131:#166     // valueOf:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Predefined;\n+  #165 = Utf8               org/apache/commons/csv/CSVFormat$Predefined\n+  #166 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Predefined;\n+  #167 = Methodref          #163.#168     // org/apache/commons/csv/CSVFormat$Predefined.getFormat:()Lorg/apache/commons/csv/CSVFormat;\n+  #168 = NameAndType        #169:#170     // getFormat:()Lorg/apache/commons/csv/CSVFormat;\n+  #169 = Utf8               getFormat\n+  #170 = Utf8               ()Lorg/apache/commons/csv/CSVFormat;\n+  #171 = Methodref          #172.#173     // java/lang/Object.\"<init>\":()V\n+  #172 = Class              #174          // java/lang/Object\n+  #173 = NameAndType        #15:#175      // \"<init>\":()V\n+  #174 = Utf8               java/lang/Object\n+  #175 = Utf8               ()V\n+  #176 = Methodref          #177.#178     // org/apache/commons/csv/CSVFormat$Builder.access$2200:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+  #177 = Class              #179          // org/apache/commons/csv/CSVFormat$Builder\n+  #178 = NameAndType        #180:#181     // access$2200:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+  #179 = Utf8               org/apache/commons/csv/CSVFormat$Builder\n+  #180 = Utf8               access$2200\n+  #181 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+  #182 = Methodref          #177.#183     // org/apache/commons/csv/CSVFormat$Builder.access$2300:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n+  #183 = NameAndType        #184:#185     // access$2300:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n+  #184 = Utf8               access$2300\n+  #185 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n+  #186 = Methodref          #177.#187     // org/apache/commons/csv/CSVFormat$Builder.access$2400:(Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/QuoteMode;\n+  #187 = NameAndType        #188:#189     // access$2400:(Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/QuoteMode;\n+  #188 = Utf8               access$2400\n+  #189 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/QuoteMode;\n+  #190 = Methodref          #177.#191     // org/apache/commons/csv/CSVFormat$Builder.access$2500:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n+  #191 = NameAndType        #192:#185     // access$2500:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n+  #192 = Utf8               access$2500\n+  #193 = Methodref          #177.#194     // org/apache/commons/csv/CSVFormat$Builder.access$2600:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n+  #194 = NameAndType        #195:#185     // access$2600:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n+  #195 = Utf8               access$2600\n+  #196 = Methodref          #177.#197     // org/apache/commons/csv/CSVFormat$Builder.access$2700:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #197 = NameAndType        #198:#199     // access$2700:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #198 = Utf8               access$2700\n+  #199 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #200 = Methodref          #177.#201     // org/apache/commons/csv/CSVFormat$Builder.access$2800:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #201 = NameAndType        #202:#199     // access$2800:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #202 = Utf8               access$2800\n+  #203 = Methodref          #177.#204     // org/apache/commons/csv/CSVFormat$Builder.access$2900:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #204 = NameAndType        #205:#199     // access$2900:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #205 = Utf8               access$2900\n+  #206 = Methodref          #177.#207     // org/apache/commons/csv/CSVFormat$Builder.access$3000:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+  #207 = NameAndType        #208:#181     // access$3000:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+  #208 = Utf8               access$3000\n+  #209 = Methodref          #177.#210     // org/apache/commons/csv/CSVFormat$Builder.access$3100:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+  #210 = NameAndType        #211:#181     // access$3100:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+  #211 = Utf8               access$3100\n+  #212 = Methodref          #177.#213     // org/apache/commons/csv/CSVFormat$Builder.access$3200:(Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n+  #213 = NameAndType        #214:#215     // access$3200:(Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n+  #214 = Utf8               access$3200\n+  #215 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n+  #216 = Methodref          #177.#217     // org/apache/commons/csv/CSVFormat$Builder.access$3300:(Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n+  #217 = NameAndType        #218:#215     // access$3300:(Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n+  #218 = Utf8               access$3300\n+  #219 = Methodref          #177.#220     // org/apache/commons/csv/CSVFormat$Builder.access$3400:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #220 = NameAndType        #221:#199     // access$3400:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #221 = Utf8               access$3400\n+  #222 = Methodref          #177.#223     // org/apache/commons/csv/CSVFormat$Builder.access$3500:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #223 = NameAndType        #224:#199     // access$3500:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #224 = Utf8               access$3500\n+  #225 = Methodref          #177.#226     // org/apache/commons/csv/CSVFormat$Builder.access$3600:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #226 = NameAndType        #227:#199     // access$3600:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #227 = Utf8               access$3600\n+  #228 = Methodref          #177.#229     // org/apache/commons/csv/CSVFormat$Builder.access$3700:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #229 = NameAndType        #230:#199     // access$3700:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #230 = Utf8               access$3700\n+  #231 = Methodref          #177.#232     // org/apache/commons/csv/CSVFormat$Builder.access$3800:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #232 = NameAndType        #233:#199     // access$3800:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #233 = Utf8               access$3800\n+  #234 = Methodref          #177.#235     // org/apache/commons/csv/CSVFormat$Builder.access$3900:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+  #235 = NameAndType        #236:#181     // access$3900:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+  #236 = Utf8               access$3900\n+  #237 = Methodref          #177.#238     // org/apache/commons/csv/CSVFormat$Builder.access$4000:(Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/DuplicateHeaderMode;\n+  #238 = NameAndType        #239:#240     // access$4000:(Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/DuplicateHeaderMode;\n+  #239 = Utf8               access$4000\n+  #240 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/DuplicateHeaderMode;\n+  #241 = Methodref          #4.#242       // org/apache/commons/csv/CSVFormat.validate:()V\n+  #242 = NameAndType        #243:#175     // validate:()V\n+  #243 = Utf8               validate\n+  #244 = Methodref          #4.#245       // org/apache/commons/csv/CSVFormat.toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n+  #245 = NameAndType        #246:#247     // toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n+  #246 = Utf8               toStringArray\n+  #247 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/String;\n+  #248 = Methodref          #4.#249       // org/apache/commons/csv/CSVFormat.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #249 = NameAndType        #84:#250      // clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #250 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #251 = Class              #44           // \"[Ljava/lang/String;\"\n+  #252 = Class              #253          // java/lang/StringBuilder\n+  #253 = Utf8               java/lang/StringBuilder\n+  #254 = Methodref          #252.#173     // java/lang/StringBuilder.\"<init>\":()V\n+  #255 = Methodref          #252.#256     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #256 = NameAndType        #257:#258     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #257 = Utf8               append\n+  #258 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #259 = Methodref          #252.#260     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #260 = NameAndType        #257:#261     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #261 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #262 = Methodref          #252.#263     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #263 = NameAndType        #264:#106     // toString:()Ljava/lang/String;\n+  #264 = Utf8               toString\n+  #265 = InterfaceMethodref #266.#267     // java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+  #266 = Class              #268          // java/lang/Appendable\n+  #267 = NameAndType        #257:#269     // append:(C)Ljava/lang/Appendable;\n+  #268 = Utf8               java/lang/Appendable\n+  #269 = Utf8               (C)Ljava/lang/Appendable;\n+  #270 = InterfaceMethodref #266.#271     // java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+  #271 = NameAndType        #257:#272     // append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+  #272 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+  #273 = Methodref          #177.#274     // org/apache/commons/csv/CSVFormat$Builder.create:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #274 = NameAndType        #275:#276     // create:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #275 = Utf8               create\n+  #276 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #277 = Methodref          #4.#278       // org/apache/commons/csv/CSVFormat.builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #278 = NameAndType        #279:#280     // builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #279 = Utf8               builder\n+  #280 = Utf8               ()Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #281 = Methodref          #177.#282     // org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+  #282 = NameAndType        #283:#170     // build:()Lorg/apache/commons/csv/CSVFormat;\n+  #283 = Utf8               build\n+  #284 = Methodref          #172.#285     // java/lang/Object.getClass:()Ljava/lang/Class;\n+  #285 = NameAndType        #286:#287     // getClass:()Ljava/lang/Class;\n+  #286 = Utf8               getClass\n+  #287 = Utf8               ()Ljava/lang/Class;\n+  #288 = Methodref          #89.#289      // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #289 = NameAndType        #290:#291     // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #290 = Utf8               equals\n+  #291 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #292 = Methodref          #146.#293     // java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+  #293 = NameAndType        #290:#294     // equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+  #294 = Utf8               ([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+  #295 = Class              #296          // java/io/StringWriter\n+  #296 = Utf8               java/io/StringWriter\n+  #297 = Methodref          #295.#173     // java/io/StringWriter.\"<init>\":()V\n+  #298 = Class              #299          // org/apache/commons/csv/CSVPrinter\n+  #299 = Utf8               org/apache/commons/csv/CSVPrinter\n+  #300 = Methodref          #298.#301     // org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n+  #301 = NameAndType        #15:#302      // \"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n+  #302 = Utf8               (Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n+  #303 = Methodref          #298.#304     // org/apache/commons/csv/CSVPrinter.printRecord:([Ljava/lang/Object;)V\n+  #304 = NameAndType        #305:#306     // printRecord:([Ljava/lang/Object;)V\n+  #305 = Utf8               printRecord\n+  #306 = Utf8               ([Ljava/lang/Object;)V\n+  #307 = Methodref          #295.#263     // java/io/StringWriter.toString:()Ljava/lang/String;\n+  #308 = Methodref          #94.#152      // java/lang/String.length:()I\n+  #309 = Methodref          #94.#310      // java/lang/String.substring:(II)Ljava/lang/String;\n+  #310 = NameAndType        #311:#312     // substring:(II)Ljava/lang/String;\n+  #311 = Utf8               substring\n+  #312 = Utf8               (II)Ljava/lang/String;\n+  #313 = Methodref          #298.#314     // org/apache/commons/csv/CSVPrinter.close:()V\n+  #314 = NameAndType        #315:#175     // close:()V\n+  #315 = Utf8               close\n+  #316 = Class              #317          // java/lang/Throwable\n+  #317 = Utf8               java/lang/Throwable\n+  #318 = Methodref          #316.#319     // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+  #319 = NameAndType        #320:#321     // addSuppressed:(Ljava/lang/Throwable;)V\n+  #320 = Utf8               addSuppressed\n+  #321 = Utf8               (Ljava/lang/Throwable;)V\n+  #322 = Class              #323          // java/io/IOException\n+  #323 = Utf8               java/io/IOException\n+  #324 = Class              #325          // java/lang/IllegalStateException\n+  #325 = Utf8               java/lang/IllegalStateException\n+  #326 = Methodref          #324.#327     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/Throwable;)V\n+  #327 = NameAndType        #15:#321      // \"<init>\":(Ljava/lang/Throwable;)V\n+  #328 = Methodref          #94.#122      // java/lang/String.charAt:(I)C\n+  #329 = Methodref          #251.#82      // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n+  #330 = Methodref          #146.#331     // java/util/Arrays.hashCode:([Ljava/lang/Object;)I\n+  #331 = NameAndType        #332:#333     // hashCode:([Ljava/lang/Object;)I\n+  #332 = Utf8               hashCode\n+  #333 = Utf8               ([Ljava/lang/Object;)I\n+  #334 = Methodref          #335.#336     // java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+  #335 = Class              #337          // java/lang/Boolean\n+  #336 = NameAndType        #131:#338     // valueOf:(Z)Ljava/lang/Boolean;\n+  #337 = Utf8               java/lang/Boolean\n+  #338 = Utf8               (Z)Ljava/lang/Boolean;\n+  #339 = Methodref          #89.#340      // java/util/Objects.hash:([Ljava/lang/Object;)I\n+  #340 = NameAndType        #341:#333     // hash:([Ljava/lang/Object;)I\n+  #341 = Utf8               hash\n+  #342 = Class              #343          // org/apache/commons/csv/CSVParser\n+  #343 = Utf8               org/apache/commons/csv/CSVParser\n+  #344 = Methodref          #342.#345     // org/apache/commons/csv/CSVParser.\"<init>\":(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n+  #345 = NameAndType        #15:#346      // \"<init>\":(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n+  #346 = Utf8               (Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n+  #347 = Class              #348          // java/io/OutputStreamWriter\n+  #348 = Utf8               java/io/OutputStreamWriter\n+  #349 = Class              #350          // java/io/FileOutputStream\n+  #350 = Utf8               java/io/FileOutputStream\n+  #351 = Methodref          #349.#352     // java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n+  #352 = NameAndType        #15:#353      // \"<init>\":(Ljava/io/File;)V\n+  #353 = Utf8               (Ljava/io/File;)V\n+  #354 = Methodref          #347.#355     // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+  #355 = NameAndType        #15:#356      // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+  #356 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+  #357 = String             #358          //\n+  #358 = Utf8\n+  #359 = Fieldref           #360.#361     // org/apache/commons/csv/QuoteMode.ALL:Lorg/apache/commons/csv/QuoteMode;\n+  #360 = Class              #362          // org/apache/commons/csv/QuoteMode\n+  #361 = NameAndType        #363:#73      // ALL:Lorg/apache/commons/csv/QuoteMode;\n+  #362 = Utf8               org/apache/commons/csv/QuoteMode\n+  #363 = Utf8               ALL\n+  #364 = Class              #365          // java/io/Reader\n+  #365 = Utf8               java/io/Reader\n+  #366 = Methodref          #4.#367       // org/apache/commons/csv/CSVFormat.print:(Ljava/io/Reader;Ljava/lang/Appendable;Z)V\n+  #367 = NameAndType        #368:#369     // print:(Ljava/io/Reader;Ljava/lang/Appendable;Z)V\n+  #368 = Utf8               print\n+  #369 = Utf8               (Ljava/io/Reader;Ljava/lang/Appendable;Z)V\n+  #370 = Methodref          #172.#263     // java/lang/Object.toString:()Ljava/lang/String;\n+  #371 = Methodref          #4.#372       // org/apache/commons/csv/CSVFormat.getTrim:()Z\n+  #372 = NameAndType        #373:#110     // getTrim:()Z\n+  #373 = Utf8               getTrim\n+  #374 = Methodref          #4.#375       // org/apache/commons/csv/CSVFormat.trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n+  #375 = NameAndType        #31:#376      // trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n+  #376 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n+  #377 = Methodref          #4.#378       // org/apache/commons/csv/CSVFormat.print:(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n+  #378 = NameAndType        #368:#379     // print:(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n+  #379 = Utf8               (Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n+  #380 = Methodref          #4.#381       // org/apache/commons/csv/CSVFormat.getDelimiterString:()Ljava/lang/String;\n+  #381 = NameAndType        #382:#106     // getDelimiterString:()Ljava/lang/String;\n+  #382 = Utf8               getDelimiterString\n+  #383 = Methodref          #4.#384       // org/apache/commons/csv/CSVFormat.isQuoteCharacterSet:()Z\n+  #384 = NameAndType        #385:#110     // isQuoteCharacterSet:()Z\n+  #385 = Utf8               isQuoteCharacterSet\n+  #386 = Methodref          #4.#387       // org/apache/commons/csv/CSVFormat.printWithQuotes:(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n+  #387 = NameAndType        #388:#379     // printWithQuotes:(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n+  #388 = Utf8               printWithQuotes\n+  #389 = Methodref          #4.#390       // org/apache/commons/csv/CSVFormat.isEscapeCharacterSet:()Z\n+  #390 = NameAndType        #391:#110     // isEscapeCharacterSet:()Z\n+  #391 = Utf8               isEscapeCharacterSet\n+  #392 = Methodref          #4.#393       // org/apache/commons/csv/CSVFormat.printWithEscapes:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n+  #393 = NameAndType        #394:#395     // printWithEscapes:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n+  #394 = Utf8               printWithEscapes\n+  #395 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n+  #396 = InterfaceMethodref #266.#397     // java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+  #397 = NameAndType        #257:#398     // append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+  #398 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+  #399 = Class              #400          // java/nio/file/OpenOption\n+  #400 = Utf8               java/nio/file/OpenOption\n+  #401 = Methodref          #402.#403     // java/nio/file/Files.newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n+  #402 = Class              #404          // java/nio/file/Files\n+  #403 = NameAndType        #405:#406     // newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n+  #404 = Utf8               java/nio/file/Files\n+  #405 = Utf8               newBufferedWriter\n+  #406 = Utf8               (Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n+  #407 = Methodref          #4.#408       // org/apache/commons/csv/CSVFormat.print:(Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n+  #408 = NameAndType        #368:#409     // print:(Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n+  #409 = Utf8               (Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n+  #410 = Methodref          #4.#411       // org/apache/commons/csv/CSVFormat.append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n+  #411 = NameAndType        #257:#395     // append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n+  #412 = Methodref          #4.#413       // org/apache/commons/csv/CSVFormat.printWithQuotes:(Ljava/io/Reader;Ljava/lang/Appendable;)V\n+  #413 = NameAndType        #388:#414     // printWithQuotes:(Ljava/io/Reader;Ljava/lang/Appendable;)V\n+  #414 = Utf8               (Ljava/io/Reader;Ljava/lang/Appendable;)V\n+  #415 = Methodref          #4.#416       // org/apache/commons/csv/CSVFormat.printWithEscapes:(Ljava/io/Reader;Ljava/lang/Appendable;)V\n+  #416 = NameAndType        #394:#414     // printWithEscapes:(Ljava/io/Reader;Ljava/lang/Appendable;)V\n+  #417 = Class              #418          // java/io/Writer\n+  #418 = Utf8               java/io/Writer\n+  #419 = Methodref          #420.#421     // org/apache/commons/csv/IOUtils.copyLarge:(Ljava/io/Reader;Ljava/io/Writer;)J\n+  #420 = Class              #422          // org/apache/commons/csv/IOUtils\n+  #421 = NameAndType        #423:#424     // copyLarge:(Ljava/io/Reader;Ljava/io/Writer;)J\n+  #422 = Utf8               org/apache/commons/csv/IOUtils\n+  #423 = Utf8               copyLarge\n+  #424 = Utf8               (Ljava/io/Reader;Ljava/io/Writer;)J\n+  #425 = Methodref          #420.#426     // org/apache/commons/csv/IOUtils.copy:(Ljava/io/Reader;Ljava/lang/Appendable;)J\n+  #426 = NameAndType        #427:#428     // copy:(Ljava/io/Reader;Ljava/lang/Appendable;)J\n+  #427 = Utf8               copy\n+  #428 = Utf8               (Ljava/io/Reader;Ljava/lang/Appendable;)J\n+  #429 = Fieldref           #430.#431     // java/lang/System.out:Ljava/io/PrintStream;\n+  #430 = Class              #432          // java/lang/System\n+  #431 = NameAndType        #433:#434     // out:Ljava/io/PrintStream;\n+  #432 = Utf8               java/lang/System\n+  #433 = Utf8               out\n+  #434 = Utf8               Ljava/io/PrintStream;\n+  #435 = Methodref          #4.#436       // org/apache/commons/csv/CSVFormat.getTrailingDelimiter:()Z\n+  #436 = NameAndType        #437:#110     // getTrailingDelimiter:()Z\n+  #437 = Utf8               getTrailingDelimiter\n+  #438 = Methodref          #4.#439       // org/apache/commons/csv/CSVFormat.print:(Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n+  #439 = NameAndType        #368:#440     // print:(Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n+  #440 = Utf8               (Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n+  #441 = Methodref          #4.#442       // org/apache/commons/csv/CSVFormat.println:(Ljava/lang/Appendable;)V\n+  #442 = NameAndType        #443:#444     // println:(Ljava/lang/Appendable;)V\n+  #443 = Utf8               println\n+  #444 = Utf8               (Ljava/lang/Appendable;)V\n+  #445 = Methodref          #94.#446      // java/lang/String.toCharArray:()[C\n+  #446 = NameAndType        #447:#448     // toCharArray:()[C\n+  #447 = Utf8               toCharArray\n+  #448 = Utf8               ()[C\n+  #449 = Methodref          #4.#450       // org/apache/commons/csv/CSVFormat.getEscapeCharacter:()Ljava/lang/Character;\n+  #450 = NameAndType        #451:#452     // getEscapeCharacter:()Ljava/lang/Character;\n+  #451 = Utf8               getEscapeCharacter\n+  #452 = Utf8               ()Ljava/lang/Character;\n+  #453 = Methodref          #4.#454       // org/apache/commons/csv/CSVFormat.isDelimiter:(CLjava/lang/CharSequence;I[CI)Z\n+  #454 = NameAndType        #455:#456     // isDelimiter:(CLjava/lang/CharSequence;I[CI)Z\n+  #455 = Utf8               isDelimiter\n+  #456 = Utf8               (CLjava/lang/CharSequence;I[CI)Z\n+  #457 = Class              #458          // org/apache/commons/csv/ExtendedBufferedReader\n+  #458 = Utf8               org/apache/commons/csv/ExtendedBufferedReader\n+  #459 = Methodref          #457.#460     // org/apache/commons/csv/ExtendedBufferedReader.\"<init>\":(Ljava/io/Reader;)V\n+  #460 = NameAndType        #15:#461      // \"<init>\":(Ljava/io/Reader;)V\n+  #461 = Utf8               (Ljava/io/Reader;)V\n+  #462 = Methodref          #252.#463     // java/lang/StringBuilder.\"<init>\":(I)V\n+  #463 = NameAndType        #15:#464      // \"<init>\":(I)V\n+  #464 = Utf8               (I)V\n+  #465 = Methodref          #457.#466     // org/apache/commons/csv/ExtendedBufferedReader.read:()I\n+  #466 = NameAndType        #467:#154     // read:()I\n+  #467 = Utf8               read\n+  #468 = Methodref          #252.#469     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+  #469 = NameAndType        #257:#470     // append:(C)Ljava/lang/StringBuilder;\n+  #470 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #471 = Methodref          #457.#472     // org/apache/commons/csv/ExtendedBufferedReader.lookAhead:(I)[C\n+  #472 = NameAndType        #473:#474     // lookAhead:(I)[C\n+  #473 = Utf8               lookAhead\n+  #474 = Utf8               (I)[C\n+  #475 = Methodref          #94.#476      // java/lang/String.\"<init>\":([C)V\n+  #476 = NameAndType        #15:#477      // \"<init>\":([C)V\n+  #477 = Utf8               ([C)V\n+  #478 = Methodref          #252.#310     // java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n+  #479 = Methodref          #252.#480     // java/lang/StringBuilder.setLength:(I)V\n+  #480 = NameAndType        #481:#464     // setLength:(I)V\n+  #481 = Utf8               setLength\n+  #482 = Methodref          #4.#483       // org/apache/commons/csv/CSVFormat.append:(CLjava/lang/Appendable;)V\n+  #483 = NameAndType        #257:#484     // append:(CLjava/lang/Appendable;)V\n+  #484 = Utf8               (CLjava/lang/Appendable;)V\n+  #485 = Methodref          #4.#486       // org/apache/commons/csv/CSVFormat.getQuoteCharacter:()Ljava/lang/Character;\n+  #486 = NameAndType        #487:#452     // getQuoteCharacter:()Ljava/lang/Character;\n+  #487 = Utf8               getQuoteCharacter\n+  #488 = Methodref          #4.#489       // org/apache/commons/csv/CSVFormat.getQuoteMode:()Lorg/apache/commons/csv/QuoteMode;\n+  #489 = NameAndType        #490:#491     // getQuoteMode:()Lorg/apache/commons/csv/QuoteMode;\n+  #490 = Utf8               getQuoteMode\n+  #491 = Utf8               ()Lorg/apache/commons/csv/QuoteMode;\n+  #492 = Fieldref           #360.#493     // org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n+  #493 = NameAndType        #494:#73      // MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n+  #494 = Utf8               MINIMAL\n+  #495 = Fieldref           #496.#497     // org/apache/commons/csv/CSVFormat$1.$SwitchMap$org$apache$commons$csv$QuoteMode:[I\n+  #496 = Class              #498          // org/apache/commons/csv/CSVFormat$1\n+  #497 = NameAndType        #499:#500     // $SwitchMap$org$apache$commons$csv$QuoteMode:[I\n+  #498 = Utf8               org/apache/commons/csv/CSVFormat$1\n+  #499 = Utf8               $SwitchMap$org$apache$commons$csv$QuoteMode\n+  #500 = Utf8               [I\n+  #501 = Methodref          #360.#502     // org/apache/commons/csv/QuoteMode.ordinal:()I\n+  #502 = NameAndType        #503:#154     // ordinal:()I\n+  #503 = Utf8               ordinal\n+  #504 = Class              #505          // java/lang/Number\n+  #505 = Utf8               java/lang/Number\n+  #506 = String             #507          // Unexpected Quote value:\n+  #507 = Utf8               Unexpected Quote value:\n+  #508 = Methodref          #324.#509     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+  #509 = NameAndType        #15:#510      // \"<init>\":(Ljava/lang/String;)V\n+  #510 = Utf8               (Ljava/lang/String;)V\n+  #511 = Fieldref           #360.#512     // org/apache/commons/csv/QuoteMode.NONE:Lorg/apache/commons/csv/QuoteMode;\n+  #512 = NameAndType        #513:#73      // NONE:Lorg/apache/commons/csv/QuoteMode;\n+  #513 = Utf8               NONE\n+  #514 = Methodref          #364.#466     // java/io/Reader.read:()I\n+  #515 = String             #516          // Delimiter=<\n+  #516 = Utf8               Delimiter=<\n+  #517 = String             #518          // Escape=<\n+  #518 = Utf8               Escape=<\n+  #519 = String             #520          // QuoteChar=<\n+  #520 = Utf8               QuoteChar=<\n+  #521 = String             #522          // QuoteMode=<\n+  #522 = Utf8               QuoteMode=<\n+  #523 = Methodref          #4.#524       // org/apache/commons/csv/CSVFormat.isCommentMarkerSet:()Z\n+  #524 = NameAndType        #525:#110     // isCommentMarkerSet:()Z\n+  #525 = Utf8               isCommentMarkerSet\n+  #526 = String             #527          // CommentStart=<\n+  #527 = Utf8               CommentStart=<\n+  #528 = Methodref          #4.#529       // org/apache/commons/csv/CSVFormat.isNullStringSet:()Z\n+  #529 = NameAndType        #530:#110     // isNullStringSet:()Z\n+  #530 = Utf8               isNullStringSet\n+  #531 = String             #532          // NullString=<\n+  #532 = Utf8               NullString=<\n+  #533 = String             #534          // RecordSeparator=<\n+  #534 = Utf8               RecordSeparator=<\n+  #535 = Methodref          #4.#536       // org/apache/commons/csv/CSVFormat.getIgnoreEmptyLines:()Z\n+  #536 = NameAndType        #537:#110     // getIgnoreEmptyLines:()Z\n+  #537 = Utf8               getIgnoreEmptyLines\n+  #538 = String             #539          //  EmptyLines:ignored\n+  #539 = Utf8                EmptyLines:ignored\n+  #540 = Methodref          #4.#541       // org/apache/commons/csv/CSVFormat.getIgnoreSurroundingSpaces:()Z\n+  #541 = NameAndType        #542:#110     // getIgnoreSurroundingSpaces:()Z\n+  #542 = Utf8               getIgnoreSurroundingSpaces\n+  #543 = String             #544          //  SurroundingSpaces:ignored\n+  #544 = Utf8                SurroundingSpaces:ignored\n+  #545 = Methodref          #4.#546       // org/apache/commons/csv/CSVFormat.getIgnoreHeaderCase:()Z\n+  #546 = NameAndType        #547:#110     // getIgnoreHeaderCase:()Z\n+  #547 = Utf8               getIgnoreHeaderCase\n+  #548 = String             #549          //  IgnoreHeaderCase:ignored\n+  #549 = Utf8                IgnoreHeaderCase:ignored\n+  #550 = String             #551          //  SkipHeaderRecord:\n+  #551 = Utf8                SkipHeaderRecord:\n+  #552 = Methodref          #252.#553     // java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;\n+  #553 = NameAndType        #257:#554     // append:(Z)Ljava/lang/StringBuilder;\n+  #554 = Utf8               (Z)Ljava/lang/StringBuilder;\n+  #555 = String             #556          // HeaderComments:\n+  #556 = Utf8               HeaderComments:\n+  #557 = Methodref          #146.#558     // java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n+  #558 = NameAndType        #264:#559     // toString:([Ljava/lang/Object;)Ljava/lang/String;\n+  #559 = Utf8               ([Ljava/lang/Object;)Ljava/lang/String;\n+  #560 = String             #561          // Header:\n+  #561 = Utf8               Header:\n+  #562 = Class              #563          // java/lang/IllegalArgumentException\n+  #563 = Utf8               java/lang/IllegalArgumentException\n+  #564 = String             #565          // The delimiter cannot be a line break\n+  #565 = Utf8               The delimiter cannot be a line break\n+  #566 = Methodref          #562.#509     // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #567 = String             #568          // The quoteChar character and the delimiter cannot be the same (\\'\n+  #568 = Utf8               The quoteChar character and the delimiter cannot be the same (\\'\n+  #569 = String             #570          // \\')\n+  #570 = Utf8               \\')\n+  #571 = String             #572          // The escape character and the delimiter cannot be the same (\\'\n+  #572 = Utf8               The escape character and the delimiter cannot be the same (\\'\n+  #573 = String             #574          // The comment start character and the delimiter cannot be the same (\\'\n+  #574 = Utf8               The comment start character and the delimiter cannot be the same (\\'\n+  #575 = Methodref          #112.#576     // java/lang/Character.equals:(Ljava/lang/Object;)Z\n+  #576 = NameAndType        #290:#577     // equals:(Ljava/lang/Object;)Z\n+  #577 = Utf8               (Ljava/lang/Object;)Z\n+  #578 = String             #579          // The comment start character and the quoteChar cannot be the same (\\'\n+  #579 = Utf8               The comment start character and the quoteChar cannot be the same (\\'\n+  #580 = String             #581          // The comment start and the escape character cannot be the same (\\'\n+  #581 = Utf8               The comment start and the escape character cannot be the same (\\'\n+  #582 = String             #583          // No quotes mode set but no escape character is set\n+  #583 = Utf8               No quotes mode set but no escape character is set\n+  #584 = Class              #585          // java/util/HashSet\n+  #585 = Utf8               java/util/HashSet\n+  #586 = Methodref          #584.#463     // java/util/HashSet.\"<init>\":(I)V\n+  #587 = Fieldref           #134.#588     // org/apache/commons/csv/DuplicateHeaderMode.ALLOW_EMPTY:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+  #588 = NameAndType        #589:#20      // ALLOW_EMPTY:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+  #589 = Utf8               ALLOW_EMPTY\n+  #590 = Methodref          #4.#591       // org/apache/commons/csv/CSVFormat.isBlank:(Ljava/lang/String;)Z\n+  #591 = NameAndType        #592:#8       // isBlank:(Ljava/lang/String;)Z\n+  #592 = Utf8               isBlank\n+  #593 = InterfaceMethodref #594.#595     // java/util/Set.add:(Ljava/lang/Object;)Z\n+  #594 = Class              #596          // java/util/Set\n+  #595 = NameAndType        #597:#577     // add:(Ljava/lang/Object;)Z\n+  #596 = Utf8               java/util/Set\n+  #597 = Utf8               add\n+  #598 = String             #599          // The header contains a duplicate name: \\\"%s\\\" in %s. If this is valid then use CSVFormat.Builder.setDuplicateHeaderMode().\n+  #599 = Utf8               The header contains a duplicate name: \\\"%s\\\" in %s. If this is valid then use CSVFormat.Builder.setDuplicateHeaderMode().\n+  #600 = Methodref          #94.#601      // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #601 = NameAndType        #602:#603     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #602 = Utf8               format\n+  #603 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #604 = Methodref          #177.#605     // org/apache/commons/csv/CSVFormat$Builder.setDuplicateHeaderMode:(Lorg/apache/commons/csv/DuplicateHeaderMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #605 = NameAndType        #606:#607     // setDuplicateHeaderMode:(Lorg/apache/commons/csv/DuplicateHeaderMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #606 = Utf8               setDuplicateHeaderMode\n+  #607 = Utf8               (Lorg/apache/commons/csv/DuplicateHeaderMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #608 = Methodref          #177.#609     // org/apache/commons/csv/CSVFormat$Builder.setAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #609 = NameAndType        #610:#611     // setAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #610 = Utf8               setAllowMissingColumnNames\n+  #611 = Utf8               (Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #612 = Methodref          #177.#613     // org/apache/commons/csv/CSVFormat$Builder.setAutoFlush:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #613 = NameAndType        #614:#611     // setAutoFlush:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #614 = Utf8               setAutoFlush\n+  #615 = Methodref          #177.#616     // org/apache/commons/csv/CSVFormat$Builder.setCommentMarker:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #616 = NameAndType        #617:#618     // setCommentMarker:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #617 = Utf8               setCommentMarker\n+  #618 = Utf8               (C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #619 = Methodref          #177.#620     // org/apache/commons/csv/CSVFormat$Builder.setCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #620 = NameAndType        #617:#621     // setCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #621 = Utf8               (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #622 = Methodref          #177.#623     // org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #623 = NameAndType        #624:#618     // setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #624 = Utf8               setDelimiter\n+  #625 = Methodref          #177.#626     // org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #626 = NameAndType        #627:#618     // setEscape:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #627 = Utf8               setEscape\n+  #628 = Methodref          #177.#629     // org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #629 = NameAndType        #627:#621     // setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #630 = Methodref          #177.#631     // org/apache/commons/csv/CSVFormat$Builder.setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #631 = NameAndType        #632:#633     // setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #632 = Utf8               setHeader\n+  #633 = Utf8               ([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #634 = Methodref          #177.#635     // org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #635 = NameAndType        #636:#611     // setSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #636 = Utf8               setSkipHeaderRecord\n+  #637 = Methodref          #177.#638     // org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #638 = NameAndType        #632:#639     // setHeader:(Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #639 = Utf8               (Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #640 = Methodref          #177.#641     // org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #641 = NameAndType        #632:#642     // setHeader:(Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #642 = Utf8               (Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #643 = Methodref          #177.#644     // org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #644 = NameAndType        #632:#645     // setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #645 = Utf8               (Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #646 = Methodref          #177.#647     // org/apache/commons/csv/CSVFormat$Builder.setHeaderComments:([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #647 = NameAndType        #648:#649     // setHeaderComments:([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #648 = Utf8               setHeaderComments\n+  #649 = Utf8               ([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #650 = Methodref          #177.#651     // org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #651 = NameAndType        #652:#611     // setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #652 = Utf8               setIgnoreEmptyLines\n+  #653 = Methodref          #177.#654     // org/apache/commons/csv/CSVFormat$Builder.setIgnoreHeaderCase:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #654 = NameAndType        #655:#611     // setIgnoreHeaderCase:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #655 = Utf8               setIgnoreHeaderCase\n+  #656 = Methodref          #177.#657     // org/apache/commons/csv/CSVFormat$Builder.setIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #657 = NameAndType        #658:#611     // setIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #658 = Utf8               setIgnoreSurroundingSpaces\n+  #659 = Methodref          #177.#660     // org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #660 = NameAndType        #661:#662     // setNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #661 = Utf8               setNullString\n+  #662 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #663 = Methodref          #177.#664     // org/apache/commons/csv/CSVFormat$Builder.setQuote:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #664 = NameAndType        #665:#618     // setQuote:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #665 = Utf8               setQuote\n+  #666 = Methodref          #177.#667     // org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #667 = NameAndType        #665:#621     // setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #668 = Methodref          #177.#669     // org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #669 = NameAndType        #670:#671     // setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #670 = Utf8               setQuoteMode\n+  #671 = Utf8               (Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #672 = Methodref          #177.#673     // org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #673 = NameAndType        #674:#618     // setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #674 = Utf8               setRecordSeparator\n+  #675 = Methodref          #177.#676     // org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #676 = NameAndType        #674:#662     // setRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #677 = Methodref          #430.#678     // java/lang/System.lineSeparator:()Ljava/lang/String;\n+  #678 = NameAndType        #679:#106     // lineSeparator:()Ljava/lang/String;\n+  #679 = Utf8               lineSeparator\n+  #680 = Methodref          #177.#681     // org/apache/commons/csv/CSVFormat$Builder.setTrailingDelimiter:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #681 = NameAndType        #682:#611     // setTrailingDelimiter:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #682 = Utf8               setTrailingDelimiter\n+  #683 = Methodref          #177.#684     // org/apache/commons/csv/CSVFormat$Builder.setTrim:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #684 = NameAndType        #685:#611     // setTrim:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #685 = Utf8               setTrim\n+  #686 = Methodref          #89.#687      // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+  #687 = NameAndType        #264:#688     // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+  #688 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+  #689 = String             #690          // ,\n+  #690 = Utf8               ,\n+  #691 = Fieldref           #1.#692       // org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+  #692 = NameAndType        #693:#66      // DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+  #693 = Utf8               DOUBLE_QUOTE_CHAR\n+  #694 = String             #695          // \\r\\n\n+  #695 = Utf8               \\r\\n\n+  #696 = Fieldref           #4.#697       // org/apache/commons/csv/CSVFormat.DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+  #697 = NameAndType        #698:#699     // DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+  #698 = Utf8               DEFAULT\n+  #699 = Utf8               Lorg/apache/commons/csv/CSVFormat;\n+  #700 = Fieldref           #4.#701       // org/apache/commons/csv/CSVFormat.EXCEL:Lorg/apache/commons/csv/CSVFormat;\n+  #701 = NameAndType        #702:#699     // EXCEL:Lorg/apache/commons/csv/CSVFormat;\n+  #702 = Utf8               EXCEL\n+  #703 = Fieldref           #4.#704       // org/apache/commons/csv/CSVFormat.INFORMIX_UNLOAD:Lorg/apache/commons/csv/CSVFormat;\n+  #704 = NameAndType        #705:#699     // INFORMIX_UNLOAD:Lorg/apache/commons/csv/CSVFormat;\n+  #705 = Utf8               INFORMIX_UNLOAD\n+  #706 = Methodref          #177.#707     // org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #707 = NameAndType        #624:#662     // setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #708 = Fieldref           #4.#709       // org/apache/commons/csv/CSVFormat.INFORMIX_UNLOAD_CSV:Lorg/apache/commons/csv/CSVFormat;\n+  #709 = NameAndType        #710:#699     // INFORMIX_UNLOAD_CSV:Lorg/apache/commons/csv/CSVFormat;\n+  #710 = Utf8               INFORMIX_UNLOAD_CSV\n+  #711 = Fieldref           #4.#712       // org/apache/commons/csv/CSVFormat.MONGODB_CSV:Lorg/apache/commons/csv/CSVFormat;\n+  #712 = NameAndType        #713:#699     // MONGODB_CSV:Lorg/apache/commons/csv/CSVFormat;\n+  #713 = Utf8               MONGODB_CSV\n+  #714 = Fieldref           #4.#715       // org/apache/commons/csv/CSVFormat.MONGODB_TSV:Lorg/apache/commons/csv/CSVFormat;\n+  #715 = NameAndType        #716:#699     // MONGODB_TSV:Lorg/apache/commons/csv/CSVFormat;\n+  #716 = Utf8               MONGODB_TSV\n+  #717 = String             #718          // \\\\N\n+  #718 = Utf8               \\\\N\n+  #719 = Fieldref           #360.#720     // org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n+  #720 = NameAndType        #721:#73      // ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n+  #721 = Utf8               ALL_NON_NULL\n+  #722 = Fieldref           #4.#723       // org/apache/commons/csv/CSVFormat.MYSQL:Lorg/apache/commons/csv/CSVFormat;\n+  #723 = NameAndType        #724:#699     // MYSQL:Lorg/apache/commons/csv/CSVFormat;\n+  #724 = Utf8               MYSQL\n+  #725 = Fieldref           #4.#726       // org/apache/commons/csv/CSVFormat.ORACLE:Lorg/apache/commons/csv/CSVFormat;\n+  #726 = NameAndType        #727:#699     // ORACLE:Lorg/apache/commons/csv/CSVFormat;\n+  #727 = Utf8               ORACLE\n+  #728 = Fieldref           #4.#729       // org/apache/commons/csv/CSVFormat.POSTGRESQL_CSV:Lorg/apache/commons/csv/CSVFormat;\n+  #729 = NameAndType        #730:#699     // POSTGRESQL_CSV:Lorg/apache/commons/csv/CSVFormat;\n+  #730 = Utf8               POSTGRESQL_CSV\n+  #731 = Fieldref           #4.#732       // org/apache/commons/csv/CSVFormat.POSTGRESQL_TEXT:Lorg/apache/commons/csv/CSVFormat;\n+  #732 = NameAndType        #733:#699     // POSTGRESQL_TEXT:Lorg/apache/commons/csv/CSVFormat;\n+  #733 = Utf8               POSTGRESQL_TEXT\n+  #734 = Fieldref           #4.#735       // org/apache/commons/csv/CSVFormat.RFC4180:Lorg/apache/commons/csv/CSVFormat;\n+  #735 = NameAndType        #736:#699     // RFC4180:Lorg/apache/commons/csv/CSVFormat;\n+  #736 = Utf8               RFC4180\n+  #737 = Fieldref           #4.#738       // org/apache/commons/csv/CSVFormat.TDF:Lorg/apache/commons/csv/CSVFormat;\n+  #738 = NameAndType        #739:#699     // TDF:Lorg/apache/commons/csv/CSVFormat;\n+  #739 = Utf8               TDF\n+  #740 = Class              #741          // java/io/Serializable\n+  #741 = Utf8               java/io/Serializable\n+  #742 = Utf8               serialVersionUID\n+  #743 = Utf8               J\n+  #744 = Utf8               ConstantValue\n+  #745 = Long               2l\n+  #747 = Utf8               Code\n+  #748 = Utf8               LineNumberTable\n+  #749 = Utf8               LocalVariableTable\n+  #750 = Utf8               values\n+  #751 = Utf8               LocalVariableTypeTable\n+  #752 = Utf8               [TT;\n+  #753 = Utf8               StackMapTable\n+  #754 = Utf8               Signature\n+  #755 = Utf8               <T:Ljava/lang/Object;>([TT;)[TT;\n+  #756 = Utf8               RuntimeVisibleAnnotations\n+  #757 = Utf8               Ljava/lang/SafeVarargs;\n+  #758 = Utf8               searchCh\n+  #759 = Utf8               C\n+  #760 = Utf8               value\n+  #761 = Utf8               c\n+  #762 = Utf8               ch\n+  #763 = Utf8               charSequence\n+  #764 = Utf8               Ljava/lang/CharSequence;\n+  #765 = Utf8               pos\n+  #766 = Utf8               I\n+  #767 = Utf8               newFormat\n+  #768 = Utf8               (C)Lorg/apache/commons/csv/CSVFormat;\n+  #769 = Utf8               strings\n+  #770 = Utf8               count\n+  #771 = Utf8               len\n+  #772 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+  #773 = Utf8               this\n+  #774 = Utf8               Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #775 = Utf8               quoteChar\n+  #776 = Utf8               commentStart\n+  #777 = Utf8               escape\n+  #778 = Utf8               header\n+  #779 = Utf8               appendable\n+  #780 = Utf8               Ljava/lang/Appendable;\n+  #781 = Utf8               Exceptions\n+  #782 = Utf8               csq\n+  #783 = Utf8               obj\n+  #784 = Utf8               Ljava/lang/Object;\n+  #785 = Utf8               other\n+  #786 = Utf8               res\n+  #787 = Utf8               csvPrinter\n+  #788 = Utf8               Lorg/apache/commons/csv/CSVPrinter;\n+  #789 = Utf8               e\n+  #790 = Utf8               Ljava/io/IOException;\n+  #791 = Utf8               Ljava/io/StringWriter;\n+  #792 = Utf8               getAllowDuplicateHeaderNames\n+  #793 = Utf8               Deprecated\n+  #794 = Utf8               Ljava/lang/Deprecated;\n+  #795 = Utf8               getAllowMissingColumnNames\n+  #796 = Utf8               getAutoFlush\n+  #797 = Utf8               getCommentMarker\n+  #798 = Utf8               getDelimiter\n+  #799 = Utf8               getDuplicateHeaderMode\n+  #800 = Utf8               ()Lorg/apache/commons/csv/DuplicateHeaderMode;\n+  #801 = Utf8               getHeader\n+  #802 = Utf8               ()[Ljava/lang/String;\n+  #803 = Utf8               getHeaderComments\n+  #804 = Utf8               getNullString\n+  #805 = Utf8               getRecordSeparator\n+  #806 = Utf8               getSkipHeaderRecord\n+  #807 = Utf8               prime\n+  #808 = Utf8               result\n+  #809 = Utf8               i\n+  #810 = Utf8               charSeq\n+  #811 = Utf8               startIndex\n+  #812 = Utf8               [C\n+  #813 = Utf8               delimiterLength\n+  #814 = Utf8               parse\n+  #815 = Utf8               (Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n+  #816 = Utf8               reader\n+  #817 = Utf8               Ljava/io/Reader;\n+  #818 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;)Lorg/apache/commons/csv/CSVPrinter;\n+  #819 = Utf8               Ljava/io/File;\n+  #820 = Utf8               charset\n+  #821 = Utf8               Ljava/nio/charset/Charset;\n+  #822 = Utf8               newRecord\n+  #823 = Utf8               object\n+  #824 = Utf8               offset\n+  #825 = Utf8               (Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Lorg/apache/commons/csv/CSVPrinter;\n+  #826 = Utf8               Ljava/nio/file/Path;\n+  #827 = Utf8               printer\n+  #828 = Utf8               ()Lorg/apache/commons/csv/CSVPrinter;\n+  #829 = Utf8               (Ljava/lang/Appendable;[Ljava/lang/Object;)V\n+  #830 = Utf8               isDelimiterStart\n+  #831 = Utf8               start\n+  #832 = Utf8               end\n+  #833 = Utf8               delim\n+  #834 = Utf8               delimLength\n+  #835 = Class              #812          // \"[C\"\n+  #836 = Utf8               bufferedReader\n+  #837 = Utf8               Lorg/apache/commons/csv/ExtendedBufferedReader;\n+  #838 = Utf8               Ljava/lang/StringBuilder;\n+  #839 = Utf8               quote\n+  #840 = Utf8               escapeChar\n+  #841 = Utf8               quoteModePolicy\n+  #842 = Utf8               sb\n+  #843 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #844 = Utf8               blank\n+  #845 = Utf8               containsHeader\n+  #846 = Utf8               dupCheckSet\n+  #847 = Utf8               Ljava/util/Set;\n+  #848 = Utf8               emptyDuplicatesAllowed\n+  #849 = Utf8               Ljava/util/Set<Ljava/lang/String;>;\n+  #850 = Utf8               withAllowDuplicateHeaderNames\n+  #851 = Utf8               (Z)Lorg/apache/commons/csv/CSVFormat;\n+  #852 = Utf8               allowDuplicateHeaderNames\n+  #853 = Utf8               mode\n+  #854 = Utf8               withAllowMissingColumnNames\n+  #855 = Utf8               withAutoFlush\n+  #856 = Utf8               withCommentMarker\n+  #857 = Utf8               (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+  #858 = Utf8               withDelimiter\n+  #859 = Utf8               withEscape\n+  #860 = Utf8               withFirstRecordAsHeader\n+  #861 = Utf8               withHeader\n+  #862 = Utf8               (Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat;\n+  #863 = Utf8               headerEnum\n+  #864 = Utf8               Ljava/lang/Class;\n+  #865 = Utf8               Ljava/lang/Class<+Ljava/lang/Enum<*>;>;\n+  #866 = Utf8               (Ljava/lang/Class<+Ljava/lang/Enum<*>;>;)Lorg/apache/commons/csv/CSVFormat;\n+  #867 = Utf8               (Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat;\n+  #868 = Utf8               resultSet\n+  #869 = Utf8               Ljava/sql/ResultSet;\n+  #870 = Class              #871          // java/sql/SQLException\n+  #871 = Utf8               java/sql/SQLException\n+  #872 = Utf8               (Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;\n+  #873 = Utf8               resultSetMetaData\n+  #874 = Utf8               Ljava/sql/ResultSetMetaData;\n+  #875 = Utf8               ([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+  #876 = Utf8               withHeaderComments\n+  #877 = Utf8               ([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat;\n+  #878 = Utf8               withIgnoreEmptyLines\n+  #879 = Utf8               withIgnoreHeaderCase\n+  #880 = Utf8               withIgnoreSurroundingSpaces\n+  #881 = Utf8               withNullString\n+  #882 = Utf8               withQuote\n+  #883 = Utf8               withQuoteMode\n+  #884 = Utf8               (Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n+  #885 = Utf8               withRecordSeparator\n+  #886 = Utf8               withSkipHeaderRecord\n+  #887 = Utf8               withSystemRecordSeparator\n+  #888 = Utf8               withTrailingDelimiter\n+  #889 = Utf8               withTrim\n+  #890 = Utf8               lambda$toStringArray$0\n+  #891 = Utf8               ([Ljava/lang/Object;I)Ljava/lang/String;\n+  #892 = Utf8               access$000\n+  #893 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+  #894 = Utf8               x0\n+  #895 = Utf8               access$100\n+  #896 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+  #897 = Utf8               access$200\n+  #898 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/QuoteMode;\n+  #899 = Utf8               access$300\n+  #900 = Utf8               access$400\n+  #901 = Utf8               access$500\n+  #902 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Z\n+  #903 = Utf8               access$600\n+  #904 = Utf8               access$700\n+  #905 = Utf8               access$800\n+  #906 = Utf8               access$900\n+  #907 = Utf8               access$1000\n+  #908 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n+  #909 = Utf8               access$1100\n+  #910 = Utf8               access$1200\n+  #911 = Utf8               access$1300\n+  #912 = Utf8               access$1400\n+  #913 = Utf8               access$1500\n+  #914 = Utf8               access$1600\n+  #915 = Utf8               access$1700\n+  #916 = Utf8               access$1800\n+  #917 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/DuplicateHeaderMode;\n+  #918 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;Lorg/apache/commons/csv/CSVFormat$1;)V\n+  #919 = Utf8               x1\n+  #920 = Utf8               Lorg/apache/commons/csv/CSVFormat$1;\n+  #921 = Utf8               access$2000\n+  #922 = Utf8               access$2100\n+  #923 = Utf8               <clinit>\n+  #924 = Utf8               SourceFile\n+  #925 = Utf8               CSVFormat.java\n+  #926 = Utf8               BootstrapMethods\n+  #927 = MethodHandle       6:#928        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #928 = Methodref          #929.#930     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #929 = Class              #931          // java/lang/invoke/LambdaMetafactory\n+  #930 = NameAndType        #932:#933     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #931 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #932 = Utf8               metafactory\n+  #933 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #934 = MethodType         #935          //  (I)Ljava/lang/Object;\n+  #935 = Utf8               (I)Ljava/lang/Object;\n+  #936 = MethodHandle       6:#937        // REF_invokeStatic org/apache/commons/csv/CSVFormat.lambda$toStringArray$0:([Ljava/lang/Object;I)Ljava/lang/String;\n+  #937 = Methodref          #4.#938       // org/apache/commons/csv/CSVFormat.lambda$toStringArray$0:([Ljava/lang/Object;I)Ljava/lang/String;\n+  #938 = NameAndType        #890:#891     // lambda$toStringArray$0:([Ljava/lang/Object;I)Ljava/lang/String;\n+  #939 = MethodType         #940          //  (I)Ljava/lang/String;\n+  #940 = Utf8               (I)Ljava/lang/String;\n+  #941 = Utf8               InnerClasses\n+  #942 = Utf8               Builder\n+  #943 = Utf8               Predefined\n+  #944 = Class              #945          // java/lang/invoke/MethodHandles$Lookup\n+  #945 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #946 = Class              #947          // java/lang/invoke/MethodHandles\n+  #947 = Utf8               java/lang/invoke/MethodHandles\n   #948 = Utf8               Lookup\n-  #949 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #950 = Class              #952          // java/lang/invoke/MethodHandles\n-  #951 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #952 = Utf8               java/lang/invoke/MethodHandles\n {\n   public static final org.apache.commons.csv.CSVFormat DEFAULT;\n     descriptor: Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public static final org.apache.commons.csv.CSVFormat EXCEL;\n     descriptor: Lorg/apache/commons/csv/CSVFormat;\n@@ -1095,45 +1091,45 @@\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: ifnonnull     8\n          4: aconst_null\n          5: goto          15\n          8: aload_0\n-         9: invokevirtual #24                 // Method \"[Ljava/lang/Object;\".clone:()Ljava/lang/Object;\n-        12: checkcast     #25                 // class \"[Ljava/lang/Object;\"\n+         9: invokevirtual #80                 // Method \"[Ljava/lang/Object;\".clone:()Ljava/lang/Object;\n+        12: checkcast     #81                 // class \"[Ljava/lang/Object;\"\n         15: areturn\n       LineNumberTable:\n         line 1190: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0 values   [Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0 values   [TT;\n       StackMapTable: number_of_entries = 2\n         frame_type = 8 /* same */\n         frame_type = 70 /* same_locals_1_stack_item */\n           stack = [ class \"[Ljava/lang/Object;\" ]\n-    Signature: #308                         // <T:Ljava/lang/Object;>([TT;)[TT;\n+    Signature: #755                         // <T:Ljava/lang/Object;>([TT;)[TT;\n     RuntimeVisibleAnnotations:\n-      0: #310()\n+      0: #757()\n         java.lang.SafeVarargs\n \n   private static boolean contains(java.lang.String, char);\n     descriptor: (Ljava/lang/String;C)Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: ldc           #26                 // String source\n-         3: invokestatic  #27                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-         6: checkcast     #28                 // class java/lang/String\n+         1: ldc           #86                 // String source\n+         3: invokestatic  #88                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         6: checkcast     #94                 // class java/lang/String\n          9: iload_1\n-        10: invokevirtual #29                 // Method java/lang/String.indexOf:(I)I\n+        10: invokevirtual #96                 // Method java/lang/String.indexOf:(I)I\n         13: iflt          20\n         16: iconst_1\n         17: goto          21\n         20: iconst_0\n         21: ireturn\n       LineNumberTable:\n         line 1202: 0\n@@ -1149,19 +1145,19 @@\n   private static boolean containsLineBreak(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: bipush        13\n-         3: invokestatic  #30                 // Method contains:(Ljava/lang/String;C)Z\n+         3: invokestatic  #100                // Method contains:(Ljava/lang/String;C)Z\n          6: ifne          18\n          9: aload_0\n         10: bipush        10\n-        12: invokestatic  #30                 // Method contains:(Ljava/lang/String;C)Z\n+        12: invokestatic  #100                // Method contains:(Ljava/lang/String;C)Z\n         15: ifeq          22\n         18: iconst_1\n         19: goto          23\n         22: iconst_0\n         23: ireturn\n       LineNumberTable:\n         line 1213: 0\n@@ -1178,16 +1174,16 @@\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: ifnull        14\n          4: aload_0\n-         5: invokevirtual #31                 // Method java/lang/String.trim:()Ljava/lang/String;\n-         8: invokevirtual #32                 // Method java/lang/String.isEmpty:()Z\n+         5: invokevirtual #104                // Method java/lang/String.trim:()Ljava/lang/String;\n+         8: invokevirtual #107                // Method java/lang/String.isEmpty:()Z\n         11: ifeq          18\n         14: iconst_1\n         15: goto          19\n         18: iconst_0\n         19: ireturn\n       LineNumberTable:\n         line 1217: 0\n@@ -1230,16 +1226,16 @@\n     descriptor: (Ljava/lang/Character;)Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: ifnull        18\n          4: aload_0\n-         5: invokevirtual #33                 // Method java/lang/Character.charValue:()C\n-         8: invokestatic  #34                 // Method isLineBreak:(C)Z\n+         5: invokevirtual #111                // Method java/lang/Character.charValue:()C\n+         8: invokestatic  #117                // Method isLineBreak:(C)Z\n         11: ifeq          18\n         14: iconst_1\n         15: goto          19\n         18: iconst_0\n         19: ireturn\n       LineNumberTable:\n         line 1239: 0\n@@ -1276,33 +1272,33 @@\n   private static boolean isTrimChar(java.lang.CharSequence, int);\n     descriptor: (Ljava/lang/CharSequence;I)Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokeinterface #35,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n-         7: invokestatic  #36                 // Method isTrimChar:(C)Z\n+         2: invokeinterface #120,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+         7: invokestatic  #126                // Method isTrimChar:(C)Z\n         10: ireturn\n       LineNumberTable:\n         line 1249: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 charSequence   Ljava/lang/CharSequence;\n             0      11     1   pos   I\n \n   public static org.apache.commons.csv.CSVFormat newFormat(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=20, locals=1, args_size=1\n-         0: new           #37                 // class org/apache/commons/csv/CSVFormat\n+         0: new           #4                  // class org/apache/commons/csv/CSVFormat\n          3: dup\n          4: iload_0\n-         5: invokestatic  #38                 // Method java/lang/String.valueOf:(C)Ljava/lang/String;\n+         5: invokestatic  #129                // Method java/lang/String.valueOf:(C)Ljava/lang/String;\n          8: aconst_null\n          9: aconst_null\n         10: aconst_null\n         11: aconst_null\n         12: iconst_0\n         13: iconst_0\n         14: aconst_null\n@@ -1311,16 +1307,16 @@\n         17: aconst_null\n         18: iconst_0\n         19: iconst_0\n         20: iconst_0\n         21: iconst_0\n         22: iconst_0\n         23: iconst_0\n-        24: getstatic     #39                 // Field org/apache/commons/csv/DuplicateHeaderMode.ALLOW_ALL:Lorg/apache/commons/csv/DuplicateHeaderMode;\n-        27: invokespecial #40                 // Method \"<init>\":(Ljava/lang/String;Ljava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZLorg/apache/commons/csv/DuplicateHeaderMode;)V\n+        24: getstatic     #133                // Field org/apache/commons/csv/DuplicateHeaderMode.ALLOW_ALL:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+        27: invokespecial #138                // Method \"<init>\":(Ljava/lang/String;Ljava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZLorg/apache/commons/csv/DuplicateHeaderMode;)V\n         30: areturn\n       LineNumberTable:\n         line 1270: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      31     0 delimiter   C\n \n@@ -1331,20 +1327,20 @@\n       stack=2, locals=2, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n          7: arraylength\n-         8: anewarray     #28                 // class java/lang/String\n+         8: anewarray     #94                 // class java/lang/String\n         11: astore_1\n         12: aload_1\n         13: aload_0\n-        14: invokedynamic #41,  0             // InvokeDynamic #0:apply:([Ljava/lang/Object;)Ljava/util/function/IntFunction;\n-        19: invokestatic  #42                 // Method java/util/Arrays.setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n+        14: invokedynamic #141,  0            // InvokeDynamic #0:apply:([Ljava/lang/Object;)Ljava/util/function/IntFunction;\n+        19: invokestatic  #145                // Method java/util/Arrays.setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n         22: aload_1\n         23: areturn\n       LineNumberTable:\n         line 1275: 0\n         line 1276: 4\n         line 1278: 6\n         line 1279: 12\n@@ -1358,56 +1354,56 @@\n \n   static java.lang.CharSequence trim(java.lang.CharSequence);\n     descriptor: (Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=3, locals=4, args_size=1\n          0: aload_0\n-         1: instanceof    #28                 // class java/lang/String\n+         1: instanceof    #94                 // class java/lang/String\n          4: ifeq          15\n          7: aload_0\n-         8: checkcast     #28                 // class java/lang/String\n-        11: invokevirtual #31                 // Method java/lang/String.trim:()Ljava/lang/String;\n+         8: checkcast     #94                 // class java/lang/String\n+        11: invokevirtual #104                // Method java/lang/String.trim:()Ljava/lang/String;\n         14: areturn\n         15: aload_0\n-        16: invokeinterface #43,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n+        16: invokeinterface #151,  1          // InterfaceMethod java/lang/CharSequence.length:()I\n         21: istore_1\n         22: iload_1\n         23: istore_2\n         24: iconst_0\n         25: istore_3\n         26: iload_3\n         27: iload_2\n         28: if_icmpge     45\n         31: aload_0\n         32: iload_3\n-        33: invokestatic  #44                 // Method isTrimChar:(Ljava/lang/CharSequence;I)Z\n+        33: invokestatic  #155                // Method isTrimChar:(Ljava/lang/CharSequence;I)Z\n         36: ifeq          45\n         39: iinc          3, 1\n         42: goto          26\n         45: iload_3\n         46: iload_2\n         47: if_icmpge     66\n         50: aload_0\n         51: iload_2\n         52: iconst_1\n         53: isub\n-        54: invokestatic  #44                 // Method isTrimChar:(Ljava/lang/CharSequence;I)Z\n+        54: invokestatic  #155                // Method isTrimChar:(Ljava/lang/CharSequence;I)Z\n         57: ifeq          66\n         60: iinc          2, -1\n         63: goto          45\n         66: iload_3\n         67: ifgt          75\n         70: iload_2\n         71: iload_1\n         72: if_icmpge     86\n         75: aload_0\n         76: iload_3\n         77: iload_2\n-        78: invokeinterface #45,  3           // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;\n+        78: invokeinterface #158,  3          // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;\n         83: goto          87\n         86: aload_0\n         87: areturn\n       LineNumberTable:\n         line 1284: 0\n         line 1285: 7\n         line 1287: 15\n@@ -1438,108 +1434,108 @@\n \n   public static org.apache.commons.csv.CSVFormat valueOf(java.lang.String);\n     descriptor: (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #46                 // Method org/apache/commons/csv/CSVFormat$Predefined.valueOf:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Predefined;\n-         4: invokevirtual #47                 // Method org/apache/commons/csv/CSVFormat$Predefined.getFormat:()Lorg/apache/commons/csv/CSVFormat;\n+         1: invokestatic  #162                // Method org/apache/commons/csv/CSVFormat$Predefined.valueOf:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Predefined;\n+         4: invokevirtual #167                // Method org/apache/commons/csv/CSVFormat$Predefined.getFormat:()Lorg/apache/commons/csv/CSVFormat;\n          7: areturn\n       LineNumberTable:\n         line 1308: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 format   Ljava/lang/String;\n \n   private org.apache.commons.csv.CSVFormat(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #48                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #171                // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: invokestatic  #49                 // Method org/apache/commons/csv/CSVFormat$Builder.access$2200:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-         9: putfield      #23                 // Field delimiter:Ljava/lang/String;\n+         6: invokestatic  #176                // Method org/apache/commons/csv/CSVFormat$Builder.access$2200:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+         9: putfield      #77                 // Field delimiter:Ljava/lang/String;\n         12: aload_0\n         13: aload_1\n-        14: invokestatic  #50                 // Method org/apache/commons/csv/CSVFormat$Builder.access$2300:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n-        17: putfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n+        14: invokestatic  #182                // Method org/apache/commons/csv/CSVFormat$Builder.access$2300:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n+        17: putfield      #74                 // Field quoteCharacter:Ljava/lang/Character;\n         20: aload_0\n         21: aload_1\n-        22: invokestatic  #51                 // Method org/apache/commons/csv/CSVFormat$Builder.access$2400:(Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/QuoteMode;\n-        25: putfield      #21                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        22: invokestatic  #186                // Method org/apache/commons/csv/CSVFormat$Builder.access$2400:(Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/QuoteMode;\n+        25: putfield      #70                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n         28: aload_0\n         29: aload_1\n-        30: invokestatic  #52                 // Method org/apache/commons/csv/CSVFormat$Builder.access$2500:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n-        33: putfield      #20                 // Field commentMarker:Ljava/lang/Character;\n+        30: invokestatic  #190                // Method org/apache/commons/csv/CSVFormat$Builder.access$2500:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n+        33: putfield      #67                 // Field commentMarker:Ljava/lang/Character;\n         36: aload_0\n         37: aload_1\n-        38: invokestatic  #53                 // Method org/apache/commons/csv/CSVFormat$Builder.access$2600:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n-        41: putfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n+        38: invokestatic  #193                // Method org/apache/commons/csv/CSVFormat$Builder.access$2600:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n+        41: putfield      #63                 // Field escapeCharacter:Ljava/lang/Character;\n         44: aload_0\n         45: aload_1\n-        46: invokestatic  #54                 // Method org/apache/commons/csv/CSVFormat$Builder.access$2700:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-        49: putfield      #18                 // Field ignoreSurroundingSpaces:Z\n+        46: invokestatic  #196                // Method org/apache/commons/csv/CSVFormat$Builder.access$2700:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+        49: putfield      #60                 // Field ignoreSurroundingSpaces:Z\n         52: aload_0\n         53: aload_1\n-        54: invokestatic  #55                 // Method org/apache/commons/csv/CSVFormat$Builder.access$2800:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-        57: putfield      #17                 // Field allowMissingColumnNames:Z\n+        54: invokestatic  #200                // Method org/apache/commons/csv/CSVFormat$Builder.access$2800:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+        57: putfield      #57                 // Field allowMissingColumnNames:Z\n         60: aload_0\n         61: aload_1\n-        62: invokestatic  #56                 // Method org/apache/commons/csv/CSVFormat$Builder.access$2900:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-        65: putfield      #16                 // Field ignoreEmptyLines:Z\n+        62: invokestatic  #203                // Method org/apache/commons/csv/CSVFormat$Builder.access$2900:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+        65: putfield      #54                 // Field ignoreEmptyLines:Z\n         68: aload_0\n         69: aload_1\n-        70: invokestatic  #57                 // Method org/apache/commons/csv/CSVFormat$Builder.access$3000:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-        73: putfield      #15                 // Field recordSeparator:Ljava/lang/String;\n+        70: invokestatic  #206                // Method org/apache/commons/csv/CSVFormat$Builder.access$3000:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+        73: putfield      #51                 // Field recordSeparator:Ljava/lang/String;\n         76: aload_0\n         77: aload_1\n-        78: invokestatic  #58                 // Method org/apache/commons/csv/CSVFormat$Builder.access$3100:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-        81: putfield      #14                 // Field nullString:Ljava/lang/String;\n+        78: invokestatic  #209                // Method org/apache/commons/csv/CSVFormat$Builder.access$3100:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+        81: putfield      #48                 // Field nullString:Ljava/lang/String;\n         84: aload_0\n         85: aload_1\n-        86: invokestatic  #59                 // Method org/apache/commons/csv/CSVFormat$Builder.access$3200:(Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n-        89: putfield      #13                 // Field headerComments:[Ljava/lang/String;\n+        86: invokestatic  #212                // Method org/apache/commons/csv/CSVFormat$Builder.access$3200:(Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n+        89: putfield      #45                 // Field headerComments:[Ljava/lang/String;\n         92: aload_0\n         93: aload_1\n-        94: invokestatic  #60                 // Method org/apache/commons/csv/CSVFormat$Builder.access$3300:(Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n-        97: putfield      #12                 // Field headers:[Ljava/lang/String;\n+        94: invokestatic  #216                // Method org/apache/commons/csv/CSVFormat$Builder.access$3300:(Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n+        97: putfield      #41                 // Field headers:[Ljava/lang/String;\n        100: aload_0\n        101: aload_1\n-       102: invokestatic  #61                 // Method org/apache/commons/csv/CSVFormat$Builder.access$3400:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-       105: putfield      #11                 // Field skipHeaderRecord:Z\n+       102: invokestatic  #219                // Method org/apache/commons/csv/CSVFormat$Builder.access$3400:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+       105: putfield      #38                 // Field skipHeaderRecord:Z\n        108: aload_0\n        109: aload_1\n-       110: invokestatic  #62                 // Method org/apache/commons/csv/CSVFormat$Builder.access$3500:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-       113: putfield      #10                 // Field ignoreHeaderCase:Z\n+       110: invokestatic  #222                // Method org/apache/commons/csv/CSVFormat$Builder.access$3500:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+       113: putfield      #35                 // Field ignoreHeaderCase:Z\n        116: aload_0\n        117: aload_1\n-       118: invokestatic  #63                 // Method org/apache/commons/csv/CSVFormat$Builder.access$3600:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-       121: putfield      #9                  // Field trailingDelimiter:Z\n+       118: invokestatic  #225                // Method org/apache/commons/csv/CSVFormat$Builder.access$3600:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+       121: putfield      #32                 // Field trailingDelimiter:Z\n        124: aload_0\n        125: aload_1\n-       126: invokestatic  #64                 // Method org/apache/commons/csv/CSVFormat$Builder.access$3700:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-       129: putfield      #8                  // Field trim:Z\n+       126: invokestatic  #228                // Method org/apache/commons/csv/CSVFormat$Builder.access$3700:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+       129: putfield      #29                 // Field trim:Z\n        132: aload_0\n        133: aload_1\n-       134: invokestatic  #65                 // Method org/apache/commons/csv/CSVFormat$Builder.access$3800:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-       137: putfield      #7                  // Field autoFlush:Z\n+       134: invokestatic  #231                // Method org/apache/commons/csv/CSVFormat$Builder.access$3800:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+       137: putfield      #25                 // Field autoFlush:Z\n        140: aload_0\n        141: aload_1\n-       142: invokestatic  #66                 // Method org/apache/commons/csv/CSVFormat$Builder.access$3900:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-       145: putfield      #6                  // Field quotedNullString:Ljava/lang/String;\n+       142: invokestatic  #234                // Method org/apache/commons/csv/CSVFormat$Builder.access$3900:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+       145: putfield      #21                 // Field quotedNullString:Ljava/lang/String;\n        148: aload_0\n        149: aload_1\n-       150: invokestatic  #67                 // Method org/apache/commons/csv/CSVFormat$Builder.access$4000:(Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/DuplicateHeaderMode;\n-       153: putfield      #5                  // Field duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+       150: invokestatic  #237                // Method org/apache/commons/csv/CSVFormat$Builder.access$4000:(Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/DuplicateHeaderMode;\n+       153: putfield      #17                 // Field duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n        156: aload_0\n-       157: invokespecial #68                 // Method validate:()V\n+       157: invokespecial #241                // Method validate:()V\n        160: return\n       LineNumberTable:\n         line 1349: 0\n         line 1350: 4\n         line 1351: 12\n         line 1352: 20\n         line 1353: 28\n@@ -1567,88 +1563,88 @@\n \n   private org.apache.commons.csv.CSVFormat(java.lang.String, java.lang.Character, org.apache.commons.csv.QuoteMode, java.lang.Character, java.lang.Character, boolean, boolean, java.lang.String, java.lang.String, java.lang.Object[], java.lang.String[], boolean, boolean, boolean, boolean, boolean, boolean, org.apache.commons.csv.DuplicateHeaderMode);\n     descriptor: (Ljava/lang/String;Ljava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZLorg/apache/commons/csv/DuplicateHeaderMode;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=19, args_size=19\n          0: aload_0\n-         1: invokespecial #48                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #171                // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #23                 // Field delimiter:Ljava/lang/String;\n+         6: putfield      #77                 // Field delimiter:Ljava/lang/String;\n          9: aload_0\n         10: aload_2\n-        11: putfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n+        11: putfield      #74                 // Field quoteCharacter:Ljava/lang/Character;\n         14: aload_0\n         15: aload_3\n-        16: putfield      #21                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        16: putfield      #70                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n         19: aload_0\n         20: aload         4\n-        22: putfield      #20                 // Field commentMarker:Ljava/lang/Character;\n+        22: putfield      #67                 // Field commentMarker:Ljava/lang/Character;\n         25: aload_0\n         26: aload         5\n-        28: putfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n+        28: putfield      #63                 // Field escapeCharacter:Ljava/lang/Character;\n         31: aload_0\n         32: iload         6\n-        34: putfield      #18                 // Field ignoreSurroundingSpaces:Z\n+        34: putfield      #60                 // Field ignoreSurroundingSpaces:Z\n         37: aload_0\n         38: iload         13\n-        40: putfield      #17                 // Field allowMissingColumnNames:Z\n+        40: putfield      #57                 // Field allowMissingColumnNames:Z\n         43: aload_0\n         44: iload         7\n-        46: putfield      #16                 // Field ignoreEmptyLines:Z\n+        46: putfield      #54                 // Field ignoreEmptyLines:Z\n         49: aload_0\n         50: aload         8\n-        52: putfield      #15                 // Field recordSeparator:Ljava/lang/String;\n+        52: putfield      #51                 // Field recordSeparator:Ljava/lang/String;\n         55: aload_0\n         56: aload         9\n-        58: putfield      #14                 // Field nullString:Ljava/lang/String;\n+        58: putfield      #48                 // Field nullString:Ljava/lang/String;\n         61: aload_0\n         62: aload         10\n-        64: invokestatic  #69                 // Method toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n-        67: putfield      #13                 // Field headerComments:[Ljava/lang/String;\n+        64: invokestatic  #244                // Method toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n+        67: putfield      #45                 // Field headerComments:[Ljava/lang/String;\n         70: aload_0\n         71: aload         11\n-        73: invokestatic  #70                 // Method clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n-        76: checkcast     #71                 // class \"[Ljava/lang/String;\"\n-        79: putfield      #12                 // Field headers:[Ljava/lang/String;\n+        73: invokestatic  #248                // Method clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n+        76: checkcast     #251                // class \"[Ljava/lang/String;\"\n+        79: putfield      #41                 // Field headers:[Ljava/lang/String;\n         82: aload_0\n         83: iload         12\n-        85: putfield      #11                 // Field skipHeaderRecord:Z\n+        85: putfield      #38                 // Field skipHeaderRecord:Z\n         88: aload_0\n         89: iload         14\n-        91: putfield      #10                 // Field ignoreHeaderCase:Z\n+        91: putfield      #35                 // Field ignoreHeaderCase:Z\n         94: aload_0\n         95: iload         16\n-        97: putfield      #9                  // Field trailingDelimiter:Z\n+        97: putfield      #32                 // Field trailingDelimiter:Z\n        100: aload_0\n        101: iload         15\n-       103: putfield      #8                  // Field trim:Z\n+       103: putfield      #29                 // Field trim:Z\n        106: aload_0\n        107: iload         17\n-       109: putfield      #7                  // Field autoFlush:Z\n+       109: putfield      #25                 // Field autoFlush:Z\n        112: aload_0\n-       113: new           #72                 // class java/lang/StringBuilder\n+       113: new           #252                // class java/lang/StringBuilder\n        116: dup\n-       117: invokespecial #73                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       117: invokespecial #254                // Method java/lang/StringBuilder.\"<init>\":()V\n        120: aload_0\n-       121: getfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n-       124: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       121: getfield      #74                 // Field quoteCharacter:Ljava/lang/Character;\n+       124: invokevirtual #255                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n        127: aload         9\n-       129: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       129: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        132: aload_0\n-       133: getfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n-       136: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       139: invokevirtual #76                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       142: putfield      #6                  // Field quotedNullString:Ljava/lang/String;\n+       133: getfield      #74                 // Field quoteCharacter:Ljava/lang/Character;\n+       136: invokevirtual #255                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       139: invokevirtual #262                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       142: putfield      #21                 // Field quotedNullString:Ljava/lang/String;\n        145: aload_0\n        146: aload         18\n-       148: putfield      #5                  // Field duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+       148: putfield      #17                 // Field duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n        151: aload_0\n-       152: invokespecial #68                 // Method validate:()V\n+       152: invokespecial #241                // Method validate:()V\n        155: return\n       LineNumberTable:\n         line 1399: 0\n         line 1400: 4\n         line 1401: 9\n         line 1402: 14\n         line 1403: 19\n@@ -1694,15 +1690,15 @@\n   private void append(char, java.lang.Appendable) throws java.io.IOException;\n     descriptor: (CLjava/lang/Appendable;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_2\n          1: iload_1\n-         2: invokeinterface #77,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+         2: invokeinterface #265,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n          7: pop\n          8: return\n       LineNumberTable:\n         line 1424: 0\n         line 1428: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1715,15 +1711,15 @@\n   private void append(java.lang.CharSequence, java.lang.Appendable) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_2\n          1: aload_1\n-         2: invokeinterface #78,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+         2: invokeinterface #270,  2          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n          7: pop\n          8: return\n       LineNumberTable:\n         line 1432: 0\n         line 1436: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1735,30 +1731,30 @@\n \n   public org.apache.commons.csv.CSVFormat$Builder builder();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #79                 // Method org/apache/commons/csv/CSVFormat$Builder.create:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokestatic  #273                // Method org/apache/commons/csv/CSVFormat$Builder.create:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: areturn\n       LineNumberTable:\n         line 1444: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   org.apache.commons.csv.CSVFormat copy();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0000)\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-         4: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         4: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n          7: areturn\n       LineNumberTable:\n         line 1453: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n@@ -1771,126 +1767,126 @@\n          1: aload_1\n          2: if_acmpne     7\n          5: iconst_1\n          6: ireturn\n          7: aload_1\n          8: ifnull        22\n         11: aload_0\n-        12: invokevirtual #82                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        12: invokevirtual #284                // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         15: aload_1\n-        16: invokevirtual #82                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        16: invokevirtual #284                // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         19: if_acmpeq     24\n         22: iconst_0\n         23: ireturn\n         24: aload_1\n-        25: checkcast     #37                 // class org/apache/commons/csv/CSVFormat\n+        25: checkcast     #4                  // class org/apache/commons/csv/CSVFormat\n         28: astore_2\n         29: aload_0\n-        30: getfield      #5                  // Field duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+        30: getfield      #17                 // Field duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n         33: aload_2\n-        34: getfield      #5                  // Field duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+        34: getfield      #17                 // Field duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n         37: if_acmpne     269\n         40: aload_0\n-        41: getfield      #17                 // Field allowMissingColumnNames:Z\n+        41: getfield      #57                 // Field allowMissingColumnNames:Z\n         44: aload_2\n-        45: getfield      #17                 // Field allowMissingColumnNames:Z\n+        45: getfield      #57                 // Field allowMissingColumnNames:Z\n         48: if_icmpne     269\n         51: aload_0\n-        52: getfield      #7                  // Field autoFlush:Z\n+        52: getfield      #25                 // Field autoFlush:Z\n         55: aload_2\n-        56: getfield      #7                  // Field autoFlush:Z\n+        56: getfield      #25                 // Field autoFlush:Z\n         59: if_icmpne     269\n         62: aload_0\n-        63: getfield      #20                 // Field commentMarker:Ljava/lang/Character;\n+        63: getfield      #67                 // Field commentMarker:Ljava/lang/Character;\n         66: aload_2\n-        67: getfield      #20                 // Field commentMarker:Ljava/lang/Character;\n-        70: invokestatic  #83                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+        67: getfield      #67                 // Field commentMarker:Ljava/lang/Character;\n+        70: invokestatic  #288                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n         73: ifeq          269\n         76: aload_0\n-        77: getfield      #23                 // Field delimiter:Ljava/lang/String;\n+        77: getfield      #77                 // Field delimiter:Ljava/lang/String;\n         80: aload_2\n-        81: getfield      #23                 // Field delimiter:Ljava/lang/String;\n-        84: invokestatic  #83                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+        81: getfield      #77                 // Field delimiter:Ljava/lang/String;\n+        84: invokestatic  #288                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n         87: ifeq          269\n         90: aload_0\n-        91: getfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n+        91: getfield      #63                 // Field escapeCharacter:Ljava/lang/Character;\n         94: aload_2\n-        95: getfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n-        98: invokestatic  #83                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+        95: getfield      #63                 // Field escapeCharacter:Ljava/lang/Character;\n+        98: invokestatic  #288                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n        101: ifeq          269\n        104: aload_0\n-       105: getfield      #12                 // Field headers:[Ljava/lang/String;\n+       105: getfield      #41                 // Field headers:[Ljava/lang/String;\n        108: aload_2\n-       109: getfield      #12                 // Field headers:[Ljava/lang/String;\n-       112: invokestatic  #84                 // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+       109: getfield      #41                 // Field headers:[Ljava/lang/String;\n+       112: invokestatic  #292                // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n        115: ifeq          269\n        118: aload_0\n-       119: getfield      #13                 // Field headerComments:[Ljava/lang/String;\n+       119: getfield      #45                 // Field headerComments:[Ljava/lang/String;\n        122: aload_2\n-       123: getfield      #13                 // Field headerComments:[Ljava/lang/String;\n-       126: invokestatic  #84                 // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+       123: getfield      #45                 // Field headerComments:[Ljava/lang/String;\n+       126: invokestatic  #292                // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n        129: ifeq          269\n        132: aload_0\n-       133: getfield      #16                 // Field ignoreEmptyLines:Z\n+       133: getfield      #54                 // Field ignoreEmptyLines:Z\n        136: aload_2\n-       137: getfield      #16                 // Field ignoreEmptyLines:Z\n+       137: getfield      #54                 // Field ignoreEmptyLines:Z\n        140: if_icmpne     269\n        143: aload_0\n-       144: getfield      #10                 // Field ignoreHeaderCase:Z\n+       144: getfield      #35                 // Field ignoreHeaderCase:Z\n        147: aload_2\n-       148: getfield      #10                 // Field ignoreHeaderCase:Z\n+       148: getfield      #35                 // Field ignoreHeaderCase:Z\n        151: if_icmpne     269\n        154: aload_0\n-       155: getfield      #18                 // Field ignoreSurroundingSpaces:Z\n+       155: getfield      #60                 // Field ignoreSurroundingSpaces:Z\n        158: aload_2\n-       159: getfield      #18                 // Field ignoreSurroundingSpaces:Z\n+       159: getfield      #60                 // Field ignoreSurroundingSpaces:Z\n        162: if_icmpne     269\n        165: aload_0\n-       166: getfield      #14                 // Field nullString:Ljava/lang/String;\n+       166: getfield      #48                 // Field nullString:Ljava/lang/String;\n        169: aload_2\n-       170: getfield      #14                 // Field nullString:Ljava/lang/String;\n-       173: invokestatic  #83                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+       170: getfield      #48                 // Field nullString:Ljava/lang/String;\n+       173: invokestatic  #288                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n        176: ifeq          269\n        179: aload_0\n-       180: getfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n+       180: getfield      #74                 // Field quoteCharacter:Ljava/lang/Character;\n        183: aload_2\n-       184: getfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n-       187: invokestatic  #83                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+       184: getfield      #74                 // Field quoteCharacter:Ljava/lang/Character;\n+       187: invokestatic  #288                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n        190: ifeq          269\n        193: aload_0\n-       194: getfield      #21                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+       194: getfield      #70                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n        197: aload_2\n-       198: getfield      #21                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+       198: getfield      #70                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n        201: if_acmpne     269\n        204: aload_0\n-       205: getfield      #6                  // Field quotedNullString:Ljava/lang/String;\n+       205: getfield      #21                 // Field quotedNullString:Ljava/lang/String;\n        208: aload_2\n-       209: getfield      #6                  // Field quotedNullString:Ljava/lang/String;\n-       212: invokestatic  #83                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+       209: getfield      #21                 // Field quotedNullString:Ljava/lang/String;\n+       212: invokestatic  #288                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n        215: ifeq          269\n        218: aload_0\n-       219: getfield      #15                 // Field recordSeparator:Ljava/lang/String;\n+       219: getfield      #51                 // Field recordSeparator:Ljava/lang/String;\n        222: aload_2\n-       223: getfield      #15                 // Field recordSeparator:Ljava/lang/String;\n-       226: invokestatic  #83                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+       223: getfield      #51                 // Field recordSeparator:Ljava/lang/String;\n+       226: invokestatic  #288                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n        229: ifeq          269\n        232: aload_0\n-       233: getfield      #11                 // Field skipHeaderRecord:Z\n+       233: getfield      #38                 // Field skipHeaderRecord:Z\n        236: aload_2\n-       237: getfield      #11                 // Field skipHeaderRecord:Z\n+       237: getfield      #38                 // Field skipHeaderRecord:Z\n        240: if_icmpne     269\n        243: aload_0\n-       244: getfield      #9                  // Field trailingDelimiter:Z\n+       244: getfield      #32                 // Field trailingDelimiter:Z\n        247: aload_2\n-       248: getfield      #9                  // Field trailingDelimiter:Z\n+       248: getfield      #32                 // Field trailingDelimiter:Z\n        251: if_icmpne     269\n        254: aload_0\n-       255: getfield      #8                  // Field trim:Z\n+       255: getfield      #29                 // Field trim:Z\n        258: aload_2\n-       259: getfield      #8                  // Field trim:Z\n+       259: getfield      #29                 // Field trim:Z\n        262: if_icmpne     269\n        265: iconst_1\n        266: goto          270\n        269: iconst_0\n        270: ireturn\n       LineNumberTable:\n         line 1458: 0\n@@ -1921,67 +1917,67 @@\n           stack = [ int ]\n \n   public java.lang.String format(java.lang.Object...);\n     descriptor: ([Ljava/lang/Object;)Ljava/lang/String;\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=4, locals=7, args_size=2\n-         0: new           #85                 // class java/io/StringWriter\n+         0: new           #295                // class java/io/StringWriter\n          3: dup\n-         4: invokespecial #86                 // Method java/io/StringWriter.\"<init>\":()V\n+         4: invokespecial #297                // Method java/io/StringWriter.\"<init>\":()V\n          7: astore_2\n-         8: new           #87                 // class org/apache/commons/csv/CSVPrinter\n+         8: new           #298                // class org/apache/commons/csv/CSVPrinter\n         11: dup\n         12: aload_2\n         13: aload_0\n-        14: invokespecial #88                 // Method org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n+        14: invokespecial #300                // Method org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n         17: astore_3\n         18: aload_3\n         19: aload_1\n-        20: invokevirtual #89                 // Method org/apache/commons/csv/CSVPrinter.printRecord:([Ljava/lang/Object;)V\n+        20: invokevirtual #303                // Method org/apache/commons/csv/CSVPrinter.printRecord:([Ljava/lang/Object;)V\n         23: aload_2\n-        24: invokevirtual #90                 // Method java/io/StringWriter.toString:()Ljava/lang/String;\n+        24: invokevirtual #307                // Method java/io/StringWriter.toString:()Ljava/lang/String;\n         27: astore        4\n         29: aload_0\n-        30: getfield      #15                 // Field recordSeparator:Ljava/lang/String;\n+        30: getfield      #51                 // Field recordSeparator:Ljava/lang/String;\n         33: ifnull        52\n         36: aload         4\n-        38: invokevirtual #91                 // Method java/lang/String.length:()I\n+        38: invokevirtual #308                // Method java/lang/String.length:()I\n         41: aload_0\n-        42: getfield      #15                 // Field recordSeparator:Ljava/lang/String;\n-        45: invokevirtual #91                 // Method java/lang/String.length:()I\n+        42: getfield      #51                 // Field recordSeparator:Ljava/lang/String;\n+        45: invokevirtual #308                // Method java/lang/String.length:()I\n         48: isub\n         49: goto          57\n         52: aload         4\n-        54: invokevirtual #91                 // Method java/lang/String.length:()I\n+        54: invokevirtual #308                // Method java/lang/String.length:()I\n         57: istore        5\n         59: aload         4\n         61: iconst_0\n         62: iload         5\n-        64: invokevirtual #92                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        64: invokevirtual #309                // Method java/lang/String.substring:(II)Ljava/lang/String;\n         67: astore        6\n         69: aload_3\n-        70: invokevirtual #93                 // Method org/apache/commons/csv/CSVPrinter.close:()V\n+        70: invokevirtual #313                // Method org/apache/commons/csv/CSVPrinter.close:()V\n         73: aload         6\n         75: areturn\n         76: astore        4\n         78: aload_3\n-        79: invokevirtual #93                 // Method org/apache/commons/csv/CSVPrinter.close:()V\n+        79: invokevirtual #313                // Method org/apache/commons/csv/CSVPrinter.close:()V\n         82: goto          94\n         85: astore        5\n         87: aload         4\n         89: aload         5\n-        91: invokevirtual #95                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        91: invokevirtual #318                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n         94: aload         4\n         96: athrow\n         97: astore_3\n-        98: new           #97                 // class java/lang/IllegalStateException\n+        98: new           #324                // class java/lang/IllegalStateException\n        101: dup\n        102: aload_3\n-       103: invokespecial #98                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/Throwable;)V\n+       103: invokespecial #326                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/Throwable;)V\n        106: athrow\n       Exception table:\n          from    to  target type\n             18    69    76   Class java/lang/Throwable\n             78    82    85   Class java/lang/Throwable\n              8    73    97   Class java/io/IOException\n             76    97    97   Class java/io/IOException\n@@ -2028,16 +2024,16 @@\n \n   public boolean getAllowDuplicateHeaderNames();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n-         4: getstatic     #39                 // Field org/apache/commons/csv/DuplicateHeaderMode.ALLOW_ALL:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+         1: getfield      #17                 // Field duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+         4: getstatic     #133                // Field org/apache/commons/csv/DuplicateHeaderMode.ALLOW_ALL:Lorg/apache/commons/csv/DuplicateHeaderMode;\n          7: if_acmpne     14\n         10: iconst_1\n         11: goto          15\n         14: iconst_0\n         15: ireturn\n       LineNumberTable:\n         line 1503: 0\n@@ -2046,133 +2042,133 @@\n             0      16     0  this   Lorg/apache/commons/csv/CSVFormat;\n       StackMapTable: number_of_entries = 2\n         frame_type = 14 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public boolean getAllowMissingColumnNames();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #17                 // Field allowMissingColumnNames:Z\n+         1: getfield      #57                 // Field allowMissingColumnNames:Z\n          4: ireturn\n       LineNumberTable:\n         line 1512: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public boolean getAutoFlush();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field autoFlush:Z\n+         1: getfield      #25                 // Field autoFlush:Z\n          4: ireturn\n       LineNumberTable:\n         line 1522: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public java.lang.Character getCommentMarker();\n     descriptor: ()Ljava/lang/Character;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #20                 // Field commentMarker:Ljava/lang/Character;\n+         1: getfield      #67                 // Field commentMarker:Ljava/lang/Character;\n          4: areturn\n       LineNumberTable:\n         line 1531: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public char getDelimiter();\n     descriptor: ()C\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #23                 // Field delimiter:Ljava/lang/String;\n+         1: getfield      #77                 // Field delimiter:Ljava/lang/String;\n          4: iconst_0\n-         5: invokevirtual #99                 // Method java/lang/String.charAt:(I)C\n+         5: invokevirtual #328                // Method java/lang/String.charAt:(I)C\n          8: ireturn\n       LineNumberTable:\n         line 1542: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/csv/CSVFormat;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public java.lang.String getDelimiterString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #23                 // Field delimiter:Ljava/lang/String;\n+         1: getfield      #77                 // Field delimiter:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 1552: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public org.apache.commons.csv.DuplicateHeaderMode getDuplicateHeaderMode();\n     descriptor: ()Lorg/apache/commons/csv/DuplicateHeaderMode;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+         1: getfield      #17                 // Field duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n          4: areturn\n       LineNumberTable:\n         line 1562: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public java.lang.Character getEscapeCharacter();\n     descriptor: ()Ljava/lang/Character;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n+         1: getfield      #63                 // Field escapeCharacter:Ljava/lang/Character;\n          4: areturn\n       LineNumberTable:\n         line 1571: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public java.lang.String[] getHeader();\n     descriptor: ()[Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field headers:[Ljava/lang/String;\n+         1: getfield      #41                 // Field headers:[Ljava/lang/String;\n          4: ifnull        20\n          7: aload_0\n-         8: getfield      #12                 // Field headers:[Ljava/lang/String;\n-        11: invokevirtual #100                // Method \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n-        14: checkcast     #71                 // class \"[Ljava/lang/String;\"\n+         8: getfield      #41                 // Field headers:[Ljava/lang/String;\n+        11: invokevirtual #329                // Method \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n+        14: checkcast     #251                // class \"[Ljava/lang/String;\"\n         17: goto          21\n         20: aconst_null\n         21: areturn\n       LineNumberTable:\n         line 1580: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2184,20 +2180,20 @@\n \n   public java.lang.String[] getHeaderComments();\n     descriptor: ()[Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #13                 // Field headerComments:[Ljava/lang/String;\n+         1: getfield      #45                 // Field headerComments:[Ljava/lang/String;\n          4: ifnull        20\n          7: aload_0\n-         8: getfield      #13                 // Field headerComments:[Ljava/lang/String;\n-        11: invokevirtual #101                // Method \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n-        14: checkcast     #71                 // class \"[Ljava/lang/String;\"\n+         8: getfield      #45                 // Field headerComments:[Ljava/lang/String;\n+        11: invokevirtual #329                // Method \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n+        14: checkcast     #251                // class \"[Ljava/lang/String;\"\n         17: goto          21\n         20: aconst_null\n         21: areturn\n       LineNumberTable:\n         line 1589: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2209,141 +2205,141 @@\n \n   public boolean getIgnoreEmptyLines();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #16                 // Field ignoreEmptyLines:Z\n+         1: getfield      #54                 // Field ignoreEmptyLines:Z\n          4: ireturn\n       LineNumberTable:\n         line 1598: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public boolean getIgnoreHeaderCase();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field ignoreHeaderCase:Z\n+         1: getfield      #35                 // Field ignoreHeaderCase:Z\n          4: ireturn\n       LineNumberTable:\n         line 1608: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public boolean getIgnoreSurroundingSpaces();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field ignoreSurroundingSpaces:Z\n+         1: getfield      #60                 // Field ignoreSurroundingSpaces:Z\n          4: ireturn\n       LineNumberTable:\n         line 1617: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public java.lang.String getNullString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #14                 // Field nullString:Ljava/lang/String;\n+         1: getfield      #48                 // Field nullString:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 1630: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public java.lang.Character getQuoteCharacter();\n     descriptor: ()Ljava/lang/Character;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n+         1: getfield      #74                 // Field quoteCharacter:Ljava/lang/Character;\n          4: areturn\n       LineNumberTable:\n         line 1639: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public org.apache.commons.csv.QuoteMode getQuoteMode();\n     descriptor: ()Lorg/apache/commons/csv/QuoteMode;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #21                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+         1: getfield      #70                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n          4: areturn\n       LineNumberTable:\n         line 1648: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public java.lang.String getRecordSeparator();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #15                 // Field recordSeparator:Ljava/lang/String;\n+         1: getfield      #51                 // Field recordSeparator:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 1657: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public boolean getSkipHeaderRecord();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field skipHeaderRecord:Z\n+         1: getfield      #38                 // Field skipHeaderRecord:Z\n          4: ireturn\n       LineNumberTable:\n         line 1666: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public boolean getTrailingDelimiter();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field trailingDelimiter:Z\n+         1: getfield      #32                 // Field trailingDelimiter:Z\n          4: ireturn\n       LineNumberTable:\n         line 1676: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public boolean getTrim();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field trim:Z\n+         1: getfield      #29                 // Field trim:Z\n          4: ireturn\n       LineNumberTable:\n         line 1686: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n@@ -2356,125 +2352,125 @@\n          2: istore_1\n          3: iconst_1\n          4: istore_2\n          5: bipush        31\n          7: iload_2\n          8: imul\n          9: aload_0\n-        10: getfield      #12                 // Field headers:[Ljava/lang/String;\n-        13: invokestatic  #102                // Method java/util/Arrays.hashCode:([Ljava/lang/Object;)I\n+        10: getfield      #41                 // Field headers:[Ljava/lang/String;\n+        13: invokestatic  #330                // Method java/util/Arrays.hashCode:([Ljava/lang/Object;)I\n         16: iadd\n         17: istore_2\n         18: bipush        31\n         20: iload_2\n         21: imul\n         22: aload_0\n-        23: getfield      #13                 // Field headerComments:[Ljava/lang/String;\n-        26: invokestatic  #102                // Method java/util/Arrays.hashCode:([Ljava/lang/Object;)I\n+        23: getfield      #45                 // Field headerComments:[Ljava/lang/String;\n+        26: invokestatic  #330                // Method java/util/Arrays.hashCode:([Ljava/lang/Object;)I\n         29: iadd\n         30: istore_2\n         31: bipush        31\n         33: iload_2\n         34: imul\n         35: bipush        17\n-        37: anewarray     #103                // class java/lang/Object\n+        37: anewarray     #172                // class java/lang/Object\n         40: dup\n         41: iconst_0\n         42: aload_0\n-        43: getfield      #5                  // Field duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+        43: getfield      #17                 // Field duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n         46: aastore\n         47: dup\n         48: iconst_1\n         49: aload_0\n-        50: getfield      #17                 // Field allowMissingColumnNames:Z\n-        53: invokestatic  #104                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+        50: getfield      #57                 // Field allowMissingColumnNames:Z\n+        53: invokestatic  #334                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n         56: aastore\n         57: dup\n         58: iconst_2\n         59: aload_0\n-        60: getfield      #7                  // Field autoFlush:Z\n-        63: invokestatic  #104                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+        60: getfield      #25                 // Field autoFlush:Z\n+        63: invokestatic  #334                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n         66: aastore\n         67: dup\n         68: iconst_3\n         69: aload_0\n-        70: getfield      #20                 // Field commentMarker:Ljava/lang/Character;\n+        70: getfield      #67                 // Field commentMarker:Ljava/lang/Character;\n         73: aastore\n         74: dup\n         75: iconst_4\n         76: aload_0\n-        77: getfield      #23                 // Field delimiter:Ljava/lang/String;\n+        77: getfield      #77                 // Field delimiter:Ljava/lang/String;\n         80: aastore\n         81: dup\n         82: iconst_5\n         83: aload_0\n-        84: getfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n+        84: getfield      #63                 // Field escapeCharacter:Ljava/lang/Character;\n         87: aastore\n         88: dup\n         89: bipush        6\n         91: aload_0\n-        92: getfield      #16                 // Field ignoreEmptyLines:Z\n-        95: invokestatic  #104                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+        92: getfield      #54                 // Field ignoreEmptyLines:Z\n+        95: invokestatic  #334                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n         98: aastore\n         99: dup\n        100: bipush        7\n        102: aload_0\n-       103: getfield      #10                 // Field ignoreHeaderCase:Z\n-       106: invokestatic  #104                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+       103: getfield      #35                 // Field ignoreHeaderCase:Z\n+       106: invokestatic  #334                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n        109: aastore\n        110: dup\n        111: bipush        8\n        113: aload_0\n-       114: getfield      #18                 // Field ignoreSurroundingSpaces:Z\n-       117: invokestatic  #104                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+       114: getfield      #60                 // Field ignoreSurroundingSpaces:Z\n+       117: invokestatic  #334                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n        120: aastore\n        121: dup\n        122: bipush        9\n        124: aload_0\n-       125: getfield      #14                 // Field nullString:Ljava/lang/String;\n+       125: getfield      #48                 // Field nullString:Ljava/lang/String;\n        128: aastore\n        129: dup\n        130: bipush        10\n        132: aload_0\n-       133: getfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n+       133: getfield      #74                 // Field quoteCharacter:Ljava/lang/Character;\n        136: aastore\n        137: dup\n        138: bipush        11\n        140: aload_0\n-       141: getfield      #21                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+       141: getfield      #70                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n        144: aastore\n        145: dup\n        146: bipush        12\n        148: aload_0\n-       149: getfield      #6                  // Field quotedNullString:Ljava/lang/String;\n+       149: getfield      #21                 // Field quotedNullString:Ljava/lang/String;\n        152: aastore\n        153: dup\n        154: bipush        13\n        156: aload_0\n-       157: getfield      #15                 // Field recordSeparator:Ljava/lang/String;\n+       157: getfield      #51                 // Field recordSeparator:Ljava/lang/String;\n        160: aastore\n        161: dup\n        162: bipush        14\n        164: aload_0\n-       165: getfield      #11                 // Field skipHeaderRecord:Z\n-       168: invokestatic  #104                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+       165: getfield      #38                 // Field skipHeaderRecord:Z\n+       168: invokestatic  #334                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n        171: aastore\n        172: dup\n        173: bipush        15\n        175: aload_0\n-       176: getfield      #9                  // Field trailingDelimiter:Z\n-       179: invokestatic  #104                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+       176: getfield      #32                 // Field trailingDelimiter:Z\n+       179: invokestatic  #334                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n        182: aastore\n        183: dup\n        184: bipush        16\n        186: aload_0\n-       187: getfield      #8                  // Field trim:Z\n-       190: invokestatic  #104                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+       187: getfield      #29                 // Field trim:Z\n+       190: invokestatic  #334                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n        193: aastore\n-       194: invokestatic  #105                // Method java/util/Objects.hash:([Ljava/lang/Object;)I\n+       194: invokestatic  #339                // Method java/util/Objects.hash:([Ljava/lang/Object;)I\n        197: iadd\n        198: ireturn\n       LineNumberTable:\n         line 1691: 0\n         line 1692: 3\n         line 1693: 5\n         line 1694: 18\n@@ -2490,15 +2486,15 @@\n \n   public boolean isCommentMarkerSet();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #20                 // Field commentMarker:Ljava/lang/Character;\n+         1: getfield      #67                 // Field commentMarker:Ljava/lang/Character;\n          4: ifnull        11\n          7: iconst_1\n          8: goto          12\n         11: iconst_0\n         12: ireturn\n       LineNumberTable:\n         line 1708: 0\n@@ -2519,15 +2515,15 @@\n          1: aload         4\n          3: iconst_0\n          4: caload\n          5: if_icmpeq     10\n          8: iconst_0\n          9: ireturn\n         10: aload_2\n-        11: invokeinterface #43,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n+        11: invokeinterface #151,  1          // InterfaceMethod java/lang/CharSequence.length:()I\n         16: istore        6\n         18: iload_3\n         19: iload         5\n         21: iadd\n         22: iload         6\n         24: if_icmple     29\n         27: iconst_0\n@@ -2537,15 +2533,15 @@\n         32: iload         7\n         34: iload         5\n         36: if_icmpge     65\n         39: aload_2\n         40: iload_3\n         41: iload         7\n         43: iadd\n-        44: invokeinterface #35,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        44: invokeinterface #120,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         49: aload         4\n         51: iload         7\n         53: caload\n         54: if_icmpeq     59\n         57: iconst_0\n         58: ireturn\n         59: iinc          7, 1\n@@ -2587,15 +2583,15 @@\n \n   public boolean isEscapeCharacterSet();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n+         1: getfield      #63                 // Field escapeCharacter:Ljava/lang/Character;\n          4: ifnull        11\n          7: iconst_1\n          8: goto          12\n         11: iconst_0\n         12: ireturn\n       LineNumberTable:\n         line 1748: 0\n@@ -2609,15 +2605,15 @@\n \n   public boolean isNullStringSet();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #14                 // Field nullString:Ljava/lang/String;\n+         1: getfield      #48                 // Field nullString:Ljava/lang/String;\n          4: ifnull        11\n          7: iconst_1\n          8: goto          12\n         11: iconst_0\n         12: ireturn\n       LineNumberTable:\n         line 1757: 0\n@@ -2631,15 +2627,15 @@\n \n   public boolean isQuoteCharacterSet();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n+         1: getfield      #74                 // Field quoteCharacter:Ljava/lang/Character;\n          4: ifnull        11\n          7: iconst_1\n          8: goto          12\n         11: iconst_0\n         12: ireturn\n       LineNumberTable:\n         line 1766: 0\n@@ -2652,19 +2648,19 @@\n           stack = [ int ]\n \n   public org.apache.commons.csv.CSVParser parse(java.io.Reader) throws java.io.IOException;\n     descriptor: (Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n-         0: new           #106                // class org/apache/commons/csv/CSVParser\n+         0: new           #342                // class org/apache/commons/csv/CSVParser\n          3: dup\n          4: aload_1\n          5: aload_0\n-         6: invokespecial #107                // Method org/apache/commons/csv/CSVParser.\"<init>\":(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n+         6: invokespecial #344                // Method org/apache/commons/csv/CSVParser.\"<init>\":(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n          9: areturn\n       LineNumberTable:\n         line 1781: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      10     1 reader   Ljava/io/Reader;\n@@ -2672,19 +2668,19 @@\n       throws java.io.IOException\n \n   public org.apache.commons.csv.CSVPrinter print(java.lang.Appendable) throws java.io.IOException;\n     descriptor: (Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n-         0: new           #87                 // class org/apache/commons/csv/CSVPrinter\n+         0: new           #298                // class org/apache/commons/csv/CSVPrinter\n          3: dup\n          4: aload_1\n          5: aload_0\n-         6: invokespecial #88                 // Method org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n+         6: invokespecial #300                // Method org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n          9: areturn\n       LineNumberTable:\n         line 1796: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      10     1   out   Ljava/lang/Appendable;\n@@ -2692,26 +2688,26 @@\n       throws java.io.IOException\n \n   public org.apache.commons.csv.CSVPrinter print(java.io.File, java.nio.charset.Charset) throws java.io.IOException;\n     descriptor: (Ljava/io/File;Ljava/nio/charset/Charset;)Lorg/apache/commons/csv/CSVPrinter;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=3, args_size=3\n-         0: new           #87                 // class org/apache/commons/csv/CSVPrinter\n+         0: new           #298                // class org/apache/commons/csv/CSVPrinter\n          3: dup\n-         4: new           #108                // class java/io/OutputStreamWriter\n+         4: new           #347                // class java/io/OutputStreamWriter\n          7: dup\n-         8: new           #109                // class java/io/FileOutputStream\n+         8: new           #349                // class java/io/FileOutputStream\n         11: dup\n         12: aload_1\n-        13: invokespecial #110                // Method java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n+        13: invokespecial #351                // Method java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n         16: aload_2\n-        17: invokespecial #111                // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+        17: invokespecial #354                // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n         20: aload_0\n-        21: invokespecial #88                 // Method org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n+        21: invokespecial #300                // Method org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n         24: areturn\n       LineNumberTable:\n         line 1815: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      25     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      25     1   out   Ljava/io/File;\n@@ -2721,98 +2717,98 @@\n \n   public synchronized void print(java.lang.Object, java.lang.Appendable, boolean) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=5, locals=5, args_size=4\n          0: aload_1\n-         1: ifnonnull     47\n+         1: ifnonnull     48\n          4: aconst_null\n          5: aload_0\n-         6: getfield      #14                 // Field nullString:Ljava/lang/String;\n-         9: if_acmpne     19\n-        12: ldc           #112                // String\n-        14: astore        4\n-        16: goto          87\n-        19: getstatic     #113                // Field org/apache/commons/csv/QuoteMode.ALL:Lorg/apache/commons/csv/QuoteMode;\n-        22: aload_0\n-        23: getfield      #21                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n-        26: if_acmpne     38\n-        29: aload_0\n-        30: getfield      #6                  // Field quotedNullString:Ljava/lang/String;\n-        33: astore        4\n-        35: goto          87\n-        38: aload_0\n-        39: getfield      #14                 // Field nullString:Ljava/lang/String;\n-        42: astore        4\n-        44: goto          87\n-        47: aload_1\n-        48: instanceof    #114                // class java/lang/CharSequence\n-        51: ifeq          63\n-        54: aload_1\n-        55: checkcast     #114                // class java/lang/CharSequence\n-        58: astore        4\n-        60: goto          87\n-        63: aload_1\n-        64: instanceof    #115                // class java/io/Reader\n-        67: ifeq          81\n-        70: aload_0\n-        71: aload_1\n-        72: checkcast     #115                // class java/io/Reader\n-        75: aload_2\n-        76: iload_3\n-        77: invokespecial #116                // Method print:(Ljava/io/Reader;Ljava/lang/Appendable;Z)V\n-        80: return\n-        81: aload_1\n-        82: invokevirtual #117                // Method java/lang/Object.toString:()Ljava/lang/String;\n-        85: astore        4\n-        87: aload_0\n-        88: invokevirtual #118                // Method getTrim:()Z\n-        91: ifeq          102\n-        94: aload         4\n-        96: invokestatic  #119                // Method trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n-        99: goto          104\n-       102: aload         4\n-       104: astore        4\n-       106: aload_0\n-       107: aload_1\n-       108: aload         4\n-       110: aload_2\n-       111: iload_3\n-       112: invokespecial #120                // Method print:(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n-       115: return\n+         6: getfield      #48                 // Field nullString:Ljava/lang/String;\n+         9: if_acmpne     20\n+        12: ldc_w         #357                // String\n+        15: astore        4\n+        17: goto          88\n+        20: getstatic     #359                // Field org/apache/commons/csv/QuoteMode.ALL:Lorg/apache/commons/csv/QuoteMode;\n+        23: aload_0\n+        24: getfield      #70                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        27: if_acmpne     39\n+        30: aload_0\n+        31: getfield      #21                 // Field quotedNullString:Ljava/lang/String;\n+        34: astore        4\n+        36: goto          88\n+        39: aload_0\n+        40: getfield      #48                 // Field nullString:Ljava/lang/String;\n+        43: astore        4\n+        45: goto          88\n+        48: aload_1\n+        49: instanceof    #121                // class java/lang/CharSequence\n+        52: ifeq          64\n+        55: aload_1\n+        56: checkcast     #121                // class java/lang/CharSequence\n+        59: astore        4\n+        61: goto          88\n+        64: aload_1\n+        65: instanceof    #364                // class java/io/Reader\n+        68: ifeq          82\n+        71: aload_0\n+        72: aload_1\n+        73: checkcast     #364                // class java/io/Reader\n+        76: aload_2\n+        77: iload_3\n+        78: invokespecial #366                // Method print:(Ljava/io/Reader;Ljava/lang/Appendable;Z)V\n+        81: return\n+        82: aload_1\n+        83: invokevirtual #370                // Method java/lang/Object.toString:()Ljava/lang/String;\n+        86: astore        4\n+        88: aload_0\n+        89: invokevirtual #371                // Method getTrim:()Z\n+        92: ifeq          103\n+        95: aload         4\n+        97: invokestatic  #374                // Method trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n+       100: goto          105\n+       103: aload         4\n+       105: astore        4\n+       107: aload_0\n+       108: aload_1\n+       109: aload         4\n+       111: aload_2\n+       112: iload_3\n+       113: invokespecial #377                // Method print:(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n+       116: return\n       LineNumberTable:\n         line 1832: 0\n         line 1834: 4\n         line 1835: 12\n-        line 1836: 19\n-        line 1837: 29\n-        line 1839: 38\n-        line 1841: 47\n-        line 1842: 54\n-        line 1843: 63\n-        line 1844: 70\n-        line 1845: 80\n-        line 1847: 81\n-        line 1849: 87\n-        line 1850: 106\n-        line 1851: 115\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-           16       3     4 charSequence   Ljava/lang/CharSequence;\n-           35       3     4 charSequence   Ljava/lang/CharSequence;\n-           44       3     4 charSequence   Ljava/lang/CharSequence;\n-           60       3     4 charSequence   Ljava/lang/CharSequence;\n-            0     116     0  this   Lorg/apache/commons/csv/CSVFormat;\n-            0     116     1 value   Ljava/lang/Object;\n-            0     116     2   out   Ljava/lang/Appendable;\n-            0     116     3 newRecord   Z\n-           87      29     4 charSequence   Ljava/lang/CharSequence;\n+        line 1836: 20\n+        line 1837: 30\n+        line 1839: 39\n+        line 1841: 48\n+        line 1842: 55\n+        line 1843: 64\n+        line 1844: 71\n+        line 1845: 81\n+        line 1847: 82\n+        line 1849: 88\n+        line 1850: 107\n+        line 1851: 116\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+           17       3     4 charSequence   Ljava/lang/CharSequence;\n+           36       3     4 charSequence   Ljava/lang/CharSequence;\n+           45       3     4 charSequence   Ljava/lang/CharSequence;\n+           61       3     4 charSequence   Ljava/lang/CharSequence;\n+            0     117     0  this   Lorg/apache/commons/csv/CSVFormat;\n+            0     117     1 value   Ljava/lang/Object;\n+            0     117     2   out   Ljava/lang/Appendable;\n+            0     117     3 newRecord   Z\n+           88      29     4 charSequence   Ljava/lang/CharSequence;\n       StackMapTable: number_of_entries = 8\n-        frame_type = 19 /* same */\n+        frame_type = 20 /* same */\n         frame_type = 18 /* same */\n         frame_type = 8 /* same */\n         frame_type = 15 /* same */\n         frame_type = 17 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 5\n           locals = [ class java/lang/CharSequence ]\n@@ -2826,53 +2822,53 @@\n     descriptor: (Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n     flags: (0x0022) ACC_PRIVATE, ACC_SYNCHRONIZED\n     Code:\n       stack=5, locals=7, args_size=5\n          0: iconst_0\n          1: istore        5\n          3: aload_2\n-         4: invokeinterface #43,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n+         4: invokeinterface #151,  1          // InterfaceMethod java/lang/CharSequence.length:()I\n          9: istore        6\n         11: iload         4\n         13: ifne          27\n         16: aload_3\n         17: aload_0\n-        18: invokevirtual #121                // Method getDelimiterString:()Ljava/lang/String;\n-        21: invokeinterface #78,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+        18: invokevirtual #380                // Method getDelimiterString:()Ljava/lang/String;\n+        21: invokeinterface #270,  2          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n         26: pop\n         27: aload_1\n         28: ifnonnull     42\n         31: aload_3\n         32: aload_2\n-        33: invokeinterface #78,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+        33: invokeinterface #270,  2          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n         38: pop\n         39: goto          88\n         42: aload_0\n-        43: invokevirtual #122                // Method isQuoteCharacterSet:()Z\n+        43: invokevirtual #383                // Method isQuoteCharacterSet:()Z\n         46: ifeq          61\n         49: aload_0\n         50: aload_1\n         51: aload_2\n         52: aload_3\n         53: iload         4\n-        55: invokespecial #123                // Method printWithQuotes:(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n+        55: invokespecial #386                // Method printWithQuotes:(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n         58: goto          88\n         61: aload_0\n-        62: invokevirtual #124                // Method isEscapeCharacterSet:()Z\n+        62: invokevirtual #389                // Method isEscapeCharacterSet:()Z\n         65: ifeq          77\n         68: aload_0\n         69: aload_2\n         70: aload_3\n-        71: invokespecial #125                // Method printWithEscapes:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n+        71: invokespecial #392                // Method printWithEscapes:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n         74: goto          88\n         77: aload_3\n         78: aload_2\n         79: iconst_0\n         80: iload         6\n-        82: invokeinterface #126,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+        82: invokeinterface #396,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n         87: pop\n         88: return\n       LineNumberTable:\n         line 1854: 0\n         line 1855: 3\n         line 1856: 11\n         line 1857: 16\n@@ -2909,17 +2905,17 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iconst_0\n-         4: anewarray     #127                // class java/nio/file/OpenOption\n-         7: invokestatic  #128                // Method java/nio/file/Files.newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n-        10: invokevirtual #129                // Method print:(Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n+         4: anewarray     #399                // class java/nio/file/OpenOption\n+         7: invokestatic  #401                // Method java/nio/file/Files.newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n+        10: invokevirtual #407                // Method print:(Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n         13: areturn\n       LineNumberTable:\n         line 1886: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      14     1   out   Ljava/nio/file/Path;\n@@ -2932,45 +2928,45 @@\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=4, args_size=4\n          0: iload_3\n          1: ifne          13\n          4: aload_0\n          5: aload_0\n-         6: invokevirtual #121                // Method getDelimiterString:()Ljava/lang/String;\n+         6: invokevirtual #380                // Method getDelimiterString:()Ljava/lang/String;\n          9: aload_2\n-        10: invokespecial #130                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n+        10: invokespecial #410                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n         13: aload_0\n-        14: invokevirtual #122                // Method isQuoteCharacterSet:()Z\n+        14: invokevirtual #383                // Method isQuoteCharacterSet:()Z\n         17: ifeq          29\n         20: aload_0\n         21: aload_1\n         22: aload_2\n-        23: invokespecial #131                // Method printWithQuotes:(Ljava/io/Reader;Ljava/lang/Appendable;)V\n+        23: invokespecial #412                // Method printWithQuotes:(Ljava/io/Reader;Ljava/lang/Appendable;)V\n         26: goto          70\n         29: aload_0\n-        30: invokevirtual #124                // Method isEscapeCharacterSet:()Z\n+        30: invokevirtual #389                // Method isEscapeCharacterSet:()Z\n         33: ifeq          45\n         36: aload_0\n         37: aload_1\n         38: aload_2\n-        39: invokespecial #132                // Method printWithEscapes:(Ljava/io/Reader;Ljava/lang/Appendable;)V\n+        39: invokespecial #415                // Method printWithEscapes:(Ljava/io/Reader;Ljava/lang/Appendable;)V\n         42: goto          70\n         45: aload_2\n-        46: instanceof    #133                // class java/io/Writer\n+        46: instanceof    #417                // class java/io/Writer\n         49: ifeq          64\n         52: aload_1\n         53: aload_2\n-        54: checkcast     #133                // class java/io/Writer\n-        57: invokestatic  #134                // Method org/apache/commons/csv/IOUtils.copyLarge:(Ljava/io/Reader;Ljava/io/Writer;)J\n+        54: checkcast     #417                // class java/io/Writer\n+        57: invokestatic  #419                // Method org/apache/commons/csv/IOUtils.copyLarge:(Ljava/io/Reader;Ljava/io/Writer;)J\n         60: pop2\n         61: goto          70\n         64: aload_1\n         65: aload_2\n-        66: invokestatic  #135                // Method org/apache/commons/csv/IOUtils.copy:(Ljava/io/Reader;Ljava/lang/Appendable;)J\n+        66: invokestatic  #425                // Method org/apache/commons/csv/IOUtils.copy:(Ljava/io/Reader;Ljava/lang/Appendable;)J\n         69: pop2\n         70: return\n       LineNumberTable:\n         line 1891: 0\n         line 1892: 4\n         line 1894: 13\n         line 1895: 20\n@@ -2996,19 +2992,19 @@\n       throws java.io.IOException\n \n   public org.apache.commons.csv.CSVPrinter printer() throws java.io.IOException;\n     descriptor: ()Lorg/apache/commons/csv/CSVPrinter;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n-         0: new           #87                 // class org/apache/commons/csv/CSVPrinter\n+         0: new           #298                // class org/apache/commons/csv/CSVPrinter\n          3: dup\n-         4: getstatic     #136                // Field java/lang/System.out:Ljava/io/PrintStream;\n+         4: getstatic     #429                // Field java/lang/System.out:Ljava/io/PrintStream;\n          7: aload_0\n-         8: invokespecial #88                 // Method org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n+         8: invokespecial #300                // Method org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n         11: areturn\n       LineNumberTable:\n         line 1918: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n     Exceptions:\n@@ -3016,29 +3012,29 @@\n \n   public synchronized void println(java.lang.Appendable) throws java.io.IOException;\n     descriptor: (Ljava/lang/Appendable;)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #137                // Method getTrailingDelimiter:()Z\n+         1: invokevirtual #435                // Method getTrailingDelimiter:()Z\n          4: ifeq          16\n          7: aload_0\n          8: aload_0\n-         9: invokevirtual #121                // Method getDelimiterString:()Ljava/lang/String;\n+         9: invokevirtual #380                // Method getDelimiterString:()Ljava/lang/String;\n         12: aload_1\n-        13: invokespecial #130                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n+        13: invokespecial #410                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n         16: aload_0\n-        17: getfield      #15                 // Field recordSeparator:Ljava/lang/String;\n+        17: getfield      #51                 // Field recordSeparator:Ljava/lang/String;\n         20: ifnull        32\n         23: aload_0\n         24: aload_0\n-        25: getfield      #15                 // Field recordSeparator:Ljava/lang/String;\n+        25: getfield      #51                 // Field recordSeparator:Ljava/lang/String;\n         28: aload_1\n-        29: invokespecial #130                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n+        29: invokespecial #410                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n         32: return\n       LineNumberTable:\n         line 1929: 0\n         line 1930: 7\n         line 1932: 16\n         line 1933: 23\n         line 1935: 32\n@@ -3069,20 +3065,20 @@\n         11: aaload\n         12: aload_1\n         13: iload_3\n         14: ifne          21\n         17: iconst_1\n         18: goto          22\n         21: iconst_0\n-        22: invokevirtual #138                // Method print:(Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n+        22: invokevirtual #438                // Method print:(Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n         25: iinc          3, 1\n         28: goto          2\n         31: aload_0\n         32: aload_1\n-        33: invokevirtual #139                // Method println:(Ljava/lang/Appendable;)V\n+        33: invokevirtual #441                // Method println:(Ljava/lang/Appendable;)V\n         36: return\n       LineNumberTable:\n         line 1951: 0\n         line 1952: 8\n         line 1951: 25\n         line 1954: 31\n         line 1955: 36\n@@ -3115,41 +3111,41 @@\n     Code:\n       stack=6, locals=12, args_size=3\n          0: iconst_0\n          1: istore_3\n          2: iconst_0\n          3: istore        4\n          5: aload_1\n-         6: invokeinterface #43,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n+         6: invokeinterface #151,  1          // InterfaceMethod java/lang/CharSequence.length:()I\n         11: istore        5\n         13: aload_0\n-        14: invokevirtual #121                // Method getDelimiterString:()Ljava/lang/String;\n-        17: invokevirtual #140                // Method java/lang/String.toCharArray:()[C\n+        14: invokevirtual #380                // Method getDelimiterString:()Ljava/lang/String;\n+        17: invokevirtual #445                // Method java/lang/String.toCharArray:()[C\n         20: astore        6\n         22: aload         6\n         24: arraylength\n         25: istore        7\n         27: aload_0\n-        28: invokevirtual #141                // Method getEscapeCharacter:()Ljava/lang/Character;\n-        31: invokevirtual #33                 // Method java/lang/Character.charValue:()C\n+        28: invokevirtual #449                // Method getEscapeCharacter:()Ljava/lang/Character;\n+        31: invokevirtual #111                // Method java/lang/Character.charValue:()C\n         34: istore        8\n         36: iload         4\n         38: iload         5\n         40: if_icmpge     217\n         43: aload_1\n         44: iload         4\n-        46: invokeinterface #35,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        46: invokeinterface #120,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         51: istore        9\n         53: aload_0\n         54: iload         9\n         56: aload_1\n         57: iload         4\n         59: aload         6\n         61: iload         7\n-        63: invokespecial #142                // Method isDelimiter:(CLjava/lang/CharSequence;I[CI)Z\n+        63: invokespecial #453                // Method isDelimiter:(CLjava/lang/CharSequence;I[CI)Z\n         66: istore        10\n         68: iload         9\n         70: bipush        13\n         72: if_icmpeq     94\n         75: iload         9\n         77: bipush        10\n         79: if_icmpeq     94\n@@ -3161,54 +3157,54 @@\n         94: iload         4\n         96: iload_3\n         97: if_icmple     111\n        100: aload_2\n        101: aload_1\n        102: iload_3\n        103: iload         4\n-       105: invokeinterface #126,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+       105: invokeinterface #396,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n        110: pop\n        111: iload         9\n        113: bipush        10\n        115: if_icmpne     125\n        118: bipush        110\n        120: istore        9\n        122: goto          136\n        125: iload         9\n        127: bipush        13\n        129: if_icmpne     136\n        132: bipush        114\n        134: istore        9\n        136: aload_2\n        137: iload         8\n-       139: invokeinterface #77,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+       139: invokeinterface #265,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n        144: pop\n        145: aload_2\n        146: iload         9\n-       148: invokeinterface #77,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+       148: invokeinterface #265,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n        153: pop\n        154: iload         10\n        156: ifeq          206\n        159: iconst_1\n        160: istore        11\n        162: iload         11\n        164: iload         7\n        166: if_icmpge     206\n        169: iinc          4, 1\n        172: aload_1\n        173: iload         4\n-       175: invokeinterface #35,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+       175: invokeinterface #120,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n        180: istore        9\n        182: aload_2\n        183: iload         8\n-       185: invokeinterface #77,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+       185: invokeinterface #265,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n        190: pop\n        191: aload_2\n        192: iload         9\n-       194: invokeinterface #77,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+       194: invokeinterface #265,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n        199: pop\n        200: iinc          11, 1\n        203: goto          162\n        206: iload         4\n        208: iconst_1\n        209: iadd\n        210: istore_3\n@@ -3217,15 +3213,15 @@\n        217: iload         4\n        219: iload_3\n        220: if_icmple     234\n        223: aload_2\n        224: aload_1\n        225: iload_3\n        226: iload         4\n-       228: invokeinterface #126,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+       228: invokeinterface #396,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n        233: pop\n        234: return\n       LineNumberTable:\n         line 1961: 0\n         line 1962: 2\n         line 1963: 5\n         line 1965: 13\n@@ -3298,69 +3294,69 @@\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=8, locals=13, args_size=3\n          0: iconst_0\n          1: istore_3\n          2: iconst_0\n          3: istore        4\n-         5: new           #143                // class org/apache/commons/csv/ExtendedBufferedReader\n+         5: new           #457                // class org/apache/commons/csv/ExtendedBufferedReader\n          8: dup\n          9: aload_1\n-        10: invokespecial #144                // Method org/apache/commons/csv/ExtendedBufferedReader.\"<init>\":(Ljava/io/Reader;)V\n+        10: invokespecial #459                // Method org/apache/commons/csv/ExtendedBufferedReader.\"<init>\":(Ljava/io/Reader;)V\n         13: astore        5\n         15: aload_0\n-        16: invokevirtual #121                // Method getDelimiterString:()Ljava/lang/String;\n-        19: invokevirtual #140                // Method java/lang/String.toCharArray:()[C\n+        16: invokevirtual #380                // Method getDelimiterString:()Ljava/lang/String;\n+        19: invokevirtual #445                // Method java/lang/String.toCharArray:()[C\n         22: astore        6\n         24: aload         6\n         26: arraylength\n         27: istore        7\n         29: aload_0\n-        30: invokevirtual #141                // Method getEscapeCharacter:()Ljava/lang/Character;\n-        33: invokevirtual #33                 // Method java/lang/Character.charValue:()C\n+        30: invokevirtual #449                // Method getEscapeCharacter:()Ljava/lang/Character;\n+        33: invokevirtual #111                // Method java/lang/Character.charValue:()C\n         36: istore        8\n-        38: new           #72                 // class java/lang/StringBuilder\n+        38: new           #252                // class java/lang/StringBuilder\n         41: dup\n         42: sipush        4096\n-        45: invokespecial #146                // Method java/lang/StringBuilder.\"<init>\":(I)V\n+        45: invokespecial #462                // Method java/lang/StringBuilder.\"<init>\":(I)V\n         48: astore        9\n         50: iconst_m1\n         51: aload         5\n-        53: invokevirtual #147                // Method org/apache/commons/csv/ExtendedBufferedReader.read:()I\n+        53: invokevirtual #465                // Method org/apache/commons/csv/ExtendedBufferedReader.read:()I\n         56: dup\n         57: istore        10\n         59: if_icmpeq     271\n         62: aload         9\n         64: iload         10\n         66: i2c\n-        67: invokevirtual #148                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        67: invokevirtual #468                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         70: pop\n         71: aload_0\n         72: iload         10\n         74: i2c\n-        75: new           #72                 // class java/lang/StringBuilder\n+        75: new           #252                // class java/lang/StringBuilder\n         78: dup\n-        79: invokespecial #73                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        79: invokespecial #254                // Method java/lang/StringBuilder.\"<init>\":()V\n         82: aload         9\n-        84: invokevirtual #76                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        87: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        90: new           #28                 // class java/lang/String\n+        84: invokevirtual #262                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        87: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        90: new           #94                 // class java/lang/String\n         93: dup\n         94: aload         5\n         96: iload         7\n         98: iconst_1\n         99: isub\n-       100: invokevirtual #149                // Method org/apache/commons/csv/ExtendedBufferedReader.lookAhead:(I)[C\n-       103: invokespecial #150                // Method java/lang/String.\"<init>\":([C)V\n-       106: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       109: invokevirtual #76                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       100: invokevirtual #471                // Method org/apache/commons/csv/ExtendedBufferedReader.lookAhead:(I)[C\n+       103: invokespecial #475                // Method java/lang/String.\"<init>\":([C)V\n+       106: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       109: invokevirtual #262                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        112: iload         4\n        114: aload         6\n        116: iload         7\n-       118: invokespecial #142                // Method isDelimiter:(CLjava/lang/CharSequence;I[CI)Z\n+       118: invokespecial #453                // Method isDelimiter:(CLjava/lang/CharSequence;I[CI)Z\n        121: istore        11\n        123: iload         10\n        125: bipush        13\n        127: if_icmpeq     149\n        130: iload         10\n        132: bipush        10\n        134: if_icmpeq     149\n@@ -3372,20 +3368,20 @@\n        149: iload         4\n        151: iload_3\n        152: if_icmple     177\n        155: aload_0\n        156: aload         9\n        158: iload_3\n        159: iload         4\n-       161: invokevirtual #151                // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n+       161: invokevirtual #478                // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n        164: aload_2\n-       165: invokespecial #130                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n+       165: invokespecial #410                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n        168: aload         9\n        170: iconst_0\n-       171: invokevirtual #152                // Method java/lang/StringBuilder.setLength:(I)V\n+       171: invokevirtual #479                // Method java/lang/StringBuilder.setLength:(I)V\n        174: iconst_m1\n        175: istore        4\n        177: iload         10\n        179: bipush        10\n        181: if_icmpne     191\n        184: bipush        110\n        186: istore        10\n@@ -3394,39 +3390,39 @@\n        193: bipush        13\n        195: if_icmpne     202\n        198: bipush        114\n        200: istore        10\n        202: aload_0\n        203: iload         8\n        205: aload_2\n-       206: invokespecial #153                // Method append:(CLjava/lang/Appendable;)V\n+       206: invokespecial #482                // Method append:(CLjava/lang/Appendable;)V\n        209: aload_0\n        210: iload         10\n        212: i2c\n        213: aload_2\n-       214: invokespecial #153                // Method append:(CLjava/lang/Appendable;)V\n+       214: invokespecial #482                // Method append:(CLjava/lang/Appendable;)V\n        217: iload         11\n        219: ifeq          260\n        222: iconst_1\n        223: istore        12\n        225: iload         12\n        227: iload         7\n        229: if_icmpge     260\n        232: aload         5\n-       234: invokevirtual #147                // Method org/apache/commons/csv/ExtendedBufferedReader.read:()I\n+       234: invokevirtual #465                // Method org/apache/commons/csv/ExtendedBufferedReader.read:()I\n        237: istore        10\n        239: aload_0\n        240: iload         8\n        242: aload_2\n-       243: invokespecial #153                // Method append:(CLjava/lang/Appendable;)V\n+       243: invokespecial #482                // Method append:(CLjava/lang/Appendable;)V\n        246: aload_0\n        247: iload         10\n        249: i2c\n        250: aload_2\n-       251: invokespecial #153                // Method append:(CLjava/lang/Appendable;)V\n+       251: invokespecial #482                // Method append:(CLjava/lang/Appendable;)V\n        254: iinc          12, 1\n        257: goto          225\n        260: iload         4\n        262: iconst_1\n        263: iadd\n        264: istore_3\n        265: iinc          4, 1\n@@ -3434,17 +3430,17 @@\n        271: iload         4\n        273: iload_3\n        274: if_icmple     290\n        277: aload_0\n        278: aload         9\n        280: iload_3\n        281: iload         4\n-       283: invokevirtual #151                // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n+       283: invokevirtual #478                // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n        286: aload_2\n-       287: invokespecial #130                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n+       287: invokespecial #410                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n        290: return\n       LineNumberTable:\n         line 2007: 0\n         line 2008: 2\n         line 2011: 5\n         line 2012: 15\n         line 2013: 24\n@@ -3522,94 +3518,94 @@\n          0: iconst_0\n          1: istore        5\n          3: iconst_0\n          4: istore        6\n          6: iconst_0\n          7: istore        7\n          9: aload_2\n-        10: invokeinterface #43,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n+        10: invokeinterface #151,  1          // InterfaceMethod java/lang/CharSequence.length:()I\n         15: istore        8\n         17: aload_0\n-        18: invokevirtual #121                // Method getDelimiterString:()Ljava/lang/String;\n-        21: invokevirtual #140                // Method java/lang/String.toCharArray:()[C\n+        18: invokevirtual #380                // Method getDelimiterString:()Ljava/lang/String;\n+        21: invokevirtual #445                // Method java/lang/String.toCharArray:()[C\n         24: astore        9\n         26: aload         9\n         28: arraylength\n         29: istore        10\n         31: aload_0\n-        32: invokevirtual #154                // Method getQuoteCharacter:()Ljava/lang/Character;\n-        35: invokevirtual #33                 // Method java/lang/Character.charValue:()C\n+        32: invokevirtual #485                // Method getQuoteCharacter:()Ljava/lang/Character;\n+        35: invokevirtual #111                // Method java/lang/Character.charValue:()C\n         38: istore        11\n         40: aload_0\n-        41: invokevirtual #124                // Method isEscapeCharacterSet:()Z\n+        41: invokevirtual #389                // Method isEscapeCharacterSet:()Z\n         44: ifeq          57\n         47: aload_0\n-        48: invokevirtual #141                // Method getEscapeCharacter:()Ljava/lang/Character;\n-        51: invokevirtual #33                 // Method java/lang/Character.charValue:()C\n+        48: invokevirtual #449                // Method getEscapeCharacter:()Ljava/lang/Character;\n+        51: invokevirtual #111                // Method java/lang/Character.charValue:()C\n         54: goto          59\n         57: iload         11\n         59: istore        12\n         61: aload_0\n-        62: invokevirtual #155                // Method getQuoteMode:()Lorg/apache/commons/csv/QuoteMode;\n+        62: invokevirtual #488                // Method getQuoteMode:()Lorg/apache/commons/csv/QuoteMode;\n         65: astore        13\n         67: aload         13\n         69: ifnonnull     77\n-        72: getstatic     #156                // Field org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n+        72: getstatic     #492                // Field org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n         75: astore        13\n-        77: getstatic     #157                // Field org/apache/commons/csv/CSVFormat$1.$SwitchMap$org$apache$commons$csv$QuoteMode:[I\n+        77: getstatic     #495                // Field org/apache/commons/csv/CSVFormat$1.$SwitchMap$org$apache$commons$csv$QuoteMode:[I\n         80: aload         13\n-        82: invokevirtual #158                // Method org/apache/commons/csv/QuoteMode.ordinal:()I\n+        82: invokevirtual #501                // Method org/apache/commons/csv/QuoteMode.ordinal:()I\n         85: iaload\n         86: tableswitch   { // 1 to 5\n                        1: 120\n                        2: 120\n                        3: 126\n                        4: 143\n                        5: 150\n                  default: 312\n             }\n        120: iconst_1\n        121: istore        5\n-       123: goto          340\n+       123: goto          341\n        126: aload_1\n-       127: instanceof    #159                // class java/lang/Number\n+       127: instanceof    #504                // class java/lang/Number\n        130: ifne          137\n        133: iconst_1\n        134: goto          138\n        137: iconst_0\n        138: istore        5\n-       140: goto          340\n+       140: goto          341\n        143: aload_0\n        144: aload_2\n        145: aload_3\n-       146: invokespecial #125                // Method printWithEscapes:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n+       146: invokespecial #392                // Method printWithEscapes:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n        149: return\n        150: iload         8\n        152: ifgt          166\n        155: iload         4\n        157: ifeq          294\n        160: iconst_1\n        161: istore        5\n        163: goto          294\n        166: aload_2\n        167: iload         7\n-       169: invokeinterface #35,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+       169: invokeinterface #120,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n        174: istore        14\n        176: iload         14\n        178: bipush        35\n        180: if_icmpgt     189\n        183: iconst_1\n        184: istore        5\n        186: goto          294\n        189: iload         7\n        191: iload         8\n        193: if_icmpge     262\n        196: aload_2\n        197: iload         7\n-       199: invokeinterface #35,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+       199: invokeinterface #120,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n        204: istore        14\n        206: iload         14\n        208: bipush        10\n        210: if_icmpeq     250\n        213: iload         14\n        215: bipush        13\n        217: if_icmpeq     250\n@@ -3621,108 +3617,108 @@\n        231: if_icmpeq     250\n        234: aload_0\n        235: iload         14\n        237: aload_2\n        238: iload         7\n        240: aload         9\n        242: iload         10\n-       244: invokespecial #142                // Method isDelimiter:(CLjava/lang/CharSequence;I[CI)Z\n+       244: invokespecial #453                // Method isDelimiter:(CLjava/lang/CharSequence;I[CI)Z\n        247: ifeq          256\n        250: iconst_1\n        251: istore        5\n        253: goto          262\n        256: iinc          7, 1\n        259: goto          189\n        262: iload         5\n        264: ifne          294\n        267: iload         8\n        269: iconst_1\n        270: isub\n        271: istore        7\n        273: aload_2\n        274: iload         7\n-       276: invokeinterface #35,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+       276: invokeinterface #120,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n        281: istore        14\n        283: iload         14\n-       285: invokestatic  #36                 // Method isTrimChar:(C)Z\n+       285: invokestatic  #126                // Method isTrimChar:(C)Z\n        288: ifeq          294\n        291: iconst_1\n        292: istore        5\n        294: iload         5\n-       296: ifne          340\n+       296: ifne          341\n        299: aload_3\n        300: aload_2\n        301: iload         6\n        303: iload         8\n-       305: invokeinterface #126,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+       305: invokeinterface #396,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n        310: pop\n        311: return\n-       312: new           #97                 // class java/lang/IllegalStateException\n+       312: new           #324                // class java/lang/IllegalStateException\n        315: dup\n-       316: new           #72                 // class java/lang/StringBuilder\n+       316: new           #252                // class java/lang/StringBuilder\n        319: dup\n-       320: invokespecial #73                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       323: ldc           #160                // String Unexpected Quote value:\n-       325: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       328: aload         13\n-       330: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       333: invokevirtual #76                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       336: invokespecial #161                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-       339: athrow\n-       340: iload         5\n-       342: ifne          358\n-       345: aload_3\n-       346: aload_2\n-       347: iload         6\n-       349: iload         8\n-       351: invokeinterface #126,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-       356: pop\n-       357: return\n-       358: aload_3\n-       359: iload         11\n-       361: invokeinterface #77,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n-       366: pop\n-       367: iload         7\n-       369: iload         8\n-       371: if_icmpge     429\n-       374: aload_2\n-       375: iload         7\n-       377: invokeinterface #35,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n-       382: istore        14\n-       384: iload         14\n-       386: iload         11\n-       388: if_icmpeq     398\n-       391: iload         14\n-       393: iload         12\n-       395: if_icmpne     423\n-       398: aload_3\n-       399: aload_2\n-       400: iload         6\n-       402: iload         7\n-       404: invokeinterface #126,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-       409: pop\n-       410: aload_3\n-       411: iload         12\n-       413: invokeinterface #77,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n-       418: pop\n-       419: iload         7\n-       421: istore        6\n-       423: iinc          7, 1\n-       426: goto          367\n-       429: aload_3\n-       430: aload_2\n-       431: iload         6\n-       433: iload         7\n-       435: invokeinterface #126,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-       440: pop\n-       441: aload_3\n-       442: iload         11\n-       444: invokeinterface #77,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n-       449: pop\n-       450: return\n+       320: invokespecial #254                // Method java/lang/StringBuilder.\"<init>\":()V\n+       323: ldc_w         #506                // String Unexpected Quote value:\n+       326: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       329: aload         13\n+       331: invokevirtual #255                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       334: invokevirtual #262                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       337: invokespecial #508                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+       340: athrow\n+       341: iload         5\n+       343: ifne          359\n+       346: aload_3\n+       347: aload_2\n+       348: iload         6\n+       350: iload         8\n+       352: invokeinterface #396,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+       357: pop\n+       358: return\n+       359: aload_3\n+       360: iload         11\n+       362: invokeinterface #265,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+       367: pop\n+       368: iload         7\n+       370: iload         8\n+       372: if_icmpge     430\n+       375: aload_2\n+       376: iload         7\n+       378: invokeinterface #120,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+       383: istore        14\n+       385: iload         14\n+       387: iload         11\n+       389: if_icmpeq     399\n+       392: iload         14\n+       394: iload         12\n+       396: if_icmpne     424\n+       399: aload_3\n+       400: aload_2\n+       401: iload         6\n+       403: iload         7\n+       405: invokeinterface #396,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+       410: pop\n+       411: aload_3\n+       412: iload         12\n+       414: invokeinterface #265,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+       419: pop\n+       420: iload         7\n+       422: istore        6\n+       424: iinc          7, 1\n+       427: goto          368\n+       430: aload_3\n+       431: aload_2\n+       432: iload         6\n+       434: iload         7\n+       436: invokeinterface #396,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+       441: pop\n+       442: aload_3\n+       443: iload         11\n+       445: invokeinterface #265,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+       450: pop\n+       451: return\n       LineNumberTable:\n         line 2062: 0\n         line 2063: 3\n         line 2064: 6\n         line 2065: 9\n         line 2067: 17\n         line 2068: 26\n@@ -3755,47 +3751,47 @@\n         line 2120: 273\n         line 2123: 283\n         line 2124: 291\n         line 2130: 294\n         line 2132: 299\n         line 2133: 311\n         line 2137: 312\n-        line 2140: 340\n-        line 2142: 345\n-        line 2143: 357\n-        line 2147: 358\n-        line 2151: 367\n-        line 2152: 374\n-        line 2153: 384\n-        line 2155: 398\n-        line 2156: 410\n-        line 2157: 419\n-        line 2159: 423\n-        line 2160: 426\n-        line 2163: 429\n-        line 2164: 441\n-        line 2165: 450\n+        line 2140: 341\n+        line 2142: 346\n+        line 2143: 358\n+        line 2147: 359\n+        line 2151: 368\n+        line 2152: 375\n+        line 2153: 385\n+        line 2155: 399\n+        line 2156: 411\n+        line 2157: 420\n+        line 2159: 424\n+        line 2160: 427\n+        line 2163: 430\n+        line 2164: 442\n+        line 2165: 451\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n           176     118    14     c   C\n-          384      42    14     c   C\n-            0     451     0  this   Lorg/apache/commons/csv/CSVFormat;\n-            0     451     1 object   Ljava/lang/Object;\n-            0     451     2 charSeq   Ljava/lang/CharSequence;\n-            0     451     3   out   Ljava/lang/Appendable;\n-            0     451     4 newRecord   Z\n-            3     448     5 quote   Z\n-            6     445     6 start   I\n-            9     442     7   pos   I\n-           17     434     8   len   I\n-           26     425     9 delim   [C\n-           31     420    10 delimLength   I\n-           40     411    11 quoteChar   C\n-           61     390    12 escapeChar   C\n-           67     384    13 quoteModePolicy   Lorg/apache/commons/csv/QuoteMode;\n+          385      42    14     c   C\n+            0     452     0  this   Lorg/apache/commons/csv/CSVFormat;\n+            0     452     1 object   Ljava/lang/Object;\n+            0     452     2 charSeq   Ljava/lang/CharSequence;\n+            0     452     3   out   Ljava/lang/Appendable;\n+            0     452     4 newRecord   Z\n+            3     449     5 quote   Z\n+            6     446     6 start   I\n+            9     443     7   pos   I\n+           17     435     8   len   I\n+           26     426     9 delim   [C\n+           31     421    10 delimLength   I\n+           40     412    11 quoteChar   C\n+           61     391    12 escapeChar   C\n+           67     385    13 quoteModePolicy   Lorg/apache/commons/csv/QuoteMode;\n       StackMapTable: number_of_entries = 22\n         frame_type = 255 /* full_frame */\n           offset_delta = 57\n           locals = [ class org/apache/commons/csv/CSVFormat, class java/lang/Object, class java/lang/CharSequence, class java/lang/Appendable, int, int, int, int, int, class \"[C\", int, int ]\n           stack = []\n         frame_type = 65 /* same_locals_1_stack_item */\n           stack = [ int ]\n@@ -3815,15 +3811,15 @@\n           locals = [ int ]\n         frame_type = 60 /* same */\n         frame_type = 5 /* same */\n         frame_type = 5 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 31\n         frame_type = 17 /* same */\n-        frame_type = 27 /* same */\n+        frame_type = 28 /* same */\n         frame_type = 17 /* same */\n         frame_type = 8 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 30\n           locals = [ int ]\n         frame_type = 24 /* same */\n         frame_type = 250 /* chop */\n@@ -3833,89 +3829,89 @@\n \n   private void printWithQuotes(java.io.Reader, java.lang.Appendable) throws java.io.IOException;\n     descriptor: (Ljava/io/Reader;Ljava/lang/Appendable;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=7, args_size=3\n          0: aload_0\n-         1: invokevirtual #155                // Method getQuoteMode:()Lorg/apache/commons/csv/QuoteMode;\n-         4: getstatic     #162                // Field org/apache/commons/csv/QuoteMode.NONE:Lorg/apache/commons/csv/QuoteMode;\n+         1: invokevirtual #488                // Method getQuoteMode:()Lorg/apache/commons/csv/QuoteMode;\n+         4: getstatic     #511                // Field org/apache/commons/csv/QuoteMode.NONE:Lorg/apache/commons/csv/QuoteMode;\n          7: if_acmpne     17\n         10: aload_0\n         11: aload_1\n         12: aload_2\n-        13: invokespecial #132                // Method printWithEscapes:(Ljava/io/Reader;Ljava/lang/Appendable;)V\n+        13: invokespecial #415                // Method printWithEscapes:(Ljava/io/Reader;Ljava/lang/Appendable;)V\n         16: return\n         17: iconst_0\n         18: istore_3\n         19: aload_0\n-        20: invokevirtual #154                // Method getQuoteCharacter:()Ljava/lang/Character;\n-        23: invokevirtual #33                 // Method java/lang/Character.charValue:()C\n+        20: invokevirtual #485                // Method getQuoteCharacter:()Ljava/lang/Character;\n+        23: invokevirtual #111                // Method java/lang/Character.charValue:()C\n         26: istore        4\n-        28: new           #72                 // class java/lang/StringBuilder\n+        28: new           #252                // class java/lang/StringBuilder\n         31: dup\n         32: sipush        4096\n-        35: invokespecial #146                // Method java/lang/StringBuilder.\"<init>\":(I)V\n+        35: invokespecial #462                // Method java/lang/StringBuilder.\"<init>\":(I)V\n         38: astore        5\n         40: aload_0\n         41: iload         4\n         43: aload_2\n-        44: invokespecial #153                // Method append:(CLjava/lang/Appendable;)V\n+        44: invokespecial #482                // Method append:(CLjava/lang/Appendable;)V\n         47: iconst_m1\n         48: aload_1\n-        49: invokevirtual #163                // Method java/io/Reader.read:()I\n+        49: invokevirtual #514                // Method java/io/Reader.read:()I\n         52: dup\n         53: istore        6\n         55: if_icmpeq     119\n         58: aload         5\n         60: iload         6\n         62: i2c\n-        63: invokevirtual #148                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        63: invokevirtual #468                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         66: pop\n         67: iload         6\n         69: iload         4\n         71: if_icmpne     113\n         74: iload_3\n         75: ifle          105\n         78: aload_0\n         79: aload         5\n         81: iconst_0\n         82: iload_3\n-        83: invokevirtual #151                // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n+        83: invokevirtual #478                // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n         86: aload_2\n-        87: invokespecial #130                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n+        87: invokespecial #410                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n         90: aload_0\n         91: iload         4\n         93: aload_2\n-        94: invokespecial #153                // Method append:(CLjava/lang/Appendable;)V\n+        94: invokespecial #482                // Method append:(CLjava/lang/Appendable;)V\n         97: aload         5\n         99: iconst_0\n-       100: invokevirtual #152                // Method java/lang/StringBuilder.setLength:(I)V\n+       100: invokevirtual #479                // Method java/lang/StringBuilder.setLength:(I)V\n        103: iconst_m1\n        104: istore_3\n        105: aload_0\n        106: iload         6\n        108: i2c\n        109: aload_2\n-       110: invokespecial #153                // Method append:(CLjava/lang/Appendable;)V\n+       110: invokespecial #482                // Method append:(CLjava/lang/Appendable;)V\n        113: iinc          3, 1\n        116: goto          47\n        119: iload_3\n        120: ifle          135\n        123: aload_0\n        124: aload         5\n        126: iconst_0\n        127: iload_3\n-       128: invokevirtual #151                // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n+       128: invokevirtual #478                // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n        131: aload_2\n-       132: invokespecial #130                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n+       132: invokespecial #410                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n        135: aload_0\n        136: iload         4\n        138: aload_2\n-       139: invokespecial #153                // Method append:(CLjava/lang/Appendable;)V\n+       139: invokespecial #482                // Method append:(CLjava/lang/Appendable;)V\n        142: return\n       LineNumberTable:\n         line 2176: 0\n         line 2177: 10\n         line 2178: 16\n         line 2181: 17\n         line 2183: 19\n@@ -3959,248 +3955,248 @@\n       throws java.io.IOException\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n-         0: new           #72                 // class java/lang/StringBuilder\n+         0: new           #252                // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #73                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #254                // Method java/lang/StringBuilder.\"<init>\":()V\n          7: astore_1\n          8: aload_1\n-         9: ldc           #164                // String Delimiter=<\n-        11: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        14: aload_0\n-        15: getfield      #23                 // Field delimiter:Ljava/lang/String;\n-        18: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        21: bipush        62\n-        23: invokevirtual #148                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-        26: pop\n-        27: aload_0\n-        28: invokevirtual #124                // Method isEscapeCharacterSet:()Z\n-        31: ifeq          60\n-        34: aload_1\n-        35: bipush        32\n-        37: invokevirtual #148                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-        40: pop\n-        41: aload_1\n-        42: ldc           #165                // String Escape=<\n-        44: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        47: aload_0\n-        48: getfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n-        51: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        54: bipush        62\n-        56: invokevirtual #148                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-        59: pop\n-        60: aload_0\n-        61: invokevirtual #122                // Method isQuoteCharacterSet:()Z\n-        64: ifeq          93\n-        67: aload_1\n-        68: bipush        32\n-        70: invokevirtual #148                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-        73: pop\n-        74: aload_1\n-        75: ldc           #166                // String QuoteChar=<\n-        77: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        80: aload_0\n-        81: getfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n-        84: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        87: bipush        62\n-        89: invokevirtual #148                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-        92: pop\n-        93: aload_0\n-        94: getfield      #21                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n-        97: ifnull        126\n-       100: aload_1\n-       101: bipush        32\n-       103: invokevirtual #148                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       106: pop\n-       107: aload_1\n-       108: ldc           #167                // String QuoteMode=<\n-       110: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       113: aload_0\n-       114: getfield      #21                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n-       117: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       120: bipush        62\n-       122: invokevirtual #148                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       125: pop\n-       126: aload_0\n-       127: invokevirtual #168                // Method isCommentMarkerSet:()Z\n-       130: ifeq          159\n-       133: aload_1\n-       134: bipush        32\n-       136: invokevirtual #148                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       139: pop\n-       140: aload_1\n-       141: ldc           #169                // String CommentStart=<\n-       143: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       146: aload_0\n-       147: getfield      #20                 // Field commentMarker:Ljava/lang/Character;\n-       150: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       153: bipush        62\n-       155: invokevirtual #148                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       158: pop\n-       159: aload_0\n-       160: invokevirtual #170                // Method isNullStringSet:()Z\n-       163: ifeq          192\n-       166: aload_1\n-       167: bipush        32\n-       169: invokevirtual #148                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       172: pop\n-       173: aload_1\n-       174: ldc           #171                // String NullString=<\n-       176: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       179: aload_0\n-       180: getfield      #14                 // Field nullString:Ljava/lang/String;\n-       183: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       186: bipush        62\n-       188: invokevirtual #148                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       191: pop\n-       192: aload_0\n-       193: getfield      #15                 // Field recordSeparator:Ljava/lang/String;\n-       196: ifnull        225\n-       199: aload_1\n-       200: bipush        32\n-       202: invokevirtual #148                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       205: pop\n-       206: aload_1\n-       207: ldc           #172                // String RecordSeparator=<\n-       209: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       212: aload_0\n-       213: getfield      #15                 // Field recordSeparator:Ljava/lang/String;\n-       216: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       219: bipush        62\n-       221: invokevirtual #148                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       224: pop\n-       225: aload_0\n-       226: invokevirtual #173                // Method getIgnoreEmptyLines:()Z\n-       229: ifeq          239\n-       232: aload_1\n-       233: ldc           #174                // String  EmptyLines:ignored\n-       235: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       238: pop\n-       239: aload_0\n-       240: invokevirtual #175                // Method getIgnoreSurroundingSpaces:()Z\n-       243: ifeq          253\n-       246: aload_1\n-       247: ldc           #176                // String  SurroundingSpaces:ignored\n-       249: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       252: pop\n-       253: aload_0\n-       254: invokevirtual #177                // Method getIgnoreHeaderCase:()Z\n-       257: ifeq          267\n-       260: aload_1\n-       261: ldc           #178                // String  IgnoreHeaderCase:ignored\n-       263: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       266: pop\n-       267: aload_1\n-       268: ldc           #179                // String  SkipHeaderRecord:\n-       270: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       273: aload_0\n-       274: getfield      #11                 // Field skipHeaderRecord:Z\n-       277: invokevirtual #180                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;\n-       280: pop\n-       281: aload_0\n-       282: getfield      #13                 // Field headerComments:[Ljava/lang/String;\n-       285: ifnull        312\n-       288: aload_1\n-       289: bipush        32\n-       291: invokevirtual #148                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       294: pop\n-       295: aload_1\n-       296: ldc           #181                // String HeaderComments:\n-       298: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       301: aload_0\n-       302: getfield      #13                 // Field headerComments:[Ljava/lang/String;\n-       305: invokestatic  #182                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n-       308: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       311: pop\n-       312: aload_0\n-       313: getfield      #12                 // Field headers:[Ljava/lang/String;\n-       316: ifnull        343\n-       319: aload_1\n-       320: bipush        32\n-       322: invokevirtual #148                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       325: pop\n-       326: aload_1\n-       327: ldc           #183                // String Header:\n-       329: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       332: aload_0\n-       333: getfield      #12                 // Field headers:[Ljava/lang/String;\n-       336: invokestatic  #182                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n-       339: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       342: pop\n-       343: aload_1\n-       344: invokevirtual #76                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       347: areturn\n+         9: ldc_w         #515                // String Delimiter=<\n+        12: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        15: aload_0\n+        16: getfield      #77                 // Field delimiter:Ljava/lang/String;\n+        19: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        22: bipush        62\n+        24: invokevirtual #468                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        27: pop\n+        28: aload_0\n+        29: invokevirtual #389                // Method isEscapeCharacterSet:()Z\n+        32: ifeq          62\n+        35: aload_1\n+        36: bipush        32\n+        38: invokevirtual #468                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        41: pop\n+        42: aload_1\n+        43: ldc_w         #517                // String Escape=<\n+        46: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        49: aload_0\n+        50: getfield      #63                 // Field escapeCharacter:Ljava/lang/Character;\n+        53: invokevirtual #255                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        56: bipush        62\n+        58: invokevirtual #468                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        61: pop\n+        62: aload_0\n+        63: invokevirtual #383                // Method isQuoteCharacterSet:()Z\n+        66: ifeq          96\n+        69: aload_1\n+        70: bipush        32\n+        72: invokevirtual #468                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        75: pop\n+        76: aload_1\n+        77: ldc_w         #519                // String QuoteChar=<\n+        80: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        83: aload_0\n+        84: getfield      #74                 // Field quoteCharacter:Ljava/lang/Character;\n+        87: invokevirtual #255                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        90: bipush        62\n+        92: invokevirtual #468                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        95: pop\n+        96: aload_0\n+        97: getfield      #70                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+       100: ifnull        130\n+       103: aload_1\n+       104: bipush        32\n+       106: invokevirtual #468                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       109: pop\n+       110: aload_1\n+       111: ldc_w         #521                // String QuoteMode=<\n+       114: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       117: aload_0\n+       118: getfield      #70                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+       121: invokevirtual #255                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       124: bipush        62\n+       126: invokevirtual #468                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       129: pop\n+       130: aload_0\n+       131: invokevirtual #523                // Method isCommentMarkerSet:()Z\n+       134: ifeq          164\n+       137: aload_1\n+       138: bipush        32\n+       140: invokevirtual #468                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       143: pop\n+       144: aload_1\n+       145: ldc_w         #526                // String CommentStart=<\n+       148: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       151: aload_0\n+       152: getfield      #67                 // Field commentMarker:Ljava/lang/Character;\n+       155: invokevirtual #255                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       158: bipush        62\n+       160: invokevirtual #468                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       163: pop\n+       164: aload_0\n+       165: invokevirtual #528                // Method isNullStringSet:()Z\n+       168: ifeq          198\n+       171: aload_1\n+       172: bipush        32\n+       174: invokevirtual #468                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       177: pop\n+       178: aload_1\n+       179: ldc_w         #531                // String NullString=<\n+       182: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       185: aload_0\n+       186: getfield      #48                 // Field nullString:Ljava/lang/String;\n+       189: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       192: bipush        62\n+       194: invokevirtual #468                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       197: pop\n+       198: aload_0\n+       199: getfield      #51                 // Field recordSeparator:Ljava/lang/String;\n+       202: ifnull        232\n+       205: aload_1\n+       206: bipush        32\n+       208: invokevirtual #468                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       211: pop\n+       212: aload_1\n+       213: ldc_w         #533                // String RecordSeparator=<\n+       216: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       219: aload_0\n+       220: getfield      #51                 // Field recordSeparator:Ljava/lang/String;\n+       223: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       226: bipush        62\n+       228: invokevirtual #468                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       231: pop\n+       232: aload_0\n+       233: invokevirtual #535                // Method getIgnoreEmptyLines:()Z\n+       236: ifeq          247\n+       239: aload_1\n+       240: ldc_w         #538                // String  EmptyLines:ignored\n+       243: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       246: pop\n+       247: aload_0\n+       248: invokevirtual #540                // Method getIgnoreSurroundingSpaces:()Z\n+       251: ifeq          262\n+       254: aload_1\n+       255: ldc_w         #543                // String  SurroundingSpaces:ignored\n+       258: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       261: pop\n+       262: aload_0\n+       263: invokevirtual #545                // Method getIgnoreHeaderCase:()Z\n+       266: ifeq          277\n+       269: aload_1\n+       270: ldc_w         #548                // String  IgnoreHeaderCase:ignored\n+       273: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       276: pop\n+       277: aload_1\n+       278: ldc_w         #550                // String  SkipHeaderRecord:\n+       281: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       284: aload_0\n+       285: getfield      #38                 // Field skipHeaderRecord:Z\n+       288: invokevirtual #552                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;\n+       291: pop\n+       292: aload_0\n+       293: getfield      #45                 // Field headerComments:[Ljava/lang/String;\n+       296: ifnull        324\n+       299: aload_1\n+       300: bipush        32\n+       302: invokevirtual #468                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       305: pop\n+       306: aload_1\n+       307: ldc_w         #555                // String HeaderComments:\n+       310: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       313: aload_0\n+       314: getfield      #45                 // Field headerComments:[Ljava/lang/String;\n+       317: invokestatic  #557                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n+       320: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       323: pop\n+       324: aload_0\n+       325: getfield      #41                 // Field headers:[Ljava/lang/String;\n+       328: ifnull        356\n+       331: aload_1\n+       332: bipush        32\n+       334: invokevirtual #468                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       337: pop\n+       338: aload_1\n+       339: ldc_w         #560                // String Header:\n+       342: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       345: aload_0\n+       346: getfield      #41                 // Field headers:[Ljava/lang/String;\n+       349: invokestatic  #557                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n+       352: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       355: pop\n+       356: aload_1\n+       357: invokevirtual #262                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       360: areturn\n       LineNumberTable:\n         line 2215: 0\n         line 2216: 8\n-        line 2217: 27\n-        line 2218: 34\n-        line 2219: 41\n-        line 2221: 60\n-        line 2222: 67\n-        line 2223: 74\n-        line 2225: 93\n-        line 2226: 100\n-        line 2227: 107\n-        line 2229: 126\n-        line 2230: 133\n-        line 2231: 140\n-        line 2233: 159\n-        line 2234: 166\n-        line 2235: 173\n-        line 2237: 192\n-        line 2238: 199\n-        line 2239: 206\n-        line 2241: 225\n-        line 2242: 232\n-        line 2244: 239\n-        line 2245: 246\n-        line 2247: 253\n-        line 2248: 260\n-        line 2250: 267\n-        line 2251: 281\n-        line 2252: 288\n-        line 2253: 295\n-        line 2255: 312\n-        line 2256: 319\n-        line 2257: 326\n-        line 2259: 343\n+        line 2217: 28\n+        line 2218: 35\n+        line 2219: 42\n+        line 2221: 62\n+        line 2222: 69\n+        line 2223: 76\n+        line 2225: 96\n+        line 2226: 103\n+        line 2227: 110\n+        line 2229: 130\n+        line 2230: 137\n+        line 2231: 144\n+        line 2233: 164\n+        line 2234: 171\n+        line 2235: 178\n+        line 2237: 198\n+        line 2238: 205\n+        line 2239: 212\n+        line 2241: 232\n+        line 2242: 239\n+        line 2244: 247\n+        line 2245: 254\n+        line 2247: 262\n+        line 2248: 269\n+        line 2250: 277\n+        line 2251: 292\n+        line 2252: 299\n+        line 2253: 306\n+        line 2255: 324\n+        line 2256: 331\n+        line 2257: 338\n+        line 2259: 356\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0     348     0  this   Lorg/apache/commons/csv/CSVFormat;\n-            8     340     1    sb   Ljava/lang/StringBuilder;\n+            0     361     0  this   Lorg/apache/commons/csv/CSVFormat;\n+            8     353     1    sb   Ljava/lang/StringBuilder;\n       StackMapTable: number_of_entries = 11\n         frame_type = 252 /* append */\n-          offset_delta = 60\n+          offset_delta = 62\n           locals = [ class java/lang/StringBuilder ]\n-        frame_type = 32 /* same */\n-        frame_type = 32 /* same */\n-        frame_type = 32 /* same */\n-        frame_type = 32 /* same */\n-        frame_type = 32 /* same */\n-        frame_type = 13 /* same */\n-        frame_type = 13 /* same */\n-        frame_type = 13 /* same */\n-        frame_type = 44 /* same */\n-        frame_type = 30 /* same */\n+        frame_type = 33 /* same */\n+        frame_type = 33 /* same */\n+        frame_type = 33 /* same */\n+        frame_type = 33 /* same */\n+        frame_type = 33 /* same */\n+        frame_type = 14 /* same */\n+        frame_type = 14 /* same */\n+        frame_type = 14 /* same */\n+        frame_type = 46 /* same */\n+        frame_type = 31 /* same */\n \n   java.lang.String trim(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0000)\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #118                // Method getTrim:()Z\n+         1: invokevirtual #371                // Method getTrim:()Z\n          4: ifeq          14\n          7: aload_1\n-         8: invokevirtual #31                 // Method java/lang/String.trim:()Ljava/lang/String;\n+         8: invokevirtual #104                // Method java/lang/String.trim:()Ljava/lang/String;\n         11: goto          15\n         14: aload_1\n         15: areturn\n       LineNumberTable:\n         line 2263: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -4213,351 +4209,351 @@\n \n   private void validate() throws java.lang.IllegalArgumentException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=7, locals=9, args_size=1\n          0: aload_0\n-         1: getfield      #23                 // Field delimiter:Ljava/lang/String;\n-         4: invokestatic  #2                  // Method containsLineBreak:(Ljava/lang/String;)Z\n-         7: ifeq          20\n-        10: new           #184                // class java/lang/IllegalArgumentException\n+         1: getfield      #77                 // Field delimiter:Ljava/lang/String;\n+         4: invokestatic  #3                  // Method containsLineBreak:(Ljava/lang/String;)Z\n+         7: ifeq          21\n+        10: new           #562                // class java/lang/IllegalArgumentException\n         13: dup\n-        14: ldc           #185                // String The delimiter cannot be a line break\n-        16: invokespecial #186                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        19: athrow\n-        20: aload_0\n-        21: getfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n-        24: ifnull        79\n-        27: aload_0\n-        28: getfield      #23                 // Field delimiter:Ljava/lang/String;\n-        31: aload_0\n-        32: getfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n-        35: invokevirtual #33                 // Method java/lang/Character.charValue:()C\n-        38: invokestatic  #30                 // Method contains:(Ljava/lang/String;C)Z\n-        41: ifeq          79\n-        44: new           #184                // class java/lang/IllegalArgumentException\n-        47: dup\n-        48: new           #72                 // class java/lang/StringBuilder\n-        51: dup\n-        52: invokespecial #73                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        55: ldc           #187                // String The quoteChar character and the delimiter cannot be the same (\\'\n-        57: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        60: aload_0\n-        61: getfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n-        64: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        67: ldc           #188                // String \\')\n-        69: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        72: invokevirtual #76                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        75: invokespecial #186                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        78: athrow\n-        79: aload_0\n-        80: getfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n-        83: ifnull        138\n-        86: aload_0\n-        87: getfield      #23                 // Field delimiter:Ljava/lang/String;\n-        90: aload_0\n-        91: getfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n-        94: invokevirtual #33                 // Method java/lang/Character.charValue:()C\n-        97: invokestatic  #30                 // Method contains:(Ljava/lang/String;C)Z\n-       100: ifeq          138\n-       103: new           #184                // class java/lang/IllegalArgumentException\n-       106: dup\n-       107: new           #72                 // class java/lang/StringBuilder\n-       110: dup\n-       111: invokespecial #73                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       114: ldc           #189                // String The escape character and the delimiter cannot be the same (\\'\n-       116: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       119: aload_0\n-       120: getfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n-       123: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       126: ldc           #188                // String \\')\n-       128: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       131: invokevirtual #76                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       134: invokespecial #186                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-       137: athrow\n-       138: aload_0\n-       139: getfield      #20                 // Field commentMarker:Ljava/lang/Character;\n-       142: ifnull        197\n-       145: aload_0\n-       146: getfield      #23                 // Field delimiter:Ljava/lang/String;\n-       149: aload_0\n-       150: getfield      #20                 // Field commentMarker:Ljava/lang/Character;\n-       153: invokevirtual #33                 // Method java/lang/Character.charValue:()C\n-       156: invokestatic  #30                 // Method contains:(Ljava/lang/String;C)Z\n-       159: ifeq          197\n-       162: new           #184                // class java/lang/IllegalArgumentException\n-       165: dup\n-       166: new           #72                 // class java/lang/StringBuilder\n-       169: dup\n-       170: invokespecial #73                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       173: ldc           #190                // String The comment start character and the delimiter cannot be the same (\\'\n-       175: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       178: aload_0\n-       179: getfield      #20                 // Field commentMarker:Ljava/lang/Character;\n-       182: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       185: ldc           #188                // String \\')\n-       187: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       190: invokevirtual #76                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       193: invokespecial #186                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-       196: athrow\n-       197: aload_0\n-       198: getfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n-       201: ifnull        253\n+        14: ldc_w         #564                // String The delimiter cannot be a line break\n+        17: invokespecial #566                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        20: athrow\n+        21: aload_0\n+        22: getfield      #74                 // Field quoteCharacter:Ljava/lang/Character;\n+        25: ifnull        82\n+        28: aload_0\n+        29: getfield      #77                 // Field delimiter:Ljava/lang/String;\n+        32: aload_0\n+        33: getfield      #74                 // Field quoteCharacter:Ljava/lang/Character;\n+        36: invokevirtual #111                // Method java/lang/Character.charValue:()C\n+        39: invokestatic  #100                // Method contains:(Ljava/lang/String;C)Z\n+        42: ifeq          82\n+        45: new           #562                // class java/lang/IllegalArgumentException\n+        48: dup\n+        49: new           #252                // class java/lang/StringBuilder\n+        52: dup\n+        53: invokespecial #254                // Method java/lang/StringBuilder.\"<init>\":()V\n+        56: ldc_w         #567                // String The quoteChar character and the delimiter cannot be the same (\\'\n+        59: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        62: aload_0\n+        63: getfield      #74                 // Field quoteCharacter:Ljava/lang/Character;\n+        66: invokevirtual #255                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        69: ldc_w         #569                // String \\')\n+        72: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        75: invokevirtual #262                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        78: invokespecial #566                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        81: athrow\n+        82: aload_0\n+        83: getfield      #63                 // Field escapeCharacter:Ljava/lang/Character;\n+        86: ifnull        143\n+        89: aload_0\n+        90: getfield      #77                 // Field delimiter:Ljava/lang/String;\n+        93: aload_0\n+        94: getfield      #63                 // Field escapeCharacter:Ljava/lang/Character;\n+        97: invokevirtual #111                // Method java/lang/Character.charValue:()C\n+       100: invokestatic  #100                // Method contains:(Ljava/lang/String;C)Z\n+       103: ifeq          143\n+       106: new           #562                // class java/lang/IllegalArgumentException\n+       109: dup\n+       110: new           #252                // class java/lang/StringBuilder\n+       113: dup\n+       114: invokespecial #254                // Method java/lang/StringBuilder.\"<init>\":()V\n+       117: ldc_w         #571                // String The escape character and the delimiter cannot be the same (\\'\n+       120: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       123: aload_0\n+       124: getfield      #63                 // Field escapeCharacter:Ljava/lang/Character;\n+       127: invokevirtual #255                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       130: ldc_w         #569                // String \\')\n+       133: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       136: invokevirtual #262                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       139: invokespecial #566                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       142: athrow\n+       143: aload_0\n+       144: getfield      #67                 // Field commentMarker:Ljava/lang/Character;\n+       147: ifnull        204\n+       150: aload_0\n+       151: getfield      #77                 // Field delimiter:Ljava/lang/String;\n+       154: aload_0\n+       155: getfield      #67                 // Field commentMarker:Ljava/lang/Character;\n+       158: invokevirtual #111                // Method java/lang/Character.charValue:()C\n+       161: invokestatic  #100                // Method contains:(Ljava/lang/String;C)Z\n+       164: ifeq          204\n+       167: new           #562                // class java/lang/IllegalArgumentException\n+       170: dup\n+       171: new           #252                // class java/lang/StringBuilder\n+       174: dup\n+       175: invokespecial #254                // Method java/lang/StringBuilder.\"<init>\":()V\n+       178: ldc_w         #573                // String The comment start character and the delimiter cannot be the same (\\'\n+       181: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       184: aload_0\n+       185: getfield      #67                 // Field commentMarker:Ljava/lang/Character;\n+       188: invokevirtual #255                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       191: ldc_w         #569                // String \\')\n+       194: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       197: invokevirtual #262                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       200: invokespecial #566                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       203: athrow\n        204: aload_0\n-       205: getfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n-       208: aload_0\n-       209: getfield      #20                 // Field commentMarker:Ljava/lang/Character;\n-       212: invokevirtual #191                // Method java/lang/Character.equals:(Ljava/lang/Object;)Z\n-       215: ifeq          253\n-       218: new           #184                // class java/lang/IllegalArgumentException\n-       221: dup\n-       222: new           #72                 // class java/lang/StringBuilder\n-       225: dup\n-       226: invokespecial #73                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       229: ldc           #192                // String The comment start character and the quoteChar cannot be the same (\\'\n-       231: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       234: aload_0\n-       235: getfield      #20                 // Field commentMarker:Ljava/lang/Character;\n-       238: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       241: ldc           #188                // String \\')\n-       243: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       246: invokevirtual #76                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       249: invokespecial #186                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-       252: athrow\n-       253: aload_0\n-       254: getfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n-       257: ifnull        309\n-       260: aload_0\n-       261: getfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n-       264: aload_0\n-       265: getfield      #20                 // Field commentMarker:Ljava/lang/Character;\n-       268: invokevirtual #191                // Method java/lang/Character.equals:(Ljava/lang/Object;)Z\n-       271: ifeq          309\n-       274: new           #184                // class java/lang/IllegalArgumentException\n-       277: dup\n-       278: new           #72                 // class java/lang/StringBuilder\n-       281: dup\n-       282: invokespecial #73                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       285: ldc           #193                // String The comment start and the escape character cannot be the same (\\'\n-       287: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       290: aload_0\n-       291: getfield      #20                 // Field commentMarker:Ljava/lang/Character;\n-       294: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       297: ldc           #188                // String \\')\n-       299: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       302: invokevirtual #76                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       305: invokespecial #186                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-       308: athrow\n-       309: aload_0\n-       310: getfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n-       313: ifnonnull     336\n-       316: aload_0\n-       317: getfield      #21                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n-       320: getstatic     #162                // Field org/apache/commons/csv/QuoteMode.NONE:Lorg/apache/commons/csv/QuoteMode;\n-       323: if_acmpne     336\n-       326: new           #184                // class java/lang/IllegalArgumentException\n-       329: dup\n-       330: ldc           #194                // String No quotes mode set but no escape character is set\n-       332: invokespecial #186                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-       335: athrow\n-       336: aload_0\n-       337: getfield      #12                 // Field headers:[Ljava/lang/String;\n-       340: ifnull        494\n-       343: aload_0\n-       344: getfield      #5                  // Field duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n-       347: getstatic     #39                 // Field org/apache/commons/csv/DuplicateHeaderMode.ALLOW_ALL:Lorg/apache/commons/csv/DuplicateHeaderMode;\n-       350: if_acmpeq     494\n-       353: new           #195                // class java/util/HashSet\n-       356: dup\n-       357: aload_0\n-       358: getfield      #12                 // Field headers:[Ljava/lang/String;\n-       361: arraylength\n-       362: invokespecial #196                // Method java/util/HashSet.\"<init>\":(I)V\n-       365: astore_1\n-       366: aload_0\n-       367: getfield      #5                  // Field duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n-       370: getstatic     #197                // Field org/apache/commons/csv/DuplicateHeaderMode.ALLOW_EMPTY:Lorg/apache/commons/csv/DuplicateHeaderMode;\n-       373: if_acmpne     380\n-       376: iconst_1\n-       377: goto          381\n-       380: iconst_0\n-       381: istore_2\n-       382: aload_0\n-       383: getfield      #12                 // Field headers:[Ljava/lang/String;\n-       386: astore_3\n-       387: aload_3\n-       388: arraylength\n-       389: istore        4\n-       391: iconst_0\n-       392: istore        5\n-       394: iload         5\n-       396: iload         4\n-       398: if_icmpge     494\n-       401: aload_3\n-       402: iload         5\n-       404: aaload\n-       405: astore        6\n-       407: aload         6\n-       409: invokestatic  #198                // Method isBlank:(Ljava/lang/String;)Z\n-       412: istore        7\n-       414: aload_1\n-       415: iload         7\n-       417: ifeq          425\n-       420: ldc           #112                // String\n-       422: goto          427\n-       425: aload         6\n-       427: invokeinterface #199,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z\n-       432: ifne          439\n-       435: iconst_1\n-       436: goto          440\n-       439: iconst_0\n-       440: istore        8\n-       442: iload         8\n-       444: ifeq          488\n-       447: iload         7\n-       449: ifeq          456\n-       452: iload_2\n-       453: ifne          488\n-       456: new           #184                // class java/lang/IllegalArgumentException\n-       459: dup\n-       460: ldc           #200                // String The header contains a duplicate name: \\\"%s\\\" in %s. If this is valid then use CSVFormat.Builder.setDuplicateHeaderMode().\n-       462: iconst_2\n-       463: anewarray     #103                // class java/lang/Object\n-       466: dup\n-       467: iconst_0\n-       468: aload         6\n-       470: aastore\n-       471: dup\n-       472: iconst_1\n-       473: aload_0\n-       474: getfield      #12                 // Field headers:[Ljava/lang/String;\n-       477: invokestatic  #182                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n-       480: aastore\n-       481: invokestatic  #201                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-       484: invokespecial #186                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-       487: athrow\n-       488: iinc          5, 1\n-       491: goto          394\n-       494: return\n+       205: getfield      #74                 // Field quoteCharacter:Ljava/lang/Character;\n+       208: ifnull        262\n+       211: aload_0\n+       212: getfield      #74                 // Field quoteCharacter:Ljava/lang/Character;\n+       215: aload_0\n+       216: getfield      #67                 // Field commentMarker:Ljava/lang/Character;\n+       219: invokevirtual #575                // Method java/lang/Character.equals:(Ljava/lang/Object;)Z\n+       222: ifeq          262\n+       225: new           #562                // class java/lang/IllegalArgumentException\n+       228: dup\n+       229: new           #252                // class java/lang/StringBuilder\n+       232: dup\n+       233: invokespecial #254                // Method java/lang/StringBuilder.\"<init>\":()V\n+       236: ldc_w         #578                // String The comment start character and the quoteChar cannot be the same (\\'\n+       239: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       242: aload_0\n+       243: getfield      #67                 // Field commentMarker:Ljava/lang/Character;\n+       246: invokevirtual #255                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       249: ldc_w         #569                // String \\')\n+       252: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       255: invokevirtual #262                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       258: invokespecial #566                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       261: athrow\n+       262: aload_0\n+       263: getfield      #63                 // Field escapeCharacter:Ljava/lang/Character;\n+       266: ifnull        320\n+       269: aload_0\n+       270: getfield      #63                 // Field escapeCharacter:Ljava/lang/Character;\n+       273: aload_0\n+       274: getfield      #67                 // Field commentMarker:Ljava/lang/Character;\n+       277: invokevirtual #575                // Method java/lang/Character.equals:(Ljava/lang/Object;)Z\n+       280: ifeq          320\n+       283: new           #562                // class java/lang/IllegalArgumentException\n+       286: dup\n+       287: new           #252                // class java/lang/StringBuilder\n+       290: dup\n+       291: invokespecial #254                // Method java/lang/StringBuilder.\"<init>\":()V\n+       294: ldc_w         #580                // String The comment start and the escape character cannot be the same (\\'\n+       297: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       300: aload_0\n+       301: getfield      #67                 // Field commentMarker:Ljava/lang/Character;\n+       304: invokevirtual #255                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       307: ldc_w         #569                // String \\')\n+       310: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       313: invokevirtual #262                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       316: invokespecial #566                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       319: athrow\n+       320: aload_0\n+       321: getfield      #63                 // Field escapeCharacter:Ljava/lang/Character;\n+       324: ifnonnull     348\n+       327: aload_0\n+       328: getfield      #70                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+       331: getstatic     #511                // Field org/apache/commons/csv/QuoteMode.NONE:Lorg/apache/commons/csv/QuoteMode;\n+       334: if_acmpne     348\n+       337: new           #562                // class java/lang/IllegalArgumentException\n+       340: dup\n+       341: ldc_w         #582                // String No quotes mode set but no escape character is set\n+       344: invokespecial #566                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       347: athrow\n+       348: aload_0\n+       349: getfield      #41                 // Field headers:[Ljava/lang/String;\n+       352: ifnull        508\n+       355: aload_0\n+       356: getfield      #17                 // Field duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+       359: getstatic     #133                // Field org/apache/commons/csv/DuplicateHeaderMode.ALLOW_ALL:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+       362: if_acmpeq     508\n+       365: new           #584                // class java/util/HashSet\n+       368: dup\n+       369: aload_0\n+       370: getfield      #41                 // Field headers:[Ljava/lang/String;\n+       373: arraylength\n+       374: invokespecial #586                // Method java/util/HashSet.\"<init>\":(I)V\n+       377: astore_1\n+       378: aload_0\n+       379: getfield      #17                 // Field duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+       382: getstatic     #587                // Field org/apache/commons/csv/DuplicateHeaderMode.ALLOW_EMPTY:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+       385: if_acmpne     392\n+       388: iconst_1\n+       389: goto          393\n+       392: iconst_0\n+       393: istore_2\n+       394: aload_0\n+       395: getfield      #41                 // Field headers:[Ljava/lang/String;\n+       398: astore_3\n+       399: aload_3\n+       400: arraylength\n+       401: istore        4\n+       403: iconst_0\n+       404: istore        5\n+       406: iload         5\n+       408: iload         4\n+       410: if_icmpge     508\n+       413: aload_3\n+       414: iload         5\n+       416: aaload\n+       417: astore        6\n+       419: aload         6\n+       421: invokestatic  #590                // Method isBlank:(Ljava/lang/String;)Z\n+       424: istore        7\n+       426: aload_1\n+       427: iload         7\n+       429: ifeq          438\n+       432: ldc_w         #357                // String\n+       435: goto          440\n+       438: aload         6\n+       440: invokeinterface #593,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z\n+       445: ifne          452\n+       448: iconst_1\n+       449: goto          453\n+       452: iconst_0\n+       453: istore        8\n+       455: iload         8\n+       457: ifeq          502\n+       460: iload         7\n+       462: ifeq          469\n+       465: iload_2\n+       466: ifne          502\n+       469: new           #562                // class java/lang/IllegalArgumentException\n+       472: dup\n+       473: ldc_w         #598                // String The header contains a duplicate name: \\\"%s\\\" in %s. If this is valid then use CSVFormat.Builder.setDuplicateHeaderMode().\n+       476: iconst_2\n+       477: anewarray     #172                // class java/lang/Object\n+       480: dup\n+       481: iconst_0\n+       482: aload         6\n+       484: aastore\n+       485: dup\n+       486: iconst_1\n+       487: aload_0\n+       488: getfield      #41                 // Field headers:[Ljava/lang/String;\n+       491: invokestatic  #557                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n+       494: aastore\n+       495: invokestatic  #600                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+       498: invokespecial #566                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       501: athrow\n+       502: iinc          5, 1\n+       505: goto          406\n+       508: return\n       LineNumberTable:\n         line 2276: 0\n         line 2277: 10\n-        line 2280: 20\n-        line 2281: 44\n-        line 2284: 79\n-        line 2285: 103\n-        line 2288: 138\n-        line 2289: 162\n-        line 2292: 197\n-        line 2293: 218\n-        line 2296: 253\n-        line 2297: 274\n-        line 2300: 309\n-        line 2301: 326\n-        line 2305: 336\n-        line 2306: 353\n-        line 2307: 366\n-        line 2308: 382\n-        line 2309: 407\n-        line 2311: 414\n-        line 2312: 442\n-        line 2313: 456\n-        line 2316: 477\n-        line 2314: 481\n-        line 2308: 488\n-        line 2320: 494\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-          414      74     7 blank   Z\n-          442      46     8 containsHeader   Z\n-          407      81     6 header   Ljava/lang/String;\n-          366     128     1 dupCheckSet   Ljava/util/Set;\n-          382     112     2 emptyDuplicatesAllowed   Z\n-            0     495     0  this   Lorg/apache/commons/csv/CSVFormat;\n+        line 2280: 21\n+        line 2281: 45\n+        line 2284: 82\n+        line 2285: 106\n+        line 2288: 143\n+        line 2289: 167\n+        line 2292: 204\n+        line 2293: 225\n+        line 2296: 262\n+        line 2297: 283\n+        line 2300: 320\n+        line 2301: 337\n+        line 2305: 348\n+        line 2306: 365\n+        line 2307: 378\n+        line 2308: 394\n+        line 2309: 419\n+        line 2311: 426\n+        line 2312: 455\n+        line 2313: 469\n+        line 2316: 491\n+        line 2314: 495\n+        line 2308: 502\n+        line 2320: 508\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+          426      76     7 blank   Z\n+          455      47     8 containsHeader   Z\n+          419      83     6 header   Ljava/lang/String;\n+          378     130     1 dupCheckSet   Ljava/util/Set;\n+          394     114     2 emptyDuplicatesAllowed   Z\n+            0     509     0  this   Lorg/apache/commons/csv/CSVFormat;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n-          366     128     1 dupCheckSet   Ljava/util/Set<Ljava/lang/String;>;\n+          378     130     1 dupCheckSet   Ljava/util/Set<Ljava/lang/String;>;\n       StackMapTable: number_of_entries = 17\n-        frame_type = 20 /* same */\n-        frame_type = 58 /* same */\n-        frame_type = 58 /* same */\n-        frame_type = 58 /* same */\n-        frame_type = 55 /* same */\n-        frame_type = 55 /* same */\n-        frame_type = 26 /* same */\n+        frame_type = 21 /* same */\n+        frame_type = 60 /* same */\n+        frame_type = 60 /* same */\n+        frame_type = 60 /* same */\n+        frame_type = 57 /* same */\n+        frame_type = 57 /* same */\n+        frame_type = 27 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 43\n           locals = [ class java/util/Set ]\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 12\n           locals = [ class org/apache/commons/csv/CSVFormat, class java/util/Set, int, class \"[Ljava/lang/String;\", int, int ]\n           stack = []\n         frame_type = 255 /* full_frame */\n-          offset_delta = 30\n+          offset_delta = 31\n           locals = [ class org/apache/commons/csv/CSVFormat, class java/util/Set, int, class \"[Ljava/lang/String;\", int, int, class java/lang/String, int ]\n           stack = [ class java/util/Set ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 1\n           locals = [ class org/apache/commons/csv/CSVFormat, class java/util/Set, int, class \"[Ljava/lang/String;\", int, int, class java/lang/String, int ]\n           stack = [ class java/util/Set, class java/lang/String ]\n         frame_type = 11 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n         frame_type = 252 /* append */\n           offset_delta = 15\n           locals = [ int ]\n         frame_type = 248 /* chop */\n-          offset_delta = 31\n+          offset_delta = 32\n         frame_type = 255 /* full_frame */\n           offset_delta = 5\n           locals = [ class org/apache/commons/csv/CSVFormat ]\n           stack = []\n     Exceptions:\n       throws java.lang.IllegalArgumentException\n \n   public org.apache.commons.csv.CSVFormat withAllowDuplicateHeaderNames();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-         4: getstatic     #39                 // Field org/apache/commons/csv/DuplicateHeaderMode.ALLOW_ALL:Lorg/apache/commons/csv/DuplicateHeaderMode;\n-         7: invokevirtual #202                // Method org/apache/commons/csv/CSVFormat$Builder.setDuplicateHeaderMode:(Lorg/apache/commons/csv/DuplicateHeaderMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-        10: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         4: getstatic     #133                // Field org/apache/commons/csv/DuplicateHeaderMode.ALLOW_ALL:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+         7: invokevirtual #604                // Method org/apache/commons/csv/CSVFormat$Builder.setDuplicateHeaderMode:(Lorg/apache/commons/csv/DuplicateHeaderMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+        10: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         13: areturn\n       LineNumberTable:\n         line 2331: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/csv/CSVFormat;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withAllowDuplicateHeaderNames(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: iload_1\n          1: ifeq          10\n-         4: getstatic     #39                 // Field org/apache/commons/csv/DuplicateHeaderMode.ALLOW_ALL:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+         4: getstatic     #133                // Field org/apache/commons/csv/DuplicateHeaderMode.ALLOW_ALL:Lorg/apache/commons/csv/DuplicateHeaderMode;\n          7: goto          13\n-        10: getstatic     #197                // Field org/apache/commons/csv/DuplicateHeaderMode.ALLOW_EMPTY:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+        10: getstatic     #587                // Field org/apache/commons/csv/DuplicateHeaderMode.ALLOW_EMPTY:Lorg/apache/commons/csv/DuplicateHeaderMode;\n         13: astore_2\n         14: aload_0\n-        15: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+        15: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n         18: aload_2\n-        19: invokevirtual #202                // Method org/apache/commons/csv/CSVFormat$Builder.setDuplicateHeaderMode:(Lorg/apache/commons/csv/DuplicateHeaderMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-        22: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+        19: invokevirtual #604                // Method org/apache/commons/csv/CSVFormat$Builder.setDuplicateHeaderMode:(Lorg/apache/commons/csv/DuplicateHeaderMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+        22: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         25: areturn\n       LineNumberTable:\n         line 2344: 0\n         line 2345: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      26     0  this   Lorg/apache/commons/csv/CSVFormat;\n@@ -4565,1041 +4561,1041 @@\n            14      12     2  mode   Lorg/apache/commons/csv/DuplicateHeaderMode;\n       StackMapTable: number_of_entries = 2\n         frame_type = 10 /* same */\n         frame_type = 66 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/csv/DuplicateHeaderMode ]\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withAllowMissingColumnNames();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iconst_1\n-         5: invokevirtual #203                // Method org/apache/commons/csv/CSVFormat$Builder.setAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #608                // Method org/apache/commons/csv/CSVFormat$Builder.setAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2358: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withAllowMissingColumnNames(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iload_1\n-         5: invokevirtual #203                // Method org/apache/commons/csv/CSVFormat$Builder.setAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #608                // Method org/apache/commons/csv/CSVFormat$Builder.setAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2371: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 allowMissingColumnNames   Z\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withAutoFlush(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iload_1\n-         5: invokevirtual #204                // Method org/apache/commons/csv/CSVFormat$Builder.setAutoFlush:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #612                // Method org/apache/commons/csv/CSVFormat$Builder.setAutoFlush:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2385: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 autoFlush   Z\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withCommentMarker(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iload_1\n-         5: invokevirtual #205                // Method org/apache/commons/csv/CSVFormat$Builder.setCommentMarker:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #615                // Method org/apache/commons/csv/CSVFormat$Builder.setCommentMarker:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2400: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 commentMarker   C\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withCommentMarker(java.lang.Character);\n     descriptor: (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: aload_1\n-         5: invokevirtual #206                // Method org/apache/commons/csv/CSVFormat$Builder.setCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #619                // Method org/apache/commons/csv/CSVFormat$Builder.setCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2415: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 commentMarker   Ljava/lang/Character;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withDelimiter(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iload_1\n-         5: invokevirtual #207                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #622                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2428: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 delimiter   C\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withEscape(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iload_1\n-         5: invokevirtual #208                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #625                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2441: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 escape   C\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withEscape(java.lang.Character);\n     descriptor: (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: aload_1\n-         5: invokevirtual #209                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #628                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2454: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 escape   Ljava/lang/Character;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withFirstRecordAsHeader();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iconst_0\n-         5: anewarray     #28                 // class java/lang/String\n-         8: invokevirtual #210                // Method org/apache/commons/csv/CSVFormat$Builder.setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         5: anewarray     #94                 // class java/lang/String\n+         8: invokevirtual #630                // Method org/apache/commons/csv/CSVFormat$Builder.setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n         11: iconst_1\n-        12: invokevirtual #211                // Method org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-        15: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+        12: invokevirtual #634                // Method org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+        15: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         18: areturn\n       LineNumberTable:\n         line 2477: 0\n         line 2478: 8\n         line 2479: 12\n         line 2480: 15\n         line 2477: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0  this   Lorg/apache/commons/csv/CSVFormat;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withHeader(java.lang.Class<? extends java.lang.Enum<?>>);\n     descriptor: (Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: aload_1\n-         5: invokevirtual #212                // Method org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #637                // Method org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2511: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 headerEnum   Ljava/lang/Class;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      12     1 headerEnum   Ljava/lang/Class<+Ljava/lang/Enum<*>;>;\n     Deprecated: true\n-    Signature: #489                         // (Ljava/lang/Class<+Ljava/lang/Enum<*>;>;)Lorg/apache/commons/csv/CSVFormat;\n+    Signature: #866                         // (Ljava/lang/Class<+Ljava/lang/Enum<*>;>;)Lorg/apache/commons/csv/CSVFormat;\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withHeader(java.sql.ResultSet) throws java.sql.SQLException;\n     descriptor: (Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: aload_1\n-         5: invokevirtual #213                // Method org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #640                // Method org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2539: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 resultSet   Ljava/sql/ResultSet;\n     Exceptions:\n       throws java.sql.SQLException\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withHeader(java.sql.ResultSetMetaData) throws java.sql.SQLException;\n     descriptor: (Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: aload_1\n-         5: invokevirtual #214                // Method org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #643                // Method org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2567: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 resultSetMetaData   Ljava/sql/ResultSetMetaData;\n     Exceptions:\n       throws java.sql.SQLException\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withHeader(java.lang.String...);\n     descriptor: ([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: aload_1\n-         5: invokevirtual #210                // Method org/apache/commons/csv/CSVFormat$Builder.setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #630                // Method org/apache/commons/csv/CSVFormat$Builder.setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2594: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 header   [Ljava/lang/String;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withHeaderComments(java.lang.Object...);\n     descriptor: ([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: aload_1\n-         5: invokevirtual #215                // Method org/apache/commons/csv/CSVFormat$Builder.setHeaderComments:([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #646                // Method org/apache/commons/csv/CSVFormat$Builder.setHeaderComments:([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2613: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 headerComments   [Ljava/lang/Object;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withIgnoreEmptyLines();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iconst_1\n-         5: invokevirtual #216                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #650                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2626: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withIgnoreEmptyLines(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iload_1\n-         5: invokevirtual #216                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #650                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2639: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 ignoreEmptyLines   Z\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withIgnoreHeaderCase();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iconst_1\n-         5: invokevirtual #217                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreHeaderCase:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #653                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreHeaderCase:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2652: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withIgnoreHeaderCase(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iload_1\n-         5: invokevirtual #217                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreHeaderCase:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #653                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreHeaderCase:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2665: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 ignoreHeaderCase   Z\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withIgnoreSurroundingSpaces();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iconst_1\n-         5: invokevirtual #218                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #656                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2678: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withIgnoreSurroundingSpaces(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iload_1\n-         5: invokevirtual #218                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #656                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2690: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 ignoreSurroundingSpaces   Z\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withNullString(java.lang.String);\n     descriptor: (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: aload_1\n-         5: invokevirtual #219                // Method org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #659                // Method org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2706: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 nullString   Ljava/lang/String;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withQuote(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iload_1\n-         5: invokevirtual #220                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #663                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2719: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 quoteChar   C\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withQuote(java.lang.Character);\n     descriptor: (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: aload_1\n-         5: invokevirtual #221                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #666                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2732: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 quoteChar   Ljava/lang/Character;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withQuoteMode(org.apache.commons.csv.QuoteMode);\n     descriptor: (Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: aload_1\n-         5: invokevirtual #222                // Method org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #668                // Method org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2745: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 quoteMode   Lorg/apache/commons/csv/QuoteMode;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withRecordSeparator(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iload_1\n-         5: invokevirtual #223                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #672                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2762: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 recordSeparator   C\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withRecordSeparator(java.lang.String);\n     descriptor: (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: aload_1\n-         5: invokevirtual #224                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #675                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2780: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 recordSeparator   Ljava/lang/String;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withSkipHeaderRecord();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iconst_1\n-         5: invokevirtual #211                // Method org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #634                // Method org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2794: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withSkipHeaderRecord(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iload_1\n-         5: invokevirtual #211                // Method org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #634                // Method org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2807: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 skipHeaderRecord   Z\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withSystemRecordSeparator();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-         4: invokestatic  #225                // Method java/lang/System.lineSeparator:()Ljava/lang/String;\n-         7: invokevirtual #224                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-        10: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         4: invokestatic  #677                // Method java/lang/System.lineSeparator:()Ljava/lang/String;\n+         7: invokevirtual #675                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+        10: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         13: areturn\n       LineNumberTable:\n         line 2825: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/csv/CSVFormat;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withTrailingDelimiter();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iconst_1\n-         5: invokevirtual #226                // Method org/apache/commons/csv/CSVFormat$Builder.setTrailingDelimiter:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #680                // Method org/apache/commons/csv/CSVFormat$Builder.setTrailingDelimiter:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2837: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withTrailingDelimiter(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iload_1\n-         5: invokevirtual #226                // Method org/apache/commons/csv/CSVFormat$Builder.setTrailingDelimiter:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #680                // Method org/apache/commons/csv/CSVFormat$Builder.setTrailingDelimiter:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2850: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 trailingDelimiter   Z\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withTrim();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iconst_1\n-         5: invokevirtual #227                // Method org/apache/commons/csv/CSVFormat$Builder.setTrim:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #683                // Method org/apache/commons/csv/CSVFormat$Builder.setTrim:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2862: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withTrim(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iload_1\n-         5: invokevirtual #227                // Method org/apache/commons/csv/CSVFormat$Builder.setTrim:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #683                // Method org/apache/commons/csv/CSVFormat$Builder.setTrim:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2875: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1  trim   Z\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #378()\n+      0: #794()\n         java.lang.Deprecated\n \n   private static java.lang.String lambda$toStringArray$0(java.lang.Object[], int);\n     descriptor: ([Ljava/lang/Object;I)Ljava/lang/String;\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: aaload\n          3: aconst_null\n-         4: invokestatic  #228                // Method java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+         4: invokestatic  #686                // Method java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 1279: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 values   [Ljava/lang/Object;\n             0       8     1     i   I\n \n   static java.lang.String access$000(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #23                 // Field delimiter:Ljava/lang/String;\n+         1: getfield      #77                 // Field delimiter:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 181: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static java.lang.Character access$100(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n+         1: getfield      #74                 // Field quoteCharacter:Ljava/lang/Character;\n          4: areturn\n       LineNumberTable:\n         line 181: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static org.apache.commons.csv.QuoteMode access$200(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/QuoteMode;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #21                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+         1: getfield      #70                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n          4: areturn\n       LineNumberTable:\n         line 181: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static java.lang.Character access$300(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #20                 // Field commentMarker:Ljava/lang/Character;\n+         1: getfield      #67                 // Field commentMarker:Ljava/lang/Character;\n          4: areturn\n       LineNumberTable:\n         line 181: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static java.lang.Character access$400(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n+         1: getfield      #63                 // Field escapeCharacter:Ljava/lang/Character;\n          4: areturn\n       LineNumberTable:\n         line 181: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static boolean access$500(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field ignoreSurroundingSpaces:Z\n+         1: getfield      #60                 // Field ignoreSurroundingSpaces:Z\n          4: ireturn\n       LineNumberTable:\n         line 181: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static boolean access$600(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #17                 // Field allowMissingColumnNames:Z\n+         1: getfield      #57                 // Field allowMissingColumnNames:Z\n          4: ireturn\n       LineNumberTable:\n         line 181: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static boolean access$700(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #16                 // Field ignoreEmptyLines:Z\n+         1: getfield      #54                 // Field ignoreEmptyLines:Z\n          4: ireturn\n       LineNumberTable:\n         line 181: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static java.lang.String access$800(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #15                 // Field recordSeparator:Ljava/lang/String;\n+         1: getfield      #51                 // Field recordSeparator:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 181: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static java.lang.String access$900(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #14                 // Field nullString:Ljava/lang/String;\n+         1: getfield      #48                 // Field nullString:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 181: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static java.lang.String[] access$1000(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #13                 // Field headerComments:[Ljava/lang/String;\n+         1: getfield      #45                 // Field headerComments:[Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 181: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static java.lang.String[] access$1100(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field headers:[Ljava/lang/String;\n+         1: getfield      #41                 // Field headers:[Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 181: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static boolean access$1200(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field skipHeaderRecord:Z\n+         1: getfield      #38                 // Field skipHeaderRecord:Z\n          4: ireturn\n       LineNumberTable:\n         line 181: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static boolean access$1300(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field ignoreHeaderCase:Z\n+         1: getfield      #35                 // Field ignoreHeaderCase:Z\n          4: ireturn\n       LineNumberTable:\n         line 181: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static boolean access$1400(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field trailingDelimiter:Z\n+         1: getfield      #32                 // Field trailingDelimiter:Z\n          4: ireturn\n       LineNumberTable:\n         line 181: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static boolean access$1500(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field trim:Z\n+         1: getfield      #29                 // Field trim:Z\n          4: ireturn\n       LineNumberTable:\n         line 181: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static boolean access$1600(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field autoFlush:Z\n+         1: getfield      #25                 // Field autoFlush:Z\n          4: ireturn\n       LineNumberTable:\n         line 181: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static java.lang.String access$1700(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field quotedNullString:Ljava/lang/String;\n+         1: getfield      #21                 // Field quotedNullString:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 181: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static org.apache.commons.csv.DuplicateHeaderMode access$1800(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/DuplicateHeaderMode;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+         1: getfield      #17                 // Field duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n          4: areturn\n       LineNumberTable:\n         line 181: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   org.apache.commons.csv.CSVFormat(org.apache.commons.csv.CSVFormat$Builder, org.apache.commons.csv.CSVFormat$1);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;Lorg/apache/commons/csv/CSVFormat$1;)V\n     flags: (0x1000) ACC_SYNTHETIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #4                  // Method \"<init>\":(Lorg/apache/commons/csv/CSVFormat$Builder;)V\n+         2: invokespecial #13                 // Method \"<init>\":(Lorg/apache/commons/csv/CSVFormat$Builder;)V\n          5: return\n       LineNumberTable:\n         line 181: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0       6     1    x0   Lorg/apache/commons/csv/CSVFormat$Builder;\n@@ -5607,290 +5603,290 @@\n \n   static boolean access$2000(java.lang.Character);\n     descriptor: (Ljava/lang/Character;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #3                  // Method isLineBreak:(Ljava/lang/Character;)Z\n+         1: invokestatic  #9                  // Method isLineBreak:(Ljava/lang/Character;)Z\n          4: ireturn\n       LineNumberTable:\n         line 181: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Ljava/lang/Character;\n \n   static boolean access$2100(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #2                  // Method containsLineBreak:(Ljava/lang/String;)Z\n+         1: invokestatic  #3                  // Method containsLineBreak:(Ljava/lang/String;)Z\n          4: ireturn\n       LineNumberTable:\n         line 181: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Ljava/lang/String;\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=20, locals=0, args_size=0\n-         0: new           #37                 // class org/apache/commons/csv/CSVFormat\n+         0: new           #4                  // class org/apache/commons/csv/CSVFormat\n          3: dup\n-         4: ldc           #229                // String ,\n-         6: getstatic     #230                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-         9: aconst_null\n+         4: ldc_w         #689                // String ,\n+         7: getstatic     #691                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n         10: aconst_null\n         11: aconst_null\n-        12: iconst_0\n-        13: iconst_1\n-        14: ldc           #231                // String \\r\\n\n-        16: aconst_null\n-        17: aconst_null\n+        12: aconst_null\n+        13: iconst_0\n+        14: iconst_1\n+        15: ldc_w         #694                // String \\r\\n\n         18: aconst_null\n-        19: iconst_0\n-        20: iconst_0\n+        19: aconst_null\n+        20: aconst_null\n         21: iconst_0\n         22: iconst_0\n         23: iconst_0\n         24: iconst_0\n-        25: getstatic     #39                 // Field org/apache/commons/csv/DuplicateHeaderMode.ALLOW_ALL:Lorg/apache/commons/csv/DuplicateHeaderMode;\n-        28: invokespecial #40                 // Method \"<init>\":(Ljava/lang/String;Ljava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZLorg/apache/commons/csv/DuplicateHeaderMode;)V\n-        31: putstatic     #232                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-        34: getstatic     #232                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-        37: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-        40: iconst_0\n-        41: invokevirtual #216                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-        44: iconst_1\n-        45: invokevirtual #203                // Method org/apache/commons/csv/CSVFormat$Builder.setAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-        48: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n-        51: putstatic     #233                // Field EXCEL:Lorg/apache/commons/csv/CSVFormat;\n-        54: getstatic     #232                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-        57: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-        60: bipush        124\n-        62: invokevirtual #207                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-        65: bipush        92\n-        67: invokevirtual #208                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-        70: getstatic     #230                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-        73: invokevirtual #221                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-        76: bipush        10\n-        78: invokevirtual #223                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-        81: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n-        84: putstatic     #234                // Field INFORMIX_UNLOAD:Lorg/apache/commons/csv/CSVFormat;\n-        87: getstatic     #232                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-        90: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-        93: ldc           #229                // String ,\n-        95: invokevirtual #235                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-        98: getstatic     #230                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-       101: invokevirtual #221                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       104: bipush        10\n-       106: invokevirtual #223                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       109: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n-       112: putstatic     #236                // Field INFORMIX_UNLOAD_CSV:Lorg/apache/commons/csv/CSVFormat;\n-       115: getstatic     #232                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-       118: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-       121: ldc           #229                // String ,\n-       123: invokevirtual #235                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       126: getstatic     #230                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-       129: invokevirtual #209                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       132: getstatic     #230                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-       135: invokevirtual #221                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       138: getstatic     #156                // Field org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n-       141: invokevirtual #222                // Method org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       144: iconst_0\n-       145: invokevirtual #211                // Method org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       148: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n-       151: putstatic     #237                // Field MONGODB_CSV:Lorg/apache/commons/csv/CSVFormat;\n-       154: getstatic     #232                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-       157: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-       160: bipush        9\n-       162: invokevirtual #207                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       165: getstatic     #230                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-       168: invokevirtual #209                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       171: getstatic     #230                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-       174: invokevirtual #221                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       177: getstatic     #156                // Field org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n-       180: invokevirtual #222                // Method org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       183: iconst_0\n-       184: invokevirtual #211                // Method org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       187: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n-       190: putstatic     #238                // Field MONGODB_TSV:Lorg/apache/commons/csv/CSVFormat;\n-       193: getstatic     #232                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-       196: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-       199: bipush        9\n-       201: invokevirtual #207                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       204: bipush        92\n-       206: invokevirtual #208                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       209: iconst_0\n-       210: invokevirtual #216                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       213: aconst_null\n-       214: invokevirtual #221                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       217: bipush        10\n-       219: invokevirtual #223                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       222: ldc           #239                // String \\\\N\n-       224: invokevirtual #219                // Method org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       227: getstatic     #240                // Field org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n-       230: invokevirtual #222                // Method org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       233: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n-       236: putstatic     #241                // Field MYSQL:Lorg/apache/commons/csv/CSVFormat;\n-       239: getstatic     #232                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-       242: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-       245: ldc           #229                // String ,\n-       247: invokevirtual #235                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       250: bipush        92\n-       252: invokevirtual #208                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       255: iconst_0\n-       256: invokevirtual #216                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       259: getstatic     #230                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-       262: invokevirtual #221                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       265: ldc           #239                // String \\\\N\n-       267: invokevirtual #219                // Method org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       270: iconst_1\n-       271: invokevirtual #227                // Method org/apache/commons/csv/CSVFormat$Builder.setTrim:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       274: invokestatic  #225                // Method java/lang/System.lineSeparator:()Ljava/lang/String;\n-       277: invokevirtual #224                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       280: getstatic     #156                // Field org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n-       283: invokevirtual #222                // Method org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       286: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n-       289: putstatic     #242                // Field ORACLE:Lorg/apache/commons/csv/CSVFormat;\n-       292: getstatic     #232                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-       295: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-       298: ldc           #229                // String ,\n-       300: invokevirtual #235                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       303: aconst_null\n-       304: invokevirtual #209                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       307: iconst_0\n-       308: invokevirtual #216                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       311: getstatic     #230                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-       314: invokevirtual #221                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       317: bipush        10\n-       319: invokevirtual #223                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       322: ldc           #112                // String\n-       324: invokevirtual #219                // Method org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       327: getstatic     #240                // Field org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n-       330: invokevirtual #222                // Method org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       333: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n-       336: putstatic     #243                // Field POSTGRESQL_CSV:Lorg/apache/commons/csv/CSVFormat;\n-       339: getstatic     #232                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-       342: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-       345: bipush        9\n-       347: invokevirtual #207                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       350: bipush        92\n-       352: invokevirtual #208                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       355: iconst_0\n-       356: invokevirtual #216                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       359: aconst_null\n-       360: invokevirtual #221                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       363: bipush        10\n-       365: invokevirtual #223                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       368: ldc           #239                // String \\\\N\n-       370: invokevirtual #219                // Method org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       373: getstatic     #240                // Field org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n-       376: invokevirtual #222                // Method org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       379: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n-       382: putstatic     #244                // Field POSTGRESQL_TEXT:Lorg/apache/commons/csv/CSVFormat;\n-       385: getstatic     #232                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-       388: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-       391: iconst_0\n-       392: invokevirtual #216                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       395: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n-       398: putstatic     #245                // Field RFC4180:Lorg/apache/commons/csv/CSVFormat;\n-       401: getstatic     #232                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-       404: invokevirtual #80                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-       407: bipush        9\n-       409: invokevirtual #207                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       412: iconst_1\n-       413: invokevirtual #218                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       416: invokevirtual #81                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n-       419: putstatic     #246                // Field TDF:Lorg/apache/commons/csv/CSVFormat;\n-       422: return\n+        25: iconst_0\n+        26: iconst_0\n+        27: getstatic     #133                // Field org/apache/commons/csv/DuplicateHeaderMode.ALLOW_ALL:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+        30: invokespecial #138                // Method \"<init>\":(Ljava/lang/String;Ljava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZLorg/apache/commons/csv/DuplicateHeaderMode;)V\n+        33: putstatic     #696                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+        36: getstatic     #696                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+        39: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+        42: iconst_0\n+        43: invokevirtual #650                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+        46: iconst_1\n+        47: invokevirtual #608                // Method org/apache/commons/csv/CSVFormat$Builder.setAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+        50: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+        53: putstatic     #700                // Field EXCEL:Lorg/apache/commons/csv/CSVFormat;\n+        56: getstatic     #696                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+        59: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+        62: bipush        124\n+        64: invokevirtual #622                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+        67: bipush        92\n+        69: invokevirtual #625                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+        72: getstatic     #691                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+        75: invokevirtual #666                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+        78: bipush        10\n+        80: invokevirtual #672                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+        83: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+        86: putstatic     #703                // Field INFORMIX_UNLOAD:Lorg/apache/commons/csv/CSVFormat;\n+        89: getstatic     #696                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+        92: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+        95: ldc_w         #689                // String ,\n+        98: invokevirtual #706                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       101: getstatic     #691                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+       104: invokevirtual #666                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       107: bipush        10\n+       109: invokevirtual #672                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       112: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+       115: putstatic     #708                // Field INFORMIX_UNLOAD_CSV:Lorg/apache/commons/csv/CSVFormat;\n+       118: getstatic     #696                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+       121: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+       124: ldc_w         #689                // String ,\n+       127: invokevirtual #706                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       130: getstatic     #691                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+       133: invokevirtual #628                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       136: getstatic     #691                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+       139: invokevirtual #666                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       142: getstatic     #492                // Field org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n+       145: invokevirtual #668                // Method org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       148: iconst_0\n+       149: invokevirtual #634                // Method org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       152: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+       155: putstatic     #711                // Field MONGODB_CSV:Lorg/apache/commons/csv/CSVFormat;\n+       158: getstatic     #696                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+       161: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+       164: bipush        9\n+       166: invokevirtual #622                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       169: getstatic     #691                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+       172: invokevirtual #628                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       175: getstatic     #691                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+       178: invokevirtual #666                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       181: getstatic     #492                // Field org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n+       184: invokevirtual #668                // Method org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       187: iconst_0\n+       188: invokevirtual #634                // Method org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       191: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+       194: putstatic     #714                // Field MONGODB_TSV:Lorg/apache/commons/csv/CSVFormat;\n+       197: getstatic     #696                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+       200: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+       203: bipush        9\n+       205: invokevirtual #622                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       208: bipush        92\n+       210: invokevirtual #625                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       213: iconst_0\n+       214: invokevirtual #650                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       217: aconst_null\n+       218: invokevirtual #666                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       221: bipush        10\n+       223: invokevirtual #672                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       226: ldc_w         #717                // String \\\\N\n+       229: invokevirtual #659                // Method org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       232: getstatic     #719                // Field org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n+       235: invokevirtual #668                // Method org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       238: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+       241: putstatic     #722                // Field MYSQL:Lorg/apache/commons/csv/CSVFormat;\n+       244: getstatic     #696                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+       247: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+       250: ldc_w         #689                // String ,\n+       253: invokevirtual #706                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       256: bipush        92\n+       258: invokevirtual #625                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       261: iconst_0\n+       262: invokevirtual #650                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       265: getstatic     #691                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+       268: invokevirtual #666                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       271: ldc_w         #717                // String \\\\N\n+       274: invokevirtual #659                // Method org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       277: iconst_1\n+       278: invokevirtual #683                // Method org/apache/commons/csv/CSVFormat$Builder.setTrim:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       281: invokestatic  #677                // Method java/lang/System.lineSeparator:()Ljava/lang/String;\n+       284: invokevirtual #675                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       287: getstatic     #492                // Field org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n+       290: invokevirtual #668                // Method org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       293: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+       296: putstatic     #725                // Field ORACLE:Lorg/apache/commons/csv/CSVFormat;\n+       299: getstatic     #696                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+       302: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+       305: ldc_w         #689                // String ,\n+       308: invokevirtual #706                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       311: aconst_null\n+       312: invokevirtual #628                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       315: iconst_0\n+       316: invokevirtual #650                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       319: getstatic     #691                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+       322: invokevirtual #666                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       325: bipush        10\n+       327: invokevirtual #672                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       330: ldc_w         #357                // String\n+       333: invokevirtual #659                // Method org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       336: getstatic     #719                // Field org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n+       339: invokevirtual #668                // Method org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       342: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+       345: putstatic     #728                // Field POSTGRESQL_CSV:Lorg/apache/commons/csv/CSVFormat;\n+       348: getstatic     #696                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+       351: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+       354: bipush        9\n+       356: invokevirtual #622                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       359: bipush        92\n+       361: invokevirtual #625                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       364: iconst_0\n+       365: invokevirtual #650                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       368: aconst_null\n+       369: invokevirtual #666                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       372: bipush        10\n+       374: invokevirtual #672                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       377: ldc_w         #717                // String \\\\N\n+       380: invokevirtual #659                // Method org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       383: getstatic     #719                // Field org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n+       386: invokevirtual #668                // Method org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       389: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+       392: putstatic     #731                // Field POSTGRESQL_TEXT:Lorg/apache/commons/csv/CSVFormat;\n+       395: getstatic     #696                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+       398: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+       401: iconst_0\n+       402: invokevirtual #650                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       405: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+       408: putstatic     #734                // Field RFC4180:Lorg/apache/commons/csv/CSVFormat;\n+       411: getstatic     #696                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+       414: invokevirtual #277                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+       417: bipush        9\n+       419: invokevirtual #622                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       422: iconst_1\n+       423: invokevirtual #656                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       426: invokevirtual #281                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+       429: putstatic     #737                // Field TDF:Lorg/apache/commons/csv/CSVFormat;\n+       432: return\n       LineNumberTable:\n         line 812: 0\n-        line 846: 34\n-        line 847: 41\n-        line 848: 45\n-        line 849: 48\n-        line 876: 54\n-        line 877: 62\n-        line 878: 67\n-        line 879: 73\n-        line 880: 78\n-        line 881: 81\n-        line 907: 87\n-        line 908: 95\n-        line 909: 101\n-        line 910: 106\n-        line 911: 109\n-        line 941: 115\n-        line 942: 123\n-        line 943: 129\n-        line 944: 135\n-        line 945: 141\n-        line 946: 145\n-        line 947: 148\n-        line 978: 154\n-        line 979: 162\n-        line 980: 168\n-        line 981: 174\n-        line 982: 180\n-        line 983: 184\n-        line 984: 187\n-        line 1013: 193\n-        line 1014: 201\n-        line 1015: 206\n-        line 1016: 210\n-        line 1017: 214\n-        line 1018: 219\n-        line 1019: 224\n-        line 1020: 230\n-        line 1021: 233\n-        line 1052: 239\n-        line 1053: 247\n-        line 1054: 252\n-        line 1055: 256\n-        line 1056: 262\n-        line 1057: 267\n-        line 1058: 271\n-        line 1059: 274\n-        line 1060: 283\n-        line 1061: 286\n-        line 1091: 292\n-        line 1092: 300\n-        line 1093: 304\n-        line 1094: 308\n-        line 1095: 314\n-        line 1096: 319\n-        line 1097: 324\n-        line 1098: 330\n-        line 1099: 333\n-        line 1129: 339\n-        line 1130: 347\n-        line 1131: 352\n-        line 1132: 356\n-        line 1133: 360\n-        line 1134: 365\n-        line 1135: 370\n-        line 1136: 376\n-        line 1137: 379\n-        line 1155: 385\n-        line 1175: 401\n-        line 1176: 409\n-        line 1177: 413\n-        line 1178: 416\n-        line 1175: 422\n+        line 846: 36\n+        line 847: 43\n+        line 848: 47\n+        line 849: 50\n+        line 876: 56\n+        line 877: 64\n+        line 878: 69\n+        line 879: 75\n+        line 880: 80\n+        line 881: 83\n+        line 907: 89\n+        line 908: 98\n+        line 909: 104\n+        line 910: 109\n+        line 911: 112\n+        line 941: 118\n+        line 942: 127\n+        line 943: 133\n+        line 944: 139\n+        line 945: 145\n+        line 946: 149\n+        line 947: 152\n+        line 978: 158\n+        line 979: 166\n+        line 980: 172\n+        line 981: 178\n+        line 982: 184\n+        line 983: 188\n+        line 984: 191\n+        line 1013: 197\n+        line 1014: 205\n+        line 1015: 210\n+        line 1016: 214\n+        line 1017: 218\n+        line 1018: 223\n+        line 1019: 229\n+        line 1020: 235\n+        line 1021: 238\n+        line 1052: 244\n+        line 1053: 253\n+        line 1054: 258\n+        line 1055: 262\n+        line 1056: 268\n+        line 1057: 274\n+        line 1058: 278\n+        line 1059: 281\n+        line 1060: 290\n+        line 1061: 293\n+        line 1091: 299\n+        line 1092: 308\n+        line 1093: 312\n+        line 1094: 316\n+        line 1095: 322\n+        line 1096: 327\n+        line 1097: 333\n+        line 1098: 339\n+        line 1099: 342\n+        line 1129: 348\n+        line 1130: 356\n+        line 1131: 361\n+        line 1132: 365\n+        line 1133: 369\n+        line 1134: 374\n+        line 1135: 380\n+        line 1136: 386\n+        line 1137: 389\n+        line 1155: 395\n+        line 1175: 411\n+        line 1176: 419\n+        line 1177: 423\n+        line 1178: 426\n+        line 1175: 432\n }\n SourceFile: \"CSVFormat.java\"\n-InnerClasses:\n-  static #248;                            // class org/apache/commons/csv/CSVFormat$1\n-  public static final #251= #250 of #37;  // Predefined=class org/apache/commons/csv/CSVFormat$Predefined of class org/apache/commons/csv/CSVFormat\n-  public static #253= #252 of #37;        // Builder=class org/apache/commons/csv/CSVFormat$Builder of class org/apache/commons/csv/CSVFormat\n-  public static final #948= #947 of #950; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #590 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #927 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #591 (I)Ljava/lang/Object;\n-      #592 REF_invokeStatic org/apache/commons/csv/CSVFormat.lambda$toStringArray$0:([Ljava/lang/Object;I)Ljava/lang/String;\n-      #593 (I)Ljava/lang/String;\n+      #934 (I)Ljava/lang/Object;\n+      #936 REF_invokeStatic org/apache/commons/csv/CSVFormat.lambda$toStringArray$0:([Ljava/lang/Object;I)Ljava/lang/String;\n+      #939 (I)Ljava/lang/String;\n+InnerClasses:\n+  public static #942= #177 of #4;         // Builder=class org/apache/commons/csv/CSVFormat$Builder of class org/apache/commons/csv/CSVFormat\n+  public static final #943= #163 of #4;   // Predefined=class org/apache/commons/csv/CSVFormat$Predefined of class org/apache/commons/csv/CSVFormat\n+  static #496;                            // class org/apache/commons/csv/CSVFormat$1\n+  public static final #948= #944 of #946; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
