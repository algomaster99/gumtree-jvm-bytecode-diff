{"diffoscope-json-version": 1, "source1": "first/TimeInfo.class", "source2": "second/TimeInfo.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -11,126 +11,126 @@\n     private final NtpV3Packet message;\n     private List<String> comments;\n     private Long delayMillis;\n     private Long offsetMillis;\n     private final long returnTimeMillis;\n     private boolean detailsComputed;\n     \n-    public TimeInfo(final NtpV3Packet message, final long returnTimeMillis) {\n-        this(message, returnTimeMillis, null, true);\n+    public TimeInfo(final NtpV3Packet ntpV3Packet, final long n) {\n+        this(ntpV3Packet, n, null, true);\n     }\n     \n-    public TimeInfo(final NtpV3Packet msgPacket, final long returnTimeMillis, final boolean doComputeDetails) {\n-        this(msgPacket, returnTimeMillis, null, doComputeDetails);\n+    public TimeInfo(final NtpV3Packet ntpV3Packet, final long n, final boolean b) {\n+        this(ntpV3Packet, n, null, b);\n     }\n     \n-    public TimeInfo(final NtpV3Packet message, final long returnTimeMillis, final List<String> comments) {\n-        this(message, returnTimeMillis, comments, true);\n+    public TimeInfo(final NtpV3Packet ntpV3Packet, final long n, final List<String> list) {\n+        this(ntpV3Packet, n, list, true);\n     }\n     \n-    public TimeInfo(final NtpV3Packet message, final long returnTimeMillis, final List<String> comments, final boolean doComputeDetails) {\n+    public TimeInfo(final NtpV3Packet message, final long returnTimeMillis, final List<String> comments, final boolean b) {\n         if (message == null) {\n             throw new IllegalArgumentException(\"message cannot be null\");\n         }\n         this.returnTimeMillis = returnTimeMillis;\n         this.message = message;\n         this.comments = comments;\n-        if (doComputeDetails) {\n+        if (b) {\n             this.computeDetails();\n         }\n     }\n     \n-    public void addComment(final String comment) {\n+    public void addComment(final String s) {\n         if (this.comments == null) {\n             this.comments = new ArrayList<String>();\n         }\n-        this.comments.add(comment);\n+        this.comments.add(s);\n     }\n     \n     public void computeDetails() {\n         if (this.detailsComputed) {\n             return;\n         }\n         this.detailsComputed = true;\n         if (this.comments == null) {\n             this.comments = new ArrayList<String>();\n         }\n-        final TimeStamp origNtpTime = this.message.getOriginateTimeStamp();\n-        final long origTimeMillis = origNtpTime.getTime();\n-        final TimeStamp rcvNtpTime = this.message.getReceiveTimeStamp();\n-        final long rcvTimeMillis = rcvNtpTime.getTime();\n-        final TimeStamp xmitNtpTime = this.message.getTransmitTimeStamp();\n-        final long xmitTimeMillis = xmitNtpTime.getTime();\n-        if (origNtpTime.ntpValue() == 0L) {\n-            if (xmitNtpTime.ntpValue() != 0L) {\n-                this.offsetMillis = Long.valueOf(xmitTimeMillis - this.returnTimeMillis);\n+        final TimeStamp originateTimeStamp = this.message.getOriginateTimeStamp();\n+        final long time = originateTimeStamp.getTime();\n+        final TimeStamp receiveTimeStamp = this.message.getReceiveTimeStamp();\n+        final long time2 = receiveTimeStamp.getTime();\n+        final TimeStamp transmitTimeStamp = this.message.getTransmitTimeStamp();\n+        final long time3 = transmitTimeStamp.getTime();\n+        if (originateTimeStamp.ntpValue() == 0L) {\n+            if (transmitTimeStamp.ntpValue() != 0L) {\n+                this.offsetMillis = Long.valueOf(time3 - this.returnTimeMillis);\n                 this.comments.add(\"Error: zero orig time -- cannot compute delay\");\n             }\n             else {\n                 this.comments.add(\"Error: zero orig time -- cannot compute delay/offset\");\n             }\n         }\n-        else if (rcvNtpTime.ntpValue() == 0L || xmitNtpTime.ntpValue() == 0L) {\n+        else if (receiveTimeStamp.ntpValue() == 0L || transmitTimeStamp.ntpValue() == 0L) {\n             this.comments.add(\"Warning: zero rcvNtpTime or xmitNtpTime\");\n-            if (origTimeMillis > this.returnTimeMillis) {\n+            if (time > this.returnTimeMillis) {\n                 this.comments.add(\"Error: OrigTime > DestRcvTime\");\n             }\n             else {\n-                this.delayMillis = Long.valueOf(this.returnTimeMillis - origTimeMillis);\n+                this.delayMillis = Long.valueOf(this.returnTimeMillis - time);\n             }\n-            if (rcvNtpTime.ntpValue() != 0L) {\n-                this.offsetMillis = Long.valueOf(rcvTimeMillis - origTimeMillis);\n+            if (receiveTimeStamp.ntpValue() != 0L) {\n+                this.offsetMillis = Long.valueOf(time2 - time);\n             }\n-            else if (xmitNtpTime.ntpValue() != 0L) {\n-                this.offsetMillis = Long.valueOf(xmitTimeMillis - this.returnTimeMillis);\n+            else if (transmitTimeStamp.ntpValue() != 0L) {\n+                this.offsetMillis = Long.valueOf(time3 - this.returnTimeMillis);\n             }\n         }\n         else {\n-            long delayValueMillis = this.returnTimeMillis - origTimeMillis;\n-            if (xmitTimeMillis < rcvTimeMillis) {\n+            long l = this.returnTimeMillis - time;\n+            if (time3 < time2) {\n                 this.comments.add(\"Error: xmitTime < rcvTime\");\n             }\n             else {\n-                final long deltaMillis = xmitTimeMillis - rcvTimeMillis;\n-                if (deltaMillis <= delayValueMillis) {\n-                    delayValueMillis -= deltaMillis;\n+                final long n = time3 - time2;\n+                if (n <= l) {\n+                    l -= n;\n                 }\n-                else if (deltaMillis - delayValueMillis == 1L) {\n-                    if (delayValueMillis != 0L) {\n+                else if (n - l == 1L) {\n+                    if (l != 0L) {\n                         this.comments.add(\"Info: processing time > total network time by 1 ms -> assume zero delay\");\n-                        delayValueMillis = 0L;\n+                        l = 0L;\n                     }\n                 }\n                 else {\n                     this.comments.add(\"Warning: processing time > total network time\");\n                 }\n             }\n-            this.delayMillis = Long.valueOf(delayValueMillis);\n-            if (origTimeMillis > this.returnTimeMillis) {\n+            this.delayMillis = Long.valueOf(l);\n+            if (time > this.returnTimeMillis) {\n                 this.comments.add(\"Error: OrigTime > DestRcvTime\");\n             }\n-            this.offsetMillis = Long.valueOf((rcvTimeMillis - origTimeMillis + (xmitTimeMillis - this.returnTimeMillis)) / 2L);\n+            this.offsetMillis = Long.valueOf((time2 - time + (time3 - this.returnTimeMillis)) / 2L);\n         }\n     }\n     \n     @Override\n-    public boolean equals(final Object obj) {\n-        if (this == obj) {\n+    public boolean equals(final Object o) {\n+        if (this == o) {\n             return true;\n         }\n-        if (obj == null || this.getClass() != obj.getClass()) {\n+        if (o == null || this.getClass() != o.getClass()) {\n             return false;\n         }\n-        final TimeInfo other = (TimeInfo)obj;\n-        return this.returnTimeMillis == other.returnTimeMillis && this.message.equals((Object)other.message);\n+        final TimeInfo timeInfo = (TimeInfo)o;\n+        return this.returnTimeMillis == timeInfo.returnTimeMillis && this.message.equals((Object)timeInfo.message);\n     }\n     \n     public InetAddress getAddress() {\n-        final DatagramPacket pkt = this.message.getDatagramPacket();\n-        return (pkt == null) ? null : pkt.getAddress();\n+        final DatagramPacket datagramPacket = this.message.getDatagramPacket();\n+        return (datagramPacket == null) ? null : datagramPacket.getAddress();\n     }\n     \n     public List<String> getComments() {\n         return this.comments;\n     }\n     \n     public Long getDelay() {\n@@ -147,13 +147,10 @@\n     \n     public long getReturnTime() {\n         return this.returnTimeMillis;\n     }\n     \n     @Override\n     public int hashCode() {\n-        final int prime = 31;\n-        int result = (int)this.returnTimeMillis;\n-        result = 31 * result + this.message.hashCode();\n-        return result;\n+        return 31 * (int)this.returnTimeMillis + this.message.hashCode();\n     }\n }\n"}]}
