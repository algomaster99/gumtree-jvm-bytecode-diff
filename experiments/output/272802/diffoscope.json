{"diffoscope-json-version": 1, "source1": "first/PackageNameCheck.class", "source2": "second/PackageNameCheck.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -13,31 +13,30 @@\n     public static final String MSG_KEY = \"name.invalidPattern\";\n     private Pattern format;\n     \n     public PackageNameCheck() {\n         this.format = Pattern.compile(\"^[a-z]+(\\\\.[a-zA-Z_]\\\\w*)*$\");\n     }\n     \n-    public void setFormat(final Pattern pattern) {\n-        this.format = pattern;\n+    public void setFormat(final Pattern format) {\n+        this.format = format;\n     }\n     \n     public int[] getDefaultTokens() {\n         return this.getRequiredTokens();\n     }\n     \n     public int[] getAcceptableTokens() {\n         return this.getRequiredTokens();\n     }\n     \n     public int[] getRequiredTokens() {\n         return new int[] { 16 };\n     }\n     \n-    public void visitToken(final DetailAST ast) {\n-        final DetailAST nameAST = ast.getLastChild().getPreviousSibling();\n-        final FullIdent full = FullIdent.createFullIdent(nameAST);\n-        if (!this.format.matcher(full.getText()).find()) {\n-            this.log(full.getDetailAst(), \"name.invalidPattern\", new Object[] { full.getText(), this.format.pattern() });\n+    public void visitToken(final DetailAST detailAST) {\n+        final FullIdent fullIdent = FullIdent.createFullIdent(detailAST.getLastChild().getPreviousSibling());\n+        if (!this.format.matcher(fullIdent.getText()).find()) {\n+            this.log(fullIdent.getDetailAst(), \"name.invalidPattern\", new Object[] { fullIdent.getText(), this.format.pattern() });\n         }\n     }\n }\n"}]}
