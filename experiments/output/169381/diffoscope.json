{"diffoscope-json-version": 1, "source1": "first/LocaleUtils.class", "source2": "second/LocaleUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,76 +1,76 @@\n-  SHA-256 checksum d2498e6165fa9191c4a62151931dec04d906e827fc860cfb400a41a956b556bd\n+  SHA-256 checksum 7c0c3ace3d3dac1564da97f1e84227a6ee2d1acc40fe2b5ee92ace4ec830b3bb\n   Compiled from \"LocaleUtils.java\"\n public class org.apache.commons.lang3.LocaleUtils\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #57                         // org/apache/commons/lang3/LocaleUtils\n   super_class: #58                        // java/lang/Object\n   interfaces: 0, fields: 2, methods: 14, attributes: 2\n Constant pool:\n-    #1 = Methodref          #58.#131      // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #132.#133     // java/lang/String.isEmpty:()Z\n-    #3 = Class              #134          // java/util/Locale\n-    #4 = Class              #135          // org/apache/commons/lang3/StringUtils\n-    #5 = String             #136          //\n-    #6 = Methodref          #3.#137       // java/util/Locale.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n-    #7 = String             #138          // #\n-    #8 = Methodref          #132.#139     // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n-    #9 = Class              #140          // java/lang/IllegalArgumentException\n-   #10 = Class              #141          // java/lang/StringBuilder\n-   #11 = Methodref          #10.#131      // java/lang/StringBuilder.\"<init>\":()V\n-   #12 = String             #142          // Invalid locale format:\n-   #13 = Methodref          #10.#143      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #14 = Methodref          #10.#144      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #15 = Methodref          #9.#145       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #16 = Methodref          #132.#146     // java/lang/String.length:()I\n-   #17 = Methodref          #132.#147     // java/lang/String.charAt:(I)C\n-   #18 = Methodref          #148.#149     // java/lang/Character.isUpperCase:(C)Z\n-   #19 = Methodref          #132.#150     // java/lang/String.substring:(II)Ljava/lang/String;\n-   #20 = Methodref          #132.#151     // java/lang/String.substring:(I)Ljava/lang/String;\n-   #21 = Methodref          #3.#152       // java/util/Locale.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-   #22 = Methodref          #57.#153      // org/apache/commons/lang3/LocaleUtils.parseLocale:(Ljava/lang/String;)Ljava/util/Locale;\n-   #23 = Methodref          #57.#154      // org/apache/commons/lang3/LocaleUtils.isISO639LanguageCode:(Ljava/lang/String;)Z\n-   #24 = Methodref          #3.#145       // java/util/Locale.\"<init>\":(Ljava/lang/String;)V\n-   #25 = String             #155          // _\n-   #26 = Methodref          #132.#156     // java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;\n-   #27 = Methodref          #57.#157      // org/apache/commons/lang3/LocaleUtils.isISO3166CountryCode:(Ljava/lang/String;)Z\n-   #28 = Methodref          #57.#158      // org/apache/commons/lang3/LocaleUtils.isNumericAreaCode:(Ljava/lang/String;)Z\n-   #29 = Methodref          #4.#159       // org/apache/commons/lang3/StringUtils.isAllLowerCase:(Ljava/lang/CharSequence;)Z\n-   #30 = Methodref          #4.#160       // org/apache/commons/lang3/StringUtils.isAllUpperCase:(Ljava/lang/CharSequence;)Z\n-   #31 = Methodref          #4.#161       // org/apache/commons/lang3/StringUtils.isNumeric:(Ljava/lang/CharSequence;)Z\n-   #32 = Methodref          #57.#162      // org/apache/commons/lang3/LocaleUtils.localeLookupList:(Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List;\n-   #33 = Class              #163          // java/util/ArrayList\n-   #34 = Methodref          #33.#164      // java/util/ArrayList.\"<init>\":(I)V\n-   #35 = InterfaceMethodref #47.#165      // java/util/List.add:(Ljava/lang/Object;)Z\n-   #36 = Methodref          #3.#166       // java/util/Locale.getVariant:()Ljava/lang/String;\n-   #37 = Methodref          #3.#167       // java/util/Locale.getLanguage:()Ljava/lang/String;\n-   #38 = Methodref          #3.#168       // java/util/Locale.getCountry:()Ljava/lang/String;\n-   #39 = InterfaceMethodref #47.#169      // java/util/List.contains:(Ljava/lang/Object;)Z\n-   #40 = Methodref          #170.#171     // java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n-   #41 = Methodref          #59.#172      // org/apache/commons/lang3/LocaleUtils$SyncAvoid.access$000:()Ljava/util/List;\n-   #42 = Methodref          #59.#173      // org/apache/commons/lang3/LocaleUtils$SyncAvoid.access$100:()Ljava/util/Set;\n-   #43 = Methodref          #57.#174      // org/apache/commons/lang3/LocaleUtils.availableLocaleList:()Ljava/util/List;\n-   #44 = Methodref          #170.#175     // java/util/Collections.emptyList:()Ljava/util/List;\n-   #45 = Fieldref           #57.#176      // org/apache/commons/lang3/LocaleUtils.cLanguagesByCountry:Ljava/util/concurrent/ConcurrentMap;\n-   #46 = InterfaceMethodref #177.#178     // java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #47 = Class              #179          // java/util/List\n-   #48 = Methodref          #33.#131      // java/util/ArrayList.\"<init>\":()V\n-   #49 = InterfaceMethodref #47.#180      // java/util/List.iterator:()Ljava/util/Iterator;\n-   #50 = InterfaceMethodref #181.#182     // java/util/Iterator.hasNext:()Z\n-   #51 = InterfaceMethodref #181.#183     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #52 = Methodref          #132.#184     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #53 = InterfaceMethodref #177.#185     // java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #54 = Fieldref           #57.#186      // org/apache/commons/lang3/LocaleUtils.cCountriesByLanguage:Ljava/util/concurrent/ConcurrentMap;\n-   #55 = Class              #187          // java/util/concurrent/ConcurrentHashMap\n-   #56 = Methodref          #55.#131      // java/util/concurrent/ConcurrentHashMap.\"<init>\":()V\n-   #57 = Class              #188          // org/apache/commons/lang3/LocaleUtils\n-   #58 = Class              #189          // java/lang/Object\n-   #59 = Class              #190          // org/apache/commons/lang3/LocaleUtils$SyncAvoid\n+    #1 = Methodref          #58.#130      // java/lang/Object.\"<init>\":()V\n+    #2 = Methodref          #92.#131      // java/lang/String.isEmpty:()Z\n+    #3 = Class              #132          // java/util/Locale\n+    #4 = Class              #133          // org/apache/commons/lang3/StringUtils\n+    #5 = String             #134          //\n+    #6 = Methodref          #3.#135       // java/util/Locale.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+    #7 = String             #136          // #\n+    #8 = Methodref          #92.#137      // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+    #9 = Class              #138          // java/lang/IllegalArgumentException\n+   #10 = Class              #139          // java/lang/StringBuilder\n+   #11 = Methodref          #10.#130      // java/lang/StringBuilder.\"<init>\":()V\n+   #12 = String             #140          // Invalid locale format:\n+   #13 = Methodref          #10.#141      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #14 = Methodref          #10.#142      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #15 = Methodref          #9.#143       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #16 = Methodref          #92.#144      // java/lang/String.length:()I\n+   #17 = Methodref          #92.#145      // java/lang/String.charAt:(I)C\n+   #18 = Methodref          #146.#147     // java/lang/Character.isUpperCase:(C)Z\n+   #19 = Methodref          #92.#148      // java/lang/String.substring:(II)Ljava/lang/String;\n+   #20 = Methodref          #92.#149      // java/lang/String.substring:(I)Ljava/lang/String;\n+   #21 = Methodref          #3.#150       // java/util/Locale.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+   #22 = Methodref          #57.#151      // org/apache/commons/lang3/LocaleUtils.parseLocale:(Ljava/lang/String;)Ljava/util/Locale;\n+   #23 = Methodref          #57.#152      // org/apache/commons/lang3/LocaleUtils.isISO639LanguageCode:(Ljava/lang/String;)Z\n+   #24 = Methodref          #3.#143       // java/util/Locale.\"<init>\":(Ljava/lang/String;)V\n+   #25 = String             #153          // _\n+   #26 = Methodref          #92.#154      // java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;\n+   #27 = Methodref          #57.#155      // org/apache/commons/lang3/LocaleUtils.isISO3166CountryCode:(Ljava/lang/String;)Z\n+   #28 = Methodref          #57.#156      // org/apache/commons/lang3/LocaleUtils.isNumericAreaCode:(Ljava/lang/String;)Z\n+   #29 = Methodref          #4.#157       // org/apache/commons/lang3/StringUtils.isAllLowerCase:(Ljava/lang/CharSequence;)Z\n+   #30 = Methodref          #4.#158       // org/apache/commons/lang3/StringUtils.isAllUpperCase:(Ljava/lang/CharSequence;)Z\n+   #31 = Methodref          #4.#159       // org/apache/commons/lang3/StringUtils.isNumeric:(Ljava/lang/CharSequence;)Z\n+   #32 = Methodref          #57.#160      // org/apache/commons/lang3/LocaleUtils.localeLookupList:(Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List;\n+   #33 = Class              #161          // java/util/ArrayList\n+   #34 = Methodref          #33.#162      // java/util/ArrayList.\"<init>\":(I)V\n+   #35 = InterfaceMethodref #47.#163      // java/util/List.add:(Ljava/lang/Object;)Z\n+   #36 = Methodref          #3.#164       // java/util/Locale.getVariant:()Ljava/lang/String;\n+   #37 = Methodref          #3.#165       // java/util/Locale.getLanguage:()Ljava/lang/String;\n+   #38 = Methodref          #3.#166       // java/util/Locale.getCountry:()Ljava/lang/String;\n+   #39 = InterfaceMethodref #47.#167      // java/util/List.contains:(Ljava/lang/Object;)Z\n+   #40 = Methodref          #168.#169     // java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n+   #41 = Methodref          #59.#170      // org/apache/commons/lang3/LocaleUtils$SyncAvoid.access$000:()Ljava/util/List;\n+   #42 = Methodref          #59.#171      // org/apache/commons/lang3/LocaleUtils$SyncAvoid.access$100:()Ljava/util/Set;\n+   #43 = Methodref          #57.#172      // org/apache/commons/lang3/LocaleUtils.availableLocaleList:()Ljava/util/List;\n+   #44 = Methodref          #168.#173     // java/util/Collections.emptyList:()Ljava/util/List;\n+   #45 = Fieldref           #57.#174      // org/apache/commons/lang3/LocaleUtils.cLanguagesByCountry:Ljava/util/concurrent/ConcurrentMap;\n+   #46 = InterfaceMethodref #175.#176     // java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #47 = Class              #177          // java/util/List\n+   #48 = Methodref          #33.#130      // java/util/ArrayList.\"<init>\":()V\n+   #49 = InterfaceMethodref #47.#178      // java/util/List.iterator:()Ljava/util/Iterator;\n+   #50 = InterfaceMethodref #122.#179     // java/util/Iterator.hasNext:()Z\n+   #51 = InterfaceMethodref #122.#180     // java/util/Iterator.next:()Ljava/lang/Object;\n+   #52 = Methodref          #92.#181      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #53 = InterfaceMethodref #175.#182     // java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #54 = Fieldref           #57.#183      // org/apache/commons/lang3/LocaleUtils.cCountriesByLanguage:Ljava/util/concurrent/ConcurrentMap;\n+   #55 = Class              #184          // java/util/concurrent/ConcurrentHashMap\n+   #56 = Methodref          #55.#130      // java/util/concurrent/ConcurrentHashMap.\"<init>\":()V\n+   #57 = Class              #185          // org/apache/commons/lang3/LocaleUtils\n+   #58 = Class              #186          // java/lang/Object\n+   #59 = Class              #187          // org/apache/commons/lang3/LocaleUtils$SyncAvoid\n    #60 = Utf8               SyncAvoid\n    #61 = Utf8               InnerClasses\n    #62 = Utf8               cLanguagesByCountry\n    #63 = Utf8               Ljava/util/concurrent/ConcurrentMap;\n    #64 = Utf8               Signature\n    #65 = Utf8               Ljava/util/concurrent/ConcurrentMap<Ljava/lang/String;Ljava/util/List<Ljava/util/Locale;>;>;\n    #66 = Utf8               cCountriesByLanguage\n@@ -95,15 +95,15 @@\n    #85 = Utf8               parseLocale\n    #86 = Utf8               country\n    #87 = Utf8               variant\n    #88 = Utf8               segments\n    #89 = Utf8               [Ljava/lang/String;\n    #90 = Utf8               language\n    #91 = Class              #89           // \"[Ljava/lang/String;\"\n-   #92 = Class              #191          // java/lang/String\n+   #92 = Class              #188          // java/lang/String\n    #93 = Utf8               isISO639LanguageCode\n    #94 = Utf8               (Ljava/lang/String;)Z\n    #95 = Utf8               isISO3166CountryCode\n    #96 = Utf8               isNumericAreaCode\n    #97 = Utf8               localeLookupList\n    #98 = Utf8               (Ljava/util/Locale;)Ljava/util/List;\n    #99 = Utf8               locale\n@@ -111,148 +111,145 @@\n   #101 = Utf8               (Ljava/util/Locale;)Ljava/util/List<Ljava/util/Locale;>;\n   #102 = Utf8               (Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List;\n   #103 = Utf8               defaultLocale\n   #104 = Utf8               list\n   #105 = Utf8               Ljava/util/List;\n   #106 = Utf8               LocalVariableTypeTable\n   #107 = Utf8               Ljava/util/List<Ljava/util/Locale;>;\n-  #108 = Class              #179          // java/util/List\n-  #109 = Utf8               (Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List<Ljava/util/Locale;>;\n-  #110 = Utf8               availableLocaleList\n-  #111 = Utf8               ()Ljava/util/List;\n-  #112 = Utf8               ()Ljava/util/List<Ljava/util/Locale;>;\n-  #113 = Utf8               availableLocaleSet\n-  #114 = Utf8               ()Ljava/util/Set;\n-  #115 = Utf8               ()Ljava/util/Set<Ljava/util/Locale;>;\n-  #116 = Utf8               isAvailableLocale\n-  #117 = Utf8               (Ljava/util/Locale;)Z\n-  #118 = Utf8               languagesByCountry\n-  #119 = Utf8               (Ljava/lang/String;)Ljava/util/List;\n-  #120 = Utf8               locales\n-  #121 = Utf8               countryCode\n-  #122 = Utf8               langs\n-  #123 = Class              #192          // java/util/Iterator\n-  #124 = Utf8               (Ljava/lang/String;)Ljava/util/List<Ljava/util/Locale;>;\n-  #125 = Utf8               countriesByLanguage\n-  #126 = Utf8               languageCode\n-  #127 = Utf8               countries\n-  #128 = Utf8               <clinit>\n-  #129 = Utf8               SourceFile\n-  #130 = Utf8               LocaleUtils.java\n-  #131 = NameAndType        #67:#68       // \"<init>\":()V\n-  #132 = Class              #191          // java/lang/String\n-  #133 = NameAndType        #193:#194     // isEmpty:()Z\n-  #134 = Utf8               java/util/Locale\n-  #135 = Utf8               org/apache/commons/lang3/StringUtils\n-  #136 = Utf8\n-  #137 = NameAndType        #67:#195      // \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n-  #138 = Utf8               #\n-  #139 = NameAndType        #196:#197     // contains:(Ljava/lang/CharSequence;)Z\n-  #140 = Utf8               java/lang/IllegalArgumentException\n-  #141 = Utf8               java/lang/StringBuilder\n-  #142 = Utf8               Invalid locale format:\n-  #143 = NameAndType        #198:#199     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #144 = NameAndType        #200:#201     // toString:()Ljava/lang/String;\n-  #145 = NameAndType        #67:#202      // \"<init>\":(Ljava/lang/String;)V\n-  #146 = NameAndType        #203:#204     // length:()I\n-  #147 = NameAndType        #205:#206     // charAt:(I)C\n-  #148 = Class              #207          // java/lang/Character\n-  #149 = NameAndType        #208:#209     // isUpperCase:(C)Z\n-  #150 = NameAndType        #210:#211     // substring:(II)Ljava/lang/String;\n-  #151 = NameAndType        #210:#212     // substring:(I)Ljava/lang/String;\n-  #152 = NameAndType        #67:#213      // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #153 = NameAndType        #85:#75       // parseLocale:(Ljava/lang/String;)Ljava/util/Locale;\n-  #154 = NameAndType        #93:#94       // isISO639LanguageCode:(Ljava/lang/String;)Z\n-  #155 = Utf8               _\n-  #156 = NameAndType        #214:#215     // split:(Ljava/lang/String;I)[Ljava/lang/String;\n-  #157 = NameAndType        #95:#94       // isISO3166CountryCode:(Ljava/lang/String;)Z\n-  #158 = NameAndType        #96:#94       // isNumericAreaCode:(Ljava/lang/String;)Z\n-  #159 = NameAndType        #216:#197     // isAllLowerCase:(Ljava/lang/CharSequence;)Z\n-  #160 = NameAndType        #217:#197     // isAllUpperCase:(Ljava/lang/CharSequence;)Z\n-  #161 = NameAndType        #218:#197     // isNumeric:(Ljava/lang/CharSequence;)Z\n-  #162 = NameAndType        #97:#102      // localeLookupList:(Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List;\n-  #163 = Utf8               java/util/ArrayList\n-  #164 = NameAndType        #67:#219      // \"<init>\":(I)V\n-  #165 = NameAndType        #220:#221     // add:(Ljava/lang/Object;)Z\n-  #166 = NameAndType        #222:#201     // getVariant:()Ljava/lang/String;\n-  #167 = NameAndType        #223:#201     // getLanguage:()Ljava/lang/String;\n-  #168 = NameAndType        #224:#201     // getCountry:()Ljava/lang/String;\n-  #169 = NameAndType        #196:#221     // contains:(Ljava/lang/Object;)Z\n-  #170 = Class              #225          // java/util/Collections\n-  #171 = NameAndType        #226:#227     // unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n-  #172 = NameAndType        #228:#111     // access$000:()Ljava/util/List;\n-  #173 = NameAndType        #229:#114     // access$100:()Ljava/util/Set;\n-  #174 = NameAndType        #110:#111     // availableLocaleList:()Ljava/util/List;\n-  #175 = NameAndType        #230:#111     // emptyList:()Ljava/util/List;\n-  #176 = NameAndType        #62:#63       // cLanguagesByCountry:Ljava/util/concurrent/ConcurrentMap;\n-  #177 = Class              #231          // java/util/concurrent/ConcurrentMap\n-  #178 = NameAndType        #232:#233     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #179 = Utf8               java/util/List\n-  #180 = NameAndType        #234:#235     // iterator:()Ljava/util/Iterator;\n-  #181 = Class              #192          // java/util/Iterator\n-  #182 = NameAndType        #236:#194     // hasNext:()Z\n-  #183 = NameAndType        #237:#238     // next:()Ljava/lang/Object;\n-  #184 = NameAndType        #239:#221     // equals:(Ljava/lang/Object;)Z\n-  #185 = NameAndType        #240:#241     // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #186 = NameAndType        #66:#63       // cCountriesByLanguage:Ljava/util/concurrent/ConcurrentMap;\n-  #187 = Utf8               java/util/concurrent/ConcurrentHashMap\n-  #188 = Utf8               org/apache/commons/lang3/LocaleUtils\n-  #189 = Utf8               java/lang/Object\n-  #190 = Utf8               org/apache/commons/lang3/LocaleUtils$SyncAvoid\n-  #191 = Utf8               java/lang/String\n-  #192 = Utf8               java/util/Iterator\n-  #193 = Utf8               isEmpty\n-  #194 = Utf8               ()Z\n-  #195 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n-  #196 = Utf8               contains\n-  #197 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #198 = Utf8               append\n-  #199 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #200 = Utf8               toString\n-  #201 = Utf8               ()Ljava/lang/String;\n-  #202 = Utf8               (Ljava/lang/String;)V\n-  #203 = Utf8               length\n-  #204 = Utf8               ()I\n-  #205 = Utf8               charAt\n-  #206 = Utf8               (I)C\n-  #207 = Utf8               java/lang/Character\n-  #208 = Utf8               isUpperCase\n-  #209 = Utf8               (C)Z\n-  #210 = Utf8               substring\n-  #211 = Utf8               (II)Ljava/lang/String;\n-  #212 = Utf8               (I)Ljava/lang/String;\n-  #213 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #214 = Utf8               split\n-  #215 = Utf8               (Ljava/lang/String;I)[Ljava/lang/String;\n-  #216 = Utf8               isAllLowerCase\n-  #217 = Utf8               isAllUpperCase\n-  #218 = Utf8               isNumeric\n-  #219 = Utf8               (I)V\n-  #220 = Utf8               add\n-  #221 = Utf8               (Ljava/lang/Object;)Z\n-  #222 = Utf8               getVariant\n-  #223 = Utf8               getLanguage\n-  #224 = Utf8               getCountry\n-  #225 = Utf8               java/util/Collections\n-  #226 = Utf8               unmodifiableList\n-  #227 = Utf8               (Ljava/util/List;)Ljava/util/List;\n-  #228 = Utf8               access$000\n-  #229 = Utf8               access$100\n-  #230 = Utf8               emptyList\n-  #231 = Utf8               java/util/concurrent/ConcurrentMap\n-  #232 = Utf8               get\n-  #233 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #234 = Utf8               iterator\n-  #235 = Utf8               ()Ljava/util/Iterator;\n-  #236 = Utf8               hasNext\n-  #237 = Utf8               next\n-  #238 = Utf8               ()Ljava/lang/Object;\n-  #239 = Utf8               equals\n-  #240 = Utf8               putIfAbsent\n-  #241 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #108 = Utf8               (Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List<Ljava/util/Locale;>;\n+  #109 = Utf8               availableLocaleList\n+  #110 = Utf8               ()Ljava/util/List;\n+  #111 = Utf8               ()Ljava/util/List<Ljava/util/Locale;>;\n+  #112 = Utf8               availableLocaleSet\n+  #113 = Utf8               ()Ljava/util/Set;\n+  #114 = Utf8               ()Ljava/util/Set<Ljava/util/Locale;>;\n+  #115 = Utf8               isAvailableLocale\n+  #116 = Utf8               (Ljava/util/Locale;)Z\n+  #117 = Utf8               languagesByCountry\n+  #118 = Utf8               (Ljava/lang/String;)Ljava/util/List;\n+  #119 = Utf8               locales\n+  #120 = Utf8               countryCode\n+  #121 = Utf8               langs\n+  #122 = Class              #189          // java/util/Iterator\n+  #123 = Utf8               (Ljava/lang/String;)Ljava/util/List<Ljava/util/Locale;>;\n+  #124 = Utf8               countriesByLanguage\n+  #125 = Utf8               languageCode\n+  #126 = Utf8               countries\n+  #127 = Utf8               <clinit>\n+  #128 = Utf8               SourceFile\n+  #129 = Utf8               LocaleUtils.java\n+  #130 = NameAndType        #67:#68       // \"<init>\":()V\n+  #131 = NameAndType        #190:#191     // isEmpty:()Z\n+  #132 = Utf8               java/util/Locale\n+  #133 = Utf8               org/apache/commons/lang3/StringUtils\n+  #134 = Utf8\n+  #135 = NameAndType        #67:#192      // \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+  #136 = Utf8               #\n+  #137 = NameAndType        #193:#194     // contains:(Ljava/lang/CharSequence;)Z\n+  #138 = Utf8               java/lang/IllegalArgumentException\n+  #139 = Utf8               java/lang/StringBuilder\n+  #140 = Utf8               Invalid locale format:\n+  #141 = NameAndType        #195:#196     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #142 = NameAndType        #197:#198     // toString:()Ljava/lang/String;\n+  #143 = NameAndType        #67:#199      // \"<init>\":(Ljava/lang/String;)V\n+  #144 = NameAndType        #200:#201     // length:()I\n+  #145 = NameAndType        #202:#203     // charAt:(I)C\n+  #146 = Class              #204          // java/lang/Character\n+  #147 = NameAndType        #205:#206     // isUpperCase:(C)Z\n+  #148 = NameAndType        #207:#208     // substring:(II)Ljava/lang/String;\n+  #149 = NameAndType        #207:#209     // substring:(I)Ljava/lang/String;\n+  #150 = NameAndType        #67:#210      // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #151 = NameAndType        #85:#75       // parseLocale:(Ljava/lang/String;)Ljava/util/Locale;\n+  #152 = NameAndType        #93:#94       // isISO639LanguageCode:(Ljava/lang/String;)Z\n+  #153 = Utf8               _\n+  #154 = NameAndType        #211:#212     // split:(Ljava/lang/String;I)[Ljava/lang/String;\n+  #155 = NameAndType        #95:#94       // isISO3166CountryCode:(Ljava/lang/String;)Z\n+  #156 = NameAndType        #96:#94       // isNumericAreaCode:(Ljava/lang/String;)Z\n+  #157 = NameAndType        #213:#194     // isAllLowerCase:(Ljava/lang/CharSequence;)Z\n+  #158 = NameAndType        #214:#194     // isAllUpperCase:(Ljava/lang/CharSequence;)Z\n+  #159 = NameAndType        #215:#194     // isNumeric:(Ljava/lang/CharSequence;)Z\n+  #160 = NameAndType        #97:#102      // localeLookupList:(Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List;\n+  #161 = Utf8               java/util/ArrayList\n+  #162 = NameAndType        #67:#216      // \"<init>\":(I)V\n+  #163 = NameAndType        #217:#218     // add:(Ljava/lang/Object;)Z\n+  #164 = NameAndType        #219:#198     // getVariant:()Ljava/lang/String;\n+  #165 = NameAndType        #220:#198     // getLanguage:()Ljava/lang/String;\n+  #166 = NameAndType        #221:#198     // getCountry:()Ljava/lang/String;\n+  #167 = NameAndType        #193:#218     // contains:(Ljava/lang/Object;)Z\n+  #168 = Class              #222          // java/util/Collections\n+  #169 = NameAndType        #223:#224     // unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n+  #170 = NameAndType        #225:#110     // access$000:()Ljava/util/List;\n+  #171 = NameAndType        #226:#113     // access$100:()Ljava/util/Set;\n+  #172 = NameAndType        #109:#110     // availableLocaleList:()Ljava/util/List;\n+  #173 = NameAndType        #227:#110     // emptyList:()Ljava/util/List;\n+  #174 = NameAndType        #62:#63       // cLanguagesByCountry:Ljava/util/concurrent/ConcurrentMap;\n+  #175 = Class              #228          // java/util/concurrent/ConcurrentMap\n+  #176 = NameAndType        #229:#230     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #177 = Utf8               java/util/List\n+  #178 = NameAndType        #231:#232     // iterator:()Ljava/util/Iterator;\n+  #179 = NameAndType        #233:#191     // hasNext:()Z\n+  #180 = NameAndType        #234:#235     // next:()Ljava/lang/Object;\n+  #181 = NameAndType        #236:#218     // equals:(Ljava/lang/Object;)Z\n+  #182 = NameAndType        #237:#238     // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #183 = NameAndType        #66:#63       // cCountriesByLanguage:Ljava/util/concurrent/ConcurrentMap;\n+  #184 = Utf8               java/util/concurrent/ConcurrentHashMap\n+  #185 = Utf8               org/apache/commons/lang3/LocaleUtils\n+  #186 = Utf8               java/lang/Object\n+  #187 = Utf8               org/apache/commons/lang3/LocaleUtils$SyncAvoid\n+  #188 = Utf8               java/lang/String\n+  #189 = Utf8               java/util/Iterator\n+  #190 = Utf8               isEmpty\n+  #191 = Utf8               ()Z\n+  #192 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n+  #193 = Utf8               contains\n+  #194 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #195 = Utf8               append\n+  #196 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #197 = Utf8               toString\n+  #198 = Utf8               ()Ljava/lang/String;\n+  #199 = Utf8               (Ljava/lang/String;)V\n+  #200 = Utf8               length\n+  #201 = Utf8               ()I\n+  #202 = Utf8               charAt\n+  #203 = Utf8               (I)C\n+  #204 = Utf8               java/lang/Character\n+  #205 = Utf8               isUpperCase\n+  #206 = Utf8               (C)Z\n+  #207 = Utf8               substring\n+  #208 = Utf8               (II)Ljava/lang/String;\n+  #209 = Utf8               (I)Ljava/lang/String;\n+  #210 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #211 = Utf8               split\n+  #212 = Utf8               (Ljava/lang/String;I)[Ljava/lang/String;\n+  #213 = Utf8               isAllLowerCase\n+  #214 = Utf8               isAllUpperCase\n+  #215 = Utf8               isNumeric\n+  #216 = Utf8               (I)V\n+  #217 = Utf8               add\n+  #218 = Utf8               (Ljava/lang/Object;)Z\n+  #219 = Utf8               getVariant\n+  #220 = Utf8               getLanguage\n+  #221 = Utf8               getCountry\n+  #222 = Utf8               java/util/Collections\n+  #223 = Utf8               unmodifiableList\n+  #224 = Utf8               (Ljava/util/List;)Ljava/util/List;\n+  #225 = Utf8               access$000\n+  #226 = Utf8               access$100\n+  #227 = Utf8               emptyList\n+  #228 = Utf8               java/util/concurrent/ConcurrentMap\n+  #229 = Utf8               get\n+  #230 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #231 = Utf8               iterator\n+  #232 = Utf8               ()Ljava/util/Iterator;\n+  #233 = Utf8               hasNext\n+  #234 = Utf8               next\n+  #235 = Utf8               ()Ljava/lang/Object;\n+  #236 = Utf8               equals\n+  #237 = Utf8               putIfAbsent\n+  #238 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n {\n   private static final java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>> cLanguagesByCountry;\n     descriptor: Ljava/util/concurrent/ConcurrentMap;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     Signature: #65                          // Ljava/util/concurrent/ConcurrentMap<Ljava/lang/String;Ljava/util/List<Ljava/util/Locale;>;>;\n \n   private static final java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>> cCountriesByLanguage;\n@@ -794,37 +791,37 @@\n             9      97     2  list   Ljava/util/List<Ljava/util/Locale;>;\n       StackMapTable: number_of_entries = 3\n         frame_type = 252 /* append */\n           offset_delta = 53\n           locals = [ class java/util/List ]\n         frame_type = 29 /* same */\n         frame_type = 17 /* same */\n-    Signature: #109                         // (Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List<Ljava/util/Locale;>;\n+    Signature: #108                         // (Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List<Ljava/util/Locale;>;\n \n   public static java.util.List<java.util.Locale> availableLocaleList();\n     descriptor: ()Ljava/util/List;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: invokestatic  #41                 // Method org/apache/commons/lang3/LocaleUtils$SyncAvoid.access$000:()Ljava/util/List;\n          3: areturn\n       LineNumberTable:\n         line 254: 0\n-    Signature: #112                         // ()Ljava/util/List<Ljava/util/Locale;>;\n+    Signature: #111                         // ()Ljava/util/List<Ljava/util/Locale;>;\n \n   public static java.util.Set<java.util.Locale> availableLocaleSet();\n     descriptor: ()Ljava/util/Set;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: invokestatic  #42                 // Method org/apache/commons/lang3/LocaleUtils$SyncAvoid.access$100:()Ljava/util/Set;\n          3: areturn\n       LineNumberTable:\n         line 268: 0\n-    Signature: #115                         // ()Ljava/util/Set<Ljava/util/Locale;>;\n+    Signature: #114                         // ()Ljava/util/Set<Ljava/util/Locale;>;\n \n   public static boolean isAvailableLocale(java.util.Locale);\n     descriptor: (Ljava/util/Locale;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: invokestatic  #43                 // Method availableLocaleList:()Ljava/util/List;\n@@ -930,15 +927,15 @@\n           offset_delta = 35\n           locals = [ class java/util/List, class java/util/List, class java/util/Iterator ]\n         frame_type = 51 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 2\n         frame_type = 250 /* chop */\n           offset_delta = 28\n-    Signature: #124                         // (Ljava/lang/String;)Ljava/util/List<Ljava/util/Locale;>;\n+    Signature: #123                         // (Ljava/lang/String;)Ljava/util/List<Ljava/util/Locale;>;\n \n   public static java.util.List<java.util.Locale> countriesByLanguage(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/util/List;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=5, args_size=1\n          0: aload_0\n@@ -1034,15 +1031,15 @@\n           offset_delta = 35\n           locals = [ class java/util/List, class java/util/List, class java/util/Iterator ]\n         frame_type = 62 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 2\n         frame_type = 250 /* chop */\n           offset_delta = 28\n-    Signature: #124                         // (Ljava/lang/String;)Ljava/util/List<Ljava/util/Locale;>;\n+    Signature: #123                         // (Ljava/lang/String;)Ljava/util/List<Ljava/util/Locale;>;\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n          0: new           #55                 // class java/util/concurrent/ConcurrentHashMap\n"}]}
