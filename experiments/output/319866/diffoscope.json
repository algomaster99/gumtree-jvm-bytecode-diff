{"diffoscope-json-version": 1, "source1": "first/DoubleToDecimal.class", "source2": "second/DoubleToDecimal.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,249 +1,249 @@\n-  SHA-256 checksum c809630fabaffc8455fbffde9646a19657247368e894133c51af87cba06f9270\n+  SHA-256 checksum 777873ec4479ba65c8e285eb8cb3692b37676c88025ab76261d8615335da3af1\n   Compiled from \"DoubleToDecimal.java\"\n public final class com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #2                          // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal\n-  super_class: #65                        // java/lang/Object\n+  this_class: #3                          // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal\n+  super_class: #6                         // java/lang/Object\n   interfaces: 0, fields: 24, methods: 18, attributes: 1\n Constant pool:\n-    #1 = Class              #190          // java/lang/Double\n-    #2 = Class              #191          // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal\n-    #3 = Methodref          #65.#192      // java/lang/Object.\"<init>\":()V\n-    #4 = Fieldref           #2.#193       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.MAX_CHARS:I\n-    #5 = Fieldref           #2.#194       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.bytes:[B\n-    #6 = Methodref          #2.#192       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.\"<init>\":()V\n-    #7 = Methodref          #2.#195       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toDecimalString:(D)Ljava/lang/String;\n-    #8 = Methodref          #2.#196       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toDecimal:(D)I\n-    #9 = Methodref          #2.#197       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.charsToString:()Ljava/lang/String;\n-   #10 = String             #198          // 0.0\n-   #11 = String             #199          // -0.0\n-   #12 = String             #200          // Infinity\n-   #13 = String             #201          // -Infinity\n-   #14 = String             #202          // NaN\n-   #15 = Methodref          #1.#203       // java/lang/Double.doubleToRawLongBits:(D)J\n-   #16 = Long               4503599627370495l\n-   #18 = Fieldref           #2.#204       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.index:I\n-   #19 = Methodref          #2.#205       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.append:(I)V\n-   #20 = Long               4503599627370496l\n-   #22 = Methodref          #2.#206       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toChars:(JI)I\n-   #23 = Methodref          #2.#207       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toDecimal:(IJI)I\n-   #24 = Long               3l\n-   #26 = Long               10l\n-   #28 = Long               2l\n-   #30 = Methodref          #208.#209     // com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10pow2:(I)I\n-   #31 = Methodref          #208.#210     // com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10threeQuartersPow2:(I)I\n-   #32 = Methodref          #208.#211     // com/fasterxml/jackson/core/io/schubfach/MathUtils.flog2pow10:(I)I\n-   #33 = Methodref          #208.#212     // com/fasterxml/jackson/core/io/schubfach/MathUtils.g1:(I)J\n-   #34 = Methodref          #208.#213     // com/fasterxml/jackson/core/io/schubfach/MathUtils.g0:(I)J\n-   #35 = Methodref          #2.#214       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.rop:(JJJ)J\n-   #36 = Long               100l\n-   #38 = Long               1844674407370955168l\n-   #40 = Methodref          #208.#215     // com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n-   #41 = Long               9223372036854775807l\n-   #43 = Class              #216          // java/lang/Long\n-   #44 = Methodref          #43.#217      // java/lang/Long.numberOfLeadingZeros:(J)I\n-   #45 = Methodref          #208.#218     // com/fasterxml/jackson/core/io/schubfach/MathUtils.pow10:(I)J\n-   #46 = Long               193428131138340668l\n-   #48 = Long               100000000l\n-   #50 = Long               1441151881l\n-   #52 = Integer            100000000\n-   #53 = Methodref          #2.#219       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toChars1:(IIII)I\n-   #54 = Methodref          #2.#220       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toChars2:(IIII)I\n-   #55 = Methodref          #2.#221       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toChars3:(IIII)I\n-   #56 = Methodref          #2.#222       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.appendDigit:(I)V\n-   #57 = Methodref          #2.#223       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.y:(I)I\n-   #58 = Integer            268435455\n-   #59 = Methodref          #2.#224       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.lowDigits:(I)V\n-   #60 = Methodref          #2.#225       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.append8Digits:(I)V\n-   #61 = Methodref          #2.#226       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.exponent:(I)V\n-   #62 = Methodref          #2.#227       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.removeTrailingZeroes:()V\n-   #63 = Class              #228          // java/lang/String\n-   #64 = Methodref          #63.#229      // java/lang/String.\"<init>\":([BIII)V\n-   #65 = Class              #230          // java/lang/Object\n-   #66 = Utf8               P\n-   #67 = Utf8               I\n-   #68 = Utf8               ConstantValue\n-   #69 = Integer            53\n-   #70 = Utf8               W\n-   #71 = Integer            11\n-   #72 = Utf8               Q_MIN\n-   #73 = Integer            -1074\n-   #74 = Utf8               Q_MAX\n-   #75 = Integer            971\n-   #76 = Utf8               E_MIN\n-   #77 = Integer            -323\n-   #78 = Utf8               E_MAX\n-   #79 = Integer            309\n-   #80 = Utf8               C_TINY\n-   #81 = Utf8               J\n-   #82 = Utf8               K_MIN\n-   #83 = Integer            -324\n-   #84 = Utf8               K_MAX\n-   #85 = Integer            292\n-   #86 = Utf8               H\n-   #87 = Integer            17\n-   #88 = Utf8               C_MIN\n-   #89 = Utf8               BQ_MASK\n-   #90 = Integer            2047\n-   #91 = Utf8               T_MASK\n-   #92 = Utf8               MASK_63\n-   #93 = Utf8               MASK_28\n-   #94 = Utf8               NON_SPECIAL\n-   #95 = Integer            0\n-   #96 = Utf8               PLUS_ZERO\n-   #97 = Integer            1\n-   #98 = Utf8               MINUS_ZERO\n-   #99 = Integer            2\n-  #100 = Utf8               PLUS_INF\n-  #101 = Integer            3\n-  #102 = Utf8               MINUS_INF\n-  #103 = Integer            4\n-  #104 = Utf8               NAN\n-  #105 = Integer            5\n-  #106 = Utf8               MAX_CHARS\n-  #107 = Integer            24\n-  #108 = Utf8               bytes\n-  #109 = Utf8               [B\n-  #110 = Utf8               index\n-  #111 = Utf8               <init>\n-  #112 = Utf8               ()V\n-  #113 = Utf8               Code\n-  #114 = Utf8               LineNumberTable\n-  #115 = Utf8               LocalVariableTable\n-  #116 = Utf8               this\n-  #117 = Utf8               Lcom/fasterxml/jackson/core/io/schubfach/DoubleToDecimal;\n-  #118 = Utf8               toString\n-  #119 = Utf8               (D)Ljava/lang/String;\n-  #120 = Utf8               v\n-  #121 = Utf8               D\n-  #122 = Utf8               toDecimalString\n-  #123 = Utf8               StackMapTable\n-  #124 = Utf8               toDecimal\n-  #125 = Utf8               (D)I\n-  #126 = Utf8               f\n-  #127 = Utf8               mq\n-  #128 = Utf8               c\n-  #129 = Utf8               bits\n-  #130 = Utf8               t\n-  #131 = Utf8               bq\n-  #132 = Utf8               (IJI)I\n-  #133 = Utf8               cbl\n-  #134 = Utf8               k\n-  #135 = Utf8               sp10\n-  #136 = Utf8               tp10\n-  #137 = Utf8               upin\n-  #138 = Utf8               Z\n-  #139 = Utf8               wpin\n-  #140 = Utf8               q\n-  #141 = Utf8               dk\n-  #142 = Utf8               out\n-  #143 = Utf8               cb\n-  #144 = Utf8               cbr\n-  #145 = Utf8               h\n-  #146 = Utf8               g1\n-  #147 = Utf8               g0\n-  #148 = Utf8               vb\n-  #149 = Utf8               vbl\n-  #150 = Utf8               vbr\n-  #151 = Utf8               s\n-  #152 = Utf8               uin\n-  #153 = Utf8               win\n-  #154 = Utf8               cmp\n-  #155 = Utf8               rop\n-  #156 = Utf8               (JJJ)J\n-  #157 = Utf8               cp\n-  #158 = Utf8               x1\n-  #159 = Utf8               y0\n-  #160 = Utf8               y1\n-  #161 = Utf8               z\n-  #162 = Utf8               vbp\n-  #163 = Utf8               toChars\n-  #164 = Utf8               (JI)I\n-  #165 = Utf8               e\n-  #166 = Utf8               len\n-  #167 = Utf8               hm\n-  #168 = Utf8               l\n-  #169 = Utf8               m\n-  #170 = Utf8               toChars1\n-  #171 = Utf8               (IIII)I\n-  #172 = Utf8               y\n-  #173 = Utf8               i\n-  #174 = Utf8               toChars2\n-  #175 = Utf8               toChars3\n-  #176 = Utf8               lowDigits\n-  #177 = Utf8               (I)V\n-  #178 = Utf8               append8Digits\n-  #179 = Utf8               removeTrailingZeroes\n-  #180 = Utf8               (I)I\n-  #181 = Utf8               a\n-  #182 = Utf8               exponent\n-  #183 = Utf8               d\n-  #184 = Utf8               append\n-  #185 = Utf8               appendDigit\n-  #186 = Utf8               charsToString\n-  #187 = Utf8               ()Ljava/lang/String;\n-  #188 = Utf8               SourceFile\n-  #189 = Utf8               DoubleToDecimal.java\n-  #190 = Utf8               java/lang/Double\n-  #191 = Utf8               com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal\n-  #192 = NameAndType        #111:#112     // \"<init>\":()V\n-  #193 = NameAndType        #106:#67      // MAX_CHARS:I\n-  #194 = NameAndType        #108:#109     // bytes:[B\n-  #195 = NameAndType        #122:#119     // toDecimalString:(D)Ljava/lang/String;\n-  #196 = NameAndType        #124:#125     // toDecimal:(D)I\n-  #197 = NameAndType        #186:#187     // charsToString:()Ljava/lang/String;\n-  #198 = Utf8               0.0\n-  #199 = Utf8               -0.0\n-  #200 = Utf8               Infinity\n-  #201 = Utf8               -Infinity\n-  #202 = Utf8               NaN\n-  #203 = NameAndType        #231:#232     // doubleToRawLongBits:(D)J\n-  #204 = NameAndType        #110:#67      // index:I\n-  #205 = NameAndType        #184:#177     // append:(I)V\n-  #206 = NameAndType        #163:#164     // toChars:(JI)I\n-  #207 = NameAndType        #124:#132     // toDecimal:(IJI)I\n-  #208 = Class              #233          // com/fasterxml/jackson/core/io/schubfach/MathUtils\n-  #209 = NameAndType        #234:#180     // flog10pow2:(I)I\n-  #210 = NameAndType        #235:#180     // flog10threeQuartersPow2:(I)I\n-  #211 = NameAndType        #236:#180     // flog2pow10:(I)I\n-  #212 = NameAndType        #146:#237     // g1:(I)J\n-  #213 = NameAndType        #147:#237     // g0:(I)J\n-  #214 = NameAndType        #155:#156     // rop:(JJJ)J\n-  #215 = NameAndType        #238:#239     // multiplyHigh:(JJ)J\n-  #216 = Utf8               java/lang/Long\n-  #217 = NameAndType        #240:#241     // numberOfLeadingZeros:(J)I\n-  #218 = NameAndType        #242:#237     // pow10:(I)J\n-  #219 = NameAndType        #170:#171     // toChars1:(IIII)I\n-  #220 = NameAndType        #174:#171     // toChars2:(IIII)I\n-  #221 = NameAndType        #175:#171     // toChars3:(IIII)I\n-  #222 = NameAndType        #185:#177     // appendDigit:(I)V\n-  #223 = NameAndType        #172:#180     // y:(I)I\n-  #224 = NameAndType        #176:#177     // lowDigits:(I)V\n-  #225 = NameAndType        #178:#177     // append8Digits:(I)V\n-  #226 = NameAndType        #182:#177     // exponent:(I)V\n-  #227 = NameAndType        #179:#112     // removeTrailingZeroes:()V\n-  #228 = Utf8               java/lang/String\n-  #229 = NameAndType        #111:#243     // \"<init>\":([BIII)V\n-  #230 = Utf8               java/lang/Object\n-  #231 = Utf8               doubleToRawLongBits\n-  #232 = Utf8               (D)J\n-  #233 = Utf8               com/fasterxml/jackson/core/io/schubfach/MathUtils\n-  #234 = Utf8               flog10pow2\n-  #235 = Utf8               flog10threeQuartersPow2\n-  #236 = Utf8               flog2pow10\n-  #237 = Utf8               (I)J\n-  #238 = Utf8               multiplyHigh\n-  #239 = Utf8               (JJ)J\n-  #240 = Utf8               numberOfLeadingZeros\n-  #241 = Utf8               (J)I\n-  #242 = Utf8               pow10\n-  #243 = Utf8               ([BIII)V\n+    #1 = Class              #2            // java/lang/Double\n+    #2 = Utf8               java/lang/Double\n+    #3 = Class              #4            // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal\n+    #4 = Utf8               com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal\n+    #5 = Methodref          #6.#7         // java/lang/Object.\"<init>\":()V\n+    #6 = Class              #8            // java/lang/Object\n+    #7 = NameAndType        #9:#10        // \"<init>\":()V\n+    #8 = Utf8               java/lang/Object\n+    #9 = Utf8               <init>\n+   #10 = Utf8               ()V\n+   #11 = Fieldref           #3.#12        // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.MAX_CHARS:I\n+   #12 = NameAndType        #13:#14       // MAX_CHARS:I\n+   #13 = Utf8               MAX_CHARS\n+   #14 = Utf8               I\n+   #15 = Fieldref           #3.#16        // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.bytes:[B\n+   #16 = NameAndType        #17:#18       // bytes:[B\n+   #17 = Utf8               bytes\n+   #18 = Utf8               [B\n+   #19 = Methodref          #3.#7         // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.\"<init>\":()V\n+   #20 = Methodref          #3.#21        // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toDecimalString:(D)Ljava/lang/String;\n+   #21 = NameAndType        #22:#23       // toDecimalString:(D)Ljava/lang/String;\n+   #22 = Utf8               toDecimalString\n+   #23 = Utf8               (D)Ljava/lang/String;\n+   #24 = Methodref          #3.#25        // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toDecimal:(D)I\n+   #25 = NameAndType        #26:#27       // toDecimal:(D)I\n+   #26 = Utf8               toDecimal\n+   #27 = Utf8               (D)I\n+   #28 = Methodref          #3.#29        // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.charsToString:()Ljava/lang/String;\n+   #29 = NameAndType        #30:#31       // charsToString:()Ljava/lang/String;\n+   #30 = Utf8               charsToString\n+   #31 = Utf8               ()Ljava/lang/String;\n+   #32 = String             #33           // 0.0\n+   #33 = Utf8               0.0\n+   #34 = String             #35           // -0.0\n+   #35 = Utf8               -0.0\n+   #36 = String             #37           // Infinity\n+   #37 = Utf8               Infinity\n+   #38 = String             #39           // -Infinity\n+   #39 = Utf8               -Infinity\n+   #40 = String             #41           // NaN\n+   #41 = Utf8               NaN\n+   #42 = Methodref          #1.#43        // java/lang/Double.doubleToRawLongBits:(D)J\n+   #43 = NameAndType        #44:#45       // doubleToRawLongBits:(D)J\n+   #44 = Utf8               doubleToRawLongBits\n+   #45 = Utf8               (D)J\n+   #46 = Long               4503599627370495l\n+   #48 = Fieldref           #3.#49        // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.index:I\n+   #49 = NameAndType        #50:#14       // index:I\n+   #50 = Utf8               index\n+   #51 = Methodref          #3.#52        // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.append:(I)V\n+   #52 = NameAndType        #53:#54       // append:(I)V\n+   #53 = Utf8               append\n+   #54 = Utf8               (I)V\n+   #55 = Long               4503599627370496l\n+   #57 = Methodref          #3.#58        // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toChars:(JI)I\n+   #58 = NameAndType        #59:#60       // toChars:(JI)I\n+   #59 = Utf8               toChars\n+   #60 = Utf8               (JI)I\n+   #61 = Methodref          #3.#62        // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toDecimal:(IJI)I\n+   #62 = NameAndType        #26:#63       // toDecimal:(IJI)I\n+   #63 = Utf8               (IJI)I\n+   #64 = Long               3l\n+   #66 = Long               10l\n+   #68 = Long               2l\n+   #70 = Methodref          #71.#72       // com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10pow2:(I)I\n+   #71 = Class              #73           // com/fasterxml/jackson/core/io/schubfach/MathUtils\n+   #72 = NameAndType        #74:#75       // flog10pow2:(I)I\n+   #73 = Utf8               com/fasterxml/jackson/core/io/schubfach/MathUtils\n+   #74 = Utf8               flog10pow2\n+   #75 = Utf8               (I)I\n+   #76 = Methodref          #71.#77       // com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10threeQuartersPow2:(I)I\n+   #77 = NameAndType        #78:#75       // flog10threeQuartersPow2:(I)I\n+   #78 = Utf8               flog10threeQuartersPow2\n+   #79 = Methodref          #71.#80       // com/fasterxml/jackson/core/io/schubfach/MathUtils.flog2pow10:(I)I\n+   #80 = NameAndType        #81:#75       // flog2pow10:(I)I\n+   #81 = Utf8               flog2pow10\n+   #82 = Methodref          #71.#83       // com/fasterxml/jackson/core/io/schubfach/MathUtils.g1:(I)J\n+   #83 = NameAndType        #84:#85       // g1:(I)J\n+   #84 = Utf8               g1\n+   #85 = Utf8               (I)J\n+   #86 = Methodref          #71.#87       // com/fasterxml/jackson/core/io/schubfach/MathUtils.g0:(I)J\n+   #87 = NameAndType        #88:#85       // g0:(I)J\n+   #88 = Utf8               g0\n+   #89 = Methodref          #3.#90        // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.rop:(JJJ)J\n+   #90 = NameAndType        #91:#92       // rop:(JJJ)J\n+   #91 = Utf8               rop\n+   #92 = Utf8               (JJJ)J\n+   #93 = Long               100l\n+   #95 = Long               1844674407370955168l\n+   #97 = Methodref          #71.#98       // com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n+   #98 = NameAndType        #99:#100      // multiplyHigh:(JJ)J\n+   #99 = Utf8               multiplyHigh\n+  #100 = Utf8               (JJ)J\n+  #101 = Long               9223372036854775807l\n+  #103 = Class              #104          // java/lang/Long\n+  #104 = Utf8               java/lang/Long\n+  #105 = Methodref          #103.#106     // java/lang/Long.numberOfLeadingZeros:(J)I\n+  #106 = NameAndType        #107:#108     // numberOfLeadingZeros:(J)I\n+  #107 = Utf8               numberOfLeadingZeros\n+  #108 = Utf8               (J)I\n+  #109 = Methodref          #71.#110      // com/fasterxml/jackson/core/io/schubfach/MathUtils.pow10:(I)J\n+  #110 = NameAndType        #111:#85      // pow10:(I)J\n+  #111 = Utf8               pow10\n+  #112 = Long               193428131138340668l\n+  #114 = Long               100000000l\n+  #116 = Long               1441151881l\n+  #118 = Integer            100000000\n+  #119 = Methodref          #3.#120       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toChars1:(IIII)I\n+  #120 = NameAndType        #121:#122     // toChars1:(IIII)I\n+  #121 = Utf8               toChars1\n+  #122 = Utf8               (IIII)I\n+  #123 = Methodref          #3.#124       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toChars2:(IIII)I\n+  #124 = NameAndType        #125:#122     // toChars2:(IIII)I\n+  #125 = Utf8               toChars2\n+  #126 = Methodref          #3.#127       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toChars3:(IIII)I\n+  #127 = NameAndType        #128:#122     // toChars3:(IIII)I\n+  #128 = Utf8               toChars3\n+  #129 = Methodref          #3.#130       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.appendDigit:(I)V\n+  #130 = NameAndType        #131:#54      // appendDigit:(I)V\n+  #131 = Utf8               appendDigit\n+  #132 = Methodref          #3.#133       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.y:(I)I\n+  #133 = NameAndType        #134:#75      // y:(I)I\n+  #134 = Utf8               y\n+  #135 = Integer            268435455\n+  #136 = Methodref          #3.#137       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.lowDigits:(I)V\n+  #137 = NameAndType        #138:#54      // lowDigits:(I)V\n+  #138 = Utf8               lowDigits\n+  #139 = Methodref          #3.#140       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.append8Digits:(I)V\n+  #140 = NameAndType        #141:#54      // append8Digits:(I)V\n+  #141 = Utf8               append8Digits\n+  #142 = Methodref          #3.#143       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.exponent:(I)V\n+  #143 = NameAndType        #144:#54      // exponent:(I)V\n+  #144 = Utf8               exponent\n+  #145 = Methodref          #3.#146       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.removeTrailingZeroes:()V\n+  #146 = NameAndType        #147:#10      // removeTrailingZeroes:()V\n+  #147 = Utf8               removeTrailingZeroes\n+  #148 = Class              #149          // java/lang/String\n+  #149 = Utf8               java/lang/String\n+  #150 = Methodref          #148.#151     // java/lang/String.\"<init>\":([BIII)V\n+  #151 = NameAndType        #9:#152       // \"<init>\":([BIII)V\n+  #152 = Utf8               ([BIII)V\n+  #153 = Utf8               P\n+  #154 = Utf8               ConstantValue\n+  #155 = Integer            53\n+  #156 = Utf8               W\n+  #157 = Integer            11\n+  #158 = Utf8               Q_MIN\n+  #159 = Integer            -1074\n+  #160 = Utf8               Q_MAX\n+  #161 = Integer            971\n+  #162 = Utf8               E_MIN\n+  #163 = Integer            -323\n+  #164 = Utf8               E_MAX\n+  #165 = Integer            309\n+  #166 = Utf8               C_TINY\n+  #167 = Utf8               J\n+  #168 = Utf8               K_MIN\n+  #169 = Integer            -324\n+  #170 = Utf8               K_MAX\n+  #171 = Integer            292\n+  #172 = Utf8               H\n+  #173 = Integer            17\n+  #174 = Utf8               C_MIN\n+  #175 = Utf8               BQ_MASK\n+  #176 = Integer            2047\n+  #177 = Utf8               T_MASK\n+  #178 = Utf8               MASK_63\n+  #179 = Utf8               MASK_28\n+  #180 = Utf8               NON_SPECIAL\n+  #181 = Integer            0\n+  #182 = Utf8               PLUS_ZERO\n+  #183 = Integer            1\n+  #184 = Utf8               MINUS_ZERO\n+  #185 = Integer            2\n+  #186 = Utf8               PLUS_INF\n+  #187 = Integer            3\n+  #188 = Utf8               MINUS_INF\n+  #189 = Integer            4\n+  #190 = Utf8               NAN\n+  #191 = Integer            5\n+  #192 = Integer            24\n+  #193 = Utf8               Code\n+  #194 = Utf8               LineNumberTable\n+  #195 = Utf8               LocalVariableTable\n+  #196 = Utf8               this\n+  #197 = Utf8               Lcom/fasterxml/jackson/core/io/schubfach/DoubleToDecimal;\n+  #198 = Utf8               toString\n+  #199 = Utf8               v\n+  #200 = Utf8               D\n+  #201 = Utf8               StackMapTable\n+  #202 = Utf8               f\n+  #203 = Utf8               mq\n+  #204 = Utf8               c\n+  #205 = Utf8               bits\n+  #206 = Utf8               t\n+  #207 = Utf8               bq\n+  #208 = Utf8               cbl\n+  #209 = Utf8               k\n+  #210 = Utf8               sp10\n+  #211 = Utf8               tp10\n+  #212 = Utf8               upin\n+  #213 = Utf8               Z\n+  #214 = Utf8               wpin\n+  #215 = Utf8               q\n+  #216 = Utf8               dk\n+  #217 = Utf8               out\n+  #218 = Utf8               cb\n+  #219 = Utf8               cbr\n+  #220 = Utf8               h\n+  #221 = Utf8               vb\n+  #222 = Utf8               vbl\n+  #223 = Utf8               vbr\n+  #224 = Utf8               s\n+  #225 = Utf8               uin\n+  #226 = Utf8               win\n+  #227 = Utf8               cmp\n+  #228 = Utf8               cp\n+  #229 = Utf8               x1\n+  #230 = Utf8               y0\n+  #231 = Utf8               y1\n+  #232 = Utf8               z\n+  #233 = Utf8               vbp\n+  #234 = Utf8               e\n+  #235 = Utf8               len\n+  #236 = Utf8               hm\n+  #237 = Utf8               l\n+  #238 = Utf8               m\n+  #239 = Utf8               i\n+  #240 = Utf8               a\n+  #241 = Utf8               d\n+  #242 = Utf8               SourceFile\n+  #243 = Utf8               DoubleToDecimal.java\n {\n   static final int P = 53;\n     descriptor: I\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n     ConstantValue: int 53\n \n   private static final int W = 11;\n@@ -361,22 +361,22 @@\n \n   private com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #3                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #5                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: bipush        24\n-         7: putfield      #4                  // Field MAX_CHARS:I\n+         7: putfield      #11                 // Field MAX_CHARS:I\n         10: aload_0\n         11: bipush        24\n         13: newarray       byte\n-        15: putfield      #5                  // Field bytes:[B\n+        15: putfield      #15                 // Field bytes:[B\n         18: return\n       LineNumberTable:\n         line 123: 0\n         line 115: 4\n         line 118: 10\n         line 124: 18\n       LocalVariableTable:\n@@ -384,54 +384,54 @@\n             0      19     0  this   Lcom/fasterxml/jackson/core/io/schubfach/DoubleToDecimal;\n \n   public static java.lang.String toString(double);\n     descriptor: (D)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=1\n-         0: new           #2                  // class com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal\n+         0: new           #3                  // class com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal\n          3: dup\n-         4: invokespecial #6                  // Method \"<init>\":()V\n+         4: invokespecial #19                 // Method \"<init>\":()V\n          7: dload_0\n-         8: invokespecial #7                  // Method toDecimalString:(D)Ljava/lang/String;\n+         8: invokespecial #20                 // Method toDecimalString:(D)Ljava/lang/String;\n         11: areturn\n       LineNumberTable:\n         line 240: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0     v   D\n \n   private java.lang.String toDecimalString(double);\n     descriptor: (D)Ljava/lang/String;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: dload_1\n-         2: invokespecial #8                  // Method toDecimal:(D)I\n+         2: invokespecial #24                 // Method toDecimal:(D)I\n          5: tableswitch   { // 0 to 4\n                        0: 40\n                        1: 45\n                        2: 48\n                        3: 51\n                        4: 54\n                  default: 57\n             }\n         40: aload_0\n-        41: invokespecial #9                  // Method charsToString:()Ljava/lang/String;\n+        41: invokespecial #28                 // Method charsToString:()Ljava/lang/String;\n         44: areturn\n-        45: ldc           #10                 // String 0.0\n+        45: ldc           #32                 // String 0.0\n         47: areturn\n-        48: ldc           #11                 // String -0.0\n+        48: ldc           #34                 // String -0.0\n         50: areturn\n-        51: ldc           #12                 // String Infinity\n+        51: ldc           #36                 // String Infinity\n         53: areturn\n-        54: ldc           #13                 // String -Infinity\n+        54: ldc           #38                 // String -Infinity\n         56: areturn\n-        57: ldc           #14                 // String NaN\n+        57: ldc           #40                 // String NaN\n         59: areturn\n       LineNumberTable:\n         line 244: 0\n         line 245: 40\n         line 246: 45\n         line 247: 48\n         line 248: 51\n@@ -451,47 +451,47 @@\n \n   private int toDecimal(double);\n     descriptor: (D)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=6, locals=13, args_size=2\n          0: dload_1\n-         1: invokestatic  #15                 // Method java/lang/Double.doubleToRawLongBits:(D)J\n+         1: invokestatic  #42                 // Method java/lang/Double.doubleToRawLongBits:(D)J\n          4: lstore_3\n          5: lload_3\n-         6: ldc2_w        #16                 // long 4503599627370495l\n+         6: ldc2_w        #46                 // long 4503599627370495l\n          9: land\n         10: lstore        5\n         12: lload_3\n         13: bipush        52\n         15: lushr\n         16: l2i\n         17: sipush        2047\n         20: iand\n         21: istore        7\n         23: iload         7\n         25: sipush        2047\n         28: if_icmpge     189\n         31: aload_0\n         32: iconst_m1\n-        33: putfield      #18                 // Field index:I\n+        33: putfield      #48                 // Field index:I\n         36: lload_3\n         37: lconst_0\n         38: lcmp\n         39: ifge          48\n         42: aload_0\n         43: bipush        45\n-        45: invokespecial #19                 // Method append:(I)V\n+        45: invokespecial #51                 // Method append:(I)V\n         48: iload         7\n         50: ifeq          133\n         53: sipush        1075\n         56: iload         7\n         58: isub\n         59: istore        8\n-        61: ldc2_w        #20                 // long 4503599627370496l\n+        61: ldc2_w        #55                 // long 4503599627370496l\n         64: lload         5\n         66: lor\n         67: lstore        9\n         69: iconst_0\n         70: iload         8\n         72: if_icmpge     79\n         75: iconst_1\n@@ -514,44 +514,44 @@\n        107: lshl\n        108: lload         9\n        110: lcmp\n        111: ifne          122\n        114: aload_0\n        115: lload         11\n        117: iconst_0\n-       118: invokespecial #22                 // Method toChars:(JI)I\n+       118: invokespecial #57                 // Method toChars:(JI)I\n        121: ireturn\n        122: aload_0\n        123: iload         8\n        125: ineg\n        126: lload         9\n        128: iconst_0\n-       129: invokespecial #23                 // Method toDecimal:(IJI)I\n+       129: invokespecial #61                 // Method toDecimal:(IJI)I\n        132: ireturn\n        133: lload         5\n        135: lconst_0\n        136: lcmp\n        137: ifeq          177\n        140: lload         5\n-       142: ldc2_w        #24                 // long 3l\n+       142: ldc2_w        #64                 // long 3l\n        145: lcmp\n        146: ifge          166\n        149: aload_0\n        150: sipush        -1074\n-       153: ldc2_w        #26                 // long 10l\n+       153: ldc2_w        #66                 // long 10l\n        156: lload         5\n        158: lmul\n        159: iconst_m1\n-       160: invokespecial #23                 // Method toDecimal:(IJI)I\n+       160: invokespecial #61                 // Method toDecimal:(IJI)I\n        163: goto          176\n        166: aload_0\n        167: sipush        -1074\n        170: lload         5\n        172: iconst_0\n-       173: invokespecial #23                 // Method toDecimal:(IJI)I\n+       173: invokespecial #61                 // Method toDecimal:(IJI)I\n        176: ireturn\n        177: lload_3\n        178: lconst_0\n        179: lcmp\n        180: ifne          187\n        183: iconst_1\n        184: goto          188\n@@ -648,98 +648,98 @@\n          3: iand\n          4: istore        5\n          6: lload_2\n          7: iconst_2\n          8: lshl\n          9: lstore        6\n         11: lload         6\n-        13: ldc2_w        #28                 // long 2l\n+        13: ldc2_w        #68                 // long 2l\n         16: ladd\n         17: lstore        8\n         19: lload_2\n-        20: ldc2_w        #20                 // long 4503599627370496l\n+        20: ldc2_w        #55                 // long 4503599627370496l\n         23: lcmp\n         24: ifeq          31\n         27: iconst_1\n         28: goto          32\n         31: iconst_0\n         32: iload_1\n         33: sipush        -1074\n         36: if_icmpne     43\n         39: iconst_1\n         40: goto          44\n         43: iconst_0\n         44: ior\n         45: ifeq          65\n         48: lload         6\n-        50: ldc2_w        #28                 // long 2l\n+        50: ldc2_w        #68                 // long 2l\n         53: lsub\n         54: lstore        10\n         56: iload_1\n-        57: invokestatic  #30                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10pow2:(I)I\n+        57: invokestatic  #70                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10pow2:(I)I\n         60: istore        12\n         62: goto          77\n         65: lload         6\n         67: lconst_1\n         68: lsub\n         69: lstore        10\n         71: iload_1\n-        72: invokestatic  #31                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10threeQuartersPow2:(I)I\n+        72: invokestatic  #76                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10threeQuartersPow2:(I)I\n         75: istore        12\n         77: iload_1\n         78: iload         12\n         80: ineg\n-        81: invokestatic  #32                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog2pow10:(I)I\n+        81: invokestatic  #79                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog2pow10:(I)I\n         84: iadd\n         85: iconst_2\n         86: iadd\n         87: istore        13\n         89: iload         12\n-        91: invokestatic  #33                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.g1:(I)J\n+        91: invokestatic  #82                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.g1:(I)J\n         94: lstore        14\n         96: iload         12\n-        98: invokestatic  #34                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.g0:(I)J\n+        98: invokestatic  #86                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.g0:(I)J\n        101: lstore        16\n        103: lload         14\n        105: lload         16\n        107: lload         6\n        109: iload         13\n        111: lshl\n-       112: invokestatic  #35                 // Method rop:(JJJ)J\n+       112: invokestatic  #89                 // Method rop:(JJJ)J\n        115: lstore        18\n        117: lload         14\n        119: lload         16\n        121: lload         10\n        123: iload         13\n        125: lshl\n-       126: invokestatic  #35                 // Method rop:(JJJ)J\n+       126: invokestatic  #89                 // Method rop:(JJJ)J\n        129: lstore        20\n        131: lload         14\n        133: lload         16\n        135: lload         8\n        137: iload         13\n        139: lshl\n-       140: invokestatic  #35                 // Method rop:(JJJ)J\n+       140: invokestatic  #89                 // Method rop:(JJJ)J\n        143: lstore        22\n        145: lload         18\n        147: iconst_2\n        148: lshr\n        149: lstore        24\n        151: lload         24\n-       153: ldc2_w        #36                 // long 100l\n+       153: ldc2_w        #93                 // long 100l\n        156: lcmp\n        157: iflt          250\n-       160: ldc2_w        #26                 // long 10l\n+       160: ldc2_w        #66                 // long 10l\n        163: lload         24\n-       165: ldc2_w        #38                 // long 1844674407370955168l\n-       168: invokestatic  #40                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n+       165: ldc2_w        #95                 // long 1844674407370955168l\n+       168: invokestatic  #97                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n        171: lmul\n        172: lstore        26\n        174: lload         26\n-       176: ldc2_w        #26                 // long 10l\n+       176: ldc2_w        #66                 // long 10l\n        179: ladd\n        180: lstore        28\n        182: lload         20\n        184: iload         5\n        186: i2l\n        187: ladd\n        188: lload         26\n@@ -770,15 +770,15 @@\n        231: aload_0\n        232: iload         30\n        234: ifeq          242\n        237: lload         26\n        239: goto          244\n        242: lload         28\n        244: iload         12\n-       246: invokespecial #22                 // Method toChars:(JI)I\n+       246: invokespecial #57                 // Method toChars:(JI)I\n        249: ireturn\n        250: lload         24\n        252: lconst_1\n        253: ladd\n        254: lstore        26\n        256: lload         20\n        258: iload         5\n@@ -814,15 +814,15 @@\n        308: ifeq          316\n        311: lload         24\n        313: goto          318\n        316: lload         26\n        318: iload         12\n        320: iload         4\n        322: iadd\n-       323: invokespecial #22                 // Method toChars:(JI)I\n+       323: invokespecial #57                 // Method toChars:(JI)I\n        326: ireturn\n        327: lload         18\n        329: lload         24\n        331: lload         26\n        333: ladd\n        334: iconst_1\n        335: lshl\n@@ -845,15 +845,15 @@\n        360: ifne          368\n        363: lload         24\n        365: goto          370\n        368: lload         26\n        370: iload         12\n        372: iload         4\n        374: iadd\n-       375: invokespecial #22                 // Method toChars:(JI)I\n+       375: invokespecial #57                 // Method toChars:(JI)I\n        378: ireturn\n       LineNumberTable:\n         line 325: 0\n         line 326: 6\n         line 327: 11\n         line 335: 19\n         line 337: 48\n@@ -981,23 +981,23 @@\n   private static long rop(long, long, long);\n     descriptor: (JJJ)J\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=6, locals=16, args_size=3\n          0: lload_2\n          1: lload         4\n-         3: invokestatic  #40                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n+         3: invokestatic  #97                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n          6: lstore        6\n          8: lload_0\n          9: lload         4\n         11: lmul\n         12: lstore        8\n         14: lload_0\n         15: lload         4\n-        17: invokestatic  #40                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n+        17: invokestatic  #97                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n         20: lstore        10\n         22: lload         8\n         24: iconst_1\n         25: lushr\n         26: lload         6\n         28: ladd\n         29: lstore        12\n@@ -1005,17 +1005,17 @@\n         33: lload         12\n         35: bipush        63\n         37: lushr\n         38: ladd\n         39: lstore        14\n         41: lload         14\n         43: lload         12\n-        45: ldc2_w        #41                 // long 9223372036854775807l\n+        45: ldc2_w        #101                // long 9223372036854775807l\n         48: land\n-        49: ldc2_w        #41                 // long 9223372036854775807l\n+        49: ldc2_w        #101                // long 9223372036854775807l\n         52: ladd\n         53: bipush        63\n         55: lushr\n         56: lor\n         57: lreturn\n       LineNumberTable:\n         line 402: 0\n@@ -1038,57 +1038,57 @@\n   private int toChars(long, int);\n     descriptor: (JI)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=6, locals=10, args_size=3\n          0: bipush        64\n          2: lload_1\n-         3: invokestatic  #44                 // Method java/lang/Long.numberOfLeadingZeros:(J)I\n+         3: invokestatic  #105                // Method java/lang/Long.numberOfLeadingZeros:(J)I\n          6: isub\n-         7: invokestatic  #30                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10pow2:(I)I\n+         7: invokestatic  #70                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10pow2:(I)I\n         10: istore        4\n         12: lload_1\n         13: iload         4\n-        15: invokestatic  #45                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.pow10:(I)J\n+        15: invokestatic  #109                // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.pow10:(I)J\n         18: lcmp\n         19: iflt          25\n         22: iinc          4, 1\n         25: lload_1\n         26: bipush        17\n         28: iload         4\n         30: isub\n-        31: invokestatic  #45                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.pow10:(I)J\n+        31: invokestatic  #109                // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.pow10:(I)J\n         34: lmul\n         35: lstore_1\n         36: iload_3\n         37: iload         4\n         39: iadd\n         40: istore_3\n         41: lload_1\n-        42: ldc2_w        #46                 // long 193428131138340668l\n-        45: invokestatic  #40                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n+        42: ldc2_w        #112                // long 193428131138340668l\n+        45: invokestatic  #97                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n         48: bipush        20\n         50: lushr\n         51: lstore        5\n         53: lload_1\n-        54: ldc2_w        #48                 // long 100000000l\n+        54: ldc2_w        #114                // long 100000000l\n         57: lload         5\n         59: lmul\n         60: lsub\n         61: l2i\n         62: istore        7\n         64: lload         5\n-        66: ldc2_w        #50                 // long 1441151881l\n+        66: ldc2_w        #116                // long 1441151881l\n         69: lmul\n         70: bipush        57\n         72: lushr\n         73: l2i\n         74: istore        8\n         76: lload         5\n-        78: ldc           #52                 // int 100000000\n+        78: ldc           #118                // int 100000000\n         80: iload         8\n         82: imul\n         83: i2l\n         84: lsub\n         85: l2i\n         86: istore        9\n         88: iconst_0\n@@ -1098,34 +1098,34 @@\n         94: bipush        7\n         96: if_icmpgt     111\n         99: aload_0\n        100: iload         8\n        102: iload         9\n        104: iload         7\n        106: iload_3\n-       107: invokespecial #53                 // Method toChars1:(IIII)I\n+       107: invokespecial #119                // Method toChars1:(IIII)I\n        110: ireturn\n        111: bipush        -3\n        113: iload_3\n        114: if_icmpge     133\n        117: iload_3\n        118: ifgt          133\n        121: aload_0\n        122: iload         8\n        124: iload         9\n        126: iload         7\n        128: iload_3\n-       129: invokespecial #54                 // Method toChars2:(IIII)I\n+       129: invokespecial #123                // Method toChars2:(IIII)I\n        132: ireturn\n        133: aload_0\n        134: iload         8\n        136: iload         9\n        138: iload         7\n        140: iload_3\n-       141: invokespecial #55                 // Method toChars3:(IIII)I\n+       141: invokespecial #126                // Method toChars3:(IIII)I\n        144: ireturn\n       LineNumberTable:\n         line 420: 0\n         line 421: 12\n         line 422: 22\n         line 431: 25\n         line 432: 36\n@@ -1161,63 +1161,63 @@\n   private int toChars1(int, int, int, int);\n     descriptor: (IIII)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=8, args_size=5\n          0: aload_0\n          1: iload_1\n-         2: invokespecial #56                 // Method appendDigit:(I)V\n+         2: invokespecial #129                // Method appendDigit:(I)V\n          5: aload_0\n          6: iload_2\n-         7: invokespecial #57                 // Method y:(I)I\n+         7: invokespecial #132                // Method y:(I)I\n         10: istore        5\n         12: iconst_1\n         13: istore        7\n         15: iload         7\n         17: iload         4\n         19: if_icmpge     51\n         22: bipush        10\n         24: iload         5\n         26: imul\n         27: istore        6\n         29: aload_0\n         30: iload         6\n         32: bipush        28\n         34: iushr\n-        35: invokespecial #56                 // Method appendDigit:(I)V\n+        35: invokespecial #129                // Method appendDigit:(I)V\n         38: iload         6\n-        40: ldc           #58                 // int 268435455\n+        40: ldc           #135                // int 268435455\n         42: iand\n         43: istore        5\n         45: iinc          7, 1\n         48: goto          15\n         51: aload_0\n         52: bipush        46\n-        54: invokespecial #19                 // Method append:(I)V\n+        54: invokespecial #51                 // Method append:(I)V\n         57: iload         7\n         59: bipush        8\n         61: if_icmpgt     93\n         64: bipush        10\n         66: iload         5\n         68: imul\n         69: istore        6\n         71: aload_0\n         72: iload         6\n         74: bipush        28\n         76: iushr\n-        77: invokespecial #56                 // Method appendDigit:(I)V\n+        77: invokespecial #129                // Method appendDigit:(I)V\n         80: iload         6\n-        82: ldc           #58                 // int 268435455\n+        82: ldc           #135                // int 268435455\n         84: iand\n         85: istore        5\n         87: iinc          7, 1\n         90: goto          57\n         93: aload_0\n         94: iload_3\n-        95: invokespecial #59                 // Method lowDigits:(I)V\n+        95: invokespecial #136                // Method lowDigits:(I)V\n         98: iconst_0\n         99: ireturn\n       LineNumberTable:\n         line 468: 0\n         line 469: 5\n         line 471: 12\n         line 472: 15\n@@ -1255,34 +1255,34 @@\n   private int toChars2(int, int, int, int);\n     descriptor: (IIII)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=5, args_size=5\n          0: aload_0\n          1: iconst_0\n-         2: invokespecial #56                 // Method appendDigit:(I)V\n+         2: invokespecial #129                // Method appendDigit:(I)V\n          5: aload_0\n          6: bipush        46\n-         8: invokespecial #19                 // Method append:(I)V\n+         8: invokespecial #51                 // Method append:(I)V\n         11: iload         4\n         13: ifge          27\n         16: aload_0\n         17: iconst_0\n-        18: invokespecial #56                 // Method appendDigit:(I)V\n+        18: invokespecial #129                // Method appendDigit:(I)V\n         21: iinc          4, 1\n         24: goto          11\n         27: aload_0\n         28: iload_1\n-        29: invokespecial #56                 // Method appendDigit:(I)V\n+        29: invokespecial #129                // Method appendDigit:(I)V\n         32: aload_0\n         33: iload_2\n-        34: invokespecial #60                 // Method append8Digits:(I)V\n+        34: invokespecial #139                // Method append8Digits:(I)V\n         37: aload_0\n         38: iload_3\n-        39: invokespecial #59                 // Method lowDigits:(I)V\n+        39: invokespecial #136                // Method lowDigits:(I)V\n         42: iconst_0\n         43: ireturn\n       LineNumberTable:\n         line 489: 0\n         line 490: 5\n         line 491: 11\n         line 492: 16\n@@ -1305,29 +1305,29 @@\n   private int toChars3(int, int, int, int);\n     descriptor: (IIII)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=5, args_size=5\n          0: aload_0\n          1: iload_1\n-         2: invokespecial #56                 // Method appendDigit:(I)V\n+         2: invokespecial #129                // Method appendDigit:(I)V\n          5: aload_0\n          6: bipush        46\n-         8: invokespecial #19                 // Method append:(I)V\n+         8: invokespecial #51                 // Method append:(I)V\n         11: aload_0\n         12: iload_2\n-        13: invokespecial #60                 // Method append8Digits:(I)V\n+        13: invokespecial #139                // Method append8Digits:(I)V\n         16: aload_0\n         17: iload_3\n-        18: invokespecial #59                 // Method lowDigits:(I)V\n+        18: invokespecial #136                // Method lowDigits:(I)V\n         21: aload_0\n         22: iload         4\n         24: iconst_1\n         25: isub\n-        26: invokespecial #61                 // Method exponent:(I)V\n+        26: invokespecial #142                // Method exponent:(I)V\n         29: iconst_0\n         30: ireturn\n       LineNumberTable:\n         line 502: 0\n         line 503: 5\n         line 504: 11\n         line 505: 16\n@@ -1346,17 +1346,17 @@\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: iload_1\n          1: ifeq          9\n          4: aload_0\n          5: iload_1\n-         6: invokespecial #60                 // Method append8Digits:(I)V\n+         6: invokespecial #139                // Method append8Digits:(I)V\n          9: aload_0\n-        10: invokespecial #62                 // Method removeTrailingZeroes:()V\n+        10: invokespecial #145                // Method removeTrailingZeroes:()V\n         13: return\n       LineNumberTable:\n         line 511: 0\n         line 512: 4\n         line 514: 9\n         line 515: 13\n       LocalVariableTable:\n@@ -1369,32 +1369,32 @@\n   private void append8Digits(int);\n     descriptor: (I)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=5, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokespecial #57                 // Method y:(I)I\n+         2: invokespecial #132                // Method y:(I)I\n          5: istore_2\n          6: iconst_0\n          7: istore_3\n          8: iload_3\n          9: bipush        8\n         11: if_icmpge     41\n         14: bipush        10\n         16: iload_2\n         17: imul\n         18: istore        4\n         20: aload_0\n         21: iload         4\n         23: bipush        28\n         25: iushr\n-        26: invokespecial #56                 // Method appendDigit:(I)V\n+        26: invokespecial #129                // Method appendDigit:(I)V\n         29: iload         4\n-        31: ldc           #58                 // int 268435455\n+        31: ldc           #135                // int 268435455\n         33: iand\n         34: istore_2\n         35: iinc          3, 1\n         38: goto          8\n         41: return\n       LineNumberTable:\n         line 522: 0\n@@ -1420,40 +1420,40 @@\n \n   private void removeTrailingZeroes();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field bytes:[B\n+         1: getfield      #15                 // Field bytes:[B\n          4: aload_0\n-         5: getfield      #18                 // Field index:I\n+         5: getfield      #48                 // Field index:I\n          8: baload\n          9: bipush        48\n         11: if_icmpne     27\n         14: aload_0\n         15: dup\n-        16: getfield      #18                 // Field index:I\n+        16: getfield      #48                 // Field index:I\n         19: iconst_1\n         20: isub\n-        21: putfield      #18                 // Field index:I\n+        21: putfield      #48                 // Field index:I\n         24: goto          0\n         27: aload_0\n-        28: getfield      #5                  // Field bytes:[B\n+        28: getfield      #15                 // Field bytes:[B\n         31: aload_0\n-        32: getfield      #18                 // Field index:I\n+        32: getfield      #48                 // Field index:I\n         35: baload\n         36: bipush        46\n         38: if_icmpne     51\n         41: aload_0\n         42: dup\n-        43: getfield      #18                 // Field index:I\n+        43: getfield      #48                 // Field index:I\n         46: iconst_1\n         47: iadd\n-        48: putfield      #18                 // Field index:I\n+        48: putfield      #48                 // Field index:I\n         51: return\n       LineNumberTable:\n         line 531: 0\n         line 532: 14\n         line 535: 27\n         line 536: 41\n         line 538: 51\n@@ -1472,16 +1472,16 @@\n       stack=4, locals=2, args_size=2\n          0: iload_1\n          1: iconst_1\n          2: iadd\n          3: i2l\n          4: bipush        28\n          6: lshl\n-         7: ldc2_w        #46                 // long 193428131138340668l\n-        10: invokestatic  #40                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n+         7: ldc2_w        #112                // long 193428131138340668l\n+        10: invokestatic  #97                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n         13: bipush        20\n         15: lushr\n         16: l2i\n         17: iconst_1\n         18: isub\n         19: ireturn\n       LineNumberTable:\n@@ -1494,64 +1494,64 @@\n   private void exponent(int);\n     descriptor: (I)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_0\n          1: bipush        69\n-         3: invokespecial #19                 // Method append:(I)V\n+         3: invokespecial #51                 // Method append:(I)V\n          6: iload_1\n          7: ifge          19\n         10: aload_0\n         11: bipush        45\n-        13: invokespecial #19                 // Method append:(I)V\n+        13: invokespecial #51                 // Method append:(I)V\n         16: iload_1\n         17: ineg\n         18: istore_1\n         19: iload_1\n         20: bipush        10\n         22: if_icmpge     31\n         25: aload_0\n         26: iload_1\n-        27: invokespecial #56                 // Method appendDigit:(I)V\n+        27: invokespecial #129                // Method appendDigit:(I)V\n         30: return\n         31: iload_1\n         32: bipush        100\n         34: if_icmplt     58\n         37: iload_1\n         38: sipush        1311\n         41: imul\n         42: bipush        17\n         44: iushr\n         45: istore_2\n         46: aload_0\n         47: iload_2\n-        48: invokespecial #56                 // Method appendDigit:(I)V\n+        48: invokespecial #129                // Method appendDigit:(I)V\n         51: iload_1\n         52: bipush        100\n         54: iload_2\n         55: imul\n         56: isub\n         57: istore_1\n         58: iload_1\n         59: bipush        103\n         61: imul\n         62: bipush        10\n         64: iushr\n         65: istore_2\n         66: aload_0\n         67: iload_2\n-        68: invokespecial #56                 // Method appendDigit:(I)V\n+        68: invokespecial #129                // Method appendDigit:(I)V\n         71: aload_0\n         72: iload_1\n         73: bipush        10\n         75: iload_2\n         76: imul\n         77: isub\n-        78: invokespecial #56                 // Method appendDigit:(I)V\n+        78: invokespecial #129                // Method appendDigit:(I)V\n         81: return\n       LineNumberTable:\n         line 555: 0\n         line 556: 6\n         line 557: 10\n         line 558: 16\n         line 560: 19\n@@ -1578,22 +1578,22 @@\n \n   private void append(int);\n     descriptor: (I)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #5                  // Field bytes:[B\n+         1: getfield      #15                 // Field bytes:[B\n          4: aload_0\n          5: dup\n-         6: getfield      #18                 // Field index:I\n+         6: getfield      #48                 // Field index:I\n          9: iconst_1\n         10: iadd\n         11: dup_x1\n-        12: putfield      #18                 // Field index:I\n+        12: putfield      #48                 // Field index:I\n         15: iload_1\n         16: i2b\n         17: bastore\n         18: return\n       LineNumberTable:\n         line 584: 0\n         line 585: 18\n@@ -1604,22 +1604,22 @@\n \n   private void appendDigit(int);\n     descriptor: (I)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #5                  // Field bytes:[B\n+         1: getfield      #15                 // Field bytes:[B\n          4: aload_0\n          5: dup\n-         6: getfield      #18                 // Field index:I\n+         6: getfield      #48                 // Field index:I\n          9: iconst_1\n         10: iadd\n         11: dup_x1\n-        12: putfield      #18                 // Field index:I\n+        12: putfield      #48                 // Field index:I\n         15: bipush        48\n         17: iload_1\n         18: iadd\n         19: i2b\n         20: bastore\n         21: return\n       LineNumberTable:\n@@ -1631,25 +1631,25 @@\n             0      22     1     d   I\n \n   private java.lang.String charsToString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=7, locals=1, args_size=1\n-         0: new           #63                 // class java/lang/String\n+         0: new           #148                // class java/lang/String\n          3: dup\n          4: aload_0\n-         5: getfield      #5                  // Field bytes:[B\n+         5: getfield      #15                 // Field bytes:[B\n          8: iconst_0\n          9: iconst_0\n         10: aload_0\n-        11: getfield      #18                 // Field index:I\n+        11: getfield      #48                 // Field index:I\n         14: iconst_1\n         15: iadd\n-        16: invokespecial #64                 // Method java/lang/String.\"<init>\":([BIII)V\n+        16: invokespecial #150                // Method java/lang/String.\"<init>\":([BIII)V\n         19: areturn\n       LineNumberTable:\n         line 594: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      20     0  this   Lcom/fasterxml/jackson/core/io/schubfach/DoubleToDecimal;\n }\n"}]}
