{"diffoscope-json-version": 1, "source1": "first/Coders$DeflateDecoder$DeflateDecoderInputStream.class", "source2": "second/Coders$DeflateDecoder$DeflateDecoderInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,79 +1,79 @@\n-  SHA-256 checksum f219fac87d54f2c5f19d45c43091a271a60c0594dd715df9002a15a6015bb771\n+  SHA-256 checksum a13f038c5afa2f1ed4258ac97414196815d4b068e668ea84a53ffa2dcc63d8d1\n   Compiled from \"Coders.java\"\n class org.apache.commons.compress.archivers.sevenz.Coders$DeflateDecoder$DeflateDecoderInputStream extends java.io.InputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n-  this_class: #9                          // org/apache/commons/compress/archivers/sevenz/Coders$DeflateDecoder$DeflateDecoderInputStream\n-  super_class: #10                        // java/io/InputStream\n+  this_class: #8                          // org/apache/commons/compress/archivers/sevenz/Coders$DeflateDecoder$DeflateDecoderInputStream\n+  super_class: #2                         // java/io/InputStream\n   interfaces: 0, fields: 2, methods: 5, attributes: 2\n Constant pool:\n-   #1 = Methodref          #10.#43        // java/io/InputStream.\"<init>\":()V\n-   #2 = Fieldref           #9.#44         // org/apache/commons/compress/archivers/sevenz/Coders$DeflateDecoder$DeflateDecoderInputStream.inflaterInputStream:Ljava/util/zip/InflaterInputStream;\n-   #3 = Fieldref           #9.#45         // org/apache/commons/compress/archivers/sevenz/Coders$DeflateDecoder$DeflateDecoderInputStream.inflater:Ljava/util/zip/Inflater;\n-   #4 = Methodref          #46.#47        // java/util/zip/InflaterInputStream.close:()V\n-   #5 = Methodref          #48.#49        // java/util/zip/Inflater.end:()V\n-   #6 = Methodref          #46.#50        // java/util/zip/InflaterInputStream.read:()I\n-   #7 = Methodref          #46.#51        // java/util/zip/InflaterInputStream.read:([B)I\n-   #8 = Methodref          #46.#52        // java/util/zip/InflaterInputStream.read:([BII)I\n-   #9 = Class              #53            // org/apache/commons/compress/archivers/sevenz/Coders$DeflateDecoder$DeflateDecoderInputStream\n-  #10 = Class              #54            // java/io/InputStream\n+   #1 = Methodref          #2.#3          // java/io/InputStream.\"<init>\":()V\n+   #2 = Class              #4             // java/io/InputStream\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/io/InputStream\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Fieldref           #8.#9          // org/apache/commons/compress/archivers/sevenz/Coders$DeflateDecoder$DeflateDecoderInputStream.inflaterInputStream:Ljava/util/zip/InflaterInputStream;\n+   #8 = Class              #10            // org/apache/commons/compress/archivers/sevenz/Coders$DeflateDecoder$DeflateDecoderInputStream\n+   #9 = NameAndType        #11:#12        // inflaterInputStream:Ljava/util/zip/InflaterInputStream;\n+  #10 = Utf8               org/apache/commons/compress/archivers/sevenz/Coders$DeflateDecoder$DeflateDecoderInputStream\n   #11 = Utf8               inflaterInputStream\n   #12 = Utf8               Ljava/util/zip/InflaterInputStream;\n-  #13 = Utf8               inflater\n-  #14 = Utf8               Ljava/util/zip/Inflater;\n-  #15 = Utf8               <init>\n-  #16 = Utf8               (Ljava/util/zip/InflaterInputStream;Ljava/util/zip/Inflater;)V\n-  #17 = Utf8               Code\n-  #18 = Utf8               LineNumberTable\n-  #19 = Utf8               LocalVariableTable\n-  #20 = Utf8               this\n-  #21 = Class              #56            // org/apache/commons/compress/archivers/sevenz/Coders$DeflateDecoder\n-  #22 = Utf8               DeflateDecoder\n-  #23 = Utf8               InnerClasses\n-  #24 = Utf8               DeflateDecoderInputStream\n-  #25 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/Coders$DeflateDecoder$DeflateDecoderInputStream;\n-  #26 = Utf8               close\n-  #27 = Utf8               ()V\n-  #28 = Utf8               StackMapTable\n-  #29 = Class              #57            // java/lang/Throwable\n-  #30 = Utf8               Exceptions\n-  #31 = Class              #58            // java/io/IOException\n-  #32 = Utf8               read\n-  #33 = Utf8               ()I\n-  #34 = Utf8               ([B)I\n-  #35 = Utf8               b\n-  #36 = Utf8               [B\n-  #37 = Utf8               ([BII)I\n-  #38 = Utf8               off\n-  #39 = Utf8               I\n-  #40 = Utf8               len\n-  #41 = Utf8               SourceFile\n-  #42 = Utf8               Coders.java\n-  #43 = NameAndType        #15:#27        // \"<init>\":()V\n-  #44 = NameAndType        #11:#12        // inflaterInputStream:Ljava/util/zip/InflaterInputStream;\n-  #45 = NameAndType        #13:#14        // inflater:Ljava/util/zip/Inflater;\n-  #46 = Class              #59            // java/util/zip/InflaterInputStream\n-  #47 = NameAndType        #26:#27        // close:()V\n-  #48 = Class              #60            // java/util/zip/Inflater\n-  #49 = NameAndType        #61:#27        // end:()V\n-  #50 = NameAndType        #32:#33        // read:()I\n-  #51 = NameAndType        #32:#34        // read:([B)I\n-  #52 = NameAndType        #32:#37        // read:([BII)I\n-  #53 = Utf8               org/apache/commons/compress/archivers/sevenz/Coders$DeflateDecoder$DeflateDecoderInputStream\n-  #54 = Utf8               java/io/InputStream\n-  #55 = Class              #62            // org/apache/commons/compress/archivers/sevenz/Coders\n-  #56 = Utf8               org/apache/commons/compress/archivers/sevenz/Coders$DeflateDecoder\n-  #57 = Utf8               java/lang/Throwable\n-  #58 = Utf8               java/io/IOException\n-  #59 = Utf8               java/util/zip/InflaterInputStream\n-  #60 = Utf8               java/util/zip/Inflater\n-  #61 = Utf8               end\n-  #62 = Utf8               org/apache/commons/compress/archivers/sevenz/Coders\n+  #13 = Fieldref           #8.#14         // org/apache/commons/compress/archivers/sevenz/Coders$DeflateDecoder$DeflateDecoderInputStream.inflater:Ljava/util/zip/Inflater;\n+  #14 = NameAndType        #15:#16        // inflater:Ljava/util/zip/Inflater;\n+  #15 = Utf8               inflater\n+  #16 = Utf8               Ljava/util/zip/Inflater;\n+  #17 = Methodref          #18.#19        // java/util/zip/InflaterInputStream.close:()V\n+  #18 = Class              #20            // java/util/zip/InflaterInputStream\n+  #19 = NameAndType        #21:#6         // close:()V\n+  #20 = Utf8               java/util/zip/InflaterInputStream\n+  #21 = Utf8               close\n+  #22 = Methodref          #23.#24        // java/util/zip/Inflater.end:()V\n+  #23 = Class              #25            // java/util/zip/Inflater\n+  #24 = NameAndType        #26:#6         // end:()V\n+  #25 = Utf8               java/util/zip/Inflater\n+  #26 = Utf8               end\n+  #27 = Methodref          #18.#28        // java/util/zip/InflaterInputStream.read:()I\n+  #28 = NameAndType        #29:#30        // read:()I\n+  #29 = Utf8               read\n+  #30 = Utf8               ()I\n+  #31 = Methodref          #18.#32        // java/util/zip/InflaterInputStream.read:([B)I\n+  #32 = NameAndType        #29:#33        // read:([B)I\n+  #33 = Utf8               ([B)I\n+  #34 = Methodref          #18.#35        // java/util/zip/InflaterInputStream.read:([BII)I\n+  #35 = NameAndType        #29:#36        // read:([BII)I\n+  #36 = Utf8               ([BII)I\n+  #37 = Utf8               (Ljava/util/zip/InflaterInputStream;Ljava/util/zip/Inflater;)V\n+  #38 = Utf8               Code\n+  #39 = Utf8               LineNumberTable\n+  #40 = Utf8               LocalVariableTable\n+  #41 = Utf8               this\n+  #42 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/Coders$DeflateDecoder$DeflateDecoderInputStream;\n+  #43 = Utf8               StackMapTable\n+  #44 = Class              #45            // java/lang/Throwable\n+  #45 = Utf8               java/lang/Throwable\n+  #46 = Utf8               Exceptions\n+  #47 = Class              #48            // java/io/IOException\n+  #48 = Utf8               java/io/IOException\n+  #49 = Utf8               b\n+  #50 = Utf8               [B\n+  #51 = Utf8               off\n+  #52 = Utf8               I\n+  #53 = Utf8               len\n+  #54 = Utf8               SourceFile\n+  #55 = Utf8               Coders.java\n+  #56 = Utf8               InnerClasses\n+  #57 = Class              #58            // org/apache/commons/compress/archivers/sevenz/Coders$DeflateDecoder\n+  #58 = Utf8               org/apache/commons/compress/archivers/sevenz/Coders$DeflateDecoder\n+  #59 = Class              #60            // org/apache/commons/compress/archivers/sevenz/Coders\n+  #60 = Utf8               org/apache/commons/compress/archivers/sevenz/Coders\n+  #61 = Utf8               DeflateDecoder\n+  #62 = Utf8               DeflateDecoderInputStream\n {\n   final java.util.zip.InflaterInputStream inflaterInputStream;\n     descriptor: Ljava/util/zip/InflaterInputStream;\n     flags: (0x0010) ACC_FINAL\n \n   java.util.zip.Inflater inflater;\n     descriptor: Ljava/util/zip/Inflater;\n@@ -84,18 +84,18 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: invokespecial #1                  // Method java/io/InputStream.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #2                  // Field inflaterInputStream:Ljava/util/zip/InflaterInputStream;\n+         6: putfield      #7                  // Field inflaterInputStream:Ljava/util/zip/InflaterInputStream;\n          9: aload_0\n         10: aload_2\n-        11: putfield      #3                  // Field inflater:Ljava/util/zip/Inflater;\n+        11: putfield      #13                 // Field inflater:Ljava/util/zip/Inflater;\n         14: return\n       LineNumberTable:\n         line 124: 0\n         line 125: 4\n         line 126: 9\n         line 127: 14\n       LocalVariableTable:\n@@ -106,24 +106,24 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field inflaterInputStream:Ljava/util/zip/InflaterInputStream;\n-         4: invokevirtual #4                  // Method java/util/zip/InflaterInputStream.close:()V\n+         1: getfield      #7                  // Field inflaterInputStream:Ljava/util/zip/InflaterInputStream;\n+         4: invokevirtual #17                 // Method java/util/zip/InflaterInputStream.close:()V\n          7: aload_0\n-         8: getfield      #3                  // Field inflater:Ljava/util/zip/Inflater;\n-        11: invokevirtual #5                  // Method java/util/zip/Inflater.end:()V\n+         8: getfield      #13                 // Field inflater:Ljava/util/zip/Inflater;\n+        11: invokevirtual #22                 // Method java/util/zip/Inflater.end:()V\n         14: goto          27\n         17: astore_1\n         18: aload_0\n-        19: getfield      #3                  // Field inflater:Ljava/util/zip/Inflater;\n-        22: invokevirtual #5                  // Method java/util/zip/Inflater.end:()V\n+        19: getfield      #13                 // Field inflater:Ljava/util/zip/Inflater;\n+        22: invokevirtual #22                 // Method java/util/zip/Inflater.end:()V\n         25: aload_1\n         26: athrow\n         27: return\n       Exception table:\n          from    to  target type\n              0     7    17   any\n       LineNumberTable:\n@@ -145,16 +145,16 @@\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field inflaterInputStream:Ljava/util/zip/InflaterInputStream;\n-         4: invokevirtual #6                  // Method java/util/zip/InflaterInputStream.read:()I\n+         1: getfield      #7                  // Field inflaterInputStream:Ljava/util/zip/InflaterInputStream;\n+         4: invokevirtual #27                 // Method java/util/zip/InflaterInputStream.read:()I\n          7: ireturn\n       LineNumberTable:\n         line 140: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/archivers/sevenz/Coders$DeflateDecoder$DeflateDecoderInputStream;\n     Exceptions:\n@@ -162,17 +162,17 @@\n \n   public int read(byte[]) throws java.io.IOException;\n     descriptor: ([B)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #2                  // Field inflaterInputStream:Ljava/util/zip/InflaterInputStream;\n+         1: getfield      #7                  // Field inflaterInputStream:Ljava/util/zip/InflaterInputStream;\n          4: aload_1\n-         5: invokevirtual #7                  // Method java/util/zip/InflaterInputStream.read:([B)I\n+         5: invokevirtual #31                 // Method java/util/zip/InflaterInputStream.read:([B)I\n          8: ireturn\n       LineNumberTable:\n         line 145: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/archivers/sevenz/Coders$DeflateDecoder$DeflateDecoderInputStream;\n             0       9     1     b   [B\n@@ -181,28 +181,28 @@\n \n   public int read(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #2                  // Field inflaterInputStream:Ljava/util/zip/InflaterInputStream;\n+         1: getfield      #7                  // Field inflaterInputStream:Ljava/util/zip/InflaterInputStream;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokevirtual #8                  // Method java/util/zip/InflaterInputStream.read:([BII)I\n+         7: invokevirtual #34                 // Method java/util/zip/InflaterInputStream.read:([BII)I\n         10: ireturn\n       LineNumberTable:\n         line 150: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/archivers/sevenz/Coders$DeflateDecoder$DeflateDecoderInputStream;\n             0      11     1     b   [B\n             0      11     2   off   I\n             0      11     3   len   I\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"Coders.java\"\n InnerClasses:\n-  static #22= #21 of #55;                 // DeflateDecoder=class org/apache/commons/compress/archivers/sevenz/Coders$DeflateDecoder of class org/apache/commons/compress/archivers/sevenz/Coders\n-  static #24= #9 of #21;                  // DeflateDecoderInputStream=class org/apache/commons/compress/archivers/sevenz/Coders$DeflateDecoder$DeflateDecoderInputStream of class org/apache/commons/compress/archivers/sevenz/Coders$DeflateDecoder\n+  static #61= #57 of #59;                 // DeflateDecoder=class org/apache/commons/compress/archivers/sevenz/Coders$DeflateDecoder of class org/apache/commons/compress/archivers/sevenz/Coders\n+  static #62= #8 of #57;                  // DeflateDecoderInputStream=class org/apache/commons/compress/archivers/sevenz/Coders$DeflateDecoder$DeflateDecoderInputStream of class org/apache/commons/compress/archivers/sevenz/Coders$DeflateDecoder\n"}]}
