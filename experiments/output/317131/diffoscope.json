{"diffoscope-json-version": 1, "source1": "first/Streams$FailableStream.class", "source2": "second/Streams$FailableStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,174 +1,174 @@\n-  SHA-256 checksum 805925985bc605d4ed0207f3d9b02dd680b833628ec756bec8d7fd3ea5a52ce5\n+  SHA-256 checksum f349eb02e1775b8b4feaab99da98467d3366a1ea64d138647d223a1e80aa2774\n   Compiled from \"Streams.java\"\n public class org.apache.commons.lang3.Streams$FailableStream<O extends java.lang.Object> extends java.lang.Object\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #17                         // org/apache/commons/lang3/Streams$FailableStream\n-  super_class: #23                        // java/lang/Object\n+  this_class: #8                          // org/apache/commons/lang3/Streams$FailableStream\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 2, methods: 12, attributes: 5\n Constant pool:\n-    #1 = Methodref          #23.#76       // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #17.#77       // org/apache/commons/lang3/Streams$FailableStream.stream:Ljava/util/stream/Stream;\n-    #3 = Fieldref           #17.#78       // org/apache/commons/lang3/Streams$FailableStream.terminated:Z\n-    #4 = Class              #79           // java/lang/IllegalStateException\n-    #5 = String             #80           // This stream is already terminated.\n-    #6 = Methodref          #4.#81        // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-    #7 = Methodref          #17.#82       // org/apache/commons/lang3/Streams$FailableStream.assertNotTerminated:()V\n-    #8 = Methodref          #83.#84       // org/apache/commons/lang3/Functions.asPredicate:(Lorg/apache/commons/lang3/Functions$FailablePredicate;)Ljava/util/function/Predicate;\n-    #9 = InterfaceMethodref #85.#86       // java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-   #10 = Methodref          #17.#87       // org/apache/commons/lang3/Streams$FailableStream.makeTerminated:()V\n-   #11 = Methodref          #17.#88       // org/apache/commons/lang3/Streams$FailableStream.stream:()Ljava/util/stream/Stream;\n-   #12 = Methodref          #83.#89       // org/apache/commons/lang3/Functions.asConsumer:(Lorg/apache/commons/lang3/Functions$FailableConsumer;)Ljava/util/function/Consumer;\n-   #13 = InterfaceMethodref #85.#90       // java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V\n-   #14 = InterfaceMethodref #85.#91       // java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n-   #15 = InterfaceMethodref #85.#92       // java/util/stream/Stream.collect:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)Ljava/lang/Object;\n-   #16 = InterfaceMethodref #85.#93       // java/util/stream/Stream.reduce:(Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;\n-   #17 = Class              #95           // org/apache/commons/lang3/Streams$FailableStream\n-   #18 = Methodref          #83.#96       // org/apache/commons/lang3/Functions.asFunction:(Lorg/apache/commons/lang3/Functions$FailableFunction;)Ljava/util/function/Function;\n-   #19 = InterfaceMethodref #85.#97       // java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;\n-   #20 = Methodref          #17.#98       // org/apache/commons/lang3/Streams$FailableStream.\"<init>\":(Ljava/util/stream/Stream;)V\n-   #21 = InterfaceMethodref #85.#99       // java/util/stream/Stream.allMatch:(Ljava/util/function/Predicate;)Z\n-   #22 = InterfaceMethodref #85.#100      // java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z\n-   #23 = Class              #101          // java/lang/Object\n-   #24 = Utf8               stream\n-   #25 = Utf8               Ljava/util/stream/Stream;\n-   #26 = Utf8               Signature\n-   #27 = Utf8               Ljava/util/stream/Stream<TO;>;\n-   #28 = Utf8               terminated\n-   #29 = Utf8               Z\n-   #30 = Utf8               <init>\n-   #31 = Utf8               (Ljava/util/stream/Stream;)V\n-   #32 = Utf8               Code\n-   #33 = Utf8               LineNumberTable\n-   #34 = Utf8               (Ljava/util/stream/Stream<TO;>;)V\n-   #35 = Utf8               assertNotTerminated\n-   #36 = Utf8               ()V\n-   #37 = Utf8               StackMapTable\n-   #38 = Utf8               makeTerminated\n-   #39 = Utf8               filter\n-   #40 = Class              #102          // org/apache/commons/lang3/Functions$FailablePredicate\n-   #41 = Utf8               FailablePredicate\n-   #42 = Utf8               InnerClasses\n-   #43 = Utf8               FailableStream\n-   #44 = Utf8               (Lorg/apache/commons/lang3/Functions$FailablePredicate;)Lorg/apache/commons/lang3/Streams$FailableStream;\n-   #45 = Utf8               (Lorg/apache/commons/lang3/Functions$FailablePredicate<TO;*>;)Lorg/apache/commons/lang3/Streams$FailableStream<TO;>;\n-   #46 = Utf8               forEach\n-   #47 = Class              #103          // org/apache/commons/lang3/Functions$FailableConsumer\n-   #48 = Utf8               FailableConsumer\n-   #49 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableConsumer;)V\n-   #50 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableConsumer<TO;*>;)V\n-   #51 = Utf8               collect\n-   #52 = Utf8               (Ljava/util/stream/Collector;)Ljava/lang/Object;\n-   #53 = Utf8               <A:Ljava/lang/Object;R:Ljava/lang/Object;>(Ljava/util/stream/Collector<-TO;TA;TR;>;)TR;\n-   #54 = Utf8               (Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)Ljava/lang/Object;\n-   #55 = Utf8               <A:Ljava/lang/Object;R:Ljava/lang/Object;>(Ljava/util/function/Supplier<TR;>;Ljava/util/function/BiConsumer<TR;-TO;>;Ljava/util/function/BiConsumer<TR;TR;>;)TR;\n-   #56 = Utf8               reduce\n-   #57 = Utf8               (Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;\n-   #58 = Utf8               (TO;Ljava/util/function/BinaryOperator<TO;>;)TO;\n-   #59 = Utf8               map\n-   #60 = Class              #104          // org/apache/commons/lang3/Functions$FailableFunction\n-   #61 = Utf8               FailableFunction\n-   #62 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableFunction;)Lorg/apache/commons/lang3/Streams$FailableStream;\n-   #63 = Utf8               <R:Ljava/lang/Object;>(Lorg/apache/commons/lang3/Functions$FailableFunction<TO;TR;*>;)Lorg/apache/commons/lang3/Streams$FailableStream<TR;>;\n-   #64 = Utf8               ()Ljava/util/stream/Stream;\n-   #65 = Utf8               ()Ljava/util/stream/Stream<TO;>;\n-   #66 = Utf8               allMatch\n-   #67 = Utf8               (Lorg/apache/commons/lang3/Functions$FailablePredicate;)Z\n-   #68 = Utf8               (Lorg/apache/commons/lang3/Functions$FailablePredicate<TO;*>;)Z\n-   #69 = Utf8               anyMatch\n-   #70 = Utf8               <O:Ljava/lang/Object;>Ljava/lang/Object;\n-   #71 = Utf8               SourceFile\n-   #72 = Utf8               Streams.java\n-   #73 = Utf8               Deprecated\n-   #74 = Utf8               RuntimeVisibleAnnotations\n-   #75 = Utf8               Ljava/lang/Deprecated;\n-   #76 = NameAndType        #30:#36       // \"<init>\":()V\n-   #77 = NameAndType        #24:#25       // stream:Ljava/util/stream/Stream;\n-   #78 = NameAndType        #28:#29       // terminated:Z\n-   #79 = Utf8               java/lang/IllegalStateException\n-   #80 = Utf8               This stream is already terminated.\n-   #81 = NameAndType        #30:#105      // \"<init>\":(Ljava/lang/String;)V\n-   #82 = NameAndType        #35:#36       // assertNotTerminated:()V\n-   #83 = Class              #106          // org/apache/commons/lang3/Functions\n-   #84 = NameAndType        #107:#108     // asPredicate:(Lorg/apache/commons/lang3/Functions$FailablePredicate;)Ljava/util/function/Predicate;\n-   #85 = Class              #109          // java/util/stream/Stream\n-   #86 = NameAndType        #39:#110      // filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-   #87 = NameAndType        #38:#36       // makeTerminated:()V\n-   #88 = NameAndType        #24:#64       // stream:()Ljava/util/stream/Stream;\n-   #89 = NameAndType        #111:#112     // asConsumer:(Lorg/apache/commons/lang3/Functions$FailableConsumer;)Ljava/util/function/Consumer;\n-   #90 = NameAndType        #46:#113      // forEach:(Ljava/util/function/Consumer;)V\n-   #91 = NameAndType        #51:#52       // collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n-   #92 = NameAndType        #51:#54       // collect:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)Ljava/lang/Object;\n-   #93 = NameAndType        #56:#57       // reduce:(Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;\n-   #94 = Class              #114          // org/apache/commons/lang3/Streams\n-   #95 = Utf8               org/apache/commons/lang3/Streams$FailableStream\n-   #96 = NameAndType        #115:#116     // asFunction:(Lorg/apache/commons/lang3/Functions$FailableFunction;)Ljava/util/function/Function;\n-   #97 = NameAndType        #59:#117      // map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;\n-   #98 = NameAndType        #30:#31       // \"<init>\":(Ljava/util/stream/Stream;)V\n-   #99 = NameAndType        #66:#118      // allMatch:(Ljava/util/function/Predicate;)Z\n-  #100 = NameAndType        #69:#118      // anyMatch:(Ljava/util/function/Predicate;)Z\n-  #101 = Utf8               java/lang/Object\n-  #102 = Utf8               org/apache/commons/lang3/Functions$FailablePredicate\n-  #103 = Utf8               org/apache/commons/lang3/Functions$FailableConsumer\n-  #104 = Utf8               org/apache/commons/lang3/Functions$FailableFunction\n-  #105 = Utf8               (Ljava/lang/String;)V\n-  #106 = Utf8               org/apache/commons/lang3/Functions\n-  #107 = Utf8               asPredicate\n-  #108 = Utf8               (Lorg/apache/commons/lang3/Functions$FailablePredicate;)Ljava/util/function/Predicate;\n-  #109 = Utf8               java/util/stream/Stream\n-  #110 = Utf8               (Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-  #111 = Utf8               asConsumer\n-  #112 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableConsumer;)Ljava/util/function/Consumer;\n-  #113 = Utf8               (Ljava/util/function/Consumer;)V\n-  #114 = Utf8               org/apache/commons/lang3/Streams\n-  #115 = Utf8               asFunction\n-  #116 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableFunction;)Ljava/util/function/Function;\n-  #117 = Utf8               (Ljava/util/function/Function;)Ljava/util/stream/Stream;\n-  #118 = Utf8               (Ljava/util/function/Predicate;)Z\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Fieldref           #8.#9         // org/apache/commons/lang3/Streams$FailableStream.stream:Ljava/util/stream/Stream;\n+    #8 = Class              #10           // org/apache/commons/lang3/Streams$FailableStream\n+    #9 = NameAndType        #11:#12       // stream:Ljava/util/stream/Stream;\n+   #10 = Utf8               org/apache/commons/lang3/Streams$FailableStream\n+   #11 = Utf8               stream\n+   #12 = Utf8               Ljava/util/stream/Stream;\n+   #13 = Fieldref           #8.#14        // org/apache/commons/lang3/Streams$FailableStream.terminated:Z\n+   #14 = NameAndType        #15:#16       // terminated:Z\n+   #15 = Utf8               terminated\n+   #16 = Utf8               Z\n+   #17 = Class              #18           // java/lang/IllegalStateException\n+   #18 = Utf8               java/lang/IllegalStateException\n+   #19 = String             #20           // This stream is already terminated.\n+   #20 = Utf8               This stream is already terminated.\n+   #21 = Methodref          #17.#22       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #22 = NameAndType        #5:#23        // \"<init>\":(Ljava/lang/String;)V\n+   #23 = Utf8               (Ljava/lang/String;)V\n+   #24 = Methodref          #8.#25        // org/apache/commons/lang3/Streams$FailableStream.assertNotTerminated:()V\n+   #25 = NameAndType        #26:#6        // assertNotTerminated:()V\n+   #26 = Utf8               assertNotTerminated\n+   #27 = Methodref          #28.#29       // org/apache/commons/lang3/Functions.asPredicate:(Lorg/apache/commons/lang3/Functions$FailablePredicate;)Ljava/util/function/Predicate;\n+   #28 = Class              #30           // org/apache/commons/lang3/Functions\n+   #29 = NameAndType        #31:#32       // asPredicate:(Lorg/apache/commons/lang3/Functions$FailablePredicate;)Ljava/util/function/Predicate;\n+   #30 = Utf8               org/apache/commons/lang3/Functions\n+   #31 = Utf8               asPredicate\n+   #32 = Utf8               (Lorg/apache/commons/lang3/Functions$FailablePredicate;)Ljava/util/function/Predicate;\n+   #33 = InterfaceMethodref #34.#35       // java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+   #34 = Class              #36           // java/util/stream/Stream\n+   #35 = NameAndType        #37:#38       // filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+   #36 = Utf8               java/util/stream/Stream\n+   #37 = Utf8               filter\n+   #38 = Utf8               (Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+   #39 = Methodref          #8.#40        // org/apache/commons/lang3/Streams$FailableStream.makeTerminated:()V\n+   #40 = NameAndType        #41:#6        // makeTerminated:()V\n+   #41 = Utf8               makeTerminated\n+   #42 = Methodref          #8.#43        // org/apache/commons/lang3/Streams$FailableStream.stream:()Ljava/util/stream/Stream;\n+   #43 = NameAndType        #11:#44       // stream:()Ljava/util/stream/Stream;\n+   #44 = Utf8               ()Ljava/util/stream/Stream;\n+   #45 = Methodref          #28.#46       // org/apache/commons/lang3/Functions.asConsumer:(Lorg/apache/commons/lang3/Functions$FailableConsumer;)Ljava/util/function/Consumer;\n+   #46 = NameAndType        #47:#48       // asConsumer:(Lorg/apache/commons/lang3/Functions$FailableConsumer;)Ljava/util/function/Consumer;\n+   #47 = Utf8               asConsumer\n+   #48 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableConsumer;)Ljava/util/function/Consumer;\n+   #49 = InterfaceMethodref #34.#50       // java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V\n+   #50 = NameAndType        #51:#52       // forEach:(Ljava/util/function/Consumer;)V\n+   #51 = Utf8               forEach\n+   #52 = Utf8               (Ljava/util/function/Consumer;)V\n+   #53 = InterfaceMethodref #34.#54       // java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n+   #54 = NameAndType        #55:#56       // collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n+   #55 = Utf8               collect\n+   #56 = Utf8               (Ljava/util/stream/Collector;)Ljava/lang/Object;\n+   #57 = InterfaceMethodref #34.#58       // java/util/stream/Stream.collect:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)Ljava/lang/Object;\n+   #58 = NameAndType        #55:#59       // collect:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)Ljava/lang/Object;\n+   #59 = Utf8               (Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)Ljava/lang/Object;\n+   #60 = InterfaceMethodref #34.#61       // java/util/stream/Stream.reduce:(Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;\n+   #61 = NameAndType        #62:#63       // reduce:(Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;\n+   #62 = Utf8               reduce\n+   #63 = Utf8               (Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;\n+   #64 = Methodref          #28.#65       // org/apache/commons/lang3/Functions.asFunction:(Lorg/apache/commons/lang3/Functions$FailableFunction;)Ljava/util/function/Function;\n+   #65 = NameAndType        #66:#67       // asFunction:(Lorg/apache/commons/lang3/Functions$FailableFunction;)Ljava/util/function/Function;\n+   #66 = Utf8               asFunction\n+   #67 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableFunction;)Ljava/util/function/Function;\n+   #68 = InterfaceMethodref #34.#69       // java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;\n+   #69 = NameAndType        #70:#71       // map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;\n+   #70 = Utf8               map\n+   #71 = Utf8               (Ljava/util/function/Function;)Ljava/util/stream/Stream;\n+   #72 = Methodref          #8.#73        // org/apache/commons/lang3/Streams$FailableStream.\"<init>\":(Ljava/util/stream/Stream;)V\n+   #73 = NameAndType        #5:#74        // \"<init>\":(Ljava/util/stream/Stream;)V\n+   #74 = Utf8               (Ljava/util/stream/Stream;)V\n+   #75 = InterfaceMethodref #34.#76       // java/util/stream/Stream.allMatch:(Ljava/util/function/Predicate;)Z\n+   #76 = NameAndType        #77:#78       // allMatch:(Ljava/util/function/Predicate;)Z\n+   #77 = Utf8               allMatch\n+   #78 = Utf8               (Ljava/util/function/Predicate;)Z\n+   #79 = InterfaceMethodref #34.#80       // java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z\n+   #80 = NameAndType        #81:#78       // anyMatch:(Ljava/util/function/Predicate;)Z\n+   #81 = Utf8               anyMatch\n+   #82 = Utf8               Signature\n+   #83 = Utf8               Ljava/util/stream/Stream<TO;>;\n+   #84 = Utf8               Code\n+   #85 = Utf8               LineNumberTable\n+   #86 = Utf8               (Ljava/util/stream/Stream<TO;>;)V\n+   #87 = Utf8               StackMapTable\n+   #88 = Utf8               (Lorg/apache/commons/lang3/Functions$FailablePredicate;)Lorg/apache/commons/lang3/Streams$FailableStream;\n+   #89 = Utf8               (Lorg/apache/commons/lang3/Functions$FailablePredicate<TO;*>;)Lorg/apache/commons/lang3/Streams$FailableStream<TO;>;\n+   #90 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableConsumer;)V\n+   #91 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableConsumer<TO;*>;)V\n+   #92 = Utf8               <A:Ljava/lang/Object;R:Ljava/lang/Object;>(Ljava/util/stream/Collector<-TO;TA;TR;>;)TR;\n+   #93 = Utf8               <A:Ljava/lang/Object;R:Ljava/lang/Object;>(Ljava/util/function/Supplier<TR;>;Ljava/util/function/BiConsumer<TR;-TO;>;Ljava/util/function/BiConsumer<TR;TR;>;)TR;\n+   #94 = Utf8               (TO;Ljava/util/function/BinaryOperator<TO;>;)TO;\n+   #95 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableFunction;)Lorg/apache/commons/lang3/Streams$FailableStream;\n+   #96 = Utf8               <R:Ljava/lang/Object;>(Lorg/apache/commons/lang3/Functions$FailableFunction<TO;TR;*>;)Lorg/apache/commons/lang3/Streams$FailableStream<TR;>;\n+   #97 = Utf8               ()Ljava/util/stream/Stream<TO;>;\n+   #98 = Utf8               (Lorg/apache/commons/lang3/Functions$FailablePredicate;)Z\n+   #99 = Utf8               (Lorg/apache/commons/lang3/Functions$FailablePredicate<TO;*>;)Z\n+  #100 = Utf8               <O:Ljava/lang/Object;>Ljava/lang/Object;\n+  #101 = Utf8               SourceFile\n+  #102 = Utf8               Streams.java\n+  #103 = Utf8               Deprecated\n+  #104 = Utf8               RuntimeVisibleAnnotations\n+  #105 = Utf8               Ljava/lang/Deprecated;\n+  #106 = Utf8               InnerClasses\n+  #107 = Class              #108          // org/apache/commons/lang3/Streams\n+  #108 = Utf8               org/apache/commons/lang3/Streams\n+  #109 = Utf8               FailableStream\n+  #110 = Class              #111          // org/apache/commons/lang3/Functions$FailablePredicate\n+  #111 = Utf8               org/apache/commons/lang3/Functions$FailablePredicate\n+  #112 = Utf8               FailablePredicate\n+  #113 = Class              #114          // org/apache/commons/lang3/Functions$FailableConsumer\n+  #114 = Utf8               org/apache/commons/lang3/Functions$FailableConsumer\n+  #115 = Utf8               FailableConsumer\n+  #116 = Class              #117          // org/apache/commons/lang3/Functions$FailableFunction\n+  #117 = Utf8               org/apache/commons/lang3/Functions$FailableFunction\n+  #118 = Utf8               FailableFunction\n {\n   private java.util.stream.Stream<O> stream;\n     descriptor: Ljava/util/stream/Stream;\n     flags: (0x0002) ACC_PRIVATE\n-    Signature: #27                          // Ljava/util/stream/Stream<TO;>;\n+    Signature: #83                          // Ljava/util/stream/Stream<TO;>;\n \n   private boolean terminated;\n     descriptor: Z\n     flags: (0x0002) ACC_PRIVATE\n \n   public org.apache.commons.lang3.Streams$FailableStream(java.util.stream.Stream<O>);\n     descriptor: (Ljava/util/stream/Stream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #2                  // Field stream:Ljava/util/stream/Stream;\n+         6: putfield      #7                  // Field stream:Ljava/util/stream/Stream;\n          9: return\n       LineNumberTable:\n         line 86: 0\n         line 87: 4\n         line 88: 9\n-    Signature: #34                          // (Ljava/util/stream/Stream<TO;>;)V\n+    Signature: #86                          // (Ljava/util/stream/Stream<TO;>;)V\n \n   protected void assertNotTerminated();\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field terminated:Z\n+         1: getfield      #13                 // Field terminated:Z\n          4: ifeq          17\n-         7: new           #4                  // class java/lang/IllegalStateException\n+         7: new           #17                 // class java/lang/IllegalStateException\n         10: dup\n-        11: ldc           #5                  // String This stream is already terminated.\n-        13: invokespecial #6                  // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #19                 // String This stream is already terminated.\n+        13: invokespecial #21                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: return\n       LineNumberTable:\n         line 91: 0\n         line 92: 7\n         line 94: 17\n       StackMapTable: number_of_entries = 1\n@@ -176,192 +176,192 @@\n \n   protected void makeTerminated();\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #7                  // Method assertNotTerminated:()V\n+         1: invokevirtual #24                 // Method assertNotTerminated:()V\n          4: aload_0\n          5: iconst_1\n-         6: putfield      #3                  // Field terminated:Z\n+         6: putfield      #13                 // Field terminated:Z\n          9: return\n       LineNumberTable:\n         line 97: 0\n         line 98: 4\n         line 99: 9\n \n   public org.apache.commons.lang3.Streams$FailableStream<O> filter(org.apache.commons.lang3.Functions$FailablePredicate<O, ?>);\n     descriptor: (Lorg/apache/commons/lang3/Functions$FailablePredicate;)Lorg/apache/commons/lang3/Streams$FailableStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #7                  // Method assertNotTerminated:()V\n+         1: invokevirtual #24                 // Method assertNotTerminated:()V\n          4: aload_0\n          5: aload_0\n-         6: getfield      #2                  // Field stream:Ljava/util/stream/Stream;\n+         6: getfield      #7                  // Field stream:Ljava/util/stream/Stream;\n          9: aload_1\n-        10: invokestatic  #8                  // Method org/apache/commons/lang3/Functions.asPredicate:(Lorg/apache/commons/lang3/Functions$FailablePredicate;)Ljava/util/function/Predicate;\n-        13: invokeinterface #9,  2            // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-        18: putfield      #2                  // Field stream:Ljava/util/stream/Stream;\n+        10: invokestatic  #27                 // Method org/apache/commons/lang3/Functions.asPredicate:(Lorg/apache/commons/lang3/Functions$FailablePredicate;)Ljava/util/function/Predicate;\n+        13: invokeinterface #33,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+        18: putfield      #7                  // Field stream:Ljava/util/stream/Stream;\n         21: aload_0\n         22: areturn\n       LineNumberTable:\n         line 112: 0\n         line 113: 4\n         line 114: 21\n-    Signature: #45                          // (Lorg/apache/commons/lang3/Functions$FailablePredicate<TO;*>;)Lorg/apache/commons/lang3/Streams$FailableStream<TO;>;\n+    Signature: #89                          // (Lorg/apache/commons/lang3/Functions$FailablePredicate<TO;*>;)Lorg/apache/commons/lang3/Streams$FailableStream<TO;>;\n \n   public void forEach(org.apache.commons.lang3.Functions$FailableConsumer<O, ?>);\n     descriptor: (Lorg/apache/commons/lang3/Functions$FailableConsumer;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #10                 // Method makeTerminated:()V\n+         1: invokevirtual #39                 // Method makeTerminated:()V\n          4: aload_0\n-         5: invokevirtual #11                 // Method stream:()Ljava/util/stream/Stream;\n+         5: invokevirtual #42                 // Method stream:()Ljava/util/stream/Stream;\n          8: aload_1\n-         9: invokestatic  #12                 // Method org/apache/commons/lang3/Functions.asConsumer:(Lorg/apache/commons/lang3/Functions$FailableConsumer;)Ljava/util/function/Consumer;\n-        12: invokeinterface #13,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V\n+         9: invokestatic  #45                 // Method org/apache/commons/lang3/Functions.asConsumer:(Lorg/apache/commons/lang3/Functions$FailableConsumer;)Ljava/util/function/Consumer;\n+        12: invokeinterface #49,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V\n         17: return\n       LineNumberTable:\n         line 133: 0\n         line 134: 4\n         line 135: 17\n-    Signature: #50                          // (Lorg/apache/commons/lang3/Functions$FailableConsumer<TO;*>;)V\n+    Signature: #91                          // (Lorg/apache/commons/lang3/Functions$FailableConsumer<TO;*>;)V\n \n   public <A extends java.lang.Object, R extends java.lang.Object> R collect(java.util.stream.Collector<? super O, A, R>);\n     descriptor: (Ljava/util/stream/Collector;)Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #10                 // Method makeTerminated:()V\n+         1: invokevirtual #39                 // Method makeTerminated:()V\n          4: aload_0\n-         5: invokevirtual #11                 // Method stream:()Ljava/util/stream/Stream;\n+         5: invokevirtual #42                 // Method stream:()Ljava/util/stream/Stream;\n          8: aload_1\n-         9: invokeinterface #14,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n+         9: invokeinterface #53,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n         14: areturn\n       LineNumberTable:\n         line 186: 0\n         line 187: 4\n-    Signature: #53                          // <A:Ljava/lang/Object;R:Ljava/lang/Object;>(Ljava/util/stream/Collector<-TO;TA;TR;>;)TR;\n+    Signature: #92                          // <A:Ljava/lang/Object;R:Ljava/lang/Object;>(Ljava/util/stream/Collector<-TO;TA;TR;>;)TR;\n \n   public <A extends java.lang.Object, R extends java.lang.Object> R collect(java.util.function.Supplier<R>, java.util.function.BiConsumer<R, ? super O>, java.util.function.BiConsumer<R, R>);\n     descriptor: (Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: invokevirtual #10                 // Method makeTerminated:()V\n+         1: invokevirtual #39                 // Method makeTerminated:()V\n          4: aload_0\n-         5: invokevirtual #11                 // Method stream:()Ljava/util/stream/Stream;\n+         5: invokevirtual #42                 // Method stream:()Ljava/util/stream/Stream;\n          8: aload_1\n          9: aload_2\n         10: aload_3\n-        11: invokeinterface #15,  4           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)Ljava/lang/Object;\n+        11: invokeinterface #57,  4           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)Ljava/lang/Object;\n         16: areturn\n       LineNumberTable:\n         line 236: 0\n         line 237: 4\n-    Signature: #55                          // <A:Ljava/lang/Object;R:Ljava/lang/Object;>(Ljava/util/function/Supplier<TR;>;Ljava/util/function/BiConsumer<TR;-TO;>;Ljava/util/function/BiConsumer<TR;TR;>;)TR;\n+    Signature: #93                          // <A:Ljava/lang/Object;R:Ljava/lang/Object;>(Ljava/util/function/Supplier<TR;>;Ljava/util/function/BiConsumer<TR;-TO;>;Ljava/util/function/BiConsumer<TR;TR;>;)TR;\n \n   public O reduce(O, java.util.function.BinaryOperator<O>);\n     descriptor: (Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: invokevirtual #10                 // Method makeTerminated:()V\n+         1: invokevirtual #39                 // Method makeTerminated:()V\n          4: aload_0\n-         5: invokevirtual #11                 // Method stream:()Ljava/util/stream/Stream;\n+         5: invokevirtual #42                 // Method stream:()Ljava/util/stream/Stream;\n          8: aload_1\n          9: aload_2\n-        10: invokeinterface #16,  3           // InterfaceMethod java/util/stream/Stream.reduce:(Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;\n+        10: invokeinterface #60,  3           // InterfaceMethod java/util/stream/Stream.reduce:(Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;\n         15: areturn\n       LineNumberTable:\n         line 284: 0\n         line 285: 4\n-    Signature: #58                          // (TO;Ljava/util/function/BinaryOperator<TO;>;)TO;\n+    Signature: #94                          // (TO;Ljava/util/function/BinaryOperator<TO;>;)TO;\n \n   public <R extends java.lang.Object> org.apache.commons.lang3.Streams$FailableStream<R> map(org.apache.commons.lang3.Functions$FailableFunction<O, R, ?>);\n     descriptor: (Lorg/apache/commons/lang3/Functions$FailableFunction;)Lorg/apache/commons/lang3/Streams$FailableStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #7                  // Method assertNotTerminated:()V\n-         4: new           #17                 // class org/apache/commons/lang3/Streams$FailableStream\n+         1: invokevirtual #24                 // Method assertNotTerminated:()V\n+         4: new           #8                  // class org/apache/commons/lang3/Streams$FailableStream\n          7: dup\n          8: aload_0\n-         9: getfield      #2                  // Field stream:Ljava/util/stream/Stream;\n+         9: getfield      #7                  // Field stream:Ljava/util/stream/Stream;\n         12: aload_1\n-        13: invokestatic  #18                 // Method org/apache/commons/lang3/Functions.asFunction:(Lorg/apache/commons/lang3/Functions$FailableFunction;)Ljava/util/function/Function;\n-        16: invokeinterface #19,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;\n-        21: invokespecial #20                 // Method \"<init>\":(Ljava/util/stream/Stream;)V\n+        13: invokestatic  #64                 // Method org/apache/commons/lang3/Functions.asFunction:(Lorg/apache/commons/lang3/Functions$FailableFunction;)Ljava/util/function/Function;\n+        16: invokeinterface #68,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;\n+        21: invokespecial #72                 // Method \"<init>\":(Ljava/util/stream/Stream;)V\n         24: areturn\n       LineNumberTable:\n         line 299: 0\n         line 300: 4\n-    Signature: #63                          // <R:Ljava/lang/Object;>(Lorg/apache/commons/lang3/Functions$FailableFunction<TO;TR;*>;)Lorg/apache/commons/lang3/Streams$FailableStream<TR;>;\n+    Signature: #96                          // <R:Ljava/lang/Object;>(Lorg/apache/commons/lang3/Functions$FailableFunction<TO;TR;*>;)Lorg/apache/commons/lang3/Streams$FailableStream<TR;>;\n \n   public java.util.stream.Stream<O> stream();\n     descriptor: ()Ljava/util/stream/Stream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field stream:Ljava/util/stream/Stream;\n+         1: getfield      #7                  // Field stream:Ljava/util/stream/Stream;\n          4: areturn\n       LineNumberTable:\n         line 308: 0\n-    Signature: #65                          // ()Ljava/util/stream/Stream<TO;>;\n+    Signature: #97                          // ()Ljava/util/stream/Stream<TO;>;\n \n   public boolean allMatch(org.apache.commons.lang3.Functions$FailablePredicate<O, ?>);\n     descriptor: (Lorg/apache/commons/lang3/Functions$FailablePredicate;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #7                  // Method assertNotTerminated:()V\n+         1: invokevirtual #24                 // Method assertNotTerminated:()V\n          4: aload_0\n-         5: invokevirtual #11                 // Method stream:()Ljava/util/stream/Stream;\n+         5: invokevirtual #42                 // Method stream:()Ljava/util/stream/Stream;\n          8: aload_1\n-         9: invokestatic  #8                  // Method org/apache/commons/lang3/Functions.asPredicate:(Lorg/apache/commons/lang3/Functions$FailablePredicate;)Ljava/util/function/Predicate;\n-        12: invokeinterface #21,  2           // InterfaceMethod java/util/stream/Stream.allMatch:(Ljava/util/function/Predicate;)Z\n+         9: invokestatic  #27                 // Method org/apache/commons/lang3/Functions.asPredicate:(Lorg/apache/commons/lang3/Functions$FailablePredicate;)Ljava/util/function/Predicate;\n+        12: invokeinterface #75,  2           // InterfaceMethod java/util/stream/Stream.allMatch:(Ljava/util/function/Predicate;)Z\n         17: ireturn\n       LineNumberTable:\n         line 331: 0\n         line 332: 4\n-    Signature: #68                          // (Lorg/apache/commons/lang3/Functions$FailablePredicate<TO;*>;)Z\n+    Signature: #99                          // (Lorg/apache/commons/lang3/Functions$FailablePredicate<TO;*>;)Z\n \n   public boolean anyMatch(org.apache.commons.lang3.Functions$FailablePredicate<O, ?>);\n     descriptor: (Lorg/apache/commons/lang3/Functions$FailablePredicate;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #7                  // Method assertNotTerminated:()V\n+         1: invokevirtual #24                 // Method assertNotTerminated:()V\n          4: aload_0\n-         5: invokevirtual #11                 // Method stream:()Ljava/util/stream/Stream;\n+         5: invokevirtual #42                 // Method stream:()Ljava/util/stream/Stream;\n          8: aload_1\n-         9: invokestatic  #8                  // Method org/apache/commons/lang3/Functions.asPredicate:(Lorg/apache/commons/lang3/Functions$FailablePredicate;)Ljava/util/function/Predicate;\n-        12: invokeinterface #22,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z\n+         9: invokestatic  #27                 // Method org/apache/commons/lang3/Functions.asPredicate:(Lorg/apache/commons/lang3/Functions$FailablePredicate;)Ljava/util/function/Predicate;\n+        12: invokeinterface #79,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z\n         17: ireturn\n       LineNumberTable:\n         line 353: 0\n         line 354: 4\n-    Signature: #68                          // (Lorg/apache/commons/lang3/Functions$FailablePredicate<TO;*>;)Z\n+    Signature: #99                          // (Lorg/apache/commons/lang3/Functions$FailablePredicate<TO;*>;)Z\n }\n-Signature: #70                          // <O:Ljava/lang/Object;>Ljava/lang/Object;\n+Signature: #100                         // <O:Ljava/lang/Object;>Ljava/lang/Object;\n SourceFile: \"Streams.java\"\n Deprecated: true\n RuntimeVisibleAnnotations:\n-  0: #75()\n+  0: #105()\n     java.lang.Deprecated\n InnerClasses:\n-  public static #41= #40 of #83;          // FailablePredicate=class org/apache/commons/lang3/Functions$FailablePredicate of class org/apache/commons/lang3/Functions\n-  public static #43= #17 of #94;          // FailableStream=class org/apache/commons/lang3/Streams$FailableStream of class org/apache/commons/lang3/Streams\n-  public static #48= #47 of #83;          // FailableConsumer=class org/apache/commons/lang3/Functions$FailableConsumer of class org/apache/commons/lang3/Functions\n-  public static #61= #60 of #83;          // FailableFunction=class org/apache/commons/lang3/Functions$FailableFunction of class org/apache/commons/lang3/Functions\n+  public static #109= #8 of #107;         // FailableStream=class org/apache/commons/lang3/Streams$FailableStream of class org/apache/commons/lang3/Streams\n+  public static #112= #110 of #28;        // FailablePredicate=class org/apache/commons/lang3/Functions$FailablePredicate of class org/apache/commons/lang3/Functions\n+  public static #115= #113 of #28;        // FailableConsumer=class org/apache/commons/lang3/Functions$FailableConsumer of class org/apache/commons/lang3/Functions\n+  public static #118= #116 of #28;        // FailableFunction=class org/apache/commons/lang3/Functions$FailableFunction of class org/apache/commons/lang3/Functions\n"}]}
