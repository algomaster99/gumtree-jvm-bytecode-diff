{"diffoscope-json-version": 1, "source1": "first/ArArchiveInputStream.class", "source2": "second/ArArchiveInputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -106,27 +106,27 @@\n         }\n         if (long1 < 0L) {\n             throw new IOException(\"broken archive, entry with negative size\");\n         }\n         return this.currentEntry = new ArArchiveEntry(s, long1, this.asInt(this.metaData, 28, 6, true), this.asInt(this.metaData, 34, 6, true), this.asInt(this.metaData, 40, 8, 8), this.asLong(this.metaData, 16, 12));\n     }\n     \n-    private String getExtendedName(final int i) throws IOException {\n+    private String getExtendedName(final int n) throws IOException {\n         if (this.namebuffer == null) {\n             throw new IOException(\"Cannot process GNU long filename as no // record was found\");\n         }\n-        for (int j = i; j < this.namebuffer.length; ++j) {\n-            if (this.namebuffer[j] == 10 || this.namebuffer[j] == 0) {\n-                if (this.namebuffer[j - 1] == 47) {\n-                    --j;\n+        for (int i = n; i < this.namebuffer.length; ++i) {\n+            if (this.namebuffer[i] == 10 || this.namebuffer[i] == 0) {\n+                if (this.namebuffer[i - 1] == 47) {\n+                    --i;\n                 }\n-                return ArchiveUtils.toAsciiString(this.namebuffer, i, j - i);\n+                return ArchiveUtils.toAsciiString(this.namebuffer, n, i - n);\n             }\n         }\n-        throw new IOException(\"Failed to read entry: \" + i);\n+        throw new IOException(\"Failed to read entry: \" + n);\n     }\n     \n     private long asLong(final byte[] array, final int n, final int n2) {\n         return Long.parseLong(ArchiveUtils.toAsciiString(array, n, n2).trim());\n     }\n     \n     private int asInt(final byte[] array, final int n, final int n2) {\n"}]}
