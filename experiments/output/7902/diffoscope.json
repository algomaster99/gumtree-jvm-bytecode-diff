{"diffoscope-json-version": 1, "source1": "first/ArArchiveInputStream.class", "source2": "second/ArArchiveInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,321 +1,314 @@\n-  SHA-256 checksum c469a664dc5b02abcb3955eec076698597aaacb6d9a333fee63afac399e26735\n+  SHA-256 checksum e11bad384a2d67614be4b0a479e115994e534833d14fad515d58dfb08b1f5453\n   Compiled from \"ArArchiveInputStream.java\"\n public class org.apache.commons.compress.archivers.ar.ArArchiveInputStream extends org.apache.commons.compress.archivers.ArchiveInputStream\n   minor version: 0\n-  major version: 53\n+  major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n-  super_class: #76                        // org/apache/commons/compress/archivers/ArchiveInputStream\n-  interfaces: 0, fields: 16, methods: 18, attributes: 3\n+  super_class: #83                        // org/apache/commons/compress/archivers/ArchiveInputStream\n+  interfaces: 0, fields: 16, methods: 18, attributes: 1\n Constant pool:\n-    #1 = Class              #164          // org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n-    #2 = Methodref          #76.#165      // org/apache/commons/compress/archivers/ArchiveInputStream.\"<init>\":()V\n-    #3 = Fieldref           #1.#166       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.offset:J\n-    #4 = Fieldref           #1.#167       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-    #5 = Fieldref           #1.#168       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.namebuffer:[B\n+    #1 = Class              #171          // org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n+    #2 = Methodref          #83.#172      // org/apache/commons/compress/archivers/ArchiveInputStream.\"<init>\":()V\n+    #3 = Fieldref           #1.#173       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.offset:J\n+    #4 = Fieldref           #1.#174       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+    #5 = Fieldref           #1.#175       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.namebuffer:[B\n     #6 = Long               -1l\n-    #8 = Fieldref           #1.#169       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.entryOffset:J\n-    #9 = Fieldref           #1.#170       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.nameBuf:[B\n-   #10 = Fieldref           #1.#171       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.lastModifiedBuf:[B\n-   #11 = Fieldref           #1.#172       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.idBuf:[B\n-   #12 = Fieldref           #1.#173       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.fileModeBuf:[B\n-   #13 = Fieldref           #1.#174       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.lengthBuf:[B\n-   #14 = Fieldref           #1.#175       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.input:Ljava/io/InputStream;\n-   #15 = Fieldref           #1.#176       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.closed:Z\n-   #16 = Methodref          #18.#177      // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLength:()J\n-   #17 = Methodref          #178.#179     // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n-   #18 = Class              #180          // org/apache/commons/compress/archivers/ar/ArArchiveEntry\n-   #19 = String             #181          // !<arch>\\n\n-   #20 = Methodref          #182.#183     // org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n-   #21 = Methodref          #178.#184     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n-   #22 = Class              #185          // java/io/IOException\n-   #23 = Methodref          #1.#186       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.getBytesRead:()J\n-   #24 = InvokeDynamic      #0:#190       // #0:makeConcatWithConstants:(J)Ljava/lang/String;\n-   #25 = Methodref          #22.#191      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #26 = Methodref          #182.#192     // org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([B)Ljava/lang/String;\n-   #27 = InvokeDynamic      #1:#194       // #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-   #28 = Long               2l\n-   #30 = Methodref          #1.#195       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.read:()I\n-   #31 = Methodref          #196.#197     // java/io/InputStream.available:()I\n-   #32 = Methodref          #1.#198       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.asInt:([BZ)I\n-   #33 = String             #199          // `\\n\n-   #34 = InvokeDynamic      #2:#190       // #2:makeConcatWithConstants:(J)Ljava/lang/String;\n-   #35 = InvokeDynamic      #3:#190       // #3:makeConcatWithConstants:(J)Ljava/lang/String;\n-   #36 = Methodref          #123.#202     // java/lang/String.trim:()Ljava/lang/String;\n-   #37 = Methodref          #1.#203       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.isGNUStringTable:(Ljava/lang/String;)Z\n-   #38 = Methodref          #1.#204       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.readGNUStringTable:([B)Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-   #39 = Methodref          #1.#205       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.getNextArEntry:()Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-   #40 = Methodref          #1.#206       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.asLong:([B)J\n-   #41 = String             #207          // /\n-   #42 = Methodref          #123.#208     // java/lang/String.endsWith:(Ljava/lang/String;)Z\n-   #43 = Methodref          #123.#209     // java/lang/String.length:()I\n-   #44 = Methodref          #123.#210     // java/lang/String.substring:(II)Ljava/lang/String;\n-   #45 = Methodref          #1.#211       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.isGNULongName:(Ljava/lang/String;)Z\n-   #46 = Methodref          #123.#212     // java/lang/String.substring:(I)Ljava/lang/String;\n-   #47 = Methodref          #213.#214     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-   #48 = Methodref          #1.#215       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.getExtendedName:(I)Ljava/lang/String;\n-   #49 = Methodref          #1.#216       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.isBSDLongName:(Ljava/lang/String;)Z\n-   #50 = Methodref          #1.#217       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.getBSDLongName:(Ljava/lang/String;)Ljava/lang/String;\n-   #51 = Methodref          #1.#218       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.asInt:([BI)I\n-   #52 = Methodref          #18.#219      // org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/lang/String;JIIIJ)V\n-   #53 = String             #220          // Cannot process GNU long filename as no // record was found\n-   #54 = Methodref          #182.#221     // org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([BII)Ljava/lang/String;\n-   #55 = InvokeDynamic      #4:#223       // #4:makeConcatWithConstants:(I)Ljava/lang/String;\n-   #56 = Methodref          #224.#225     // java/lang/Long.parseLong:(Ljava/lang/String;)J\n-   #57 = Methodref          #1.#226       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.asInt:([BIZ)I\n-   #58 = Methodref          #213.#227     // java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n-   #59 = Methodref          #196.#228     // java/io/InputStream.close:()V\n-   #60 = Methodref          #229.#230     // java/lang/Math.min:(JJ)J\n-   #61 = Methodref          #196.#231     // java/io/InputStream.read:([BII)I\n-   #62 = Methodref          #1.#232       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.count:(I)V\n-   #63 = String             #233          // ^#1/\\\\d+\n-   #64 = Methodref          #123.#234     // java/lang/String.matches:(Ljava/lang/String;)Z\n-   #65 = Fieldref           #1.#235       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.BSD_LONGNAME_PREFIX_LEN:I\n-   #66 = Class              #236          // java/io/EOFException\n-   #67 = Methodref          #66.#165      // java/io/EOFException.\"<init>\":()V\n-   #68 = String             #237          // //\n-   #69 = Methodref          #123.#238     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #70 = Methodref          #1.#239       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.asInt:([B)I\n-   #71 = Methodref          #178.#240     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[BII)I\n-   #72 = InvokeDynamic      #5:#242       // #5:makeConcatWithConstants:(II)Ljava/lang/String;\n-   #73 = Methodref          #18.#243      // org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/lang/String;J)V\n-   #74 = String             #244          // ^/\\\\d+\n-   #75 = String             #245          // #1/\n-   #76 = Class              #246          // org/apache/commons/compress/archivers/ArchiveInputStream\n-   #77 = Utf8               input\n-   #78 = Utf8               Ljava/io/InputStream;\n-   #79 = Utf8               offset\n-   #80 = Utf8               J\n-   #81 = Utf8               closed\n-   #82 = Utf8               Z\n-   #83 = Utf8               currentEntry\n-   #84 = Utf8               Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-   #85 = Utf8               namebuffer\n-   #86 = Utf8               [B\n-   #87 = Utf8               entryOffset\n-   #88 = Utf8               nameBuf\n-   #89 = Utf8               lastModifiedBuf\n-   #90 = Utf8               idBuf\n-   #91 = Utf8               fileModeBuf\n-   #92 = Utf8               lengthBuf\n-   #93 = Utf8               BSD_LONGNAME_PREFIX\n-   #94 = Utf8               Ljava/lang/String;\n-   #95 = Utf8               ConstantValue\n-   #96 = Utf8               BSD_LONGNAME_PREFIX_LEN\n-   #97 = Utf8               I\n-   #98 = Utf8               BSD_LONGNAME_PATTERN\n-   #99 = Utf8               GNU_STRING_TABLE_NAME\n-  #100 = Utf8               GNU_LONGNAME_PATTERN\n-  #101 = Utf8               <init>\n-  #102 = Utf8               (Ljava/io/InputStream;)V\n-  #103 = Utf8               Code\n-  #104 = Utf8               LineNumberTable\n-  #105 = Utf8               LocalVariableTable\n-  #106 = Utf8               this\n-  #107 = Utf8               Lorg/apache/commons/compress/archivers/ar/ArArchiveInputStream;\n-  #108 = Utf8               pInput\n-  #109 = Utf8               getNextArEntry\n-  #110 = Utf8               ()Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-  #111 = Utf8               entryEnd\n-  #112 = Utf8               i\n-  #113 = Utf8               expected\n-  #114 = Utf8               realized\n-  #115 = Utf8               read\n-  #116 = Utf8               off\n-  #117 = Utf8               nameLen\n-  #118 = Utf8               userId\n-  #119 = Utf8               temp\n-  #120 = Utf8               len\n-  #121 = Utf8               StackMapTable\n-  #122 = Class              #86           // \"[B\"\n-  #123 = Class              #247          // java/lang/String\n-  #124 = Utf8               Exceptions\n-  #125 = Utf8               getExtendedName\n-  #126 = Utf8               (I)Ljava/lang/String;\n-  #127 = Utf8               asLong\n-  #128 = Utf8               ([B)J\n-  #129 = Utf8               byteArray\n-  #130 = Utf8               asInt\n-  #131 = Utf8               ([B)I\n-  #132 = Utf8               ([BZ)I\n-  #133 = Utf8               treatBlankAsZero\n-  #134 = Utf8               ([BI)I\n-  #135 = Utf8               base\n-  #136 = Utf8               ([BIZ)I\n-  #137 = Utf8               string\n-  #138 = Utf8               getNextEntry\n-  #139 = Utf8               ()Lorg/apache/commons/compress/archivers/ArchiveEntry;\n-  #140 = Utf8               close\n-  #141 = Utf8               ()V\n-  #142 = Utf8               ([BII)I\n-  #143 = Utf8               b\n-  #144 = Utf8               toRead\n-  #145 = Utf8               ret\n-  #146 = Utf8               matches\n-  #147 = Utf8               ([BI)Z\n-  #148 = Utf8               signature\n-  #149 = Utf8               length\n-  #150 = Utf8               isBSDLongName\n-  #151 = Utf8               (Ljava/lang/String;)Z\n-  #152 = Utf8               name\n-  #153 = Utf8               getBSDLongName\n-  #154 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #155 = Utf8               bsdLongName\n-  #156 = Utf8               isGNUStringTable\n-  #157 = Utf8               readGNUStringTable\n-  #158 = Utf8               ([B)Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-  #159 = Utf8               bufflen\n-  #160 = Utf8               isGNULongName\n-  #161 = Utf8               <clinit>\n-  #162 = Utf8               SourceFile\n-  #163 = Utf8               ArArchiveInputStream.java\n-  #164 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n-  #165 = NameAndType        #101:#141     // \"<init>\":()V\n-  #166 = NameAndType        #79:#80       // offset:J\n-  #167 = NameAndType        #83:#84       // currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-  #168 = NameAndType        #85:#86       // namebuffer:[B\n-  #169 = NameAndType        #87:#80       // entryOffset:J\n-  #170 = NameAndType        #88:#86       // nameBuf:[B\n-  #171 = NameAndType        #89:#86       // lastModifiedBuf:[B\n-  #172 = NameAndType        #90:#86       // idBuf:[B\n-  #173 = NameAndType        #91:#86       // fileModeBuf:[B\n-  #174 = NameAndType        #92:#86       // lengthBuf:[B\n-  #175 = NameAndType        #77:#78       // input:Ljava/io/InputStream;\n-  #176 = NameAndType        #81:#82       // closed:Z\n-  #177 = NameAndType        #248:#249     // getLength:()J\n-  #178 = Class              #250          // org/apache/commons/compress/utils/IOUtils\n-  #179 = NameAndType        #251:#252     // skip:(Ljava/io/InputStream;J)J\n-  #180 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveEntry\n-  #181 = Utf8               !<arch>\\n\n-  #182 = Class              #253          // org/apache/commons/compress/utils/ArchiveUtils\n-  #183 = NameAndType        #254:#255     // toAsciiBytes:(Ljava/lang/String;)[B\n-  #184 = NameAndType        #256:#257     // readFully:(Ljava/io/InputStream;[B)I\n-  #185 = Utf8               java/io/IOException\n-  #186 = NameAndType        #258:#249     // getBytesRead:()J\n-  #187 = Utf8               BootstrapMethods\n-  #188 = MethodHandle       6:#259        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #189 = String             #260          // failed to read header. Occured at byte: \\u0001\n-  #190 = NameAndType        #261:#262     // makeConcatWithConstants:(J)Ljava/lang/String;\n-  #191 = NameAndType        #101:#263     // \"<init>\":(Ljava/lang/String;)V\n-  #192 = NameAndType        #264:#265     // toAsciiString:([B)Ljava/lang/String;\n-  #193 = String             #266          // invalid header \\u0001\n-  #194 = NameAndType        #261:#154     // makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-  #195 = NameAndType        #115:#267     // read:()I\n-  #196 = Class              #268          // java/io/InputStream\n-  #197 = NameAndType        #269:#267     // available:()I\n-  #198 = NameAndType        #130:#132     // asInt:([BZ)I\n-  #199 = Utf8               `\\n\n-  #200 = String             #270          // failed to read entry trailer. Occured at byte: \\u0001\n-  #201 = String             #271          // invalid entry trailer. not read the content? Occured at byte: \\u0001\n-  #202 = NameAndType        #272:#273     // trim:()Ljava/lang/String;\n-  #203 = NameAndType        #156:#151     // isGNUStringTable:(Ljava/lang/String;)Z\n-  #204 = NameAndType        #157:#158     // readGNUStringTable:([B)Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-  #205 = NameAndType        #109:#110     // getNextArEntry:()Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-  #206 = NameAndType        #127:#128     // asLong:([B)J\n-  #207 = Utf8               /\n-  #208 = NameAndType        #274:#151     // endsWith:(Ljava/lang/String;)Z\n-  #209 = NameAndType        #149:#267     // length:()I\n-  #210 = NameAndType        #275:#276     // substring:(II)Ljava/lang/String;\n-  #211 = NameAndType        #160:#151     // isGNULongName:(Ljava/lang/String;)Z\n-  #212 = NameAndType        #275:#126     // substring:(I)Ljava/lang/String;\n-  #213 = Class              #277          // java/lang/Integer\n-  #214 = NameAndType        #278:#279     // parseInt:(Ljava/lang/String;)I\n-  #215 = NameAndType        #125:#126     // getExtendedName:(I)Ljava/lang/String;\n-  #216 = NameAndType        #150:#151     // isBSDLongName:(Ljava/lang/String;)Z\n-  #217 = NameAndType        #153:#154     // getBSDLongName:(Ljava/lang/String;)Ljava/lang/String;\n-  #218 = NameAndType        #130:#134     // asInt:([BI)I\n-  #219 = NameAndType        #101:#280     // \"<init>\":(Ljava/lang/String;JIIIJ)V\n-  #220 = Utf8               Cannot process GNU long filename as no // record was found\n-  #221 = NameAndType        #264:#281     // toAsciiString:([BII)Ljava/lang/String;\n-  #222 = String             #282          // Failed to read entry: \\u0001\n-  #223 = NameAndType        #261:#126     // makeConcatWithConstants:(I)Ljava/lang/String;\n-  #224 = Class              #283          // java/lang/Long\n-  #225 = NameAndType        #284:#285     // parseLong:(Ljava/lang/String;)J\n-  #226 = NameAndType        #130:#136     // asInt:([BIZ)I\n-  #227 = NameAndType        #278:#286     // parseInt:(Ljava/lang/String;I)I\n-  #228 = NameAndType        #140:#141     // close:()V\n-  #229 = Class              #287          // java/lang/Math\n-  #230 = NameAndType        #288:#289     // min:(JJ)J\n-  #231 = NameAndType        #115:#142     // read:([BII)I\n-  #232 = NameAndType        #290:#291     // count:(I)V\n-  #233 = Utf8               ^#1/\\\\d+\n-  #234 = NameAndType        #146:#151     // matches:(Ljava/lang/String;)Z\n-  #235 = NameAndType        #96:#97       // BSD_LONGNAME_PREFIX_LEN:I\n-  #236 = Utf8               java/io/EOFException\n-  #237 = Utf8               //\n-  #238 = NameAndType        #292:#293     // equals:(Ljava/lang/Object;)Z\n-  #239 = NameAndType        #130:#131     // asInt:([B)I\n-  #240 = NameAndType        #256:#294     // readFully:(Ljava/io/InputStream;[BII)I\n-  #241 = String             #295          // Failed to read complete // record: expected=\\u0001 read=\\u0001\n-  #242 = NameAndType        #261:#276     // makeConcatWithConstants:(II)Ljava/lang/String;\n-  #243 = NameAndType        #101:#296     // \"<init>\":(Ljava/lang/String;J)V\n-  #244 = Utf8               ^/\\\\d+\n-  #245 = Utf8               #1/\n-  #246 = Utf8               org/apache/commons/compress/archivers/ArchiveInputStream\n-  #247 = Utf8               java/lang/String\n-  #248 = Utf8               getLength\n-  #249 = Utf8               ()J\n-  #250 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #251 = Utf8               skip\n-  #252 = Utf8               (Ljava/io/InputStream;J)J\n-  #253 = Utf8               org/apache/commons/compress/utils/ArchiveUtils\n-  #254 = Utf8               toAsciiBytes\n-  #255 = Utf8               (Ljava/lang/String;)[B\n-  #256 = Utf8               readFully\n-  #257 = Utf8               (Ljava/io/InputStream;[B)I\n-  #258 = Utf8               getBytesRead\n-  #259 = Methodref          #297.#298     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #260 = Utf8               failed to read header. Occured at byte: \\u0001\n-  #261 = Utf8               makeConcatWithConstants\n-  #262 = Utf8               (J)Ljava/lang/String;\n-  #263 = Utf8               (Ljava/lang/String;)V\n-  #264 = Utf8               toAsciiString\n-  #265 = Utf8               ([B)Ljava/lang/String;\n-  #266 = Utf8               invalid header \\u0001\n-  #267 = Utf8               ()I\n-  #268 = Utf8               java/io/InputStream\n-  #269 = Utf8               available\n-  #270 = Utf8               failed to read entry trailer. Occured at byte: \\u0001\n-  #271 = Utf8               invalid entry trailer. not read the content? Occured at byte: \\u0001\n-  #272 = Utf8               trim\n-  #273 = Utf8               ()Ljava/lang/String;\n-  #274 = Utf8               endsWith\n-  #275 = Utf8               substring\n-  #276 = Utf8               (II)Ljava/lang/String;\n-  #277 = Utf8               java/lang/Integer\n-  #278 = Utf8               parseInt\n-  #279 = Utf8               (Ljava/lang/String;)I\n-  #280 = Utf8               (Ljava/lang/String;JIIIJ)V\n-  #281 = Utf8               ([BII)Ljava/lang/String;\n-  #282 = Utf8               Failed to read entry: \\u0001\n-  #283 = Utf8               java/lang/Long\n-  #284 = Utf8               parseLong\n-  #285 = Utf8               (Ljava/lang/String;)J\n-  #286 = Utf8               (Ljava/lang/String;I)I\n-  #287 = Utf8               java/lang/Math\n-  #288 = Utf8               min\n-  #289 = Utf8               (JJ)J\n-  #290 = Utf8               count\n-  #291 = Utf8               (I)V\n-  #292 = Utf8               equals\n-  #293 = Utf8               (Ljava/lang/Object;)Z\n-  #294 = Utf8               (Ljava/io/InputStream;[BII)I\n-  #295 = Utf8               Failed to read complete // record: expected=\\u0001 read=\\u0001\n-  #296 = Utf8               (Ljava/lang/String;J)V\n-  #297 = Class              #299          // java/lang/invoke/StringConcatFactory\n-  #298 = NameAndType        #261:#303     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #299 = Utf8               java/lang/invoke/StringConcatFactory\n-  #300 = Class              #305          // java/lang/invoke/MethodHandles$Lookup\n-  #301 = Utf8               Lookup\n-  #302 = Utf8               InnerClasses\n-  #303 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #304 = Class              #306          // java/lang/invoke/MethodHandles\n-  #305 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #306 = Utf8               java/lang/invoke/MethodHandles\n+    #8 = Fieldref           #1.#176       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.entryOffset:J\n+    #9 = Fieldref           #1.#177       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.nameBuf:[B\n+   #10 = Fieldref           #1.#178       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.lastModifiedBuf:[B\n+   #11 = Fieldref           #1.#179       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.idBuf:[B\n+   #12 = Fieldref           #1.#180       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.fileModeBuf:[B\n+   #13 = Fieldref           #1.#181       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.lengthBuf:[B\n+   #14 = Fieldref           #1.#182       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.input:Ljava/io/InputStream;\n+   #15 = Fieldref           #1.#183       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.closed:Z\n+   #16 = Methodref          #18.#184      // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLength:()J\n+   #17 = Methodref          #185.#186     // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+   #18 = Class              #187          // org/apache/commons/compress/archivers/ar/ArArchiveEntry\n+   #19 = String             #188          // !<arch>\\n\n+   #20 = Methodref          #189.#190     // org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n+   #21 = Methodref          #185.#191     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+   #22 = Class              #192          // java/io/IOException\n+   #23 = Class              #193          // java/lang/StringBuilder\n+   #24 = Methodref          #23.#172      // java/lang/StringBuilder.\"<init>\":()V\n+   #25 = String             #194          // failed to read header. Occured at byte:\n+   #26 = Methodref          #23.#195      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #27 = Methodref          #1.#196       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.getBytesRead:()J\n+   #28 = Methodref          #23.#197      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+   #29 = Methodref          #23.#198      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #30 = Methodref          #22.#199      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #31 = String             #200          // invalid header\n+   #32 = Methodref          #189.#201     // org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([B)Ljava/lang/String;\n+   #33 = Long               2l\n+   #35 = Methodref          #1.#202       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.read:()I\n+   #36 = Methodref          #203.#204     // java/io/InputStream.available:()I\n+   #37 = Methodref          #1.#205       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.asInt:([BZ)I\n+   #38 = String             #206          // `\\n\n+   #39 = String             #207          // failed to read entry trailer. Occured at byte:\n+   #40 = String             #208          // invalid entry trailer. not read the content? Occured at byte:\n+   #41 = Methodref          #130.#209     // java/lang/String.trim:()Ljava/lang/String;\n+   #42 = Methodref          #1.#210       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.isGNUStringTable:(Ljava/lang/String;)Z\n+   #43 = Methodref          #1.#211       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.readGNUStringTable:([B)Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+   #44 = Methodref          #1.#212       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.getNextArEntry:()Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+   #45 = Methodref          #1.#213       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.asLong:([B)J\n+   #46 = String             #214          // /\n+   #47 = Methodref          #130.#215     // java/lang/String.endsWith:(Ljava/lang/String;)Z\n+   #48 = Methodref          #130.#216     // java/lang/String.length:()I\n+   #49 = Methodref          #130.#217     // java/lang/String.substring:(II)Ljava/lang/String;\n+   #50 = Methodref          #1.#218       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.isGNULongName:(Ljava/lang/String;)Z\n+   #51 = Methodref          #130.#219     // java/lang/String.substring:(I)Ljava/lang/String;\n+   #52 = Methodref          #220.#221     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+   #53 = Methodref          #1.#222       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.getExtendedName:(I)Ljava/lang/String;\n+   #54 = Methodref          #1.#223       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.isBSDLongName:(Ljava/lang/String;)Z\n+   #55 = Methodref          #1.#224       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.getBSDLongName:(Ljava/lang/String;)Ljava/lang/String;\n+   #56 = Methodref          #1.#225       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.asInt:([BI)I\n+   #57 = Methodref          #18.#226      // org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/lang/String;JIIIJ)V\n+   #58 = String             #227          // Cannot process GNU long filename as no // record was found\n+   #59 = Methodref          #189.#228     // org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([BII)Ljava/lang/String;\n+   #60 = String             #229          // Failed to read entry:\n+   #61 = Methodref          #23.#230      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #62 = Methodref          #231.#232     // java/lang/Long.parseLong:(Ljava/lang/String;)J\n+   #63 = Methodref          #1.#233       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.asInt:([BIZ)I\n+   #64 = Methodref          #220.#234     // java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n+   #65 = Methodref          #203.#235     // java/io/InputStream.close:()V\n+   #66 = Methodref          #236.#237     // java/lang/Math.min:(JJ)J\n+   #67 = Methodref          #203.#238     // java/io/InputStream.read:([BII)I\n+   #68 = Methodref          #1.#239       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.count:(I)V\n+   #69 = String             #240          // ^#1/\\\\d+\n+   #70 = Methodref          #130.#241     // java/lang/String.matches:(Ljava/lang/String;)Z\n+   #71 = Fieldref           #1.#242       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.BSD_LONGNAME_PREFIX_LEN:I\n+   #72 = Class              #243          // java/io/EOFException\n+   #73 = Methodref          #72.#172      // java/io/EOFException.\"<init>\":()V\n+   #74 = String             #244          // //\n+   #75 = Methodref          #130.#245     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #76 = Methodref          #1.#246       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.asInt:([B)I\n+   #77 = Methodref          #185.#247     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[BII)I\n+   #78 = String             #248          // Failed to read complete // record: expected=\n+   #79 = String             #249          //  read=\n+   #80 = Methodref          #18.#250      // org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/lang/String;J)V\n+   #81 = String             #251          // ^/\\\\d+\n+   #82 = String             #252          // #1/\n+   #83 = Class              #253          // org/apache/commons/compress/archivers/ArchiveInputStream\n+   #84 = Utf8               input\n+   #85 = Utf8               Ljava/io/InputStream;\n+   #86 = Utf8               offset\n+   #87 = Utf8               J\n+   #88 = Utf8               closed\n+   #89 = Utf8               Z\n+   #90 = Utf8               currentEntry\n+   #91 = Utf8               Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+   #92 = Utf8               namebuffer\n+   #93 = Utf8               [B\n+   #94 = Utf8               entryOffset\n+   #95 = Utf8               nameBuf\n+   #96 = Utf8               lastModifiedBuf\n+   #97 = Utf8               idBuf\n+   #98 = Utf8               fileModeBuf\n+   #99 = Utf8               lengthBuf\n+  #100 = Utf8               BSD_LONGNAME_PREFIX\n+  #101 = Utf8               Ljava/lang/String;\n+  #102 = Utf8               ConstantValue\n+  #103 = Utf8               BSD_LONGNAME_PREFIX_LEN\n+  #104 = Utf8               I\n+  #105 = Utf8               BSD_LONGNAME_PATTERN\n+  #106 = Utf8               GNU_STRING_TABLE_NAME\n+  #107 = Utf8               GNU_LONGNAME_PATTERN\n+  #108 = Utf8               <init>\n+  #109 = Utf8               (Ljava/io/InputStream;)V\n+  #110 = Utf8               Code\n+  #111 = Utf8               LineNumberTable\n+  #112 = Utf8               LocalVariableTable\n+  #113 = Utf8               this\n+  #114 = Utf8               Lorg/apache/commons/compress/archivers/ar/ArArchiveInputStream;\n+  #115 = Utf8               pInput\n+  #116 = Utf8               getNextArEntry\n+  #117 = Utf8               ()Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+  #118 = Utf8               entryEnd\n+  #119 = Utf8               i\n+  #120 = Utf8               expected\n+  #121 = Utf8               realized\n+  #122 = Utf8               read\n+  #123 = Utf8               off\n+  #124 = Utf8               nameLen\n+  #125 = Utf8               userId\n+  #126 = Utf8               temp\n+  #127 = Utf8               len\n+  #128 = Utf8               StackMapTable\n+  #129 = Class              #93           // \"[B\"\n+  #130 = Class              #254          // java/lang/String\n+  #131 = Utf8               Exceptions\n+  #132 = Utf8               getExtendedName\n+  #133 = Utf8               (I)Ljava/lang/String;\n+  #134 = Utf8               asLong\n+  #135 = Utf8               ([B)J\n+  #136 = Utf8               byteArray\n+  #137 = Utf8               asInt\n+  #138 = Utf8               ([B)I\n+  #139 = Utf8               ([BZ)I\n+  #140 = Utf8               treatBlankAsZero\n+  #141 = Utf8               ([BI)I\n+  #142 = Utf8               base\n+  #143 = Utf8               ([BIZ)I\n+  #144 = Utf8               string\n+  #145 = Utf8               getNextEntry\n+  #146 = Utf8               ()Lorg/apache/commons/compress/archivers/ArchiveEntry;\n+  #147 = Utf8               close\n+  #148 = Utf8               ()V\n+  #149 = Utf8               ([BII)I\n+  #150 = Utf8               b\n+  #151 = Utf8               toRead\n+  #152 = Utf8               ret\n+  #153 = Utf8               matches\n+  #154 = Utf8               ([BI)Z\n+  #155 = Utf8               signature\n+  #156 = Utf8               length\n+  #157 = Utf8               isBSDLongName\n+  #158 = Utf8               (Ljava/lang/String;)Z\n+  #159 = Utf8               name\n+  #160 = Utf8               getBSDLongName\n+  #161 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #162 = Utf8               bsdLongName\n+  #163 = Utf8               isGNUStringTable\n+  #164 = Utf8               readGNUStringTable\n+  #165 = Utf8               ([B)Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+  #166 = Utf8               bufflen\n+  #167 = Utf8               isGNULongName\n+  #168 = Utf8               <clinit>\n+  #169 = Utf8               SourceFile\n+  #170 = Utf8               ArArchiveInputStream.java\n+  #171 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n+  #172 = NameAndType        #108:#148     // \"<init>\":()V\n+  #173 = NameAndType        #86:#87       // offset:J\n+  #174 = NameAndType        #90:#91       // currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+  #175 = NameAndType        #92:#93       // namebuffer:[B\n+  #176 = NameAndType        #94:#87       // entryOffset:J\n+  #177 = NameAndType        #95:#93       // nameBuf:[B\n+  #178 = NameAndType        #96:#93       // lastModifiedBuf:[B\n+  #179 = NameAndType        #97:#93       // idBuf:[B\n+  #180 = NameAndType        #98:#93       // fileModeBuf:[B\n+  #181 = NameAndType        #99:#93       // lengthBuf:[B\n+  #182 = NameAndType        #84:#85       // input:Ljava/io/InputStream;\n+  #183 = NameAndType        #88:#89       // closed:Z\n+  #184 = NameAndType        #255:#256     // getLength:()J\n+  #185 = Class              #257          // org/apache/commons/compress/utils/IOUtils\n+  #186 = NameAndType        #258:#259     // skip:(Ljava/io/InputStream;J)J\n+  #187 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveEntry\n+  #188 = Utf8               !<arch>\\n\n+  #189 = Class              #260          // org/apache/commons/compress/utils/ArchiveUtils\n+  #190 = NameAndType        #261:#262     // toAsciiBytes:(Ljava/lang/String;)[B\n+  #191 = NameAndType        #263:#264     // readFully:(Ljava/io/InputStream;[B)I\n+  #192 = Utf8               java/io/IOException\n+  #193 = Utf8               java/lang/StringBuilder\n+  #194 = Utf8               failed to read header. Occured at byte:\n+  #195 = NameAndType        #265:#266     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #196 = NameAndType        #267:#256     // getBytesRead:()J\n+  #197 = NameAndType        #265:#268     // append:(J)Ljava/lang/StringBuilder;\n+  #198 = NameAndType        #269:#270     // toString:()Ljava/lang/String;\n+  #199 = NameAndType        #108:#271     // \"<init>\":(Ljava/lang/String;)V\n+  #200 = Utf8               invalid header\n+  #201 = NameAndType        #272:#273     // toAsciiString:([B)Ljava/lang/String;\n+  #202 = NameAndType        #122:#274     // read:()I\n+  #203 = Class              #275          // java/io/InputStream\n+  #204 = NameAndType        #276:#274     // available:()I\n+  #205 = NameAndType        #137:#139     // asInt:([BZ)I\n+  #206 = Utf8               `\\n\n+  #207 = Utf8               failed to read entry trailer. Occured at byte:\n+  #208 = Utf8               invalid entry trailer. not read the content? Occured at byte:\n+  #209 = NameAndType        #277:#270     // trim:()Ljava/lang/String;\n+  #210 = NameAndType        #163:#158     // isGNUStringTable:(Ljava/lang/String;)Z\n+  #211 = NameAndType        #164:#165     // readGNUStringTable:([B)Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+  #212 = NameAndType        #116:#117     // getNextArEntry:()Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+  #213 = NameAndType        #134:#135     // asLong:([B)J\n+  #214 = Utf8               /\n+  #215 = NameAndType        #278:#158     // endsWith:(Ljava/lang/String;)Z\n+  #216 = NameAndType        #156:#274     // length:()I\n+  #217 = NameAndType        #279:#280     // substring:(II)Ljava/lang/String;\n+  #218 = NameAndType        #167:#158     // isGNULongName:(Ljava/lang/String;)Z\n+  #219 = NameAndType        #279:#133     // substring:(I)Ljava/lang/String;\n+  #220 = Class              #281          // java/lang/Integer\n+  #221 = NameAndType        #282:#283     // parseInt:(Ljava/lang/String;)I\n+  #222 = NameAndType        #132:#133     // getExtendedName:(I)Ljava/lang/String;\n+  #223 = NameAndType        #157:#158     // isBSDLongName:(Ljava/lang/String;)Z\n+  #224 = NameAndType        #160:#161     // getBSDLongName:(Ljava/lang/String;)Ljava/lang/String;\n+  #225 = NameAndType        #137:#141     // asInt:([BI)I\n+  #226 = NameAndType        #108:#284     // \"<init>\":(Ljava/lang/String;JIIIJ)V\n+  #227 = Utf8               Cannot process GNU long filename as no // record was found\n+  #228 = NameAndType        #272:#285     // toAsciiString:([BII)Ljava/lang/String;\n+  #229 = Utf8               Failed to read entry:\n+  #230 = NameAndType        #265:#286     // append:(I)Ljava/lang/StringBuilder;\n+  #231 = Class              #287          // java/lang/Long\n+  #232 = NameAndType        #288:#289     // parseLong:(Ljava/lang/String;)J\n+  #233 = NameAndType        #137:#143     // asInt:([BIZ)I\n+  #234 = NameAndType        #282:#290     // parseInt:(Ljava/lang/String;I)I\n+  #235 = NameAndType        #147:#148     // close:()V\n+  #236 = Class              #291          // java/lang/Math\n+  #237 = NameAndType        #292:#293     // min:(JJ)J\n+  #238 = NameAndType        #122:#149     // read:([BII)I\n+  #239 = NameAndType        #294:#295     // count:(I)V\n+  #240 = Utf8               ^#1/\\\\d+\n+  #241 = NameAndType        #153:#158     // matches:(Ljava/lang/String;)Z\n+  #242 = NameAndType        #103:#104     // BSD_LONGNAME_PREFIX_LEN:I\n+  #243 = Utf8               java/io/EOFException\n+  #244 = Utf8               //\n+  #245 = NameAndType        #296:#297     // equals:(Ljava/lang/Object;)Z\n+  #246 = NameAndType        #137:#138     // asInt:([B)I\n+  #247 = NameAndType        #263:#298     // readFully:(Ljava/io/InputStream;[BII)I\n+  #248 = Utf8               Failed to read complete // record: expected=\n+  #249 = Utf8                read=\n+  #250 = NameAndType        #108:#299     // \"<init>\":(Ljava/lang/String;J)V\n+  #251 = Utf8               ^/\\\\d+\n+  #252 = Utf8               #1/\n+  #253 = Utf8               org/apache/commons/compress/archivers/ArchiveInputStream\n+  #254 = Utf8               java/lang/String\n+  #255 = Utf8               getLength\n+  #256 = Utf8               ()J\n+  #257 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #258 = Utf8               skip\n+  #259 = Utf8               (Ljava/io/InputStream;J)J\n+  #260 = Utf8               org/apache/commons/compress/utils/ArchiveUtils\n+  #261 = Utf8               toAsciiBytes\n+  #262 = Utf8               (Ljava/lang/String;)[B\n+  #263 = Utf8               readFully\n+  #264 = Utf8               (Ljava/io/InputStream;[B)I\n+  #265 = Utf8               append\n+  #266 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #267 = Utf8               getBytesRead\n+  #268 = Utf8               (J)Ljava/lang/StringBuilder;\n+  #269 = Utf8               toString\n+  #270 = Utf8               ()Ljava/lang/String;\n+  #271 = Utf8               (Ljava/lang/String;)V\n+  #272 = Utf8               toAsciiString\n+  #273 = Utf8               ([B)Ljava/lang/String;\n+  #274 = Utf8               ()I\n+  #275 = Utf8               java/io/InputStream\n+  #276 = Utf8               available\n+  #277 = Utf8               trim\n+  #278 = Utf8               endsWith\n+  #279 = Utf8               substring\n+  #280 = Utf8               (II)Ljava/lang/String;\n+  #281 = Utf8               java/lang/Integer\n+  #282 = Utf8               parseInt\n+  #283 = Utf8               (Ljava/lang/String;)I\n+  #284 = Utf8               (Ljava/lang/String;JIIIJ)V\n+  #285 = Utf8               ([BII)Ljava/lang/String;\n+  #286 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #287 = Utf8               java/lang/Long\n+  #288 = Utf8               parseLong\n+  #289 = Utf8               (Ljava/lang/String;)J\n+  #290 = Utf8               (Ljava/lang/String;I)I\n+  #291 = Utf8               java/lang/Math\n+  #292 = Utf8               min\n+  #293 = Utf8               (JJ)J\n+  #294 = Utf8               count\n+  #295 = Utf8               (I)V\n+  #296 = Utf8               equals\n+  #297 = Utf8               (Ljava/lang/Object;)Z\n+  #298 = Utf8               (Ljava/io/InputStream;[BII)I\n+  #299 = Utf8               (Ljava/lang/String;J)V\n {\n   private final java.io.InputStream input;\n     descriptor: Ljava/io/InputStream;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private long offset;\n     descriptor: J\n@@ -471,353 +464,377 @@\n         31: aload_0\n         32: aconst_null\n         33: putfield      #4                  // Field currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n         36: aload_0\n         37: getfield      #3                  // Field offset:J\n         40: lconst_0\n         41: lcmp\n-        42: ifne          129\n+        42: ifne          155\n         45: ldc           #19                 // String !<arch>\\n\n         47: invokestatic  #20                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n         50: astore_1\n         51: aload_1\n         52: arraylength\n         53: newarray       byte\n         55: astore_2\n         56: aload_0\n         57: aload_2\n         58: invokestatic  #21                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n         61: istore_3\n         62: iload_3\n         63: aload_1\n         64: arraylength\n-        65: if_icmpeq     85\n+        65: if_icmpeq     98\n         68: new           #22                 // class java/io/IOException\n         71: dup\n-        72: aload_0\n-        73: invokevirtual #23                 // Method getBytesRead:()J\n-        76: invokedynamic #24,  0             // InvokeDynamic #0:makeConcatWithConstants:(J)Ljava/lang/String;\n-        81: invokespecial #25                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-        84: athrow\n-        85: iconst_0\n-        86: istore        4\n-        88: iload         4\n-        90: aload_1\n-        91: arraylength\n-        92: if_icmpge     129\n-        95: aload_1\n-        96: iload         4\n-        98: baload\n-        99: aload_2\n-       100: iload         4\n-       102: baload\n-       103: if_icmpeq     123\n-       106: new           #22                 // class java/io/IOException\n-       109: dup\n-       110: aload_2\n-       111: invokestatic  #26                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([B)Ljava/lang/String;\n-       114: invokedynamic #27,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-       119: invokespecial #25                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       122: athrow\n-       123: iinc          4, 1\n-       126: goto          88\n-       129: aload_0\n-       130: getfield      #3                  // Field offset:J\n-       133: ldc2_w        #28                 // long 2l\n-       136: lrem\n-       137: lconst_0\n-       138: lcmp\n-       139: ifeq          151\n-       142: aload_0\n-       143: invokevirtual #30                 // Method read:()I\n-       146: ifge          151\n-       149: aconst_null\n-       150: areturn\n-       151: aload_0\n-       152: getfield      #14                 // Field input:Ljava/io/InputStream;\n-       155: invokevirtual #31                 // Method java/io/InputStream.available:()I\n-       158: ifne          163\n-       161: aconst_null\n-       162: areturn\n-       163: aload_0\n-       164: aload_0\n-       165: getfield      #9                  // Field nameBuf:[B\n-       168: invokestatic  #21                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n-       171: pop\n-       172: aload_0\n-       173: aload_0\n-       174: getfield      #10                 // Field lastModifiedBuf:[B\n-       177: invokestatic  #21                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n-       180: pop\n-       181: aload_0\n-       182: aload_0\n-       183: getfield      #11                 // Field idBuf:[B\n-       186: invokestatic  #21                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n-       189: pop\n+        72: new           #23                 // class java/lang/StringBuilder\n+        75: dup\n+        76: invokespecial #24                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        79: ldc           #25                 // String failed to read header. Occured at byte:\n+        81: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        84: aload_0\n+        85: invokevirtual #27                 // Method getBytesRead:()J\n+        88: invokevirtual #28                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        91: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        94: invokespecial #30                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        97: athrow\n+        98: iconst_0\n+        99: istore        4\n+       101: iload         4\n+       103: aload_1\n+       104: arraylength\n+       105: if_icmpge     155\n+       108: aload_1\n+       109: iload         4\n+       111: baload\n+       112: aload_2\n+       113: iload         4\n+       115: baload\n+       116: if_icmpeq     149\n+       119: new           #22                 // class java/io/IOException\n+       122: dup\n+       123: new           #23                 // class java/lang/StringBuilder\n+       126: dup\n+       127: invokespecial #24                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       130: ldc           #31                 // String invalid header\n+       132: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       135: aload_2\n+       136: invokestatic  #32                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([B)Ljava/lang/String;\n+       139: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       142: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       145: invokespecial #30                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       148: athrow\n+       149: iinc          4, 1\n+       152: goto          101\n+       155: aload_0\n+       156: getfield      #3                  // Field offset:J\n+       159: ldc2_w        #33                 // long 2l\n+       162: lrem\n+       163: lconst_0\n+       164: lcmp\n+       165: ifeq          177\n+       168: aload_0\n+       169: invokevirtual #35                 // Method read:()I\n+       172: ifge          177\n+       175: aconst_null\n+       176: areturn\n+       177: aload_0\n+       178: getfield      #14                 // Field input:Ljava/io/InputStream;\n+       181: invokevirtual #36                 // Method java/io/InputStream.available:()I\n+       184: ifne          189\n+       187: aconst_null\n+       188: areturn\n+       189: aload_0\n        190: aload_0\n-       191: aload_0\n-       192: getfield      #11                 // Field idBuf:[B\n-       195: iconst_1\n-       196: invokespecial #32                 // Method asInt:([BZ)I\n-       199: istore_1\n-       200: aload_0\n-       201: aload_0\n-       202: getfield      #11                 // Field idBuf:[B\n-       205: invokestatic  #21                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n-       208: pop\n-       209: aload_0\n-       210: aload_0\n-       211: getfield      #12                 // Field fileModeBuf:[B\n-       214: invokestatic  #21                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n-       217: pop\n-       218: aload_0\n-       219: aload_0\n-       220: getfield      #13                 // Field lengthBuf:[B\n-       223: invokestatic  #21                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n-       226: pop\n-       227: ldc           #33                 // String `\\n\n-       229: invokestatic  #20                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n-       232: astore_2\n-       233: aload_2\n-       234: arraylength\n-       235: newarray       byte\n-       237: astore_3\n-       238: aload_0\n-       239: aload_3\n+       191: getfield      #9                  // Field nameBuf:[B\n+       194: invokestatic  #21                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+       197: pop\n+       198: aload_0\n+       199: aload_0\n+       200: getfield      #10                 // Field lastModifiedBuf:[B\n+       203: invokestatic  #21                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+       206: pop\n+       207: aload_0\n+       208: aload_0\n+       209: getfield      #11                 // Field idBuf:[B\n+       212: invokestatic  #21                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+       215: pop\n+       216: aload_0\n+       217: aload_0\n+       218: getfield      #11                 // Field idBuf:[B\n+       221: iconst_1\n+       222: invokespecial #37                 // Method asInt:([BZ)I\n+       225: istore_1\n+       226: aload_0\n+       227: aload_0\n+       228: getfield      #11                 // Field idBuf:[B\n+       231: invokestatic  #21                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+       234: pop\n+       235: aload_0\n+       236: aload_0\n+       237: getfield      #12                 // Field fileModeBuf:[B\n        240: invokestatic  #21                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n-       243: istore        4\n-       245: iload         4\n-       247: aload_2\n-       248: arraylength\n-       249: if_icmpeq     269\n-       252: new           #22                 // class java/io/IOException\n-       255: dup\n-       256: aload_0\n-       257: invokevirtual #23                 // Method getBytesRead:()J\n-       260: invokedynamic #34,  0             // InvokeDynamic #2:makeConcatWithConstants:(J)Ljava/lang/String;\n-       265: invokespecial #25                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       268: athrow\n-       269: iconst_0\n-       270: istore        5\n-       272: iload         5\n-       274: aload_2\n-       275: arraylength\n-       276: if_icmpge     313\n-       279: aload_2\n-       280: iload         5\n-       282: baload\n-       283: aload_3\n-       284: iload         5\n-       286: baload\n-       287: if_icmpeq     307\n-       290: new           #22                 // class java/io/IOException\n-       293: dup\n+       243: pop\n+       244: aload_0\n+       245: aload_0\n+       246: getfield      #13                 // Field lengthBuf:[B\n+       249: invokestatic  #21                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+       252: pop\n+       253: ldc           #38                 // String `\\n\n+       255: invokestatic  #20                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n+       258: astore_2\n+       259: aload_2\n+       260: arraylength\n+       261: newarray       byte\n+       263: astore_3\n+       264: aload_0\n+       265: aload_3\n+       266: invokestatic  #21                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+       269: istore        4\n+       271: iload         4\n+       273: aload_2\n+       274: arraylength\n+       275: if_icmpeq     308\n+       278: new           #22                 // class java/io/IOException\n+       281: dup\n+       282: new           #23                 // class java/lang/StringBuilder\n+       285: dup\n+       286: invokespecial #24                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       289: ldc           #39                 // String failed to read entry trailer. Occured at byte:\n+       291: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        294: aload_0\n-       295: invokevirtual #23                 // Method getBytesRead:()J\n-       298: invokedynamic #35,  0             // InvokeDynamic #3:makeConcatWithConstants:(J)Ljava/lang/String;\n-       303: invokespecial #25                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       306: athrow\n-       307: iinc          5, 1\n-       310: goto          272\n-       313: aload_0\n-       314: aload_0\n-       315: getfield      #3                  // Field offset:J\n-       318: putfield      #8                  // Field entryOffset:J\n-       321: aload_0\n-       322: getfield      #9                  // Field nameBuf:[B\n-       325: invokestatic  #26                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([B)Ljava/lang/String;\n-       328: invokevirtual #36                 // Method java/lang/String.trim:()Ljava/lang/String;\n-       331: astore_2\n-       332: aload_2\n-       333: invokestatic  #37                 // Method isGNUStringTable:(Ljava/lang/String;)Z\n-       336: ifeq          356\n-       339: aload_0\n-       340: aload_0\n-       341: aload_0\n-       342: getfield      #13                 // Field lengthBuf:[B\n-       345: invokespecial #38                 // Method readGNUStringTable:([B)Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-       348: putfield      #4                  // Field currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-       351: aload_0\n-       352: invokevirtual #39                 // Method getNextArEntry:()Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-       355: areturn\n-       356: aload_0\n-       357: aload_0\n-       358: getfield      #13                 // Field lengthBuf:[B\n-       361: invokespecial #40                 // Method asLong:([B)J\n-       364: lstore_3\n-       365: aload_2\n-       366: ldc           #41                 // String /\n-       368: invokevirtual #42                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n-       371: ifeq          389\n-       374: aload_2\n-       375: iconst_0\n-       376: aload_2\n-       377: invokevirtual #43                 // Method java/lang/String.length:()I\n-       380: iconst_1\n-       381: isub\n-       382: invokevirtual #44                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n-       385: astore_2\n-       386: goto          454\n-       389: aload_0\n-       390: aload_2\n-       391: invokespecial #45                 // Method isGNULongName:(Ljava/lang/String;)Z\n-       394: ifeq          417\n-       397: aload_2\n-       398: iconst_1\n-       399: invokevirtual #46                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n-       402: invokestatic  #47                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-       405: istore        5\n-       407: aload_0\n-       408: iload         5\n-       410: invokespecial #48                 // Method getExtendedName:(I)Ljava/lang/String;\n-       413: astore_2\n-       414: goto          454\n+       295: invokevirtual #27                 // Method getBytesRead:()J\n+       298: invokevirtual #28                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+       301: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       304: invokespecial #30                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       307: athrow\n+       308: iconst_0\n+       309: istore        5\n+       311: iload         5\n+       313: aload_2\n+       314: arraylength\n+       315: if_icmpge     365\n+       318: aload_2\n+       319: iload         5\n+       321: baload\n+       322: aload_3\n+       323: iload         5\n+       325: baload\n+       326: if_icmpeq     359\n+       329: new           #22                 // class java/io/IOException\n+       332: dup\n+       333: new           #23                 // class java/lang/StringBuilder\n+       336: dup\n+       337: invokespecial #24                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       340: ldc           #40                 // String invalid entry trailer. not read the content? Occured at byte:\n+       342: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       345: aload_0\n+       346: invokevirtual #27                 // Method getBytesRead:()J\n+       349: invokevirtual #28                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+       352: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       355: invokespecial #30                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       358: athrow\n+       359: iinc          5, 1\n+       362: goto          311\n+       365: aload_0\n+       366: aload_0\n+       367: getfield      #3                  // Field offset:J\n+       370: putfield      #8                  // Field entryOffset:J\n+       373: aload_0\n+       374: getfield      #9                  // Field nameBuf:[B\n+       377: invokestatic  #32                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([B)Ljava/lang/String;\n+       380: invokevirtual #41                 // Method java/lang/String.trim:()Ljava/lang/String;\n+       383: astore_2\n+       384: aload_2\n+       385: invokestatic  #42                 // Method isGNUStringTable:(Ljava/lang/String;)Z\n+       388: ifeq          408\n+       391: aload_0\n+       392: aload_0\n+       393: aload_0\n+       394: getfield      #13                 // Field lengthBuf:[B\n+       397: invokespecial #43                 // Method readGNUStringTable:([B)Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+       400: putfield      #4                  // Field currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+       403: aload_0\n+       404: invokevirtual #44                 // Method getNextArEntry:()Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+       407: areturn\n+       408: aload_0\n+       409: aload_0\n+       410: getfield      #13                 // Field lengthBuf:[B\n+       413: invokespecial #45                 // Method asLong:([B)J\n+       416: lstore_3\n        417: aload_2\n-       418: invokestatic  #49                 // Method isBSDLongName:(Ljava/lang/String;)Z\n-       421: ifeq          454\n-       424: aload_0\n-       425: aload_2\n-       426: invokespecial #50                 // Method getBSDLongName:(Ljava/lang/String;)Ljava/lang/String;\n-       429: astore_2\n-       430: aload_2\n-       431: invokevirtual #43                 // Method java/lang/String.length:()I\n-       434: istore        5\n-       436: lload_3\n-       437: iload         5\n-       439: i2l\n-       440: lsub\n-       441: lstore_3\n-       442: aload_0\n-       443: dup\n-       444: getfield      #8                  // Field entryOffset:J\n-       447: iload         5\n-       449: i2l\n-       450: ladd\n-       451: putfield      #8                  // Field entryOffset:J\n-       454: aload_0\n-       455: new           #18                 // class org/apache/commons/compress/archivers/ar/ArArchiveEntry\n-       458: dup\n-       459: aload_2\n-       460: lload_3\n-       461: iload_1\n-       462: aload_0\n-       463: aload_0\n-       464: getfield      #11                 // Field idBuf:[B\n-       467: iconst_1\n-       468: invokespecial #32                 // Method asInt:([BZ)I\n-       471: aload_0\n-       472: aload_0\n-       473: getfield      #12                 // Field fileModeBuf:[B\n-       476: bipush        8\n-       478: invokespecial #51                 // Method asInt:([BI)I\n-       481: aload_0\n-       482: aload_0\n-       483: getfield      #10                 // Field lastModifiedBuf:[B\n-       486: invokespecial #40                 // Method asLong:([B)J\n-       489: invokespecial #52                 // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/lang/String;JIIIJ)V\n-       492: putfield      #4                  // Field currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-       495: aload_0\n-       496: getfield      #4                  // Field currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-       499: areturn\n+       418: ldc           #46                 // String /\n+       420: invokevirtual #47                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n+       423: ifeq          441\n+       426: aload_2\n+       427: iconst_0\n+       428: aload_2\n+       429: invokevirtual #48                 // Method java/lang/String.length:()I\n+       432: iconst_1\n+       433: isub\n+       434: invokevirtual #49                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+       437: astore_2\n+       438: goto          506\n+       441: aload_0\n+       442: aload_2\n+       443: invokespecial #50                 // Method isGNULongName:(Ljava/lang/String;)Z\n+       446: ifeq          469\n+       449: aload_2\n+       450: iconst_1\n+       451: invokevirtual #51                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n+       454: invokestatic  #52                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+       457: istore        5\n+       459: aload_0\n+       460: iload         5\n+       462: invokespecial #53                 // Method getExtendedName:(I)Ljava/lang/String;\n+       465: astore_2\n+       466: goto          506\n+       469: aload_2\n+       470: invokestatic  #54                 // Method isBSDLongName:(Ljava/lang/String;)Z\n+       473: ifeq          506\n+       476: aload_0\n+       477: aload_2\n+       478: invokespecial #55                 // Method getBSDLongName:(Ljava/lang/String;)Ljava/lang/String;\n+       481: astore_2\n+       482: aload_2\n+       483: invokevirtual #48                 // Method java/lang/String.length:()I\n+       486: istore        5\n+       488: lload_3\n+       489: iload         5\n+       491: i2l\n+       492: lsub\n+       493: lstore_3\n+       494: aload_0\n+       495: dup\n+       496: getfield      #8                  // Field entryOffset:J\n+       499: iload         5\n+       501: i2l\n+       502: ladd\n+       503: putfield      #8                  // Field entryOffset:J\n+       506: aload_0\n+       507: new           #18                 // class org/apache/commons/compress/archivers/ar/ArArchiveEntry\n+       510: dup\n+       511: aload_2\n+       512: lload_3\n+       513: iload_1\n+       514: aload_0\n+       515: aload_0\n+       516: getfield      #11                 // Field idBuf:[B\n+       519: iconst_1\n+       520: invokespecial #37                 // Method asInt:([BZ)I\n+       523: aload_0\n+       524: aload_0\n+       525: getfield      #12                 // Field fileModeBuf:[B\n+       528: bipush        8\n+       530: invokespecial #56                 // Method asInt:([BI)I\n+       533: aload_0\n+       534: aload_0\n+       535: getfield      #10                 // Field lastModifiedBuf:[B\n+       538: invokespecial #45                 // Method asLong:([B)J\n+       541: invokespecial #57                 // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/lang/String;JIIIJ)V\n+       544: putfield      #4                  // Field currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+       547: aload_0\n+       548: getfield      #4                  // Field currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+       551: areturn\n       LineNumberTable:\n         line 83: 0\n         line 84: 7\n         line 85: 20\n         line 86: 31\n         line 89: 36\n         line 90: 45\n         line 91: 51\n         line 92: 56\n         line 93: 62\n         line 94: 68\n-        line 96: 85\n-        line 97: 95\n-        line 98: 106\n-        line 96: 123\n-        line 103: 129\n-        line 105: 149\n-        line 108: 151\n-        line 109: 161\n-        line 112: 163\n-        line 113: 172\n-        line 114: 181\n-        line 115: 190\n-        line 116: 200\n-        line 117: 209\n-        line 118: 218\n-        line 121: 227\n-        line 122: 233\n-        line 123: 238\n-        line 124: 245\n-        line 125: 252\n-        line 127: 269\n-        line 128: 279\n-        line 129: 290\n-        line 127: 307\n-        line 134: 313\n-        line 139: 321\n-        line 140: 332\n-        line 141: 339\n-        line 142: 351\n-        line 145: 356\n-        line 146: 365\n-        line 147: 374\n-        line 148: 389\n-        line 149: 397\n-        line 150: 407\n-        line 151: 414\n-        line 152: 424\n-        line 156: 430\n-        line 157: 436\n-        line 158: 442\n-        line 161: 454\n-        line 162: 468\n-        line 163: 478\n-        line 164: 486\n-        line 165: 495\n+        line 96: 98\n+        line 97: 108\n+        line 98: 119\n+        line 96: 149\n+        line 103: 155\n+        line 105: 175\n+        line 108: 177\n+        line 109: 187\n+        line 112: 189\n+        line 113: 198\n+        line 114: 207\n+        line 115: 216\n+        line 116: 226\n+        line 117: 235\n+        line 118: 244\n+        line 121: 253\n+        line 122: 259\n+        line 123: 264\n+        line 124: 271\n+        line 125: 278\n+        line 127: 308\n+        line 128: 318\n+        line 129: 329\n+        line 127: 359\n+        line 134: 365\n+        line 139: 373\n+        line 140: 384\n+        line 141: 391\n+        line 142: 403\n+        line 145: 408\n+        line 146: 417\n+        line 147: 426\n+        line 148: 441\n+        line 149: 449\n+        line 150: 459\n+        line 151: 466\n+        line 152: 476\n+        line 156: 482\n+        line 157: 488\n+        line 158: 494\n+        line 161: 506\n+        line 162: 520\n+        line 163: 530\n+        line 164: 538\n+        line 165: 547\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n            20      16     1 entryEnd   J\n-           88      41     4     i   I\n-           51      78     1 expected   [B\n-           56      73     2 realized   [B\n-           62      67     3  read   I\n-          272      41     5     i   I\n-          233      80     2 expected   [B\n-          238      75     3 realized   [B\n-          245      68     4  read   I\n-          407       7     5   off   I\n-          436      18     5 nameLen   I\n-            0     500     0  this   Lorg/apache/commons/compress/archivers/ar/ArArchiveInputStream;\n-          200     300     1 userId   I\n-          332     168     2  temp   Ljava/lang/String;\n-          365     135     3   len   J\n+          101      54     4     i   I\n+           51     104     1 expected   [B\n+           56      99     2 realized   [B\n+           62      93     3  read   I\n+          311      54     5     i   I\n+          259     106     2 expected   [B\n+          264     101     3 realized   [B\n+          271      94     4  read   I\n+          459       7     5   off   I\n+          488      18     5 nameLen   I\n+            0     552     0  this   Lorg/apache/commons/compress/archivers/ar/ArArchiveInputStream;\n+          226     326     1 userId   I\n+          384     168     2  temp   Ljava/lang/String;\n+          417     135     3   len   J\n       StackMapTable: number_of_entries = 15\n         frame_type = 36 /* same */\n         frame_type = 254 /* append */\n-          offset_delta = 48\n+          offset_delta = 61\n           locals = [ class \"[B\", class \"[B\", int ]\n         frame_type = 252 /* append */\n           offset_delta = 2\n           locals = [ int ]\n-        frame_type = 34 /* same */\n+        frame_type = 47 /* same */\n         frame_type = 255 /* full_frame */\n           offset_delta = 5\n           locals = [ class org/apache/commons/compress/archivers/ar/ArArchiveInputStream ]\n           stack = []\n         frame_type = 21 /* same */\n         frame_type = 11 /* same */\n         frame_type = 255 /* full_frame */\n-          offset_delta = 105\n+          offset_delta = 118\n           locals = [ class org/apache/commons/compress/archivers/ar/ArArchiveInputStream, int, class \"[B\", class \"[B\", int ]\n           stack = []\n         frame_type = 252 /* append */\n           offset_delta = 2\n           locals = [ int ]\n-        frame_type = 34 /* same */\n+        frame_type = 47 /* same */\n         frame_type = 255 /* full_frame */\n           offset_delta = 5\n           locals = [ class org/apache/commons/compress/archivers/ar/ArArchiveInputStream, int ]\n           stack = []\n         frame_type = 252 /* append */\n           offset_delta = 42\n           locals = [ class java/lang/String ]\n@@ -835,16 +852,16 @@\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_0\n          1: getfield      #5                  // Field namebuffer:[B\n          4: ifnonnull     17\n          7: new           #22                 // class java/io/IOException\n         10: dup\n-        11: ldc           #53                 // String Cannot process GNU long filename as no // record was found\n-        13: invokespecial #25                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #58                 // String Cannot process GNU long filename as no // record was found\n+        13: invokespecial #30                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: iload_1\n         18: istore_2\n         19: iload_2\n         20: aload_0\n         21: getfield      #5                  // Field namebuffer:[B\n         24: arraylength\n@@ -871,39 +888,45 @@\n         61: iinc          2, -1\n         64: aload_0\n         65: getfield      #5                  // Field namebuffer:[B\n         68: iload_1\n         69: iload_2\n         70: iload_1\n         71: isub\n-        72: invokestatic  #54                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([BII)Ljava/lang/String;\n+        72: invokestatic  #59                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([BII)Ljava/lang/String;\n         75: areturn\n         76: iinc          2, 1\n         79: goto          19\n         82: new           #22                 // class java/io/IOException\n         85: dup\n-        86: iload_1\n-        87: invokedynamic #55,  0             // InvokeDynamic #4:makeConcatWithConstants:(I)Ljava/lang/String;\n-        92: invokespecial #25                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-        95: athrow\n+        86: new           #23                 // class java/lang/StringBuilder\n+        89: dup\n+        90: invokespecial #24                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        93: ldc           #60                 // String Failed to read entry:\n+        95: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        98: iload_1\n+        99: invokevirtual #61                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       102: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       105: invokespecial #30                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       108: athrow\n       LineNumberTable:\n         line 176: 0\n         line 177: 7\n         line 179: 17\n         line 180: 28\n         line 181: 48\n         line 182: 61\n         line 184: 64\n         line 179: 76\n         line 187: 82\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n            19      63     2     i   I\n-            0      96     0  this   Lorg/apache/commons/compress/archivers/ar/ArArchiveInputStream;\n-            0      96     1 offset   I\n+            0     109     0  this   Lorg/apache/commons/compress/archivers/ar/ArArchiveInputStream;\n+            0     109     1 offset   I\n       StackMapTable: number_of_entries = 6\n         frame_type = 17 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 1\n           locals = [ int ]\n         frame_type = 28 /* same */\n         frame_type = 15 /* same */\n@@ -915,17 +938,17 @@\n \n   private long asLong(byte[]);\n     descriptor: ([B)J\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #26                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([B)Ljava/lang/String;\n-         4: invokevirtual #36                 // Method java/lang/String.trim:()Ljava/lang/String;\n-         7: invokestatic  #56                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J\n+         1: invokestatic  #32                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([B)Ljava/lang/String;\n+         4: invokevirtual #41                 // Method java/lang/String.trim:()Ljava/lang/String;\n+         7: invokestatic  #62                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J\n         10: lreturn\n       LineNumberTable:\n         line 191: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/archivers/ar/ArArchiveInputStream;\n             0      11     1 byteArray   [B\n@@ -935,15 +958,15 @@\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: bipush        10\n          4: iconst_0\n-         5: invokespecial #57                 // Method asInt:([BIZ)I\n+         5: invokespecial #63                 // Method asInt:([BIZ)I\n          8: ireturn\n       LineNumberTable:\n         line 195: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/archivers/ar/ArArchiveInputStream;\n             0       9     1 byteArray   [B\n@@ -953,15 +976,15 @@\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: bipush        10\n          4: iload_2\n-         5: invokespecial #57                 // Method asInt:([BIZ)I\n+         5: invokespecial #63                 // Method asInt:([BIZ)I\n          8: ireturn\n       LineNumberTable:\n         line 199: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/archivers/ar/ArArchiveInputStream;\n             0       9     1 byteArray   [B\n@@ -972,15 +995,15 @@\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iconst_0\n-         4: invokespecial #57                 // Method asInt:([BIZ)I\n+         4: invokespecial #63                 // Method asInt:([BIZ)I\n          7: ireturn\n       LineNumberTable:\n         line 203: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/archivers/ar/ArArchiveInputStream;\n             0       8     1 byteArray   [B\n@@ -988,27 +1011,27 @@\n \n   private int asInt(byte[], int, boolean);\n     descriptor: ([BIZ)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=5, args_size=4\n          0: aload_1\n-         1: invokestatic  #26                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([B)Ljava/lang/String;\n-         4: invokevirtual #36                 // Method java/lang/String.trim:()Ljava/lang/String;\n+         1: invokestatic  #32                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([B)Ljava/lang/String;\n+         4: invokevirtual #41                 // Method java/lang/String.trim:()Ljava/lang/String;\n          7: astore        4\n          9: aload         4\n-        11: invokevirtual #43                 // Method java/lang/String.length:()I\n+        11: invokevirtual #48                 // Method java/lang/String.length:()I\n         14: ifne          23\n         17: iload_3\n         18: ifeq          23\n         21: iconst_0\n         22: ireturn\n         23: aload         4\n         25: iload_2\n-        26: invokestatic  #58                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n+        26: invokestatic  #64                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n         29: ireturn\n       LineNumberTable:\n         line 207: 0\n         line 208: 9\n         line 209: 21\n         line 211: 23\n       LocalVariableTable:\n@@ -1025,15 +1048,15 @@\n \n   public org.apache.commons.compress.archivers.ArchiveEntry getNextEntry() throws java.io.IOException;\n     descriptor: ()Lorg/apache/commons/compress/archivers/ArchiveEntry;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #39                 // Method getNextArEntry:()Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+         1: invokevirtual #44                 // Method getNextArEntry:()Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n          4: areturn\n       LineNumberTable:\n         line 222: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/ar/ArArchiveInputStream;\n     Exceptions:\n@@ -1048,15 +1071,15 @@\n          1: getfield      #15                 // Field closed:Z\n          4: ifne          19\n          7: aload_0\n          8: iconst_1\n          9: putfield      #15                 // Field closed:Z\n         12: aload_0\n         13: getfield      #14                 // Field input:Ljava/io/InputStream;\n-        16: invokevirtual #59                 // Method java/io/InputStream.close:()V\n+        16: invokevirtual #65                 // Method java/io/InputStream.close:()V\n         19: aload_0\n         20: aconst_null\n         21: putfield      #4                  // Field currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n         24: return\n       LineNumberTable:\n         line 232: 0\n         line 233: 7\n@@ -1097,30 +1120,30 @@\n         35: ifle          56\n         38: iload_3\n         39: i2l\n         40: lload         5\n         42: aload_0\n         43: getfield      #3                  // Field offset:J\n         46: lsub\n-        47: invokestatic  #60                 // Method java/lang/Math.min:(JJ)J\n+        47: invokestatic  #66                 // Method java/lang/Math.min:(JJ)J\n         50: l2i\n         51: istore        4\n         53: goto          58\n         56: iconst_m1\n         57: ireturn\n         58: aload_0\n         59: getfield      #14                 // Field input:Ljava/io/InputStream;\n         62: aload_1\n         63: iload_2\n         64: iload         4\n-        66: invokevirtual #61                 // Method java/io/InputStream.read:([BII)I\n+        66: invokevirtual #67                 // Method java/io/InputStream.read:([BII)I\n         69: istore        5\n         71: aload_0\n         72: iload         5\n-        74: invokevirtual #62                 // Method count:(I)V\n+        74: invokevirtual #68                 // Method count:(I)V\n         77: aload_0\n         78: dup\n         79: getfield      #3                  // Field offset:J\n         82: iload         5\n         84: ifle          93\n         87: iload         5\n         89: i2l\n@@ -1235,16 +1258,16 @@\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: ifnull        17\n          4: aload_0\n-         5: ldc           #63                 // String ^#1/\\\\d+\n-         7: invokevirtual #64                 // Method java/lang/String.matches:(Ljava/lang/String;)Z\n+         5: ldc           #69                 // String ^#1/\\\\d+\n+         7: invokevirtual #70                 // Method java/lang/String.matches:(Ljava/lang/String;)Z\n         10: ifeq          17\n         13: iconst_1\n         14: goto          18\n         17: iconst_0\n         18: ireturn\n       LineNumberTable:\n         line 310: 0\n@@ -1258,34 +1281,34 @@\n \n   private java.lang.String getBSDLongName(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=5, args_size=2\n          0: aload_1\n-         1: getstatic     #65                 // Field BSD_LONGNAME_PREFIX_LEN:I\n-         4: invokevirtual #46                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n-         7: invokestatic  #47                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+         1: getstatic     #71                 // Field BSD_LONGNAME_PREFIX_LEN:I\n+         4: invokevirtual #51                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n+         7: invokestatic  #52                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n         10: istore_2\n         11: iload_2\n         12: newarray       byte\n         14: astore_3\n         15: aload_0\n         16: aload_3\n         17: invokestatic  #21                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n         20: istore        4\n         22: iload         4\n         24: iload_2\n         25: if_icmpeq     36\n-        28: new           #66                 // class java/io/EOFException\n+        28: new           #72                 // class java/io/EOFException\n         31: dup\n-        32: invokespecial #67                 // Method java/io/EOFException.\"<init>\":()V\n+        32: invokespecial #73                 // Method java/io/EOFException.\"<init>\":()V\n         35: athrow\n         36: aload_3\n-        37: invokestatic  #26                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([B)Ljava/lang/String;\n+        37: invokestatic  #32                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([B)Ljava/lang/String;\n         40: areturn\n       LineNumberTable:\n         line 322: 0\n         line 323: 4\n         line 324: 11\n         line 325: 15\n         line 326: 22\n@@ -1306,91 +1329,100 @@\n       throws java.io.IOException\n \n   private static boolean isGNUStringTable(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: ldc           #68                 // String //\n+         0: ldc           #74                 // String //\n          2: aload_0\n-         3: invokevirtual #69                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+         3: invokevirtual #75                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n          6: ireturn\n       LineNumberTable:\n         line 352: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  name   Ljava/lang/String;\n \n   private org.apache.commons.compress.archivers.ar.ArArchiveEntry readGNUStringTable(byte[]) throws java.io.IOException;\n     descriptor: ([B)Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=4, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #70                 // Method asInt:([B)I\n+         2: invokespecial #76                 // Method asInt:([B)I\n          5: istore_2\n          6: aload_0\n          7: iload_2\n          8: newarray       byte\n         10: putfield      #5                  // Field namebuffer:[B\n         13: aload_0\n         14: aload_0\n         15: getfield      #5                  // Field namebuffer:[B\n         18: iconst_0\n         19: iload_2\n-        20: invokestatic  #71                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[BII)I\n+        20: invokestatic  #77                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[BII)I\n         23: istore_3\n         24: iload_3\n         25: iload_2\n-        26: if_icmpeq     44\n+        26: if_icmpeq     65\n         29: new           #22                 // class java/io/IOException\n         32: dup\n-        33: iload_2\n-        34: iload_3\n-        35: invokedynamic #72,  0             // InvokeDynamic #5:makeConcatWithConstants:(II)Ljava/lang/String;\n-        40: invokespecial #25                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-        43: athrow\n-        44: new           #18                 // class org/apache/commons/compress/archivers/ar/ArArchiveEntry\n-        47: dup\n-        48: ldc           #68                 // String //\n-        50: iload_2\n-        51: i2l\n-        52: invokespecial #73                 // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/lang/String;J)V\n-        55: areturn\n+        33: new           #23                 // class java/lang/StringBuilder\n+        36: dup\n+        37: invokespecial #24                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        40: ldc           #78                 // String Failed to read complete // record: expected=\n+        42: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        45: iload_2\n+        46: invokevirtual #61                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        49: ldc           #79                 // String  read=\n+        51: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        54: iload_3\n+        55: invokevirtual #61                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        58: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        61: invokespecial #30                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        64: athrow\n+        65: new           #18                 // class org/apache/commons/compress/archivers/ar/ArArchiveEntry\n+        68: dup\n+        69: ldc           #74                 // String //\n+        71: iload_2\n+        72: i2l\n+        73: invokespecial #80                 // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/lang/String;J)V\n+        76: areturn\n       LineNumberTable:\n         line 361: 0\n         line 362: 6\n         line 363: 13\n         line 364: 24\n         line 365: 29\n-        line 368: 44\n+        line 368: 65\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      56     0  this   Lorg/apache/commons/compress/archivers/ar/ArArchiveInputStream;\n-            0      56     1 length   [B\n-            6      50     2 bufflen   I\n-           24      32     3  read   I\n+            0      77     0  this   Lorg/apache/commons/compress/archivers/ar/ArArchiveInputStream;\n+            0      77     1 length   [B\n+            6      71     2 bufflen   I\n+           24      53     3  read   I\n       StackMapTable: number_of_entries = 1\n         frame_type = 253 /* append */\n-          offset_delta = 44\n+          offset_delta = 65\n           locals = [ int, int ]\n     Exceptions:\n       throws java.io.IOException\n \n   private boolean isGNULongName(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: ifnull        17\n          4: aload_1\n-         5: ldc           #74                 // String ^/\\\\d+\n-         7: invokevirtual #64                 // Method java/lang/String.matches:(Ljava/lang/String;)Z\n+         5: ldc           #81                 // String ^/\\\\d+\n+         7: invokevirtual #70                 // Method java/lang/String.matches:(Ljava/lang/String;)Z\n         10: ifeq          17\n         13: iconst_1\n         14: goto          18\n         17: iconst_0\n         18: ireturn\n       LineNumberTable:\n         line 380: 0\n@@ -1404,38 +1436,17 @@\n           stack = [ int ]\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: ldc           #75                 // String #1/\n-         2: invokevirtual #43                 // Method java/lang/String.length:()I\n-         5: putstatic     #65                 // Field BSD_LONGNAME_PREFIX_LEN:I\n+         0: ldc           #82                 // String #1/\n+         2: invokevirtual #48                 // Method java/lang/String.length:()I\n+         5: putstatic     #71                 // Field BSD_LONGNAME_PREFIX_LEN:I\n          8: return\n       LineNumberTable:\n         line 282: 0\n         line 283: 2\n         line 282: 8\n }\n SourceFile: \"ArArchiveInputStream.java\"\n-InnerClasses:\n-  public static final #301= #300 of #304; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n-BootstrapMethods:\n-  0: #188 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #189 failed to read header. Occured at byte: \\u0001\n-  1: #188 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #193 invalid header \\u0001\n-  2: #188 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #200 failed to read entry trailer. Occured at byte: \\u0001\n-  3: #188 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #201 invalid entry trailer. not read the content? Occured at byte: \\u0001\n-  4: #188 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #222 Failed to read entry: \\u0001\n-  5: #188 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #241 Failed to read complete // record: expected=\\u0001 read=\\u0001\n"}]}
