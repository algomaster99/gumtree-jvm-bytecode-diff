{"diffoscope-json-version": 1, "source1": "first/JavadocParser$DescriptionContext.class", "source2": "second/JavadocParser$DescriptionContext.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -9,66 +9,66 @@\n \n public static class DescriptionContext extends ParserRuleContext\n {\n     public List<JavadocParser.HtmlCommentContext> htmlComment() {\n         return this.getRuleContexts((Class)JavadocParser.HtmlCommentContext.class);\n     }\n     \n-    public JavadocParser.HtmlCommentContext htmlComment(final int i) {\n-        return (JavadocParser.HtmlCommentContext)this.getRuleContext((Class)JavadocParser.HtmlCommentContext.class, i);\n+    public JavadocParser.HtmlCommentContext htmlComment(final int n) {\n+        return (JavadocParser.HtmlCommentContext)this.getRuleContext((Class)JavadocParser.HtmlCommentContext.class, n);\n     }\n     \n     public List<TerminalNode> NEWLINE() {\n         return this.getTokens(6);\n     }\n     \n-    public TerminalNode NEWLINE(final int i) {\n-        return this.getToken(6, i);\n+    public TerminalNode NEWLINE(final int n) {\n+        return this.getToken(6, n);\n     }\n     \n     public List<JavadocParser.TextContext> text() {\n         return this.getRuleContexts((Class)JavadocParser.TextContext.class);\n     }\n     \n-    public JavadocParser.TextContext text(final int i) {\n-        return (JavadocParser.TextContext)this.getRuleContext((Class)JavadocParser.TextContext.class, i);\n+    public JavadocParser.TextContext text(final int n) {\n+        return (JavadocParser.TextContext)this.getRuleContext((Class)JavadocParser.TextContext.class, n);\n     }\n     \n     public List<JavadocParser.JavadocInlineTagContext> javadocInlineTag() {\n         return this.getRuleContexts((Class)JavadocParser.JavadocInlineTagContext.class);\n     }\n     \n-    public JavadocParser.JavadocInlineTagContext javadocInlineTag(final int i) {\n-        return (JavadocParser.JavadocInlineTagContext)this.getRuleContext((Class)JavadocParser.JavadocInlineTagContext.class, i);\n+    public JavadocParser.JavadocInlineTagContext javadocInlineTag(final int n) {\n+        return (JavadocParser.JavadocInlineTagContext)this.getRuleContext((Class)JavadocParser.JavadocInlineTagContext.class, n);\n     }\n     \n     public List<JavadocParser.HtmlElementContext> htmlElement() {\n         return this.getRuleContexts((Class)JavadocParser.HtmlElementContext.class);\n     }\n     \n-    public JavadocParser.HtmlElementContext htmlElement(final int i) {\n-        return (JavadocParser.HtmlElementContext)this.getRuleContext((Class)JavadocParser.HtmlElementContext.class, i);\n+    public JavadocParser.HtmlElementContext htmlElement(final int n) {\n+        return (JavadocParser.HtmlElementContext)this.getRuleContext((Class)JavadocParser.HtmlElementContext.class, n);\n     }\n     \n     public List<TerminalNode> LEADING_ASTERISK() {\n         return this.getTokens(1);\n     }\n     \n-    public TerminalNode LEADING_ASTERISK(final int i) {\n-        return this.getToken(1, i);\n+    public TerminalNode LEADING_ASTERISK(final int n) {\n+        return this.getToken(1, n);\n     }\n     \n-    public DescriptionContext(final ParserRuleContext parent, final int invokingState) {\n-        super(parent, invokingState);\n+    public DescriptionContext(final ParserRuleContext parserRuleContext, final int n) {\n+        super(parserRuleContext, n);\n     }\n     \n     public int getRuleIndex() {\n         return 68;\n     }\n     \n-    public <T> T accept(final ParseTreeVisitor<? extends T> visitor) {\n-        if (visitor instanceof JavadocParserVisitor) {\n-            return (T)((JavadocParserVisitor)visitor).visitDescription(this);\n+    public <T> T accept(final ParseTreeVisitor<? extends T> parseTreeVisitor) {\n+        if (parseTreeVisitor instanceof JavadocParserVisitor) {\n+            return (T)((JavadocParserVisitor)parseTreeVisitor).visitDescription(this);\n         }\n-        return (T)visitor.visitChildren((RuleNode)this);\n+        return (T)parseTreeVisitor.visitChildren((RuleNode)this);\n     }\n }\n"}]}
