{"diffoscope-json-version": 1, "source1": "first/FloatToDecimal.class", "source2": "second/FloatToDecimal.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,306 +1,306 @@\n-  SHA-256 checksum 98ba7b359aaa1ca8467648951fab9c6acbd3eb57eb3bea70082e44bc94e4eadd\n+  SHA-256 checksum 40f4f9150d61361c8112e6f75c6a661a048c10fb3444182a46f4d32da5a84f06\n   Compiled from \"FloatToDecimal.java\"\n public final class com.fasterxml.jackson.core.io.schubfach.FloatToDecimal\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #2                          // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal\n-  super_class: #65                        // java/lang/Object\n+  this_class: #3                          // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal\n+  super_class: #6                         // java/lang/Object\n   interfaces: 0, fields: 26, methods: 21, attributes: 3\n Constant pool:\n-    #1 = Class              #199          // java/lang/Float\n-    #2 = Class              #200          // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal\n-    #3 = Methodref          #65.#201      // java/lang/Object.\"<init>\":()V\n-    #4 = Fieldref           #2.#202       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.MAX_CHARS:I\n-    #5 = Fieldref           #2.#203       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.bytes:[B\n-    #6 = Fieldref           #2.#204       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.chars:[C\n-    #7 = Methodref          #2.#205       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.threadLocalInstance:()Lcom/fasterxml/jackson/core/io/schubfach/FloatToDecimal;\n-    #8 = Methodref          #2.#206       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toDecimalString:(F)Ljava/lang/String;\n-    #9 = Methodref          #2.#207       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.appendDecimalTo:(FLjava/lang/Appendable;)Ljava/lang/Appendable;\n-   #10 = Fieldref           #2.#208       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.threadLocal:Ljava/lang/ThreadLocal;\n-   #11 = Methodref          #209.#210     // java/lang/ThreadLocal.get:()Ljava/lang/Object;\n-   #12 = Methodref          #2.#211       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toDecimal:(F)I\n-   #13 = Methodref          #2.#212       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.charsToString:()Ljava/lang/String;\n-   #14 = String             #213          // 0.0\n-   #15 = String             #214          // -0.0\n-   #16 = String             #215          // Infinity\n-   #17 = String             #216          // -Infinity\n-   #18 = String             #217          // NaN\n-   #19 = Fieldref           #2.#218       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.index:I\n-   #20 = Class              #219          // java/lang/StringBuilder\n-   #21 = Methodref          #20.#220      // java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;\n-   #22 = Class              #221          // java/lang/StringBuffer\n-   #23 = Methodref          #22.#222      // java/lang/StringBuffer.append:([CII)Ljava/lang/StringBuffer;\n-   #24 = InterfaceMethodref #223.#224     // java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n-   #25 = InterfaceMethodref #223.#225     // java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-   #26 = Methodref          #1.#226       // java/lang/Float.floatToRawIntBits:(F)I\n-   #27 = Integer            8388607\n-   #28 = Methodref          #2.#227       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.append:(I)V\n-   #29 = Integer            8388608\n-   #30 = Methodref          #2.#228       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toChars:(II)I\n-   #31 = Methodref          #2.#229       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toDecimal:(III)I\n-   #32 = Long               2l\n-   #34 = Methodref          #230.#231     // com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10pow2:(I)I\n-   #35 = Methodref          #230.#232     // com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10threeQuartersPow2:(I)I\n-   #36 = Methodref          #230.#233     // com/fasterxml/jackson/core/io/schubfach/MathUtils.flog2pow10:(I)I\n-   #37 = Methodref          #230.#234     // com/fasterxml/jackson/core/io/schubfach/MathUtils.g1:(I)J\n-   #38 = Methodref          #2.#235       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.rop:(JJ)I\n-   #39 = Long               1717986919l\n-   #41 = Methodref          #230.#236     // com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n-   #42 = Long               4294967295l\n-   #44 = Class              #237          // java/lang/Integer\n-   #45 = Methodref          #44.#238      // java/lang/Integer.numberOfLeadingZeros:(I)I\n-   #46 = Methodref          #230.#239     // com/fasterxml/jackson/core/io/schubfach/MathUtils.pow10:(I)J\n-   #47 = Long               1441151881l\n-   #49 = Integer            100000000\n-   #50 = Methodref          #2.#240       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toChars1:(III)I\n-   #51 = Methodref          #2.#241       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toChars2:(III)I\n-   #52 = Methodref          #2.#242       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toChars3:(III)I\n-   #53 = Methodref          #2.#243       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.appendDigit:(I)V\n-   #54 = Methodref          #2.#244       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.y:(I)I\n-   #55 = Integer            268435455\n-   #56 = Methodref          #2.#245       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.removeTrailingZeroes:()V\n-   #57 = Methodref          #2.#246       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.append8Digits:(I)V\n-   #58 = Methodref          #2.#247       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.exponent:(I)V\n-   #59 = Long               193428131138340668l\n-   #61 = Class              #248          // java/lang/String\n-   #62 = Methodref          #61.#249      // java/lang/String.\"<init>\":([BIII)V\n-   #63 = InvokeDynamic      #0:#255       // #0:get:()Ljava/util/function/Supplier;\n-   #64 = Methodref          #209.#256     // java/lang/ThreadLocal.withInitial:(Ljava/util/function/Supplier;)Ljava/lang/ThreadLocal;\n-   #65 = Class              #257          // java/lang/Object\n-   #66 = Utf8               P\n-   #67 = Utf8               I\n-   #68 = Utf8               ConstantValue\n-   #69 = Integer            24\n-   #70 = Utf8               W\n-   #71 = Integer            8\n-   #72 = Utf8               Q_MIN\n-   #73 = Integer            -149\n-   #74 = Utf8               Q_MAX\n-   #75 = Integer            104\n-   #76 = Utf8               E_MIN\n-   #77 = Integer            -44\n-   #78 = Utf8               E_MAX\n-   #79 = Integer            39\n-   #80 = Utf8               C_TINY\n-   #81 = Utf8               K_MIN\n-   #82 = Integer            -45\n-   #83 = Utf8               K_MAX\n-   #84 = Integer            31\n-   #85 = Utf8               H\n-   #86 = Integer            9\n-   #87 = Utf8               C_MIN\n-   #88 = Utf8               BQ_MASK\n-   #89 = Integer            255\n-   #90 = Utf8               T_MASK\n-   #91 = Utf8               MASK_32\n-   #92 = Utf8               J\n-   #93 = Utf8               MASK_28\n-   #94 = Utf8               NON_SPECIAL\n-   #95 = Integer            0\n-   #96 = Utf8               PLUS_ZERO\n-   #97 = Integer            1\n-   #98 = Utf8               MINUS_ZERO\n-   #99 = Integer            2\n-  #100 = Utf8               PLUS_INF\n-  #101 = Integer            3\n-  #102 = Utf8               MINUS_INF\n-  #103 = Integer            4\n-  #104 = Utf8               NAN\n-  #105 = Integer            5\n-  #106 = Utf8               threadLocal\n-  #107 = Utf8               Ljava/lang/ThreadLocal;\n-  #108 = Utf8               Signature\n-  #109 = Utf8               Ljava/lang/ThreadLocal<Lcom/fasterxml/jackson/core/io/schubfach/FloatToDecimal;>;\n-  #110 = Utf8               MAX_CHARS\n-  #111 = Integer            15\n-  #112 = Utf8               bytes\n-  #113 = Utf8               [B\n-  #114 = Utf8               chars\n-  #115 = Utf8               [C\n-  #116 = Utf8               index\n-  #117 = Utf8               <init>\n-  #118 = Utf8               ()V\n-  #119 = Utf8               Code\n-  #120 = Utf8               LineNumberTable\n-  #121 = Utf8               LocalVariableTable\n-  #122 = Utf8               this\n-  #123 = Utf8               Lcom/fasterxml/jackson/core/io/schubfach/FloatToDecimal;\n-  #124 = Utf8               toString\n-  #125 = Utf8               (F)Ljava/lang/String;\n-  #126 = Utf8               v\n-  #127 = Utf8               F\n-  #128 = Utf8               appendTo\n-  #129 = Utf8               (FLjava/lang/Appendable;)Ljava/lang/Appendable;\n-  #130 = Utf8               app\n-  #131 = Utf8               Ljava/lang/Appendable;\n-  #132 = Utf8               Exceptions\n-  #133 = Class              #258          // java/io/IOException\n-  #134 = Utf8               threadLocalInstance\n-  #135 = Utf8               ()Lcom/fasterxml/jackson/core/io/schubfach/FloatToDecimal;\n-  #136 = Utf8               toDecimalString\n-  #137 = Utf8               StackMapTable\n-  #138 = Utf8               appendDecimalTo\n-  #139 = Utf8               i\n-  #140 = Utf8               toDecimal\n-  #141 = Utf8               (F)I\n-  #142 = Utf8               f\n-  #143 = Utf8               mq\n-  #144 = Utf8               c\n-  #145 = Utf8               bits\n-  #146 = Utf8               t\n-  #147 = Utf8               bq\n-  #148 = Utf8               (III)I\n-  #149 = Utf8               cbl\n-  #150 = Utf8               k\n-  #151 = Utf8               sp10\n-  #152 = Utf8               tp10\n-  #153 = Utf8               upin\n-  #154 = Utf8               Z\n-  #155 = Utf8               wpin\n-  #156 = Utf8               q\n-  #157 = Utf8               dk\n-  #158 = Utf8               out\n-  #159 = Utf8               cb\n-  #160 = Utf8               cbr\n-  #161 = Utf8               h\n-  #162 = Utf8               g\n-  #163 = Utf8               vb\n-  #164 = Utf8               vbl\n-  #165 = Utf8               vbr\n-  #166 = Utf8               s\n-  #167 = Utf8               uin\n-  #168 = Utf8               win\n-  #169 = Utf8               cmp\n-  #170 = Utf8               rop\n-  #171 = Utf8               (JJ)I\n-  #172 = Utf8               cp\n-  #173 = Utf8               x1\n-  #174 = Utf8               vbp\n-  #175 = Utf8               toChars\n-  #176 = Utf8               (II)I\n-  #177 = Utf8               e\n-  #178 = Utf8               len\n-  #179 = Utf8               l\n-  #180 = Utf8               toChars1\n-  #181 = Utf8               y\n-  #182 = Utf8               toChars2\n-  #183 = Utf8               toChars3\n-  #184 = Utf8               append8Digits\n-  #185 = Utf8               (I)V\n-  #186 = Utf8               m\n-  #187 = Utf8               removeTrailingZeroes\n-  #188 = Utf8               (I)I\n-  #189 = Utf8               a\n-  #190 = Utf8               exponent\n-  #191 = Utf8               d\n-  #192 = Utf8               append\n-  #193 = Utf8               appendDigit\n-  #194 = Utf8               charsToString\n-  #195 = Utf8               ()Ljava/lang/String;\n-  #196 = Utf8               <clinit>\n-  #197 = Utf8               SourceFile\n-  #198 = Utf8               FloatToDecimal.java\n-  #199 = Utf8               java/lang/Float\n-  #200 = Utf8               com/fasterxml/jackson/core/io/schubfach/FloatToDecimal\n-  #201 = NameAndType        #117:#118     // \"<init>\":()V\n-  #202 = NameAndType        #110:#67      // MAX_CHARS:I\n-  #203 = NameAndType        #112:#113     // bytes:[B\n-  #204 = NameAndType        #114:#115     // chars:[C\n-  #205 = NameAndType        #134:#135     // threadLocalInstance:()Lcom/fasterxml/jackson/core/io/schubfach/FloatToDecimal;\n-  #206 = NameAndType        #136:#125     // toDecimalString:(F)Ljava/lang/String;\n-  #207 = NameAndType        #138:#129     // appendDecimalTo:(FLjava/lang/Appendable;)Ljava/lang/Appendable;\n-  #208 = NameAndType        #106:#107     // threadLocal:Ljava/lang/ThreadLocal;\n-  #209 = Class              #259          // java/lang/ThreadLocal\n-  #210 = NameAndType        #260:#261     // get:()Ljava/lang/Object;\n-  #211 = NameAndType        #140:#141     // toDecimal:(F)I\n-  #212 = NameAndType        #194:#195     // charsToString:()Ljava/lang/String;\n-  #213 = Utf8               0.0\n-  #214 = Utf8               -0.0\n-  #215 = Utf8               Infinity\n-  #216 = Utf8               -Infinity\n-  #217 = Utf8               NaN\n-  #218 = NameAndType        #116:#67      // index:I\n-  #219 = Utf8               java/lang/StringBuilder\n-  #220 = NameAndType        #192:#262     // append:([CII)Ljava/lang/StringBuilder;\n-  #221 = Utf8               java/lang/StringBuffer\n-  #222 = NameAndType        #192:#263     // append:([CII)Ljava/lang/StringBuffer;\n-  #223 = Class              #264          // java/lang/Appendable\n-  #224 = NameAndType        #192:#265     // append:(C)Ljava/lang/Appendable;\n-  #225 = NameAndType        #192:#266     // append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-  #226 = NameAndType        #267:#141     // floatToRawIntBits:(F)I\n-  #227 = NameAndType        #192:#185     // append:(I)V\n-  #228 = NameAndType        #175:#176     // toChars:(II)I\n-  #229 = NameAndType        #140:#148     // toDecimal:(III)I\n-  #230 = Class              #268          // com/fasterxml/jackson/core/io/schubfach/MathUtils\n-  #231 = NameAndType        #269:#188     // flog10pow2:(I)I\n-  #232 = NameAndType        #270:#188     // flog10threeQuartersPow2:(I)I\n-  #233 = NameAndType        #271:#188     // flog2pow10:(I)I\n-  #234 = NameAndType        #272:#273     // g1:(I)J\n-  #235 = NameAndType        #170:#171     // rop:(JJ)I\n-  #236 = NameAndType        #274:#275     // multiplyHigh:(JJ)J\n-  #237 = Utf8               java/lang/Integer\n-  #238 = NameAndType        #276:#188     // numberOfLeadingZeros:(I)I\n-  #239 = NameAndType        #277:#273     // pow10:(I)J\n-  #240 = NameAndType        #180:#148     // toChars1:(III)I\n-  #241 = NameAndType        #182:#148     // toChars2:(III)I\n-  #242 = NameAndType        #183:#148     // toChars3:(III)I\n-  #243 = NameAndType        #193:#185     // appendDigit:(I)V\n-  #244 = NameAndType        #181:#188     // y:(I)I\n-  #245 = NameAndType        #187:#118     // removeTrailingZeroes:()V\n-  #246 = NameAndType        #184:#185     // append8Digits:(I)V\n-  #247 = NameAndType        #190:#185     // exponent:(I)V\n-  #248 = Utf8               java/lang/String\n-  #249 = NameAndType        #117:#278     // \"<init>\":([BIII)V\n-  #250 = Utf8               BootstrapMethods\n-  #251 = MethodHandle       6:#279        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #252 = MethodType         #261          //  ()Ljava/lang/Object;\n-  #253 = MethodHandle       8:#280        // REF_newInvokeSpecial com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.\"<init>\":()V\n-  #254 = MethodType         #135          //  ()Lcom/fasterxml/jackson/core/io/schubfach/FloatToDecimal;\n-  #255 = NameAndType        #260:#281     // get:()Ljava/util/function/Supplier;\n-  #256 = NameAndType        #282:#283     // withInitial:(Ljava/util/function/Supplier;)Ljava/lang/ThreadLocal;\n-  #257 = Utf8               java/lang/Object\n-  #258 = Utf8               java/io/IOException\n-  #259 = Utf8               java/lang/ThreadLocal\n-  #260 = Utf8               get\n-  #261 = Utf8               ()Ljava/lang/Object;\n-  #262 = Utf8               ([CII)Ljava/lang/StringBuilder;\n-  #263 = Utf8               ([CII)Ljava/lang/StringBuffer;\n-  #264 = Utf8               java/lang/Appendable\n-  #265 = Utf8               (C)Ljava/lang/Appendable;\n-  #266 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-  #267 = Utf8               floatToRawIntBits\n-  #268 = Utf8               com/fasterxml/jackson/core/io/schubfach/MathUtils\n-  #269 = Utf8               flog10pow2\n-  #270 = Utf8               flog10threeQuartersPow2\n-  #271 = Utf8               flog2pow10\n-  #272 = Utf8               g1\n-  #273 = Utf8               (I)J\n-  #274 = Utf8               multiplyHigh\n-  #275 = Utf8               (JJ)J\n-  #276 = Utf8               numberOfLeadingZeros\n-  #277 = Utf8               pow10\n-  #278 = Utf8               ([BIII)V\n-  #279 = Methodref          #284.#285     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #280 = Methodref          #2.#201       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.\"<init>\":()V\n-  #281 = Utf8               ()Ljava/util/function/Supplier;\n-  #282 = Utf8               withInitial\n-  #283 = Utf8               (Ljava/util/function/Supplier;)Ljava/lang/ThreadLocal;\n-  #284 = Class              #286          // java/lang/invoke/LambdaMetafactory\n-  #285 = NameAndType        #287:#291     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #286 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #287 = Utf8               metafactory\n-  #288 = Class              #293          // java/lang/invoke/MethodHandles$Lookup\n-  #289 = Utf8               Lookup\n-  #290 = Utf8               InnerClasses\n-  #291 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #292 = Class              #294          // java/lang/invoke/MethodHandles\n-  #293 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #294 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Class              #2            // java/lang/Float\n+    #2 = Utf8               java/lang/Float\n+    #3 = Class              #4            // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal\n+    #4 = Utf8               com/fasterxml/jackson/core/io/schubfach/FloatToDecimal\n+    #5 = Methodref          #6.#7         // java/lang/Object.\"<init>\":()V\n+    #6 = Class              #8            // java/lang/Object\n+    #7 = NameAndType        #9:#10        // \"<init>\":()V\n+    #8 = Utf8               java/lang/Object\n+    #9 = Utf8               <init>\n+   #10 = Utf8               ()V\n+   #11 = Fieldref           #3.#12        // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.MAX_CHARS:I\n+   #12 = NameAndType        #13:#14       // MAX_CHARS:I\n+   #13 = Utf8               MAX_CHARS\n+   #14 = Utf8               I\n+   #15 = Fieldref           #3.#16        // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.bytes:[B\n+   #16 = NameAndType        #17:#18       // bytes:[B\n+   #17 = Utf8               bytes\n+   #18 = Utf8               [B\n+   #19 = Fieldref           #3.#20        // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.chars:[C\n+   #20 = NameAndType        #21:#22       // chars:[C\n+   #21 = Utf8               chars\n+   #22 = Utf8               [C\n+   #23 = Methodref          #3.#24        // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.threadLocalInstance:()Lcom/fasterxml/jackson/core/io/schubfach/FloatToDecimal;\n+   #24 = NameAndType        #25:#26       // threadLocalInstance:()Lcom/fasterxml/jackson/core/io/schubfach/FloatToDecimal;\n+   #25 = Utf8               threadLocalInstance\n+   #26 = Utf8               ()Lcom/fasterxml/jackson/core/io/schubfach/FloatToDecimal;\n+   #27 = Methodref          #3.#28        // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toDecimalString:(F)Ljava/lang/String;\n+   #28 = NameAndType        #29:#30       // toDecimalString:(F)Ljava/lang/String;\n+   #29 = Utf8               toDecimalString\n+   #30 = Utf8               (F)Ljava/lang/String;\n+   #31 = Methodref          #3.#32        // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.appendDecimalTo:(FLjava/lang/Appendable;)Ljava/lang/Appendable;\n+   #32 = NameAndType        #33:#34       // appendDecimalTo:(FLjava/lang/Appendable;)Ljava/lang/Appendable;\n+   #33 = Utf8               appendDecimalTo\n+   #34 = Utf8               (FLjava/lang/Appendable;)Ljava/lang/Appendable;\n+   #35 = Fieldref           #3.#36        // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.threadLocal:Ljava/lang/ThreadLocal;\n+   #36 = NameAndType        #37:#38       // threadLocal:Ljava/lang/ThreadLocal;\n+   #37 = Utf8               threadLocal\n+   #38 = Utf8               Ljava/lang/ThreadLocal;\n+   #39 = Methodref          #40.#41       // java/lang/ThreadLocal.get:()Ljava/lang/Object;\n+   #40 = Class              #42           // java/lang/ThreadLocal\n+   #41 = NameAndType        #43:#44       // get:()Ljava/lang/Object;\n+   #42 = Utf8               java/lang/ThreadLocal\n+   #43 = Utf8               get\n+   #44 = Utf8               ()Ljava/lang/Object;\n+   #45 = Methodref          #3.#46        // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toDecimal:(F)I\n+   #46 = NameAndType        #47:#48       // toDecimal:(F)I\n+   #47 = Utf8               toDecimal\n+   #48 = Utf8               (F)I\n+   #49 = Methodref          #3.#50        // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.charsToString:()Ljava/lang/String;\n+   #50 = NameAndType        #51:#52       // charsToString:()Ljava/lang/String;\n+   #51 = Utf8               charsToString\n+   #52 = Utf8               ()Ljava/lang/String;\n+   #53 = String             #54           // 0.0\n+   #54 = Utf8               0.0\n+   #55 = String             #56           // -0.0\n+   #56 = Utf8               -0.0\n+   #57 = String             #58           // Infinity\n+   #58 = Utf8               Infinity\n+   #59 = String             #60           // -Infinity\n+   #60 = Utf8               -Infinity\n+   #61 = String             #62           // NaN\n+   #62 = Utf8               NaN\n+   #63 = Fieldref           #3.#64        // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.index:I\n+   #64 = NameAndType        #65:#14       // index:I\n+   #65 = Utf8               index\n+   #66 = Class              #67           // java/lang/StringBuilder\n+   #67 = Utf8               java/lang/StringBuilder\n+   #68 = Methodref          #66.#69       // java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;\n+   #69 = NameAndType        #70:#71       // append:([CII)Ljava/lang/StringBuilder;\n+   #70 = Utf8               append\n+   #71 = Utf8               ([CII)Ljava/lang/StringBuilder;\n+   #72 = Class              #73           // java/lang/StringBuffer\n+   #73 = Utf8               java/lang/StringBuffer\n+   #74 = Methodref          #72.#75       // java/lang/StringBuffer.append:([CII)Ljava/lang/StringBuffer;\n+   #75 = NameAndType        #70:#76       // append:([CII)Ljava/lang/StringBuffer;\n+   #76 = Utf8               ([CII)Ljava/lang/StringBuffer;\n+   #77 = InterfaceMethodref #78.#79       // java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+   #78 = Class              #80           // java/lang/Appendable\n+   #79 = NameAndType        #70:#81       // append:(C)Ljava/lang/Appendable;\n+   #80 = Utf8               java/lang/Appendable\n+   #81 = Utf8               (C)Ljava/lang/Appendable;\n+   #82 = InterfaceMethodref #78.#83       // java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+   #83 = NameAndType        #70:#84       // append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+   #84 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+   #85 = Methodref          #1.#86        // java/lang/Float.floatToRawIntBits:(F)I\n+   #86 = NameAndType        #87:#48       // floatToRawIntBits:(F)I\n+   #87 = Utf8               floatToRawIntBits\n+   #88 = Integer            8388607\n+   #89 = Methodref          #3.#90        // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.append:(I)V\n+   #90 = NameAndType        #70:#91       // append:(I)V\n+   #91 = Utf8               (I)V\n+   #92 = Integer            8388608\n+   #93 = Methodref          #3.#94        // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toChars:(II)I\n+   #94 = NameAndType        #95:#96       // toChars:(II)I\n+   #95 = Utf8               toChars\n+   #96 = Utf8               (II)I\n+   #97 = Methodref          #3.#98        // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toDecimal:(III)I\n+   #98 = NameAndType        #47:#99       // toDecimal:(III)I\n+   #99 = Utf8               (III)I\n+  #100 = Long               2l\n+  #102 = Methodref          #103.#104     // com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10pow2:(I)I\n+  #103 = Class              #105          // com/fasterxml/jackson/core/io/schubfach/MathUtils\n+  #104 = NameAndType        #106:#107     // flog10pow2:(I)I\n+  #105 = Utf8               com/fasterxml/jackson/core/io/schubfach/MathUtils\n+  #106 = Utf8               flog10pow2\n+  #107 = Utf8               (I)I\n+  #108 = Methodref          #103.#109     // com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10threeQuartersPow2:(I)I\n+  #109 = NameAndType        #110:#107     // flog10threeQuartersPow2:(I)I\n+  #110 = Utf8               flog10threeQuartersPow2\n+  #111 = Methodref          #103.#112     // com/fasterxml/jackson/core/io/schubfach/MathUtils.flog2pow10:(I)I\n+  #112 = NameAndType        #113:#107     // flog2pow10:(I)I\n+  #113 = Utf8               flog2pow10\n+  #114 = Methodref          #103.#115     // com/fasterxml/jackson/core/io/schubfach/MathUtils.g1:(I)J\n+  #115 = NameAndType        #116:#117     // g1:(I)J\n+  #116 = Utf8               g1\n+  #117 = Utf8               (I)J\n+  #118 = Methodref          #3.#119       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.rop:(JJ)I\n+  #119 = NameAndType        #120:#121     // rop:(JJ)I\n+  #120 = Utf8               rop\n+  #121 = Utf8               (JJ)I\n+  #122 = Long               1717986919l\n+  #124 = Methodref          #103.#125     // com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n+  #125 = NameAndType        #126:#127     // multiplyHigh:(JJ)J\n+  #126 = Utf8               multiplyHigh\n+  #127 = Utf8               (JJ)J\n+  #128 = Long               4294967295l\n+  #130 = Class              #131          // java/lang/Integer\n+  #131 = Utf8               java/lang/Integer\n+  #132 = Methodref          #130.#133     // java/lang/Integer.numberOfLeadingZeros:(I)I\n+  #133 = NameAndType        #134:#107     // numberOfLeadingZeros:(I)I\n+  #134 = Utf8               numberOfLeadingZeros\n+  #135 = Methodref          #103.#136     // com/fasterxml/jackson/core/io/schubfach/MathUtils.pow10:(I)J\n+  #136 = NameAndType        #137:#117     // pow10:(I)J\n+  #137 = Utf8               pow10\n+  #138 = Long               1441151881l\n+  #140 = Integer            100000000\n+  #141 = Methodref          #3.#142       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toChars1:(III)I\n+  #142 = NameAndType        #143:#99      // toChars1:(III)I\n+  #143 = Utf8               toChars1\n+  #144 = Methodref          #3.#145       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toChars2:(III)I\n+  #145 = NameAndType        #146:#99      // toChars2:(III)I\n+  #146 = Utf8               toChars2\n+  #147 = Methodref          #3.#148       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toChars3:(III)I\n+  #148 = NameAndType        #149:#99      // toChars3:(III)I\n+  #149 = Utf8               toChars3\n+  #150 = Methodref          #3.#151       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.appendDigit:(I)V\n+  #151 = NameAndType        #152:#91      // appendDigit:(I)V\n+  #152 = Utf8               appendDigit\n+  #153 = Methodref          #3.#154       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.y:(I)I\n+  #154 = NameAndType        #155:#107     // y:(I)I\n+  #155 = Utf8               y\n+  #156 = Integer            268435455\n+  #157 = Methodref          #3.#158       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.removeTrailingZeroes:()V\n+  #158 = NameAndType        #159:#10      // removeTrailingZeroes:()V\n+  #159 = Utf8               removeTrailingZeroes\n+  #160 = Methodref          #3.#161       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.append8Digits:(I)V\n+  #161 = NameAndType        #162:#91      // append8Digits:(I)V\n+  #162 = Utf8               append8Digits\n+  #163 = Methodref          #3.#164       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.exponent:(I)V\n+  #164 = NameAndType        #165:#91      // exponent:(I)V\n+  #165 = Utf8               exponent\n+  #166 = Long               193428131138340668l\n+  #168 = Class              #169          // java/lang/String\n+  #169 = Utf8               java/lang/String\n+  #170 = Methodref          #168.#171     // java/lang/String.\"<init>\":([BIII)V\n+  #171 = NameAndType        #9:#172       // \"<init>\":([BIII)V\n+  #172 = Utf8               ([BIII)V\n+  #173 = InvokeDynamic      #0:#174       // #0:get:()Ljava/util/function/Supplier;\n+  #174 = NameAndType        #43:#175      // get:()Ljava/util/function/Supplier;\n+  #175 = Utf8               ()Ljava/util/function/Supplier;\n+  #176 = Methodref          #40.#177      // java/lang/ThreadLocal.withInitial:(Ljava/util/function/Supplier;)Ljava/lang/ThreadLocal;\n+  #177 = NameAndType        #178:#179     // withInitial:(Ljava/util/function/Supplier;)Ljava/lang/ThreadLocal;\n+  #178 = Utf8               withInitial\n+  #179 = Utf8               (Ljava/util/function/Supplier;)Ljava/lang/ThreadLocal;\n+  #180 = Utf8               P\n+  #181 = Utf8               ConstantValue\n+  #182 = Integer            24\n+  #183 = Utf8               W\n+  #184 = Integer            8\n+  #185 = Utf8               Q_MIN\n+  #186 = Integer            -149\n+  #187 = Utf8               Q_MAX\n+  #188 = Integer            104\n+  #189 = Utf8               E_MIN\n+  #190 = Integer            -44\n+  #191 = Utf8               E_MAX\n+  #192 = Integer            39\n+  #193 = Utf8               C_TINY\n+  #194 = Utf8               K_MIN\n+  #195 = Integer            -45\n+  #196 = Utf8               K_MAX\n+  #197 = Integer            31\n+  #198 = Utf8               H\n+  #199 = Integer            9\n+  #200 = Utf8               C_MIN\n+  #201 = Utf8               BQ_MASK\n+  #202 = Integer            255\n+  #203 = Utf8               T_MASK\n+  #204 = Utf8               MASK_32\n+  #205 = Utf8               J\n+  #206 = Utf8               MASK_28\n+  #207 = Utf8               NON_SPECIAL\n+  #208 = Integer            0\n+  #209 = Utf8               PLUS_ZERO\n+  #210 = Integer            1\n+  #211 = Utf8               MINUS_ZERO\n+  #212 = Integer            2\n+  #213 = Utf8               PLUS_INF\n+  #214 = Integer            3\n+  #215 = Utf8               MINUS_INF\n+  #216 = Integer            4\n+  #217 = Utf8               NAN\n+  #218 = Integer            5\n+  #219 = Utf8               Signature\n+  #220 = Utf8               Ljava/lang/ThreadLocal<Lcom/fasterxml/jackson/core/io/schubfach/FloatToDecimal;>;\n+  #221 = Integer            15\n+  #222 = Utf8               Code\n+  #223 = Utf8               LineNumberTable\n+  #224 = Utf8               LocalVariableTable\n+  #225 = Utf8               this\n+  #226 = Utf8               Lcom/fasterxml/jackson/core/io/schubfach/FloatToDecimal;\n+  #227 = Utf8               toString\n+  #228 = Utf8               v\n+  #229 = Utf8               F\n+  #230 = Utf8               appendTo\n+  #231 = Utf8               app\n+  #232 = Utf8               Ljava/lang/Appendable;\n+  #233 = Utf8               Exceptions\n+  #234 = Class              #235          // java/io/IOException\n+  #235 = Utf8               java/io/IOException\n+  #236 = Utf8               StackMapTable\n+  #237 = Utf8               i\n+  #238 = Utf8               f\n+  #239 = Utf8               mq\n+  #240 = Utf8               c\n+  #241 = Utf8               bits\n+  #242 = Utf8               t\n+  #243 = Utf8               bq\n+  #244 = Utf8               cbl\n+  #245 = Utf8               k\n+  #246 = Utf8               sp10\n+  #247 = Utf8               tp10\n+  #248 = Utf8               upin\n+  #249 = Utf8               Z\n+  #250 = Utf8               wpin\n+  #251 = Utf8               q\n+  #252 = Utf8               dk\n+  #253 = Utf8               out\n+  #254 = Utf8               cb\n+  #255 = Utf8               cbr\n+  #256 = Utf8               h\n+  #257 = Utf8               g\n+  #258 = Utf8               vb\n+  #259 = Utf8               vbl\n+  #260 = Utf8               vbr\n+  #261 = Utf8               s\n+  #262 = Utf8               uin\n+  #263 = Utf8               win\n+  #264 = Utf8               cmp\n+  #265 = Utf8               cp\n+  #266 = Utf8               x1\n+  #267 = Utf8               vbp\n+  #268 = Utf8               e\n+  #269 = Utf8               len\n+  #270 = Utf8               l\n+  #271 = Utf8               m\n+  #272 = Utf8               a\n+  #273 = Utf8               d\n+  #274 = Utf8               <clinit>\n+  #275 = Utf8               SourceFile\n+  #276 = Utf8               FloatToDecimal.java\n+  #277 = Utf8               BootstrapMethods\n+  #278 = MethodHandle       6:#279        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #279 = Methodref          #280.#281     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #280 = Class              #282          // java/lang/invoke/LambdaMetafactory\n+  #281 = NameAndType        #283:#284     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #282 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #283 = Utf8               metafactory\n+  #284 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #285 = MethodType         #44           //  ()Ljava/lang/Object;\n+  #286 = MethodHandle       8:#287        // REF_newInvokeSpecial com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.\"<init>\":()V\n+  #287 = Methodref          #3.#7         // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.\"<init>\":()V\n+  #288 = MethodType         #26           //  ()Lcom/fasterxml/jackson/core/io/schubfach/FloatToDecimal;\n+  #289 = Utf8               InnerClasses\n+  #290 = Class              #291          // java/lang/invoke/MethodHandles$Lookup\n+  #291 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #292 = Class              #293          // java/lang/invoke/MethodHandles\n+  #293 = Utf8               java/lang/invoke/MethodHandles\n+  #294 = Utf8               Lookup\n {\n   static final int P = 24;\n     descriptor: I\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n     ConstantValue: int 24\n \n   private static final int W = 8;\n@@ -402,15 +402,15 @@\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 5\n \n   private static final java.lang.ThreadLocal<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal> threadLocal;\n     descriptor: Ljava/lang/ThreadLocal;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n-    Signature: #109                         // Ljava/lang/ThreadLocal<Lcom/fasterxml/jackson/core/io/schubfach/FloatToDecimal;>;\n+    Signature: #220                         // Ljava/lang/ThreadLocal<Lcom/fasterxml/jackson/core/io/schubfach/FloatToDecimal;>;\n \n   public final int MAX_CHARS = 15;\n     descriptor: I\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     ConstantValue: int 15\n \n   private final byte[] bytes;\n@@ -427,26 +427,26 @@\n \n   private com.fasterxml.jackson.core.io.schubfach.FloatToDecimal();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #3                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #5                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: bipush        15\n-         7: putfield      #4                  // Field MAX_CHARS:I\n+         7: putfield      #11                 // Field MAX_CHARS:I\n         10: aload_0\n         11: bipush        15\n         13: newarray       byte\n-        15: putfield      #5                  // Field bytes:[B\n+        15: putfield      #15                 // Field bytes:[B\n         18: aload_0\n         19: bipush        15\n         21: newarray       char\n-        23: putfield      #6                  // Field chars:[C\n+        23: putfield      #19                 // Field chars:[C\n         26: return\n       LineNumberTable:\n         line 131: 0\n         line 120: 4\n         line 123: 10\n         line 126: 18\n         line 132: 26\n@@ -455,33 +455,33 @@\n             0      27     0  this   Lcom/fasterxml/jackson/core/io/schubfach/FloatToDecimal;\n \n   public static java.lang.String toString(float);\n     descriptor: (F)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: invokestatic  #7                  // Method threadLocalInstance:()Lcom/fasterxml/jackson/core/io/schubfach/FloatToDecimal;\n+         0: invokestatic  #23                 // Method threadLocalInstance:()Lcom/fasterxml/jackson/core/io/schubfach/FloatToDecimal;\n          3: fload_0\n-         4: invokespecial #8                  // Method toDecimalString:(F)Ljava/lang/String;\n+         4: invokespecial #27                 // Method toDecimalString:(F)Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 248: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0     v   F\n \n   public static java.lang.Appendable appendTo(float, java.lang.Appendable) throws java.io.IOException;\n     descriptor: (FLjava/lang/Appendable;)Ljava/lang/Appendable;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n-         0: invokestatic  #7                  // Method threadLocalInstance:()Lcom/fasterxml/jackson/core/io/schubfach/FloatToDecimal;\n+         0: invokestatic  #23                 // Method threadLocalInstance:()Lcom/fasterxml/jackson/core/io/schubfach/FloatToDecimal;\n          3: fload_0\n          4: aload_1\n-         5: invokespecial #9                  // Method appendDecimalTo:(FLjava/lang/Appendable;)Ljava/lang/Appendable;\n+         5: invokespecial #31                 // Method appendDecimalTo:(FLjava/lang/Appendable;)Ljava/lang/Appendable;\n          8: areturn\n       LineNumberTable:\n         line 264: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0     v   F\n             0       9     1   app   Ljava/lang/Appendable;\n@@ -489,49 +489,49 @@\n       throws java.io.IOException\n \n   private static com.fasterxml.jackson.core.io.schubfach.FloatToDecimal threadLocalInstance();\n     descriptor: ()Lcom/fasterxml/jackson/core/io/schubfach/FloatToDecimal;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: getstatic     #10                 // Field threadLocal:Ljava/lang/ThreadLocal;\n-         3: invokevirtual #11                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;\n-         6: checkcast     #2                  // class com/fasterxml/jackson/core/io/schubfach/FloatToDecimal\n+         0: getstatic     #35                 // Field threadLocal:Ljava/lang/ThreadLocal;\n+         3: invokevirtual #39                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;\n+         6: checkcast     #3                  // class com/fasterxml/jackson/core/io/schubfach/FloatToDecimal\n          9: areturn\n       LineNumberTable:\n         line 268: 0\n \n   private java.lang.String toDecimalString(float);\n     descriptor: (F)Ljava/lang/String;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: fload_1\n-         2: invokespecial #12                 // Method toDecimal:(F)I\n+         2: invokespecial #45                 // Method toDecimal:(F)I\n          5: tableswitch   { // 0 to 4\n                        0: 40\n                        1: 45\n                        2: 48\n                        3: 51\n                        4: 54\n                  default: 57\n             }\n         40: aload_0\n-        41: invokespecial #13                 // Method charsToString:()Ljava/lang/String;\n+        41: invokespecial #49                 // Method charsToString:()Ljava/lang/String;\n         44: areturn\n-        45: ldc           #14                 // String 0.0\n+        45: ldc           #53                 // String 0.0\n         47: areturn\n-        48: ldc           #15                 // String -0.0\n+        48: ldc           #55                 // String -0.0\n         50: areturn\n-        51: ldc           #16                 // String Infinity\n+        51: ldc           #57                 // String Infinity\n         53: areturn\n-        54: ldc           #17                 // String -Infinity\n+        54: ldc           #59                 // String -Infinity\n         56: areturn\n-        57: ldc           #18                 // String NaN\n+        57: ldc           #61                 // String NaN\n         59: areturn\n       LineNumberTable:\n         line 272: 0\n         line 273: 40\n         line 274: 45\n         line 275: 48\n         line 276: 51\n@@ -552,104 +552,104 @@\n   private java.lang.Appendable appendDecimalTo(float, java.lang.Appendable) throws java.io.IOException;\n     descriptor: (FLjava/lang/Appendable;)Ljava/lang/Appendable;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=4, args_size=3\n          0: aload_0\n          1: fload_1\n-         2: invokespecial #12                 // Method toDecimal:(F)I\n+         2: invokespecial #45                 // Method toDecimal:(F)I\n          5: tableswitch   { // 0 to 4\n                        0: 40\n                        1: 152\n                        2: 161\n                        3: 170\n                        4: 179\n                  default: 188\n             }\n         40: iconst_0\n         41: istore_3\n         42: iload_3\n         43: aload_0\n-        44: getfield      #19                 // Field index:I\n+        44: getfield      #63                 // Field index:I\n         47: if_icmpgt     69\n         50: aload_0\n-        51: getfield      #6                  // Field chars:[C\n+        51: getfield      #19                 // Field chars:[C\n         54: iload_3\n         55: aload_0\n-        56: getfield      #5                  // Field bytes:[B\n+        56: getfield      #15                 // Field bytes:[B\n         59: iload_3\n         60: baload\n         61: i2c\n         62: castore\n         63: iinc          3, 1\n         66: goto          42\n         69: aload_2\n-        70: instanceof    #20                 // class java/lang/StringBuilder\n+        70: instanceof    #66                 // class java/lang/StringBuilder\n         73: ifeq          95\n         76: aload_2\n-        77: checkcast     #20                 // class java/lang/StringBuilder\n+        77: checkcast     #66                 // class java/lang/StringBuilder\n         80: aload_0\n-        81: getfield      #6                  // Field chars:[C\n+        81: getfield      #19                 // Field chars:[C\n         84: iconst_0\n         85: aload_0\n-        86: getfield      #19                 // Field index:I\n+        86: getfield      #63                 // Field index:I\n         89: iconst_1\n         90: iadd\n-        91: invokevirtual #21                 // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;\n+        91: invokevirtual #68                 // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;\n         94: areturn\n         95: aload_2\n-        96: instanceof    #22                 // class java/lang/StringBuffer\n+        96: instanceof    #72                 // class java/lang/StringBuffer\n         99: ifeq          121\n        102: aload_2\n-       103: checkcast     #22                 // class java/lang/StringBuffer\n+       103: checkcast     #72                 // class java/lang/StringBuffer\n        106: aload_0\n-       107: getfield      #6                  // Field chars:[C\n+       107: getfield      #19                 // Field chars:[C\n        110: iconst_0\n        111: aload_0\n-       112: getfield      #19                 // Field index:I\n+       112: getfield      #63                 // Field index:I\n        115: iconst_1\n        116: iadd\n-       117: invokevirtual #23                 // Method java/lang/StringBuffer.append:([CII)Ljava/lang/StringBuffer;\n+       117: invokevirtual #74                 // Method java/lang/StringBuffer.append:([CII)Ljava/lang/StringBuffer;\n        120: areturn\n        121: iconst_0\n        122: istore_3\n        123: iload_3\n        124: aload_0\n-       125: getfield      #19                 // Field index:I\n+       125: getfield      #63                 // Field index:I\n        128: if_icmpgt     150\n        131: aload_2\n        132: aload_0\n-       133: getfield      #6                  // Field chars:[C\n+       133: getfield      #19                 // Field chars:[C\n        136: iload_3\n        137: caload\n-       138: invokeinterface #24,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+       138: invokeinterface #77,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n        143: pop\n        144: iinc          3, 1\n        147: goto          123\n        150: aload_2\n        151: areturn\n        152: aload_2\n-       153: ldc           #14                 // String 0.0\n-       155: invokeinterface #25,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+       153: ldc           #53                 // String 0.0\n+       155: invokeinterface #82,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n        160: areturn\n        161: aload_2\n-       162: ldc           #15                 // String -0.0\n-       164: invokeinterface #25,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+       162: ldc           #55                 // String -0.0\n+       164: invokeinterface #82,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n        169: areturn\n        170: aload_2\n-       171: ldc           #16                 // String Infinity\n-       173: invokeinterface #25,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+       171: ldc           #57                 // String Infinity\n+       173: invokeinterface #82,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n        178: areturn\n        179: aload_2\n-       180: ldc           #17                 // String -Infinity\n-       182: invokeinterface #25,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+       180: ldc           #59                 // String -Infinity\n+       182: invokeinterface #82,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n        187: areturn\n        188: aload_2\n-       189: ldc           #18                 // String NaN\n-       191: invokeinterface #25,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+       189: ldc           #61                 // String NaN\n+       191: invokeinterface #82,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n        196: areturn\n       LineNumberTable:\n         line 284: 0\n         line 286: 40\n         line 287: 50\n         line 286: 63\n         line 289: 69\n@@ -696,44 +696,44 @@\n \n   private int toDecimal(float);\n     descriptor: (F)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=8, args_size=2\n          0: fload_1\n-         1: invokestatic  #26                 // Method java/lang/Float.floatToRawIntBits:(F)I\n+         1: invokestatic  #85                 // Method java/lang/Float.floatToRawIntBits:(F)I\n          4: istore_2\n          5: iload_2\n-         6: ldc           #27                 // int 8388607\n+         6: ldc           #88                 // int 8388607\n          8: iand\n          9: istore_3\n         10: iload_2\n         11: bipush        23\n         13: iushr\n         14: sipush        255\n         17: iand\n         18: istore        4\n         20: iload         4\n         22: sipush        255\n         25: if_icmpge     170\n         28: aload_0\n         29: iconst_m1\n-        30: putfield      #19                 // Field index:I\n+        30: putfield      #63                 // Field index:I\n         33: iload_2\n         34: ifge          43\n         37: aload_0\n         38: bipush        45\n-        40: invokespecial #28                 // Method append:(I)V\n+        40: invokespecial #89                 // Method append:(I)V\n         43: iload         4\n         45: ifeq          125\n         48: sipush        150\n         51: iload         4\n         53: isub\n         54: istore        5\n-        56: ldc           #29                 // int 8388608\n+        56: ldc           #92                 // int 8388608\n         58: iload_3\n         59: ior\n         60: istore        6\n         62: iconst_0\n         63: iload         5\n         65: if_icmpge     72\n         68: iconst_1\n@@ -755,41 +755,41 @@\n         98: iload         5\n        100: ishl\n        101: iload         6\n        103: if_icmpne     114\n        106: aload_0\n        107: iload         7\n        109: iconst_0\n-       110: invokespecial #30                 // Method toChars:(II)I\n+       110: invokespecial #93                 // Method toChars:(II)I\n        113: ireturn\n        114: aload_0\n        115: iload         5\n        117: ineg\n        118: iload         6\n        120: iconst_0\n-       121: invokespecial #31                 // Method toDecimal:(III)I\n+       121: invokespecial #97                 // Method toDecimal:(III)I\n        124: ireturn\n        125: iload_3\n        126: ifeq          160\n        129: iload_3\n        130: bipush        8\n        132: if_icmpge     150\n        135: aload_0\n        136: sipush        -149\n        139: bipush        10\n        141: iload_3\n        142: imul\n        143: iconst_m1\n-       144: invokespecial #31                 // Method toDecimal:(III)I\n+       144: invokespecial #97                 // Method toDecimal:(III)I\n        147: goto          159\n        150: aload_0\n        151: sipush        -149\n        154: iload_3\n        155: iconst_0\n-       156: invokespecial #31                 // Method toDecimal:(III)I\n+       156: invokespecial #97                 // Method toDecimal:(III)I\n        159: ireturn\n        160: iload_2\n        161: ifne          168\n        164: iconst_1\n        165: goto          169\n        168: iconst_2\n        169: ireturn\n@@ -880,88 +880,88 @@\n          3: istore        4\n          5: iload_2\n          6: iconst_2\n          7: ishl\n          8: i2l\n          9: lstore        5\n         11: lload         5\n-        13: ldc2_w        #32                 // long 2l\n+        13: ldc2_w        #100                // long 2l\n         16: ladd\n         17: lstore        7\n         19: iload_2\n-        20: ldc           #29                 // int 8388608\n+        20: ldc           #92                 // int 8388608\n         22: if_icmpeq     29\n         25: iconst_1\n         26: goto          30\n         29: iconst_0\n         30: iload_1\n         31: sipush        -149\n         34: if_icmpne     41\n         37: iconst_1\n         38: goto          42\n         41: iconst_0\n         42: ior\n         43: ifeq          63\n         46: lload         5\n-        48: ldc2_w        #32                 // long 2l\n+        48: ldc2_w        #100                // long 2l\n         51: lsub\n         52: lstore        9\n         54: iload_1\n-        55: invokestatic  #34                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10pow2:(I)I\n+        55: invokestatic  #102                // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10pow2:(I)I\n         58: istore        11\n         60: goto          75\n         63: lload         5\n         65: lconst_1\n         66: lsub\n         67: lstore        9\n         69: iload_1\n-        70: invokestatic  #35                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10threeQuartersPow2:(I)I\n+        70: invokestatic  #108                // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10threeQuartersPow2:(I)I\n         73: istore        11\n         75: iload_1\n         76: iload         11\n         78: ineg\n-        79: invokestatic  #36                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog2pow10:(I)I\n+        79: invokestatic  #111                // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog2pow10:(I)I\n         82: iadd\n         83: bipush        33\n         85: iadd\n         86: istore        12\n         88: iload         11\n-        90: invokestatic  #37                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.g1:(I)J\n+        90: invokestatic  #114                // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.g1:(I)J\n         93: lconst_1\n         94: ladd\n         95: lstore        13\n         97: lload         13\n         99: lload         5\n        101: iload         12\n        103: lshl\n-       104: invokestatic  #38                 // Method rop:(JJ)I\n+       104: invokestatic  #118                // Method rop:(JJ)I\n        107: istore        15\n        109: lload         13\n        111: lload         9\n        113: iload         12\n        115: lshl\n-       116: invokestatic  #38                 // Method rop:(JJ)I\n+       116: invokestatic  #118                // Method rop:(JJ)I\n        119: istore        16\n        121: lload         13\n        123: lload         7\n        125: iload         12\n        127: lshl\n-       128: invokestatic  #38                 // Method rop:(JJ)I\n+       128: invokestatic  #118                // Method rop:(JJ)I\n        131: istore        17\n        133: iload         15\n        135: iconst_2\n        136: ishr\n        137: istore        18\n        139: iload         18\n        141: bipush        100\n        143: if_icmplt     233\n        146: bipush        10\n        148: iload         18\n        150: i2l\n-       151: ldc2_w        #39                 // long 1717986919l\n+       151: ldc2_w        #122                // long 1717986919l\n        154: lmul\n        155: bipush        34\n        157: lushr\n        158: l2i\n        159: imul\n        160: istore        19\n        162: iload         19\n@@ -996,15 +996,15 @@\n        214: aload_0\n        215: iload         21\n        217: ifeq          225\n        220: iload         19\n        222: goto          227\n        225: iload         20\n        227: iload         11\n-       229: invokespecial #30                 // Method toChars:(II)I\n+       229: invokespecial #93                 // Method toChars:(II)I\n        232: ireturn\n        233: iload         18\n        235: iconst_1\n        236: iadd\n        237: istore        19\n        239: iload         16\n        241: iload         4\n@@ -1036,15 +1036,15 @@\n        287: ifeq          295\n        290: iload         18\n        292: goto          297\n        295: iload         19\n        297: iload         11\n        299: iload_3\n        300: iadd\n-       301: invokespecial #30                 // Method toChars:(II)I\n+       301: invokespecial #93                 // Method toChars:(II)I\n        304: ireturn\n        305: iload         15\n        307: iload         18\n        309: iload         19\n        311: iadd\n        312: iconst_1\n        313: ishl\n@@ -1061,15 +1061,15 @@\n        332: ifne          340\n        335: iload         18\n        337: goto          342\n        340: iload         19\n        342: iload         11\n        344: iload_3\n        345: iadd\n-       346: invokespecial #30                 // Method toChars:(II)I\n+       346: invokespecial #93                 // Method toChars:(II)I\n        349: ireturn\n       LineNumberTable:\n         line 379: 0\n         line 380: 5\n         line 381: 11\n         line 389: 19\n         line 391: 46\n@@ -1195,25 +1195,25 @@\n   private static int rop(long, long);\n     descriptor: (JJ)I\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=6, locals=8, args_size=2\n          0: lload_0\n          1: lload_2\n-         2: invokestatic  #41                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n+         2: invokestatic  #124                // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n          5: lstore        4\n          7: lload         4\n          9: bipush        31\n         11: lushr\n         12: lstore        6\n         14: lload         6\n         16: lload         4\n-        18: ldc2_w        #42                 // long 4294967295l\n+        18: ldc2_w        #128                // long 4294967295l\n         21: land\n-        22: ldc2_w        #42                 // long 4294967295l\n+        22: ldc2_w        #128                // long 4294967295l\n         25: ladd\n         26: bipush        32\n         28: lushr\n         29: lor\n         30: l2i\n         31: ireturn\n       LineNumberTable:\n@@ -1230,80 +1230,80 @@\n   private int toChars(int, int);\n     descriptor: (II)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=6, args_size=3\n          0: bipush        32\n          2: iload_1\n-         3: invokestatic  #45                 // Method java/lang/Integer.numberOfLeadingZeros:(I)I\n+         3: invokestatic  #132                // Method java/lang/Integer.numberOfLeadingZeros:(I)I\n          6: isub\n-         7: invokestatic  #34                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10pow2:(I)I\n+         7: invokestatic  #102                // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10pow2:(I)I\n         10: istore_3\n         11: iload_1\n         12: i2l\n         13: iload_3\n-        14: invokestatic  #46                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.pow10:(I)J\n+        14: invokestatic  #135                // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.pow10:(I)J\n         17: lcmp\n         18: iflt          24\n         21: iinc          3, 1\n         24: iload_1\n         25: i2l\n         26: bipush        9\n         28: iload_3\n         29: isub\n-        30: invokestatic  #46                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.pow10:(I)J\n+        30: invokestatic  #135                // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.pow10:(I)J\n         33: lmul\n         34: l2i\n         35: istore_1\n         36: iload_2\n         37: iload_3\n         38: iadd\n         39: istore_2\n         40: iload_1\n         41: i2l\n-        42: ldc2_w        #47                 // long 1441151881l\n+        42: ldc2_w        #138                // long 1441151881l\n         45: lmul\n         46: bipush        57\n         48: lushr\n         49: l2i\n         50: istore        4\n         52: iload_1\n-        53: ldc           #49                 // int 100000000\n+        53: ldc           #140                // int 100000000\n         55: iload         4\n         57: imul\n         58: isub\n         59: istore        5\n         61: iconst_0\n         62: iload_2\n         63: if_icmpge     82\n         66: iload_2\n         67: bipush        7\n         69: if_icmpgt     82\n         72: aload_0\n         73: iload         4\n         75: iload         5\n         77: iload_2\n-        78: invokespecial #50                 // Method toChars1:(III)I\n+        78: invokespecial #141                // Method toChars1:(III)I\n         81: ireturn\n         82: bipush        -3\n         84: iload_2\n         85: if_icmpge     102\n         88: iload_2\n         89: ifgt          102\n         92: aload_0\n         93: iload         4\n         95: iload         5\n         97: iload_2\n-        98: invokespecial #51                 // Method toChars2:(III)I\n+        98: invokespecial #144                // Method toChars2:(III)I\n        101: ireturn\n        102: aload_0\n        103: iload         4\n        105: iload         5\n        107: iload_2\n-       108: invokespecial #52                 // Method toChars3:(III)I\n+       108: invokespecial #147                // Method toChars3:(III)I\n        111: ireturn\n       LineNumberTable:\n         line 469: 0\n         line 470: 11\n         line 471: 21\n         line 480: 24\n         line 481: 36\n@@ -1334,62 +1334,62 @@\n   private int toChars1(int, int, int);\n     descriptor: (III)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=7, args_size=4\n          0: aload_0\n          1: iload_1\n-         2: invokespecial #53                 // Method appendDigit:(I)V\n+         2: invokespecial #150                // Method appendDigit:(I)V\n          5: aload_0\n          6: iload_2\n-         7: invokespecial #54                 // Method y:(I)I\n+         7: invokespecial #153                // Method y:(I)I\n         10: istore        4\n         12: iconst_1\n         13: istore        6\n         15: iload         6\n         17: iload_3\n         18: if_icmpge     50\n         21: bipush        10\n         23: iload         4\n         25: imul\n         26: istore        5\n         28: aload_0\n         29: iload         5\n         31: bipush        28\n         33: iushr\n-        34: invokespecial #53                 // Method appendDigit:(I)V\n+        34: invokespecial #150                // Method appendDigit:(I)V\n         37: iload         5\n-        39: ldc           #55                 // int 268435455\n+        39: ldc           #156                // int 268435455\n         41: iand\n         42: istore        4\n         44: iinc          6, 1\n         47: goto          15\n         50: aload_0\n         51: bipush        46\n-        53: invokespecial #28                 // Method append:(I)V\n+        53: invokespecial #89                 // Method append:(I)V\n         56: iload         6\n         58: bipush        8\n         60: if_icmpgt     92\n         63: bipush        10\n         65: iload         4\n         67: imul\n         68: istore        5\n         70: aload_0\n         71: iload         5\n         73: bipush        28\n         75: iushr\n-        76: invokespecial #53                 // Method appendDigit:(I)V\n+        76: invokespecial #150                // Method appendDigit:(I)V\n         79: iload         5\n-        81: ldc           #55                 // int 268435455\n+        81: ldc           #156                // int 268435455\n         83: iand\n         84: istore        4\n         86: iinc          6, 1\n         89: goto          56\n         92: aload_0\n-        93: invokespecial #56                 // Method removeTrailingZeroes:()V\n+        93: invokespecial #157                // Method removeTrailingZeroes:()V\n         96: iconst_0\n         97: ireturn\n       LineNumberTable:\n         line 511: 0\n         line 512: 5\n         line 514: 12\n         line 515: 15\n@@ -1426,33 +1426,33 @@\n   private int toChars2(int, int, int);\n     descriptor: (III)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=4, args_size=4\n          0: aload_0\n          1: iconst_0\n-         2: invokespecial #53                 // Method appendDigit:(I)V\n+         2: invokespecial #150                // Method appendDigit:(I)V\n          5: aload_0\n          6: bipush        46\n-         8: invokespecial #28                 // Method append:(I)V\n+         8: invokespecial #89                 // Method append:(I)V\n         11: iload_3\n         12: ifge          26\n         15: aload_0\n         16: iconst_0\n-        17: invokespecial #53                 // Method appendDigit:(I)V\n+        17: invokespecial #150                // Method appendDigit:(I)V\n         20: iinc          3, 1\n         23: goto          11\n         26: aload_0\n         27: iload_1\n-        28: invokespecial #53                 // Method appendDigit:(I)V\n+        28: invokespecial #150                // Method appendDigit:(I)V\n         31: aload_0\n         32: iload_2\n-        33: invokespecial #57                 // Method append8Digits:(I)V\n+        33: invokespecial #160                // Method append8Digits:(I)V\n         36: aload_0\n-        37: invokespecial #56                 // Method removeTrailingZeroes:()V\n+        37: invokespecial #157                // Method removeTrailingZeroes:()V\n         40: iconst_0\n         41: ireturn\n       LineNumberTable:\n         line 532: 0\n         line 533: 5\n         line 534: 11\n         line 535: 15\n@@ -1474,28 +1474,28 @@\n   private int toChars3(int, int, int);\n     descriptor: (III)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=4, args_size=4\n          0: aload_0\n          1: iload_1\n-         2: invokespecial #53                 // Method appendDigit:(I)V\n+         2: invokespecial #150                // Method appendDigit:(I)V\n          5: aload_0\n          6: bipush        46\n-         8: invokespecial #28                 // Method append:(I)V\n+         8: invokespecial #89                 // Method append:(I)V\n         11: aload_0\n         12: iload_2\n-        13: invokespecial #57                 // Method append8Digits:(I)V\n+        13: invokespecial #160                // Method append8Digits:(I)V\n         16: aload_0\n-        17: invokespecial #56                 // Method removeTrailingZeroes:()V\n+        17: invokespecial #157                // Method removeTrailingZeroes:()V\n         20: aload_0\n         21: iload_3\n         22: iconst_1\n         23: isub\n-        24: invokespecial #58                 // Method exponent:(I)V\n+        24: invokespecial #163                // Method exponent:(I)V\n         27: iconst_0\n         28: ireturn\n       LineNumberTable:\n         line 545: 0\n         line 546: 5\n         line 547: 11\n         line 548: 16\n@@ -1511,32 +1511,32 @@\n   private void append8Digits(int);\n     descriptor: (I)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=5, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokespecial #54                 // Method y:(I)I\n+         2: invokespecial #153                // Method y:(I)I\n          5: istore_2\n          6: iconst_0\n          7: istore_3\n          8: iload_3\n          9: bipush        8\n         11: if_icmpge     41\n         14: bipush        10\n         16: iload_2\n         17: imul\n         18: istore        4\n         20: aload_0\n         21: iload         4\n         23: bipush        28\n         25: iushr\n-        26: invokespecial #53                 // Method appendDigit:(I)V\n+        26: invokespecial #150                // Method appendDigit:(I)V\n         29: iload         4\n-        31: ldc           #55                 // int 268435455\n+        31: ldc           #156                // int 268435455\n         33: iand\n         34: istore_2\n         35: iinc          3, 1\n         38: goto          8\n         41: return\n       LineNumberTable:\n         line 558: 0\n@@ -1562,40 +1562,40 @@\n \n   private void removeTrailingZeroes();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field bytes:[B\n+         1: getfield      #15                 // Field bytes:[B\n          4: aload_0\n-         5: getfield      #19                 // Field index:I\n+         5: getfield      #63                 // Field index:I\n          8: baload\n          9: bipush        48\n         11: if_icmpne     27\n         14: aload_0\n         15: dup\n-        16: getfield      #19                 // Field index:I\n+        16: getfield      #63                 // Field index:I\n         19: iconst_1\n         20: isub\n-        21: putfield      #19                 // Field index:I\n+        21: putfield      #63                 // Field index:I\n         24: goto          0\n         27: aload_0\n-        28: getfield      #5                  // Field bytes:[B\n+        28: getfield      #15                 // Field bytes:[B\n         31: aload_0\n-        32: getfield      #19                 // Field index:I\n+        32: getfield      #63                 // Field index:I\n         35: baload\n         36: bipush        46\n         38: if_icmpne     51\n         41: aload_0\n         42: dup\n-        43: getfield      #19                 // Field index:I\n+        43: getfield      #63                 // Field index:I\n         46: iconst_1\n         47: iadd\n-        48: putfield      #19                 // Field index:I\n+        48: putfield      #63                 // Field index:I\n         51: return\n       LineNumberTable:\n         line 567: 0\n         line 568: 14\n         line 571: 27\n         line 572: 41\n         line 574: 51\n@@ -1614,16 +1614,16 @@\n       stack=4, locals=2, args_size=2\n          0: iload_1\n          1: iconst_1\n          2: iadd\n          3: i2l\n          4: bipush        28\n          6: lshl\n-         7: ldc2_w        #59                 // long 193428131138340668l\n-        10: invokestatic  #41                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n+         7: ldc2_w        #166                // long 193428131138340668l\n+        10: invokestatic  #124                // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n         13: bipush        20\n         15: lushr\n         16: l2i\n         17: iconst_1\n         18: isub\n         19: ireturn\n       LineNumberTable:\n@@ -1636,46 +1636,46 @@\n   private void exponent(int);\n     descriptor: (I)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_0\n          1: bipush        69\n-         3: invokespecial #28                 // Method append:(I)V\n+         3: invokespecial #89                 // Method append:(I)V\n          6: iload_1\n          7: ifge          19\n         10: aload_0\n         11: bipush        45\n-        13: invokespecial #28                 // Method append:(I)V\n+        13: invokespecial #89                 // Method append:(I)V\n         16: iload_1\n         17: ineg\n         18: istore_1\n         19: iload_1\n         20: bipush        10\n         22: if_icmpge     31\n         25: aload_0\n         26: iload_1\n-        27: invokespecial #53                 // Method appendDigit:(I)V\n+        27: invokespecial #150                // Method appendDigit:(I)V\n         30: return\n         31: iload_1\n         32: bipush        103\n         34: imul\n         35: bipush        10\n         37: iushr\n         38: istore_2\n         39: aload_0\n         40: iload_2\n-        41: invokespecial #53                 // Method appendDigit:(I)V\n+        41: invokespecial #150                // Method appendDigit:(I)V\n         44: aload_0\n         45: iload_1\n         46: bipush        10\n         48: iload_2\n         49: imul\n         50: isub\n-        51: invokespecial #53                 // Method appendDigit:(I)V\n+        51: invokespecial #150                // Method appendDigit:(I)V\n         54: return\n       LineNumberTable:\n         line 591: 0\n         line 592: 6\n         line 593: 10\n         line 594: 16\n         line 596: 19\n@@ -1696,22 +1696,22 @@\n \n   private void append(int);\n     descriptor: (I)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #5                  // Field bytes:[B\n+         1: getfield      #15                 // Field bytes:[B\n          4: aload_0\n          5: dup\n-         6: getfield      #19                 // Field index:I\n+         6: getfield      #63                 // Field index:I\n          9: iconst_1\n         10: iadd\n         11: dup_x1\n-        12: putfield      #19                 // Field index:I\n+        12: putfield      #63                 // Field index:I\n         15: iload_1\n         16: i2b\n         17: bastore\n         18: return\n       LineNumberTable:\n         line 610: 0\n         line 611: 18\n@@ -1722,22 +1722,22 @@\n \n   private void appendDigit(int);\n     descriptor: (I)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #5                  // Field bytes:[B\n+         1: getfield      #15                 // Field bytes:[B\n          4: aload_0\n          5: dup\n-         6: getfield      #19                 // Field index:I\n+         6: getfield      #63                 // Field index:I\n          9: iconst_1\n         10: iadd\n         11: dup_x1\n-        12: putfield      #19                 // Field index:I\n+        12: putfield      #63                 // Field index:I\n         15: bipush        48\n         17: iload_1\n         18: iadd\n         19: i2b\n         20: bastore\n         21: return\n       LineNumberTable:\n@@ -1749,48 +1749,48 @@\n             0      22     1     d   I\n \n   private java.lang.String charsToString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=7, locals=1, args_size=1\n-         0: new           #61                 // class java/lang/String\n+         0: new           #168                // class java/lang/String\n          3: dup\n          4: aload_0\n-         5: getfield      #5                  // Field bytes:[B\n+         5: getfield      #15                 // Field bytes:[B\n          8: iconst_0\n          9: iconst_0\n         10: aload_0\n-        11: getfield      #19                 // Field index:I\n+        11: getfield      #63                 // Field index:I\n         14: iconst_1\n         15: iadd\n-        16: invokespecial #62                 // Method java/lang/String.\"<init>\":([BIII)V\n+        16: invokespecial #170                // Method java/lang/String.\"<init>\":([BIII)V\n         19: areturn\n       LineNumberTable:\n         line 620: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      20     0  this   Lcom/fasterxml/jackson/core/io/schubfach/FloatToDecimal;\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: invokedynamic #63,  0             // InvokeDynamic #0:get:()Ljava/util/function/Supplier;\n-         5: invokestatic  #64                 // Method java/lang/ThreadLocal.withInitial:(Ljava/util/function/Supplier;)Ljava/lang/ThreadLocal;\n-         8: putstatic     #10                 // Field threadLocal:Ljava/lang/ThreadLocal;\n+         0: invokedynamic #173,  0            // InvokeDynamic #0:get:()Ljava/util/function/Supplier;\n+         5: invokestatic  #176                // Method java/lang/ThreadLocal.withInitial:(Ljava/util/function/Supplier;)Ljava/lang/ThreadLocal;\n+         8: putstatic     #35                 // Field threadLocal:Ljava/lang/ThreadLocal;\n         11: return\n       LineNumberTable:\n         line 110: 0\n         line 111: 5\n         line 110: 11\n }\n SourceFile: \"FloatToDecimal.java\"\n-InnerClasses:\n-  public static final #289= #288 of #292; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #251 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #252 ()Ljava/lang/Object;\n-      #253 REF_newInvokeSpecial com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.\"<init>\":()V\n-      #254 ()Lcom/fasterxml/jackson/core/io/schubfach/FloatToDecimal;\n+      #285 ()Ljava/lang/Object;\n+      #286 REF_newInvokeSpecial com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.\"<init>\":()V\n+      #288 ()Lcom/fasterxml/jackson/core/io/schubfach/FloatToDecimal;\n+InnerClasses:\n+  public static final #294= #290 of #292; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
