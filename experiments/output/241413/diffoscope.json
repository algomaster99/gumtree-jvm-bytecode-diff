{"diffoscope-json-version": 1, "source1": "first/XMLParserConfiguration.class", "source2": "second/XMLParserConfiguration.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -27,21 +27,21 @@\n         this.cDataTagName = \"content\";\n         this.convertNilAttributeToNull = false;\n         this.xsiTypeMap = Collections.emptyMap();\n         this.forceList = Collections.emptySet();\n     }\n     \n     @Deprecated\n-    public XMLParserConfiguration(final boolean keepStrings) {\n-        this(keepStrings, \"content\", false);\n+    public XMLParserConfiguration(final boolean b) {\n+        this(b, \"content\", false);\n     }\n     \n     @Deprecated\n-    public XMLParserConfiguration(final String cDataTagName) {\n-        this(false, cDataTagName, false);\n+    public XMLParserConfiguration(final String s) {\n+        this(false, s, false);\n     }\n     \n     @Deprecated\n     public XMLParserConfiguration(final boolean keepStrings, final String cDataTagName) {\n         this.maxNestingDepth = 512;\n         this.keepStrings = keepStrings;\n         this.cDataTagName = cDataTagName;\n@@ -52,94 +52,92 @@\n     public XMLParserConfiguration(final boolean keepStrings, final String cDataTagName, final boolean convertNilAttributeToNull) {\n         this.maxNestingDepth = 512;\n         this.keepStrings = keepStrings;\n         this.cDataTagName = cDataTagName;\n         this.convertNilAttributeToNull = convertNilAttributeToNull;\n     }\n     \n-    private XMLParserConfiguration(final boolean keepStrings, final String cDataTagName, final boolean convertNilAttributeToNull, final Map<String, XMLXsiTypeConverter<?>> xsiTypeMap, final Set<String> forceList, final int maxNestingDepth) {\n+    private XMLParserConfiguration(final boolean keepStrings, final String cDataTagName, final boolean convertNilAttributeToNull, final Map<String, XMLXsiTypeConverter<?>> m, final Set<String> s, final int maxNestingDepth) {\n         this.maxNestingDepth = 512;\n         this.keepStrings = keepStrings;\n         this.cDataTagName = cDataTagName;\n         this.convertNilAttributeToNull = convertNilAttributeToNull;\n-        this.xsiTypeMap = Collections.unmodifiableMap((Map<? extends String, ? extends XMLXsiTypeConverter<?>>)xsiTypeMap);\n-        this.forceList = Collections.unmodifiableSet((Set<? extends String>)forceList);\n+        this.xsiTypeMap = Collections.unmodifiableMap((Map<? extends String, ? extends XMLXsiTypeConverter<?>>)m);\n+        this.forceList = Collections.unmodifiableSet((Set<? extends String>)s);\n         this.maxNestingDepth = maxNestingDepth;\n     }\n     \n     @Override\n     protected XMLParserConfiguration clone() {\n         return new XMLParserConfiguration(this.keepStrings, this.cDataTagName, this.convertNilAttributeToNull, this.xsiTypeMap, this.forceList, this.maxNestingDepth);\n     }\n     \n     public boolean isKeepStrings() {\n         return this.keepStrings;\n     }\n     \n-    public XMLParserConfiguration withKeepStrings(final boolean newVal) {\n-        final XMLParserConfiguration newConfig = this.clone();\n-        newConfig.keepStrings = newVal;\n-        return newConfig;\n+    public XMLParserConfiguration withKeepStrings(final boolean keepStrings) {\n+        final XMLParserConfiguration clone = this.clone();\n+        clone.keepStrings = keepStrings;\n+        return clone;\n     }\n     \n     public String getcDataTagName() {\n         return this.cDataTagName;\n     }\n     \n-    public XMLParserConfiguration withcDataTagName(final String newVal) {\n-        final XMLParserConfiguration newConfig = this.clone();\n-        newConfig.cDataTagName = newVal;\n-        return newConfig;\n+    public XMLParserConfiguration withcDataTagName(final String cDataTagName) {\n+        final XMLParserConfiguration clone = this.clone();\n+        clone.cDataTagName = cDataTagName;\n+        return clone;\n     }\n     \n     public boolean isConvertNilAttributeToNull() {\n         return this.convertNilAttributeToNull;\n     }\n     \n-    public XMLParserConfiguration withConvertNilAttributeToNull(final boolean newVal) {\n-        final XMLParserConfiguration newConfig = this.clone();\n-        newConfig.convertNilAttributeToNull = newVal;\n-        return newConfig;\n+    public XMLParserConfiguration withConvertNilAttributeToNull(final boolean convertNilAttributeToNull) {\n+        final XMLParserConfiguration clone = this.clone();\n+        clone.convertNilAttributeToNull = convertNilAttributeToNull;\n+        return clone;\n     }\n     \n     public Map<String, XMLXsiTypeConverter<?>> getXsiTypeMap() {\n         return this.xsiTypeMap;\n     }\n     \n-    public XMLParserConfiguration withXsiTypeMap(final Map<String, XMLXsiTypeConverter<?>> xsiTypeMap) {\n-        final XMLParserConfiguration newConfig = this.clone();\n-        final Map<String, XMLXsiTypeConverter<?>> cloneXsiTypeMap = new HashMap<String, XMLXsiTypeConverter<?>>(xsiTypeMap);\n-        newConfig.xsiTypeMap = Collections.unmodifiableMap((Map<? extends String, ? extends XMLXsiTypeConverter<?>>)cloneXsiTypeMap);\n-        return newConfig;\n+    public XMLParserConfiguration withXsiTypeMap(final Map<String, XMLXsiTypeConverter<?>> m) {\n+        final XMLParserConfiguration clone = this.clone();\n+        clone.xsiTypeMap = Collections.unmodifiableMap((Map<? extends String, ? extends XMLXsiTypeConverter<?>>)new HashMap<String, XMLXsiTypeConverter<?>>(m));\n+        return clone;\n     }\n     \n     public Set<String> getForceList() {\n         return this.forceList;\n     }\n     \n-    public XMLParserConfiguration withForceList(final Set<String> forceList) {\n-        final XMLParserConfiguration newConfig = this.clone();\n-        final Set<String> cloneForceList = new HashSet<String>(forceList);\n-        newConfig.forceList = Collections.unmodifiableSet((Set<? extends String>)cloneForceList);\n-        return newConfig;\n+    public XMLParserConfiguration withForceList(final Set<String> c) {\n+        final XMLParserConfiguration clone = this.clone();\n+        clone.forceList = Collections.unmodifiableSet((Set<? extends String>)new HashSet<String>(c));\n+        return clone;\n     }\n     \n     public int getMaxNestingDepth() {\n         return this.maxNestingDepth;\n     }\n     \n     public XMLParserConfiguration withMaxNestingDepth(final int maxNestingDepth) {\n-        final XMLParserConfiguration newConfig = this.clone();\n+        final XMLParserConfiguration clone = this.clone();\n         if (maxNestingDepth > -1) {\n-            newConfig.maxNestingDepth = maxNestingDepth;\n+            clone.maxNestingDepth = maxNestingDepth;\n         }\n         else {\n-            newConfig.maxNestingDepth = -1;\n+            clone.maxNestingDepth = -1;\n         }\n-        return newConfig;\n+        return clone;\n     }\n     \n     static {\n         ORIGINAL = new XMLParserConfiguration();\n         KEEP_STRINGS = new XMLParserConfiguration().withKeepStrings(true);\n     }\n }\n"}]}
