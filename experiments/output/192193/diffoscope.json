{"diffoscope-json-version": 1, "source1": "first/TrueFileFilter.class", "source2": "second/TrueFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,88 +1,88 @@\n-  SHA-256 checksum 187d1d03b1553eaf8c0a4cdb7933f26b9c552b7d29930820c220cde1785926f5\n+  SHA-256 checksum a4d3d5c9247f5382afa8385d935b0f25364769fb27d49d1433c34f9638ecb0ed\n   Compiled from \"TrueFileFilter.java\"\n public class org.apache.commons.io.filefilter.TrueFileFilter implements org.apache.commons.io.filefilter.IOFileFilter,java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #8                          // org/apache/commons/io/filefilter/TrueFileFilter\n-  super_class: #11                        // java/lang/Object\n+  this_class: #20                         // org/apache/commons/io/filefilter/TrueFileFilter\n+  super_class: #2                         // java/lang/Object\n   interfaces: 2, fields: 4, methods: 9, attributes: 1\n Constant pool:\n-   #1 = Methodref          #11.#53        // java/lang/Object.\"<init>\":()V\n-   #2 = Fieldref           #54.#55        // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-   #3 = Fieldref           #56.#57        // org/apache/commons/io/filefilter/FalseFileFilter.INSTANCE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #4 = Fieldref           #8.#57         // org/apache/commons/io/filefilter/TrueFileFilter.INSTANCE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #5 = Fieldref           #8.#58         // org/apache/commons/io/filefilter/TrueFileFilter.TO_STRING:Ljava/lang/String;\n-   #6 = Fieldref           #59.#60        // java/lang/Boolean.TRUE:Ljava/lang/Boolean;\n-   #7 = Methodref          #59.#61        // java/lang/Boolean.toString:()Ljava/lang/String;\n-   #8 = Class              #62            // org/apache/commons/io/filefilter/TrueFileFilter\n-   #9 = Methodref          #8.#53         // org/apache/commons/io/filefilter/TrueFileFilter.\"<init>\":()V\n-  #10 = Fieldref           #8.#63         // org/apache/commons/io/filefilter/TrueFileFilter.TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #11 = Class              #64            // java/lang/Object\n-  #12 = Class              #65            // org/apache/commons/io/filefilter/IOFileFilter\n-  #13 = Class              #66            // java/io/Serializable\n-  #14 = Utf8               TO_STRING\n-  #15 = Utf8               Ljava/lang/String;\n-  #16 = Utf8               serialVersionUID\n-  #17 = Utf8               J\n-  #18 = Utf8               ConstantValue\n-  #19 = Long               8782512160909720199l\n-  #21 = Utf8               TRUE\n-  #22 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #23 = Utf8               INSTANCE\n-  #24 = Utf8               <init>\n-  #25 = Utf8               ()V\n-  #26 = Utf8               Code\n-  #27 = Utf8               LineNumberTable\n-  #28 = Utf8               LocalVariableTable\n-  #29 = Utf8               this\n-  #30 = Utf8               Lorg/apache/commons/io/filefilter/TrueFileFilter;\n-  #31 = Utf8               accept\n-  #32 = Utf8               (Ljava/io/File;)Z\n-  #33 = Utf8               file\n-  #34 = Utf8               Ljava/io/File;\n-  #35 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n-  #36 = Utf8               dir\n-  #37 = Utf8               name\n-  #38 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #39 = Utf8               Ljava/nio/file/Path;\n-  #40 = Utf8               attributes\n-  #41 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n-  #42 = Utf8               and\n-  #43 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #44 = Utf8               fileFilter\n-  #45 = Utf8               negate\n-  #46 = Utf8               ()Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #47 = Utf8               or\n-  #48 = Utf8               toString\n-  #49 = Utf8               ()Ljava/lang/String;\n-  #50 = Utf8               <clinit>\n-  #51 = Utf8               SourceFile\n-  #52 = Utf8               TrueFileFilter.java\n-  #53 = NameAndType        #24:#25        // \"<init>\":()V\n-  #54 = Class              #67            // java/nio/file/FileVisitResult\n-  #55 = NameAndType        #68:#69        // CONTINUE:Ljava/nio/file/FileVisitResult;\n-  #56 = Class              #70            // org/apache/commons/io/filefilter/FalseFileFilter\n-  #57 = NameAndType        #23:#22        // INSTANCE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #58 = NameAndType        #14:#15        // TO_STRING:Ljava/lang/String;\n-  #59 = Class              #71            // java/lang/Boolean\n-  #60 = NameAndType        #21:#72        // TRUE:Ljava/lang/Boolean;\n-  #61 = NameAndType        #48:#49        // toString:()Ljava/lang/String;\n-  #62 = Utf8               org/apache/commons/io/filefilter/TrueFileFilter\n-  #63 = NameAndType        #21:#22        // TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #64 = Utf8               java/lang/Object\n-  #65 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n-  #66 = Utf8               java/io/Serializable\n-  #67 = Utf8               java/nio/file/FileVisitResult\n-  #68 = Utf8               CONTINUE\n-  #69 = Utf8               Ljava/nio/file/FileVisitResult;\n-  #70 = Utf8               org/apache/commons/io/filefilter/FalseFileFilter\n-  #71 = Utf8               java/lang/Boolean\n-  #72 = Utf8               Ljava/lang/Boolean;\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Fieldref           #8.#9          // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+   #8 = Class              #10            // java/nio/file/FileVisitResult\n+   #9 = NameAndType        #11:#12        // CONTINUE:Ljava/nio/file/FileVisitResult;\n+  #10 = Utf8               java/nio/file/FileVisitResult\n+  #11 = Utf8               CONTINUE\n+  #12 = Utf8               Ljava/nio/file/FileVisitResult;\n+  #13 = Fieldref           #14.#15        // org/apache/commons/io/filefilter/FalseFileFilter.INSTANCE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #14 = Class              #16            // org/apache/commons/io/filefilter/FalseFileFilter\n+  #15 = NameAndType        #17:#18        // INSTANCE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #16 = Utf8               org/apache/commons/io/filefilter/FalseFileFilter\n+  #17 = Utf8               INSTANCE\n+  #18 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #19 = Fieldref           #20.#15        // org/apache/commons/io/filefilter/TrueFileFilter.INSTANCE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #20 = Class              #21            // org/apache/commons/io/filefilter/TrueFileFilter\n+  #21 = Utf8               org/apache/commons/io/filefilter/TrueFileFilter\n+  #22 = Fieldref           #20.#23        // org/apache/commons/io/filefilter/TrueFileFilter.TO_STRING:Ljava/lang/String;\n+  #23 = NameAndType        #24:#25        // TO_STRING:Ljava/lang/String;\n+  #24 = Utf8               TO_STRING\n+  #25 = Utf8               Ljava/lang/String;\n+  #26 = Fieldref           #27.#28        // java/lang/Boolean.TRUE:Ljava/lang/Boolean;\n+  #27 = Class              #29            // java/lang/Boolean\n+  #28 = NameAndType        #30:#31        // TRUE:Ljava/lang/Boolean;\n+  #29 = Utf8               java/lang/Boolean\n+  #30 = Utf8               TRUE\n+  #31 = Utf8               Ljava/lang/Boolean;\n+  #32 = Methodref          #27.#33        // java/lang/Boolean.toString:()Ljava/lang/String;\n+  #33 = NameAndType        #34:#35        // toString:()Ljava/lang/String;\n+  #34 = Utf8               toString\n+  #35 = Utf8               ()Ljava/lang/String;\n+  #36 = Methodref          #20.#3         // org/apache/commons/io/filefilter/TrueFileFilter.\"<init>\":()V\n+  #37 = Fieldref           #20.#38        // org/apache/commons/io/filefilter/TrueFileFilter.TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #38 = NameAndType        #30:#18        // TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #39 = Class              #40            // org/apache/commons/io/filefilter/IOFileFilter\n+  #40 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n+  #41 = Class              #42            // java/io/Serializable\n+  #42 = Utf8               java/io/Serializable\n+  #43 = Utf8               serialVersionUID\n+  #44 = Utf8               J\n+  #45 = Utf8               ConstantValue\n+  #46 = Long               8782512160909720199l\n+  #48 = Utf8               Code\n+  #49 = Utf8               LineNumberTable\n+  #50 = Utf8               LocalVariableTable\n+  #51 = Utf8               this\n+  #52 = Utf8               Lorg/apache/commons/io/filefilter/TrueFileFilter;\n+  #53 = Utf8               accept\n+  #54 = Utf8               (Ljava/io/File;)Z\n+  #55 = Utf8               file\n+  #56 = Utf8               Ljava/io/File;\n+  #57 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+  #58 = Utf8               dir\n+  #59 = Utf8               name\n+  #60 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #61 = Utf8               Ljava/nio/file/Path;\n+  #62 = Utf8               attributes\n+  #63 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n+  #64 = Utf8               and\n+  #65 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #66 = Utf8               fileFilter\n+  #67 = Utf8               negate\n+  #68 = Utf8               ()Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #69 = Utf8               or\n+  #70 = Utf8               <clinit>\n+  #71 = Utf8               SourceFile\n+  #72 = Utf8               TrueFileFilter.java\n {\n   private static final java.lang.String TO_STRING;\n     descriptor: Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final long serialVersionUID = 8782512160909720199l;\n     descriptor: J\n@@ -142,15 +142,15 @@\n             0       2     2  name   Ljava/lang/String;\n \n   public java.nio.file.FileVisitResult accept(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes);\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=3, args_size=3\n-         0: getstatic     #2                  // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+         0: getstatic     #7                  // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n          3: areturn\n       LineNumberTable:\n         line 92: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       4     0  this   Lorg/apache/commons/io/filefilter/TrueFileFilter;\n             0       4     1  file   Ljava/nio/file/Path;\n@@ -171,63 +171,63 @@\n             0       2     1 fileFilter   Lorg/apache/commons/io/filefilter/IOFileFilter;\n \n   public org.apache.commons.io.filefilter.IOFileFilter negate();\n     descriptor: ()Lorg/apache/commons/io/filefilter/IOFileFilter;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n-         0: getstatic     #3                  // Field org/apache/commons/io/filefilter/FalseFileFilter.INSTANCE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+         0: getstatic     #13                 // Field org/apache/commons/io/filefilter/FalseFileFilter.INSTANCE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n          3: areturn\n       LineNumberTable:\n         line 103: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       4     0  this   Lorg/apache/commons/io/filefilter/TrueFileFilter;\n \n   public org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter);\n     descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=2\n-         0: getstatic     #4                  // Field INSTANCE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+         0: getstatic     #19                 // Field INSTANCE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n          3: areturn\n       LineNumberTable:\n         line 109: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       4     0  this   Lorg/apache/commons/io/filefilter/TrueFileFilter;\n             0       4     1 fileFilter   Lorg/apache/commons/io/filefilter/IOFileFilter;\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n-         0: getstatic     #5                  // Field TO_STRING:Ljava/lang/String;\n+         0: getstatic     #22                 // Field TO_STRING:Ljava/lang/String;\n          3: areturn\n       LineNumberTable:\n         line 114: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       4     0  this   Lorg/apache/commons/io/filefilter/TrueFileFilter;\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: getstatic     #6                  // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;\n-         3: invokevirtual #7                  // Method java/lang/Boolean.toString:()Ljava/lang/String;\n-         6: putstatic     #5                  // Field TO_STRING:Ljava/lang/String;\n-         9: new           #8                  // class org/apache/commons/io/filefilter/TrueFileFilter\n+         0: getstatic     #26                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;\n+         3: invokevirtual #32                 // Method java/lang/Boolean.toString:()Ljava/lang/String;\n+         6: putstatic     #22                 // Field TO_STRING:Ljava/lang/String;\n+         9: new           #20                 // class org/apache/commons/io/filefilter/TrueFileFilter\n         12: dup\n-        13: invokespecial #9                  // Method \"<init>\":()V\n-        16: putstatic     #10                 // Field TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-        19: getstatic     #10                 // Field TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-        22: putstatic     #4                  // Field INSTANCE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        13: invokespecial #36                 // Method \"<init>\":()V\n+        16: putstatic     #37                 // Field TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        19: getstatic     #37                 // Field TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        22: putstatic     #19                 // Field INSTANCE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n         25: return\n       LineNumberTable:\n         line 37: 0\n         line 46: 9\n         line 52: 19\n }\n SourceFile: \"TrueFileFilter.java\"\n"}]}
