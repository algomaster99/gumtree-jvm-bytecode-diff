{"diffoscope-json-version": 1, "source1": "first/FailableToDoubleBiFunction.class", "source2": "second/FailableToDoubleBiFunction.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,125 +1,130 @@\n-  SHA-256 checksum 8c6e54a766c68fbfce831a6aaffde3115e3229cce6cf852228ce1718d6f7aa51\n+  SHA-256 checksum 0490eb1a378285f5f774cd05010c0c192c04e2cbd044d4b41a5390c6ed5bbf8f\n   Compiled from \"FailableToDoubleBiFunction.java\"\n public interface org.apache.commons.lang3.function.FailableToDoubleBiFunction<T extends java.lang.Object, U extends java.lang.Object, E extends java.lang.Throwable>\n   minor version: 0\n   major version: 52\n   flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT\n-  this_class: #2                          // org/apache/commons/lang3/function/FailableToDoubleBiFunction\n-  super_class: #11                        // java/lang/Object\n+  this_class: #1                          // org/apache/commons/lang3/function/FailableToDoubleBiFunction\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 1, methods: 4, attributes: 5\n Constant pool:\n-   #1 = Fieldref           #2.#3          // org/apache/commons/lang3/function/FailableToDoubleBiFunction.NOP:Lorg/apache/commons/lang3/function/FailableToDoubleBiFunction;\n-   #2 = Class              #4             // org/apache/commons/lang3/function/FailableToDoubleBiFunction\n-   #3 = NameAndType        #5:#6          // NOP:Lorg/apache/commons/lang3/function/FailableToDoubleBiFunction;\n-   #4 = Utf8               org/apache/commons/lang3/function/FailableToDoubleBiFunction\n+   #1 = Class              #2             // org/apache/commons/lang3/function/FailableToDoubleBiFunction\n+   #2 = Utf8               org/apache/commons/lang3/function/FailableToDoubleBiFunction\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n    #5 = Utf8               NOP\n    #6 = Utf8               Lorg/apache/commons/lang3/function/FailableToDoubleBiFunction;\n-   #7 = InvokeDynamic      #0:#8          // #0:applyAsDouble:()Lorg/apache/commons/lang3/function/FailableToDoubleBiFunction;\n-   #8 = NameAndType        #9:#10         // applyAsDouble:()Lorg/apache/commons/lang3/function/FailableToDoubleBiFunction;\n-   #9 = Utf8               applyAsDouble\n-  #10 = Utf8               ()Lorg/apache/commons/lang3/function/FailableToDoubleBiFunction;\n-  #11 = Class              #12            // java/lang/Object\n-  #12 = Utf8               java/lang/Object\n-  #13 = Utf8               nop\n-  #14 = Utf8               Code\n-  #15 = Utf8               LineNumberTable\n-  #16 = Utf8               Signature\n-  #17 = Utf8               <T:Ljava/lang/Object;U:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableToDoubleBiFunction<TT;TU;TE;>;\n-  #18 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)D\n-  #19 = Utf8               Exceptions\n-  #20 = Class              #21            // java/lang/Throwable\n-  #21 = Utf8               java/lang/Throwable\n-  #22 = Utf8               (TT;TU;)D^TE;\n-  #23 = Utf8               lambda$static$0\n-  #24 = Utf8               LocalVariableTable\n-  #25 = Utf8               t\n-  #26 = Utf8               Ljava/lang/Object;\n-  #27 = Utf8               u\n-  #28 = Utf8               <clinit>\n-  #29 = Utf8               ()V\n-  #30 = Utf8               <T:Ljava/lang/Object;U:Ljava/lang/Object;E:Ljava/lang/Throwable;>Ljava/lang/Object;\n-  #31 = Utf8               SourceFile\n-  #32 = Utf8               FailableToDoubleBiFunction.java\n+   #7 = Utf8               <clinit>\n+   #8 = Utf8               ()V\n+   #9 = Utf8               Code\n+  #10 = InvokeDynamic      #0:#11         // #0:applyAsDouble:()Lorg/apache/commons/lang3/function/FailableToDoubleBiFunction;\n+  #11 = NameAndType        #12:#13        // applyAsDouble:()Lorg/apache/commons/lang3/function/FailableToDoubleBiFunction;\n+  #12 = Utf8               applyAsDouble\n+  #13 = Utf8               ()Lorg/apache/commons/lang3/function/FailableToDoubleBiFunction;\n+  #14 = Fieldref           #1.#15         // org/apache/commons/lang3/function/FailableToDoubleBiFunction.NOP:Lorg/apache/commons/lang3/function/FailableToDoubleBiFunction;\n+  #15 = NameAndType        #5:#6          // NOP:Lorg/apache/commons/lang3/function/FailableToDoubleBiFunction;\n+  #16 = Utf8               LineNumberTable\n+  #17 = Utf8               LocalVariableTable\n+  #18 = Utf8               nop\n+  #19 = Utf8               Signature\n+  #20 = Utf8               <T:Ljava/lang/Object;U:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableToDoubleBiFunction<TT;TU;TE;>;\n+  #21 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)D\n+  #22 = Utf8               Exceptions\n+  #23 = Class              #24            // java/lang/Throwable\n+  #24 = Utf8               java/lang/Throwable\n+  #25 = Utf8               (TT;TU;)D^TE;\n+  #26 = Utf8               lambda$0\n+  #27 = Utf8               t\n+  #28 = Utf8               Ljava/lang/Object;\n+  #29 = Utf8               u\n+  #30 = Utf8               SourceFile\n+  #31 = Utf8               FailableToDoubleBiFunction.java\n+  #32 = Utf8               <T:Ljava/lang/Object;U:Ljava/lang/Object;E:Ljava/lang/Throwable;>Ljava/lang/Object;\n   #33 = Utf8               RuntimeVisibleAnnotations\n   #34 = Utf8               Ljava/lang/FunctionalInterface;\n   #35 = Utf8               BootstrapMethods\n-  #36 = MethodHandle       6:#37          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #37 = Methodref          #38.#39        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #38 = Class              #40            // java/lang/invoke/LambdaMetafactory\n-  #39 = NameAndType        #41:#42        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #40 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #41 = Utf8               metafactory\n-  #42 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #43 = MethodType         #18            //  (Ljava/lang/Object;Ljava/lang/Object;)D\n-  #44 = MethodHandle       6:#45          // REF_invokeStatic org/apache/commons/lang3/function/FailableToDoubleBiFunction.lambda$static$0:(Ljava/lang/Object;Ljava/lang/Object;)D\n-  #45 = InterfaceMethodref #2.#46         // org/apache/commons/lang3/function/FailableToDoubleBiFunction.lambda$static$0:(Ljava/lang/Object;Ljava/lang/Object;)D\n-  #46 = NameAndType        #23:#18        // lambda$static$0:(Ljava/lang/Object;Ljava/lang/Object;)D\n-  #47 = Utf8               InnerClasses\n-  #48 = Class              #49            // java/lang/invoke/MethodHandles$Lookup\n-  #49 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #50 = Class              #51            // java/lang/invoke/MethodHandles\n-  #51 = Utf8               java/lang/invoke/MethodHandles\n-  #52 = Utf8               Lookup\n+  #36 = Methodref          #37.#39        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #37 = Class              #38            // java/lang/invoke/LambdaMetafactory\n+  #38 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #39 = NameAndType        #40:#41        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #40 = Utf8               metafactory\n+  #41 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #42 = MethodHandle       6:#36          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #43 = MethodType         #21            //  (Ljava/lang/Object;Ljava/lang/Object;)D\n+  #44 = InterfaceMethodref #1.#45         // org/apache/commons/lang3/function/FailableToDoubleBiFunction.lambda$0:(Ljava/lang/Object;Ljava/lang/Object;)D\n+  #45 = NameAndType        #26:#21        // lambda$0:(Ljava/lang/Object;Ljava/lang/Object;)D\n+  #46 = MethodHandle       6:#44          // REF_invokeStatic org/apache/commons/lang3/function/FailableToDoubleBiFunction.lambda$0:(Ljava/lang/Object;Ljava/lang/Object;)D\n+  #47 = MethodType         #21            //  (Ljava/lang/Object;Ljava/lang/Object;)D\n+  #48 = Utf8               InnerClasses\n+  #49 = Class              #50            // java/lang/invoke/MethodHandles$Lookup\n+  #50 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #51 = Class              #52            // java/lang/invoke/MethodHandles\n+  #52 = Utf8               java/lang/invoke/MethodHandles\n+  #53 = Utf8               Lookup\n {\n   public static final org.apache.commons.lang3.function.FailableToDoubleBiFunction NOP;\n     descriptor: Lorg/apache/commons/lang3/function/FailableToDoubleBiFunction;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n+  static {};\n+    descriptor: ()V\n+    flags: (0x0008) ACC_STATIC\n+    Code:\n+      stack=1, locals=0, args_size=0\n+         0: invokedynamic #10,  0             // InvokeDynamic #0:applyAsDouble:()Lorg/apache/commons/lang3/function/FailableToDoubleBiFunction;\n+         5: putstatic     #14                 // Field NOP:Lorg/apache/commons/lang3/function/FailableToDoubleBiFunction;\n+         8: return\n+      LineNumberTable:\n+        line 35: 0\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+\n   public static <T extends java.lang.Object, U extends java.lang.Object, E extends java.lang.Throwable> org.apache.commons.lang3.function.FailableToDoubleBiFunction<T, U, E> nop();\n     descriptor: ()Lorg/apache/commons/lang3/function/FailableToDoubleBiFunction;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Signature: #20                          // <T:Ljava/lang/Object;U:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableToDoubleBiFunction<TT;TU;TE;>;\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: getstatic     #1                  // Field NOP:Lorg/apache/commons/lang3/function/FailableToDoubleBiFunction;\n+         0: getstatic     #14                 // Field NOP:Lorg/apache/commons/lang3/function/FailableToDoubleBiFunction;\n          3: areturn\n       LineNumberTable:\n         line 46: 0\n-    Signature: #17                          // <T:Ljava/lang/Object;U:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableToDoubleBiFunction<TT;TU;TE;>;\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n \n   public abstract double applyAsDouble(T, U) throws E;\n     descriptor: (Ljava/lang/Object;Ljava/lang/Object;)D\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.lang.Throwable\n-    Signature: #22                          // (TT;TU;)D^TE;\n+    Signature: #25                          // (TT;TU;)D^TE;\n \n-  private static double lambda$static$0(java.lang.Object, java.lang.Object) throws java.lang.Throwable;\n+  private static double lambda$0(java.lang.Object, java.lang.Object) throws java.lang.Throwable;\n     descriptor: (Ljava/lang/Object;Ljava/lang/Object;)D\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.lang.Throwable\n     Code:\n       stack=2, locals=2, args_size=2\n          0: dconst_0\n          1: dreturn\n       LineNumberTable:\n         line 35: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       2     0     t   Ljava/lang/Object;\n             0       2     1     u   Ljava/lang/Object;\n-    Exceptions:\n-      throws java.lang.Throwable\n-\n-  static {};\n-    descriptor: ()V\n-    flags: (0x0008) ACC_STATIC\n-    Code:\n-      stack=1, locals=0, args_size=0\n-         0: invokedynamic #7,  0              // InvokeDynamic #0:applyAsDouble:()Lorg/apache/commons/lang3/function/FailableToDoubleBiFunction;\n-         5: putstatic     #1                  // Field NOP:Lorg/apache/commons/lang3/function/FailableToDoubleBiFunction;\n-         8: return\n-      LineNumberTable:\n-        line 35: 0\n }\n-Signature: #30                          // <T:Ljava/lang/Object;U:Ljava/lang/Object;E:Ljava/lang/Throwable;>Ljava/lang/Object;\n SourceFile: \"FailableToDoubleBiFunction.java\"\n+Signature: #32                          // <T:Ljava/lang/Object;U:Ljava/lang/Object;E:Ljava/lang/Throwable;>Ljava/lang/Object;\n RuntimeVisibleAnnotations:\n   0: #34()\n     java.lang.FunctionalInterface\n BootstrapMethods:\n-  0: #36 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #42 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n       #43 (Ljava/lang/Object;Ljava/lang/Object;)D\n-      #44 REF_invokeStatic org/apache/commons/lang3/function/FailableToDoubleBiFunction.lambda$static$0:(Ljava/lang/Object;Ljava/lang/Object;)D\n-      #43 (Ljava/lang/Object;Ljava/lang/Object;)D\n+      #46 REF_invokeStatic org/apache/commons/lang3/function/FailableToDoubleBiFunction.lambda$0:(Ljava/lang/Object;Ljava/lang/Object;)D\n+      #47 (Ljava/lang/Object;Ljava/lang/Object;)D\n InnerClasses:\n-  public static final #52= #48 of #50;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  public static final #53= #49 of #51;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
