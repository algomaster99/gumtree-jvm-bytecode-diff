{"diffoscope-json-version": 1, "source1": "first/SubnetUtils.class", "source2": "second/SubnetUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,181 +1,181 @@\n-  SHA-256 checksum adff5412dfb26a61ed2f527e1daaeb311952d5ec59bc42d2eddd5271913f7e20\n+  SHA-256 checksum a27a9a69ea628f42d850f5d43c9a2daafc6d8e339bc46ad5a1f62862f4120ce3\n   Compiled from \"SubnetUtils.java\"\n public class org.apache.commons.net.util.SubnetUtils\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/net/util/SubnetUtils\n-  super_class: #20                        // java/lang/Object\n+  super_class: #21                        // java/lang/Object\n   interfaces: 0, fields: 11, methods: 17, attributes: 2\n Constant pool:\n-    #1 = Class              #101          // org/apache/commons/net/util/SubnetUtils\n-    #2 = Fieldref           #1.#102       // org/apache/commons/net/util/SubnetUtils.address:I\n-    #3 = Fieldref           #1.#103       // org/apache/commons/net/util/SubnetUtils.netmask:I\n-    #4 = Methodref          #1.#104       // org/apache/commons/net/util/SubnetUtils.toInteger:(Ljava/lang/String;)I\n-    #5 = Fieldref           #1.#105       // org/apache/commons/net/util/SubnetUtils.broadcast:I\n-    #6 = Fieldref           #1.#106       // org/apache/commons/net/util/SubnetUtils.network:I\n-    #7 = Methodref          #20.#107      // java/lang/Object.\"<init>\":()V\n-    #8 = Fieldref           #1.#108       // org/apache/commons/net/util/SubnetUtils.inclusiveHostCount:Z\n-    #9 = Fieldref           #1.#109       // org/apache/commons/net/util/SubnetUtils.cidrPattern:Ljava/util/regex/Pattern;\n-   #10 = Methodref          #110.#111     // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #11 = Methodref          #72.#112      // java/util/regex/Matcher.matches:()Z\n-   #12 = Methodref          #1.#113       // org/apache/commons/net/util/SubnetUtils.matchAddress:(Ljava/util/regex/Matcher;)I\n-   #13 = Methodref          #72.#114      // java/util/regex/Matcher.group:(I)Ljava/lang/String;\n-   #14 = Methodref          #115.#116     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-   #15 = Methodref          #1.#117       // org/apache/commons/net/util/SubnetUtils.rangeCheck:(III)I\n-   #16 = Long               4294967295l\n-   #18 = Class              #118          // java/lang/IllegalArgumentException\n-   #19 = String             #119          // Could not parse [%s]\n-   #20 = Class              #120          // java/lang/Object\n-   #21 = Methodref          #71.#121      // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #22 = Methodref          #18.#122      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #23 = Class              #123          // org/apache/commons/net/util/SubnetUtils$SubnetInfo\n-   #24 = Methodref          #23.#124      // org/apache/commons/net/util/SubnetUtils$SubnetInfo.\"<init>\":(Lorg/apache/commons/net/util/SubnetUtils;Lorg/apache/commons/net/util/SubnetUtils$1;)V\n-   #25 = Fieldref           #1.#125       // org/apache/commons/net/util/SubnetUtils.addressPattern:Ljava/util/regex/Pattern;\n-   #26 = Class              #126          // java/lang/StringBuilder\n-   #27 = Methodref          #26.#107      // java/lang/StringBuilder.\"<init>\":()V\n-   #28 = String             #127          // Value [\n-   #29 = Methodref          #26.#128      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #30 = Methodref          #26.#129      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #31 = String             #130          // ] not in range [\n-   #32 = String             #131          // ,\n-   #33 = String             #132          // ]\n-   #34 = Methodref          #26.#133      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #35 = Integer            1431655765\n-   #36 = Integer            858993459\n-   #37 = Integer            252645135\n-   #38 = Methodref          #1.#134       // org/apache/commons/net/util/SubnetUtils.getInfo:()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n-   #39 = Methodref          #23.#135      // org/apache/commons/net/util/SubnetUtils$SubnetInfo.getNextAddress:()Ljava/lang/String;\n-   #40 = Methodref          #23.#136      // org/apache/commons/net/util/SubnetUtils$SubnetInfo.getNetmask:()Ljava/lang/String;\n-   #41 = Methodref          #1.#137       // org/apache/commons/net/util/SubnetUtils.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n-   #42 = Methodref          #23.#138      // org/apache/commons/net/util/SubnetUtils$SubnetInfo.getPreviousAddress:()Ljava/lang/String;\n-   #43 = String             #139          // (\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\n-   #44 = Methodref          #110.#140     // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-   #45 = String             #141          // (\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\n-   #46 = Class              #142          // org/apache/commons/net/util/SubnetUtils$1\n-   #47 = Utf8               InnerClasses\n-   #48 = Utf8               SubnetInfo\n-   #49 = Utf8               IP_ADDRESS\n-   #50 = Utf8               Ljava/lang/String;\n-   #51 = Utf8               ConstantValue\n-   #52 = Utf8               SLASH_FORMAT\n-   #53 = Utf8               addressPattern\n-   #54 = Utf8               Ljava/util/regex/Pattern;\n-   #55 = Utf8               cidrPattern\n-   #56 = Utf8               NBITS\n-   #57 = Utf8               I\n-   #58 = Integer            32\n-   #59 = Utf8               PARSE_FAIL\n-   #60 = Utf8               netmask\n-   #61 = Utf8               address\n-   #62 = Utf8               network\n-   #63 = Utf8               broadcast\n-   #64 = Utf8               inclusiveHostCount\n-   #65 = Utf8               Z\n-   #66 = Utf8               <init>\n-   #67 = Utf8               (Ljava/lang/String;)V\n-   #68 = Utf8               Code\n-   #69 = Utf8               LineNumberTable\n-   #70 = Utf8               StackMapTable\n-   #71 = Class              #143          // java/lang/String\n-   #72 = Class              #144          // java/util/regex/Matcher\n-   #73 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n-   #74 = Utf8               isInclusiveHostCount\n-   #75 = Utf8               ()Z\n-   #76 = Utf8               setInclusiveHostCount\n-   #77 = Utf8               (Z)V\n-   #78 = Utf8               getInfo\n-   #79 = Utf8               ()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n-   #80 = Utf8               toInteger\n-   #81 = Utf8               (Ljava/lang/String;)I\n-   #82 = Utf8               matchAddress\n-   #83 = Utf8               (Ljava/util/regex/Matcher;)I\n-   #84 = Utf8               rangeCheck\n-   #85 = Utf8               (III)I\n-   #86 = Utf8               pop\n-   #87 = Utf8               (I)I\n-   #88 = Utf8               getNext\n-   #89 = Utf8               ()Lorg/apache/commons/net/util/SubnetUtils;\n-   #90 = Utf8               getPrevious\n-   #91 = Utf8               access$000\n-   #92 = Utf8               (Lorg/apache/commons/net/util/SubnetUtils;)I\n-   #93 = Utf8               access$100\n-   #94 = Utf8               access$200\n-   #95 = Utf8               access$300\n-   #96 = Utf8               access$400\n-   #97 = Utf8               <clinit>\n-   #98 = Utf8               ()V\n-   #99 = Utf8               SourceFile\n-  #100 = Utf8               SubnetUtils.java\n-  #101 = Utf8               org/apache/commons/net/util/SubnetUtils\n-  #102 = NameAndType        #61:#57       // address:I\n-  #103 = NameAndType        #60:#57       // netmask:I\n-  #104 = NameAndType        #80:#81       // toInteger:(Ljava/lang/String;)I\n-  #105 = NameAndType        #63:#57       // broadcast:I\n-  #106 = NameAndType        #62:#57       // network:I\n-  #107 = NameAndType        #66:#98       // \"<init>\":()V\n-  #108 = NameAndType        #64:#65       // inclusiveHostCount:Z\n-  #109 = NameAndType        #55:#54       // cidrPattern:Ljava/util/regex/Pattern;\n-  #110 = Class              #145          // java/util/regex/Pattern\n-  #111 = NameAndType        #146:#147     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #112 = NameAndType        #148:#75      // matches:()Z\n-  #113 = NameAndType        #82:#83       // matchAddress:(Ljava/util/regex/Matcher;)I\n-  #114 = NameAndType        #149:#150     // group:(I)Ljava/lang/String;\n-  #115 = Class              #151          // java/lang/Integer\n-  #116 = NameAndType        #152:#81      // parseInt:(Ljava/lang/String;)I\n-  #117 = NameAndType        #84:#85       // rangeCheck:(III)I\n-  #118 = Utf8               java/lang/IllegalArgumentException\n-  #119 = Utf8               Could not parse [%s]\n-  #120 = Utf8               java/lang/Object\n-  #121 = NameAndType        #153:#154     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #122 = NameAndType        #66:#67       // \"<init>\":(Ljava/lang/String;)V\n-  #123 = Utf8               org/apache/commons/net/util/SubnetUtils$SubnetInfo\n-  #124 = NameAndType        #66:#155      // \"<init>\":(Lorg/apache/commons/net/util/SubnetUtils;Lorg/apache/commons/net/util/SubnetUtils$1;)V\n-  #125 = NameAndType        #53:#54       // addressPattern:Ljava/util/regex/Pattern;\n-  #126 = Utf8               java/lang/StringBuilder\n-  #127 = Utf8               Value [\n-  #128 = NameAndType        #156:#157     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #129 = NameAndType        #156:#158     // append:(I)Ljava/lang/StringBuilder;\n-  #130 = Utf8               ] not in range [\n-  #131 = Utf8               ,\n-  #132 = Utf8               ]\n-  #133 = NameAndType        #159:#160     // toString:()Ljava/lang/String;\n-  #134 = NameAndType        #78:#79       // getInfo:()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n-  #135 = NameAndType        #161:#160     // getNextAddress:()Ljava/lang/String;\n-  #136 = NameAndType        #162:#160     // getNetmask:()Ljava/lang/String;\n-  #137 = NameAndType        #66:#73       // \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n-  #138 = NameAndType        #163:#160     // getPreviousAddress:()Ljava/lang/String;\n-  #139 = Utf8               (\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\n-  #140 = NameAndType        #164:#165     // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #141 = Utf8               (\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\n-  #142 = Utf8               org/apache/commons/net/util/SubnetUtils$1\n-  #143 = Utf8               java/lang/String\n-  #144 = Utf8               java/util/regex/Matcher\n-  #145 = Utf8               java/util/regex/Pattern\n-  #146 = Utf8               matcher\n-  #147 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #148 = Utf8               matches\n-  #149 = Utf8               group\n-  #150 = Utf8               (I)Ljava/lang/String;\n-  #151 = Utf8               java/lang/Integer\n-  #152 = Utf8               parseInt\n-  #153 = Utf8               format\n-  #154 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #155 = Utf8               (Lorg/apache/commons/net/util/SubnetUtils;Lorg/apache/commons/net/util/SubnetUtils$1;)V\n-  #156 = Utf8               append\n-  #157 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #158 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #159 = Utf8               toString\n-  #160 = Utf8               ()Ljava/lang/String;\n-  #161 = Utf8               getNextAddress\n-  #162 = Utf8               getNetmask\n-  #163 = Utf8               getPreviousAddress\n-  #164 = Utf8               compile\n-  #165 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n+    #1 = Class              #2            // org/apache/commons/net/util/SubnetUtils\n+    #2 = Utf8               org/apache/commons/net/util/SubnetUtils\n+    #3 = Fieldref           #1.#4         // org/apache/commons/net/util/SubnetUtils.address:I\n+    #4 = NameAndType        #5:#6         // address:I\n+    #5 = Utf8               address\n+    #6 = Utf8               I\n+    #7 = Fieldref           #1.#8         // org/apache/commons/net/util/SubnetUtils.netmask:I\n+    #8 = NameAndType        #9:#6         // netmask:I\n+    #9 = Utf8               netmask\n+   #10 = Methodref          #1.#11        // org/apache/commons/net/util/SubnetUtils.toInteger:(Ljava/lang/String;)I\n+   #11 = NameAndType        #12:#13       // toInteger:(Ljava/lang/String;)I\n+   #12 = Utf8               toInteger\n+   #13 = Utf8               (Ljava/lang/String;)I\n+   #14 = Fieldref           #1.#15        // org/apache/commons/net/util/SubnetUtils.broadcast:I\n+   #15 = NameAndType        #16:#6        // broadcast:I\n+   #16 = Utf8               broadcast\n+   #17 = Fieldref           #1.#18        // org/apache/commons/net/util/SubnetUtils.network:I\n+   #18 = NameAndType        #19:#6        // network:I\n+   #19 = Utf8               network\n+   #20 = Methodref          #21.#22       // java/lang/Object.\"<init>\":()V\n+   #21 = Class              #23           // java/lang/Object\n+   #22 = NameAndType        #24:#25       // \"<init>\":()V\n+   #23 = Utf8               java/lang/Object\n+   #24 = Utf8               <init>\n+   #25 = Utf8               ()V\n+   #26 = Fieldref           #1.#27        // org/apache/commons/net/util/SubnetUtils.inclusiveHostCount:Z\n+   #27 = NameAndType        #28:#29       // inclusiveHostCount:Z\n+   #28 = Utf8               inclusiveHostCount\n+   #29 = Utf8               Z\n+   #30 = Fieldref           #1.#31        // org/apache/commons/net/util/SubnetUtils.cidrPattern:Ljava/util/regex/Pattern;\n+   #31 = NameAndType        #32:#33       // cidrPattern:Ljava/util/regex/Pattern;\n+   #32 = Utf8               cidrPattern\n+   #33 = Utf8               Ljava/util/regex/Pattern;\n+   #34 = Methodref          #35.#36       // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #35 = Class              #37           // java/util/regex/Pattern\n+   #36 = NameAndType        #38:#39       // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #37 = Utf8               java/util/regex/Pattern\n+   #38 = Utf8               matcher\n+   #39 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #40 = Methodref          #41.#42       // java/util/regex/Matcher.matches:()Z\n+   #41 = Class              #43           // java/util/regex/Matcher\n+   #42 = NameAndType        #44:#45       // matches:()Z\n+   #43 = Utf8               java/util/regex/Matcher\n+   #44 = Utf8               matches\n+   #45 = Utf8               ()Z\n+   #46 = Methodref          #1.#47        // org/apache/commons/net/util/SubnetUtils.matchAddress:(Ljava/util/regex/Matcher;)I\n+   #47 = NameAndType        #48:#49       // matchAddress:(Ljava/util/regex/Matcher;)I\n+   #48 = Utf8               matchAddress\n+   #49 = Utf8               (Ljava/util/regex/Matcher;)I\n+   #50 = Methodref          #41.#51       // java/util/regex/Matcher.group:(I)Ljava/lang/String;\n+   #51 = NameAndType        #52:#53       // group:(I)Ljava/lang/String;\n+   #52 = Utf8               group\n+   #53 = Utf8               (I)Ljava/lang/String;\n+   #54 = Methodref          #55.#56       // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+   #55 = Class              #57           // java/lang/Integer\n+   #56 = NameAndType        #58:#13       // parseInt:(Ljava/lang/String;)I\n+   #57 = Utf8               java/lang/Integer\n+   #58 = Utf8               parseInt\n+   #59 = Methodref          #1.#60        // org/apache/commons/net/util/SubnetUtils.rangeCheck:(III)I\n+   #60 = NameAndType        #61:#62       // rangeCheck:(III)I\n+   #61 = Utf8               rangeCheck\n+   #62 = Utf8               (III)I\n+   #63 = Long               4294967295l\n+   #65 = Class              #66           // java/lang/IllegalArgumentException\n+   #66 = Utf8               java/lang/IllegalArgumentException\n+   #67 = String             #68           // Could not parse [%s]\n+   #68 = Utf8               Could not parse [%s]\n+   #69 = Methodref          #70.#71       // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #70 = Class              #72           // java/lang/String\n+   #71 = NameAndType        #73:#74       // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #72 = Utf8               java/lang/String\n+   #73 = Utf8               format\n+   #74 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #75 = Methodref          #65.#76       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #76 = NameAndType        #24:#77       // \"<init>\":(Ljava/lang/String;)V\n+   #77 = Utf8               (Ljava/lang/String;)V\n+   #78 = Class              #79           // org/apache/commons/net/util/SubnetUtils$SubnetInfo\n+   #79 = Utf8               org/apache/commons/net/util/SubnetUtils$SubnetInfo\n+   #80 = Methodref          #78.#81       // org/apache/commons/net/util/SubnetUtils$SubnetInfo.\"<init>\":(Lorg/apache/commons/net/util/SubnetUtils;Lorg/apache/commons/net/util/SubnetUtils$1;)V\n+   #81 = NameAndType        #24:#82       // \"<init>\":(Lorg/apache/commons/net/util/SubnetUtils;Lorg/apache/commons/net/util/SubnetUtils$1;)V\n+   #82 = Utf8               (Lorg/apache/commons/net/util/SubnetUtils;Lorg/apache/commons/net/util/SubnetUtils$1;)V\n+   #83 = Fieldref           #1.#84        // org/apache/commons/net/util/SubnetUtils.addressPattern:Ljava/util/regex/Pattern;\n+   #84 = NameAndType        #85:#33       // addressPattern:Ljava/util/regex/Pattern;\n+   #85 = Utf8               addressPattern\n+   #86 = Class              #87           // java/lang/StringBuilder\n+   #87 = Utf8               java/lang/StringBuilder\n+   #88 = Methodref          #86.#22       // java/lang/StringBuilder.\"<init>\":()V\n+   #89 = String             #90           // Value [\n+   #90 = Utf8               Value [\n+   #91 = Methodref          #86.#92       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #92 = NameAndType        #93:#94       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #93 = Utf8               append\n+   #94 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #95 = Methodref          #86.#96       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #96 = NameAndType        #93:#97       // append:(I)Ljava/lang/StringBuilder;\n+   #97 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #98 = String             #99           // ] not in range [\n+   #99 = Utf8               ] not in range [\n+  #100 = String             #101          // ,\n+  #101 = Utf8               ,\n+  #102 = String             #103          // ]\n+  #103 = Utf8               ]\n+  #104 = Methodref          #86.#105      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #105 = NameAndType        #106:#107     // toString:()Ljava/lang/String;\n+  #106 = Utf8               toString\n+  #107 = Utf8               ()Ljava/lang/String;\n+  #108 = Integer            1431655765\n+  #109 = Integer            858993459\n+  #110 = Integer            252645135\n+  #111 = Methodref          #1.#112       // org/apache/commons/net/util/SubnetUtils.getInfo:()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n+  #112 = NameAndType        #113:#114     // getInfo:()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n+  #113 = Utf8               getInfo\n+  #114 = Utf8               ()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n+  #115 = Methodref          #78.#116      // org/apache/commons/net/util/SubnetUtils$SubnetInfo.getNextAddress:()Ljava/lang/String;\n+  #116 = NameAndType        #117:#107     // getNextAddress:()Ljava/lang/String;\n+  #117 = Utf8               getNextAddress\n+  #118 = Methodref          #78.#119      // org/apache/commons/net/util/SubnetUtils$SubnetInfo.getNetmask:()Ljava/lang/String;\n+  #119 = NameAndType        #120:#107     // getNetmask:()Ljava/lang/String;\n+  #120 = Utf8               getNetmask\n+  #121 = Methodref          #1.#122       // org/apache/commons/net/util/SubnetUtils.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+  #122 = NameAndType        #24:#123      // \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+  #123 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n+  #124 = Methodref          #78.#125      // org/apache/commons/net/util/SubnetUtils$SubnetInfo.getPreviousAddress:()Ljava/lang/String;\n+  #125 = NameAndType        #126:#107     // getPreviousAddress:()Ljava/lang/String;\n+  #126 = Utf8               getPreviousAddress\n+  #127 = String             #128          // (\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\n+  #128 = Utf8               (\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\n+  #129 = Methodref          #35.#130      // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #130 = NameAndType        #131:#132     // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #131 = Utf8               compile\n+  #132 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #133 = String             #134          // (\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\n+  #134 = Utf8               (\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\n+  #135 = Utf8               IP_ADDRESS\n+  #136 = Utf8               Ljava/lang/String;\n+  #137 = Utf8               ConstantValue\n+  #138 = Utf8               SLASH_FORMAT\n+  #139 = Utf8               NBITS\n+  #140 = Integer            32\n+  #141 = Utf8               PARSE_FAIL\n+  #142 = Utf8               Code\n+  #143 = Utf8               LineNumberTable\n+  #144 = Utf8               StackMapTable\n+  #145 = Utf8               isInclusiveHostCount\n+  #146 = Utf8               setInclusiveHostCount\n+  #147 = Utf8               (Z)V\n+  #148 = Utf8               pop\n+  #149 = Utf8               (I)I\n+  #150 = Utf8               getNext\n+  #151 = Utf8               ()Lorg/apache/commons/net/util/SubnetUtils;\n+  #152 = Utf8               getPrevious\n+  #153 = Utf8               access$000\n+  #154 = Utf8               (Lorg/apache/commons/net/util/SubnetUtils;)I\n+  #155 = Utf8               access$100\n+  #156 = Utf8               access$200\n+  #157 = Utf8               access$300\n+  #158 = Utf8               access$400\n+  #159 = Utf8               <clinit>\n+  #160 = Utf8               SourceFile\n+  #161 = Utf8               SubnetUtils.java\n+  #162 = Utf8               InnerClasses\n+  #163 = Utf8               SubnetInfo\n+  #164 = Class              #165          // org/apache/commons/net/util/SubnetUtils$1\n+  #165 = Utf8               org/apache/commons/net/util/SubnetUtils$1\n {\n   private static final java.lang.String IP_ADDRESS = \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\";\n     descriptor: Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: String (\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\n \n   private static final java.lang.String SLASH_FORMAT = \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\";\n@@ -223,73 +223,73 @@\n \n   public org.apache.commons.net.util.SubnetUtils(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=4, args_size=2\n          0: aload_0\n-         1: invokespecial #7                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #20                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iconst_0\n-         6: putfield      #8                  // Field inclusiveHostCount:Z\n-         9: getstatic     #9                  // Field cidrPattern:Ljava/util/regex/Pattern;\n+         6: putfield      #26                 // Field inclusiveHostCount:Z\n+         9: getstatic     #30                 // Field cidrPattern:Ljava/util/regex/Pattern;\n         12: aload_1\n-        13: invokevirtual #10                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+        13: invokevirtual #34                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n         16: astore_2\n         17: aload_2\n-        18: invokevirtual #11                 // Method java/util/regex/Matcher.matches:()Z\n+        18: invokevirtual #40                 // Method java/util/regex/Matcher.matches:()Z\n         21: ifeq          91\n         24: aload_0\n         25: aload_2\n-        26: invokestatic  #12                 // Method matchAddress:(Ljava/util/regex/Matcher;)I\n-        29: putfield      #2                  // Field address:I\n+        26: invokestatic  #46                 // Method matchAddress:(Ljava/util/regex/Matcher;)I\n+        29: putfield      #3                  // Field address:I\n         32: bipush        32\n         34: aload_2\n         35: iconst_5\n-        36: invokevirtual #13                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;\n-        39: invokestatic  #14                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+        36: invokevirtual #50                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;\n+        39: invokestatic  #54                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n         42: iconst_0\n         43: bipush        32\n-        45: invokestatic  #15                 // Method rangeCheck:(III)I\n+        45: invokestatic  #59                 // Method rangeCheck:(III)I\n         48: isub\n         49: istore_3\n         50: aload_0\n-        51: ldc2_w        #16                 // long 4294967295l\n+        51: ldc2_w        #63                 // long 4294967295l\n         54: iload_3\n         55: lshl\n         56: l2i\n-        57: putfield      #3                  // Field netmask:I\n+        57: putfield      #7                  // Field netmask:I\n         60: aload_0\n         61: aload_0\n-        62: getfield      #2                  // Field address:I\n+        62: getfield      #3                  // Field address:I\n         65: aload_0\n-        66: getfield      #3                  // Field netmask:I\n+        66: getfield      #7                  // Field netmask:I\n         69: iand\n-        70: putfield      #6                  // Field network:I\n+        70: putfield      #17                 // Field network:I\n         73: aload_0\n         74: aload_0\n-        75: getfield      #6                  // Field network:I\n+        75: getfield      #17                 // Field network:I\n         78: aload_0\n-        79: getfield      #3                  // Field netmask:I\n+        79: getfield      #7                  // Field netmask:I\n         82: iconst_m1\n         83: ixor\n         84: ior\n-        85: putfield      #5                  // Field broadcast:I\n+        85: putfield      #14                 // Field broadcast:I\n         88: goto          112\n-        91: new           #18                 // class java/lang/IllegalArgumentException\n+        91: new           #65                 // class java/lang/IllegalArgumentException\n         94: dup\n-        95: ldc           #19                 // String Could not parse [%s]\n+        95: ldc           #67                 // String Could not parse [%s]\n         97: iconst_1\n-        98: anewarray     #20                 // class java/lang/Object\n+        98: anewarray     #21                 // class java/lang/Object\n        101: dup\n        102: iconst_0\n        103: aload_1\n        104: aastore\n-       105: invokestatic  #21                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-       108: invokespecial #22                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       105: invokestatic  #69                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+       108: invokespecial #75                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n        111: athrow\n        112: return\n       LineNumberTable:\n         line 52: 0\n         line 43: 4\n         line 53: 9\n         line 55: 17\n@@ -310,67 +310,67 @@\n \n   public org.apache.commons.net.util.SubnetUtils(java.lang.String, java.lang.String);\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #7                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #20                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iconst_0\n-         6: putfield      #8                  // Field inclusiveHostCount:Z\n+         6: putfield      #26                 // Field inclusiveHostCount:Z\n          9: aload_0\n         10: aload_1\n-        11: invokestatic  #4                  // Method toInteger:(Ljava/lang/String;)I\n-        14: putfield      #2                  // Field address:I\n+        11: invokestatic  #10                 // Method toInteger:(Ljava/lang/String;)I\n+        14: putfield      #3                  // Field address:I\n         17: aload_0\n         18: aload_2\n-        19: invokestatic  #4                  // Method toInteger:(Ljava/lang/String;)I\n-        22: putfield      #3                  // Field netmask:I\n+        19: invokestatic  #10                 // Method toInteger:(Ljava/lang/String;)I\n+        22: putfield      #7                  // Field netmask:I\n         25: aload_0\n-        26: getfield      #3                  // Field netmask:I\n+        26: getfield      #7                  // Field netmask:I\n         29: aload_0\n-        30: getfield      #3                  // Field netmask:I\n+        30: getfield      #7                  // Field netmask:I\n         33: ineg\n         34: iand\n         35: iconst_1\n         36: isub\n         37: aload_0\n-        38: getfield      #3                  // Field netmask:I\n+        38: getfield      #7                  // Field netmask:I\n         41: iconst_m1\n         42: ixor\n         43: if_icmpeq     67\n-        46: new           #18                 // class java/lang/IllegalArgumentException\n+        46: new           #65                 // class java/lang/IllegalArgumentException\n         49: dup\n-        50: ldc           #19                 // String Could not parse [%s]\n+        50: ldc           #67                 // String Could not parse [%s]\n         52: iconst_1\n-        53: anewarray     #20                 // class java/lang/Object\n+        53: anewarray     #21                 // class java/lang/Object\n         56: dup\n         57: iconst_0\n         58: aload_2\n         59: aastore\n-        60: invokestatic  #21                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        63: invokespecial #22                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        60: invokestatic  #69                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        63: invokespecial #75                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         66: athrow\n         67: aload_0\n         68: aload_0\n-        69: getfield      #2                  // Field address:I\n+        69: getfield      #3                  // Field address:I\n         72: aload_0\n-        73: getfield      #3                  // Field netmask:I\n+        73: getfield      #7                  // Field netmask:I\n         76: iand\n-        77: putfield      #6                  // Field network:I\n+        77: putfield      #17                 // Field network:I\n         80: aload_0\n         81: aload_0\n-        82: getfield      #6                  // Field network:I\n+        82: getfield      #17                 // Field network:I\n         85: aload_0\n-        86: getfield      #3                  // Field netmask:I\n+        86: getfield      #7                  // Field netmask:I\n         89: iconst_m1\n         90: ixor\n         91: ior\n-        92: putfield      #5                  // Field broadcast:I\n+        92: putfield      #14                 // Field broadcast:I\n         95: return\n       LineNumberTable:\n         line 88: 0\n         line 43: 4\n         line 89: 9\n         line 90: 17\n         line 92: 25\n@@ -386,72 +386,72 @@\n \n   public boolean isInclusiveHostCount();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field inclusiveHostCount:Z\n+         1: getfield      #26                 // Field inclusiveHostCount:Z\n          4: ireturn\n       LineNumberTable:\n         line 111: 0\n \n   public void setInclusiveHostCount(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #8                  // Field inclusiveHostCount:Z\n+         2: putfield      #26                 // Field inclusiveHostCount:Z\n          5: return\n       LineNumberTable:\n         line 122: 0\n         line 123: 5\n \n   public final org.apache.commons.net.util.SubnetUtils$SubnetInfo getInfo();\n     descriptor: ()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=4, locals=1, args_size=1\n-         0: new           #23                 // class org/apache/commons/net/util/SubnetUtils$SubnetInfo\n+         0: new           #78                 // class org/apache/commons/net/util/SubnetUtils$SubnetInfo\n          3: dup\n          4: aload_0\n          5: aconst_null\n-         6: invokespecial #24                 // Method org/apache/commons/net/util/SubnetUtils$SubnetInfo.\"<init>\":(Lorg/apache/commons/net/util/SubnetUtils;Lorg/apache/commons/net/util/SubnetUtils$1;)V\n+         6: invokespecial #80                 // Method org/apache/commons/net/util/SubnetUtils$SubnetInfo.\"<init>\":(Lorg/apache/commons/net/util/SubnetUtils;Lorg/apache/commons/net/util/SubnetUtils$1;)V\n          9: areturn\n       LineNumberTable:\n         line 323: 0\n \n   private static int toInteger(java.lang.String);\n     descriptor: (Ljava/lang/String;)I\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=7, locals=2, args_size=1\n-         0: getstatic     #25                 // Field addressPattern:Ljava/util/regex/Pattern;\n+         0: getstatic     #83                 // Field addressPattern:Ljava/util/regex/Pattern;\n          3: aload_0\n-         4: invokevirtual #10                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+         4: invokevirtual #34                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n          7: astore_1\n          8: aload_1\n-         9: invokevirtual #11                 // Method java/util/regex/Matcher.matches:()Z\n+         9: invokevirtual #40                 // Method java/util/regex/Matcher.matches:()Z\n         12: ifeq          20\n         15: aload_1\n-        16: invokestatic  #12                 // Method matchAddress:(Ljava/util/regex/Matcher;)I\n+        16: invokestatic  #46                 // Method matchAddress:(Ljava/util/regex/Matcher;)I\n         19: ireturn\n-        20: new           #18                 // class java/lang/IllegalArgumentException\n+        20: new           #65                 // class java/lang/IllegalArgumentException\n         23: dup\n-        24: ldc           #19                 // String Could not parse [%s]\n+        24: ldc           #67                 // String Could not parse [%s]\n         26: iconst_1\n-        27: anewarray     #20                 // class java/lang/Object\n+        27: anewarray     #21                 // class java/lang/Object\n         30: dup\n         31: iconst_0\n         32: aload_0\n         33: aastore\n-        34: invokestatic  #21                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        37: invokespecial #22                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        34: invokestatic  #69                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        37: invokespecial #75                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         40: athrow\n       LineNumberTable:\n         line 329: 0\n         line 330: 8\n         line 331: 15\n         line 333: 20\n       StackMapTable: number_of_entries = 1\n@@ -469,19 +469,19 @@\n          2: iconst_1\n          3: istore_2\n          4: iload_2\n          5: iconst_4\n          6: if_icmpgt     46\n          9: aload_0\n         10: iload_2\n-        11: invokevirtual #13                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;\n-        14: invokestatic  #14                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+        11: invokevirtual #50                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;\n+        14: invokestatic  #54                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n         17: iconst_0\n         18: sipush        255\n-        21: invokestatic  #15                 // Method rangeCheck:(III)I\n+        21: invokestatic  #59                 // Method rangeCheck:(III)I\n         24: istore_3\n         25: iload_1\n         26: iload_3\n         27: sipush        255\n         30: iand\n         31: bipush        8\n         33: iconst_4\n@@ -518,35 +518,35 @@\n          1: iload_1\n          2: if_icmplt     12\n          5: iload_0\n          6: iload_2\n          7: if_icmpgt     12\n         10: iload_0\n         11: ireturn\n-        12: new           #18                 // class java/lang/IllegalArgumentException\n+        12: new           #65                 // class java/lang/IllegalArgumentException\n         15: dup\n-        16: new           #26                 // class java/lang/StringBuilder\n+        16: new           #86                 // class java/lang/StringBuilder\n         19: dup\n-        20: invokespecial #27                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        23: ldc           #28                 // String Value [\n-        25: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        20: invokespecial #88                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        23: ldc           #89                 // String Value [\n+        25: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         28: iload_0\n-        29: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        32: ldc           #31                 // String ] not in range [\n-        34: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        29: invokevirtual #95                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        32: ldc           #98                 // String ] not in range [\n+        34: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         37: iload_1\n-        38: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        41: ldc           #32                 // String ,\n-        43: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        38: invokevirtual #95                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        41: ldc           #100                // String ,\n+        43: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         46: iload_2\n-        47: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        50: ldc           #33                 // String ]\n-        52: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        55: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        58: invokespecial #22                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        47: invokevirtual #95                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        50: ldc           #102                // String ]\n+        52: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        55: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        58: invokespecial #75                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         61: athrow\n       LineNumberTable:\n         line 355: 0\n         line 356: 10\n         line 359: 12\n       StackMapTable: number_of_entries = 1\n         frame_type = 12 /* same */\n@@ -556,34 +556,34 @@\n     flags: (0x0000)\n     Code:\n       stack=3, locals=2, args_size=2\n          0: iload_1\n          1: iload_1\n          2: iconst_1\n          3: iushr\n-         4: ldc           #35                 // int 1431655765\n+         4: ldc           #108                // int 1431655765\n          6: iand\n          7: isub\n          8: istore_1\n          9: iload_1\n-        10: ldc           #36                 // int 858993459\n+        10: ldc           #109                // int 858993459\n         12: iand\n         13: iload_1\n         14: iconst_2\n         15: iushr\n-        16: ldc           #36                 // int 858993459\n+        16: ldc           #109                // int 858993459\n         18: iand\n         19: iadd\n         20: istore_1\n         21: iload_1\n         22: iload_1\n         23: iconst_4\n         24: iushr\n         25: iadd\n-        26: ldc           #37                 // int 252645135\n+        26: ldc           #110                // int 252645135\n         28: iand\n         29: istore_1\n         30: iload_1\n         31: iload_1\n         32: bipush        8\n         34: iushr\n         35: iadd\n@@ -610,110 +610,110 @@\n     descriptor: ()Lorg/apache/commons/net/util/SubnetUtils;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: new           #1                  // class org/apache/commons/net/util/SubnetUtils\n          3: dup\n          4: aload_0\n-         5: invokevirtual #38                 // Method getInfo:()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n-         8: invokevirtual #39                 // Method org/apache/commons/net/util/SubnetUtils$SubnetInfo.getNextAddress:()Ljava/lang/String;\n+         5: invokevirtual #111                // Method getInfo:()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n+         8: invokevirtual #115                // Method org/apache/commons/net/util/SubnetUtils$SubnetInfo.getNextAddress:()Ljava/lang/String;\n         11: aload_0\n-        12: invokevirtual #38                 // Method getInfo:()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n-        15: invokevirtual #40                 // Method org/apache/commons/net/util/SubnetUtils$SubnetInfo.getNetmask:()Ljava/lang/String;\n-        18: invokespecial #41                 // Method \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+        12: invokevirtual #111                // Method getInfo:()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n+        15: invokevirtual #118                // Method org/apache/commons/net/util/SubnetUtils$SubnetInfo.getNetmask:()Ljava/lang/String;\n+        18: invokespecial #121                // Method \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n         21: areturn\n       LineNumberTable:\n         line 376: 0\n \n   public org.apache.commons.net.util.SubnetUtils getPrevious();\n     descriptor: ()Lorg/apache/commons/net/util/SubnetUtils;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: new           #1                  // class org/apache/commons/net/util/SubnetUtils\n          3: dup\n          4: aload_0\n-         5: invokevirtual #38                 // Method getInfo:()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n-         8: invokevirtual #42                 // Method org/apache/commons/net/util/SubnetUtils$SubnetInfo.getPreviousAddress:()Ljava/lang/String;\n+         5: invokevirtual #111                // Method getInfo:()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n+         8: invokevirtual #124                // Method org/apache/commons/net/util/SubnetUtils$SubnetInfo.getPreviousAddress:()Ljava/lang/String;\n         11: aload_0\n-        12: invokevirtual #38                 // Method getInfo:()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n-        15: invokevirtual #40                 // Method org/apache/commons/net/util/SubnetUtils$SubnetInfo.getNetmask:()Ljava/lang/String;\n-        18: invokespecial #41                 // Method \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+        12: invokevirtual #111                // Method getInfo:()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n+        15: invokevirtual #118                // Method org/apache/commons/net/util/SubnetUtils$SubnetInfo.getNetmask:()Ljava/lang/String;\n+        18: invokespecial #121                // Method \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n         21: areturn\n       LineNumberTable:\n         line 380: 0\n \n   static int access$000(org.apache.commons.net.util.SubnetUtils);\n     descriptor: (Lorg/apache/commons/net/util/SubnetUtils;)I\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field network:I\n+         1: getfield      #17                 // Field network:I\n          4: ireturn\n       LineNumberTable:\n         line 27: 0\n \n   static int access$100(org.apache.commons.net.util.SubnetUtils);\n     descriptor: (Lorg/apache/commons/net/util/SubnetUtils;)I\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field broadcast:I\n+         1: getfield      #14                 // Field broadcast:I\n          4: ireturn\n       LineNumberTable:\n         line 27: 0\n \n   static int access$200(java.lang.String);\n     descriptor: (Ljava/lang/String;)I\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #4                  // Method toInteger:(Ljava/lang/String;)I\n+         1: invokestatic  #10                 // Method toInteger:(Ljava/lang/String;)I\n          4: ireturn\n       LineNumberTable:\n         line 27: 0\n \n   static int access$300(org.apache.commons.net.util.SubnetUtils);\n     descriptor: (Lorg/apache/commons/net/util/SubnetUtils;)I\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field netmask:I\n+         1: getfield      #7                  // Field netmask:I\n          4: ireturn\n       LineNumberTable:\n         line 27: 0\n \n   static int access$400(org.apache.commons.net.util.SubnetUtils);\n     descriptor: (Lorg/apache/commons/net/util/SubnetUtils;)I\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field address:I\n+         1: getfield      #3                  // Field address:I\n          4: ireturn\n       LineNumberTable:\n         line 27: 0\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: ldc           #43                 // String (\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\n-         2: invokestatic  #44                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-         5: putstatic     #25                 // Field addressPattern:Ljava/util/regex/Pattern;\n-         8: ldc           #45                 // String (\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\n-        10: invokestatic  #44                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-        13: putstatic     #9                  // Field cidrPattern:Ljava/util/regex/Pattern;\n+         0: ldc           #127                // String (\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\n+         2: invokestatic  #129                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+         5: putstatic     #83                 // Field addressPattern:Ljava/util/regex/Pattern;\n+         8: ldc           #133                // String (\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\n+        10: invokestatic  #129                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+        13: putstatic     #30                 // Field cidrPattern:Ljava/util/regex/Pattern;\n         16: return\n       LineNumberTable:\n         line 31: 0\n         line 32: 8\n }\n SourceFile: \"SubnetUtils.java\"\n InnerClasses:\n-  static #46;                             // class org/apache/commons/net/util/SubnetUtils$1\n-  public final #48= #23 of #1;            // SubnetInfo=class org/apache/commons/net/util/SubnetUtils$SubnetInfo of class org/apache/commons/net/util/SubnetUtils\n+  public final #163= #78 of #1;           // SubnetInfo=class org/apache/commons/net/util/SubnetUtils$SubnetInfo of class org/apache/commons/net/util/SubnetUtils\n+  static #164;                            // class org/apache/commons/net/util/SubnetUtils$1\n"}]}
