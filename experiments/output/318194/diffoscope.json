{"diffoscope-json-version": 1, "source1": "first/MutableLong.class", "source2": "second/MutableLong.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,110 +1,110 @@\n-  SHA-256 checksum 6eeae33404677d0458001840eb01bace513be22b2965266fd7682bed2ad79c33\n+  SHA-256 checksum 44403523594212406c48d1bb3bf55dabf4c86e123c2da4d664760cd540fac89f\n   Compiled from \"MutableLong.java\"\n public class org.apache.commons.lang3.mutable.MutableLong extends java.lang.Number implements java.lang.Comparable<org.apache.commons.lang3.mutable.MutableLong>, org.apache.commons.lang3.mutable.Mutable<java.lang.Number>\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #7                          // org/apache/commons/lang3/mutable/MutableLong\n-  super_class: #11                        // java/lang/Number\n+  this_class: #8                          // org/apache/commons/lang3/mutable/MutableLong\n+  super_class: #2                         // java/lang/Number\n   interfaces: 2, fields: 2, methods: 33, attributes: 2\n Constant pool:\n-   #1 = Methodref          #11.#68        // java/lang/Number.\"<init>\":()V\n-   #2 = Fieldref           #7.#69         // org/apache/commons/lang3/mutable/MutableLong.value:J\n-   #3 = Methodref          #11.#70        // java/lang/Number.longValue:()J\n-   #4 = Methodref          #71.#72        // java/lang/Long.parseLong:(Ljava/lang/String;)J\n-   #5 = Methodref          #71.#73        // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n-   #6 = Methodref          #7.#70         // org/apache/commons/lang3/mutable/MutableLong.longValue:()J\n-   #7 = Class              #74            // org/apache/commons/lang3/mutable/MutableLong\n-   #8 = Methodref          #75.#76        // org/apache/commons/lang3/math/NumberUtils.compare:(JJ)I\n-   #9 = Methodref          #77.#78        // java/lang/String.valueOf:(J)Ljava/lang/String;\n-  #10 = Methodref          #7.#79         // org/apache/commons/lang3/mutable/MutableLong.compareTo:(Lorg/apache/commons/lang3/mutable/MutableLong;)I\n-  #11 = Class              #80            // java/lang/Number\n-  #12 = Methodref          #7.#81         // org/apache/commons/lang3/mutable/MutableLong.setValue:(Ljava/lang/Number;)V\n-  #13 = Methodref          #7.#82         // org/apache/commons/lang3/mutable/MutableLong.getValue:()Ljava/lang/Long;\n-  #14 = Class              #83            // java/lang/Comparable\n-  #15 = Class              #84            // org/apache/commons/lang3/mutable/Mutable\n-  #16 = Utf8               serialVersionUID\n-  #17 = Utf8               J\n-  #18 = Utf8               ConstantValue\n-  #19 = Long               62986528375l\n-  #21 = Utf8               value\n-  #22 = Utf8               <init>\n-  #23 = Utf8               ()V\n-  #24 = Utf8               Code\n-  #25 = Utf8               LineNumberTable\n-  #26 = Utf8               (J)V\n-  #27 = Utf8               (Ljava/lang/Number;)V\n-  #28 = Utf8               (Ljava/lang/String;)V\n-  #29 = Utf8               getValue\n-  #30 = Utf8               ()Ljava/lang/Long;\n-  #31 = Utf8               setValue\n-  #32 = Utf8               increment\n-  #33 = Utf8               getAndIncrement\n-  #34 = Utf8               ()J\n-  #35 = Utf8               incrementAndGet\n-  #36 = Utf8               decrement\n-  #37 = Utf8               getAndDecrement\n-  #38 = Utf8               decrementAndGet\n-  #39 = Utf8               add\n-  #40 = Utf8               subtract\n-  #41 = Utf8               addAndGet\n-  #42 = Utf8               (J)J\n-  #43 = Utf8               (Ljava/lang/Number;)J\n-  #44 = Utf8               getAndAdd\n-  #45 = Utf8               intValue\n-  #46 = Utf8               ()I\n-  #47 = Utf8               longValue\n-  #48 = Utf8               floatValue\n-  #49 = Utf8               ()F\n-  #50 = Utf8               doubleValue\n-  #51 = Utf8               ()D\n-  #52 = Utf8               toLong\n-  #53 = Utf8               equals\n-  #54 = Utf8               (Ljava/lang/Object;)Z\n-  #55 = Utf8               StackMapTable\n-  #56 = Utf8               hashCode\n-  #57 = Utf8               compareTo\n-  #58 = Utf8               (Lorg/apache/commons/lang3/mutable/MutableLong;)I\n-  #59 = Utf8               toString\n-  #60 = Utf8               ()Ljava/lang/String;\n-  #61 = Utf8               (Ljava/lang/Object;)I\n-  #62 = Utf8               (Ljava/lang/Object;)V\n-  #63 = Utf8               ()Ljava/lang/Object;\n-  #64 = Utf8               Signature\n-  #65 = Utf8               Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/mutable/MutableLong;>;Lorg/apache/commons/lang3/mutable/Mutable<Ljava/lang/Number;>;\n-  #66 = Utf8               SourceFile\n-  #67 = Utf8               MutableLong.java\n-  #68 = NameAndType        #22:#23        // \"<init>\":()V\n-  #69 = NameAndType        #21:#17        // value:J\n-  #70 = NameAndType        #47:#34        // longValue:()J\n-  #71 = Class              #85            // java/lang/Long\n-  #72 = NameAndType        #86:#87        // parseLong:(Ljava/lang/String;)J\n-  #73 = NameAndType        #88:#89        // valueOf:(J)Ljava/lang/Long;\n-  #74 = Utf8               org/apache/commons/lang3/mutable/MutableLong\n-  #75 = Class              #90            // org/apache/commons/lang3/math/NumberUtils\n-  #76 = NameAndType        #91:#92        // compare:(JJ)I\n-  #77 = Class              #93            // java/lang/String\n-  #78 = NameAndType        #88:#94        // valueOf:(J)Ljava/lang/String;\n-  #79 = NameAndType        #57:#58        // compareTo:(Lorg/apache/commons/lang3/mutable/MutableLong;)I\n-  #80 = Utf8               java/lang/Number\n-  #81 = NameAndType        #31:#27        // setValue:(Ljava/lang/Number;)V\n-  #82 = NameAndType        #29:#30        // getValue:()Ljava/lang/Long;\n-  #83 = Utf8               java/lang/Comparable\n-  #84 = Utf8               org/apache/commons/lang3/mutable/Mutable\n-  #85 = Utf8               java/lang/Long\n-  #86 = Utf8               parseLong\n-  #87 = Utf8               (Ljava/lang/String;)J\n-  #88 = Utf8               valueOf\n-  #89 = Utf8               (J)Ljava/lang/Long;\n-  #90 = Utf8               org/apache/commons/lang3/math/NumberUtils\n-  #91 = Utf8               compare\n-  #92 = Utf8               (JJ)I\n-  #93 = Utf8               java/lang/String\n-  #94 = Utf8               (J)Ljava/lang/String;\n+   #1 = Methodref          #2.#3          // java/lang/Number.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Number\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Number\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Fieldref           #8.#9          // org/apache/commons/lang3/mutable/MutableLong.value:J\n+   #8 = Class              #10            // org/apache/commons/lang3/mutable/MutableLong\n+   #9 = NameAndType        #11:#12        // value:J\n+  #10 = Utf8               org/apache/commons/lang3/mutable/MutableLong\n+  #11 = Utf8               value\n+  #12 = Utf8               J\n+  #13 = Methodref          #2.#14         // java/lang/Number.longValue:()J\n+  #14 = NameAndType        #15:#16        // longValue:()J\n+  #15 = Utf8               longValue\n+  #16 = Utf8               ()J\n+  #17 = Methodref          #18.#19        // java/lang/Long.parseLong:(Ljava/lang/String;)J\n+  #18 = Class              #20            // java/lang/Long\n+  #19 = NameAndType        #21:#22        // parseLong:(Ljava/lang/String;)J\n+  #20 = Utf8               java/lang/Long\n+  #21 = Utf8               parseLong\n+  #22 = Utf8               (Ljava/lang/String;)J\n+  #23 = Methodref          #18.#24        // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+  #24 = NameAndType        #25:#26        // valueOf:(J)Ljava/lang/Long;\n+  #25 = Utf8               valueOf\n+  #26 = Utf8               (J)Ljava/lang/Long;\n+  #27 = Methodref          #8.#14         // org/apache/commons/lang3/mutable/MutableLong.longValue:()J\n+  #28 = Methodref          #29.#30        // org/apache/commons/lang3/math/NumberUtils.compare:(JJ)I\n+  #29 = Class              #31            // org/apache/commons/lang3/math/NumberUtils\n+  #30 = NameAndType        #32:#33        // compare:(JJ)I\n+  #31 = Utf8               org/apache/commons/lang3/math/NumberUtils\n+  #32 = Utf8               compare\n+  #33 = Utf8               (JJ)I\n+  #34 = Methodref          #35.#36        // java/lang/String.valueOf:(J)Ljava/lang/String;\n+  #35 = Class              #37            // java/lang/String\n+  #36 = NameAndType        #25:#38        // valueOf:(J)Ljava/lang/String;\n+  #37 = Utf8               java/lang/String\n+  #38 = Utf8               (J)Ljava/lang/String;\n+  #39 = Methodref          #8.#40         // org/apache/commons/lang3/mutable/MutableLong.compareTo:(Lorg/apache/commons/lang3/mutable/MutableLong;)I\n+  #40 = NameAndType        #41:#42        // compareTo:(Lorg/apache/commons/lang3/mutable/MutableLong;)I\n+  #41 = Utf8               compareTo\n+  #42 = Utf8               (Lorg/apache/commons/lang3/mutable/MutableLong;)I\n+  #43 = Methodref          #8.#44         // org/apache/commons/lang3/mutable/MutableLong.setValue:(Ljava/lang/Number;)V\n+  #44 = NameAndType        #45:#46        // setValue:(Ljava/lang/Number;)V\n+  #45 = Utf8               setValue\n+  #46 = Utf8               (Ljava/lang/Number;)V\n+  #47 = Methodref          #8.#48         // org/apache/commons/lang3/mutable/MutableLong.getValue:()Ljava/lang/Long;\n+  #48 = NameAndType        #49:#50        // getValue:()Ljava/lang/Long;\n+  #49 = Utf8               getValue\n+  #50 = Utf8               ()Ljava/lang/Long;\n+  #51 = Class              #52            // java/lang/Comparable\n+  #52 = Utf8               java/lang/Comparable\n+  #53 = Class              #54            // org/apache/commons/lang3/mutable/Mutable\n+  #54 = Utf8               org/apache/commons/lang3/mutable/Mutable\n+  #55 = Utf8               serialVersionUID\n+  #56 = Utf8               ConstantValue\n+  #57 = Long               62986528375l\n+  #59 = Utf8               Code\n+  #60 = Utf8               LineNumberTable\n+  #61 = Utf8               (J)V\n+  #62 = Utf8               (Ljava/lang/String;)V\n+  #63 = Utf8               increment\n+  #64 = Utf8               getAndIncrement\n+  #65 = Utf8               incrementAndGet\n+  #66 = Utf8               decrement\n+  #67 = Utf8               getAndDecrement\n+  #68 = Utf8               decrementAndGet\n+  #69 = Utf8               add\n+  #70 = Utf8               subtract\n+  #71 = Utf8               addAndGet\n+  #72 = Utf8               (J)J\n+  #73 = Utf8               (Ljava/lang/Number;)J\n+  #74 = Utf8               getAndAdd\n+  #75 = Utf8               intValue\n+  #76 = Utf8               ()I\n+  #77 = Utf8               floatValue\n+  #78 = Utf8               ()F\n+  #79 = Utf8               doubleValue\n+  #80 = Utf8               ()D\n+  #81 = Utf8               toLong\n+  #82 = Utf8               equals\n+  #83 = Utf8               (Ljava/lang/Object;)Z\n+  #84 = Utf8               StackMapTable\n+  #85 = Utf8               hashCode\n+  #86 = Utf8               toString\n+  #87 = Utf8               ()Ljava/lang/String;\n+  #88 = Utf8               (Ljava/lang/Object;)I\n+  #89 = Utf8               (Ljava/lang/Object;)V\n+  #90 = Utf8               ()Ljava/lang/Object;\n+  #91 = Utf8               Signature\n+  #92 = Utf8               Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/mutable/MutableLong;>;Lorg/apache/commons/lang3/mutable/Mutable<Ljava/lang/Number;>;\n+  #93 = Utf8               SourceFile\n+  #94 = Utf8               MutableLong.java\n {\n   private static final long serialVersionUID = 62986528375l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 62986528375l\n \n   private long value;\n@@ -128,15 +128,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Number.\"<init>\":()V\n          4: aload_0\n          5: lload_1\n-         6: putfield      #2                  // Field value:J\n+         6: putfield      #7                  // Field value:J\n          9: return\n       LineNumberTable:\n         line 54: 0\n         line 55: 4\n         line 56: 9\n \n   public org.apache.commons.lang3.mutable.MutableLong(java.lang.Number);\n@@ -144,16 +144,16 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Number.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: invokevirtual #3                  // Method java/lang/Number.longValue:()J\n-         9: putfield      #2                  // Field value:J\n+         6: invokevirtual #13                 // Method java/lang/Number.longValue:()J\n+         9: putfield      #7                  // Field value:J\n         12: return\n       LineNumberTable:\n         line 65: 0\n         line 66: 4\n         line 67: 12\n \n   public org.apache.commons.lang3.mutable.MutableLong(java.lang.String);\n@@ -161,389 +161,389 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Number.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: invokestatic  #4                  // Method java/lang/Long.parseLong:(Ljava/lang/String;)J\n-         9: putfield      #2                  // Field value:J\n+         6: invokestatic  #17                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J\n+         9: putfield      #7                  // Field value:J\n         12: return\n       LineNumberTable:\n         line 77: 0\n         line 78: 4\n         line 79: 12\n \n   public java.lang.Long getValue();\n     descriptor: ()Ljava/lang/Long;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:J\n-         4: invokestatic  #5                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+         1: getfield      #7                  // Field value:J\n+         4: invokestatic  #23                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n          7: areturn\n       LineNumberTable:\n         line 89: 0\n \n   public void setValue(long);\n     descriptor: (J)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n-         2: putfield      #2                  // Field value:J\n+         2: putfield      #7                  // Field value:J\n          5: return\n       LineNumberTable:\n         line 98: 0\n         line 99: 5\n \n   public void setValue(java.lang.Number);\n     descriptor: (Ljava/lang/Number;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #3                  // Method java/lang/Number.longValue:()J\n-         5: putfield      #2                  // Field value:J\n+         2: invokevirtual #13                 // Method java/lang/Number.longValue:()J\n+         5: putfield      #7                  // Field value:J\n          8: return\n       LineNumberTable:\n         line 109: 0\n         line 110: 8\n \n   public void increment();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:J\n+         2: getfield      #7                  // Field value:J\n          5: lconst_1\n          6: ladd\n-         7: putfield      #2                  // Field value:J\n+         7: putfield      #7                  // Field value:J\n         10: return\n       LineNumberTable:\n         line 119: 0\n         line 120: 10\n \n   public long getAndIncrement();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:J\n+         1: getfield      #7                  // Field value:J\n          4: lstore_1\n          5: aload_0\n          6: dup\n-         7: getfield      #2                  // Field value:J\n+         7: getfield      #7                  // Field value:J\n         10: lconst_1\n         11: ladd\n-        12: putfield      #2                  // Field value:J\n+        12: putfield      #7                  // Field value:J\n         15: lload_1\n         16: lreturn\n       LineNumberTable:\n         line 130: 0\n         line 131: 5\n         line 132: 15\n \n   public long incrementAndGet();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:J\n+         2: getfield      #7                  // Field value:J\n          5: lconst_1\n          6: ladd\n-         7: putfield      #2                  // Field value:J\n+         7: putfield      #7                  // Field value:J\n         10: aload_0\n-        11: getfield      #2                  // Field value:J\n+        11: getfield      #7                  // Field value:J\n         14: lreturn\n       LineNumberTable:\n         line 143: 0\n         line 144: 10\n \n   public void decrement();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:J\n+         2: getfield      #7                  // Field value:J\n          5: lconst_1\n          6: lsub\n-         7: putfield      #2                  // Field value:J\n+         7: putfield      #7                  // Field value:J\n         10: return\n       LineNumberTable:\n         line 153: 0\n         line 154: 10\n \n   public long getAndDecrement();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:J\n+         1: getfield      #7                  // Field value:J\n          4: lstore_1\n          5: aload_0\n          6: dup\n-         7: getfield      #2                  // Field value:J\n+         7: getfield      #7                  // Field value:J\n         10: lconst_1\n         11: lsub\n-        12: putfield      #2                  // Field value:J\n+        12: putfield      #7                  // Field value:J\n         15: lload_1\n         16: lreturn\n       LineNumberTable:\n         line 164: 0\n         line 165: 5\n         line 166: 15\n \n   public long decrementAndGet();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:J\n+         2: getfield      #7                  // Field value:J\n          5: lconst_1\n          6: lsub\n-         7: putfield      #2                  // Field value:J\n+         7: putfield      #7                  // Field value:J\n         10: aload_0\n-        11: getfield      #2                  // Field value:J\n+        11: getfield      #7                  // Field value:J\n         14: lreturn\n       LineNumberTable:\n         line 177: 0\n         line 178: 10\n \n   public void add(long);\n     descriptor: (J)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:J\n+         2: getfield      #7                  // Field value:J\n          5: lload_1\n          6: ladd\n-         7: putfield      #2                  // Field value:J\n+         7: putfield      #7                  // Field value:J\n         10: return\n       LineNumberTable:\n         line 189: 0\n         line 190: 10\n \n   public void add(java.lang.Number);\n     descriptor: (Ljava/lang/Number;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:J\n+         2: getfield      #7                  // Field value:J\n          5: aload_1\n-         6: invokevirtual #3                  // Method java/lang/Number.longValue:()J\n+         6: invokevirtual #13                 // Method java/lang/Number.longValue:()J\n          9: ladd\n-        10: putfield      #2                  // Field value:J\n+        10: putfield      #7                  // Field value:J\n         13: return\n       LineNumberTable:\n         line 200: 0\n         line 201: 13\n \n   public void subtract(long);\n     descriptor: (J)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:J\n+         2: getfield      #7                  // Field value:J\n          5: lload_1\n          6: lsub\n-         7: putfield      #2                  // Field value:J\n+         7: putfield      #7                  // Field value:J\n         10: return\n       LineNumberTable:\n         line 210: 0\n         line 211: 10\n \n   public void subtract(java.lang.Number);\n     descriptor: (Ljava/lang/Number;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:J\n+         2: getfield      #7                  // Field value:J\n          5: aload_1\n-         6: invokevirtual #3                  // Method java/lang/Number.longValue:()J\n+         6: invokevirtual #13                 // Method java/lang/Number.longValue:()J\n          9: lsub\n-        10: putfield      #2                  // Field value:J\n+        10: putfield      #7                  // Field value:J\n         13: return\n       LineNumberTable:\n         line 221: 0\n         line 222: 13\n \n   public long addAndGet(long);\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:J\n+         2: getfield      #7                  // Field value:J\n          5: lload_1\n          6: ladd\n-         7: putfield      #2                  // Field value:J\n+         7: putfield      #7                  // Field value:J\n         10: aload_0\n-        11: getfield      #2                  // Field value:J\n+        11: getfield      #7                  // Field value:J\n         14: lreturn\n       LineNumberTable:\n         line 233: 0\n         line 234: 10\n \n   public long addAndGet(java.lang.Number);\n     descriptor: (Ljava/lang/Number;)J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:J\n+         2: getfield      #7                  // Field value:J\n          5: aload_1\n-         6: invokevirtual #3                  // Method java/lang/Number.longValue:()J\n+         6: invokevirtual #13                 // Method java/lang/Number.longValue:()J\n          9: ladd\n-        10: putfield      #2                  // Field value:J\n+        10: putfield      #7                  // Field value:J\n         13: aload_0\n-        14: getfield      #2                  // Field value:J\n+        14: getfield      #7                  // Field value:J\n         17: lreturn\n       LineNumberTable:\n         line 247: 0\n         line 248: 13\n \n   public long getAndAdd(long);\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=5, args_size=2\n          0: aload_0\n-         1: getfield      #2                  // Field value:J\n+         1: getfield      #7                  // Field value:J\n          4: lstore_3\n          5: aload_0\n          6: dup\n-         7: getfield      #2                  // Field value:J\n+         7: getfield      #7                  // Field value:J\n         10: lload_1\n         11: ladd\n-        12: putfield      #2                  // Field value:J\n+        12: putfield      #7                  // Field value:J\n         15: lload_3\n         16: lreturn\n       LineNumberTable:\n         line 260: 0\n         line 261: 5\n         line 262: 15\n \n   public long getAndAdd(java.lang.Number);\n     descriptor: (Ljava/lang/Number;)J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=4, args_size=2\n          0: aload_0\n-         1: getfield      #2                  // Field value:J\n+         1: getfield      #7                  // Field value:J\n          4: lstore_2\n          5: aload_0\n          6: dup\n-         7: getfield      #2                  // Field value:J\n+         7: getfield      #7                  // Field value:J\n         10: aload_1\n-        11: invokevirtual #3                  // Method java/lang/Number.longValue:()J\n+        11: invokevirtual #13                 // Method java/lang/Number.longValue:()J\n         14: ladd\n-        15: putfield      #2                  // Field value:J\n+        15: putfield      #7                  // Field value:J\n         18: lload_2\n         19: lreturn\n       LineNumberTable:\n         line 275: 0\n         line 276: 5\n         line 277: 18\n \n   public int intValue();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:J\n+         1: getfield      #7                  // Field value:J\n          4: l2i\n          5: ireturn\n       LineNumberTable:\n         line 289: 0\n \n   public long longValue();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:J\n+         1: getfield      #7                  // Field value:J\n          4: lreturn\n       LineNumberTable:\n         line 299: 0\n \n   public float floatValue();\n     descriptor: ()F\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:J\n+         1: getfield      #7                  // Field value:J\n          4: l2f\n          5: freturn\n       LineNumberTable:\n         line 309: 0\n \n   public double doubleValue();\n     descriptor: ()D\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:J\n+         1: getfield      #7                  // Field value:J\n          4: l2d\n          5: dreturn\n       LineNumberTable:\n         line 319: 0\n \n   public java.lang.Long toLong();\n     descriptor: ()Ljava/lang/Long;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #6                  // Method longValue:()J\n-         4: invokestatic  #5                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+         1: invokevirtual #27                 // Method longValue:()J\n+         4: invokestatic  #23                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n          7: areturn\n       LineNumberTable:\n         line 329: 0\n \n   public boolean equals(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_1\n-         1: instanceof    #7                  // class org/apache/commons/lang3/mutable/MutableLong\n+         1: instanceof    #8                  // class org/apache/commons/lang3/mutable/MutableLong\n          4: ifeq          28\n          7: aload_0\n-         8: getfield      #2                  // Field value:J\n+         8: getfield      #7                  // Field value:J\n         11: aload_1\n-        12: checkcast     #7                  // class org/apache/commons/lang3/mutable/MutableLong\n-        15: invokevirtual #6                  // Method longValue:()J\n+        12: checkcast     #8                  // class org/apache/commons/lang3/mutable/MutableLong\n+        15: invokevirtual #27                 // Method longValue:()J\n         18: lcmp\n         19: ifne          26\n         22: iconst_1\n         23: goto          27\n         26: iconst_0\n         27: ireturn\n         28: iconst_0\n@@ -560,83 +560,83 @@\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:J\n+         1: getfield      #7                  // Field value:J\n          4: aload_0\n-         5: getfield      #2                  // Field value:J\n+         5: getfield      #7                  // Field value:J\n          8: bipush        32\n         10: lushr\n         11: lxor\n         12: l2i\n         13: ireturn\n       LineNumberTable:\n         line 356: 0\n \n   public int compareTo(org.apache.commons.lang3.mutable.MutableLong);\n     descriptor: (Lorg/apache/commons/lang3/mutable/MutableLong;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #2                  // Field value:J\n+         1: getfield      #7                  // Field value:J\n          4: aload_1\n-         5: getfield      #2                  // Field value:J\n-         8: invokestatic  #8                  // Method org/apache/commons/lang3/math/NumberUtils.compare:(JJ)I\n+         5: getfield      #7                  // Field value:J\n+         8: invokestatic  #28                 // Method org/apache/commons/lang3/math/NumberUtils.compare:(JJ)I\n         11: ireturn\n       LineNumberTable:\n         line 368: 0\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:J\n-         4: invokestatic  #9                  // Method java/lang/String.valueOf:(J)Ljava/lang/String;\n+         1: getfield      #7                  // Field value:J\n+         4: invokestatic  #34                 // Method java/lang/String.valueOf:(J)Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 379: 0\n \n   public int compareTo(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)I\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #7                  // class org/apache/commons/lang3/mutable/MutableLong\n-         5: invokevirtual #10                 // Method compareTo:(Lorg/apache/commons/lang3/mutable/MutableLong;)I\n+         2: checkcast     #8                  // class org/apache/commons/lang3/mutable/MutableLong\n+         5: invokevirtual #39                 // Method compareTo:(Lorg/apache/commons/lang3/mutable/MutableLong;)I\n          8: ireturn\n       LineNumberTable:\n         line 29: 0\n \n   public void setValue(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)V\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #11                 // class java/lang/Number\n-         5: invokevirtual #12                 // Method setValue:(Ljava/lang/Number;)V\n+         2: checkcast     #2                  // class java/lang/Number\n+         5: invokevirtual #43                 // Method setValue:(Ljava/lang/Number;)V\n          8: return\n       LineNumberTable:\n         line 29: 0\n \n   public java.lang.Object getValue();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #13                 // Method getValue:()Ljava/lang/Long;\n+         1: invokevirtual #47                 // Method getValue:()Ljava/lang/Long;\n          4: areturn\n       LineNumberTable:\n         line 29: 0\n }\n-Signature: #65                          // Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/mutable/MutableLong;>;Lorg/apache/commons/lang3/mutable/Mutable<Ljava/lang/Number;>;\n+Signature: #92                          // Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/mutable/MutableLong;>;Lorg/apache/commons/lang3/mutable/Mutable<Ljava/lang/Number;>;\n SourceFile: \"MutableLong.java\"\n"}]}
