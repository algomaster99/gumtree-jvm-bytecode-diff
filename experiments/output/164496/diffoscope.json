{"diffoscope-json-version": 1, "source1": "first/GeneralPurposeBit.class", "source2": "second/GeneralPurposeBit.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,40 +1,40 @@\n-  SHA-256 checksum 268e0fa90cdef05aeee85d91f08d232becd5343dc78e41cb399f89284eef1eb7\n+  SHA-256 checksum 08e8a73579e830d4d592fc45e6105e961f5935bbfe4e06d4d1f2798cdff390fa\n   Compiled from \"GeneralPurposeBit.java\"\n public final class org.apache.commons.compress.archivers.zip.GeneralPurposeBit implements java.lang.Cloneable\n   minor version: 0\n-  major version: 52\n+  major version: 53\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #10                         // org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n   super_class: #22                        // java/lang/Object\n   interfaces: 1, fields: 12, methods: 17, attributes: 1\n Constant pool:\n-    #1 = Methodref          #22.#93       // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #10.#94       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.languageEncodingFlag:Z\n-    #3 = Fieldref           #10.#95       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.dataDescriptorFlag:Z\n-    #4 = Fieldref           #10.#96       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.encryptionFlag:Z\n-    #5 = Fieldref           #10.#97       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.strongEncryptionFlag:Z\n-    #6 = Methodref          #10.#98       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useEncryption:(Z)V\n-    #7 = Fieldref           #10.#99       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.slidingDictionarySize:I\n-    #8 = Fieldref           #10.#100      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.numberOfShannonFanoTrees:I\n-    #9 = Methodref          #10.#101      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.encode:([BI)V\n-   #10 = Class              #102          // org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n-   #11 = Methodref          #103.#104     // org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n-   #12 = Methodref          #103.#105     // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-   #13 = Methodref          #10.#93       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.\"<init>\":()V\n-   #14 = Methodref          #10.#106      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useDataDescriptor:(Z)V\n-   #15 = Methodref          #10.#107      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useUTF8ForNames:(Z)V\n-   #16 = Methodref          #10.#108      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useStrongEncryption:(Z)V\n-   #17 = Methodref          #22.#109      // java/lang/Object.clone:()Ljava/lang/Object;\n-   #18 = Class              #110          // java/lang/CloneNotSupportedException\n-   #19 = Class              #111          // java/lang/RuntimeException\n-   #20 = String             #112          // GeneralPurposeBit is not Cloneable?\n-   #21 = Methodref          #19.#113      // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #22 = Class              #114          // java/lang/Object\n-   #23 = Class              #115          // java/lang/Cloneable\n+    #1 = Methodref          #22.#91       // java/lang/Object.\"<init>\":()V\n+    #2 = Fieldref           #10.#92       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.languageEncodingFlag:Z\n+    #3 = Fieldref           #10.#93       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.dataDescriptorFlag:Z\n+    #4 = Fieldref           #10.#94       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.encryptionFlag:Z\n+    #5 = Fieldref           #10.#95       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.strongEncryptionFlag:Z\n+    #6 = Methodref          #10.#96       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useEncryption:(Z)V\n+    #7 = Fieldref           #10.#97       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.slidingDictionarySize:I\n+    #8 = Fieldref           #10.#98       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.numberOfShannonFanoTrees:I\n+    #9 = Methodref          #10.#99       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.encode:([BI)V\n+   #10 = Class              #100          // org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+   #11 = Methodref          #101.#102     // org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n+   #12 = Methodref          #101.#103     // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+   #13 = Methodref          #10.#91       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.\"<init>\":()V\n+   #14 = Methodref          #10.#104      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useDataDescriptor:(Z)V\n+   #15 = Methodref          #10.#105      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useUTF8ForNames:(Z)V\n+   #16 = Methodref          #10.#106      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useStrongEncryption:(Z)V\n+   #17 = Methodref          #22.#107      // java/lang/Object.clone:()Ljava/lang/Object;\n+   #18 = Class              #108          // java/lang/CloneNotSupportedException\n+   #19 = Class              #109          // java/lang/RuntimeException\n+   #20 = String             #110          // GeneralPurposeBit is not Cloneable?\n+   #21 = Methodref          #19.#111      // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #22 = Class              #112          // java/lang/Object\n+   #23 = Class              #113          // java/lang/Cloneable\n    #24 = Utf8               ENCRYPTION_FLAG\n    #25 = Utf8               I\n    #26 = Utf8               ConstantValue\n    #27 = Integer            1\n    #28 = Utf8               SLIDING_DICTIONARY_SIZE_FLAG\n    #29 = Integer            2\n    #30 = Utf8               NUMBER_OF_SHANNON_FANO_TREES_FLAG\n@@ -77,62 +77,60 @@\n    #67 = Utf8               encode\n    #68 = Utf8               ()[B\n    #69 = Utf8               result\n    #70 = Utf8               [B\n    #71 = Utf8               ([BI)V\n    #72 = Utf8               buf\n    #73 = Utf8               offset\n-   #74 = Class              #102          // org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n-   #75 = Class              #70           // \"[B\"\n-   #76 = Utf8               parse\n-   #77 = Utf8               ([BI)Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-   #78 = Utf8               data\n-   #79 = Utf8               generalPurposeFlag\n-   #80 = Utf8               hashCode\n-   #81 = Utf8               equals\n-   #82 = Utf8               (Ljava/lang/Object;)Z\n-   #83 = Utf8               o\n-   #84 = Utf8               Ljava/lang/Object;\n-   #85 = Utf8               g\n-   #86 = Utf8               clone\n-   #87 = Utf8               ()Ljava/lang/Object;\n-   #88 = Utf8               ex\n-   #89 = Utf8               Ljava/lang/CloneNotSupportedException;\n-   #90 = Class              #110          // java/lang/CloneNotSupportedException\n-   #91 = Utf8               SourceFile\n-   #92 = Utf8               GeneralPurposeBit.java\n-   #93 = NameAndType        #45:#46       // \"<init>\":()V\n-   #94 = NameAndType        #38:#39       // languageEncodingFlag:Z\n-   #95 = NameAndType        #40:#39       // dataDescriptorFlag:Z\n-   #96 = NameAndType        #41:#39       // encryptionFlag:Z\n-   #97 = NameAndType        #42:#39       // strongEncryptionFlag:Z\n-   #98 = NameAndType        #60:#55       // useEncryption:(Z)V\n-   #99 = NameAndType        #43:#25       // slidingDictionarySize:I\n-  #100 = NameAndType        #44:#25       // numberOfShannonFanoTrees:I\n-  #101 = NameAndType        #67:#71       // encode:([BI)V\n-  #102 = Utf8               org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n-  #103 = Class              #116          // org/apache/commons/compress/archivers/zip/ZipShort\n-  #104 = NameAndType        #117:#118     // putShort:(I[BI)V\n-  #105 = NameAndType        #119:#120     // getValue:([BI)I\n-  #106 = NameAndType        #58:#55       // useDataDescriptor:(Z)V\n-  #107 = NameAndType        #54:#55       // useUTF8ForNames:(Z)V\n-  #108 = NameAndType        #63:#55       // useStrongEncryption:(Z)V\n-  #109 = NameAndType        #86:#87       // clone:()Ljava/lang/Object;\n-  #110 = Utf8               java/lang/CloneNotSupportedException\n-  #111 = Utf8               java/lang/RuntimeException\n-  #112 = Utf8               GeneralPurposeBit is not Cloneable?\n-  #113 = NameAndType        #45:#121      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #114 = Utf8               java/lang/Object\n-  #115 = Utf8               java/lang/Cloneable\n-  #116 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-  #117 = Utf8               putShort\n-  #118 = Utf8               (I[BI)V\n-  #119 = Utf8               getValue\n-  #120 = Utf8               ([BI)I\n-  #121 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #74 = Class              #70           // \"[B\"\n+   #75 = Utf8               parse\n+   #76 = Utf8               ([BI)Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+   #77 = Utf8               data\n+   #78 = Utf8               generalPurposeFlag\n+   #79 = Utf8               hashCode\n+   #80 = Utf8               equals\n+   #81 = Utf8               (Ljava/lang/Object;)Z\n+   #82 = Utf8               o\n+   #83 = Utf8               Ljava/lang/Object;\n+   #84 = Utf8               g\n+   #85 = Utf8               clone\n+   #86 = Utf8               ()Ljava/lang/Object;\n+   #87 = Utf8               ex\n+   #88 = Utf8               Ljava/lang/CloneNotSupportedException;\n+   #89 = Utf8               SourceFile\n+   #90 = Utf8               GeneralPurposeBit.java\n+   #91 = NameAndType        #45:#46       // \"<init>\":()V\n+   #92 = NameAndType        #38:#39       // languageEncodingFlag:Z\n+   #93 = NameAndType        #40:#39       // dataDescriptorFlag:Z\n+   #94 = NameAndType        #41:#39       // encryptionFlag:Z\n+   #95 = NameAndType        #42:#39       // strongEncryptionFlag:Z\n+   #96 = NameAndType        #60:#55       // useEncryption:(Z)V\n+   #97 = NameAndType        #43:#25       // slidingDictionarySize:I\n+   #98 = NameAndType        #44:#25       // numberOfShannonFanoTrees:I\n+   #99 = NameAndType        #67:#71       // encode:([BI)V\n+  #100 = Utf8               org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+  #101 = Class              #114          // org/apache/commons/compress/archivers/zip/ZipShort\n+  #102 = NameAndType        #115:#116     // putShort:(I[BI)V\n+  #103 = NameAndType        #117:#118     // getValue:([BI)I\n+  #104 = NameAndType        #58:#55       // useDataDescriptor:(Z)V\n+  #105 = NameAndType        #54:#55       // useUTF8ForNames:(Z)V\n+  #106 = NameAndType        #63:#55       // useStrongEncryption:(Z)V\n+  #107 = NameAndType        #85:#86       // clone:()Ljava/lang/Object;\n+  #108 = Utf8               java/lang/CloneNotSupportedException\n+  #109 = Utf8               java/lang/RuntimeException\n+  #110 = Utf8               GeneralPurposeBit is not Cloneable?\n+  #111 = NameAndType        #45:#119      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #112 = Utf8               java/lang/Object\n+  #113 = Utf8               java/lang/Cloneable\n+  #114 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+  #115 = Utf8               putShort\n+  #116 = Utf8               (I[BI)V\n+  #117 = Utf8               getValue\n+  #118 = Utf8               ([BI)I\n+  #119 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n {\n   private static final int ENCRYPTION_FLAG = 1;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 1\n \n   private static final int SLIDING_DICTIONARY_SIZE_FLAG = 2;\n@@ -428,14 +426,18 @@\n         54: ior\n         55: aload_1\n         56: iload_2\n         57: invokestatic  #11                 // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n         60: return\n       LineNumberTable:\n         line 187: 0\n+        line 189: 13\n+        line 191: 28\n+        line 193: 41\n+        line 187: 57\n         line 195: 60\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      61     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n             0      61     1   buf   [B\n             0      61     2 offset   I\n       StackMapTable: number_of_entries = 8\n@@ -625,14 +627,18 @@\n         56: goto          60\n         59: iconst_0\n         60: iadd\n         61: imul\n         62: ireturn\n       LineNumberTable:\n         line 218: 0\n+        line 219: 20\n+        line 220: 34\n+        line 221: 48\n+        line 218: 62\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      63     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n       StackMapTable: number_of_entries = 8\n         frame_type = 255 /* full_frame */\n           offset_delta = 18\n           locals = [ class org/apache/commons/compress/archivers/zip/GeneralPurposeBit ]\n"}]}
