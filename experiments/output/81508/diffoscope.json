{"diffoscope-json-version": 1, "source1": "first/GeneralPurposeBit.class", "source2": "second/GeneralPurposeBit.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,132 +1,132 @@\n-  SHA-256 checksum a32113ca3e5685604d70e3fef1c47c882629cc25484e1e9c86b92ca22b55b780\n+  SHA-256 checksum b10c319d7f4a3653ec1bdef8dbce58522f085d66245ba23d656f85a7681675d8\n   Compiled from \"GeneralPurposeBit.java\"\n public final class org.apache.commons.compress.archivers.zip.GeneralPurposeBit implements java.lang.Cloneable\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #8                          // org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n-  super_class: #2                         // java/lang/Object\n+  this_class: #1                          // org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+  super_class: #3                         // java/lang/Object\n   interfaces: 1, fields: 12, methods: 17, attributes: 1\n Constant pool:\n-    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #4            // java/lang/Object\n-    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #1 = Class              #2            // org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+    #2 = Utf8               org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+    #3 = Class              #4            // java/lang/Object\n     #4 = Utf8               java/lang/Object\n-    #5 = Utf8               <init>\n-    #6 = Utf8               ()V\n-    #7 = Fieldref           #8.#9         // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.languageEncodingFlag:Z\n-    #8 = Class              #10           // org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n-    #9 = NameAndType        #11:#12       // languageEncodingFlag:Z\n-   #10 = Utf8               org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n-   #11 = Utf8               languageEncodingFlag\n-   #12 = Utf8               Z\n-   #13 = Fieldref           #8.#14        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.dataDescriptorFlag:Z\n-   #14 = NameAndType        #15:#12       // dataDescriptorFlag:Z\n-   #15 = Utf8               dataDescriptorFlag\n-   #16 = Fieldref           #8.#17        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.encryptionFlag:Z\n-   #17 = NameAndType        #18:#12       // encryptionFlag:Z\n-   #18 = Utf8               encryptionFlag\n-   #19 = Fieldref           #8.#20        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.strongEncryptionFlag:Z\n-   #20 = NameAndType        #21:#12       // strongEncryptionFlag:Z\n-   #21 = Utf8               strongEncryptionFlag\n-   #22 = Methodref          #8.#23        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useEncryption:(Z)V\n-   #23 = NameAndType        #24:#25       // useEncryption:(Z)V\n-   #24 = Utf8               useEncryption\n-   #25 = Utf8               (Z)V\n-   #26 = Fieldref           #8.#27        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.slidingDictionarySize:I\n-   #27 = NameAndType        #28:#29       // slidingDictionarySize:I\n-   #28 = Utf8               slidingDictionarySize\n-   #29 = Utf8               I\n-   #30 = Fieldref           #8.#31        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.numberOfShannonFanoTrees:I\n-   #31 = NameAndType        #32:#29       // numberOfShannonFanoTrees:I\n-   #32 = Utf8               numberOfShannonFanoTrees\n-   #33 = Methodref          #8.#34        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.encode:([BI)V\n-   #34 = NameAndType        #35:#36       // encode:([BI)V\n-   #35 = Utf8               encode\n-   #36 = Utf8               ([BI)V\n-   #37 = Methodref          #38.#39       // org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n-   #38 = Class              #40           // org/apache/commons/compress/archivers/zip/ZipShort\n-   #39 = NameAndType        #41:#42       // putShort:(I[BI)V\n-   #40 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-   #41 = Utf8               putShort\n-   #42 = Utf8               (I[BI)V\n-   #43 = Methodref          #38.#44       // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-   #44 = NameAndType        #45:#46       // getValue:([BI)I\n-   #45 = Utf8               getValue\n-   #46 = Utf8               ([BI)I\n-   #47 = Methodref          #8.#3         // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.\"<init>\":()V\n-   #48 = Methodref          #8.#49        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useDataDescriptor:(Z)V\n-   #49 = NameAndType        #50:#25       // useDataDescriptor:(Z)V\n-   #50 = Utf8               useDataDescriptor\n-   #51 = Methodref          #8.#52        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useUTF8ForNames:(Z)V\n-   #52 = NameAndType        #53:#25       // useUTF8ForNames:(Z)V\n-   #53 = Utf8               useUTF8ForNames\n-   #54 = Methodref          #8.#55        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useStrongEncryption:(Z)V\n-   #55 = NameAndType        #56:#25       // useStrongEncryption:(Z)V\n+    #5 = Class              #6            // java/lang/Cloneable\n+    #6 = Utf8               java/lang/Cloneable\n+    #7 = Utf8               ENCRYPTION_FLAG\n+    #8 = Utf8               I\n+    #9 = Utf8               ConstantValue\n+   #10 = Integer            1\n+   #11 = Utf8               SLIDING_DICTIONARY_SIZE_FLAG\n+   #12 = Integer            2\n+   #13 = Utf8               NUMBER_OF_SHANNON_FANO_TREES_FLAG\n+   #14 = Integer            4\n+   #15 = Utf8               DATA_DESCRIPTOR_FLAG\n+   #16 = Integer            8\n+   #17 = Utf8               STRONG_ENCRYPTION_FLAG\n+   #18 = Integer            64\n+   #19 = Utf8               UFT8_NAMES_FLAG\n+   #20 = Integer            2048\n+   #21 = Utf8               languageEncodingFlag\n+   #22 = Utf8               Z\n+   #23 = Utf8               dataDescriptorFlag\n+   #24 = Utf8               encryptionFlag\n+   #25 = Utf8               strongEncryptionFlag\n+   #26 = Utf8               slidingDictionarySize\n+   #27 = Utf8               numberOfShannonFanoTrees\n+   #28 = Utf8               <init>\n+   #29 = Utf8               ()V\n+   #30 = Utf8               Code\n+   #31 = Methodref          #3.#32        // java/lang/Object.\"<init>\":()V\n+   #32 = NameAndType        #28:#29       // \"<init>\":()V\n+   #33 = Utf8               LineNumberTable\n+   #34 = Utf8               LocalVariableTable\n+   #35 = Utf8               this\n+   #36 = Utf8               Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+   #37 = Utf8               usesUTF8ForNames\n+   #38 = Utf8               ()Z\n+   #39 = Fieldref           #1.#40        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.languageEncodingFlag:Z\n+   #40 = NameAndType        #21:#22       // languageEncodingFlag:Z\n+   #41 = Utf8               useUTF8ForNames\n+   #42 = Utf8               (Z)V\n+   #43 = Utf8               b\n+   #44 = Utf8               usesDataDescriptor\n+   #45 = Fieldref           #1.#46        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.dataDescriptorFlag:Z\n+   #46 = NameAndType        #23:#22       // dataDescriptorFlag:Z\n+   #47 = Utf8               useDataDescriptor\n+   #48 = Utf8               usesEncryption\n+   #49 = Fieldref           #1.#50        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.encryptionFlag:Z\n+   #50 = NameAndType        #24:#22       // encryptionFlag:Z\n+   #51 = Utf8               useEncryption\n+   #52 = Utf8               usesStrongEncryption\n+   #53 = Fieldref           #1.#54        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.strongEncryptionFlag:Z\n+   #54 = NameAndType        #25:#22       // strongEncryptionFlag:Z\n+   #55 = Utf8               StackMapTable\n    #56 = Utf8               useStrongEncryption\n-   #57 = Methodref          #2.#58        // java/lang/Object.clone:()Ljava/lang/Object;\n-   #58 = NameAndType        #59:#60       // clone:()Ljava/lang/Object;\n-   #59 = Utf8               clone\n-   #60 = Utf8               ()Ljava/lang/Object;\n-   #61 = Class              #62           // java/lang/CloneNotSupportedException\n-   #62 = Utf8               java/lang/CloneNotSupportedException\n-   #63 = Class              #64           // java/lang/IllegalStateException\n-   #64 = Utf8               java/lang/IllegalStateException\n-   #65 = String             #66           // GeneralPurposeBit is not Cloneable?\n-   #66 = Utf8               GeneralPurposeBit is not Cloneable?\n-   #67 = Methodref          #63.#68       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #68 = NameAndType        #5:#69        // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #69 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #70 = Class              #71           // java/lang/Cloneable\n-   #71 = Utf8               java/lang/Cloneable\n-   #72 = Utf8               ENCRYPTION_FLAG\n-   #73 = Utf8               ConstantValue\n-   #74 = Integer            1\n-   #75 = Utf8               SLIDING_DICTIONARY_SIZE_FLAG\n-   #76 = Integer            2\n-   #77 = Utf8               NUMBER_OF_SHANNON_FANO_TREES_FLAG\n-   #78 = Integer            4\n-   #79 = Utf8               DATA_DESCRIPTOR_FLAG\n-   #80 = Integer            8\n-   #81 = Utf8               STRONG_ENCRYPTION_FLAG\n-   #82 = Integer            64\n-   #83 = Utf8               UFT8_NAMES_FLAG\n-   #84 = Integer            2048\n-   #85 = Utf8               Code\n-   #86 = Utf8               LineNumberTable\n-   #87 = Utf8               LocalVariableTable\n-   #88 = Utf8               this\n-   #89 = Utf8               Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-   #90 = Utf8               usesUTF8ForNames\n-   #91 = Utf8               ()Z\n-   #92 = Utf8               b\n-   #93 = Utf8               usesDataDescriptor\n-   #94 = Utf8               usesEncryption\n-   #95 = Utf8               usesStrongEncryption\n-   #96 = Utf8               StackMapTable\n-   #97 = Utf8               getSlidingDictionarySize\n-   #98 = Utf8               ()I\n-   #99 = Utf8               getNumberOfShannonFanoTrees\n-  #100 = Utf8               ()[B\n-  #101 = Utf8               result\n-  #102 = Utf8               [B\n-  #103 = Utf8               buf\n-  #104 = Utf8               offset\n-  #105 = Class              #102          // \"[B\"\n-  #106 = Utf8               parse\n-  #107 = Utf8               ([BI)Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-  #108 = Utf8               data\n-  #109 = Utf8               generalPurposeFlag\n-  #110 = Utf8               hashCode\n-  #111 = Utf8               equals\n-  #112 = Utf8               (Ljava/lang/Object;)Z\n-  #113 = Utf8               o\n-  #114 = Utf8               Ljava/lang/Object;\n-  #115 = Utf8               g\n+   #57 = Methodref          #1.#58        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useEncryption:(Z)V\n+   #58 = NameAndType        #51:#42       // useEncryption:(Z)V\n+   #59 = Utf8               getSlidingDictionarySize\n+   #60 = Utf8               ()I\n+   #61 = Fieldref           #1.#62        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.slidingDictionarySize:I\n+   #62 = NameAndType        #26:#8        // slidingDictionarySize:I\n+   #63 = Utf8               getNumberOfShannonFanoTrees\n+   #64 = Fieldref           #1.#65        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.numberOfShannonFanoTrees:I\n+   #65 = NameAndType        #27:#8        // numberOfShannonFanoTrees:I\n+   #66 = Utf8               encode\n+   #67 = Utf8               ()[B\n+   #68 = Methodref          #1.#69        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.encode:([BI)V\n+   #69 = NameAndType        #66:#70       // encode:([BI)V\n+   #70 = Utf8               ([BI)V\n+   #71 = Utf8               result\n+   #72 = Utf8               [B\n+   #73 = Methodref          #74.#76       // org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n+   #74 = Class              #75           // org/apache/commons/compress/archivers/zip/ZipShort\n+   #75 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+   #76 = NameAndType        #77:#78       // putShort:(I[BI)V\n+   #77 = Utf8               putShort\n+   #78 = Utf8               (I[BI)V\n+   #79 = Utf8               buf\n+   #80 = Utf8               offset\n+   #81 = Class              #72           // \"[B\"\n+   #82 = Utf8               parse\n+   #83 = Utf8               ([BI)Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+   #84 = Methodref          #74.#85       // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+   #85 = NameAndType        #86:#87       // getValue:([BI)I\n+   #86 = Utf8               getValue\n+   #87 = Utf8               ([BI)I\n+   #88 = Methodref          #1.#32        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.\"<init>\":()V\n+   #89 = Methodref          #1.#90        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useDataDescriptor:(Z)V\n+   #90 = NameAndType        #47:#42       // useDataDescriptor:(Z)V\n+   #91 = Methodref          #1.#92        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useUTF8ForNames:(Z)V\n+   #92 = NameAndType        #41:#42       // useUTF8ForNames:(Z)V\n+   #93 = Methodref          #1.#94        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useStrongEncryption:(Z)V\n+   #94 = NameAndType        #56:#42       // useStrongEncryption:(Z)V\n+   #95 = Utf8               data\n+   #96 = Utf8               generalPurposeFlag\n+   #97 = Utf8               hashCode\n+   #98 = Utf8               equals\n+   #99 = Utf8               (Ljava/lang/Object;)Z\n+  #100 = Utf8               o\n+  #101 = Utf8               Ljava/lang/Object;\n+  #102 = Utf8               g\n+  #103 = Utf8               clone\n+  #104 = Utf8               ()Ljava/lang/Object;\n+  #105 = Methodref          #3.#106       // java/lang/Object.clone:()Ljava/lang/Object;\n+  #106 = NameAndType        #103:#104     // clone:()Ljava/lang/Object;\n+  #107 = Class              #108          // java/lang/IllegalStateException\n+  #108 = Utf8               java/lang/IllegalStateException\n+  #109 = String             #110          // GeneralPurposeBit is not Cloneable?\n+  #110 = Utf8               GeneralPurposeBit is not Cloneable?\n+  #111 = Methodref          #107.#112     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #112 = NameAndType        #28:#113      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #113 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #114 = Class              #115          // java/lang/CloneNotSupportedException\n+  #115 = Utf8               java/lang/CloneNotSupportedException\n   #116 = Utf8               ex\n   #117 = Utf8               Ljava/lang/CloneNotSupportedException;\n   #118 = Utf8               SourceFile\n   #119 = Utf8               GeneralPurposeBit.java\n {\n   private static final int ENCRYPTION_FLAG = 1;\n     descriptor: I\n@@ -184,45 +184,45 @@\n \n   public org.apache.commons.compress.archivers.zip.GeneralPurposeBit();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #31                 // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 79: 0\n         line 80: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n \n   public boolean usesUTF8ForNames();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field languageEncodingFlag:Z\n+         1: getfield      #39                 // Field languageEncodingFlag:Z\n          4: ireturn\n       LineNumberTable:\n         line 87: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n \n   public void useUTF8ForNames(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #7                  // Field languageEncodingFlag:Z\n+         2: putfield      #39                 // Field languageEncodingFlag:Z\n          5: return\n       LineNumberTable:\n         line 95: 0\n         line 96: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n@@ -230,30 +230,30 @@\n \n   public boolean usesDataDescriptor();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #13                 // Field dataDescriptorFlag:Z\n+         1: getfield      #45                 // Field dataDescriptorFlag:Z\n          4: ireturn\n       LineNumberTable:\n         line 105: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n \n   public void useDataDescriptor(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #13                 // Field dataDescriptorFlag:Z\n+         2: putfield      #45                 // Field dataDescriptorFlag:Z\n          5: return\n       LineNumberTable:\n         line 115: 0\n         line 116: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n@@ -261,30 +261,30 @@\n \n   public boolean usesEncryption();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #16                 // Field encryptionFlag:Z\n+         1: getfield      #49                 // Field encryptionFlag:Z\n          4: ireturn\n       LineNumberTable:\n         line 123: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n \n   public void useEncryption(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #16                 // Field encryptionFlag:Z\n+         2: putfield      #49                 // Field encryptionFlag:Z\n          5: return\n       LineNumberTable:\n         line 131: 0\n         line 132: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n@@ -292,46 +292,44 @@\n \n   public boolean usesStrongEncryption();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #16                 // Field encryptionFlag:Z\n-         4: ifeq          18\n+         1: getfield      #49                 // Field encryptionFlag:Z\n+         4: ifeq          16\n          7: aload_0\n-         8: getfield      #19                 // Field strongEncryptionFlag:Z\n-        11: ifeq          18\n+         8: getfield      #53                 // Field strongEncryptionFlag:Z\n+        11: ifeq          16\n         14: iconst_1\n-        15: goto          19\n-        18: iconst_0\n-        19: ireturn\n+        15: ireturn\n+        16: iconst_0\n+        17: ireturn\n       LineNumberTable:\n         line 139: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      20     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-      StackMapTable: number_of_entries = 2\n-        frame_type = 18 /* same */\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n+            0      18     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+      StackMapTable: number_of_entries = 1\n+        frame_type = 16 /* same */\n \n   public void useStrongEncryption(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #19                 // Field strongEncryptionFlag:Z\n+         2: putfield      #53                 // Field strongEncryptionFlag:Z\n          5: iload_1\n          6: ifeq          14\n          9: aload_0\n         10: iconst_1\n-        11: invokevirtual #22                 // Method useEncryption:(Z)V\n+        11: invokevirtual #57                 // Method useEncryption:(Z)V\n         14: return\n       LineNumberTable:\n         line 147: 0\n         line 148: 5\n         line 149: 9\n         line 151: 14\n       LocalVariableTable:\n@@ -343,29 +341,29 @@\n \n   int getSlidingDictionarySize();\n     descriptor: ()I\n     flags: (0x0000)\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #26                 // Field slidingDictionarySize:I\n+         1: getfield      #61                 // Field slidingDictionarySize:I\n          4: ireturn\n       LineNumberTable:\n         line 157: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n \n   int getNumberOfShannonFanoTrees();\n     descriptor: ()I\n     flags: (0x0000)\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #30                 // Field numberOfShannonFanoTrees:I\n+         1: getfield      #64                 // Field numberOfShannonFanoTrees:I\n          4: ireturn\n       LineNumberTable:\n         line 164: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n \n@@ -376,15 +374,15 @@\n       stack=3, locals=2, args_size=1\n          0: iconst_2\n          1: newarray       byte\n          3: astore_1\n          4: aload_0\n          5: aload_1\n          6: iconst_0\n-         7: invokevirtual #33                 // Method encode:([BI)V\n+         7: invokevirtual #68                 // Method encode:([BI)V\n         10: aload_1\n         11: areturn\n       LineNumberTable:\n         line 172: 0\n         line 173: 4\n         line 174: 10\n       LocalVariableTable:\n@@ -394,49 +392,53 @@\n \n   public void encode(byte[], int);\n     descriptor: ([BI)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: getfield      #13                 // Field dataDescriptorFlag:Z\n+         1: getfield      #45                 // Field dataDescriptorFlag:Z\n          4: ifeq          12\n          7: bipush        8\n          9: goto          13\n         12: iconst_0\n         13: aload_0\n-        14: getfield      #7                  // Field languageEncodingFlag:Z\n+        14: getfield      #39                 // Field languageEncodingFlag:Z\n         17: ifeq          26\n         20: sipush        2048\n         23: goto          27\n         26: iconst_0\n         27: ior\n         28: aload_0\n-        29: getfield      #16                 // Field encryptionFlag:Z\n+        29: getfield      #49                 // Field encryptionFlag:Z\n         32: ifeq          39\n         35: iconst_1\n         36: goto          40\n         39: iconst_0\n         40: ior\n         41: aload_0\n-        42: getfield      #19                 // Field strongEncryptionFlag:Z\n+        42: getfield      #53                 // Field strongEncryptionFlag:Z\n         45: ifeq          53\n         48: bipush        64\n         50: goto          54\n         53: iconst_0\n         54: ior\n         55: aload_1\n         56: iload_2\n-        57: invokestatic  #37                 // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n+        57: invokestatic  #73                 // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n         60: return\n       LineNumberTable:\n         line 187: 0\n         line 189: 13\n+        line 187: 27\n         line 191: 28\n+        line 187: 40\n         line 193: 41\n+        line 187: 54\n+        line 194: 55\n         line 187: 57\n         line 195: 60\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      61     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n             0      61     1   buf   [B\n             0      61     2 offset   I\n@@ -466,74 +468,74 @@\n   public static org.apache.commons.compress.archivers.zip.GeneralPurposeBit parse(byte[], int);\n     descriptor: ([BI)Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=4, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #43                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+         2: invokestatic  #84                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n          5: istore_2\n-         6: new           #8                  // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+         6: new           #1                  // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n          9: dup\n-        10: invokespecial #47                 // Method \"<init>\":()V\n+        10: invokespecial #88                 // Method \"<init>\":()V\n         13: astore_3\n         14: aload_3\n         15: iload_2\n         16: bipush        8\n         18: iand\n         19: ifeq          26\n         22: iconst_1\n         23: goto          27\n         26: iconst_0\n-        27: invokevirtual #48                 // Method useDataDescriptor:(Z)V\n+        27: invokevirtual #89                 // Method useDataDescriptor:(Z)V\n         30: aload_3\n         31: iload_2\n         32: sipush        2048\n         35: iand\n         36: ifeq          43\n         39: iconst_1\n         40: goto          44\n         43: iconst_0\n-        44: invokevirtual #51                 // Method useUTF8ForNames:(Z)V\n+        44: invokevirtual #91                 // Method useUTF8ForNames:(Z)V\n         47: aload_3\n         48: iload_2\n         49: bipush        64\n         51: iand\n         52: ifeq          59\n         55: iconst_1\n         56: goto          60\n         59: iconst_0\n-        60: invokevirtual #54                 // Method useStrongEncryption:(Z)V\n+        60: invokevirtual #93                 // Method useStrongEncryption:(Z)V\n         63: aload_3\n         64: iload_2\n         65: iconst_1\n         66: iand\n         67: ifeq          74\n         70: iconst_1\n         71: goto          75\n         74: iconst_0\n-        75: invokevirtual #22                 // Method useEncryption:(Z)V\n+        75: invokevirtual #57                 // Method useEncryption:(Z)V\n         78: aload_3\n         79: iload_2\n         80: iconst_2\n         81: iand\n         82: ifeq          91\n         85: sipush        8192\n         88: goto          94\n         91: sipush        4096\n-        94: putfield      #26                 // Field slidingDictionarySize:I\n+        94: putfield      #61                 // Field slidingDictionarySize:I\n         97: aload_3\n         98: iload_2\n         99: iconst_4\n        100: iand\n        101: ifeq          108\n        104: iconst_3\n        105: goto          109\n        108: iconst_2\n-       109: putfield      #30                 // Field numberOfShannonFanoTrees:I\n+       109: putfield      #64                 // Field numberOfShannonFanoTrees:I\n        112: aload_3\n        113: areturn\n       LineNumberTable:\n         line 205: 0\n         line 206: 6\n         line 207: 14\n         line 208: 30\n@@ -594,51 +596,51 @@\n     Code:\n       stack=5, locals=1, args_size=1\n          0: iconst_3\n          1: bipush        7\n          3: bipush        13\n          5: bipush        17\n          7: aload_0\n-         8: getfield      #16                 // Field encryptionFlag:Z\n+         8: getfield      #49                 // Field encryptionFlag:Z\n         11: ifeq          18\n         14: iconst_1\n         15: goto          19\n         18: iconst_0\n         19: imul\n         20: aload_0\n-        21: getfield      #19                 // Field strongEncryptionFlag:Z\n+        21: getfield      #53                 // Field strongEncryptionFlag:Z\n         24: ifeq          31\n         27: iconst_1\n         28: goto          32\n         31: iconst_0\n         32: iadd\n         33: imul\n         34: aload_0\n-        35: getfield      #7                  // Field languageEncodingFlag:Z\n+        35: getfield      #39                 // Field languageEncodingFlag:Z\n         38: ifeq          45\n         41: iconst_1\n         42: goto          46\n         45: iconst_0\n         46: iadd\n         47: imul\n         48: aload_0\n-        49: getfield      #13                 // Field dataDescriptorFlag:Z\n+        49: getfield      #45                 // Field dataDescriptorFlag:Z\n         52: ifeq          59\n         55: iconst_1\n         56: goto          60\n         59: iconst_0\n         60: iadd\n         61: imul\n         62: ireturn\n       LineNumberTable:\n         line 218: 0\n         line 219: 20\n         line 220: 34\n         line 221: 48\n-        line 218: 62\n+        line 218: 61\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      63     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n       StackMapTable: number_of_entries = 8\n         frame_type = 255 /* full_frame */\n           offset_delta = 18\n           locals = [ class org/apache/commons/compress/archivers/zip/GeneralPurposeBit ]\n@@ -674,87 +676,89 @@\n \n   public boolean equals(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_1\n-         1: instanceof    #8                  // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+         1: instanceof    #1                  // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n          4: ifne          9\n          7: iconst_0\n          8: ireturn\n          9: aload_1\n-        10: checkcast     #8                  // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+        10: checkcast     #1                  // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n         13: astore_2\n         14: aload_2\n-        15: getfield      #16                 // Field encryptionFlag:Z\n+        15: getfield      #49                 // Field encryptionFlag:Z\n         18: aload_0\n-        19: getfield      #16                 // Field encryptionFlag:Z\n-        22: if_icmpne     62\n+        19: getfield      #49                 // Field encryptionFlag:Z\n+        22: if_icmpne     60\n         25: aload_2\n-        26: getfield      #19                 // Field strongEncryptionFlag:Z\n+        26: getfield      #53                 // Field strongEncryptionFlag:Z\n         29: aload_0\n-        30: getfield      #19                 // Field strongEncryptionFlag:Z\n-        33: if_icmpne     62\n+        30: getfield      #53                 // Field strongEncryptionFlag:Z\n+        33: if_icmpne     60\n         36: aload_2\n-        37: getfield      #7                  // Field languageEncodingFlag:Z\n+        37: getfield      #39                 // Field languageEncodingFlag:Z\n         40: aload_0\n-        41: getfield      #7                  // Field languageEncodingFlag:Z\n-        44: if_icmpne     62\n+        41: getfield      #39                 // Field languageEncodingFlag:Z\n+        44: if_icmpne     60\n         47: aload_2\n-        48: getfield      #13                 // Field dataDescriptorFlag:Z\n+        48: getfield      #45                 // Field dataDescriptorFlag:Z\n         51: aload_0\n-        52: getfield      #13                 // Field dataDescriptorFlag:Z\n-        55: if_icmpne     62\n+        52: getfield      #45                 // Field dataDescriptorFlag:Z\n+        55: if_icmpne     60\n         58: iconst_1\n-        59: goto          63\n-        62: iconst_0\n-        63: ireturn\n+        59: ireturn\n+        60: iconst_0\n+        61: ireturn\n       LineNumberTable:\n         line 226: 0\n         line 227: 7\n         line 229: 9\n         line 230: 14\n+        line 231: 25\n+        line 232: 36\n+        line 233: 47\n+        line 230: 58\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      64     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-            0      64     1     o   Ljava/lang/Object;\n-           14      50     2     g   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-      StackMapTable: number_of_entries = 3\n+            0      62     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+            0      62     1     o   Ljava/lang/Object;\n+           14      48     2     g   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+      StackMapTable: number_of_entries = 2\n         frame_type = 9 /* same */\n         frame_type = 252 /* append */\n-          offset_delta = 52\n+          offset_delta = 50\n           locals = [ class org/apache/commons/compress/archivers/zip/GeneralPurposeBit ]\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n \n   public java.lang.Object clone();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #57                 // Method java/lang/Object.clone:()Ljava/lang/Object;\n+         1: invokespecial #105                // Method java/lang/Object.clone:()Ljava/lang/Object;\n          4: areturn\n          5: astore_1\n-         6: new           #63                 // class java/lang/IllegalStateException\n+         6: new           #107                // class java/lang/IllegalStateException\n          9: dup\n-        10: ldc           #65                 // String GeneralPurposeBit is not Cloneable?\n+        10: ldc           #109                // String GeneralPurposeBit is not Cloneable?\n         12: aload_1\n-        13: invokespecial #67                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        13: invokespecial #111                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         16: athrow\n       Exception table:\n          from    to  target type\n              0     4     5   Class java/lang/CloneNotSupportedException\n       LineNumberTable:\n         line 239: 0\n         line 240: 5\n         line 242: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            6      11     1    ex   Ljava/lang/CloneNotSupportedException;\n             0      17     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+            6      11     1    ex   Ljava/lang/CloneNotSupportedException;\n       StackMapTable: number_of_entries = 1\n         frame_type = 69 /* same_locals_1_stack_item */\n           stack = [ class java/lang/CloneNotSupportedException ]\n }\n SourceFile: \"GeneralPurposeBit.java\"\n"}]}
