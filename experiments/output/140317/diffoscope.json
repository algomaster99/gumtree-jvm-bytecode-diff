{"diffoscope-json-version": 1, "source1": "first/JavadocUtil.class", "source2": "second/JavadocUtil.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,37 +1,45 @@\n \n package com.puppycrawl.tools.checkstyle.utils;\n \n-import com.puppycrawl.tools.checkstyle.api.JavadocTokenTypes;\n import com.puppycrawl.tools.checkstyle.api.DetailNode;\n import com.puppycrawl.tools.checkstyle.api.DetailAST;\n import java.util.Iterator;\n import java.util.List;\n import com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTagInfo;\n import com.puppycrawl.tools.checkstyle.checks.javadoc.InvalidJavadocTag;\n import com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag;\n import com.puppycrawl.tools.checkstyle.checks.javadoc.utils.InlineTagUtil;\n import java.util.Collection;\n import com.puppycrawl.tools.checkstyle.checks.javadoc.utils.BlockTagUtil;\n import com.puppycrawl.tools.checkstyle.checks.javadoc.utils.TagInfo;\n import java.util.ArrayList;\n import com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags;\n import com.puppycrawl.tools.checkstyle.api.TextBlock;\n+import com.puppycrawl.tools.checkstyle.api.JavadocTokenTypes;\n import java.util.regex.Pattern;\n import java.util.Map;\n \n public final class JavadocUtil\n {\n     private static final Map<String, Integer> TOKEN_NAME_TO_VALUE;\n     private static final Map<Integer, String> TOKEN_VALUE_TO_NAME;\n     private static final String UNKNOWN_JAVADOC_TOKEN_ID_EXCEPTION_MESSAGE = \"Unknown javadoc token id. Given id: \";\n     private static final Pattern NEWLINE;\n     private static final Pattern RETURN;\n     private static final Pattern TAB;\n     \n+    static {\n+        NEWLINE = Pattern.compile(\"\\n\");\n+        RETURN = Pattern.compile(\"\\r\");\n+        TAB = Pattern.compile(\"\\t\");\n+        TOKEN_NAME_TO_VALUE = TokenUtil.nameToValueMapFromPublicIntFields((Class)JavadocTokenTypes.class);\n+        TOKEN_VALUE_TO_NAME = TokenUtil.invertMap((Map)JavadocUtil.TOKEN_NAME_TO_VALUE);\n+    }\n+    \n     private JavadocUtil() {\n     }\n     \n     public static JavadocTags getJavadocTags(final TextBlock textBlock, final JavadocUtil.JavadocTagType tagType) {\n         final List<TagInfo> tags = new ArrayList<TagInfo>();\n         final boolean isBlockTags = tagType == JavadocUtil.JavadocTagType.ALL || tagType == JavadocUtil.JavadocTagType.BLOCK;\n         if (isBlockTags) {\n@@ -176,16 +184,8 @@\n             }\n             else {\n                 sibling = null;\n             }\n         }\n         return sibling == null && (BlockCommentPosition.isOnType(blockComment) || BlockCommentPosition.isOnMember(blockComment) || BlockCommentPosition.isOnPackage(blockComment));\n     }\n-    \n-    static {\n-        NEWLINE = Pattern.compile(\"\\n\");\n-        RETURN = Pattern.compile(\"\\r\");\n-        TAB = Pattern.compile(\"\\t\");\n-        TOKEN_NAME_TO_VALUE = TokenUtil.nameToValueMapFromPublicIntFields((Class)JavadocTokenTypes.class);\n-        TOKEN_VALUE_TO_NAME = TokenUtil.invertMap((Map)JavadocUtil.TOKEN_NAME_TO_VALUE);\n-    }\n }\n"}]}
