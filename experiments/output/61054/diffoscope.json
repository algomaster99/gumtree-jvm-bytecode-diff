{"diffoscope-json-version": 1, "source1": "first/StringEscapeUtils$CsvEscaper.class", "source2": "second/StringEscapeUtils$CsvEscaper.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -8,27 +8,27 @@\n static class CsvEscaper extends CharSequenceTranslator\n {\n     private static final char CSV_DELIMITER = ',';\n     private static final char CSV_QUOTE = '\\\"';\n     private static final String CSV_QUOTE_STR;\n     private static final char[] CSV_SEARCH_CHARS;\n     \n+    static {\n+        CsvEscaper.CSV_QUOTE_STR = String.valueOf('\\\"');\n+        CsvEscaper.CSV_SEARCH_CHARS = new char[] { ',', '\\\"', '\\r', '\\n' };\n+    }\n+    \n     public int translate(final CharSequence input, final int index, final Writer out) throws IOException {\n         if (index != 0) {\n             throw new IllegalStateException(\"CsvEscaper should never reach the [1] index\");\n         }\n         if (StringUtils.containsNone((CharSequence)input.toString(), CsvEscaper.CSV_SEARCH_CHARS)) {\n             out.write(input.toString());\n         }\n         else {\n             out.write(34);\n-            out.write(StringUtils.replace(input.toString(), CsvEscaper.CSV_QUOTE_STR, CsvEscaper.CSV_QUOTE_STR + CsvEscaper.CSV_QUOTE_STR));\n+            out.write(StringUtils.replace(input.toString(), CsvEscaper.CSV_QUOTE_STR, String.valueOf(CsvEscaper.CSV_QUOTE_STR) + CsvEscaper.CSV_QUOTE_STR));\n             out.write(34);\n         }\n         return Character.codePointCount(input, 0, input.length());\n     }\n-    \n-    static {\n-        CsvEscaper.CSV_QUOTE_STR = String.valueOf('\\\"');\n-        CsvEscaper.CSV_SEARCH_CHARS = new char[] { ',', '\\\"', '\\r', '\\n' };\n-    }\n }\n"}]}
