{"diffoscope-json-version": 1, "source1": "first/ZipEncodingHelper.class", "source2": "second/ZipEncodingHelper.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,42 +1,42 @@\n-  SHA-256 checksum 284b0b158d958480a984bc467bb15373e1f3f71b85fa03003ce2047ba39ae607\n+  SHA-256 checksum ead8c6a60a2cf41add8156ce1fb076b56686551e7054a115c2872bc1614f214b\n   Compiled from \"ZipEncodingHelper.java\"\n public abstract class org.apache.commons.compress.archivers.zip.ZipEncodingHelper\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #21                         // org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n   super_class: #25                        // java/lang/Object\n   interfaces: 0, fields: 2, methods: 6, attributes: 3\n Constant pool:\n-    #1 = Methodref          #25.#66       // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #67.#68       // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-    #3 = Methodref          #67.#69       // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-    #4 = Class              #70           // java/nio/charset/UnsupportedCharsetException\n-    #5 = Methodref          #67.#71       // java/nio/charset/Charset.name:()Ljava/lang/String;\n-    #6 = Methodref          #21.#72       // org/apache/commons/compress/archivers/zip/ZipEncodingHelper.isUTF8:(Ljava/lang/String;)Z\n-    #7 = Class              #73           // org/apache/commons/compress/archivers/zip/NioZipEncoding\n-    #8 = Methodref          #7.#74        // org/apache/commons/compress/archivers/zip/NioZipEncoding.\"<init>\":(Ljava/nio/charset/Charset;Z)V\n-    #9 = Methodref          #75.#76       // java/nio/ByteBuffer.position:()I\n-   #10 = Methodref          #75.#77       // java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;\n-   #11 = Methodref          #75.#78       // java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;\n-   #12 = Methodref          #75.#79       // java/nio/ByteBuffer.capacity:()I\n-   #13 = Methodref          #75.#80       // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n-   #14 = Methodref          #75.#81       // java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;\n-   #15 = Fieldref           #82.#83       // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-   #16 = Methodref          #84.#85       // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-   #17 = Methodref          #67.#86       // java/nio/charset/Charset.aliases:()Ljava/util/Set;\n-   #18 = InterfaceMethodref #87.#88       // java/util/Set.stream:()Ljava/util/stream/Stream;\n-   #19 = InvokeDynamic      #0:#94        // #0:test:(Ljava/lang/String;)Ljava/util/function/Predicate;\n-   #20 = InterfaceMethodref #95.#96       // java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z\n-   #21 = Class              #97           // org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n+    #1 = Methodref          #25.#65       // java/lang/Object.\"<init>\":()V\n+    #2 = Methodref          #47.#66       // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+    #3 = Methodref          #47.#67       // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+    #4 = Class              #68           // java/nio/charset/UnsupportedCharsetException\n+    #5 = Methodref          #47.#69       // java/nio/charset/Charset.name:()Ljava/lang/String;\n+    #6 = Methodref          #21.#70       // org/apache/commons/compress/archivers/zip/ZipEncodingHelper.isUTF8:(Ljava/lang/String;)Z\n+    #7 = Class              #71           // org/apache/commons/compress/archivers/zip/NioZipEncoding\n+    #8 = Methodref          #7.#72        // org/apache/commons/compress/archivers/zip/NioZipEncoding.\"<init>\":(Ljava/nio/charset/Charset;Z)V\n+    #9 = Methodref          #73.#74       // java/nio/ByteBuffer.position:()I\n+   #10 = Methodref          #73.#75       // java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;\n+   #11 = Methodref          #73.#76       // java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;\n+   #12 = Methodref          #73.#77       // java/nio/ByteBuffer.capacity:()I\n+   #13 = Methodref          #73.#78       // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n+   #14 = Methodref          #73.#79       // java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;\n+   #15 = Fieldref           #80.#81       // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+   #16 = Methodref          #46.#82       // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+   #17 = Methodref          #47.#83       // java/nio/charset/Charset.aliases:()Ljava/util/Set;\n+   #18 = InterfaceMethodref #84.#85       // java/util/Set.stream:()Ljava/util/stream/Stream;\n+   #19 = InvokeDynamic      #0:#91        // #0:test:(Ljava/lang/String;)Ljava/util/function/Predicate;\n+   #20 = InterfaceMethodref #92.#93       // java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z\n+   #21 = Class              #94           // org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n    #22 = String             #26           // UTF8\n-   #23 = Methodref          #21.#98       // org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-   #24 = Fieldref           #21.#99       // org/apache/commons/compress/archivers/zip/ZipEncodingHelper.UTF8_ZIP_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-   #25 = Class              #100          // java/lang/Object\n+   #23 = Methodref          #21.#95       // org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #24 = Fieldref           #21.#96       // org/apache/commons/compress/archivers/zip/ZipEncodingHelper.UTF8_ZIP_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #25 = Class              #97           // java/lang/Object\n    #26 = Utf8               UTF8\n    #27 = Utf8               Ljava/lang/String;\n    #28 = Utf8               ConstantValue\n    #29 = Utf8               UTF8_ZIP_ENCODING\n    #30 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n    #31 = Utf8               <init>\n    #32 = Utf8               ()V\n@@ -49,117 +49,114 @@\n    #39 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n    #40 = Utf8               name\n    #41 = Utf8               cs\n    #42 = Utf8               Ljava/nio/charset/Charset;\n    #43 = Utf8               useReplacement\n    #44 = Utf8               Z\n    #45 = Utf8               StackMapTable\n-   #46 = Class              #101          // java/lang/String\n-   #47 = Class              #102          // java/nio/charset/Charset\n-   #48 = Class              #70           // java/nio/charset/UnsupportedCharsetException\n-   #49 = Utf8               growBufferBy\n-   #50 = Utf8               (Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer;\n-   #51 = Utf8               buffer\n-   #52 = Utf8               Ljava/nio/ByteBuffer;\n-   #53 = Utf8               increment\n-   #54 = Utf8               I\n-   #55 = Utf8               on\n-   #56 = Utf8               isUTF8\n-   #57 = Utf8               (Ljava/lang/String;)Z\n-   #58 = Utf8               charsetName\n-   #59 = Utf8               actual\n-   #60 = Utf8               lambda$isUTF8$0\n-   #61 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n-   #62 = Utf8               alias\n-   #63 = Utf8               <clinit>\n-   #64 = Utf8               SourceFile\n-   #65 = Utf8               ZipEncodingHelper.java\n-   #66 = NameAndType        #31:#32       // \"<init>\":()V\n-   #67 = Class              #102          // java/nio/charset/Charset\n-   #68 = NameAndType        #103:#104     // defaultCharset:()Ljava/nio/charset/Charset;\n-   #69 = NameAndType        #105:#106     // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-   #70 = Utf8               java/nio/charset/UnsupportedCharsetException\n-   #71 = NameAndType        #40:#107      // name:()Ljava/lang/String;\n-   #72 = NameAndType        #56:#57       // isUTF8:(Ljava/lang/String;)Z\n-   #73 = Utf8               org/apache/commons/compress/archivers/zip/NioZipEncoding\n-   #74 = NameAndType        #31:#108      // \"<init>\":(Ljava/nio/charset/Charset;Z)V\n-   #75 = Class              #109          // java/nio/ByteBuffer\n-   #76 = NameAndType        #110:#111     // position:()I\n-   #77 = NameAndType        #112:#113     // limit:(I)Ljava/nio/Buffer;\n-   #78 = NameAndType        #114:#115     // rewind:()Ljava/nio/Buffer;\n-   #79 = NameAndType        #116:#111     // capacity:()I\n-   #80 = NameAndType        #117:#118     // allocate:(I)Ljava/nio/ByteBuffer;\n-   #81 = NameAndType        #119:#120     // put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;\n-   #82 = Class              #121          // java/nio/charset/StandardCharsets\n-   #83 = NameAndType        #122:#42      // UTF_8:Ljava/nio/charset/Charset;\n-   #84 = Class              #101          // java/lang/String\n-   #85 = NameAndType        #123:#57      // equalsIgnoreCase:(Ljava/lang/String;)Z\n-   #86 = NameAndType        #124:#125     // aliases:()Ljava/util/Set;\n-   #87 = Class              #126          // java/util/Set\n-   #88 = NameAndType        #127:#128     // stream:()Ljava/util/stream/Stream;\n-   #89 = Utf8               BootstrapMethods\n-   #90 = MethodHandle       6:#129        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #91 = MethodType         #130          //  (Ljava/lang/Object;)Z\n-   #92 = MethodHandle       6:#131        // REF_invokeStatic org/apache/commons/compress/archivers/zip/ZipEncodingHelper.lambda$isUTF8$0:(Ljava/lang/String;Ljava/lang/String;)Z\n-   #93 = MethodType         #57           //  (Ljava/lang/String;)Z\n-   #94 = NameAndType        #132:#133     // test:(Ljava/lang/String;)Ljava/util/function/Predicate;\n-   #95 = Class              #134          // java/util/stream/Stream\n-   #96 = NameAndType        #135:#136     // anyMatch:(Ljava/util/function/Predicate;)Z\n-   #97 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n-   #98 = NameAndType        #38:#39       // getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-   #99 = NameAndType        #29:#30       // UTF8_ZIP_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #100 = Utf8               java/lang/Object\n-  #101 = Utf8               java/lang/String\n-  #102 = Utf8               java/nio/charset/Charset\n-  #103 = Utf8               defaultCharset\n-  #104 = Utf8               ()Ljava/nio/charset/Charset;\n-  #105 = Utf8               forName\n-  #106 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #107 = Utf8               ()Ljava/lang/String;\n-  #108 = Utf8               (Ljava/nio/charset/Charset;Z)V\n-  #109 = Utf8               java/nio/ByteBuffer\n-  #110 = Utf8               position\n-  #111 = Utf8               ()I\n-  #112 = Utf8               limit\n-  #113 = Utf8               (I)Ljava/nio/Buffer;\n-  #114 = Utf8               rewind\n-  #115 = Utf8               ()Ljava/nio/Buffer;\n-  #116 = Utf8               capacity\n-  #117 = Utf8               allocate\n-  #118 = Utf8               (I)Ljava/nio/ByteBuffer;\n-  #119 = Utf8               put\n-  #120 = Utf8               (Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;\n-  #121 = Utf8               java/nio/charset/StandardCharsets\n-  #122 = Utf8               UTF_8\n-  #123 = Utf8               equalsIgnoreCase\n-  #124 = Utf8               aliases\n-  #125 = Utf8               ()Ljava/util/Set;\n-  #126 = Utf8               java/util/Set\n-  #127 = Utf8               stream\n-  #128 = Utf8               ()Ljava/util/stream/Stream;\n-  #129 = Methodref          #137.#138     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #130 = Utf8               (Ljava/lang/Object;)Z\n-  #131 = Methodref          #21.#139      // org/apache/commons/compress/archivers/zip/ZipEncodingHelper.lambda$isUTF8$0:(Ljava/lang/String;Ljava/lang/String;)Z\n-  #132 = Utf8               test\n-  #133 = Utf8               (Ljava/lang/String;)Ljava/util/function/Predicate;\n-  #134 = Utf8               java/util/stream/Stream\n-  #135 = Utf8               anyMatch\n-  #136 = Utf8               (Ljava/util/function/Predicate;)Z\n-  #137 = Class              #140          // java/lang/invoke/LambdaMetafactory\n-  #138 = NameAndType        #141:#145     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #139 = NameAndType        #60:#61       // lambda$isUTF8$0:(Ljava/lang/String;Ljava/lang/String;)Z\n-  #140 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #141 = Utf8               metafactory\n-  #142 = Class              #147          // java/lang/invoke/MethodHandles$Lookup\n-  #143 = Utf8               Lookup\n-  #144 = Utf8               InnerClasses\n-  #145 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #146 = Class              #148          // java/lang/invoke/MethodHandles\n-  #147 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #148 = Utf8               java/lang/invoke/MethodHandles\n+   #46 = Class              #98           // java/lang/String\n+   #47 = Class              #99           // java/nio/charset/Charset\n+   #48 = Utf8               growBufferBy\n+   #49 = Utf8               (Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer;\n+   #50 = Utf8               buffer\n+   #51 = Utf8               Ljava/nio/ByteBuffer;\n+   #52 = Utf8               increment\n+   #53 = Utf8               I\n+   #54 = Utf8               on\n+   #55 = Utf8               isUTF8\n+   #56 = Utf8               (Ljava/lang/String;)Z\n+   #57 = Utf8               charsetName\n+   #58 = Utf8               actual\n+   #59 = Utf8               lambda$isUTF8$0\n+   #60 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n+   #61 = Utf8               alias\n+   #62 = Utf8               <clinit>\n+   #63 = Utf8               SourceFile\n+   #64 = Utf8               ZipEncodingHelper.java\n+   #65 = NameAndType        #31:#32       // \"<init>\":()V\n+   #66 = NameAndType        #100:#101     // defaultCharset:()Ljava/nio/charset/Charset;\n+   #67 = NameAndType        #102:#103     // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #68 = Utf8               java/nio/charset/UnsupportedCharsetException\n+   #69 = NameAndType        #40:#104      // name:()Ljava/lang/String;\n+   #70 = NameAndType        #55:#56       // isUTF8:(Ljava/lang/String;)Z\n+   #71 = Utf8               org/apache/commons/compress/archivers/zip/NioZipEncoding\n+   #72 = NameAndType        #31:#105      // \"<init>\":(Ljava/nio/charset/Charset;Z)V\n+   #73 = Class              #106          // java/nio/ByteBuffer\n+   #74 = NameAndType        #107:#108     // position:()I\n+   #75 = NameAndType        #109:#110     // limit:(I)Ljava/nio/Buffer;\n+   #76 = NameAndType        #111:#112     // rewind:()Ljava/nio/Buffer;\n+   #77 = NameAndType        #113:#108     // capacity:()I\n+   #78 = NameAndType        #114:#115     // allocate:(I)Ljava/nio/ByteBuffer;\n+   #79 = NameAndType        #116:#117     // put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;\n+   #80 = Class              #118          // java/nio/charset/StandardCharsets\n+   #81 = NameAndType        #119:#42      // UTF_8:Ljava/nio/charset/Charset;\n+   #82 = NameAndType        #120:#56      // equalsIgnoreCase:(Ljava/lang/String;)Z\n+   #83 = NameAndType        #121:#122     // aliases:()Ljava/util/Set;\n+   #84 = Class              #123          // java/util/Set\n+   #85 = NameAndType        #124:#125     // stream:()Ljava/util/stream/Stream;\n+   #86 = Utf8               BootstrapMethods\n+   #87 = MethodHandle       6:#126        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+   #88 = MethodType         #127          //  (Ljava/lang/Object;)Z\n+   #89 = MethodHandle       6:#128        // REF_invokeStatic org/apache/commons/compress/archivers/zip/ZipEncodingHelper.lambda$isUTF8$0:(Ljava/lang/String;Ljava/lang/String;)Z\n+   #90 = MethodType         #56           //  (Ljava/lang/String;)Z\n+   #91 = NameAndType        #129:#130     // test:(Ljava/lang/String;)Ljava/util/function/Predicate;\n+   #92 = Class              #131          // java/util/stream/Stream\n+   #93 = NameAndType        #132:#133     // anyMatch:(Ljava/util/function/Predicate;)Z\n+   #94 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n+   #95 = NameAndType        #38:#39       // getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #96 = NameAndType        #29:#30       // UTF8_ZIP_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #97 = Utf8               java/lang/Object\n+   #98 = Utf8               java/lang/String\n+   #99 = Utf8               java/nio/charset/Charset\n+  #100 = Utf8               defaultCharset\n+  #101 = Utf8               ()Ljava/nio/charset/Charset;\n+  #102 = Utf8               forName\n+  #103 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #104 = Utf8               ()Ljava/lang/String;\n+  #105 = Utf8               (Ljava/nio/charset/Charset;Z)V\n+  #106 = Utf8               java/nio/ByteBuffer\n+  #107 = Utf8               position\n+  #108 = Utf8               ()I\n+  #109 = Utf8               limit\n+  #110 = Utf8               (I)Ljava/nio/Buffer;\n+  #111 = Utf8               rewind\n+  #112 = Utf8               ()Ljava/nio/Buffer;\n+  #113 = Utf8               capacity\n+  #114 = Utf8               allocate\n+  #115 = Utf8               (I)Ljava/nio/ByteBuffer;\n+  #116 = Utf8               put\n+  #117 = Utf8               (Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;\n+  #118 = Utf8               java/nio/charset/StandardCharsets\n+  #119 = Utf8               UTF_8\n+  #120 = Utf8               equalsIgnoreCase\n+  #121 = Utf8               aliases\n+  #122 = Utf8               ()Ljava/util/Set;\n+  #123 = Utf8               java/util/Set\n+  #124 = Utf8               stream\n+  #125 = Utf8               ()Ljava/util/stream/Stream;\n+  #126 = Methodref          #134.#135     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #127 = Utf8               (Ljava/lang/Object;)Z\n+  #128 = Methodref          #21.#136      // org/apache/commons/compress/archivers/zip/ZipEncodingHelper.lambda$isUTF8$0:(Ljava/lang/String;Ljava/lang/String;)Z\n+  #129 = Utf8               test\n+  #130 = Utf8               (Ljava/lang/String;)Ljava/util/function/Predicate;\n+  #131 = Utf8               java/util/stream/Stream\n+  #132 = Utf8               anyMatch\n+  #133 = Utf8               (Ljava/util/function/Predicate;)Z\n+  #134 = Class              #137          // java/lang/invoke/LambdaMetafactory\n+  #135 = NameAndType        #138:#142     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #136 = NameAndType        #59:#60       // lambda$isUTF8$0:(Ljava/lang/String;Ljava/lang/String;)Z\n+  #137 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #138 = Utf8               metafactory\n+  #139 = Class              #144          // java/lang/invoke/MethodHandles$Lookup\n+  #140 = Utf8               Lookup\n+  #141 = Utf8               InnerClasses\n+  #142 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #143 = Class              #145          // java/lang/invoke/MethodHandles\n+  #144 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #145 = Utf8               java/lang/invoke/MethodHandles\n {\n   static final java.lang.String UTF8 = \"UTF8\";\n     descriptor: Ljava/lang/String;\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n     ConstantValue: String UTF8\n \n   static final org.apache.commons.compress.archivers.zip.ZipEncoding UTF8_ZIP_ENCODING;\n@@ -333,14 +330,14 @@\n          5: putstatic     #24                 // Field UTF8_ZIP_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n          8: return\n       LineNumberTable:\n         line 41: 0\n }\n SourceFile: \"ZipEncodingHelper.java\"\n InnerClasses:\n-  public static final #143= #142 of #146; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  public static final #140= #139 of #143; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #90 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #87 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #91 (Ljava/lang/Object;)Z\n-      #92 REF_invokeStatic org/apache/commons/compress/archivers/zip/ZipEncodingHelper.lambda$isUTF8$0:(Ljava/lang/String;Ljava/lang/String;)Z\n-      #93 (Ljava/lang/String;)Z\n+      #88 (Ljava/lang/Object;)Z\n+      #89 REF_invokeStatic org/apache/commons/compress/archivers/zip/ZipEncodingHelper.lambda$isUTF8$0:(Ljava/lang/String;Ljava/lang/String;)Z\n+      #90 (Ljava/lang/String;)Z\n"}]}
