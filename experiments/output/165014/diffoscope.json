{"diffoscope-json-version": 1, "source1": "first/ArArchiveOutputStream.class", "source2": "second/ArArchiveOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,88 +1,88 @@\n-  SHA-256 checksum 023688db96045a79b4656dc1247a51aec0b781222bdd30dc82497b07eb21e2f5\n+  SHA-256 checksum 4090c98f8c5822a8dc4942a8005cdf2cbe51b5552bb8af718e1963744d556942\n   Compiled from \"ArArchiveOutputStream.java\"\n public class org.apache.commons.compress.archivers.ar.ArArchiveOutputStream extends org.apache.commons.compress.archivers.ArchiveOutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #2                          // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n   super_class: #78                        // org/apache/commons/compress/archivers/ArchiveOutputStream\n   interfaces: 0, fields: 8, methods: 13, attributes: 1\n Constant pool:\n-    #1 = Methodref          #78.#163      // org/apache/commons/compress/archivers/ArchiveOutputStream.\"<init>\":()V\n-    #2 = Class              #164          // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n-    #3 = Fieldref           #2.#165       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.longFileMode:I\n-    #4 = Fieldref           #2.#166       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.out:Ljava/io/OutputStream;\n-    #5 = Class              #167          // org/apache/commons/compress/archivers/ar/ArArchiveEntry\n-    #6 = String             #168          // !<arch>\\n\n-    #7 = Methodref          #169.#170     // org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n-    #8 = Methodref          #171.#172     // java/io/OutputStream.write:([B)V\n-    #9 = Fieldref           #2.#173       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.finished:Z\n-   #10 = Class              #174          // java/io/IOException\n-   #11 = String             #175          // Stream has already been finished\n-   #12 = Methodref          #10.#176      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #13 = Fieldref           #2.#177       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.prevEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-   #14 = Fieldref           #2.#178       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.haveUnclosedEntry:Z\n-   #15 = String             #179          // No current entry to close\n-   #16 = Fieldref           #2.#180       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.entryOffset:J\n+    #1 = Methodref          #78.#161      // org/apache/commons/compress/archivers/ArchiveOutputStream.\"<init>\":()V\n+    #2 = Class              #162          // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n+    #3 = Fieldref           #2.#163       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.longFileMode:I\n+    #4 = Fieldref           #2.#164       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.out:Ljava/io/OutputStream;\n+    #5 = Class              #165          // org/apache/commons/compress/archivers/ar/ArArchiveEntry\n+    #6 = String             #166          // !<arch>\\n\n+    #7 = Methodref          #167.#168     // org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n+    #8 = Methodref          #169.#170     // java/io/OutputStream.write:([B)V\n+    #9 = Fieldref           #2.#171       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.finished:Z\n+   #10 = Class              #172          // java/io/IOException\n+   #11 = String             #173          // Stream has already been finished\n+   #12 = Methodref          #10.#174      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #13 = Fieldref           #2.#175       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.prevEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+   #14 = Fieldref           #2.#176       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.haveUnclosedEntry:Z\n+   #15 = String             #177          // No current entry to close\n+   #16 = Fieldref           #2.#178       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.entryOffset:J\n    #17 = Long               2l\n-   #19 = Methodref          #171.#181     // java/io/OutputStream.write:(I)V\n-   #20 = Methodref          #2.#182       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.writeArchiveHeader:()V\n-   #21 = Methodref          #5.#183       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLength:()J\n-   #22 = Class              #184          // java/lang/StringBuilder\n-   #23 = Methodref          #22.#163      // java/lang/StringBuilder.\"<init>\":()V\n-   #24 = String             #185          // Length does not match entry (\n-   #25 = Methodref          #22.#186      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #26 = Methodref          #22.#187      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-   #27 = String             #188          //  !=\n-   #28 = Methodref          #22.#189      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #29 = Methodref          #2.#190       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.closeArchiveEntry:()V\n-   #30 = Methodref          #2.#191       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.writeEntryHeader:(Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;)V\n-   #31 = Methodref          #2.#181       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.write:(I)V\n-   #32 = Fieldref           #192.#193     // java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;\n-   #33 = Methodref          #194.#195     // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-   #34 = Methodref          #2.#172       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.write:([B)V\n-   #35 = Methodref          #5.#196       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getName:()Ljava/lang/String;\n-   #36 = Methodref          #194.#197     // java/lang/String.length:()I\n-   #37 = String             #198          // File name too long, > 16 chars:\n-   #38 = String             #199          //\n-   #39 = Methodref          #194.#200     // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n-   #40 = Class              #201          // org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n-   #41 = String             #202          // #1/\n-   #42 = Methodref          #22.#203      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #43 = Methodref          #2.#204       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.write:(Ljava/lang/String;)J\n+   #19 = Methodref          #169.#179     // java/io/OutputStream.write:(I)V\n+   #20 = Methodref          #2.#180       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.writeArchiveHeader:()V\n+   #21 = Methodref          #5.#181       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLength:()J\n+   #22 = Class              #182          // java/lang/StringBuilder\n+   #23 = Methodref          #22.#161      // java/lang/StringBuilder.\"<init>\":()V\n+   #24 = String             #183          // Length does not match entry (\n+   #25 = Methodref          #22.#184      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #26 = Methodref          #22.#185      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+   #27 = String             #186          //  !=\n+   #28 = Methodref          #22.#187      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #29 = Methodref          #2.#188       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.closeArchiveEntry:()V\n+   #30 = Methodref          #2.#189       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.writeEntryHeader:(Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;)V\n+   #31 = Methodref          #2.#179       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.write:(I)V\n+   #32 = Fieldref           #190.#191     // java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;\n+   #33 = Methodref          #141.#192     // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+   #34 = Methodref          #2.#170       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.write:([B)V\n+   #35 = Methodref          #5.#193       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getName:()Ljava/lang/String;\n+   #36 = Methodref          #141.#194     // java/lang/String.length:()I\n+   #37 = String             #195          // File name too long, > 16 chars:\n+   #38 = String             #196          //\n+   #39 = Methodref          #141.#197     // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+   #40 = Class              #198          // org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n+   #41 = String             #199          // #1/\n+   #42 = Methodref          #22.#200      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #43 = Methodref          #2.#201       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.write:(Ljava/lang/String;)J\n    #44 = Long               16l\n-   #46 = Methodref          #2.#205       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.fill:(JJC)J\n-   #47 = String             #206          //\n-   #48 = Methodref          #5.#207       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLastModified:()J\n-   #49 = String             #208          // Last modified too long\n+   #46 = Methodref          #2.#202       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.fill:(JJC)J\n+   #47 = String             #203          //\n+   #48 = Methodref          #5.#204       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLastModified:()J\n+   #49 = String             #205          // Last modified too long\n    #50 = Long               28l\n-   #52 = Methodref          #5.#209       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getUserId:()I\n-   #53 = String             #210          // User id too long\n+   #52 = Methodref          #5.#206       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getUserId:()I\n+   #53 = String             #207          // User id too long\n    #54 = Long               34l\n-   #56 = Methodref          #5.#211       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getGroupId:()I\n-   #57 = String             #212          // Group id too long\n+   #56 = Methodref          #5.#208       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getGroupId:()I\n+   #57 = String             #209          // Group id too long\n    #58 = Long               40l\n-   #60 = Methodref          #5.#213       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getMode:()I\n-   #61 = Methodref          #214.#215     // java/lang/Integer.toString:(II)Ljava/lang/String;\n-   #62 = String             #216          // Filemode too long\n+   #60 = Methodref          #5.#210       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getMode:()I\n+   #61 = Methodref          #211.#212     // java/lang/Integer.toString:(II)Ljava/lang/String;\n+   #62 = String             #213          // Filemode too long\n    #63 = Long               48l\n-   #65 = Methodref          #194.#217     // java/lang/String.valueOf:(J)Ljava/lang/String;\n-   #66 = String             #218          // Size too long\n+   #65 = Methodref          #141.#214     // java/lang/String.valueOf:(J)Ljava/lang/String;\n+   #66 = String             #215          // Size too long\n    #67 = Long               58l\n-   #69 = String             #219          // `\\n\n-   #70 = Methodref          #171.#220     // java/io/OutputStream.write:([BII)V\n-   #71 = Methodref          #2.#221       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.count:(I)V\n-   #72 = Methodref          #2.#222       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.finish:()V\n-   #73 = Methodref          #171.#223     // java/io/OutputStream.close:()V\n-   #74 = Methodref          #5.#224       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-   #75 = Methodref          #5.#225       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n-   #76 = String             #226          // This archive contains unclosed entries.\n-   #77 = String             #227          // This archive has already been finished\n-   #78 = Class              #228          // org/apache/commons/compress/archivers/ArchiveOutputStream\n+   #69 = String             #216          // `\\n\n+   #70 = Methodref          #169.#217     // java/io/OutputStream.write:([BII)V\n+   #71 = Methodref          #2.#218       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.count:(I)V\n+   #72 = Methodref          #2.#219       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.finish:()V\n+   #73 = Methodref          #169.#220     // java/io/OutputStream.close:()V\n+   #74 = Methodref          #5.#221       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+   #75 = Methodref          #5.#222       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n+   #76 = String             #223          // This archive contains unclosed entries.\n+   #77 = String             #224          // This archive has already been finished\n+   #78 = Class              #225          // org/apache/commons/compress/archivers/ArchiveOutputStream\n    #79 = Utf8               LONGFILE_ERROR\n    #80 = Utf8               I\n    #81 = Utf8               ConstantValue\n    #82 = Integer            0\n    #83 = Utf8               LONGFILE_BSD\n    #84 = Integer            1\n    #85 = Utf8               out\n@@ -113,163 +113,160 @@\n   #110 = Utf8               closeArchiveEntry\n   #111 = Utf8               StackMapTable\n   #112 = Utf8               putArchiveEntry\n   #113 = Utf8               (Lorg/apache/commons/compress/archivers/ArchiveEntry;)V\n   #114 = Utf8               pEntry\n   #115 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveEntry;\n   #116 = Utf8               pArEntry\n-  #117 = Class              #167          // org/apache/commons/compress/archivers/ar/ArArchiveEntry\n-  #118 = Utf8               fill\n-  #119 = Utf8               (JJC)J\n-  #120 = Utf8               i\n-  #121 = Utf8               pOffset\n-  #122 = Utf8               pNewOffset\n-  #123 = Utf8               pFill\n-  #124 = Utf8               C\n-  #125 = Utf8               diff\n-  #126 = Utf8               write\n-  #127 = Utf8               (Ljava/lang/String;)J\n-  #128 = Utf8               data\n-  #129 = Utf8               Ljava/lang/String;\n-  #130 = Utf8               bytes\n-  #131 = Utf8               writeEntryHeader\n-  #132 = Utf8               (Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;)V\n-  #133 = Utf8               offset\n-  #134 = Utf8               mustAppendName\n-  #135 = Utf8               n\n-  #136 = Utf8               nLength\n-  #137 = Utf8               m\n-  #138 = Utf8               u\n-  #139 = Utf8               g\n-  #140 = Utf8               fm\n-  #141 = Utf8               s\n-  #142 = Class              #164          // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n-  #143 = Class              #229          // java/lang/String\n-  #144 = Utf8               ([BII)V\n-  #145 = Utf8               b\n-  #146 = Utf8               off\n-  #147 = Utf8               len\n-  #148 = Utf8               close\n-  #149 = Class              #230          // java/lang/Throwable\n-  #150 = Utf8               createArchiveEntry\n-  #151 = Utf8               (Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;\n-  #152 = Utf8               inputFile\n-  #153 = Utf8               Ljava/io/File;\n-  #154 = Utf8               entryName\n-  #155 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Lorg/apache/commons/compress/archivers/ArchiveEntry;\n-  #156 = Utf8               inputPath\n-  #157 = Utf8               Ljava/nio/file/Path;\n-  #158 = Utf8               options\n-  #159 = Utf8               [Ljava/nio/file/LinkOption;\n-  #160 = Utf8               finish\n-  #161 = Utf8               SourceFile\n-  #162 = Utf8               ArArchiveOutputStream.java\n-  #163 = NameAndType        #95:#106      // \"<init>\":()V\n-  #164 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n-  #165 = NameAndType        #93:#80       // longFileMode:I\n-  #166 = NameAndType        #85:#86       // out:Ljava/io/OutputStream;\n-  #167 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveEntry\n-  #168 = Utf8               !<arch>\\n\n-  #169 = Class              #231          // org/apache/commons/compress/utils/ArchiveUtils\n-  #170 = NameAndType        #232:#233     // toAsciiBytes:(Ljava/lang/String;)[B\n-  #171 = Class              #234          // java/io/OutputStream\n-  #172 = NameAndType        #126:#235     // write:([B)V\n-  #173 = NameAndType        #94:#92       // finished:Z\n-  #174 = Utf8               java/io/IOException\n-  #175 = Utf8               Stream has already been finished\n-  #176 = NameAndType        #95:#236      // \"<init>\":(Ljava/lang/String;)V\n-  #177 = NameAndType        #89:#90       // prevEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-  #178 = NameAndType        #91:#92       // haveUnclosedEntry:Z\n-  #179 = Utf8               No current entry to close\n-  #180 = NameAndType        #87:#88       // entryOffset:J\n-  #181 = NameAndType        #126:#104     // write:(I)V\n-  #182 = NameAndType        #105:#106     // writeArchiveHeader:()V\n-  #183 = NameAndType        #237:#238     // getLength:()J\n-  #184 = Utf8               java/lang/StringBuilder\n-  #185 = Utf8               Length does not match entry (\n-  #186 = NameAndType        #239:#240     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #187 = NameAndType        #239:#241     // append:(J)Ljava/lang/StringBuilder;\n-  #188 = Utf8                !=\n-  #189 = NameAndType        #242:#243     // toString:()Ljava/lang/String;\n-  #190 = NameAndType        #110:#106     // closeArchiveEntry:()V\n-  #191 = NameAndType        #131:#132     // writeEntryHeader:(Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;)V\n-  #192 = Class              #244          // java/nio/charset/StandardCharsets\n-  #193 = NameAndType        #245:#246     // US_ASCII:Ljava/nio/charset/Charset;\n-  #194 = Class              #229          // java/lang/String\n-  #195 = NameAndType        #247:#248     // getBytes:(Ljava/nio/charset/Charset;)[B\n-  #196 = NameAndType        #249:#243     // getName:()Ljava/lang/String;\n-  #197 = NameAndType        #250:#251     // length:()I\n-  #198 = Utf8               File name too long, > 16 chars:\n-  #199 = Utf8\n-  #200 = NameAndType        #252:#253     // contains:(Ljava/lang/CharSequence;)Z\n-  #201 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n-  #202 = Utf8               #1/\n-  #203 = NameAndType        #239:#254     // append:(I)Ljava/lang/StringBuilder;\n-  #204 = NameAndType        #126:#127     // write:(Ljava/lang/String;)J\n-  #205 = NameAndType        #118:#119     // fill:(JJC)J\n-  #206 = Utf8\n-  #207 = NameAndType        #255:#238     // getLastModified:()J\n-  #208 = Utf8               Last modified too long\n-  #209 = NameAndType        #256:#251     // getUserId:()I\n-  #210 = Utf8               User id too long\n-  #211 = NameAndType        #257:#251     // getGroupId:()I\n-  #212 = Utf8               Group id too long\n-  #213 = NameAndType        #258:#251     // getMode:()I\n-  #214 = Class              #259          // java/lang/Integer\n-  #215 = NameAndType        #242:#260     // toString:(II)Ljava/lang/String;\n-  #216 = Utf8               Filemode too long\n-  #217 = NameAndType        #261:#262     // valueOf:(J)Ljava/lang/String;\n-  #218 = Utf8               Size too long\n-  #219 = Utf8               `\\n\n-  #220 = NameAndType        #126:#144     // write:([BII)V\n-  #221 = NameAndType        #263:#104     // count:(I)V\n-  #222 = NameAndType        #160:#106     // finish:()V\n-  #223 = NameAndType        #148:#106     // close:()V\n-  #224 = NameAndType        #95:#264      // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-  #225 = NameAndType        #95:#265      // \"<init>\":(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n-  #226 = Utf8               This archive contains unclosed entries.\n-  #227 = Utf8               This archive has already been finished\n-  #228 = Utf8               org/apache/commons/compress/archivers/ArchiveOutputStream\n-  #229 = Utf8               java/lang/String\n-  #230 = Utf8               java/lang/Throwable\n-  #231 = Utf8               org/apache/commons/compress/utils/ArchiveUtils\n-  #232 = Utf8               toAsciiBytes\n-  #233 = Utf8               (Ljava/lang/String;)[B\n-  #234 = Utf8               java/io/OutputStream\n-  #235 = Utf8               ([B)V\n-  #236 = Utf8               (Ljava/lang/String;)V\n-  #237 = Utf8               getLength\n-  #238 = Utf8               ()J\n-  #239 = Utf8               append\n-  #240 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #241 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #242 = Utf8               toString\n-  #243 = Utf8               ()Ljava/lang/String;\n-  #244 = Utf8               java/nio/charset/StandardCharsets\n-  #245 = Utf8               US_ASCII\n-  #246 = Utf8               Ljava/nio/charset/Charset;\n-  #247 = Utf8               getBytes\n-  #248 = Utf8               (Ljava/nio/charset/Charset;)[B\n-  #249 = Utf8               getName\n-  #250 = Utf8               length\n-  #251 = Utf8               ()I\n-  #252 = Utf8               contains\n-  #253 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #254 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #255 = Utf8               getLastModified\n-  #256 = Utf8               getUserId\n-  #257 = Utf8               getGroupId\n-  #258 = Utf8               getMode\n-  #259 = Utf8               java/lang/Integer\n-  #260 = Utf8               (II)Ljava/lang/String;\n-  #261 = Utf8               valueOf\n-  #262 = Utf8               (J)Ljava/lang/String;\n-  #263 = Utf8               count\n-  #264 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n-  #265 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n+  #117 = Utf8               fill\n+  #118 = Utf8               (JJC)J\n+  #119 = Utf8               i\n+  #120 = Utf8               pOffset\n+  #121 = Utf8               pNewOffset\n+  #122 = Utf8               pFill\n+  #123 = Utf8               C\n+  #124 = Utf8               diff\n+  #125 = Utf8               write\n+  #126 = Utf8               (Ljava/lang/String;)J\n+  #127 = Utf8               data\n+  #128 = Utf8               Ljava/lang/String;\n+  #129 = Utf8               bytes\n+  #130 = Utf8               writeEntryHeader\n+  #131 = Utf8               (Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;)V\n+  #132 = Utf8               offset\n+  #133 = Utf8               mustAppendName\n+  #134 = Utf8               n\n+  #135 = Utf8               nLength\n+  #136 = Utf8               m\n+  #137 = Utf8               u\n+  #138 = Utf8               g\n+  #139 = Utf8               fm\n+  #140 = Utf8               s\n+  #141 = Class              #226          // java/lang/String\n+  #142 = Utf8               ([BII)V\n+  #143 = Utf8               b\n+  #144 = Utf8               off\n+  #145 = Utf8               len\n+  #146 = Utf8               close\n+  #147 = Class              #227          // java/lang/Throwable\n+  #148 = Utf8               createArchiveEntry\n+  #149 = Utf8               (Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;\n+  #150 = Utf8               inputFile\n+  #151 = Utf8               Ljava/io/File;\n+  #152 = Utf8               entryName\n+  #153 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Lorg/apache/commons/compress/archivers/ArchiveEntry;\n+  #154 = Utf8               inputPath\n+  #155 = Utf8               Ljava/nio/file/Path;\n+  #156 = Utf8               options\n+  #157 = Utf8               [Ljava/nio/file/LinkOption;\n+  #158 = Utf8               finish\n+  #159 = Utf8               SourceFile\n+  #160 = Utf8               ArArchiveOutputStream.java\n+  #161 = NameAndType        #95:#106      // \"<init>\":()V\n+  #162 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n+  #163 = NameAndType        #93:#80       // longFileMode:I\n+  #164 = NameAndType        #85:#86       // out:Ljava/io/OutputStream;\n+  #165 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveEntry\n+  #166 = Utf8               !<arch>\\n\n+  #167 = Class              #228          // org/apache/commons/compress/utils/ArchiveUtils\n+  #168 = NameAndType        #229:#230     // toAsciiBytes:(Ljava/lang/String;)[B\n+  #169 = Class              #231          // java/io/OutputStream\n+  #170 = NameAndType        #125:#232     // write:([B)V\n+  #171 = NameAndType        #94:#92       // finished:Z\n+  #172 = Utf8               java/io/IOException\n+  #173 = Utf8               Stream has already been finished\n+  #174 = NameAndType        #95:#233      // \"<init>\":(Ljava/lang/String;)V\n+  #175 = NameAndType        #89:#90       // prevEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+  #176 = NameAndType        #91:#92       // haveUnclosedEntry:Z\n+  #177 = Utf8               No current entry to close\n+  #178 = NameAndType        #87:#88       // entryOffset:J\n+  #179 = NameAndType        #125:#104     // write:(I)V\n+  #180 = NameAndType        #105:#106     // writeArchiveHeader:()V\n+  #181 = NameAndType        #234:#235     // getLength:()J\n+  #182 = Utf8               java/lang/StringBuilder\n+  #183 = Utf8               Length does not match entry (\n+  #184 = NameAndType        #236:#237     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #185 = NameAndType        #236:#238     // append:(J)Ljava/lang/StringBuilder;\n+  #186 = Utf8                !=\n+  #187 = NameAndType        #239:#240     // toString:()Ljava/lang/String;\n+  #188 = NameAndType        #110:#106     // closeArchiveEntry:()V\n+  #189 = NameAndType        #130:#131     // writeEntryHeader:(Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;)V\n+  #190 = Class              #241          // java/nio/charset/StandardCharsets\n+  #191 = NameAndType        #242:#243     // US_ASCII:Ljava/nio/charset/Charset;\n+  #192 = NameAndType        #244:#245     // getBytes:(Ljava/nio/charset/Charset;)[B\n+  #193 = NameAndType        #246:#240     // getName:()Ljava/lang/String;\n+  #194 = NameAndType        #247:#248     // length:()I\n+  #195 = Utf8               File name too long, > 16 chars:\n+  #196 = Utf8\n+  #197 = NameAndType        #249:#250     // contains:(Ljava/lang/CharSequence;)Z\n+  #198 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n+  #199 = Utf8               #1/\n+  #200 = NameAndType        #236:#251     // append:(I)Ljava/lang/StringBuilder;\n+  #201 = NameAndType        #125:#126     // write:(Ljava/lang/String;)J\n+  #202 = NameAndType        #117:#118     // fill:(JJC)J\n+  #203 = Utf8\n+  #204 = NameAndType        #252:#235     // getLastModified:()J\n+  #205 = Utf8               Last modified too long\n+  #206 = NameAndType        #253:#248     // getUserId:()I\n+  #207 = Utf8               User id too long\n+  #208 = NameAndType        #254:#248     // getGroupId:()I\n+  #209 = Utf8               Group id too long\n+  #210 = NameAndType        #255:#248     // getMode:()I\n+  #211 = Class              #256          // java/lang/Integer\n+  #212 = NameAndType        #239:#257     // toString:(II)Ljava/lang/String;\n+  #213 = Utf8               Filemode too long\n+  #214 = NameAndType        #258:#259     // valueOf:(J)Ljava/lang/String;\n+  #215 = Utf8               Size too long\n+  #216 = Utf8               `\\n\n+  #217 = NameAndType        #125:#142     // write:([BII)V\n+  #218 = NameAndType        #260:#104     // count:(I)V\n+  #219 = NameAndType        #158:#106     // finish:()V\n+  #220 = NameAndType        #146:#106     // close:()V\n+  #221 = NameAndType        #95:#261      // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+  #222 = NameAndType        #95:#262      // \"<init>\":(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n+  #223 = Utf8               This archive contains unclosed entries.\n+  #224 = Utf8               This archive has already been finished\n+  #225 = Utf8               org/apache/commons/compress/archivers/ArchiveOutputStream\n+  #226 = Utf8               java/lang/String\n+  #227 = Utf8               java/lang/Throwable\n+  #228 = Utf8               org/apache/commons/compress/utils/ArchiveUtils\n+  #229 = Utf8               toAsciiBytes\n+  #230 = Utf8               (Ljava/lang/String;)[B\n+  #231 = Utf8               java/io/OutputStream\n+  #232 = Utf8               ([B)V\n+  #233 = Utf8               (Ljava/lang/String;)V\n+  #234 = Utf8               getLength\n+  #235 = Utf8               ()J\n+  #236 = Utf8               append\n+  #237 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #238 = Utf8               (J)Ljava/lang/StringBuilder;\n+  #239 = Utf8               toString\n+  #240 = Utf8               ()Ljava/lang/String;\n+  #241 = Utf8               java/nio/charset/StandardCharsets\n+  #242 = Utf8               US_ASCII\n+  #243 = Utf8               Ljava/nio/charset/Charset;\n+  #244 = Utf8               getBytes\n+  #245 = Utf8               (Ljava/nio/charset/Charset;)[B\n+  #246 = Utf8               getName\n+  #247 = Utf8               length\n+  #248 = Utf8               ()I\n+  #249 = Utf8               contains\n+  #250 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #251 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #252 = Utf8               getLastModified\n+  #253 = Utf8               getUserId\n+  #254 = Utf8               getGroupId\n+  #255 = Utf8               getMode\n+  #256 = Utf8               java/lang/Integer\n+  #257 = Utf8               (II)Ljava/lang/String;\n+  #258 = Utf8               valueOf\n+  #259 = Utf8               (J)Ljava/lang/String;\n+  #260 = Utf8               count\n+  #261 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n+  #262 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n {\n   public static final int LONGFILE_ERROR = 0;\n     descriptor: I\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 0\n \n   public static final int LONGFILE_BSD = 1;\n@@ -877,14 +874,16 @@\n         line 174: 331\n         line 175: 360\n         line 176: 370\n         line 178: 380\n         line 180: 389\n         line 181: 400\n         line 182: 401\n+        line 183: 404\n+        line 182: 417\n         line 184: 422\n         line 185: 432\n         line 187: 442\n         line 189: 451\n         line 191: 462\n         line 193: 471\n         line 194: 476\n"}]}
