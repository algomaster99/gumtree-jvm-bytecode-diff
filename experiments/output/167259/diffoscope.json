{"diffoscope-json-version": 1, "source1": "first/Charsets.class", "source2": "second/Charsets.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,41 +1,41 @@\n-  SHA-256 checksum e2fc3bdbdeb221571d7dcabcae6cab70c4b30415cb58fd9bf91e6d410394283f\n+  SHA-256 checksum 950a4eba929341e1e47987eeae6a4ae8227bf6b6ce1ad9a4216b150f1892bdc1\n   Compiled from \"Charsets.java\"\n public class org.apache.commons.io.Charsets\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #23                         // org/apache/commons/io/Charsets\n   super_class: #24                        // java/lang/Object\n   interfaces: 0, fields: 7, methods: 5, attributes: 1\n Constant pool:\n     #1 = Methodref          #24.#64       // java/lang/Object.\"<init>\":()V\n     #2 = Fieldref           #23.#65       // org/apache/commons/io/Charsets.STANDARD_CHARSET_MAP:Ljava/util/SortedMap;\n-    #3 = Methodref          #66.#67       // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-    #4 = Methodref          #66.#68       // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-    #5 = Class              #69           // java/util/TreeMap\n-    #6 = Fieldref           #70.#71       // java/lang/String.CASE_INSENSITIVE_ORDER:Ljava/util/Comparator;\n-    #7 = Methodref          #5.#72        // java/util/TreeMap.\"<init>\":(Ljava/util/Comparator;)V\n-    #8 = Fieldref           #73.#74       // java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;\n-    #9 = Methodref          #66.#75       // java/nio/charset/Charset.name:()Ljava/lang/String;\n-   #10 = InterfaceMethodref #76.#77       // java/util/SortedMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #11 = Fieldref           #73.#78       // java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;\n-   #12 = Fieldref           #73.#79       // java/nio/charset/StandardCharsets.UTF_16:Ljava/nio/charset/Charset;\n-   #13 = Fieldref           #73.#80       // java/nio/charset/StandardCharsets.UTF_16BE:Ljava/nio/charset/Charset;\n-   #14 = Fieldref           #73.#81       // java/nio/charset/StandardCharsets.UTF_16LE:Ljava/nio/charset/Charset;\n-   #15 = Fieldref           #73.#82       // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-   #16 = Methodref          #83.#84       // java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n-   #17 = Fieldref           #23.#74       // org/apache/commons/io/Charsets.ISO_8859_1:Ljava/nio/charset/Charset;\n-   #18 = Fieldref           #23.#78       // org/apache/commons/io/Charsets.US_ASCII:Ljava/nio/charset/Charset;\n-   #19 = Fieldref           #23.#79       // org/apache/commons/io/Charsets.UTF_16:Ljava/nio/charset/Charset;\n-   #20 = Fieldref           #23.#80       // org/apache/commons/io/Charsets.UTF_16BE:Ljava/nio/charset/Charset;\n-   #21 = Fieldref           #23.#81       // org/apache/commons/io/Charsets.UTF_16LE:Ljava/nio/charset/Charset;\n-   #22 = Fieldref           #23.#82       // org/apache/commons/io/Charsets.UTF_8:Ljava/nio/charset/Charset;\n-   #23 = Class              #85           // org/apache/commons/io/Charsets\n-   #24 = Class              #86           // java/lang/Object\n+    #3 = Methodref          #53.#66       // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+    #4 = Methodref          #53.#67       // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+    #5 = Class              #68           // java/util/TreeMap\n+    #6 = Fieldref           #69.#70       // java/lang/String.CASE_INSENSITIVE_ORDER:Ljava/util/Comparator;\n+    #7 = Methodref          #5.#71        // java/util/TreeMap.\"<init>\":(Ljava/util/Comparator;)V\n+    #8 = Fieldref           #72.#73       // java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;\n+    #9 = Methodref          #53.#74       // java/nio/charset/Charset.name:()Ljava/lang/String;\n+   #10 = InterfaceMethodref #75.#76       // java/util/SortedMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #11 = Fieldref           #72.#77       // java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;\n+   #12 = Fieldref           #72.#78       // java/nio/charset/StandardCharsets.UTF_16:Ljava/nio/charset/Charset;\n+   #13 = Fieldref           #72.#79       // java/nio/charset/StandardCharsets.UTF_16BE:Ljava/nio/charset/Charset;\n+   #14 = Fieldref           #72.#80       // java/nio/charset/StandardCharsets.UTF_16LE:Ljava/nio/charset/Charset;\n+   #15 = Fieldref           #72.#81       // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+   #16 = Methodref          #82.#83       // java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n+   #17 = Fieldref           #23.#73       // org/apache/commons/io/Charsets.ISO_8859_1:Ljava/nio/charset/Charset;\n+   #18 = Fieldref           #23.#77       // org/apache/commons/io/Charsets.US_ASCII:Ljava/nio/charset/Charset;\n+   #19 = Fieldref           #23.#78       // org/apache/commons/io/Charsets.UTF_16:Ljava/nio/charset/Charset;\n+   #20 = Fieldref           #23.#79       // org/apache/commons/io/Charsets.UTF_16BE:Ljava/nio/charset/Charset;\n+   #21 = Fieldref           #23.#80       // org/apache/commons/io/Charsets.UTF_16LE:Ljava/nio/charset/Charset;\n+   #22 = Fieldref           #23.#81       // org/apache/commons/io/Charsets.UTF_8:Ljava/nio/charset/Charset;\n+   #23 = Class              #84           // org/apache/commons/io/Charsets\n+   #24 = Class              #85           // java/lang/Object\n    #25 = Utf8               STANDARD_CHARSET_MAP\n    #26 = Utf8               Ljava/util/SortedMap;\n    #27 = Utf8               Signature\n    #28 = Utf8               Ljava/util/SortedMap<Ljava/lang/String;Ljava/nio/charset/Charset;>;\n    #29 = Utf8               ISO_8859_1\n    #30 = Utf8               Ljava/nio/charset/Charset;\n    #31 = Utf8               Deprecated\n@@ -56,66 +56,65 @@\n    #46 = Utf8               requiredCharsets\n    #47 = Utf8               ()Ljava/util/SortedMap;\n    #48 = Utf8               ()Ljava/util/SortedMap<Ljava/lang/String;Ljava/nio/charset/Charset;>;\n    #49 = Utf8               toCharset\n    #50 = Utf8               (Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n    #51 = Utf8               charset\n    #52 = Utf8               StackMapTable\n-   #53 = Class              #87           // java/nio/charset/Charset\n+   #53 = Class              #86           // java/nio/charset/Charset\n    #54 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n    #55 = Utf8               charsetName\n    #56 = Utf8               Ljava/lang/String;\n    #57 = Utf8               Exceptions\n-   #58 = Class              #88           // java/nio/charset/UnsupportedCharsetException\n+   #58 = Class              #87           // java/nio/charset/UnsupportedCharsetException\n    #59 = Utf8               <clinit>\n    #60 = Utf8               standardCharsetMap\n    #61 = Utf8               LocalVariableTypeTable\n    #62 = Utf8               SourceFile\n    #63 = Utf8               Charsets.java\n    #64 = NameAndType        #39:#40       // \"<init>\":()V\n    #65 = NameAndType        #25:#26       // STANDARD_CHARSET_MAP:Ljava/util/SortedMap;\n-   #66 = Class              #87           // java/nio/charset/Charset\n-   #67 = NameAndType        #89:#90       // defaultCharset:()Ljava/nio/charset/Charset;\n-   #68 = NameAndType        #91:#54       // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-   #69 = Utf8               java/util/TreeMap\n-   #70 = Class              #92           // java/lang/String\n-   #71 = NameAndType        #93:#94       // CASE_INSENSITIVE_ORDER:Ljava/util/Comparator;\n-   #72 = NameAndType        #39:#95       // \"<init>\":(Ljava/util/Comparator;)V\n-   #73 = Class              #96           // java/nio/charset/StandardCharsets\n-   #74 = NameAndType        #29:#30       // ISO_8859_1:Ljava/nio/charset/Charset;\n-   #75 = NameAndType        #97:#98       // name:()Ljava/lang/String;\n-   #76 = Class              #99           // java/util/SortedMap\n-   #77 = NameAndType        #100:#101     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #78 = NameAndType        #34:#30       // US_ASCII:Ljava/nio/charset/Charset;\n-   #79 = NameAndType        #35:#30       // UTF_16:Ljava/nio/charset/Charset;\n-   #80 = NameAndType        #36:#30       // UTF_16BE:Ljava/nio/charset/Charset;\n-   #81 = NameAndType        #37:#30       // UTF_16LE:Ljava/nio/charset/Charset;\n-   #82 = NameAndType        #38:#30       // UTF_8:Ljava/nio/charset/Charset;\n-   #83 = Class              #102          // java/util/Collections\n-   #84 = NameAndType        #103:#104     // unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n-   #85 = Utf8               org/apache/commons/io/Charsets\n-   #86 = Utf8               java/lang/Object\n-   #87 = Utf8               java/nio/charset/Charset\n-   #88 = Utf8               java/nio/charset/UnsupportedCharsetException\n-   #89 = Utf8               defaultCharset\n-   #90 = Utf8               ()Ljava/nio/charset/Charset;\n-   #91 = Utf8               forName\n-   #92 = Utf8               java/lang/String\n-   #93 = Utf8               CASE_INSENSITIVE_ORDER\n-   #94 = Utf8               Ljava/util/Comparator;\n-   #95 = Utf8               (Ljava/util/Comparator;)V\n-   #96 = Utf8               java/nio/charset/StandardCharsets\n-   #97 = Utf8               name\n-   #98 = Utf8               ()Ljava/lang/String;\n-   #99 = Utf8               java/util/SortedMap\n-  #100 = Utf8               put\n-  #101 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #102 = Utf8               java/util/Collections\n-  #103 = Utf8               unmodifiableSortedMap\n-  #104 = Utf8               (Ljava/util/SortedMap;)Ljava/util/SortedMap;\n+   #66 = NameAndType        #88:#89       // defaultCharset:()Ljava/nio/charset/Charset;\n+   #67 = NameAndType        #90:#54       // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #68 = Utf8               java/util/TreeMap\n+   #69 = Class              #91           // java/lang/String\n+   #70 = NameAndType        #92:#93       // CASE_INSENSITIVE_ORDER:Ljava/util/Comparator;\n+   #71 = NameAndType        #39:#94       // \"<init>\":(Ljava/util/Comparator;)V\n+   #72 = Class              #95           // java/nio/charset/StandardCharsets\n+   #73 = NameAndType        #29:#30       // ISO_8859_1:Ljava/nio/charset/Charset;\n+   #74 = NameAndType        #96:#97       // name:()Ljava/lang/String;\n+   #75 = Class              #98           // java/util/SortedMap\n+   #76 = NameAndType        #99:#100      // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #77 = NameAndType        #34:#30       // US_ASCII:Ljava/nio/charset/Charset;\n+   #78 = NameAndType        #35:#30       // UTF_16:Ljava/nio/charset/Charset;\n+   #79 = NameAndType        #36:#30       // UTF_16BE:Ljava/nio/charset/Charset;\n+   #80 = NameAndType        #37:#30       // UTF_16LE:Ljava/nio/charset/Charset;\n+   #81 = NameAndType        #38:#30       // UTF_8:Ljava/nio/charset/Charset;\n+   #82 = Class              #101          // java/util/Collections\n+   #83 = NameAndType        #102:#103     // unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n+   #84 = Utf8               org/apache/commons/io/Charsets\n+   #85 = Utf8               java/lang/Object\n+   #86 = Utf8               java/nio/charset/Charset\n+   #87 = Utf8               java/nio/charset/UnsupportedCharsetException\n+   #88 = Utf8               defaultCharset\n+   #89 = Utf8               ()Ljava/nio/charset/Charset;\n+   #90 = Utf8               forName\n+   #91 = Utf8               java/lang/String\n+   #92 = Utf8               CASE_INSENSITIVE_ORDER\n+   #93 = Utf8               Ljava/util/Comparator;\n+   #94 = Utf8               (Ljava/util/Comparator;)V\n+   #95 = Utf8               java/nio/charset/StandardCharsets\n+   #96 = Utf8               name\n+   #97 = Utf8               ()Ljava/lang/String;\n+   #98 = Utf8               java/util/SortedMap\n+   #99 = Utf8               put\n+  #100 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #101 = Utf8               java/util/Collections\n+  #102 = Utf8               unmodifiableSortedMap\n+  #103 = Utf8               (Ljava/util/SortedMap;)Ljava/util/SortedMap;\n {\n   private static final java.util.SortedMap<java.lang.String, java.nio.charset.Charset> STANDARD_CHARSET_MAP;\n     descriptor: Ljava/util/SortedMap;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     Signature: #28                          // Ljava/util/SortedMap<Ljava/lang/String;Ljava/nio/charset/Charset;>;\n \n   public static final java.nio.charset.Charset ISO_8859_1;\n"}]}
