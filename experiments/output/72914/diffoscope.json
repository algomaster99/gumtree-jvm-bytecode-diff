{"diffoscope-json-version": 1, "source1": "first/ArchiveOutputStream.class", "source2": "second/ArchiveOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,89 +1,89 @@\n-  SHA-256 checksum d4c1d88a92d4451b6e30491d6357cd90780358629edce779e724708a341f43e1\n+  SHA-256 checksum 980b76bc1416cab3222b372a67ad88ab95abb32dfd41e978a469d4108a0aa997\n   Compiled from \"ArchiveOutputStream.java\"\n public abstract class org.apache.commons.compress.archivers.ArchiveOutputStream extends java.io.OutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #8                          // org/apache/commons/compress/archivers/ArchiveOutputStream\n-  super_class: #2                         // java/io/OutputStream\n+  this_class: #1                          // org/apache/commons/compress/archivers/ArchiveOutputStream\n+  super_class: #3                         // java/io/OutputStream\n   interfaces: 0, fields: 3, methods: 12, attributes: 1\n Constant pool:\n-   #1 = Methodref          #2.#3          // java/io/OutputStream.\"<init>\":()V\n-   #2 = Class              #4             // java/io/OutputStream\n-   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #1 = Class              #2             // org/apache/commons/compress/archivers/ArchiveOutputStream\n+   #2 = Utf8               org/apache/commons/compress/archivers/ArchiveOutputStream\n+   #3 = Class              #4             // java/io/OutputStream\n    #4 = Utf8               java/io/OutputStream\n-   #5 = Utf8               <init>\n-   #6 = Utf8               ()V\n-   #7 = Fieldref           #8.#9          // org/apache/commons/compress/archivers/ArchiveOutputStream.oneByte:[B\n-   #8 = Class              #10            // org/apache/commons/compress/archivers/ArchiveOutputStream\n-   #9 = NameAndType        #11:#12        // oneByte:[B\n-  #10 = Utf8               org/apache/commons/compress/archivers/ArchiveOutputStream\n-  #11 = Utf8               oneByte\n-  #12 = Utf8               [B\n-  #13 = Methodref          #8.#14         // org/apache/commons/compress/archivers/ArchiveOutputStream.count:(J)V\n-  #14 = NameAndType        #15:#16        // count:(J)V\n-  #15 = Utf8               count\n-  #16 = Utf8               (J)V\n-  #17 = Long               -1l\n-  #19 = Fieldref           #8.#20         // org/apache/commons/compress/archivers/ArchiveOutputStream.bytesWritten:J\n-  #20 = NameAndType        #21:#22        // bytesWritten:J\n-  #21 = Utf8               bytesWritten\n-  #22 = Utf8               J\n-  #23 = InterfaceMethodref #24.#25        // java/nio/file/Path.toFile:()Ljava/io/File;\n-  #24 = Class              #26            // java/nio/file/Path\n-  #25 = NameAndType        #27:#28        // toFile:()Ljava/io/File;\n-  #26 = Utf8               java/nio/file/Path\n-  #27 = Utf8               toFile\n-  #28 = Utf8               ()Ljava/io/File;\n-  #29 = Methodref          #8.#30         // org/apache/commons/compress/archivers/ArchiveOutputStream.createArchiveEntry:(Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;\n-  #30 = NameAndType        #31:#32        // createArchiveEntry:(Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;\n-  #31 = Utf8               createArchiveEntry\n-  #32 = Utf8               (Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;\n-  #33 = Methodref          #8.#34         // org/apache/commons/compress/archivers/ArchiveOutputStream.write:([BII)V\n-  #34 = NameAndType        #35:#36        // write:([BII)V\n-  #35 = Utf8               write\n-  #36 = Utf8               ([BII)V\n-  #37 = Utf8               BYTE_MASK\n-  #38 = Utf8               I\n-  #39 = Utf8               ConstantValue\n-  #40 = Integer            255\n-  #41 = Utf8               Code\n-  #42 = Utf8               LineNumberTable\n-  #43 = Utf8               LocalVariableTable\n-  #44 = Utf8               this\n-  #45 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n-  #46 = Utf8               canWriteEntryData\n-  #47 = Utf8               (Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z\n-  #48 = Utf8               archiveEntry\n-  #49 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveEntry;\n-  #50 = Utf8               closeArchiveEntry\n-  #51 = Utf8               Exceptions\n-  #52 = Class              #53            // java/io/IOException\n-  #53 = Utf8               java/io/IOException\n-  #54 = Utf8               (I)V\n-  #55 = Utf8               written\n-  #56 = Utf8               StackMapTable\n-  #57 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Lorg/apache/commons/compress/archivers/ArchiveEntry;\n-  #58 = Utf8               inputPath\n-  #59 = Utf8               Ljava/nio/file/Path;\n-  #60 = Utf8               entryName\n-  #61 = Utf8               Ljava/lang/String;\n-  #62 = Utf8               options\n-  #63 = Utf8               [Ljava/nio/file/LinkOption;\n-  #64 = Utf8               finish\n-  #65 = Utf8               getBytesWritten\n-  #66 = Utf8               ()J\n-  #67 = Utf8               getCount\n-  #68 = Utf8               ()I\n-  #69 = Utf8               Deprecated\n-  #70 = Utf8               RuntimeVisibleAnnotations\n-  #71 = Utf8               Ljava/lang/Deprecated;\n-  #72 = Utf8               putArchiveEntry\n-  #73 = Utf8               (Lorg/apache/commons/compress/archivers/ArchiveEntry;)V\n+   #5 = Utf8               BYTE_MASK\n+   #6 = Utf8               I\n+   #7 = Utf8               ConstantValue\n+   #8 = Integer            255\n+   #9 = Utf8               oneByte\n+  #10 = Utf8               [B\n+  #11 = Utf8               bytesWritten\n+  #12 = Utf8               J\n+  #13 = Utf8               <init>\n+  #14 = Utf8               ()V\n+  #15 = Utf8               Code\n+  #16 = Methodref          #3.#17         // java/io/OutputStream.\"<init>\":()V\n+  #17 = NameAndType        #13:#14        // \"<init>\":()V\n+  #18 = Fieldref           #1.#19         // org/apache/commons/compress/archivers/ArchiveOutputStream.oneByte:[B\n+  #19 = NameAndType        #9:#10         // oneByte:[B\n+  #20 = Utf8               LineNumberTable\n+  #21 = Utf8               LocalVariableTable\n+  #22 = Utf8               this\n+  #23 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n+  #24 = Utf8               canWriteEntryData\n+  #25 = Utf8               (Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z\n+  #26 = Utf8               archiveEntry\n+  #27 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveEntry;\n+  #28 = Utf8               closeArchiveEntry\n+  #29 = Utf8               Exceptions\n+  #30 = Class              #31            // java/io/IOException\n+  #31 = Utf8               java/io/IOException\n+  #32 = Utf8               count\n+  #33 = Utf8               (I)V\n+  #34 = Methodref          #1.#35         // org/apache/commons/compress/archivers/ArchiveOutputStream.count:(J)V\n+  #35 = NameAndType        #32:#36        // count:(J)V\n+  #36 = Utf8               (J)V\n+  #37 = Utf8               written\n+  #38 = Long               -1l\n+  #40 = Fieldref           #1.#41         // org/apache/commons/compress/archivers/ArchiveOutputStream.bytesWritten:J\n+  #41 = NameAndType        #11:#12        // bytesWritten:J\n+  #42 = Utf8               StackMapTable\n+  #43 = Utf8               createArchiveEntry\n+  #44 = Utf8               (Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;\n+  #45 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Lorg/apache/commons/compress/archivers/ArchiveEntry;\n+  #46 = InterfaceMethodref #47.#49        // java/nio/file/Path.toFile:()Ljava/io/File;\n+  #47 = Class              #48            // java/nio/file/Path\n+  #48 = Utf8               java/nio/file/Path\n+  #49 = NameAndType        #50:#51        // toFile:()Ljava/io/File;\n+  #50 = Utf8               toFile\n+  #51 = Utf8               ()Ljava/io/File;\n+  #52 = Methodref          #1.#53         // org/apache/commons/compress/archivers/ArchiveOutputStream.createArchiveEntry:(Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;\n+  #53 = NameAndType        #43:#44        // createArchiveEntry:(Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;\n+  #54 = Utf8               inputPath\n+  #55 = Utf8               Ljava/nio/file/Path;\n+  #56 = Utf8               entryName\n+  #57 = Utf8               Ljava/lang/String;\n+  #58 = Utf8               options\n+  #59 = Utf8               [Ljava/nio/file/LinkOption;\n+  #60 = Utf8               finish\n+  #61 = Utf8               getBytesWritten\n+  #62 = Utf8               ()J\n+  #63 = Utf8               getCount\n+  #64 = Utf8               ()I\n+  #65 = Utf8               Deprecated\n+  #66 = Utf8               RuntimeVisibleAnnotations\n+  #67 = Utf8               Ljava/lang/Deprecated;\n+  #68 = Utf8               putArchiveEntry\n+  #69 = Utf8               (Lorg/apache/commons/compress/archivers/ArchiveEntry;)V\n+  #70 = Utf8               write\n+  #71 = Methodref          #1.#72         // org/apache/commons/compress/archivers/ArchiveOutputStream.write:([BII)V\n+  #72 = NameAndType        #70:#73        // write:([BII)V\n+  #73 = Utf8               ([BII)V\n   #74 = Utf8               b\n   #75 = Utf8               SourceFile\n   #76 = Utf8               ArchiveOutputStream.java\n {\n   static final int BYTE_MASK = 255;\n     descriptor: I\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n@@ -99,23 +99,24 @@\n \n   public org.apache.commons.compress.archivers.ArchiveOutputStream();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method java/io/OutputStream.\"<init>\":()V\n+         1: invokespecial #16                 // Method java/io/OutputStream.\"<init>\":()V\n          4: aload_0\n          5: iconst_1\n          6: newarray       byte\n-         8: putfield      #7                  // Field oneByte:[B\n+         8: putfield      #18                 // Field oneByte:[B\n         11: return\n       LineNumberTable:\n         line 49: 0\n         line 53: 4\n+        line 49: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n \n   public boolean canWriteEntryData(org.apache.commons.compress.archivers.ArchiveEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z\n     flags: (0x0001) ACC_PUBLIC\n@@ -140,15 +141,15 @@\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: i2l\n-         3: invokevirtual #13                 // Method count:(J)V\n+         3: invokevirtual #34                 // Method count:(J)V\n          6: return\n       LineNumberTable:\n         line 88: 0\n         line 89: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n@@ -156,23 +157,23 @@\n \n   protected void count(long);\n     descriptor: (J)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=5, locals=3, args_size=2\n          0: lload_1\n-         1: ldc2_w        #17                 // long -1l\n+         1: ldc2_w        #38                 // long -1l\n          4: lcmp\n          5: ifeq          18\n          8: aload_0\n-         9: aload_0\n-        10: getfield      #19                 // Field bytesWritten:J\n+         9: dup\n+        10: getfield      #40                 // Field bytesWritten:J\n         13: lload_1\n         14: ladd\n-        15: putfield      #19                 // Field bytesWritten:J\n+        15: putfield      #40                 // Field bytesWritten:J\n         18: return\n       LineNumberTable:\n         line 99: 0\n         line 100: 8\n         line 102: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -186,103 +187,103 @@\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.io.IOException\n \n   public org.apache.commons.compress.archivers.ArchiveEntry createArchiveEntry(java.nio.file.Path, java.lang.String, java.nio.file.LinkOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Lorg/apache/commons/compress/archivers/ArchiveEntry;\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n-         2: invokeinterface #23,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;\n+         2: invokeinterface #46,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;\n          7: aload_2\n-         8: invokevirtual #29                 // Method createArchiveEntry:(Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;\n+         8: invokevirtual #52                 // Method createArchiveEntry:(Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;\n         11: areturn\n       LineNumberTable:\n         line 134: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n             0      12     1 inputPath   Ljava/nio/file/Path;\n             0      12     2 entryName   Ljava/lang/String;\n             0      12     3 options   [Ljava/nio/file/LinkOption;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public abstract void finish() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.io.IOException\n \n   public long getBytesWritten();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #19                 // Field bytesWritten:J\n+         1: getfield      #40                 // Field bytesWritten:J\n          4: lreturn\n       LineNumberTable:\n         line 151: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n \n   public int getCount();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Deprecated: true\n+    RuntimeVisibleAnnotations:\n+      0: #67()\n+        java.lang.Deprecated\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #19                 // Field bytesWritten:J\n+         1: getfield      #40                 // Field bytesWritten:J\n          4: l2i\n          5: ireturn\n       LineNumberTable:\n         line 162: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n-    Deprecated: true\n-    RuntimeVisibleAnnotations:\n-      0: #71()\n-        java.lang.Deprecated\n \n   public abstract void putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/archivers/ArchiveEntry;)V\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.io.IOException\n \n   public void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #7                  // Field oneByte:[B\n+         1: getfield      #18                 // Field oneByte:[B\n          4: iconst_0\n          5: iload_1\n          6: sipush        255\n          9: iand\n         10: i2b\n         11: bastore\n         12: aload_0\n         13: aload_0\n-        14: getfield      #7                  // Field oneByte:[B\n+        14: getfield      #18                 // Field oneByte:[B\n         17: iconst_0\n         18: iconst_1\n-        19: invokevirtual #33                 // Method write:([BII)V\n+        19: invokevirtual #71                 // Method write:([BII)V\n         22: return\n       LineNumberTable:\n         line 188: 0\n         line 189: 12\n         line 190: 22\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      23     0  this   Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n             0      23     1     b   I\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"ArchiveOutputStream.java\"\n"}]}
