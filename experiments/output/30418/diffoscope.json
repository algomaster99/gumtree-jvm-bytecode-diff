{"diffoscope-json-version": 1, "source1": "first/PerformanceTest.class", "source2": "second/PerformanceTest.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,294 +1,294 @@\n-  SHA-256 checksum 8aa395f8b4fed1fc6858e62dce5e7b842608686d9ce39accdeda151f718519f2\n+  SHA-256 checksum 02a08283ec5f6fdbd91877457dc60853b93e08232dc2fd047f2b1c67081e97de\n   Compiled from \"PerformanceTest.java\"\n public class org.apache.commons.csv.perf.PerformanceTest\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #20                         // org/apache/commons/csv/perf/PerformanceTest\n-  super_class: #7                         // java/lang/Object\n+  this_class: #8                          // org/apache/commons/csv/perf/PerformanceTest\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 3, methods: 10, attributes: 2\n Constant pool:\n-    #1 = Methodref          #7.#140       // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #20.#141      // org/apache/commons/csv/perf/PerformanceTest.max:I\n-    #3 = Fieldref           #20.#142      // org/apache/commons/csv/perf/PerformanceTest.BIG_FILE:Ljava/io/File;\n-    #4 = Methodref          #66.#143      // java/io/File.exists:()Z\n-    #5 = Fieldref           #144.#145     // java/lang/System.out:Ljava/io/PrintStream;\n-    #6 = String             #146          // Found test fixture %s: %,d bytes.\n-    #7 = Class              #147          // java/lang/Object\n-    #8 = Methodref          #66.#148      // java/io/File.length:()J\n-    #9 = Methodref          #56.#149      // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n-   #10 = Methodref          #47.#150      // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #11 = Methodref          #151.#152     // java/io/PrintStream.println:(Ljava/lang/String;)V\n-   #12 = Class              #153          // java/lang/StringBuilder\n-   #13 = Methodref          #12.#140      // java/lang/StringBuilder.\"<init>\":()V\n-   #14 = String             #154          // Decompressing test fixture to:\n-   #15 = Methodref          #12.#155      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #16 = Methodref          #12.#156      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #17 = String             #157          // ...\n-   #18 = Methodref          #12.#158      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #19 = Class              #159          // java/util/zip/GZIPInputStream\n-   #20 = Class              #160          // org/apache/commons/csv/perf/PerformanceTest\n-   #21 = Methodref          #161.#162     // java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;\n-   #22 = String             #163          // org/apache/commons/csv/perf/worldcitiespop.txt.gz\n-   #23 = Methodref          #164.#165     // java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n-   #24 = Methodref          #19.#166      // java/util/zip/GZIPInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #25 = Class              #167          // java/io/FileOutputStream\n-   #26 = Methodref          #25.#168      // java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n-   #27 = Methodref          #169.#170     // org/apache/commons/io/IOUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)I\n-   #28 = String             #171          // Decompressed test fixture %s: %,d bytes.\n-   #29 = Methodref          #93.#172      // java/io/OutputStream.close:()V\n-   #30 = Class              #173          // java/lang/Throwable\n-   #31 = Methodref          #30.#174      // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-   #32 = Methodref          #92.#172      // java/io/InputStream.close:()V\n-   #33 = Class              #175          // java/io/BufferedReader\n-   #34 = Class              #176          // java/io/FileReader\n-   #35 = Methodref          #34.#168      // java/io/FileReader.\"<init>\":(Ljava/io/File;)V\n-   #36 = Methodref          #33.#177      // java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n-   #37 = Fieldref           #116.#178     // org/apache/commons/csv/CSVFormat.DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-   #38 = Methodref          #116.#179     // org/apache/commons/csv/CSVFormat.builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-   #39 = Methodref          #180.#181     // org/apache/commons/csv/CSVFormat$Builder.setIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-   #40 = Methodref          #180.#182     // org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n-   #41 = Methodref          #116.#183     // org/apache/commons/csv/CSVFormat.parse:(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n-   #42 = Methodref          #117.#184     // org/apache/commons/csv/CSVParser.iterator:()Ljava/util/Iterator;\n-   #43 = InterfaceMethodref #118.#185     // java/util/Iterator.hasNext:()Z\n-   #44 = InterfaceMethodref #118.#186     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #45 = Class              #187          // org/apache/commons/csv/CSVRecord\n-   #46 = Methodref          #45.#184      // org/apache/commons/csv/CSVRecord.iterator:()Ljava/util/Iterator;\n-   #47 = Class              #188          // java/lang/String\n-   #48 = Methodref          #117.#172     // org/apache/commons/csv/CSVParser.close:()V\n-   #49 = Methodref          #33.#189      // java/io/BufferedReader.readLine:()Ljava/lang/String;\n-   #50 = Methodref          #144.#190     // java/lang/System.currentTimeMillis:()J\n-   #51 = Methodref          #20.#191      // org/apache/commons/csv/perf/PerformanceTest.createBufferedReader:()Ljava/io/BufferedReader;\n-   #52 = Methodref          #20.#192      // org/apache/commons/csv/perf/PerformanceTest.parse:(Ljava/io/Reader;Z)J\n-   #53 = String             #193          // File parsed in %,d milliseconds with Commons CSV: %,d lines.\n-   #54 = Methodref          #20.#152      // org/apache/commons/csv/perf/PerformanceTest.println:(Ljava/lang/String;)V\n-   #55 = Methodref          #33.#172      // java/io/BufferedReader.close:()V\n-   #56 = Class              #194          // java/lang/Long\n-   #57 = Long               9223372036854775807l\n-   #59 = Methodref          #195.#196     // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #60 = Methodref          #20.#197      // org/apache/commons/csv/perf/PerformanceTest.testParseBigFile:(Z)J\n-   #61 = Methodref          #198.#199     // java/lang/Math.min:(JJ)J\n-   #62 = String             #200          // Best time out of %,d is %,d milliseconds.\n-   #63 = Methodref          #201.#202     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #64 = Methodref          #20.#203      // org/apache/commons/csv/perf/PerformanceTest.readAll:(Ljava/io/BufferedReader;)J\n-   #65 = String             #204          // File read in %,d milliseconds: %,d lines.\n-   #66 = Class              #205          // java/io/File\n-   #67 = String             #206          // java.io.tmpdir\n-   #68 = Methodref          #144.#207     // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-   #69 = String             #208          // worldcitiespop.txt\n-   #70 = Methodref          #66.#209      // java/io/File.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n-   #71 = Utf8               TEST_RESRC\n-   #72 = Utf8               Ljava/lang/String;\n-   #73 = Utf8               ConstantValue\n-   #74 = Utf8               BIG_FILE\n-   #75 = Utf8               Ljava/io/File;\n-   #76 = Utf8               max\n-   #77 = Utf8               I\n-   #78 = Integer            10\n-   #79 = Utf8               <init>\n-   #80 = Utf8               ()V\n-   #81 = Utf8               Code\n-   #82 = Utf8               LineNumberTable\n-   #83 = Utf8               LocalVariableTable\n-   #84 = Utf8               this\n-   #85 = Utf8               Lorg/apache/commons/csv/perf/PerformanceTest;\n-   #86 = Utf8               setUpClass\n-   #87 = Utf8               output\n-   #88 = Utf8               Ljava/io/OutputStream;\n-   #89 = Utf8               input\n-   #90 = Utf8               Ljava/io/InputStream;\n-   #91 = Utf8               StackMapTable\n-   #92 = Class              #210          // java/io/InputStream\n-   #93 = Class              #211          // java/io/OutputStream\n-   #94 = Utf8               Exceptions\n-   #95 = Class              #212          // java/io/FileNotFoundException\n-   #96 = Class              #213          // java/io/IOException\n-   #97 = Utf8               RuntimeVisibleAnnotations\n-   #98 = Utf8               Lorg/junit/jupiter/api/BeforeAll;\n-   #99 = Utf8               createBufferedReader\n-  #100 = Utf8               ()Ljava/io/BufferedReader;\n-  #101 = Utf8               parse\n-  #102 = Utf8               (Ljava/io/Reader;Z)J\n-  #103 = Utf8               record\n-  #104 = Utf8               Lorg/apache/commons/csv/CSVRecord;\n-  #105 = Utf8               parser\n-  #106 = Utf8               Lorg/apache/commons/csv/CSVParser;\n-  #107 = Utf8               reader\n-  #108 = Utf8               Ljava/io/Reader;\n-  #109 = Utf8               traverseColumns\n-  #110 = Utf8               Z\n-  #111 = Utf8               format\n-  #112 = Utf8               Lorg/apache/commons/csv/CSVFormat;\n-  #113 = Utf8               recordCount\n-  #114 = Utf8               J\n-  #115 = Class              #214          // java/io/Reader\n-  #116 = Class              #215          // org/apache/commons/csv/CSVFormat\n-  #117 = Class              #216          // org/apache/commons/csv/CSVParser\n-  #118 = Class              #217          // java/util/Iterator\n-  #119 = Utf8               println\n-  #120 = Utf8               (Ljava/lang/String;)V\n-  #121 = Utf8               s\n-  #122 = Utf8               readAll\n-  #123 = Utf8               (Ljava/io/BufferedReader;)J\n-  #124 = Utf8               in\n-  #125 = Utf8               Ljava/io/BufferedReader;\n-  #126 = Utf8               count\n-  #127 = Utf8               testParseBigFile\n-  #128 = Utf8               (Z)J\n-  #129 = Utf8               totalMillis\n-  #130 = Utf8               startMillis\n-  #131 = Class              #218          // java/lang/Exception\n-  #132 = Utf8               testParseBigFileRepeat\n-  #133 = Utf8               i\n-  #134 = Utf8               bestTime\n-  #135 = Utf8               Lorg/junit/jupiter/api/Test;\n-  #136 = Utf8               testReadBigFile\n-  #137 = Utf8               <clinit>\n-  #138 = Utf8               SourceFile\n-  #139 = Utf8               PerformanceTest.java\n-  #140 = NameAndType        #79:#80       // \"<init>\":()V\n-  #141 = NameAndType        #76:#77       // max:I\n-  #142 = NameAndType        #74:#75       // BIG_FILE:Ljava/io/File;\n-  #143 = NameAndType        #219:#220     // exists:()Z\n-  #144 = Class              #221          // java/lang/System\n-  #145 = NameAndType        #222:#223     // out:Ljava/io/PrintStream;\n-  #146 = Utf8               Found test fixture %s: %,d bytes.\n-  #147 = Utf8               java/lang/Object\n-  #148 = NameAndType        #224:#225     // length:()J\n-  #149 = NameAndType        #226:#227     // valueOf:(J)Ljava/lang/Long;\n-  #150 = NameAndType        #111:#228     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #151 = Class              #229          // java/io/PrintStream\n-  #152 = NameAndType        #119:#120     // println:(Ljava/lang/String;)V\n-  #153 = Utf8               java/lang/StringBuilder\n-  #154 = Utf8               Decompressing test fixture to:\n-  #155 = NameAndType        #230:#231     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #156 = NameAndType        #230:#232     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #157 = Utf8               ...\n-  #158 = NameAndType        #233:#234     // toString:()Ljava/lang/String;\n-  #159 = Utf8               java/util/zip/GZIPInputStream\n-  #160 = Utf8               org/apache/commons/csv/perf/PerformanceTest\n-  #161 = Class              #235          // java/lang/Class\n-  #162 = NameAndType        #236:#237     // getClassLoader:()Ljava/lang/ClassLoader;\n-  #163 = Utf8               org/apache/commons/csv/perf/worldcitiespop.txt.gz\n-  #164 = Class              #238          // java/lang/ClassLoader\n-  #165 = NameAndType        #239:#240     // getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n-  #166 = NameAndType        #79:#241      // \"<init>\":(Ljava/io/InputStream;)V\n-  #167 = Utf8               java/io/FileOutputStream\n-  #168 = NameAndType        #79:#242      // \"<init>\":(Ljava/io/File;)V\n-  #169 = Class              #243          // org/apache/commons/io/IOUtils\n-  #170 = NameAndType        #244:#245     // copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)I\n-  #171 = Utf8               Decompressed test fixture %s: %,d bytes.\n-  #172 = NameAndType        #246:#80      // close:()V\n-  #173 = Utf8               java/lang/Throwable\n-  #174 = NameAndType        #247:#248     // addSuppressed:(Ljava/lang/Throwable;)V\n-  #175 = Utf8               java/io/BufferedReader\n-  #176 = Utf8               java/io/FileReader\n-  #177 = NameAndType        #79:#249      // \"<init>\":(Ljava/io/Reader;)V\n-  #178 = NameAndType        #250:#112     // DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-  #179 = NameAndType        #251:#254     // builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #180 = Class              #255          // org/apache/commons/csv/CSVFormat$Builder\n-  #181 = NameAndType        #256:#257     // setIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #182 = NameAndType        #258:#259     // build:()Lorg/apache/commons/csv/CSVFormat;\n-  #183 = NameAndType        #101:#260     // parse:(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n-  #184 = NameAndType        #261:#262     // iterator:()Ljava/util/Iterator;\n-  #185 = NameAndType        #263:#220     // hasNext:()Z\n-  #186 = NameAndType        #264:#265     // next:()Ljava/lang/Object;\n-  #187 = Utf8               org/apache/commons/csv/CSVRecord\n-  #188 = Utf8               java/lang/String\n-  #189 = NameAndType        #266:#234     // readLine:()Ljava/lang/String;\n-  #190 = NameAndType        #267:#225     // currentTimeMillis:()J\n-  #191 = NameAndType        #99:#100      // createBufferedReader:()Ljava/io/BufferedReader;\n-  #192 = NameAndType        #101:#102     // parse:(Ljava/io/Reader;Z)J\n-  #193 = Utf8               File parsed in %,d milliseconds with Commons CSV: %,d lines.\n-  #194 = Utf8               java/lang/Long\n-  #195 = Class              #268          // java/util/Objects\n-  #196 = NameAndType        #269:#270     // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #197 = NameAndType        #127:#128     // testParseBigFile:(Z)J\n-  #198 = Class              #271          // java/lang/Math\n-  #199 = NameAndType        #272:#273     // min:(JJ)J\n-  #200 = Utf8               Best time out of %,d is %,d milliseconds.\n-  #201 = Class              #274          // java/lang/Integer\n-  #202 = NameAndType        #226:#275     // valueOf:(I)Ljava/lang/Integer;\n-  #203 = NameAndType        #122:#123     // readAll:(Ljava/io/BufferedReader;)J\n-  #204 = Utf8               File read in %,d milliseconds: %,d lines.\n-  #205 = Utf8               java/io/File\n-  #206 = Utf8               java.io.tmpdir\n-  #207 = NameAndType        #276:#277     // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-  #208 = Utf8               worldcitiespop.txt\n-  #209 = NameAndType        #79:#278      // \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n-  #210 = Utf8               java/io/InputStream\n-  #211 = Utf8               java/io/OutputStream\n-  #212 = Utf8               java/io/FileNotFoundException\n-  #213 = Utf8               java/io/IOException\n-  #214 = Utf8               java/io/Reader\n-  #215 = Utf8               org/apache/commons/csv/CSVFormat\n-  #216 = Utf8               org/apache/commons/csv/CSVParser\n-  #217 = Utf8               java/util/Iterator\n-  #218 = Utf8               java/lang/Exception\n-  #219 = Utf8               exists\n-  #220 = Utf8               ()Z\n-  #221 = Utf8               java/lang/System\n-  #222 = Utf8               out\n-  #223 = Utf8               Ljava/io/PrintStream;\n-  #224 = Utf8               length\n-  #225 = Utf8               ()J\n-  #226 = Utf8               valueOf\n-  #227 = Utf8               (J)Ljava/lang/Long;\n-  #228 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #229 = Utf8               java/io/PrintStream\n-  #230 = Utf8               append\n-  #231 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #232 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #233 = Utf8               toString\n-  #234 = Utf8               ()Ljava/lang/String;\n-  #235 = Utf8               java/lang/Class\n-  #236 = Utf8               getClassLoader\n-  #237 = Utf8               ()Ljava/lang/ClassLoader;\n-  #238 = Utf8               java/lang/ClassLoader\n-  #239 = Utf8               getResourceAsStream\n-  #240 = Utf8               (Ljava/lang/String;)Ljava/io/InputStream;\n-  #241 = Utf8               (Ljava/io/InputStream;)V\n-  #242 = Utf8               (Ljava/io/File;)V\n-  #243 = Utf8               org/apache/commons/io/IOUtils\n-  #244 = Utf8               copy\n-  #245 = Utf8               (Ljava/io/InputStream;Ljava/io/OutputStream;)I\n-  #246 = Utf8               close\n-  #247 = Utf8               addSuppressed\n-  #248 = Utf8               (Ljava/lang/Throwable;)V\n-  #249 = Utf8               (Ljava/io/Reader;)V\n-  #250 = Utf8               DEFAULT\n-  #251 = Utf8               builder\n-  #252 = Utf8               Builder\n-  #253 = Utf8               InnerClasses\n-  #254 = Utf8               ()Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #255 = Utf8               org/apache/commons/csv/CSVFormat$Builder\n-  #256 = Utf8               setIgnoreSurroundingSpaces\n-  #257 = Utf8               (Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #258 = Utf8               build\n-  #259 = Utf8               ()Lorg/apache/commons/csv/CSVFormat;\n-  #260 = Utf8               (Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n-  #261 = Utf8               iterator\n-  #262 = Utf8               ()Ljava/util/Iterator;\n-  #263 = Utf8               hasNext\n-  #264 = Utf8               next\n-  #265 = Utf8               ()Ljava/lang/Object;\n-  #266 = Utf8               readLine\n-  #267 = Utf8               currentTimeMillis\n-  #268 = Utf8               java/util/Objects\n-  #269 = Utf8               requireNonNull\n-  #270 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #271 = Utf8               java/lang/Math\n-  #272 = Utf8               min\n-  #273 = Utf8               (JJ)J\n-  #274 = Utf8               java/lang/Integer\n-  #275 = Utf8               (I)Ljava/lang/Integer;\n-  #276 = Utf8               getProperty\n-  #277 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #278 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Fieldref           #8.#9         // org/apache/commons/csv/perf/PerformanceTest.max:I\n+    #8 = Class              #10           // org/apache/commons/csv/perf/PerformanceTest\n+    #9 = NameAndType        #11:#12       // max:I\n+   #10 = Utf8               org/apache/commons/csv/perf/PerformanceTest\n+   #11 = Utf8               max\n+   #12 = Utf8               I\n+   #13 = Fieldref           #8.#14        // org/apache/commons/csv/perf/PerformanceTest.BIG_FILE:Ljava/io/File;\n+   #14 = NameAndType        #15:#16       // BIG_FILE:Ljava/io/File;\n+   #15 = Utf8               BIG_FILE\n+   #16 = Utf8               Ljava/io/File;\n+   #17 = Methodref          #18.#19       // java/io/File.exists:()Z\n+   #18 = Class              #20           // java/io/File\n+   #19 = NameAndType        #21:#22       // exists:()Z\n+   #20 = Utf8               java/io/File\n+   #21 = Utf8               exists\n+   #22 = Utf8               ()Z\n+   #23 = Fieldref           #24.#25       // java/lang/System.out:Ljava/io/PrintStream;\n+   #24 = Class              #26           // java/lang/System\n+   #25 = NameAndType        #27:#28       // out:Ljava/io/PrintStream;\n+   #26 = Utf8               java/lang/System\n+   #27 = Utf8               out\n+   #28 = Utf8               Ljava/io/PrintStream;\n+   #29 = String             #30           // Found test fixture %s: %,d bytes.\n+   #30 = Utf8               Found test fixture %s: %,d bytes.\n+   #31 = Methodref          #18.#32       // java/io/File.length:()J\n+   #32 = NameAndType        #33:#34       // length:()J\n+   #33 = Utf8               length\n+   #34 = Utf8               ()J\n+   #35 = Methodref          #36.#37       // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+   #36 = Class              #38           // java/lang/Long\n+   #37 = NameAndType        #39:#40       // valueOf:(J)Ljava/lang/Long;\n+   #38 = Utf8               java/lang/Long\n+   #39 = Utf8               valueOf\n+   #40 = Utf8               (J)Ljava/lang/Long;\n+   #41 = Methodref          #42.#43       // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #42 = Class              #44           // java/lang/String\n+   #43 = NameAndType        #45:#46       // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #44 = Utf8               java/lang/String\n+   #45 = Utf8               format\n+   #46 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #47 = Methodref          #48.#49       // java/io/PrintStream.println:(Ljava/lang/String;)V\n+   #48 = Class              #50           // java/io/PrintStream\n+   #49 = NameAndType        #51:#52       // println:(Ljava/lang/String;)V\n+   #50 = Utf8               java/io/PrintStream\n+   #51 = Utf8               println\n+   #52 = Utf8               (Ljava/lang/String;)V\n+   #53 = Class              #54           // java/lang/StringBuilder\n+   #54 = Utf8               java/lang/StringBuilder\n+   #55 = Methodref          #53.#3        // java/lang/StringBuilder.\"<init>\":()V\n+   #56 = String             #57           // Decompressing test fixture to:\n+   #57 = Utf8               Decompressing test fixture to:\n+   #58 = Methodref          #53.#59       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #59 = NameAndType        #60:#61       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #60 = Utf8               append\n+   #61 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #62 = Methodref          #53.#63       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #63 = NameAndType        #60:#64       // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #64 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #65 = String             #66           // ...\n+   #66 = Utf8               ...\n+   #67 = Methodref          #53.#68       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #68 = NameAndType        #69:#70       // toString:()Ljava/lang/String;\n+   #69 = Utf8               toString\n+   #70 = Utf8               ()Ljava/lang/String;\n+   #71 = Class              #72           // java/util/zip/GZIPInputStream\n+   #72 = Utf8               java/util/zip/GZIPInputStream\n+   #73 = Methodref          #74.#75       // java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;\n+   #74 = Class              #76           // java/lang/Class\n+   #75 = NameAndType        #77:#78       // getClassLoader:()Ljava/lang/ClassLoader;\n+   #76 = Utf8               java/lang/Class\n+   #77 = Utf8               getClassLoader\n+   #78 = Utf8               ()Ljava/lang/ClassLoader;\n+   #79 = String             #80           // org/apache/commons/csv/perf/worldcitiespop.txt.gz\n+   #80 = Utf8               org/apache/commons/csv/perf/worldcitiespop.txt.gz\n+   #81 = Methodref          #82.#83       // java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n+   #82 = Class              #84           // java/lang/ClassLoader\n+   #83 = NameAndType        #85:#86       // getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n+   #84 = Utf8               java/lang/ClassLoader\n+   #85 = Utf8               getResourceAsStream\n+   #86 = Utf8               (Ljava/lang/String;)Ljava/io/InputStream;\n+   #87 = Methodref          #71.#88       // java/util/zip/GZIPInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #88 = NameAndType        #5:#89        // \"<init>\":(Ljava/io/InputStream;)V\n+   #89 = Utf8               (Ljava/io/InputStream;)V\n+   #90 = Class              #91           // java/io/FileOutputStream\n+   #91 = Utf8               java/io/FileOutputStream\n+   #92 = Methodref          #90.#93       // java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n+   #93 = NameAndType        #5:#94        // \"<init>\":(Ljava/io/File;)V\n+   #94 = Utf8               (Ljava/io/File;)V\n+   #95 = Methodref          #96.#97       // org/apache/commons/io/IOUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)I\n+   #96 = Class              #98           // org/apache/commons/io/IOUtils\n+   #97 = NameAndType        #99:#100      // copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)I\n+   #98 = Utf8               org/apache/commons/io/IOUtils\n+   #99 = Utf8               copy\n+  #100 = Utf8               (Ljava/io/InputStream;Ljava/io/OutputStream;)I\n+  #101 = String             #102          // Decompressed test fixture %s: %,d bytes.\n+  #102 = Utf8               Decompressed test fixture %s: %,d bytes.\n+  #103 = Methodref          #104.#105     // java/io/OutputStream.close:()V\n+  #104 = Class              #106          // java/io/OutputStream\n+  #105 = NameAndType        #107:#6       // close:()V\n+  #106 = Utf8               java/io/OutputStream\n+  #107 = Utf8               close\n+  #108 = Class              #109          // java/lang/Throwable\n+  #109 = Utf8               java/lang/Throwable\n+  #110 = Methodref          #108.#111     // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+  #111 = NameAndType        #112:#113     // addSuppressed:(Ljava/lang/Throwable;)V\n+  #112 = Utf8               addSuppressed\n+  #113 = Utf8               (Ljava/lang/Throwable;)V\n+  #114 = Methodref          #115.#105     // java/io/InputStream.close:()V\n+  #115 = Class              #116          // java/io/InputStream\n+  #116 = Utf8               java/io/InputStream\n+  #117 = Class              #118          // java/io/BufferedReader\n+  #118 = Utf8               java/io/BufferedReader\n+  #119 = Class              #120          // java/io/FileReader\n+  #120 = Utf8               java/io/FileReader\n+  #121 = Methodref          #119.#93      // java/io/FileReader.\"<init>\":(Ljava/io/File;)V\n+  #122 = Methodref          #117.#123     // java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n+  #123 = NameAndType        #5:#124       // \"<init>\":(Ljava/io/Reader;)V\n+  #124 = Utf8               (Ljava/io/Reader;)V\n+  #125 = Fieldref           #126.#127     // org/apache/commons/csv/CSVFormat.DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+  #126 = Class              #128          // org/apache/commons/csv/CSVFormat\n+  #127 = NameAndType        #129:#130     // DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+  #128 = Utf8               org/apache/commons/csv/CSVFormat\n+  #129 = Utf8               DEFAULT\n+  #130 = Utf8               Lorg/apache/commons/csv/CSVFormat;\n+  #131 = Methodref          #126.#132     // org/apache/commons/csv/CSVFormat.builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #132 = NameAndType        #133:#134     // builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #133 = Utf8               builder\n+  #134 = Utf8               ()Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #135 = Methodref          #136.#137     // org/apache/commons/csv/CSVFormat$Builder.setIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #136 = Class              #138          // org/apache/commons/csv/CSVFormat$Builder\n+  #137 = NameAndType        #139:#140     // setIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #138 = Utf8               org/apache/commons/csv/CSVFormat$Builder\n+  #139 = Utf8               setIgnoreSurroundingSpaces\n+  #140 = Utf8               (Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #141 = Methodref          #136.#142     // org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+  #142 = NameAndType        #143:#144     // build:()Lorg/apache/commons/csv/CSVFormat;\n+  #143 = Utf8               build\n+  #144 = Utf8               ()Lorg/apache/commons/csv/CSVFormat;\n+  #145 = Methodref          #126.#146     // org/apache/commons/csv/CSVFormat.parse:(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n+  #146 = NameAndType        #147:#148     // parse:(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n+  #147 = Utf8               parse\n+  #148 = Utf8               (Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n+  #149 = Methodref          #150.#151     // org/apache/commons/csv/CSVParser.iterator:()Ljava/util/Iterator;\n+  #150 = Class              #152          // org/apache/commons/csv/CSVParser\n+  #151 = NameAndType        #153:#154     // iterator:()Ljava/util/Iterator;\n+  #152 = Utf8               org/apache/commons/csv/CSVParser\n+  #153 = Utf8               iterator\n+  #154 = Utf8               ()Ljava/util/Iterator;\n+  #155 = InterfaceMethodref #156.#157     // java/util/Iterator.hasNext:()Z\n+  #156 = Class              #158          // java/util/Iterator\n+  #157 = NameAndType        #159:#22      // hasNext:()Z\n+  #158 = Utf8               java/util/Iterator\n+  #159 = Utf8               hasNext\n+  #160 = InterfaceMethodref #156.#161     // java/util/Iterator.next:()Ljava/lang/Object;\n+  #161 = NameAndType        #162:#163     // next:()Ljava/lang/Object;\n+  #162 = Utf8               next\n+  #163 = Utf8               ()Ljava/lang/Object;\n+  #164 = Class              #165          // org/apache/commons/csv/CSVRecord\n+  #165 = Utf8               org/apache/commons/csv/CSVRecord\n+  #166 = Methodref          #164.#151     // org/apache/commons/csv/CSVRecord.iterator:()Ljava/util/Iterator;\n+  #167 = Methodref          #150.#105     // org/apache/commons/csv/CSVParser.close:()V\n+  #168 = Methodref          #117.#169     // java/io/BufferedReader.readLine:()Ljava/lang/String;\n+  #169 = NameAndType        #170:#70      // readLine:()Ljava/lang/String;\n+  #170 = Utf8               readLine\n+  #171 = Methodref          #24.#172      // java/lang/System.currentTimeMillis:()J\n+  #172 = NameAndType        #173:#34      // currentTimeMillis:()J\n+  #173 = Utf8               currentTimeMillis\n+  #174 = Methodref          #8.#175       // org/apache/commons/csv/perf/PerformanceTest.createBufferedReader:()Ljava/io/BufferedReader;\n+  #175 = NameAndType        #176:#177     // createBufferedReader:()Ljava/io/BufferedReader;\n+  #176 = Utf8               createBufferedReader\n+  #177 = Utf8               ()Ljava/io/BufferedReader;\n+  #178 = Methodref          #8.#179       // org/apache/commons/csv/perf/PerformanceTest.parse:(Ljava/io/Reader;Z)J\n+  #179 = NameAndType        #147:#180     // parse:(Ljava/io/Reader;Z)J\n+  #180 = Utf8               (Ljava/io/Reader;Z)J\n+  #181 = String             #182          // File parsed in %,d milliseconds with Commons CSV: %,d lines.\n+  #182 = Utf8               File parsed in %,d milliseconds with Commons CSV: %,d lines.\n+  #183 = Methodref          #8.#49        // org/apache/commons/csv/perf/PerformanceTest.println:(Ljava/lang/String;)V\n+  #184 = Methodref          #117.#105     // java/io/BufferedReader.close:()V\n+  #185 = Long               9223372036854775807l\n+  #187 = Methodref          #188.#189     // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #188 = Class              #190          // java/util/Objects\n+  #189 = NameAndType        #191:#192     // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #190 = Utf8               java/util/Objects\n+  #191 = Utf8               requireNonNull\n+  #192 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #193 = Methodref          #8.#194       // org/apache/commons/csv/perf/PerformanceTest.testParseBigFile:(Z)J\n+  #194 = NameAndType        #195:#196     // testParseBigFile:(Z)J\n+  #195 = Utf8               testParseBigFile\n+  #196 = Utf8               (Z)J\n+  #197 = Methodref          #198.#199     // java/lang/Math.min:(JJ)J\n+  #198 = Class              #200          // java/lang/Math\n+  #199 = NameAndType        #201:#202     // min:(JJ)J\n+  #200 = Utf8               java/lang/Math\n+  #201 = Utf8               min\n+  #202 = Utf8               (JJ)J\n+  #203 = String             #204          // Best time out of %,d is %,d milliseconds.\n+  #204 = Utf8               Best time out of %,d is %,d milliseconds.\n+  #205 = Methodref          #206.#207     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+  #206 = Class              #208          // java/lang/Integer\n+  #207 = NameAndType        #39:#209      // valueOf:(I)Ljava/lang/Integer;\n+  #208 = Utf8               java/lang/Integer\n+  #209 = Utf8               (I)Ljava/lang/Integer;\n+  #210 = Methodref          #8.#211       // org/apache/commons/csv/perf/PerformanceTest.readAll:(Ljava/io/BufferedReader;)J\n+  #211 = NameAndType        #212:#213     // readAll:(Ljava/io/BufferedReader;)J\n+  #212 = Utf8               readAll\n+  #213 = Utf8               (Ljava/io/BufferedReader;)J\n+  #214 = String             #215          // File read in %,d milliseconds: %,d lines.\n+  #215 = Utf8               File read in %,d milliseconds: %,d lines.\n+  #216 = String             #217          // java.io.tmpdir\n+  #217 = Utf8               java.io.tmpdir\n+  #218 = Methodref          #24.#219      // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+  #219 = NameAndType        #220:#221     // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+  #220 = Utf8               getProperty\n+  #221 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #222 = String             #223          // worldcitiespop.txt\n+  #223 = Utf8               worldcitiespop.txt\n+  #224 = Methodref          #18.#225      // java/io/File.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+  #225 = NameAndType        #5:#226       // \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+  #226 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n+  #227 = Utf8               TEST_RESRC\n+  #228 = Utf8               Ljava/lang/String;\n+  #229 = Utf8               ConstantValue\n+  #230 = Integer            10\n+  #231 = Utf8               Code\n+  #232 = Utf8               LineNumberTable\n+  #233 = Utf8               LocalVariableTable\n+  #234 = Utf8               this\n+  #235 = Utf8               Lorg/apache/commons/csv/perf/PerformanceTest;\n+  #236 = Utf8               setUpClass\n+  #237 = Utf8               output\n+  #238 = Utf8               Ljava/io/OutputStream;\n+  #239 = Utf8               input\n+  #240 = Utf8               Ljava/io/InputStream;\n+  #241 = Utf8               StackMapTable\n+  #242 = Utf8               Exceptions\n+  #243 = Class              #244          // java/io/FileNotFoundException\n+  #244 = Utf8               java/io/FileNotFoundException\n+  #245 = Class              #246          // java/io/IOException\n+  #246 = Utf8               java/io/IOException\n+  #247 = Utf8               RuntimeVisibleAnnotations\n+  #248 = Utf8               Lorg/junit/jupiter/api/BeforeAll;\n+  #249 = Utf8               record\n+  #250 = Utf8               Lorg/apache/commons/csv/CSVRecord;\n+  #251 = Utf8               parser\n+  #252 = Utf8               Lorg/apache/commons/csv/CSVParser;\n+  #253 = Utf8               reader\n+  #254 = Utf8               Ljava/io/Reader;\n+  #255 = Utf8               traverseColumns\n+  #256 = Utf8               Z\n+  #257 = Utf8               recordCount\n+  #258 = Utf8               J\n+  #259 = Class              #260          // java/io/Reader\n+  #260 = Utf8               java/io/Reader\n+  #261 = Utf8               s\n+  #262 = Utf8               in\n+  #263 = Utf8               Ljava/io/BufferedReader;\n+  #264 = Utf8               count\n+  #265 = Utf8               totalMillis\n+  #266 = Utf8               startMillis\n+  #267 = Class              #268          // java/lang/Exception\n+  #268 = Utf8               java/lang/Exception\n+  #269 = Utf8               testParseBigFileRepeat\n+  #270 = Utf8               i\n+  #271 = Utf8               bestTime\n+  #272 = Utf8               Lorg/junit/jupiter/api/Test;\n+  #273 = Utf8               testReadBigFile\n+  #274 = Utf8               <clinit>\n+  #275 = Utf8               SourceFile\n+  #276 = Utf8               PerformanceTest.java\n+  #277 = Utf8               InnerClasses\n+  #278 = Utf8               Builder\n {\n   private static final java.lang.String TEST_RESRC = \"org/apache/commons/csv/perf/worldcitiespop.txt.gz\";\n     descriptor: Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: String org/apache/commons/csv/perf/worldcitiespop.txt.gz\n \n   private static final java.io.File BIG_FILE;\n@@ -305,117 +305,117 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: bipush        10\n-         7: putfield      #2                  // Field max:I\n+         7: putfield      #7                  // Field max:I\n         10: return\n       LineNumberTable:\n         line 44: 0\n         line 65: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/csv/perf/PerformanceTest;\n \n   public static void setUpClass() throws java.io.FileNotFoundException, java.io.IOException;\n     descriptor: ()V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=7, locals=4, args_size=0\n-         0: getstatic     #3                  // Field BIG_FILE:Ljava/io/File;\n-         3: invokevirtual #4                  // Method java/io/File.exists:()Z\n+         0: getstatic     #13                 // Field BIG_FILE:Ljava/io/File;\n+         3: invokevirtual #17                 // Method java/io/File.exists:()Z\n          6: ifeq          43\n-         9: getstatic     #5                  // Field java/lang/System.out:Ljava/io/PrintStream;\n-        12: ldc           #6                  // String Found test fixture %s: %,d bytes.\n+         9: getstatic     #23                 // Field java/lang/System.out:Ljava/io/PrintStream;\n+        12: ldc           #29                 // String Found test fixture %s: %,d bytes.\n         14: iconst_2\n-        15: anewarray     #7                  // class java/lang/Object\n+        15: anewarray     #2                  // class java/lang/Object\n         18: dup\n         19: iconst_0\n-        20: getstatic     #3                  // Field BIG_FILE:Ljava/io/File;\n+        20: getstatic     #13                 // Field BIG_FILE:Ljava/io/File;\n         23: aastore\n         24: dup\n         25: iconst_1\n-        26: getstatic     #3                  // Field BIG_FILE:Ljava/io/File;\n-        29: invokevirtual #8                  // Method java/io/File.length:()J\n-        32: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+        26: getstatic     #13                 // Field BIG_FILE:Ljava/io/File;\n+        29: invokevirtual #31                 // Method java/io/File.length:()J\n+        32: invokestatic  #35                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n         35: aastore\n-        36: invokestatic  #10                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        39: invokevirtual #11                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n+        36: invokestatic  #41                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        39: invokevirtual #47                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n         42: return\n-        43: getstatic     #5                  // Field java/lang/System.out:Ljava/io/PrintStream;\n-        46: new           #12                 // class java/lang/StringBuilder\n+        43: getstatic     #23                 // Field java/lang/System.out:Ljava/io/PrintStream;\n+        46: new           #53                 // class java/lang/StringBuilder\n         49: dup\n-        50: invokespecial #13                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        53: ldc           #14                 // String Decompressing test fixture to:\n-        55: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        58: getstatic     #3                  // Field BIG_FILE:Ljava/io/File;\n-        61: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        64: ldc           #17                 // String ...\n-        66: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        69: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        72: invokevirtual #11                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n-        75: new           #19                 // class java/util/zip/GZIPInputStream\n+        50: invokespecial #55                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        53: ldc           #56                 // String Decompressing test fixture to:\n+        55: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        58: getstatic     #13                 // Field BIG_FILE:Ljava/io/File;\n+        61: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        64: ldc           #65                 // String ...\n+        66: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        69: invokevirtual #67                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        72: invokevirtual #47                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n+        75: new           #71                 // class java/util/zip/GZIPInputStream\n         78: dup\n-        79: ldc           #20                 // class org/apache/commons/csv/perf/PerformanceTest\n-        81: invokevirtual #21                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;\n-        84: ldc           #22                 // String org/apache/commons/csv/perf/worldcitiespop.txt.gz\n-        86: invokevirtual #23                 // Method java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n-        89: invokespecial #24                 // Method java/util/zip/GZIPInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+        79: ldc           #8                  // class org/apache/commons/csv/perf/PerformanceTest\n+        81: invokevirtual #73                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;\n+        84: ldc           #79                 // String org/apache/commons/csv/perf/worldcitiespop.txt.gz\n+        86: invokevirtual #81                 // Method java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n+        89: invokespecial #87                 // Method java/util/zip/GZIPInputStream.\"<init>\":(Ljava/io/InputStream;)V\n         92: astore_0\n-        93: new           #25                 // class java/io/FileOutputStream\n+        93: new           #90                 // class java/io/FileOutputStream\n         96: dup\n-        97: getstatic     #3                  // Field BIG_FILE:Ljava/io/File;\n-       100: invokespecial #26                 // Method java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n+        97: getstatic     #13                 // Field BIG_FILE:Ljava/io/File;\n+       100: invokespecial #92                 // Method java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n        103: astore_1\n        104: aload_0\n        105: aload_1\n-       106: invokestatic  #27                 // Method org/apache/commons/io/IOUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)I\n+       106: invokestatic  #95                 // Method org/apache/commons/io/IOUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)I\n        109: pop\n-       110: getstatic     #5                  // Field java/lang/System.out:Ljava/io/PrintStream;\n-       113: ldc           #28                 // String Decompressed test fixture %s: %,d bytes.\n+       110: getstatic     #23                 // Field java/lang/System.out:Ljava/io/PrintStream;\n+       113: ldc           #101                // String Decompressed test fixture %s: %,d bytes.\n        115: iconst_2\n-       116: anewarray     #7                  // class java/lang/Object\n+       116: anewarray     #2                  // class java/lang/Object\n        119: dup\n        120: iconst_0\n-       121: getstatic     #3                  // Field BIG_FILE:Ljava/io/File;\n+       121: getstatic     #13                 // Field BIG_FILE:Ljava/io/File;\n        124: aastore\n        125: dup\n        126: iconst_1\n-       127: getstatic     #3                  // Field BIG_FILE:Ljava/io/File;\n-       130: invokevirtual #8                  // Method java/io/File.length:()J\n-       133: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+       127: getstatic     #13                 // Field BIG_FILE:Ljava/io/File;\n+       130: invokevirtual #31                 // Method java/io/File.length:()J\n+       133: invokestatic  #35                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n        136: aastore\n-       137: invokestatic  #10                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-       140: invokevirtual #11                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n+       137: invokestatic  #41                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+       140: invokevirtual #47                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n        143: aload_1\n-       144: invokevirtual #29                 // Method java/io/OutputStream.close:()V\n+       144: invokevirtual #103                // Method java/io/OutputStream.close:()V\n        147: goto          166\n        150: astore_2\n        151: aload_1\n-       152: invokevirtual #29                 // Method java/io/OutputStream.close:()V\n+       152: invokevirtual #103                // Method java/io/OutputStream.close:()V\n        155: goto          164\n        158: astore_3\n        159: aload_2\n        160: aload_3\n-       161: invokevirtual #31                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+       161: invokevirtual #110                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n        164: aload_2\n        165: athrow\n        166: aload_0\n-       167: invokevirtual #32                 // Method java/io/InputStream.close:()V\n+       167: invokevirtual #114                // Method java/io/InputStream.close:()V\n        170: goto          189\n        173: astore_1\n        174: aload_0\n-       175: invokevirtual #32                 // Method java/io/InputStream.close:()V\n+       175: invokevirtual #114                // Method java/io/InputStream.close:()V\n        178: goto          187\n        181: astore_2\n        182: aload_1\n        183: aload_2\n-       184: invokevirtual #31                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+       184: invokevirtual #110                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n        187: aload_1\n        188: athrow\n        189: return\n       Exception table:\n          from    to  target type\n            104   143   150   Class java/lang/Throwable\n            151   155   158   Class java/lang/Throwable\n@@ -461,98 +461,98 @@\n           stack = [ class java/lang/Throwable ]\n         frame_type = 5 /* same */\n         frame_type = 249 /* chop */\n           offset_delta = 1\n     Exceptions:\n       throws java.io.FileNotFoundException, java.io.IOException\n     RuntimeVisibleAnnotations:\n-      0: #98()\n+      0: #248()\n         org.junit.jupiter.api.BeforeAll\n \n   private java.io.BufferedReader createBufferedReader() throws java.io.IOException;\n     descriptor: ()Ljava/io/BufferedReader;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=1, args_size=1\n-         0: new           #33                 // class java/io/BufferedReader\n+         0: new           #117                // class java/io/BufferedReader\n          3: dup\n-         4: new           #34                 // class java/io/FileReader\n+         4: new           #119                // class java/io/FileReader\n          7: dup\n-         8: getstatic     #3                  // Field BIG_FILE:Ljava/io/File;\n-        11: invokespecial #35                 // Method java/io/FileReader.\"<init>\":(Ljava/io/File;)V\n-        14: invokespecial #36                 // Method java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n+         8: getstatic     #13                 // Field BIG_FILE:Ljava/io/File;\n+        11: invokespecial #121                // Method java/io/FileReader.\"<init>\":(Ljava/io/File;)V\n+        14: invokespecial #122                // Method java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n         17: areturn\n       LineNumberTable:\n         line 68: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0  this   Lorg/apache/commons/csv/perf/PerformanceTest;\n     Exceptions:\n       throws java.io.IOException\n \n   private long parse(java.io.Reader, boolean) throws java.io.IOException;\n     descriptor: (Ljava/io/Reader;Z)J\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=11, args_size=3\n-         0: getstatic     #37                 // Field org/apache/commons/csv/CSVFormat.DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-         3: invokevirtual #38                 // Method org/apache/commons/csv/CSVFormat.builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         0: getstatic     #125                // Field org/apache/commons/csv/CSVFormat.DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+         3: invokevirtual #131                // Method org/apache/commons/csv/CSVFormat.builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          6: iconst_0\n-         7: invokevirtual #39                 // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-        10: invokevirtual #40                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         7: invokevirtual #135                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+        10: invokevirtual #141                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         13: astore_3\n         14: lconst_0\n         15: lstore        4\n         17: aload_3\n         18: aload_1\n-        19: invokevirtual #41                 // Method org/apache/commons/csv/CSVFormat.parse:(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n+        19: invokevirtual #145                // Method org/apache/commons/csv/CSVFormat.parse:(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n         22: astore        6\n         24: aload         6\n-        26: invokevirtual #42                 // Method org/apache/commons/csv/CSVParser.iterator:()Ljava/util/Iterator;\n+        26: invokevirtual #149                // Method org/apache/commons/csv/CSVParser.iterator:()Ljava/util/Iterator;\n         29: astore        7\n         31: aload         7\n-        33: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        33: invokeinterface #155,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n         38: ifeq          98\n         41: aload         7\n-        43: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        48: checkcast     #45                 // class org/apache/commons/csv/CSVRecord\n+        43: invokeinterface #160,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        48: checkcast     #164                // class org/apache/commons/csv/CSVRecord\n         51: astore        8\n         53: lload         4\n         55: lconst_1\n         56: ladd\n         57: lstore        4\n         59: iload_2\n         60: ifeq          95\n         63: aload         8\n-        65: invokevirtual #46                 // Method org/apache/commons/csv/CSVRecord.iterator:()Ljava/util/Iterator;\n+        65: invokevirtual #166                // Method org/apache/commons/csv/CSVRecord.iterator:()Ljava/util/Iterator;\n         68: astore        9\n         70: aload         9\n-        72: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        72: invokeinterface #155,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n         77: ifeq          95\n         80: aload         9\n-        82: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        87: checkcast     #47                 // class java/lang/String\n+        82: invokeinterface #160,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        87: checkcast     #42                 // class java/lang/String\n         90: astore        10\n         92: goto          70\n         95: goto          31\n         98: aload         6\n        100: ifnull        138\n        103: aload         6\n-       105: invokevirtual #48                 // Method org/apache/commons/csv/CSVParser.close:()V\n+       105: invokevirtual #167                // Method org/apache/commons/csv/CSVParser.close:()V\n        108: goto          138\n        111: astore        7\n        113: aload         6\n        115: ifnull        135\n        118: aload         6\n-       120: invokevirtual #48                 // Method org/apache/commons/csv/CSVParser.close:()V\n+       120: invokevirtual #167                // Method org/apache/commons/csv/CSVParser.close:()V\n        123: goto          135\n        126: astore        8\n        128: aload         7\n        130: aload         8\n-       132: invokevirtual #31                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+       132: invokevirtual #110                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n        135: aload         7\n        137: athrow\n        138: lload         4\n        140: lreturn\n       Exception table:\n          from    to  target type\n             24    98   111   Class java/lang/Throwable\n@@ -604,17 +604,17 @@\n       throws java.io.IOException\n \n   private void println(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n-         0: getstatic     #5                  // Field java/lang/System.out:Ljava/io/PrintStream;\n+         0: getstatic     #23                 // Field java/lang/System.out:Ljava/io/PrintStream;\n          3: aload_1\n-         4: invokevirtual #11                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n+         4: invokevirtual #47                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n          7: return\n       LineNumberTable:\n         line 89: 0\n         line 90: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/csv/perf/PerformanceTest;\n@@ -624,15 +624,15 @@\n     descriptor: (Ljava/io/BufferedReader;)J\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=4, args_size=2\n          0: lconst_0\n          1: lstore_2\n          2: aload_1\n-         3: invokevirtual #49                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;\n+         3: invokevirtual #168                // Method java/io/BufferedReader.readLine:()Ljava/lang/String;\n          6: ifnull        16\n          9: lload_2\n         10: lconst_1\n         11: ladd\n         12: lstore_2\n         13: goto          2\n         16: lload_2\n@@ -656,62 +656,62 @@\n       throws java.io.IOException\n \n   public long testParseBigFile(boolean) throws java.lang.Exception;\n     descriptor: (Z)J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=11, args_size=2\n-         0: invokestatic  #50                 // Method java/lang/System.currentTimeMillis:()J\n+         0: invokestatic  #171                // Method java/lang/System.currentTimeMillis:()J\n          3: lstore_2\n          4: aload_0\n-         5: invokespecial #51                 // Method createBufferedReader:()Ljava/io/BufferedReader;\n+         5: invokespecial #174                // Method createBufferedReader:()Ljava/io/BufferedReader;\n          8: astore        4\n         10: aload_0\n         11: aload         4\n         13: iload_1\n-        14: invokespecial #52                 // Method parse:(Ljava/io/Reader;Z)J\n+        14: invokespecial #178                // Method parse:(Ljava/io/Reader;Z)J\n         17: lstore        5\n-        19: invokestatic  #50                 // Method java/lang/System.currentTimeMillis:()J\n+        19: invokestatic  #171                // Method java/lang/System.currentTimeMillis:()J\n         22: lload_2\n         23: lsub\n         24: lstore        7\n         26: aload_0\n-        27: ldc           #53                 // String File parsed in %,d milliseconds with Commons CSV: %,d lines.\n+        27: ldc           #181                // String File parsed in %,d milliseconds with Commons CSV: %,d lines.\n         29: iconst_2\n-        30: anewarray     #7                  // class java/lang/Object\n+        30: anewarray     #2                  // class java/lang/Object\n         33: dup\n         34: iconst_0\n         35: lload         7\n-        37: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+        37: invokestatic  #35                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n         40: aastore\n         41: dup\n         42: iconst_1\n         43: lload         5\n-        45: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+        45: invokestatic  #35                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n         48: aastore\n-        49: invokestatic  #10                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        52: invokespecial #54                 // Method println:(Ljava/lang/String;)V\n+        49: invokestatic  #41                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        52: invokespecial #183                // Method println:(Ljava/lang/String;)V\n         55: lload         7\n         57: lstore        9\n         59: aload         4\n         61: ifnull        69\n         64: aload         4\n-        66: invokevirtual #55                 // Method java/io/BufferedReader.close:()V\n+        66: invokevirtual #184                // Method java/io/BufferedReader.close:()V\n         69: lload         9\n         71: lreturn\n         72: astore        5\n         74: aload         4\n         76: ifnull        96\n         79: aload         4\n-        81: invokevirtual #55                 // Method java/io/BufferedReader.close:()V\n+        81: invokevirtual #184                // Method java/io/BufferedReader.close:()V\n         84: goto          96\n         87: astore        6\n         89: aload         5\n         91: aload         6\n-        93: invokevirtual #31                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        93: invokevirtual #110                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n         96: aload         5\n         98: athrow\n       Exception table:\n          from    to  target type\n             10    59    72   Class java/lang/Throwable\n             79    84    87   Class java/lang/Throwable\n       LineNumberTable:\n@@ -752,51 +752,51 @@\n       throws java.lang.Exception\n \n   public void testParseBigFileRepeat() throws java.lang.Exception;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=4, args_size=1\n-         0: ldc2_w        #57                 // long 9223372036854775807l\n+         0: ldc2_w        #185                // long 9223372036854775807l\n          3: lstore_1\n          4: iconst_0\n          5: istore_3\n          6: iload_3\n          7: aload_0\n-         8: invokestatic  #59                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         8: invokestatic  #187                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n         11: pop\n         12: bipush        10\n         14: if_icmpge     33\n         17: aload_0\n         18: iconst_0\n-        19: invokevirtual #60                 // Method testParseBigFile:(Z)J\n+        19: invokevirtual #193                // Method testParseBigFile:(Z)J\n         22: lload_1\n-        23: invokestatic  #61                 // Method java/lang/Math.min:(JJ)J\n+        23: invokestatic  #197                // Method java/lang/Math.min:(JJ)J\n         26: lstore_1\n         27: iinc          3, 1\n         30: goto          6\n         33: aload_0\n-        34: ldc           #62                 // String Best time out of %,d is %,d milliseconds.\n+        34: ldc           #203                // String Best time out of %,d is %,d milliseconds.\n         36: iconst_2\n-        37: anewarray     #7                  // class java/lang/Object\n+        37: anewarray     #2                  // class java/lang/Object\n         40: dup\n         41: iconst_0\n         42: aload_0\n-        43: invokestatic  #59                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+        43: invokestatic  #187                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n         46: pop\n         47: bipush        10\n-        49: invokestatic  #63                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        49: invokestatic  #205                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         52: aastore\n         53: dup\n         54: iconst_1\n         55: lload_1\n-        56: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+        56: invokestatic  #35                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n         59: aastore\n-        60: invokestatic  #10                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        63: invokespecial #54                 // Method println:(Ljava/lang/String;)V\n+        60: invokestatic  #41                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        63: invokespecial #183                // Method println:(Ljava/lang/String;)V\n         66: return\n       LineNumberTable:\n         line 113: 0\n         line 114: 4\n         line 115: 17\n         line 114: 27\n         line 117: 33\n@@ -811,103 +811,103 @@\n           offset_delta = 6\n           locals = [ long, int ]\n         frame_type = 250 /* chop */\n           offset_delta = 26\n     Exceptions:\n       throws java.lang.Exception\n     RuntimeVisibleAnnotations:\n-      0: #135()\n+      0: #272()\n         org.junit.jupiter.api.Test\n \n   public void testReadBigFile() throws java.lang.Exception;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=11, args_size=1\n-         0: ldc2_w        #57                 // long 9223372036854775807l\n+         0: ldc2_w        #185                // long 9223372036854775807l\n          3: lstore_1\n          4: iconst_0\n          5: istore        5\n          7: iload         5\n          9: aload_0\n-        10: invokestatic  #59                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+        10: invokestatic  #187                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n         13: pop\n         14: bipush        10\n         16: if_icmpge     126\n         19: aload_0\n-        20: invokespecial #51                 // Method createBufferedReader:()Ljava/io/BufferedReader;\n+        20: invokespecial #174                // Method createBufferedReader:()Ljava/io/BufferedReader;\n         23: astore        8\n-        25: invokestatic  #50                 // Method java/lang/System.currentTimeMillis:()J\n+        25: invokestatic  #171                // Method java/lang/System.currentTimeMillis:()J\n         28: lstore        6\n         30: aload_0\n         31: aload         8\n-        33: invokespecial #64                 // Method readAll:(Ljava/io/BufferedReader;)J\n+        33: invokespecial #210                // Method readAll:(Ljava/io/BufferedReader;)J\n         36: lstore_3\n         37: aload         8\n         39: ifnull        77\n         42: aload         8\n-        44: invokevirtual #55                 // Method java/io/BufferedReader.close:()V\n+        44: invokevirtual #184                // Method java/io/BufferedReader.close:()V\n         47: goto          77\n         50: astore        9\n         52: aload         8\n         54: ifnull        74\n         57: aload         8\n-        59: invokevirtual #55                 // Method java/io/BufferedReader.close:()V\n+        59: invokevirtual #184                // Method java/io/BufferedReader.close:()V\n         62: goto          74\n         65: astore        10\n         67: aload         9\n         69: aload         10\n-        71: invokevirtual #31                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        71: invokevirtual #110                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n         74: aload         9\n         76: athrow\n-        77: invokestatic  #50                 // Method java/lang/System.currentTimeMillis:()J\n+        77: invokestatic  #171                // Method java/lang/System.currentTimeMillis:()J\n         80: lload         6\n         82: lsub\n         83: lstore        8\n         85: lload         8\n         87: lload_1\n-        88: invokestatic  #61                 // Method java/lang/Math.min:(JJ)J\n+        88: invokestatic  #197                // Method java/lang/Math.min:(JJ)J\n         91: lstore_1\n         92: aload_0\n-        93: ldc           #65                 // String File read in %,d milliseconds: %,d lines.\n+        93: ldc           #214                // String File read in %,d milliseconds: %,d lines.\n         95: iconst_2\n-        96: anewarray     #7                  // class java/lang/Object\n+        96: anewarray     #2                  // class java/lang/Object\n         99: dup\n        100: iconst_0\n        101: lload         8\n-       103: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+       103: invokestatic  #35                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n        106: aastore\n        107: dup\n        108: iconst_1\n        109: lload_3\n-       110: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+       110: invokestatic  #35                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n        113: aastore\n-       114: invokestatic  #10                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-       117: invokespecial #54                 // Method println:(Ljava/lang/String;)V\n+       114: invokestatic  #41                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+       117: invokespecial #183                // Method println:(Ljava/lang/String;)V\n        120: iinc          5, 1\n        123: goto          7\n        126: aload_0\n-       127: ldc           #62                 // String Best time out of %,d is %,d milliseconds.\n+       127: ldc           #203                // String Best time out of %,d is %,d milliseconds.\n        129: iconst_2\n-       130: anewarray     #7                  // class java/lang/Object\n+       130: anewarray     #2                  // class java/lang/Object\n        133: dup\n        134: iconst_0\n        135: aload_0\n-       136: invokestatic  #59                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+       136: invokestatic  #187                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n        139: pop\n        140: bipush        10\n-       142: invokestatic  #63                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+       142: invokestatic  #205                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n        145: aastore\n        146: dup\n        147: iconst_1\n        148: lload_1\n-       149: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+       149: invokestatic  #35                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n        152: aastore\n-       153: invokestatic  #10                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-       156: invokespecial #54                 // Method println:(Ljava/lang/String;)V\n+       153: invokestatic  #41                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+       156: invokespecial #183                // Method println:(Ljava/lang/String;)V\n        159: return\n       Exception table:\n          from    to  target type\n             25    37    50   Class java/lang/Throwable\n             57    62    65   Class java/lang/Throwable\n       LineNumberTable:\n         line 122: 0\n@@ -953,29 +953,29 @@\n           locals = [ class org/apache/commons/csv/perf/PerformanceTest, long, long, int, long ]\n           stack = []\n         frame_type = 248 /* chop */\n           offset_delta = 48\n     Exceptions:\n       throws java.lang.Exception\n     RuntimeVisibleAnnotations:\n-      0: #135()\n+      0: #272()\n         org.junit.jupiter.api.Test\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=4, locals=0, args_size=0\n-         0: new           #66                 // class java/io/File\n+         0: new           #18                 // class java/io/File\n          3: dup\n-         4: ldc           #67                 // String java.io.tmpdir\n-         6: invokestatic  #68                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-         9: ldc           #69                 // String worldcitiespop.txt\n-        11: invokespecial #70                 // Method java/io/File.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n-        14: putstatic     #3                  // Field BIG_FILE:Ljava/io/File;\n+         4: ldc           #216                // String java.io.tmpdir\n+         6: invokestatic  #218                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+         9: ldc           #222                // String worldcitiespop.txt\n+        11: invokespecial #224                // Method java/io/File.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+        14: putstatic     #13                 // Field BIG_FILE:Ljava/io/File;\n         17: return\n       LineNumberTable:\n         line 48: 0\n }\n SourceFile: \"PerformanceTest.java\"\n InnerClasses:\n-  public static #252= #180 of #116;       // Builder=class org/apache/commons/csv/CSVFormat$Builder of class org/apache/commons/csv/CSVFormat\n+  public static #278= #136 of #126;       // Builder=class org/apache/commons/csv/CSVFormat$Builder of class org/apache/commons/csv/CSVFormat\n"}]}
