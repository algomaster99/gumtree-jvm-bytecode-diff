{"diffoscope-json-version": 1, "source1": "first/ZipEncodingHelper.class", "source2": "second/ZipEncodingHelper.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -8,14 +8,18 @@\n import java.nio.charset.Charset;\n \n public abstract class ZipEncodingHelper\n {\n     static final String UTF8 = \"UTF8\";\n     static final ZipEncoding UTF8_ZIP_ENCODING;\n     \n+    static {\n+        UTF8_ZIP_ENCODING = getZipEncoding(\"UTF8\");\n+    }\n+    \n     public static ZipEncoding getZipEncoding(final String name) {\n         Charset cs = Charset.defaultCharset();\n         if (name != null) {\n             try {\n                 cs = Charset.forName(name);\n             }\n             catch (final UnsupportedCharsetException ex) {}\n@@ -42,12 +46,8 @@\n     static ByteBuffer growBufferBy(final ByteBuffer buffer, final int increment) {\n         buffer.limit(buffer.position());\n         buffer.rewind();\n         final ByteBuffer on = ByteBuffer.allocate(buffer.capacity() + increment);\n         on.put(buffer);\n         return on;\n     }\n-    \n-    static {\n-        UTF8_ZIP_ENCODING = getZipEncoding(\"UTF8\");\n-    }\n }\n"}]}
