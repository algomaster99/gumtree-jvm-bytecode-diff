{"diffoscope-json-version": 1, "source1": "first/BigDecimalParser.class", "source2": "second/BigDecimalParser.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,193 +1,193 @@\n-  SHA-256 checksum 0ae8290555e06638940c74d3956e24a4592356d935497b513d36950cfefd595d\n+  SHA-256 checksum 25381182884629452b71d9353cfc50b0c9c12caa958fd6dedb7a146a36a50cf3\n   Compiled from \"BigDecimalParser.java\"\n public final class com.fasterxml.jackson.core.io.BigDecimalParser\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #11                         // com/fasterxml/jackson/core/io/BigDecimalParser\n-  super_class: #48                        // java/lang/Object\n+  this_class: #14                         // com/fasterxml/jackson/core/io/BigDecimalParser\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 1, methods: 7, attributes: 1\n Constant pool:\n-    #1 = Methodref          #48.#110      // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #12.#111      // java/lang/String.toCharArray:()[C\n-    #3 = Methodref          #11.#112      // com/fasterxml/jackson/core/io/BigDecimalParser.parse:([C)Ljava/math/BigDecimal;\n-    #4 = Class              #113          // java/math/BigDecimal\n-    #5 = Methodref          #4.#114       // java/math/BigDecimal.\"<init>\":([CII)V\n-    #6 = Methodref          #11.#115      // com/fasterxml/jackson/core/io/BigDecimalParser.parseBigDecimal:([CIII)Ljava/math/BigDecimal;\n-    #7 = Class              #116          // java/lang/ArithmeticException\n-    #8 = Class              #117          // java/lang/NumberFormatException\n-    #9 = Methodref          #74.#118      // java/lang/RuntimeException.getMessage:()Ljava/lang/String;\n-   #10 = String             #119          // Not a valid number representation\n-   #11 = Class              #120          // com/fasterxml/jackson/core/io/BigDecimalParser\n-   #12 = Class              #121          // java/lang/String\n-   #13 = Methodref          #12.#114      // java/lang/String.\"<init>\":([CII)V\n-   #14 = Class              #122          // java/lang/StringBuilder\n-   #15 = Methodref          #14.#110      // java/lang/StringBuilder.\"<init>\":()V\n-   #16 = Methodref          #123.#124     // java/util/Arrays.copyOfRange:([CII)[C\n-   #17 = Methodref          #12.#125      // java/lang/String.\"<init>\":([C)V\n-   #18 = Methodref          #14.#126      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #19 = String             #127          // (truncated, full length is\n-   #20 = Methodref          #14.#128      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #21 = String             #129          //  chars)\n-   #22 = Methodref          #14.#130      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #23 = String             #131          // Value \\\"\n-   #24 = String             #132          // \\\" can not be represented as `java.math.BigDecimal`, reason:\n-   #25 = Methodref          #8.#133       // java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n-   #26 = Methodref          #11.#134      // com/fasterxml/jackson/core/io/BigDecimalParser.parse:([CII)Ljava/math/BigDecimal;\n-   #27 = String             #135          // Multiple signs in exponent\n-   #28 = String             #136          // Multiple signs in number\n-   #29 = String             #137          // Multiple exponent markers\n-   #30 = String             #138          // Multiple decimal points\n-   #31 = Methodref          #37.#139      // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-   #32 = Methodref          #11.#140      // com/fasterxml/jackson/core/io/BigDecimalParser.adjustScale:(IJ)I\n-   #33 = Methodref          #11.#141      // com/fasterxml/jackson/core/io/BigDecimalParser.toBigDecimalRec:([CIIII)Ljava/math/BigDecimal;\n-   #34 = Methodref          #4.#142       // java/math/BigDecimal.add:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;\n-   #35 = Methodref          #4.#143       // java/math/BigDecimal.setScale:(I)Ljava/math/BigDecimal;\n-   #36 = Methodref          #4.#144       // java/math/BigDecimal.negate:()Ljava/math/BigDecimal;\n-   #37 = Class              #145          // java/lang/Integer\n-   #38 = Long               2147483647l\n-   #40 = Long               -2147483648l\n-   #42 = String             #146          // Scale out of range:\n-   #43 = Methodref          #14.#147      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-   #44 = String             #148          //  while adjusting scale\n-   #45 = String             #149          //  to exponent\n-   #46 = Fieldref           #4.#150       // java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n-   #47 = Methodref          #4.#151       // java/math/BigDecimal.scaleByPowerOfTen:(I)Ljava/math/BigDecimal;\n-   #48 = Class              #152          // java/lang/Object\n-   #49 = Utf8               MAX_CHARS_TO_REPORT\n-   #50 = Utf8               I\n-   #51 = Utf8               ConstantValue\n-   #52 = Integer            1000\n-   #53 = Utf8               <init>\n-   #54 = Utf8               ()V\n-   #55 = Utf8               Code\n-   #56 = Utf8               LineNumberTable\n-   #57 = Utf8               LocalVariableTable\n-   #58 = Utf8               this\n-   #59 = Utf8               Lcom/fasterxml/jackson/core/io/BigDecimalParser;\n-   #60 = Utf8               parse\n-   #61 = Utf8               (Ljava/lang/String;)Ljava/math/BigDecimal;\n-   #62 = Utf8               valueStr\n-   #63 = Utf8               Ljava/lang/String;\n-   #64 = Utf8               ([CII)Ljava/math/BigDecimal;\n-   #65 = Utf8               stringToReport\n-   #66 = Utf8               desc\n-   #67 = Utf8               e\n-   #68 = Utf8               Ljava/lang/RuntimeException;\n-   #69 = Utf8               chars\n-   #70 = Utf8               [C\n-   #71 = Utf8               off\n-   #72 = Utf8               len\n-   #73 = Utf8               StackMapTable\n-   #74 = Class              #153          // java/lang/RuntimeException\n-   #75 = Utf8               ([C)Ljava/math/BigDecimal;\n-   #76 = Utf8               parseBigDecimal\n-   #77 = Utf8               ([CIII)Ljava/math/BigDecimal;\n-   #78 = Utf8               c\n-   #79 = Utf8               C\n-   #80 = Utf8               i\n-   #81 = Utf8               expStr\n-   #82 = Utf8               numEndIdx\n-   #83 = Utf8               leftLen\n-   #84 = Utf8               left\n-   #85 = Utf8               Ljava/math/BigDecimal;\n-   #86 = Utf8               rightLen\n-   #87 = Utf8               right\n-   #88 = Utf8               res\n-   #89 = Utf8               splitLen\n-   #90 = Utf8               numHasSign\n-   #91 = Utf8               Z\n-   #92 = Utf8               expHasSign\n-   #93 = Utf8               neg\n-   #94 = Utf8               numIdx\n-   #95 = Utf8               expIdx\n-   #96 = Utf8               dotIdx\n-   #97 = Utf8               scale\n-   #98 = Utf8               endIdx\n-   #99 = Utf8               exp\n-  #100 = Class              #70           // \"[C\"\n-  #101 = Utf8               adjustScale\n-  #102 = Utf8               (IJ)I\n-  #103 = Utf8               J\n-  #104 = Utf8               adjScale\n-  #105 = Utf8               toBigDecimalRec\n-  #106 = Utf8               ([CIIII)Ljava/math/BigDecimal;\n-  #107 = Utf8               mid\n-  #108 = Utf8               SourceFile\n-  #109 = Utf8               BigDecimalParser.java\n-  #110 = NameAndType        #53:#54       // \"<init>\":()V\n-  #111 = NameAndType        #154:#155     // toCharArray:()[C\n-  #112 = NameAndType        #60:#75       // parse:([C)Ljava/math/BigDecimal;\n-  #113 = Utf8               java/math/BigDecimal\n-  #114 = NameAndType        #53:#156      // \"<init>\":([CII)V\n-  #115 = NameAndType        #76:#77       // parseBigDecimal:([CIII)Ljava/math/BigDecimal;\n-  #116 = Utf8               java/lang/ArithmeticException\n-  #117 = Utf8               java/lang/NumberFormatException\n-  #118 = NameAndType        #157:#158     // getMessage:()Ljava/lang/String;\n-  #119 = Utf8               Not a valid number representation\n-  #120 = Utf8               com/fasterxml/jackson/core/io/BigDecimalParser\n-  #121 = Utf8               java/lang/String\n-  #122 = Utf8               java/lang/StringBuilder\n-  #123 = Class              #159          // java/util/Arrays\n-  #124 = NameAndType        #160:#161     // copyOfRange:([CII)[C\n-  #125 = NameAndType        #53:#162      // \"<init>\":([C)V\n-  #126 = NameAndType        #163:#164     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #127 = Utf8               (truncated, full length is\n-  #128 = NameAndType        #163:#165     // append:(I)Ljava/lang/StringBuilder;\n-  #129 = Utf8                chars)\n-  #130 = NameAndType        #166:#158     // toString:()Ljava/lang/String;\n-  #131 = Utf8               Value \\\"\n-  #132 = Utf8               \\\" can not be represented as `java.math.BigDecimal`, reason:\n-  #133 = NameAndType        #53:#167      // \"<init>\":(Ljava/lang/String;)V\n-  #134 = NameAndType        #60:#64       // parse:([CII)Ljava/math/BigDecimal;\n-  #135 = Utf8               Multiple signs in exponent\n-  #136 = Utf8               Multiple signs in number\n-  #137 = Utf8               Multiple exponent markers\n-  #138 = Utf8               Multiple decimal points\n-  #139 = NameAndType        #168:#169     // parseInt:(Ljava/lang/String;)I\n-  #140 = NameAndType        #101:#102     // adjustScale:(IJ)I\n-  #141 = NameAndType        #105:#106     // toBigDecimalRec:([CIIII)Ljava/math/BigDecimal;\n-  #142 = NameAndType        #170:#171     // add:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;\n-  #143 = NameAndType        #172:#173     // setScale:(I)Ljava/math/BigDecimal;\n-  #144 = NameAndType        #174:#175     // negate:()Ljava/math/BigDecimal;\n-  #145 = Utf8               java/lang/Integer\n-  #146 = Utf8               Scale out of range:\n-  #147 = NameAndType        #163:#176     // append:(J)Ljava/lang/StringBuilder;\n-  #148 = Utf8                while adjusting scale\n-  #149 = Utf8                to exponent\n-  #150 = NameAndType        #177:#85      // ZERO:Ljava/math/BigDecimal;\n-  #151 = NameAndType        #178:#173     // scaleByPowerOfTen:(I)Ljava/math/BigDecimal;\n-  #152 = Utf8               java/lang/Object\n-  #153 = Utf8               java/lang/RuntimeException\n-  #154 = Utf8               toCharArray\n-  #155 = Utf8               ()[C\n-  #156 = Utf8               ([CII)V\n-  #157 = Utf8               getMessage\n-  #158 = Utf8               ()Ljava/lang/String;\n-  #159 = Utf8               java/util/Arrays\n-  #160 = Utf8               copyOfRange\n-  #161 = Utf8               ([CII)[C\n-  #162 = Utf8               ([C)V\n-  #163 = Utf8               append\n-  #164 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #165 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #166 = Utf8               toString\n-  #167 = Utf8               (Ljava/lang/String;)V\n-  #168 = Utf8               parseInt\n-  #169 = Utf8               (Ljava/lang/String;)I\n-  #170 = Utf8               add\n-  #171 = Utf8               (Ljava/math/BigDecimal;)Ljava/math/BigDecimal;\n-  #172 = Utf8               setScale\n-  #173 = Utf8               (I)Ljava/math/BigDecimal;\n-  #174 = Utf8               negate\n-  #175 = Utf8               ()Ljava/math/BigDecimal;\n-  #176 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #177 = Utf8               ZERO\n-  #178 = Utf8               scaleByPowerOfTen\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Methodref          #8.#9         // java/lang/String.toCharArray:()[C\n+    #8 = Class              #10           // java/lang/String\n+    #9 = NameAndType        #11:#12       // toCharArray:()[C\n+   #10 = Utf8               java/lang/String\n+   #11 = Utf8               toCharArray\n+   #12 = Utf8               ()[C\n+   #13 = Methodref          #14.#15       // com/fasterxml/jackson/core/io/BigDecimalParser.parse:([C)Ljava/math/BigDecimal;\n+   #14 = Class              #16           // com/fasterxml/jackson/core/io/BigDecimalParser\n+   #15 = NameAndType        #17:#18       // parse:([C)Ljava/math/BigDecimal;\n+   #16 = Utf8               com/fasterxml/jackson/core/io/BigDecimalParser\n+   #17 = Utf8               parse\n+   #18 = Utf8               ([C)Ljava/math/BigDecimal;\n+   #19 = Class              #20           // java/math/BigDecimal\n+   #20 = Utf8               java/math/BigDecimal\n+   #21 = Methodref          #19.#22       // java/math/BigDecimal.\"<init>\":([CII)V\n+   #22 = NameAndType        #5:#23        // \"<init>\":([CII)V\n+   #23 = Utf8               ([CII)V\n+   #24 = Methodref          #14.#25       // com/fasterxml/jackson/core/io/BigDecimalParser.parseBigDecimal:([CIII)Ljava/math/BigDecimal;\n+   #25 = NameAndType        #26:#27       // parseBigDecimal:([CIII)Ljava/math/BigDecimal;\n+   #26 = Utf8               parseBigDecimal\n+   #27 = Utf8               ([CIII)Ljava/math/BigDecimal;\n+   #28 = Class              #29           // java/lang/ArithmeticException\n+   #29 = Utf8               java/lang/ArithmeticException\n+   #30 = Class              #31           // java/lang/NumberFormatException\n+   #31 = Utf8               java/lang/NumberFormatException\n+   #32 = Methodref          #33.#34       // java/lang/RuntimeException.getMessage:()Ljava/lang/String;\n+   #33 = Class              #35           // java/lang/RuntimeException\n+   #34 = NameAndType        #36:#37       // getMessage:()Ljava/lang/String;\n+   #35 = Utf8               java/lang/RuntimeException\n+   #36 = Utf8               getMessage\n+   #37 = Utf8               ()Ljava/lang/String;\n+   #38 = String             #39           // Not a valid number representation\n+   #39 = Utf8               Not a valid number representation\n+   #40 = Methodref          #8.#22        // java/lang/String.\"<init>\":([CII)V\n+   #41 = Class              #42           // java/lang/StringBuilder\n+   #42 = Utf8               java/lang/StringBuilder\n+   #43 = Methodref          #41.#3        // java/lang/StringBuilder.\"<init>\":()V\n+   #44 = Methodref          #45.#46       // java/util/Arrays.copyOfRange:([CII)[C\n+   #45 = Class              #47           // java/util/Arrays\n+   #46 = NameAndType        #48:#49       // copyOfRange:([CII)[C\n+   #47 = Utf8               java/util/Arrays\n+   #48 = Utf8               copyOfRange\n+   #49 = Utf8               ([CII)[C\n+   #50 = Methodref          #8.#51        // java/lang/String.\"<init>\":([C)V\n+   #51 = NameAndType        #5:#52        // \"<init>\":([C)V\n+   #52 = Utf8               ([C)V\n+   #53 = Methodref          #41.#54       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #54 = NameAndType        #55:#56       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #55 = Utf8               append\n+   #56 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #57 = String             #58           // (truncated, full length is\n+   #58 = Utf8               (truncated, full length is\n+   #59 = Methodref          #41.#60       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #60 = NameAndType        #55:#61       // append:(I)Ljava/lang/StringBuilder;\n+   #61 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #62 = String             #63           //  chars)\n+   #63 = Utf8                chars)\n+   #64 = Methodref          #41.#65       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #65 = NameAndType        #66:#37       // toString:()Ljava/lang/String;\n+   #66 = Utf8               toString\n+   #67 = String             #68           // Value \\\"\n+   #68 = Utf8               Value \\\"\n+   #69 = String             #70           // \\\" can not be represented as `java.math.BigDecimal`, reason:\n+   #70 = Utf8               \\\" can not be represented as `java.math.BigDecimal`, reason:\n+   #71 = Methodref          #30.#72       // java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+   #72 = NameAndType        #5:#73        // \"<init>\":(Ljava/lang/String;)V\n+   #73 = Utf8               (Ljava/lang/String;)V\n+   #74 = Methodref          #14.#75       // com/fasterxml/jackson/core/io/BigDecimalParser.parse:([CII)Ljava/math/BigDecimal;\n+   #75 = NameAndType        #17:#76       // parse:([CII)Ljava/math/BigDecimal;\n+   #76 = Utf8               ([CII)Ljava/math/BigDecimal;\n+   #77 = String             #78           // Multiple signs in exponent\n+   #78 = Utf8               Multiple signs in exponent\n+   #79 = String             #80           // Multiple signs in number\n+   #80 = Utf8               Multiple signs in number\n+   #81 = String             #82           // Multiple exponent markers\n+   #82 = Utf8               Multiple exponent markers\n+   #83 = String             #84           // Multiple decimal points\n+   #84 = Utf8               Multiple decimal points\n+   #85 = Methodref          #86.#87       // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+   #86 = Class              #88           // java/lang/Integer\n+   #87 = NameAndType        #89:#90       // parseInt:(Ljava/lang/String;)I\n+   #88 = Utf8               java/lang/Integer\n+   #89 = Utf8               parseInt\n+   #90 = Utf8               (Ljava/lang/String;)I\n+   #91 = Methodref          #14.#92       // com/fasterxml/jackson/core/io/BigDecimalParser.adjustScale:(IJ)I\n+   #92 = NameAndType        #93:#94       // adjustScale:(IJ)I\n+   #93 = Utf8               adjustScale\n+   #94 = Utf8               (IJ)I\n+   #95 = Methodref          #14.#96       // com/fasterxml/jackson/core/io/BigDecimalParser.toBigDecimalRec:([CIIII)Ljava/math/BigDecimal;\n+   #96 = NameAndType        #97:#98       // toBigDecimalRec:([CIIII)Ljava/math/BigDecimal;\n+   #97 = Utf8               toBigDecimalRec\n+   #98 = Utf8               ([CIIII)Ljava/math/BigDecimal;\n+   #99 = Methodref          #19.#100      // java/math/BigDecimal.add:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;\n+  #100 = NameAndType        #101:#102     // add:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;\n+  #101 = Utf8               add\n+  #102 = Utf8               (Ljava/math/BigDecimal;)Ljava/math/BigDecimal;\n+  #103 = Methodref          #19.#104      // java/math/BigDecimal.setScale:(I)Ljava/math/BigDecimal;\n+  #104 = NameAndType        #105:#106     // setScale:(I)Ljava/math/BigDecimal;\n+  #105 = Utf8               setScale\n+  #106 = Utf8               (I)Ljava/math/BigDecimal;\n+  #107 = Methodref          #19.#108      // java/math/BigDecimal.negate:()Ljava/math/BigDecimal;\n+  #108 = NameAndType        #109:#110     // negate:()Ljava/math/BigDecimal;\n+  #109 = Utf8               negate\n+  #110 = Utf8               ()Ljava/math/BigDecimal;\n+  #111 = Long               2147483647l\n+  #113 = Long               -2147483648l\n+  #115 = String             #116          // Scale out of range:\n+  #116 = Utf8               Scale out of range:\n+  #117 = Methodref          #41.#118      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+  #118 = NameAndType        #55:#119      // append:(J)Ljava/lang/StringBuilder;\n+  #119 = Utf8               (J)Ljava/lang/StringBuilder;\n+  #120 = String             #121          //  while adjusting scale\n+  #121 = Utf8                while adjusting scale\n+  #122 = String             #123          //  to exponent\n+  #123 = Utf8                to exponent\n+  #124 = Fieldref           #19.#125      // java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n+  #125 = NameAndType        #126:#127     // ZERO:Ljava/math/BigDecimal;\n+  #126 = Utf8               ZERO\n+  #127 = Utf8               Ljava/math/BigDecimal;\n+  #128 = Methodref          #19.#129      // java/math/BigDecimal.scaleByPowerOfTen:(I)Ljava/math/BigDecimal;\n+  #129 = NameAndType        #130:#106     // scaleByPowerOfTen:(I)Ljava/math/BigDecimal;\n+  #130 = Utf8               scaleByPowerOfTen\n+  #131 = Utf8               MAX_CHARS_TO_REPORT\n+  #132 = Utf8               I\n+  #133 = Utf8               ConstantValue\n+  #134 = Integer            1000\n+  #135 = Utf8               Code\n+  #136 = Utf8               LineNumberTable\n+  #137 = Utf8               LocalVariableTable\n+  #138 = Utf8               this\n+  #139 = Utf8               Lcom/fasterxml/jackson/core/io/BigDecimalParser;\n+  #140 = Utf8               (Ljava/lang/String;)Ljava/math/BigDecimal;\n+  #141 = Utf8               valueStr\n+  #142 = Utf8               Ljava/lang/String;\n+  #143 = Utf8               stringToReport\n+  #144 = Utf8               desc\n+  #145 = Utf8               e\n+  #146 = Utf8               Ljava/lang/RuntimeException;\n+  #147 = Utf8               chars\n+  #148 = Utf8               [C\n+  #149 = Utf8               off\n+  #150 = Utf8               len\n+  #151 = Utf8               StackMapTable\n+  #152 = Utf8               c\n+  #153 = Utf8               C\n+  #154 = Utf8               i\n+  #155 = Utf8               expStr\n+  #156 = Utf8               numEndIdx\n+  #157 = Utf8               leftLen\n+  #158 = Utf8               left\n+  #159 = Utf8               rightLen\n+  #160 = Utf8               right\n+  #161 = Utf8               res\n+  #162 = Utf8               splitLen\n+  #163 = Utf8               numHasSign\n+  #164 = Utf8               Z\n+  #165 = Utf8               expHasSign\n+  #166 = Utf8               neg\n+  #167 = Utf8               numIdx\n+  #168 = Utf8               expIdx\n+  #169 = Utf8               dotIdx\n+  #170 = Utf8               scale\n+  #171 = Utf8               endIdx\n+  #172 = Utf8               exp\n+  #173 = Class              #148          // \"[C\"\n+  #174 = Utf8               J\n+  #175 = Utf8               adjScale\n+  #176 = Utf8               mid\n+  #177 = Utf8               SourceFile\n+  #178 = Utf8               BigDecimalParser.java\n {\n   private static final int MAX_CHARS_TO_REPORT = 1000;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 1000\n \n   private com.fasterxml.jackson.core.io.BigDecimalParser();\n@@ -206,16 +206,16 @@\n \n   public static java.math.BigDecimal parse(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/math/BigDecimal;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #2                  // Method java/lang/String.toCharArray:()[C\n-         4: invokestatic  #3                  // Method parse:([C)Ljava/math/BigDecimal;\n+         1: invokevirtual #7                  // Method java/lang/String.toCharArray:()[C\n+         4: invokestatic  #13                 // Method parse:([C)Ljava/math/BigDecimal;\n          7: areturn\n       LineNumberTable:\n         line 29: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 valueStr   Ljava/lang/String;\n \n@@ -223,83 +223,83 @@\n     descriptor: ([CII)Ljava/math/BigDecimal;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=6, locals=6, args_size=3\n          0: iload_2\n          1: sipush        500\n          4: if_icmpge     18\n-         7: new           #4                  // class java/math/BigDecimal\n+         7: new           #19                 // class java/math/BigDecimal\n         10: dup\n         11: aload_0\n         12: iload_1\n         13: iload_2\n-        14: invokespecial #5                  // Method java/math/BigDecimal.\"<init>\":([CII)V\n+        14: invokespecial #21                 // Method java/math/BigDecimal.\"<init>\":([CII)V\n         17: areturn\n         18: aload_0\n         19: iload_1\n         20: iload_2\n         21: iload_2\n         22: bipush        10\n         24: idiv\n-        25: invokestatic  #6                  // Method parseBigDecimal:([CIII)Ljava/math/BigDecimal;\n+        25: invokestatic  #24                 // Method parseBigDecimal:([CIII)Ljava/math/BigDecimal;\n         28: areturn\n         29: astore_3\n         30: aload_3\n-        31: invokevirtual #9                  // Method java/lang/RuntimeException.getMessage:()Ljava/lang/String;\n+        31: invokevirtual #32                 // Method java/lang/RuntimeException.getMessage:()Ljava/lang/String;\n         34: astore        4\n         36: aload         4\n         38: ifnonnull     45\n-        41: ldc           #10                 // String Not a valid number representation\n+        41: ldc           #38                 // String Not a valid number representation\n         43: astore        4\n         45: iload_2\n         46: sipush        1000\n         49: if_icmpgt     67\n-        52: new           #12                 // class java/lang/String\n+        52: new           #8                  // class java/lang/String\n         55: dup\n         56: aload_0\n         57: iload_1\n         58: iload_2\n-        59: invokespecial #13                 // Method java/lang/String.\"<init>\":([CII)V\n+        59: invokespecial #40                 // Method java/lang/String.\"<init>\":([CII)V\n         62: astore        5\n         64: goto          112\n-        67: new           #14                 // class java/lang/StringBuilder\n+        67: new           #41                 // class java/lang/StringBuilder\n         70: dup\n-        71: invokespecial #15                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        74: new           #12                 // class java/lang/String\n+        71: invokespecial #43                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        74: new           #8                  // class java/lang/String\n         77: dup\n         78: aload_0\n         79: iload_1\n         80: sipush        1000\n-        83: invokestatic  #16                 // Method java/util/Arrays.copyOfRange:([CII)[C\n-        86: invokespecial #17                 // Method java/lang/String.\"<init>\":([C)V\n-        89: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        92: ldc           #19                 // String (truncated, full length is\n-        94: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        83: invokestatic  #44                 // Method java/util/Arrays.copyOfRange:([CII)[C\n+        86: invokespecial #50                 // Method java/lang/String.\"<init>\":([C)V\n+        89: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        92: ldc           #57                 // String (truncated, full length is\n+        94: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         97: aload_0\n         98: arraylength\n-        99: invokevirtual #20                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       102: ldc           #21                 // String  chars)\n-       104: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       107: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        99: invokevirtual #59                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       102: ldc           #62                 // String  chars)\n+       104: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       107: invokevirtual #64                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        110: astore        5\n-       112: new           #8                  // class java/lang/NumberFormatException\n+       112: new           #30                 // class java/lang/NumberFormatException\n        115: dup\n-       116: new           #14                 // class java/lang/StringBuilder\n+       116: new           #41                 // class java/lang/StringBuilder\n        119: dup\n-       120: invokespecial #15                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       123: ldc           #23                 // String Value \\\"\n-       125: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       120: invokespecial #43                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       123: ldc           #67                 // String Value \\\"\n+       125: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        128: aload         5\n-       130: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       133: ldc           #24                 // String \\\" can not be represented as `java.math.BigDecimal`, reason:\n-       135: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       130: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       133: ldc           #69                 // String \\\" can not be represented as `java.math.BigDecimal`, reason:\n+       135: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        138: aload         4\n-       140: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       143: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       146: invokespecial #25                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+       140: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       143: invokevirtual #64                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       146: invokespecial #71                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n        149: athrow\n       Exception table:\n          from    to  target type\n              0    17    29   Class java/lang/ArithmeticException\n              0    17    29   Class java/lang/NumberFormatException\n             18    28    29   Class java/lang/ArithmeticException\n             18    28    29   Class java/lang/NumberFormatException\n@@ -341,15 +341,15 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n          2: aload_0\n          3: arraylength\n-         4: invokestatic  #26                 // Method parse:([CII)Ljava/math/BigDecimal;\n+         4: invokestatic  #74                 // Method parse:([CII)Ljava/math/BigDecimal;\n          7: areturn\n       LineNumberTable:\n         line 60: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 chars   [C\n \n@@ -394,80 +394,80 @@\n                      101: 205\n                  default: 249\n             }\n         96: iload         8\n         98: iflt          122\n        101: iload         5\n        103: ifeq          116\n-       106: new           #8                  // class java/lang/NumberFormatException\n+       106: new           #30                 // class java/lang/NumberFormatException\n        109: dup\n-       110: ldc           #27                 // String Multiple signs in exponent\n-       112: invokespecial #25                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+       110: ldc           #77                 // String Multiple signs in exponent\n+       112: invokespecial #71                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n        115: athrow\n        116: iconst_1\n        117: istore        5\n        119: goto          263\n        122: iload         4\n        124: ifeq          137\n-       127: new           #8                  // class java/lang/NumberFormatException\n+       127: new           #30                 // class java/lang/NumberFormatException\n        130: dup\n-       131: ldc           #28                 // String Multiple signs in number\n-       133: invokespecial #25                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+       131: ldc           #79                 // String Multiple signs in number\n+       133: invokespecial #71                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n        136: athrow\n        137: iconst_1\n        138: istore        4\n        140: iload         12\n        142: iconst_1\n        143: iadd\n        144: istore        7\n        146: goto          263\n        149: iload         8\n        151: iflt          175\n        154: iload         5\n        156: ifeq          169\n-       159: new           #8                  // class java/lang/NumberFormatException\n+       159: new           #30                 // class java/lang/NumberFormatException\n        162: dup\n-       163: ldc           #27                 // String Multiple signs in exponent\n-       165: invokespecial #25                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+       163: ldc           #77                 // String Multiple signs in exponent\n+       165: invokespecial #71                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n        168: athrow\n        169: iconst_1\n        170: istore        5\n        172: goto          263\n        175: iload         4\n        177: ifeq          190\n-       180: new           #8                  // class java/lang/NumberFormatException\n+       180: new           #30                 // class java/lang/NumberFormatException\n        183: dup\n-       184: ldc           #28                 // String Multiple signs in number\n-       186: invokespecial #25                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+       184: ldc           #79                 // String Multiple signs in number\n+       186: invokespecial #71                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n        189: athrow\n        190: iconst_1\n        191: istore        4\n        193: iconst_1\n        194: istore        6\n        196: iload         12\n        198: iconst_1\n        199: iadd\n        200: istore        7\n        202: goto          263\n        205: iload         8\n        207: iflt          220\n-       210: new           #8                  // class java/lang/NumberFormatException\n+       210: new           #30                 // class java/lang/NumberFormatException\n        213: dup\n-       214: ldc           #29                 // String Multiple exponent markers\n-       216: invokespecial #25                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+       214: ldc           #81                 // String Multiple exponent markers\n+       216: invokespecial #71                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n        219: athrow\n        220: iload         12\n        222: istore        8\n        224: goto          263\n        227: iload         9\n        229: iflt          242\n-       232: new           #8                  // class java/lang/NumberFormatException\n+       232: new           #30                 // class java/lang/NumberFormatException\n        235: dup\n-       236: ldc           #30                 // String Multiple decimal points\n-       238: invokespecial #25                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+       236: ldc           #83                 // String Multiple decimal points\n+       238: invokespecial #71                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n        241: athrow\n        242: iload         12\n        244: istore        9\n        246: goto          263\n        249: iload         9\n        251: iflt          263\n        254: iload         8\n@@ -478,34 +478,34 @@\n        266: goto          29\n        269: iconst_0\n        270: istore        13\n        272: iload         8\n        274: iflt          322\n        277: iload         8\n        279: istore        12\n-       281: new           #12                 // class java/lang/String\n+       281: new           #8                  // class java/lang/String\n        284: dup\n        285: aload_0\n        286: iload         8\n        288: iconst_1\n        289: iadd\n        290: iload         11\n        292: iload         8\n        294: isub\n        295: iconst_1\n        296: isub\n-       297: invokespecial #13                 // Method java/lang/String.\"<init>\":([CII)V\n+       297: invokespecial #40                 // Method java/lang/String.\"<init>\":([CII)V\n        300: astore        14\n        302: aload         14\n-       304: invokestatic  #31                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+       304: invokestatic  #85                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n        307: istore        13\n        309: iload         10\n        311: iload         13\n        313: i2l\n-       314: invokestatic  #32                 // Method adjustScale:(IJ)I\n+       314: invokestatic  #91                 // Method adjustScale:(IJ)I\n        317: istore        10\n        319: goto          326\n        322: iload         11\n        324: istore        12\n        326: iload         9\n        328: iflt          390\n        331: iload         9\n@@ -513,15 +513,15 @@\n        335: isub\n        336: istore        15\n        338: aload_0\n        339: iload         7\n        341: iload         15\n        343: iload         13\n        345: iload_3\n-       346: invokestatic  #33                 // Method toBigDecimalRec:([CIIII)Ljava/math/BigDecimal;\n+       346: invokestatic  #95                 // Method toBigDecimalRec:([CIIII)Ljava/math/BigDecimal;\n        349: astore        16\n        351: iload         12\n        353: iload         9\n        355: isub\n        356: iconst_1\n        357: isub\n        358: istore        17\n@@ -530,40 +530,40 @@\n        363: iconst_1\n        364: iadd\n        365: iload         17\n        367: iload         13\n        369: iload         17\n        371: isub\n        372: iload_3\n-       373: invokestatic  #33                 // Method toBigDecimalRec:([CIIII)Ljava/math/BigDecimal;\n+       373: invokestatic  #95                 // Method toBigDecimalRec:([CIIII)Ljava/math/BigDecimal;\n        376: astore        18\n        378: aload         16\n        380: aload         18\n-       382: invokevirtual #34                 // Method java/math/BigDecimal.add:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;\n+       382: invokevirtual #99                 // Method java/math/BigDecimal.add:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;\n        385: astore        14\n        387: goto          406\n        390: aload_0\n        391: iload         7\n        393: iload         12\n        395: iload         7\n        397: isub\n        398: iload         13\n        400: iload_3\n-       401: invokestatic  #33                 // Method toBigDecimalRec:([CIIII)Ljava/math/BigDecimal;\n+       401: invokestatic  #95                 // Method toBigDecimalRec:([CIIII)Ljava/math/BigDecimal;\n        404: astore        14\n        406: iload         10\n        408: ifeq          420\n        411: aload         14\n        413: iload         10\n-       415: invokevirtual #35                 // Method java/math/BigDecimal.setScale:(I)Ljava/math/BigDecimal;\n+       415: invokevirtual #103                // Method java/math/BigDecimal.setScale:(I)Ljava/math/BigDecimal;\n        418: astore        14\n        420: iload         6\n        422: ifeq          432\n        425: aload         14\n-       427: invokevirtual #36                 // Method java/math/BigDecimal.negate:()Ljava/math/BigDecimal;\n+       427: invokevirtual #107                // Method java/math/BigDecimal.negate:()Ljava/math/BigDecimal;\n        430: astore        14\n        432: aload         14\n        434: areturn\n       LineNumberTable:\n         line 64: 0\n         line 65: 3\n         line 66: 6\n@@ -697,40 +697,40 @@\n       stack=5, locals=5, args_size=2\n          0: iload_0\n          1: i2l\n          2: lload_1\n          3: lsub\n          4: lstore_3\n          5: lload_3\n-         6: ldc2_w        #38                 // long 2147483647l\n+         6: ldc2_w        #111                // long 2147483647l\n          9: lcmp\n         10: ifgt          21\n         13: lload_3\n-        14: ldc2_w        #40                 // long -2147483648l\n+        14: ldc2_w        #113                // long -2147483648l\n         17: lcmp\n         18: ifge          66\n-        21: new           #8                  // class java/lang/NumberFormatException\n+        21: new           #30                 // class java/lang/NumberFormatException\n         24: dup\n-        25: new           #14                 // class java/lang/StringBuilder\n+        25: new           #41                 // class java/lang/StringBuilder\n         28: dup\n-        29: invokespecial #15                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        32: ldc           #42                 // String Scale out of range:\n-        34: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        29: invokespecial #43                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        32: ldc           #115                // String Scale out of range:\n+        34: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         37: lload_3\n-        38: invokevirtual #43                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-        41: ldc           #44                 // String  while adjusting scale\n-        43: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        38: invokevirtual #117                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        41: ldc           #120                // String  while adjusting scale\n+        43: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         46: iload_0\n-        47: invokevirtual #20                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        50: ldc           #45                 // String  to exponent\n-        52: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        47: invokevirtual #59                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        50: ldc           #122                // String  to exponent\n+        52: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         55: lload_1\n-        56: invokevirtual #43                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-        59: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        62: invokespecial #25                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+        56: invokevirtual #117                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        59: invokevirtual #64                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        62: invokespecial #71                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n         65: athrow\n         66: lload_3\n         67: l2i\n         68: ireturn\n       LineNumberTable:\n         line 162: 0\n         line 163: 5\n@@ -764,43 +764,43 @@\n         13: iload         5\n         15: iload_3\n         16: iload_2\n         17: iadd\n         18: iload         5\n         20: isub\n         21: iload         4\n-        23: invokestatic  #33                 // Method toBigDecimalRec:([CIIII)Ljava/math/BigDecimal;\n+        23: invokestatic  #95                 // Method toBigDecimalRec:([CIIII)Ljava/math/BigDecimal;\n         26: astore        6\n         28: aload_0\n         29: iload_1\n         30: iload         5\n         32: iadd\n         33: iload_2\n         34: iload         5\n         36: isub\n         37: iload_3\n         38: iload         4\n-        40: invokestatic  #33                 // Method toBigDecimalRec:([CIIII)Ljava/math/BigDecimal;\n+        40: invokestatic  #95                 // Method toBigDecimalRec:([CIIII)Ljava/math/BigDecimal;\n         43: astore        7\n         45: aload         6\n         47: aload         7\n-        49: invokevirtual #34                 // Method java/math/BigDecimal.add:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;\n+        49: invokevirtual #99                 // Method java/math/BigDecimal.add:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;\n         52: areturn\n         53: iload_2\n         54: ifne          61\n-        57: getstatic     #46                 // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n+        57: getstatic     #124                // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n         60: areturn\n-        61: new           #4                  // class java/math/BigDecimal\n+        61: new           #19                 // class java/math/BigDecimal\n         64: dup\n         65: aload_0\n         66: iload_1\n         67: iload_2\n-        68: invokespecial #5                  // Method java/math/BigDecimal.\"<init>\":([CII)V\n+        68: invokespecial #21                 // Method java/math/BigDecimal.\"<init>\":([CII)V\n         71: iload_3\n-        72: invokevirtual #47                 // Method java/math/BigDecimal.scaleByPowerOfTen:(I)Ljava/math/BigDecimal;\n+        72: invokevirtual #128                // Method java/math/BigDecimal.scaleByPowerOfTen:(I)Ljava/math/BigDecimal;\n         75: areturn\n       LineNumberTable:\n         line 173: 0\n         line 174: 6\n         line 175: 11\n         line 176: 28\n         line 178: 45\n"}]}
