{"diffoscope-json-version": 1, "source1": "first/BitInputStream.class", "source2": "second/BitInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,42 +1,42 @@\n-  SHA-256 checksum cc64cde730372065007df80caea90f14607c92a27213dff093930a9d872f458b\n+  SHA-256 checksum aa066e9b7bb81b1a50570bec2f11ada78f968bcc37e180412c5a786173508f11\n   Compiled from \"BitInputStream.java\"\n public class org.apache.commons.compress.utils.BitInputStream implements java.io.Closeable\n   minor version: 0\n-  major version: 52\n+  major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #9                          // org/apache/commons/compress/utils/BitInputStream\n   super_class: #26                        // java/lang/Object\n   interfaces: 1, fields: 6, methods: 12, attributes: 1\n Constant pool:\n-   #1 = Methodref          #26.#65        // java/lang/Object.\"<init>\":()V\n-   #2 = Class              #66            // org/apache/commons/compress/utils/CountingInputStream\n-   #3 = Methodref          #2.#67         // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #4 = Fieldref           #9.#68         // org/apache/commons/compress/utils/BitInputStream.in:Lorg/apache/commons/compress/utils/CountingInputStream;\n-   #5 = Fieldref           #9.#69         // org/apache/commons/compress/utils/BitInputStream.byteOrder:Ljava/nio/ByteOrder;\n-   #6 = Methodref          #2.#70         // org/apache/commons/compress/utils/CountingInputStream.close:()V\n-   #7 = Fieldref           #9.#71         // org/apache/commons/compress/utils/BitInputStream.bitsCached:J\n-   #8 = Fieldref           #9.#72         // org/apache/commons/compress/utils/BitInputStream.bitsCachedSize:I\n-   #9 = Class              #73            // org/apache/commons/compress/utils/BitInputStream\n-  #10 = Class              #74            // java/io/IOException\n-  #11 = String             #75            // count must not be negative or greater than 63\n-  #12 = Methodref          #10.#76        // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-  #13 = Methodref          #9.#77         // org/apache/commons/compress/utils/BitInputStream.ensureCache:(I)Z\n+   #1 = Methodref          #26.#64        // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #65            // org/apache/commons/compress/utils/CountingInputStream\n+   #3 = Methodref          #2.#66         // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #4 = Fieldref           #9.#67         // org/apache/commons/compress/utils/BitInputStream.in:Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #5 = Fieldref           #9.#68         // org/apache/commons/compress/utils/BitInputStream.byteOrder:Ljava/nio/ByteOrder;\n+   #6 = Methodref          #2.#69         // org/apache/commons/compress/utils/CountingInputStream.close:()V\n+   #7 = Fieldref           #9.#70         // org/apache/commons/compress/utils/BitInputStream.bitsCached:J\n+   #8 = Fieldref           #9.#71         // org/apache/commons/compress/utils/BitInputStream.bitsCachedSize:I\n+   #9 = Class              #72            // org/apache/commons/compress/utils/BitInputStream\n+  #10 = Class              #73            // java/io/IOException\n+  #11 = String             #74            // count must not be negative or greater than 63\n+  #12 = Methodref          #10.#75        // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+  #13 = Methodref          #9.#76         // org/apache/commons/compress/utils/BitInputStream.ensureCache:(I)Z\n   #14 = Long               -1l\n-  #16 = Methodref          #9.#78         // org/apache/commons/compress/utils/BitInputStream.processBitsGreater57:(I)J\n-  #17 = Methodref          #9.#79         // org/apache/commons/compress/utils/BitInputStream.readCachedBits:(I)J\n-  #18 = Class              #80            // java/lang/Byte\n+  #16 = Methodref          #9.#77         // org/apache/commons/compress/utils/BitInputStream.processBitsGreater57:(I)J\n+  #17 = Methodref          #9.#78         // org/apache/commons/compress/utils/BitInputStream.readCachedBits:(I)J\n+  #18 = Class              #79            // java/lang/Byte\n   #19 = Long               8l\n-  #21 = Methodref          #2.#81         // org/apache/commons/compress/utils/CountingInputStream.available:()I\n-  #22 = Methodref          #2.#82         // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n-  #23 = Methodref          #2.#83         // org/apache/commons/compress/utils/CountingInputStream.read:()I\n-  #24 = Fieldref           #84.#85        // java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n-  #25 = Fieldref           #9.#86         // org/apache/commons/compress/utils/BitInputStream.MASKS:[J\n-  #26 = Class              #87            // java/lang/Object\n-  #27 = Class              #88            // java/io/Closeable\n+  #21 = Methodref          #2.#80         // org/apache/commons/compress/utils/CountingInputStream.available:()I\n+  #22 = Methodref          #2.#81         // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+  #23 = Methodref          #2.#82         // org/apache/commons/compress/utils/CountingInputStream.read:()I\n+  #24 = Fieldref           #83.#84        // java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n+  #25 = Fieldref           #9.#85         // org/apache/commons/compress/utils/BitInputStream.MASKS:[J\n+  #26 = Class              #86            // java/lang/Object\n+  #27 = Class              #87            // java/io/Closeable\n   #28 = Utf8               MAXIMUM_CACHE_SIZE\n   #29 = Utf8               I\n   #30 = Utf8               ConstantValue\n   #31 = Integer            63\n   #32 = Utf8               MASKS\n   #33 = Utf8               [J\n   #34 = Utf8               in\n@@ -59,51 +59,50 @@\n   #51 = Utf8               StackMapTable\n   #52 = Utf8               ()I\n   #53 = Utf8               bitsAvailable\n   #54 = Utf8               ()J\n   #55 = Utf8               alignWithByteBoundary\n   #56 = Utf8               getBytesRead\n   #57 = Utf8               processBitsGreater57\n-  #58 = Class              #73            // org/apache/commons/compress/utils/BitInputStream\n-  #59 = Utf8               readCachedBits\n-  #60 = Utf8               ensureCache\n-  #61 = Utf8               (I)Z\n-  #62 = Utf8               <clinit>\n-  #63 = Utf8               SourceFile\n-  #64 = Utf8               BitInputStream.java\n-  #65 = NameAndType        #41:#46        // \"<init>\":()V\n-  #66 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n-  #67 = NameAndType        #41:#89        // \"<init>\":(Ljava/io/InputStream;)V\n-  #68 = NameAndType        #34:#35        // in:Lorg/apache/commons/compress/utils/CountingInputStream;\n-  #69 = NameAndType        #36:#37        // byteOrder:Ljava/nio/ByteOrder;\n-  #70 = NameAndType        #45:#46        // close:()V\n-  #71 = NameAndType        #38:#39        // bitsCached:J\n-  #72 = NameAndType        #40:#29        // bitsCachedSize:I\n-  #73 = Utf8               org/apache/commons/compress/utils/BitInputStream\n-  #74 = Utf8               java/io/IOException\n-  #75 = Utf8               count must not be negative or greater than 63\n-  #76 = NameAndType        #41:#90        // \"<init>\":(Ljava/lang/String;)V\n-  #77 = NameAndType        #60:#61        // ensureCache:(I)Z\n-  #78 = NameAndType        #57:#50        // processBitsGreater57:(I)J\n-  #79 = NameAndType        #59:#50        // readCachedBits:(I)J\n-  #80 = Utf8               java/lang/Byte\n-  #81 = NameAndType        #91:#52        // available:()I\n-  #82 = NameAndType        #56:#54        // getBytesRead:()J\n-  #83 = NameAndType        #92:#52        // read:()I\n-  #84 = Class              #93            // java/nio/ByteOrder\n-  #85 = NameAndType        #94:#37        // LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n-  #86 = NameAndType        #32:#33        // MASKS:[J\n-  #87 = Utf8               java/lang/Object\n-  #88 = Utf8               java/io/Closeable\n-  #89 = Utf8               (Ljava/io/InputStream;)V\n-  #90 = Utf8               (Ljava/lang/String;)V\n-  #91 = Utf8               available\n-  #92 = Utf8               read\n-  #93 = Utf8               java/nio/ByteOrder\n-  #94 = Utf8               LITTLE_ENDIAN\n+  #58 = Utf8               readCachedBits\n+  #59 = Utf8               ensureCache\n+  #60 = Utf8               (I)Z\n+  #61 = Utf8               <clinit>\n+  #62 = Utf8               SourceFile\n+  #63 = Utf8               BitInputStream.java\n+  #64 = NameAndType        #41:#46        // \"<init>\":()V\n+  #65 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n+  #66 = NameAndType        #41:#88        // \"<init>\":(Ljava/io/InputStream;)V\n+  #67 = NameAndType        #34:#35        // in:Lorg/apache/commons/compress/utils/CountingInputStream;\n+  #68 = NameAndType        #36:#37        // byteOrder:Ljava/nio/ByteOrder;\n+  #69 = NameAndType        #45:#46        // close:()V\n+  #70 = NameAndType        #38:#39        // bitsCached:J\n+  #71 = NameAndType        #40:#29        // bitsCachedSize:I\n+  #72 = Utf8               org/apache/commons/compress/utils/BitInputStream\n+  #73 = Utf8               java/io/IOException\n+  #74 = Utf8               count must not be negative or greater than 63\n+  #75 = NameAndType        #41:#89        // \"<init>\":(Ljava/lang/String;)V\n+  #76 = NameAndType        #59:#60        // ensureCache:(I)Z\n+  #77 = NameAndType        #57:#50        // processBitsGreater57:(I)J\n+  #78 = NameAndType        #58:#50        // readCachedBits:(I)J\n+  #79 = Utf8               java/lang/Byte\n+  #80 = NameAndType        #90:#52        // available:()I\n+  #81 = NameAndType        #56:#54        // getBytesRead:()J\n+  #82 = NameAndType        #91:#52        // read:()I\n+  #83 = Class              #92            // java/nio/ByteOrder\n+  #84 = NameAndType        #93:#37        // LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n+  #85 = NameAndType        #32:#33        // MASKS:[J\n+  #86 = Utf8               java/lang/Object\n+  #87 = Utf8               java/io/Closeable\n+  #88 = Utf8               (Ljava/io/InputStream;)V\n+  #89 = Utf8               (Ljava/lang/String;)V\n+  #90 = Utf8               available\n+  #91 = Utf8               read\n+  #92 = Utf8               java/nio/ByteOrder\n+  #93 = Utf8               LITTLE_ENDIAN\n {\n   private static final int MAXIMUM_CACHE_SIZE = 63;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 63\n \n   private static final long[] MASKS;\n"}]}
