{"diffoscope-json-version": 1, "source1": "first/FromNetASCIIOutputStream.class", "source2": "second/FromNetASCIIOutputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -5,21 +5,21 @@\n import java.io.OutputStream;\n import java.io.FilterOutputStream;\n \n public final class FromNetASCIIOutputStream extends FilterOutputStream\n {\n     private boolean lastWasCR;\n     \n-    public FromNetASCIIOutputStream(final OutputStream output) {\n-        super(output);\n+    public FromNetASCIIOutputStream(final OutputStream out) {\n+        super(out);\n         this.lastWasCR = false;\n     }\n     \n-    private void __write(final int ch) throws IOException {\n-        switch (ch) {\n+    private void __write(final int n) throws IOException {\n+        switch (n) {\n             case 13: {\n                 this.lastWasCR = true;\n                 break;\n             }\n             case 10: {\n                 if (this.lastWasCR) {\n                     this.out.write(FromNetASCIIInputStream._lineSeparatorBytes);\n@@ -31,42 +31,42 @@\n                 break;\n             }\n             default: {\n                 if (this.lastWasCR) {\n                     this.out.write(13);\n                     this.lastWasCR = false;\n                 }\n-                this.out.write(ch);\n+                this.out.write(n);\n                 break;\n             }\n         }\n     }\n     \n     @Override\n-    public synchronized void write(final int ch) throws IOException {\n+    public synchronized void write(final int n) throws IOException {\n         if (FromNetASCIIInputStream._noConversionRequired) {\n-            this.out.write(ch);\n+            this.out.write(n);\n             return;\n         }\n-        this.__write(ch);\n+        this.__write(n);\n     }\n     \n     @Override\n-    public synchronized void write(final byte[] buffer) throws IOException {\n-        this.write(buffer, 0, buffer.length);\n+    public synchronized void write(final byte[] array) throws IOException {\n+        this.write(array, 0, array.length);\n     }\n     \n     @Override\n-    public synchronized void write(final byte[] buffer, int offset, int length) throws IOException {\n+    public synchronized void write(final byte[] b, int off, int len) throws IOException {\n         if (FromNetASCIIInputStream._noConversionRequired) {\n-            this.out.write(buffer, offset, length);\n+            this.out.write(b, off, len);\n             return;\n         }\n-        while (length-- > 0) {\n-            this.__write(buffer[offset++]);\n+        while (len-- > 0) {\n+            this.__write(b[off++]);\n         }\n     }\n     \n     @Override\n     public synchronized void close() throws IOException {\n         if (FromNetASCIIInputStream._noConversionRequired) {\n             super.close();\n"}]}
