{"diffoscope-json-version": 1, "source1": "first/NTPUDPClient.class", "source2": "second/NTPUDPClient.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -11,39 +11,39 @@\n     public static final int DEFAULT_PORT = 123;\n     private int version;\n     \n     public NTPUDPClient() {\n         this.version = 3;\n     }\n     \n-    public TimeInfo getTime(final InetAddress host) throws IOException {\n-        return this.getTime(host, 123);\n+    public TimeInfo getTime(final InetAddress inetAddress) throws IOException {\n+        return this.getTime(inetAddress, 123);\n     }\n     \n-    public TimeInfo getTime(final InetAddress host, final int port) throws IOException {\n+    public TimeInfo getTime(final InetAddress address, final int port) throws IOException {\n         if (!this.isOpen()) {\n             this.open();\n         }\n-        final NtpV3Packet message = (NtpV3Packet)new NtpV3Impl();\n-        message.setMode(3);\n-        message.setVersion(this.version);\n-        final DatagramPacket sendPacket = message.getDatagramPacket();\n-        sendPacket.setAddress(host);\n-        sendPacket.setPort(port);\n-        final NtpV3Packet recMessage = (NtpV3Packet)new NtpV3Impl();\n-        final DatagramPacket receivePacket = recMessage.getDatagramPacket();\n-        final TimeStamp now = TimeStamp.getCurrentTime();\n-        message.setTransmitTime(now);\n-        this._socket_.send(sendPacket);\n-        this._socket_.receive(receivePacket);\n-        final long returnTimeMillis = System.currentTimeMillis();\n-        if (!now.equals((Object)recMessage.getOriginateTimeStamp())) {\n+        final NtpV3Impl ntpV3Impl = new NtpV3Impl();\n+        ((NtpV3Packet)ntpV3Impl).setMode(3);\n+        ((NtpV3Packet)ntpV3Impl).setVersion(this.version);\n+        final DatagramPacket datagramPacket = ((NtpV3Packet)ntpV3Impl).getDatagramPacket();\n+        datagramPacket.setAddress(address);\n+        datagramPacket.setPort(port);\n+        final NtpV3Impl ntpV3Impl2 = new NtpV3Impl();\n+        final DatagramPacket datagramPacket2 = ((NtpV3Packet)ntpV3Impl2).getDatagramPacket();\n+        final TimeStamp currentTime = TimeStamp.getCurrentTime();\n+        ((NtpV3Packet)ntpV3Impl).setTransmitTime(currentTime);\n+        this._socket_.send(datagramPacket);\n+        this._socket_.receive(datagramPacket2);\n+        final long currentTimeMillis = System.currentTimeMillis();\n+        if (!currentTime.equals((Object)((NtpV3Packet)ntpV3Impl2).getOriginateTimeStamp())) {\n             throw new IOException(\"Originate time does not match the request\");\n         }\n-        return new TimeInfo(recMessage, returnTimeMillis, false);\n+        return new TimeInfo((NtpV3Packet)ntpV3Impl2, currentTimeMillis, false);\n     }\n     \n     public int getVersion() {\n         return this.version;\n     }\n     \n     public void setVersion(final int version) {\n"}]}
