{"diffoscope-json-version": 1, "source1": "first/SuffixFileFilter.class", "source2": "second/SuffixFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,141 +1,141 @@\n-  SHA-256 checksum 34a4b04a5e7820cdd245e1f0390336382d781bc04fcc65b1f8eec07e8b5e552f\n+  SHA-256 checksum 168524cadbcb4068b0fa0cdf3467ab6a3ca3d4c661e34ba36fda03234bd1d704\n   Compiled from \"SuffixFileFilter.java\"\n public class org.apache.commons.io.filefilter.SuffixFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #32                         // org/apache/commons/io/filefilter/SuffixFileFilter\n-  super_class: #33                        // org/apache/commons/io/filefilter/AbstractFileFilter\n+  this_class: #8                          // org/apache/commons/io/filefilter/SuffixFileFilter\n+  super_class: #14                        // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 1, fields: 3, methods: 11, attributes: 1\n Constant pool:\n-    #1 = Fieldref           #53.#68       // org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n-    #2 = Methodref          #32.#69       // org/apache/commons/io/filefilter/SuffixFileFilter.\"<init>\":(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V\n-    #3 = Methodref          #33.#70       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-    #4 = Class              #71           // java/lang/IllegalArgumentException\n-    #5 = String             #72           // The list of suffixes must not be null\n-    #6 = Methodref          #4.#73        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #7 = Fieldref           #32.#74       // org/apache/commons/io/filefilter/SuffixFileFilter.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-    #8 = InterfaceMethodref #52.#75       // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-    #9 = Class              #41           // \"[Ljava/lang/String;\"\n-   #10 = Fieldref           #32.#76       // org/apache/commons/io/filefilter/SuffixFileFilter.suffixes:[Ljava/lang/String;\n-   #11 = Fieldref           #32.#77       // org/apache/commons/io/filefilter/SuffixFileFilter.caseSensitivity:Lorg/apache/commons/io/IOCase;\n-   #12 = Methodref          #32.#78       // org/apache/commons/io/filefilter/SuffixFileFilter.\"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-   #13 = Methodref          #32.#79       // org/apache/commons/io/filefilter/SuffixFileFilter.\"<init>\":([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-   #14 = String             #80           // The suffix must not be null\n-   #15 = Class              #81           // java/lang/String\n-   #16 = String             #82           // The array of suffixes must not be null\n-   #17 = Methodref          #83.#84       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #18 = Methodref          #85.#86       // java/io/File.getName:()Ljava/lang/String;\n-   #19 = Methodref          #32.#87       // org/apache/commons/io/filefilter/SuffixFileFilter.accept:(Ljava/lang/String;)Z\n-   #20 = InterfaceMethodref #88.#89       // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n-   #21 = Methodref          #90.#91       // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-   #22 = Methodref          #32.#92       // org/apache/commons/io/filefilter/SuffixFileFilter.toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-   #23 = Methodref          #53.#93       // org/apache/commons/io/IOCase.checkEndsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n-   #24 = Class              #94           // java/lang/StringBuilder\n-   #25 = Methodref          #24.#70       // java/lang/StringBuilder.\"<init>\":()V\n-   #26 = Methodref          #33.#95       // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n-   #27 = Methodref          #24.#96       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #28 = String             #97           // (\n-   #29 = String             #98           // ,\n-   #30 = String             #99           // )\n-   #31 = Methodref          #24.#95       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #32 = Class              #100          // org/apache/commons/io/filefilter/SuffixFileFilter\n-   #33 = Class              #101          // org/apache/commons/io/filefilter/AbstractFileFilter\n-   #34 = Class              #102          // java/io/Serializable\n-   #35 = Utf8               serialVersionUID\n-   #36 = Utf8               J\n-   #37 = Utf8               ConstantValue\n-   #38 = Long               -3389157631240246157l\n-   #40 = Utf8               suffixes\n-   #41 = Utf8               [Ljava/lang/String;\n-   #42 = Utf8               caseSensitivity\n-   #43 = Utf8               Lorg/apache/commons/io/IOCase;\n-   #44 = Utf8               <init>\n-   #45 = Utf8               (Ljava/util/List;)V\n-   #46 = Utf8               Code\n-   #47 = Utf8               LineNumberTable\n-   #48 = Utf8               Signature\n-   #49 = Utf8               (Ljava/util/List<Ljava/lang/String;>;)V\n-   #50 = Utf8               (Ljava/util/List;Lorg/apache/commons/io/IOCase;)V\n-   #51 = Utf8               StackMapTable\n-   #52 = Class              #103          // java/util/List\n-   #53 = Class              #104          // org/apache/commons/io/IOCase\n-   #54 = Utf8               (Ljava/util/List<Ljava/lang/String;>;Lorg/apache/commons/io/IOCase;)V\n-   #55 = Utf8               (Ljava/lang/String;)V\n-   #56 = Utf8               ([Ljava/lang/String;)V\n-   #57 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-   #58 = Utf8               ([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-   #59 = Utf8               accept\n-   #60 = Utf8               (Ljava/io/File;)Z\n-   #61 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n-   #62 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #63 = Utf8               (Ljava/lang/String;)Z\n-   #64 = Utf8               toString\n+    #1 = Fieldref           #2.#3         // org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n+    #2 = Class              #4            // org/apache/commons/io/IOCase\n+    #3 = NameAndType        #5:#6         // SENSITIVE:Lorg/apache/commons/io/IOCase;\n+    #4 = Utf8               org/apache/commons/io/IOCase\n+    #5 = Utf8               SENSITIVE\n+    #6 = Utf8               Lorg/apache/commons/io/IOCase;\n+    #7 = Methodref          #8.#9         // org/apache/commons/io/filefilter/SuffixFileFilter.\"<init>\":(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V\n+    #8 = Class              #10           // org/apache/commons/io/filefilter/SuffixFileFilter\n+    #9 = NameAndType        #11:#12       // \"<init>\":(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V\n+   #10 = Utf8               org/apache/commons/io/filefilter/SuffixFileFilter\n+   #11 = Utf8               <init>\n+   #12 = Utf8               (Ljava/util/List;Lorg/apache/commons/io/IOCase;)V\n+   #13 = Methodref          #14.#15       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+   #14 = Class              #16           // org/apache/commons/io/filefilter/AbstractFileFilter\n+   #15 = NameAndType        #11:#17       // \"<init>\":()V\n+   #16 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+   #17 = Utf8               ()V\n+   #18 = Class              #19           // java/lang/IllegalArgumentException\n+   #19 = Utf8               java/lang/IllegalArgumentException\n+   #20 = String             #21           // The list of suffixes must not be null\n+   #21 = Utf8               The list of suffixes must not be null\n+   #22 = Methodref          #18.#23       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #23 = NameAndType        #11:#24       // \"<init>\":(Ljava/lang/String;)V\n+   #24 = Utf8               (Ljava/lang/String;)V\n+   #25 = Fieldref           #8.#26        // org/apache/commons/io/filefilter/SuffixFileFilter.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+   #26 = NameAndType        #27:#28       // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+   #27 = Utf8               EMPTY_STRING_ARRAY\n+   #28 = Utf8               [Ljava/lang/String;\n+   #29 = InterfaceMethodref #30.#31       // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+   #30 = Class              #32           // java/util/List\n+   #31 = NameAndType        #33:#34       // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+   #32 = Utf8               java/util/List\n+   #33 = Utf8               toArray\n+   #34 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+   #35 = Class              #28           // \"[Ljava/lang/String;\"\n+   #36 = Fieldref           #8.#37        // org/apache/commons/io/filefilter/SuffixFileFilter.suffixes:[Ljava/lang/String;\n+   #37 = NameAndType        #38:#28       // suffixes:[Ljava/lang/String;\n+   #38 = Utf8               suffixes\n+   #39 = Fieldref           #8.#40        // org/apache/commons/io/filefilter/SuffixFileFilter.caseSensitivity:Lorg/apache/commons/io/IOCase;\n+   #40 = NameAndType        #41:#6        // caseSensitivity:Lorg/apache/commons/io/IOCase;\n+   #41 = Utf8               caseSensitivity\n+   #42 = Methodref          #8.#43        // org/apache/commons/io/filefilter/SuffixFileFilter.\"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+   #43 = NameAndType        #11:#44       // \"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+   #44 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+   #45 = Methodref          #8.#46        // org/apache/commons/io/filefilter/SuffixFileFilter.\"<init>\":([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+   #46 = NameAndType        #11:#47       // \"<init>\":([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+   #47 = Utf8               ([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+   #48 = String             #49           // The suffix must not be null\n+   #49 = Utf8               The suffix must not be null\n+   #50 = Class              #51           // java/lang/String\n+   #51 = Utf8               java/lang/String\n+   #52 = String             #53           // The array of suffixes must not be null\n+   #53 = Utf8               The array of suffixes must not be null\n+   #54 = Methodref          #55.#56       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #55 = Class              #57           // java/lang/System\n+   #56 = NameAndType        #58:#59       // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #57 = Utf8               java/lang/System\n+   #58 = Utf8               arraycopy\n+   #59 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #60 = Methodref          #61.#62       // java/io/File.getName:()Ljava/lang/String;\n+   #61 = Class              #63           // java/io/File\n+   #62 = NameAndType        #64:#65       // getName:()Ljava/lang/String;\n+   #63 = Utf8               java/io/File\n+   #64 = Utf8               getName\n    #65 = Utf8               ()Ljava/lang/String;\n-   #66 = Utf8               SourceFile\n-   #67 = Utf8               SuffixFileFilter.java\n-   #68 = NameAndType        #105:#43      // SENSITIVE:Lorg/apache/commons/io/IOCase;\n-   #69 = NameAndType        #44:#50       // \"<init>\":(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V\n-   #70 = NameAndType        #44:#106      // \"<init>\":()V\n-   #71 = Utf8               java/lang/IllegalArgumentException\n-   #72 = Utf8               The list of suffixes must not be null\n-   #73 = NameAndType        #44:#55       // \"<init>\":(Ljava/lang/String;)V\n-   #74 = NameAndType        #107:#41      // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-   #75 = NameAndType        #108:#109     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-   #76 = NameAndType        #40:#41       // suffixes:[Ljava/lang/String;\n-   #77 = NameAndType        #42:#43       // caseSensitivity:Lorg/apache/commons/io/IOCase;\n-   #78 = NameAndType        #44:#57       // \"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-   #79 = NameAndType        #44:#58       // \"<init>\":([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-   #80 = Utf8               The suffix must not be null\n-   #81 = Utf8               java/lang/String\n-   #82 = Utf8               The array of suffixes must not be null\n-   #83 = Class              #110          // java/lang/System\n-   #84 = NameAndType        #111:#112     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #85 = Class              #113          // java/io/File\n-   #86 = NameAndType        #114:#65      // getName:()Ljava/lang/String;\n-   #87 = NameAndType        #59:#63       // accept:(Ljava/lang/String;)Z\n-   #88 = Class              #115          // java/nio/file/Path\n-   #89 = NameAndType        #116:#117     // getFileName:()Ljava/nio/file/Path;\n-   #90 = Class              #118          // java/util/Objects\n-   #91 = NameAndType        #64:#119      // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-   #92 = NameAndType        #120:#121     // toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-   #93 = NameAndType        #122:#123     // checkEndsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n-   #94 = Utf8               java/lang/StringBuilder\n-   #95 = NameAndType        #64:#65       // toString:()Ljava/lang/String;\n-   #96 = NameAndType        #124:#125     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #97 = Utf8               (\n-   #98 = Utf8               ,\n-   #99 = Utf8               )\n-  #100 = Utf8               org/apache/commons/io/filefilter/SuffixFileFilter\n-  #101 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-  #102 = Utf8               java/io/Serializable\n-  #103 = Utf8               java/util/List\n-  #104 = Utf8               org/apache/commons/io/IOCase\n-  #105 = Utf8               SENSITIVE\n-  #106 = Utf8               ()V\n-  #107 = Utf8               EMPTY_STRING_ARRAY\n-  #108 = Utf8               toArray\n-  #109 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #110 = Utf8               java/lang/System\n-  #111 = Utf8               arraycopy\n-  #112 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #113 = Utf8               java/io/File\n-  #114 = Utf8               getName\n-  #115 = Utf8               java/nio/file/Path\n-  #116 = Utf8               getFileName\n-  #117 = Utf8               ()Ljava/nio/file/Path;\n-  #118 = Utf8               java/util/Objects\n-  #119 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-  #120 = Utf8               toFileVisitResult\n-  #121 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-  #122 = Utf8               checkEndsWith\n-  #123 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n-  #124 = Utf8               append\n-  #125 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #66 = Methodref          #8.#67        // org/apache/commons/io/filefilter/SuffixFileFilter.accept:(Ljava/lang/String;)Z\n+   #67 = NameAndType        #68:#69       // accept:(Ljava/lang/String;)Z\n+   #68 = Utf8               accept\n+   #69 = Utf8               (Ljava/lang/String;)Z\n+   #70 = InterfaceMethodref #71.#72       // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n+   #71 = Class              #73           // java/nio/file/Path\n+   #72 = NameAndType        #74:#75       // getFileName:()Ljava/nio/file/Path;\n+   #73 = Utf8               java/nio/file/Path\n+   #74 = Utf8               getFileName\n+   #75 = Utf8               ()Ljava/nio/file/Path;\n+   #76 = Methodref          #77.#78       // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #77 = Class              #79           // java/util/Objects\n+   #78 = NameAndType        #80:#81       // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #79 = Utf8               java/util/Objects\n+   #80 = Utf8               toString\n+   #81 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #82 = Methodref          #8.#83        // org/apache/commons/io/filefilter/SuffixFileFilter.toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+   #83 = NameAndType        #84:#85       // toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+   #84 = Utf8               toFileVisitResult\n+   #85 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+   #86 = Methodref          #2.#87        // org/apache/commons/io/IOCase.checkEndsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n+   #87 = NameAndType        #88:#89       // checkEndsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n+   #88 = Utf8               checkEndsWith\n+   #89 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n+   #90 = Class              #91           // java/lang/StringBuilder\n+   #91 = Utf8               java/lang/StringBuilder\n+   #92 = Methodref          #90.#15       // java/lang/StringBuilder.\"<init>\":()V\n+   #93 = Methodref          #14.#94       // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n+   #94 = NameAndType        #80:#65       // toString:()Ljava/lang/String;\n+   #95 = Methodref          #90.#96       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #96 = NameAndType        #97:#98       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #97 = Utf8               append\n+   #98 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #99 = String             #100          // (\n+  #100 = Utf8               (\n+  #101 = String             #102          // ,\n+  #102 = Utf8               ,\n+  #103 = String             #104          // )\n+  #104 = Utf8               )\n+  #105 = Methodref          #90.#94       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #106 = Class              #107          // java/io/Serializable\n+  #107 = Utf8               java/io/Serializable\n+  #108 = Utf8               serialVersionUID\n+  #109 = Utf8               J\n+  #110 = Utf8               ConstantValue\n+  #111 = Long               -3389157631240246157l\n+  #113 = Utf8               (Ljava/util/List;)V\n+  #114 = Utf8               Code\n+  #115 = Utf8               LineNumberTable\n+  #116 = Utf8               Signature\n+  #117 = Utf8               (Ljava/util/List<Ljava/lang/String;>;)V\n+  #118 = Utf8               StackMapTable\n+  #119 = Utf8               (Ljava/util/List<Ljava/lang/String;>;Lorg/apache/commons/io/IOCase;)V\n+  #120 = Utf8               ([Ljava/lang/String;)V\n+  #121 = Utf8               (Ljava/io/File;)Z\n+  #122 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+  #123 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #124 = Utf8               SourceFile\n+  #125 = Utf8               SuffixFileFilter.java\n {\n   private static final long serialVersionUID = -3389157631240246157l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long -3389157631240246157l\n \n   private final java.lang.String[] suffixes;\n@@ -150,48 +150,48 @@\n     descriptor: (Ljava/util/List;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: getstatic     #1                  // Field org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n-         5: invokespecial #2                  // Method \"<init>\":(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V\n+         5: invokespecial #7                  // Method \"<init>\":(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V\n          8: return\n       LineNumberTable:\n         line 86: 0\n         line 87: 8\n-    Signature: #49                          // (Ljava/util/List<Ljava/lang/String;>;)V\n+    Signature: #117                         // (Ljava/util/List<Ljava/lang/String;>;)V\n \n   public org.apache.commons.io.filefilter.SuffixFileFilter(java.util.List<java.lang.String>, org.apache.commons.io.IOCase);\n     descriptor: (Ljava/util/List;Lorg/apache/commons/io/IOCase;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #3                  // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+         1: invokespecial #13                 // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n          4: aload_1\n          5: ifnonnull     18\n-         8: new           #4                  // class java/lang/IllegalArgumentException\n+         8: new           #18                 // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #5                  // String The list of suffixes must not be null\n-        14: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #20                 // String The list of suffixes must not be null\n+        14: invokespecial #22                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: aload_0\n         19: aload_1\n-        20: getstatic     #7                  // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-        23: invokeinterface #8,  2            // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-        28: checkcast     #9                  // class \"[Ljava/lang/String;\"\n-        31: putfield      #10                 // Field suffixes:[Ljava/lang/String;\n+        20: getstatic     #25                 // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+        23: invokeinterface #29,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+        28: checkcast     #35                 // class \"[Ljava/lang/String;\"\n+        31: putfield      #36                 // Field suffixes:[Ljava/lang/String;\n         34: aload_0\n         35: aload_2\n         36: ifnonnull     45\n         39: getstatic     #1                  // Field org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n         42: goto          46\n         45: aload_2\n-        46: putfield      #11                 // Field caseSensitivity:Lorg/apache/commons/io/IOCase;\n+        46: putfield      #39                 // Field caseSensitivity:Lorg/apache/commons/io/IOCase;\n         49: return\n       LineNumberTable:\n         line 99: 0\n         line 100: 4\n         line 101: 8\n         line 103: 18\n         line 104: 34\n@@ -203,73 +203,73 @@\n           stack = []\n         frame_type = 90 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/io/filefilter/SuffixFileFilter ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = [ class org/apache/commons/io/filefilter/SuffixFileFilter, class java/util/List, class org/apache/commons/io/IOCase ]\n           stack = [ class org/apache/commons/io/filefilter/SuffixFileFilter, class org/apache/commons/io/IOCase ]\n-    Signature: #54                          // (Ljava/util/List<Ljava/lang/String;>;Lorg/apache/commons/io/IOCase;)V\n+    Signature: #119                         // (Ljava/util/List<Ljava/lang/String;>;Lorg/apache/commons/io/IOCase;)V\n \n   public org.apache.commons.io.filefilter.SuffixFileFilter(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: getstatic     #1                  // Field org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n-         5: invokespecial #12                 // Method \"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+         5: invokespecial #42                 // Method \"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n          8: return\n       LineNumberTable:\n         line 114: 0\n         line 115: 8\n \n   public org.apache.commons.io.filefilter.SuffixFileFilter(java.lang.String...);\n     descriptor: ([Ljava/lang/String;)V\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: getstatic     #1                  // Field org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n-         5: invokespecial #13                 // Method \"<init>\":([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+         5: invokespecial #45                 // Method \"<init>\":([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n          8: return\n       LineNumberTable:\n         line 127: 0\n         line 128: 8\n \n   public org.apache.commons.io.filefilter.SuffixFileFilter(java.lang.String, org.apache.commons.io.IOCase);\n     descriptor: (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #3                  // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+         1: invokespecial #13                 // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n          4: aload_1\n          5: ifnonnull     18\n-         8: new           #4                  // class java/lang/IllegalArgumentException\n+         8: new           #18                 // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #14                 // String The suffix must not be null\n-        14: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #48                 // String The suffix must not be null\n+        14: invokespecial #22                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: aload_0\n         19: iconst_1\n-        20: anewarray     #15                 // class java/lang/String\n+        20: anewarray     #50                 // class java/lang/String\n         23: dup\n         24: iconst_0\n         25: aload_1\n         26: aastore\n-        27: putfield      #10                 // Field suffixes:[Ljava/lang/String;\n+        27: putfield      #36                 // Field suffixes:[Ljava/lang/String;\n         30: aload_0\n         31: aload_2\n         32: ifnonnull     41\n         35: getstatic     #1                  // Field org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n         38: goto          42\n         41: aload_2\n-        42: putfield      #11                 // Field caseSensitivity:Lorg/apache/commons/io/IOCase;\n+        42: putfield      #39                 // Field caseSensitivity:Lorg/apache/commons/io/IOCase;\n         45: return\n       LineNumberTable:\n         line 139: 0\n         line 140: 4\n         line 141: 8\n         line 143: 18\n         line 144: 30\n@@ -288,42 +288,42 @@\n \n   public org.apache.commons.io.filefilter.SuffixFileFilter(java.lang.String[], org.apache.commons.io.IOCase);\n     descriptor: ([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #3                  // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+         1: invokespecial #13                 // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n          4: aload_1\n          5: ifnonnull     18\n-         8: new           #4                  // class java/lang/IllegalArgumentException\n+         8: new           #18                 // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #16                 // String The array of suffixes must not be null\n-        14: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #52                 // String The array of suffixes must not be null\n+        14: invokespecial #22                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: aload_0\n         19: aload_1\n         20: arraylength\n-        21: anewarray     #15                 // class java/lang/String\n-        24: putfield      #10                 // Field suffixes:[Ljava/lang/String;\n+        21: anewarray     #50                 // class java/lang/String\n+        24: putfield      #36                 // Field suffixes:[Ljava/lang/String;\n         27: aload_1\n         28: iconst_0\n         29: aload_0\n-        30: getfield      #10                 // Field suffixes:[Ljava/lang/String;\n+        30: getfield      #36                 // Field suffixes:[Ljava/lang/String;\n         33: iconst_0\n         34: aload_1\n         35: arraylength\n-        36: invokestatic  #17                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        36: invokestatic  #54                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         39: aload_0\n         40: aload_2\n         41: ifnonnull     50\n         44: getstatic     #1                  // Field org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n         47: goto          51\n         50: aload_2\n-        51: putfield      #11                 // Field caseSensitivity:Lorg/apache/commons/io/IOCase;\n+        51: putfield      #39                 // Field caseSensitivity:Lorg/apache/commons/io/IOCase;\n         54: return\n       LineNumberTable:\n         line 156: 0\n         line 157: 4\n         line 158: 8\n         line 160: 18\n         line 161: 27\n@@ -344,74 +344,74 @@\n   public boolean accept(java.io.File);\n     descriptor: (Ljava/io/File;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #18                 // Method java/io/File.getName:()Ljava/lang/String;\n-         5: invokespecial #19                 // Method accept:(Ljava/lang/String;)Z\n+         2: invokevirtual #60                 // Method java/io/File.getName:()Ljava/lang/String;\n+         5: invokespecial #66                 // Method accept:(Ljava/lang/String;)Z\n          8: ireturn\n       LineNumberTable:\n         line 173: 0\n \n   public boolean accept(java.io.File, java.lang.String);\n     descriptor: (Ljava/io/File;Ljava/lang/String;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_2\n-         2: invokespecial #19                 // Method accept:(Ljava/lang/String;)Z\n+         2: invokespecial #66                 // Method accept:(Ljava/lang/String;)Z\n          5: ireturn\n       LineNumberTable:\n         line 185: 0\n \n   public java.nio.file.FileVisitResult accept(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes);\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokeinterface #20,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n+         2: invokeinterface #70,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n          7: aconst_null\n-         8: invokestatic  #21                 // Method java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-        11: invokespecial #19                 // Method accept:(Ljava/lang/String;)Z\n+         8: invokestatic  #76                 // Method java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+        11: invokespecial #66                 // Method accept:(Ljava/lang/String;)Z\n         14: aload_1\n-        15: invokestatic  #22                 // Method toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+        15: invokestatic  #82                 // Method toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n         18: areturn\n       LineNumberTable:\n         line 197: 0\n \n   private boolean accept(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=6, args_size=2\n          0: aload_0\n-         1: getfield      #10                 // Field suffixes:[Ljava/lang/String;\n+         1: getfield      #36                 // Field suffixes:[Ljava/lang/String;\n          4: astore_2\n          5: aload_2\n          6: arraylength\n          7: istore_3\n          8: iconst_0\n          9: istore        4\n         11: iload         4\n         13: iload_3\n         14: if_icmpge     44\n         17: aload_2\n         18: iload         4\n         20: aaload\n         21: astore        5\n         23: aload_0\n-        24: getfield      #11                 // Field caseSensitivity:Lorg/apache/commons/io/IOCase;\n+        24: getfield      #39                 // Field caseSensitivity:Lorg/apache/commons/io/IOCase;\n         27: aload_1\n         28: aload         5\n-        30: invokevirtual #23                 // Method org/apache/commons/io/IOCase.checkEndsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n+        30: invokevirtual #86                 // Method org/apache/commons/io/IOCase.checkEndsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n         33: ifeq          38\n         36: iconst_1\n         37: ireturn\n         38: iinc          4, 1\n         41: goto          11\n         44: iconst_0\n         45: ireturn\n@@ -430,58 +430,58 @@\n           offset_delta = 5\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=1\n-         0: new           #24                 // class java/lang/StringBuilder\n+         0: new           #90                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #25                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #92                 // Method java/lang/StringBuilder.\"<init>\":()V\n          7: astore_1\n          8: aload_1\n          9: aload_0\n-        10: invokespecial #26                 // Method org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n-        13: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        10: invokespecial #93                 // Method org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n+        13: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         16: pop\n         17: aload_1\n-        18: ldc           #28                 // String (\n-        20: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        18: ldc           #99                 // String (\n+        20: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         23: pop\n         24: aload_0\n-        25: getfield      #10                 // Field suffixes:[Ljava/lang/String;\n+        25: getfield      #36                 // Field suffixes:[Ljava/lang/String;\n         28: ifnull        70\n         31: iconst_0\n         32: istore_2\n         33: iload_2\n         34: aload_0\n-        35: getfield      #10                 // Field suffixes:[Ljava/lang/String;\n+        35: getfield      #36                 // Field suffixes:[Ljava/lang/String;\n         38: arraylength\n         39: if_icmpge     70\n         42: iload_2\n         43: ifle          53\n         46: aload_1\n-        47: ldc           #29                 // String ,\n-        49: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        47: ldc           #101                // String ,\n+        49: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         52: pop\n         53: aload_1\n         54: aload_0\n-        55: getfield      #10                 // Field suffixes:[Ljava/lang/String;\n+        55: getfield      #36                 // Field suffixes:[Ljava/lang/String;\n         58: iload_2\n         59: aaload\n-        60: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        60: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         63: pop\n         64: iinc          2, 1\n         67: goto          33\n         70: aload_1\n-        71: ldc           #30                 // String )\n-        73: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        71: ldc           #103                // String )\n+        73: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         76: pop\n         77: aload_1\n-        78: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        78: invokevirtual #105                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         81: areturn\n       LineNumberTable:\n         line 216: 0\n         line 217: 8\n         line 218: 17\n         line 219: 24\n         line 220: 31\n"}]}
