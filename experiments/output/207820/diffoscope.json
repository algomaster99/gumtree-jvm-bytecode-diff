{"diffoscope-json-version": 1, "source1": "first/TeeReader.class", "source2": "second/TeeReader.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -7,20 +7,20 @@\n import java.io.Writer;\n \n public class TeeReader extends ProxyReader\n {\n     private final Writer branch;\n     private final boolean closeBranch;\n     \n-    public TeeReader(final Reader input, final Writer branch) {\n-        this(input, branch, false);\n+    public TeeReader(final Reader reader, final Writer writer) {\n+        this(reader, writer, false);\n     }\n     \n-    public TeeReader(final Reader input, final Writer branch, final boolean closeBranch) {\n-        super(input);\n+    public TeeReader(final Reader reader, final Writer branch, final boolean closeBranch) {\n+        super(reader);\n         this.branch = branch;\n         this.closeBranch = closeBranch;\n     }\n     \n     public void close() throws IOException {\n         try {\n             super.close();\n@@ -29,47 +29,47 @@\n             if (this.closeBranch) {\n                 this.branch.close();\n             }\n         }\n     }\n     \n     public int read() throws IOException {\n-        final int ch = super.read();\n-        if (ch != -1) {\n-            this.branch.write(ch);\n+        final int read = super.read();\n+        if (read != -1) {\n+            this.branch.write(read);\n         }\n-        return ch;\n+        return read;\n     }\n     \n-    public int read(final char[] chr) throws IOException {\n-        final int n = super.read(chr);\n-        if (n != -1) {\n-            this.branch.write(chr, 0, n);\n+    public int read(final char[] array) throws IOException {\n+        final int read = super.read(array);\n+        if (read != -1) {\n+            this.branch.write(array, 0, read);\n         }\n-        return n;\n+        return read;\n     }\n     \n-    public int read(final char[] chr, final int st, final int end) throws IOException {\n-        final int n = super.read(chr, st, end);\n-        if (n != -1) {\n-            this.branch.write(chr, st, n);\n+    public int read(final char[] array, final int n, final int n2) throws IOException {\n+        final int read = super.read(array, n, n2);\n+        if (read != -1) {\n+            this.branch.write(array, n, read);\n         }\n-        return n;\n+        return read;\n     }\n     \n-    public int read(final CharBuffer target) throws IOException {\n-        final int originalPosition = target.position();\n-        final int n = super.read(target);\n-        if (n != -1) {\n-            final int newPosition = target.position();\n-            final int newLimit = target.limit();\n+    public int read(final CharBuffer csq) throws IOException {\n+        final int position = csq.position();\n+        final int read = super.read(csq);\n+        if (read != -1) {\n+            final int position2 = csq.position();\n+            final int limit = csq.limit();\n             try {\n-                target.position().limit(newPosition);\n-                this.branch.append((CharSequence)target);\n+                csq.position().limit(position2);\n+                this.branch.append((CharSequence)csq);\n             }\n             finally {\n-                target.position().limit(newLimit);\n+                csq.position().limit(limit);\n             }\n         }\n-        return n;\n+        return read;\n     }\n }\n"}]}
