{"diffoscope-json-version": 1, "source1": "first/AbstractFileFilter.class", "source2": "second/AbstractFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,125 +1,125 @@\n-  SHA-256 checksum 37a726077f52608b201e6fa5b7ba6cda39627f3e234334687e63347a4748e89c\n+  SHA-256 checksum 7611cc50727c07723f4973b985c3959e44c0e9eb29c0ecf1b1da0f13754ff008\n   Compiled from \"AbstractFileFilter.java\"\n public abstract class org.apache.commons.io.filefilter.AbstractFileFilter implements org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.file.PathVisitor\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #21                         // org/apache/commons/io/filefilter/AbstractFileFilter\n-  super_class: #22                        // java/lang/Object\n+  this_class: #35                         // org/apache/commons/io/filefilter/AbstractFileFilter\n+  super_class: #2                         // java/lang/Object\n   interfaces: 2, fields: 0, methods: 14, attributes: 1\n Constant pool:\n-    #1 = Methodref          #22.#69       // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #39.#70       // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-    #3 = Fieldref           #39.#71       // java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n-    #4 = String             #41           // file\n-    #5 = Methodref          #72.#73       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-    #6 = Methodref          #10.#74       // java/io/File.getParentFile:()Ljava/io/File;\n-    #7 = Methodref          #10.#75       // java/io/File.getName:()Ljava/lang/String;\n-    #8 = Methodref          #21.#76       // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n-    #9 = String             #45           // name\n-   #10 = Class              #77           // java/io/File\n-   #11 = Methodref          #10.#78       // java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-   #12 = Methodref          #21.#79       // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/io/File;)Z\n-   #13 = Methodref          #21.#80       // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #14 = Methodref          #22.#81       // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #15 = Methodref          #82.#83       // java/lang/Class.getSimpleName:()Ljava/lang/String;\n-   #16 = Class              #84           // java/nio/file/Path\n-   #17 = Methodref          #21.#85       // org/apache/commons/io/filefilter/AbstractFileFilter.postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-   #18 = Methodref          #21.#86       // org/apache/commons/io/filefilter/AbstractFileFilter.visitFileFailed:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-   #19 = Methodref          #21.#87       // org/apache/commons/io/filefilter/AbstractFileFilter.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #20 = Methodref          #21.#88       // org/apache/commons/io/filefilter/AbstractFileFilter.preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #21 = Class              #89           // org/apache/commons/io/filefilter/AbstractFileFilter\n-   #22 = Class              #90           // java/lang/Object\n-   #23 = Class              #91           // org/apache/commons/io/filefilter/IOFileFilter\n-   #24 = Class              #92           // org/apache/commons/io/file/PathVisitor\n-   #25 = Utf8               <init>\n-   #26 = Utf8               ()V\n-   #27 = Utf8               Code\n-   #28 = Utf8               LineNumberTable\n-   #29 = Utf8               LocalVariableTable\n-   #30 = Utf8               this\n-   #31 = Utf8               Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n-   #32 = Utf8               toFileVisitResult\n-   #33 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-   #34 = Utf8               accept\n-   #35 = Utf8               Z\n-   #36 = Utf8               path\n-   #37 = Utf8               Ljava/nio/file/Path;\n-   #38 = Utf8               StackMapTable\n-   #39 = Class              #93           // java/nio/file/FileVisitResult\n-   #40 = Utf8               (Ljava/io/File;)Z\n-   #41 = Utf8               file\n-   #42 = Utf8               Ljava/io/File;\n-   #43 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n-   #44 = Utf8               dir\n-   #45 = Utf8               name\n-   #46 = Utf8               Ljava/lang/String;\n-   #47 = Utf8               handle\n-   #48 = Utf8               (Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-   #49 = Utf8               t\n-   #50 = Utf8               Ljava/lang/Throwable;\n-   #51 = Utf8               postVisitDirectory\n-   #52 = Utf8               (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-   #53 = Utf8               exc\n-   #54 = Utf8               Ljava/io/IOException;\n-   #55 = Utf8               Exceptions\n-   #56 = Class              #94           // java/io/IOException\n-   #57 = Utf8               preVisitDirectory\n-   #58 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #59 = Utf8               attributes\n-   #60 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n-   #61 = Utf8               toString\n-   #62 = Utf8               ()Ljava/lang/String;\n-   #63 = Utf8               visitFile\n-   #64 = Utf8               visitFileFailed\n-   #65 = Utf8               (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-   #66 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #67 = Utf8               SourceFile\n-   #68 = Utf8               AbstractFileFilter.java\n-   #69 = NameAndType        #25:#26       // \"<init>\":()V\n-   #70 = NameAndType        #95:#96       // CONTINUE:Ljava/nio/file/FileVisitResult;\n-   #71 = NameAndType        #97:#96       // TERMINATE:Ljava/nio/file/FileVisitResult;\n-   #72 = Class              #98           // java/util/Objects\n-   #73 = NameAndType        #99:#100      // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #74 = NameAndType        #101:#102     // getParentFile:()Ljava/io/File;\n-   #75 = NameAndType        #103:#62      // getName:()Ljava/lang/String;\n-   #76 = NameAndType        #34:#43       // accept:(Ljava/io/File;Ljava/lang/String;)Z\n-   #77 = Utf8               java/io/File\n-   #78 = NameAndType        #25:#104      // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-   #79 = NameAndType        #34:#40       // accept:(Ljava/io/File;)Z\n-   #80 = NameAndType        #34:#58       // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #81 = NameAndType        #105:#106     // getClass:()Ljava/lang/Class;\n-   #82 = Class              #107          // java/lang/Class\n-   #83 = NameAndType        #108:#62      // getSimpleName:()Ljava/lang/String;\n-   #84 = Utf8               java/nio/file/Path\n-   #85 = NameAndType        #51:#52       // postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-   #86 = NameAndType        #64:#52       // visitFileFailed:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-   #87 = NameAndType        #63:#58       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #88 = NameAndType        #57:#58       // preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #89 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-   #90 = Utf8               java/lang/Object\n-   #91 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n-   #92 = Utf8               org/apache/commons/io/file/PathVisitor\n-   #93 = Utf8               java/nio/file/FileVisitResult\n-   #94 = Utf8               java/io/IOException\n-   #95 = Utf8               CONTINUE\n-   #96 = Utf8               Ljava/nio/file/FileVisitResult;\n-   #97 = Utf8               TERMINATE\n-   #98 = Utf8               java/util/Objects\n-   #99 = Utf8               requireNonNull\n-  #100 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #101 = Utf8               getParentFile\n-  #102 = Utf8               ()Ljava/io/File;\n-  #103 = Utf8               getName\n-  #104 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n-  #105 = Utf8               getClass\n-  #106 = Utf8               ()Ljava/lang/Class;\n-  #107 = Utf8               java/lang/Class\n-  #108 = Utf8               getSimpleName\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Fieldref           #8.#9         // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+    #8 = Class              #10           // java/nio/file/FileVisitResult\n+    #9 = NameAndType        #11:#12       // CONTINUE:Ljava/nio/file/FileVisitResult;\n+   #10 = Utf8               java/nio/file/FileVisitResult\n+   #11 = Utf8               CONTINUE\n+   #12 = Utf8               Ljava/nio/file/FileVisitResult;\n+   #13 = Fieldref           #8.#14        // java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n+   #14 = NameAndType        #15:#12       // TERMINATE:Ljava/nio/file/FileVisitResult;\n+   #15 = Utf8               TERMINATE\n+   #16 = String             #17           // file\n+   #17 = Utf8               file\n+   #18 = Methodref          #19.#20       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #19 = Class              #21           // java/util/Objects\n+   #20 = NameAndType        #22:#23       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #21 = Utf8               java/util/Objects\n+   #22 = Utf8               requireNonNull\n+   #23 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #24 = Methodref          #25.#26       // java/io/File.getParentFile:()Ljava/io/File;\n+   #25 = Class              #27           // java/io/File\n+   #26 = NameAndType        #28:#29       // getParentFile:()Ljava/io/File;\n+   #27 = Utf8               java/io/File\n+   #28 = Utf8               getParentFile\n+   #29 = Utf8               ()Ljava/io/File;\n+   #30 = Methodref          #25.#31       // java/io/File.getName:()Ljava/lang/String;\n+   #31 = NameAndType        #32:#33       // getName:()Ljava/lang/String;\n+   #32 = Utf8               getName\n+   #33 = Utf8               ()Ljava/lang/String;\n+   #34 = Methodref          #35.#36       // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n+   #35 = Class              #37           // org/apache/commons/io/filefilter/AbstractFileFilter\n+   #36 = NameAndType        #38:#39       // accept:(Ljava/io/File;Ljava/lang/String;)Z\n+   #37 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+   #38 = Utf8               accept\n+   #39 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+   #40 = String             #41           // name\n+   #41 = Utf8               name\n+   #42 = Methodref          #25.#43       // java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+   #43 = NameAndType        #5:#44        // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+   #44 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n+   #45 = Methodref          #35.#46       // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/io/File;)Z\n+   #46 = NameAndType        #38:#47       // accept:(Ljava/io/File;)Z\n+   #47 = Utf8               (Ljava/io/File;)Z\n+   #48 = Methodref          #35.#49       // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #49 = NameAndType        #38:#50       // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #50 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #51 = Methodref          #2.#52        // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #52 = NameAndType        #53:#54       // getClass:()Ljava/lang/Class;\n+   #53 = Utf8               getClass\n+   #54 = Utf8               ()Ljava/lang/Class;\n+   #55 = Methodref          #56.#57       // java/lang/Class.getSimpleName:()Ljava/lang/String;\n+   #56 = Class              #58           // java/lang/Class\n+   #57 = NameAndType        #59:#33       // getSimpleName:()Ljava/lang/String;\n+   #58 = Utf8               java/lang/Class\n+   #59 = Utf8               getSimpleName\n+   #60 = Class              #61           // java/nio/file/Path\n+   #61 = Utf8               java/nio/file/Path\n+   #62 = Methodref          #35.#63       // org/apache/commons/io/filefilter/AbstractFileFilter.postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+   #63 = NameAndType        #64:#65       // postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+   #64 = Utf8               postVisitDirectory\n+   #65 = Utf8               (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+   #66 = Methodref          #35.#67       // org/apache/commons/io/filefilter/AbstractFileFilter.visitFileFailed:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+   #67 = NameAndType        #68:#65       // visitFileFailed:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+   #68 = Utf8               visitFileFailed\n+   #69 = Methodref          #35.#70       // org/apache/commons/io/filefilter/AbstractFileFilter.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #70 = NameAndType        #71:#50       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #71 = Utf8               visitFile\n+   #72 = Methodref          #35.#73       // org/apache/commons/io/filefilter/AbstractFileFilter.preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #73 = NameAndType        #74:#50       // preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #74 = Utf8               preVisitDirectory\n+   #75 = Class              #76           // org/apache/commons/io/filefilter/IOFileFilter\n+   #76 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n+   #77 = Class              #78           // org/apache/commons/io/file/PathVisitor\n+   #78 = Utf8               org/apache/commons/io/file/PathVisitor\n+   #79 = Utf8               Code\n+   #80 = Utf8               LineNumberTable\n+   #81 = Utf8               LocalVariableTable\n+   #82 = Utf8               this\n+   #83 = Utf8               Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n+   #84 = Utf8               toFileVisitResult\n+   #85 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+   #86 = Utf8               Z\n+   #87 = Utf8               path\n+   #88 = Utf8               Ljava/nio/file/Path;\n+   #89 = Utf8               StackMapTable\n+   #90 = Utf8               Ljava/io/File;\n+   #91 = Utf8               dir\n+   #92 = Utf8               Ljava/lang/String;\n+   #93 = Utf8               handle\n+   #94 = Utf8               (Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+   #95 = Utf8               t\n+   #96 = Utf8               Ljava/lang/Throwable;\n+   #97 = Utf8               exc\n+   #98 = Utf8               Ljava/io/IOException;\n+   #99 = Utf8               Exceptions\n+  #100 = Class              #101          // java/io/IOException\n+  #101 = Utf8               java/io/IOException\n+  #102 = Utf8               attributes\n+  #103 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n+  #104 = Utf8               toString\n+  #105 = Utf8               (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+  #106 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #107 = Utf8               SourceFile\n+  #108 = Utf8               AbstractFileFilter.java\n {\n   public org.apache.commons.io.filefilter.AbstractFileFilter();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -134,17 +134,17 @@\n   static java.nio.file.FileVisitResult toFileVisitResult(boolean, java.nio.file.Path);\n     descriptor: (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=2, args_size=2\n          0: iload_0\n          1: ifeq          10\n-         4: getstatic     #2                  // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+         4: getstatic     #7                  // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n          7: goto          13\n-        10: getstatic     #3                  // Field java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n+        10: getstatic     #13                 // Field java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n         13: areturn\n       LineNumberTable:\n         line 43: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0 accept   Z\n             0      14     1  path   Ljava/nio/file/Path;\n@@ -155,23 +155,23 @@\n \n   public boolean accept(java.io.File);\n     descriptor: (Ljava/io/File;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n-         1: ldc           #4                  // String file\n-         3: invokestatic  #5                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #16                 // String file\n+         3: invokestatic  #18                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: aload_0\n          8: aload_1\n-         9: invokevirtual #6                  // Method java/io/File.getParentFile:()Ljava/io/File;\n+         9: invokevirtual #24                 // Method java/io/File.getParentFile:()Ljava/io/File;\n         12: aload_1\n-        13: invokevirtual #7                  // Method java/io/File.getName:()Ljava/lang/String;\n-        16: invokevirtual #8                  // Method accept:(Ljava/io/File;Ljava/lang/String;)Z\n+        13: invokevirtual #30                 // Method java/io/File.getName:()Ljava/lang/String;\n+        16: invokevirtual #34                 // Method accept:(Ljava/io/File;Ljava/lang/String;)Z\n         19: ireturn\n       LineNumberTable:\n         line 54: 0\n         line 55: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      20     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n@@ -179,24 +179,24 @@\n \n   public boolean accept(java.io.File, java.lang.String);\n     descriptor: (Ljava/io/File;Ljava/lang/String;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_2\n-         1: ldc           #9                  // String name\n-         3: invokestatic  #5                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #40                 // String name\n+         3: invokestatic  #18                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: aload_0\n-         8: new           #10                 // class java/io/File\n+         8: new           #25                 // class java/io/File\n         11: dup\n         12: aload_1\n         13: aload_2\n-        14: invokespecial #11                 // Method java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-        17: invokevirtual #12                 // Method accept:(Ljava/io/File;)Z\n+        14: invokespecial #42                 // Method java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+        17: invokevirtual #45                 // Method accept:(Ljava/io/File;)Z\n         20: ireturn\n       LineNumberTable:\n         line 67: 0\n         line 68: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      21     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n@@ -204,29 +204,29 @@\n             0      21     2  name   Ljava/lang/String;\n \n   protected java.nio.file.FileVisitResult handle(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=2, args_size=2\n-         0: getstatic     #3                  // Field java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n+         0: getstatic     #13                 // Field java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n          3: areturn\n       LineNumberTable:\n         line 79: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       4     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n             0       4     1     t   Ljava/lang/Throwable;\n \n   public java.nio.file.FileVisitResult postVisitDirectory(java.nio.file.Path, java.io.IOException) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=3, args_size=3\n-         0: getstatic     #2                  // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+         0: getstatic     #7                  // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n          3: areturn\n       LineNumberTable:\n         line 84: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       4     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n             0       4     1   dir   Ljava/nio/file/Path;\n@@ -238,15 +238,15 @@\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokevirtual #13                 // Method accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+         3: invokevirtual #48                 // Method accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n          6: areturn\n       LineNumberTable:\n         line 89: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n             0       7     1   dir   Ljava/nio/file/Path;\n@@ -256,16 +256,16 @@\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #14                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-         4: invokevirtual #15                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;\n+         1: invokevirtual #51                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+         4: invokevirtual #55                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 99: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n \n@@ -273,15 +273,15 @@\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokevirtual #13                 // Method accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+         3: invokevirtual #48                 // Method accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n          6: areturn\n       LineNumberTable:\n         line 104: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n             0       7     1  file   Ljava/nio/file/Path;\n@@ -290,15 +290,15 @@\n       throws java.io.IOException\n \n   public java.nio.file.FileVisitResult visitFileFailed(java.nio.file.Path, java.io.IOException) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=3, args_size=3\n-         0: getstatic     #2                  // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+         0: getstatic     #7                  // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n          3: areturn\n       LineNumberTable:\n         line 109: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       4     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n             0       4     1  file   Ljava/nio/file/Path;\n@@ -309,17 +309,17 @@\n   public java.nio.file.FileVisitResult postVisitDirectory(java.lang.Object, java.io.IOException) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #16                 // class java/nio/file/Path\n+         2: checkcast     #60                 // class java/nio/file/Path\n          5: aload_2\n-         6: invokevirtual #17                 // Method postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+         6: invokevirtual #62                 // Method postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n          9: areturn\n       LineNumberTable:\n         line 40: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n     Exceptions:\n@@ -328,17 +328,17 @@\n   public java.nio.file.FileVisitResult visitFileFailed(java.lang.Object, java.io.IOException) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #16                 // class java/nio/file/Path\n+         2: checkcast     #60                 // class java/nio/file/Path\n          5: aload_2\n-         6: invokevirtual #18                 // Method visitFileFailed:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+         6: invokevirtual #66                 // Method visitFileFailed:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n          9: areturn\n       LineNumberTable:\n         line 40: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n     Exceptions:\n@@ -347,17 +347,17 @@\n   public java.nio.file.FileVisitResult visitFile(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #16                 // class java/nio/file/Path\n+         2: checkcast     #60                 // class java/nio/file/Path\n          5: aload_2\n-         6: invokevirtual #19                 // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+         6: invokevirtual #69                 // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n          9: areturn\n       LineNumberTable:\n         line 40: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n     Exceptions:\n@@ -366,17 +366,17 @@\n   public java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #16                 // class java/nio/file/Path\n+         2: checkcast     #60                 // class java/nio/file/Path\n          5: aload_2\n-         6: invokevirtual #20                 // Method preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+         6: invokevirtual #72                 // Method preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n          9: areturn\n       LineNumberTable:\n         line 40: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n     Exceptions:\n"}]}
