{"diffoscope-json-version": 1, "source1": "first/ParentModuleMacro.class", "source2": "second/ParentModuleMacro.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -46,15 +46,15 @@\n         if (templatePath == null) {\n             throw new MacroExecutionException(String.format(Locale.ROOT, \"Could not find template for %s\", moduleName));\n         }\n         final Path templatePathParent = templatePath.getParent();\n         if (templatePathParent == null) {\n             throw new MacroExecutionException(\"Failed to get parent path for \" + templatePath);\n         }\n-        return templatePathParent.relativize(Paths.get(\"src\", \"xdocs\", \"config.xml\")).toString().replace(\".xml\", \".html\").replace('\\\\', '/') + \"#\" + parentModule;\n+        return String.valueOf(templatePathParent.relativize(Paths.get(\"src\", \"xdocs\", \"config.xml\")).toString().replace(\".xml\", \".html\").replace('\\\\', '/')) + \"#\" + parentModule;\n     }\n     \n     private static Path getTemplatePath(final String moduleName) throws MacroExecutionException {\n         final String fileNamePattern = \".*[\\\\\\\\/]\" + moduleName.toLowerCase(Locale.ROOT) + \"\\\\..*\";\n-        return (Path)SiteUtil.getXdocsTemplatesFilePaths().stream().filter(path -> path.toString().matches(fileNamePattern)).findFirst().orElse(null);\n+        return (Path)SiteUtil.getXdocsTemplatesFilePaths().stream().filter(path -> path.toString().matches(regex)).findFirst().orElse(null);\n     }\n }\n"}]}
