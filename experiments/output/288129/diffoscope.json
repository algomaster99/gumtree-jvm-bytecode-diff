{"diffoscope-json-version": 1, "source1": "first/BZip2CompressorOutputStream.class", "source2": "second/BZip2CompressorOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,128 +1,128 @@\n-  SHA-256 checksum 065f43332ec3ccc9750b247c101ee99735f6e6f50f5e502bd38cec01b85d4609\n+  SHA-256 checksum 408d0cf92ac4d3cf51b461091a43a20a890222a83a8a459b0000ac07f86390c4\n   Compiled from \"BZip2CompressorOutputStream.java\"\n public class org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream extends org.apache.commons.compress.compressors.CompressorOutputStream implements org.apache.commons.compress.compressors.bzip2.BZip2Constants\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #6                          // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream\n   super_class: #113                       // org/apache/commons/compress/compressors/CompressorOutputStream\n   interfaces: 1, fields: 20, methods: 33, attributes: 2\n Constant pool:\n     #1 = Long               132000l\n     #3 = Long               9l\n-    #5 = Methodref          #206.#207     // java/lang/Math.min:(JJ)J\n-    #6 = Class              #208          // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream\n-    #7 = Fieldref           #69.#209      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.heap:[I\n-    #8 = Fieldref           #69.#210      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.weight:[I\n-    #9 = Fieldref           #69.#211      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.parent:[I\n-   #10 = Methodref          #206.#212     // java/lang/Math.max:(II)I\n-   #11 = Methodref          #6.#213       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;I)V\n-   #12 = Methodref          #113.#214     // org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n-   #13 = Class              #215          // org/apache/commons/compress/compressors/bzip2/CRC\n-   #14 = Methodref          #13.#214      // org/apache/commons/compress/compressors/bzip2/CRC.\"<init>\":()V\n-   #15 = Fieldref           #6.#216       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.crc:Lorg/apache/commons/compress/compressors/bzip2/CRC;\n-   #16 = Fieldref           #6.#217       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.currentChar:I\n-   #17 = Class              #218          // java/lang/IllegalArgumentException\n-   #18 = Class              #219          // java/lang/StringBuilder\n-   #19 = Methodref          #18.#214      // java/lang/StringBuilder.\"<init>\":()V\n-   #20 = String             #220          // blockSize(\n-   #21 = Methodref          #18.#221      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #22 = Methodref          #18.#222      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #23 = String             #223          // ) < 1\n-   #24 = Methodref          #18.#224      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #25 = Methodref          #17.#225      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #26 = String             #226          // ) > 9\n-   #27 = Fieldref           #6.#227       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.blockSize100k:I\n-   #28 = Fieldref           #6.#228       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.out:Ljava/io/OutputStream;\n-   #29 = Class              #229          // org/apache/commons/compress/compressors/bzip2/BZip2Constants\n+    #5 = Methodref          #203.#204     // java/lang/Math.min:(JJ)J\n+    #6 = Class              #205          // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream\n+    #7 = Fieldref           #69.#206      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.heap:[I\n+    #8 = Fieldref           #69.#207      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.weight:[I\n+    #9 = Fieldref           #69.#208      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.parent:[I\n+   #10 = Methodref          #203.#209     // java/lang/Math.max:(II)I\n+   #11 = Methodref          #6.#210       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;I)V\n+   #12 = Methodref          #113.#211     // org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n+   #13 = Class              #212          // org/apache/commons/compress/compressors/bzip2/CRC\n+   #14 = Methodref          #13.#211      // org/apache/commons/compress/compressors/bzip2/CRC.\"<init>\":()V\n+   #15 = Fieldref           #6.#213       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.crc:Lorg/apache/commons/compress/compressors/bzip2/CRC;\n+   #16 = Fieldref           #6.#214       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.currentChar:I\n+   #17 = Class              #215          // java/lang/IllegalArgumentException\n+   #18 = Class              #216          // java/lang/StringBuilder\n+   #19 = Methodref          #18.#211      // java/lang/StringBuilder.\"<init>\":()V\n+   #20 = String             #217          // blockSize(\n+   #21 = Methodref          #18.#218      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #22 = Methodref          #18.#219      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #23 = String             #220          // ) < 1\n+   #24 = Methodref          #18.#221      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #25 = Methodref          #17.#222      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #26 = String             #223          // ) > 9\n+   #27 = Fieldref           #6.#224       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.blockSize100k:I\n+   #28 = Fieldref           #6.#225       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.out:Ljava/io/OutputStream;\n+   #29 = Class              #226          // org/apache/commons/compress/compressors/bzip2/BZip2Constants\n    #30 = Integer            100000\n-   #31 = Fieldref           #6.#230       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.allowableBlockSize:I\n-   #32 = Methodref          #6.#231       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.init:()V\n-   #33 = Fieldref           #6.#232       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.blockSorter:Lorg/apache/commons/compress/compressors/bzip2/BlockSort;\n-   #34 = Fieldref           #6.#233       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.data:Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;\n-   #35 = Fieldref           #6.#234       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.last:I\n-   #36 = Methodref          #71.#235      // org/apache/commons/compress/compressors/bzip2/BlockSort.blockSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n-   #37 = Fieldref           #6.#236       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.bsLive:I\n-   #38 = Fieldref           #6.#237       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.bsBuff:I\n-   #39 = Methodref          #238.#239     // java/io/OutputStream.write:(I)V\n-   #40 = Methodref          #6.#240       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.bsW:(II)V\n-   #41 = Fieldref           #6.#241       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.closed:Z\n-   #42 = Methodref          #6.#242       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.finish:()V\n-   #43 = Methodref          #238.#243     // java/io/OutputStream.close:()V\n-   #44 = Class              #244          // java/lang/Throwable\n-   #45 = Methodref          #44.#245      // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-   #46 = Methodref          #13.#246      // org/apache/commons/compress/compressors/bzip2/CRC.getFinalCRC:()I\n-   #47 = Fieldref           #6.#247       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.blockCRC:I\n-   #48 = Fieldref           #6.#248       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.combinedCRC:I\n-   #49 = Methodref          #6.#249       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.blockSort:()V\n-   #50 = Methodref          #6.#250       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.bsPutUByte:(I)V\n-   #51 = Methodref          #6.#251       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.bsPutInt:(I)V\n-   #52 = Methodref          #6.#252       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.moveToFrontCodeAndSend:()V\n-   #53 = Methodref          #6.#253       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.bsFinishedWithStream:()V\n-   #54 = Fieldref           #6.#254       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.runLength:I\n-   #55 = Methodref          #6.#255       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.writeRun:()V\n-   #56 = Methodref          #6.#256       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.endBlock:()V\n-   #57 = Methodref          #6.#257       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.endCompression:()V\n-   #58 = Methodref          #238.#258     // java/io/OutputStream.flush:()V\n-   #59 = Fieldref           #69.#259      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.inUse:[Z\n-   #60 = Fieldref           #69.#260      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.block:[B\n-   #61 = Fieldref           #69.#261      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.fmap:[I\n-   #62 = Fieldref           #69.#262      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.sfmap:[C\n-   #63 = Fieldref           #69.#263      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.mtfFreq:[I\n-   #64 = Fieldref           #69.#264      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.unseqToSeq:[B\n-   #65 = Fieldref           #69.#265      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.generateMTFValues_yy:[B\n-   #66 = Fieldref           #6.#266       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.nInUse:I\n-   #67 = Methodref          #267.#268     // java/util/Arrays.fill:([IIII)V\n-   #68 = Fieldref           #6.#269       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.nMTF:I\n-   #69 = Class              #270          // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data\n-   #70 = Methodref          #69.#271      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.\"<init>\":(I)V\n-   #71 = Class              #272          // org/apache/commons/compress/compressors/bzip2/BlockSort\n-   #72 = Methodref          #71.#273      // org/apache/commons/compress/compressors/bzip2/BlockSort.\"<init>\":(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;)V\n-   #73 = Methodref          #6.#274       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.initBlock:()V\n-   #74 = Methodref          #13.#275      // org/apache/commons/compress/compressors/bzip2/CRC.initializeCRC:()V\n-   #75 = Fieldref           #69.#276      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.origPtr:I\n-   #76 = Methodref          #6.#277       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.generateMTFValues:()V\n-   #77 = Methodref          #6.#278       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.sendMTFValues:()V\n-   #78 = Fieldref           #69.#279      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.sendMTFValues_len:[[B\n-   #79 = Methodref          #6.#280       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.sendMTFValues0:(II)V\n-   #80 = Methodref          #6.#281       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.sendMTFValues1:(II)I\n-   #81 = Methodref          #6.#282       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.sendMTFValues2:(II)V\n-   #82 = Methodref          #6.#283       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.sendMTFValues3:(II)V\n-   #83 = Methodref          #6.#284       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.sendMTFValues4:()V\n-   #84 = Methodref          #6.#285       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.sendMTFValues5:(II)V\n-   #85 = Methodref          #6.#286       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.sendMTFValues6:(II)V\n-   #86 = Methodref          #6.#287       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.sendMTFValues7:()V\n-   #87 = Fieldref           #69.#288      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.sendMTFValues_rfreq:[[I\n-   #88 = Fieldref           #69.#289      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.sendMTFValues_fave:[I\n-   #89 = Fieldref           #69.#290      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.sendMTFValues_cost:[S\n-   #90 = Fieldref           #69.#291      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.selector:[B\n-   #91 = Methodref          #206.#292     // java/lang/Math.min:(II)I\n+   #31 = Fieldref           #6.#227       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.allowableBlockSize:I\n+   #32 = Methodref          #6.#228       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.init:()V\n+   #33 = Fieldref           #6.#229       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.blockSorter:Lorg/apache/commons/compress/compressors/bzip2/BlockSort;\n+   #34 = Fieldref           #6.#230       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.data:Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;\n+   #35 = Fieldref           #6.#231       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.last:I\n+   #36 = Methodref          #71.#232      // org/apache/commons/compress/compressors/bzip2/BlockSort.blockSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n+   #37 = Fieldref           #6.#233       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.bsLive:I\n+   #38 = Fieldref           #6.#234       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.bsBuff:I\n+   #39 = Methodref          #162.#235     // java/io/OutputStream.write:(I)V\n+   #40 = Methodref          #6.#236       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.bsW:(II)V\n+   #41 = Fieldref           #6.#237       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.closed:Z\n+   #42 = Methodref          #6.#238       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.finish:()V\n+   #43 = Methodref          #162.#239     // java/io/OutputStream.close:()V\n+   #44 = Class              #240          // java/lang/Throwable\n+   #45 = Methodref          #44.#241      // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+   #46 = Methodref          #13.#242      // org/apache/commons/compress/compressors/bzip2/CRC.getFinalCRC:()I\n+   #47 = Fieldref           #6.#243       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.blockCRC:I\n+   #48 = Fieldref           #6.#244       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.combinedCRC:I\n+   #49 = Methodref          #6.#245       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.blockSort:()V\n+   #50 = Methodref          #6.#246       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.bsPutUByte:(I)V\n+   #51 = Methodref          #6.#247       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.bsPutInt:(I)V\n+   #52 = Methodref          #6.#248       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.moveToFrontCodeAndSend:()V\n+   #53 = Methodref          #6.#249       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.bsFinishedWithStream:()V\n+   #54 = Fieldref           #6.#250       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.runLength:I\n+   #55 = Methodref          #6.#251       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.writeRun:()V\n+   #56 = Methodref          #6.#252       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.endBlock:()V\n+   #57 = Methodref          #6.#253       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.endCompression:()V\n+   #58 = Methodref          #162.#254     // java/io/OutputStream.flush:()V\n+   #59 = Fieldref           #69.#255      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.inUse:[Z\n+   #60 = Fieldref           #69.#256      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.block:[B\n+   #61 = Fieldref           #69.#257      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.fmap:[I\n+   #62 = Fieldref           #69.#258      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.sfmap:[C\n+   #63 = Fieldref           #69.#259      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.mtfFreq:[I\n+   #64 = Fieldref           #69.#260      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.unseqToSeq:[B\n+   #65 = Fieldref           #69.#261      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.generateMTFValues_yy:[B\n+   #66 = Fieldref           #6.#262       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.nInUse:I\n+   #67 = Methodref          #263.#264     // java/util/Arrays.fill:([IIII)V\n+   #68 = Fieldref           #6.#265       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.nMTF:I\n+   #69 = Class              #266          // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data\n+   #70 = Methodref          #69.#267      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.\"<init>\":(I)V\n+   #71 = Class              #268          // org/apache/commons/compress/compressors/bzip2/BlockSort\n+   #72 = Methodref          #71.#269      // org/apache/commons/compress/compressors/bzip2/BlockSort.\"<init>\":(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;)V\n+   #73 = Methodref          #6.#270       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.initBlock:()V\n+   #74 = Methodref          #13.#271      // org/apache/commons/compress/compressors/bzip2/CRC.initializeCRC:()V\n+   #75 = Fieldref           #69.#272      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.origPtr:I\n+   #76 = Methodref          #6.#273       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.generateMTFValues:()V\n+   #77 = Methodref          #6.#274       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.sendMTFValues:()V\n+   #78 = Fieldref           #69.#275      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.sendMTFValues_len:[[B\n+   #79 = Methodref          #6.#276       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.sendMTFValues0:(II)V\n+   #80 = Methodref          #6.#277       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.sendMTFValues1:(II)I\n+   #81 = Methodref          #6.#278       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.sendMTFValues2:(II)V\n+   #82 = Methodref          #6.#279       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.sendMTFValues3:(II)V\n+   #83 = Methodref          #6.#280       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.sendMTFValues4:()V\n+   #84 = Methodref          #6.#281       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.sendMTFValues5:(II)V\n+   #85 = Methodref          #6.#282       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.sendMTFValues6:(II)V\n+   #86 = Methodref          #6.#283       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.sendMTFValues7:()V\n+   #87 = Fieldref           #69.#284      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.sendMTFValues_rfreq:[[I\n+   #88 = Fieldref           #69.#285      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.sendMTFValues_fave:[I\n+   #89 = Fieldref           #69.#286      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.sendMTFValues_cost:[S\n+   #90 = Fieldref           #69.#287      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.selector:[B\n+   #91 = Methodref          #203.#288     // java/lang/Math.min:(II)I\n    #92 = Integer            999999999\n-   #93 = Methodref          #6.#293       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.hbMakeCodeLengths:([B[ILorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;II)V\n-   #94 = Fieldref           #69.#294      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.sendMTFValues2_pos:[B\n-   #95 = Fieldref           #69.#295      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.selectorMtf:[B\n-   #96 = Fieldref           #69.#296      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.sendMTFValues_code:[[I\n-   #97 = Methodref          #6.#297       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.hbAssignCodes:([I[BIII)V\n-   #98 = Fieldref           #69.#298      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.sentMTFValues4_inUse16:[Z\n-   #99 = Class              #299          // java/lang/IndexOutOfBoundsException\n-  #100 = String             #300          // offs(\n-  #101 = String             #301          // ) < 0.\n-  #102 = Methodref          #99.#225      // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n-  #103 = String             #302          // len(\n-  #104 = String             #303          // ) + len(\n-  #105 = String             #304          // ) > buf.length(\n-  #106 = String             #305          // ).\n-  #107 = Class              #306          // java/io/IOException\n-  #108 = String             #307          // Stream closed\n-  #109 = Methodref          #107.#225     // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-  #110 = Methodref          #6.#308       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.write0:(I)V\n-  #111 = String             #309          // Closed\n-  #112 = Methodref          #13.#310      // org/apache/commons/compress/compressors/bzip2/CRC.updateCRC:(II)V\n-  #113 = Class              #311          // org/apache/commons/compress/compressors/CompressorOutputStream\n+   #93 = Methodref          #6.#289       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.hbMakeCodeLengths:([B[ILorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;II)V\n+   #94 = Fieldref           #69.#290      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.sendMTFValues2_pos:[B\n+   #95 = Fieldref           #69.#291      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.selectorMtf:[B\n+   #96 = Fieldref           #69.#292      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.sendMTFValues_code:[[I\n+   #97 = Methodref          #6.#293       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.hbAssignCodes:([I[BIII)V\n+   #98 = Fieldref           #69.#294      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.sentMTFValues4_inUse16:[Z\n+   #99 = Class              #295          // java/lang/IndexOutOfBoundsException\n+  #100 = String             #296          // offs(\n+  #101 = String             #297          // ) < 0.\n+  #102 = Methodref          #99.#222      // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+  #103 = String             #298          // len(\n+  #104 = String             #299          // ) + len(\n+  #105 = String             #300          // ) > buf.length(\n+  #106 = String             #301          // ).\n+  #107 = Class              #302          // java/io/IOException\n+  #108 = String             #303          // Stream closed\n+  #109 = Methodref          #107.#222     // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+  #110 = Methodref          #6.#304       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.write0:(I)V\n+  #111 = String             #305          // Closed\n+  #112 = Methodref          #13.#306      // org/apache/commons/compress/compressors/bzip2/CRC.updateCRC:(II)V\n+  #113 = Class              #307          // org/apache/commons/compress/compressors/CompressorOutputStream\n   #114 = Utf8               Data\n   #115 = Utf8               InnerClasses\n   #116 = Utf8               MIN_BLOCKSIZE\n   #117 = Utf8               I\n   #118 = Utf8               ConstantValue\n   #119 = Integer            1\n   #120 = Utf8               MAX_BLOCKSIZE\n@@ -157,218 +157,214 @@\n   #149 = Utf8               Code\n   #150 = Utf8               LineNumberTable\n   #151 = Utf8               StackMapTable\n   #152 = Utf8               hbAssignCodes\n   #153 = Utf8               ([I[BIII)V\n   #154 = Utf8               hbMakeCodeLengths\n   #155 = Utf8               ([B[ILorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;II)V\n-  #156 = Class              #312          // \"[B\"\n-  #157 = Class              #313          // \"[I\"\n-  #158 = Class              #270          // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data\n-  #159 = Utf8               <init>\n-  #160 = Utf8               (Ljava/io/OutputStream;)V\n-  #161 = Utf8               Exceptions\n-  #162 = Utf8               (Ljava/io/OutputStream;I)V\n-  #163 = Class              #208          // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream\n-  #164 = Class              #314          // java/io/OutputStream\n-  #165 = Utf8               blockSort\n-  #166 = Utf8               ()V\n-  #167 = Utf8               bsFinishedWithStream\n-  #168 = Utf8               bsPutInt\n-  #169 = Utf8               (I)V\n-  #170 = Utf8               bsPutUByte\n-  #171 = Utf8               bsW\n-  #172 = Utf8               (II)V\n-  #173 = Utf8               close\n-  #174 = Class              #244          // java/lang/Throwable\n-  #175 = Utf8               endBlock\n-  #176 = Utf8               endCompression\n-  #177 = Utf8               finish\n-  #178 = Utf8               flush\n-  #179 = Utf8               generateMTFValues\n-  #180 = Class              #315          // \"[Z\"\n-  #181 = Class              #316          // \"[C\"\n-  #182 = Utf8               getBlockSize\n-  #183 = Utf8               ()I\n-  #184 = Utf8               init\n-  #185 = Utf8               initBlock\n-  #186 = Utf8               moveToFrontCodeAndSend\n-  #187 = Utf8               sendMTFValues\n-  #188 = Class              #317          // \"[[B\"\n-  #189 = Utf8               sendMTFValues0\n-  #190 = Utf8               sendMTFValues1\n-  #191 = Utf8               (II)I\n-  #192 = Class              #318          // \"[[I\"\n-  #193 = Class              #319          // \"[S\"\n-  #194 = Utf8               sendMTFValues2\n-  #195 = Utf8               sendMTFValues3\n-  #196 = Utf8               sendMTFValues4\n-  #197 = Utf8               sendMTFValues5\n-  #198 = Utf8               sendMTFValues6\n-  #199 = Utf8               sendMTFValues7\n-  #200 = Utf8               write\n-  #201 = Utf8               ([BII)V\n-  #202 = Utf8               write0\n-  #203 = Utf8               writeRun\n-  #204 = Utf8               SourceFile\n-  #205 = Utf8               BZip2CompressorOutputStream.java\n-  #206 = Class              #320          // java/lang/Math\n-  #207 = NameAndType        #321:#322     // min:(JJ)J\n-  #208 = Utf8               org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream\n-  #209 = NameAndType        #323:#313     // heap:[I\n-  #210 = NameAndType        #324:#313     // weight:[I\n-  #211 = NameAndType        #325:#313     // parent:[I\n-  #212 = NameAndType        #326:#191     // max:(II)I\n-  #213 = NameAndType        #159:#162     // \"<init>\":(Ljava/io/OutputStream;I)V\n-  #214 = NameAndType        #159:#166     // \"<init>\":()V\n-  #215 = Utf8               org/apache/commons/compress/compressors/bzip2/CRC\n-  #216 = NameAndType        #130:#131     // crc:Lorg/apache/commons/compress/compressors/bzip2/CRC;\n-  #217 = NameAndType        #134:#117     // currentChar:I\n-  #218 = Utf8               java/lang/IllegalArgumentException\n-  #219 = Utf8               java/lang/StringBuilder\n-  #220 = Utf8               blockSize(\n-  #221 = NameAndType        #327:#328     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #222 = NameAndType        #327:#329     // append:(I)Ljava/lang/StringBuilder;\n-  #223 = Utf8               ) < 1\n-  #224 = NameAndType        #330:#331     // toString:()Ljava/lang/String;\n-  #225 = NameAndType        #159:#332     // \"<init>\":(Ljava/lang/String;)V\n-  #226 = Utf8               ) > 9\n-  #227 = NameAndType        #127:#117     // blockSize100k:I\n-  #228 = NameAndType        #143:#144     // out:Ljava/io/OutputStream;\n-  #229 = Utf8               org/apache/commons/compress/compressors/bzip2/BZip2Constants\n-  #230 = NameAndType        #138:#117     // allowableBlockSize:I\n-  #231 = NameAndType        #184:#166     // init:()V\n-  #232 = NameAndType        #141:#142     // blockSorter:Lorg/apache/commons/compress/compressors/bzip2/BlockSort;\n-  #233 = NameAndType        #139:#140     // data:Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;\n-  #234 = NameAndType        #126:#117     // last:I\n-  #235 = NameAndType        #165:#333     // blockSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n-  #236 = NameAndType        #129:#117     // bsLive:I\n-  #237 = NameAndType        #128:#117     // bsBuff:I\n-  #238 = Class              #314          // java/io/OutputStream\n-  #239 = NameAndType        #200:#169     // write:(I)V\n-  #240 = NameAndType        #171:#172     // bsW:(II)V\n-  #241 = NameAndType        #145:#146     // closed:Z\n-  #242 = NameAndType        #177:#166     // finish:()V\n-  #243 = NameAndType        #173:#166     // close:()V\n-  #244 = Utf8               java/lang/Throwable\n-  #245 = NameAndType        #334:#335     // addSuppressed:(Ljava/lang/Throwable;)V\n-  #246 = NameAndType        #336:#183     // getFinalCRC:()I\n-  #247 = NameAndType        #136:#117     // blockCRC:I\n-  #248 = NameAndType        #137:#117     // combinedCRC:I\n-  #249 = NameAndType        #165:#166     // blockSort:()V\n-  #250 = NameAndType        #170:#169     // bsPutUByte:(I)V\n-  #251 = NameAndType        #168:#169     // bsPutInt:(I)V\n-  #252 = NameAndType        #186:#166     // moveToFrontCodeAndSend:()V\n-  #253 = NameAndType        #167:#166     // bsFinishedWithStream:()V\n-  #254 = NameAndType        #135:#117     // runLength:I\n-  #255 = NameAndType        #203:#166     // writeRun:()V\n-  #256 = NameAndType        #175:#166     // endBlock:()V\n-  #257 = NameAndType        #176:#166     // endCompression:()V\n-  #258 = NameAndType        #178:#166     // flush:()V\n-  #259 = NameAndType        #337:#315     // inUse:[Z\n-  #260 = NameAndType        #338:#312     // block:[B\n-  #261 = NameAndType        #339:#313     // fmap:[I\n-  #262 = NameAndType        #340:#316     // sfmap:[C\n-  #263 = NameAndType        #341:#313     // mtfFreq:[I\n-  #264 = NameAndType        #342:#312     // unseqToSeq:[B\n-  #265 = NameAndType        #343:#312     // generateMTFValues_yy:[B\n-  #266 = NameAndType        #132:#117     // nInUse:I\n-  #267 = Class              #344          // java/util/Arrays\n-  #268 = NameAndType        #345:#346     // fill:([IIII)V\n-  #269 = NameAndType        #133:#117     // nMTF:I\n-  #270 = Utf8               org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data\n-  #271 = NameAndType        #159:#169     // \"<init>\":(I)V\n-  #272 = Utf8               org/apache/commons/compress/compressors/bzip2/BlockSort\n-  #273 = NameAndType        #159:#347     // \"<init>\":(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;)V\n-  #274 = NameAndType        #185:#166     // initBlock:()V\n-  #275 = NameAndType        #348:#166     // initializeCRC:()V\n-  #276 = NameAndType        #349:#117     // origPtr:I\n-  #277 = NameAndType        #179:#166     // generateMTFValues:()V\n-  #278 = NameAndType        #187:#166     // sendMTFValues:()V\n-  #279 = NameAndType        #350:#317     // sendMTFValues_len:[[B\n-  #280 = NameAndType        #189:#172     // sendMTFValues0:(II)V\n-  #281 = NameAndType        #190:#191     // sendMTFValues1:(II)I\n-  #282 = NameAndType        #194:#172     // sendMTFValues2:(II)V\n-  #283 = NameAndType        #195:#172     // sendMTFValues3:(II)V\n-  #284 = NameAndType        #196:#166     // sendMTFValues4:()V\n-  #285 = NameAndType        #197:#172     // sendMTFValues5:(II)V\n-  #286 = NameAndType        #198:#172     // sendMTFValues6:(II)V\n-  #287 = NameAndType        #199:#166     // sendMTFValues7:()V\n-  #288 = NameAndType        #351:#318     // sendMTFValues_rfreq:[[I\n-  #289 = NameAndType        #352:#313     // sendMTFValues_fave:[I\n-  #290 = NameAndType        #353:#319     // sendMTFValues_cost:[S\n-  #291 = NameAndType        #354:#312     // selector:[B\n-  #292 = NameAndType        #321:#191     // min:(II)I\n-  #293 = NameAndType        #154:#155     // hbMakeCodeLengths:([B[ILorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;II)V\n-  #294 = NameAndType        #355:#312     // sendMTFValues2_pos:[B\n-  #295 = NameAndType        #356:#312     // selectorMtf:[B\n-  #296 = NameAndType        #357:#318     // sendMTFValues_code:[[I\n-  #297 = NameAndType        #152:#153     // hbAssignCodes:([I[BIII)V\n-  #298 = NameAndType        #358:#315     // sentMTFValues4_inUse16:[Z\n-  #299 = Utf8               java/lang/IndexOutOfBoundsException\n-  #300 = Utf8               offs(\n-  #301 = Utf8               ) < 0.\n-  #302 = Utf8               len(\n-  #303 = Utf8               ) + len(\n-  #304 = Utf8               ) > buf.length(\n-  #305 = Utf8               ).\n-  #306 = Utf8               java/io/IOException\n-  #307 = Utf8               Stream closed\n-  #308 = NameAndType        #202:#169     // write0:(I)V\n-  #309 = Utf8               Closed\n-  #310 = NameAndType        #359:#172     // updateCRC:(II)V\n-  #311 = Utf8               org/apache/commons/compress/compressors/CompressorOutputStream\n-  #312 = Utf8               [B\n-  #313 = Utf8               [I\n-  #314 = Utf8               java/io/OutputStream\n-  #315 = Utf8               [Z\n-  #316 = Utf8               [C\n-  #317 = Utf8               [[B\n-  #318 = Utf8               [[I\n-  #319 = Utf8               [S\n-  #320 = Utf8               java/lang/Math\n-  #321 = Utf8               min\n-  #322 = Utf8               (JJ)J\n-  #323 = Utf8               heap\n-  #324 = Utf8               weight\n-  #325 = Utf8               parent\n-  #326 = Utf8               max\n-  #327 = Utf8               append\n-  #328 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #329 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #330 = Utf8               toString\n-  #331 = Utf8               ()Ljava/lang/String;\n-  #332 = Utf8               (Ljava/lang/String;)V\n-  #333 = Utf8               (Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n-  #334 = Utf8               addSuppressed\n-  #335 = Utf8               (Ljava/lang/Throwable;)V\n-  #336 = Utf8               getFinalCRC\n-  #337 = Utf8               inUse\n-  #338 = Utf8               block\n-  #339 = Utf8               fmap\n-  #340 = Utf8               sfmap\n-  #341 = Utf8               mtfFreq\n-  #342 = Utf8               unseqToSeq\n-  #343 = Utf8               generateMTFValues_yy\n-  #344 = Utf8               java/util/Arrays\n-  #345 = Utf8               fill\n-  #346 = Utf8               ([IIII)V\n-  #347 = Utf8               (Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;)V\n-  #348 = Utf8               initializeCRC\n-  #349 = Utf8               origPtr\n-  #350 = Utf8               sendMTFValues_len\n-  #351 = Utf8               sendMTFValues_rfreq\n-  #352 = Utf8               sendMTFValues_fave\n-  #353 = Utf8               sendMTFValues_cost\n-  #354 = Utf8               selector\n-  #355 = Utf8               sendMTFValues2_pos\n-  #356 = Utf8               selectorMtf\n-  #357 = Utf8               sendMTFValues_code\n-  #358 = Utf8               sentMTFValues4_inUse16\n-  #359 = Utf8               updateCRC\n+  #156 = Class              #308          // \"[B\"\n+  #157 = Class              #309          // \"[I\"\n+  #158 = Utf8               <init>\n+  #159 = Utf8               (Ljava/io/OutputStream;)V\n+  #160 = Utf8               Exceptions\n+  #161 = Utf8               (Ljava/io/OutputStream;I)V\n+  #162 = Class              #310          // java/io/OutputStream\n+  #163 = Utf8               blockSort\n+  #164 = Utf8               ()V\n+  #165 = Utf8               bsFinishedWithStream\n+  #166 = Utf8               bsPutInt\n+  #167 = Utf8               (I)V\n+  #168 = Utf8               bsPutUByte\n+  #169 = Utf8               bsW\n+  #170 = Utf8               (II)V\n+  #171 = Utf8               close\n+  #172 = Utf8               endBlock\n+  #173 = Utf8               endCompression\n+  #174 = Utf8               finish\n+  #175 = Utf8               flush\n+  #176 = Utf8               generateMTFValues\n+  #177 = Class              #311          // \"[Z\"\n+  #178 = Class              #312          // \"[C\"\n+  #179 = Utf8               getBlockSize\n+  #180 = Utf8               ()I\n+  #181 = Utf8               init\n+  #182 = Utf8               initBlock\n+  #183 = Utf8               moveToFrontCodeAndSend\n+  #184 = Utf8               sendMTFValues\n+  #185 = Class              #313          // \"[[B\"\n+  #186 = Utf8               sendMTFValues0\n+  #187 = Utf8               sendMTFValues1\n+  #188 = Utf8               (II)I\n+  #189 = Class              #314          // \"[[I\"\n+  #190 = Class              #315          // \"[S\"\n+  #191 = Utf8               sendMTFValues2\n+  #192 = Utf8               sendMTFValues3\n+  #193 = Utf8               sendMTFValues4\n+  #194 = Utf8               sendMTFValues5\n+  #195 = Utf8               sendMTFValues6\n+  #196 = Utf8               sendMTFValues7\n+  #197 = Utf8               write\n+  #198 = Utf8               ([BII)V\n+  #199 = Utf8               write0\n+  #200 = Utf8               writeRun\n+  #201 = Utf8               SourceFile\n+  #202 = Utf8               BZip2CompressorOutputStream.java\n+  #203 = Class              #316          // java/lang/Math\n+  #204 = NameAndType        #317:#318     // min:(JJ)J\n+  #205 = Utf8               org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream\n+  #206 = NameAndType        #319:#309     // heap:[I\n+  #207 = NameAndType        #320:#309     // weight:[I\n+  #208 = NameAndType        #321:#309     // parent:[I\n+  #209 = NameAndType        #322:#188     // max:(II)I\n+  #210 = NameAndType        #158:#161     // \"<init>\":(Ljava/io/OutputStream;I)V\n+  #211 = NameAndType        #158:#164     // \"<init>\":()V\n+  #212 = Utf8               org/apache/commons/compress/compressors/bzip2/CRC\n+  #213 = NameAndType        #130:#131     // crc:Lorg/apache/commons/compress/compressors/bzip2/CRC;\n+  #214 = NameAndType        #134:#117     // currentChar:I\n+  #215 = Utf8               java/lang/IllegalArgumentException\n+  #216 = Utf8               java/lang/StringBuilder\n+  #217 = Utf8               blockSize(\n+  #218 = NameAndType        #323:#324     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #219 = NameAndType        #323:#325     // append:(I)Ljava/lang/StringBuilder;\n+  #220 = Utf8               ) < 1\n+  #221 = NameAndType        #326:#327     // toString:()Ljava/lang/String;\n+  #222 = NameAndType        #158:#328     // \"<init>\":(Ljava/lang/String;)V\n+  #223 = Utf8               ) > 9\n+  #224 = NameAndType        #127:#117     // blockSize100k:I\n+  #225 = NameAndType        #143:#144     // out:Ljava/io/OutputStream;\n+  #226 = Utf8               org/apache/commons/compress/compressors/bzip2/BZip2Constants\n+  #227 = NameAndType        #138:#117     // allowableBlockSize:I\n+  #228 = NameAndType        #181:#164     // init:()V\n+  #229 = NameAndType        #141:#142     // blockSorter:Lorg/apache/commons/compress/compressors/bzip2/BlockSort;\n+  #230 = NameAndType        #139:#140     // data:Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;\n+  #231 = NameAndType        #126:#117     // last:I\n+  #232 = NameAndType        #163:#329     // blockSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n+  #233 = NameAndType        #129:#117     // bsLive:I\n+  #234 = NameAndType        #128:#117     // bsBuff:I\n+  #235 = NameAndType        #197:#167     // write:(I)V\n+  #236 = NameAndType        #169:#170     // bsW:(II)V\n+  #237 = NameAndType        #145:#146     // closed:Z\n+  #238 = NameAndType        #174:#164     // finish:()V\n+  #239 = NameAndType        #171:#164     // close:()V\n+  #240 = Utf8               java/lang/Throwable\n+  #241 = NameAndType        #330:#331     // addSuppressed:(Ljava/lang/Throwable;)V\n+  #242 = NameAndType        #332:#180     // getFinalCRC:()I\n+  #243 = NameAndType        #136:#117     // blockCRC:I\n+  #244 = NameAndType        #137:#117     // combinedCRC:I\n+  #245 = NameAndType        #163:#164     // blockSort:()V\n+  #246 = NameAndType        #168:#167     // bsPutUByte:(I)V\n+  #247 = NameAndType        #166:#167     // bsPutInt:(I)V\n+  #248 = NameAndType        #183:#164     // moveToFrontCodeAndSend:()V\n+  #249 = NameAndType        #165:#164     // bsFinishedWithStream:()V\n+  #250 = NameAndType        #135:#117     // runLength:I\n+  #251 = NameAndType        #200:#164     // writeRun:()V\n+  #252 = NameAndType        #172:#164     // endBlock:()V\n+  #253 = NameAndType        #173:#164     // endCompression:()V\n+  #254 = NameAndType        #175:#164     // flush:()V\n+  #255 = NameAndType        #333:#311     // inUse:[Z\n+  #256 = NameAndType        #334:#308     // block:[B\n+  #257 = NameAndType        #335:#309     // fmap:[I\n+  #258 = NameAndType        #336:#312     // sfmap:[C\n+  #259 = NameAndType        #337:#309     // mtfFreq:[I\n+  #260 = NameAndType        #338:#308     // unseqToSeq:[B\n+  #261 = NameAndType        #339:#308     // generateMTFValues_yy:[B\n+  #262 = NameAndType        #132:#117     // nInUse:I\n+  #263 = Class              #340          // java/util/Arrays\n+  #264 = NameAndType        #341:#342     // fill:([IIII)V\n+  #265 = NameAndType        #133:#117     // nMTF:I\n+  #266 = Utf8               org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data\n+  #267 = NameAndType        #158:#167     // \"<init>\":(I)V\n+  #268 = Utf8               org/apache/commons/compress/compressors/bzip2/BlockSort\n+  #269 = NameAndType        #158:#343     // \"<init>\":(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;)V\n+  #270 = NameAndType        #182:#164     // initBlock:()V\n+  #271 = NameAndType        #344:#164     // initializeCRC:()V\n+  #272 = NameAndType        #345:#117     // origPtr:I\n+  #273 = NameAndType        #176:#164     // generateMTFValues:()V\n+  #274 = NameAndType        #184:#164     // sendMTFValues:()V\n+  #275 = NameAndType        #346:#313     // sendMTFValues_len:[[B\n+  #276 = NameAndType        #186:#170     // sendMTFValues0:(II)V\n+  #277 = NameAndType        #187:#188     // sendMTFValues1:(II)I\n+  #278 = NameAndType        #191:#170     // sendMTFValues2:(II)V\n+  #279 = NameAndType        #192:#170     // sendMTFValues3:(II)V\n+  #280 = NameAndType        #193:#164     // sendMTFValues4:()V\n+  #281 = NameAndType        #194:#170     // sendMTFValues5:(II)V\n+  #282 = NameAndType        #195:#170     // sendMTFValues6:(II)V\n+  #283 = NameAndType        #196:#164     // sendMTFValues7:()V\n+  #284 = NameAndType        #347:#314     // sendMTFValues_rfreq:[[I\n+  #285 = NameAndType        #348:#309     // sendMTFValues_fave:[I\n+  #286 = NameAndType        #349:#315     // sendMTFValues_cost:[S\n+  #287 = NameAndType        #350:#308     // selector:[B\n+  #288 = NameAndType        #317:#188     // min:(II)I\n+  #289 = NameAndType        #154:#155     // hbMakeCodeLengths:([B[ILorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;II)V\n+  #290 = NameAndType        #351:#308     // sendMTFValues2_pos:[B\n+  #291 = NameAndType        #352:#308     // selectorMtf:[B\n+  #292 = NameAndType        #353:#314     // sendMTFValues_code:[[I\n+  #293 = NameAndType        #152:#153     // hbAssignCodes:([I[BIII)V\n+  #294 = NameAndType        #354:#311     // sentMTFValues4_inUse16:[Z\n+  #295 = Utf8               java/lang/IndexOutOfBoundsException\n+  #296 = Utf8               offs(\n+  #297 = Utf8               ) < 0.\n+  #298 = Utf8               len(\n+  #299 = Utf8               ) + len(\n+  #300 = Utf8               ) > buf.length(\n+  #301 = Utf8               ).\n+  #302 = Utf8               java/io/IOException\n+  #303 = Utf8               Stream closed\n+  #304 = NameAndType        #199:#167     // write0:(I)V\n+  #305 = Utf8               Closed\n+  #306 = NameAndType        #355:#170     // updateCRC:(II)V\n+  #307 = Utf8               org/apache/commons/compress/compressors/CompressorOutputStream\n+  #308 = Utf8               [B\n+  #309 = Utf8               [I\n+  #310 = Utf8               java/io/OutputStream\n+  #311 = Utf8               [Z\n+  #312 = Utf8               [C\n+  #313 = Utf8               [[B\n+  #314 = Utf8               [[I\n+  #315 = Utf8               [S\n+  #316 = Utf8               java/lang/Math\n+  #317 = Utf8               min\n+  #318 = Utf8               (JJ)J\n+  #319 = Utf8               heap\n+  #320 = Utf8               weight\n+  #321 = Utf8               parent\n+  #322 = Utf8               max\n+  #323 = Utf8               append\n+  #324 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #325 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #326 = Utf8               toString\n+  #327 = Utf8               ()Ljava/lang/String;\n+  #328 = Utf8               (Ljava/lang/String;)V\n+  #329 = Utf8               (Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n+  #330 = Utf8               addSuppressed\n+  #331 = Utf8               (Ljava/lang/Throwable;)V\n+  #332 = Utf8               getFinalCRC\n+  #333 = Utf8               inUse\n+  #334 = Utf8               block\n+  #335 = Utf8               fmap\n+  #336 = Utf8               sfmap\n+  #337 = Utf8               mtfFreq\n+  #338 = Utf8               unseqToSeq\n+  #339 = Utf8               generateMTFValues_yy\n+  #340 = Utf8               java/util/Arrays\n+  #341 = Utf8               fill\n+  #342 = Utf8               ([IIII)V\n+  #343 = Utf8               (Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;)V\n+  #344 = Utf8               initializeCRC\n+  #345 = Utf8               origPtr\n+  #346 = Utf8               sendMTFValues_len\n+  #347 = Utf8               sendMTFValues_rfreq\n+  #348 = Utf8               sendMTFValues_fave\n+  #349 = Utf8               sendMTFValues_cost\n+  #350 = Utf8               selector\n+  #351 = Utf8               sendMTFValues2_pos\n+  #352 = Utf8               selectorMtf\n+  #353 = Utf8               sendMTFValues_code\n+  #354 = Utf8               sentMTFValues4_inUse16\n+  #355 = Utf8               updateCRC\n {\n   public static final int MIN_BLOCKSIZE = 1;\n     descriptor: I\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 1\n \n   public static final int MAX_BLOCKSIZE = 9;\n@@ -1386,98 +1382,64 @@\n     Exceptions:\n       throws java.io.IOException\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=2, locals=6, args_size=1\n+      stack=2, locals=4, args_size=1\n          0: aload_0\n          1: getfield      #41                 // Field closed:Z\n-         4: ifne          89\n+         4: ifne          47\n          7: aload_0\n          8: getfield      #28                 // Field out:Ljava/io/OutputStream;\n         11: astore_1\n-        12: aconst_null\n-        13: astore_2\n-        14: aload_0\n-        15: invokevirtual #42                 // Method finish:()V\n-        18: aload_1\n-        19: ifnull        89\n-        22: aload_2\n-        23: ifnull        42\n-        26: aload_1\n-        27: invokevirtual #43                 // Method java/io/OutputStream.close:()V\n-        30: goto          89\n-        33: astore_3\n-        34: aload_2\n-        35: aload_3\n-        36: invokevirtual #45                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-        39: goto          89\n-        42: aload_1\n-        43: invokevirtual #43                 // Method java/io/OutputStream.close:()V\n-        46: goto          89\n-        49: astore_3\n-        50: aload_3\n-        51: astore_2\n-        52: aload_3\n-        53: athrow\n-        54: astore        4\n-        56: aload_1\n-        57: ifnull        86\n-        60: aload_2\n-        61: ifnull        82\n-        64: aload_1\n-        65: invokevirtual #43                 // Method java/io/OutputStream.close:()V\n-        68: goto          86\n-        71: astore        5\n-        73: aload_2\n-        74: aload         5\n-        76: invokevirtual #45                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-        79: goto          86\n-        82: aload_1\n-        83: invokevirtual #43                 // Method java/io/OutputStream.close:()V\n-        86: aload         4\n-        88: athrow\n-        89: return\n+        12: aload_0\n+        13: invokevirtual #42                 // Method finish:()V\n+        16: aload_1\n+        17: ifnull        47\n+        20: aload_1\n+        21: invokevirtual #43                 // Method java/io/OutputStream.close:()V\n+        24: goto          47\n+        27: astore_2\n+        28: aload_1\n+        29: ifnull        45\n+        32: aload_1\n+        33: invokevirtual #43                 // Method java/io/OutputStream.close:()V\n+        36: goto          45\n+        39: astore_3\n+        40: aload_2\n+        41: aload_3\n+        42: invokevirtual #45                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        45: aload_2\n+        46: athrow\n+        47: return\n       Exception table:\n          from    to  target type\n-            26    30    33   Class java/lang/Throwable\n-            14    18    49   Class java/lang/Throwable\n-            14    18    54   any\n-            64    68    71   Class java/lang/Throwable\n-            49    56    54   any\n+            12    16    27   Class java/lang/Throwable\n+            32    36    39   Class java/lang/Throwable\n       LineNumberTable:\n         line 508: 0\n         line 509: 7\n-        line 510: 14\n-        line 511: 18\n-        line 509: 49\n-        line 511: 54\n-        line 513: 89\n-      StackMapTable: number_of_entries = 8\n+        line 510: 12\n+        line 511: 16\n+        line 509: 27\n+        line 513: 47\n+      StackMapTable: number_of_entries = 4\n         frame_type = 255 /* full_frame */\n-          offset_delta = 33\n-          locals = [ class org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream, class java/io/OutputStream, class java/lang/Throwable ]\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 8 /* same */\n-        frame_type = 70 /* same_locals_1_stack_item */\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 68 /* same_locals_1_stack_item */\n+          offset_delta = 27\n+          locals = [ class org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream, class java/io/OutputStream ]\n           stack = [ class java/lang/Throwable ]\n         frame_type = 255 /* full_frame */\n-          offset_delta = 16\n-          locals = [ class org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream, class java/io/OutputStream, class java/lang/Throwable, top, class java/lang/Throwable ]\n+          offset_delta = 11\n+          locals = [ class org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream, class java/io/OutputStream, class java/lang/Throwable ]\n           stack = [ class java/lang/Throwable ]\n-        frame_type = 10 /* same */\n-        frame_type = 3 /* same */\n-        frame_type = 255 /* full_frame */\n-          offset_delta = 2\n-          locals = [ class org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream ]\n-          stack = []\n+        frame_type = 5 /* same */\n+        frame_type = 249 /* chop */\n+          offset_delta = 1\n     Exceptions:\n       throws java.io.IOException\n \n   private void endBlock() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n@@ -2283,14 +2245,15 @@\n         line 756: 8\n         line 758: 15\n         line 759: 25\n         line 760: 30\n         line 761: 41\n         line 763: 51\n         line 767: 54\n+        line 768: 82\n         line 771: 113\n         line 776: 119\n         line 779: 127\n         line 782: 134\n         line 785: 140\n         line 788: 144\n         line 791: 151\n"}]}
