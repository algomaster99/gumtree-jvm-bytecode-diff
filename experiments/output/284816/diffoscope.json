{"diffoscope-json-version": 1, "source1": "first/CodeException.class", "source2": "second/CodeException.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,67 +1,67 @@\n-  SHA-256 checksum 2f53e8b990b091c43b397856047f9c0aae943e20b7b1c4b4d151f7f3ec7f3570\n+  SHA-256 checksum 55bae0aa24d830a723b03a6bc9c14773f7268fc58f5c98b81349a5d41b8e06cc\n   Compiled from \"CodeException.java\"\n public final class org.apache.bcel.classfile.CodeException implements java.lang.Cloneable,org.apache.bcel.classfile.Node,org.apache.bcel.Constants\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #33                         // org/apache/bcel/classfile/CodeException\n   super_class: #35                        // java/lang/Object\n   interfaces: 3, fields: 4, methods: 17, attributes: 1\n Constant pool:\n-    #1 = Methodref          #33.#80       // org/apache/bcel/classfile/CodeException.getStartPC:()I\n-    #2 = Methodref          #33.#81       // org/apache/bcel/classfile/CodeException.getEndPC:()I\n-    #3 = Methodref          #33.#82       // org/apache/bcel/classfile/CodeException.getHandlerPC:()I\n-    #4 = Methodref          #33.#83       // org/apache/bcel/classfile/CodeException.getCatchType:()I\n-    #5 = Methodref          #33.#84       // org/apache/bcel/classfile/CodeException.\"<init>\":(IIII)V\n-    #6 = InterfaceMethodref #85.#86       // java/io/DataInput.readUnsignedShort:()I\n-    #7 = Methodref          #35.#87       // java/lang/Object.\"<init>\":()V\n-    #8 = Fieldref           #33.#88       // org/apache/bcel/classfile/CodeException.start_pc:I\n-    #9 = Fieldref           #33.#89       // org/apache/bcel/classfile/CodeException.end_pc:I\n-   #10 = Fieldref           #33.#90       // org/apache/bcel/classfile/CodeException.handler_pc:I\n-   #11 = Fieldref           #33.#91       // org/apache/bcel/classfile/CodeException.catch_type:I\n-   #12 = InterfaceMethodref #92.#93       // org/apache/bcel/classfile/Visitor.visitCodeException:(Lorg/apache/bcel/classfile/CodeException;)V\n-   #13 = Methodref          #94.#95       // java/io/DataOutputStream.writeShort:(I)V\n-   #14 = Class              #96           // java/lang/StringBuilder\n-   #15 = Methodref          #14.#87       // java/lang/StringBuilder.\"<init>\":()V\n-   #16 = String             #97           // CodeException(start_pc =\n-   #17 = Methodref          #14.#98       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #18 = Methodref          #14.#99       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #19 = String             #100          // , end_pc =\n-   #20 = String             #101          // , handler_pc =\n-   #21 = String             #102          // , catch_type =\n-   #22 = String             #103          // )\n-   #23 = Methodref          #14.#104      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #24 = String             #105          // <Any exception>(0)\n-   #25 = Class              #106          // org/apache/bcel/Const\n-   #26 = Methodref          #107.#108     // org/apache/bcel/classfile/ConstantPool.getConstantString:(IB)Ljava/lang/String;\n-   #27 = Methodref          #109.#110     // org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n-   #28 = String             #111          // (\n-   #29 = String             #112          //\n-   #30 = String             #113          // \\t\n-   #31 = Methodref          #33.#114      // org/apache/bcel/classfile/CodeException.toString:(Lorg/apache/bcel/classfile/ConstantPool;Z)Ljava/lang/String;\n-   #32 = Methodref          #35.#115      // java/lang/Object.clone:()Ljava/lang/Object;\n-   #33 = Class              #116          // org/apache/bcel/classfile/CodeException\n-   #34 = Class              #117          // java/lang/CloneNotSupportedException\n-   #35 = Class              #118          // java/lang/Object\n-   #36 = Class              #119          // java/lang/Cloneable\n-   #37 = Class              #120          // org/apache/bcel/classfile/Node\n-   #38 = Class              #121          // org/apache/bcel/Constants\n+    #1 = Methodref          #33.#77       // org/apache/bcel/classfile/CodeException.getStartPC:()I\n+    #2 = Methodref          #33.#78       // org/apache/bcel/classfile/CodeException.getEndPC:()I\n+    #3 = Methodref          #33.#79       // org/apache/bcel/classfile/CodeException.getHandlerPC:()I\n+    #4 = Methodref          #33.#80       // org/apache/bcel/classfile/CodeException.getCatchType:()I\n+    #5 = Methodref          #33.#81       // org/apache/bcel/classfile/CodeException.\"<init>\":(IIII)V\n+    #6 = InterfaceMethodref #82.#83       // java/io/DataInput.readUnsignedShort:()I\n+    #7 = Methodref          #35.#84       // java/lang/Object.\"<init>\":()V\n+    #8 = Fieldref           #33.#85       // org/apache/bcel/classfile/CodeException.start_pc:I\n+    #9 = Fieldref           #33.#86       // org/apache/bcel/classfile/CodeException.end_pc:I\n+   #10 = Fieldref           #33.#87       // org/apache/bcel/classfile/CodeException.handler_pc:I\n+   #11 = Fieldref           #33.#88       // org/apache/bcel/classfile/CodeException.catch_type:I\n+   #12 = InterfaceMethodref #89.#90       // org/apache/bcel/classfile/Visitor.visitCodeException:(Lorg/apache/bcel/classfile/CodeException;)V\n+   #13 = Methodref          #91.#92       // java/io/DataOutputStream.writeShort:(I)V\n+   #14 = Class              #93           // java/lang/StringBuilder\n+   #15 = Methodref          #14.#84       // java/lang/StringBuilder.\"<init>\":()V\n+   #16 = String             #94           // CodeException(start_pc =\n+   #17 = Methodref          #14.#95       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #18 = Methodref          #14.#96       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #19 = String             #97           // , end_pc =\n+   #20 = String             #98           // , handler_pc =\n+   #21 = String             #99           // , catch_type =\n+   #22 = String             #100          // )\n+   #23 = Methodref          #14.#101      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #24 = String             #102          // <Any exception>(0)\n+   #25 = Class              #103          // org/apache/bcel/Const\n+   #26 = Methodref          #70.#104      // org/apache/bcel/classfile/ConstantPool.getConstantString:(IB)Ljava/lang/String;\n+   #27 = Methodref          #105.#106     // org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n+   #28 = String             #107          // (\n+   #29 = String             #108          //\n+   #30 = String             #109          // \\t\n+   #31 = Methodref          #33.#110      // org/apache/bcel/classfile/CodeException.toString:(Lorg/apache/bcel/classfile/ConstantPool;Z)Ljava/lang/String;\n+   #32 = Methodref          #35.#111      // java/lang/Object.clone:()Ljava/lang/Object;\n+   #33 = Class              #112          // org/apache/bcel/classfile/CodeException\n+   #34 = Class              #113          // java/lang/CloneNotSupportedException\n+   #35 = Class              #114          // java/lang/Object\n+   #36 = Class              #115          // java/lang/Cloneable\n+   #37 = Class              #116          // org/apache/bcel/classfile/Node\n+   #38 = Class              #117          // org/apache/bcel/Constants\n    #39 = Utf8               start_pc\n    #40 = Utf8               I\n    #41 = Utf8               end_pc\n    #42 = Utf8               handler_pc\n    #43 = Utf8               catch_type\n    #44 = Utf8               <init>\n    #45 = Utf8               (Lorg/apache/bcel/classfile/CodeException;)V\n    #46 = Utf8               Code\n    #47 = Utf8               LineNumberTable\n    #48 = Utf8               (Ljava/io/DataInput;)V\n    #49 = Utf8               Exceptions\n-   #50 = Class              #122          // java/io/IOException\n+   #50 = Class              #118          // java/io/IOException\n    #51 = Utf8               (IIII)V\n    #52 = Utf8               accept\n    #53 = Utf8               (Lorg/apache/bcel/classfile/Visitor;)V\n    #54 = Utf8               dump\n    #55 = Utf8               (Ljava/io/DataOutputStream;)V\n    #56 = Utf8               getCatchType\n    #57 = Utf8               ()I\n@@ -73,86 +73,82 @@\n    #63 = Utf8               setEndPC\n    #64 = Utf8               setHandlerPC\n    #65 = Utf8               setStartPC\n    #66 = Utf8               toString\n    #67 = Utf8               ()Ljava/lang/String;\n    #68 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;Z)Ljava/lang/String;\n    #69 = Utf8               StackMapTable\n-   #70 = Class              #96           // java/lang/StringBuilder\n-   #71 = Class              #116          // org/apache/bcel/classfile/CodeException\n-   #72 = Class              #123          // org/apache/bcel/classfile/ConstantPool\n-   #73 = Class              #124          // java/lang/String\n-   #74 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)Ljava/lang/String;\n-   #75 = Utf8               copy\n-   #76 = Utf8               ()Lorg/apache/bcel/classfile/CodeException;\n-   #77 = Class              #117          // java/lang/CloneNotSupportedException\n-   #78 = Utf8               SourceFile\n-   #79 = Utf8               CodeException.java\n-   #80 = NameAndType        #60:#57       // getStartPC:()I\n-   #81 = NameAndType        #58:#57       // getEndPC:()I\n-   #82 = NameAndType        #59:#57       // getHandlerPC:()I\n-   #83 = NameAndType        #56:#57       // getCatchType:()I\n-   #84 = NameAndType        #44:#51       // \"<init>\":(IIII)V\n-   #85 = Class              #125          // java/io/DataInput\n-   #86 = NameAndType        #126:#57      // readUnsignedShort:()I\n-   #87 = NameAndType        #44:#127      // \"<init>\":()V\n-   #88 = NameAndType        #39:#40       // start_pc:I\n-   #89 = NameAndType        #41:#40       // end_pc:I\n-   #90 = NameAndType        #42:#40       // handler_pc:I\n-   #91 = NameAndType        #43:#40       // catch_type:I\n-   #92 = Class              #128          // org/apache/bcel/classfile/Visitor\n-   #93 = NameAndType        #129:#45      // visitCodeException:(Lorg/apache/bcel/classfile/CodeException;)V\n-   #94 = Class              #130          // java/io/DataOutputStream\n-   #95 = NameAndType        #131:#62      // writeShort:(I)V\n-   #96 = Utf8               java/lang/StringBuilder\n-   #97 = Utf8               CodeException(start_pc =\n-   #98 = NameAndType        #132:#133     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #99 = NameAndType        #132:#134     // append:(I)Ljava/lang/StringBuilder;\n-  #100 = Utf8               , end_pc =\n-  #101 = Utf8               , handler_pc =\n-  #102 = Utf8               , catch_type =\n-  #103 = Utf8               )\n-  #104 = NameAndType        #66:#67       // toString:()Ljava/lang/String;\n-  #105 = Utf8               <Any exception>(0)\n-  #106 = Utf8               org/apache/bcel/Const\n-  #107 = Class              #123          // org/apache/bcel/classfile/ConstantPool\n-  #108 = NameAndType        #135:#136     // getConstantString:(IB)Ljava/lang/String;\n-  #109 = Class              #137          // org/apache/bcel/classfile/Utility\n-  #110 = NameAndType        #138:#139     // compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n-  #111 = Utf8               (\n-  #112 = Utf8\n-  #113 = Utf8               \\t\n-  #114 = NameAndType        #66:#68       // toString:(Lorg/apache/bcel/classfile/ConstantPool;Z)Ljava/lang/String;\n-  #115 = NameAndType        #140:#141     // clone:()Ljava/lang/Object;\n-  #116 = Utf8               org/apache/bcel/classfile/CodeException\n-  #117 = Utf8               java/lang/CloneNotSupportedException\n-  #118 = Utf8               java/lang/Object\n-  #119 = Utf8               java/lang/Cloneable\n-  #120 = Utf8               org/apache/bcel/classfile/Node\n-  #121 = Utf8               org/apache/bcel/Constants\n-  #122 = Utf8               java/io/IOException\n-  #123 = Utf8               org/apache/bcel/classfile/ConstantPool\n-  #124 = Utf8               java/lang/String\n-  #125 = Utf8               java/io/DataInput\n-  #126 = Utf8               readUnsignedShort\n-  #127 = Utf8               ()V\n-  #128 = Utf8               org/apache/bcel/classfile/Visitor\n-  #129 = Utf8               visitCodeException\n-  #130 = Utf8               java/io/DataOutputStream\n-  #131 = Utf8               writeShort\n-  #132 = Utf8               append\n-  #133 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #134 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #135 = Utf8               getConstantString\n-  #136 = Utf8               (IB)Ljava/lang/String;\n-  #137 = Utf8               org/apache/bcel/classfile/Utility\n-  #138 = Utf8               compactClassName\n-  #139 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n-  #140 = Utf8               clone\n-  #141 = Utf8               ()Ljava/lang/Object;\n+   #70 = Class              #119          // org/apache/bcel/classfile/ConstantPool\n+   #71 = Class              #120          // java/lang/String\n+   #72 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)Ljava/lang/String;\n+   #73 = Utf8               copy\n+   #74 = Utf8               ()Lorg/apache/bcel/classfile/CodeException;\n+   #75 = Utf8               SourceFile\n+   #76 = Utf8               CodeException.java\n+   #77 = NameAndType        #60:#57       // getStartPC:()I\n+   #78 = NameAndType        #58:#57       // getEndPC:()I\n+   #79 = NameAndType        #59:#57       // getHandlerPC:()I\n+   #80 = NameAndType        #56:#57       // getCatchType:()I\n+   #81 = NameAndType        #44:#51       // \"<init>\":(IIII)V\n+   #82 = Class              #121          // java/io/DataInput\n+   #83 = NameAndType        #122:#57      // readUnsignedShort:()I\n+   #84 = NameAndType        #44:#123      // \"<init>\":()V\n+   #85 = NameAndType        #39:#40       // start_pc:I\n+   #86 = NameAndType        #41:#40       // end_pc:I\n+   #87 = NameAndType        #42:#40       // handler_pc:I\n+   #88 = NameAndType        #43:#40       // catch_type:I\n+   #89 = Class              #124          // org/apache/bcel/classfile/Visitor\n+   #90 = NameAndType        #125:#45      // visitCodeException:(Lorg/apache/bcel/classfile/CodeException;)V\n+   #91 = Class              #126          // java/io/DataOutputStream\n+   #92 = NameAndType        #127:#62      // writeShort:(I)V\n+   #93 = Utf8               java/lang/StringBuilder\n+   #94 = Utf8               CodeException(start_pc =\n+   #95 = NameAndType        #128:#129     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #96 = NameAndType        #128:#130     // append:(I)Ljava/lang/StringBuilder;\n+   #97 = Utf8               , end_pc =\n+   #98 = Utf8               , handler_pc =\n+   #99 = Utf8               , catch_type =\n+  #100 = Utf8               )\n+  #101 = NameAndType        #66:#67       // toString:()Ljava/lang/String;\n+  #102 = Utf8               <Any exception>(0)\n+  #103 = Utf8               org/apache/bcel/Const\n+  #104 = NameAndType        #131:#132     // getConstantString:(IB)Ljava/lang/String;\n+  #105 = Class              #133          // org/apache/bcel/classfile/Utility\n+  #106 = NameAndType        #134:#135     // compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n+  #107 = Utf8               (\n+  #108 = Utf8\n+  #109 = Utf8               \\t\n+  #110 = NameAndType        #66:#68       // toString:(Lorg/apache/bcel/classfile/ConstantPool;Z)Ljava/lang/String;\n+  #111 = NameAndType        #136:#137     // clone:()Ljava/lang/Object;\n+  #112 = Utf8               org/apache/bcel/classfile/CodeException\n+  #113 = Utf8               java/lang/CloneNotSupportedException\n+  #114 = Utf8               java/lang/Object\n+  #115 = Utf8               java/lang/Cloneable\n+  #116 = Utf8               org/apache/bcel/classfile/Node\n+  #117 = Utf8               org/apache/bcel/Constants\n+  #118 = Utf8               java/io/IOException\n+  #119 = Utf8               org/apache/bcel/classfile/ConstantPool\n+  #120 = Utf8               java/lang/String\n+  #121 = Utf8               java/io/DataInput\n+  #122 = Utf8               readUnsignedShort\n+  #123 = Utf8               ()V\n+  #124 = Utf8               org/apache/bcel/classfile/Visitor\n+  #125 = Utf8               visitCodeException\n+  #126 = Utf8               java/io/DataOutputStream\n+  #127 = Utf8               writeShort\n+  #128 = Utf8               append\n+  #129 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #130 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #131 = Utf8               getConstantString\n+  #132 = Utf8               (IB)Ljava/lang/String;\n+  #133 = Utf8               org/apache/bcel/classfile/Utility\n+  #134 = Utf8               compactClassName\n+  #135 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n+  #136 = Utf8               clone\n+  #137 = Utf8               ()Ljava/lang/Object;\n {\n   private int start_pc;\n     descriptor: I\n     flags: (0x0002) ACC_PRIVATE\n \n   private int end_pc;\n     descriptor: I\n@@ -475,14 +471,15 @@\n        124: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        127: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        130: areturn\n       LineNumberTable:\n         line 191: 0\n         line 192: 7\n         line 194: 13\n+        line 195: 37\n         line 197: 80\n       StackMapTable: number_of_entries = 4\n         frame_type = 13 /* same */\n         frame_type = 121 /* same_locals_1_stack_item */\n           stack = [ class java/lang/StringBuilder ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 1\n"}]}
