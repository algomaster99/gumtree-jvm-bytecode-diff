{"diffoscope-json-version": 1, "source1": "first/CPFloat.class", "source2": "second/CPFloat.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,120 +1,120 @@\n-  SHA-256 checksum 4fdaef54ed829fdbbf40a30050060a5dddff50ee3abe1f9899a39cc694487899\n+  SHA-256 checksum 7ffe68c58e3e70062c78fe815a315f3180c0f279ce7786b6dfe05a9045c449f6\n   Compiled from \"CPFloat.java\"\n public class org.apache.commons.compress.harmony.unpack200.bytecode.CPFloat extends org.apache.commons.compress.harmony.unpack200.bytecode.CPConstantNumber\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #13                         // org/apache/commons/compress/harmony/unpack200/bytecode/CPFloat\n-  super_class: #14                        // org/apache/commons/compress/harmony/unpack200/bytecode/CPConstantNumber\n+  this_class: #10                         // org/apache/commons/compress/harmony/unpack200/bytecode/CPFloat\n+  super_class: #4                         // org/apache/commons/compress/harmony/unpack200/bytecode/CPConstantNumber\n   interfaces: 0, fields: 0, methods: 3, attributes: 1\n Constant pool:\n-   #1 = Class              #27            // org/apache/commons/compress/harmony/unpack200/bytecode/ConstantPoolEntry\n-   #2 = Methodref          #14.#28        // org/apache/commons/compress/harmony/unpack200/bytecode/CPConstantNumber.\"<init>\":(BLjava/lang/Object;I)V\n-   #3 = Methodref          #13.#29        // org/apache/commons/compress/harmony/unpack200/bytecode/CPFloat.getNumber:()Ljava/lang/Number;\n-   #4 = Methodref          #30.#31        // java/lang/Number.floatValue:()F\n-   #5 = Methodref          #32.#33        // java/io/DataOutputStream.writeFloat:(F)V\n-   #6 = Class              #34            // java/lang/StringBuilder\n-   #7 = Methodref          #6.#35         // java/lang/StringBuilder.\"<init>\":()V\n-   #8 = String             #36            // Float:\n-   #9 = Methodref          #6.#37         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #10 = Methodref          #13.#38        // org/apache/commons/compress/harmony/unpack200/bytecode/CPFloat.getValue:()Ljava/lang/Object;\n-  #11 = Methodref          #6.#39         // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #12 = Methodref          #6.#40         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #13 = Class              #41            // org/apache/commons/compress/harmony/unpack200/bytecode/CPFloat\n-  #14 = Class              #42            // org/apache/commons/compress/harmony/unpack200/bytecode/CPConstantNumber\n-  #15 = Utf8               <init>\n-  #16 = Utf8               (Ljava/lang/Float;I)V\n-  #17 = Utf8               Code\n-  #18 = Utf8               LineNumberTable\n-  #19 = Utf8               writeBody\n-  #20 = Utf8               (Ljava/io/DataOutputStream;)V\n-  #21 = Utf8               Exceptions\n-  #22 = Class              #43            // java/io/IOException\n-  #23 = Utf8               toString\n-  #24 = Utf8               ()Ljava/lang/String;\n-  #25 = Utf8               SourceFile\n-  #26 = Utf8               CPFloat.java\n-  #27 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ConstantPoolEntry\n-  #28 = NameAndType        #15:#44        // \"<init>\":(BLjava/lang/Object;I)V\n-  #29 = NameAndType        #45:#46        // getNumber:()Ljava/lang/Number;\n-  #30 = Class              #47            // java/lang/Number\n-  #31 = NameAndType        #48:#49        // floatValue:()F\n-  #32 = Class              #50            // java/io/DataOutputStream\n-  #33 = NameAndType        #51:#52        // writeFloat:(F)V\n-  #34 = Utf8               java/lang/StringBuilder\n-  #35 = NameAndType        #15:#53        // \"<init>\":()V\n-  #36 = Utf8               Float:\n-  #37 = NameAndType        #54:#55        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #38 = NameAndType        #56:#57        // getValue:()Ljava/lang/Object;\n-  #39 = NameAndType        #54:#58        // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #40 = NameAndType        #23:#24        // toString:()Ljava/lang/String;\n-  #41 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/CPFloat\n-  #42 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/CPConstantNumber\n-  #43 = Utf8               java/io/IOException\n-  #44 = Utf8               (BLjava/lang/Object;I)V\n-  #45 = Utf8               getNumber\n-  #46 = Utf8               ()Ljava/lang/Number;\n-  #47 = Utf8               java/lang/Number\n-  #48 = Utf8               floatValue\n-  #49 = Utf8               ()F\n-  #50 = Utf8               java/io/DataOutputStream\n-  #51 = Utf8               writeFloat\n-  #52 = Utf8               (F)V\n-  #53 = Utf8               ()V\n-  #54 = Utf8               append\n-  #55 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #56 = Utf8               getValue\n-  #57 = Utf8               ()Ljava/lang/Object;\n-  #58 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #1 = Class              #2             // org/apache/commons/compress/harmony/unpack200/bytecode/ConstantPoolEntry\n+   #2 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ConstantPoolEntry\n+   #3 = Methodref          #4.#5          // org/apache/commons/compress/harmony/unpack200/bytecode/CPConstantNumber.\"<init>\":(BLjava/lang/Object;I)V\n+   #4 = Class              #6             // org/apache/commons/compress/harmony/unpack200/bytecode/CPConstantNumber\n+   #5 = NameAndType        #7:#8          // \"<init>\":(BLjava/lang/Object;I)V\n+   #6 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/CPConstantNumber\n+   #7 = Utf8               <init>\n+   #8 = Utf8               (BLjava/lang/Object;I)V\n+   #9 = Methodref          #10.#11        // org/apache/commons/compress/harmony/unpack200/bytecode/CPFloat.getNumber:()Ljava/lang/Number;\n+  #10 = Class              #12            // org/apache/commons/compress/harmony/unpack200/bytecode/CPFloat\n+  #11 = NameAndType        #13:#14        // getNumber:()Ljava/lang/Number;\n+  #12 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/CPFloat\n+  #13 = Utf8               getNumber\n+  #14 = Utf8               ()Ljava/lang/Number;\n+  #15 = Methodref          #16.#17        // java/lang/Number.floatValue:()F\n+  #16 = Class              #18            // java/lang/Number\n+  #17 = NameAndType        #19:#20        // floatValue:()F\n+  #18 = Utf8               java/lang/Number\n+  #19 = Utf8               floatValue\n+  #20 = Utf8               ()F\n+  #21 = Methodref          #22.#23        // java/io/DataOutputStream.writeFloat:(F)V\n+  #22 = Class              #24            // java/io/DataOutputStream\n+  #23 = NameAndType        #25:#26        // writeFloat:(F)V\n+  #24 = Utf8               java/io/DataOutputStream\n+  #25 = Utf8               writeFloat\n+  #26 = Utf8               (F)V\n+  #27 = Class              #28            // java/lang/StringBuilder\n+  #28 = Utf8               java/lang/StringBuilder\n+  #29 = Methodref          #27.#30        // java/lang/StringBuilder.\"<init>\":()V\n+  #30 = NameAndType        #7:#31         // \"<init>\":()V\n+  #31 = Utf8               ()V\n+  #32 = String             #33            // Float:\n+  #33 = Utf8               Float:\n+  #34 = Methodref          #27.#35        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #35 = NameAndType        #36:#37        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #36 = Utf8               append\n+  #37 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #38 = Methodref          #10.#39        // org/apache/commons/compress/harmony/unpack200/bytecode/CPFloat.getValue:()Ljava/lang/Object;\n+  #39 = NameAndType        #40:#41        // getValue:()Ljava/lang/Object;\n+  #40 = Utf8               getValue\n+  #41 = Utf8               ()Ljava/lang/Object;\n+  #42 = Methodref          #27.#43        // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #43 = NameAndType        #36:#44        // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #44 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #45 = Methodref          #27.#46        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #46 = NameAndType        #47:#48        // toString:()Ljava/lang/String;\n+  #47 = Utf8               toString\n+  #48 = Utf8               ()Ljava/lang/String;\n+  #49 = Utf8               (Ljava/lang/Float;I)V\n+  #50 = Utf8               Code\n+  #51 = Utf8               LineNumberTable\n+  #52 = Utf8               writeBody\n+  #53 = Utf8               (Ljava/io/DataOutputStream;)V\n+  #54 = Utf8               Exceptions\n+  #55 = Class              #56            // java/io/IOException\n+  #56 = Utf8               java/io/IOException\n+  #57 = Utf8               SourceFile\n+  #58 = Utf8               CPFloat.java\n {\n   public org.apache.commons.compress.harmony.unpack200.bytecode.CPFloat(java.lang.Float, int);\n     descriptor: (Ljava/lang/Float;I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: iconst_4\n          2: aload_1\n          3: iload_2\n-         4: invokespecial #2                  // Method org/apache/commons/compress/harmony/unpack200/bytecode/CPConstantNumber.\"<init>\":(BLjava/lang/Object;I)V\n+         4: invokespecial #3                  // Method org/apache/commons/compress/harmony/unpack200/bytecode/CPConstantNumber.\"<init>\":(BLjava/lang/Object;I)V\n          7: return\n       LineNumberTable:\n         line 28: 0\n         line 29: 7\n \n   protected void writeBody(java.io.DataOutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/DataOutputStream;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: invokevirtual #3                  // Method getNumber:()Ljava/lang/Number;\n-         5: invokevirtual #4                  // Method java/lang/Number.floatValue:()F\n-         8: invokevirtual #5                  // Method java/io/DataOutputStream.writeFloat:(F)V\n+         2: invokevirtual #9                  // Method getNumber:()Ljava/lang/Number;\n+         5: invokevirtual #15                 // Method java/lang/Number.floatValue:()F\n+         8: invokevirtual #21                 // Method java/io/DataOutputStream.writeFloat:(F)V\n         11: return\n       LineNumberTable:\n         line 33: 0\n         line 34: 11\n     Exceptions:\n       throws java.io.IOException\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: new           #6                  // class java/lang/StringBuilder\n+         0: new           #27                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #7                  // Method java/lang/StringBuilder.\"<init>\":()V\n-         7: ldc           #8                  // String Float:\n-         9: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+         4: invokespecial #29                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         7: ldc           #32                 // String Float:\n+         9: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         12: aload_0\n-        13: invokevirtual #10                 // Method getValue:()Ljava/lang/Object;\n-        16: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        19: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        13: invokevirtual #38                 // Method getValue:()Ljava/lang/Object;\n+        16: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        19: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         22: areturn\n       LineNumberTable:\n         line 38: 0\n }\n SourceFile: \"CPFloat.java\"\n"}]}
