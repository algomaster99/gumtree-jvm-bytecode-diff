{"diffoscope-json-version": 1, "source1": "first/ExceptionTableEntry.class", "source2": "second/ExceptionTableEntry.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,107 +1,107 @@\n-  SHA-256 checksum ff088d3936ffb705c75924fda5267a99cf531eeac8d7d14ed21cabe1ae78f944\n+  SHA-256 checksum 18e48c568597739bfb125be00034856582f0ac6799686ca05f66efb893ffd714\n   Compiled from \"ExceptionTableEntry.java\"\n public class org.apache.commons.compress.harmony.unpack200.bytecode.ExceptionTableEntry\n   minor version: 0\n   major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #16                         // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionTableEntry\n-  super_class: #17                        // java/lang/Object\n+  this_class: #8                          // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionTableEntry\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 8, methods: 5, attributes: 1\n Constant pool:\n-   #1 = Methodref          #17.#56        // java/lang/Object.\"<init>\":()V\n-   #2 = Fieldref           #16.#57        // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionTableEntry.startPC:I\n-   #3 = Fieldref           #16.#58        // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionTableEntry.endPC:I\n-   #4 = Fieldref           #16.#59        // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionTableEntry.handlerPC:I\n-   #5 = Fieldref           #16.#60        // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionTableEntry.catchType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n-   #6 = Fieldref           #16.#61        // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionTableEntry.startPcRenumbered:I\n-   #7 = Methodref          #62.#63        // java/io/DataOutputStream.writeShort:(I)V\n-   #8 = Fieldref           #16.#64        // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionTableEntry.endPcRenumbered:I\n-   #9 = Fieldref           #16.#65        // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionTableEntry.handlerPcRenumbered:I\n-  #10 = Fieldref           #16.#66        // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionTableEntry.catchTypeIndex:I\n-  #11 = InterfaceMethodref #67.#68        // java/util/List.get:(I)Ljava/lang/Object;\n-  #12 = Class              #69            // java/lang/Integer\n-  #13 = Methodref          #12.#70        // java/lang/Integer.intValue:()I\n-  #14 = Methodref          #71.#72        // org/apache/commons/compress/harmony/unpack200/bytecode/CPClass.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n-  #15 = Methodref          #73.#74        // org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n-  #16 = Class              #75            // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionTableEntry\n-  #17 = Class              #76            // java/lang/Object\n-  #18 = Utf8               startPC\n-  #19 = Utf8               I\n-  #20 = Utf8               endPC\n-  #21 = Utf8               handlerPC\n-  #22 = Utf8               catchType\n-  #23 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n-  #24 = Utf8               startPcRenumbered\n-  #25 = Utf8               endPcRenumbered\n-  #26 = Utf8               handlerPcRenumbered\n-  #27 = Utf8               catchTypeIndex\n-  #28 = Utf8               <init>\n-  #29 = Utf8               (IIILorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;)V\n-  #30 = Utf8               Code\n-  #31 = Utf8               LineNumberTable\n-  #32 = Utf8               LocalVariableTable\n-  #33 = Utf8               this\n-  #34 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/ExceptionTableEntry;\n-  #35 = Utf8               write\n-  #36 = Utf8               (Ljava/io/DataOutputStream;)V\n-  #37 = Utf8               dos\n-  #38 = Utf8               Ljava/io/DataOutputStream;\n-  #39 = Utf8               Exceptions\n-  #40 = Class              #77            // java/io/IOException\n-  #41 = Utf8               renumber\n-  #42 = Utf8               (Ljava/util/List;)V\n-  #43 = Utf8               byteCodeOffsets\n-  #44 = Utf8               Ljava/util/List;\n-  #45 = Utf8               endPcIndex\n-  #46 = Utf8               handlerPcIndex\n-  #47 = Utf8               getCatchType\n-  #48 = Utf8               ()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n-  #49 = Utf8               resolve\n-  #50 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n-  #51 = Utf8               pool\n-  #52 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;\n-  #53 = Utf8               StackMapTable\n-  #54 = Utf8               SourceFile\n-  #55 = Utf8               ExceptionTableEntry.java\n-  #56 = NameAndType        #28:#78        // \"<init>\":()V\n-  #57 = NameAndType        #18:#19        // startPC:I\n-  #58 = NameAndType        #20:#19        // endPC:I\n-  #59 = NameAndType        #21:#19        // handlerPC:I\n-  #60 = NameAndType        #22:#23        // catchType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n-  #61 = NameAndType        #24:#19        // startPcRenumbered:I\n-  #62 = Class              #79            // java/io/DataOutputStream\n-  #63 = NameAndType        #80:#81        // writeShort:(I)V\n-  #64 = NameAndType        #25:#19        // endPcRenumbered:I\n-  #65 = NameAndType        #26:#19        // handlerPcRenumbered:I\n-  #66 = NameAndType        #27:#19        // catchTypeIndex:I\n-  #67 = Class              #82            // java/util/List\n-  #68 = NameAndType        #83:#84        // get:(I)Ljava/lang/Object;\n-  #69 = Utf8               java/lang/Integer\n-  #70 = NameAndType        #85:#86        // intValue:()I\n-  #71 = Class              #87            // org/apache/commons/compress/harmony/unpack200/bytecode/CPClass\n-  #72 = NameAndType        #49:#50        // resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n-  #73 = Class              #88            // org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool\n-  #74 = NameAndType        #89:#90        // indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n-  #75 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionTableEntry\n-  #76 = Utf8               java/lang/Object\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Fieldref           #8.#9          // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionTableEntry.startPC:I\n+   #8 = Class              #10            // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionTableEntry\n+   #9 = NameAndType        #11:#12        // startPC:I\n+  #10 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionTableEntry\n+  #11 = Utf8               startPC\n+  #12 = Utf8               I\n+  #13 = Fieldref           #8.#14         // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionTableEntry.endPC:I\n+  #14 = NameAndType        #15:#12        // endPC:I\n+  #15 = Utf8               endPC\n+  #16 = Fieldref           #8.#17         // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionTableEntry.handlerPC:I\n+  #17 = NameAndType        #18:#12        // handlerPC:I\n+  #18 = Utf8               handlerPC\n+  #19 = Fieldref           #8.#20         // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionTableEntry.catchType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+  #20 = NameAndType        #21:#22        // catchType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+  #21 = Utf8               catchType\n+  #22 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+  #23 = Fieldref           #8.#24         // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionTableEntry.startPcRenumbered:I\n+  #24 = NameAndType        #25:#12        // startPcRenumbered:I\n+  #25 = Utf8               startPcRenumbered\n+  #26 = Methodref          #27.#28        // java/io/DataOutputStream.writeShort:(I)V\n+  #27 = Class              #29            // java/io/DataOutputStream\n+  #28 = NameAndType        #30:#31        // writeShort:(I)V\n+  #29 = Utf8               java/io/DataOutputStream\n+  #30 = Utf8               writeShort\n+  #31 = Utf8               (I)V\n+  #32 = Fieldref           #8.#33         // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionTableEntry.endPcRenumbered:I\n+  #33 = NameAndType        #34:#12        // endPcRenumbered:I\n+  #34 = Utf8               endPcRenumbered\n+  #35 = Fieldref           #8.#36         // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionTableEntry.handlerPcRenumbered:I\n+  #36 = NameAndType        #37:#12        // handlerPcRenumbered:I\n+  #37 = Utf8               handlerPcRenumbered\n+  #38 = Fieldref           #8.#39         // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionTableEntry.catchTypeIndex:I\n+  #39 = NameAndType        #40:#12        // catchTypeIndex:I\n+  #40 = Utf8               catchTypeIndex\n+  #41 = InterfaceMethodref #42.#43        // java/util/List.get:(I)Ljava/lang/Object;\n+  #42 = Class              #44            // java/util/List\n+  #43 = NameAndType        #45:#46        // get:(I)Ljava/lang/Object;\n+  #44 = Utf8               java/util/List\n+  #45 = Utf8               get\n+  #46 = Utf8               (I)Ljava/lang/Object;\n+  #47 = Class              #48            // java/lang/Integer\n+  #48 = Utf8               java/lang/Integer\n+  #49 = Methodref          #47.#50        // java/lang/Integer.intValue:()I\n+  #50 = NameAndType        #51:#52        // intValue:()I\n+  #51 = Utf8               intValue\n+  #52 = Utf8               ()I\n+  #53 = Methodref          #54.#55        // org/apache/commons/compress/harmony/unpack200/bytecode/CPClass.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+  #54 = Class              #56            // org/apache/commons/compress/harmony/unpack200/bytecode/CPClass\n+  #55 = NameAndType        #57:#58        // resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+  #56 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/CPClass\n+  #57 = Utf8               resolve\n+  #58 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+  #59 = Methodref          #60.#61        // org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n+  #60 = Class              #62            // org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool\n+  #61 = NameAndType        #63:#64        // indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n+  #62 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool\n+  #63 = Utf8               indexOf\n+  #64 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n+  #65 = Utf8               (IIILorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;)V\n+  #66 = Utf8               Code\n+  #67 = Utf8               LineNumberTable\n+  #68 = Utf8               LocalVariableTable\n+  #69 = Utf8               this\n+  #70 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/ExceptionTableEntry;\n+  #71 = Utf8               write\n+  #72 = Utf8               (Ljava/io/DataOutputStream;)V\n+  #73 = Utf8               dos\n+  #74 = Utf8               Ljava/io/DataOutputStream;\n+  #75 = Utf8               Exceptions\n+  #76 = Class              #77            // java/io/IOException\n   #77 = Utf8               java/io/IOException\n-  #78 = Utf8               ()V\n-  #79 = Utf8               java/io/DataOutputStream\n-  #80 = Utf8               writeShort\n-  #81 = Utf8               (I)V\n-  #82 = Utf8               java/util/List\n-  #83 = Utf8               get\n-  #84 = Utf8               (I)Ljava/lang/Object;\n-  #85 = Utf8               intValue\n-  #86 = Utf8               ()I\n-  #87 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/CPClass\n-  #88 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool\n-  #89 = Utf8               indexOf\n-  #90 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n+  #78 = Utf8               renumber\n+  #79 = Utf8               (Ljava/util/List;)V\n+  #80 = Utf8               byteCodeOffsets\n+  #81 = Utf8               Ljava/util/List;\n+  #82 = Utf8               endPcIndex\n+  #83 = Utf8               handlerPcIndex\n+  #84 = Utf8               getCatchType\n+  #85 = Utf8               ()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+  #86 = Utf8               pool\n+  #87 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;\n+  #88 = Utf8               StackMapTable\n+  #89 = Utf8               SourceFile\n+  #90 = Utf8               ExceptionTableEntry.java\n {\n   private final int startPC;\n     descriptor: I\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final int endPC;\n     descriptor: I\n@@ -136,24 +136,24 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=5, args_size=5\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iload_1\n-         6: putfield      #2                  // Field startPC:I\n+         6: putfield      #7                  // Field startPC:I\n          9: aload_0\n         10: iload_2\n-        11: putfield      #3                  // Field endPC:I\n+        11: putfield      #13                 // Field endPC:I\n         14: aload_0\n         15: iload_3\n-        16: putfield      #4                  // Field handlerPC:I\n+        16: putfield      #16                 // Field handlerPC:I\n         19: aload_0\n         20: aload         4\n-        22: putfield      #5                  // Field catchType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        22: putfield      #19                 // Field catchType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         25: return\n       LineNumberTable:\n         line 50: 0\n         line 51: 4\n         line 52: 9\n         line 53: 14\n         line 54: 19\n@@ -169,28 +169,28 @@\n   public void write(java.io.DataOutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/DataOutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: getfield      #6                  // Field startPcRenumbered:I\n-         5: invokevirtual #7                  // Method java/io/DataOutputStream.writeShort:(I)V\n+         2: getfield      #23                 // Field startPcRenumbered:I\n+         5: invokevirtual #26                 // Method java/io/DataOutputStream.writeShort:(I)V\n          8: aload_1\n          9: aload_0\n-        10: getfield      #8                  // Field endPcRenumbered:I\n-        13: invokevirtual #7                  // Method java/io/DataOutputStream.writeShort:(I)V\n+        10: getfield      #32                 // Field endPcRenumbered:I\n+        13: invokevirtual #26                 // Method java/io/DataOutputStream.writeShort:(I)V\n         16: aload_1\n         17: aload_0\n-        18: getfield      #9                  // Field handlerPcRenumbered:I\n-        21: invokevirtual #7                  // Method java/io/DataOutputStream.writeShort:(I)V\n+        18: getfield      #35                 // Field handlerPcRenumbered:I\n+        21: invokevirtual #26                 // Method java/io/DataOutputStream.writeShort:(I)V\n         24: aload_1\n         25: aload_0\n-        26: getfield      #10                 // Field catchTypeIndex:I\n-        29: invokevirtual #7                  // Method java/io/DataOutputStream.writeShort:(I)V\n+        26: getfield      #38                 // Field catchTypeIndex:I\n+        29: invokevirtual #26                 // Method java/io/DataOutputStream.writeShort:(I)V\n         32: return\n       LineNumberTable:\n         line 58: 0\n         line 59: 8\n         line 60: 16\n         line 61: 24\n         line 62: 32\n@@ -205,44 +205,44 @@\n     descriptor: (Ljava/util/List;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=4, args_size=2\n          0: aload_0\n          1: aload_1\n          2: aload_0\n-         3: getfield      #2                  // Field startPC:I\n-         6: invokeinterface #11,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n-        11: checkcast     #12                 // class java/lang/Integer\n-        14: invokevirtual #13                 // Method java/lang/Integer.intValue:()I\n-        17: putfield      #6                  // Field startPcRenumbered:I\n+         3: getfield      #7                  // Field startPC:I\n+         6: invokeinterface #41,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n+        11: checkcast     #47                 // class java/lang/Integer\n+        14: invokevirtual #49                 // Method java/lang/Integer.intValue:()I\n+        17: putfield      #23                 // Field startPcRenumbered:I\n         20: aload_0\n-        21: getfield      #2                  // Field startPC:I\n+        21: getfield      #7                  // Field startPC:I\n         24: aload_0\n-        25: getfield      #3                  // Field endPC:I\n+        25: getfield      #13                 // Field endPC:I\n         28: iadd\n         29: istore_2\n         30: aload_0\n         31: aload_1\n         32: iload_2\n-        33: invokeinterface #11,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n-        38: checkcast     #12                 // class java/lang/Integer\n-        41: invokevirtual #13                 // Method java/lang/Integer.intValue:()I\n-        44: putfield      #8                  // Field endPcRenumbered:I\n+        33: invokeinterface #41,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n+        38: checkcast     #47                 // class java/lang/Integer\n+        41: invokevirtual #49                 // Method java/lang/Integer.intValue:()I\n+        44: putfield      #32                 // Field endPcRenumbered:I\n         47: iload_2\n         48: aload_0\n-        49: getfield      #4                  // Field handlerPC:I\n+        49: getfield      #16                 // Field handlerPC:I\n         52: iadd\n         53: istore_3\n         54: aload_0\n         55: aload_1\n         56: iload_3\n-        57: invokeinterface #11,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n-        62: checkcast     #12                 // class java/lang/Integer\n-        65: invokevirtual #13                 // Method java/lang/Integer.intValue:()I\n-        68: putfield      #9                  // Field handlerPcRenumbered:I\n+        57: invokeinterface #41,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n+        62: checkcast     #47                 // class java/lang/Integer\n+        65: invokevirtual #49                 // Method java/lang/Integer.intValue:()I\n+        68: putfield      #35                 // Field handlerPcRenumbered:I\n         71: return\n       LineNumberTable:\n         line 65: 0\n         line 66: 20\n         line 67: 30\n         line 68: 47\n         line 69: 54\n@@ -256,44 +256,44 @@\n \n   public org.apache.commons.compress.harmony.unpack200.bytecode.CPClass getCatchType();\n     descriptor: ()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field catchType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+         1: getfield      #19                 // Field catchType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n          4: areturn\n       LineNumberTable:\n         line 73: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/harmony/unpack200/bytecode/ExceptionTableEntry;\n \n   public void resolve(org.apache.commons.compress.harmony.unpack200.bytecode.ClassConstantPool);\n     descriptor: (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #5                  // Field catchType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+         1: getfield      #19                 // Field catchType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n          4: ifnonnull     13\n          7: aload_0\n          8: iconst_0\n-         9: putfield      #10                 // Field catchTypeIndex:I\n+         9: putfield      #38                 // Field catchTypeIndex:I\n         12: return\n         13: aload_0\n-        14: getfield      #5                  // Field catchType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        14: getfield      #19                 // Field catchType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         17: aload_1\n-        18: invokevirtual #14                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/CPClass.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+        18: invokevirtual #53                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/CPClass.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n         21: aload_0\n         22: aload_1\n         23: aload_0\n-        24: getfield      #5                  // Field catchType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n-        27: invokevirtual #15                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n-        30: putfield      #10                 // Field catchTypeIndex:I\n+        24: getfield      #19                 // Field catchType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        27: invokevirtual #59                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n+        30: putfield      #38                 // Field catchTypeIndex:I\n         33: return\n       LineNumberTable:\n         line 77: 0\n         line 80: 7\n         line 81: 12\n         line 83: 13\n         line 84: 21\n"}]}
