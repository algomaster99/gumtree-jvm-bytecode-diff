{"diffoscope-json-version": 1, "source1": "first/TypeUtils.class", "source2": "second/TypeUtils.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -358,15 +358,15 @@\n         final Type[] typeArgs = parameterizedType.getActualTypeArguments();\n         final TypeVariable<?>[] typeVars = getRawType(parameterizedType).getTypeParameters();\n         final List<TypeVariable<Class<T>>> typeVarList = Arrays.asList(cls.getTypeParameters());\n         for (int i = 0; i < typeArgs.length; ++i) {\n             final TypeVariable<?> typeVar = typeVars[i];\n             final Type typeArg = typeArgs[i];\n             if (typeVarList.contains(typeArg) && typeVarAssigns.containsKey(typeVar)) {\n-                typeVarAssigns.put((TypeVariable)typeArg, typeVarAssigns.get((Object)typeVar));\n+                typeVarAssigns.put(typeArg, (Type)typeVarAssigns.get(typeVar));\n             }\n         }\n     }\n     \n     private static Type getClosestParentType(final Class<?> cls, final Class<?> superClass) {\n         if (superClass.isInterface()) {\n             final Type[] interfaceTypes = cls.getGenericInterfaces();\n"}]}
