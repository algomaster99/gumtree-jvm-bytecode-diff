{"diffoscope-json-version": 1, "source1": "first/NullInputStream.class", "source2": "second/NullInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,143 +1,143 @@\n-  SHA-256 checksum e3f960a06d954ca30046346a646ad953f0845dc4a7229e5182ef45f6665fb2c2\n+  SHA-256 checksum b8e351ca17f57cc716f3b9b068752300769e10f7b82cd8e5933e7aebaf74e4fe\n   Compiled from \"NullInputStream.java\"\n public class org.apache.commons.io.input.NullInputStream extends java.io.InputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #38                         // org/apache/commons/io/input/NullInputStream\n-  super_class: #39                        // java/io/InputStream\n+  this_class: #4                          // org/apache/commons/io/input/NullInputStream\n+  super_class: #10                        // java/io/InputStream\n   interfaces: 0, fields: 7, methods: 17, attributes: 1\n Constant pool:\n-    #1 = Class              #88           // org/apache/commons/io/IOUtils\n-    #2 = Methodref          #38.#89       // org/apache/commons/io/input/NullInputStream.\"<init>\":(JZZ)V\n-    #3 = Methodref          #39.#90       // java/io/InputStream.\"<init>\":()V\n-    #4 = Long               -1l\n-    #6 = Fieldref           #38.#91       // org/apache/commons/io/input/NullInputStream.mark:J\n-    #7 = Fieldref           #38.#92       // org/apache/commons/io/input/NullInputStream.size:J\n-    #8 = Fieldref           #38.#93       // org/apache/commons/io/input/NullInputStream.markSupported:Z\n-    #9 = Fieldref           #38.#94       // org/apache/commons/io/input/NullInputStream.throwEofException:Z\n-   #10 = Fieldref           #38.#95       // org/apache/commons/io/input/NullInputStream.position:J\n-   #11 = Class              #96           // java/lang/Integer\n-   #12 = Long               2147483647l\n-   #14 = Integer            2147483647\n-   #15 = Fieldref           #38.#97       // org/apache/commons/io/input/NullInputStream.eof:Z\n-   #16 = Methodref          #98.#99       // org/apache/commons/io/input/UnsupportedOperationExceptions.mark:()Ljava/lang/UnsupportedOperationException;\n-   #17 = Fieldref           #38.#100      // org/apache/commons/io/input/NullInputStream.readlimit:J\n-   #18 = Class              #101          // java/io/IOException\n-   #19 = String             #102          // Read after end of file\n-   #20 = Methodref          #18.#103      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #21 = Methodref          #38.#104      // org/apache/commons/io/input/NullInputStream.doEndOfFile:()I\n-   #22 = Methodref          #38.#105      // org/apache/commons/io/input/NullInputStream.processByte:()I\n-   #23 = Methodref          #38.#106      // org/apache/commons/io/input/NullInputStream.read:([BII)I\n-   #24 = Methodref          #38.#107      // org/apache/commons/io/input/NullInputStream.processBytes:([BII)V\n-   #25 = Methodref          #98.#108      // org/apache/commons/io/input/UnsupportedOperationExceptions.reset:()Ljava/lang/UnsupportedOperationException;\n-   #26 = String             #109          // No position has been marked\n-   #27 = Class              #110          // java/lang/StringBuilder\n-   #28 = Methodref          #27.#90       // java/lang/StringBuilder.\"<init>\":()V\n-   #29 = String             #111          // Marked position [\n-   #30 = Methodref          #27.#112      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #31 = Methodref          #27.#113      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-   #32 = String             #114          // ] is no longer valid - passed the read limit [\n-   #33 = String             #115          // ]\n-   #34 = Methodref          #27.#116      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #35 = String             #117          // Skip after end of file\n-   #36 = Class              #118          // java/io/EOFException\n-   #37 = Methodref          #36.#90       // java/io/EOFException.\"<init>\":()V\n-   #38 = Class              #119          // org/apache/commons/io/input/NullInputStream\n-   #39 = Class              #120          // java/io/InputStream\n-   #40 = Utf8               size\n-   #41 = Utf8               J\n-   #42 = Utf8               position\n-   #43 = Utf8               mark\n-   #44 = Utf8               readlimit\n-   #45 = Utf8               eof\n-   #46 = Utf8               Z\n-   #47 = Utf8               throwEofException\n-   #48 = Utf8               markSupported\n-   #49 = Utf8               <init>\n-   #50 = Utf8               ()V\n-   #51 = Utf8               Code\n-   #52 = Utf8               LineNumberTable\n-   #53 = Utf8               LocalVariableTable\n-   #54 = Utf8               this\n-   #55 = Utf8               Lorg/apache/commons/io/input/NullInputStream;\n-   #56 = Utf8               (J)V\n-   #57 = Utf8               (JZZ)V\n-   #58 = Utf8               getPosition\n-   #59 = Utf8               ()J\n-   #60 = Utf8               getSize\n-   #61 = Utf8               available\n-   #62 = Utf8               ()I\n-   #63 = Utf8               avail\n-   #64 = Utf8               StackMapTable\n-   #65 = Utf8               close\n-   #66 = Utf8               Exceptions\n-   #67 = Utf8               (I)V\n-   #68 = Utf8               I\n-   #69 = Utf8               ()Z\n-   #70 = Utf8               read\n-   #71 = Utf8               ([B)I\n-   #72 = Utf8               bytes\n-   #73 = Utf8               [B\n-   #74 = Utf8               ([BII)I\n-   #75 = Utf8               offset\n-   #76 = Utf8               length\n-   #77 = Utf8               returnLength\n-   #78 = Utf8               reset\n-   #79 = Utf8               skip\n-   #80 = Utf8               (J)J\n-   #81 = Utf8               numberOfBytes\n-   #82 = Utf8               processByte\n-   #83 = Utf8               processBytes\n-   #84 = Utf8               ([BII)V\n-   #85 = Utf8               doEndOfFile\n-   #86 = Utf8               SourceFile\n-   #87 = Utf8               NullInputStream.java\n-   #88 = Utf8               org/apache/commons/io/IOUtils\n-   #89 = NameAndType        #49:#57       // \"<init>\":(JZZ)V\n-   #90 = NameAndType        #49:#50       // \"<init>\":()V\n-   #91 = NameAndType        #43:#41       // mark:J\n-   #92 = NameAndType        #40:#41       // size:J\n-   #93 = NameAndType        #48:#46       // markSupported:Z\n-   #94 = NameAndType        #47:#46       // throwEofException:Z\n-   #95 = NameAndType        #42:#41       // position:J\n-   #96 = Utf8               java/lang/Integer\n-   #97 = NameAndType        #45:#46       // eof:Z\n-   #98 = Class              #121          // org/apache/commons/io/input/UnsupportedOperationExceptions\n-   #99 = NameAndType        #43:#122      // mark:()Ljava/lang/UnsupportedOperationException;\n-  #100 = NameAndType        #44:#41       // readlimit:J\n-  #101 = Utf8               java/io/IOException\n-  #102 = Utf8               Read after end of file\n-  #103 = NameAndType        #49:#123      // \"<init>\":(Ljava/lang/String;)V\n-  #104 = NameAndType        #85:#62       // doEndOfFile:()I\n-  #105 = NameAndType        #82:#62       // processByte:()I\n-  #106 = NameAndType        #70:#74       // read:([BII)I\n-  #107 = NameAndType        #83:#84       // processBytes:([BII)V\n-  #108 = NameAndType        #78:#122      // reset:()Ljava/lang/UnsupportedOperationException;\n-  #109 = Utf8               No position has been marked\n-  #110 = Utf8               java/lang/StringBuilder\n-  #111 = Utf8               Marked position [\n-  #112 = NameAndType        #124:#125     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #113 = NameAndType        #124:#126     // append:(J)Ljava/lang/StringBuilder;\n-  #114 = Utf8               ] is no longer valid - passed the read limit [\n-  #115 = Utf8               ]\n-  #116 = NameAndType        #127:#128     // toString:()Ljava/lang/String;\n-  #117 = Utf8               Skip after end of file\n-  #118 = Utf8               java/io/EOFException\n-  #119 = Utf8               org/apache/commons/io/input/NullInputStream\n-  #120 = Utf8               java/io/InputStream\n-  #121 = Utf8               org/apache/commons/io/input/UnsupportedOperationExceptions\n-  #122 = Utf8               ()Ljava/lang/UnsupportedOperationException;\n-  #123 = Utf8               (Ljava/lang/String;)V\n-  #124 = Utf8               append\n-  #125 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #126 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #127 = Utf8               toString\n-  #128 = Utf8               ()Ljava/lang/String;\n+    #1 = Class              #2            // org/apache/commons/io/IOUtils\n+    #2 = Utf8               org/apache/commons/io/IOUtils\n+    #3 = Methodref          #4.#5         // org/apache/commons/io/input/NullInputStream.\"<init>\":(JZZ)V\n+    #4 = Class              #6            // org/apache/commons/io/input/NullInputStream\n+    #5 = NameAndType        #7:#8         // \"<init>\":(JZZ)V\n+    #6 = Utf8               org/apache/commons/io/input/NullInputStream\n+    #7 = Utf8               <init>\n+    #8 = Utf8               (JZZ)V\n+    #9 = Methodref          #10.#11       // java/io/InputStream.\"<init>\":()V\n+   #10 = Class              #12           // java/io/InputStream\n+   #11 = NameAndType        #7:#13        // \"<init>\":()V\n+   #12 = Utf8               java/io/InputStream\n+   #13 = Utf8               ()V\n+   #14 = Long               -1l\n+   #16 = Fieldref           #4.#17        // org/apache/commons/io/input/NullInputStream.mark:J\n+   #17 = NameAndType        #18:#19       // mark:J\n+   #18 = Utf8               mark\n+   #19 = Utf8               J\n+   #20 = Fieldref           #4.#21        // org/apache/commons/io/input/NullInputStream.size:J\n+   #21 = NameAndType        #22:#19       // size:J\n+   #22 = Utf8               size\n+   #23 = Fieldref           #4.#24        // org/apache/commons/io/input/NullInputStream.markSupported:Z\n+   #24 = NameAndType        #25:#26       // markSupported:Z\n+   #25 = Utf8               markSupported\n+   #26 = Utf8               Z\n+   #27 = Fieldref           #4.#28        // org/apache/commons/io/input/NullInputStream.throwEofException:Z\n+   #28 = NameAndType        #29:#26       // throwEofException:Z\n+   #29 = Utf8               throwEofException\n+   #30 = Fieldref           #4.#31        // org/apache/commons/io/input/NullInputStream.position:J\n+   #31 = NameAndType        #32:#19       // position:J\n+   #32 = Utf8               position\n+   #33 = Class              #34           // java/lang/Integer\n+   #34 = Utf8               java/lang/Integer\n+   #35 = Long               2147483647l\n+   #37 = Integer            2147483647\n+   #38 = Fieldref           #4.#39        // org/apache/commons/io/input/NullInputStream.eof:Z\n+   #39 = NameAndType        #40:#26       // eof:Z\n+   #40 = Utf8               eof\n+   #41 = Methodref          #42.#43       // org/apache/commons/io/input/UnsupportedOperationExceptions.mark:()Ljava/lang/UnsupportedOperationException;\n+   #42 = Class              #44           // org/apache/commons/io/input/UnsupportedOperationExceptions\n+   #43 = NameAndType        #18:#45       // mark:()Ljava/lang/UnsupportedOperationException;\n+   #44 = Utf8               org/apache/commons/io/input/UnsupportedOperationExceptions\n+   #45 = Utf8               ()Ljava/lang/UnsupportedOperationException;\n+   #46 = Fieldref           #4.#47        // org/apache/commons/io/input/NullInputStream.readlimit:J\n+   #47 = NameAndType        #48:#19       // readlimit:J\n+   #48 = Utf8               readlimit\n+   #49 = Class              #50           // java/io/IOException\n+   #50 = Utf8               java/io/IOException\n+   #51 = String             #52           // Read after end of file\n+   #52 = Utf8               Read after end of file\n+   #53 = Methodref          #49.#54       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #54 = NameAndType        #7:#55        // \"<init>\":(Ljava/lang/String;)V\n+   #55 = Utf8               (Ljava/lang/String;)V\n+   #56 = Methodref          #4.#57        // org/apache/commons/io/input/NullInputStream.doEndOfFile:()I\n+   #57 = NameAndType        #58:#59       // doEndOfFile:()I\n+   #58 = Utf8               doEndOfFile\n+   #59 = Utf8               ()I\n+   #60 = Methodref          #4.#61        // org/apache/commons/io/input/NullInputStream.processByte:()I\n+   #61 = NameAndType        #62:#59       // processByte:()I\n+   #62 = Utf8               processByte\n+   #63 = Methodref          #4.#64        // org/apache/commons/io/input/NullInputStream.read:([BII)I\n+   #64 = NameAndType        #65:#66       // read:([BII)I\n+   #65 = Utf8               read\n+   #66 = Utf8               ([BII)I\n+   #67 = Methodref          #4.#68        // org/apache/commons/io/input/NullInputStream.processBytes:([BII)V\n+   #68 = NameAndType        #69:#70       // processBytes:([BII)V\n+   #69 = Utf8               processBytes\n+   #70 = Utf8               ([BII)V\n+   #71 = Methodref          #42.#72       // org/apache/commons/io/input/UnsupportedOperationExceptions.reset:()Ljava/lang/UnsupportedOperationException;\n+   #72 = NameAndType        #73:#45       // reset:()Ljava/lang/UnsupportedOperationException;\n+   #73 = Utf8               reset\n+   #74 = String             #75           // No position has been marked\n+   #75 = Utf8               No position has been marked\n+   #76 = Class              #77           // java/lang/StringBuilder\n+   #77 = Utf8               java/lang/StringBuilder\n+   #78 = Methodref          #76.#11       // java/lang/StringBuilder.\"<init>\":()V\n+   #79 = String             #80           // Marked position [\n+   #80 = Utf8               Marked position [\n+   #81 = Methodref          #76.#82       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #82 = NameAndType        #83:#84       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #83 = Utf8               append\n+   #84 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #85 = Methodref          #76.#86       // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+   #86 = NameAndType        #83:#87       // append:(J)Ljava/lang/StringBuilder;\n+   #87 = Utf8               (J)Ljava/lang/StringBuilder;\n+   #88 = String             #89           // ] is no longer valid - passed the read limit [\n+   #89 = Utf8               ] is no longer valid - passed the read limit [\n+   #90 = String             #91           // ]\n+   #91 = Utf8               ]\n+   #92 = Methodref          #76.#93       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #93 = NameAndType        #94:#95       // toString:()Ljava/lang/String;\n+   #94 = Utf8               toString\n+   #95 = Utf8               ()Ljava/lang/String;\n+   #96 = String             #97           // Skip after end of file\n+   #97 = Utf8               Skip after end of file\n+   #98 = Class              #99           // java/io/EOFException\n+   #99 = Utf8               java/io/EOFException\n+  #100 = Methodref          #98.#11       // java/io/EOFException.\"<init>\":()V\n+  #101 = Utf8               Code\n+  #102 = Utf8               LineNumberTable\n+  #103 = Utf8               LocalVariableTable\n+  #104 = Utf8               this\n+  #105 = Utf8               Lorg/apache/commons/io/input/NullInputStream;\n+  #106 = Utf8               (J)V\n+  #107 = Utf8               getPosition\n+  #108 = Utf8               ()J\n+  #109 = Utf8               getSize\n+  #110 = Utf8               available\n+  #111 = Utf8               avail\n+  #112 = Utf8               StackMapTable\n+  #113 = Utf8               close\n+  #114 = Utf8               Exceptions\n+  #115 = Utf8               (I)V\n+  #116 = Utf8               I\n+  #117 = Utf8               ()Z\n+  #118 = Utf8               ([B)I\n+  #119 = Utf8               bytes\n+  #120 = Utf8               [B\n+  #121 = Utf8               offset\n+  #122 = Utf8               length\n+  #123 = Utf8               returnLength\n+  #124 = Utf8               skip\n+  #125 = Utf8               (J)J\n+  #126 = Utf8               numberOfBytes\n+  #127 = Utf8               SourceFile\n+  #128 = Utf8               NullInputStream.java\n {\n   private final long size;\n     descriptor: J\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private long position;\n     descriptor: J\n@@ -168,15 +168,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n          1: lconst_0\n          2: iconst_1\n          3: iconst_0\n-         4: invokespecial #2                  // Method \"<init>\":(JZZ)V\n+         4: invokespecial #3                  // Method \"<init>\":(JZZ)V\n          7: return\n       LineNumberTable:\n         line 85: 0\n         line 86: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/input/NullInputStream;\n@@ -186,15 +186,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n          2: iconst_1\n          3: iconst_0\n-         4: invokespecial #2                  // Method \"<init>\":(JZZ)V\n+         4: invokespecial #3                  // Method \"<init>\":(JZZ)V\n          7: return\n       LineNumberTable:\n         line 95: 0\n         line 96: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/input/NullInputStream;\n@@ -202,27 +202,27 @@\n \n   public org.apache.commons.io.input.NullInputStream(long, boolean, boolean);\n     descriptor: (JZZ)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=5, args_size=4\n          0: aload_0\n-         1: invokespecial #3                  // Method java/io/InputStream.\"<init>\":()V\n+         1: invokespecial #9                  // Method java/io/InputStream.\"<init>\":()V\n          4: aload_0\n-         5: ldc2_w        #4                  // long -1l\n-         8: putfield      #6                  // Field mark:J\n+         5: ldc2_w        #14                 // long -1l\n+         8: putfield      #16                 // Field mark:J\n         11: aload_0\n         12: lload_1\n-        13: putfield      #7                  // Field size:J\n+        13: putfield      #20                 // Field size:J\n         16: aload_0\n         17: iload_3\n-        18: putfield      #8                  // Field markSupported:Z\n+        18: putfield      #23                 // Field markSupported:Z\n         21: aload_0\n         22: iload         4\n-        24: putfield      #9                  // Field throwEofException:Z\n+        24: putfield      #27                 // Field throwEofException:Z\n         27: return\n       LineNumberTable:\n         line 109: 0\n         line 72: 4\n         line 110: 11\n         line 111: 16\n         line 112: 21\n@@ -236,58 +236,58 @@\n \n   public long getPosition();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field position:J\n+         1: getfield      #30                 // Field position:J\n          4: lreturn\n       LineNumberTable:\n         line 121: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/input/NullInputStream;\n \n   public long getSize();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field size:J\n+         1: getfield      #20                 // Field size:J\n          4: lreturn\n       LineNumberTable:\n         line 130: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/input/NullInputStream;\n \n   public int available();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field size:J\n+         1: getfield      #20                 // Field size:J\n          4: aload_0\n-         5: getfield      #10                 // Field position:J\n+         5: getfield      #30                 // Field position:J\n          8: lsub\n          9: lstore_1\n         10: lload_1\n         11: lconst_0\n         12: lcmp\n         13: ifgt          18\n         16: iconst_0\n         17: ireturn\n         18: lload_1\n-        19: ldc2_w        #12                 // long 2147483647l\n+        19: ldc2_w        #35                 // long 2147483647l\n         22: lcmp\n         23: ifle          29\n-        26: ldc           #14                 // int 2147483647\n+        26: ldc           #37                 // int 2147483647\n         28: ireturn\n         29: lload_1\n         30: l2i\n         31: ireturn\n       LineNumberTable:\n         line 140: 0\n         line 141: 10\n@@ -308,21 +308,21 @@\n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: putfield      #15                 // Field eof:Z\n+         2: putfield      #38                 // Field eof:Z\n          5: aload_0\n          6: lconst_0\n-         7: putfield      #10                 // Field position:J\n+         7: putfield      #30                 // Field position:J\n         10: aload_0\n-        11: ldc2_w        #4                  // long -1l\n-        14: putfield      #6                  // Field mark:J\n+        11: ldc2_w        #14                 // long -1l\n+        14: putfield      #16                 // Field mark:J\n         17: return\n       LineNumberTable:\n         line 158: 0\n         line 159: 5\n         line 160: 10\n         line 161: 17\n       LocalVariableTable:\n@@ -333,26 +333,26 @@\n \n   public synchronized void mark(int);\n     descriptor: (I)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #8                  // Field markSupported:Z\n+         1: getfield      #23                 // Field markSupported:Z\n          4: ifne          11\n-         7: invokestatic  #16                 // Method org/apache/commons/io/input/UnsupportedOperationExceptions.mark:()Ljava/lang/UnsupportedOperationException;\n+         7: invokestatic  #41                 // Method org/apache/commons/io/input/UnsupportedOperationExceptions.mark:()Ljava/lang/UnsupportedOperationException;\n         10: athrow\n         11: aload_0\n         12: aload_0\n-        13: getfield      #10                 // Field position:J\n-        16: putfield      #6                  // Field mark:J\n+        13: getfield      #30                 // Field position:J\n+        16: putfield      #16                 // Field mark:J\n         19: aload_0\n         20: iload_1\n         21: i2l\n-        22: putfield      #17                 // Field readlimit:J\n+        22: putfield      #46                 // Field readlimit:J\n         25: return\n       LineNumberTable:\n         line 172: 0\n         line 173: 7\n         line 175: 11\n         line 176: 19\n         line 177: 25\n@@ -365,52 +365,52 @@\n \n   public boolean markSupported();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field markSupported:Z\n+         1: getfield      #23                 // Field markSupported:Z\n          4: ireturn\n       LineNumberTable:\n         line 186: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/input/NullInputStream;\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #15                 // Field eof:Z\n+         1: getfield      #38                 // Field eof:Z\n          4: ifeq          17\n-         7: new           #18                 // class java/io/IOException\n+         7: new           #49                 // class java/io/IOException\n         10: dup\n-        11: ldc           #19                 // String Read after end of file\n-        13: invokespecial #20                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #51                 // String Read after end of file\n+        13: invokespecial #53                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: getfield      #10                 // Field position:J\n+        18: getfield      #30                 // Field position:J\n         21: aload_0\n-        22: getfield      #7                  // Field size:J\n+        22: getfield      #20                 // Field size:J\n         25: lcmp\n         26: ifne          34\n         29: aload_0\n-        30: invokespecial #21                 // Method doEndOfFile:()I\n+        30: invokespecial #56                 // Method doEndOfFile:()I\n         33: ireturn\n         34: aload_0\n         35: dup\n-        36: getfield      #10                 // Field position:J\n+        36: getfield      #30                 // Field position:J\n         39: lconst_1\n         40: ladd\n-        41: putfield      #10                 // Field position:J\n+        41: putfield      #30                 // Field position:J\n         44: aload_0\n-        45: invokevirtual #22                 // Method processByte:()I\n+        45: invokevirtual #60                 // Method processByte:()I\n         48: ireturn\n       LineNumberTable:\n         line 201: 0\n         line 202: 7\n         line 204: 17\n         line 205: 29\n         line 207: 34\n@@ -430,15 +430,15 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #23                 // Method read:([BII)I\n+         5: invokevirtual #63                 // Method read:([BII)I\n          8: ireturn\n       LineNumberTable:\n         line 224: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/NullInputStream;\n             0       9     1 bytes   [B\n@@ -447,63 +447,63 @@\n \n   public int read(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=5, args_size=4\n          0: aload_0\n-         1: getfield      #15                 // Field eof:Z\n+         1: getfield      #38                 // Field eof:Z\n          4: ifeq          17\n-         7: new           #18                 // class java/io/IOException\n+         7: new           #49                 // class java/io/IOException\n         10: dup\n-        11: ldc           #19                 // String Read after end of file\n-        13: invokespecial #20                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #51                 // String Read after end of file\n+        13: invokespecial #53                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: getfield      #10                 // Field position:J\n+        18: getfield      #30                 // Field position:J\n         21: aload_0\n-        22: getfield      #7                  // Field size:J\n+        22: getfield      #20                 // Field size:J\n         25: lcmp\n         26: ifne          34\n         29: aload_0\n-        30: invokespecial #21                 // Method doEndOfFile:()I\n+        30: invokespecial #56                 // Method doEndOfFile:()I\n         33: ireturn\n         34: aload_0\n         35: dup\n-        36: getfield      #10                 // Field position:J\n+        36: getfield      #30                 // Field position:J\n         39: iload_3\n         40: i2l\n         41: ladd\n-        42: putfield      #10                 // Field position:J\n+        42: putfield      #30                 // Field position:J\n         45: iload_3\n         46: istore        4\n         48: aload_0\n-        49: getfield      #10                 // Field position:J\n+        49: getfield      #30                 // Field position:J\n         52: aload_0\n-        53: getfield      #7                  // Field size:J\n+        53: getfield      #20                 // Field size:J\n         56: lcmp\n         57: ifle          82\n         60: iload_3\n         61: aload_0\n-        62: getfield      #10                 // Field position:J\n+        62: getfield      #30                 // Field position:J\n         65: aload_0\n-        66: getfield      #7                  // Field size:J\n+        66: getfield      #20                 // Field size:J\n         69: lsub\n         70: l2i\n         71: isub\n         72: istore        4\n         74: aload_0\n         75: aload_0\n-        76: getfield      #7                  // Field size:J\n-        79: putfield      #10                 // Field position:J\n+        76: getfield      #20                 // Field size:J\n+        79: putfield      #30                 // Field position:J\n         82: aload_0\n         83: aload_1\n         84: iload_2\n         85: iload         4\n-        87: invokevirtual #24                 // Method processBytes:([BII)V\n+        87: invokevirtual #67                 // Method processBytes:([BII)V\n         90: iload         4\n         92: ireturn\n       LineNumberTable:\n         line 242: 0\n         line 243: 7\n         line 245: 17\n         line 246: 29\n@@ -532,64 +532,64 @@\n \n   public synchronized void reset() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=6, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field markSupported:Z\n+         1: getfield      #23                 // Field markSupported:Z\n          4: ifne          11\n-         7: invokestatic  #25                 // Method org/apache/commons/io/input/UnsupportedOperationExceptions.reset:()Ljava/lang/UnsupportedOperationException;\n+         7: invokestatic  #71                 // Method org/apache/commons/io/input/UnsupportedOperationExceptions.reset:()Ljava/lang/UnsupportedOperationException;\n         10: athrow\n         11: aload_0\n-        12: getfield      #6                  // Field mark:J\n+        12: getfield      #16                 // Field mark:J\n         15: lconst_0\n         16: lcmp\n         17: ifge          30\n-        20: new           #18                 // class java/io/IOException\n+        20: new           #49                 // class java/io/IOException\n         23: dup\n-        24: ldc           #26                 // String No position has been marked\n-        26: invokespecial #20                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        24: ldc           #74                 // String No position has been marked\n+        26: invokespecial #53                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         29: athrow\n         30: aload_0\n-        31: getfield      #10                 // Field position:J\n+        31: getfield      #30                 // Field position:J\n         34: aload_0\n-        35: getfield      #6                  // Field mark:J\n+        35: getfield      #16                 // Field mark:J\n         38: aload_0\n-        39: getfield      #17                 // Field readlimit:J\n+        39: getfield      #46                 // Field readlimit:J\n         42: ladd\n         43: lcmp\n         44: ifle          94\n-        47: new           #18                 // class java/io/IOException\n+        47: new           #49                 // class java/io/IOException\n         50: dup\n-        51: new           #27                 // class java/lang/StringBuilder\n+        51: new           #76                 // class java/lang/StringBuilder\n         54: dup\n-        55: invokespecial #28                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        58: ldc           #29                 // String Marked position [\n-        60: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        55: invokespecial #78                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        58: ldc           #79                 // String Marked position [\n+        60: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         63: aload_0\n-        64: getfield      #6                  // Field mark:J\n-        67: invokevirtual #31                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-        70: ldc           #32                 // String ] is no longer valid - passed the read limit [\n-        72: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        64: getfield      #16                 // Field mark:J\n+        67: invokevirtual #85                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        70: ldc           #88                 // String ] is no longer valid - passed the read limit [\n+        72: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         75: aload_0\n-        76: getfield      #17                 // Field readlimit:J\n-        79: invokevirtual #31                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-        82: ldc           #33                 // String ]\n-        84: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        87: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        90: invokespecial #20                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        76: getfield      #46                 // Field readlimit:J\n+        79: invokevirtual #85                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        82: ldc           #90                 // String ]\n+        84: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        87: invokevirtual #92                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        90: invokespecial #53                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         93: athrow\n         94: aload_0\n         95: aload_0\n-        96: getfield      #6                  // Field mark:J\n-        99: putfield      #10                 // Field position:J\n+        96: getfield      #16                 // Field mark:J\n+        99: putfield      #30                 // Field position:J\n        102: aload_0\n        103: iconst_0\n-       104: putfield      #15                 // Field eof:Z\n+       104: putfield      #38                 // Field eof:Z\n        107: return\n       LineNumberTable:\n         line 268: 0\n         line 269: 7\n         line 271: 11\n         line 272: 20\n         line 274: 30\n@@ -609,57 +609,57 @@\n \n   public long skip(long) throws java.io.IOException;\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=5, args_size=2\n          0: aload_0\n-         1: getfield      #15                 // Field eof:Z\n+         1: getfield      #38                 // Field eof:Z\n          4: ifeq          17\n-         7: new           #18                 // class java/io/IOException\n+         7: new           #49                 // class java/io/IOException\n         10: dup\n-        11: ldc           #35                 // String Skip after end of file\n-        13: invokespecial #20                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #96                 // String Skip after end of file\n+        13: invokespecial #53                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: getfield      #10                 // Field position:J\n+        18: getfield      #30                 // Field position:J\n         21: aload_0\n-        22: getfield      #7                  // Field size:J\n+        22: getfield      #20                 // Field size:J\n         25: lcmp\n         26: ifne          35\n         29: aload_0\n-        30: invokespecial #21                 // Method doEndOfFile:()I\n+        30: invokespecial #56                 // Method doEndOfFile:()I\n         33: i2l\n         34: lreturn\n         35: aload_0\n         36: dup\n-        37: getfield      #10                 // Field position:J\n+        37: getfield      #30                 // Field position:J\n         40: lload_1\n         41: ladd\n-        42: putfield      #10                 // Field position:J\n+        42: putfield      #30                 // Field position:J\n         45: lload_1\n         46: lstore_3\n         47: aload_0\n-        48: getfield      #10                 // Field position:J\n+        48: getfield      #30                 // Field position:J\n         51: aload_0\n-        52: getfield      #7                  // Field size:J\n+        52: getfield      #20                 // Field size:J\n         55: lcmp\n         56: ifle          79\n         59: lload_1\n         60: aload_0\n-        61: getfield      #10                 // Field position:J\n+        61: getfield      #30                 // Field position:J\n         64: aload_0\n-        65: getfield      #7                  // Field size:J\n+        65: getfield      #20                 // Field size:J\n         68: lsub\n         69: lsub\n         70: lstore_3\n         71: aload_0\n         72: aload_0\n-        73: getfield      #7                  // Field size:J\n-        76: putfield      #10                 // Field position:J\n+        73: getfield      #20                 // Field size:J\n+        76: putfield      #30                 // Field position:J\n         79: lload_3\n         80: lreturn\n       LineNumberTable:\n         line 296: 0\n         line 297: 7\n         line 299: 17\n         line 300: 29\n@@ -714,21 +714,21 @@\n   private int doEndOfFile() throws java.io.EOFException;\n     descriptor: ()I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: putfield      #15                 // Field eof:Z\n+         2: putfield      #38                 // Field eof:Z\n          5: aload_0\n-         6: getfield      #9                  // Field throwEofException:Z\n+         6: getfield      #27                 // Field throwEofException:Z\n          9: ifeq          20\n-        12: new           #36                 // class java/io/EOFException\n+        12: new           #98                 // class java/io/EOFException\n         15: dup\n-        16: invokespecial #37                 // Method java/io/EOFException.\"<init>\":()V\n+        16: invokespecial #100                // Method java/io/EOFException.\"<init>\":()V\n         19: athrow\n         20: iconst_m1\n         21: ireturn\n       LineNumberTable:\n         line 346: 0\n         line 347: 5\n         line 348: 12\n"}]}
