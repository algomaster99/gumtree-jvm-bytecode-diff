{"diffoscope-json-version": 1, "source1": "first/WordUtils.class", "source2": "second/WordUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,210 +1,206 @@\n-  SHA-256 checksum aff7f57edf84a223f5cb1af19af021d6a510df8f91c01a8f0ca1d93b6a310ac0\n+  SHA-256 checksum a185d9ecf1ce0cf22b3fc26b64605b17f8ff2d09fc432391523a3c376a1d33bd\n   Compiled from \"WordUtils.java\"\n public class org.apache.commons.lang3.text.WordUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #52                         // org/apache/commons/lang3/text/WordUtils\n   super_class: #53                        // java/lang/Object\n   interfaces: 0, fields: 0, methods: 15, attributes: 3\n Constant pool:\n-    #1 = Methodref          #53.#86       // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #52.#87       // org/apache/commons/lang3/text/WordUtils.wrap:(Ljava/lang/String;ILjava/lang/String;Z)Ljava/lang/String;\n-    #3 = String             #88           //\n-    #4 = Methodref          #52.#89       // org/apache/commons/lang3/text/WordUtils.wrap:(Ljava/lang/String;ILjava/lang/String;ZLjava/lang/String;)Ljava/lang/String;\n-    #5 = Methodref          #90.#91       // java/lang/System.lineSeparator:()Ljava/lang/String;\n-    #6 = Methodref          #42.#92       // org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n-    #7 = Methodref          #93.#94       // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-    #8 = Methodref          #30.#95       // java/lang/String.length:()I\n-    #9 = Class              #96           // java/lang/StringBuilder\n-   #10 = Methodref          #9.#97        // java/lang/StringBuilder.\"<init>\":(I)V\n-   #11 = Class              #98           // java/lang/Integer\n+    #1 = Methodref          #53.#84       // java/lang/Object.\"<init>\":()V\n+    #2 = Methodref          #52.#85       // org/apache/commons/lang3/text/WordUtils.wrap:(Ljava/lang/String;ILjava/lang/String;Z)Ljava/lang/String;\n+    #3 = String             #86           //\n+    #4 = Methodref          #52.#87       // org/apache/commons/lang3/text/WordUtils.wrap:(Ljava/lang/String;ILjava/lang/String;ZLjava/lang/String;)Ljava/lang/String;\n+    #5 = Methodref          #88.#89       // java/lang/System.lineSeparator:()Ljava/lang/String;\n+    #6 = Methodref          #42.#90       // org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n+    #7 = Methodref          #63.#91       // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+    #8 = Methodref          #30.#92       // java/lang/String.length:()I\n+    #9 = Class              #93           // java/lang/StringBuilder\n+   #10 = Methodref          #9.#94        // java/lang/StringBuilder.\"<init>\":(I)V\n+   #11 = Class              #95           // java/lang/Integer\n    #12 = Long               2147483647l\n-   #14 = Methodref          #99.#100      // java/lang/Math.min:(JJ)J\n-   #15 = Methodref          #99.#101      // java/lang/Math.min:(II)I\n-   #16 = Methodref          #30.#102      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #17 = Methodref          #93.#103      // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #18 = Methodref          #104.#105     // java/util/regex/Matcher.find:()Z\n-   #19 = Methodref          #104.#106     // java/util/regex/Matcher.start:()I\n-   #20 = Methodref          #104.#107     // java/util/regex/Matcher.end:()I\n-   #21 = Methodref          #9.#108       // java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n-   #22 = Methodref          #9.#109       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #23 = Methodref          #30.#110      // java/lang/String.substring:(I)Ljava/lang/String;\n-   #24 = Methodref          #9.#111       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #25 = Methodref          #52.#112      // org/apache/commons/lang3/text/WordUtils.capitalize:(Ljava/lang/String;[C)Ljava/lang/String;\n-   #26 = Methodref          #42.#113      // org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n-   #27 = Methodref          #30.#114      // java/lang/String.toCharArray:()[C\n-   #28 = Methodref          #52.#115      // org/apache/commons/lang3/text/WordUtils.isDelimiter:(C[C)Z\n-   #29 = Methodref          #116.#117     // java/lang/Character.toTitleCase:(C)C\n-   #30 = Class              #118          // java/lang/String\n-   #31 = Methodref          #30.#119      // java/lang/String.\"<init>\":([C)V\n-   #32 = Methodref          #52.#120      // org/apache/commons/lang3/text/WordUtils.capitalizeFully:(Ljava/lang/String;[C)Ljava/lang/String;\n-   #33 = Methodref          #30.#121      // java/lang/String.toLowerCase:()Ljava/lang/String;\n-   #34 = Methodref          #52.#122      // org/apache/commons/lang3/text/WordUtils.uncapitalize:(Ljava/lang/String;[C)Ljava/lang/String;\n-   #35 = Methodref          #116.#123     // java/lang/Character.toLowerCase:(C)C\n-   #36 = Methodref          #116.#124     // java/lang/Character.isUpperCase:(C)Z\n-   #37 = Methodref          #116.#125     // java/lang/Character.isTitleCase:(C)Z\n-   #38 = Methodref          #116.#126     // java/lang/Character.isLowerCase:(C)Z\n-   #39 = Methodref          #116.#127     // java/lang/Character.toUpperCase:(C)C\n-   #40 = Methodref          #116.#128     // java/lang/Character.isWhitespace:(C)Z\n-   #41 = Methodref          #52.#129      // org/apache/commons/lang3/text/WordUtils.initials:(Ljava/lang/String;[C)Ljava/lang/String;\n-   #42 = Class              #130          // org/apache/commons/lang3/StringUtils\n-   #43 = String             #131          //\n-   #44 = Methodref          #30.#132      // java/lang/String.charAt:(I)C\n-   #45 = Methodref          #30.#133      // java/lang/String.\"<init>\":([CII)V\n-   #46 = Methodref          #134.#135     // org/apache/commons/lang3/ArrayUtils.isEmpty:([Ljava/lang/Object;)Z\n-   #47 = Methodref          #9.#86        // java/lang/StringBuilder.\"<init>\":()V\n-   #48 = String             #136          // .*\\\\b\n-   #49 = Methodref          #9.#137       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #50 = String             #138          // \\\\b.*\n-   #51 = Methodref          #104.#139     // java/util/regex/Matcher.matches:()Z\n-   #52 = Class              #140          // org/apache/commons/lang3/text/WordUtils\n-   #53 = Class              #141          // java/lang/Object\n+   #14 = Methodref          #96.#97       // java/lang/Math.min:(JJ)J\n+   #15 = Methodref          #96.#98       // java/lang/Math.min:(II)I\n+   #16 = Methodref          #30.#99       // java/lang/String.substring:(II)Ljava/lang/String;\n+   #17 = Methodref          #63.#100      // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #18 = Methodref          #64.#101      // java/util/regex/Matcher.find:()Z\n+   #19 = Methodref          #64.#102      // java/util/regex/Matcher.start:()I\n+   #20 = Methodref          #64.#103      // java/util/regex/Matcher.end:()I\n+   #21 = Methodref          #9.#104       // java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n+   #22 = Methodref          #9.#105       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #23 = Methodref          #30.#106      // java/lang/String.substring:(I)Ljava/lang/String;\n+   #24 = Methodref          #9.#107       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #25 = Methodref          #52.#108      // org/apache/commons/lang3/text/WordUtils.capitalize:(Ljava/lang/String;[C)Ljava/lang/String;\n+   #26 = Methodref          #42.#109      // org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n+   #27 = Methodref          #30.#110      // java/lang/String.toCharArray:()[C\n+   #28 = Methodref          #52.#111      // org/apache/commons/lang3/text/WordUtils.isDelimiter:(C[C)Z\n+   #29 = Methodref          #112.#113     // java/lang/Character.toTitleCase:(C)C\n+   #30 = Class              #114          // java/lang/String\n+   #31 = Methodref          #30.#115      // java/lang/String.\"<init>\":([C)V\n+   #32 = Methodref          #52.#116      // org/apache/commons/lang3/text/WordUtils.capitalizeFully:(Ljava/lang/String;[C)Ljava/lang/String;\n+   #33 = Methodref          #30.#117      // java/lang/String.toLowerCase:()Ljava/lang/String;\n+   #34 = Methodref          #52.#118      // org/apache/commons/lang3/text/WordUtils.uncapitalize:(Ljava/lang/String;[C)Ljava/lang/String;\n+   #35 = Methodref          #112.#119     // java/lang/Character.toLowerCase:(C)C\n+   #36 = Methodref          #112.#120     // java/lang/Character.isUpperCase:(C)Z\n+   #37 = Methodref          #112.#121     // java/lang/Character.isTitleCase:(C)Z\n+   #38 = Methodref          #112.#122     // java/lang/Character.isLowerCase:(C)Z\n+   #39 = Methodref          #112.#123     // java/lang/Character.toUpperCase:(C)C\n+   #40 = Methodref          #112.#124     // java/lang/Character.isWhitespace:(C)Z\n+   #41 = Methodref          #52.#125      // org/apache/commons/lang3/text/WordUtils.initials:(Ljava/lang/String;[C)Ljava/lang/String;\n+   #42 = Class              #126          // org/apache/commons/lang3/StringUtils\n+   #43 = String             #127          //\n+   #44 = Methodref          #30.#128      // java/lang/String.charAt:(I)C\n+   #45 = Methodref          #30.#129      // java/lang/String.\"<init>\":([CII)V\n+   #46 = Methodref          #130.#131     // org/apache/commons/lang3/ArrayUtils.isEmpty:([Ljava/lang/Object;)Z\n+   #47 = Methodref          #9.#84        // java/lang/StringBuilder.\"<init>\":()V\n+   #48 = String             #132          // .*\\\\b\n+   #49 = Methodref          #9.#133       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #50 = String             #134          // \\\\b.*\n+   #51 = Methodref          #64.#135      // java/util/regex/Matcher.matches:()Z\n+   #52 = Class              #136          // org/apache/commons/lang3/text/WordUtils\n+   #53 = Class              #137          // java/lang/Object\n    #54 = Utf8               <init>\n    #55 = Utf8               ()V\n    #56 = Utf8               Code\n    #57 = Utf8               LineNumberTable\n    #58 = Utf8               wrap\n    #59 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;\n    #60 = Utf8               (Ljava/lang/String;ILjava/lang/String;Z)Ljava/lang/String;\n    #61 = Utf8               (Ljava/lang/String;ILjava/lang/String;ZLjava/lang/String;)Ljava/lang/String;\n    #62 = Utf8               StackMapTable\n-   #63 = Class              #118          // java/lang/String\n-   #64 = Class              #142          // java/util/regex/Pattern\n-   #65 = Class              #96           // java/lang/StringBuilder\n-   #66 = Class              #143          // java/util/regex/Matcher\n-   #67 = Utf8               capitalize\n-   #68 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-   #69 = Utf8               (Ljava/lang/String;[C)Ljava/lang/String;\n-   #70 = Class              #144          // \"[C\"\n-   #71 = Utf8               capitalizeFully\n-   #72 = Utf8               uncapitalize\n-   #73 = Utf8               swapCase\n-   #74 = Utf8               initials\n-   #75 = Utf8               containsAllWords\n-   #76 = Utf8               (Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Z\n-   #77 = Class              #145          // \"[Ljava/lang/CharSequence;\"\n-   #78 = Class              #146          // java/lang/CharSequence\n-   #79 = Utf8               isDelimiter\n-   #80 = Utf8               (C[C)Z\n-   #81 = Utf8               SourceFile\n-   #82 = Utf8               WordUtils.java\n-   #83 = Utf8               Deprecated\n-   #84 = Utf8               RuntimeVisibleAnnotations\n-   #85 = Utf8               Ljava/lang/Deprecated;\n-   #86 = NameAndType        #54:#55       // \"<init>\":()V\n-   #87 = NameAndType        #58:#60       // wrap:(Ljava/lang/String;ILjava/lang/String;Z)Ljava/lang/String;\n-   #88 = Utf8\n-   #89 = NameAndType        #58:#61       // wrap:(Ljava/lang/String;ILjava/lang/String;ZLjava/lang/String;)Ljava/lang/String;\n-   #90 = Class              #147          // java/lang/System\n-   #91 = NameAndType        #148:#149     // lineSeparator:()Ljava/lang/String;\n-   #92 = NameAndType        #150:#151     // isBlank:(Ljava/lang/CharSequence;)Z\n-   #93 = Class              #142          // java/util/regex/Pattern\n-   #94 = NameAndType        #152:#153     // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-   #95 = NameAndType        #154:#155     // length:()I\n-   #96 = Utf8               java/lang/StringBuilder\n-   #97 = NameAndType        #54:#156      // \"<init>\":(I)V\n-   #98 = Utf8               java/lang/Integer\n-   #99 = Class              #157          // java/lang/Math\n-  #100 = NameAndType        #158:#159     // min:(JJ)J\n-  #101 = NameAndType        #158:#160     // min:(II)I\n-  #102 = NameAndType        #161:#162     // substring:(II)Ljava/lang/String;\n-  #103 = NameAndType        #163:#164     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #104 = Class              #143          // java/util/regex/Matcher\n-  #105 = NameAndType        #165:#166     // find:()Z\n-  #106 = NameAndType        #167:#155     // start:()I\n-  #107 = NameAndType        #168:#155     // end:()I\n-  #108 = NameAndType        #169:#170     // append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n-  #109 = NameAndType        #169:#171     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #110 = NameAndType        #161:#172     // substring:(I)Ljava/lang/String;\n-  #111 = NameAndType        #173:#149     // toString:()Ljava/lang/String;\n-  #112 = NameAndType        #67:#69       // capitalize:(Ljava/lang/String;[C)Ljava/lang/String;\n-  #113 = NameAndType        #174:#151     // isEmpty:(Ljava/lang/CharSequence;)Z\n-  #114 = NameAndType        #175:#176     // toCharArray:()[C\n-  #115 = NameAndType        #79:#80       // isDelimiter:(C[C)Z\n-  #116 = Class              #177          // java/lang/Character\n-  #117 = NameAndType        #178:#179     // toTitleCase:(C)C\n-  #118 = Utf8               java/lang/String\n-  #119 = NameAndType        #54:#180      // \"<init>\":([C)V\n-  #120 = NameAndType        #71:#69       // capitalizeFully:(Ljava/lang/String;[C)Ljava/lang/String;\n-  #121 = NameAndType        #181:#149     // toLowerCase:()Ljava/lang/String;\n-  #122 = NameAndType        #72:#69       // uncapitalize:(Ljava/lang/String;[C)Ljava/lang/String;\n-  #123 = NameAndType        #181:#179     // toLowerCase:(C)C\n-  #124 = NameAndType        #182:#183     // isUpperCase:(C)Z\n-  #125 = NameAndType        #184:#183     // isTitleCase:(C)Z\n-  #126 = NameAndType        #185:#183     // isLowerCase:(C)Z\n-  #127 = NameAndType        #186:#179     // toUpperCase:(C)C\n-  #128 = NameAndType        #187:#183     // isWhitespace:(C)Z\n-  #129 = NameAndType        #74:#69       // initials:(Ljava/lang/String;[C)Ljava/lang/String;\n-  #130 = Utf8               org/apache/commons/lang3/StringUtils\n-  #131 = Utf8\n-  #132 = NameAndType        #188:#189     // charAt:(I)C\n-  #133 = NameAndType        #54:#190      // \"<init>\":([CII)V\n-  #134 = Class              #191          // org/apache/commons/lang3/ArrayUtils\n-  #135 = NameAndType        #174:#192     // isEmpty:([Ljava/lang/Object;)Z\n-  #136 = Utf8               .*\\\\b\n-  #137 = NameAndType        #169:#193     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #138 = Utf8               \\\\b.*\n-  #139 = NameAndType        #194:#166     // matches:()Z\n-  #140 = Utf8               org/apache/commons/lang3/text/WordUtils\n-  #141 = Utf8               java/lang/Object\n-  #142 = Utf8               java/util/regex/Pattern\n-  #143 = Utf8               java/util/regex/Matcher\n-  #144 = Utf8               [C\n-  #145 = Utf8               [Ljava/lang/CharSequence;\n-  #146 = Utf8               java/lang/CharSequence\n-  #147 = Utf8               java/lang/System\n-  #148 = Utf8               lineSeparator\n-  #149 = Utf8               ()Ljava/lang/String;\n-  #150 = Utf8               isBlank\n-  #151 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #152 = Utf8               compile\n-  #153 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #154 = Utf8               length\n-  #155 = Utf8               ()I\n-  #156 = Utf8               (I)V\n-  #157 = Utf8               java/lang/Math\n-  #158 = Utf8               min\n-  #159 = Utf8               (JJ)J\n-  #160 = Utf8               (II)I\n-  #161 = Utf8               substring\n-  #162 = Utf8               (II)Ljava/lang/String;\n-  #163 = Utf8               matcher\n-  #164 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #165 = Utf8               find\n-  #166 = Utf8               ()Z\n-  #167 = Utf8               start\n-  #168 = Utf8               end\n-  #169 = Utf8               append\n-  #170 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n-  #171 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #172 = Utf8               (I)Ljava/lang/String;\n-  #173 = Utf8               toString\n-  #174 = Utf8               isEmpty\n-  #175 = Utf8               toCharArray\n-  #176 = Utf8               ()[C\n-  #177 = Utf8               java/lang/Character\n-  #178 = Utf8               toTitleCase\n-  #179 = Utf8               (C)C\n-  #180 = Utf8               ([C)V\n-  #181 = Utf8               toLowerCase\n-  #182 = Utf8               isUpperCase\n-  #183 = Utf8               (C)Z\n-  #184 = Utf8               isTitleCase\n-  #185 = Utf8               isLowerCase\n-  #186 = Utf8               toUpperCase\n-  #187 = Utf8               isWhitespace\n-  #188 = Utf8               charAt\n-  #189 = Utf8               (I)C\n-  #190 = Utf8               ([CII)V\n-  #191 = Utf8               org/apache/commons/lang3/ArrayUtils\n-  #192 = Utf8               ([Ljava/lang/Object;)Z\n-  #193 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #194 = Utf8               matches\n+   #63 = Class              #138          // java/util/regex/Pattern\n+   #64 = Class              #139          // java/util/regex/Matcher\n+   #65 = Utf8               capitalize\n+   #66 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+   #67 = Utf8               (Ljava/lang/String;[C)Ljava/lang/String;\n+   #68 = Class              #140          // \"[C\"\n+   #69 = Utf8               capitalizeFully\n+   #70 = Utf8               uncapitalize\n+   #71 = Utf8               swapCase\n+   #72 = Utf8               initials\n+   #73 = Utf8               containsAllWords\n+   #74 = Utf8               (Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Z\n+   #75 = Class              #141          // \"[Ljava/lang/CharSequence;\"\n+   #76 = Class              #142          // java/lang/CharSequence\n+   #77 = Utf8               isDelimiter\n+   #78 = Utf8               (C[C)Z\n+   #79 = Utf8               SourceFile\n+   #80 = Utf8               WordUtils.java\n+   #81 = Utf8               Deprecated\n+   #82 = Utf8               RuntimeVisibleAnnotations\n+   #83 = Utf8               Ljava/lang/Deprecated;\n+   #84 = NameAndType        #54:#55       // \"<init>\":()V\n+   #85 = NameAndType        #58:#60       // wrap:(Ljava/lang/String;ILjava/lang/String;Z)Ljava/lang/String;\n+   #86 = Utf8\n+   #87 = NameAndType        #58:#61       // wrap:(Ljava/lang/String;ILjava/lang/String;ZLjava/lang/String;)Ljava/lang/String;\n+   #88 = Class              #143          // java/lang/System\n+   #89 = NameAndType        #144:#145     // lineSeparator:()Ljava/lang/String;\n+   #90 = NameAndType        #146:#147     // isBlank:(Ljava/lang/CharSequence;)Z\n+   #91 = NameAndType        #148:#149     // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+   #92 = NameAndType        #150:#151     // length:()I\n+   #93 = Utf8               java/lang/StringBuilder\n+   #94 = NameAndType        #54:#152      // \"<init>\":(I)V\n+   #95 = Utf8               java/lang/Integer\n+   #96 = Class              #153          // java/lang/Math\n+   #97 = NameAndType        #154:#155     // min:(JJ)J\n+   #98 = NameAndType        #154:#156     // min:(II)I\n+   #99 = NameAndType        #157:#158     // substring:(II)Ljava/lang/String;\n+  #100 = NameAndType        #159:#160     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #101 = NameAndType        #161:#162     // find:()Z\n+  #102 = NameAndType        #163:#151     // start:()I\n+  #103 = NameAndType        #164:#151     // end:()I\n+  #104 = NameAndType        #165:#166     // append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n+  #105 = NameAndType        #165:#167     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #106 = NameAndType        #157:#168     // substring:(I)Ljava/lang/String;\n+  #107 = NameAndType        #169:#145     // toString:()Ljava/lang/String;\n+  #108 = NameAndType        #65:#67       // capitalize:(Ljava/lang/String;[C)Ljava/lang/String;\n+  #109 = NameAndType        #170:#147     // isEmpty:(Ljava/lang/CharSequence;)Z\n+  #110 = NameAndType        #171:#172     // toCharArray:()[C\n+  #111 = NameAndType        #77:#78       // isDelimiter:(C[C)Z\n+  #112 = Class              #173          // java/lang/Character\n+  #113 = NameAndType        #174:#175     // toTitleCase:(C)C\n+  #114 = Utf8               java/lang/String\n+  #115 = NameAndType        #54:#176      // \"<init>\":([C)V\n+  #116 = NameAndType        #69:#67       // capitalizeFully:(Ljava/lang/String;[C)Ljava/lang/String;\n+  #117 = NameAndType        #177:#145     // toLowerCase:()Ljava/lang/String;\n+  #118 = NameAndType        #70:#67       // uncapitalize:(Ljava/lang/String;[C)Ljava/lang/String;\n+  #119 = NameAndType        #177:#175     // toLowerCase:(C)C\n+  #120 = NameAndType        #178:#179     // isUpperCase:(C)Z\n+  #121 = NameAndType        #180:#179     // isTitleCase:(C)Z\n+  #122 = NameAndType        #181:#179     // isLowerCase:(C)Z\n+  #123 = NameAndType        #182:#175     // toUpperCase:(C)C\n+  #124 = NameAndType        #183:#179     // isWhitespace:(C)Z\n+  #125 = NameAndType        #72:#67       // initials:(Ljava/lang/String;[C)Ljava/lang/String;\n+  #126 = Utf8               org/apache/commons/lang3/StringUtils\n+  #127 = Utf8\n+  #128 = NameAndType        #184:#185     // charAt:(I)C\n+  #129 = NameAndType        #54:#186      // \"<init>\":([CII)V\n+  #130 = Class              #187          // org/apache/commons/lang3/ArrayUtils\n+  #131 = NameAndType        #170:#188     // isEmpty:([Ljava/lang/Object;)Z\n+  #132 = Utf8               .*\\\\b\n+  #133 = NameAndType        #165:#189     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #134 = Utf8               \\\\b.*\n+  #135 = NameAndType        #190:#162     // matches:()Z\n+  #136 = Utf8               org/apache/commons/lang3/text/WordUtils\n+  #137 = Utf8               java/lang/Object\n+  #138 = Utf8               java/util/regex/Pattern\n+  #139 = Utf8               java/util/regex/Matcher\n+  #140 = Utf8               [C\n+  #141 = Utf8               [Ljava/lang/CharSequence;\n+  #142 = Utf8               java/lang/CharSequence\n+  #143 = Utf8               java/lang/System\n+  #144 = Utf8               lineSeparator\n+  #145 = Utf8               ()Ljava/lang/String;\n+  #146 = Utf8               isBlank\n+  #147 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #148 = Utf8               compile\n+  #149 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #150 = Utf8               length\n+  #151 = Utf8               ()I\n+  #152 = Utf8               (I)V\n+  #153 = Utf8               java/lang/Math\n+  #154 = Utf8               min\n+  #155 = Utf8               (JJ)J\n+  #156 = Utf8               (II)I\n+  #157 = Utf8               substring\n+  #158 = Utf8               (II)Ljava/lang/String;\n+  #159 = Utf8               matcher\n+  #160 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #161 = Utf8               find\n+  #162 = Utf8               ()Z\n+  #163 = Utf8               start\n+  #164 = Utf8               end\n+  #165 = Utf8               append\n+  #166 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n+  #167 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #168 = Utf8               (I)Ljava/lang/String;\n+  #169 = Utf8               toString\n+  #170 = Utf8               isEmpty\n+  #171 = Utf8               toCharArray\n+  #172 = Utf8               ()[C\n+  #173 = Utf8               java/lang/Character\n+  #174 = Utf8               toTitleCase\n+  #175 = Utf8               (C)C\n+  #176 = Utf8               ([C)V\n+  #177 = Utf8               toLowerCase\n+  #178 = Utf8               isUpperCase\n+  #179 = Utf8               (C)Z\n+  #180 = Utf8               isTitleCase\n+  #181 = Utf8               isLowerCase\n+  #182 = Utf8               toUpperCase\n+  #183 = Utf8               isWhitespace\n+  #184 = Utf8               charAt\n+  #185 = Utf8               (I)C\n+  #186 = Utf8               ([CII)V\n+  #187 = Utf8               org/apache/commons/lang3/ArrayUtils\n+  #188 = Utf8               ([Ljava/lang/Object;)Z\n+  #189 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #190 = Utf8               matches\n {\n   public org.apache.commons.lang3.text.WordUtils();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -1097,9 +1093,9 @@\n         frame_type = 19 /* same */\n         frame_type = 248 /* chop */\n           offset_delta = 5\n }\n SourceFile: \"WordUtils.java\"\n Deprecated: true\n RuntimeVisibleAnnotations:\n-  0: #85()\n+  0: #83()\n     java.lang.Deprecated\n"}]}
