{"diffoscope-json-version": 1, "source1": "first/ByteBufferCleaner$Java9Cleaner.class", "source2": "second/ByteBufferCleaner$Java9Cleaner.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,91 +1,91 @@\n-  SHA-256 checksum 4408dbeca5742b213f54978f465721438b4acbc6d821a79934927e3bbd0d1890\n+  SHA-256 checksum e671a31ea5e7f050b154fa76fbbd1e0ec37550cfe627fb5aad7d6a24429f8dde\n   Compiled from \"ByteBufferCleaner.java\"\n class org.apache.commons.io.input.ByteBufferCleaner$Java9Cleaner implements org.apache.commons.io.input.ByteBufferCleaner$Cleaner\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n-  this_class: #17                         // org/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner\n-  super_class: #15                        // java/lang/Object\n+  this_class: #2                          // org/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner\n+  super_class: #8                         // java/lang/Object\n   interfaces: 1, fields: 2, methods: 3, attributes: 2\n Constant pool:\n-   #1 = Methodref          #17.#37        // org/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner.\"<init>\":()V\n-   #2 = Methodref          #15.#37        // java/lang/Object.\"<init>\":()V\n-   #3 = String             #38            // sun.misc.Unsafe\n-   #4 = Methodref          #11.#39        // java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;\n-   #5 = String             #19            // theUnsafe\n-   #6 = Methodref          #11.#40        // java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;\n-   #7 = Methodref          #41.#42        // java/lang/reflect/Field.setAccessible:(Z)V\n-   #8 = Methodref          #41.#43        // java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #9 = Fieldref           #17.#44        // org/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner.theUnsafe:Ljava/lang/Object;\n-  #10 = String             #21            // invokeCleaner\n-  #11 = Class              #45            // java/lang/Class\n-  #12 = Class              #46            // java/nio/ByteBuffer\n-  #13 = Methodref          #11.#47        // java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n-  #14 = Fieldref           #17.#48        // org/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner.invokeCleaner:Ljava/lang/reflect/Method;\n-  #15 = Class              #49            // java/lang/Object\n-  #16 = Methodref          #50.#51        // java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #17 = Class              #53            // org/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner\n-  #18 = Class              #55            // org/apache/commons/io/input/ByteBufferCleaner$Cleaner\n+   #1 = Methodref          #2.#3          // org/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner.\"<init>\":()V\n+   #2 = Class              #4             // org/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               org/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Methodref          #8.#3          // java/lang/Object.\"<init>\":()V\n+   #8 = Class              #9             // java/lang/Object\n+   #9 = Utf8               java/lang/Object\n+  #10 = String             #11            // sun.misc.Unsafe\n+  #11 = Utf8               sun.misc.Unsafe\n+  #12 = Methodref          #13.#14        // java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;\n+  #13 = Class              #15            // java/lang/Class\n+  #14 = NameAndType        #16:#17        // forName:(Ljava/lang/String;)Ljava/lang/Class;\n+  #15 = Utf8               java/lang/Class\n+  #16 = Utf8               forName\n+  #17 = Utf8               (Ljava/lang/String;)Ljava/lang/Class;\n+  #18 = String             #19            // theUnsafe\n   #19 = Utf8               theUnsafe\n-  #20 = Utf8               Ljava/lang/Object;\n-  #21 = Utf8               invokeCleaner\n-  #22 = Utf8               Ljava/lang/reflect/Method;\n-  #23 = Utf8               <init>\n-  #24 = Utf8               ()V\n-  #25 = Utf8               Code\n-  #26 = Utf8               LineNumberTable\n-  #27 = Utf8               Exceptions\n-  #28 = Class              #57            // java/lang/ReflectiveOperationException\n-  #29 = Class              #58            // java/lang/SecurityException\n-  #30 = Utf8               clean\n-  #31 = Utf8               (Ljava/nio/ByteBuffer;)V\n-  #32 = Class              #59            // org/apache/commons/io/input/ByteBufferCleaner$1\n-  #33 = Utf8               InnerClasses\n-  #34 = Utf8               (Lorg/apache/commons/io/input/ByteBufferCleaner$1;)V\n-  #35 = Utf8               SourceFile\n-  #36 = Utf8               ByteBufferCleaner.java\n-  #37 = NameAndType        #23:#24        // \"<init>\":()V\n-  #38 = Utf8               sun.misc.Unsafe\n-  #39 = NameAndType        #60:#61        // forName:(Ljava/lang/String;)Ljava/lang/Class;\n-  #40 = NameAndType        #62:#63        // getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;\n-  #41 = Class              #64            // java/lang/reflect/Field\n-  #42 = NameAndType        #65:#66        // setAccessible:(Z)V\n-  #43 = NameAndType        #67:#68        // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #44 = NameAndType        #19:#20        // theUnsafe:Ljava/lang/Object;\n-  #45 = Utf8               java/lang/Class\n-  #46 = Utf8               java/nio/ByteBuffer\n-  #47 = NameAndType        #69:#70        // getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n-  #48 = NameAndType        #21:#22        // invokeCleaner:Ljava/lang/reflect/Method;\n-  #49 = Utf8               java/lang/Object\n-  #50 = Class              #71            // java/lang/reflect/Method\n-  #51 = NameAndType        #72:#73        // invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #52 = Class              #74            // org/apache/commons/io/input/ByteBufferCleaner\n-  #53 = Utf8               org/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner\n-  #54 = Utf8               Java9Cleaner\n+  #20 = Methodref          #13.#21        // java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;\n+  #21 = NameAndType        #22:#23        // getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;\n+  #22 = Utf8               getDeclaredField\n+  #23 = Utf8               (Ljava/lang/String;)Ljava/lang/reflect/Field;\n+  #24 = Methodref          #25.#26        // java/lang/reflect/Field.setAccessible:(Z)V\n+  #25 = Class              #27            // java/lang/reflect/Field\n+  #26 = NameAndType        #28:#29        // setAccessible:(Z)V\n+  #27 = Utf8               java/lang/reflect/Field\n+  #28 = Utf8               setAccessible\n+  #29 = Utf8               (Z)V\n+  #30 = Methodref          #25.#31        // java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #31 = NameAndType        #32:#33        // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #32 = Utf8               get\n+  #33 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #34 = Fieldref           #2.#35         // org/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner.theUnsafe:Ljava/lang/Object;\n+  #35 = NameAndType        #19:#36        // theUnsafe:Ljava/lang/Object;\n+  #36 = Utf8               Ljava/lang/Object;\n+  #37 = String             #38            // invokeCleaner\n+  #38 = Utf8               invokeCleaner\n+  #39 = Class              #40            // java/nio/ByteBuffer\n+  #40 = Utf8               java/nio/ByteBuffer\n+  #41 = Methodref          #13.#42        // java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n+  #42 = NameAndType        #43:#44        // getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n+  #43 = Utf8               getMethod\n+  #44 = Utf8               (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n+  #45 = Fieldref           #2.#46         // org/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner.invokeCleaner:Ljava/lang/reflect/Method;\n+  #46 = NameAndType        #38:#47        // invokeCleaner:Ljava/lang/reflect/Method;\n+  #47 = Utf8               Ljava/lang/reflect/Method;\n+  #48 = Methodref          #49.#50        // java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #49 = Class              #51            // java/lang/reflect/Method\n+  #50 = NameAndType        #52:#53        // invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #51 = Utf8               java/lang/reflect/Method\n+  #52 = Utf8               invoke\n+  #53 = Utf8               (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #54 = Class              #55            // org/apache/commons/io/input/ByteBufferCleaner$Cleaner\n   #55 = Utf8               org/apache/commons/io/input/ByteBufferCleaner$Cleaner\n-  #56 = Utf8               Cleaner\n-  #57 = Utf8               java/lang/ReflectiveOperationException\n-  #58 = Utf8               java/lang/SecurityException\n-  #59 = Utf8               org/apache/commons/io/input/ByteBufferCleaner$1\n-  #60 = Utf8               forName\n-  #61 = Utf8               (Ljava/lang/String;)Ljava/lang/Class;\n-  #62 = Utf8               getDeclaredField\n-  #63 = Utf8               (Ljava/lang/String;)Ljava/lang/reflect/Field;\n-  #64 = Utf8               java/lang/reflect/Field\n-  #65 = Utf8               setAccessible\n-  #66 = Utf8               (Z)V\n-  #67 = Utf8               get\n-  #68 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #69 = Utf8               getMethod\n-  #70 = Utf8               (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n-  #71 = Utf8               java/lang/reflect/Method\n-  #72 = Utf8               invoke\n-  #73 = Utf8               (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #74 = Utf8               org/apache/commons/io/input/ByteBufferCleaner\n+  #56 = Utf8               Code\n+  #57 = Utf8               LineNumberTable\n+  #58 = Utf8               Exceptions\n+  #59 = Class              #60            // java/lang/ReflectiveOperationException\n+  #60 = Utf8               java/lang/ReflectiveOperationException\n+  #61 = Class              #62            // java/lang/SecurityException\n+  #62 = Utf8               java/lang/SecurityException\n+  #63 = Utf8               clean\n+  #64 = Utf8               (Ljava/nio/ByteBuffer;)V\n+  #65 = Utf8               (Lorg/apache/commons/io/input/ByteBufferCleaner$1;)V\n+  #66 = Utf8               SourceFile\n+  #67 = Utf8               ByteBufferCleaner.java\n+  #68 = Utf8               InnerClasses\n+  #69 = Class              #70            // org/apache/commons/io/input/ByteBufferCleaner\n+  #70 = Utf8               org/apache/commons/io/input/ByteBufferCleaner\n+  #71 = Utf8               Java9Cleaner\n+  #72 = Utf8               Cleaner\n+  #73 = Class              #74            // org/apache/commons/io/input/ByteBufferCleaner$1\n+  #74 = Utf8               org/apache/commons/io/input/ByteBufferCleaner$1\n {\n   private final java.lang.Object theUnsafe;\n     descriptor: Ljava/lang/Object;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final java.lang.reflect.Method invokeCleaner;\n     descriptor: Ljava/lang/reflect/Method;\n@@ -93,41 +93,41 @@\n \n   private org.apache.commons.io.input.ByteBufferCleaner$Java9Cleaner() throws java.lang.ReflectiveOperationException, java.lang.SecurityException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=7, locals=3, args_size=1\n          0: aload_0\n-         1: invokespecial #2                  // Method java/lang/Object.\"<init>\":()V\n-         4: ldc           #3                  // String sun.misc.Unsafe\n-         6: invokestatic  #4                  // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;\n+         1: invokespecial #7                  // Method java/lang/Object.\"<init>\":()V\n+         4: ldc           #10                 // String sun.misc.Unsafe\n+         6: invokestatic  #12                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;\n          9: astore_1\n         10: aload_1\n-        11: ldc           #5                  // String theUnsafe\n-        13: invokevirtual #6                  // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;\n+        11: ldc           #18                 // String theUnsafe\n+        13: invokevirtual #20                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;\n         16: astore_2\n         17: aload_2\n         18: iconst_1\n-        19: invokevirtual #7                  // Method java/lang/reflect/Field.setAccessible:(Z)V\n+        19: invokevirtual #24                 // Method java/lang/reflect/Field.setAccessible:(Z)V\n         22: aload_0\n         23: aload_2\n         24: aconst_null\n-        25: invokevirtual #8                  // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-        28: putfield      #9                  // Field theUnsafe:Ljava/lang/Object;\n+        25: invokevirtual #30                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+        28: putfield      #34                 // Field theUnsafe:Ljava/lang/Object;\n         31: aload_0\n         32: aload_1\n-        33: ldc           #10                 // String invokeCleaner\n+        33: ldc           #37                 // String invokeCleaner\n         35: iconst_1\n-        36: anewarray     #11                 // class java/lang/Class\n+        36: anewarray     #13                 // class java/lang/Class\n         39: dup\n         40: iconst_0\n-        41: ldc           #12                 // class java/nio/ByteBuffer\n+        41: ldc           #39                 // class java/nio/ByteBuffer\n         43: aastore\n-        44: invokevirtual #13                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n-        47: putfield      #14                 // Field invokeCleaner:Ljava/lang/reflect/Method;\n+        44: invokevirtual #41                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n+        47: putfield      #45                 // Field invokeCleaner:Ljava/lang/reflect/Method;\n         50: return\n       LineNumberTable:\n         line 65: 0\n         line 66: 4\n         line 67: 10\n         line 68: 17\n         line 69: 22\n@@ -138,24 +138,24 @@\n \n   public void clean(java.nio.ByteBuffer) throws java.lang.ReflectiveOperationException;\n     descriptor: (Ljava/nio/ByteBuffer;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #14                 // Field invokeCleaner:Ljava/lang/reflect/Method;\n+         1: getfield      #45                 // Field invokeCleaner:Ljava/lang/reflect/Method;\n          4: aload_0\n-         5: getfield      #9                  // Field theUnsafe:Ljava/lang/Object;\n+         5: getfield      #34                 // Field theUnsafe:Ljava/lang/Object;\n          8: iconst_1\n-         9: anewarray     #15                 // class java/lang/Object\n+         9: anewarray     #8                  // class java/lang/Object\n         12: dup\n         13: iconst_0\n         14: aload_1\n         15: aastore\n-        16: invokevirtual #16                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n+        16: invokevirtual #48                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n         19: pop\n         20: return\n       LineNumberTable:\n         line 75: 0\n         line 76: 20\n     Exceptions:\n       throws java.lang.ReflectiveOperationException\n@@ -171,10 +171,10 @@\n       LineNumberTable:\n         line 60: 0\n     Exceptions:\n       throws java.lang.ReflectiveOperationException, java.lang.SecurityException\n }\n SourceFile: \"ByteBufferCleaner.java\"\n InnerClasses:\n-  static #32;                             // class org/apache/commons/io/input/ByteBufferCleaner$1\n-  private static #54= #17 of #52;         // Java9Cleaner=class org/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner of class org/apache/commons/io/input/ByteBufferCleaner\n-  private static #56= #18 of #52;         // Cleaner=class org/apache/commons/io/input/ByteBufferCleaner$Cleaner of class org/apache/commons/io/input/ByteBufferCleaner\n+  private static #71= #2 of #69;          // Java9Cleaner=class org/apache/commons/io/input/ByteBufferCleaner$Java9Cleaner of class org/apache/commons/io/input/ByteBufferCleaner\n+  private static #72= #54 of #69;         // Cleaner=class org/apache/commons/io/input/ByteBufferCleaner$Cleaner of class org/apache/commons/io/input/ByteBufferCleaner\n+  static #73;                             // class org/apache/commons/io/input/ByteBufferCleaner$1\n"}]}
