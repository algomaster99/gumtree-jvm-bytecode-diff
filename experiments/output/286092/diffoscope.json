{"diffoscope-json-version": 1, "source1": "first/DoubleMetaphone.class", "source2": "second/DoubleMetaphone.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,237 +1,237 @@\n-  SHA-256 checksum 0ad2a0cd8038832366a0ba0a314010484a54fa4ba44f11fd1bc98300c4dd6171\n+  SHA-256 checksum d8f3b54408121367fb2bfe753e8c39ffa012920bd4385d7380356995488370c5\n   Compiled from \"DoubleMetaphone.java\"\n public class org.apache.commons.codec.language.DoubleMetaphone implements org.apache.commons.codec.StringEncoder\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #194                        // org/apache/commons/codec/language/DoubleMetaphone\n   super_class: #219                       // java/lang/Object\n   interfaces: 1, fields: 6, methods: 39, attributes: 2\n Constant pool:\n-    #1 = Methodref          #219.#295     // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #194.#296     // org/apache/commons/codec/language/DoubleMetaphone.maxCodeLen:I\n-    #3 = Methodref          #194.#297     // org/apache/commons/codec/language/DoubleMetaphone.doubleMetaphone:(Ljava/lang/String;Z)Ljava/lang/String;\n-    #4 = Methodref          #194.#298     // org/apache/commons/codec/language/DoubleMetaphone.cleanInput:(Ljava/lang/String;)Ljava/lang/String;\n-    #5 = Methodref          #194.#299     // org/apache/commons/codec/language/DoubleMetaphone.isSlavoGermanic:(Ljava/lang/String;)Z\n-    #6 = Methodref          #194.#300     // org/apache/commons/codec/language/DoubleMetaphone.isSilentStart:(Ljava/lang/String;)Z\n-    #7 = Class              #301          // org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult\n-    #8 = Methodref          #194.#302     // org/apache/commons/codec/language/DoubleMetaphone.getMaxCodeLen:()I\n-    #9 = Methodref          #7.#303       // org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult.\"<init>\":(Lorg/apache/commons/codec/language/DoubleMetaphone;I)V\n-   #10 = Methodref          #7.#304       // org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult.isComplete:()Z\n-   #11 = Methodref          #32.#305      // java/lang/String.length:()I\n-   #12 = Methodref          #32.#306      // java/lang/String.charAt:(I)C\n-   #13 = Methodref          #194.#307     // org/apache/commons/codec/language/DoubleMetaphone.handleAEIOUY:(Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n-   #14 = Methodref          #7.#308       // org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult.append:(C)V\n-   #15 = Methodref          #194.#309     // org/apache/commons/codec/language/DoubleMetaphone.charAt:(Ljava/lang/String;I)C\n-   #16 = Methodref          #194.#310     // org/apache/commons/codec/language/DoubleMetaphone.handleC:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n-   #17 = Methodref          #194.#311     // org/apache/commons/codec/language/DoubleMetaphone.handleD:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n-   #18 = Methodref          #194.#312     // org/apache/commons/codec/language/DoubleMetaphone.handleG:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I\n-   #19 = Methodref          #194.#313     // org/apache/commons/codec/language/DoubleMetaphone.handleH:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n-   #20 = Methodref          #194.#314     // org/apache/commons/codec/language/DoubleMetaphone.handleJ:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I\n-   #21 = Methodref          #194.#315     // org/apache/commons/codec/language/DoubleMetaphone.handleL:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n-   #22 = Methodref          #194.#316     // org/apache/commons/codec/language/DoubleMetaphone.conditionM0:(Ljava/lang/String;I)Z\n-   #23 = Methodref          #194.#317     // org/apache/commons/codec/language/DoubleMetaphone.handleP:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n-   #24 = Methodref          #194.#318     // org/apache/commons/codec/language/DoubleMetaphone.handleR:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I\n-   #25 = Methodref          #194.#319     // org/apache/commons/codec/language/DoubleMetaphone.handleS:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I\n-   #26 = Methodref          #194.#320     // org/apache/commons/codec/language/DoubleMetaphone.handleT:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n-   #27 = Methodref          #194.#321     // org/apache/commons/codec/language/DoubleMetaphone.handleW:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n-   #28 = Methodref          #194.#322     // org/apache/commons/codec/language/DoubleMetaphone.handleX:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n-   #29 = Methodref          #194.#323     // org/apache/commons/codec/language/DoubleMetaphone.handleZ:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I\n-   #30 = Methodref          #7.#324       // org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult.getAlternate:()Ljava/lang/String;\n-   #31 = Methodref          #7.#325       // org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult.getPrimary:()Ljava/lang/String;\n-   #32 = Class              #326          // java/lang/String\n-   #33 = Class              #327          // org/apache/commons/codec/EncoderException\n-   #34 = String             #328          // DoubleMetaphone encode parameter is not of type String\n-   #35 = Methodref          #33.#329      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n-   #36 = Methodref          #194.#330     // org/apache/commons/codec/language/DoubleMetaphone.doubleMetaphone:(Ljava/lang/String;)Ljava/lang/String;\n-   #37 = Methodref          #194.#331     // org/apache/commons/codec/language/DoubleMetaphone.isDoubleMetaphoneEqual:(Ljava/lang/String;Ljava/lang/String;Z)Z\n-   #38 = Methodref          #332.#333     // org/apache/commons/codec/binary/StringUtils.equals:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z\n-   #39 = Methodref          #194.#334     // org/apache/commons/codec/language/DoubleMetaphone.conditionC0:(Ljava/lang/String;I)Z\n-   #40 = String             #335          // CAESAR\n-   #41 = Methodref          #194.#336     // org/apache/commons/codec/language/DoubleMetaphone.contains:(Ljava/lang/String;II[Ljava/lang/String;)Z\n-   #42 = String             #337          // CH\n-   #43 = Methodref          #194.#338     // org/apache/commons/codec/language/DoubleMetaphone.handleCH:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n-   #44 = String             #339          // CZ\n-   #45 = String             #340          // WICZ\n-   #46 = Methodref          #7.#341       // org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult.append:(CC)V\n-   #47 = String             #342          // CIA\n-   #48 = String             #343          // CC\n-   #49 = Methodref          #194.#344     // org/apache/commons/codec/language/DoubleMetaphone.handleCC:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n-   #50 = String             #345          // CK\n-   #51 = String             #346          // CG\n-   #52 = String             #347          // CQ\n-   #53 = String             #348          // CI\n-   #54 = String             #349          // CE\n-   #55 = String             #350          // CY\n-   #56 = String             #351          // CIO\n-   #57 = String             #352          // CIE\n-   #58 = String             #353          //  C\n-   #59 = String             #354          //  Q\n-   #60 = String             #355          //  G\n-   #61 = String             #356          // C\n-   #62 = String             #357          // K\n-   #63 = String             #358          // Q\n+    #1 = Methodref          #219.#292     // java/lang/Object.\"<init>\":()V\n+    #2 = Fieldref           #194.#293     // org/apache/commons/codec/language/DoubleMetaphone.maxCodeLen:I\n+    #3 = Methodref          #194.#294     // org/apache/commons/codec/language/DoubleMetaphone.doubleMetaphone:(Ljava/lang/String;Z)Ljava/lang/String;\n+    #4 = Methodref          #194.#295     // org/apache/commons/codec/language/DoubleMetaphone.cleanInput:(Ljava/lang/String;)Ljava/lang/String;\n+    #5 = Methodref          #194.#296     // org/apache/commons/codec/language/DoubleMetaphone.isSlavoGermanic:(Ljava/lang/String;)Z\n+    #6 = Methodref          #194.#297     // org/apache/commons/codec/language/DoubleMetaphone.isSilentStart:(Ljava/lang/String;)Z\n+    #7 = Class              #298          // org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult\n+    #8 = Methodref          #194.#299     // org/apache/commons/codec/language/DoubleMetaphone.getMaxCodeLen:()I\n+    #9 = Methodref          #7.#300       // org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult.\"<init>\":(Lorg/apache/commons/codec/language/DoubleMetaphone;I)V\n+   #10 = Methodref          #7.#301       // org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult.isComplete:()Z\n+   #11 = Methodref          #32.#302      // java/lang/String.length:()I\n+   #12 = Methodref          #32.#303      // java/lang/String.charAt:(I)C\n+   #13 = Methodref          #194.#304     // org/apache/commons/codec/language/DoubleMetaphone.handleAEIOUY:(Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n+   #14 = Methodref          #7.#305       // org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult.append:(C)V\n+   #15 = Methodref          #194.#306     // org/apache/commons/codec/language/DoubleMetaphone.charAt:(Ljava/lang/String;I)C\n+   #16 = Methodref          #194.#307     // org/apache/commons/codec/language/DoubleMetaphone.handleC:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n+   #17 = Methodref          #194.#308     // org/apache/commons/codec/language/DoubleMetaphone.handleD:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n+   #18 = Methodref          #194.#309     // org/apache/commons/codec/language/DoubleMetaphone.handleG:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I\n+   #19 = Methodref          #194.#310     // org/apache/commons/codec/language/DoubleMetaphone.handleH:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n+   #20 = Methodref          #194.#311     // org/apache/commons/codec/language/DoubleMetaphone.handleJ:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I\n+   #21 = Methodref          #194.#312     // org/apache/commons/codec/language/DoubleMetaphone.handleL:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n+   #22 = Methodref          #194.#313     // org/apache/commons/codec/language/DoubleMetaphone.conditionM0:(Ljava/lang/String;I)Z\n+   #23 = Methodref          #194.#314     // org/apache/commons/codec/language/DoubleMetaphone.handleP:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n+   #24 = Methodref          #194.#315     // org/apache/commons/codec/language/DoubleMetaphone.handleR:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I\n+   #25 = Methodref          #194.#316     // org/apache/commons/codec/language/DoubleMetaphone.handleS:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I\n+   #26 = Methodref          #194.#317     // org/apache/commons/codec/language/DoubleMetaphone.handleT:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n+   #27 = Methodref          #194.#318     // org/apache/commons/codec/language/DoubleMetaphone.handleW:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n+   #28 = Methodref          #194.#319     // org/apache/commons/codec/language/DoubleMetaphone.handleX:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n+   #29 = Methodref          #194.#320     // org/apache/commons/codec/language/DoubleMetaphone.handleZ:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I\n+   #30 = Methodref          #7.#321       // org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult.getAlternate:()Ljava/lang/String;\n+   #31 = Methodref          #7.#322       // org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult.getPrimary:()Ljava/lang/String;\n+   #32 = Class              #323          // java/lang/String\n+   #33 = Class              #324          // org/apache/commons/codec/EncoderException\n+   #34 = String             #325          // DoubleMetaphone encode parameter is not of type String\n+   #35 = Methodref          #33.#326      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+   #36 = Methodref          #194.#327     // org/apache/commons/codec/language/DoubleMetaphone.doubleMetaphone:(Ljava/lang/String;)Ljava/lang/String;\n+   #37 = Methodref          #194.#328     // org/apache/commons/codec/language/DoubleMetaphone.isDoubleMetaphoneEqual:(Ljava/lang/String;Ljava/lang/String;Z)Z\n+   #38 = Methodref          #329.#330     // org/apache/commons/codec/binary/StringUtils.equals:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z\n+   #39 = Methodref          #194.#331     // org/apache/commons/codec/language/DoubleMetaphone.conditionC0:(Ljava/lang/String;I)Z\n+   #40 = String             #332          // CAESAR\n+   #41 = Methodref          #194.#333     // org/apache/commons/codec/language/DoubleMetaphone.contains:(Ljava/lang/String;II[Ljava/lang/String;)Z\n+   #42 = String             #334          // CH\n+   #43 = Methodref          #194.#335     // org/apache/commons/codec/language/DoubleMetaphone.handleCH:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n+   #44 = String             #336          // CZ\n+   #45 = String             #337          // WICZ\n+   #46 = Methodref          #7.#338       // org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult.append:(CC)V\n+   #47 = String             #339          // CIA\n+   #48 = String             #340          // CC\n+   #49 = Methodref          #194.#341     // org/apache/commons/codec/language/DoubleMetaphone.handleCC:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n+   #50 = String             #342          // CK\n+   #51 = String             #343          // CG\n+   #52 = String             #344          // CQ\n+   #53 = String             #345          // CI\n+   #54 = String             #346          // CE\n+   #55 = String             #347          // CY\n+   #56 = String             #348          // CIO\n+   #57 = String             #349          // CIE\n+   #58 = String             #350          //  C\n+   #59 = String             #351          //  Q\n+   #60 = String             #352          //  G\n+   #61 = String             #353          // C\n+   #62 = String             #354          // K\n+   #63 = String             #355          // Q\n    #64 = String             #232          // I\n-   #65 = String             #359          // E\n-   #66 = String             #360          // H\n-   #67 = String             #361          // HU\n-   #68 = String             #362          // UCCEE\n-   #69 = String             #363          // UCCES\n-   #70 = String             #364          // KS\n-   #71 = Methodref          #7.#365       // org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult.append:(Ljava/lang/String;)V\n-   #72 = String             #366          // CHAE\n-   #73 = Methodref          #194.#367     // org/apache/commons/codec/language/DoubleMetaphone.conditionCH0:(Ljava/lang/String;I)Z\n-   #74 = Methodref          #194.#368     // org/apache/commons/codec/language/DoubleMetaphone.conditionCH1:(Ljava/lang/String;I)Z\n-   #75 = String             #369          // MC\n-   #76 = String             #370          // DG\n-   #77 = String             #371          // Y\n-   #78 = String             #372          // TK\n-   #79 = String             #373          // DT\n-   #80 = String             #374          // DD\n-   #81 = Methodref          #194.#375     // org/apache/commons/codec/language/DoubleMetaphone.handleGH:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n-   #82 = Methodref          #194.#376     // org/apache/commons/codec/language/DoubleMetaphone.isVowel:(C)Z\n-   #83 = String             #377          // KN\n-   #84 = String             #378          // N\n-   #85 = Methodref          #7.#379       // org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult.append:(Ljava/lang/String;Ljava/lang/String;)V\n-   #86 = String             #380          // EY\n-   #87 = String             #381          // LI\n-   #88 = String             #382          // KL\n-   #89 = String             #383          // L\n-   #90 = Fieldref           #194.#384     // org/apache/commons/codec/language/DoubleMetaphone.ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER:[Ljava/lang/String;\n-   #91 = String             #385          // ER\n-   #92 = String             #386          // DANGER\n-   #93 = String             #387          // RANGER\n-   #94 = String             #388          // MANGER\n-   #95 = String             #389          // RGY\n-   #96 = String             #390          // OGY\n-   #97 = String             #391          // AGGI\n-   #98 = String             #392          // OGGI\n-   #99 = String             #393          // VAN\n-  #100 = String             #394          // VON\n-  #101 = String             #395          // SCH\n-  #102 = String             #396          // ET\n-  #103 = String             #397          // IER\n-  #104 = String             #398          // B\n-  #105 = String             #399          // D\n-  #106 = String             #400          // G\n-  #107 = String             #401          // R\n-  #108 = String             #402          // T\n-  #109 = String             #403          // JOSE\n-  #110 = String             #404          // SAN\n-  #111 = Fieldref           #194.#405     // org/apache/commons/codec/language/DoubleMetaphone.L_T_K_S_N_M_B_Z:[Ljava/lang/String;\n-  #112 = String             #406          // S\n-  #113 = Methodref          #194.#407     // org/apache/commons/codec/language/DoubleMetaphone.conditionL0:(Ljava/lang/String;I)Z\n-  #114 = Methodref          #7.#408       // org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult.appendPrimary:(C)V\n-  #115 = String             #409          // P\n-  #116 = String             #410          // IE\n-  #117 = String             #411          // ME\n-  #118 = String             #412          // MA\n-  #119 = Methodref          #7.#413       // org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult.appendAlternate:(C)V\n-  #120 = String             #414          // ISL\n-  #121 = String             #415          // YSL\n-  #122 = String             #416          // SUGAR\n-  #123 = String             #417          // SH\n-  #124 = String             #418          // HEIM\n-  #125 = String             #419          // HOEK\n-  #126 = String             #420          // HOLM\n-  #127 = String             #421          // HOLZ\n-  #128 = String             #422          // SIO\n-  #129 = String             #423          // SIA\n-  #130 = String             #424          // SIAN\n-  #131 = String             #425          // M\n-  #132 = String             #426          // W\n-  #133 = String             #427          // Z\n-  #134 = String             #428          // SC\n-  #135 = Methodref          #194.#429     // org/apache/commons/codec/language/DoubleMetaphone.handleSC:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n-  #136 = String             #430          // AI\n-  #137 = String             #431          // OI\n-  #138 = String             #432          // OO\n-  #139 = String             #433          // EN\n-  #140 = String             #434          // UY\n-  #141 = String             #435          // ED\n-  #142 = String             #436          // EM\n-  #143 = String             #437          // X\n-  #144 = String             #438          // SK\n-  #145 = String             #439          // TION\n-  #146 = String             #440          // TIA\n-  #147 = String             #441          // TCH\n-  #148 = String             #442          // TH\n-  #149 = String             #443          // TTH\n-  #150 = String             #444          // OM\n-  #151 = String             #445          // AM\n-  #152 = String             #446          // WR\n-  #153 = String             #447          // WH\n-  #154 = String             #448          // EWSKI\n-  #155 = String             #449          // EWSKY\n-  #156 = String             #450          // OWSKI\n-  #157 = String             #451          // OWSKY\n-  #158 = String             #452          // WITZ\n-  #159 = String             #453          // TS\n-  #160 = String             #454          // FX\n-  #161 = String             #455          // IAU\n-  #162 = String             #456          // EAU\n-  #163 = String             #457          // AU\n-  #164 = String             #458          // OU\n-  #165 = String             #459          // ZO\n-  #166 = String             #460          // ZI\n-  #167 = String             #461          // ZA\n-  #168 = String             #462          // CHIA\n-  #169 = String             #463          // ACH\n-  #170 = String             #464          // BACHER\n-  #171 = String             #465          // MACHER\n-  #172 = String             #466          // HARAC\n-  #173 = String             #467          // HARIS\n-  #174 = String             #468          // HOR\n-  #175 = String             #469          // HYM\n-  #176 = String             #470          // HIA\n-  #177 = String             #471          // HEM\n-  #178 = String             #472          // CHORE\n-  #179 = String             #473          // ORCHES\n-  #180 = String             #474          // ARCHIT\n-  #181 = String             #475          // ORCHID\n-  #182 = String             #476          // A\n-  #183 = String             #477          // O\n-  #184 = String             #478          // U\n-  #185 = Fieldref           #194.#479     // org/apache/commons/codec/language/DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE:[Ljava/lang/String;\n-  #186 = String             #480          // ILLO\n-  #187 = String             #481          // ILLA\n-  #188 = String             #482          // ALLE\n-  #189 = String             #483          // AS\n-  #190 = String             #484          // OS\n-  #191 = String             #485          // UMB\n-  #192 = Methodref          #32.#486      // java/lang/String.indexOf:(I)I\n-  #193 = Methodref          #32.#487      // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n-  #194 = Class              #488          // org/apache/commons/codec/language/DoubleMetaphone\n-  #195 = String             #489          // AEIOUY\n-  #196 = Fieldref           #194.#490     // org/apache/commons/codec/language/DoubleMetaphone.SILENT_START:[Ljava/lang/String;\n-  #197 = Methodref          #32.#491      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-  #198 = Methodref          #32.#492      // java/lang/String.trim:()Ljava/lang/String;\n-  #199 = Methodref          #32.#493      // java/lang/String.isEmpty:()Z\n-  #200 = Fieldref           #494.#495     // java/util/Locale.ENGLISH:Ljava/util/Locale;\n-  #201 = Methodref          #32.#496      // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #202 = Class              #497          // java/lang/Character\n-  #203 = Methodref          #32.#498      // java/lang/String.substring:(II)Ljava/lang/String;\n-  #204 = Methodref          #32.#499      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-  #205 = String             #500          // GN\n-  #206 = String             #501          // PN\n-  #207 = String             #502          // PS\n-  #208 = String             #503          // F\n-  #209 = String             #504          // V\n-  #210 = String             #505          //\n-  #211 = String             #506          // ES\n-  #212 = String             #507          // EP\n-  #213 = String             #508          // EB\n-  #214 = String             #509          // EL\n-  #215 = String             #510          // IB\n-  #216 = String             #511          // IL\n-  #217 = String             #512          // IN\n-  #218 = String             #513          // EI\n-  #219 = Class              #514          // java/lang/Object\n-  #220 = Class              #515          // org/apache/commons/codec/StringEncoder\n+   #65 = String             #356          // E\n+   #66 = String             #357          // H\n+   #67 = String             #358          // HU\n+   #68 = String             #359          // UCCEE\n+   #69 = String             #360          // UCCES\n+   #70 = String             #361          // KS\n+   #71 = Methodref          #7.#362       // org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult.append:(Ljava/lang/String;)V\n+   #72 = String             #363          // CHAE\n+   #73 = Methodref          #194.#364     // org/apache/commons/codec/language/DoubleMetaphone.conditionCH0:(Ljava/lang/String;I)Z\n+   #74 = Methodref          #194.#365     // org/apache/commons/codec/language/DoubleMetaphone.conditionCH1:(Ljava/lang/String;I)Z\n+   #75 = String             #366          // MC\n+   #76 = String             #367          // DG\n+   #77 = String             #368          // Y\n+   #78 = String             #369          // TK\n+   #79 = String             #370          // DT\n+   #80 = String             #371          // DD\n+   #81 = Methodref          #194.#372     // org/apache/commons/codec/language/DoubleMetaphone.handleGH:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n+   #82 = Methodref          #194.#373     // org/apache/commons/codec/language/DoubleMetaphone.isVowel:(C)Z\n+   #83 = String             #374          // KN\n+   #84 = String             #375          // N\n+   #85 = Methodref          #7.#376       // org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult.append:(Ljava/lang/String;Ljava/lang/String;)V\n+   #86 = String             #377          // EY\n+   #87 = String             #378          // LI\n+   #88 = String             #379          // KL\n+   #89 = String             #380          // L\n+   #90 = Fieldref           #194.#381     // org/apache/commons/codec/language/DoubleMetaphone.ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER:[Ljava/lang/String;\n+   #91 = String             #382          // ER\n+   #92 = String             #383          // DANGER\n+   #93 = String             #384          // RANGER\n+   #94 = String             #385          // MANGER\n+   #95 = String             #386          // RGY\n+   #96 = String             #387          // OGY\n+   #97 = String             #388          // AGGI\n+   #98 = String             #389          // OGGI\n+   #99 = String             #390          // VAN\n+  #100 = String             #391          // VON\n+  #101 = String             #392          // SCH\n+  #102 = String             #393          // ET\n+  #103 = String             #394          // IER\n+  #104 = String             #395          // B\n+  #105 = String             #396          // D\n+  #106 = String             #397          // G\n+  #107 = String             #398          // R\n+  #108 = String             #399          // T\n+  #109 = String             #400          // JOSE\n+  #110 = String             #401          // SAN\n+  #111 = Fieldref           #194.#402     // org/apache/commons/codec/language/DoubleMetaphone.L_T_K_S_N_M_B_Z:[Ljava/lang/String;\n+  #112 = String             #403          // S\n+  #113 = Methodref          #194.#404     // org/apache/commons/codec/language/DoubleMetaphone.conditionL0:(Ljava/lang/String;I)Z\n+  #114 = Methodref          #7.#405       // org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult.appendPrimary:(C)V\n+  #115 = String             #406          // P\n+  #116 = String             #407          // IE\n+  #117 = String             #408          // ME\n+  #118 = String             #409          // MA\n+  #119 = Methodref          #7.#410       // org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult.appendAlternate:(C)V\n+  #120 = String             #411          // ISL\n+  #121 = String             #412          // YSL\n+  #122 = String             #413          // SUGAR\n+  #123 = String             #414          // SH\n+  #124 = String             #415          // HEIM\n+  #125 = String             #416          // HOEK\n+  #126 = String             #417          // HOLM\n+  #127 = String             #418          // HOLZ\n+  #128 = String             #419          // SIO\n+  #129 = String             #420          // SIA\n+  #130 = String             #421          // SIAN\n+  #131 = String             #422          // M\n+  #132 = String             #423          // W\n+  #133 = String             #424          // Z\n+  #134 = String             #425          // SC\n+  #135 = Methodref          #194.#426     // org/apache/commons/codec/language/DoubleMetaphone.handleSC:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n+  #136 = String             #427          // AI\n+  #137 = String             #428          // OI\n+  #138 = String             #429          // OO\n+  #139 = String             #430          // EN\n+  #140 = String             #431          // UY\n+  #141 = String             #432          // ED\n+  #142 = String             #433          // EM\n+  #143 = String             #434          // X\n+  #144 = String             #435          // SK\n+  #145 = String             #436          // TION\n+  #146 = String             #437          // TIA\n+  #147 = String             #438          // TCH\n+  #148 = String             #439          // TH\n+  #149 = String             #440          // TTH\n+  #150 = String             #441          // OM\n+  #151 = String             #442          // AM\n+  #152 = String             #443          // WR\n+  #153 = String             #444          // WH\n+  #154 = String             #445          // EWSKI\n+  #155 = String             #446          // EWSKY\n+  #156 = String             #447          // OWSKI\n+  #157 = String             #448          // OWSKY\n+  #158 = String             #449          // WITZ\n+  #159 = String             #450          // TS\n+  #160 = String             #451          // FX\n+  #161 = String             #452          // IAU\n+  #162 = String             #453          // EAU\n+  #163 = String             #454          // AU\n+  #164 = String             #455          // OU\n+  #165 = String             #456          // ZO\n+  #166 = String             #457          // ZI\n+  #167 = String             #458          // ZA\n+  #168 = String             #459          // CHIA\n+  #169 = String             #460          // ACH\n+  #170 = String             #461          // BACHER\n+  #171 = String             #462          // MACHER\n+  #172 = String             #463          // HARAC\n+  #173 = String             #464          // HARIS\n+  #174 = String             #465          // HOR\n+  #175 = String             #466          // HYM\n+  #176 = String             #467          // HIA\n+  #177 = String             #468          // HEM\n+  #178 = String             #469          // CHORE\n+  #179 = String             #470          // ORCHES\n+  #180 = String             #471          // ARCHIT\n+  #181 = String             #472          // ORCHID\n+  #182 = String             #473          // A\n+  #183 = String             #474          // O\n+  #184 = String             #475          // U\n+  #185 = Fieldref           #194.#476     // org/apache/commons/codec/language/DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE:[Ljava/lang/String;\n+  #186 = String             #477          // ILLO\n+  #187 = String             #478          // ILLA\n+  #188 = String             #479          // ALLE\n+  #189 = String             #480          // AS\n+  #190 = String             #481          // OS\n+  #191 = String             #482          // UMB\n+  #192 = Methodref          #32.#483      // java/lang/String.indexOf:(I)I\n+  #193 = Methodref          #32.#484      // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+  #194 = Class              #485          // org/apache/commons/codec/language/DoubleMetaphone\n+  #195 = String             #486          // AEIOUY\n+  #196 = Fieldref           #194.#487     // org/apache/commons/codec/language/DoubleMetaphone.SILENT_START:[Ljava/lang/String;\n+  #197 = Methodref          #32.#488      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+  #198 = Methodref          #32.#489      // java/lang/String.trim:()Ljava/lang/String;\n+  #199 = Methodref          #32.#490      // java/lang/String.isEmpty:()Z\n+  #200 = Fieldref           #491.#492     // java/util/Locale.ENGLISH:Ljava/util/Locale;\n+  #201 = Methodref          #32.#493      // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #202 = Class              #494          // java/lang/Character\n+  #203 = Methodref          #32.#495      // java/lang/String.substring:(II)Ljava/lang/String;\n+  #204 = Methodref          #32.#496      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+  #205 = String             #497          // GN\n+  #206 = String             #498          // PN\n+  #207 = String             #499          // PS\n+  #208 = String             #500          // F\n+  #209 = String             #501          // V\n+  #210 = String             #502          //\n+  #211 = String             #503          // ES\n+  #212 = String             #504          // EP\n+  #213 = String             #505          // EB\n+  #214 = String             #506          // EL\n+  #215 = String             #507          // IB\n+  #216 = String             #508          // IL\n+  #217 = String             #509          // IN\n+  #218 = String             #510          // EI\n+  #219 = Class              #511          // java/lang/Object\n+  #220 = Class              #512          // org/apache/commons/codec/StringEncoder\n   #221 = Utf8               DoubleMetaphoneResult\n   #222 = Utf8               InnerClasses\n   #223 = Utf8               VOWELS\n   #224 = Utf8               Ljava/lang/String;\n   #225 = Utf8               ConstantValue\n   #226 = Utf8               SILENT_START\n   #227 = Utf8               [Ljava/lang/String;\n@@ -244,321 +244,318 @@\n   #234 = Utf8               ()V\n   #235 = Utf8               Code\n   #236 = Utf8               LineNumberTable\n   #237 = Utf8               doubleMetaphone\n   #238 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n   #239 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n   #240 = Utf8               StackMapTable\n-  #241 = Class              #301          // org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult\n-  #242 = Class              #326          // java/lang/String\n-  #243 = Utf8               encode\n-  #244 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #245 = Utf8               Exceptions\n-  #246 = Utf8               isDoubleMetaphoneEqual\n-  #247 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n-  #248 = Utf8               (Ljava/lang/String;Ljava/lang/String;Z)Z\n-  #249 = Utf8               getMaxCodeLen\n-  #250 = Utf8               ()I\n-  #251 = Utf8               setMaxCodeLen\n-  #252 = Utf8               (I)V\n-  #253 = Utf8               handleAEIOUY\n-  #254 = Utf8               (Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n-  #255 = Utf8               handleC\n-  #256 = Utf8               (Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n-  #257 = Utf8               handleCC\n-  #258 = Utf8               handleCH\n-  #259 = Utf8               handleD\n-  #260 = Utf8               handleG\n-  #261 = Utf8               (Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I\n-  #262 = Utf8               handleGH\n-  #263 = Utf8               handleH\n-  #264 = Utf8               handleJ\n-  #265 = Utf8               handleL\n-  #266 = Utf8               handleP\n-  #267 = Utf8               handleR\n-  #268 = Utf8               handleS\n-  #269 = Utf8               handleSC\n-  #270 = Utf8               handleT\n-  #271 = Utf8               handleW\n-  #272 = Utf8               handleX\n-  #273 = Utf8               handleZ\n-  #274 = Utf8               conditionC0\n-  #275 = Utf8               (Ljava/lang/String;I)Z\n-  #276 = Utf8               conditionCH0\n-  #277 = Utf8               conditionCH1\n-  #278 = Utf8               conditionL0\n-  #279 = Utf8               conditionM0\n-  #280 = Utf8               isSlavoGermanic\n-  #281 = Utf8               (Ljava/lang/String;)Z\n-  #282 = Utf8               isVowel\n-  #283 = Utf8               (C)Z\n-  #284 = Utf8               isSilentStart\n-  #285 = Class              #488          // org/apache/commons/codec/language/DoubleMetaphone\n-  #286 = Class              #227          // \"[Ljava/lang/String;\"\n-  #287 = Utf8               cleanInput\n-  #288 = Utf8               charAt\n-  #289 = Utf8               (Ljava/lang/String;I)C\n-  #290 = Utf8               contains\n-  #291 = Utf8               (Ljava/lang/String;II[Ljava/lang/String;)Z\n-  #292 = Utf8               <clinit>\n-  #293 = Utf8               SourceFile\n-  #294 = Utf8               DoubleMetaphone.java\n-  #295 = NameAndType        #233:#234     // \"<init>\":()V\n-  #296 = NameAndType        #231:#232     // maxCodeLen:I\n-  #297 = NameAndType        #237:#239     // doubleMetaphone:(Ljava/lang/String;Z)Ljava/lang/String;\n-  #298 = NameAndType        #287:#238     // cleanInput:(Ljava/lang/String;)Ljava/lang/String;\n-  #299 = NameAndType        #280:#281     // isSlavoGermanic:(Ljava/lang/String;)Z\n-  #300 = NameAndType        #284:#281     // isSilentStart:(Ljava/lang/String;)Z\n-  #301 = Utf8               org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult\n-  #302 = NameAndType        #249:#250     // getMaxCodeLen:()I\n-  #303 = NameAndType        #233:#516     // \"<init>\":(Lorg/apache/commons/codec/language/DoubleMetaphone;I)V\n-  #304 = NameAndType        #517:#518     // isComplete:()Z\n-  #305 = NameAndType        #519:#250     // length:()I\n-  #306 = NameAndType        #288:#520     // charAt:(I)C\n-  #307 = NameAndType        #253:#254     // handleAEIOUY:(Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n-  #308 = NameAndType        #521:#522     // append:(C)V\n-  #309 = NameAndType        #288:#289     // charAt:(Ljava/lang/String;I)C\n-  #310 = NameAndType        #255:#256     // handleC:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n-  #311 = NameAndType        #259:#256     // handleD:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n-  #312 = NameAndType        #260:#261     // handleG:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I\n-  #313 = NameAndType        #263:#256     // handleH:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n-  #314 = NameAndType        #264:#261     // handleJ:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I\n-  #315 = NameAndType        #265:#256     // handleL:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n-  #316 = NameAndType        #279:#275     // conditionM0:(Ljava/lang/String;I)Z\n-  #317 = NameAndType        #266:#256     // handleP:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n-  #318 = NameAndType        #267:#261     // handleR:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I\n-  #319 = NameAndType        #268:#261     // handleS:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I\n-  #320 = NameAndType        #270:#256     // handleT:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n-  #321 = NameAndType        #271:#256     // handleW:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n-  #322 = NameAndType        #272:#256     // handleX:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n-  #323 = NameAndType        #273:#261     // handleZ:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I\n-  #324 = NameAndType        #523:#524     // getAlternate:()Ljava/lang/String;\n-  #325 = NameAndType        #525:#524     // getPrimary:()Ljava/lang/String;\n-  #326 = Utf8               java/lang/String\n-  #327 = Utf8               org/apache/commons/codec/EncoderException\n-  #328 = Utf8               DoubleMetaphone encode parameter is not of type String\n-  #329 = NameAndType        #233:#526     // \"<init>\":(Ljava/lang/String;)V\n-  #330 = NameAndType        #237:#238     // doubleMetaphone:(Ljava/lang/String;)Ljava/lang/String;\n-  #331 = NameAndType        #246:#248     // isDoubleMetaphoneEqual:(Ljava/lang/String;Ljava/lang/String;Z)Z\n-  #332 = Class              #527          // org/apache/commons/codec/binary/StringUtils\n-  #333 = NameAndType        #528:#529     // equals:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z\n-  #334 = NameAndType        #274:#275     // conditionC0:(Ljava/lang/String;I)Z\n-  #335 = Utf8               CAESAR\n-  #336 = NameAndType        #290:#291     // contains:(Ljava/lang/String;II[Ljava/lang/String;)Z\n-  #337 = Utf8               CH\n-  #338 = NameAndType        #258:#256     // handleCH:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n-  #339 = Utf8               CZ\n-  #340 = Utf8               WICZ\n-  #341 = NameAndType        #521:#530     // append:(CC)V\n-  #342 = Utf8               CIA\n-  #343 = Utf8               CC\n-  #344 = NameAndType        #257:#256     // handleCC:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n-  #345 = Utf8               CK\n-  #346 = Utf8               CG\n-  #347 = Utf8               CQ\n-  #348 = Utf8               CI\n-  #349 = Utf8               CE\n-  #350 = Utf8               CY\n-  #351 = Utf8               CIO\n-  #352 = Utf8               CIE\n-  #353 = Utf8                C\n-  #354 = Utf8                Q\n-  #355 = Utf8                G\n-  #356 = Utf8               C\n-  #357 = Utf8               K\n-  #358 = Utf8               Q\n-  #359 = Utf8               E\n-  #360 = Utf8               H\n-  #361 = Utf8               HU\n-  #362 = Utf8               UCCEE\n-  #363 = Utf8               UCCES\n-  #364 = Utf8               KS\n-  #365 = NameAndType        #521:#526     // append:(Ljava/lang/String;)V\n-  #366 = Utf8               CHAE\n-  #367 = NameAndType        #276:#275     // conditionCH0:(Ljava/lang/String;I)Z\n-  #368 = NameAndType        #277:#275     // conditionCH1:(Ljava/lang/String;I)Z\n-  #369 = Utf8               MC\n-  #370 = Utf8               DG\n-  #371 = Utf8               Y\n-  #372 = Utf8               TK\n-  #373 = Utf8               DT\n-  #374 = Utf8               DD\n-  #375 = NameAndType        #262:#256     // handleGH:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n-  #376 = NameAndType        #282:#283     // isVowel:(C)Z\n-  #377 = Utf8               KN\n-  #378 = Utf8               N\n-  #379 = NameAndType        #521:#531     // append:(Ljava/lang/String;Ljava/lang/String;)V\n-  #380 = Utf8               EY\n-  #381 = Utf8               LI\n-  #382 = Utf8               KL\n-  #383 = Utf8               L\n-  #384 = NameAndType        #229:#227     // ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER:[Ljava/lang/String;\n-  #385 = Utf8               ER\n-  #386 = Utf8               DANGER\n-  #387 = Utf8               RANGER\n-  #388 = Utf8               MANGER\n-  #389 = Utf8               RGY\n-  #390 = Utf8               OGY\n-  #391 = Utf8               AGGI\n-  #392 = Utf8               OGGI\n-  #393 = Utf8               VAN\n-  #394 = Utf8               VON\n-  #395 = Utf8               SCH\n-  #396 = Utf8               ET\n-  #397 = Utf8               IER\n-  #398 = Utf8               B\n-  #399 = Utf8               D\n-  #400 = Utf8               G\n-  #401 = Utf8               R\n-  #402 = Utf8               T\n-  #403 = Utf8               JOSE\n-  #404 = Utf8               SAN\n-  #405 = NameAndType        #230:#227     // L_T_K_S_N_M_B_Z:[Ljava/lang/String;\n-  #406 = Utf8               S\n-  #407 = NameAndType        #278:#275     // conditionL0:(Ljava/lang/String;I)Z\n-  #408 = NameAndType        #532:#522     // appendPrimary:(C)V\n-  #409 = Utf8               P\n-  #410 = Utf8               IE\n-  #411 = Utf8               ME\n-  #412 = Utf8               MA\n-  #413 = NameAndType        #533:#522     // appendAlternate:(C)V\n-  #414 = Utf8               ISL\n-  #415 = Utf8               YSL\n-  #416 = Utf8               SUGAR\n-  #417 = Utf8               SH\n-  #418 = Utf8               HEIM\n-  #419 = Utf8               HOEK\n-  #420 = Utf8               HOLM\n-  #421 = Utf8               HOLZ\n-  #422 = Utf8               SIO\n-  #423 = Utf8               SIA\n-  #424 = Utf8               SIAN\n-  #425 = Utf8               M\n-  #426 = Utf8               W\n-  #427 = Utf8               Z\n-  #428 = Utf8               SC\n-  #429 = NameAndType        #269:#256     // handleSC:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n-  #430 = Utf8               AI\n-  #431 = Utf8               OI\n-  #432 = Utf8               OO\n-  #433 = Utf8               EN\n-  #434 = Utf8               UY\n-  #435 = Utf8               ED\n-  #436 = Utf8               EM\n-  #437 = Utf8               X\n-  #438 = Utf8               SK\n-  #439 = Utf8               TION\n-  #440 = Utf8               TIA\n-  #441 = Utf8               TCH\n-  #442 = Utf8               TH\n-  #443 = Utf8               TTH\n-  #444 = Utf8               OM\n-  #445 = Utf8               AM\n-  #446 = Utf8               WR\n-  #447 = Utf8               WH\n-  #448 = Utf8               EWSKI\n-  #449 = Utf8               EWSKY\n-  #450 = Utf8               OWSKI\n-  #451 = Utf8               OWSKY\n-  #452 = Utf8               WITZ\n-  #453 = Utf8               TS\n-  #454 = Utf8               FX\n-  #455 = Utf8               IAU\n-  #456 = Utf8               EAU\n-  #457 = Utf8               AU\n-  #458 = Utf8               OU\n-  #459 = Utf8               ZO\n-  #460 = Utf8               ZI\n-  #461 = Utf8               ZA\n-  #462 = Utf8               CHIA\n-  #463 = Utf8               ACH\n-  #464 = Utf8               BACHER\n-  #465 = Utf8               MACHER\n-  #466 = Utf8               HARAC\n-  #467 = Utf8               HARIS\n-  #468 = Utf8               HOR\n-  #469 = Utf8               HYM\n-  #470 = Utf8               HIA\n-  #471 = Utf8               HEM\n-  #472 = Utf8               CHORE\n-  #473 = Utf8               ORCHES\n-  #474 = Utf8               ARCHIT\n-  #475 = Utf8               ORCHID\n-  #476 = Utf8               A\n-  #477 = Utf8               O\n-  #478 = Utf8               U\n-  #479 = NameAndType        #228:#227     // L_R_N_M_B_H_F_V_W_SPACE:[Ljava/lang/String;\n-  #480 = Utf8               ILLO\n-  #481 = Utf8               ILLA\n-  #482 = Utf8               ALLE\n-  #483 = Utf8               AS\n-  #484 = Utf8               OS\n-  #485 = Utf8               UMB\n-  #486 = NameAndType        #534:#535     // indexOf:(I)I\n-  #487 = NameAndType        #290:#536     // contains:(Ljava/lang/CharSequence;)Z\n-  #488 = Utf8               org/apache/commons/codec/language/DoubleMetaphone\n-  #489 = Utf8               AEIOUY\n-  #490 = NameAndType        #226:#227     // SILENT_START:[Ljava/lang/String;\n-  #491 = NameAndType        #537:#281     // startsWith:(Ljava/lang/String;)Z\n-  #492 = NameAndType        #538:#524     // trim:()Ljava/lang/String;\n-  #493 = NameAndType        #539:#518     // isEmpty:()Z\n-  #494 = Class              #540          // java/util/Locale\n-  #495 = NameAndType        #541:#542     // ENGLISH:Ljava/util/Locale;\n-  #496 = NameAndType        #543:#544     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #497 = Utf8               java/lang/Character\n-  #498 = NameAndType        #545:#546     // substring:(II)Ljava/lang/String;\n-  #499 = NameAndType        #528:#547     // equals:(Ljava/lang/Object;)Z\n-  #500 = Utf8               GN\n-  #501 = Utf8               PN\n-  #502 = Utf8               PS\n-  #503 = Utf8               F\n-  #504 = Utf8               V\n-  #505 = Utf8\n-  #506 = Utf8               ES\n-  #507 = Utf8               EP\n-  #508 = Utf8               EB\n-  #509 = Utf8               EL\n-  #510 = Utf8               IB\n-  #511 = Utf8               IL\n-  #512 = Utf8               IN\n-  #513 = Utf8               EI\n-  #514 = Utf8               java/lang/Object\n-  #515 = Utf8               org/apache/commons/codec/StringEncoder\n-  #516 = Utf8               (Lorg/apache/commons/codec/language/DoubleMetaphone;I)V\n-  #517 = Utf8               isComplete\n-  #518 = Utf8               ()Z\n-  #519 = Utf8               length\n-  #520 = Utf8               (I)C\n-  #521 = Utf8               append\n-  #522 = Utf8               (C)V\n-  #523 = Utf8               getAlternate\n-  #524 = Utf8               ()Ljava/lang/String;\n-  #525 = Utf8               getPrimary\n-  #526 = Utf8               (Ljava/lang/String;)V\n-  #527 = Utf8               org/apache/commons/codec/binary/StringUtils\n-  #528 = Utf8               equals\n-  #529 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z\n-  #530 = Utf8               (CC)V\n-  #531 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n-  #532 = Utf8               appendPrimary\n-  #533 = Utf8               appendAlternate\n-  #534 = Utf8               indexOf\n-  #535 = Utf8               (I)I\n-  #536 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #537 = Utf8               startsWith\n-  #538 = Utf8               trim\n-  #539 = Utf8               isEmpty\n-  #540 = Utf8               java/util/Locale\n-  #541 = Utf8               ENGLISH\n-  #542 = Utf8               Ljava/util/Locale;\n-  #543 = Utf8               toUpperCase\n-  #544 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n-  #545 = Utf8               substring\n-  #546 = Utf8               (II)Ljava/lang/String;\n-  #547 = Utf8               (Ljava/lang/Object;)Z\n+  #241 = Utf8               encode\n+  #242 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #243 = Utf8               Exceptions\n+  #244 = Utf8               isDoubleMetaphoneEqual\n+  #245 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n+  #246 = Utf8               (Ljava/lang/String;Ljava/lang/String;Z)Z\n+  #247 = Utf8               getMaxCodeLen\n+  #248 = Utf8               ()I\n+  #249 = Utf8               setMaxCodeLen\n+  #250 = Utf8               (I)V\n+  #251 = Utf8               handleAEIOUY\n+  #252 = Utf8               (Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n+  #253 = Utf8               handleC\n+  #254 = Utf8               (Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n+  #255 = Utf8               handleCC\n+  #256 = Utf8               handleCH\n+  #257 = Utf8               handleD\n+  #258 = Utf8               handleG\n+  #259 = Utf8               (Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I\n+  #260 = Utf8               handleGH\n+  #261 = Utf8               handleH\n+  #262 = Utf8               handleJ\n+  #263 = Utf8               handleL\n+  #264 = Utf8               handleP\n+  #265 = Utf8               handleR\n+  #266 = Utf8               handleS\n+  #267 = Utf8               handleSC\n+  #268 = Utf8               handleT\n+  #269 = Utf8               handleW\n+  #270 = Utf8               handleX\n+  #271 = Utf8               handleZ\n+  #272 = Utf8               conditionC0\n+  #273 = Utf8               (Ljava/lang/String;I)Z\n+  #274 = Utf8               conditionCH0\n+  #275 = Utf8               conditionCH1\n+  #276 = Utf8               conditionL0\n+  #277 = Utf8               conditionM0\n+  #278 = Utf8               isSlavoGermanic\n+  #279 = Utf8               (Ljava/lang/String;)Z\n+  #280 = Utf8               isVowel\n+  #281 = Utf8               (C)Z\n+  #282 = Utf8               isSilentStart\n+  #283 = Class              #227          // \"[Ljava/lang/String;\"\n+  #284 = Utf8               cleanInput\n+  #285 = Utf8               charAt\n+  #286 = Utf8               (Ljava/lang/String;I)C\n+  #287 = Utf8               contains\n+  #288 = Utf8               (Ljava/lang/String;II[Ljava/lang/String;)Z\n+  #289 = Utf8               <clinit>\n+  #290 = Utf8               SourceFile\n+  #291 = Utf8               DoubleMetaphone.java\n+  #292 = NameAndType        #233:#234     // \"<init>\":()V\n+  #293 = NameAndType        #231:#232     // maxCodeLen:I\n+  #294 = NameAndType        #237:#239     // doubleMetaphone:(Ljava/lang/String;Z)Ljava/lang/String;\n+  #295 = NameAndType        #284:#238     // cleanInput:(Ljava/lang/String;)Ljava/lang/String;\n+  #296 = NameAndType        #278:#279     // isSlavoGermanic:(Ljava/lang/String;)Z\n+  #297 = NameAndType        #282:#279     // isSilentStart:(Ljava/lang/String;)Z\n+  #298 = Utf8               org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult\n+  #299 = NameAndType        #247:#248     // getMaxCodeLen:()I\n+  #300 = NameAndType        #233:#513     // \"<init>\":(Lorg/apache/commons/codec/language/DoubleMetaphone;I)V\n+  #301 = NameAndType        #514:#515     // isComplete:()Z\n+  #302 = NameAndType        #516:#248     // length:()I\n+  #303 = NameAndType        #285:#517     // charAt:(I)C\n+  #304 = NameAndType        #251:#252     // handleAEIOUY:(Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n+  #305 = NameAndType        #518:#519     // append:(C)V\n+  #306 = NameAndType        #285:#286     // charAt:(Ljava/lang/String;I)C\n+  #307 = NameAndType        #253:#254     // handleC:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n+  #308 = NameAndType        #257:#254     // handleD:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n+  #309 = NameAndType        #258:#259     // handleG:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I\n+  #310 = NameAndType        #261:#254     // handleH:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n+  #311 = NameAndType        #262:#259     // handleJ:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I\n+  #312 = NameAndType        #263:#254     // handleL:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n+  #313 = NameAndType        #277:#273     // conditionM0:(Ljava/lang/String;I)Z\n+  #314 = NameAndType        #264:#254     // handleP:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n+  #315 = NameAndType        #265:#259     // handleR:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I\n+  #316 = NameAndType        #266:#259     // handleS:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I\n+  #317 = NameAndType        #268:#254     // handleT:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n+  #318 = NameAndType        #269:#254     // handleW:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n+  #319 = NameAndType        #270:#254     // handleX:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n+  #320 = NameAndType        #271:#259     // handleZ:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I\n+  #321 = NameAndType        #520:#521     // getAlternate:()Ljava/lang/String;\n+  #322 = NameAndType        #522:#521     // getPrimary:()Ljava/lang/String;\n+  #323 = Utf8               java/lang/String\n+  #324 = Utf8               org/apache/commons/codec/EncoderException\n+  #325 = Utf8               DoubleMetaphone encode parameter is not of type String\n+  #326 = NameAndType        #233:#523     // \"<init>\":(Ljava/lang/String;)V\n+  #327 = NameAndType        #237:#238     // doubleMetaphone:(Ljava/lang/String;)Ljava/lang/String;\n+  #328 = NameAndType        #244:#246     // isDoubleMetaphoneEqual:(Ljava/lang/String;Ljava/lang/String;Z)Z\n+  #329 = Class              #524          // org/apache/commons/codec/binary/StringUtils\n+  #330 = NameAndType        #525:#526     // equals:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z\n+  #331 = NameAndType        #272:#273     // conditionC0:(Ljava/lang/String;I)Z\n+  #332 = Utf8               CAESAR\n+  #333 = NameAndType        #287:#288     // contains:(Ljava/lang/String;II[Ljava/lang/String;)Z\n+  #334 = Utf8               CH\n+  #335 = NameAndType        #256:#254     // handleCH:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n+  #336 = Utf8               CZ\n+  #337 = Utf8               WICZ\n+  #338 = NameAndType        #518:#527     // append:(CC)V\n+  #339 = Utf8               CIA\n+  #340 = Utf8               CC\n+  #341 = NameAndType        #255:#254     // handleCC:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n+  #342 = Utf8               CK\n+  #343 = Utf8               CG\n+  #344 = Utf8               CQ\n+  #345 = Utf8               CI\n+  #346 = Utf8               CE\n+  #347 = Utf8               CY\n+  #348 = Utf8               CIO\n+  #349 = Utf8               CIE\n+  #350 = Utf8                C\n+  #351 = Utf8                Q\n+  #352 = Utf8                G\n+  #353 = Utf8               C\n+  #354 = Utf8               K\n+  #355 = Utf8               Q\n+  #356 = Utf8               E\n+  #357 = Utf8               H\n+  #358 = Utf8               HU\n+  #359 = Utf8               UCCEE\n+  #360 = Utf8               UCCES\n+  #361 = Utf8               KS\n+  #362 = NameAndType        #518:#523     // append:(Ljava/lang/String;)V\n+  #363 = Utf8               CHAE\n+  #364 = NameAndType        #274:#273     // conditionCH0:(Ljava/lang/String;I)Z\n+  #365 = NameAndType        #275:#273     // conditionCH1:(Ljava/lang/String;I)Z\n+  #366 = Utf8               MC\n+  #367 = Utf8               DG\n+  #368 = Utf8               Y\n+  #369 = Utf8               TK\n+  #370 = Utf8               DT\n+  #371 = Utf8               DD\n+  #372 = NameAndType        #260:#254     // handleGH:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n+  #373 = NameAndType        #280:#281     // isVowel:(C)Z\n+  #374 = Utf8               KN\n+  #375 = Utf8               N\n+  #376 = NameAndType        #518:#528     // append:(Ljava/lang/String;Ljava/lang/String;)V\n+  #377 = Utf8               EY\n+  #378 = Utf8               LI\n+  #379 = Utf8               KL\n+  #380 = Utf8               L\n+  #381 = NameAndType        #229:#227     // ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER:[Ljava/lang/String;\n+  #382 = Utf8               ER\n+  #383 = Utf8               DANGER\n+  #384 = Utf8               RANGER\n+  #385 = Utf8               MANGER\n+  #386 = Utf8               RGY\n+  #387 = Utf8               OGY\n+  #388 = Utf8               AGGI\n+  #389 = Utf8               OGGI\n+  #390 = Utf8               VAN\n+  #391 = Utf8               VON\n+  #392 = Utf8               SCH\n+  #393 = Utf8               ET\n+  #394 = Utf8               IER\n+  #395 = Utf8               B\n+  #396 = Utf8               D\n+  #397 = Utf8               G\n+  #398 = Utf8               R\n+  #399 = Utf8               T\n+  #400 = Utf8               JOSE\n+  #401 = Utf8               SAN\n+  #402 = NameAndType        #230:#227     // L_T_K_S_N_M_B_Z:[Ljava/lang/String;\n+  #403 = Utf8               S\n+  #404 = NameAndType        #276:#273     // conditionL0:(Ljava/lang/String;I)Z\n+  #405 = NameAndType        #529:#519     // appendPrimary:(C)V\n+  #406 = Utf8               P\n+  #407 = Utf8               IE\n+  #408 = Utf8               ME\n+  #409 = Utf8               MA\n+  #410 = NameAndType        #530:#519     // appendAlternate:(C)V\n+  #411 = Utf8               ISL\n+  #412 = Utf8               YSL\n+  #413 = Utf8               SUGAR\n+  #414 = Utf8               SH\n+  #415 = Utf8               HEIM\n+  #416 = Utf8               HOEK\n+  #417 = Utf8               HOLM\n+  #418 = Utf8               HOLZ\n+  #419 = Utf8               SIO\n+  #420 = Utf8               SIA\n+  #421 = Utf8               SIAN\n+  #422 = Utf8               M\n+  #423 = Utf8               W\n+  #424 = Utf8               Z\n+  #425 = Utf8               SC\n+  #426 = NameAndType        #267:#254     // handleSC:(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I\n+  #427 = Utf8               AI\n+  #428 = Utf8               OI\n+  #429 = Utf8               OO\n+  #430 = Utf8               EN\n+  #431 = Utf8               UY\n+  #432 = Utf8               ED\n+  #433 = Utf8               EM\n+  #434 = Utf8               X\n+  #435 = Utf8               SK\n+  #436 = Utf8               TION\n+  #437 = Utf8               TIA\n+  #438 = Utf8               TCH\n+  #439 = Utf8               TH\n+  #440 = Utf8               TTH\n+  #441 = Utf8               OM\n+  #442 = Utf8               AM\n+  #443 = Utf8               WR\n+  #444 = Utf8               WH\n+  #445 = Utf8               EWSKI\n+  #446 = Utf8               EWSKY\n+  #447 = Utf8               OWSKI\n+  #448 = Utf8               OWSKY\n+  #449 = Utf8               WITZ\n+  #450 = Utf8               TS\n+  #451 = Utf8               FX\n+  #452 = Utf8               IAU\n+  #453 = Utf8               EAU\n+  #454 = Utf8               AU\n+  #455 = Utf8               OU\n+  #456 = Utf8               ZO\n+  #457 = Utf8               ZI\n+  #458 = Utf8               ZA\n+  #459 = Utf8               CHIA\n+  #460 = Utf8               ACH\n+  #461 = Utf8               BACHER\n+  #462 = Utf8               MACHER\n+  #463 = Utf8               HARAC\n+  #464 = Utf8               HARIS\n+  #465 = Utf8               HOR\n+  #466 = Utf8               HYM\n+  #467 = Utf8               HIA\n+  #468 = Utf8               HEM\n+  #469 = Utf8               CHORE\n+  #470 = Utf8               ORCHES\n+  #471 = Utf8               ARCHIT\n+  #472 = Utf8               ORCHID\n+  #473 = Utf8               A\n+  #474 = Utf8               O\n+  #475 = Utf8               U\n+  #476 = NameAndType        #228:#227     // L_R_N_M_B_H_F_V_W_SPACE:[Ljava/lang/String;\n+  #477 = Utf8               ILLO\n+  #478 = Utf8               ILLA\n+  #479 = Utf8               ALLE\n+  #480 = Utf8               AS\n+  #481 = Utf8               OS\n+  #482 = Utf8               UMB\n+  #483 = NameAndType        #531:#532     // indexOf:(I)I\n+  #484 = NameAndType        #287:#533     // contains:(Ljava/lang/CharSequence;)Z\n+  #485 = Utf8               org/apache/commons/codec/language/DoubleMetaphone\n+  #486 = Utf8               AEIOUY\n+  #487 = NameAndType        #226:#227     // SILENT_START:[Ljava/lang/String;\n+  #488 = NameAndType        #534:#279     // startsWith:(Ljava/lang/String;)Z\n+  #489 = NameAndType        #535:#521     // trim:()Ljava/lang/String;\n+  #490 = NameAndType        #536:#515     // isEmpty:()Z\n+  #491 = Class              #537          // java/util/Locale\n+  #492 = NameAndType        #538:#539     // ENGLISH:Ljava/util/Locale;\n+  #493 = NameAndType        #540:#541     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #494 = Utf8               java/lang/Character\n+  #495 = NameAndType        #542:#543     // substring:(II)Ljava/lang/String;\n+  #496 = NameAndType        #525:#544     // equals:(Ljava/lang/Object;)Z\n+  #497 = Utf8               GN\n+  #498 = Utf8               PN\n+  #499 = Utf8               PS\n+  #500 = Utf8               F\n+  #501 = Utf8               V\n+  #502 = Utf8\n+  #503 = Utf8               ES\n+  #504 = Utf8               EP\n+  #505 = Utf8               EB\n+  #506 = Utf8               EL\n+  #507 = Utf8               IB\n+  #508 = Utf8               IL\n+  #509 = Utf8               IN\n+  #510 = Utf8               EI\n+  #511 = Utf8               java/lang/Object\n+  #512 = Utf8               org/apache/commons/codec/StringEncoder\n+  #513 = Utf8               (Lorg/apache/commons/codec/language/DoubleMetaphone;I)V\n+  #514 = Utf8               isComplete\n+  #515 = Utf8               ()Z\n+  #516 = Utf8               length\n+  #517 = Utf8               (I)C\n+  #518 = Utf8               append\n+  #519 = Utf8               (C)V\n+  #520 = Utf8               getAlternate\n+  #521 = Utf8               ()Ljava/lang/String;\n+  #522 = Utf8               getPrimary\n+  #523 = Utf8               (Ljava/lang/String;)V\n+  #524 = Utf8               org/apache/commons/codec/binary/StringUtils\n+  #525 = Utf8               equals\n+  #526 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z\n+  #527 = Utf8               (CC)V\n+  #528 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n+  #529 = Utf8               appendPrimary\n+  #530 = Utf8               appendAlternate\n+  #531 = Utf8               indexOf\n+  #532 = Utf8               (I)I\n+  #533 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #534 = Utf8               startsWith\n+  #535 = Utf8               trim\n+  #536 = Utf8               isEmpty\n+  #537 = Utf8               java/util/Locale\n+  #538 = Utf8               ENGLISH\n+  #539 = Utf8               Ljava/util/Locale;\n+  #540 = Utf8               toUpperCase\n+  #541 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+  #542 = Utf8               substring\n+  #543 = Utf8               (II)Ljava/lang/String;\n+  #544 = Utf8               (Ljava/lang/Object;)Z\n {\n   private static final java.lang.String VOWELS = \"AEIOUY\";\n     descriptor: Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: String AEIOUY\n \n   private static final java.lang.String[] SILENT_START;\n"}]}
