{"diffoscope-json-version": 1, "source1": "first/MutableLong.class", "source2": "second/MutableLong.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -11,96 +11,96 @@\n     public MutableLong() {\n     }\n     \n     public MutableLong(final long value) {\n         this.value = value;\n     }\n     \n-    public MutableLong(final Number value) {\n-        this.value = value.longValue();\n+    public MutableLong(final Number n) {\n+        this.value = n.longValue();\n     }\n     \n-    public MutableLong(final String value) {\n-        this.value = Long.parseLong(value);\n+    public MutableLong(final String s) {\n+        this.value = Long.parseLong(s);\n     }\n     \n     public Long getValue() {\n         return Long.valueOf(this.value);\n     }\n     \n     public void setValue(final long value) {\n         this.value = value;\n     }\n     \n-    public void setValue(final Number value) {\n-        this.value = value.longValue();\n+    public void setValue(final Number n) {\n+        this.value = n.longValue();\n     }\n     \n     public void increment() {\n         ++this.value;\n     }\n     \n     public long getAndIncrement() {\n-        final long last = this.value;\n+        final long value = this.value;\n         ++this.value;\n-        return last;\n+        return value;\n     }\n     \n     public long incrementAndGet() {\n         return ++this.value;\n     }\n     \n     public void decrement() {\n         --this.value;\n     }\n     \n     public long getAndDecrement() {\n-        final long last = this.value;\n+        final long value = this.value;\n         --this.value;\n-        return last;\n+        return value;\n     }\n     \n     public long decrementAndGet() {\n         return --this.value;\n     }\n     \n-    public void add(final long operand) {\n-        this.value += operand;\n+    public void add(final long n) {\n+        this.value += n;\n     }\n     \n-    public void add(final Number operand) {\n-        this.value += operand.longValue();\n+    public void add(final Number n) {\n+        this.value += n.longValue();\n     }\n     \n-    public void subtract(final long operand) {\n-        this.value -= operand;\n+    public void subtract(final long n) {\n+        this.value -= n;\n     }\n     \n-    public void subtract(final Number operand) {\n-        this.value -= operand.longValue();\n+    public void subtract(final Number n) {\n+        this.value -= n.longValue();\n     }\n     \n-    public long addAndGet(final long operand) {\n-        return this.value += operand;\n+    public long addAndGet(final long n) {\n+        return this.value += n;\n     }\n     \n-    public long addAndGet(final Number operand) {\n-        return this.value += operand.longValue();\n+    public long addAndGet(final Number n) {\n+        return this.value += n.longValue();\n     }\n     \n-    public long getAndAdd(final long operand) {\n-        final long last = this.value;\n-        this.value += operand;\n-        return last;\n+    public long getAndAdd(final long n) {\n+        final long value = this.value;\n+        this.value += n;\n+        return value;\n     }\n     \n-    public long getAndAdd(final Number operand) {\n-        final long last = this.value;\n-        this.value += operand.longValue();\n-        return last;\n+    public long getAndAdd(final Number n) {\n+        final long value = this.value;\n+        this.value += n.longValue();\n+        return value;\n     }\n     \n     @Override\n     public int intValue() {\n         return (int)this.value;\n     }\n     \n@@ -119,24 +119,24 @@\n         return (double)this.value;\n     }\n     \n     public Long toLong() {\n         return Long.valueOf(this.longValue());\n     }\n     \n-    public boolean equals(final Object obj) {\n-        return obj instanceof MutableLong && this.value == ((MutableLong)obj).longValue();\n+    public boolean equals(final Object o) {\n+        return o instanceof MutableLong && this.value == ((MutableLong)o).longValue();\n     }\n     \n     public int hashCode() {\n         return (int)(this.value ^ this.value >>> 32);\n     }\n     \n     @Override\n-    public int compareTo(final MutableLong other) {\n-        return NumberUtils.compare(this.value, other.value);\n+    public int compareTo(final MutableLong mutableLong) {\n+        return NumberUtils.compare(this.value, mutableLong.value);\n     }\n     \n     public String toString() {\n         return String.valueOf(this.value);\n     }\n }\n"}]}
