{"diffoscope-json-version": 1, "source1": "first/MutableInt.class", "source2": "second/MutableInt.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -11,96 +11,96 @@\n     public MutableInt() {\n     }\n     \n     public MutableInt(final int value) {\n         this.value = value;\n     }\n     \n-    public MutableInt(final Number value) {\n-        this.value = value.intValue();\n+    public MutableInt(final Number n) {\n+        this.value = n.intValue();\n     }\n     \n-    public MutableInt(final String value) {\n-        this.value = Integer.parseInt(value);\n+    public MutableInt(final String s) {\n+        this.value = Integer.parseInt(s);\n     }\n     \n     public Integer getValue() {\n         return Integer.valueOf(this.value);\n     }\n     \n     public void setValue(final int value) {\n         this.value = value;\n     }\n     \n-    public void setValue(final Number value) {\n-        this.value = value.intValue();\n+    public void setValue(final Number n) {\n+        this.value = n.intValue();\n     }\n     \n     public void increment() {\n         ++this.value;\n     }\n     \n     public int getAndIncrement() {\n-        final int last = this.value;\n+        final int value = this.value;\n         ++this.value;\n-        return last;\n+        return value;\n     }\n     \n     public int incrementAndGet() {\n         return ++this.value;\n     }\n     \n     public void decrement() {\n         --this.value;\n     }\n     \n     public int getAndDecrement() {\n-        final int last = this.value;\n+        final int value = this.value;\n         --this.value;\n-        return last;\n+        return value;\n     }\n     \n     public int decrementAndGet() {\n         return --this.value;\n     }\n     \n-    public void add(final int operand) {\n-        this.value += operand;\n+    public void add(final int n) {\n+        this.value += n;\n     }\n     \n-    public void add(final Number operand) {\n-        this.value += operand.intValue();\n+    public void add(final Number n) {\n+        this.value += n.intValue();\n     }\n     \n-    public void subtract(final int operand) {\n-        this.value -= operand;\n+    public void subtract(final int n) {\n+        this.value -= n;\n     }\n     \n-    public void subtract(final Number operand) {\n-        this.value -= operand.intValue();\n+    public void subtract(final Number n) {\n+        this.value -= n.intValue();\n     }\n     \n-    public int addAndGet(final int operand) {\n-        return this.value += operand;\n+    public int addAndGet(final int n) {\n+        return this.value += n;\n     }\n     \n-    public int addAndGet(final Number operand) {\n-        return this.value += operand.intValue();\n+    public int addAndGet(final Number n) {\n+        return this.value += n.intValue();\n     }\n     \n-    public int getAndAdd(final int operand) {\n-        final int last = this.value;\n-        this.value += operand;\n-        return last;\n+    public int getAndAdd(final int n) {\n+        final int value = this.value;\n+        this.value += n;\n+        return value;\n     }\n     \n-    public int getAndAdd(final Number operand) {\n-        final int last = this.value;\n-        this.value += operand.intValue();\n-        return last;\n+    public int getAndAdd(final Number n) {\n+        final int value = this.value;\n+        this.value += n.intValue();\n+        return value;\n     }\n     \n     @Override\n     public int intValue() {\n         return this.value;\n     }\n     \n@@ -119,24 +119,24 @@\n         return this.value;\n     }\n     \n     public Integer toInteger() {\n         return Integer.valueOf(this.intValue());\n     }\n     \n-    public boolean equals(final Object obj) {\n-        return obj instanceof MutableInt && this.value == ((MutableInt)obj).intValue();\n+    public boolean equals(final Object o) {\n+        return o instanceof MutableInt && this.value == ((MutableInt)o).intValue();\n     }\n     \n     public int hashCode() {\n         return this.value;\n     }\n     \n     @Override\n-    public int compareTo(final MutableInt other) {\n-        return NumberUtils.compare(this.value, other.value);\n+    public int compareTo(final MutableInt mutableInt) {\n+        return NumberUtils.compare(this.value, mutableInt.value);\n     }\n     \n     public String toString() {\n         return String.valueOf(this.value);\n     }\n }\n"}]}
