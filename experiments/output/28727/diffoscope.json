{"diffoscope-json-version": 1, "source1": "first/ArArchiveOutputStream.class", "source2": "second/ArArchiveOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,272 +1,272 @@\n-  SHA-256 checksum c9c33cc58ee0fd705286ad90b236225cad6f6c7f6b5b58204c748b4ade9b5398\n+  SHA-256 checksum 514125396f1198f79dd8972fdfd199d3b4cea1b5ef06ff66e60325c7cb68eaa8\n   Compiled from \"ArArchiveOutputStream.java\"\n public class org.apache.commons.compress.archivers.ar.ArArchiveOutputStream extends org.apache.commons.compress.archivers.ArchiveOutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #2                          // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n-  super_class: #78                        // org/apache/commons/compress/archivers/ArchiveOutputStream\n+  this_class: #7                          // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n+  super_class: #2                         // org/apache/commons/compress/archivers/ArchiveOutputStream\n   interfaces: 0, fields: 8, methods: 13, attributes: 1\n Constant pool:\n-    #1 = Methodref          #78.#161      // org/apache/commons/compress/archivers/ArchiveOutputStream.\"<init>\":()V\n-    #2 = Class              #162          // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n-    #3 = Fieldref           #2.#163       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.longFileMode:I\n-    #4 = Fieldref           #2.#164       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.out:Ljava/io/OutputStream;\n-    #5 = Fieldref           #2.#165       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.finished:Z\n-    #6 = Methodref          #2.#166       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.finish:()V\n-    #7 = Methodref          #167.#168     // java/io/OutputStream.close:()V\n-    #8 = Fieldref           #2.#169       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.prevEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-    #9 = Class              #170          // java/io/IOException\n-   #10 = String             #171          // Stream has already been finished\n-   #11 = Methodref          #9.#172       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #12 = Fieldref           #2.#173       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.haveUnclosedEntry:Z\n-   #13 = String             #174          // No current entry to close\n-   #14 = Fieldref           #2.#175       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.entryOffset:J\n-   #15 = Long               2l\n-   #17 = Methodref          #167.#176     // java/io/OutputStream.write:(I)V\n-   #18 = Class              #177          // org/apache/commons/compress/archivers/ar/ArArchiveEntry\n-   #19 = Methodref          #18.#178      // org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-   #20 = Methodref          #18.#179      // org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n-   #21 = Methodref          #2.#176       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.write:(I)V\n-   #22 = String             #180          // This archive contains unclosed entries.\n-   #23 = String             #181          // This archive has already been finished\n-   #24 = Methodref          #2.#182       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.writeArchiveHeader:()V\n-   #25 = Methodref          #18.#183      // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLength:()J\n-   #26 = Class              #184          // java/lang/StringBuilder\n-   #27 = Methodref          #26.#161      // java/lang/StringBuilder.\"<init>\":()V\n-   #28 = String             #185          // Length does not match entry (\n-   #29 = Methodref          #26.#186      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #30 = Methodref          #26.#187      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-   #31 = String             #188          //  !=\n-   #32 = Methodref          #26.#189      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #33 = Methodref          #2.#190       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.closeArchiveEntry:()V\n-   #34 = Methodref          #2.#191       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.writeEntryHeader:(Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;)V\n-   #35 = Methodref          #167.#192     // java/io/OutputStream.write:([BII)V\n-   #36 = Methodref          #2.#193       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.count:(I)V\n-   #37 = Fieldref           #194.#195     // java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;\n-   #38 = Methodref          #158.#196     // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-   #39 = Methodref          #2.#197       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.write:([B)V\n-   #40 = String             #198          // !<arch>\\n\n-   #41 = Methodref          #199.#200     // org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n-   #42 = Methodref          #167.#197     // java/io/OutputStream.write:([B)V\n-   #43 = Methodref          #18.#201      // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getName:()Ljava/lang/String;\n-   #44 = Methodref          #158.#202     // java/lang/String.length:()I\n-   #45 = String             #203          // File name too long, > 16 chars:\n-   #46 = String             #204          //\n-   #47 = Methodref          #158.#205     // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n-   #48 = Class              #206          // org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n-   #49 = String             #207          // #1/\n-   #50 = Methodref          #26.#208      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #51 = Methodref          #2.#209       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.write:(Ljava/lang/String;)J\n-   #52 = Long               16l\n-   #54 = Methodref          #2.#210       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.fill:(JJC)J\n-   #55 = String             #211          //\n-   #56 = Methodref          #18.#212      // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLastModified:()J\n-   #57 = String             #213          // Last modified too long\n-   #58 = Long               28l\n-   #60 = Methodref          #18.#214      // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getUserId:()I\n-   #61 = String             #215          // User id too long\n-   #62 = Long               34l\n-   #64 = Methodref          #18.#216      // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getGroupId:()I\n-   #65 = String             #217          // Group id too long\n-   #66 = Long               40l\n-   #68 = Methodref          #18.#218      // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getMode:()I\n-   #69 = Methodref          #219.#220     // java/lang/Integer.toString:(II)Ljava/lang/String;\n-   #70 = String             #221          // Filemode too long\n-   #71 = Long               48l\n-   #73 = Methodref          #158.#222     // java/lang/String.valueOf:(J)Ljava/lang/String;\n-   #74 = String             #223          // Size too long\n-   #75 = Long               58l\n-   #77 = String             #224          // `\\n\n-   #78 = Class              #225          // org/apache/commons/compress/archivers/ArchiveOutputStream\n-   #79 = Utf8               LONGFILE_ERROR\n-   #80 = Utf8               I\n-   #81 = Utf8               ConstantValue\n-   #82 = Integer            0\n-   #83 = Utf8               LONGFILE_BSD\n-   #84 = Integer            1\n-   #85 = Utf8               out\n-   #86 = Utf8               Ljava/io/OutputStream;\n-   #87 = Utf8               entryOffset\n-   #88 = Utf8               J\n-   #89 = Utf8               prevEntry\n-   #90 = Utf8               Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-   #91 = Utf8               haveUnclosedEntry\n-   #92 = Utf8               Z\n-   #93 = Utf8               longFileMode\n-   #94 = Utf8               finished\n-   #95 = Utf8               <init>\n-   #96 = Utf8               (Ljava/io/OutputStream;)V\n-   #97 = Utf8               Code\n-   #98 = Utf8               LineNumberTable\n-   #99 = Utf8               LocalVariableTable\n-  #100 = Utf8               this\n-  #101 = Utf8               Lorg/apache/commons/compress/archivers/ar/ArArchiveOutputStream;\n-  #102 = Utf8               pOut\n-  #103 = Utf8               close\n-  #104 = Utf8               ()V\n-  #105 = Utf8               StackMapTable\n-  #106 = Class              #226          // java/lang/Throwable\n-  #107 = Utf8               Exceptions\n-  #108 = Utf8               closeArchiveEntry\n-  #109 = Utf8               createArchiveEntry\n-  #110 = Utf8               (Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;\n-  #111 = Utf8               inputFile\n-  #112 = Utf8               Ljava/io/File;\n-  #113 = Utf8               entryName\n-  #114 = Utf8               Ljava/lang/String;\n-  #115 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Lorg/apache/commons/compress/archivers/ArchiveEntry;\n-  #116 = Utf8               inputPath\n-  #117 = Utf8               Ljava/nio/file/Path;\n-  #118 = Utf8               options\n-  #119 = Utf8               [Ljava/nio/file/LinkOption;\n-  #120 = Utf8               fill\n-  #121 = Utf8               (JJC)J\n-  #122 = Utf8               i\n-  #123 = Utf8               pOffset\n-  #124 = Utf8               pNewOffset\n-  #125 = Utf8               pFill\n-  #126 = Utf8               C\n-  #127 = Utf8               diff\n-  #128 = Utf8               finish\n-  #129 = Utf8               putArchiveEntry\n-  #130 = Utf8               (Lorg/apache/commons/compress/archivers/ArchiveEntry;)V\n-  #131 = Utf8               pEntry\n-  #132 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveEntry;\n-  #133 = Utf8               pArEntry\n-  #134 = Utf8               setLongFileMode\n-  #135 = Utf8               (I)V\n-  #136 = Utf8               write\n-  #137 = Utf8               ([BII)V\n-  #138 = Utf8               b\n-  #139 = Utf8               [B\n-  #140 = Utf8               off\n-  #141 = Utf8               len\n-  #142 = Utf8               (Ljava/lang/String;)J\n-  #143 = Utf8               data\n-  #144 = Utf8               bytes\n-  #145 = Utf8               writeArchiveHeader\n-  #146 = Utf8               header\n-  #147 = Utf8               writeEntryHeader\n-  #148 = Utf8               (Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;)V\n-  #149 = Utf8               offset\n-  #150 = Utf8               mustAppendName\n-  #151 = Utf8               n\n-  #152 = Utf8               nLength\n-  #153 = Utf8               m\n-  #154 = Utf8               u\n-  #155 = Utf8               g\n-  #156 = Utf8               fm\n-  #157 = Utf8               s\n-  #158 = Class              #227          // java/lang/String\n-  #159 = Utf8               SourceFile\n-  #160 = Utf8               ArArchiveOutputStream.java\n-  #161 = NameAndType        #95:#104      // \"<init>\":()V\n-  #162 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n-  #163 = NameAndType        #93:#80       // longFileMode:I\n-  #164 = NameAndType        #85:#86       // out:Ljava/io/OutputStream;\n-  #165 = NameAndType        #94:#92       // finished:Z\n-  #166 = NameAndType        #128:#104     // finish:()V\n-  #167 = Class              #228          // java/io/OutputStream\n-  #168 = NameAndType        #103:#104     // close:()V\n-  #169 = NameAndType        #89:#90       // prevEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-  #170 = Utf8               java/io/IOException\n-  #171 = Utf8               Stream has already been finished\n-  #172 = NameAndType        #95:#229      // \"<init>\":(Ljava/lang/String;)V\n-  #173 = NameAndType        #91:#92       // haveUnclosedEntry:Z\n-  #174 = Utf8               No current entry to close\n-  #175 = NameAndType        #87:#88       // entryOffset:J\n-  #176 = NameAndType        #136:#135     // write:(I)V\n-  #177 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveEntry\n-  #178 = NameAndType        #95:#230      // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-  #179 = NameAndType        #95:#231      // \"<init>\":(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n-  #180 = Utf8               This archive contains unclosed entries.\n-  #181 = Utf8               This archive has already been finished\n-  #182 = NameAndType        #145:#104     // writeArchiveHeader:()V\n-  #183 = NameAndType        #232:#233     // getLength:()J\n-  #184 = Utf8               java/lang/StringBuilder\n-  #185 = Utf8               Length does not match entry (\n-  #186 = NameAndType        #234:#235     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #187 = NameAndType        #234:#236     // append:(J)Ljava/lang/StringBuilder;\n-  #188 = Utf8                !=\n-  #189 = NameAndType        #237:#238     // toString:()Ljava/lang/String;\n-  #190 = NameAndType        #108:#104     // closeArchiveEntry:()V\n-  #191 = NameAndType        #147:#148     // writeEntryHeader:(Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;)V\n-  #192 = NameAndType        #136:#137     // write:([BII)V\n-  #193 = NameAndType        #239:#135     // count:(I)V\n-  #194 = Class              #240          // java/nio/charset/StandardCharsets\n-  #195 = NameAndType        #241:#242     // US_ASCII:Ljava/nio/charset/Charset;\n-  #196 = NameAndType        #243:#244     // getBytes:(Ljava/nio/charset/Charset;)[B\n-  #197 = NameAndType        #136:#245     // write:([B)V\n-  #198 = Utf8               !<arch>\\n\n-  #199 = Class              #246          // org/apache/commons/compress/utils/ArchiveUtils\n-  #200 = NameAndType        #247:#248     // toAsciiBytes:(Ljava/lang/String;)[B\n-  #201 = NameAndType        #249:#238     // getName:()Ljava/lang/String;\n-  #202 = NameAndType        #250:#251     // length:()I\n-  #203 = Utf8               File name too long, > 16 chars:\n-  #204 = Utf8\n-  #205 = NameAndType        #252:#253     // contains:(Ljava/lang/CharSequence;)Z\n-  #206 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n-  #207 = Utf8               #1/\n-  #208 = NameAndType        #234:#254     // append:(I)Ljava/lang/StringBuilder;\n-  #209 = NameAndType        #136:#142     // write:(Ljava/lang/String;)J\n-  #210 = NameAndType        #120:#121     // fill:(JJC)J\n-  #211 = Utf8\n-  #212 = NameAndType        #255:#233     // getLastModified:()J\n-  #213 = Utf8               Last modified too long\n-  #214 = NameAndType        #256:#251     // getUserId:()I\n-  #215 = Utf8               User id too long\n-  #216 = NameAndType        #257:#251     // getGroupId:()I\n-  #217 = Utf8               Group id too long\n-  #218 = NameAndType        #258:#251     // getMode:()I\n-  #219 = Class              #259          // java/lang/Integer\n-  #220 = NameAndType        #237:#260     // toString:(II)Ljava/lang/String;\n-  #221 = Utf8               Filemode too long\n-  #222 = NameAndType        #261:#262     // valueOf:(J)Ljava/lang/String;\n-  #223 = Utf8               Size too long\n-  #224 = Utf8               `\\n\n-  #225 = Utf8               org/apache/commons/compress/archivers/ArchiveOutputStream\n-  #226 = Utf8               java/lang/Throwable\n-  #227 = Utf8               java/lang/String\n-  #228 = Utf8               java/io/OutputStream\n-  #229 = Utf8               (Ljava/lang/String;)V\n-  #230 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n-  #231 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n-  #232 = Utf8               getLength\n-  #233 = Utf8               ()J\n-  #234 = Utf8               append\n-  #235 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #236 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #237 = Utf8               toString\n-  #238 = Utf8               ()Ljava/lang/String;\n-  #239 = Utf8               count\n-  #240 = Utf8               java/nio/charset/StandardCharsets\n-  #241 = Utf8               US_ASCII\n-  #242 = Utf8               Ljava/nio/charset/Charset;\n-  #243 = Utf8               getBytes\n-  #244 = Utf8               (Ljava/nio/charset/Charset;)[B\n-  #245 = Utf8               ([B)V\n-  #246 = Utf8               org/apache/commons/compress/utils/ArchiveUtils\n-  #247 = Utf8               toAsciiBytes\n-  #248 = Utf8               (Ljava/lang/String;)[B\n-  #249 = Utf8               getName\n-  #250 = Utf8               length\n-  #251 = Utf8               ()I\n-  #252 = Utf8               contains\n-  #253 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #254 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #255 = Utf8               getLastModified\n-  #256 = Utf8               getUserId\n-  #257 = Utf8               getGroupId\n-  #258 = Utf8               getMode\n-  #259 = Utf8               java/lang/Integer\n-  #260 = Utf8               (II)Ljava/lang/String;\n-  #261 = Utf8               valueOf\n-  #262 = Utf8               (J)Ljava/lang/String;\n+    #1 = Methodref          #2.#3         // org/apache/commons/compress/archivers/ArchiveOutputStream.\"<init>\":()V\n+    #2 = Class              #4            // org/apache/commons/compress/archivers/ArchiveOutputStream\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               org/apache/commons/compress/archivers/ArchiveOutputStream\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Class              #8            // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n+    #8 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n+    #9 = Fieldref           #7.#10        // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.longFileMode:I\n+   #10 = NameAndType        #11:#12       // longFileMode:I\n+   #11 = Utf8               longFileMode\n+   #12 = Utf8               I\n+   #13 = Fieldref           #7.#14        // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.out:Ljava/io/OutputStream;\n+   #14 = NameAndType        #15:#16       // out:Ljava/io/OutputStream;\n+   #15 = Utf8               out\n+   #16 = Utf8               Ljava/io/OutputStream;\n+   #17 = Fieldref           #7.#18        // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.finished:Z\n+   #18 = NameAndType        #19:#20       // finished:Z\n+   #19 = Utf8               finished\n+   #20 = Utf8               Z\n+   #21 = Methodref          #7.#22        // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.finish:()V\n+   #22 = NameAndType        #23:#6        // finish:()V\n+   #23 = Utf8               finish\n+   #24 = Methodref          #25.#26       // java/io/OutputStream.close:()V\n+   #25 = Class              #27           // java/io/OutputStream\n+   #26 = NameAndType        #28:#6        // close:()V\n+   #27 = Utf8               java/io/OutputStream\n+   #28 = Utf8               close\n+   #29 = Fieldref           #7.#30        // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.prevEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+   #30 = NameAndType        #31:#32       // prevEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+   #31 = Utf8               prevEntry\n+   #32 = Utf8               Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+   #33 = Class              #34           // java/io/IOException\n+   #34 = Utf8               java/io/IOException\n+   #35 = String             #36           // Stream has already been finished\n+   #36 = Utf8               Stream has already been finished\n+   #37 = Methodref          #33.#38       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #38 = NameAndType        #5:#39        // \"<init>\":(Ljava/lang/String;)V\n+   #39 = Utf8               (Ljava/lang/String;)V\n+   #40 = Fieldref           #7.#41        // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.haveUnclosedEntry:Z\n+   #41 = NameAndType        #42:#20       // haveUnclosedEntry:Z\n+   #42 = Utf8               haveUnclosedEntry\n+   #43 = String             #44           // No current entry to close\n+   #44 = Utf8               No current entry to close\n+   #45 = Fieldref           #7.#46        // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.entryOffset:J\n+   #46 = NameAndType        #47:#48       // entryOffset:J\n+   #47 = Utf8               entryOffset\n+   #48 = Utf8               J\n+   #49 = Long               2l\n+   #51 = Methodref          #25.#52       // java/io/OutputStream.write:(I)V\n+   #52 = NameAndType        #53:#54       // write:(I)V\n+   #53 = Utf8               write\n+   #54 = Utf8               (I)V\n+   #55 = Class              #56           // org/apache/commons/compress/archivers/ar/ArArchiveEntry\n+   #56 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveEntry\n+   #57 = Methodref          #55.#58       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+   #58 = NameAndType        #5:#59        // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+   #59 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n+   #60 = Methodref          #55.#61       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n+   #61 = NameAndType        #5:#62        // \"<init>\":(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n+   #62 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n+   #63 = Methodref          #7.#52        // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.write:(I)V\n+   #64 = String             #65           // This archive contains unclosed entries.\n+   #65 = Utf8               This archive contains unclosed entries.\n+   #66 = String             #67           // This archive has already been finished\n+   #67 = Utf8               This archive has already been finished\n+   #68 = Methodref          #7.#69        // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.writeArchiveHeader:()V\n+   #69 = NameAndType        #70:#6        // writeArchiveHeader:()V\n+   #70 = Utf8               writeArchiveHeader\n+   #71 = Methodref          #55.#72       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLength:()J\n+   #72 = NameAndType        #73:#74       // getLength:()J\n+   #73 = Utf8               getLength\n+   #74 = Utf8               ()J\n+   #75 = Class              #76           // java/lang/StringBuilder\n+   #76 = Utf8               java/lang/StringBuilder\n+   #77 = Methodref          #75.#3        // java/lang/StringBuilder.\"<init>\":()V\n+   #78 = String             #79           // Length does not match entry (\n+   #79 = Utf8               Length does not match entry (\n+   #80 = Methodref          #75.#81       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #81 = NameAndType        #82:#83       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #82 = Utf8               append\n+   #83 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #84 = Methodref          #75.#85       // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+   #85 = NameAndType        #82:#86       // append:(J)Ljava/lang/StringBuilder;\n+   #86 = Utf8               (J)Ljava/lang/StringBuilder;\n+   #87 = String             #88           //  !=\n+   #88 = Utf8                !=\n+   #89 = Methodref          #75.#90       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #90 = NameAndType        #91:#92       // toString:()Ljava/lang/String;\n+   #91 = Utf8               toString\n+   #92 = Utf8               ()Ljava/lang/String;\n+   #93 = Methodref          #7.#94        // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.closeArchiveEntry:()V\n+   #94 = NameAndType        #95:#6        // closeArchiveEntry:()V\n+   #95 = Utf8               closeArchiveEntry\n+   #96 = Methodref          #7.#97        // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.writeEntryHeader:(Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;)V\n+   #97 = NameAndType        #98:#99       // writeEntryHeader:(Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;)V\n+   #98 = Utf8               writeEntryHeader\n+   #99 = Utf8               (Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;)V\n+  #100 = Methodref          #25.#101      // java/io/OutputStream.write:([BII)V\n+  #101 = NameAndType        #53:#102      // write:([BII)V\n+  #102 = Utf8               ([BII)V\n+  #103 = Methodref          #7.#104       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.count:(I)V\n+  #104 = NameAndType        #105:#54      // count:(I)V\n+  #105 = Utf8               count\n+  #106 = Fieldref           #107.#108     // java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;\n+  #107 = Class              #109          // java/nio/charset/StandardCharsets\n+  #108 = NameAndType        #110:#111     // US_ASCII:Ljava/nio/charset/Charset;\n+  #109 = Utf8               java/nio/charset/StandardCharsets\n+  #110 = Utf8               US_ASCII\n+  #111 = Utf8               Ljava/nio/charset/Charset;\n+  #112 = Methodref          #113.#114     // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+  #113 = Class              #115          // java/lang/String\n+  #114 = NameAndType        #116:#117     // getBytes:(Ljava/nio/charset/Charset;)[B\n+  #115 = Utf8               java/lang/String\n+  #116 = Utf8               getBytes\n+  #117 = Utf8               (Ljava/nio/charset/Charset;)[B\n+  #118 = Methodref          #7.#119       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.write:([B)V\n+  #119 = NameAndType        #53:#120      // write:([B)V\n+  #120 = Utf8               ([B)V\n+  #121 = String             #122          // !<arch>\\n\n+  #122 = Utf8               !<arch>\\n\n+  #123 = Methodref          #124.#125     // org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n+  #124 = Class              #126          // org/apache/commons/compress/utils/ArchiveUtils\n+  #125 = NameAndType        #127:#128     // toAsciiBytes:(Ljava/lang/String;)[B\n+  #126 = Utf8               org/apache/commons/compress/utils/ArchiveUtils\n+  #127 = Utf8               toAsciiBytes\n+  #128 = Utf8               (Ljava/lang/String;)[B\n+  #129 = Methodref          #25.#119      // java/io/OutputStream.write:([B)V\n+  #130 = Methodref          #55.#131      // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getName:()Ljava/lang/String;\n+  #131 = NameAndType        #132:#92      // getName:()Ljava/lang/String;\n+  #132 = Utf8               getName\n+  #133 = Methodref          #113.#134     // java/lang/String.length:()I\n+  #134 = NameAndType        #135:#136     // length:()I\n+  #135 = Utf8               length\n+  #136 = Utf8               ()I\n+  #137 = String             #138          // File name too long, > 16 chars:\n+  #138 = Utf8               File name too long, > 16 chars:\n+  #139 = String             #140          //\n+  #140 = Utf8\n+  #141 = Methodref          #113.#142     // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+  #142 = NameAndType        #143:#144     // contains:(Ljava/lang/CharSequence;)Z\n+  #143 = Utf8               contains\n+  #144 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #145 = Class              #146          // org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n+  #146 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n+  #147 = String             #148          // #1/\n+  #148 = Utf8               #1/\n+  #149 = Methodref          #75.#150      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #150 = NameAndType        #82:#151      // append:(I)Ljava/lang/StringBuilder;\n+  #151 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #152 = Methodref          #7.#153       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.write:(Ljava/lang/String;)J\n+  #153 = NameAndType        #53:#154      // write:(Ljava/lang/String;)J\n+  #154 = Utf8               (Ljava/lang/String;)J\n+  #155 = Long               16l\n+  #157 = Methodref          #7.#158       // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.fill:(JJC)J\n+  #158 = NameAndType        #159:#160     // fill:(JJC)J\n+  #159 = Utf8               fill\n+  #160 = Utf8               (JJC)J\n+  #161 = String             #162          //\n+  #162 = Utf8\n+  #163 = Methodref          #55.#164      // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLastModified:()J\n+  #164 = NameAndType        #165:#74      // getLastModified:()J\n+  #165 = Utf8               getLastModified\n+  #166 = String             #167          // Last modified too long\n+  #167 = Utf8               Last modified too long\n+  #168 = Long               28l\n+  #170 = Methodref          #55.#171      // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getUserId:()I\n+  #171 = NameAndType        #172:#136     // getUserId:()I\n+  #172 = Utf8               getUserId\n+  #173 = String             #174          // User id too long\n+  #174 = Utf8               User id too long\n+  #175 = Long               34l\n+  #177 = Methodref          #55.#178      // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getGroupId:()I\n+  #178 = NameAndType        #179:#136     // getGroupId:()I\n+  #179 = Utf8               getGroupId\n+  #180 = String             #181          // Group id too long\n+  #181 = Utf8               Group id too long\n+  #182 = Long               40l\n+  #184 = Methodref          #55.#185      // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getMode:()I\n+  #185 = NameAndType        #186:#136     // getMode:()I\n+  #186 = Utf8               getMode\n+  #187 = Methodref          #188.#189     // java/lang/Integer.toString:(II)Ljava/lang/String;\n+  #188 = Class              #190          // java/lang/Integer\n+  #189 = NameAndType        #91:#191      // toString:(II)Ljava/lang/String;\n+  #190 = Utf8               java/lang/Integer\n+  #191 = Utf8               (II)Ljava/lang/String;\n+  #192 = String             #193          // Filemode too long\n+  #193 = Utf8               Filemode too long\n+  #194 = Long               48l\n+  #196 = Methodref          #113.#197     // java/lang/String.valueOf:(J)Ljava/lang/String;\n+  #197 = NameAndType        #198:#199     // valueOf:(J)Ljava/lang/String;\n+  #198 = Utf8               valueOf\n+  #199 = Utf8               (J)Ljava/lang/String;\n+  #200 = String             #201          // Size too long\n+  #201 = Utf8               Size too long\n+  #202 = Long               58l\n+  #204 = String             #205          // `\\n\n+  #205 = Utf8               `\\n\n+  #206 = Utf8               LONGFILE_ERROR\n+  #207 = Utf8               ConstantValue\n+  #208 = Integer            0\n+  #209 = Utf8               LONGFILE_BSD\n+  #210 = Integer            1\n+  #211 = Utf8               (Ljava/io/OutputStream;)V\n+  #212 = Utf8               Code\n+  #213 = Utf8               LineNumberTable\n+  #214 = Utf8               LocalVariableTable\n+  #215 = Utf8               this\n+  #216 = Utf8               Lorg/apache/commons/compress/archivers/ar/ArArchiveOutputStream;\n+  #217 = Utf8               pOut\n+  #218 = Utf8               StackMapTable\n+  #219 = Class              #220          // java/lang/Throwable\n+  #220 = Utf8               java/lang/Throwable\n+  #221 = Utf8               Exceptions\n+  #222 = Utf8               createArchiveEntry\n+  #223 = Utf8               (Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;\n+  #224 = Utf8               inputFile\n+  #225 = Utf8               Ljava/io/File;\n+  #226 = Utf8               entryName\n+  #227 = Utf8               Ljava/lang/String;\n+  #228 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Lorg/apache/commons/compress/archivers/ArchiveEntry;\n+  #229 = Utf8               inputPath\n+  #230 = Utf8               Ljava/nio/file/Path;\n+  #231 = Utf8               options\n+  #232 = Utf8               [Ljava/nio/file/LinkOption;\n+  #233 = Utf8               i\n+  #234 = Utf8               pOffset\n+  #235 = Utf8               pNewOffset\n+  #236 = Utf8               pFill\n+  #237 = Utf8               C\n+  #238 = Utf8               diff\n+  #239 = Utf8               putArchiveEntry\n+  #240 = Utf8               (Lorg/apache/commons/compress/archivers/ArchiveEntry;)V\n+  #241 = Utf8               pEntry\n+  #242 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveEntry;\n+  #243 = Utf8               pArEntry\n+  #244 = Utf8               setLongFileMode\n+  #245 = Utf8               b\n+  #246 = Utf8               [B\n+  #247 = Utf8               off\n+  #248 = Utf8               len\n+  #249 = Utf8               data\n+  #250 = Utf8               bytes\n+  #251 = Utf8               header\n+  #252 = Utf8               offset\n+  #253 = Utf8               mustAppendName\n+  #254 = Utf8               n\n+  #255 = Utf8               nLength\n+  #256 = Utf8               m\n+  #257 = Utf8               u\n+  #258 = Utf8               g\n+  #259 = Utf8               fm\n+  #260 = Utf8               s\n+  #261 = Utf8               SourceFile\n+  #262 = Utf8               ArArchiveOutputStream.java\n {\n   public static final int LONGFILE_ERROR = 0;\n     descriptor: I\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 0\n \n   public static final int LONGFILE_BSD = 1;\n@@ -303,18 +303,18 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method org/apache/commons/compress/archivers/ArchiveOutputStream.\"<init>\":()V\n          4: aload_0\n          5: iconst_0\n-         6: putfield      #3                  // Field longFileMode:I\n+         6: putfield      #9                  // Field longFileMode:I\n          9: aload_0\n         10: aload_1\n-        11: putfield      #4                  // Field out:Ljava/io/OutputStream;\n+        11: putfield      #13                 // Field out:Ljava/io/OutputStream;\n         14: return\n       LineNumberTable:\n         line 54: 0\n         line 49: 4\n         line 55: 9\n         line 56: 14\n       LocalVariableTable:\n@@ -324,32 +324,32 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field finished:Z\n+         1: getfield      #17                 // Field finished:Z\n          4: ifne          11\n          7: aload_0\n-         8: invokevirtual #6                  // Method finish:()V\n+         8: invokevirtual #21                 // Method finish:()V\n         11: aload_0\n-        12: getfield      #4                  // Field out:Ljava/io/OutputStream;\n-        15: invokevirtual #7                  // Method java/io/OutputStream.close:()V\n+        12: getfield      #13                 // Field out:Ljava/io/OutputStream;\n+        15: invokevirtual #24                 // Method java/io/OutputStream.close:()V\n         18: aload_0\n         19: aconst_null\n-        20: putfield      #8                  // Field prevEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+        20: putfield      #29                 // Field prevEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n         23: goto          41\n         26: astore_1\n         27: aload_0\n-        28: getfield      #4                  // Field out:Ljava/io/OutputStream;\n-        31: invokevirtual #7                  // Method java/io/OutputStream.close:()V\n+        28: getfield      #13                 // Field out:Ljava/io/OutputStream;\n+        31: invokevirtual #24                 // Method java/io/OutputStream.close:()V\n         34: aload_0\n         35: aconst_null\n-        36: putfield      #8                  // Field prevEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+        36: putfield      #29                 // Field prevEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n         39: aload_1\n         40: athrow\n         41: return\n       Exception table:\n          from    to  target type\n              0    11    26   any\n       LineNumberTable:\n@@ -375,46 +375,46 @@\n \n   public void closeArchiveEntry() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field finished:Z\n+         1: getfield      #17                 // Field finished:Z\n          4: ifeq          17\n-         7: new           #9                  // class java/io/IOException\n+         7: new           #33                 // class java/io/IOException\n         10: dup\n-        11: ldc           #10                 // String Stream has already been finished\n-        13: invokespecial #11                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #35                 // String Stream has already been finished\n+        13: invokespecial #37                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: getfield      #8                  // Field prevEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+        18: getfield      #29                 // Field prevEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n         21: ifnull        31\n         24: aload_0\n-        25: getfield      #12                 // Field haveUnclosedEntry:Z\n+        25: getfield      #40                 // Field haveUnclosedEntry:Z\n         28: ifne          41\n-        31: new           #9                  // class java/io/IOException\n+        31: new           #33                 // class java/io/IOException\n         34: dup\n-        35: ldc           #13                 // String No current entry to close\n-        37: invokespecial #11                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        35: ldc           #43                 // String No current entry to close\n+        37: invokespecial #37                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         40: athrow\n         41: aload_0\n-        42: getfield      #14                 // Field entryOffset:J\n-        45: ldc2_w        #15                 // long 2l\n+        42: getfield      #45                 // Field entryOffset:J\n+        45: ldc2_w        #49                 // long 2l\n         48: lrem\n         49: lconst_0\n         50: lcmp\n         51: ifeq          63\n         54: aload_0\n-        55: getfield      #4                  // Field out:Ljava/io/OutputStream;\n+        55: getfield      #13                 // Field out:Ljava/io/OutputStream;\n         58: bipush        10\n-        60: invokevirtual #17                 // Method java/io/OutputStream.write:(I)V\n+        60: invokevirtual #51                 // Method java/io/OutputStream.write:(I)V\n         63: aload_0\n         64: iconst_0\n-        65: putfield      #12                 // Field haveUnclosedEntry:Z\n+        65: putfield      #40                 // Field haveUnclosedEntry:Z\n         68: return\n       LineNumberTable:\n         line 75: 0\n         line 76: 7\n         line 78: 17\n         line 79: 31\n         line 81: 41\n@@ -434,26 +434,26 @@\n \n   public org.apache.commons.compress.archivers.ArchiveEntry createArchiveEntry(java.io.File, java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n-         1: getfield      #5                  // Field finished:Z\n+         1: getfield      #17                 // Field finished:Z\n          4: ifeq          17\n-         7: new           #9                  // class java/io/IOException\n+         7: new           #33                 // class java/io/IOException\n         10: dup\n-        11: ldc           #10                 // String Stream has already been finished\n-        13: invokespecial #11                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #35                 // String Stream has already been finished\n+        13: invokespecial #37                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n-        17: new           #18                 // class org/apache/commons/compress/archivers/ar/ArArchiveEntry\n+        17: new           #55                 // class org/apache/commons/compress/archivers/ar/ArArchiveEntry\n         20: dup\n         21: aload_1\n         22: aload_2\n-        23: invokespecial #19                 // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+        23: invokespecial #57                 // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n         26: areturn\n       LineNumberTable:\n         line 90: 0\n         line 91: 7\n         line 93: 17\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -467,27 +467,27 @@\n \n   public org.apache.commons.compress.archivers.ArchiveEntry createArchiveEntry(java.nio.file.Path, java.lang.String, java.nio.file.LinkOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Lorg/apache/commons/compress/archivers/ArchiveEntry;\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=5, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #5                  // Field finished:Z\n+         1: getfield      #17                 // Field finished:Z\n          4: ifeq          17\n-         7: new           #9                  // class java/io/IOException\n+         7: new           #33                 // class java/io/IOException\n         10: dup\n-        11: ldc           #10                 // String Stream has already been finished\n-        13: invokespecial #11                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #35                 // String Stream has already been finished\n+        13: invokespecial #37                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n-        17: new           #18                 // class org/apache/commons/compress/archivers/ar/ArArchiveEntry\n+        17: new           #55                 // class org/apache/commons/compress/archivers/ar/ArArchiveEntry\n         20: dup\n         21: aload_1\n         22: aload_2\n         23: aload_3\n-        24: invokespecial #20                 // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n+        24: invokespecial #60                 // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n         27: areturn\n       LineNumberTable:\n         line 103: 0\n         line 104: 7\n         line 106: 17\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -518,15 +518,15 @@\n         15: iload         8\n         17: i2l\n         18: lload         6\n         20: lcmp\n         21: ifge          36\n         24: aload_0\n         25: iload         5\n-        27: invokevirtual #21                 // Method write:(I)V\n+        27: invokevirtual #63                 // Method write:(I)V\n         30: iinc          8, 1\n         33: goto          15\n         36: lload_3\n         37: lreturn\n       LineNumberTable:\n         line 110: 0\n         line 112: 5\n@@ -553,32 +553,32 @@\n \n   public void finish() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field haveUnclosedEntry:Z\n+         1: getfield      #40                 // Field haveUnclosedEntry:Z\n          4: ifeq          17\n-         7: new           #9                  // class java/io/IOException\n+         7: new           #33                 // class java/io/IOException\n         10: dup\n-        11: ldc           #22                 // String This archive contains unclosed entries.\n-        13: invokespecial #11                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #64                 // String This archive contains unclosed entries.\n+        13: invokespecial #37                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: getfield      #5                  // Field finished:Z\n+        18: getfield      #17                 // Field finished:Z\n         21: ifeq          34\n-        24: new           #9                  // class java/io/IOException\n+        24: new           #33                 // class java/io/IOException\n         27: dup\n-        28: ldc           #23                 // String This archive has already been finished\n-        30: invokespecial #11                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        28: ldc           #66                 // String This archive has already been finished\n+        30: invokespecial #37                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         33: athrow\n         34: aload_0\n         35: iconst_1\n-        36: putfield      #5                  // Field finished:Z\n+        36: putfield      #17                 // Field finished:Z\n         39: return\n       LineNumberTable:\n         line 123: 0\n         line 124: 7\n         line 126: 17\n         line 127: 24\n         line 129: 34\n@@ -594,73 +594,73 @@\n \n   public void putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/archivers/ArchiveEntry;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #5                  // Field finished:Z\n+         1: getfield      #17                 // Field finished:Z\n          4: ifeq          17\n-         7: new           #9                  // class java/io/IOException\n+         7: new           #33                 // class java/io/IOException\n         10: dup\n-        11: ldc           #10                 // String Stream has already been finished\n-        13: invokespecial #11                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #35                 // String Stream has already been finished\n+        13: invokespecial #37                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_1\n-        18: checkcast     #18                 // class org/apache/commons/compress/archivers/ar/ArArchiveEntry\n+        18: checkcast     #55                 // class org/apache/commons/compress/archivers/ar/ArArchiveEntry\n         21: astore_2\n         22: aload_0\n-        23: getfield      #8                  // Field prevEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+        23: getfield      #29                 // Field prevEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n         26: ifnonnull     36\n         29: aload_0\n-        30: invokespecial #24                 // Method writeArchiveHeader:()V\n+        30: invokespecial #68                 // Method writeArchiveHeader:()V\n         33: goto          107\n         36: aload_0\n-        37: getfield      #8                  // Field prevEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-        40: invokevirtual #25                 // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLength:()J\n+        37: getfield      #29                 // Field prevEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+        40: invokevirtual #71                 // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLength:()J\n         43: aload_0\n-        44: getfield      #14                 // Field entryOffset:J\n+        44: getfield      #45                 // Field entryOffset:J\n         47: lcmp\n         48: ifeq          96\n-        51: new           #9                  // class java/io/IOException\n+        51: new           #33                 // class java/io/IOException\n         54: dup\n-        55: new           #26                 // class java/lang/StringBuilder\n+        55: new           #75                 // class java/lang/StringBuilder\n         58: dup\n-        59: invokespecial #27                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        62: ldc           #28                 // String Length does not match entry (\n-        64: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        59: invokespecial #77                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        62: ldc           #78                 // String Length does not match entry (\n+        64: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         67: aload_0\n-        68: getfield      #8                  // Field prevEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-        71: invokevirtual #25                 // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLength:()J\n-        74: invokevirtual #30                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-        77: ldc           #31                 // String  !=\n-        79: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        68: getfield      #29                 // Field prevEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+        71: invokevirtual #71                 // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLength:()J\n+        74: invokevirtual #84                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        77: ldc           #87                 // String  !=\n+        79: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         82: aload_0\n-        83: getfield      #14                 // Field entryOffset:J\n-        86: invokevirtual #30                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-        89: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        92: invokespecial #11                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        83: getfield      #45                 // Field entryOffset:J\n+        86: invokevirtual #84                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        89: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        92: invokespecial #37                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         95: athrow\n         96: aload_0\n-        97: getfield      #12                 // Field haveUnclosedEntry:Z\n+        97: getfield      #40                 // Field haveUnclosedEntry:Z\n        100: ifeq          107\n        103: aload_0\n-       104: invokevirtual #33                 // Method closeArchiveEntry:()V\n+       104: invokevirtual #93                 // Method closeArchiveEntry:()V\n        107: aload_0\n        108: aload_2\n-       109: putfield      #8                  // Field prevEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+       109: putfield      #29                 // Field prevEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n        112: aload_0\n        113: aload_2\n-       114: invokespecial #34                 // Method writeEntryHeader:(Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;)V\n+       114: invokespecial #96                 // Method writeEntryHeader:(Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;)V\n        117: aload_0\n        118: lconst_0\n-       119: putfield      #14                 // Field entryOffset:J\n+       119: putfield      #45                 // Field entryOffset:J\n        122: aload_0\n        123: iconst_1\n-       124: putfield      #12                 // Field haveUnclosedEntry:Z\n+       124: putfield      #40                 // Field haveUnclosedEntry:Z\n        127: return\n       LineNumberTable:\n         line 134: 0\n         line 135: 7\n         line 138: 17\n         line 139: 22\n         line 140: 29\n@@ -691,15 +691,15 @@\n   public void setLongFileMode(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #3                  // Field longFileMode:I\n+         2: putfield      #9                  // Field longFileMode:I\n          5: return\n       LineNumberTable:\n         line 168: 0\n         line 169: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/ar/ArArchiveOutputStream;\n@@ -707,29 +707,29 @@\n \n   public void write(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #4                  // Field out:Ljava/io/OutputStream;\n+         1: getfield      #13                 // Field out:Ljava/io/OutputStream;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokevirtual #35                 // Method java/io/OutputStream.write:([BII)V\n+         7: invokevirtual #100                // Method java/io/OutputStream.write:([BII)V\n         10: aload_0\n         11: iload_3\n-        12: invokevirtual #36                 // Method count:(I)V\n+        12: invokevirtual #103                // Method count:(I)V\n         15: aload_0\n         16: dup\n-        17: getfield      #14                 // Field entryOffset:J\n+        17: getfield      #45                 // Field entryOffset:J\n         20: iload_3\n         21: i2l\n         22: ladd\n-        23: putfield      #14                 // Field entryOffset:J\n+        23: putfield      #45                 // Field entryOffset:J\n         26: return\n       LineNumberTable:\n         line 173: 0\n         line 174: 10\n         line 175: 15\n         line 176: 26\n       LocalVariableTable:\n@@ -743,20 +743,20 @@\n \n   private long write(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)J\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_1\n-         1: getstatic     #37                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;\n-         4: invokevirtual #38                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+         1: getstatic     #106                // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;\n+         4: invokevirtual #112                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n          7: astore_2\n          8: aload_0\n          9: aload_2\n-        10: invokevirtual #39                 // Method write:([B)V\n+        10: invokevirtual #118                // Method write:([B)V\n         13: aload_2\n         14: arraylength\n         15: i2l\n         16: lreturn\n       LineNumberTable:\n         line 179: 0\n         line 180: 8\n@@ -770,21 +770,21 @@\n       throws java.io.IOException\n \n   private void writeArchiveHeader() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=1\n-         0: ldc           #40                 // String !<arch>\\n\n-         2: invokestatic  #41                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n+         0: ldc           #121                // String !<arch>\\n\n+         2: invokestatic  #123                // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n          5: astore_1\n          6: aload_0\n-         7: getfield      #4                  // Field out:Ljava/io/OutputStream;\n+         7: getfield      #13                 // Field out:Ljava/io/OutputStream;\n         10: aload_1\n-        11: invokevirtual #42                 // Method java/io/OutputStream.write:([B)V\n+        11: invokevirtual #129                // Method java/io/OutputStream.write:([B)V\n         14: return\n       LineNumberTable:\n         line 185: 0\n         line 186: 6\n         line 187: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -799,247 +799,247 @@\n     Code:\n       stack=6, locals=12, args_size=2\n          0: lconst_0\n          1: lstore_2\n          2: iconst_0\n          3: istore        4\n          5: aload_1\n-         6: invokevirtual #43                 // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.getName:()Ljava/lang/String;\n+         6: invokevirtual #130                // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.getName:()Ljava/lang/String;\n          9: astore        5\n         11: aload         5\n-        13: invokevirtual #44                 // Method java/lang/String.length:()I\n+        13: invokevirtual #133                // Method java/lang/String.length:()I\n         16: istore        6\n         18: iconst_0\n         19: aload_0\n-        20: getfield      #3                  // Field longFileMode:I\n+        20: getfield      #9                  // Field longFileMode:I\n         23: if_icmpne     61\n         26: iload         6\n         28: bipush        16\n         30: if_icmple     61\n-        33: new           #9                  // class java/io/IOException\n+        33: new           #33                 // class java/io/IOException\n         36: dup\n-        37: new           #26                 // class java/lang/StringBuilder\n+        37: new           #75                 // class java/lang/StringBuilder\n         40: dup\n-        41: invokespecial #27                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        44: ldc           #45                 // String File name too long, > 16 chars:\n-        46: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        41: invokespecial #77                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        44: ldc           #137                // String File name too long, > 16 chars:\n+        46: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         49: aload         5\n-        51: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        54: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        57: invokespecial #11                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        51: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        54: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        57: invokespecial #37                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         60: athrow\n         61: iconst_1\n         62: aload_0\n-        63: getfield      #3                  // Field longFileMode:I\n+        63: getfield      #9                  // Field longFileMode:I\n         66: if_icmpne     119\n         69: iload         6\n         71: bipush        16\n         73: if_icmpgt     86\n         76: aload         5\n-        78: ldc           #46                 // String\n-        80: invokevirtual #47                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+        78: ldc           #139                // String\n+        80: invokevirtual #141                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n         83: ifeq          119\n         86: iconst_1\n         87: istore        4\n         89: lload_2\n         90: aload_0\n-        91: new           #26                 // class java/lang/StringBuilder\n+        91: new           #75                 // class java/lang/StringBuilder\n         94: dup\n-        95: invokespecial #27                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        98: ldc           #49                 // String #1/\n-       100: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        95: invokespecial #77                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        98: ldc           #147                // String #1/\n+       100: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        103: iload         6\n-       105: invokevirtual #50                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       108: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       111: invokespecial #51                 // Method write:(Ljava/lang/String;)J\n+       105: invokevirtual #149                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       108: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       111: invokespecial #152                // Method write:(Ljava/lang/String;)J\n        114: ladd\n        115: lstore_2\n        116: goto          128\n        119: lload_2\n        120: aload_0\n        121: aload         5\n-       123: invokespecial #51                 // Method write:(Ljava/lang/String;)J\n+       123: invokespecial #152                // Method write:(Ljava/lang/String;)J\n        126: ladd\n        127: lstore_2\n        128: aload_0\n        129: lload_2\n-       130: ldc2_w        #52                 // long 16l\n+       130: ldc2_w        #155                // long 16l\n        133: bipush        32\n-       135: invokespecial #54                 // Method fill:(JJC)J\n+       135: invokespecial #157                // Method fill:(JJC)J\n        138: lstore_2\n-       139: new           #26                 // class java/lang/StringBuilder\n+       139: new           #75                 // class java/lang/StringBuilder\n        142: dup\n-       143: invokespecial #27                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       146: ldc           #55                 // String\n-       148: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       143: invokespecial #77                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       146: ldc           #161                // String\n+       148: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        151: aload_1\n-       152: invokevirtual #56                 // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLastModified:()J\n-       155: invokevirtual #30                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-       158: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       152: invokevirtual #163                // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLastModified:()J\n+       155: invokevirtual #84                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+       158: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        161: astore        7\n        163: aload         7\n-       165: invokevirtual #44                 // Method java/lang/String.length:()I\n+       165: invokevirtual #133                // Method java/lang/String.length:()I\n        168: bipush        12\n        170: if_icmple     183\n-       173: new           #9                  // class java/io/IOException\n+       173: new           #33                 // class java/io/IOException\n        176: dup\n-       177: ldc           #57                 // String Last modified too long\n-       179: invokespecial #11                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       177: ldc           #166                // String Last modified too long\n+       179: invokespecial #37                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        182: athrow\n        183: lload_2\n        184: aload_0\n        185: aload         7\n-       187: invokespecial #51                 // Method write:(Ljava/lang/String;)J\n+       187: invokespecial #152                // Method write:(Ljava/lang/String;)J\n        190: ladd\n        191: lstore_2\n        192: aload_0\n        193: lload_2\n-       194: ldc2_w        #58                 // long 28l\n+       194: ldc2_w        #168                // long 28l\n        197: bipush        32\n-       199: invokespecial #54                 // Method fill:(JJC)J\n+       199: invokespecial #157                // Method fill:(JJC)J\n        202: lstore_2\n-       203: new           #26                 // class java/lang/StringBuilder\n+       203: new           #75                 // class java/lang/StringBuilder\n        206: dup\n-       207: invokespecial #27                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       210: ldc           #55                 // String\n-       212: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       207: invokespecial #77                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       210: ldc           #161                // String\n+       212: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        215: aload_1\n-       216: invokevirtual #60                 // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.getUserId:()I\n-       219: invokevirtual #50                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       222: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       216: invokevirtual #170                // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.getUserId:()I\n+       219: invokevirtual #149                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       222: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        225: astore        8\n        227: aload         8\n-       229: invokevirtual #44                 // Method java/lang/String.length:()I\n+       229: invokevirtual #133                // Method java/lang/String.length:()I\n        232: bipush        6\n        234: if_icmple     247\n-       237: new           #9                  // class java/io/IOException\n+       237: new           #33                 // class java/io/IOException\n        240: dup\n-       241: ldc           #61                 // String User id too long\n-       243: invokespecial #11                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       241: ldc           #173                // String User id too long\n+       243: invokespecial #37                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        246: athrow\n        247: lload_2\n        248: aload_0\n        249: aload         8\n-       251: invokespecial #51                 // Method write:(Ljava/lang/String;)J\n+       251: invokespecial #152                // Method write:(Ljava/lang/String;)J\n        254: ladd\n        255: lstore_2\n        256: aload_0\n        257: lload_2\n-       258: ldc2_w        #62                 // long 34l\n+       258: ldc2_w        #175                // long 34l\n        261: bipush        32\n-       263: invokespecial #54                 // Method fill:(JJC)J\n+       263: invokespecial #157                // Method fill:(JJC)J\n        266: lstore_2\n-       267: new           #26                 // class java/lang/StringBuilder\n+       267: new           #75                 // class java/lang/StringBuilder\n        270: dup\n-       271: invokespecial #27                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       274: ldc           #55                 // String\n-       276: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       271: invokespecial #77                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       274: ldc           #161                // String\n+       276: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        279: aload_1\n-       280: invokevirtual #64                 // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.getGroupId:()I\n-       283: invokevirtual #50                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       286: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       280: invokevirtual #177                // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.getGroupId:()I\n+       283: invokevirtual #149                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       286: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        289: astore        9\n        291: aload         9\n-       293: invokevirtual #44                 // Method java/lang/String.length:()I\n+       293: invokevirtual #133                // Method java/lang/String.length:()I\n        296: bipush        6\n        298: if_icmple     311\n-       301: new           #9                  // class java/io/IOException\n+       301: new           #33                 // class java/io/IOException\n        304: dup\n-       305: ldc           #65                 // String Group id too long\n-       307: invokespecial #11                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       305: ldc           #180                // String Group id too long\n+       307: invokespecial #37                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        310: athrow\n        311: lload_2\n        312: aload_0\n        313: aload         9\n-       315: invokespecial #51                 // Method write:(Ljava/lang/String;)J\n+       315: invokespecial #152                // Method write:(Ljava/lang/String;)J\n        318: ladd\n        319: lstore_2\n        320: aload_0\n        321: lload_2\n-       322: ldc2_w        #66                 // long 40l\n+       322: ldc2_w        #182                // long 40l\n        325: bipush        32\n-       327: invokespecial #54                 // Method fill:(JJC)J\n+       327: invokespecial #157                // Method fill:(JJC)J\n        330: lstore_2\n-       331: new           #26                 // class java/lang/StringBuilder\n+       331: new           #75                 // class java/lang/StringBuilder\n        334: dup\n-       335: invokespecial #27                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       338: ldc           #55                 // String\n-       340: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       335: invokespecial #77                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       338: ldc           #161                // String\n+       340: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        343: aload_1\n-       344: invokevirtual #68                 // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.getMode:()I\n+       344: invokevirtual #184                // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.getMode:()I\n        347: bipush        8\n-       349: invokestatic  #69                 // Method java/lang/Integer.toString:(II)Ljava/lang/String;\n-       352: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       355: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       349: invokestatic  #187                // Method java/lang/Integer.toString:(II)Ljava/lang/String;\n+       352: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       355: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        358: astore        10\n        360: aload         10\n-       362: invokevirtual #44                 // Method java/lang/String.length:()I\n+       362: invokevirtual #133                // Method java/lang/String.length:()I\n        365: bipush        8\n        367: if_icmple     380\n-       370: new           #9                  // class java/io/IOException\n+       370: new           #33                 // class java/io/IOException\n        373: dup\n-       374: ldc           #70                 // String Filemode too long\n-       376: invokespecial #11                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       374: ldc           #192                // String Filemode too long\n+       376: invokespecial #37                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        379: athrow\n        380: lload_2\n        381: aload_0\n        382: aload         10\n-       384: invokespecial #51                 // Method write:(Ljava/lang/String;)J\n+       384: invokespecial #152                // Method write:(Ljava/lang/String;)J\n        387: ladd\n        388: lstore_2\n        389: aload_0\n        390: lload_2\n-       391: ldc2_w        #71                 // long 48l\n+       391: ldc2_w        #194                // long 48l\n        394: bipush        32\n-       396: invokespecial #54                 // Method fill:(JJC)J\n+       396: invokespecial #157                // Method fill:(JJC)J\n        399: lstore_2\n        400: aload_1\n-       401: invokevirtual #25                 // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLength:()J\n+       401: invokevirtual #71                 // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLength:()J\n        404: iload         4\n        406: ifeq          414\n        409: iload         6\n        411: goto          415\n        414: iconst_0\n        415: i2l\n        416: ladd\n-       417: invokestatic  #73                 // Method java/lang/String.valueOf:(J)Ljava/lang/String;\n+       417: invokestatic  #196                // Method java/lang/String.valueOf:(J)Ljava/lang/String;\n        420: astore        11\n        422: aload         11\n-       424: invokevirtual #44                 // Method java/lang/String.length:()I\n+       424: invokevirtual #133                // Method java/lang/String.length:()I\n        427: bipush        10\n        429: if_icmple     442\n-       432: new           #9                  // class java/io/IOException\n+       432: new           #33                 // class java/io/IOException\n        435: dup\n-       436: ldc           #74                 // String Size too long\n-       438: invokespecial #11                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       436: ldc           #200                // String Size too long\n+       438: invokespecial #37                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        441: athrow\n        442: lload_2\n        443: aload_0\n        444: aload         11\n-       446: invokespecial #51                 // Method write:(Ljava/lang/String;)J\n+       446: invokespecial #152                // Method write:(Ljava/lang/String;)J\n        449: ladd\n        450: lstore_2\n        451: aload_0\n        452: lload_2\n-       453: ldc2_w        #75                 // long 58l\n+       453: ldc2_w        #202                // long 58l\n        456: bipush        32\n-       458: invokespecial #54                 // Method fill:(JJC)J\n+       458: invokespecial #157                // Method fill:(JJC)J\n        461: lstore_2\n        462: lload_2\n        463: aload_0\n-       464: ldc           #77                 // String `\\n\n-       466: invokespecial #51                 // Method write:(Ljava/lang/String;)J\n+       464: ldc           #204                // String `\\n\n+       466: invokespecial #152                // Method write:(Ljava/lang/String;)J\n        469: ladd\n        470: lstore_2\n        471: iload         4\n        473: ifeq          485\n        476: lload_2\n        477: aload_0\n        478: aload         5\n-       480: invokespecial #51                 // Method write:(Ljava/lang/String;)J\n+       480: invokespecial #152                // Method write:(Ljava/lang/String;)J\n        483: ladd\n        484: lstore_2\n        485: return\n       LineNumberTable:\n         line 191: 0\n         line 192: 2\n         line 194: 5\n"}]}
