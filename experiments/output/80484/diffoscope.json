{"diffoscope-json-version": 1, "source1": "first/BaseNCodec.class", "source2": "second/BaseNCodec.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,203 +1,203 @@\n-  SHA-256 checksum e6f12dd03be94e8841a07fc74e768e4890e52b53654559cea00e619720fb9402\n+  SHA-256 checksum 9e542338fc450aa5fb4cdf77d4911e87526a45b42244f23dab9ee7ee5d1fea5f\n   Compiled from \"BaseNCodec.java\"\n public abstract class org.apache.commons.codec.binary.BaseNCodec implements org.apache.commons.codec.BinaryEncoder,org.apache.commons.codec.BinaryDecoder\n   minor version: 0\n   major version: 51\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #1                          // org/apache/commons/codec/binary/BaseNCodec\n-  super_class: #8                         // java/lang/Object\n+  super_class: #3                         // java/lang/Object\n   interfaces: 2, fields: 13, methods: 24, attributes: 2\n Constant pool:\n     #1 = Class              #2            // org/apache/commons/codec/binary/BaseNCodec\n     #2 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n-    #3 = Methodref          #1.#4         // org/apache/commons/codec/binary/BaseNCodec.\"<init>\":(IIIIB)V\n-    #4 = NameAndType        #5:#6         // \"<init>\":(IIIIB)V\n-    #5 = Utf8               <init>\n-    #6 = Utf8               (IIIIB)V\n-    #7 = Methodref          #8.#9         // java/lang/Object.\"<init>\":()V\n-    #8 = Class              #10           // java/lang/Object\n-    #9 = NameAndType        #5:#11        // \"<init>\":()V\n-   #10 = Utf8               java/lang/Object\n-   #11 = Utf8               ()V\n-   #12 = Fieldref           #1.#13        // org/apache/commons/codec/binary/BaseNCodec.PAD:B\n-   #13 = NameAndType        #14:#15       // PAD:B\n-   #14 = Utf8               PAD\n-   #15 = Utf8               B\n-   #16 = Fieldref           #1.#17        // org/apache/commons/codec/binary/BaseNCodec.unencodedBlockSize:I\n-   #17 = NameAndType        #18:#19       // unencodedBlockSize:I\n-   #18 = Utf8               unencodedBlockSize\n-   #19 = Utf8               I\n-   #20 = Fieldref           #1.#21        // org/apache/commons/codec/binary/BaseNCodec.encodedBlockSize:I\n-   #21 = NameAndType        #22:#19       // encodedBlockSize:I\n-   #22 = Utf8               encodedBlockSize\n-   #23 = Fieldref           #1.#24        // org/apache/commons/codec/binary/BaseNCodec.lineLength:I\n-   #24 = NameAndType        #25:#19       // lineLength:I\n-   #25 = Utf8               lineLength\n-   #26 = Fieldref           #1.#27        // org/apache/commons/codec/binary/BaseNCodec.chunkSeparatorLength:I\n-   #27 = NameAndType        #28:#19       // chunkSeparatorLength:I\n-   #28 = Utf8               chunkSeparatorLength\n-   #29 = Fieldref           #1.#30        // org/apache/commons/codec/binary/BaseNCodec.pad:B\n-   #30 = NameAndType        #31:#15       // pad:B\n-   #31 = Utf8               pad\n-   #32 = Fieldref           #33.#34       // org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n-   #33 = Class              #35           // org/apache/commons/codec/binary/BaseNCodec$Context\n-   #34 = NameAndType        #36:#37       // buffer:[B\n-   #35 = Utf8               org/apache/commons/codec/binary/BaseNCodec$Context\n-   #36 = Utf8               buffer\n-   #37 = Utf8               [B\n-   #38 = Fieldref           #33.#39       // org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n-   #39 = NameAndType        #40:#19       // pos:I\n-   #40 = Utf8               pos\n-   #41 = Fieldref           #33.#42       // org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n-   #42 = NameAndType        #43:#19       // readPos:I\n-   #43 = Utf8               readPos\n-   #44 = Methodref          #1.#45        // org/apache/commons/codec/binary/BaseNCodec.getDefaultBufferSize:()I\n-   #45 = NameAndType        #46:#47       // getDefaultBufferSize:()I\n-   #46 = Utf8               getDefaultBufferSize\n-   #47 = Utf8               ()I\n-   #48 = Methodref          #49.#50       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #49 = Class              #51           // java/lang/System\n-   #50 = NameAndType        #52:#53       // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #51 = Utf8               java/lang/System\n-   #52 = Utf8               arraycopy\n-   #53 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #54 = Methodref          #1.#55        // org/apache/commons/codec/binary/BaseNCodec.resizeBuffer:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n-   #55 = NameAndType        #56:#57       // resizeBuffer:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n-   #56 = Utf8               resizeBuffer\n-   #57 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n-   #58 = Methodref          #1.#59        // org/apache/commons/codec/binary/BaseNCodec.available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-   #59 = NameAndType        #60:#61       // available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-   #60 = Utf8               available\n-   #61 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-   #62 = Methodref          #63.#64       // java/lang/Math.min:(II)I\n-   #63 = Class              #65           // java/lang/Math\n-   #64 = NameAndType        #66:#67       // min:(II)I\n-   #65 = Utf8               java/lang/Math\n-   #66 = Utf8               min\n-   #67 = Utf8               (II)I\n-   #68 = Fieldref           #33.#69       // org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n-   #69 = NameAndType        #70:#71       // eof:Z\n-   #70 = Utf8               eof\n-   #71 = Utf8               Z\n-   #72 = Class              #37           // \"[B\"\n-   #73 = Class              #74           // org/apache/commons/codec/EncoderException\n-   #74 = Utf8               org/apache/commons/codec/EncoderException\n-   #75 = String             #76           // Parameter supplied to Base-N encode is not a byte[]\n-   #76 = Utf8               Parameter supplied to Base-N encode is not a byte[]\n-   #77 = Methodref          #73.#78       // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n-   #78 = NameAndType        #5:#79        // \"<init>\":(Ljava/lang/String;)V\n-   #79 = Utf8               (Ljava/lang/String;)V\n-   #80 = Methodref          #1.#81        // org/apache/commons/codec/binary/BaseNCodec.encode:([B)[B\n-   #81 = NameAndType        #82:#83       // encode:([B)[B\n-   #82 = Utf8               encode\n-   #83 = Utf8               ([B)[B\n-   #84 = Methodref          #85.#86       // org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;\n-   #85 = Class              #87           // org/apache/commons/codec/binary/StringUtils\n-   #86 = NameAndType        #88:#89       // newStringUtf8:([B)Ljava/lang/String;\n-   #87 = Utf8               org/apache/commons/codec/binary/StringUtils\n-   #88 = Utf8               newStringUtf8\n-   #89 = Utf8               ([B)Ljava/lang/String;\n-   #90 = Methodref          #1.#91        // org/apache/commons/codec/binary/BaseNCodec.decode:([B)[B\n-   #91 = NameAndType        #92:#83       // decode:([B)[B\n-   #92 = Utf8               decode\n-   #93 = Class              #94           // java/lang/String\n-   #94 = Utf8               java/lang/String\n-   #95 = Methodref          #1.#96        // org/apache/commons/codec/binary/BaseNCodec.decode:(Ljava/lang/String;)[B\n-   #96 = NameAndType        #92:#97       // decode:(Ljava/lang/String;)[B\n-   #97 = Utf8               (Ljava/lang/String;)[B\n-   #98 = Class              #99           // org/apache/commons/codec/DecoderException\n-   #99 = Utf8               org/apache/commons/codec/DecoderException\n-  #100 = String             #101          // Parameter supplied to Base-N decode is not a byte[] or a String\n-  #101 = Utf8               Parameter supplied to Base-N decode is not a byte[] or a String\n-  #102 = Methodref          #98.#78       // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n-  #103 = Methodref          #85.#104      // org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n-  #104 = NameAndType        #105:#97      // getBytesUtf8:(Ljava/lang/String;)[B\n-  #105 = Utf8               getBytesUtf8\n-  #106 = Methodref          #33.#9        // org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n-  #107 = Methodref          #1.#108       // org/apache/commons/codec/binary/BaseNCodec.decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #108 = NameAndType        #92:#109      // decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #109 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #110 = Methodref          #1.#111       // org/apache/commons/codec/binary/BaseNCodec.readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-  #111 = NameAndType        #112:#113     // readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-  #112 = Utf8               readResults\n-  #113 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-  #114 = Methodref          #1.#115       // org/apache/commons/codec/binary/BaseNCodec.encode:([BII)[B\n-  #115 = NameAndType        #82:#116      // encode:([BII)[B\n-  #116 = Utf8               ([BII)[B\n-  #117 = Methodref          #1.#118       // org/apache/commons/codec/binary/BaseNCodec.encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #118 = NameAndType        #82:#109      // encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #119 = Methodref          #1.#120       // org/apache/commons/codec/binary/BaseNCodec.isInAlphabet:(B)Z\n-  #120 = NameAndType        #121:#122     // isInAlphabet:(B)Z\n-  #121 = Utf8               isInAlphabet\n-  #122 = Utf8               (B)Z\n-  #123 = Methodref          #1.#124       // org/apache/commons/codec/binary/BaseNCodec.isWhiteSpace:(B)Z\n-  #124 = NameAndType        #125:#122     // isWhiteSpace:(B)Z\n-  #125 = Utf8               isWhiteSpace\n-  #126 = Methodref          #1.#127       // org/apache/commons/codec/binary/BaseNCodec.isInAlphabet:([BZ)Z\n-  #127 = NameAndType        #121:#128     // isInAlphabet:([BZ)Z\n-  #128 = Utf8               ([BZ)Z\n-  #129 = Class              #130          // org/apache/commons/codec/BinaryEncoder\n-  #130 = Utf8               org/apache/commons/codec/BinaryEncoder\n-  #131 = Class              #132          // org/apache/commons/codec/BinaryDecoder\n-  #132 = Utf8               org/apache/commons/codec/BinaryDecoder\n-  #133 = Utf8               EOF\n-  #134 = Utf8               ConstantValue\n-  #135 = Integer            -1\n-  #136 = Utf8               MIME_CHUNK_SIZE\n-  #137 = Integer            76\n-  #138 = Utf8               PEM_CHUNK_SIZE\n-  #139 = Integer            64\n-  #140 = Utf8               DEFAULT_BUFFER_RESIZE_FACTOR\n-  #141 = Integer            2\n-  #142 = Utf8               DEFAULT_BUFFER_SIZE\n-  #143 = Integer            8192\n-  #144 = Utf8               MASK_8BITS\n-  #145 = Integer            255\n-  #146 = Utf8               PAD_DEFAULT\n-  #147 = Integer            61\n-  #148 = Utf8               Deprecated\n-  #149 = Utf8               RuntimeVisibleAnnotations\n-  #150 = Utf8               Ljava/lang/Deprecated;\n-  #151 = Utf8               (IIII)V\n-  #152 = Utf8               Code\n-  #153 = Utf8               LineNumberTable\n-  #154 = Utf8               LocalVariableTable\n-  #155 = Utf8               this\n-  #156 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec;\n-  #157 = Utf8               useChunking\n-  #158 = Utf8               StackMapTable\n-  #159 = Utf8               hasData\n-  #160 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n-  #161 = Utf8               context\n-  #162 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-  #163 = Utf8               b\n-  #164 = Utf8               ensureBufferSize\n-  #165 = Utf8               (ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n-  #166 = Utf8               size\n-  #167 = Utf8               len\n-  #168 = Utf8               bPos\n-  #169 = Utf8               bAvail\n-  #170 = Utf8               byteToCheck\n-  #171 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #172 = Utf8               obj\n-  #173 = Utf8               Ljava/lang/Object;\n-  #174 = Utf8               Exceptions\n-  #175 = Utf8               encodeToString\n-  #176 = Utf8               pArray\n-  #177 = Utf8               encodeAsString\n-  #178 = Utf8               Ljava/lang/String;\n-  #179 = Utf8               result\n-  #180 = Utf8               offset\n-  #181 = Utf8               length\n-  #182 = Utf8               buf\n+    #3 = Class              #4            // java/lang/Object\n+    #4 = Utf8               java/lang/Object\n+    #5 = Class              #6            // org/apache/commons/codec/BinaryEncoder\n+    #6 = Utf8               org/apache/commons/codec/BinaryEncoder\n+    #7 = Class              #8            // org/apache/commons/codec/BinaryDecoder\n+    #8 = Utf8               org/apache/commons/codec/BinaryDecoder\n+    #9 = Utf8               EOF\n+   #10 = Utf8               I\n+   #11 = Utf8               ConstantValue\n+   #12 = Integer            -1\n+   #13 = Utf8               MIME_CHUNK_SIZE\n+   #14 = Integer            76\n+   #15 = Utf8               PEM_CHUNK_SIZE\n+   #16 = Integer            64\n+   #17 = Utf8               DEFAULT_BUFFER_RESIZE_FACTOR\n+   #18 = Integer            2\n+   #19 = Utf8               DEFAULT_BUFFER_SIZE\n+   #20 = Integer            8192\n+   #21 = Utf8               MASK_8BITS\n+   #22 = Integer            255\n+   #23 = Utf8               PAD_DEFAULT\n+   #24 = Utf8               B\n+   #25 = Integer            61\n+   #26 = Utf8               PAD\n+   #27 = Utf8               Deprecated\n+   #28 = Utf8               RuntimeVisibleAnnotations\n+   #29 = Utf8               Ljava/lang/Deprecated;\n+   #30 = Utf8               pad\n+   #31 = Utf8               unencodedBlockSize\n+   #32 = Utf8               encodedBlockSize\n+   #33 = Utf8               lineLength\n+   #34 = Utf8               chunkSeparatorLength\n+   #35 = Utf8               <init>\n+   #36 = Utf8               (IIII)V\n+   #37 = Utf8               Code\n+   #38 = Methodref          #1.#39        // org/apache/commons/codec/binary/BaseNCodec.\"<init>\":(IIIIB)V\n+   #39 = NameAndType        #35:#40       // \"<init>\":(IIIIB)V\n+   #40 = Utf8               (IIIIB)V\n+   #41 = Utf8               LineNumberTable\n+   #42 = Utf8               LocalVariableTable\n+   #43 = Utf8               this\n+   #44 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec;\n+   #45 = Methodref          #3.#46        // java/lang/Object.\"<init>\":()V\n+   #46 = NameAndType        #35:#47       // \"<init>\":()V\n+   #47 = Utf8               ()V\n+   #48 = Fieldref           #1.#49        // org/apache/commons/codec/binary/BaseNCodec.PAD:B\n+   #49 = NameAndType        #26:#24       // PAD:B\n+   #50 = Fieldref           #1.#51        // org/apache/commons/codec/binary/BaseNCodec.unencodedBlockSize:I\n+   #51 = NameAndType        #31:#10       // unencodedBlockSize:I\n+   #52 = Fieldref           #1.#53        // org/apache/commons/codec/binary/BaseNCodec.encodedBlockSize:I\n+   #53 = NameAndType        #32:#10       // encodedBlockSize:I\n+   #54 = Fieldref           #1.#55        // org/apache/commons/codec/binary/BaseNCodec.lineLength:I\n+   #55 = NameAndType        #33:#10       // lineLength:I\n+   #56 = Fieldref           #1.#57        // org/apache/commons/codec/binary/BaseNCodec.chunkSeparatorLength:I\n+   #57 = NameAndType        #34:#10       // chunkSeparatorLength:I\n+   #58 = Fieldref           #1.#59        // org/apache/commons/codec/binary/BaseNCodec.pad:B\n+   #59 = NameAndType        #30:#24       // pad:B\n+   #60 = Utf8               useChunking\n+   #61 = Utf8               Z\n+   #62 = Utf8               StackMapTable\n+   #63 = Utf8               hasData\n+   #64 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n+   #65 = Fieldref           #66.#68       // org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+   #66 = Class              #67           // org/apache/commons/codec/binary/BaseNCodec$Context\n+   #67 = Utf8               org/apache/commons/codec/binary/BaseNCodec$Context\n+   #68 = NameAndType        #69:#70       // buffer:[B\n+   #69 = Utf8               buffer\n+   #70 = Utf8               [B\n+   #71 = Utf8               context\n+   #72 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+   #73 = Utf8               available\n+   #74 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+   #75 = Fieldref           #66.#76       // org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+   #76 = NameAndType        #77:#10       // pos:I\n+   #77 = Utf8               pos\n+   #78 = Fieldref           #66.#79       // org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n+   #79 = NameAndType        #80:#10       // readPos:I\n+   #80 = Utf8               readPos\n+   #81 = Utf8               getDefaultBufferSize\n+   #82 = Utf8               ()I\n+   #83 = Utf8               resizeBuffer\n+   #84 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+   #85 = Methodref          #1.#86        // org/apache/commons/codec/binary/BaseNCodec.getDefaultBufferSize:()I\n+   #86 = NameAndType        #81:#82       // getDefaultBufferSize:()I\n+   #87 = Methodref          #88.#90       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #88 = Class              #89           // java/lang/System\n+   #89 = Utf8               java/lang/System\n+   #90 = NameAndType        #91:#92       // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #91 = Utf8               arraycopy\n+   #92 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #93 = Utf8               b\n+   #94 = Utf8               ensureBufferSize\n+   #95 = Utf8               (ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+   #96 = Methodref          #1.#97        // org/apache/commons/codec/binary/BaseNCodec.resizeBuffer:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+   #97 = NameAndType        #83:#84       // resizeBuffer:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+   #98 = Utf8               size\n+   #99 = Utf8               readResults\n+  #100 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+  #101 = Methodref          #1.#102       // org/apache/commons/codec/binary/BaseNCodec.available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+  #102 = NameAndType        #73:#74       // available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+  #103 = Methodref          #104.#106     // java/lang/Math.min:(II)I\n+  #104 = Class              #105          // java/lang/Math\n+  #105 = Utf8               java/lang/Math\n+  #106 = NameAndType        #107:#108     // min:(II)I\n+  #107 = Utf8               min\n+  #108 = Utf8               (II)I\n+  #109 = Fieldref           #66.#110      // org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n+  #110 = NameAndType        #111:#61      // eof:Z\n+  #111 = Utf8               eof\n+  #112 = Utf8               bPos\n+  #113 = Utf8               bAvail\n+  #114 = Utf8               len\n+  #115 = Utf8               isWhiteSpace\n+  #116 = Utf8               (B)Z\n+  #117 = Utf8               byteToCheck\n+  #118 = Utf8               encode\n+  #119 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #120 = Utf8               Exceptions\n+  #121 = Class              #122          // org/apache/commons/codec/EncoderException\n+  #122 = Utf8               org/apache/commons/codec/EncoderException\n+  #123 = Class              #70           // \"[B\"\n+  #124 = String             #125          // Parameter supplied to Base-N encode is not a byte[]\n+  #125 = Utf8               Parameter supplied to Base-N encode is not a byte[]\n+  #126 = Methodref          #121.#127     // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+  #127 = NameAndType        #35:#128      // \"<init>\":(Ljava/lang/String;)V\n+  #128 = Utf8               (Ljava/lang/String;)V\n+  #129 = Methodref          #1.#130       // org/apache/commons/codec/binary/BaseNCodec.encode:([B)[B\n+  #130 = NameAndType        #118:#131     // encode:([B)[B\n+  #131 = Utf8               ([B)[B\n+  #132 = Utf8               obj\n+  #133 = Utf8               Ljava/lang/Object;\n+  #134 = Utf8               encodeToString\n+  #135 = Utf8               ([B)Ljava/lang/String;\n+  #136 = Methodref          #137.#139     // org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;\n+  #137 = Class              #138          // org/apache/commons/codec/binary/StringUtils\n+  #138 = Utf8               org/apache/commons/codec/binary/StringUtils\n+  #139 = NameAndType        #140:#135     // newStringUtf8:([B)Ljava/lang/String;\n+  #140 = Utf8               newStringUtf8\n+  #141 = Utf8               pArray\n+  #142 = Utf8               encodeAsString\n+  #143 = Utf8               decode\n+  #144 = Class              #145          // org/apache/commons/codec/DecoderException\n+  #145 = Utf8               org/apache/commons/codec/DecoderException\n+  #146 = Methodref          #1.#147       // org/apache/commons/codec/binary/BaseNCodec.decode:([B)[B\n+  #147 = NameAndType        #143:#131     // decode:([B)[B\n+  #148 = Class              #149          // java/lang/String\n+  #149 = Utf8               java/lang/String\n+  #150 = Methodref          #1.#151       // org/apache/commons/codec/binary/BaseNCodec.decode:(Ljava/lang/String;)[B\n+  #151 = NameAndType        #143:#152     // decode:(Ljava/lang/String;)[B\n+  #152 = Utf8               (Ljava/lang/String;)[B\n+  #153 = String             #154          // Parameter supplied to Base-N decode is not a byte[] or a String\n+  #154 = Utf8               Parameter supplied to Base-N decode is not a byte[] or a String\n+  #155 = Methodref          #144.#127     // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n+  #156 = Methodref          #137.#157     // org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n+  #157 = NameAndType        #158:#152     // getBytesUtf8:(Ljava/lang/String;)[B\n+  #158 = Utf8               getBytesUtf8\n+  #159 = Utf8               Ljava/lang/String;\n+  #160 = Methodref          #66.#46       // org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n+  #161 = Methodref          #1.#162       // org/apache/commons/codec/binary/BaseNCodec.decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+  #162 = NameAndType        #143:#163     // decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+  #163 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+  #164 = Methodref          #1.#165       // org/apache/commons/codec/binary/BaseNCodec.readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+  #165 = NameAndType        #99:#100      // readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+  #166 = Utf8               result\n+  #167 = Methodref          #1.#168       // org/apache/commons/codec/binary/BaseNCodec.encode:([BII)[B\n+  #168 = NameAndType        #118:#169     // encode:([BII)[B\n+  #169 = Utf8               ([BII)[B\n+  #170 = Methodref          #1.#171       // org/apache/commons/codec/binary/BaseNCodec.encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+  #171 = NameAndType        #118:#163     // encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+  #172 = Utf8               offset\n+  #173 = Utf8               length\n+  #174 = Utf8               buf\n+  #175 = Utf8               isInAlphabet\n+  #176 = Utf8               ([BZ)Z\n+  #177 = Methodref          #1.#178       // org/apache/commons/codec/binary/BaseNCodec.isInAlphabet:(B)Z\n+  #178 = NameAndType        #175:#116     // isInAlphabet:(B)Z\n+  #179 = Methodref          #1.#180       // org/apache/commons/codec/binary/BaseNCodec.isWhiteSpace:(B)Z\n+  #180 = NameAndType        #115:#116     // isWhiteSpace:(B)Z\n+  #181 = Utf8               arrayOctet\n+  #182 = Utf8               allowWSPad\n   #183 = Utf8               octet\n-  #184 = Utf8               arrayOctet\n-  #185 = Utf8               allowWSPad\n-  #186 = Utf8               (Ljava/lang/String;)Z\n+  #184 = Utf8               (Ljava/lang/String;)Z\n+  #185 = Methodref          #1.#186       // org/apache/commons/codec/binary/BaseNCodec.isInAlphabet:([BZ)Z\n+  #186 = NameAndType        #175:#176     // isInAlphabet:([BZ)Z\n   #187 = Utf8               basen\n   #188 = Utf8               containsAlphabetOrPad\n   #189 = Utf8               ([B)Z\n   #190 = Utf8               element\n   #191 = Utf8               getEncodedLength\n   #192 = Utf8               ([B)J\n   #193 = Utf8               J\n@@ -243,15 +243,15 @@\n \n   protected final byte PAD = 61;\n     descriptor: B\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n     ConstantValue: int 61\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #150()\n+      0: #29()\n         java.lang.Deprecated\n \n   protected final byte pad;\n     descriptor: B\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n \n   private final int unencodedBlockSize;\n@@ -277,15 +277,15 @@\n       stack=6, locals=5, args_size=5\n          0: aload_0\n          1: iload_1\n          2: iload_2\n          3: iload_3\n          4: iload         4\n          6: bipush        61\n-         8: invokespecial #3                  // Method \"<init>\":(IIIIB)V\n+         8: invokespecial #38                 // Method \"<init>\":(IIIIB)V\n         11: return\n       LineNumberTable:\n         line 192: 0\n         line 193: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n@@ -296,24 +296,24 @@\n \n   protected org.apache.commons.codec.binary.BaseNCodec(int, int, int, int, byte);\n     descriptor: (IIIIB)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=7, args_size=6\n          0: aload_0\n-         1: invokespecial #7                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #45                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: bipush        61\n-         7: putfield      #12                 // Field PAD:B\n+         7: putfield      #48                 // Field PAD:B\n         10: aload_0\n         11: iload_1\n-        12: putfield      #16                 // Field unencodedBlockSize:I\n+        12: putfield      #50                 // Field unencodedBlockSize:I\n         15: aload_0\n         16: iload_2\n-        17: putfield      #20                 // Field encodedBlockSize:I\n+        17: putfield      #52                 // Field encodedBlockSize:I\n         20: iload_3\n         21: ifle          33\n         24: iload         4\n         26: ifle          33\n         29: iconst_1\n         30: goto          34\n         33: iconst_0\n@@ -324,25 +324,25 @@\n         42: iload_3\n         43: iload_2\n         44: idiv\n         45: iload_2\n         46: imul\n         47: goto          51\n         50: iconst_0\n-        51: putfield      #23                 // Field lineLength:I\n+        51: putfield      #54                 // Field lineLength:I\n         54: aload_0\n         55: iload         4\n-        57: putfield      #26                 // Field chunkSeparatorLength:I\n+        57: putfield      #56                 // Field chunkSeparatorLength:I\n         60: aload_0\n         61: iload         5\n-        63: putfield      #29                 // Field pad:B\n+        63: putfield      #58                 // Field pad:B\n         66: return\n       LineNumberTable:\n-        line 205: 0\n-        line 159: 4\n+        line 204: 0\n+        line 160: 4\n         line 206: 10\n         line 207: 15\n         line 208: 20\n         line 209: 36\n         line 210: 54\n         line 212: 60\n         line 213: 66\n@@ -373,43 +373,41 @@\n \n   boolean hasData(org.apache.commons.codec.binary.BaseNCodec$Context);\n     descriptor: (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n     flags: (0x0000)\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_1\n-         1: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n-         4: ifnull        11\n+         1: getfield      #65                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+         4: ifnull        9\n          7: iconst_1\n-         8: goto          12\n-        11: iconst_0\n-        12: ireturn\n+         8: ireturn\n+         9: iconst_0\n+        10: ireturn\n       LineNumberTable:\n         line 222: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      13     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n-            0      13     1 context   Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-      StackMapTable: number_of_entries = 2\n-        frame_type = 11 /* same */\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n+            0      11     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n+            0      11     1 context   Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+      StackMapTable: number_of_entries = 1\n+        frame_type = 9 /* same */\n \n   int available(org.apache.commons.codec.binary.BaseNCodec$Context);\n     descriptor: (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n     flags: (0x0000)\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+         1: getfield      #65                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n          4: ifnull        19\n          7: aload_1\n-         8: getfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+         8: getfield      #75                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n         11: aload_1\n-        12: getfield      #41                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n+        12: getfield      #78                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n         15: isub\n         16: goto          20\n         19: iconst_0\n         20: ireturn\n       LineNumberTable:\n         line 232: 0\n       LocalVariableTable:\n@@ -436,90 +434,91 @@\n \n   private byte[] resizeBuffer(org.apache.commons.codec.binary.BaseNCodec$Context);\n     descriptor: (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_1\n-         1: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+         1: getfield      #65                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n          4: ifnonnull     30\n          7: aload_1\n          8: aload_0\n-         9: invokevirtual #44                 // Method getDefaultBufferSize:()I\n+         9: invokevirtual #85                 // Method getDefaultBufferSize:()I\n         12: newarray       byte\n-        14: putfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+        14: putfield      #65                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n         17: aload_1\n         18: iconst_0\n-        19: putfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+        19: putfield      #75                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n         22: aload_1\n         23: iconst_0\n-        24: putfield      #41                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n+        24: putfield      #78                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n         27: goto          60\n         30: aload_1\n-        31: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+        31: getfield      #65                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n         34: arraylength\n         35: iconst_2\n         36: imul\n         37: newarray       byte\n         39: astore_2\n         40: aload_1\n-        41: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+        41: getfield      #65                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n         44: iconst_0\n         45: aload_2\n         46: iconst_0\n         47: aload_1\n-        48: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+        48: getfield      #65                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n         51: arraylength\n-        52: invokestatic  #48                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        52: invokestatic  #87                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         55: aload_1\n         56: aload_2\n-        57: putfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+        57: putfield      #65                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n         60: aload_1\n-        61: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+        61: getfield      #65                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n         64: areturn\n       LineNumberTable:\n         line 249: 0\n         line 250: 7\n         line 251: 17\n         line 252: 22\n+        line 253: 27\n         line 254: 30\n         line 255: 40\n         line 256: 55\n         line 258: 60\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           40      20     2     b   [B\n             0      65     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n             0      65     1 context   Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+           40      20     2     b   [B\n       StackMapTable: number_of_entries = 2\n         frame_type = 30 /* same */\n         frame_type = 29 /* same */\n \n   protected byte[] ensureBufferSize(int, org.apache.commons.codec.binary.BaseNCodec$Context);\n     descriptor: (ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_2\n-         1: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+         1: getfield      #65                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n          4: ifnull        21\n          7: aload_2\n-         8: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+         8: getfield      #65                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n         11: arraylength\n         12: aload_2\n-        13: getfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+        13: getfield      #75                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n         16: iload_1\n         17: iadd\n         18: if_icmpge     27\n         21: aload_0\n         22: aload_2\n-        23: invokespecial #54                 // Method resizeBuffer:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+        23: invokespecial #96                 // Method resizeBuffer:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n         26: areturn\n         27: aload_2\n-        28: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+        28: getfield      #65                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n         31: areturn\n       LineNumberTable:\n         line 269: 0\n         line 270: 21\n         line 272: 27\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -532,48 +531,48 @@\n \n   int readResults(byte[], int, int, org.apache.commons.codec.binary.BaseNCodec$Context);\n     descriptor: ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n     flags: (0x0000)\n     Code:\n       stack=5, locals=6, args_size=5\n          0: aload         4\n-         2: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+         2: getfield      #65                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n          5: ifnull        71\n          8: aload_0\n          9: aload         4\n-        11: invokevirtual #58                 // Method available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+        11: invokevirtual #101                // Method available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n         14: iload_3\n-        15: invokestatic  #62                 // Method java/lang/Math.min:(II)I\n+        15: invokestatic  #103                // Method java/lang/Math.min:(II)I\n         18: istore        5\n         20: aload         4\n-        22: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+        22: getfield      #65                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n         25: aload         4\n-        27: getfield      #41                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n+        27: getfield      #78                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n         30: aload_1\n         31: iload_2\n         32: iload         5\n-        34: invokestatic  #48                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        34: invokestatic  #87                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         37: aload         4\n         39: dup\n-        40: getfield      #41                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n+        40: getfield      #78                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n         43: iload         5\n         45: iadd\n-        46: putfield      #41                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n+        46: putfield      #78                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n         49: aload         4\n-        51: getfield      #41                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n+        51: getfield      #78                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n         54: aload         4\n-        56: getfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+        56: getfield      #75                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n         59: if_icmplt     68\n         62: aload         4\n         64: aconst_null\n-        65: putfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+        65: putfield      #65                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n         68: iload         5\n         70: ireturn\n         71: aload         4\n-        73: getfield      #68                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n+        73: getfield      #109                // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n         76: ifeq          83\n         79: iconst_m1\n         80: goto          84\n         83: iconst_0\n         84: ireturn\n       LineNumberTable:\n         line 292: 0\n@@ -582,20 +581,20 @@\n         line 295: 37\n         line 296: 49\n         line 297: 62\n         line 299: 68\n         line 301: 71\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           20      51     5   len   I\n             0      85     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n             0      85     1     b   [B\n             0      85     2  bPos   I\n             0      85     3 bAvail   I\n             0      85     4 context   Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+           20      51     5   len   I\n       StackMapTable: number_of_entries = 4\n         frame_type = 252 /* append */\n           offset_delta = 68\n           locals = [ int ]\n         frame_type = 250 /* chop */\n           offset_delta = 2\n         frame_type = 11 /* same */\n@@ -629,51 +628,51 @@\n       StackMapTable: number_of_entries = 2\n         frame_type = 44 /* same */\n         frame_type = 1 /* same */\n \n   public java.lang.Object encode(java.lang.Object) throws org.apache.commons.codec.EncoderException;\n     descriptor: (Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws org.apache.commons.codec.EncoderException\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n-         1: instanceof    #72                 // class \"[B\"\n+         1: instanceof    #123                // class \"[B\"\n          4: ifne          17\n-         7: new           #73                 // class org/apache/commons/codec/EncoderException\n+         7: new           #121                // class org/apache/commons/codec/EncoderException\n         10: dup\n-        11: ldc           #75                 // String Parameter supplied to Base-N encode is not a byte[]\n-        13: invokespecial #77                 // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #124                // String Parameter supplied to Base-N encode is not a byte[]\n+        13: invokespecial #126                // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n         18: aload_1\n-        19: checkcast     #72                 // class \"[B\"\n-        22: invokevirtual #80                 // Method encode:([B)[B\n+        19: checkcast     #123                // class \"[B\"\n+        22: invokevirtual #129                // Method encode:([B)[B\n         25: areturn\n       LineNumberTable:\n         line 335: 0\n         line 336: 7\n         line 338: 17\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      26     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n             0      26     1   obj   Ljava/lang/Object;\n       StackMapTable: number_of_entries = 1\n         frame_type = 17 /* same */\n-    Exceptions:\n-      throws org.apache.commons.codec.EncoderException\n \n   public java.lang.String encodeToString(byte[]);\n     descriptor: ([B)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #80                 // Method encode:([B)[B\n-         5: invokestatic  #84                 // Method org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;\n+         2: invokevirtual #129                // Method encode:([B)[B\n+         5: invokestatic  #136                // Method org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;\n          8: areturn\n       LineNumberTable:\n         line 350: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n             0       9     1 pArray   [B\n@@ -681,75 +680,75 @@\n   public java.lang.String encodeAsString(byte[]);\n     descriptor: ([B)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #80                 // Method encode:([B)[B\n-         5: invokestatic  #84                 // Method org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;\n+         2: invokevirtual #129                // Method encode:([B)[B\n+         5: invokestatic  #136                // Method org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;\n          8: areturn\n       LineNumberTable:\n         line 363: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n             0       9     1 pArray   [B\n \n   public java.lang.Object decode(java.lang.Object) throws org.apache.commons.codec.DecoderException;\n     descriptor: (Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws org.apache.commons.codec.DecoderException\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n-         1: instanceof    #72                 // class \"[B\"\n+         1: instanceof    #123                // class \"[B\"\n          4: ifeq          16\n          7: aload_0\n          8: aload_1\n-         9: checkcast     #72                 // class \"[B\"\n-        12: invokevirtual #90                 // Method decode:([B)[B\n+         9: checkcast     #123                // class \"[B\"\n+        12: invokevirtual #146                // Method decode:([B)[B\n         15: areturn\n         16: aload_1\n-        17: instanceof    #93                 // class java/lang/String\n+        17: instanceof    #148                // class java/lang/String\n         20: ifeq          32\n         23: aload_0\n         24: aload_1\n-        25: checkcast     #93                 // class java/lang/String\n-        28: invokevirtual #95                 // Method decode:(Ljava/lang/String;)[B\n+        25: checkcast     #148                // class java/lang/String\n+        28: invokevirtual #150                // Method decode:(Ljava/lang/String;)[B\n         31: areturn\n-        32: new           #98                 // class org/apache/commons/codec/DecoderException\n+        32: new           #144                // class org/apache/commons/codec/DecoderException\n         35: dup\n-        36: ldc           #100                // String Parameter supplied to Base-N decode is not a byte[] or a String\n-        38: invokespecial #102                // Method org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n+        36: ldc           #153                // String Parameter supplied to Base-N decode is not a byte[] or a String\n+        38: invokespecial #155                // Method org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n         41: athrow\n       LineNumberTable:\n         line 379: 0\n         line 380: 7\n         line 381: 16\n         line 382: 23\n         line 384: 32\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      42     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n             0      42     1   obj   Ljava/lang/Object;\n       StackMapTable: number_of_entries = 2\n         frame_type = 16 /* same */\n         frame_type = 15 /* same */\n-    Exceptions:\n-      throws org.apache.commons.codec.DecoderException\n \n   public byte[] decode(java.lang.String);\n     descriptor: (Ljava/lang/String;)[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #103                // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n-         5: invokevirtual #90                 // Method decode:([B)[B\n+         2: invokestatic  #156                // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n+         5: invokevirtual #146                // Method decode:([B)[B\n          8: areturn\n       LineNumberTable:\n         line 396: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n             0       9     1 pArray   Ljava/lang/String;\n@@ -762,42 +761,42 @@\n          0: aload_1\n          1: ifnull        9\n          4: aload_1\n          5: arraylength\n          6: ifne          11\n          9: aload_1\n         10: areturn\n-        11: new           #33                 // class org/apache/commons/codec/binary/BaseNCodec$Context\n+        11: new           #66                 // class org/apache/commons/codec/binary/BaseNCodec$Context\n         14: dup\n-        15: invokespecial #106                // Method org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n+        15: invokespecial #160                // Method org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n         18: astore_2\n         19: aload_0\n         20: aload_1\n         21: iconst_0\n         22: aload_1\n         23: arraylength\n         24: aload_2\n-        25: invokevirtual #107                // Method decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+        25: invokevirtual #161                // Method decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n         28: aload_0\n         29: aload_1\n         30: iconst_0\n         31: iconst_m1\n         32: aload_2\n-        33: invokevirtual #107                // Method decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+        33: invokevirtual #161                // Method decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n         36: aload_2\n-        37: getfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+        37: getfield      #75                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n         40: newarray       byte\n         42: astore_3\n         43: aload_0\n         44: aload_3\n         45: iconst_0\n         46: aload_3\n         47: arraylength\n         48: aload_2\n-        49: invokevirtual #110                // Method readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+        49: invokevirtual #164                // Method readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n         52: pop\n         53: aload_3\n         54: areturn\n       LineNumberTable:\n         line 408: 0\n         line 409: 9\n         line 411: 11\n@@ -829,15 +828,15 @@\n          9: aload_1\n         10: areturn\n         11: aload_0\n         12: aload_1\n         13: iconst_0\n         14: aload_1\n         15: arraylength\n-        16: invokevirtual #114                // Method encode:([BII)[B\n+        16: invokevirtual #167                // Method encode:([BII)[B\n         19: areturn\n       LineNumberTable:\n         line 428: 0\n         line 429: 9\n         line 431: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -855,44 +854,44 @@\n          0: aload_1\n          1: ifnull        9\n          4: aload_1\n          5: arraylength\n          6: ifne          11\n          9: aload_1\n         10: areturn\n-        11: new           #33                 // class org/apache/commons/codec/binary/BaseNCodec$Context\n+        11: new           #66                 // class org/apache/commons/codec/binary/BaseNCodec$Context\n         14: dup\n-        15: invokespecial #106                // Method org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n+        15: invokespecial #160                // Method org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n         18: astore        4\n         20: aload_0\n         21: aload_1\n         22: iload_2\n         23: iload_3\n         24: aload         4\n-        26: invokevirtual #117                // Method encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+        26: invokevirtual #170                // Method encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n         29: aload_0\n         30: aload_1\n         31: iload_2\n         32: iconst_m1\n         33: aload         4\n-        35: invokevirtual #117                // Method encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+        35: invokevirtual #170                // Method encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n         38: aload         4\n-        40: getfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+        40: getfield      #75                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n         43: aload         4\n-        45: getfield      #41                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n+        45: getfield      #78                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n         48: isub\n         49: newarray       byte\n         51: astore        5\n         53: aload_0\n         54: aload         5\n         56: iconst_0\n         57: aload         5\n         59: arraylength\n         60: aload         4\n-        62: invokevirtual #110                // Method readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+        62: invokevirtual #164                // Method readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n         65: pop\n         66: aload         5\n         68: areturn\n       LineNumberTable:\n         line 448: 0\n         line 449: 9\n         line 451: 11\n@@ -927,81 +926,84 @@\n \n   public boolean isInAlphabet(byte[], boolean);\n     descriptor: ([BZ)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=7, args_size=3\n          0: aload_1\n-         1: astore_3\n-         2: aload_3\n-         3: arraylength\n-         4: istore        4\n-         6: iconst_0\n-         7: istore        5\n-         9: iload         5\n-        11: iload         4\n-        13: if_icmpge     60\n-        16: aload_3\n-        17: iload         5\n-        19: baload\n-        20: istore        6\n-        22: aload_0\n-        23: iload         6\n-        25: invokevirtual #119                // Method isInAlphabet:(B)Z\n-        28: ifne          54\n-        31: iload_2\n-        32: ifeq          52\n-        35: iload         6\n-        37: aload_0\n-        38: getfield      #29                 // Field pad:B\n-        41: if_icmpeq     54\n-        44: iload         6\n-        46: invokestatic  #123                // Method isWhiteSpace:(B)Z\n-        49: ifne          54\n-        52: iconst_0\n-        53: ireturn\n-        54: iinc          5, 1\n-        57: goto          9\n-        60: iconst_1\n-        61: ireturn\n+         1: dup\n+         2: astore        6\n+         4: arraylength\n+         5: istore        5\n+         7: iconst_0\n+         8: istore        4\n+        10: goto          51\n+        13: aload         6\n+        15: iload         4\n+        17: baload\n+        18: istore_3\n+        19: aload_0\n+        20: iload_3\n+        21: invokevirtual #177                // Method isInAlphabet:(B)Z\n+        24: ifne          48\n+        27: iload_2\n+        28: ifeq          46\n+        31: iload_3\n+        32: aload_0\n+        33: getfield      #58                 // Field pad:B\n+        36: if_icmpeq     48\n+        39: iload_3\n+        40: invokestatic  #179                // Method isWhiteSpace:(B)Z\n+        43: ifne          48\n+        46: iconst_0\n+        47: ireturn\n+        48: iinc          4, 1\n+        51: iload         4\n+        53: iload         5\n+        55: if_icmplt     13\n+        58: iconst_1\n+        59: ireturn\n       LineNumberTable:\n         line 486: 0\n-        line 487: 22\n-        line 488: 46\n-        line 489: 52\n-        line 486: 54\n-        line 492: 60\n+        line 487: 19\n+        line 488: 27\n+        line 489: 46\n+        line 486: 48\n+        line 492: 58\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           22      32     6 octet   B\n-            0      62     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n-            0      62     1 arrayOctet   [B\n-            0      62     2 allowWSPad   Z\n+            0      60     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n+            0      60     1 arrayOctet   [B\n+            0      60     2 allowWSPad   Z\n+           19      29     3 octet   B\n       StackMapTable: number_of_entries = 4\n-        frame_type = 254 /* append */\n-          offset_delta = 9\n-          locals = [ class \"[B\", int, int ]\n-        frame_type = 252 /* append */\n-          offset_delta = 42\n-          locals = [ int ]\n-        frame_type = 250 /* chop */\n+        frame_type = 255 /* full_frame */\n+          offset_delta = 13\n+          locals = [ class org/apache/commons/codec/binary/BaseNCodec, class \"[B\", int, top, int, int, class \"[B\" ]\n+          stack = []\n+        frame_type = 255 /* full_frame */\n+          offset_delta = 32\n+          locals = [ class org/apache/commons/codec/binary/BaseNCodec, class \"[B\", int, int, int, int, class \"[B\" ]\n+          stack = []\n+        frame_type = 255 /* full_frame */\n           offset_delta = 1\n-        frame_type = 248 /* chop */\n-          offset_delta = 5\n+          locals = [ class org/apache/commons/codec/binary/BaseNCodec, class \"[B\", int, top, int, int, class \"[B\" ]\n+          stack = []\n+        frame_type = 2 /* same */\n \n   public boolean isInAlphabet(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #103                // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n+         2: invokestatic  #156                // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n          5: iconst_1\n-         6: invokevirtual #126                // Method isInAlphabet:([BZ)Z\n+         6: invokevirtual #185                // Method isInAlphabet:([BZ)Z\n          9: ireturn\n       LineNumberTable:\n         line 505: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n             0      10     1 basen   Ljava/lang/String;\n@@ -1012,105 +1014,108 @@\n     Code:\n       stack=2, locals=6, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: iconst_0\n          5: ireturn\n          6: aload_1\n-         7: astore_2\n-         8: aload_2\n-         9: arraylength\n-        10: istore_3\n-        11: iconst_0\n-        12: istore        4\n-        14: iload         4\n-        16: iload_3\n-        17: if_icmpge     52\n-        20: aload_2\n-        21: iload         4\n-        23: baload\n-        24: istore        5\n-        26: aload_0\n-        27: getfield      #29                 // Field pad:B\n-        30: iload         5\n-        32: if_icmpeq     44\n-        35: aload_0\n-        36: iload         5\n-        38: invokevirtual #119                // Method isInAlphabet:(B)Z\n-        41: ifeq          46\n-        44: iconst_1\n-        45: ireturn\n-        46: iinc          4, 1\n-        49: goto          14\n-        52: iconst_0\n-        53: ireturn\n+         7: dup\n+         8: astore        5\n+        10: arraylength\n+        11: istore        4\n+        13: iconst_0\n+        14: istore_3\n+        15: goto          44\n+        18: aload         5\n+        20: iload_3\n+        21: baload\n+        22: istore_2\n+        23: aload_0\n+        24: getfield      #58                 // Field pad:B\n+        27: iload_2\n+        28: if_icmpeq     39\n+        31: aload_0\n+        32: iload_2\n+        33: invokevirtual #177                // Method isInAlphabet:(B)Z\n+        36: ifeq          41\n+        39: iconst_1\n+        40: ireturn\n+        41: iinc          3, 1\n+        44: iload_3\n+        45: iload         4\n+        47: if_icmplt     18\n+        50: iconst_0\n+        51: ireturn\n       LineNumberTable:\n         line 518: 0\n         line 519: 4\n         line 521: 6\n-        line 522: 26\n-        line 523: 44\n-        line 521: 46\n-        line 526: 52\n+        line 522: 23\n+        line 523: 39\n+        line 521: 41\n+        line 526: 50\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           26      20     5 element   B\n-            0      54     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n-            0      54     1 arrayOctet   [B\n+            0      52     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n+            0      52     1 arrayOctet   [B\n+           23      18     2 element   B\n       StackMapTable: number_of_entries = 5\n         frame_type = 6 /* same */\n-        frame_type = 254 /* append */\n-          offset_delta = 7\n-          locals = [ class \"[B\", int, int ]\n-        frame_type = 252 /* append */\n-          offset_delta = 29\n-          locals = [ int ]\n-        frame_type = 250 /* chop */\n+        frame_type = 255 /* full_frame */\n+          offset_delta = 11\n+          locals = [ class org/apache/commons/codec/binary/BaseNCodec, class \"[B\", top, int, int, class \"[B\" ]\n+          stack = []\n+        frame_type = 255 /* full_frame */\n+          offset_delta = 20\n+          locals = [ class org/apache/commons/codec/binary/BaseNCodec, class \"[B\", int, int, int, class \"[B\" ]\n+          stack = []\n+        frame_type = 255 /* full_frame */\n           offset_delta = 1\n-        frame_type = 248 /* chop */\n-          offset_delta = 5\n+          locals = [ class org/apache/commons/codec/binary/BaseNCodec, class \"[B\", top, int, int, class \"[B\" ]\n+          stack = []\n+        frame_type = 2 /* same */\n \n   public long getEncodedLength(byte[]);\n     descriptor: ([B)J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=4, args_size=2\n          0: aload_1\n          1: arraylength\n          2: aload_0\n-         3: getfield      #16                 // Field unencodedBlockSize:I\n+         3: getfield      #50                 // Field unencodedBlockSize:I\n          6: iadd\n          7: iconst_1\n          8: isub\n          9: aload_0\n-        10: getfield      #16                 // Field unencodedBlockSize:I\n+        10: getfield      #50                 // Field unencodedBlockSize:I\n         13: idiv\n         14: i2l\n         15: aload_0\n-        16: getfield      #20                 // Field encodedBlockSize:I\n+        16: getfield      #52                 // Field encodedBlockSize:I\n         19: i2l\n         20: lmul\n         21: lstore_2\n         22: aload_0\n-        23: getfield      #23                 // Field lineLength:I\n+        23: getfield      #54                 // Field lineLength:I\n         26: ifle          53\n         29: lload_2\n         30: lload_2\n         31: aload_0\n-        32: getfield      #23                 // Field lineLength:I\n+        32: getfield      #54                 // Field lineLength:I\n         35: i2l\n         36: ladd\n         37: lconst_1\n         38: lsub\n         39: aload_0\n-        40: getfield      #23                 // Field lineLength:I\n+        40: getfield      #54                 // Field lineLength:I\n         43: i2l\n         44: ldiv\n         45: aload_0\n-        46: getfield      #26                 // Field chunkSeparatorLength:I\n+        46: getfield      #56                 // Field chunkSeparatorLength:I\n         49: i2l\n         50: lmul\n         51: ladd\n         52: lstore_2\n         53: lload_2\n         54: lreturn\n       LineNumberTable:\n@@ -1126,8 +1131,8 @@\n       StackMapTable: number_of_entries = 1\n         frame_type = 252 /* append */\n           offset_delta = 53\n           locals = [ long ]\n }\n SourceFile: \"BaseNCodec.java\"\n InnerClasses:\n-  static #197= #33 of #1;                 // Context=class org/apache/commons/codec/binary/BaseNCodec$Context of class org/apache/commons/codec/binary/BaseNCodec\n+  static #197= #66 of #1;                 // Context=class org/apache/commons/codec/binary/BaseNCodec$Context of class org/apache/commons/codec/binary/BaseNCodec\n"}]}
