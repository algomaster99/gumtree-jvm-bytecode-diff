{"diffoscope-json-version": 1, "source1": "first/CharGenUDPClient.class", "source2": "second/CharGenUDPClient.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -19,25 +19,25 @@\n     \n     public CharGenUDPClient() {\n         this.receiveData = new byte[512];\n         this.receivePacket = new DatagramPacket(this.receiveData, this.receiveData.length);\n         this.sendPacket = new DatagramPacket(new byte[0], 0);\n     }\n     \n-    public void send(final InetAddress host, final int port) throws IOException {\n-        this.sendPacket.setAddress(host);\n+    public void send(final InetAddress address, final int port) throws IOException {\n+        this.sendPacket.setAddress(address);\n         this.sendPacket.setPort(port);\n         this._socket_.send(this.sendPacket);\n     }\n     \n-    public void send(final InetAddress host) throws IOException {\n-        this.send(host, 19);\n+    public void send(final InetAddress inetAddress) throws IOException {\n+        this.send(inetAddress, 19);\n     }\n     \n     public byte[] receive() throws IOException {\n         this._socket_.receive(this.receivePacket);\n         final int length;\n-        final byte[] result = new byte[length = this.receivePacket.getLength()];\n-        System.arraycopy(this.receiveData, 0, result, 0, length);\n-        return result;\n+        final byte[] array = new byte[length = this.receivePacket.getLength()];\n+        System.arraycopy(this.receiveData, 0, array, 0, length);\n+        return array;\n     }\n }\n"}]}
