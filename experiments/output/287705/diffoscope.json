{"diffoscope-json-version": 1, "source1": "first/LZMA2Decoder.class", "source2": "second/LZMA2Decoder.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,139 +1,136 @@\n-  SHA-256 checksum 883febb03d1eeb38ed0560c734efd8f665b5df028f7b1101e8e801c34d15a213\n+  SHA-256 checksum 7e17e4f836fdd3aee4542195863f57516b34164603e247b8b4c0407653af2d80\n   Compiled from \"LZMA2Decoder.java\"\n class org.apache.commons.compress.archivers.sevenz.LZMA2Decoder extends org.apache.commons.compress.archivers.sevenz.CoderBase\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n   this_class: #33                         // org/apache/commons/compress/archivers/sevenz/LZMA2Decoder\n   super_class: #34                        // org/apache/commons/compress/archivers/sevenz/CoderBase\n   interfaces: 0, fields: 0, methods: 9, attributes: 1\n Constant pool:\n-    #1 = Class              #64           // java/lang/Class\n-    #2 = Class              #65           // org/tukaani/xz/LZMA2Options\n-    #3 = Class              #66           // java/lang/Number\n-    #4 = Methodref          #34.#67       // org/apache/commons/compress/archivers/sevenz/CoderBase.\"<init>\":([Ljava/lang/Class;)V\n-    #5 = Methodref          #33.#68       // org/apache/commons/compress/archivers/sevenz/LZMA2Decoder.getDictionarySize:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n-    #6 = Methodref          #9.#69        // org/tukaani/xz/LZMA2InputStream.getMemoryUsage:(I)I\n-    #7 = Class              #70           // org/apache/commons/compress/MemoryLimitException\n-    #8 = Methodref          #7.#71        // org/apache/commons/compress/MemoryLimitException.\"<init>\":(JI)V\n-    #9 = Class              #72           // org/tukaani/xz/LZMA2InputStream\n-   #10 = Methodref          #9.#73        // org/tukaani/xz/LZMA2InputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-   #11 = Class              #74           // java/lang/IllegalArgumentException\n-   #12 = Class              #75           // java/io/IOException\n-   #13 = Methodref          #11.#76       // java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;\n-   #14 = Methodref          #12.#77       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #15 = Methodref          #33.#78       // org/apache/commons/compress/archivers/sevenz/LZMA2Decoder.getOptions:(Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n-   #16 = Class              #79           // org/tukaani/xz/FinishableWrapperOutputStream\n-   #17 = Methodref          #16.#80       // org/tukaani/xz/FinishableWrapperOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #18 = Methodref          #2.#81        // org/tukaani/xz/LZMA2Options.getOutputStream:(Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;\n-   #19 = Methodref          #33.#82       // org/apache/commons/compress/archivers/sevenz/LZMA2Decoder.getDictSize:(Ljava/lang/Object;)I\n-   #20 = Methodref          #83.#84       // java/lang/Integer.numberOfLeadingZeros:(I)I\n-   #21 = Methodref          #83.#85       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #22 = Methodref          #2.#86        // org/tukaani/xz/LZMA2Options.getDictSize:()I\n-   #23 = Methodref          #33.#87       // org/apache/commons/compress/archivers/sevenz/LZMA2Decoder.numberOptionOrDefault:(Ljava/lang/Object;)I\n-   #24 = Fieldref           #88.#89       // org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n-   #25 = String             #90           // Missing LZMA2 properties\n-   #26 = String             #91           // LZMA2 properties too short\n-   #27 = String             #92           // Unsupported LZMA2 property bits\n-   #28 = String             #93           // Dictionary larger than 4GiB maximum size\n-   #29 = Methodref          #2.#94        // org/tukaani/xz/LZMA2Options.\"<init>\":()V\n-   #30 = Methodref          #2.#95        // org/tukaani/xz/LZMA2Options.setDictSize:(I)V\n+    #1 = Class              #62           // java/lang/Class\n+    #2 = Class              #63           // org/tukaani/xz/LZMA2Options\n+    #3 = Class              #64           // java/lang/Number\n+    #4 = Methodref          #34.#65       // org/apache/commons/compress/archivers/sevenz/CoderBase.\"<init>\":([Ljava/lang/Class;)V\n+    #5 = Methodref          #33.#66       // org/apache/commons/compress/archivers/sevenz/LZMA2Decoder.getDictionarySize:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n+    #6 = Methodref          #9.#67        // org/tukaani/xz/LZMA2InputStream.getMemoryUsage:(I)I\n+    #7 = Class              #68           // org/apache/commons/compress/MemoryLimitException\n+    #8 = Methodref          #7.#69        // org/apache/commons/compress/MemoryLimitException.\"<init>\":(JI)V\n+    #9 = Class              #70           // org/tukaani/xz/LZMA2InputStream\n+   #10 = Methodref          #9.#71        // org/tukaani/xz/LZMA2InputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+   #11 = Class              #72           // java/lang/IllegalArgumentException\n+   #12 = Class              #73           // java/io/IOException\n+   #13 = Methodref          #11.#74       // java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;\n+   #14 = Methodref          #12.#75       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #15 = Methodref          #33.#76       // org/apache/commons/compress/archivers/sevenz/LZMA2Decoder.getOptions:(Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n+   #16 = Class              #77           // org/tukaani/xz/FinishableWrapperOutputStream\n+   #17 = Methodref          #16.#78       // org/tukaani/xz/FinishableWrapperOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+   #18 = Methodref          #2.#79        // org/tukaani/xz/LZMA2Options.getOutputStream:(Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;\n+   #19 = Methodref          #33.#80       // org/apache/commons/compress/archivers/sevenz/LZMA2Decoder.getDictSize:(Ljava/lang/Object;)I\n+   #20 = Methodref          #81.#82       // java/lang/Integer.numberOfLeadingZeros:(I)I\n+   #21 = Methodref          #81.#83       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+   #22 = Methodref          #2.#84        // org/tukaani/xz/LZMA2Options.getDictSize:()I\n+   #23 = Methodref          #33.#85       // org/apache/commons/compress/archivers/sevenz/LZMA2Decoder.numberOptionOrDefault:(Ljava/lang/Object;)I\n+   #24 = Fieldref           #44.#86       // org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n+   #25 = String             #87           // Missing LZMA2 properties\n+   #26 = String             #88           // LZMA2 properties too short\n+   #27 = String             #89           // Unsupported LZMA2 property bits\n+   #28 = String             #90           // Dictionary larger than 4GiB maximum size\n+   #29 = Methodref          #2.#91        // org/tukaani/xz/LZMA2Options.\"<init>\":()V\n+   #30 = Methodref          #2.#92        // org/tukaani/xz/LZMA2Options.setDictSize:(I)V\n    #31 = Integer            8388608\n-   #32 = Methodref          #33.#96       // org/apache/commons/compress/archivers/sevenz/LZMA2Decoder.numberOptionOrDefault:(Ljava/lang/Object;I)I\n-   #33 = Class              #97           // org/apache/commons/compress/archivers/sevenz/LZMA2Decoder\n-   #34 = Class              #98           // org/apache/commons/compress/archivers/sevenz/CoderBase\n+   #32 = Methodref          #33.#93       // org/apache/commons/compress/archivers/sevenz/LZMA2Decoder.numberOptionOrDefault:(Ljava/lang/Object;I)I\n+   #33 = Class              #94           // org/apache/commons/compress/archivers/sevenz/LZMA2Decoder\n+   #34 = Class              #95           // org/apache/commons/compress/archivers/sevenz/CoderBase\n    #35 = Utf8               <init>\n    #36 = Utf8               ()V\n    #37 = Utf8               Code\n    #38 = Utf8               LineNumberTable\n    #39 = Utf8               decode\n    #40 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;JLorg/apache/commons/compress/archivers/sevenz/Coder;[BI)Ljava/io/InputStream;\n    #41 = Utf8               StackMapTable\n-   #42 = Class              #97           // org/apache/commons/compress/archivers/sevenz/LZMA2Decoder\n-   #43 = Class              #99           // java/lang/String\n-   #44 = Class              #100          // java/io/InputStream\n-   #45 = Class              #101          // org/apache/commons/compress/archivers/sevenz/Coder\n-   #46 = Class              #102          // \"[B\"\n-   #47 = Class              #74           // java/lang/IllegalArgumentException\n-   #48 = Utf8               Exceptions\n-   #49 = Utf8               encode\n-   #50 = Utf8               (Ljava/io/OutputStream;Ljava/lang/Object;)Ljava/io/OutputStream;\n-   #51 = Utf8               getOptionsAsProperties\n-   #52 = Utf8               (Ljava/lang/Object;)[B\n-   #53 = Utf8               getOptionsFromCoder\n-   #54 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/Coder;Ljava/io/InputStream;)Ljava/lang/Object;\n-   #55 = Utf8               getDictSize\n-   #56 = Utf8               (Ljava/lang/Object;)I\n-   #57 = Utf8               getDictionarySize\n-   #58 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n-   #59 = Utf8               getOptions\n-   #60 = Utf8               (Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n-   #61 = Utf8               numberOptionOrDefault\n-   #62 = Utf8               SourceFile\n-   #63 = Utf8               LZMA2Decoder.java\n-   #64 = Utf8               java/lang/Class\n-   #65 = Utf8               org/tukaani/xz/LZMA2Options\n-   #66 = Utf8               java/lang/Number\n-   #67 = NameAndType        #35:#103      // \"<init>\":([Ljava/lang/Class;)V\n-   #68 = NameAndType        #57:#58       // getDictionarySize:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n-   #69 = NameAndType        #104:#105     // getMemoryUsage:(I)I\n-   #70 = Utf8               org/apache/commons/compress/MemoryLimitException\n-   #71 = NameAndType        #35:#106      // \"<init>\":(JI)V\n-   #72 = Utf8               org/tukaani/xz/LZMA2InputStream\n-   #73 = NameAndType        #35:#107      // \"<init>\":(Ljava/io/InputStream;I)V\n-   #74 = Utf8               java/lang/IllegalArgumentException\n-   #75 = Utf8               java/io/IOException\n-   #76 = NameAndType        #108:#109     // getMessage:()Ljava/lang/String;\n-   #77 = NameAndType        #35:#110      // \"<init>\":(Ljava/lang/String;)V\n-   #78 = NameAndType        #59:#60       // getOptions:(Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n-   #79 = Utf8               org/tukaani/xz/FinishableWrapperOutputStream\n-   #80 = NameAndType        #35:#111      // \"<init>\":(Ljava/io/OutputStream;)V\n-   #81 = NameAndType        #112:#113     // getOutputStream:(Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;\n-   #82 = NameAndType        #55:#56       // getDictSize:(Ljava/lang/Object;)I\n-   #83 = Class              #114          // java/lang/Integer\n-   #84 = NameAndType        #115:#105     // numberOfLeadingZeros:(I)I\n-   #85 = NameAndType        #116:#117     // valueOf:(I)Ljava/lang/Integer;\n-   #86 = NameAndType        #55:#118      // getDictSize:()I\n-   #87 = NameAndType        #61:#56       // numberOptionOrDefault:(Ljava/lang/Object;)I\n-   #88 = Class              #101          // org/apache/commons/compress/archivers/sevenz/Coder\n-   #89 = NameAndType        #119:#102     // properties:[B\n-   #90 = Utf8               Missing LZMA2 properties\n-   #91 = Utf8               LZMA2 properties too short\n-   #92 = Utf8               Unsupported LZMA2 property bits\n-   #93 = Utf8               Dictionary larger than 4GiB maximum size\n-   #94 = NameAndType        #35:#36       // \"<init>\":()V\n-   #95 = NameAndType        #120:#121     // setDictSize:(I)V\n-   #96 = NameAndType        #61:#122      // numberOptionOrDefault:(Ljava/lang/Object;I)I\n-   #97 = Utf8               org/apache/commons/compress/archivers/sevenz/LZMA2Decoder\n-   #98 = Utf8               org/apache/commons/compress/archivers/sevenz/CoderBase\n-   #99 = Utf8               java/lang/String\n-  #100 = Utf8               java/io/InputStream\n-  #101 = Utf8               org/apache/commons/compress/archivers/sevenz/Coder\n-  #102 = Utf8               [B\n-  #103 = Utf8               ([Ljava/lang/Class;)V\n-  #104 = Utf8               getMemoryUsage\n-  #105 = Utf8               (I)I\n-  #106 = Utf8               (JI)V\n-  #107 = Utf8               (Ljava/io/InputStream;I)V\n-  #108 = Utf8               getMessage\n-  #109 = Utf8               ()Ljava/lang/String;\n-  #110 = Utf8               (Ljava/lang/String;)V\n-  #111 = Utf8               (Ljava/io/OutputStream;)V\n-  #112 = Utf8               getOutputStream\n-  #113 = Utf8               (Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;\n-  #114 = Utf8               java/lang/Integer\n-  #115 = Utf8               numberOfLeadingZeros\n-  #116 = Utf8               valueOf\n-  #117 = Utf8               (I)Ljava/lang/Integer;\n-  #118 = Utf8               ()I\n-  #119 = Utf8               properties\n-  #120 = Utf8               setDictSize\n-  #121 = Utf8               (I)V\n-  #122 = Utf8               (Ljava/lang/Object;I)I\n+   #42 = Class              #96           // java/lang/String\n+   #43 = Class              #97           // java/io/InputStream\n+   #44 = Class              #98           // org/apache/commons/compress/archivers/sevenz/Coder\n+   #45 = Class              #99           // \"[B\"\n+   #46 = Utf8               Exceptions\n+   #47 = Utf8               encode\n+   #48 = Utf8               (Ljava/io/OutputStream;Ljava/lang/Object;)Ljava/io/OutputStream;\n+   #49 = Utf8               getOptionsAsProperties\n+   #50 = Utf8               (Ljava/lang/Object;)[B\n+   #51 = Utf8               getOptionsFromCoder\n+   #52 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/Coder;Ljava/io/InputStream;)Ljava/lang/Object;\n+   #53 = Utf8               getDictSize\n+   #54 = Utf8               (Ljava/lang/Object;)I\n+   #55 = Utf8               getDictionarySize\n+   #56 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n+   #57 = Utf8               getOptions\n+   #58 = Utf8               (Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n+   #59 = Utf8               numberOptionOrDefault\n+   #60 = Utf8               SourceFile\n+   #61 = Utf8               LZMA2Decoder.java\n+   #62 = Utf8               java/lang/Class\n+   #63 = Utf8               org/tukaani/xz/LZMA2Options\n+   #64 = Utf8               java/lang/Number\n+   #65 = NameAndType        #35:#100      // \"<init>\":([Ljava/lang/Class;)V\n+   #66 = NameAndType        #55:#56       // getDictionarySize:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n+   #67 = NameAndType        #101:#102     // getMemoryUsage:(I)I\n+   #68 = Utf8               org/apache/commons/compress/MemoryLimitException\n+   #69 = NameAndType        #35:#103      // \"<init>\":(JI)V\n+   #70 = Utf8               org/tukaani/xz/LZMA2InputStream\n+   #71 = NameAndType        #35:#104      // \"<init>\":(Ljava/io/InputStream;I)V\n+   #72 = Utf8               java/lang/IllegalArgumentException\n+   #73 = Utf8               java/io/IOException\n+   #74 = NameAndType        #105:#106     // getMessage:()Ljava/lang/String;\n+   #75 = NameAndType        #35:#107      // \"<init>\":(Ljava/lang/String;)V\n+   #76 = NameAndType        #57:#58       // getOptions:(Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n+   #77 = Utf8               org/tukaani/xz/FinishableWrapperOutputStream\n+   #78 = NameAndType        #35:#108      // \"<init>\":(Ljava/io/OutputStream;)V\n+   #79 = NameAndType        #109:#110     // getOutputStream:(Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;\n+   #80 = NameAndType        #53:#54       // getDictSize:(Ljava/lang/Object;)I\n+   #81 = Class              #111          // java/lang/Integer\n+   #82 = NameAndType        #112:#102     // numberOfLeadingZeros:(I)I\n+   #83 = NameAndType        #113:#114     // valueOf:(I)Ljava/lang/Integer;\n+   #84 = NameAndType        #53:#115      // getDictSize:()I\n+   #85 = NameAndType        #59:#54       // numberOptionOrDefault:(Ljava/lang/Object;)I\n+   #86 = NameAndType        #116:#99      // properties:[B\n+   #87 = Utf8               Missing LZMA2 properties\n+   #88 = Utf8               LZMA2 properties too short\n+   #89 = Utf8               Unsupported LZMA2 property bits\n+   #90 = Utf8               Dictionary larger than 4GiB maximum size\n+   #91 = NameAndType        #35:#36       // \"<init>\":()V\n+   #92 = NameAndType        #117:#118     // setDictSize:(I)V\n+   #93 = NameAndType        #59:#119      // numberOptionOrDefault:(Ljava/lang/Object;I)I\n+   #94 = Utf8               org/apache/commons/compress/archivers/sevenz/LZMA2Decoder\n+   #95 = Utf8               org/apache/commons/compress/archivers/sevenz/CoderBase\n+   #96 = Utf8               java/lang/String\n+   #97 = Utf8               java/io/InputStream\n+   #98 = Utf8               org/apache/commons/compress/archivers/sevenz/Coder\n+   #99 = Utf8               [B\n+  #100 = Utf8               ([Ljava/lang/Class;)V\n+  #101 = Utf8               getMemoryUsage\n+  #102 = Utf8               (I)I\n+  #103 = Utf8               (JI)V\n+  #104 = Utf8               (Ljava/io/InputStream;I)V\n+  #105 = Utf8               getMessage\n+  #106 = Utf8               ()Ljava/lang/String;\n+  #107 = Utf8               (Ljava/lang/String;)V\n+  #108 = Utf8               (Ljava/io/OutputStream;)V\n+  #109 = Utf8               getOutputStream\n+  #110 = Utf8               (Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;\n+  #111 = Utf8               java/lang/Integer\n+  #112 = Utf8               numberOfLeadingZeros\n+  #113 = Utf8               valueOf\n+  #114 = Utf8               (I)Ljava/lang/Integer;\n+  #115 = Utf8               ()I\n+  #116 = Utf8               properties\n+  #117 = Utf8               setDictSize\n+  #118 = Utf8               (I)V\n+  #119 = Utf8               (Ljava/lang/Object;I)I\n {\n   org.apache.commons.compress.archivers.sevenz.LZMA2Decoder();\n     descriptor: ()V\n     flags: (0x0000)\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n"}]}
