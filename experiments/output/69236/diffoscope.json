{"diffoscope-json-version": 1, "source1": "first/SocketOutputStream.class", "source2": "second/SocketOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,129 +1,129 @@\n-  SHA-256 checksum 0fe2740ad0bb07cf104259b8fd291770b955e7f644669395fb2cdcc069e46edf\n+  SHA-256 checksum 646aaac1c04d7a0f82684144f82217f79de21464e0ae3caa5e281f2c30f4e46b\n   Compiled from \"SocketOutputStream.java\"\n public class org.apache.commons.net.io.SocketOutputStream extends java.io.FilterOutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #7                          // org/apache/commons/net/io/SocketOutputStream\n-  super_class: #8                         // java/io/FilterOutputStream\n+  this_class: #1                          // org/apache/commons/net/io/SocketOutputStream\n+  super_class: #3                         // java/io/FilterOutputStream\n   interfaces: 0, fields: 1, methods: 3, attributes: 1\n Constant pool:\n-   #1 = Methodref          #8.#33         // java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #2 = Fieldref           #7.#34         // org/apache/commons/net/io/SocketOutputStream.socket:Ljava/net/Socket;\n-   #3 = Methodref          #8.#35         // java/io/FilterOutputStream.close:()V\n-   #4 = Methodref          #36.#35        // java/net/Socket.close:()V\n-   #5 = Fieldref           #7.#37         // org/apache/commons/net/io/SocketOutputStream.out:Ljava/io/OutputStream;\n-   #6 = Methodref          #38.#39        // java/io/OutputStream.write:([BII)V\n-   #7 = Class              #40            // org/apache/commons/net/io/SocketOutputStream\n-   #8 = Class              #41            // java/io/FilterOutputStream\n-   #9 = Utf8               socket\n-  #10 = Utf8               Ljava/net/Socket;\n-  #11 = Utf8               <init>\n-  #12 = Utf8               (Ljava/net/Socket;Ljava/io/OutputStream;)V\n-  #13 = Utf8               Code\n-  #14 = Utf8               LineNumberTable\n-  #15 = Utf8               LocalVariableTable\n-  #16 = Utf8               this\n-  #17 = Utf8               Lorg/apache/commons/net/io/SocketOutputStream;\n-  #18 = Utf8               stream\n-  #19 = Utf8               Ljava/io/OutputStream;\n-  #20 = Utf8               close\n-  #21 = Utf8               ()V\n-  #22 = Utf8               Exceptions\n-  #23 = Class              #42            // java/io/IOException\n-  #24 = Utf8               write\n-  #25 = Utf8               ([BII)V\n-  #26 = Utf8               buffer\n-  #27 = Utf8               [B\n-  #28 = Utf8               offset\n-  #29 = Utf8               I\n-  #30 = Utf8               length\n-  #31 = Utf8               SourceFile\n-  #32 = Utf8               SocketOutputStream.java\n-  #33 = NameAndType        #11:#43        // \"<init>\":(Ljava/io/OutputStream;)V\n-  #34 = NameAndType        #9:#10         // socket:Ljava/net/Socket;\n-  #35 = NameAndType        #20:#21        // close:()V\n-  #36 = Class              #44            // java/net/Socket\n-  #37 = NameAndType        #45:#19        // out:Ljava/io/OutputStream;\n-  #38 = Class              #46            // java/io/OutputStream\n-  #39 = NameAndType        #24:#25        // write:([BII)V\n-  #40 = Utf8               org/apache/commons/net/io/SocketOutputStream\n-  #41 = Utf8               java/io/FilterOutputStream\n-  #42 = Utf8               java/io/IOException\n-  #43 = Utf8               (Ljava/io/OutputStream;)V\n-  #44 = Utf8               java/net/Socket\n-  #45 = Utf8               out\n-  #46 = Utf8               java/io/OutputStream\n+   #1 = Class              #2             // org/apache/commons/net/io/SocketOutputStream\n+   #2 = Utf8               org/apache/commons/net/io/SocketOutputStream\n+   #3 = Class              #4             // java/io/FilterOutputStream\n+   #4 = Utf8               java/io/FilterOutputStream\n+   #5 = Utf8               socket\n+   #6 = Utf8               Ljava/net/Socket;\n+   #7 = Utf8               <init>\n+   #8 = Utf8               (Ljava/net/Socket;Ljava/io/OutputStream;)V\n+   #9 = Utf8               Code\n+  #10 = Methodref          #3.#11         // java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #11 = NameAndType        #7:#12         // \"<init>\":(Ljava/io/OutputStream;)V\n+  #12 = Utf8               (Ljava/io/OutputStream;)V\n+  #13 = Fieldref           #1.#14         // org/apache/commons/net/io/SocketOutputStream.socket:Ljava/net/Socket;\n+  #14 = NameAndType        #5:#6          // socket:Ljava/net/Socket;\n+  #15 = Utf8               LineNumberTable\n+  #16 = Utf8               LocalVariableTable\n+  #17 = Utf8               this\n+  #18 = Utf8               Lorg/apache/commons/net/io/SocketOutputStream;\n+  #19 = Utf8               stream\n+  #20 = Utf8               Ljava/io/OutputStream;\n+  #21 = Utf8               close\n+  #22 = Utf8               ()V\n+  #23 = Utf8               Exceptions\n+  #24 = Class              #25            // java/io/IOException\n+  #25 = Utf8               java/io/IOException\n+  #26 = Methodref          #3.#27         // java/io/FilterOutputStream.close:()V\n+  #27 = NameAndType        #21:#22        // close:()V\n+  #28 = Methodref          #29.#27        // java/net/Socket.close:()V\n+  #29 = Class              #30            // java/net/Socket\n+  #30 = Utf8               java/net/Socket\n+  #31 = Utf8               write\n+  #32 = Utf8               ([BII)V\n+  #33 = Fieldref           #1.#34         // org/apache/commons/net/io/SocketOutputStream.out:Ljava/io/OutputStream;\n+  #34 = NameAndType        #35:#20        // out:Ljava/io/OutputStream;\n+  #35 = Utf8               out\n+  #36 = Methodref          #37.#39        // java/io/OutputStream.write:([BII)V\n+  #37 = Class              #38            // java/io/OutputStream\n+  #38 = Utf8               java/io/OutputStream\n+  #39 = NameAndType        #31:#32        // write:([BII)V\n+  #40 = Utf8               buffer\n+  #41 = Utf8               [B\n+  #42 = Utf8               offset\n+  #43 = Utf8               I\n+  #44 = Utf8               length\n+  #45 = Utf8               SourceFile\n+  #46 = Utf8               SocketOutputStream.java\n {\n   private final java.net.Socket socket;\n     descriptor: Ljava/net/Socket;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.net.io.SocketOutputStream(java.net.Socket, java.io.OutputStream);\n     descriptor: (Ljava/net/Socket;Ljava/io/OutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_2\n-         2: invokespecial #1                  // Method java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+         2: invokespecial #10                 // Method java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n          5: aload_0\n          6: aload_1\n-         7: putfield      #2                  // Field socket:Ljava/net/Socket;\n+         7: putfield      #13                 // Field socket:Ljava/net/Socket;\n         10: return\n       LineNumberTable:\n         line 44: 0\n         line 45: 5\n         line 46: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/net/io/SocketOutputStream;\n             0      11     1 socket   Ljava/net/Socket;\n             0      11     2 stream   Ljava/io/OutputStream;\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #3                  // Method java/io/FilterOutputStream.close:()V\n+         1: invokespecial #26                 // Method java/io/FilterOutputStream.close:()V\n          4: aload_0\n-         5: getfield      #2                  // Field socket:Ljava/net/Socket;\n-         8: invokevirtual #4                  // Method java/net/Socket.close:()V\n+         5: getfield      #13                 // Field socket:Ljava/net/Socket;\n+         8: invokevirtual #28                 // Method java/net/Socket.close:()V\n         11: return\n       LineNumberTable:\n         line 55: 0\n         line 56: 4\n         line 57: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/net/io/SocketOutputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #5                  // Field out:Ljava/io/OutputStream;\n+         1: getfield      #33                 // Field out:Ljava/io/OutputStream;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokevirtual #6                  // Method java/io/OutputStream.write:([BII)V\n+         7: invokevirtual #36                 // Method java/io/OutputStream.write:([BII)V\n         10: return\n       LineNumberTable:\n         line 70: 0\n         line 71: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/net/io/SocketOutputStream;\n             0      11     1 buffer   [B\n             0      11     2 offset   I\n             0      11     3 length   I\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"SocketOutputStream.java\"\n"}]}
