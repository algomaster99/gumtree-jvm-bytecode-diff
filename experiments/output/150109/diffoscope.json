{"diffoscope-json-version": 1, "source1": "first/NewAttributeBands$Union.class", "source2": "second/NewAttributeBands$Union.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -14,24 +14,24 @@\n     private final List<NewAttributeBands.UnionCase> unionCases;\n     private final List<NewAttributeBands.LayoutElement> defaultCaseBody;\n     private int[] caseCounts;\n     private int defaultCount;\n     \n     public Union(final NewAttributeBands this$0, final String tag, final List<NewAttributeBands.UnionCase> unionCases, final List<NewAttributeBands.LayoutElement> body) {\n         this.this$0 = this$0;\n-        super((NewAttributeBands.NewAttributeBands$1)null);\n+        super((NewAttributeBands.LayoutElement)null);\n         this.unionTag = new NewAttributeBands.Integral(this$0, tag);\n         this.unionCases = unionCases;\n         this.defaultCaseBody = body;\n     }\n     \n     public void addToAttribute(final int n, final NewAttribute attribute) {\n         this.unionTag.addToAttribute(n, attribute);\n         int offset = 0;\n-        final int[] tagBand = NewAttributeBands.Integral.access$300(this.unionTag);\n+        final int[] tagBand = NewAttributeBands.Integral.access$0(this.unionTag);\n         final int tag = this.unionTag.getValue(n);\n         boolean defaultCase = true;\n         for (final NewAttributeBands.UnionCase unionCase : this.unionCases) {\n             if (unionCase.hasTag(tag)) {\n                 defaultCase = false;\n                 for (int j = 0; j < n; ++j) {\n                     if (unionCase.hasTag(tagBand[j])) {\n@@ -72,28 +72,32 @@\n     \n     public NewAttributeBands.Integral getUnionTag() {\n         return this.unionTag;\n     }\n     \n     public void readBands(final InputStream in, final int count) throws IOException, Pack200Exception {\n         this.unionTag.readBands(in, count);\n-        final int[] values = NewAttributeBands.Integral.access$300(this.unionTag);\n+        final int[] values = NewAttributeBands.Integral.access$0(this.unionTag);\n         this.caseCounts = new int[this.unionCases.size()];\n         for (int i = 0; i < this.caseCounts.length; ++i) {\n             final NewAttributeBands.UnionCase unionCase = (NewAttributeBands.UnionCase)this.unionCases.get(i);\n-            for (final int value : values) {\n+            int[] array;\n+            for (int length = (array = values).length, j = 0; j < length; ++j) {\n+                final int value = array[j];\n                 if (unionCase.hasTag(value)) {\n                     final int[] caseCounts = this.caseCounts;\n                     final int n = i;\n                     ++caseCounts[n];\n                 }\n             }\n             unionCase.readBands(in, this.caseCounts[i]);\n         }\n-        for (final int value2 : values) {\n+        int[] array2;\n+        for (int length2 = (array2 = values).length, k = 0; k < length2; ++k) {\n+            final int value2 = array2[k];\n             boolean found = false;\n             for (final NewAttributeBands.UnionCase unionCase2 : this.unionCases) {\n                 if (unionCase2.hasTag(value2)) {\n                     found = true;\n                 }\n             }\n             if (!found) {\n"}]}
