{"diffoscope-json-version": 1, "source1": "first/ExtraFieldUtils.class", "source2": "second/ExtraFieldUtils.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -31,21 +31,21 @@\n     }\n     \n     public static void register(final Class<?> c) {\n         try {\n             final ZipExtraField ze = (ZipExtraField)c.newInstance();\n             ExtraFieldUtils.implementations.put(ze.getHeaderId(), c);\n         }\n-        catch (final ClassCastException ex) {\n+        catch (final ClassCastException cc) {\n             throw new RuntimeException(c + \" doesn't implement ZipExtraField\");\n         }\n-        catch (final InstantiationException ex2) {\n+        catch (final InstantiationException ie) {\n             throw new RuntimeException(c + \" is not a concrete class\");\n         }\n-        catch (final IllegalAccessException ex3) {\n+        catch (final IllegalAccessException ie2) {\n             throw new RuntimeException(c + \"'s no-arg constructor is not public\");\n         }\n     }\n     \n     public static ZipExtraField createExtraField(final ZipShort headerId) throws InstantiationException, IllegalAccessException {\n         final Class<?> c = (Class<?>)ExtraFieldUtils.implementations.get(headerId);\n         if (c != null) {\n"}]}
