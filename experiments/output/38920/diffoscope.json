{"diffoscope-json-version": 1, "source1": "first/CoderBase.class", "source2": "second/CoderBase.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -6,20 +6,26 @@\n import java.io.IOException;\n \n abstract class CoderBase\n {\n     private final Class<?>[] acceptableOptions;\n     private static final byte[] NONE;\n     \n+    static {\n+        NONE = new byte[0];\n+    }\n+    \n     protected CoderBase(final Class<?>... acceptableOptions) {\n         this.acceptableOptions = acceptableOptions;\n     }\n     \n     boolean canAcceptOptions(final Object opts) {\n-        for (final Class<?> c : this.acceptableOptions) {\n+        Class<?>[] acceptableOptions;\n+        for (int length = (acceptableOptions = this.acceptableOptions).length, i = 0; i < length; ++i) {\n+            final Class<?> c = acceptableOptions[i];\n             if (c.isInstance(opts)) {\n                 return true;\n             }\n         }\n         return false;\n     }\n     \n@@ -36,12 +42,8 @@\n     OutputStream encode(final OutputStream out, final Object options) throws IOException {\n         throw new UnsupportedOperationException(\"method doesn't support writing\");\n     }\n     \n     protected static int numberOptionOrDefault(final Object options, final int defaultValue) {\n         return (options instanceof Number) ? ((Number)options).intValue() : defaultValue;\n     }\n-    \n-    static {\n-        NONE = new byte[0];\n-    }\n }\n"}]}
