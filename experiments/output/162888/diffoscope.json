{"diffoscope-json-version": 1, "source1": "first/StackMapEntry.class", "source2": "second/StackMapEntry.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,87 +1,87 @@\n-  SHA-256 checksum 07ce03947fc87a48525cb629d659fcda5e722c351dcfeec1f1a9555da4b42073\n+  SHA-256 checksum ea35a74fb14de10091463c9a53d1242c0a9a51ca0dc837cf0290e77a5ed72132\n   Compiled from \"StackMapEntry.java\"\n public final class org.apache.bcel.classfile.StackMapEntry implements org.apache.bcel.classfile.Node,java.lang.Cloneable\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #28                         // org/apache/bcel/classfile/StackMapEntry\n   super_class: #68                        // java/lang/Object\n   interfaces: 2, fields: 6, methods: 27, attributes: 3\n Constant pool:\n-    #1 = InterfaceMethodref #169.#170     // java/io/DataInput.readByte:()B\n-    #2 = Methodref          #28.#171      // org/apache/bcel/classfile/StackMapEntry.\"<init>\":(II[Lorg/apache/bcel/classfile/StackMapType;[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n-    #3 = Fieldref           #28.#172      // org/apache/bcel/classfile/StackMapEntry.frameType:I\n-    #4 = Class              #173          // org/apache/bcel/Const\n-    #5 = Fieldref           #28.#174      // org/apache/bcel/classfile/StackMapEntry.byteCodeOffset:I\n-    #6 = Class              #175          // org/apache/bcel/classfile/StackMapType\n-    #7 = Methodref          #6.#176       // org/apache/bcel/classfile/StackMapType.\"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n-    #8 = Fieldref           #28.#177      // org/apache/bcel/classfile/StackMapEntry.typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n-    #9 = InterfaceMethodref #169.#178     // java/io/DataInput.readUnsignedShort:()I\n-   #10 = Fieldref           #28.#179      // org/apache/bcel/classfile/StackMapEntry.typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n-   #11 = Class              #180          // org/apache/bcel/classfile/ClassFormatException\n-   #12 = Class              #181          // java/lang/StringBuilder\n-   #13 = Methodref          #12.#182      // java/lang/StringBuilder.\"<init>\":()V\n-   #14 = String             #183          // Invalid frame type found while parsing stack map table:\n-   #15 = Methodref          #12.#184      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #16 = Methodref          #12.#185      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #17 = Methodref          #12.#186      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #18 = Methodref          #11.#187      // org/apache/bcel/classfile/ClassFormatException.\"<init>\":(Ljava/lang/String;)V\n-   #19 = Methodref          #68.#182      // java/lang/Object.\"<init>\":()V\n-   #20 = Fieldref           #6.#188       // org/apache/bcel/classfile/StackMapType.EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapType;\n-   #21 = Fieldref           #28.#189      // org/apache/bcel/classfile/StackMapEntry.constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n-   #22 = Class              #190          // java/lang/IllegalArgumentException\n-   #23 = String             #191          // numberOfLocals < 0\n-   #24 = Methodref          #22.#187      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #25 = String             #192          // numberOfStackItems < 0\n-   #26 = InterfaceMethodref #193.#194     // org/apache/bcel/classfile/Visitor.visitStackMapEntry:(Lorg/apache/bcel/classfile/StackMapEntry;)V\n-   #27 = Methodref          #68.#195      // java/lang/Object.clone:()Ljava/lang/Object;\n-   #28 = Class              #196          // org/apache/bcel/classfile/StackMapEntry\n-   #29 = Class              #197          // java/lang/CloneNotSupportedException\n-   #30 = Class              #198          // java/lang/Error\n-   #31 = String             #199          // Clone Not Supported\n-   #32 = Methodref          #30.#187      // java/lang/Error.\"<init>\":(Ljava/lang/String;)V\n-   #33 = InvokeDynamic      #0:#205       // #0:apply:(Lorg/apache/bcel/classfile/StackMapEntry;)Ljava/util/function/IntFunction;\n-   #34 = Methodref          #206.#207     // java/util/Arrays.setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n-   #35 = InvokeDynamic      #1:#205       // #1:apply:(Lorg/apache/bcel/classfile/StackMapEntry;)Ljava/util/function/IntFunction;\n-   #36 = Methodref          #209.#210     // java/io/DataOutputStream.write:(I)V\n-   #37 = Methodref          #6.#211       // org/apache/bcel/classfile/StackMapType.dump:(Ljava/io/DataOutputStream;)V\n-   #38 = Methodref          #209.#212     // java/io/DataOutputStream.writeShort:(I)V\n-   #39 = String             #213          // Invalid Stack map table tag:\n-   #40 = Methodref          #6.#214       // org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n-   #41 = Class              #215          // java/lang/IllegalStateException\n-   #42 = String             #216          // Invalid StackMap frameType:\n-   #43 = Methodref          #41.#187      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #44 = String             #217          // Invalid StackMap offset:\n-   #45 = Methodref          #28.#218      // org/apache/bcel/classfile/StackMapEntry.invalidFrameType:(I)Z\n-   #46 = String             #219          // Invalid StackMap frameType\n-   #47 = Methodref          #12.#220      // java/lang/StringBuilder.\"<init>\":(I)V\n-   #48 = String             #221          // (\n-   #49 = String             #222          // SAME\n-   #50 = String             #223          // SAME_LOCALS_1_STACK\n-   #51 = String             #224          // SAME_LOCALS_1_STACK_EXTENDED\n-   #52 = String             #225          // CHOP\n-   #53 = Methodref          #226.#227     // java/lang/String.valueOf:(I)Ljava/lang/String;\n-   #54 = String             #228          // SAME_EXTENDED\n-   #55 = String             #229          // APPEND\n-   #56 = String             #230          // FULL\n-   #57 = String             #231          // UNKNOWN (\n-   #58 = String             #232          // )\n-   #59 = String             #233          // , offset delta=\n-   #60 = String             #234          // , locals={\n-   #61 = Methodref          #12.#235      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #62 = String             #236          // ,\n-   #63 = String             #237          // }\n-   #64 = String             #238          // , stack items={\n-   #65 = Methodref          #28.#239      // org/apache/bcel/classfile/StackMapEntry.setByteCodeOffset:(I)V\n-   #66 = Methodref          #6.#240       // org/apache/bcel/classfile/StackMapType.copy:()Lorg/apache/bcel/classfile/StackMapType;\n-   #67 = Fieldref           #28.#241      // org/apache/bcel/classfile/StackMapEntry.EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapEntry;\n-   #68 = Class              #242          // java/lang/Object\n-   #69 = Class              #243          // org/apache/bcel/classfile/Node\n-   #70 = Class              #244          // java/lang/Cloneable\n+    #1 = InterfaceMethodref #94.#165      // java/io/DataInput.readByte:()B\n+    #2 = Methodref          #28.#166      // org/apache/bcel/classfile/StackMapEntry.\"<init>\":(II[Lorg/apache/bcel/classfile/StackMapType;[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n+    #3 = Fieldref           #28.#167      // org/apache/bcel/classfile/StackMapEntry.frameType:I\n+    #4 = Class              #168          // org/apache/bcel/Const\n+    #5 = Fieldref           #28.#169      // org/apache/bcel/classfile/StackMapEntry.byteCodeOffset:I\n+    #6 = Class              #170          // org/apache/bcel/classfile/StackMapType\n+    #7 = Methodref          #6.#171       // org/apache/bcel/classfile/StackMapType.\"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n+    #8 = Fieldref           #28.#172      // org/apache/bcel/classfile/StackMapEntry.typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+    #9 = InterfaceMethodref #94.#173      // java/io/DataInput.readUnsignedShort:()I\n+   #10 = Fieldref           #28.#174      // org/apache/bcel/classfile/StackMapEntry.typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+   #11 = Class              #175          // org/apache/bcel/classfile/ClassFormatException\n+   #12 = Class              #176          // java/lang/StringBuilder\n+   #13 = Methodref          #12.#177      // java/lang/StringBuilder.\"<init>\":()V\n+   #14 = String             #178          // Invalid frame type found while parsing stack map table:\n+   #15 = Methodref          #12.#179      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #16 = Methodref          #12.#180      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #17 = Methodref          #12.#181      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #18 = Methodref          #11.#182      // org/apache/bcel/classfile/ClassFormatException.\"<init>\":(Ljava/lang/String;)V\n+   #19 = Methodref          #68.#177      // java/lang/Object.\"<init>\":()V\n+   #20 = Fieldref           #6.#183       // org/apache/bcel/classfile/StackMapType.EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapType;\n+   #21 = Fieldref           #28.#184      // org/apache/bcel/classfile/StackMapEntry.constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+   #22 = Class              #185          // java/lang/IllegalArgumentException\n+   #23 = String             #186          // numberOfLocals < 0\n+   #24 = Methodref          #22.#182      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #25 = String             #187          // numberOfStackItems < 0\n+   #26 = InterfaceMethodref #188.#189     // org/apache/bcel/classfile/Visitor.visitStackMapEntry:(Lorg/apache/bcel/classfile/StackMapEntry;)V\n+   #27 = Methodref          #68.#190      // java/lang/Object.clone:()Ljava/lang/Object;\n+   #28 = Class              #191          // org/apache/bcel/classfile/StackMapEntry\n+   #29 = Class              #192          // java/lang/CloneNotSupportedException\n+   #30 = Class              #193          // java/lang/Error\n+   #31 = String             #194          // Clone Not Supported\n+   #32 = Methodref          #30.#182      // java/lang/Error.\"<init>\":(Ljava/lang/String;)V\n+   #33 = InvokeDynamic      #0:#200       // #0:apply:(Lorg/apache/bcel/classfile/StackMapEntry;)Ljava/util/function/IntFunction;\n+   #34 = Methodref          #201.#202     // java/util/Arrays.setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n+   #35 = InvokeDynamic      #1:#200       // #1:apply:(Lorg/apache/bcel/classfile/StackMapEntry;)Ljava/util/function/IntFunction;\n+   #36 = Methodref          #204.#205     // java/io/DataOutputStream.write:(I)V\n+   #37 = Methodref          #6.#206       // org/apache/bcel/classfile/StackMapType.dump:(Ljava/io/DataOutputStream;)V\n+   #38 = Methodref          #204.#207     // java/io/DataOutputStream.writeShort:(I)V\n+   #39 = String             #208          // Invalid Stack map table tag:\n+   #40 = Methodref          #6.#209       // org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n+   #41 = Class              #210          // java/lang/IllegalStateException\n+   #42 = String             #211          // Invalid StackMap frameType:\n+   #43 = Methodref          #41.#182      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #44 = String             #212          // Invalid StackMap offset:\n+   #45 = Methodref          #28.#213      // org/apache/bcel/classfile/StackMapEntry.invalidFrameType:(I)Z\n+   #46 = String             #214          // Invalid StackMap frameType\n+   #47 = Methodref          #12.#215      // java/lang/StringBuilder.\"<init>\":(I)V\n+   #48 = String             #216          // (\n+   #49 = String             #217          // SAME\n+   #50 = String             #218          // SAME_LOCALS_1_STACK\n+   #51 = String             #219          // SAME_LOCALS_1_STACK_EXTENDED\n+   #52 = String             #220          // CHOP\n+   #53 = Methodref          #221.#222     // java/lang/String.valueOf:(I)Ljava/lang/String;\n+   #54 = String             #223          // SAME_EXTENDED\n+   #55 = String             #224          // APPEND\n+   #56 = String             #225          // FULL\n+   #57 = String             #226          // UNKNOWN (\n+   #58 = String             #227          // )\n+   #59 = String             #228          // , offset delta=\n+   #60 = String             #229          // , locals={\n+   #61 = Methodref          #12.#230      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #62 = String             #231          // ,\n+   #63 = String             #232          // }\n+   #64 = String             #233          // , stack items={\n+   #65 = Methodref          #28.#234      // org/apache/bcel/classfile/StackMapEntry.setByteCodeOffset:(I)V\n+   #66 = Methodref          #6.#235       // org/apache/bcel/classfile/StackMapType.copy:()Lorg/apache/bcel/classfile/StackMapType;\n+   #67 = Fieldref           #28.#236      // org/apache/bcel/classfile/StackMapEntry.EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapEntry;\n+   #68 = Class              #237          // java/lang/Object\n+   #69 = Class              #238          // org/apache/bcel/classfile/Node\n+   #70 = Class              #239          // java/lang/Cloneable\n    #71 = Utf8               EMPTY_ARRAY\n    #72 = Utf8               [Lorg/apache/bcel/classfile/StackMapEntry;\n    #73 = Utf8               frameType\n    #74 = Utf8               I\n    #75 = Utf8               byteCodeOffset\n    #76 = Utf8               typesOfLocals\n    #77 = Utf8               [Lorg/apache/bcel/classfile/StackMapType;\n@@ -97,212 +97,207 @@\n    #87 = Utf8               numberOfLocals\n    #88 = Utf8               numberOfStackItems\n    #89 = Utf8               this\n    #90 = Utf8               Lorg/apache/bcel/classfile/StackMapEntry;\n    #91 = Utf8               dataInput\n    #92 = Utf8               Ljava/io/DataInput;\n    #93 = Utf8               StackMapTable\n-   #94 = Class              #196          // org/apache/bcel/classfile/StackMapEntry\n-   #95 = Class              #245          // java/io/DataInput\n-   #96 = Class              #246          // org/apache/bcel/classfile/ConstantPool\n-   #97 = Utf8               Exceptions\n-   #98 = Class              #247          // java/io/IOException\n-   #99 = Utf8               MethodParameters\n-  #100 = Utf8               (II[Lorg/apache/bcel/classfile/StackMapType;I[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #101 = Class              #77           // \"[Lorg/apache/bcel/classfile/StackMapType;\"\n-  #102 = Utf8               Deprecated\n-  #103 = Utf8               RuntimeVisibleAnnotations\n-  #104 = Utf8               Ljava/lang/Deprecated;\n-  #105 = Utf8               (II[Lorg/apache/bcel/classfile/StackMapType;[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #106 = Utf8               tag\n-  #107 = Utf8               accept\n-  #108 = Utf8               (Lorg/apache/bcel/classfile/Visitor;)V\n-  #109 = Utf8               v\n-  #110 = Utf8               Lorg/apache/bcel/classfile/Visitor;\n-  #111 = Utf8               copy\n-  #112 = Utf8               ()Lorg/apache/bcel/classfile/StackMapEntry;\n-  #113 = Utf8               e\n-  #114 = Utf8               ex\n-  #115 = Utf8               Ljava/lang/CloneNotSupportedException;\n-  #116 = Class              #197          // java/lang/CloneNotSupportedException\n-  #117 = Utf8               dump\n-  #118 = Utf8               (Ljava/io/DataOutputStream;)V\n-  #119 = Utf8               type\n-  #120 = Utf8               Lorg/apache/bcel/classfile/StackMapType;\n-  #121 = Utf8               file\n-  #122 = Utf8               Ljava/io/DataOutputStream;\n-  #123 = Utf8               getByteCodeOffset\n-  #124 = Utf8               ()I\n-  #125 = Utf8               getConstantPool\n-  #126 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n-  #127 = Utf8               getFrameType\n-  #128 = Utf8               getMapEntrySize\n-  #129 = Utf8               typesOfLocal\n-  #130 = Utf8               len\n-  #131 = Utf8               typesOfStackItem\n-  #132 = Class              #175          // org/apache/bcel/classfile/StackMapType\n-  #133 = Utf8               getNumberOfLocals\n-  #134 = Utf8               getNumberOfStackItems\n-  #135 = Utf8               getTypesOfLocals\n-  #136 = Utf8               ()[Lorg/apache/bcel/classfile/StackMapType;\n-  #137 = Utf8               getTypesOfStackItems\n-  #138 = Utf8               invalidFrameType\n-  #139 = Utf8               (I)Z\n-  #140 = Utf8               f\n-  #141 = Utf8               setByteCodeOffset\n-  #142 = Utf8               (I)V\n-  #143 = Utf8               newOffset\n-  #144 = Utf8               setConstantPool\n-  #145 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #146 = Utf8               setFrameType\n-  #147 = Utf8               ft\n-  #148 = Utf8               setNumberOfLocals\n-  #149 = Utf8               n\n-  #150 = Utf8               setNumberOfStackItems\n-  #151 = Utf8               setTypesOfLocals\n-  #152 = Utf8               ([Lorg/apache/bcel/classfile/StackMapType;)V\n-  #153 = Utf8               types\n-  #154 = Utf8               setTypesOfStackItems\n-  #155 = Utf8               toString\n-  #156 = Utf8               ()Ljava/lang/String;\n-  #157 = Utf8               buf\n-  #158 = Utf8               Ljava/lang/StringBuilder;\n-  #159 = Class              #181          // java/lang/StringBuilder\n-  #160 = Utf8               updateByteCodeOffset\n-  #161 = Utf8               delta\n-  #162 = Utf8               lambda$copy$1\n-  #163 = Utf8               (I)Lorg/apache/bcel/classfile/StackMapType;\n-  #164 = Utf8               lambda$copy$0\n-  #165 = Utf8               <clinit>\n-  #166 = Utf8               ()V\n-  #167 = Utf8               SourceFile\n-  #168 = Utf8               StackMapEntry.java\n-  #169 = Class              #245          // java/io/DataInput\n-  #170 = NameAndType        #248:#249     // readByte:()B\n-  #171 = NameAndType        #81:#105      // \"<init>\":(II[Lorg/apache/bcel/classfile/StackMapType;[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #172 = NameAndType        #73:#74       // frameType:I\n-  #173 = Utf8               org/apache/bcel/Const\n-  #174 = NameAndType        #75:#74       // byteCodeOffset:I\n-  #175 = Utf8               org/apache/bcel/classfile/StackMapType\n-  #176 = NameAndType        #81:#82       // \"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #177 = NameAndType        #78:#77       // typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n-  #178 = NameAndType        #250:#124     // readUnsignedShort:()I\n-  #179 = NameAndType        #76:#77       // typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n-  #180 = Utf8               org/apache/bcel/classfile/ClassFormatException\n-  #181 = Utf8               java/lang/StringBuilder\n-  #182 = NameAndType        #81:#166      // \"<init>\":()V\n-  #183 = Utf8               Invalid frame type found while parsing stack map table:\n-  #184 = NameAndType        #251:#252     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #185 = NameAndType        #251:#253     // append:(I)Ljava/lang/StringBuilder;\n-  #186 = NameAndType        #155:#156     // toString:()Ljava/lang/String;\n-  #187 = NameAndType        #81:#254      // \"<init>\":(Ljava/lang/String;)V\n-  #188 = NameAndType        #71:#77       // EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapType;\n-  #189 = NameAndType        #79:#80       // constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n-  #190 = Utf8               java/lang/IllegalArgumentException\n-  #191 = Utf8               numberOfLocals < 0\n-  #192 = Utf8               numberOfStackItems < 0\n-  #193 = Class              #255          // org/apache/bcel/classfile/Visitor\n-  #194 = NameAndType        #256:#257     // visitStackMapEntry:(Lorg/apache/bcel/classfile/StackMapEntry;)V\n-  #195 = NameAndType        #258:#259     // clone:()Ljava/lang/Object;\n-  #196 = Utf8               org/apache/bcel/classfile/StackMapEntry\n-  #197 = Utf8               java/lang/CloneNotSupportedException\n-  #198 = Utf8               java/lang/Error\n-  #199 = Utf8               Clone Not Supported\n-  #200 = Utf8               BootstrapMethods\n-  #201 = MethodHandle       6:#260        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #202 = MethodType         #261          //  (I)Ljava/lang/Object;\n-  #203 = MethodHandle       7:#262        // REF_invokeSpecial org/apache/bcel/classfile/StackMapEntry.lambda$copy$0:(I)Lorg/apache/bcel/classfile/StackMapType;\n-  #204 = MethodType         #163          //  (I)Lorg/apache/bcel/classfile/StackMapType;\n-  #205 = NameAndType        #263:#264     // apply:(Lorg/apache/bcel/classfile/StackMapEntry;)Ljava/util/function/IntFunction;\n-  #206 = Class              #265          // java/util/Arrays\n-  #207 = NameAndType        #266:#267     // setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n-  #208 = MethodHandle       7:#268        // REF_invokeSpecial org/apache/bcel/classfile/StackMapEntry.lambda$copy$1:(I)Lorg/apache/bcel/classfile/StackMapType;\n-  #209 = Class              #269          // java/io/DataOutputStream\n-  #210 = NameAndType        #270:#142     // write:(I)V\n-  #211 = NameAndType        #117:#118     // dump:(Ljava/io/DataOutputStream;)V\n-  #212 = NameAndType        #271:#142     // writeShort:(I)V\n-  #213 = Utf8               Invalid Stack map table tag:\n-  #214 = NameAndType        #272:#273     // hasIndex:()Z\n-  #215 = Utf8               java/lang/IllegalStateException\n-  #216 = Utf8               Invalid StackMap frameType:\n-  #217 = Utf8               Invalid StackMap offset:\n-  #218 = NameAndType        #138:#139     // invalidFrameType:(I)Z\n-  #219 = Utf8               Invalid StackMap frameType\n-  #220 = NameAndType        #81:#142      // \"<init>\":(I)V\n-  #221 = Utf8               (\n-  #222 = Utf8               SAME\n-  #223 = Utf8               SAME_LOCALS_1_STACK\n-  #224 = Utf8               SAME_LOCALS_1_STACK_EXTENDED\n-  #225 = Utf8               CHOP\n-  #226 = Class              #274          // java/lang/String\n-  #227 = NameAndType        #275:#276     // valueOf:(I)Ljava/lang/String;\n-  #228 = Utf8               SAME_EXTENDED\n-  #229 = Utf8               APPEND\n-  #230 = Utf8               FULL\n-  #231 = Utf8               UNKNOWN (\n-  #232 = Utf8               )\n-  #233 = Utf8               , offset delta=\n-  #234 = Utf8               , locals={\n-  #235 = NameAndType        #251:#277     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #236 = Utf8               ,\n-  #237 = Utf8               }\n-  #238 = Utf8               , stack items={\n-  #239 = NameAndType        #141:#142     // setByteCodeOffset:(I)V\n-  #240 = NameAndType        #111:#278     // copy:()Lorg/apache/bcel/classfile/StackMapType;\n-  #241 = NameAndType        #71:#72       // EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapEntry;\n-  #242 = Utf8               java/lang/Object\n-  #243 = Utf8               org/apache/bcel/classfile/Node\n-  #244 = Utf8               java/lang/Cloneable\n-  #245 = Utf8               java/io/DataInput\n-  #246 = Utf8               org/apache/bcel/classfile/ConstantPool\n-  #247 = Utf8               java/io/IOException\n-  #248 = Utf8               readByte\n-  #249 = Utf8               ()B\n-  #250 = Utf8               readUnsignedShort\n-  #251 = Utf8               append\n-  #252 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #253 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #254 = Utf8               (Ljava/lang/String;)V\n-  #255 = Utf8               org/apache/bcel/classfile/Visitor\n-  #256 = Utf8               visitStackMapEntry\n-  #257 = Utf8               (Lorg/apache/bcel/classfile/StackMapEntry;)V\n-  #258 = Utf8               clone\n-  #259 = Utf8               ()Ljava/lang/Object;\n-  #260 = Methodref          #279.#280     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #261 = Utf8               (I)Ljava/lang/Object;\n-  #262 = Methodref          #28.#281      // org/apache/bcel/classfile/StackMapEntry.lambda$copy$0:(I)Lorg/apache/bcel/classfile/StackMapType;\n-  #263 = Utf8               apply\n-  #264 = Utf8               (Lorg/apache/bcel/classfile/StackMapEntry;)Ljava/util/function/IntFunction;\n-  #265 = Utf8               java/util/Arrays\n-  #266 = Utf8               setAll\n-  #267 = Utf8               ([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n-  #268 = Methodref          #28.#282      // org/apache/bcel/classfile/StackMapEntry.lambda$copy$1:(I)Lorg/apache/bcel/classfile/StackMapType;\n-  #269 = Utf8               java/io/DataOutputStream\n-  #270 = Utf8               write\n-  #271 = Utf8               writeShort\n-  #272 = Utf8               hasIndex\n-  #273 = Utf8               ()Z\n-  #274 = Utf8               java/lang/String\n-  #275 = Utf8               valueOf\n-  #276 = Utf8               (I)Ljava/lang/String;\n-  #277 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #278 = Utf8               ()Lorg/apache/bcel/classfile/StackMapType;\n-  #279 = Class              #283          // java/lang/invoke/LambdaMetafactory\n-  #280 = NameAndType        #284:#288     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #281 = NameAndType        #164:#163     // lambda$copy$0:(I)Lorg/apache/bcel/classfile/StackMapType;\n-  #282 = NameAndType        #162:#163     // lambda$copy$1:(I)Lorg/apache/bcel/classfile/StackMapType;\n-  #283 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #284 = Utf8               metafactory\n-  #285 = Class              #290          // java/lang/invoke/MethodHandles$Lookup\n-  #286 = Utf8               Lookup\n-  #287 = Utf8               InnerClasses\n-  #288 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #289 = Class              #291          // java/lang/invoke/MethodHandles\n-  #290 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #291 = Utf8               java/lang/invoke/MethodHandles\n+   #94 = Class              #240          // java/io/DataInput\n+   #95 = Class              #241          // org/apache/bcel/classfile/ConstantPool\n+   #96 = Utf8               Exceptions\n+   #97 = Class              #242          // java/io/IOException\n+   #98 = Utf8               MethodParameters\n+   #99 = Utf8               (II[Lorg/apache/bcel/classfile/StackMapType;I[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n+  #100 = Class              #77           // \"[Lorg/apache/bcel/classfile/StackMapType;\"\n+  #101 = Utf8               Deprecated\n+  #102 = Utf8               RuntimeVisibleAnnotations\n+  #103 = Utf8               Ljava/lang/Deprecated;\n+  #104 = Utf8               (II[Lorg/apache/bcel/classfile/StackMapType;[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n+  #105 = Utf8               tag\n+  #106 = Utf8               accept\n+  #107 = Utf8               (Lorg/apache/bcel/classfile/Visitor;)V\n+  #108 = Utf8               v\n+  #109 = Utf8               Lorg/apache/bcel/classfile/Visitor;\n+  #110 = Utf8               copy\n+  #111 = Utf8               ()Lorg/apache/bcel/classfile/StackMapEntry;\n+  #112 = Utf8               e\n+  #113 = Utf8               ex\n+  #114 = Utf8               Ljava/lang/CloneNotSupportedException;\n+  #115 = Utf8               dump\n+  #116 = Utf8               (Ljava/io/DataOutputStream;)V\n+  #117 = Utf8               type\n+  #118 = Utf8               Lorg/apache/bcel/classfile/StackMapType;\n+  #119 = Utf8               file\n+  #120 = Utf8               Ljava/io/DataOutputStream;\n+  #121 = Utf8               getByteCodeOffset\n+  #122 = Utf8               ()I\n+  #123 = Utf8               getConstantPool\n+  #124 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n+  #125 = Utf8               getFrameType\n+  #126 = Utf8               getMapEntrySize\n+  #127 = Utf8               typesOfLocal\n+  #128 = Utf8               len\n+  #129 = Utf8               typesOfStackItem\n+  #130 = Utf8               getNumberOfLocals\n+  #131 = Utf8               getNumberOfStackItems\n+  #132 = Utf8               getTypesOfLocals\n+  #133 = Utf8               ()[Lorg/apache/bcel/classfile/StackMapType;\n+  #134 = Utf8               getTypesOfStackItems\n+  #135 = Utf8               invalidFrameType\n+  #136 = Utf8               (I)Z\n+  #137 = Utf8               f\n+  #138 = Utf8               setByteCodeOffset\n+  #139 = Utf8               (I)V\n+  #140 = Utf8               newOffset\n+  #141 = Utf8               setConstantPool\n+  #142 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n+  #143 = Utf8               setFrameType\n+  #144 = Utf8               ft\n+  #145 = Utf8               setNumberOfLocals\n+  #146 = Utf8               n\n+  #147 = Utf8               setNumberOfStackItems\n+  #148 = Utf8               setTypesOfLocals\n+  #149 = Utf8               ([Lorg/apache/bcel/classfile/StackMapType;)V\n+  #150 = Utf8               types\n+  #151 = Utf8               setTypesOfStackItems\n+  #152 = Utf8               toString\n+  #153 = Utf8               ()Ljava/lang/String;\n+  #154 = Utf8               buf\n+  #155 = Utf8               Ljava/lang/StringBuilder;\n+  #156 = Utf8               updateByteCodeOffset\n+  #157 = Utf8               delta\n+  #158 = Utf8               lambda$copy$1\n+  #159 = Utf8               (I)Lorg/apache/bcel/classfile/StackMapType;\n+  #160 = Utf8               lambda$copy$0\n+  #161 = Utf8               <clinit>\n+  #162 = Utf8               ()V\n+  #163 = Utf8               SourceFile\n+  #164 = Utf8               StackMapEntry.java\n+  #165 = NameAndType        #243:#244     // readByte:()B\n+  #166 = NameAndType        #81:#104      // \"<init>\":(II[Lorg/apache/bcel/classfile/StackMapType;[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n+  #167 = NameAndType        #73:#74       // frameType:I\n+  #168 = Utf8               org/apache/bcel/Const\n+  #169 = NameAndType        #75:#74       // byteCodeOffset:I\n+  #170 = Utf8               org/apache/bcel/classfile/StackMapType\n+  #171 = NameAndType        #81:#82       // \"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n+  #172 = NameAndType        #78:#77       // typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+  #173 = NameAndType        #245:#122     // readUnsignedShort:()I\n+  #174 = NameAndType        #76:#77       // typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+  #175 = Utf8               org/apache/bcel/classfile/ClassFormatException\n+  #176 = Utf8               java/lang/StringBuilder\n+  #177 = NameAndType        #81:#162      // \"<init>\":()V\n+  #178 = Utf8               Invalid frame type found while parsing stack map table:\n+  #179 = NameAndType        #246:#247     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #180 = NameAndType        #246:#248     // append:(I)Ljava/lang/StringBuilder;\n+  #181 = NameAndType        #152:#153     // toString:()Ljava/lang/String;\n+  #182 = NameAndType        #81:#249      // \"<init>\":(Ljava/lang/String;)V\n+  #183 = NameAndType        #71:#77       // EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapType;\n+  #184 = NameAndType        #79:#80       // constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+  #185 = Utf8               java/lang/IllegalArgumentException\n+  #186 = Utf8               numberOfLocals < 0\n+  #187 = Utf8               numberOfStackItems < 0\n+  #188 = Class              #250          // org/apache/bcel/classfile/Visitor\n+  #189 = NameAndType        #251:#252     // visitStackMapEntry:(Lorg/apache/bcel/classfile/StackMapEntry;)V\n+  #190 = NameAndType        #253:#254     // clone:()Ljava/lang/Object;\n+  #191 = Utf8               org/apache/bcel/classfile/StackMapEntry\n+  #192 = Utf8               java/lang/CloneNotSupportedException\n+  #193 = Utf8               java/lang/Error\n+  #194 = Utf8               Clone Not Supported\n+  #195 = Utf8               BootstrapMethods\n+  #196 = MethodHandle       6:#255        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #197 = MethodType         #256          //  (I)Ljava/lang/Object;\n+  #198 = MethodHandle       7:#257        // REF_invokeSpecial org/apache/bcel/classfile/StackMapEntry.lambda$copy$0:(I)Lorg/apache/bcel/classfile/StackMapType;\n+  #199 = MethodType         #159          //  (I)Lorg/apache/bcel/classfile/StackMapType;\n+  #200 = NameAndType        #258:#259     // apply:(Lorg/apache/bcel/classfile/StackMapEntry;)Ljava/util/function/IntFunction;\n+  #201 = Class              #260          // java/util/Arrays\n+  #202 = NameAndType        #261:#262     // setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n+  #203 = MethodHandle       7:#263        // REF_invokeSpecial org/apache/bcel/classfile/StackMapEntry.lambda$copy$1:(I)Lorg/apache/bcel/classfile/StackMapType;\n+  #204 = Class              #264          // java/io/DataOutputStream\n+  #205 = NameAndType        #265:#139     // write:(I)V\n+  #206 = NameAndType        #115:#116     // dump:(Ljava/io/DataOutputStream;)V\n+  #207 = NameAndType        #266:#139     // writeShort:(I)V\n+  #208 = Utf8               Invalid Stack map table tag:\n+  #209 = NameAndType        #267:#268     // hasIndex:()Z\n+  #210 = Utf8               java/lang/IllegalStateException\n+  #211 = Utf8               Invalid StackMap frameType:\n+  #212 = Utf8               Invalid StackMap offset:\n+  #213 = NameAndType        #135:#136     // invalidFrameType:(I)Z\n+  #214 = Utf8               Invalid StackMap frameType\n+  #215 = NameAndType        #81:#139      // \"<init>\":(I)V\n+  #216 = Utf8               (\n+  #217 = Utf8               SAME\n+  #218 = Utf8               SAME_LOCALS_1_STACK\n+  #219 = Utf8               SAME_LOCALS_1_STACK_EXTENDED\n+  #220 = Utf8               CHOP\n+  #221 = Class              #269          // java/lang/String\n+  #222 = NameAndType        #270:#271     // valueOf:(I)Ljava/lang/String;\n+  #223 = Utf8               SAME_EXTENDED\n+  #224 = Utf8               APPEND\n+  #225 = Utf8               FULL\n+  #226 = Utf8               UNKNOWN (\n+  #227 = Utf8               )\n+  #228 = Utf8               , offset delta=\n+  #229 = Utf8               , locals={\n+  #230 = NameAndType        #246:#272     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #231 = Utf8               ,\n+  #232 = Utf8               }\n+  #233 = Utf8               , stack items={\n+  #234 = NameAndType        #138:#139     // setByteCodeOffset:(I)V\n+  #235 = NameAndType        #110:#273     // copy:()Lorg/apache/bcel/classfile/StackMapType;\n+  #236 = NameAndType        #71:#72       // EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapEntry;\n+  #237 = Utf8               java/lang/Object\n+  #238 = Utf8               org/apache/bcel/classfile/Node\n+  #239 = Utf8               java/lang/Cloneable\n+  #240 = Utf8               java/io/DataInput\n+  #241 = Utf8               org/apache/bcel/classfile/ConstantPool\n+  #242 = Utf8               java/io/IOException\n+  #243 = Utf8               readByte\n+  #244 = Utf8               ()B\n+  #245 = Utf8               readUnsignedShort\n+  #246 = Utf8               append\n+  #247 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #248 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #249 = Utf8               (Ljava/lang/String;)V\n+  #250 = Utf8               org/apache/bcel/classfile/Visitor\n+  #251 = Utf8               visitStackMapEntry\n+  #252 = Utf8               (Lorg/apache/bcel/classfile/StackMapEntry;)V\n+  #253 = Utf8               clone\n+  #254 = Utf8               ()Ljava/lang/Object;\n+  #255 = Methodref          #274.#275     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #256 = Utf8               (I)Ljava/lang/Object;\n+  #257 = Methodref          #28.#276      // org/apache/bcel/classfile/StackMapEntry.lambda$copy$0:(I)Lorg/apache/bcel/classfile/StackMapType;\n+  #258 = Utf8               apply\n+  #259 = Utf8               (Lorg/apache/bcel/classfile/StackMapEntry;)Ljava/util/function/IntFunction;\n+  #260 = Utf8               java/util/Arrays\n+  #261 = Utf8               setAll\n+  #262 = Utf8               ([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n+  #263 = Methodref          #28.#277      // org/apache/bcel/classfile/StackMapEntry.lambda$copy$1:(I)Lorg/apache/bcel/classfile/StackMapType;\n+  #264 = Utf8               java/io/DataOutputStream\n+  #265 = Utf8               write\n+  #266 = Utf8               writeShort\n+  #267 = Utf8               hasIndex\n+  #268 = Utf8               ()Z\n+  #269 = Utf8               java/lang/String\n+  #270 = Utf8               valueOf\n+  #271 = Utf8               (I)Ljava/lang/String;\n+  #272 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #273 = Utf8               ()Lorg/apache/bcel/classfile/StackMapType;\n+  #274 = Class              #278          // java/lang/invoke/LambdaMetafactory\n+  #275 = NameAndType        #279:#283     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #276 = NameAndType        #160:#159     // lambda$copy$0:(I)Lorg/apache/bcel/classfile/StackMapType;\n+  #277 = NameAndType        #158:#159     // lambda$copy$1:(I)Lorg/apache/bcel/classfile/StackMapType;\n+  #278 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #279 = Utf8               metafactory\n+  #280 = Class              #285          // java/lang/invoke/MethodHandles$Lookup\n+  #281 = Utf8               Lookup\n+  #282 = Utf8               InnerClasses\n+  #283 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #284 = Class              #286          // java/lang/invoke/MethodHandles\n+  #285 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #286 = Utf8               java/lang/invoke/MethodHandles\n {\n   static final org.apache.bcel.classfile.StackMapEntry[] EMPTY_ARRAY;\n     descriptor: [Lorg/apache/bcel/classfile/StackMapEntry;\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n \n   private int frameType;\n     descriptor: I\n@@ -696,15 +691,15 @@\n       numberOfLocals                 final\n       typesOfLocals                  final\n       numberOfStackItems             final\n       typesOfStackItems              final\n       constantPool                   final\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #104()\n+      0: #103()\n         java.lang.Deprecated\n \n   public org.apache.bcel.classfile.StackMapEntry(int, int, org.apache.bcel.classfile.StackMapType[], org.apache.bcel.classfile.StackMapType[], org.apache.bcel.classfile.ConstantPool);\n     descriptor: (II[Lorg/apache/bcel/classfile/StackMapType;[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=6, args_size=6\n@@ -1732,15 +1727,15 @@\n             0       1     0  this   Lorg/apache/bcel/classfile/StackMapEntry;\n             0       1     1     n   I\n     MethodParameters:\n       Name                           Flags\n       n                              final\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #104()\n+      0: #103()\n         java.lang.Deprecated\n \n   public void setNumberOfStackItems(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=0, locals=2, args_size=2\n@@ -1752,15 +1747,15 @@\n             0       1     0  this   Lorg/apache/bcel/classfile/StackMapEntry;\n             0       1     1     n   I\n     MethodParameters:\n       Name                           Flags\n       n                              final\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #104()\n+      0: #103()\n         java.lang.Deprecated\n \n   public void setTypesOfLocals(org.apache.bcel.classfile.StackMapType[]);\n     descriptor: ([Lorg/apache/bcel/classfile/StackMapType;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n@@ -2131,17 +2126,14 @@\n          9: areturn\n       LineNumberTable:\n         line 172: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/bcel/classfile/StackMapEntry;\n             0      10     1     i   I\n-    MethodParameters:\n-      Name                           Flags\n-      i                              synthetic\n \n   private org.apache.bcel.classfile.StackMapType lambda$copy$0(int);\n     descriptor: (I)Lorg/apache/bcel/classfile/StackMapType;\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n@@ -2152,17 +2144,14 @@\n          9: areturn\n       LineNumberTable:\n         line 170: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/bcel/classfile/StackMapEntry;\n             0      10     1     i   I\n-    MethodParameters:\n-      Name                           Flags\n-      i                              synthetic\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: iconst_0\n@@ -2170,19 +2159,19 @@\n          4: putstatic     #67                 // Field EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapEntry;\n          7: return\n       LineNumberTable:\n         line 49: 0\n }\n SourceFile: \"StackMapEntry.java\"\n InnerClasses:\n-  public static final #286= #285 of #289; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  public static final #281= #280 of #284; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #201 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #196 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #202 (I)Ljava/lang/Object;\n-      #203 REF_invokeSpecial org/apache/bcel/classfile/StackMapEntry.lambda$copy$0:(I)Lorg/apache/bcel/classfile/StackMapType;\n-      #204 (I)Lorg/apache/bcel/classfile/StackMapType;\n-  1: #201 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #197 (I)Ljava/lang/Object;\n+      #198 REF_invokeSpecial org/apache/bcel/classfile/StackMapEntry.lambda$copy$0:(I)Lorg/apache/bcel/classfile/StackMapType;\n+      #199 (I)Lorg/apache/bcel/classfile/StackMapType;\n+  1: #196 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #202 (I)Ljava/lang/Object;\n-      #208 REF_invokeSpecial org/apache/bcel/classfile/StackMapEntry.lambda$copy$1:(I)Lorg/apache/bcel/classfile/StackMapType;\n-      #204 (I)Lorg/apache/bcel/classfile/StackMapType;\n+      #197 (I)Ljava/lang/Object;\n+      #203 REF_invokeSpecial org/apache/bcel/classfile/StackMapEntry.lambda$copy$1:(I)Lorg/apache/bcel/classfile/StackMapType;\n+      #199 (I)Lorg/apache/bcel/classfile/StackMapType;\n"}]}
