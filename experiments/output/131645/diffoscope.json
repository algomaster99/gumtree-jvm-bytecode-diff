{"diffoscope-json-version": 1, "source1": "first/TripleTest.class", "source2": "second/TripleTest.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -57,21 +57,21 @@\n         final HashSet<Triple<Integer, String, Boolean>> set = new HashSet<Triple<Integer, String, Boolean>>();\n         set.add(triple);\n         Assertions.assertTrue(set.contains((Object)triple2));\n     }\n     \n     @Test\n     public void testEmptyArrayGenerics() {\n-        final Triple<Integer, String, Boolean>[] empty = (Triple<Integer, String, Boolean>[])Triple.emptyArray();\n+        final Triple[] empty = Triple.emptyArray();\n         Assertions.assertEquals(0, empty.length);\n     }\n     \n     @Test\n     public void testEmptyArrayLength() {\n-        final Triple<Integer, String, Boolean>[] empty = (Triple<Integer, String, Boolean>[])Triple.EMPTY_ARRAY;\n+        final Triple[] empty = Triple.EMPTY_ARRAY;\n         Assertions.assertEquals(0, empty.length);\n     }\n     \n     @Test\n     public void testFormattable_padded() {\n         final Triple<String, String, String> triple = (Triple<String, String, String>)Triple.of((Object)\"Key\", (Object)\"Something\", (Object)\"Value\");\n         Assertions.assertEquals((Object)\"         (Key,Something,Value)\", (Object)String.format(\"%1$30s\", triple));\n"}]}
