{"diffoscope-json-version": 1, "source1": "first/ExplodingInputStream.class", "source2": "second/ExplodingInputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -34,41 +34,22 @@\n         this.numberOfTrees = numberOfTrees;\n         this.minimumMatchLength = numberOfTrees;\n         this.in = in;\n     }\n     \n     private void init() throws IOException {\n         if (this.bits == null) {\n-            final CountingInputStream i = new CountingInputStream((InputStream)new CloseShieldFilterInputStream(this.in));\n-            Throwable t = null;\n-            try {\n+            try (final CountingInputStream i = new CountingInputStream((InputStream)new CloseShieldFilterInputStream(this.in))) {\n                 if (this.numberOfTrees == 3) {\n                     this.literalTree = BinaryTree.decode((InputStream)i, 256);\n                 }\n                 this.lengthTree = BinaryTree.decode((InputStream)i, 64);\n                 this.distanceTree = BinaryTree.decode((InputStream)i, 64);\n                 this.treeSizes += i.getBytesRead();\n             }\n-            catch (final Throwable t2) {\n-                t = t2;\n-                throw t2;\n-            }\n-            finally {\n-                if (t != null) {\n-                    try {\n-                        i.close();\n-                    }\n-                    catch (final Throwable exception) {\n-                        t.addSuppressed(exception);\n-                    }\n-                }\n-                else {\n-                    i.close();\n-                }\n-            }\n             this.bits = new BitStream(this.in);\n         }\n     }\n     \n     @Override\n     public int read() throws IOException {\n         if (!this.buffer.available()) {\n"}]}
