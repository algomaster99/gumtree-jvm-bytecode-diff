{"diffoscope-json-version": 1, "source1": "first/ExtendedMessageFormat.class", "source2": "second/ExtendedMessageFormat.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,103 +1,103 @@\n-  SHA-256 checksum 658e0bb2510b33670cab75f9474e90e8ec2ecb7d3fd191c9dc73a5d6a7ca034c\n+  SHA-256 checksum be25b38991c4adf9ad7199ca8408c095e660ef27d819a83abeb260b8b5cfcc22\n   Compiled from \"ExtendedMessageFormat.java\"\n public class org.apache.commons.lang3.text.ExtendedMessageFormat extends java.text.MessageFormat\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #4                          // org/apache/commons/lang3/text/ExtendedMessageFormat\n   super_class: #86                        // java/text/MessageFormat\n   interfaces: 0, fields: 10, methods: 22, attributes: 3\n Constant pool:\n-    #1 = Methodref          #171.#172     // java/util/Locale.getDefault:()Ljava/util/Locale;\n-    #2 = Methodref          #4.#173       // org/apache/commons/lang3/text/ExtendedMessageFormat.\"<init>\":(Ljava/lang/String;Ljava/util/Locale;)V\n-    #3 = Methodref          #4.#174       // org/apache/commons/lang3/text/ExtendedMessageFormat.\"<init>\":(Ljava/lang/String;Ljava/util/Locale;Ljava/util/Map;)V\n-    #4 = Class              #175          // org/apache/commons/lang3/text/ExtendedMessageFormat\n-    #5 = String             #176          //\n-    #6 = Methodref          #86.#177      // java/text/MessageFormat.\"<init>\":(Ljava/lang/String;)V\n-    #7 = Methodref          #4.#178       // org/apache/commons/lang3/text/ExtendedMessageFormat.setLocale:(Ljava/util/Locale;)V\n-    #8 = Fieldref           #4.#179       // org/apache/commons/lang3/text/ExtendedMessageFormat.registry:Ljava/util/Map;\n-    #9 = Methodref          #4.#180       // org/apache/commons/lang3/text/ExtendedMessageFormat.applyPattern:(Ljava/lang/String;)V\n-   #10 = Fieldref           #4.#181       // org/apache/commons/lang3/text/ExtendedMessageFormat.toPattern:Ljava/lang/String;\n-   #11 = Methodref          #86.#180      // java/text/MessageFormat.applyPattern:(Ljava/lang/String;)V\n-   #12 = Methodref          #86.#182      // java/text/MessageFormat.toPattern:()Ljava/lang/String;\n-   #13 = Class              #183          // java/util/ArrayList\n-   #14 = Methodref          #13.#184      // java/util/ArrayList.\"<init>\":()V\n-   #15 = Class              #185          // java/lang/StringBuilder\n-   #16 = Methodref          #73.#186      // java/lang/String.length:()I\n-   #17 = Methodref          #15.#187      // java/lang/StringBuilder.\"<init>\":(I)V\n-   #18 = Class              #188          // java/text/ParsePosition\n-   #19 = Methodref          #18.#187      // java/text/ParsePosition.\"<init>\":(I)V\n-   #20 = Methodref          #73.#189      // java/lang/String.toCharArray:()[C\n-   #21 = Methodref          #18.#190      // java/text/ParsePosition.getIndex:()I\n-   #22 = Methodref          #4.#191       // org/apache/commons/lang3/text/ExtendedMessageFormat.appendQuotedString:(Ljava/lang/String;Ljava/text/ParsePosition;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;\n-   #23 = Methodref          #4.#192       // org/apache/commons/lang3/text/ExtendedMessageFormat.seekNonWs:(Ljava/lang/String;Ljava/text/ParsePosition;)V\n-   #24 = Methodref          #4.#193       // org/apache/commons/lang3/text/ExtendedMessageFormat.next:(Ljava/text/ParsePosition;)Ljava/text/ParsePosition;\n-   #25 = Methodref          #4.#194       // org/apache/commons/lang3/text/ExtendedMessageFormat.readArgumentIndex:(Ljava/lang/String;Ljava/text/ParsePosition;)I\n-   #26 = Methodref          #15.#195      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-   #27 = Methodref          #15.#196      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #28 = Methodref          #4.#197       // org/apache/commons/lang3/text/ExtendedMessageFormat.parseFormatDescription:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/String;\n-   #29 = Methodref          #4.#198       // org/apache/commons/lang3/text/ExtendedMessageFormat.getFormat:(Ljava/lang/String;)Ljava/text/Format;\n-   #30 = Methodref          #15.#199      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #31 = Methodref          #13.#200      // java/util/ArrayList.add:(Ljava/lang/Object;)Z\n-   #32 = Methodref          #13.#201      // java/util/ArrayList.size:()I\n-   #33 = Methodref          #202.#203     // org/apache/commons/lang3/Validate.isTrue:(Z)V\n-   #34 = Class              #204          // java/lang/IllegalArgumentException\n-   #35 = Methodref          #15.#184      // java/lang/StringBuilder.\"<init>\":()V\n-   #36 = String             #205          // Unreadable format element at position\n-   #37 = Methodref          #15.#206      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #38 = Methodref          #34.#177      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #39 = Methodref          #4.#207       // org/apache/commons/lang3/text/ExtendedMessageFormat.insertFormats:(Ljava/lang/String;Ljava/util/ArrayList;)Ljava/lang/String;\n-   #40 = Methodref          #4.#208       // org/apache/commons/lang3/text/ExtendedMessageFormat.containsElements:(Ljava/util/Collection;)Z\n-   #41 = Methodref          #4.#209       // org/apache/commons/lang3/text/ExtendedMessageFormat.getFormats:()[Ljava/text/Format;\n-   #42 = Methodref          #13.#210      // java/util/ArrayList.iterator:()Ljava/util/Iterator;\n-   #43 = InterfaceMethodref #211.#212     // java/util/Iterator.hasNext:()Z\n-   #44 = InterfaceMethodref #211.#213     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #45 = Class              #214          // java/text/Format\n-   #46 = Methodref          #86.#215      // java/text/MessageFormat.setFormats:([Ljava/text/Format;)V\n-   #47 = Class              #216          // java/lang/UnsupportedOperationException\n-   #48 = Methodref          #47.#184      // java/lang/UnsupportedOperationException.\"<init>\":()V\n-   #49 = Methodref          #86.#217      // java/text/MessageFormat.equals:(Ljava/lang/Object;)Z\n-   #50 = Methodref          #218.#219     // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #51 = Methodref          #220.#221     // org/apache/commons/lang3/ObjectUtils.notEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #52 = Methodref          #86.#222      // java/text/MessageFormat.hashCode:()I\n-   #53 = Methodref          #223.#224     // java/util/Objects.hashCode:(Ljava/lang/Object;)I\n-   #54 = Methodref          #73.#225      // java/lang/String.indexOf:(I)I\n-   #55 = Methodref          #73.#226      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #56 = Methodref          #73.#227      // java/lang/String.trim:()Ljava/lang/String;\n-   #57 = Methodref          #73.#228      // java/lang/String.substring:(I)Ljava/lang/String;\n-   #58 = InterfaceMethodref #229.#230     // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #59 = Class              #231          // org/apache/commons/lang3/text/FormatFactory\n-   #60 = Methodref          #4.#232       // org/apache/commons/lang3/text/ExtendedMessageFormat.getLocale:()Ljava/util/Locale;\n-   #61 = InterfaceMethodref #59.#233      // org/apache/commons/lang3/text/FormatFactory.getFormat:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;)Ljava/text/Format;\n-   #62 = Methodref          #73.#234      // java/lang/String.charAt:(I)C\n-   #63 = Methodref          #235.#236     // java/lang/Character.isWhitespace:(C)Z\n-   #64 = Methodref          #15.#186      // java/lang/StringBuilder.length:()I\n-   #65 = Methodref          #237.#238     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-   #66 = Class              #239          // java/lang/NumberFormatException\n-   #67 = Methodref          #235.#240     // java/lang/Character.isDigit:(C)Z\n-   #68 = String             #241          // Invalid format argument index at position\n-   #69 = String             #242          // :\n-   #70 = String             #243          // Unterminated format element at position\n-   #71 = Methodref          #4.#244       // org/apache/commons/lang3/text/ExtendedMessageFormat.getQuotedString:(Ljava/lang/String;Ljava/text/ParsePosition;)V\n-   #72 = Methodref          #13.#245      // java/util/ArrayList.get:(I)Ljava/lang/Object;\n-   #73 = Class              #246          // java/lang/String\n-   #74 = Methodref          #247.#248     // org/apache/commons/lang3/text/StrMatcher.splitMatcher:()Lorg/apache/commons/lang3/text/StrMatcher;\n-   #75 = Methodref          #247.#249     // org/apache/commons/lang3/text/StrMatcher.isMatch:([CI)I\n-   #76 = Methodref          #18.#250      // java/text/ParsePosition.setIndex:(I)V\n-   #77 = Fieldref           #4.#251       // org/apache/commons/lang3/text/ExtendedMessageFormat.$assertionsDisabled:Z\n-   #78 = Class              #252          // java/lang/AssertionError\n-   #79 = String             #253          // Quoted string must start with quote character\n-   #80 = Methodref          #78.#254      // java/lang/AssertionError.\"<init>\":(Ljava/lang/Object;)V\n-   #81 = Methodref          #15.#255      // java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;\n-   #82 = String             #256          // Unterminated quoted string at position\n-   #83 = InterfaceMethodref #257.#258     // java/util/Collection.isEmpty:()Z\n-   #84 = InterfaceMethodref #257.#210     // java/util/Collection.iterator:()Ljava/util/Iterator;\n-   #85 = Methodref          #259.#260     // java/lang/Class.desiredAssertionStatus:()Z\n-   #86 = Class              #261          // java/text/MessageFormat\n+    #1 = Methodref          #164.#165     // java/util/Locale.getDefault:()Ljava/util/Locale;\n+    #2 = Methodref          #4.#166       // org/apache/commons/lang3/text/ExtendedMessageFormat.\"<init>\":(Ljava/lang/String;Ljava/util/Locale;)V\n+    #3 = Methodref          #4.#167       // org/apache/commons/lang3/text/ExtendedMessageFormat.\"<init>\":(Ljava/lang/String;Ljava/util/Locale;Ljava/util/Map;)V\n+    #4 = Class              #168          // org/apache/commons/lang3/text/ExtendedMessageFormat\n+    #5 = String             #169          //\n+    #6 = Methodref          #86.#170      // java/text/MessageFormat.\"<init>\":(Ljava/lang/String;)V\n+    #7 = Methodref          #4.#171       // org/apache/commons/lang3/text/ExtendedMessageFormat.setLocale:(Ljava/util/Locale;)V\n+    #8 = Fieldref           #4.#172       // org/apache/commons/lang3/text/ExtendedMessageFormat.registry:Ljava/util/Map;\n+    #9 = Methodref          #4.#173       // org/apache/commons/lang3/text/ExtendedMessageFormat.applyPattern:(Ljava/lang/String;)V\n+   #10 = Fieldref           #4.#174       // org/apache/commons/lang3/text/ExtendedMessageFormat.toPattern:Ljava/lang/String;\n+   #11 = Methodref          #86.#173      // java/text/MessageFormat.applyPattern:(Ljava/lang/String;)V\n+   #12 = Methodref          #86.#175      // java/text/MessageFormat.toPattern:()Ljava/lang/String;\n+   #13 = Class              #176          // java/util/ArrayList\n+   #14 = Methodref          #13.#177      // java/util/ArrayList.\"<init>\":()V\n+   #15 = Class              #178          // java/lang/StringBuilder\n+   #16 = Methodref          #73.#179      // java/lang/String.length:()I\n+   #17 = Methodref          #15.#180      // java/lang/StringBuilder.\"<init>\":(I)V\n+   #18 = Class              #181          // java/text/ParsePosition\n+   #19 = Methodref          #18.#180      // java/text/ParsePosition.\"<init>\":(I)V\n+   #20 = Methodref          #73.#182      // java/lang/String.toCharArray:()[C\n+   #21 = Methodref          #18.#183      // java/text/ParsePosition.getIndex:()I\n+   #22 = Methodref          #4.#184       // org/apache/commons/lang3/text/ExtendedMessageFormat.appendQuotedString:(Ljava/lang/String;Ljava/text/ParsePosition;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;\n+   #23 = Methodref          #4.#185       // org/apache/commons/lang3/text/ExtendedMessageFormat.seekNonWs:(Ljava/lang/String;Ljava/text/ParsePosition;)V\n+   #24 = Methodref          #4.#186       // org/apache/commons/lang3/text/ExtendedMessageFormat.next:(Ljava/text/ParsePosition;)Ljava/text/ParsePosition;\n+   #25 = Methodref          #4.#187       // org/apache/commons/lang3/text/ExtendedMessageFormat.readArgumentIndex:(Ljava/lang/String;Ljava/text/ParsePosition;)I\n+   #26 = Methodref          #15.#188      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+   #27 = Methodref          #15.#189      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #28 = Methodref          #4.#190       // org/apache/commons/lang3/text/ExtendedMessageFormat.parseFormatDescription:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/String;\n+   #29 = Methodref          #4.#191       // org/apache/commons/lang3/text/ExtendedMessageFormat.getFormat:(Ljava/lang/String;)Ljava/text/Format;\n+   #30 = Methodref          #15.#192      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #31 = Methodref          #13.#193      // java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+   #32 = Methodref          #13.#194      // java/util/ArrayList.size:()I\n+   #33 = Methodref          #195.#196     // org/apache/commons/lang3/Validate.isTrue:(Z)V\n+   #34 = Class              #197          // java/lang/IllegalArgumentException\n+   #35 = Methodref          #15.#177      // java/lang/StringBuilder.\"<init>\":()V\n+   #36 = String             #198          // Unreadable format element at position\n+   #37 = Methodref          #15.#199      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #38 = Methodref          #34.#170      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #39 = Methodref          #4.#200       // org/apache/commons/lang3/text/ExtendedMessageFormat.insertFormats:(Ljava/lang/String;Ljava/util/ArrayList;)Ljava/lang/String;\n+   #40 = Methodref          #4.#201       // org/apache/commons/lang3/text/ExtendedMessageFormat.containsElements:(Ljava/util/Collection;)Z\n+   #41 = Methodref          #4.#202       // org/apache/commons/lang3/text/ExtendedMessageFormat.getFormats:()[Ljava/text/Format;\n+   #42 = Methodref          #13.#203      // java/util/ArrayList.iterator:()Ljava/util/Iterator;\n+   #43 = InterfaceMethodref #127.#204     // java/util/Iterator.hasNext:()Z\n+   #44 = InterfaceMethodref #127.#205     // java/util/Iterator.next:()Ljava/lang/Object;\n+   #45 = Class              #206          // java/text/Format\n+   #46 = Methodref          #86.#207      // java/text/MessageFormat.setFormats:([Ljava/text/Format;)V\n+   #47 = Class              #208          // java/lang/UnsupportedOperationException\n+   #48 = Methodref          #47.#177      // java/lang/UnsupportedOperationException.\"<init>\":()V\n+   #49 = Methodref          #86.#209      // java/text/MessageFormat.equals:(Ljava/lang/Object;)Z\n+   #50 = Methodref          #210.#211     // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #51 = Methodref          #212.#213     // org/apache/commons/lang3/ObjectUtils.notEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #52 = Methodref          #86.#214      // java/text/MessageFormat.hashCode:()I\n+   #53 = Methodref          #215.#216     // java/util/Objects.hashCode:(Ljava/lang/Object;)I\n+   #54 = Methodref          #73.#217      // java/lang/String.indexOf:(I)I\n+   #55 = Methodref          #73.#218      // java/lang/String.substring:(II)Ljava/lang/String;\n+   #56 = Methodref          #73.#219      // java/lang/String.trim:()Ljava/lang/String;\n+   #57 = Methodref          #73.#220      // java/lang/String.substring:(I)Ljava/lang/String;\n+   #58 = InterfaceMethodref #221.#222     // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #59 = Class              #223          // org/apache/commons/lang3/text/FormatFactory\n+   #60 = Methodref          #4.#224       // org/apache/commons/lang3/text/ExtendedMessageFormat.getLocale:()Ljava/util/Locale;\n+   #61 = InterfaceMethodref #59.#225      // org/apache/commons/lang3/text/FormatFactory.getFormat:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;)Ljava/text/Format;\n+   #62 = Methodref          #73.#226      // java/lang/String.charAt:(I)C\n+   #63 = Methodref          #227.#228     // java/lang/Character.isWhitespace:(C)Z\n+   #64 = Methodref          #15.#179      // java/lang/StringBuilder.length:()I\n+   #65 = Methodref          #229.#230     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+   #66 = Class              #231          // java/lang/NumberFormatException\n+   #67 = Methodref          #227.#232     // java/lang/Character.isDigit:(C)Z\n+   #68 = String             #233          // Invalid format argument index at position\n+   #69 = String             #234          // :\n+   #70 = String             #235          // Unterminated format element at position\n+   #71 = Methodref          #4.#236       // org/apache/commons/lang3/text/ExtendedMessageFormat.getQuotedString:(Ljava/lang/String;Ljava/text/ParsePosition;)V\n+   #72 = Methodref          #13.#237      // java/util/ArrayList.get:(I)Ljava/lang/Object;\n+   #73 = Class              #238          // java/lang/String\n+   #74 = Methodref          #239.#240     // org/apache/commons/lang3/text/StrMatcher.splitMatcher:()Lorg/apache/commons/lang3/text/StrMatcher;\n+   #75 = Methodref          #239.#241     // org/apache/commons/lang3/text/StrMatcher.isMatch:([CI)I\n+   #76 = Methodref          #18.#242      // java/text/ParsePosition.setIndex:(I)V\n+   #77 = Fieldref           #4.#243       // org/apache/commons/lang3/text/ExtendedMessageFormat.$assertionsDisabled:Z\n+   #78 = Class              #244          // java/lang/AssertionError\n+   #79 = String             #245          // Quoted string must start with quote character\n+   #80 = Methodref          #78.#246      // java/lang/AssertionError.\"<init>\":(Ljava/lang/Object;)V\n+   #81 = Methodref          #15.#247      // java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;\n+   #82 = String             #248          // Unterminated quoted string at position\n+   #83 = InterfaceMethodref #249.#250     // java/util/Collection.isEmpty:()Z\n+   #84 = InterfaceMethodref #249.#203     // java/util/Collection.iterator:()Ljava/util/Iterator;\n+   #85 = Methodref          #251.#252     // java/lang/Class.desiredAssertionStatus:()Z\n+   #86 = Class              #253          // java/text/MessageFormat\n    #87 = Utf8               serialVersionUID\n    #88 = Utf8               J\n    #89 = Utf8               ConstantValue\n    #90 = Long               -2362048321261811743l\n    #92 = Utf8               HASH_SEED\n    #93 = Utf8               I\n    #94 = Integer            31\n@@ -127,222 +127,214 @@\n   #118 = Utf8               (Ljava/lang/String;Ljava/util/Map;)V\n   #119 = Utf8               (Ljava/lang/String;Ljava/util/Map<Ljava/lang/String;+Lorg/apache/commons/lang3/text/FormatFactory;>;)V\n   #120 = Utf8               (Ljava/lang/String;Ljava/util/Locale;Ljava/util/Map;)V\n   #121 = Utf8               (Ljava/lang/String;Ljava/util/Locale;Ljava/util/Map<Ljava/lang/String;+Lorg/apache/commons/lang3/text/FormatFactory;>;)V\n   #122 = Utf8               ()Ljava/lang/String;\n   #123 = Utf8               applyPattern\n   #124 = Utf8               StackMapTable\n-  #125 = Class              #175          // org/apache/commons/lang3/text/ExtendedMessageFormat\n-  #126 = Class              #246          // java/lang/String\n-  #127 = Class              #183          // java/util/ArrayList\n-  #128 = Class              #185          // java/lang/StringBuilder\n-  #129 = Class              #188          // java/text/ParsePosition\n-  #130 = Class              #262          // \"[C\"\n-  #131 = Class              #214          // java/text/Format\n-  #132 = Class              #263          // \"[Ljava/text/Format;\"\n-  #133 = Class              #264          // java/util/Iterator\n-  #134 = Utf8               setFormat\n-  #135 = Utf8               (ILjava/text/Format;)V\n-  #136 = Utf8               setFormatByArgumentIndex\n-  #137 = Utf8               setFormats\n-  #138 = Utf8               ([Ljava/text/Format;)V\n-  #139 = Utf8               setFormatsByArgumentIndex\n-  #140 = Utf8               equals\n-  #141 = Utf8               (Ljava/lang/Object;)Z\n-  #142 = Utf8               hashCode\n-  #143 = Utf8               ()I\n-  #144 = Utf8               getFormat\n-  #145 = Utf8               (Ljava/lang/String;)Ljava/text/Format;\n-  #146 = Utf8               readArgumentIndex\n-  #147 = Utf8               (Ljava/lang/String;Ljava/text/ParsePosition;)I\n-  #148 = Class              #239          // java/lang/NumberFormatException\n-  #149 = Utf8               parseFormatDescription\n-  #150 = Utf8               (Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/String;\n-  #151 = Utf8               insertFormats\n-  #152 = Utf8               (Ljava/lang/String;Ljava/util/ArrayList;)Ljava/lang/String;\n-  #153 = Utf8               (Ljava/lang/String;Ljava/util/ArrayList<Ljava/lang/String;>;)Ljava/lang/String;\n-  #154 = Utf8               seekNonWs\n-  #155 = Utf8               (Ljava/lang/String;Ljava/text/ParsePosition;)V\n-  #156 = Utf8               next\n-  #157 = Utf8               (Ljava/text/ParsePosition;)Ljava/text/ParsePosition;\n-  #158 = Utf8               appendQuotedString\n-  #159 = Utf8               (Ljava/lang/String;Ljava/text/ParsePosition;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;\n-  #160 = Utf8               getQuotedString\n-  #161 = Utf8               containsElements\n-  #162 = Utf8               (Ljava/util/Collection;)Z\n-  #163 = Utf8               (Ljava/util/Collection<*>;)Z\n-  #164 = Utf8               <clinit>\n-  #165 = Utf8               ()V\n-  #166 = Utf8               SourceFile\n-  #167 = Utf8               ExtendedMessageFormat.java\n-  #168 = Utf8               Deprecated\n-  #169 = Utf8               RuntimeVisibleAnnotations\n-  #170 = Utf8               Ljava/lang/Deprecated;\n-  #171 = Class              #265          // java/util/Locale\n-  #172 = NameAndType        #266:#267     // getDefault:()Ljava/util/Locale;\n-  #173 = NameAndType        #113:#117     // \"<init>\":(Ljava/lang/String;Ljava/util/Locale;)V\n-  #174 = NameAndType        #113:#120     // \"<init>\":(Ljava/lang/String;Ljava/util/Locale;Ljava/util/Map;)V\n-  #175 = Utf8               org/apache/commons/lang3/text/ExtendedMessageFormat\n-  #176 = Utf8\n-  #177 = NameAndType        #113:#114     // \"<init>\":(Ljava/lang/String;)V\n-  #178 = NameAndType        #268:#269     // setLocale:(Ljava/util/Locale;)V\n-  #179 = NameAndType        #107:#108     // registry:Ljava/util/Map;\n-  #180 = NameAndType        #123:#114     // applyPattern:(Ljava/lang/String;)V\n-  #181 = NameAndType        #106:#96      // toPattern:Ljava/lang/String;\n-  #182 = NameAndType        #106:#122     // toPattern:()Ljava/lang/String;\n-  #183 = Utf8               java/util/ArrayList\n-  #184 = NameAndType        #113:#165     // \"<init>\":()V\n-  #185 = Utf8               java/lang/StringBuilder\n-  #186 = NameAndType        #270:#143     // length:()I\n-  #187 = NameAndType        #113:#271     // \"<init>\":(I)V\n-  #188 = Utf8               java/text/ParsePosition\n-  #189 = NameAndType        #272:#273     // toCharArray:()[C\n-  #190 = NameAndType        #274:#143     // getIndex:()I\n-  #191 = NameAndType        #158:#159     // appendQuotedString:(Ljava/lang/String;Ljava/text/ParsePosition;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;\n-  #192 = NameAndType        #154:#155     // seekNonWs:(Ljava/lang/String;Ljava/text/ParsePosition;)V\n-  #193 = NameAndType        #156:#157     // next:(Ljava/text/ParsePosition;)Ljava/text/ParsePosition;\n-  #194 = NameAndType        #146:#147     // readArgumentIndex:(Ljava/lang/String;Ljava/text/ParsePosition;)I\n-  #195 = NameAndType        #275:#276     // append:(C)Ljava/lang/StringBuilder;\n-  #196 = NameAndType        #275:#277     // append:(I)Ljava/lang/StringBuilder;\n-  #197 = NameAndType        #149:#150     // parseFormatDescription:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/String;\n-  #198 = NameAndType        #144:#145     // getFormat:(Ljava/lang/String;)Ljava/text/Format;\n-  #199 = NameAndType        #275:#278     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #200 = NameAndType        #279:#141     // add:(Ljava/lang/Object;)Z\n-  #201 = NameAndType        #280:#143     // size:()I\n-  #202 = Class              #281          // org/apache/commons/lang3/Validate\n-  #203 = NameAndType        #282:#283     // isTrue:(Z)V\n-  #204 = Utf8               java/lang/IllegalArgumentException\n-  #205 = Utf8               Unreadable format element at position\n-  #206 = NameAndType        #284:#122     // toString:()Ljava/lang/String;\n-  #207 = NameAndType        #151:#152     // insertFormats:(Ljava/lang/String;Ljava/util/ArrayList;)Ljava/lang/String;\n-  #208 = NameAndType        #161:#162     // containsElements:(Ljava/util/Collection;)Z\n-  #209 = NameAndType        #285:#286     // getFormats:()[Ljava/text/Format;\n-  #210 = NameAndType        #287:#288     // iterator:()Ljava/util/Iterator;\n-  #211 = Class              #264          // java/util/Iterator\n-  #212 = NameAndType        #289:#290     // hasNext:()Z\n-  #213 = NameAndType        #156:#291     // next:()Ljava/lang/Object;\n-  #214 = Utf8               java/text/Format\n-  #215 = NameAndType        #137:#138     // setFormats:([Ljava/text/Format;)V\n-  #216 = Utf8               java/lang/UnsupportedOperationException\n-  #217 = NameAndType        #140:#141     // equals:(Ljava/lang/Object;)Z\n-  #218 = Class              #292          // java/lang/Object\n-  #219 = NameAndType        #293:#294     // getClass:()Ljava/lang/Class;\n-  #220 = Class              #295          // org/apache/commons/lang3/ObjectUtils\n-  #221 = NameAndType        #296:#297     // notEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #222 = NameAndType        #142:#143     // hashCode:()I\n-  #223 = Class              #298          // java/util/Objects\n-  #224 = NameAndType        #142:#299     // hashCode:(Ljava/lang/Object;)I\n-  #225 = NameAndType        #300:#301     // indexOf:(I)I\n-  #226 = NameAndType        #302:#303     // substring:(II)Ljava/lang/String;\n-  #227 = NameAndType        #304:#122     // trim:()Ljava/lang/String;\n-  #228 = NameAndType        #302:#305     // substring:(I)Ljava/lang/String;\n-  #229 = Class              #306          // java/util/Map\n-  #230 = NameAndType        #307:#308     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #231 = Utf8               org/apache/commons/lang3/text/FormatFactory\n-  #232 = NameAndType        #309:#267     // getLocale:()Ljava/util/Locale;\n-  #233 = NameAndType        #144:#310     // getFormat:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;)Ljava/text/Format;\n-  #234 = NameAndType        #311:#312     // charAt:(I)C\n-  #235 = Class              #313          // java/lang/Character\n-  #236 = NameAndType        #314:#315     // isWhitespace:(C)Z\n-  #237 = Class              #316          // java/lang/Integer\n-  #238 = NameAndType        #317:#318     // parseInt:(Ljava/lang/String;)I\n-  #239 = Utf8               java/lang/NumberFormatException\n-  #240 = NameAndType        #319:#315     // isDigit:(C)Z\n-  #241 = Utf8               Invalid format argument index at position\n-  #242 = Utf8               :\n-  #243 = Utf8               Unterminated format element at position\n-  #244 = NameAndType        #160:#155     // getQuotedString:(Ljava/lang/String;Ljava/text/ParsePosition;)V\n-  #245 = NameAndType        #307:#320     // get:(I)Ljava/lang/Object;\n-  #246 = Utf8               java/lang/String\n-  #247 = Class              #321          // org/apache/commons/lang3/text/StrMatcher\n-  #248 = NameAndType        #322:#323     // splitMatcher:()Lorg/apache/commons/lang3/text/StrMatcher;\n-  #249 = NameAndType        #324:#325     // isMatch:([CI)I\n-  #250 = NameAndType        #326:#271     // setIndex:(I)V\n-  #251 = NameAndType        #111:#112     // $assertionsDisabled:Z\n-  #252 = Utf8               java/lang/AssertionError\n-  #253 = Utf8               Quoted string must start with quote character\n-  #254 = NameAndType        #113:#327     // \"<init>\":(Ljava/lang/Object;)V\n-  #255 = NameAndType        #275:#328     // append:([CII)Ljava/lang/StringBuilder;\n-  #256 = Utf8               Unterminated quoted string at position\n-  #257 = Class              #329          // java/util/Collection\n-  #258 = NameAndType        #330:#290     // isEmpty:()Z\n-  #259 = Class              #331          // java/lang/Class\n-  #260 = NameAndType        #332:#290     // desiredAssertionStatus:()Z\n-  #261 = Utf8               java/text/MessageFormat\n-  #262 = Utf8               [C\n-  #263 = Utf8               [Ljava/text/Format;\n-  #264 = Utf8               java/util/Iterator\n-  #265 = Utf8               java/util/Locale\n-  #266 = Utf8               getDefault\n-  #267 = Utf8               ()Ljava/util/Locale;\n-  #268 = Utf8               setLocale\n-  #269 = Utf8               (Ljava/util/Locale;)V\n-  #270 = Utf8               length\n-  #271 = Utf8               (I)V\n-  #272 = Utf8               toCharArray\n-  #273 = Utf8               ()[C\n-  #274 = Utf8               getIndex\n-  #275 = Utf8               append\n-  #276 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #277 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #278 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #279 = Utf8               add\n-  #280 = Utf8               size\n-  #281 = Utf8               org/apache/commons/lang3/Validate\n-  #282 = Utf8               isTrue\n-  #283 = Utf8               (Z)V\n-  #284 = Utf8               toString\n-  #285 = Utf8               getFormats\n-  #286 = Utf8               ()[Ljava/text/Format;\n-  #287 = Utf8               iterator\n-  #288 = Utf8               ()Ljava/util/Iterator;\n-  #289 = Utf8               hasNext\n-  #290 = Utf8               ()Z\n-  #291 = Utf8               ()Ljava/lang/Object;\n-  #292 = Utf8               java/lang/Object\n-  #293 = Utf8               getClass\n-  #294 = Utf8               ()Ljava/lang/Class;\n-  #295 = Utf8               org/apache/commons/lang3/ObjectUtils\n-  #296 = Utf8               notEqual\n-  #297 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #298 = Utf8               java/util/Objects\n-  #299 = Utf8               (Ljava/lang/Object;)I\n-  #300 = Utf8               indexOf\n-  #301 = Utf8               (I)I\n-  #302 = Utf8               substring\n-  #303 = Utf8               (II)Ljava/lang/String;\n-  #304 = Utf8               trim\n-  #305 = Utf8               (I)Ljava/lang/String;\n-  #306 = Utf8               java/util/Map\n-  #307 = Utf8               get\n-  #308 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #309 = Utf8               getLocale\n-  #310 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;)Ljava/text/Format;\n-  #311 = Utf8               charAt\n-  #312 = Utf8               (I)C\n-  #313 = Utf8               java/lang/Character\n-  #314 = Utf8               isWhitespace\n-  #315 = Utf8               (C)Z\n-  #316 = Utf8               java/lang/Integer\n-  #317 = Utf8               parseInt\n-  #318 = Utf8               (Ljava/lang/String;)I\n-  #319 = Utf8               isDigit\n-  #320 = Utf8               (I)Ljava/lang/Object;\n-  #321 = Utf8               org/apache/commons/lang3/text/StrMatcher\n-  #322 = Utf8               splitMatcher\n-  #323 = Utf8               ()Lorg/apache/commons/lang3/text/StrMatcher;\n-  #324 = Utf8               isMatch\n-  #325 = Utf8               ([CI)I\n-  #326 = Utf8               setIndex\n-  #327 = Utf8               (Ljava/lang/Object;)V\n-  #328 = Utf8               ([CII)Ljava/lang/StringBuilder;\n-  #329 = Utf8               java/util/Collection\n-  #330 = Utf8               isEmpty\n-  #331 = Utf8               java/lang/Class\n-  #332 = Utf8               desiredAssertionStatus\n+  #125 = Class              #254          // \"[C\"\n+  #126 = Class              #255          // \"[Ljava/text/Format;\"\n+  #127 = Class              #256          // java/util/Iterator\n+  #128 = Utf8               setFormat\n+  #129 = Utf8               (ILjava/text/Format;)V\n+  #130 = Utf8               setFormatByArgumentIndex\n+  #131 = Utf8               setFormats\n+  #132 = Utf8               ([Ljava/text/Format;)V\n+  #133 = Utf8               setFormatsByArgumentIndex\n+  #134 = Utf8               equals\n+  #135 = Utf8               (Ljava/lang/Object;)Z\n+  #136 = Utf8               hashCode\n+  #137 = Utf8               ()I\n+  #138 = Utf8               getFormat\n+  #139 = Utf8               (Ljava/lang/String;)Ljava/text/Format;\n+  #140 = Utf8               readArgumentIndex\n+  #141 = Utf8               (Ljava/lang/String;Ljava/text/ParsePosition;)I\n+  #142 = Utf8               parseFormatDescription\n+  #143 = Utf8               (Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/String;\n+  #144 = Utf8               insertFormats\n+  #145 = Utf8               (Ljava/lang/String;Ljava/util/ArrayList;)Ljava/lang/String;\n+  #146 = Utf8               (Ljava/lang/String;Ljava/util/ArrayList<Ljava/lang/String;>;)Ljava/lang/String;\n+  #147 = Utf8               seekNonWs\n+  #148 = Utf8               (Ljava/lang/String;Ljava/text/ParsePosition;)V\n+  #149 = Utf8               next\n+  #150 = Utf8               (Ljava/text/ParsePosition;)Ljava/text/ParsePosition;\n+  #151 = Utf8               appendQuotedString\n+  #152 = Utf8               (Ljava/lang/String;Ljava/text/ParsePosition;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;\n+  #153 = Utf8               getQuotedString\n+  #154 = Utf8               containsElements\n+  #155 = Utf8               (Ljava/util/Collection;)Z\n+  #156 = Utf8               (Ljava/util/Collection<*>;)Z\n+  #157 = Utf8               <clinit>\n+  #158 = Utf8               ()V\n+  #159 = Utf8               SourceFile\n+  #160 = Utf8               ExtendedMessageFormat.java\n+  #161 = Utf8               Deprecated\n+  #162 = Utf8               RuntimeVisibleAnnotations\n+  #163 = Utf8               Ljava/lang/Deprecated;\n+  #164 = Class              #257          // java/util/Locale\n+  #165 = NameAndType        #258:#259     // getDefault:()Ljava/util/Locale;\n+  #166 = NameAndType        #113:#117     // \"<init>\":(Ljava/lang/String;Ljava/util/Locale;)V\n+  #167 = NameAndType        #113:#120     // \"<init>\":(Ljava/lang/String;Ljava/util/Locale;Ljava/util/Map;)V\n+  #168 = Utf8               org/apache/commons/lang3/text/ExtendedMessageFormat\n+  #169 = Utf8\n+  #170 = NameAndType        #113:#114     // \"<init>\":(Ljava/lang/String;)V\n+  #171 = NameAndType        #260:#261     // setLocale:(Ljava/util/Locale;)V\n+  #172 = NameAndType        #107:#108     // registry:Ljava/util/Map;\n+  #173 = NameAndType        #123:#114     // applyPattern:(Ljava/lang/String;)V\n+  #174 = NameAndType        #106:#96      // toPattern:Ljava/lang/String;\n+  #175 = NameAndType        #106:#122     // toPattern:()Ljava/lang/String;\n+  #176 = Utf8               java/util/ArrayList\n+  #177 = NameAndType        #113:#158     // \"<init>\":()V\n+  #178 = Utf8               java/lang/StringBuilder\n+  #179 = NameAndType        #262:#137     // length:()I\n+  #180 = NameAndType        #113:#263     // \"<init>\":(I)V\n+  #181 = Utf8               java/text/ParsePosition\n+  #182 = NameAndType        #264:#265     // toCharArray:()[C\n+  #183 = NameAndType        #266:#137     // getIndex:()I\n+  #184 = NameAndType        #151:#152     // appendQuotedString:(Ljava/lang/String;Ljava/text/ParsePosition;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;\n+  #185 = NameAndType        #147:#148     // seekNonWs:(Ljava/lang/String;Ljava/text/ParsePosition;)V\n+  #186 = NameAndType        #149:#150     // next:(Ljava/text/ParsePosition;)Ljava/text/ParsePosition;\n+  #187 = NameAndType        #140:#141     // readArgumentIndex:(Ljava/lang/String;Ljava/text/ParsePosition;)I\n+  #188 = NameAndType        #267:#268     // append:(C)Ljava/lang/StringBuilder;\n+  #189 = NameAndType        #267:#269     // append:(I)Ljava/lang/StringBuilder;\n+  #190 = NameAndType        #142:#143     // parseFormatDescription:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/String;\n+  #191 = NameAndType        #138:#139     // getFormat:(Ljava/lang/String;)Ljava/text/Format;\n+  #192 = NameAndType        #267:#270     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #193 = NameAndType        #271:#135     // add:(Ljava/lang/Object;)Z\n+  #194 = NameAndType        #272:#137     // size:()I\n+  #195 = Class              #273          // org/apache/commons/lang3/Validate\n+  #196 = NameAndType        #274:#275     // isTrue:(Z)V\n+  #197 = Utf8               java/lang/IllegalArgumentException\n+  #198 = Utf8               Unreadable format element at position\n+  #199 = NameAndType        #276:#122     // toString:()Ljava/lang/String;\n+  #200 = NameAndType        #144:#145     // insertFormats:(Ljava/lang/String;Ljava/util/ArrayList;)Ljava/lang/String;\n+  #201 = NameAndType        #154:#155     // containsElements:(Ljava/util/Collection;)Z\n+  #202 = NameAndType        #277:#278     // getFormats:()[Ljava/text/Format;\n+  #203 = NameAndType        #279:#280     // iterator:()Ljava/util/Iterator;\n+  #204 = NameAndType        #281:#282     // hasNext:()Z\n+  #205 = NameAndType        #149:#283     // next:()Ljava/lang/Object;\n+  #206 = Utf8               java/text/Format\n+  #207 = NameAndType        #131:#132     // setFormats:([Ljava/text/Format;)V\n+  #208 = Utf8               java/lang/UnsupportedOperationException\n+  #209 = NameAndType        #134:#135     // equals:(Ljava/lang/Object;)Z\n+  #210 = Class              #284          // java/lang/Object\n+  #211 = NameAndType        #285:#286     // getClass:()Ljava/lang/Class;\n+  #212 = Class              #287          // org/apache/commons/lang3/ObjectUtils\n+  #213 = NameAndType        #288:#289     // notEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #214 = NameAndType        #136:#137     // hashCode:()I\n+  #215 = Class              #290          // java/util/Objects\n+  #216 = NameAndType        #136:#291     // hashCode:(Ljava/lang/Object;)I\n+  #217 = NameAndType        #292:#293     // indexOf:(I)I\n+  #218 = NameAndType        #294:#295     // substring:(II)Ljava/lang/String;\n+  #219 = NameAndType        #296:#122     // trim:()Ljava/lang/String;\n+  #220 = NameAndType        #294:#297     // substring:(I)Ljava/lang/String;\n+  #221 = Class              #298          // java/util/Map\n+  #222 = NameAndType        #299:#300     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #223 = Utf8               org/apache/commons/lang3/text/FormatFactory\n+  #224 = NameAndType        #301:#259     // getLocale:()Ljava/util/Locale;\n+  #225 = NameAndType        #138:#302     // getFormat:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;)Ljava/text/Format;\n+  #226 = NameAndType        #303:#304     // charAt:(I)C\n+  #227 = Class              #305          // java/lang/Character\n+  #228 = NameAndType        #306:#307     // isWhitespace:(C)Z\n+  #229 = Class              #308          // java/lang/Integer\n+  #230 = NameAndType        #309:#310     // parseInt:(Ljava/lang/String;)I\n+  #231 = Utf8               java/lang/NumberFormatException\n+  #232 = NameAndType        #311:#307     // isDigit:(C)Z\n+  #233 = Utf8               Invalid format argument index at position\n+  #234 = Utf8               :\n+  #235 = Utf8               Unterminated format element at position\n+  #236 = NameAndType        #153:#148     // getQuotedString:(Ljava/lang/String;Ljava/text/ParsePosition;)V\n+  #237 = NameAndType        #299:#312     // get:(I)Ljava/lang/Object;\n+  #238 = Utf8               java/lang/String\n+  #239 = Class              #313          // org/apache/commons/lang3/text/StrMatcher\n+  #240 = NameAndType        #314:#315     // splitMatcher:()Lorg/apache/commons/lang3/text/StrMatcher;\n+  #241 = NameAndType        #316:#317     // isMatch:([CI)I\n+  #242 = NameAndType        #318:#263     // setIndex:(I)V\n+  #243 = NameAndType        #111:#112     // $assertionsDisabled:Z\n+  #244 = Utf8               java/lang/AssertionError\n+  #245 = Utf8               Quoted string must start with quote character\n+  #246 = NameAndType        #113:#319     // \"<init>\":(Ljava/lang/Object;)V\n+  #247 = NameAndType        #267:#320     // append:([CII)Ljava/lang/StringBuilder;\n+  #248 = Utf8               Unterminated quoted string at position\n+  #249 = Class              #321          // java/util/Collection\n+  #250 = NameAndType        #322:#282     // isEmpty:()Z\n+  #251 = Class              #323          // java/lang/Class\n+  #252 = NameAndType        #324:#282     // desiredAssertionStatus:()Z\n+  #253 = Utf8               java/text/MessageFormat\n+  #254 = Utf8               [C\n+  #255 = Utf8               [Ljava/text/Format;\n+  #256 = Utf8               java/util/Iterator\n+  #257 = Utf8               java/util/Locale\n+  #258 = Utf8               getDefault\n+  #259 = Utf8               ()Ljava/util/Locale;\n+  #260 = Utf8               setLocale\n+  #261 = Utf8               (Ljava/util/Locale;)V\n+  #262 = Utf8               length\n+  #263 = Utf8               (I)V\n+  #264 = Utf8               toCharArray\n+  #265 = Utf8               ()[C\n+  #266 = Utf8               getIndex\n+  #267 = Utf8               append\n+  #268 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #269 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #270 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #271 = Utf8               add\n+  #272 = Utf8               size\n+  #273 = Utf8               org/apache/commons/lang3/Validate\n+  #274 = Utf8               isTrue\n+  #275 = Utf8               (Z)V\n+  #276 = Utf8               toString\n+  #277 = Utf8               getFormats\n+  #278 = Utf8               ()[Ljava/text/Format;\n+  #279 = Utf8               iterator\n+  #280 = Utf8               ()Ljava/util/Iterator;\n+  #281 = Utf8               hasNext\n+  #282 = Utf8               ()Z\n+  #283 = Utf8               ()Ljava/lang/Object;\n+  #284 = Utf8               java/lang/Object\n+  #285 = Utf8               getClass\n+  #286 = Utf8               ()Ljava/lang/Class;\n+  #287 = Utf8               org/apache/commons/lang3/ObjectUtils\n+  #288 = Utf8               notEqual\n+  #289 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #290 = Utf8               java/util/Objects\n+  #291 = Utf8               (Ljava/lang/Object;)I\n+  #292 = Utf8               indexOf\n+  #293 = Utf8               (I)I\n+  #294 = Utf8               substring\n+  #295 = Utf8               (II)Ljava/lang/String;\n+  #296 = Utf8               trim\n+  #297 = Utf8               (I)Ljava/lang/String;\n+  #298 = Utf8               java/util/Map\n+  #299 = Utf8               get\n+  #300 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #301 = Utf8               getLocale\n+  #302 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;)Ljava/text/Format;\n+  #303 = Utf8               charAt\n+  #304 = Utf8               (I)C\n+  #305 = Utf8               java/lang/Character\n+  #306 = Utf8               isWhitespace\n+  #307 = Utf8               (C)Z\n+  #308 = Utf8               java/lang/Integer\n+  #309 = Utf8               parseInt\n+  #310 = Utf8               (Ljava/lang/String;)I\n+  #311 = Utf8               isDigit\n+  #312 = Utf8               (I)Ljava/lang/Object;\n+  #313 = Utf8               org/apache/commons/lang3/text/StrMatcher\n+  #314 = Utf8               splitMatcher\n+  #315 = Utf8               ()Lorg/apache/commons/lang3/text/StrMatcher;\n+  #316 = Utf8               isMatch\n+  #317 = Utf8               ([CI)I\n+  #318 = Utf8               setIndex\n+  #319 = Utf8               (Ljava/lang/Object;)V\n+  #320 = Utf8               ([CII)Ljava/lang/StringBuilder;\n+  #321 = Utf8               java/util/Collection\n+  #322 = Utf8               isEmpty\n+  #323 = Utf8               java/lang/Class\n+  #324 = Utf8               desiredAssertionStatus\n {\n   private static final long serialVersionUID = -2362048321261811743l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long -2362048321261811743l\n \n   private static final int HASH_SEED = 31;\n@@ -1377,15 +1369,15 @@\n         frame_type = 11 /* same */\n         frame_type = 60 /* same */\n         frame_type = 2 /* same */\n         frame_type = 2 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 13\n         frame_type = 2 /* same */\n-    Signature: #153                         // (Ljava/lang/String;Ljava/util/ArrayList<Ljava/lang/String;>;)Ljava/lang/String;\n+    Signature: #146                         // (Ljava/lang/String;Ljava/util/ArrayList<Ljava/lang/String;>;)Ljava/lang/String;\n \n   private void seekNonWs(java.lang.String, java.text.ParsePosition);\n     descriptor: (Ljava/lang/String;Ljava/text/ParsePosition;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=5, args_size=3\n          0: iconst_0\n@@ -1619,15 +1611,15 @@\n         frame_type = 1 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 6\n           locals = [ class java/util/Iterator ]\n         frame_type = 21 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 2\n-    Signature: #163                         // (Ljava/util/Collection<*>;)Z\n+    Signature: #156                         // (Ljava/util/Collection<*>;)Z\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: ldc           #4                  // class org/apache/commons/lang3/text/ExtendedMessageFormat\n@@ -1644,9 +1636,9 @@\n         frame_type = 12 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n }\n SourceFile: \"ExtendedMessageFormat.java\"\n Deprecated: true\n RuntimeVisibleAnnotations:\n-  0: #170()\n+  0: #163()\n     java.lang.Deprecated\n"}]}
