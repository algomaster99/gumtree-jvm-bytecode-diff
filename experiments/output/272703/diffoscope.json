{"diffoscope-json-version": 1, "source1": "first/ElseHandler.class", "source2": "second/ElseHandler.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -2,29 +2,25 @@\n package com.puppycrawl.tools.checkstyle.checks.indentation;\n \n import com.puppycrawl.tools.checkstyle.utils.TokenUtil;\n import com.puppycrawl.tools.checkstyle.api.DetailAST;\n \n public class ElseHandler extends BlockParentHandler\n {\n-    public ElseHandler(final IndentationCheck indentCheck, final DetailAST ast, final AbstractExpressionHandler parent) {\n-        super(indentCheck, \"else\", ast, parent);\n+    public ElseHandler(final IndentationCheck indentationCheck, final DetailAST detailAST, final AbstractExpressionHandler abstractExpressionHandler) {\n+        super(indentationCheck, \"else\", detailAST, abstractExpressionHandler);\n     }\n     \n     protected void checkTopLevelToken() {\n-        final DetailAST ifAST = this.getMainAst().getParent();\n-        final DetailAST slist = ifAST.findFirstToken(7);\n-        if (slist == null) {\n+        final DetailAST firstToken = this.getMainAst().getParent().findFirstToken(7);\n+        if (firstToken == null) {\n             super.checkTopLevelToken();\n         }\n-        else {\n-            final DetailAST lcurly = slist.getLastChild();\n-            if (!TokenUtil.areOnSameLine(lcurly, this.getMainAst())) {\n-                super.checkTopLevelToken();\n-            }\n+        else if (!TokenUtil.areOnSameLine(firstToken.getLastChild(), this.getMainAst())) {\n+            super.checkTopLevelToken();\n         }\n     }\n     \n     protected DetailAST getNonListChild() {\n         return this.getMainAst().getFirstChild();\n     }\n }\n"}]}
