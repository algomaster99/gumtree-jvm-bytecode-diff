{"diffoscope-json-version": 1, "source1": "first/BooleanUtils.class", "source2": "second/BooleanUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,69 +1,69 @@\n-  SHA-256 checksum f6f8fe378dcec0e159c053e17d77f2397ed2bf6c3232807c72b167a4ee8b6926\n+  SHA-256 checksum d2ebceaa2b02d3aa03b1ee1d19ab92512c92f7fc02224ce696505cd597a6ce06\n   Compiled from \"BooleanUtils.java\"\n public class org.apache.commons.lang3.BooleanUtils\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #38                         // org/apache/commons/lang3/BooleanUtils\n   super_class: #39                        // java/lang/Object\n   interfaces: 0, fields: 0, methods: 41, attributes: 1\n Constant pool:\n-    #1 = Methodref          #39.#133      // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #134.#135     // java/lang/Boolean.booleanValue:()Z\n-    #3 = Fieldref           #134.#136     // java/lang/Boolean.FALSE:Ljava/lang/Boolean;\n-    #4 = Fieldref           #134.#137     // java/lang/Boolean.TRUE:Ljava/lang/Boolean;\n-    #5 = Methodref          #134.#138     // java/lang/Boolean.equals:(Ljava/lang/Object;)Z\n-    #6 = Methodref          #38.#139      // org/apache/commons/lang3/BooleanUtils.isTrue:(Ljava/lang/Boolean;)Z\n-    #7 = Methodref          #38.#140      // org/apache/commons/lang3/BooleanUtils.isFalse:(Ljava/lang/Boolean;)Z\n-    #8 = Methodref          #141.#142     // java/lang/Integer.intValue:()I\n-    #9 = Class              #143          // java/lang/IllegalArgumentException\n-   #10 = String             #144          // The Integer did not match either specified value\n-   #11 = Methodref          #9.#145       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #12 = Methodref          #141.#138     // java/lang/Integer.equals:(Ljava/lang/Object;)Z\n-   #13 = String             #146          // The Integer did not match any specified value\n-   #14 = Fieldref           #147.#148     // org/apache/commons/lang3/math/NumberUtils.INTEGER_ONE:Ljava/lang/Integer;\n-   #15 = Fieldref           #147.#149     // org/apache/commons/lang3/math/NumberUtils.INTEGER_ZERO:Ljava/lang/Integer;\n-   #16 = String             #150          // true\n-   #17 = Methodref          #151.#152     // java/lang/String.length:()I\n-   #18 = Methodref          #151.#153     // java/lang/String.charAt:(I)C\n-   #19 = Methodref          #151.#138     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #20 = String             #154          // The String did not match any specified value\n-   #21 = Methodref          #38.#155      // org/apache/commons/lang3/BooleanUtils.toBooleanObject:(Ljava/lang/String;)Ljava/lang/Boolean;\n-   #22 = String             #156          // The String did not match either specified value\n-   #23 = String             #157          // false\n-   #24 = Methodref          #38.#158      // org/apache/commons/lang3/BooleanUtils.toString:(Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-   #25 = String             #159          // on\n-   #26 = String             #160          // off\n-   #27 = String             #161          // yes\n-   #28 = String             #162          // no\n-   #29 = Methodref          #38.#163      // org/apache/commons/lang3/BooleanUtils.toString:(ZLjava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-   #30 = String             #164          // The Array must not be null\n-   #31 = String             #165          // Array is empty\n-   #32 = Methodref          #166.#167     // org/apache/commons/lang3/ArrayUtils.toPrimitive:([Ljava/lang/Boolean;)[Z\n-   #33 = Methodref          #38.#168      // org/apache/commons/lang3/BooleanUtils.and:([Z)Z\n-   #34 = Class              #169          // java/lang/NullPointerException\n-   #35 = String             #170          // The array must not contain any null elements\n-   #36 = Methodref          #38.#171      // org/apache/commons/lang3/BooleanUtils.or:([Z)Z\n-   #37 = Methodref          #38.#172      // org/apache/commons/lang3/BooleanUtils.xor:([Z)Z\n-   #38 = Class              #173          // org/apache/commons/lang3/BooleanUtils\n-   #39 = Class              #174          // java/lang/Object\n+    #1 = Methodref          #39.#132      // java/lang/Object.\"<init>\":()V\n+    #2 = Methodref          #52.#133      // java/lang/Boolean.booleanValue:()Z\n+    #3 = Fieldref           #52.#134      // java/lang/Boolean.FALSE:Ljava/lang/Boolean;\n+    #4 = Fieldref           #52.#135      // java/lang/Boolean.TRUE:Ljava/lang/Boolean;\n+    #5 = Methodref          #52.#136      // java/lang/Boolean.equals:(Ljava/lang/Object;)Z\n+    #6 = Methodref          #38.#137      // org/apache/commons/lang3/BooleanUtils.isTrue:(Ljava/lang/Boolean;)Z\n+    #7 = Methodref          #38.#138      // org/apache/commons/lang3/BooleanUtils.isFalse:(Ljava/lang/Boolean;)Z\n+    #8 = Methodref          #81.#139      // java/lang/Integer.intValue:()I\n+    #9 = Class              #140          // java/lang/IllegalArgumentException\n+   #10 = String             #141          // The Integer did not match either specified value\n+   #11 = Methodref          #9.#142       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #12 = Methodref          #81.#136      // java/lang/Integer.equals:(Ljava/lang/Object;)Z\n+   #13 = String             #143          // The Integer did not match any specified value\n+   #14 = Fieldref           #144.#145     // org/apache/commons/lang3/math/NumberUtils.INTEGER_ONE:Ljava/lang/Integer;\n+   #15 = Fieldref           #144.#146     // org/apache/commons/lang3/math/NumberUtils.INTEGER_ZERO:Ljava/lang/Integer;\n+   #16 = String             #147          // true\n+   #17 = Methodref          #96.#148      // java/lang/String.length:()I\n+   #18 = Methodref          #96.#149      // java/lang/String.charAt:(I)C\n+   #19 = Methodref          #96.#136      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #20 = String             #150          // The String did not match any specified value\n+   #21 = Methodref          #38.#151      // org/apache/commons/lang3/BooleanUtils.toBooleanObject:(Ljava/lang/String;)Ljava/lang/Boolean;\n+   #22 = String             #152          // The String did not match either specified value\n+   #23 = String             #153          // false\n+   #24 = Methodref          #38.#154      // org/apache/commons/lang3/BooleanUtils.toString:(Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+   #25 = String             #155          // on\n+   #26 = String             #156          // off\n+   #27 = String             #157          // yes\n+   #28 = String             #158          // no\n+   #29 = Methodref          #38.#159      // org/apache/commons/lang3/BooleanUtils.toString:(ZLjava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+   #30 = String             #160          // The Array must not be null\n+   #31 = String             #161          // Array is empty\n+   #32 = Methodref          #162.#163     // org/apache/commons/lang3/ArrayUtils.toPrimitive:([Ljava/lang/Boolean;)[Z\n+   #33 = Methodref          #38.#164      // org/apache/commons/lang3/BooleanUtils.and:([Z)Z\n+   #34 = Class              #165          // java/lang/NullPointerException\n+   #35 = String             #166          // The array must not contain any null elements\n+   #36 = Methodref          #38.#167      // org/apache/commons/lang3/BooleanUtils.or:([Z)Z\n+   #37 = Methodref          #38.#168      // org/apache/commons/lang3/BooleanUtils.xor:([Z)Z\n+   #38 = Class              #169          // org/apache/commons/lang3/BooleanUtils\n+   #39 = Class              #170          // java/lang/Object\n    #40 = Utf8               <init>\n    #41 = Utf8               ()V\n    #42 = Utf8               Code\n    #43 = Utf8               LineNumberTable\n    #44 = Utf8               LocalVariableTable\n    #45 = Utf8               this\n    #46 = Utf8               Lorg/apache/commons/lang3/BooleanUtils;\n    #47 = Utf8               negate\n    #48 = Utf8               (Ljava/lang/Boolean;)Ljava/lang/Boolean;\n    #49 = Utf8               bool\n    #50 = Utf8               Ljava/lang/Boolean;\n    #51 = Utf8               StackMapTable\n-   #52 = Class              #175          // java/lang/Boolean\n+   #52 = Class              #171          // java/lang/Boolean\n    #53 = Utf8               isTrue\n    #54 = Utf8               (Ljava/lang/Boolean;)Z\n    #55 = Utf8               isNotTrue\n    #56 = Utf8               isFalse\n    #57 = Utf8               isNotFalse\n    #58 = Utf8               toBoolean\n    #59 = Utf8               toBooleanDefaultIfNull\n@@ -84,30 +84,30 @@\n    #74 = Utf8               (IIII)Ljava/lang/Boolean;\n    #75 = Utf8               nullValue\n    #76 = Utf8               (Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Boolean;\n    #77 = Utf8               toInteger\n    #78 = Utf8               (Z)I\n    #79 = Utf8               toIntegerObject\n    #80 = Utf8               (Z)Ljava/lang/Integer;\n-   #81 = Class              #176          // java/lang/Integer\n+   #81 = Class              #172          // java/lang/Integer\n    #82 = Utf8               (Ljava/lang/Boolean;)Ljava/lang/Integer;\n    #83 = Utf8               (ZII)I\n    #84 = Utf8               (Ljava/lang/Boolean;III)I\n    #85 = Utf8               (ZLjava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;\n    #86 = Utf8               (Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;\n    #87 = Utf8               (Ljava/lang/String;)Ljava/lang/Boolean;\n    #88 = Utf8               ch0\n    #89 = Utf8               C\n    #90 = Utf8               ch1\n    #91 = Utf8               ch2\n    #92 = Utf8               ch3\n    #93 = Utf8               ch4\n    #94 = Utf8               str\n    #95 = Utf8               Ljava/lang/String;\n-   #96 = Class              #177          // java/lang/String\n+   #96 = Class              #173          // java/lang/String\n    #97 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;\n    #98 = Utf8               trueString\n    #99 = Utf8               falseString\n   #100 = Utf8               nullString\n   #101 = Utf8               (Ljava/lang/String;)Z\n   #102 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z\n   #103 = Utf8               toStringTrueFalse\n@@ -126,87 +126,83 @@\n   #116 = Class              #115          // \"[Z\"\n   #117 = Utf8               ([Ljava/lang/Boolean;)Ljava/lang/Boolean;\n   #118 = Utf8               primitive\n   #119 = Utf8               ex\n   #120 = Utf8               Ljava/lang/NullPointerException;\n   #121 = Utf8               [Ljava/lang/Boolean;\n   #122 = Class              #121          // \"[Ljava/lang/Boolean;\"\n-  #123 = Class              #169          // java/lang/NullPointerException\n-  #124 = Utf8               or\n-  #125 = Utf8               xor\n-  #126 = Utf8               result\n-  #127 = Utf8               compare\n-  #128 = Utf8               (ZZ)I\n-  #129 = Utf8               x\n-  #130 = Utf8               y\n-  #131 = Utf8               SourceFile\n-  #132 = Utf8               BooleanUtils.java\n-  #133 = NameAndType        #40:#41       // \"<init>\":()V\n-  #134 = Class              #175          // java/lang/Boolean\n-  #135 = NameAndType        #178:#179     // booleanValue:()Z\n-  #136 = NameAndType        #180:#50      // FALSE:Ljava/lang/Boolean;\n-  #137 = NameAndType        #181:#50      // TRUE:Ljava/lang/Boolean;\n-  #138 = NameAndType        #182:#183     // equals:(Ljava/lang/Object;)Z\n-  #139 = NameAndType        #53:#54       // isTrue:(Ljava/lang/Boolean;)Z\n-  #140 = NameAndType        #56:#54       // isFalse:(Ljava/lang/Boolean;)Z\n-  #141 = Class              #176          // java/lang/Integer\n-  #142 = NameAndType        #184:#185     // intValue:()I\n-  #143 = Utf8               java/lang/IllegalArgumentException\n-  #144 = Utf8               The Integer did not match either specified value\n-  #145 = NameAndType        #40:#186      // \"<init>\":(Ljava/lang/String;)V\n-  #146 = Utf8               The Integer did not match any specified value\n-  #147 = Class              #187          // org/apache/commons/lang3/math/NumberUtils\n-  #148 = NameAndType        #188:#69      // INTEGER_ONE:Ljava/lang/Integer;\n-  #149 = NameAndType        #189:#69      // INTEGER_ZERO:Ljava/lang/Integer;\n-  #150 = Utf8               true\n-  #151 = Class              #177          // java/lang/String\n-  #152 = NameAndType        #190:#185     // length:()I\n-  #153 = NameAndType        #191:#192     // charAt:(I)C\n-  #154 = Utf8               The String did not match any specified value\n-  #155 = NameAndType        #66:#87       // toBooleanObject:(Ljava/lang/String;)Ljava/lang/Boolean;\n-  #156 = Utf8               The String did not match either specified value\n-  #157 = Utf8               false\n-  #158 = NameAndType        #107:#108     // toString:(Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #159 = Utf8               on\n-  #160 = Utf8               off\n-  #161 = Utf8               yes\n-  #162 = Utf8               no\n-  #163 = NameAndType        #107:#110     // toString:(ZLjava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #164 = Utf8               The Array must not be null\n-  #165 = Utf8               Array is empty\n-  #166 = Class              #193          // org/apache/commons/lang3/ArrayUtils\n-  #167 = NameAndType        #194:#195     // toPrimitive:([Ljava/lang/Boolean;)[Z\n-  #168 = NameAndType        #111:#112     // and:([Z)Z\n-  #169 = Utf8               java/lang/NullPointerException\n-  #170 = Utf8               The array must not contain any null elements\n-  #171 = NameAndType        #124:#112     // or:([Z)Z\n-  #172 = NameAndType        #125:#112     // xor:([Z)Z\n-  #173 = Utf8               org/apache/commons/lang3/BooleanUtils\n-  #174 = Utf8               java/lang/Object\n-  #175 = Utf8               java/lang/Boolean\n-  #176 = Utf8               java/lang/Integer\n-  #177 = Utf8               java/lang/String\n-  #178 = Utf8               booleanValue\n-  #179 = Utf8               ()Z\n-  #180 = Utf8               FALSE\n-  #181 = Utf8               TRUE\n-  #182 = Utf8               equals\n-  #183 = Utf8               (Ljava/lang/Object;)Z\n-  #184 = Utf8               intValue\n-  #185 = Utf8               ()I\n-  #186 = Utf8               (Ljava/lang/String;)V\n-  #187 = Utf8               org/apache/commons/lang3/math/NumberUtils\n-  #188 = Utf8               INTEGER_ONE\n-  #189 = Utf8               INTEGER_ZERO\n-  #190 = Utf8               length\n-  #191 = Utf8               charAt\n-  #192 = Utf8               (I)C\n-  #193 = Utf8               org/apache/commons/lang3/ArrayUtils\n-  #194 = Utf8               toPrimitive\n-  #195 = Utf8               ([Ljava/lang/Boolean;)[Z\n+  #123 = Utf8               or\n+  #124 = Utf8               xor\n+  #125 = Utf8               result\n+  #126 = Utf8               compare\n+  #127 = Utf8               (ZZ)I\n+  #128 = Utf8               x\n+  #129 = Utf8               y\n+  #130 = Utf8               SourceFile\n+  #131 = Utf8               BooleanUtils.java\n+  #132 = NameAndType        #40:#41       // \"<init>\":()V\n+  #133 = NameAndType        #174:#175     // booleanValue:()Z\n+  #134 = NameAndType        #176:#50      // FALSE:Ljava/lang/Boolean;\n+  #135 = NameAndType        #177:#50      // TRUE:Ljava/lang/Boolean;\n+  #136 = NameAndType        #178:#179     // equals:(Ljava/lang/Object;)Z\n+  #137 = NameAndType        #53:#54       // isTrue:(Ljava/lang/Boolean;)Z\n+  #138 = NameAndType        #56:#54       // isFalse:(Ljava/lang/Boolean;)Z\n+  #139 = NameAndType        #180:#181     // intValue:()I\n+  #140 = Utf8               java/lang/IllegalArgumentException\n+  #141 = Utf8               The Integer did not match either specified value\n+  #142 = NameAndType        #40:#182      // \"<init>\":(Ljava/lang/String;)V\n+  #143 = Utf8               The Integer did not match any specified value\n+  #144 = Class              #183          // org/apache/commons/lang3/math/NumberUtils\n+  #145 = NameAndType        #184:#69      // INTEGER_ONE:Ljava/lang/Integer;\n+  #146 = NameAndType        #185:#69      // INTEGER_ZERO:Ljava/lang/Integer;\n+  #147 = Utf8               true\n+  #148 = NameAndType        #186:#181     // length:()I\n+  #149 = NameAndType        #187:#188     // charAt:(I)C\n+  #150 = Utf8               The String did not match any specified value\n+  #151 = NameAndType        #66:#87       // toBooleanObject:(Ljava/lang/String;)Ljava/lang/Boolean;\n+  #152 = Utf8               The String did not match either specified value\n+  #153 = Utf8               false\n+  #154 = NameAndType        #107:#108     // toString:(Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #155 = Utf8               on\n+  #156 = Utf8               off\n+  #157 = Utf8               yes\n+  #158 = Utf8               no\n+  #159 = NameAndType        #107:#110     // toString:(ZLjava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #160 = Utf8               The Array must not be null\n+  #161 = Utf8               Array is empty\n+  #162 = Class              #189          // org/apache/commons/lang3/ArrayUtils\n+  #163 = NameAndType        #190:#191     // toPrimitive:([Ljava/lang/Boolean;)[Z\n+  #164 = NameAndType        #111:#112     // and:([Z)Z\n+  #165 = Utf8               java/lang/NullPointerException\n+  #166 = Utf8               The array must not contain any null elements\n+  #167 = NameAndType        #123:#112     // or:([Z)Z\n+  #168 = NameAndType        #124:#112     // xor:([Z)Z\n+  #169 = Utf8               org/apache/commons/lang3/BooleanUtils\n+  #170 = Utf8               java/lang/Object\n+  #171 = Utf8               java/lang/Boolean\n+  #172 = Utf8               java/lang/Integer\n+  #173 = Utf8               java/lang/String\n+  #174 = Utf8               booleanValue\n+  #175 = Utf8               ()Z\n+  #176 = Utf8               FALSE\n+  #177 = Utf8               TRUE\n+  #178 = Utf8               equals\n+  #179 = Utf8               (Ljava/lang/Object;)Z\n+  #180 = Utf8               intValue\n+  #181 = Utf8               ()I\n+  #182 = Utf8               (Ljava/lang/String;)V\n+  #183 = Utf8               org/apache/commons/lang3/math/NumberUtils\n+  #184 = Utf8               INTEGER_ONE\n+  #185 = Utf8               INTEGER_ZERO\n+  #186 = Utf8               length\n+  #187 = Utf8               charAt\n+  #188 = Utf8               (I)C\n+  #189 = Utf8               org/apache/commons/lang3/ArrayUtils\n+  #190 = Utf8               toPrimitive\n+  #191 = Utf8               ([Ljava/lang/Boolean;)[Z\n {\n   public org.apache.commons.lang3.BooleanUtils();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n"}]}
