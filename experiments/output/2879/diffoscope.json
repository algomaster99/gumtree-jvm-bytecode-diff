{"diffoscope-json-version": 1, "source1": "first/ResourceAlignmentExtraField.class", "source2": "second/ResourceAlignmentExtraField.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,133 +1,137 @@\n-  SHA-256 checksum 823f6e13cfc4c57c1d1be55b6288f387602b72fc1b65203d98bf5bd2bb6f6d6e\n+  SHA-256 checksum c64e8da70557d403347f67063ff16fce4a8e6e6ac2511b3a5140d92df7c97a4f\n   Compiled from \"ResourceAlignmentExtraField.java\"\n public class org.apache.commons.compress.archivers.zip.ResourceAlignmentExtraField implements org.apache.commons.compress.archivers.zip.ZipExtraField\n   minor version: 0\n-  major version: 52\n+  major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #18                         // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField\n-  super_class: #29                        // java/lang/Object\n-  interfaces: 1, fields: 6, methods: 14, attributes: 1\n+  this_class: #13                         // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField\n+  super_class: #24                        // java/lang/Object\n+  interfaces: 1, fields: 6, methods: 14, attributes: 3\n Constant pool:\n-    #1 = Methodref          #29.#79       // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #18.#80       // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.\"<init>\":(IZ)V\n-    #3 = Methodref          #18.#81       // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.\"<init>\":(IZI)V\n-    #4 = Class              #82           // java/lang/IllegalArgumentException\n-    #5 = Class              #83           // java/lang/StringBuilder\n-    #6 = Methodref          #5.#79        // java/lang/StringBuilder.\"<init>\":()V\n-    #7 = String             #84           // Alignment must be between 0 and 0x7fff, was:\n-    #8 = Methodref          #5.#85        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-    #9 = Methodref          #5.#86        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #10 = Methodref          #5.#87        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #11 = Methodref          #4.#88        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #12 = String             #89           // Padding must not be negative, was:\n-   #13 = Fieldref           #18.#90       // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.alignment:S\n-   #14 = Fieldref           #18.#91       // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.allowMethodChange:Z\n-   #15 = Fieldref           #18.#92       // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.padding:I\n-   #16 = Fieldref           #18.#93       // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #17 = Class              #94           // org/apache/commons/compress/archivers/zip/ZipShort\n-   #18 = Class              #95           // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField\n-   #19 = Methodref          #17.#96       // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-   #20 = Integer            32768\n-   #21 = Methodref          #17.#97       // org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n-   #22 = Methodref          #17.#98       // org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B\n-   #23 = Methodref          #18.#99       // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.parseFromCentralDirectoryData:([BII)V\n-   #24 = Class              #100          // java/util/zip/ZipException\n-   #25 = String             #101          // Too short content for ResourceAlignmentExtraField (0xa11e):\n-   #26 = Methodref          #24.#88       // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-   #27 = Methodref          #17.#102      // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-   #28 = Integer            41246\n-   #29 = Class              #103          // java/lang/Object\n-   #30 = Class              #104          // org/apache/commons/compress/archivers/zip/ZipExtraField\n-   #31 = Utf8               ID\n-   #32 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #33 = Utf8               BASE_SIZE\n-   #34 = Utf8               I\n-   #35 = Utf8               ConstantValue\n-   #36 = Integer            2\n-   #37 = Utf8               ALLOW_METHOD_MESSAGE_CHANGE_FLAG\n-   #38 = Utf8               alignment\n-   #39 = Utf8               S\n-   #40 = Utf8               allowMethodChange\n-   #41 = Utf8               Z\n-   #42 = Utf8               padding\n-   #43 = Utf8               <init>\n-   #44 = Utf8               ()V\n-   #45 = Utf8               Code\n-   #46 = Utf8               LineNumberTable\n-   #47 = Utf8               LocalVariableTable\n-   #48 = Utf8               this\n-   #49 = Utf8               Lorg/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField;\n-   #50 = Utf8               (I)V\n-   #51 = Utf8               (IZ)V\n-   #52 = Utf8               (IZI)V\n-   #53 = Utf8               StackMapTable\n-   #54 = Class              #95           // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField\n-   #55 = Utf8               getAlignment\n-   #56 = Utf8               ()S\n-   #57 = Utf8               ()Z\n-   #58 = Utf8               getHeaderId\n-   #59 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #60 = Utf8               getLocalFileDataLength\n-   #61 = Utf8               getCentralDirectoryLength\n-   #62 = Utf8               getLocalFileDataData\n-   #63 = Utf8               ()[B\n-   #64 = Utf8               content\n-   #65 = Utf8               [B\n-   #66 = Class              #65           // \"[B\"\n-   #67 = Utf8               getCentralDirectoryData\n-   #68 = Utf8               parseFromLocalFileData\n-   #69 = Utf8               ([BII)V\n-   #70 = Utf8               buffer\n-   #71 = Utf8               offset\n-   #72 = Utf8               length\n-   #73 = Utf8               Exceptions\n-   #74 = Utf8               parseFromCentralDirectoryData\n-   #75 = Utf8               alignmentValue\n-   #76 = Utf8               <clinit>\n-   #77 = Utf8               SourceFile\n-   #78 = Utf8               ResourceAlignmentExtraField.java\n-   #79 = NameAndType        #43:#44       // \"<init>\":()V\n-   #80 = NameAndType        #43:#51       // \"<init>\":(IZ)V\n-   #81 = NameAndType        #43:#52       // \"<init>\":(IZI)V\n-   #82 = Utf8               java/lang/IllegalArgumentException\n-   #83 = Utf8               java/lang/StringBuilder\n-   #84 = Utf8               Alignment must be between 0 and 0x7fff, was:\n-   #85 = NameAndType        #105:#106     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #86 = NameAndType        #105:#107     // append:(I)Ljava/lang/StringBuilder;\n-   #87 = NameAndType        #108:#109     // toString:()Ljava/lang/String;\n-   #88 = NameAndType        #43:#110      // \"<init>\":(Ljava/lang/String;)V\n-   #89 = Utf8               Padding must not be negative, was:\n-   #90 = NameAndType        #38:#39       // alignment:S\n-   #91 = NameAndType        #40:#41       // allowMethodChange:Z\n-   #92 = NameAndType        #42:#34       // padding:I\n-   #93 = NameAndType        #31:#32       // ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #94 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-   #95 = Utf8               org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField\n-   #96 = NameAndType        #43:#50       // \"<init>\":(I)V\n-   #97 = NameAndType        #111:#112     // putShort:(I[BI)V\n-   #98 = NameAndType        #113:#114     // getBytes:(I)[B\n-   #99 = NameAndType        #74:#69       // parseFromCentralDirectoryData:([BII)V\n-  #100 = Utf8               java/util/zip/ZipException\n-  #101 = Utf8               Too short content for ResourceAlignmentExtraField (0xa11e):\n-  #102 = NameAndType        #115:#116     // getValue:([BI)I\n-  #103 = Utf8               java/lang/Object\n-  #104 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n-  #105 = Utf8               append\n-  #106 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #107 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #108 = Utf8               toString\n-  #109 = Utf8               ()Ljava/lang/String;\n-  #110 = Utf8               (Ljava/lang/String;)V\n-  #111 = Utf8               putShort\n-  #112 = Utf8               (I[BI)V\n-  #113 = Utf8               getBytes\n-  #114 = Utf8               (I)[B\n-  #115 = Utf8               getValue\n-  #116 = Utf8               ([BI)I\n+    #1 = Methodref          #24.#73       // java/lang/Object.\"<init>\":()V\n+    #2 = Methodref          #13.#74       // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.\"<init>\":(IZ)V\n+    #3 = Methodref          #13.#75       // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.\"<init>\":(IZI)V\n+    #4 = Class              #76           // java/lang/IllegalArgumentException\n+    #5 = InvokeDynamic      #0:#80        // #0:makeConcatWithConstants:(I)Ljava/lang/String;\n+    #6 = Methodref          #4.#81        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+    #7 = InvokeDynamic      #1:#80        // #1:makeConcatWithConstants:(I)Ljava/lang/String;\n+    #8 = Fieldref           #13.#83       // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.alignment:S\n+    #9 = Fieldref           #13.#84       // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.allowMethodChange:Z\n+   #10 = Fieldref           #13.#85       // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.padding:I\n+   #11 = Fieldref           #13.#86       // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #12 = Class              #87           // org/apache/commons/compress/archivers/zip/ZipShort\n+   #13 = Class              #88           // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField\n+   #14 = Methodref          #12.#89       // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+   #15 = Integer            32768\n+   #16 = Methodref          #12.#90       // org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n+   #17 = Methodref          #12.#91       // org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B\n+   #18 = Methodref          #13.#92       // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.parseFromCentralDirectoryData:([BII)V\n+   #19 = Class              #93           // java/util/zip/ZipException\n+   #20 = InvokeDynamic      #2:#80        // #2:makeConcatWithConstants:(I)Ljava/lang/String;\n+   #21 = Methodref          #19.#81       // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+   #22 = Methodref          #12.#95       // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+   #23 = Integer            41246\n+   #24 = Class              #96           // java/lang/Object\n+   #25 = Class              #97           // org/apache/commons/compress/archivers/zip/ZipExtraField\n+   #26 = Utf8               ID\n+   #27 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #28 = Utf8               BASE_SIZE\n+   #29 = Utf8               I\n+   #30 = Utf8               ConstantValue\n+   #31 = Integer            2\n+   #32 = Utf8               ALLOW_METHOD_MESSAGE_CHANGE_FLAG\n+   #33 = Utf8               alignment\n+   #34 = Utf8               S\n+   #35 = Utf8               allowMethodChange\n+   #36 = Utf8               Z\n+   #37 = Utf8               padding\n+   #38 = Utf8               <init>\n+   #39 = Utf8               ()V\n+   #40 = Utf8               Code\n+   #41 = Utf8               LineNumberTable\n+   #42 = Utf8               LocalVariableTable\n+   #43 = Utf8               this\n+   #44 = Utf8               Lorg/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField;\n+   #45 = Utf8               (I)V\n+   #46 = Utf8               (IZ)V\n+   #47 = Utf8               (IZI)V\n+   #48 = Utf8               StackMapTable\n+   #49 = Utf8               getAlignment\n+   #50 = Utf8               ()S\n+   #51 = Utf8               ()Z\n+   #52 = Utf8               getHeaderId\n+   #53 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #54 = Utf8               getLocalFileDataLength\n+   #55 = Utf8               getCentralDirectoryLength\n+   #56 = Utf8               getLocalFileDataData\n+   #57 = Utf8               ()[B\n+   #58 = Utf8               content\n+   #59 = Utf8               [B\n+   #60 = Class              #59           // \"[B\"\n+   #61 = Utf8               getCentralDirectoryData\n+   #62 = Utf8               parseFromLocalFileData\n+   #63 = Utf8               ([BII)V\n+   #64 = Utf8               buffer\n+   #65 = Utf8               offset\n+   #66 = Utf8               length\n+   #67 = Utf8               Exceptions\n+   #68 = Utf8               parseFromCentralDirectoryData\n+   #69 = Utf8               alignmentValue\n+   #70 = Utf8               <clinit>\n+   #71 = Utf8               SourceFile\n+   #72 = Utf8               ResourceAlignmentExtraField.java\n+   #73 = NameAndType        #38:#39       // \"<init>\":()V\n+   #74 = NameAndType        #38:#46       // \"<init>\":(IZ)V\n+   #75 = NameAndType        #38:#47       // \"<init>\":(IZI)V\n+   #76 = Utf8               java/lang/IllegalArgumentException\n+   #77 = Utf8               BootstrapMethods\n+   #78 = MethodHandle       6:#98         // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+   #79 = String             #99           // Alignment must be between 0 and 0x7fff, was: \\u0001\n+   #80 = NameAndType        #100:#101     // makeConcatWithConstants:(I)Ljava/lang/String;\n+   #81 = NameAndType        #38:#102      // \"<init>\":(Ljava/lang/String;)V\n+   #82 = String             #103          // Padding must not be negative, was: \\u0001\n+   #83 = NameAndType        #33:#34       // alignment:S\n+   #84 = NameAndType        #35:#36       // allowMethodChange:Z\n+   #85 = NameAndType        #37:#29       // padding:I\n+   #86 = NameAndType        #26:#27       // ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #87 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+   #88 = Utf8               org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField\n+   #89 = NameAndType        #38:#45       // \"<init>\":(I)V\n+   #90 = NameAndType        #104:#105     // putShort:(I[BI)V\n+   #91 = NameAndType        #106:#107     // getBytes:(I)[B\n+   #92 = NameAndType        #68:#63       // parseFromCentralDirectoryData:([BII)V\n+   #93 = Utf8               java/util/zip/ZipException\n+   #94 = String             #108          // Too short content for ResourceAlignmentExtraField (0xa11e): \\u0001\n+   #95 = NameAndType        #109:#110     // getValue:([BI)I\n+   #96 = Utf8               java/lang/Object\n+   #97 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n+   #98 = Methodref          #111.#112     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+   #99 = Utf8               Alignment must be between 0 and 0x7fff, was: \\u0001\n+  #100 = Utf8               makeConcatWithConstants\n+  #101 = Utf8               (I)Ljava/lang/String;\n+  #102 = Utf8               (Ljava/lang/String;)V\n+  #103 = Utf8               Padding must not be negative, was: \\u0001\n+  #104 = Utf8               putShort\n+  #105 = Utf8               (I[BI)V\n+  #106 = Utf8               getBytes\n+  #107 = Utf8               (I)[B\n+  #108 = Utf8               Too short content for ResourceAlignmentExtraField (0xa11e): \\u0001\n+  #109 = Utf8               getValue\n+  #110 = Utf8               ([BI)I\n+  #111 = Class              #113          // java/lang/invoke/StringConcatFactory\n+  #112 = NameAndType        #100:#117     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #113 = Utf8               java/lang/invoke/StringConcatFactory\n+  #114 = Class              #119          // java/lang/invoke/MethodHandles$Lookup\n+  #115 = Utf8               Lookup\n+  #116 = Utf8               InnerClasses\n+  #117 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #118 = Class              #120          // java/lang/invoke/MethodHandles\n+  #119 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #120 = Utf8               java/lang/invoke/MethodHandles\n {\n   public static final org.apache.commons.compress.archivers.zip.ZipShort ID;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public static final int BASE_SIZE = 2;\n     descriptor: I\n@@ -204,182 +208,170 @@\n             0       8     1 alignment   I\n             0       8     2 allowMethodChange   Z\n \n   public org.apache.commons.compress.archivers.zip.ResourceAlignmentExtraField(int, boolean, int);\n     descriptor: (IZI)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=4, locals=4, args_size=4\n+      stack=3, locals=4, args_size=4\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: iload_1\n          5: iflt          15\n          8: iload_1\n          9: sipush        32767\n-        12: if_icmple     42\n+        12: if_icmple     29\n         15: new           #4                  // class java/lang/IllegalArgumentException\n         18: dup\n-        19: new           #5                  // class java/lang/StringBuilder\n-        22: dup\n-        23: invokespecial #6                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        26: ldc           #7                  // String Alignment must be between 0 and 0x7fff, was:\n-        28: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        31: iload_1\n-        32: invokevirtual #9                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        35: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        38: invokespecial #11                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        41: athrow\n-        42: iload_3\n-        43: ifge          73\n-        46: new           #4                  // class java/lang/IllegalArgumentException\n-        49: dup\n-        50: new           #5                  // class java/lang/StringBuilder\n-        53: dup\n-        54: invokespecial #6                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        57: ldc           #12                 // String Padding must not be negative, was:\n-        59: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        62: iload_3\n-        63: invokevirtual #9                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        66: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        69: invokespecial #11                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        72: athrow\n-        73: aload_0\n-        74: iload_1\n-        75: i2s\n-        76: putfield      #13                 // Field alignment:S\n-        79: aload_0\n-        80: iload_2\n-        81: putfield      #14                 // Field allowMethodChange:Z\n-        84: aload_0\n-        85: iload_3\n-        86: putfield      #15                 // Field padding:I\n-        89: return\n+        19: iload_1\n+        20: invokedynamic #5,  0              // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;\n+        25: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        28: athrow\n+        29: iload_3\n+        30: ifge          47\n+        33: new           #4                  // class java/lang/IllegalArgumentException\n+        36: dup\n+        37: iload_3\n+        38: invokedynamic #7,  0              // InvokeDynamic #1:makeConcatWithConstants:(I)Ljava/lang/String;\n+        43: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        46: athrow\n+        47: aload_0\n+        48: iload_1\n+        49: i2s\n+        50: putfield      #8                  // Field alignment:S\n+        53: aload_0\n+        54: iload_2\n+        55: putfield      #9                  // Field allowMethodChange:Z\n+        58: aload_0\n+        59: iload_3\n+        60: putfield      #10                 // Field padding:I\n+        63: return\n       LineNumberTable:\n         line 66: 0\n         line 67: 4\n         line 68: 15\n-        line 70: 42\n-        line 71: 46\n-        line 73: 73\n-        line 74: 79\n-        line 75: 84\n-        line 76: 89\n+        line 70: 29\n+        line 71: 33\n+        line 73: 47\n+        line 74: 53\n+        line 75: 58\n+        line 76: 63\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      90     0  this   Lorg/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField;\n-            0      90     1 alignment   I\n-            0      90     2 allowMethodChange   Z\n-            0      90     3 padding   I\n+            0      64     0  this   Lorg/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField;\n+            0      64     1 alignment   I\n+            0      64     2 allowMethodChange   Z\n+            0      64     3 padding   I\n       StackMapTable: number_of_entries = 3\n         frame_type = 255 /* full_frame */\n           offset_delta = 15\n           locals = [ class org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField, int, int, int ]\n           stack = []\n-        frame_type = 26 /* same */\n-        frame_type = 30 /* same */\n+        frame_type = 13 /* same */\n+        frame_type = 17 /* same */\n \n   public short getAlignment();\n     descriptor: ()S\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #13                 // Field alignment:S\n+         1: getfield      #8                  // Field alignment:S\n          4: ireturn\n       LineNumberTable:\n         line 85: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField;\n \n   public boolean allowMethodChange();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #14                 // Field allowMethodChange:Z\n+         1: getfield      #9                  // Field allowMethodChange:Z\n          4: ireturn\n       LineNumberTable:\n         line 95: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField;\n \n   public org.apache.commons.compress.archivers.zip.ZipShort getHeaderId();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n-         0: getstatic     #16                 // Field ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+         0: getstatic     #11                 // Field ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n          3: areturn\n       LineNumberTable:\n         line 100: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       4     0  this   Lorg/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField;\n \n   public org.apache.commons.compress.archivers.zip.ZipShort getLocalFileDataLength();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n-         0: new           #17                 // class org/apache/commons/compress/archivers/zip/ZipShort\n+         0: new           #12                 // class org/apache/commons/compress/archivers/zip/ZipShort\n          3: dup\n          4: iconst_2\n          5: aload_0\n-         6: getfield      #15                 // Field padding:I\n+         6: getfield      #10                 // Field padding:I\n          9: iadd\n-        10: invokespecial #19                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+        10: invokespecial #14                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n         13: areturn\n       LineNumberTable:\n         line 105: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField;\n \n   public org.apache.commons.compress.archivers.zip.ZipShort getCentralDirectoryLength();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: new           #17                 // class org/apache/commons/compress/archivers/zip/ZipShort\n+         0: new           #12                 // class org/apache/commons/compress/archivers/zip/ZipShort\n          3: dup\n          4: iconst_2\n-         5: invokespecial #19                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+         5: invokespecial #14                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n          8: areturn\n       LineNumberTable:\n         line 110: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField;\n \n   public byte[] getLocalFileDataData();\n     descriptor: ()[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: iconst_2\n          1: aload_0\n-         2: getfield      #15                 // Field padding:I\n+         2: getfield      #10                 // Field padding:I\n          5: iadd\n          6: newarray       byte\n          8: astore_1\n          9: aload_0\n-        10: getfield      #13                 // Field alignment:S\n+        10: getfield      #8                  // Field alignment:S\n         13: aload_0\n-        14: getfield      #14                 // Field allowMethodChange:Z\n+        14: getfield      #9                  // Field allowMethodChange:Z\n         17: ifeq          25\n-        20: ldc           #20                 // int 32768\n+        20: ldc           #15                 // int 32768\n         22: goto          26\n         25: iconst_0\n         26: ior\n         27: aload_1\n         28: iconst_0\n-        29: invokestatic  #21                 // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n+        29: invokestatic  #16                 // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n         32: aload_1\n         33: areturn\n       LineNumberTable:\n         line 115: 0\n         line 116: 9\n         line 118: 32\n       LocalVariableTable:\n@@ -398,23 +390,23 @@\n \n   public byte[] getCentralDirectoryData();\n     descriptor: ()[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #13                 // Field alignment:S\n+         1: getfield      #8                  // Field alignment:S\n          4: aload_0\n-         5: getfield      #14                 // Field allowMethodChange:Z\n+         5: getfield      #9                  // Field allowMethodChange:Z\n          8: ifeq          16\n-        11: ldc           #20                 // int 32768\n+        11: ldc           #15                 // int 32768\n         13: goto          17\n         16: iconst_0\n         17: ior\n-        18: invokestatic  #22                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B\n+        18: invokestatic  #17                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B\n         21: areturn\n       LineNumberTable:\n         line 123: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0  this   Lorg/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField;\n       StackMapTable: number_of_entries = 2\n@@ -430,20 +422,20 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokevirtual #23                 // Method parseFromCentralDirectoryData:([BII)V\n+         4: invokevirtual #18                 // Method parseFromCentralDirectoryData:([BII)V\n          7: aload_0\n          8: iload_3\n          9: iconst_2\n         10: isub\n-        11: putfield      #15                 // Field padding:I\n+        11: putfield      #10                 // Field padding:I\n         14: return\n       LineNumberTable:\n         line 128: 0\n         line 129: 7\n         line 130: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -454,66 +446,60 @@\n     Exceptions:\n       throws java.util.zip.ZipException\n \n   public void parseFromCentralDirectoryData(byte[], int, int) throws java.util.zip.ZipException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=4, locals=5, args_size=4\n+      stack=3, locals=5, args_size=4\n          0: iload_3\n          1: iconst_2\n-         2: if_icmpge     32\n-         5: new           #24                 // class java/util/zip/ZipException\n+         2: if_icmpge     19\n+         5: new           #19                 // class java/util/zip/ZipException\n          8: dup\n-         9: new           #5                  // class java/lang/StringBuilder\n-        12: dup\n-        13: invokespecial #6                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        16: ldc           #25                 // String Too short content for ResourceAlignmentExtraField (0xa11e):\n-        18: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        21: iload_3\n-        22: invokevirtual #9                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        25: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        28: invokespecial #26                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-        31: athrow\n-        32: aload_1\n-        33: iload_2\n-        34: invokestatic  #27                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-        37: istore        4\n-        39: aload_0\n-        40: iload         4\n-        42: sipush        32767\n-        45: iand\n-        46: i2s\n-        47: putfield      #13                 // Field alignment:S\n-        50: aload_0\n-        51: iload         4\n-        53: ldc           #20                 // int 32768\n-        55: iand\n-        56: ifeq          63\n-        59: iconst_1\n-        60: goto          64\n-        63: iconst_0\n-        64: putfield      #14                 // Field allowMethodChange:Z\n-        67: return\n+         9: iload_3\n+        10: invokedynamic #20,  0             // InvokeDynamic #2:makeConcatWithConstants:(I)Ljava/lang/String;\n+        15: invokespecial #21                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+        18: athrow\n+        19: aload_1\n+        20: iload_2\n+        21: invokestatic  #22                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+        24: istore        4\n+        26: aload_0\n+        27: iload         4\n+        29: sipush        32767\n+        32: iand\n+        33: i2s\n+        34: putfield      #8                  // Field alignment:S\n+        37: aload_0\n+        38: iload         4\n+        40: ldc           #15                 // int 32768\n+        42: iand\n+        43: ifeq          50\n+        46: iconst_1\n+        47: goto          51\n+        50: iconst_0\n+        51: putfield      #9                  // Field allowMethodChange:Z\n+        54: return\n       LineNumberTable:\n         line 134: 0\n         line 135: 5\n-        line 137: 32\n-        line 138: 39\n-        line 139: 50\n-        line 140: 67\n+        line 137: 19\n+        line 138: 26\n+        line 139: 37\n+        line 140: 54\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      68     0  this   Lorg/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField;\n-            0      68     1 buffer   [B\n-            0      68     2 offset   I\n-            0      68     3 length   I\n-           39      29     4 alignmentValue   I\n+            0      55     0  this   Lorg/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField;\n+            0      55     1 buffer   [B\n+            0      55     2 offset   I\n+            0      55     3 length   I\n+           26      29     4 alignmentValue   I\n       StackMapTable: number_of_entries = 3\n-        frame_type = 32 /* same */\n+        frame_type = 19 /* same */\n         frame_type = 255 /* full_frame */\n           offset_delta = 30\n           locals = [ class org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField, class \"[B\", int, int, int ]\n           stack = [ class org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = [ class org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField, class \"[B\", int, int, int ]\n@@ -522,17 +508,29 @@\n       throws java.util.zip.ZipException\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=3, locals=0, args_size=0\n-         0: new           #17                 // class org/apache/commons/compress/archivers/zip/ZipShort\n+         0: new           #12                 // class org/apache/commons/compress/archivers/zip/ZipShort\n          3: dup\n-         4: ldc           #28                 // int 41246\n-         6: invokespecial #19                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-         9: putstatic     #16                 // Field ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+         4: ldc           #23                 // int 41246\n+         6: invokespecial #14                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+         9: putstatic     #11                 // Field ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n         12: return\n       LineNumberTable:\n         line 43: 0\n }\n SourceFile: \"ResourceAlignmentExtraField.java\"\n+InnerClasses:\n+  public static final #115= #114 of #118; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+BootstrapMethods:\n+  0: #78 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #79 Alignment must be between 0 and 0x7fff, was: \\u0001\n+  1: #78 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #82 Padding must not be negative, was: \\u0001\n+  2: #78 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #94 Too short content for ResourceAlignmentExtraField (0xa11e): \\u0001\n"}]}
