{"diffoscope-json-version": 1, "source1": "first/JavaWrapper.class", "source2": "second/JavaWrapper.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,209 +1,209 @@\n-  SHA-256 checksum 9a1868251142f8edb71c61997dddfff4b7ff7adb98866bc24506475ebb341a72\n+  SHA-256 checksum a12559802f4c9359b937ce06f7826a363846987653327788df325864a21e3eae\n   Compiled from \"JavaWrapper.java\"\n public class org.apache.bcel.util.JavaWrapper\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #44                         // org/apache/bcel/util/JavaWrapper\n+  this_class: #52                         // org/apache/bcel/util/JavaWrapper\n   super_class: #47                        // java/lang/Object\n   interfaces: 0, fields: 1, methods: 5, attributes: 1\n Constant pool:\n-    #1 = String             #68           // bcel.classloader\n-    #2 = Methodref          #69.#70       // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-    #3 = String             #71           //\n-    #4 = Methodref          #42.#72       // java/lang/String.equals:(Ljava/lang/Object;)Z\n-    #5 = Class              #73           // java/lang/IllegalStateException\n-    #6 = String             #74           // The property \\'bcel.classloader\\' must be defined\n-    #7 = Methodref          #5.#75        // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-    #8 = Methodref          #20.#76       // java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;\n-    #9 = Methodref          #20.#77       // java/lang/Class.newInstance:()Ljava/lang/Object;\n-   #10 = Class              #78           // java/lang/ClassLoader\n-   #11 = Class              #79           // java/lang/Exception\n-   #12 = Methodref          #11.#80       // java/lang/Exception.toString:()Ljava/lang/String;\n-   #13 = Methodref          #5.#81        // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #14 = Methodref          #47.#82       // java/lang/Object.\"<init>\":()V\n-   #15 = Fieldref           #44.#83       // org/apache/bcel/util/JavaWrapper.loader:Ljava/lang/ClassLoader;\n-   #16 = Methodref          #44.#84       // org/apache/bcel/util/JavaWrapper.getClassLoader:()Ljava/lang/ClassLoader;\n-   #17 = Methodref          #44.#85       // org/apache/bcel/util/JavaWrapper.\"<init>\":(Ljava/lang/ClassLoader;)V\n-   #18 = Methodref          #10.#86       // java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;\n-   #19 = String             #64           // main\n-   #20 = Class              #87           // java/lang/Class\n-   #21 = Methodref          #47.#88       // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #22 = Methodref          #20.#89       // java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n-   #23 = Methodref          #61.#90       // java/lang/reflect/Method.getModifiers:()I\n-   #24 = Methodref          #61.#91       // java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;\n-   #25 = Methodref          #92.#93       // java/lang/reflect/Modifier.isPublic:(I)Z\n-   #26 = Methodref          #92.#94       // java/lang/reflect/Modifier.isStatic:(I)Z\n-   #27 = Methodref          #92.#95       // java/lang/reflect/Modifier.isAbstract:(I)Z\n-   #28 = Fieldref           #96.#97       // java/lang/Void.TYPE:Ljava/lang/Class;\n-   #29 = Class              #98           // java/lang/NoSuchMethodException\n-   #30 = Methodref          #29.#82       // java/lang/NoSuchMethodException.\"<init>\":()V\n-   #31 = Fieldref           #69.#99       // java/lang/System.out:Ljava/io/PrintStream;\n-   #32 = Class              #100          // java/lang/StringBuilder\n-   #33 = Methodref          #32.#82       // java/lang/StringBuilder.\"<init>\":()V\n-   #34 = String             #101          // In class\n-   #35 = Methodref          #32.#102      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #36 = String             #103          // : public static void main(String[] argv) is not defined\n-   #37 = Methodref          #32.#80       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #38 = Methodref          #104.#105     // java/io/PrintStream.println:(Ljava/lang/String;)V\n-   #39 = Methodref          #61.#106      // java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n-   #40 = Methodref          #11.#107      // java/lang/Exception.printStackTrace:()V\n-   #41 = String             #108          // Missing class name.\n-   #42 = Class              #109          // java/lang/String\n-   #43 = Methodref          #69.#110      // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #44 = Class              #111          // org/apache/bcel/util/JavaWrapper\n-   #45 = Methodref          #44.#82       // org/apache/bcel/util/JavaWrapper.\"<init>\":()V\n-   #46 = Methodref          #44.#112      // org/apache/bcel/util/JavaWrapper.runMain:(Ljava/lang/String;[Ljava/lang/String;)V\n-   #47 = Class              #113          // java/lang/Object\n-   #48 = Utf8               loader\n-   #49 = Utf8               Ljava/lang/ClassLoader;\n-   #50 = Utf8               getClassLoader\n-   #51 = Utf8               ()Ljava/lang/ClassLoader;\n-   #52 = Utf8               Code\n-   #53 = Utf8               LineNumberTable\n-   #54 = Utf8               StackMapTable\n-   #55 = Utf8               <init>\n-   #56 = Utf8               (Ljava/lang/ClassLoader;)V\n-   #57 = Utf8               ()V\n-   #58 = Utf8               runMain\n-   #59 = Utf8               (Ljava/lang/String;[Ljava/lang/String;)V\n-   #60 = Class              #114          // \"[Ljava/lang/String;\"\n-   #61 = Class              #115          // java/lang/reflect/Method\n-   #62 = Utf8               Exceptions\n-   #63 = Class              #116          // java/lang/ClassNotFoundException\n-   #64 = Utf8               main\n-   #65 = Utf8               ([Ljava/lang/String;)V\n-   #66 = Utf8               SourceFile\n-   #67 = Utf8               JavaWrapper.java\n-   #68 = Utf8               bcel.classloader\n-   #69 = Class              #117          // java/lang/System\n-   #70 = NameAndType        #118:#119     // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-   #71 = Utf8\n-   #72 = NameAndType        #120:#121     // equals:(Ljava/lang/Object;)Z\n-   #73 = Utf8               java/lang/IllegalStateException\n-   #74 = Utf8               The property \\'bcel.classloader\\' must be defined\n-   #75 = NameAndType        #55:#122      // \"<init>\":(Ljava/lang/String;)V\n-   #76 = NameAndType        #123:#124     // forName:(Ljava/lang/String;)Ljava/lang/Class;\n-   #77 = NameAndType        #125:#126     // newInstance:()Ljava/lang/Object;\n-   #78 = Utf8               java/lang/ClassLoader\n-   #79 = Utf8               java/lang/Exception\n-   #80 = NameAndType        #127:#128     // toString:()Ljava/lang/String;\n-   #81 = NameAndType        #55:#129      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #82 = NameAndType        #55:#57       // \"<init>\":()V\n-   #83 = NameAndType        #48:#49       // loader:Ljava/lang/ClassLoader;\n-   #84 = NameAndType        #50:#51       // getClassLoader:()Ljava/lang/ClassLoader;\n-   #85 = NameAndType        #55:#56       // \"<init>\":(Ljava/lang/ClassLoader;)V\n-   #86 = NameAndType        #130:#124     // loadClass:(Ljava/lang/String;)Ljava/lang/Class;\n-   #87 = Utf8               java/lang/Class\n-   #88 = NameAndType        #131:#132     // getClass:()Ljava/lang/Class;\n-   #89 = NameAndType        #133:#134     // getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n-   #90 = NameAndType        #135:#136     // getModifiers:()I\n-   #91 = NameAndType        #137:#132     // getReturnType:()Ljava/lang/Class;\n-   #92 = Class              #138          // java/lang/reflect/Modifier\n-   #93 = NameAndType        #139:#140     // isPublic:(I)Z\n-   #94 = NameAndType        #141:#140     // isStatic:(I)Z\n-   #95 = NameAndType        #142:#140     // isAbstract:(I)Z\n-   #96 = Class              #143          // java/lang/Void\n-   #97 = NameAndType        #144:#145     // TYPE:Ljava/lang/Class;\n-   #98 = Utf8               java/lang/NoSuchMethodException\n-   #99 = NameAndType        #146:#147     // out:Ljava/io/PrintStream;\n-  #100 = Utf8               java/lang/StringBuilder\n-  #101 = Utf8               In class\n-  #102 = NameAndType        #148:#149     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #103 = Utf8               : public static void main(String[] argv) is not defined\n-  #104 = Class              #150          // java/io/PrintStream\n-  #105 = NameAndType        #151:#122     // println:(Ljava/lang/String;)V\n-  #106 = NameAndType        #152:#153     // invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #107 = NameAndType        #154:#57      // printStackTrace:()V\n-  #108 = Utf8               Missing class name.\n-  #109 = Utf8               java/lang/String\n-  #110 = NameAndType        #155:#156     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #111 = Utf8               org/apache/bcel/util/JavaWrapper\n-  #112 = NameAndType        #58:#59       // runMain:(Ljava/lang/String;[Ljava/lang/String;)V\n-  #113 = Utf8               java/lang/Object\n-  #114 = Utf8               [Ljava/lang/String;\n-  #115 = Utf8               java/lang/reflect/Method\n-  #116 = Utf8               java/lang/ClassNotFoundException\n-  #117 = Utf8               java/lang/System\n-  #118 = Utf8               getProperty\n-  #119 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #120 = Utf8               equals\n-  #121 = Utf8               (Ljava/lang/Object;)Z\n-  #122 = Utf8               (Ljava/lang/String;)V\n-  #123 = Utf8               forName\n-  #124 = Utf8               (Ljava/lang/String;)Ljava/lang/Class;\n-  #125 = Utf8               newInstance\n-  #126 = Utf8               ()Ljava/lang/Object;\n-  #127 = Utf8               toString\n-  #128 = Utf8               ()Ljava/lang/String;\n-  #129 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #130 = Utf8               loadClass\n-  #131 = Utf8               getClass\n-  #132 = Utf8               ()Ljava/lang/Class;\n-  #133 = Utf8               getMethod\n-  #134 = Utf8               (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n-  #135 = Utf8               getModifiers\n-  #136 = Utf8               ()I\n-  #137 = Utf8               getReturnType\n-  #138 = Utf8               java/lang/reflect/Modifier\n-  #139 = Utf8               isPublic\n-  #140 = Utf8               (I)Z\n-  #141 = Utf8               isStatic\n-  #142 = Utf8               isAbstract\n-  #143 = Utf8               java/lang/Void\n-  #144 = Utf8               TYPE\n-  #145 = Utf8               Ljava/lang/Class;\n-  #146 = Utf8               out\n-  #147 = Utf8               Ljava/io/PrintStream;\n-  #148 = Utf8               append\n-  #149 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #150 = Utf8               java/io/PrintStream\n-  #151 = Utf8               println\n-  #152 = Utf8               invoke\n-  #153 = Utf8               (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #154 = Utf8               printStackTrace\n-  #155 = Utf8               arraycopy\n-  #156 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+    #1 = String             #2            // bcel.classloader\n+    #2 = Utf8               bcel.classloader\n+    #3 = Methodref          #4.#5         // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+    #4 = Class              #6            // java/lang/System\n+    #5 = NameAndType        #7:#8         // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+    #6 = Utf8               java/lang/System\n+    #7 = Utf8               getProperty\n+    #8 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+    #9 = String             #10           //\n+   #10 = Utf8\n+   #11 = Methodref          #12.#13       // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #12 = Class              #14           // java/lang/String\n+   #13 = NameAndType        #15:#16       // equals:(Ljava/lang/Object;)Z\n+   #14 = Utf8               java/lang/String\n+   #15 = Utf8               equals\n+   #16 = Utf8               (Ljava/lang/Object;)Z\n+   #17 = Class              #18           // java/lang/IllegalStateException\n+   #18 = Utf8               java/lang/IllegalStateException\n+   #19 = String             #20           // The property \\'bcel.classloader\\' must be defined\n+   #20 = Utf8               The property \\'bcel.classloader\\' must be defined\n+   #21 = Methodref          #17.#22       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #22 = NameAndType        #23:#24       // \"<init>\":(Ljava/lang/String;)V\n+   #23 = Utf8               <init>\n+   #24 = Utf8               (Ljava/lang/String;)V\n+   #25 = Methodref          #26.#27       // java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;\n+   #26 = Class              #28           // java/lang/Class\n+   #27 = NameAndType        #29:#30       // forName:(Ljava/lang/String;)Ljava/lang/Class;\n+   #28 = Utf8               java/lang/Class\n+   #29 = Utf8               forName\n+   #30 = Utf8               (Ljava/lang/String;)Ljava/lang/Class;\n+   #31 = Methodref          #26.#32       // java/lang/Class.newInstance:()Ljava/lang/Object;\n+   #32 = NameAndType        #33:#34       // newInstance:()Ljava/lang/Object;\n+   #33 = Utf8               newInstance\n+   #34 = Utf8               ()Ljava/lang/Object;\n+   #35 = Class              #36           // java/lang/ClassLoader\n+   #36 = Utf8               java/lang/ClassLoader\n+   #37 = Class              #38           // java/lang/Exception\n+   #38 = Utf8               java/lang/Exception\n+   #39 = Methodref          #37.#40       // java/lang/Exception.toString:()Ljava/lang/String;\n+   #40 = NameAndType        #41:#42       // toString:()Ljava/lang/String;\n+   #41 = Utf8               toString\n+   #42 = Utf8               ()Ljava/lang/String;\n+   #43 = Methodref          #17.#44       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #44 = NameAndType        #23:#45       // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #45 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #46 = Methodref          #47.#48       // java/lang/Object.\"<init>\":()V\n+   #47 = Class              #49           // java/lang/Object\n+   #48 = NameAndType        #23:#50       // \"<init>\":()V\n+   #49 = Utf8               java/lang/Object\n+   #50 = Utf8               ()V\n+   #51 = Fieldref           #52.#53       // org/apache/bcel/util/JavaWrapper.loader:Ljava/lang/ClassLoader;\n+   #52 = Class              #54           // org/apache/bcel/util/JavaWrapper\n+   #53 = NameAndType        #55:#56       // loader:Ljava/lang/ClassLoader;\n+   #54 = Utf8               org/apache/bcel/util/JavaWrapper\n+   #55 = Utf8               loader\n+   #56 = Utf8               Ljava/lang/ClassLoader;\n+   #57 = Methodref          #52.#58       // org/apache/bcel/util/JavaWrapper.getClassLoader:()Ljava/lang/ClassLoader;\n+   #58 = NameAndType        #59:#60       // getClassLoader:()Ljava/lang/ClassLoader;\n+   #59 = Utf8               getClassLoader\n+   #60 = Utf8               ()Ljava/lang/ClassLoader;\n+   #61 = Methodref          #52.#62       // org/apache/bcel/util/JavaWrapper.\"<init>\":(Ljava/lang/ClassLoader;)V\n+   #62 = NameAndType        #23:#63       // \"<init>\":(Ljava/lang/ClassLoader;)V\n+   #63 = Utf8               (Ljava/lang/ClassLoader;)V\n+   #64 = Methodref          #35.#65       // java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;\n+   #65 = NameAndType        #66:#30       // loadClass:(Ljava/lang/String;)Ljava/lang/Class;\n+   #66 = Utf8               loadClass\n+   #67 = String             #68           // main\n+   #68 = Utf8               main\n+   #69 = Methodref          #47.#70       // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #70 = NameAndType        #71:#72       // getClass:()Ljava/lang/Class;\n+   #71 = Utf8               getClass\n+   #72 = Utf8               ()Ljava/lang/Class;\n+   #73 = Methodref          #26.#74       // java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n+   #74 = NameAndType        #75:#76       // getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n+   #75 = Utf8               getMethod\n+   #76 = Utf8               (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n+   #77 = Methodref          #78.#79       // java/lang/reflect/Method.getModifiers:()I\n+   #78 = Class              #80           // java/lang/reflect/Method\n+   #79 = NameAndType        #81:#82       // getModifiers:()I\n+   #80 = Utf8               java/lang/reflect/Method\n+   #81 = Utf8               getModifiers\n+   #82 = Utf8               ()I\n+   #83 = Methodref          #78.#84       // java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;\n+   #84 = NameAndType        #85:#72       // getReturnType:()Ljava/lang/Class;\n+   #85 = Utf8               getReturnType\n+   #86 = Methodref          #87.#88       // java/lang/reflect/Modifier.isPublic:(I)Z\n+   #87 = Class              #89           // java/lang/reflect/Modifier\n+   #88 = NameAndType        #90:#91       // isPublic:(I)Z\n+   #89 = Utf8               java/lang/reflect/Modifier\n+   #90 = Utf8               isPublic\n+   #91 = Utf8               (I)Z\n+   #92 = Methodref          #87.#93       // java/lang/reflect/Modifier.isStatic:(I)Z\n+   #93 = NameAndType        #94:#91       // isStatic:(I)Z\n+   #94 = Utf8               isStatic\n+   #95 = Methodref          #87.#96       // java/lang/reflect/Modifier.isAbstract:(I)Z\n+   #96 = NameAndType        #97:#91       // isAbstract:(I)Z\n+   #97 = Utf8               isAbstract\n+   #98 = Fieldref           #99.#100      // java/lang/Void.TYPE:Ljava/lang/Class;\n+   #99 = Class              #101          // java/lang/Void\n+  #100 = NameAndType        #102:#103     // TYPE:Ljava/lang/Class;\n+  #101 = Utf8               java/lang/Void\n+  #102 = Utf8               TYPE\n+  #103 = Utf8               Ljava/lang/Class;\n+  #104 = Class              #105          // java/lang/NoSuchMethodException\n+  #105 = Utf8               java/lang/NoSuchMethodException\n+  #106 = Methodref          #104.#48      // java/lang/NoSuchMethodException.\"<init>\":()V\n+  #107 = Fieldref           #4.#108       // java/lang/System.out:Ljava/io/PrintStream;\n+  #108 = NameAndType        #109:#110     // out:Ljava/io/PrintStream;\n+  #109 = Utf8               out\n+  #110 = Utf8               Ljava/io/PrintStream;\n+  #111 = Class              #112          // java/lang/StringBuilder\n+  #112 = Utf8               java/lang/StringBuilder\n+  #113 = Methodref          #111.#48      // java/lang/StringBuilder.\"<init>\":()V\n+  #114 = String             #115          // In class\n+  #115 = Utf8               In class\n+  #116 = Methodref          #111.#117     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #117 = NameAndType        #118:#119     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #118 = Utf8               append\n+  #119 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #120 = String             #121          // : public static void main(String[] argv) is not defined\n+  #121 = Utf8               : public static void main(String[] argv) is not defined\n+  #122 = Methodref          #111.#40      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #123 = Methodref          #124.#125     // java/io/PrintStream.println:(Ljava/lang/String;)V\n+  #124 = Class              #126          // java/io/PrintStream\n+  #125 = NameAndType        #127:#24      // println:(Ljava/lang/String;)V\n+  #126 = Utf8               java/io/PrintStream\n+  #127 = Utf8               println\n+  #128 = Methodref          #78.#129      // java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #129 = NameAndType        #130:#131     // invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #130 = Utf8               invoke\n+  #131 = Utf8               (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #132 = Methodref          #37.#133      // java/lang/Exception.printStackTrace:()V\n+  #133 = NameAndType        #134:#50      // printStackTrace:()V\n+  #134 = Utf8               printStackTrace\n+  #135 = String             #136          // Missing class name.\n+  #136 = Utf8               Missing class name.\n+  #137 = Methodref          #4.#138       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #138 = NameAndType        #139:#140     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #139 = Utf8               arraycopy\n+  #140 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #141 = Methodref          #52.#48       // org/apache/bcel/util/JavaWrapper.\"<init>\":()V\n+  #142 = Methodref          #52.#143      // org/apache/bcel/util/JavaWrapper.runMain:(Ljava/lang/String;[Ljava/lang/String;)V\n+  #143 = NameAndType        #144:#145     // runMain:(Ljava/lang/String;[Ljava/lang/String;)V\n+  #144 = Utf8               runMain\n+  #145 = Utf8               (Ljava/lang/String;[Ljava/lang/String;)V\n+  #146 = Utf8               Code\n+  #147 = Utf8               LineNumberTable\n+  #148 = Utf8               StackMapTable\n+  #149 = Class              #150          // \"[Ljava/lang/String;\"\n+  #150 = Utf8               [Ljava/lang/String;\n+  #151 = Utf8               Exceptions\n+  #152 = Class              #153          // java/lang/ClassNotFoundException\n+  #153 = Utf8               java/lang/ClassNotFoundException\n+  #154 = Utf8               ([Ljava/lang/String;)V\n+  #155 = Utf8               SourceFile\n+  #156 = Utf8               JavaWrapper.java\n {\n   private final java.lang.ClassLoader loader;\n     descriptor: Ljava/lang/ClassLoader;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private static java.lang.ClassLoader getClassLoader();\n     descriptor: ()Ljava/lang/ClassLoader;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=0\n          0: ldc           #1                  // String bcel.classloader\n-         2: invokestatic  #2                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+         2: invokestatic  #3                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n          5: astore_0\n          6: aload_0\n          7: ifnull        19\n-        10: ldc           #3                  // String\n+        10: ldc           #9                  // String\n         12: aload_0\n-        13: invokevirtual #4                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        13: invokevirtual #11                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         16: ifeq          29\n-        19: new           #5                  // class java/lang/IllegalStateException\n+        19: new           #17                 // class java/lang/IllegalStateException\n         22: dup\n-        23: ldc           #6                  // String The property \\'bcel.classloader\\' must be defined\n-        25: invokespecial #7                  // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        23: ldc           #19                 // String The property \\'bcel.classloader\\' must be defined\n+        25: invokespecial #21                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         28: athrow\n         29: aload_0\n-        30: invokestatic  #8                  // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;\n-        33: invokevirtual #9                  // Method java/lang/Class.newInstance:()Ljava/lang/Object;\n-        36: checkcast     #10                 // class java/lang/ClassLoader\n+        30: invokestatic  #25                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;\n+        33: invokevirtual #31                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;\n+        36: checkcast     #35                 // class java/lang/ClassLoader\n         39: areturn\n         40: astore_1\n-        41: new           #5                  // class java/lang/IllegalStateException\n+        41: new           #17                 // class java/lang/IllegalStateException\n         44: dup\n         45: aload_1\n-        46: invokevirtual #12                 // Method java/lang/Exception.toString:()Ljava/lang/String;\n+        46: invokevirtual #39                 // Method java/lang/Exception.toString:()Ljava/lang/String;\n         49: aload_1\n-        50: invokespecial #13                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        50: invokespecial #43                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         53: athrow\n       Exception table:\n          from    to  target type\n             29    39    40   Class java/lang/Exception\n       LineNumberTable:\n         line 44: 0\n         line 45: 6\n@@ -221,106 +221,106 @@\n \n   public org.apache.bcel.util.JavaWrapper(java.lang.ClassLoader);\n     descriptor: (Ljava/lang/ClassLoader;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #14                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #46                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #15                 // Field loader:Ljava/lang/ClassLoader;\n+         6: putfield      #51                 // Field loader:Ljava/lang/ClassLoader;\n          9: return\n       LineNumberTable:\n         line 56: 0\n         line 57: 4\n         line 58: 9\n \n   public org.apache.bcel.util.JavaWrapper();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #16                 // Method getClassLoader:()Ljava/lang/ClassLoader;\n-         4: invokespecial #17                 // Method \"<init>\":(Ljava/lang/ClassLoader;)V\n+         1: invokestatic  #57                 // Method getClassLoader:()Ljava/lang/ClassLoader;\n+         4: invokespecial #61                 // Method \"<init>\":(Ljava/lang/ClassLoader;)V\n          7: return\n       LineNumberTable:\n         line 62: 0\n         line 63: 7\n \n   public void runMain(java.lang.String, java.lang.String[]) throws java.lang.ClassNotFoundException;\n     descriptor: (Ljava/lang/String;[Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=7, args_size=3\n          0: aload_0\n-         1: getfield      #15                 // Field loader:Ljava/lang/ClassLoader;\n+         1: getfield      #51                 // Field loader:Ljava/lang/ClassLoader;\n          4: aload_1\n-         5: invokevirtual #18                 // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;\n+         5: invokevirtual #64                 // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;\n          8: astore_3\n          9: aconst_null\n         10: astore        4\n         12: aload_3\n-        13: ldc           #19                 // String main\n+        13: ldc           #67                 // String main\n         15: iconst_1\n-        16: anewarray     #20                 // class java/lang/Class\n+        16: anewarray     #26                 // class java/lang/Class\n         19: dup\n         20: iconst_0\n         21: aload_2\n-        22: invokevirtual #21                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        22: invokevirtual #69                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         25: aastore\n-        26: invokevirtual #22                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n+        26: invokevirtual #73                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n         29: astore        4\n         31: aload         4\n-        33: invokevirtual #23                 // Method java/lang/reflect/Method.getModifiers:()I\n+        33: invokevirtual #77                 // Method java/lang/reflect/Method.getModifiers:()I\n         36: istore        5\n         38: aload         4\n-        40: invokevirtual #24                 // Method java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;\n+        40: invokevirtual #83                 // Method java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;\n         43: astore        6\n         45: iload         5\n-        47: invokestatic  #25                 // Method java/lang/reflect/Modifier.isPublic:(I)Z\n+        47: invokestatic  #86                 // Method java/lang/reflect/Modifier.isPublic:(I)Z\n         50: ifeq          77\n         53: iload         5\n-        55: invokestatic  #26                 // Method java/lang/reflect/Modifier.isStatic:(I)Z\n+        55: invokestatic  #92                 // Method java/lang/reflect/Modifier.isStatic:(I)Z\n         58: ifeq          77\n         61: iload         5\n-        63: invokestatic  #27                 // Method java/lang/reflect/Modifier.isAbstract:(I)Z\n+        63: invokestatic  #95                 // Method java/lang/reflect/Modifier.isAbstract:(I)Z\n         66: ifne          77\n         69: aload         6\n-        71: getstatic     #28                 // Field java/lang/Void.TYPE:Ljava/lang/Class;\n+        71: getstatic     #98                 // Field java/lang/Void.TYPE:Ljava/lang/Class;\n         74: if_acmpeq     85\n-        77: new           #29                 // class java/lang/NoSuchMethodException\n+        77: new           #104                // class java/lang/NoSuchMethodException\n         80: dup\n-        81: invokespecial #30                 // Method java/lang/NoSuchMethodException.\"<init>\":()V\n+        81: invokespecial #106                // Method java/lang/NoSuchMethodException.\"<init>\":()V\n         84: athrow\n         85: goto          121\n         88: astore        5\n-        90: getstatic     #31                 // Field java/lang/System.out:Ljava/io/PrintStream;\n-        93: new           #32                 // class java/lang/StringBuilder\n+        90: getstatic     #107                // Field java/lang/System.out:Ljava/io/PrintStream;\n+        93: new           #111                // class java/lang/StringBuilder\n         96: dup\n-        97: invokespecial #33                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       100: ldc           #34                 // String In class\n-       102: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        97: invokespecial #113                // Method java/lang/StringBuilder.\"<init>\":()V\n+       100: ldc           #114                // String In class\n+       102: invokevirtual #116                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        105: aload_1\n-       106: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       109: ldc           #36                 // String : public static void main(String[] argv) is not defined\n-       111: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       114: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       117: invokevirtual #38                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n+       106: invokevirtual #116                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       109: ldc           #120                // String : public static void main(String[] argv) is not defined\n+       111: invokevirtual #116                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       114: invokevirtual #122                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       117: invokevirtual #123                // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n        120: return\n        121: aload         4\n        123: aconst_null\n        124: aload_2\n-       125: invokevirtual #39                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n+       125: invokevirtual #128                // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n        128: pop\n        129: goto          139\n        132: astore        5\n        134: aload         5\n-       136: invokevirtual #40                 // Method java/lang/Exception.printStackTrace:()V\n+       136: invokevirtual #132                // Method java/lang/Exception.printStackTrace:()V\n        139: return\n       Exception table:\n          from    to  target type\n             12    85    88   Class java/lang/NoSuchMethodException\n            121   129   132   Class java/lang/Exception\n       LineNumberTable:\n         line 72: 0\n@@ -359,43 +359,43 @@\n     descriptor: ([Ljava/lang/String;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=4, args_size=1\n          0: aload_0\n          1: arraylength\n          2: ifne          14\n-         5: getstatic     #31                 // Field java/lang/System.out:Ljava/io/PrintStream;\n-         8: ldc           #41                 // String Missing class name.\n-        10: invokevirtual #38                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n+         5: getstatic     #107                // Field java/lang/System.out:Ljava/io/PrintStream;\n+         8: ldc           #135                // String Missing class name.\n+        10: invokevirtual #123                // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n         13: return\n         14: aload_0\n         15: iconst_0\n         16: aaload\n         17: astore_1\n         18: aload_0\n         19: arraylength\n         20: iconst_1\n         21: isub\n-        22: anewarray     #42                 // class java/lang/String\n+        22: anewarray     #12                 // class java/lang/String\n         25: astore_2\n         26: aload_0\n         27: iconst_1\n         28: aload_2\n         29: iconst_0\n         30: aload_2\n         31: arraylength\n-        32: invokestatic  #43                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-        35: new           #44                 // class org/apache/bcel/util/JavaWrapper\n+        32: invokestatic  #137                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        35: new           #52                 // class org/apache/bcel/util/JavaWrapper\n         38: dup\n-        39: invokespecial #45                 // Method \"<init>\":()V\n+        39: invokespecial #141                // Method \"<init>\":()V\n         42: astore_3\n         43: aload_3\n         44: aload_1\n         45: aload_2\n-        46: invokevirtual #46                 // Method runMain:(Ljava/lang/String;[Ljava/lang/String;)V\n+        46: invokevirtual #142                // Method runMain:(Ljava/lang/String;[Ljava/lang/String;)V\n         49: return\n       LineNumberTable:\n         line 103: 0\n         line 104: 5\n         line 105: 13\n         line 107: 14\n         line 108: 18\n"}]}
