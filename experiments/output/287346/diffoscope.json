{"diffoscope-json-version": 1, "source1": "first/CodecEncoding.class", "source2": "second/CodecEncoding.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -9,79 +9,79 @@\n import java.util.Map;\n \n public class CodecEncoding\n {\n     private static final BHSDCodec[] canonicalCodec;\n     private static Map canonicalCodecsToSpecifiers;\n     \n-    public static Codec getCodec(final int i, final InputStream inputStream, final Codec codec) throws IOException, Pack200Exception {\n+    public static Codec getCodec(final int n, final InputStream inputStream, final Codec codec) throws IOException, Pack200Exception {\n         if (CodecEncoding.canonicalCodec.length != 116) {\n             throw new Error(\"Canonical encodings have been incorrectly modified\");\n         }\n-        if (i < 0) {\n+        if (n < 0) {\n             throw new IllegalArgumentException(\"Encoding cannot be less than zero\");\n         }\n-        if (i == 0) {\n+        if (n == 0) {\n             return codec;\n         }\n-        if (i <= 115) {\n-            return (Codec)CodecEncoding.canonicalCodec[i];\n+        if (n <= 115) {\n+            return (Codec)CodecEncoding.canonicalCodec[n];\n         }\n-        if (i == 116) {\n+        if (n == 116) {\n             final int read = inputStream.read();\n             if (read == -1) {\n                 throw new EOFException(\"End of buffer read whilst trying to decode codec\");\n             }\n-            final int n = read & 0x1;\n-            final int n2 = read >> 1 & 0x3;\n-            final int n3 = (read >> 3 & 0x7) + 1;\n+            final int n2 = read & 0x1;\n+            final int n3 = read >> 1 & 0x3;\n+            final int n4 = (read >> 3 & 0x7) + 1;\n             final int read2 = inputStream.read();\n             if (read2 == -1) {\n                 throw new EOFException(\"End of buffer read whilst trying to decode codec\");\n             }\n-            return (Codec)new BHSDCodec(n3, read2 + 1, n2, n);\n+            return (Codec)new BHSDCodec(n4, read2 + 1, n3, n2);\n         }\n-        else if (i >= 117 && i <= 140) {\n-            final int n4 = i - 117;\n-            final int n5 = n4 & 0x3;\n-            final boolean b = (n4 >> 2 & 0x1) == 0x1;\n-            final boolean b2 = (n4 >> 3 & 0x1) == 0x1;\n-            final boolean b3 = (n4 >> 4 & 0x1) == 0x1;\n+        else if (n >= 117 && n <= 140) {\n+            final int n5 = n - 117;\n+            final int n6 = n5 & 0x3;\n+            final boolean b = (n5 >> 2 & 0x1) == 0x1;\n+            final boolean b2 = (n5 >> 3 & 0x1) == 0x1;\n+            final boolean b3 = (n5 >> 4 & 0x1) == 0x1;\n             if (b2 && b3) {\n                 throw new Pack200Exception(\"ADef and BDef should never both be true\");\n             }\n-            final int n6 = ((b ? inputStream.read() : 3) + 1) * (int)Math.pow(16.0, n5);\n+            final int n7 = ((b ? inputStream.read() : 3) + 1) * (int)Math.pow(16.0, n6);\n             Codec codec2;\n             if (b2) {\n                 codec2 = codec;\n             }\n             else {\n                 codec2 = getCodec(inputStream.read(), inputStream, codec);\n             }\n             Codec codec3;\n             if (b3) {\n                 codec3 = codec;\n             }\n             else {\n                 codec3 = getCodec(inputStream.read(), inputStream, codec);\n             }\n-            return (Codec)new RunCodec(n6, codec2, codec3);\n+            return (Codec)new RunCodec(n7, codec2, codec3);\n         }\n         else {\n-            if (i < 141 || i > 188) {\n-                throw new Pack200Exception(\"Invalid codec encoding byte (\" + i + \") found\");\n+            if (n < 141 || n > 188) {\n+                throw new Pack200Exception(\"Invalid codec encoding byte (\" + n + \") found\");\n             }\n-            final int n7 = i - 141;\n-            final boolean b4 = (n7 & 0x1) == 0x1;\n-            final boolean b5 = (n7 >> 1 & 0x1) == 0x1;\n-            final int n8 = n7 >> 2;\n-            final boolean b6 = n8 != 0;\n-            final int n9 = (new int[] { 0, 4, 8, 16, 32, 64, 128, 192, 224, 240, 248, 252 })[n8];\n+            final int n8 = n - 141;\n+            final boolean b4 = (n8 & 0x1) == 0x1;\n+            final boolean b5 = (n8 >> 1 & 0x1) == 0x1;\n+            final int n9 = n8 >> 2;\n+            final boolean b6 = n9 != 0;\n+            final int n10 = (new int[] { 0, 4, 8, 16, 32, 64, 128, 192, 224, 240, 248, 252 })[n9];\n             if (b6) {\n-                return (Codec)new PopulationCodec(b4 ? codec : getCodec(inputStream.read(), inputStream, codec), n9, b5 ? codec : getCodec(inputStream.read(), inputStream, codec));\n+                return (Codec)new PopulationCodec(b4 ? codec : getCodec(inputStream.read(), inputStream, codec), n10, b5 ? codec : getCodec(inputStream.read(), inputStream, codec));\n             }\n             return (Codec)new PopulationCodec(b4 ? codec : getCodec(inputStream.read(), inputStream, codec), getCodec(inputStream.read(), inputStream, codec), b5 ? codec : getCodec(inputStream.read(), inputStream, codec));\n         }\n     }\n     \n     public static int getSpecifierForDefaultCodec(final BHSDCodec bhsdCodec) {\n         return getSpecifier(bhsdCodec, (Codec)null)[0];\n"}]}
