{"diffoscope-json-version": 1, "source1": "first/CountingPathVisitor.class", "source2": "second/CountingPathVisitor.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,8 +1,8 @@\n-  SHA-256 checksum 389550e9691c0e5e517b9026d54d13aab622a971b963ef67721398aa2ea5f19b\n+  SHA-256 checksum 17d72ac5f519e423e892845b91fe2434a5c14a48bec522f9e5d389ba45ef7643\n   Compiled from \"CountingPathVisitor.java\"\n public class org.apache.commons.io.file.CountingPathVisitor extends org.apache.commons.io.file.SimplePathVisitor\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/io/file/CountingPathVisitor\n   super_class: #40                        // org/apache/commons/io/file/SimplePathVisitor\n@@ -24,34 +24,34 @@\n    #14 = Fieldref           #1.#115       // org/apache/commons/io/file/CountingPathVisitor.fileFilter:Lorg/apache/commons/io/file/PathFilter;\n    #15 = String             #49           // dirFilter\n    #16 = Fieldref           #1.#116       // org/apache/commons/io/file/CountingPathVisitor.dirFilter:Lorg/apache/commons/io/file/PathFilter;\n    #17 = Methodref          #110.#117     // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n    #18 = Class              #118          // java/lang/Object\n    #19 = Methodref          #110.#119     // java/util/Objects.hash:([Ljava/lang/Object;)I\n    #20 = Methodref          #1.#120       // org/apache/commons/io/file/CountingPathVisitor.updateDirCounter:(Ljava/nio/file/Path;Ljava/io/IOException;)V\n-   #21 = Fieldref           #121.#122     // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-   #22 = InterfaceMethodref #13.#123      // org/apache/commons/io/file/PathFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #23 = Fieldref           #121.#124     // java/nio/file/FileVisitResult.SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n-   #24 = Methodref          #18.#125      // java/lang/Object.toString:()Ljava/lang/String;\n-   #25 = InterfaceMethodref #10.#126      // org/apache/commons/io/file/Counters$PathCounters.getDirectoryCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n-   #26 = InterfaceMethodref #127.#128     // org/apache/commons/io/file/Counters$Counter.increment:()V\n-   #27 = InterfaceMethodref #10.#129      // org/apache/commons/io/file/Counters$PathCounters.getFileCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n-   #28 = InterfaceMethodref #10.#130      // org/apache/commons/io/file/Counters$PathCounters.getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n-   #29 = InterfaceMethodref #131.#132     // java/nio/file/attribute/BasicFileAttributes.size:()J\n-   #30 = InterfaceMethodref #127.#133     // org/apache/commons/io/file/Counters$Counter.add:(J)V\n-   #31 = Class              #134          // java/nio/file/LinkOption\n-   #32 = Methodref          #135.#136     // java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #33 = Methodref          #1.#137       // org/apache/commons/io/file/CountingPathVisitor.updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n-   #34 = Class              #138          // java/nio/file/Path\n-   #35 = Methodref          #1.#139       // org/apache/commons/io/file/CountingPathVisitor.postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-   #36 = Methodref          #1.#140       // org/apache/commons/io/file/CountingPathVisitor.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #37 = Methodref          #1.#141       // org/apache/commons/io/file/CountingPathVisitor.preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #38 = Class              #142          // java/lang/String\n-   #39 = Fieldref           #1.#143       // org/apache/commons/io/file/CountingPathVisitor.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-   #40 = Class              #144          // org/apache/commons/io/file/SimplePathVisitor\n+   #21 = Fieldref           #86.#121      // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+   #22 = InterfaceMethodref #13.#122      // org/apache/commons/io/file/PathFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #23 = Fieldref           #86.#123      // java/nio/file/FileVisitResult.SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n+   #24 = Methodref          #18.#124      // java/lang/Object.toString:()Ljava/lang/String;\n+   #25 = InterfaceMethodref #10.#125      // org/apache/commons/io/file/Counters$PathCounters.getDirectoryCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n+   #26 = InterfaceMethodref #126.#127     // org/apache/commons/io/file/Counters$Counter.increment:()V\n+   #27 = InterfaceMethodref #10.#128      // org/apache/commons/io/file/Counters$PathCounters.getFileCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n+   #28 = InterfaceMethodref #10.#129      // org/apache/commons/io/file/Counters$PathCounters.getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n+   #29 = InterfaceMethodref #130.#131     // java/nio/file/attribute/BasicFileAttributes.size:()J\n+   #30 = InterfaceMethodref #126.#132     // org/apache/commons/io/file/Counters$Counter.add:(J)V\n+   #31 = Class              #133          // java/nio/file/LinkOption\n+   #32 = Methodref          #134.#135     // java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #33 = Methodref          #1.#136       // org/apache/commons/io/file/CountingPathVisitor.updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+   #34 = Class              #137          // java/nio/file/Path\n+   #35 = Methodref          #1.#138       // org/apache/commons/io/file/CountingPathVisitor.postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+   #36 = Methodref          #1.#139       // org/apache/commons/io/file/CountingPathVisitor.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #37 = Methodref          #1.#140       // org/apache/commons/io/file/CountingPathVisitor.preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #38 = Class              #141          // java/lang/String\n+   #39 = Fieldref           #1.#142       // org/apache/commons/io/file/CountingPathVisitor.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+   #40 = Class              #143          // org/apache/commons/io/file/SimplePathVisitor\n    #41 = Utf8               EMPTY_STRING_ARRAY\n    #42 = Utf8               [Ljava/lang/String;\n    #43 = Utf8               pathCounters\n    #44 = Utf8               PathCounters\n    #45 = Utf8               InnerClasses\n    #46 = Utf8               Lorg/apache/commons/io/file/Counters$PathCounters;\n    #47 = Utf8               fileFilter\n@@ -82,22 +82,22 @@\n    #72 = Utf8               postVisitDirectory\n    #73 = Utf8               (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n    #74 = Utf8               dir\n    #75 = Utf8               Ljava/nio/file/Path;\n    #76 = Utf8               exc\n    #77 = Utf8               Ljava/io/IOException;\n    #78 = Utf8               Exceptions\n-   #79 = Class              #145          // java/io/IOException\n+   #79 = Class              #144          // java/io/IOException\n    #80 = Utf8               preVisitDirectory\n    #81 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n    #82 = Utf8               attributes\n    #83 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n    #84 = Utf8               accept\n    #85 = Utf8               Ljava/nio/file/FileVisitResult;\n-   #86 = Class              #146          // java/nio/file/FileVisitResult\n+   #86 = Class              #145          // java/nio/file/FileVisitResult\n    #87 = Utf8               toString\n    #88 = Utf8               ()Ljava/lang/String;\n    #89 = Utf8               updateDirCounter\n    #90 = Utf8               (Ljava/nio/file/Path;Ljava/io/IOException;)V\n    #91 = Utf8               updateFileCounters\n    #92 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n    #93 = Utf8               file\n@@ -105,88 +105,87 @@\n    #95 = Utf8               (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n    #96 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n    #97 = Utf8               <clinit>\n    #98 = Utf8               ()V\n    #99 = Utf8               SourceFile\n   #100 = Utf8               CountingPathVisitor.java\n   #101 = Utf8               org/apache/commons/io/file/CountingPathVisitor\n-  #102 = Class              #147          // org/apache/commons/io/file/Counters\n-  #103 = NameAndType        #148:#69      // bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #102 = Class              #146          // org/apache/commons/io/file/Counters\n+  #103 = NameAndType        #147:#69      // bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n   #104 = NameAndType        #55:#56       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-  #105 = NameAndType        #149:#69      // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #106 = Class              #150          // org/apache/commons/io/filefilter/TrueFileFilter\n-  #107 = NameAndType        #151:#152     // INSTANCE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #105 = NameAndType        #148:#69      // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #106 = Class              #149          // org/apache/commons/io/filefilter/TrueFileFilter\n+  #107 = NameAndType        #150:#151     // INSTANCE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n   #108 = NameAndType        #55:#61       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n   #109 = NameAndType        #55:#98       // \"<init>\":()V\n-  #110 = Class              #153          // java/util/Objects\n-  #111 = NameAndType        #154:#155     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #110 = Class              #152          // java/util/Objects\n+  #111 = NameAndType        #153:#154     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n   #112 = Utf8               org/apache/commons/io/file/Counters$PathCounters\n   #113 = NameAndType        #43:#46       // pathCounters:Lorg/apache/commons/io/file/Counters$PathCounters;\n   #114 = Utf8               org/apache/commons/io/file/PathFilter\n   #115 = NameAndType        #47:#48       // fileFilter:Lorg/apache/commons/io/file/PathFilter;\n   #116 = NameAndType        #49:#48       // dirFilter:Lorg/apache/commons/io/file/PathFilter;\n-  #117 = NameAndType        #62:#156      // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #117 = NameAndType        #62:#155      // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n   #118 = Utf8               java/lang/Object\n-  #119 = NameAndType        #157:#158     // hash:([Ljava/lang/Object;)I\n+  #119 = NameAndType        #156:#157     // hash:([Ljava/lang/Object;)I\n   #120 = NameAndType        #89:#90       // updateDirCounter:(Ljava/nio/file/Path;Ljava/io/IOException;)V\n-  #121 = Class              #146          // java/nio/file/FileVisitResult\n-  #122 = NameAndType        #159:#85      // CONTINUE:Ljava/nio/file/FileVisitResult;\n-  #123 = NameAndType        #84:#81       // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #124 = NameAndType        #160:#85      // SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n-  #125 = NameAndType        #87:#88       // toString:()Ljava/lang/String;\n-  #126 = NameAndType        #161:#163     // getDirectoryCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n-  #127 = Class              #164          // org/apache/commons/io/file/Counters$Counter\n-  #128 = NameAndType        #165:#98      // increment:()V\n-  #129 = NameAndType        #166:#163     // getFileCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n-  #130 = NameAndType        #167:#163     // getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n-  #131 = Class              #168          // java/nio/file/attribute/BasicFileAttributes\n-  #132 = NameAndType        #169:#170     // size:()J\n-  #133 = NameAndType        #171:#172     // add:(J)V\n-  #134 = Utf8               java/nio/file/LinkOption\n-  #135 = Class              #173          // java/nio/file/Files\n-  #136 = NameAndType        #174:#175     // exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #137 = NameAndType        #91:#92       // updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n-  #138 = Utf8               java/nio/file/Path\n-  #139 = NameAndType        #72:#73       // postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-  #140 = NameAndType        #94:#81       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #141 = NameAndType        #80:#81       // preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #142 = Utf8               java/lang/String\n-  #143 = NameAndType        #41:#42       // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-  #144 = Utf8               org/apache/commons/io/file/SimplePathVisitor\n-  #145 = Utf8               java/io/IOException\n-  #146 = Utf8               java/nio/file/FileVisitResult\n-  #147 = Utf8               org/apache/commons/io/file/Counters\n-  #148 = Utf8               bigIntegerPathCounters\n-  #149 = Utf8               longPathCounters\n-  #150 = Utf8               org/apache/commons/io/filefilter/TrueFileFilter\n-  #151 = Utf8               INSTANCE\n-  #152 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #153 = Utf8               java/util/Objects\n-  #154 = Utf8               requireNonNull\n-  #155 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #156 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #157 = Utf8               hash\n-  #158 = Utf8               ([Ljava/lang/Object;)I\n-  #159 = Utf8               CONTINUE\n-  #160 = Utf8               SKIP_SUBTREE\n-  #161 = Utf8               getDirectoryCounter\n-  #162 = Utf8               Counter\n-  #163 = Utf8               ()Lorg/apache/commons/io/file/Counters$Counter;\n-  #164 = Utf8               org/apache/commons/io/file/Counters$Counter\n-  #165 = Utf8               increment\n-  #166 = Utf8               getFileCounter\n-  #167 = Utf8               getByteCounter\n-  #168 = Utf8               java/nio/file/attribute/BasicFileAttributes\n-  #169 = Utf8               size\n-  #170 = Utf8               ()J\n-  #171 = Utf8               add\n-  #172 = Utf8               (J)V\n-  #173 = Utf8               java/nio/file/Files\n-  #174 = Utf8               exists\n-  #175 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #121 = NameAndType        #158:#85      // CONTINUE:Ljava/nio/file/FileVisitResult;\n+  #122 = NameAndType        #84:#81       // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #123 = NameAndType        #159:#85      // SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n+  #124 = NameAndType        #87:#88       // toString:()Ljava/lang/String;\n+  #125 = NameAndType        #160:#162     // getDirectoryCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n+  #126 = Class              #163          // org/apache/commons/io/file/Counters$Counter\n+  #127 = NameAndType        #164:#98      // increment:()V\n+  #128 = NameAndType        #165:#162     // getFileCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n+  #129 = NameAndType        #166:#162     // getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n+  #130 = Class              #167          // java/nio/file/attribute/BasicFileAttributes\n+  #131 = NameAndType        #168:#169     // size:()J\n+  #132 = NameAndType        #170:#171     // add:(J)V\n+  #133 = Utf8               java/nio/file/LinkOption\n+  #134 = Class              #172          // java/nio/file/Files\n+  #135 = NameAndType        #173:#174     // exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #136 = NameAndType        #91:#92       // updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+  #137 = Utf8               java/nio/file/Path\n+  #138 = NameAndType        #72:#73       // postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+  #139 = NameAndType        #94:#81       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #140 = NameAndType        #80:#81       // preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #141 = Utf8               java/lang/String\n+  #142 = NameAndType        #41:#42       // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+  #143 = Utf8               org/apache/commons/io/file/SimplePathVisitor\n+  #144 = Utf8               java/io/IOException\n+  #145 = Utf8               java/nio/file/FileVisitResult\n+  #146 = Utf8               org/apache/commons/io/file/Counters\n+  #147 = Utf8               bigIntegerPathCounters\n+  #148 = Utf8               longPathCounters\n+  #149 = Utf8               org/apache/commons/io/filefilter/TrueFileFilter\n+  #150 = Utf8               INSTANCE\n+  #151 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #152 = Utf8               java/util/Objects\n+  #153 = Utf8               requireNonNull\n+  #154 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #155 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #156 = Utf8               hash\n+  #157 = Utf8               ([Ljava/lang/Object;)I\n+  #158 = Utf8               CONTINUE\n+  #159 = Utf8               SKIP_SUBTREE\n+  #160 = Utf8               getDirectoryCounter\n+  #161 = Utf8               Counter\n+  #162 = Utf8               ()Lorg/apache/commons/io/file/Counters$Counter;\n+  #163 = Utf8               org/apache/commons/io/file/Counters$Counter\n+  #164 = Utf8               increment\n+  #165 = Utf8               getFileCounter\n+  #166 = Utf8               getByteCounter\n+  #167 = Utf8               java/nio/file/attribute/BasicFileAttributes\n+  #168 = Utf8               size\n+  #169 = Utf8               ()J\n+  #170 = Utf8               add\n+  #171 = Utf8               (J)V\n+  #172 = Utf8               java/nio/file/Files\n+  #173 = Utf8               exists\n+  #174 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n {\n   static final java.lang.String[] EMPTY_STRING_ARRAY;\n     descriptor: [Ljava/lang/String;\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n \n   private final org.apache.commons.io.file.Counters$PathCounters pathCounters;\n     descriptor: Lorg/apache/commons/io/file/Counters$PathCounters;\n@@ -581,8 +580,8 @@\n          7: return\n       LineNumberTable:\n         line 37: 0\n }\n SourceFile: \"CountingPathVisitor.java\"\n InnerClasses:\n   public static #44= #10 of #102;         // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n-  public static #162= #127 of #102;       // Counter=class org/apache/commons/io/file/Counters$Counter of class org/apache/commons/io/file/Counters\n+  public static #161= #126 of #102;       // Counter=class org/apache/commons/io/file/Counters$Counter of class org/apache/commons/io/file/Counters\n"}]}
