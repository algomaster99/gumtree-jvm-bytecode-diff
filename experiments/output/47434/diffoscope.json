{"diffoscope-json-version": 1, "source1": "first/FailableBiPredicate.class", "source2": "second/FailableBiPredicate.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -15,21 +15,21 @@\n     \n     default <T, U, E extends Throwable> FailableBiPredicate<T, U, E> truePredicate() {\n         return FailableBiPredicate.TRUE;\n     }\n     \n     default FailableBiPredicate<T, U, E> and(final FailableBiPredicate<? super T, ? super U, E> other) {\n         Objects.requireNonNull(other);\n-        return (t, u) -> this.test(t, u) && other.test(t, u);\n+        return (t, u) -> this.test(t, u) && failableBiPredicate.test(t, u);\n     }\n     \n     default FailableBiPredicate<T, U, E> negate() {\n         return (t, u) -> !this.test(t, u);\n     }\n     \n     default FailableBiPredicate<T, U, E> or(final FailableBiPredicate<? super T, ? super U, E> other) {\n         Objects.requireNonNull(other);\n-        return (t, u) -> this.test(t, u) || other.test(t, u);\n+        return (t, u) -> this.test(t, u) || failableBiPredicate.test(t, u);\n     }\n     \n     boolean test(final T p0, final U p1) throws E, Throwable;\n }\n"}]}
