{"diffoscope-json-version": 1, "source1": "first/MemoryLimitException.class", "source2": "second/MemoryLimitException.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,81 +1,76 @@\n-  SHA-256 checksum a7007dfd372f71e4c771cadee2c22d6850e1428987bd001ee8aa582d6b6792ec\n+  SHA-256 checksum 89e673b78f287df6c6c31f76f25a3d02015f430d7a96fa6d2fae2c17291d877b\n   Compiled from \"MemoryLimitException.java\"\n public class org.apache.commons.compress.MemoryLimitException extends java.io.IOException\n   minor version: 0\n-  major version: 52\n+  major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #14                         // org/apache/commons/compress/MemoryLimitException\n-  super_class: #15                        // java/io/IOException\n-  interfaces: 0, fields: 3, methods: 5, attributes: 1\n+  this_class: #7                          // org/apache/commons/compress/MemoryLimitException\n+  super_class: #8                         // java/io/IOException\n+  interfaces: 0, fields: 3, methods: 5, attributes: 3\n Constant pool:\n-   #1 = Methodref          #14.#42        // org/apache/commons/compress/MemoryLimitException.buildMessage:(JI)Ljava/lang/String;\n-   #2 = Methodref          #15.#43        // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #3 = Fieldref           #14.#44        // org/apache/commons/compress/MemoryLimitException.memoryNeededInKb:J\n-   #4 = Fieldref           #14.#45        // org/apache/commons/compress/MemoryLimitException.memoryLimitInKb:I\n-   #5 = Methodref          #15.#46        // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #6 = Class              #47            // java/lang/StringBuilder\n-   #7 = Methodref          #6.#48         // java/lang/StringBuilder.\"<init>\":()V\n-   #8 = Methodref          #6.#49         // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-   #9 = String             #50            //  kb of memory would be needed; limit was\n-  #10 = Methodref          #6.#51         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #11 = Methodref          #6.#52         // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-  #12 = String             #53            //  kb. If the file is not corrupt, consider increasing the memory limit.\n-  #13 = Methodref          #6.#54         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #14 = Class              #55            // org/apache/commons/compress/MemoryLimitException\n-  #15 = Class              #56            // java/io/IOException\n-  #16 = Utf8               serialVersionUID\n-  #17 = Utf8               J\n-  #18 = Utf8               ConstantValue\n-  #19 = Long               1l\n-  #21 = Utf8               memoryNeededInKb\n-  #22 = Utf8               memoryLimitInKb\n-  #23 = Utf8               I\n-  #24 = Utf8               <init>\n-  #25 = Utf8               (JI)V\n-  #26 = Utf8               Code\n-  #27 = Utf8               LineNumberTable\n-  #28 = Utf8               LocalVariableTable\n-  #29 = Utf8               this\n-  #30 = Utf8               Lorg/apache/commons/compress/MemoryLimitException;\n-  #31 = Utf8               (JILjava/lang/Exception;)V\n-  #32 = Utf8               e\n-  #33 = Utf8               Ljava/lang/Exception;\n-  #34 = Utf8               getMemoryNeededInKb\n-  #35 = Utf8               ()J\n-  #36 = Utf8               getMemoryLimitInKb\n-  #37 = Utf8               ()I\n-  #38 = Utf8               buildMessage\n-  #39 = Utf8               (JI)Ljava/lang/String;\n-  #40 = Utf8               SourceFile\n-  #41 = Utf8               MemoryLimitException.java\n-  #42 = NameAndType        #38:#39        // buildMessage:(JI)Ljava/lang/String;\n-  #43 = NameAndType        #24:#57        // \"<init>\":(Ljava/lang/String;)V\n-  #44 = NameAndType        #21:#17        // memoryNeededInKb:J\n-  #45 = NameAndType        #22:#23        // memoryLimitInKb:I\n-  #46 = NameAndType        #24:#58        // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #47 = Utf8               java/lang/StringBuilder\n-  #48 = NameAndType        #24:#59        // \"<init>\":()V\n-  #49 = NameAndType        #60:#61        // append:(J)Ljava/lang/StringBuilder;\n-  #50 = Utf8                kb of memory would be needed; limit was\n-  #51 = NameAndType        #60:#62        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #52 = NameAndType        #60:#63        // append:(I)Ljava/lang/StringBuilder;\n-  #53 = Utf8                kb. If the file is not corrupt, consider increasing the memory limit.\n-  #54 = NameAndType        #64:#65        // toString:()Ljava/lang/String;\n-  #55 = Utf8               org/apache/commons/compress/MemoryLimitException\n-  #56 = Utf8               java/io/IOException\n-  #57 = Utf8               (Ljava/lang/String;)V\n-  #58 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #59 = Utf8               ()V\n-  #60 = Utf8               append\n-  #61 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #62 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #63 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #64 = Utf8               toString\n-  #65 = Utf8               ()Ljava/lang/String;\n+   #1 = Methodref          #7.#35         // org/apache/commons/compress/MemoryLimitException.buildMessage:(JI)Ljava/lang/String;\n+   #2 = Methodref          #8.#36         // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #3 = Fieldref           #7.#37         // org/apache/commons/compress/MemoryLimitException.memoryNeededInKb:J\n+   #4 = Fieldref           #7.#38         // org/apache/commons/compress/MemoryLimitException.memoryLimitInKb:I\n+   #5 = Methodref          #8.#39         // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #6 = InvokeDynamic      #0:#43         // #0:makeConcatWithConstants:(JI)Ljava/lang/String;\n+   #7 = Class              #44            // org/apache/commons/compress/MemoryLimitException\n+   #8 = Class              #45            // java/io/IOException\n+   #9 = Utf8               serialVersionUID\n+  #10 = Utf8               J\n+  #11 = Utf8               ConstantValue\n+  #12 = Long               1l\n+  #14 = Utf8               memoryNeededInKb\n+  #15 = Utf8               memoryLimitInKb\n+  #16 = Utf8               I\n+  #17 = Utf8               <init>\n+  #18 = Utf8               (JI)V\n+  #19 = Utf8               Code\n+  #20 = Utf8               LineNumberTable\n+  #21 = Utf8               LocalVariableTable\n+  #22 = Utf8               this\n+  #23 = Utf8               Lorg/apache/commons/compress/MemoryLimitException;\n+  #24 = Utf8               (JILjava/lang/Exception;)V\n+  #25 = Utf8               e\n+  #26 = Utf8               Ljava/lang/Exception;\n+  #27 = Utf8               getMemoryNeededInKb\n+  #28 = Utf8               ()J\n+  #29 = Utf8               getMemoryLimitInKb\n+  #30 = Utf8               ()I\n+  #31 = Utf8               buildMessage\n+  #32 = Utf8               (JI)Ljava/lang/String;\n+  #33 = Utf8               SourceFile\n+  #34 = Utf8               MemoryLimitException.java\n+  #35 = NameAndType        #31:#32        // buildMessage:(JI)Ljava/lang/String;\n+  #36 = NameAndType        #17:#46        // \"<init>\":(Ljava/lang/String;)V\n+  #37 = NameAndType        #14:#10        // memoryNeededInKb:J\n+  #38 = NameAndType        #15:#16        // memoryLimitInKb:I\n+  #39 = NameAndType        #17:#47        // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #40 = Utf8               BootstrapMethods\n+  #41 = MethodHandle       6:#48          // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #42 = String             #49            // \\u0001 kb of memory would be needed; limit was \\u0001 kb. If the file is not corrupt, consider increasing the memory limit.\n+  #43 = NameAndType        #50:#32        // makeConcatWithConstants:(JI)Ljava/lang/String;\n+  #44 = Utf8               org/apache/commons/compress/MemoryLimitException\n+  #45 = Utf8               java/io/IOException\n+  #46 = Utf8               (Ljava/lang/String;)V\n+  #47 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #48 = Methodref          #51.#52        // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #49 = Utf8               \\u0001 kb of memory would be needed; limit was \\u0001 kb. If the file is not corrupt, consider increasing the memory limit.\n+  #50 = Utf8               makeConcatWithConstants\n+  #51 = Class              #53            // java/lang/invoke/StringConcatFactory\n+  #52 = NameAndType        #50:#57        // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #53 = Utf8               java/lang/invoke/StringConcatFactory\n+  #54 = Class              #59            // java/lang/invoke/MethodHandles$Lookup\n+  #55 = Utf8               Lookup\n+  #56 = Utf8               InnerClasses\n+  #57 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #58 = Class              #60            // java/lang/invoke/MethodHandles\n+  #59 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #60 = Utf8               java/lang/invoke/MethodHandles\n {\n   private static final long serialVersionUID = 1l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 1l\n \n   private final long memoryNeededInKb;\n@@ -173,28 +168,25 @@\n             0       5     0  this   Lorg/apache/commons/compress/MemoryLimitException;\n \n   private static java.lang.String buildMessage(long, int);\n     descriptor: (JI)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=2\n-         0: new           #6                  // class java/lang/StringBuilder\n-         3: dup\n-         4: invokespecial #7                  // Method java/lang/StringBuilder.\"<init>\":()V\n-         7: lload_0\n-         8: invokevirtual #8                  // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-        11: ldc           #9                  // String  kb of memory would be needed; limit was\n-        13: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        16: iload_2\n-        17: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        20: ldc           #12                 // String  kb. If the file is not corrupt, consider increasing the memory limit.\n-        22: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        25: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        28: areturn\n+         0: lload_0\n+         1: iload_2\n+         2: invokedynamic #6,  0              // InvokeDynamic #0:makeConcatWithConstants:(JI)Ljava/lang/String;\n+         7: areturn\n       LineNumberTable:\n         line 60: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      29     0 memoryNeededInKb   J\n-            0      29     2 memoryLimitInKb   I\n+            0       8     0 memoryNeededInKb   J\n+            0       8     2 memoryLimitInKb   I\n }\n SourceFile: \"MemoryLimitException.java\"\n+InnerClasses:\n+  public static final #55= #54 of #58;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+BootstrapMethods:\n+  0: #41 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #42 \\u0001 kb of memory would be needed; limit was \\u0001 kb. If the file is not corrupt, consider increasing the memory limit.\n"}]}
