{"diffoscope-json-version": 1, "source1": "first/JavaLanguageParser$CompilationUnitContext.class", "source2": "second/JavaLanguageParser$CompilationUnitContext.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -17,34 +17,34 @@\n         return (JavaLanguageParser.PackageDeclarationContext)this.getRuleContext((Class)JavaLanguageParser.PackageDeclarationContext.class, 0);\n     }\n     \n     public List<JavaLanguageParser.ImportDeclarationContext> importDeclaration() {\n         return this.getRuleContexts((Class)JavaLanguageParser.ImportDeclarationContext.class);\n     }\n     \n-    public JavaLanguageParser.ImportDeclarationContext importDeclaration(final int i) {\n-        return (JavaLanguageParser.ImportDeclarationContext)this.getRuleContext((Class)JavaLanguageParser.ImportDeclarationContext.class, i);\n+    public JavaLanguageParser.ImportDeclarationContext importDeclaration(final int n) {\n+        return (JavaLanguageParser.ImportDeclarationContext)this.getRuleContext((Class)JavaLanguageParser.ImportDeclarationContext.class, n);\n     }\n     \n     public List<JavaLanguageParser.TypeDeclarationContext> typeDeclaration() {\n         return this.getRuleContexts((Class)JavaLanguageParser.TypeDeclarationContext.class);\n     }\n     \n-    public JavaLanguageParser.TypeDeclarationContext typeDeclaration(final int i) {\n-        return (JavaLanguageParser.TypeDeclarationContext)this.getRuleContext((Class)JavaLanguageParser.TypeDeclarationContext.class, i);\n+    public JavaLanguageParser.TypeDeclarationContext typeDeclaration(final int n) {\n+        return (JavaLanguageParser.TypeDeclarationContext)this.getRuleContext((Class)JavaLanguageParser.TypeDeclarationContext.class, n);\n     }\n     \n-    public CompilationUnitContext(final ParserRuleContext parent, final int invokingState) {\n-        super(parent, invokingState);\n+    public CompilationUnitContext(final ParserRuleContext parserRuleContext, final int n) {\n+        super(parserRuleContext, n);\n     }\n     \n     public int getRuleIndex() {\n         return 0;\n     }\n     \n-    public <T> T accept(final ParseTreeVisitor<? extends T> visitor) {\n-        if (visitor instanceof JavaLanguageParserVisitor) {\n-            return (T)((JavaLanguageParserVisitor)visitor).visitCompilationUnit(this);\n+    public <T> T accept(final ParseTreeVisitor<? extends T> parseTreeVisitor) {\n+        if (parseTreeVisitor instanceof JavaLanguageParserVisitor) {\n+            return (T)((JavaLanguageParserVisitor)parseTreeVisitor).visitCompilationUnit(this);\n         }\n-        return (T)visitor.visitChildren((RuleNode)this);\n+        return (T)parseTreeVisitor.visitChildren((RuleNode)this);\n     }\n }\n"}]}
