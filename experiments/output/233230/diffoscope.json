{"diffoscope-json-version": 1, "source1": "first/MultiFileConfigurationBuilderProvider$WrapperBuilder.class", "source2": "second/MultiFileConfigurationBuilderProvider$WrapperBuilder.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -10,24 +10,24 @@\n import org.apache.commons.configuration2.builder.ConfigurationBuilder;\n \n private static class WrapperBuilder implements ConfigurationBuilder<Configuration>\n {\n     private final Configuration configuration;\n     private final ConfigurationBuilder<? extends Configuration> builder;\n     \n-    public WrapperBuilder(final Configuration conf, final ConfigurationBuilder<? extends Configuration> bldr) {\n-        this.configuration = conf;\n-        this.builder = bldr;\n+    public WrapperBuilder(final Configuration configuration, final ConfigurationBuilder<? extends Configuration> builder) {\n+        this.configuration = configuration;\n+        this.builder = builder;\n     }\n     \n     public Configuration getConfiguration() throws ConfigurationException {\n         return this.configuration;\n     }\n     \n-    public <T extends Event> void addEventListener(final EventType<T> eventType, final EventListener<? super T> listener) {\n-        this.builder.addEventListener((EventType)eventType, (EventListener)listener);\n+    public <T extends Event> void addEventListener(final EventType<T> eventType, final EventListener<? super T> eventListener) {\n+        this.builder.addEventListener((EventType)eventType, (EventListener)eventListener);\n     }\n     \n-    public <T extends Event> boolean removeEventListener(final EventType<T> eventType, final EventListener<? super T> listener) {\n-        return this.builder.removeEventListener((EventType)eventType, (EventListener)listener);\n+    public <T extends Event> boolean removeEventListener(final EventType<T> eventType, final EventListener<? super T> eventListener) {\n+        return this.builder.removeEventListener((EventType)eventType, (EventListener)eventListener);\n     }\n }\n"}]}
