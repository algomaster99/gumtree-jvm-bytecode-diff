{"diffoscope-json-version": 1, "source1": "first/Pass1Verifier.class", "source2": "second/Pass1Verifier.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -10,33 +10,33 @@\n import org.apache.bcel.verifier.PassVerifier;\n \n public final class Pass1Verifier extends PassVerifier\n {\n     private JavaClass jc;\n     private final Verifier myOwner;\n     \n-    public Pass1Verifier(final Verifier owner) {\n-        this.myOwner = owner;\n+    public Pass1Verifier(final Verifier myOwner) {\n+        this.myOwner = myOwner;\n     }\n     \n     public VerificationResult do_verify() {\n-        JavaClass jc;\n+        JavaClass javaClass;\n         try {\n-            jc = this.getJavaClass();\n-            if (jc != null && !this.myOwner.getClassName().equals(jc.getClassName()) && !jc.getClassName().endsWith(this.myOwner.getClassName())) {\n-                throw new LoadingException(\"Wrong name: the internal name of the .class file '\" + jc.getClassName() + \"' does not match the file's name '\" + this.myOwner.getClassName() + \"'.\");\n+            javaClass = this.getJavaClass();\n+            if (javaClass != null && !this.myOwner.getClassName().equals(javaClass.getClassName()) && !javaClass.getClassName().endsWith(this.myOwner.getClassName())) {\n+                throw new LoadingException(\"Wrong name: the internal name of the .class file '\" + javaClass.getClassName() + \"' does not match the file's name '\" + this.myOwner.getClassName() + \"'.\");\n             }\n         }\n-        catch (final LoadingException | ClassFormatException e) {\n-            return new VerificationResult(2, e.getMessage());\n+        catch (final LoadingException | ClassFormatException ex) {\n+            return new VerificationResult(2, ((Throwable)ex).getMessage());\n         }\n-        catch (final RuntimeException e) {\n-            return new VerificationResult(2, \"Parsing via BCEL did not succeed.  exception occurred:\\n\" + e.toString());\n+        catch (final RuntimeException ex2) {\n+            return new VerificationResult(2, \"Parsing via BCEL did not succeed.  exception occurred:\\n\" + ex2.toString());\n         }\n-        if (jc != null) {\n+        if (javaClass != null) {\n             return VerificationResult.VR_OK;\n         }\n         return new VerificationResult(2, \"Repository.lookup() failed. FILE NOT FOUND?\");\n     }\n     \n     private JavaClass getJavaClass() {\n         if (this.jc == null) {\n"}]}
