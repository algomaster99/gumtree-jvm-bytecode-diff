{"diffoscope-json-version": 1, "source1": "first/AbstractUnicodeExtraField.class", "source2": "second/AbstractUnicodeExtraField.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,156 +1,156 @@\n-  SHA-256 checksum aba9f57a5ae8e417e256409a136fae3662b38bb3797ba6083677336d4ee865f7\n+  SHA-256 checksum 7f41d48991abfa5a04c66836209cf0464f382f8540b744180670845c652c59f6\n   Compiled from \"AbstractUnicodeExtraField.java\"\n public abstract class org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField implements org.apache.commons.compress.archivers.zip.ZipExtraField\n   minor version: 0\n-  major version: 52\n+  major version: 53\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #31                         // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n-  super_class: #32                        // java/lang/Object\n-  interfaces: 1, fields: 3, methods: 14, attributes: 1\n+  this_class: #25                         // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n+  super_class: #26                        // java/lang/Object\n+  interfaces: 1, fields: 3, methods: 14, attributes: 3\n Constant pool:\n-    #1 = Methodref          #32.#84       // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #85           // java/util/zip/CRC32\n-    #3 = Methodref          #2.#84        // java/util/zip/CRC32.\"<init>\":()V\n-    #4 = Methodref          #2.#86        // java/util/zip/CRC32.update:([BII)V\n-    #5 = Methodref          #2.#87        // java/util/zip/CRC32.getValue:()J\n-    #6 = Fieldref           #31.#88       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.nameCRC32:J\n-    #7 = Fieldref           #89.#90       // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-    #8 = Methodref          #91.#92       // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-    #9 = Fieldref           #31.#93       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.unicodeName:[B\n-   #10 = Methodref          #31.#94       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.\"<init>\":(Ljava/lang/String;[BII)V\n-   #11 = Fieldref           #31.#95       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.data:[B\n-   #12 = Methodref          #96.#97       // org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B\n-   #13 = Methodref          #98.#99       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #14 = Methodref          #31.#100      // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.assembleData:()V\n-   #15 = Class              #101          // org/apache/commons/compress/archivers/zip/ZipShort\n-   #16 = Methodref          #15.#102      // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-   #17 = Methodref          #31.#103      // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.getCentralDirectoryData:()[B\n-   #18 = Methodref          #31.#104      // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #19 = Class              #105          // java/util/zip/ZipException\n-   #20 = String             #106          // UniCode path extra data must have at least 5 bytes.\n-   #21 = Methodref          #19.#107      // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-   #22 = Class              #108          // java/lang/StringBuilder\n-   #23 = Methodref          #22.#84       // java/lang/StringBuilder.\"<init>\":()V\n-   #24 = String             #109          // Unsupported version [\n-   #25 = Methodref          #22.#110      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #26 = Methodref          #22.#111      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #27 = String             #112          // ] for UniCode path extra data.\n-   #28 = Methodref          #22.#113      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #29 = Methodref          #96.#114      // org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n-   #30 = Methodref          #31.#115      // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.parseFromLocalFileData:([BII)V\n-   #31 = Class              #116          // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n-   #32 = Class              #117          // java/lang/Object\n-   #33 = Class              #118          // org/apache/commons/compress/archivers/zip/ZipExtraField\n-   #34 = Utf8               nameCRC32\n-   #35 = Utf8               J\n-   #36 = Utf8               unicodeName\n-   #37 = Utf8               [B\n-   #38 = Utf8               data\n-   #39 = Utf8               <init>\n-   #40 = Utf8               ()V\n-   #41 = Utf8               Code\n-   #42 = Utf8               LineNumberTable\n-   #43 = Utf8               LocalVariableTable\n-   #44 = Utf8               this\n-   #45 = Utf8               Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n-   #46 = Utf8               (Ljava/lang/String;[BII)V\n-   #47 = Utf8               text\n-   #48 = Utf8               Ljava/lang/String;\n-   #49 = Utf8               bytes\n-   #50 = Utf8               off\n-   #51 = Utf8               I\n-   #52 = Utf8               len\n-   #53 = Utf8               crc32\n-   #54 = Utf8               Ljava/util/zip/CRC32;\n-   #55 = Utf8               (Ljava/lang/String;[B)V\n-   #56 = Utf8               assembleData\n-   #57 = Utf8               StackMapTable\n-   #58 = Utf8               getNameCRC32\n-   #59 = Utf8               ()J\n-   #60 = Utf8               setNameCRC32\n-   #61 = Utf8               (J)V\n-   #62 = Utf8               getUnicodeName\n-   #63 = Utf8               ()[B\n-   #64 = Utf8               b\n-   #65 = Class              #37           // \"[B\"\n-   #66 = Utf8               setUnicodeName\n-   #67 = Utf8               ([B)V\n-   #68 = Utf8               getCentralDirectoryData\n-   #69 = Utf8               getCentralDirectoryLength\n-   #70 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #71 = Class              #116          // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n-   #72 = Utf8               getLocalFileDataData\n-   #73 = Utf8               getLocalFileDataLength\n-   #74 = Utf8               parseFromLocalFileData\n-   #75 = Utf8               ([BII)V\n-   #76 = Utf8               buffer\n-   #77 = Utf8               offset\n-   #78 = Utf8               length\n-   #79 = Utf8               version\n-   #80 = Utf8               Exceptions\n-   #81 = Utf8               parseFromCentralDirectoryData\n-   #82 = Utf8               SourceFile\n-   #83 = Utf8               AbstractUnicodeExtraField.java\n-   #84 = NameAndType        #39:#40       // \"<init>\":()V\n-   #85 = Utf8               java/util/zip/CRC32\n-   #86 = NameAndType        #119:#75      // update:([BII)V\n-   #87 = NameAndType        #120:#59      // getValue:()J\n-   #88 = NameAndType        #34:#35       // nameCRC32:J\n-   #89 = Class              #121          // java/nio/charset/StandardCharsets\n-   #90 = NameAndType        #122:#123     // UTF_8:Ljava/nio/charset/Charset;\n-   #91 = Class              #124          // java/lang/String\n-   #92 = NameAndType        #125:#126     // getBytes:(Ljava/nio/charset/Charset;)[B\n-   #93 = NameAndType        #36:#37       // unicodeName:[B\n-   #94 = NameAndType        #39:#46       // \"<init>\":(Ljava/lang/String;[BII)V\n-   #95 = NameAndType        #38:#37       // data:[B\n-   #96 = Class              #127          // org/apache/commons/compress/archivers/zip/ZipLong\n-   #97 = NameAndType        #125:#128     // getBytes:(J)[B\n-   #98 = Class              #129          // java/lang/System\n-   #99 = NameAndType        #130:#131     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #100 = NameAndType        #56:#40       // assembleData:()V\n-  #101 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-  #102 = NameAndType        #39:#132      // \"<init>\":(I)V\n-  #103 = NameAndType        #68:#63       // getCentralDirectoryData:()[B\n-  #104 = NameAndType        #69:#70       // getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #105 = Utf8               java/util/zip/ZipException\n-  #106 = Utf8               UniCode path extra data must have at least 5 bytes.\n-  #107 = NameAndType        #39:#133      // \"<init>\":(Ljava/lang/String;)V\n-  #108 = Utf8               java/lang/StringBuilder\n-  #109 = Utf8               Unsupported version [\n-  #110 = NameAndType        #134:#135     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #111 = NameAndType        #134:#136     // append:(I)Ljava/lang/StringBuilder;\n-  #112 = Utf8               ] for UniCode path extra data.\n-  #113 = NameAndType        #137:#138     // toString:()Ljava/lang/String;\n-  #114 = NameAndType        #120:#139     // getValue:([BI)J\n-  #115 = NameAndType        #74:#75       // parseFromLocalFileData:([BII)V\n-  #116 = Utf8               org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n-  #117 = Utf8               java/lang/Object\n-  #118 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n-  #119 = Utf8               update\n-  #120 = Utf8               getValue\n-  #121 = Utf8               java/nio/charset/StandardCharsets\n-  #122 = Utf8               UTF_8\n-  #123 = Utf8               Ljava/nio/charset/Charset;\n-  #124 = Utf8               java/lang/String\n-  #125 = Utf8               getBytes\n-  #126 = Utf8               (Ljava/nio/charset/Charset;)[B\n-  #127 = Utf8               org/apache/commons/compress/archivers/zip/ZipLong\n-  #128 = Utf8               (J)[B\n-  #129 = Utf8               java/lang/System\n-  #130 = Utf8               arraycopy\n-  #131 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #132 = Utf8               (I)V\n-  #133 = Utf8               (Ljava/lang/String;)V\n-  #134 = Utf8               append\n-  #135 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #136 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #137 = Utf8               toString\n-  #138 = Utf8               ()Ljava/lang/String;\n-  #139 = Utf8               ([BI)J\n+    #1 = Methodref          #26.#77       // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #78           // java/util/zip/CRC32\n+    #3 = Methodref          #2.#77        // java/util/zip/CRC32.\"<init>\":()V\n+    #4 = Methodref          #2.#79        // java/util/zip/CRC32.update:([BII)V\n+    #5 = Methodref          #2.#80        // java/util/zip/CRC32.getValue:()J\n+    #6 = Fieldref           #25.#81       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.nameCRC32:J\n+    #7 = Fieldref           #82.#83       // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+    #8 = Methodref          #84.#85       // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+    #9 = Fieldref           #25.#86       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.unicodeName:[B\n+   #10 = Methodref          #25.#87       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.\"<init>\":(Ljava/lang/String;[BII)V\n+   #11 = Fieldref           #25.#88       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.data:[B\n+   #12 = Methodref          #89.#90       // org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B\n+   #13 = Methodref          #91.#92       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #14 = Methodref          #25.#93       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.assembleData:()V\n+   #15 = Class              #94           // org/apache/commons/compress/archivers/zip/ZipShort\n+   #16 = Methodref          #15.#95       // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+   #17 = Methodref          #25.#96       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.getCentralDirectoryData:()[B\n+   #18 = Methodref          #25.#97       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #19 = Class              #98           // java/util/zip/ZipException\n+   #20 = String             #99           // UniCode path extra data must have at least 5 bytes.\n+   #21 = Methodref          #19.#100      // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+   #22 = InvokeDynamic      #0:#104       // #0:makeConcatWithConstants:(I)Ljava/lang/String;\n+   #23 = Methodref          #89.#105      // org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n+   #24 = Methodref          #25.#106      // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.parseFromLocalFileData:([BII)V\n+   #25 = Class              #107          // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n+   #26 = Class              #108          // java/lang/Object\n+   #27 = Class              #109          // org/apache/commons/compress/archivers/zip/ZipExtraField\n+   #28 = Utf8               nameCRC32\n+   #29 = Utf8               J\n+   #30 = Utf8               unicodeName\n+   #31 = Utf8               [B\n+   #32 = Utf8               data\n+   #33 = Utf8               <init>\n+   #34 = Utf8               ()V\n+   #35 = Utf8               Code\n+   #36 = Utf8               LineNumberTable\n+   #37 = Utf8               LocalVariableTable\n+   #38 = Utf8               this\n+   #39 = Utf8               Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n+   #40 = Utf8               (Ljava/lang/String;[BII)V\n+   #41 = Utf8               text\n+   #42 = Utf8               Ljava/lang/String;\n+   #43 = Utf8               bytes\n+   #44 = Utf8               off\n+   #45 = Utf8               I\n+   #46 = Utf8               len\n+   #47 = Utf8               crc32\n+   #48 = Utf8               Ljava/util/zip/CRC32;\n+   #49 = Utf8               (Ljava/lang/String;[B)V\n+   #50 = Utf8               assembleData\n+   #51 = Utf8               StackMapTable\n+   #52 = Utf8               getNameCRC32\n+   #53 = Utf8               ()J\n+   #54 = Utf8               setNameCRC32\n+   #55 = Utf8               (J)V\n+   #56 = Utf8               getUnicodeName\n+   #57 = Utf8               ()[B\n+   #58 = Utf8               b\n+   #59 = Class              #31           // \"[B\"\n+   #60 = Utf8               setUnicodeName\n+   #61 = Utf8               ([B)V\n+   #62 = Utf8               getCentralDirectoryData\n+   #63 = Utf8               getCentralDirectoryLength\n+   #64 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #65 = Utf8               getLocalFileDataData\n+   #66 = Utf8               getLocalFileDataLength\n+   #67 = Utf8               parseFromLocalFileData\n+   #68 = Utf8               ([BII)V\n+   #69 = Utf8               buffer\n+   #70 = Utf8               offset\n+   #71 = Utf8               length\n+   #72 = Utf8               version\n+   #73 = Utf8               Exceptions\n+   #74 = Utf8               parseFromCentralDirectoryData\n+   #75 = Utf8               SourceFile\n+   #76 = Utf8               AbstractUnicodeExtraField.java\n+   #77 = NameAndType        #33:#34       // \"<init>\":()V\n+   #78 = Utf8               java/util/zip/CRC32\n+   #79 = NameAndType        #110:#68      // update:([BII)V\n+   #80 = NameAndType        #111:#53      // getValue:()J\n+   #81 = NameAndType        #28:#29       // nameCRC32:J\n+   #82 = Class              #112          // java/nio/charset/StandardCharsets\n+   #83 = NameAndType        #113:#114     // UTF_8:Ljava/nio/charset/Charset;\n+   #84 = Class              #115          // java/lang/String\n+   #85 = NameAndType        #116:#117     // getBytes:(Ljava/nio/charset/Charset;)[B\n+   #86 = NameAndType        #30:#31       // unicodeName:[B\n+   #87 = NameAndType        #33:#40       // \"<init>\":(Ljava/lang/String;[BII)V\n+   #88 = NameAndType        #32:#31       // data:[B\n+   #89 = Class              #118          // org/apache/commons/compress/archivers/zip/ZipLong\n+   #90 = NameAndType        #116:#119     // getBytes:(J)[B\n+   #91 = Class              #120          // java/lang/System\n+   #92 = NameAndType        #121:#122     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #93 = NameAndType        #50:#34       // assembleData:()V\n+   #94 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+   #95 = NameAndType        #33:#123      // \"<init>\":(I)V\n+   #96 = NameAndType        #62:#57       // getCentralDirectoryData:()[B\n+   #97 = NameAndType        #63:#64       // getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #98 = Utf8               java/util/zip/ZipException\n+   #99 = Utf8               UniCode path extra data must have at least 5 bytes.\n+  #100 = NameAndType        #33:#124      // \"<init>\":(Ljava/lang/String;)V\n+  #101 = Utf8               BootstrapMethods\n+  #102 = MethodHandle       6:#125        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #103 = String             #126          // Unsupported version [\\u0001] for UniCode path extra data.\n+  #104 = NameAndType        #127:#128     // makeConcatWithConstants:(I)Ljava/lang/String;\n+  #105 = NameAndType        #111:#129     // getValue:([BI)J\n+  #106 = NameAndType        #67:#68       // parseFromLocalFileData:([BII)V\n+  #107 = Utf8               org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n+  #108 = Utf8               java/lang/Object\n+  #109 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n+  #110 = Utf8               update\n+  #111 = Utf8               getValue\n+  #112 = Utf8               java/nio/charset/StandardCharsets\n+  #113 = Utf8               UTF_8\n+  #114 = Utf8               Ljava/nio/charset/Charset;\n+  #115 = Utf8               java/lang/String\n+  #116 = Utf8               getBytes\n+  #117 = Utf8               (Ljava/nio/charset/Charset;)[B\n+  #118 = Utf8               org/apache/commons/compress/archivers/zip/ZipLong\n+  #119 = Utf8               (J)[B\n+  #120 = Utf8               java/lang/System\n+  #121 = Utf8               arraycopy\n+  #122 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #123 = Utf8               (I)V\n+  #124 = Utf8               (Ljava/lang/String;)V\n+  #125 = Methodref          #130.#131     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #126 = Utf8               Unsupported version [\\u0001] for UniCode path extra data.\n+  #127 = Utf8               makeConcatWithConstants\n+  #128 = Utf8               (I)Ljava/lang/String;\n+  #129 = Utf8               ([BI)J\n+  #130 = Class              #132          // java/lang/invoke/StringConcatFactory\n+  #131 = NameAndType        #127:#136     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #132 = Utf8               java/lang/invoke/StringConcatFactory\n+  #133 = Class              #138          // java/lang/invoke/MethodHandles$Lookup\n+  #134 = Utf8               Lookup\n+  #135 = Utf8               InnerClasses\n+  #136 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #137 = Class              #139          // java/lang/invoke/MethodHandles\n+  #138 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #139 = Utf8               java/lang/invoke/MethodHandles\n {\n   private long nameCRC32;\n     descriptor: J\n     flags: (0x0002) ACC_PRIVATE\n \n   private byte[] unicodeName;\n     descriptor: [B\n@@ -544,100 +544,98 @@\n         14: athrow\n         15: aload_1\n         16: iload_2\n         17: baload\n         18: istore        4\n         20: iload         4\n         22: iconst_1\n-        23: if_icmpeq     59\n+        23: if_icmpeq     41\n         26: new           #19                 // class java/util/zip/ZipException\n         29: dup\n-        30: new           #22                 // class java/lang/StringBuilder\n-        33: dup\n-        34: invokespecial #23                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        37: ldc           #24                 // String Unsupported version [\n-        39: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        42: iload         4\n-        44: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        47: ldc           #27                 // String ] for UniCode path extra data.\n-        49: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        52: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        55: invokespecial #21                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-        58: athrow\n-        59: aload_0\n-        60: aload_1\n-        61: iload_2\n-        62: iconst_1\n-        63: iadd\n-        64: invokestatic  #29                 // Method org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n-        67: putfield      #6                  // Field nameCRC32:J\n-        70: aload_0\n-        71: iload_3\n-        72: iconst_5\n-        73: isub\n-        74: newarray       byte\n-        76: putfield      #9                  // Field unicodeName:[B\n-        79: aload_1\n-        80: iload_2\n-        81: iconst_5\n-        82: iadd\n-        83: aload_0\n-        84: getfield      #9                  // Field unicodeName:[B\n-        87: iconst_0\n-        88: iload_3\n-        89: iconst_5\n-        90: isub\n-        91: invokestatic  #13                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-        94: aload_0\n-        95: aconst_null\n-        96: putfield      #11                 // Field data:[B\n-        99: return\n+        30: iload         4\n+        32: invokedynamic #22,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;\n+        37: invokespecial #21                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+        40: athrow\n+        41: aload_0\n+        42: aload_1\n+        43: iload_2\n+        44: iconst_1\n+        45: iadd\n+        46: invokestatic  #23                 // Method org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n+        49: putfield      #6                  // Field nameCRC32:J\n+        52: aload_0\n+        53: iload_3\n+        54: iconst_5\n+        55: isub\n+        56: newarray       byte\n+        58: putfield      #9                  // Field unicodeName:[B\n+        61: aload_1\n+        62: iload_2\n+        63: iconst_5\n+        64: iadd\n+        65: aload_0\n+        66: getfield      #9                  // Field unicodeName:[B\n+        69: iconst_0\n+        70: iload_3\n+        71: iconst_5\n+        72: isub\n+        73: invokestatic  #13                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        76: aload_0\n+        77: aconst_null\n+        78: putfield      #11                 // Field data:[B\n+        81: return\n       LineNumberTable:\n         line 159: 0\n         line 160: 5\n         line 163: 15\n         line 165: 20\n         line 166: 26\n-        line 170: 59\n-        line 171: 70\n-        line 172: 79\n-        line 173: 94\n-        line 174: 99\n+        line 170: 41\n+        line 171: 52\n+        line 172: 61\n+        line 173: 76\n+        line 174: 81\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0     100     0  this   Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n-            0     100     1 buffer   [B\n-            0     100     2 offset   I\n-            0     100     3 length   I\n-           20      80     4 version   I\n+            0      82     0  this   Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n+            0      82     1 buffer   [B\n+            0      82     2 offset   I\n+            0      82     3 length   I\n+           20      62     4 version   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 15 /* same */\n         frame_type = 252 /* append */\n-          offset_delta = 43\n+          offset_delta = 25\n           locals = [ int ]\n     Exceptions:\n       throws java.util.zip.ZipException\n \n   public void parseFromCentralDirectoryData(byte[], int, int) throws java.util.zip.ZipException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokevirtual #30                 // Method parseFromLocalFileData:([BII)V\n+         4: invokevirtual #24                 // Method parseFromLocalFileData:([BII)V\n          7: return\n       LineNumberTable:\n         line 184: 0\n         line 185: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n             0       8     1 buffer   [B\n             0       8     2 offset   I\n             0       8     3 length   I\n     Exceptions:\n       throws java.util.zip.ZipException\n }\n SourceFile: \"AbstractUnicodeExtraField.java\"\n+InnerClasses:\n+  public static final #134= #133 of #137; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+BootstrapMethods:\n+  0: #102 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #103 Unsupported version [\\u0001] for UniCode path extra data.\n"}]}
