{"diffoscope-json-version": 1, "source1": "first/SSLSocketUtils.class", "source2": "second/SSLSocketUtils.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -6,25 +6,25 @@\n import javax.net.ssl.SSLSocket;\n \n public class SSLSocketUtils\n {\n     private SSLSocketUtils() {\n     }\n     \n-    public static boolean enableEndpointNameVerification(final SSLSocket socket) {\n+    public static boolean enableEndpointNameVerification(final SSLSocket sslSocket) {\n         try {\n-            final Class<?> cls = Class.forName(\"javax.net.ssl.SSLParameters\");\n-            final Method setEndpointIdentificationAlgorithm = cls.getDeclaredMethod(\"setEndpointIdentificationAlgorithm\", String.class);\n-            final Method getSSLParameters = SSLSocket.class.getDeclaredMethod(\"getSSLParameters\", (Class<?>[])new Class[0]);\n-            final Method setSSLParameters = SSLSocket.class.getDeclaredMethod(\"setSSLParameters\", cls);\n-            if (setEndpointIdentificationAlgorithm != null && getSSLParameters != null && setSSLParameters != null) {\n-                final Object sslParams = getSSLParameters.invoke(socket, new Object[0]);\n-                if (sslParams != null) {\n-                    setEndpointIdentificationAlgorithm.invoke(sslParams, \"HTTPS\");\n-                    setSSLParameters.invoke(socket, sslParams);\n+            final Class<?> forName = Class.forName(\"javax.net.ssl.SSLParameters\");\n+            final Method declaredMethod = forName.getDeclaredMethod(\"setEndpointIdentificationAlgorithm\", String.class);\n+            final Method declaredMethod2 = SSLSocket.class.getDeclaredMethod(\"getSSLParameters\", (Class<?>[])new Class[0]);\n+            final Method declaredMethod3 = SSLSocket.class.getDeclaredMethod(\"setSSLParameters\", forName);\n+            if (declaredMethod != null && declaredMethod2 != null && declaredMethod3 != null) {\n+                final Object invoke = declaredMethod2.invoke(sslSocket, new Object[0]);\n+                if (invoke != null) {\n+                    declaredMethod.invoke(invoke, \"HTTPS\");\n+                    declaredMethod3.invoke(sslSocket, invoke);\n                     return true;\n                 }\n             }\n         }\n         catch (final SecurityException ex) {}\n         catch (final ClassNotFoundException ex2) {}\n         catch (final NoSuchMethodException ex3) {}\n"}]}
