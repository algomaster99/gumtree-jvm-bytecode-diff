{"diffoscope-json-version": 1, "source1": "first/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator.class", "source2": "second/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,92 +1,91 @@\n-  SHA-256 checksum cd5e3ee77c528fd2688bc741f5ca82c2ce61d8ea4ee2a829ec08dbcd608e597c\n+  SHA-256 checksum 72cecf52dd15a99f514d89818bc66ca729962d0d8b2a6b97faa289f8cc412810\n   Compiled from \"ZipSplitReadOnlySeekableByteChannel.java\"\n class org.apache.commons.compress.archivers.zip.ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator extends java.lang.Object implements java.util.Comparator<java.io.File>, java.io.Serializable\n   minor version: 0\n-  major version: 52\n+  major version: 53\n   flags: (0x0020) ACC_SUPER\n   this_class: #13                         // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator\n   super_class: #14                        // java/lang/Object\n   interfaces: 2, fields: 1, methods: 4, attributes: 3\n Constant pool:\n    #1 = Methodref          #13.#38        // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator.\"<init>\":()V\n    #2 = Methodref          #14.#38        // java/lang/Object.\"<init>\":()V\n    #3 = Methodref          #11.#39        // java/io/File.getPath:()Ljava/lang/String;\n    #4 = Methodref          #40.#41        // org/apache/commons/compress/utils/FileNameUtils.getExtension:(Ljava/lang/String;)Ljava/lang/String;\n    #5 = String             #42            // z\n-   #6 = Methodref          #43.#44        // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-   #7 = Methodref          #43.#45        // java/lang/String.substring:(I)Ljava/lang/String;\n-   #8 = Methodref          #46.#47        // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-   #9 = Methodref          #46.#48        // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-  #10 = Methodref          #46.#49        // java/lang/Integer.compareTo:(Ljava/lang/Integer;)I\n-  #11 = Class              #50            // java/io/File\n-  #12 = Methodref          #13.#51        // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator.compare:(Ljava/io/File;Ljava/io/File;)I\n-  #13 = Class              #53            // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator\n-  #14 = Class              #55            // java/lang/Object\n-  #15 = Class              #56            // java/util/Comparator\n-  #16 = Class              #57            // java/io/Serializable\n+   #6 = Methodref          #29.#43        // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+   #7 = Methodref          #29.#44        // java/lang/String.substring:(I)Ljava/lang/String;\n+   #8 = Methodref          #45.#46        // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+   #9 = Methodref          #45.#47        // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+  #10 = Methodref          #45.#48        // java/lang/Integer.compareTo:(Ljava/lang/Integer;)I\n+  #11 = Class              #49            // java/io/File\n+  #12 = Methodref          #13.#50        // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator.compare:(Ljava/io/File;Ljava/io/File;)I\n+  #13 = Class              #52            // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator\n+  #14 = Class              #54            // java/lang/Object\n+  #15 = Class              #55            // java/util/Comparator\n+  #16 = Class              #56            // java/io/Serializable\n   #17 = Utf8               serialVersionUID\n   #18 = Utf8               J\n   #19 = Utf8               ConstantValue\n   #20 = Long               20200123l\n   #22 = Utf8               <init>\n   #23 = Utf8               ()V\n   #24 = Utf8               Code\n   #25 = Utf8               LineNumberTable\n   #26 = Utf8               compare\n   #27 = Utf8               (Ljava/io/File;Ljava/io/File;)I\n   #28 = Utf8               StackMapTable\n-  #29 = Class              #58            // java/lang/String\n+  #29 = Class              #57            // java/lang/String\n   #30 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)I\n-  #31 = Class              #59            // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$1\n+  #31 = Class              #58            // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$1\n   #32 = Utf8               InnerClasses\n   #33 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$1;)V\n   #34 = Utf8               Signature\n   #35 = Utf8               Ljava/lang/Object;Ljava/util/Comparator<Ljava/io/File;>;Ljava/io/Serializable;\n   #36 = Utf8               SourceFile\n   #37 = Utf8               ZipSplitReadOnlySeekableByteChannel.java\n   #38 = NameAndType        #22:#23        // \"<init>\":()V\n-  #39 = NameAndType        #60:#61        // getPath:()Ljava/lang/String;\n-  #40 = Class              #62            // org/apache/commons/compress/utils/FileNameUtils\n-  #41 = NameAndType        #63:#64        // getExtension:(Ljava/lang/String;)Ljava/lang/String;\n+  #39 = NameAndType        #59:#60        // getPath:()Ljava/lang/String;\n+  #40 = Class              #61            // org/apache/commons/compress/utils/FileNameUtils\n+  #41 = NameAndType        #62:#63        // getExtension:(Ljava/lang/String;)Ljava/lang/String;\n   #42 = Utf8               z\n-  #43 = Class              #58            // java/lang/String\n-  #44 = NameAndType        #65:#66        // startsWith:(Ljava/lang/String;)Z\n-  #45 = NameAndType        #67:#68        // substring:(I)Ljava/lang/String;\n-  #46 = Class              #69            // java/lang/Integer\n-  #47 = NameAndType        #70:#71        // parseInt:(Ljava/lang/String;)I\n-  #48 = NameAndType        #72:#73        // valueOf:(I)Ljava/lang/Integer;\n-  #49 = NameAndType        #74:#75        // compareTo:(Ljava/lang/Integer;)I\n-  #50 = Utf8               java/io/File\n-  #51 = NameAndType        #26:#27        // compare:(Ljava/io/File;Ljava/io/File;)I\n-  #52 = Class              #76            // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n-  #53 = Utf8               org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator\n-  #54 = Utf8               ZipSplitSegmentComparator\n-  #55 = Utf8               java/lang/Object\n-  #56 = Utf8               java/util/Comparator\n-  #57 = Utf8               java/io/Serializable\n-  #58 = Utf8               java/lang/String\n-  #59 = Utf8               org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$1\n-  #60 = Utf8               getPath\n-  #61 = Utf8               ()Ljava/lang/String;\n-  #62 = Utf8               org/apache/commons/compress/utils/FileNameUtils\n-  #63 = Utf8               getExtension\n-  #64 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #65 = Utf8               startsWith\n-  #66 = Utf8               (Ljava/lang/String;)Z\n-  #67 = Utf8               substring\n-  #68 = Utf8               (I)Ljava/lang/String;\n-  #69 = Utf8               java/lang/Integer\n-  #70 = Utf8               parseInt\n-  #71 = Utf8               (Ljava/lang/String;)I\n-  #72 = Utf8               valueOf\n-  #73 = Utf8               (I)Ljava/lang/Integer;\n-  #74 = Utf8               compareTo\n-  #75 = Utf8               (Ljava/lang/Integer;)I\n-  #76 = Utf8               org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n+  #43 = NameAndType        #64:#65        // startsWith:(Ljava/lang/String;)Z\n+  #44 = NameAndType        #66:#67        // substring:(I)Ljava/lang/String;\n+  #45 = Class              #68            // java/lang/Integer\n+  #46 = NameAndType        #69:#70        // parseInt:(Ljava/lang/String;)I\n+  #47 = NameAndType        #71:#72        // valueOf:(I)Ljava/lang/Integer;\n+  #48 = NameAndType        #73:#74        // compareTo:(Ljava/lang/Integer;)I\n+  #49 = Utf8               java/io/File\n+  #50 = NameAndType        #26:#27        // compare:(Ljava/io/File;Ljava/io/File;)I\n+  #51 = Class              #75            // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n+  #52 = Utf8               org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator\n+  #53 = Utf8               ZipSplitSegmentComparator\n+  #54 = Utf8               java/lang/Object\n+  #55 = Utf8               java/util/Comparator\n+  #56 = Utf8               java/io/Serializable\n+  #57 = Utf8               java/lang/String\n+  #58 = Utf8               org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$1\n+  #59 = Utf8               getPath\n+  #60 = Utf8               ()Ljava/lang/String;\n+  #61 = Utf8               org/apache/commons/compress/utils/FileNameUtils\n+  #62 = Utf8               getExtension\n+  #63 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #64 = Utf8               startsWith\n+  #65 = Utf8               (Ljava/lang/String;)Z\n+  #66 = Utf8               substring\n+  #67 = Utf8               (I)Ljava/lang/String;\n+  #68 = Utf8               java/lang/Integer\n+  #69 = Utf8               parseInt\n+  #70 = Utf8               (Ljava/lang/String;)I\n+  #71 = Utf8               valueOf\n+  #72 = Utf8               (I)Ljava/lang/Integer;\n+  #73 = Utf8               compareTo\n+  #74 = Utf8               (Ljava/lang/Integer;)I\n+  #75 = Utf8               org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n {\n   private static final long serialVersionUID = 20200123l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 20200123l\n \n   private org.apache.commons.compress.archivers.zip.ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator();\n@@ -183,8 +182,8 @@\n       LineNumberTable:\n         line 230: 0\n }\n Signature: #35                          // Ljava/lang/Object;Ljava/util/Comparator<Ljava/io/File;>;Ljava/io/Serializable;\n SourceFile: \"ZipSplitReadOnlySeekableByteChannel.java\"\n InnerClasses:\n   static #31;                             // class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$1\n-  private static #54= #13 of #52;         // ZipSplitSegmentComparator=class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator of class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n+  private static #53= #13 of #51;         // ZipSplitSegmentComparator=class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator of class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n"}]}
