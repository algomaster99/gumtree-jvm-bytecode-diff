{"diffoscope-json-version": 1, "source1": "first/ZipArchiveEntry.class", "source2": "second/ZipArchiveEntry.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -40,14 +40,19 @@\n     private long localHeaderOffset;\n     private long dataOffset;\n     private boolean isStreamContiguous;\n     private ZipArchiveEntry.NameSource nameSource;\n     private ZipArchiveEntry.CommentSource commentSource;\n     private long diskNumberStart;\n     \n+    static {\n+        EMPTY = new byte[0];\n+        noExtraFields = new ZipExtraField[0];\n+    }\n+    \n     public ZipArchiveEntry(final String name) {\n         super(name);\n         this.method = -1;\n         this.size = -1L;\n         this.internalAttributes = 0;\n         this.platform = 0;\n         this.externalAttributes = 0L;\n@@ -104,15 +109,15 @@\n     }\n     \n     protected ZipArchiveEntry() {\n         this(\"\");\n     }\n     \n     public ZipArchiveEntry(final File inputFile, final String entryName) {\n-        this((inputFile.isDirectory() && !entryName.endsWith(\"/\")) ? entryName : entryName);\n+        this((inputFile.isDirectory() && !entryName.endsWith(\"/\")) ? (String.valueOf(entryName) + \"/\") : entryName);\n         if (inputFile.isFile()) {\n             this.setSize(inputFile.length());\n         }\n         this.setTime(inputFile.lastModified());\n     }\n     \n     @Override\n@@ -332,15 +337,17 @@\n     }\n     \n     public void removeExtraField(final ZipShort type) {\n         if (this.extraFields == null) {\n             throw new NoSuchElementException();\n         }\n         final List<ZipExtraField> newResult = new ArrayList<ZipExtraField>();\n-        for (final ZipExtraField extraField : this.extraFields) {\n+        ZipExtraField[] extraFields;\n+        for (int length = (extraFields = this.extraFields).length, i = 0; i < length; ++i) {\n+            final ZipExtraField extraField = extraFields[i];\n             if (!type.equals((Object)extraField.getHeaderId())) {\n                 newResult.add(extraField);\n             }\n         }\n         if (this.extraFields.length == newResult.size()) {\n             throw new NoSuchElementException();\n         }\n@@ -354,15 +361,17 @@\n         }\n         this.unparseableExtra = null;\n         this.setExtra();\n     }\n     \n     public ZipExtraField getExtraField(final ZipShort type) {\n         if (this.extraFields != null) {\n-            for (final ZipExtraField extraField : this.extraFields) {\n+            ZipExtraField[] extraFields;\n+            for (int length = (extraFields = this.extraFields).length, i = 0; i < length; ++i) {\n+                final ZipExtraField extraField = extraFields[i];\n                 if (type.equals((Object)extraField.getHeaderId())) {\n                     return extraField;\n                 }\n             }\n         }\n         return null;\n     }\n@@ -374,15 +383,15 @@\n     @Override\n     public void setExtra(final byte[] extra) throws RuntimeException {\n         try {\n             final ZipExtraField[] local = ExtraFieldUtils.parse(extra, true, (ExtraFieldParsingBehavior)ZipArchiveEntry.ExtraFieldParsingMode.BEST_EFFORT);\n             this.mergeExtraFields(local, true);\n         }\n         catch (final ZipException e) {\n-            throw new RuntimeException(\"Error parsing extra fields for entry: \" + this.getName() + \" - \" + e.getMessage(), (Throwable)e);\n+            throw new RuntimeException(\"Error parsing extra fields for entry: \" + this.getName() + \" - \" + e.getMessage(), e);\n         }\n     }\n     \n     protected void setExtra() {\n         super.setExtra(ExtraFieldUtils.mergeLocalFileDataData(this.getAllExtraFieldsNoCopy()));\n     }\n     \n@@ -614,13 +623,8 @@\n     }\n     \n     private ZipExtraField[] copyOf(final ZipExtraField[] src, final int length) {\n         final ZipExtraField[] cpy = new ZipExtraField[length];\n         System.arraycopy(src, 0, cpy, 0, Math.min(src.length, length));\n         return cpy;\n     }\n-    \n-    static {\n-        EMPTY = new byte[0];\n-        noExtraFields = new ZipExtraField[0];\n-    }\n }\n"}]}
