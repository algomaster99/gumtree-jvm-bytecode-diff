{"diffoscope-json-version": 1, "source1": "first/BaseNCodec$Context.class", "source2": "second/BaseNCodec$Context.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,36 +1,36 @@\n-  SHA-256 checksum c9b2e0dfcdf22056fa4d314ccbcfcd915a68265f558a5f71f0ee820d525d7fd4\n+  SHA-256 checksum fc3262381de17ba5c27457849dd11c74ce1f5ac08bb8eeaae348a06d3f581eca\n   Compiled from \"BaseNCodec.java\"\n class org.apache.commons.codec.binary.BaseNCodec$Context\n   minor version: 0\n   major version: 51\n   flags: (0x0020) ACC_SUPER\n   this_class: #19                         // org/apache/commons/codec/binary/BaseNCodec$Context\n   super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 8, methods: 2, attributes: 2\n Constant pool:\n-   #1 = Methodref          #3.#45         // java/lang/Object.\"<init>\":()V\n-   #2 = String             #46            // %s[buffer=%s, currentLinePos=%s, eof=%s, ibitWorkArea=%s, lbitWorkArea=%s, modulus=%s, pos=%s, readPos=%s]\n-   #3 = Class              #47            // java/lang/Object\n-   #4 = Methodref          #3.#48         // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #5 = Methodref          #49.#50        // java/lang/Class.getSimpleName:()Ljava/lang/String;\n-   #6 = Fieldref           #19.#51        // org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n-   #7 = Methodref          #52.#53        // java/util/Arrays.toString:([B)Ljava/lang/String;\n-   #8 = Fieldref           #19.#54        // org/apache/commons/codec/binary/BaseNCodec$Context.currentLinePos:I\n-   #9 = Methodref          #55.#56        // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-  #10 = Fieldref           #19.#57        // org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n-  #11 = Methodref          #58.#59        // java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n-  #12 = Fieldref           #19.#60        // org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n-  #13 = Fieldref           #19.#61        // org/apache/commons/codec/binary/BaseNCodec$Context.lbitWorkArea:J\n-  #14 = Methodref          #62.#63        // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n-  #15 = Fieldref           #19.#64        // org/apache/commons/codec/binary/BaseNCodec$Context.modulus:I\n-  #16 = Fieldref           #19.#65        // org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n-  #17 = Fieldref           #19.#66        // org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n-  #18 = Methodref          #67.#68        // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #19 = Class              #70            // org/apache/commons/codec/binary/BaseNCodec$Context\n+   #1 = Methodref          #3.#40         // java/lang/Object.\"<init>\":()V\n+   #2 = String             #41            // %s[buffer=%s, currentLinePos=%s, eof=%s, ibitWorkArea=%s, lbitWorkArea=%s, modulus=%s, pos=%s, readPos=%s]\n+   #3 = Class              #42            // java/lang/Object\n+   #4 = Methodref          #3.#43         // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #5 = Methodref          #44.#45        // java/lang/Class.getSimpleName:()Ljava/lang/String;\n+   #6 = Fieldref           #19.#46        // org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+   #7 = Methodref          #47.#48        // java/util/Arrays.toString:([B)Ljava/lang/String;\n+   #8 = Fieldref           #19.#49        // org/apache/commons/codec/binary/BaseNCodec$Context.currentLinePos:I\n+   #9 = Methodref          #50.#51        // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+  #10 = Fieldref           #19.#52        // org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n+  #11 = Methodref          #53.#54        // java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+  #12 = Fieldref           #19.#55        // org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+  #13 = Fieldref           #19.#56        // org/apache/commons/codec/binary/BaseNCodec$Context.lbitWorkArea:J\n+  #14 = Methodref          #57.#58        // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+  #15 = Fieldref           #19.#59        // org/apache/commons/codec/binary/BaseNCodec$Context.modulus:I\n+  #16 = Fieldref           #19.#60        // org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+  #17 = Fieldref           #19.#61        // org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n+  #18 = Methodref          #62.#63        // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #19 = Class              #65            // org/apache/commons/codec/binary/BaseNCodec$Context\n   #20 = Utf8               ibitWorkArea\n   #21 = Utf8               I\n   #22 = Utf8               lbitWorkArea\n   #23 = Utf8               J\n   #24 = Utf8               buffer\n   #25 = Utf8               [B\n   #26 = Utf8               pos\n@@ -39,66 +39,63 @@\n   #29 = Utf8               Z\n   #30 = Utf8               currentLinePos\n   #31 = Utf8               modulus\n   #32 = Utf8               <init>\n   #33 = Utf8               ()V\n   #34 = Utf8               Code\n   #35 = Utf8               LineNumberTable\n-  #36 = Utf8               LocalVariableTable\n-  #37 = Utf8               this\n-  #38 = Utf8               Context\n-  #39 = Utf8               InnerClasses\n-  #40 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-  #41 = Utf8               toString\n-  #42 = Utf8               ()Ljava/lang/String;\n-  #43 = Utf8               SourceFile\n-  #44 = Utf8               BaseNCodec.java\n-  #45 = NameAndType        #32:#33        // \"<init>\":()V\n-  #46 = Utf8               %s[buffer=%s, currentLinePos=%s, eof=%s, ibitWorkArea=%s, lbitWorkArea=%s, modulus=%s, pos=%s, readPos=%s]\n-  #47 = Utf8               java/lang/Object\n-  #48 = NameAndType        #71:#72        // getClass:()Ljava/lang/Class;\n-  #49 = Class              #73            // java/lang/Class\n-  #50 = NameAndType        #74:#42        // getSimpleName:()Ljava/lang/String;\n-  #51 = NameAndType        #24:#25        // buffer:[B\n-  #52 = Class              #75            // java/util/Arrays\n-  #53 = NameAndType        #41:#76        // toString:([B)Ljava/lang/String;\n-  #54 = NameAndType        #30:#21        // currentLinePos:I\n-  #55 = Class              #77            // java/lang/Integer\n-  #56 = NameAndType        #78:#79        // valueOf:(I)Ljava/lang/Integer;\n-  #57 = NameAndType        #28:#29        // eof:Z\n-  #58 = Class              #80            // java/lang/Boolean\n-  #59 = NameAndType        #78:#81        // valueOf:(Z)Ljava/lang/Boolean;\n-  #60 = NameAndType        #20:#21        // ibitWorkArea:I\n-  #61 = NameAndType        #22:#23        // lbitWorkArea:J\n-  #62 = Class              #82            // java/lang/Long\n-  #63 = NameAndType        #78:#83        // valueOf:(J)Ljava/lang/Long;\n-  #64 = NameAndType        #31:#21        // modulus:I\n-  #65 = NameAndType        #26:#21        // pos:I\n-  #66 = NameAndType        #27:#21        // readPos:I\n-  #67 = Class              #84            // java/lang/String\n-  #68 = NameAndType        #85:#86        // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #69 = Class              #87            // org/apache/commons/codec/binary/BaseNCodec\n-  #70 = Utf8               org/apache/commons/codec/binary/BaseNCodec$Context\n-  #71 = Utf8               getClass\n-  #72 = Utf8               ()Ljava/lang/Class;\n-  #73 = Utf8               java/lang/Class\n-  #74 = Utf8               getSimpleName\n-  #75 = Utf8               java/util/Arrays\n-  #76 = Utf8               ([B)Ljava/lang/String;\n-  #77 = Utf8               java/lang/Integer\n-  #78 = Utf8               valueOf\n-  #79 = Utf8               (I)Ljava/lang/Integer;\n-  #80 = Utf8               java/lang/Boolean\n-  #81 = Utf8               (Z)Ljava/lang/Boolean;\n-  #82 = Utf8               java/lang/Long\n-  #83 = Utf8               (J)Ljava/lang/Long;\n-  #84 = Utf8               java/lang/String\n-  #85 = Utf8               format\n-  #86 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #87 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n+  #36 = Utf8               toString\n+  #37 = Utf8               ()Ljava/lang/String;\n+  #38 = Utf8               SourceFile\n+  #39 = Utf8               BaseNCodec.java\n+  #40 = NameAndType        #32:#33        // \"<init>\":()V\n+  #41 = Utf8               %s[buffer=%s, currentLinePos=%s, eof=%s, ibitWorkArea=%s, lbitWorkArea=%s, modulus=%s, pos=%s, readPos=%s]\n+  #42 = Utf8               java/lang/Object\n+  #43 = NameAndType        #68:#69        // getClass:()Ljava/lang/Class;\n+  #44 = Class              #70            // java/lang/Class\n+  #45 = NameAndType        #71:#37        // getSimpleName:()Ljava/lang/String;\n+  #46 = NameAndType        #24:#25        // buffer:[B\n+  #47 = Class              #72            // java/util/Arrays\n+  #48 = NameAndType        #36:#73        // toString:([B)Ljava/lang/String;\n+  #49 = NameAndType        #30:#21        // currentLinePos:I\n+  #50 = Class              #74            // java/lang/Integer\n+  #51 = NameAndType        #75:#76        // valueOf:(I)Ljava/lang/Integer;\n+  #52 = NameAndType        #28:#29        // eof:Z\n+  #53 = Class              #77            // java/lang/Boolean\n+  #54 = NameAndType        #75:#78        // valueOf:(Z)Ljava/lang/Boolean;\n+  #55 = NameAndType        #20:#21        // ibitWorkArea:I\n+  #56 = NameAndType        #22:#23        // lbitWorkArea:J\n+  #57 = Class              #79            // java/lang/Long\n+  #58 = NameAndType        #75:#80        // valueOf:(J)Ljava/lang/Long;\n+  #59 = NameAndType        #31:#21        // modulus:I\n+  #60 = NameAndType        #26:#21        // pos:I\n+  #61 = NameAndType        #27:#21        // readPos:I\n+  #62 = Class              #81            // java/lang/String\n+  #63 = NameAndType        #82:#83        // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #64 = Class              #84            // org/apache/commons/codec/binary/BaseNCodec\n+  #65 = Utf8               org/apache/commons/codec/binary/BaseNCodec$Context\n+  #66 = Utf8               Context\n+  #67 = Utf8               InnerClasses\n+  #68 = Utf8               getClass\n+  #69 = Utf8               ()Ljava/lang/Class;\n+  #70 = Utf8               java/lang/Class\n+  #71 = Utf8               getSimpleName\n+  #72 = Utf8               java/util/Arrays\n+  #73 = Utf8               ([B)Ljava/lang/String;\n+  #74 = Utf8               java/lang/Integer\n+  #75 = Utf8               valueOf\n+  #76 = Utf8               (I)Ljava/lang/Integer;\n+  #77 = Utf8               java/lang/Boolean\n+  #78 = Utf8               (Z)Ljava/lang/Boolean;\n+  #79 = Utf8               java/lang/Long\n+  #80 = Utf8               (J)Ljava/lang/Long;\n+  #81 = Utf8               java/lang/String\n+  #82 = Utf8               format\n+  #83 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #84 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n {\n   int ibitWorkArea;\n     descriptor: I\n     flags: (0x0000)\n \n   long lbitWorkArea;\n     descriptor: J\n@@ -135,17 +132,14 @@\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 91: 0\n         line 92: 4\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       5     0  this   Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=1, args_size=1\n          0: ldc           #2                  // String %s[buffer=%s, currentLinePos=%s, eof=%s, ibitWorkArea=%s, lbitWorkArea=%s, modulus=%s, pos=%s, readPos=%s]\n@@ -208,14 +202,11 @@\n        100: invokestatic  #18                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n        103: areturn\n       LineNumberTable:\n         line 102: 0\n         line 103: 10\n         line 104: 33\n         line 102: 100\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0     104     0  this   Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n }\n SourceFile: \"BaseNCodec.java\"\n InnerClasses:\n-  static #38= #19 of #69;                 // Context=class org/apache/commons/codec/binary/BaseNCodec$Context of class org/apache/commons/codec/binary/BaseNCodec\n+  static #66= #19 of #64;                 // Context=class org/apache/commons/codec/binary/BaseNCodec$Context of class org/apache/commons/codec/binary/BaseNCodec\n"}]}
