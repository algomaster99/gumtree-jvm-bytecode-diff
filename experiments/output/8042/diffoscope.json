{"diffoscope-json-version": 1, "source1": "first/ZipLong.class", "source2": "second/ZipLong.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,153 +1,148 @@\n-  SHA-256 checksum a6a5f47f40221c23fd3e8a521e885f840951c34ae283c8996e8c9ad6dde9ccc3\n+  SHA-256 checksum f763d11727d3f675b32f4e9564fb254eeab4fd9f72505fbc3cb271dc28b24a2a\n   Compiled from \"ZipLong.java\"\n public final class org.apache.commons.compress.archivers.zip.ZipLong implements java.lang.Cloneable,java.io.Serializable\n   minor version: 0\n-  major version: 53\n+  major version: 51\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #10                         // org/apache/commons/compress/archivers/zip/ZipLong\n-  super_class: #36                        // java/lang/Object\n-  interfaces: 2, fields: 8, methods: 17, attributes: 3\n+  super_class: #41                        // java/lang/Object\n+  interfaces: 2, fields: 8, methods: 17, attributes: 1\n Constant pool:\n-    #1 = Class              #94           // org/apache/commons/compress/archivers/zip/ZipConstants\n-    #2 = Methodref          #36.#95       // java/lang/Object.\"<init>\":()V\n-    #3 = Fieldref           #10.#96       // org/apache/commons/compress/archivers/zip/ZipLong.value:J\n-    #4 = Methodref          #10.#97       // org/apache/commons/compress/archivers/zip/ZipLong.\"<init>\":([BI)V\n-    #5 = Methodref          #10.#98       // org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n-    #6 = Methodref          #10.#99       // org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B\n-    #7 = Methodref          #10.#100      // org/apache/commons/compress/archivers/zip/ZipLong.putLong:(J[BI)V\n-    #8 = Methodref          #101.#102     // org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n-    #9 = Methodref          #101.#103     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n-   #10 = Class              #104          // org/apache/commons/compress/archivers/zip/ZipLong\n-   #11 = Methodref          #10.#105      // org/apache/commons/compress/archivers/zip/ZipLong.getValue:()J\n-   #12 = Methodref          #36.#106      // java/lang/Object.clone:()Ljava/lang/Object;\n-   #13 = Class              #107          // java/lang/CloneNotSupportedException\n-   #14 = Class              #108          // java/lang/RuntimeException\n-   #15 = Methodref          #14.#109      // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n-   #16 = InvokeDynamic      #0:#113       // #0:makeConcatWithConstants:(J)Ljava/lang/String;\n-   #17 = Long               33639248l\n-   #19 = Methodref          #10.#114      // org/apache/commons/compress/archivers/zip/ZipLong.\"<init>\":(J)V\n-   #20 = Fieldref           #10.#115      // org/apache/commons/compress/archivers/zip/ZipLong.CFH_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-   #21 = Long               67324752l\n-   #23 = Fieldref           #10.#116      // org/apache/commons/compress/archivers/zip/ZipLong.LFH_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-   #24 = Long               134695760l\n-   #26 = Fieldref           #10.#117      // org/apache/commons/compress/archivers/zip/ZipLong.DD_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-   #27 = Long               4294967295l\n-   #29 = Fieldref           #10.#118      // org/apache/commons/compress/archivers/zip/ZipLong.ZIP64_MAGIC:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-   #30 = Long               808471376l\n-   #32 = Fieldref           #10.#119      // org/apache/commons/compress/archivers/zip/ZipLong.SINGLE_SEGMENT_SPLIT_MARKER:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-   #33 = Long               134630224l\n-   #35 = Fieldref           #10.#120      // org/apache/commons/compress/archivers/zip/ZipLong.AED_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-   #36 = Class              #121          // java/lang/Object\n-   #37 = Class              #122          // java/lang/Cloneable\n-   #38 = Class              #123          // java/io/Serializable\n-   #39 = Utf8               serialVersionUID\n-   #40 = Utf8               J\n-   #41 = Utf8               ConstantValue\n-   #42 = Long               1l\n-   #44 = Utf8               value\n-   #45 = Utf8               CFH_SIG\n-   #46 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-   #47 = Utf8               LFH_SIG\n-   #48 = Utf8               DD_SIG\n-   #49 = Utf8               ZIP64_MAGIC\n-   #50 = Utf8               SINGLE_SEGMENT_SPLIT_MARKER\n-   #51 = Utf8               AED_SIG\n-   #52 = Utf8               <init>\n-   #53 = Utf8               (J)V\n-   #54 = Utf8               Code\n-   #55 = Utf8               LineNumberTable\n-   #56 = Utf8               LocalVariableTable\n-   #57 = Utf8               this\n-   #58 = Utf8               (I)V\n-   #59 = Utf8               I\n-   #60 = Utf8               ([B)V\n-   #61 = Utf8               bytes\n-   #62 = Utf8               [B\n-   #63 = Utf8               ([BI)V\n-   #64 = Utf8               offset\n-   #65 = Utf8               getBytes\n-   #66 = Utf8               ()[B\n-   #67 = Utf8               getValue\n-   #68 = Utf8               ()J\n-   #69 = Utf8               getIntValue\n-   #70 = Utf8               ()I\n-   #71 = Utf8               (J)[B\n-   #72 = Utf8               result\n-   #73 = Utf8               putLong\n-   #74 = Utf8               (J[BI)V\n-   #75 = Utf8               buf\n-   #76 = Utf8               ([BI)J\n-   #77 = Utf8               ([B)J\n-   #78 = Utf8               equals\n-   #79 = Utf8               (Ljava/lang/Object;)Z\n-   #80 = Utf8               o\n-   #81 = Utf8               Ljava/lang/Object;\n-   #82 = Utf8               StackMapTable\n-   #83 = Utf8               hashCode\n-   #84 = Utf8               clone\n-   #85 = Utf8               ()Ljava/lang/Object;\n-   #86 = Utf8               cnfe\n-   #87 = Utf8               Ljava/lang/CloneNotSupportedException;\n-   #88 = Utf8               toString\n-   #89 = Utf8               ()Ljava/lang/String;\n-   #90 = Utf8               <clinit>\n-   #91 = Utf8               ()V\n-   #92 = Utf8               SourceFile\n-   #93 = Utf8               ZipLong.java\n-   #94 = Utf8               org/apache/commons/compress/archivers/zip/ZipConstants\n-   #95 = NameAndType        #52:#91       // \"<init>\":()V\n-   #96 = NameAndType        #44:#40       // value:J\n-   #97 = NameAndType        #52:#63       // \"<init>\":([BI)V\n-   #98 = NameAndType        #67:#76       // getValue:([BI)J\n-   #99 = NameAndType        #65:#71       // getBytes:(J)[B\n-  #100 = NameAndType        #73:#74       // putLong:(J[BI)V\n-  #101 = Class              #124          // org/apache/commons/compress/utils/ByteUtils\n-  #102 = NameAndType        #125:#126     // toLittleEndian:([BJII)V\n-  #103 = NameAndType        #127:#128     // fromLittleEndian:([BII)J\n-  #104 = Utf8               org/apache/commons/compress/archivers/zip/ZipLong\n-  #105 = NameAndType        #67:#68       // getValue:()J\n-  #106 = NameAndType        #84:#85       // clone:()Ljava/lang/Object;\n-  #107 = Utf8               java/lang/CloneNotSupportedException\n-  #108 = Utf8               java/lang/RuntimeException\n-  #109 = NameAndType        #52:#129      // \"<init>\":(Ljava/lang/Throwable;)V\n-  #110 = Utf8               BootstrapMethods\n-  #111 = MethodHandle       6:#130        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #112 = String             #131          // ZipLong value: \\u0001\n-  #113 = NameAndType        #132:#133     // makeConcatWithConstants:(J)Ljava/lang/String;\n-  #114 = NameAndType        #52:#53       // \"<init>\":(J)V\n-  #115 = NameAndType        #45:#46       // CFH_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-  #116 = NameAndType        #47:#46       // LFH_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-  #117 = NameAndType        #48:#46       // DD_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-  #118 = NameAndType        #49:#46       // ZIP64_MAGIC:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-  #119 = NameAndType        #50:#46       // SINGLE_SEGMENT_SPLIT_MARKER:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-  #120 = NameAndType        #51:#46       // AED_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-  #121 = Utf8               java/lang/Object\n-  #122 = Utf8               java/lang/Cloneable\n-  #123 = Utf8               java/io/Serializable\n-  #124 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #125 = Utf8               toLittleEndian\n-  #126 = Utf8               ([BJII)V\n-  #127 = Utf8               fromLittleEndian\n-  #128 = Utf8               ([BII)J\n-  #129 = Utf8               (Ljava/lang/Throwable;)V\n-  #130 = Methodref          #134.#135     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #131 = Utf8               ZipLong value: \\u0001\n-  #132 = Utf8               makeConcatWithConstants\n-  #133 = Utf8               (J)Ljava/lang/String;\n-  #134 = Class              #136          // java/lang/invoke/StringConcatFactory\n-  #135 = NameAndType        #132:#140     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #136 = Utf8               java/lang/invoke/StringConcatFactory\n-  #137 = Class              #142          // java/lang/invoke/MethodHandles$Lookup\n-  #138 = Utf8               Lookup\n-  #139 = Utf8               InnerClasses\n-  #140 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #141 = Class              #143          // java/lang/invoke/MethodHandles\n-  #142 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #143 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Class              #99           // org/apache/commons/compress/archivers/zip/ZipConstants\n+    #2 = Methodref          #41.#100      // java/lang/Object.\"<init>\":()V\n+    #3 = Fieldref           #10.#101      // org/apache/commons/compress/archivers/zip/ZipLong.value:J\n+    #4 = Methodref          #10.#102      // org/apache/commons/compress/archivers/zip/ZipLong.\"<init>\":([BI)V\n+    #5 = Methodref          #10.#103      // org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n+    #6 = Methodref          #10.#104      // org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B\n+    #7 = Methodref          #10.#105      // org/apache/commons/compress/archivers/zip/ZipLong.putLong:(J[BI)V\n+    #8 = Methodref          #106.#107     // org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n+    #9 = Methodref          #106.#108     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n+   #10 = Class              #109          // org/apache/commons/compress/archivers/zip/ZipLong\n+   #11 = Methodref          #10.#110      // org/apache/commons/compress/archivers/zip/ZipLong.getValue:()J\n+   #12 = Methodref          #41.#111      // java/lang/Object.clone:()Ljava/lang/Object;\n+   #13 = Class              #112          // java/lang/CloneNotSupportedException\n+   #14 = Class              #113          // java/lang/RuntimeException\n+   #15 = Methodref          #14.#114      // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+   #16 = Class              #115          // java/lang/StringBuilder\n+   #17 = Methodref          #16.#100      // java/lang/StringBuilder.\"<init>\":()V\n+   #18 = String             #116          // ZipLong value:\n+   #19 = Methodref          #16.#117      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #20 = Methodref          #16.#118      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+   #21 = Methodref          #16.#119      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #22 = Long               33639248l\n+   #24 = Methodref          #10.#120      // org/apache/commons/compress/archivers/zip/ZipLong.\"<init>\":(J)V\n+   #25 = Fieldref           #10.#121      // org/apache/commons/compress/archivers/zip/ZipLong.CFH_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+   #26 = Long               67324752l\n+   #28 = Fieldref           #10.#122      // org/apache/commons/compress/archivers/zip/ZipLong.LFH_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+   #29 = Long               134695760l\n+   #31 = Fieldref           #10.#123      // org/apache/commons/compress/archivers/zip/ZipLong.DD_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+   #32 = Long               4294967295l\n+   #34 = Fieldref           #10.#124      // org/apache/commons/compress/archivers/zip/ZipLong.ZIP64_MAGIC:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+   #35 = Long               808471376l\n+   #37 = Fieldref           #10.#125      // org/apache/commons/compress/archivers/zip/ZipLong.SINGLE_SEGMENT_SPLIT_MARKER:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+   #38 = Long               134630224l\n+   #40 = Fieldref           #10.#126      // org/apache/commons/compress/archivers/zip/ZipLong.AED_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+   #41 = Class              #127          // java/lang/Object\n+   #42 = Class              #128          // java/lang/Cloneable\n+   #43 = Class              #129          // java/io/Serializable\n+   #44 = Utf8               serialVersionUID\n+   #45 = Utf8               J\n+   #46 = Utf8               ConstantValue\n+   #47 = Long               1l\n+   #49 = Utf8               value\n+   #50 = Utf8               CFH_SIG\n+   #51 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+   #52 = Utf8               LFH_SIG\n+   #53 = Utf8               DD_SIG\n+   #54 = Utf8               ZIP64_MAGIC\n+   #55 = Utf8               SINGLE_SEGMENT_SPLIT_MARKER\n+   #56 = Utf8               AED_SIG\n+   #57 = Utf8               <init>\n+   #58 = Utf8               (J)V\n+   #59 = Utf8               Code\n+   #60 = Utf8               LineNumberTable\n+   #61 = Utf8               LocalVariableTable\n+   #62 = Utf8               this\n+   #63 = Utf8               (I)V\n+   #64 = Utf8               I\n+   #65 = Utf8               ([B)V\n+   #66 = Utf8               bytes\n+   #67 = Utf8               [B\n+   #68 = Utf8               ([BI)V\n+   #69 = Utf8               offset\n+   #70 = Utf8               getBytes\n+   #71 = Utf8               ()[B\n+   #72 = Utf8               getValue\n+   #73 = Utf8               ()J\n+   #74 = Utf8               getIntValue\n+   #75 = Utf8               ()I\n+   #76 = Utf8               (J)[B\n+   #77 = Utf8               result\n+   #78 = Utf8               putLong\n+   #79 = Utf8               (J[BI)V\n+   #80 = Utf8               buf\n+   #81 = Utf8               ([BI)J\n+   #82 = Utf8               ([B)J\n+   #83 = Utf8               equals\n+   #84 = Utf8               (Ljava/lang/Object;)Z\n+   #85 = Utf8               o\n+   #86 = Utf8               Ljava/lang/Object;\n+   #87 = Utf8               StackMapTable\n+   #88 = Utf8               hashCode\n+   #89 = Utf8               clone\n+   #90 = Utf8               ()Ljava/lang/Object;\n+   #91 = Utf8               cnfe\n+   #92 = Utf8               Ljava/lang/CloneNotSupportedException;\n+   #93 = Utf8               toString\n+   #94 = Utf8               ()Ljava/lang/String;\n+   #95 = Utf8               <clinit>\n+   #96 = Utf8               ()V\n+   #97 = Utf8               SourceFile\n+   #98 = Utf8               ZipLong.java\n+   #99 = Utf8               org/apache/commons/compress/archivers/zip/ZipConstants\n+  #100 = NameAndType        #57:#96       // \"<init>\":()V\n+  #101 = NameAndType        #49:#45       // value:J\n+  #102 = NameAndType        #57:#68       // \"<init>\":([BI)V\n+  #103 = NameAndType        #72:#81       // getValue:([BI)J\n+  #104 = NameAndType        #70:#76       // getBytes:(J)[B\n+  #105 = NameAndType        #78:#79       // putLong:(J[BI)V\n+  #106 = Class              #130          // org/apache/commons/compress/utils/ByteUtils\n+  #107 = NameAndType        #131:#132     // toLittleEndian:([BJII)V\n+  #108 = NameAndType        #133:#134     // fromLittleEndian:([BII)J\n+  #109 = Utf8               org/apache/commons/compress/archivers/zip/ZipLong\n+  #110 = NameAndType        #72:#73       // getValue:()J\n+  #111 = NameAndType        #89:#90       // clone:()Ljava/lang/Object;\n+  #112 = Utf8               java/lang/CloneNotSupportedException\n+  #113 = Utf8               java/lang/RuntimeException\n+  #114 = NameAndType        #57:#135      // \"<init>\":(Ljava/lang/Throwable;)V\n+  #115 = Utf8               java/lang/StringBuilder\n+  #116 = Utf8               ZipLong value:\n+  #117 = NameAndType        #136:#137     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #118 = NameAndType        #136:#138     // append:(J)Ljava/lang/StringBuilder;\n+  #119 = NameAndType        #93:#94       // toString:()Ljava/lang/String;\n+  #120 = NameAndType        #57:#58       // \"<init>\":(J)V\n+  #121 = NameAndType        #50:#51       // CFH_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+  #122 = NameAndType        #52:#51       // LFH_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+  #123 = NameAndType        #53:#51       // DD_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+  #124 = NameAndType        #54:#51       // ZIP64_MAGIC:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+  #125 = NameAndType        #55:#51       // SINGLE_SEGMENT_SPLIT_MARKER:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+  #126 = NameAndType        #56:#51       // AED_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+  #127 = Utf8               java/lang/Object\n+  #128 = Utf8               java/lang/Cloneable\n+  #129 = Utf8               java/io/Serializable\n+  #130 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #131 = Utf8               toLittleEndian\n+  #132 = Utf8               ([BJII)V\n+  #133 = Utf8               fromLittleEndian\n+  #134 = Utf8               ([BII)J\n+  #135 = Utf8               (Ljava/lang/Throwable;)V\n+  #136 = Utf8               append\n+  #137 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #138 = Utf8               (J)Ljava/lang/StringBuilder;\n {\n   private static final long serialVersionUID = 1l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 1l\n \n   private final long value;\n@@ -481,69 +476,69 @@\n         frame_type = 69 /* same_locals_1_stack_item */\n           stack = [ class java/lang/CloneNotSupportedException ]\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=2, locals=1, args_size=1\n-         0: aload_0\n-         1: getfield      #3                  // Field value:J\n-         4: invokedynamic #16,  0             // InvokeDynamic #0:makeConcatWithConstants:(J)Ljava/lang/String;\n-         9: areturn\n+      stack=3, locals=1, args_size=1\n+         0: new           #16                 // class java/lang/StringBuilder\n+         3: dup\n+         4: invokespecial #17                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         7: ldc           #18                 // String ZipLong value:\n+         9: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        12: aload_0\n+        13: getfield      #3                  // Field value:J\n+        16: invokevirtual #20                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        19: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        22: areturn\n       LineNumberTable:\n         line 214: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      10     0  this   Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+            0      23     0  this   Lorg/apache/commons/compress/archivers/zip/ZipLong;\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=4, locals=0, args_size=0\n          0: new           #10                 // class org/apache/commons/compress/archivers/zip/ZipLong\n          3: dup\n-         4: ldc2_w        #17                 // long 33639248l\n-         7: invokespecial #19                 // Method \"<init>\":(J)V\n-        10: putstatic     #20                 // Field CFH_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+         4: ldc2_w        #22                 // long 33639248l\n+         7: invokespecial #24                 // Method \"<init>\":(J)V\n+        10: putstatic     #25                 // Field CFH_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n         13: new           #10                 // class org/apache/commons/compress/archivers/zip/ZipLong\n         16: dup\n-        17: ldc2_w        #21                 // long 67324752l\n-        20: invokespecial #19                 // Method \"<init>\":(J)V\n-        23: putstatic     #23                 // Field LFH_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+        17: ldc2_w        #26                 // long 67324752l\n+        20: invokespecial #24                 // Method \"<init>\":(J)V\n+        23: putstatic     #28                 // Field LFH_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n         26: new           #10                 // class org/apache/commons/compress/archivers/zip/ZipLong\n         29: dup\n-        30: ldc2_w        #24                 // long 134695760l\n-        33: invokespecial #19                 // Method \"<init>\":(J)V\n-        36: putstatic     #26                 // Field DD_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+        30: ldc2_w        #29                 // long 134695760l\n+        33: invokespecial #24                 // Method \"<init>\":(J)V\n+        36: putstatic     #31                 // Field DD_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n         39: new           #10                 // class org/apache/commons/compress/archivers/zip/ZipLong\n         42: dup\n-        43: ldc2_w        #27                 // long 4294967295l\n-        46: invokespecial #19                 // Method \"<init>\":(J)V\n-        49: putstatic     #29                 // Field ZIP64_MAGIC:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+        43: ldc2_w        #32                 // long 4294967295l\n+        46: invokespecial #24                 // Method \"<init>\":(J)V\n+        49: putstatic     #34                 // Field ZIP64_MAGIC:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n         52: new           #10                 // class org/apache/commons/compress/archivers/zip/ZipLong\n         55: dup\n-        56: ldc2_w        #30                 // long 808471376l\n-        59: invokespecial #19                 // Method \"<init>\":(J)V\n-        62: putstatic     #32                 // Field SINGLE_SEGMENT_SPLIT_MARKER:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+        56: ldc2_w        #35                 // long 808471376l\n+        59: invokespecial #24                 // Method \"<init>\":(J)V\n+        62: putstatic     #37                 // Field SINGLE_SEGMENT_SPLIT_MARKER:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n         65: new           #10                 // class org/apache/commons/compress/archivers/zip/ZipLong\n         68: dup\n-        69: ldc2_w        #33                 // long 134630224l\n-        72: invokespecial #19                 // Method \"<init>\":(J)V\n-        75: putstatic     #35                 // Field AED_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+        69: ldc2_w        #38                 // long 134630224l\n+        72: invokespecial #24                 // Method \"<init>\":(J)V\n+        75: putstatic     #40                 // Field AED_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n         78: return\n       LineNumberTable:\n         line 37: 0\n         line 40: 13\n         line 50: 26\n         line 57: 39\n         line 67: 52\n         line 74: 65\n }\n SourceFile: \"ZipLong.java\"\n-InnerClasses:\n-  public static final #138= #137 of #141; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n-BootstrapMethods:\n-  0: #111 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #112 ZipLong value: \\u0001\n"}]}
