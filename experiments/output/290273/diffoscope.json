{"diffoscope-json-version": 1, "source1": "first/ProxyReader.class", "source2": "second/ProxyReader.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,94 +1,92 @@\n-  SHA-256 checksum 3cbf647db10b5f345aa8a0491f39bfae9388b14be758b02350875efb70ff5d49\n+  SHA-256 checksum f1e2845002f739793a1e15226025821519191433ac94f688a294435a4cd9b6bc\n   Compiled from \"ProxyReader.java\"\n public abstract class org.apache.commons.io.input.ProxyReader extends java.io.FilterReader\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #20                         // org/apache/commons/io/input/ProxyReader\n   super_class: #21                        // java/io/FilterReader\n   interfaces: 0, fields: 0, methods: 14, attributes: 1\n Constant pool:\n-   #1 = Class              #51            // org/apache/commons/io/IOUtils\n-   #2 = Methodref          #21.#52        // java/io/FilterReader.\"<init>\":(Ljava/io/Reader;)V\n-   #3 = Fieldref           #20.#53        // org/apache/commons/io/input/ProxyReader.in:Ljava/io/Reader;\n-   #4 = Methodref          #54.#55        // java/io/Reader.close:()V\n-   #5 = Class              #56            // java/io/IOException\n-   #6 = Methodref          #20.#57        // org/apache/commons/io/input/ProxyReader.handleIOException:(Ljava/io/IOException;)V\n-   #7 = Methodref          #54.#58        // java/io/Reader.mark:(I)V\n-   #8 = Methodref          #54.#59        // java/io/Reader.markSupported:()Z\n-   #9 = Methodref          #20.#60        // org/apache/commons/io/input/ProxyReader.beforeRead:(I)V\n-  #10 = Methodref          #54.#61        // java/io/Reader.read:()I\n-  #11 = Methodref          #20.#62        // org/apache/commons/io/input/ProxyReader.afterRead:(I)V\n-  #12 = Methodref          #1.#63         // org/apache/commons/io/IOUtils.length:([C)I\n-  #13 = Methodref          #54.#64        // java/io/Reader.read:([C)I\n-  #14 = Methodref          #54.#65        // java/io/Reader.read:([CII)I\n-  #15 = Methodref          #1.#66         // org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n-  #16 = Methodref          #54.#67        // java/io/Reader.read:(Ljava/nio/CharBuffer;)I\n-  #17 = Methodref          #54.#68        // java/io/Reader.ready:()Z\n-  #18 = Methodref          #54.#69        // java/io/Reader.reset:()V\n-  #19 = Methodref          #54.#70        // java/io/Reader.skip:(J)J\n-  #20 = Class              #71            // org/apache/commons/io/input/ProxyReader\n-  #21 = Class              #72            // java/io/FilterReader\n+   #1 = Class              #49            // org/apache/commons/io/IOUtils\n+   #2 = Methodref          #21.#50        // java/io/FilterReader.\"<init>\":(Ljava/io/Reader;)V\n+   #3 = Fieldref           #20.#51        // org/apache/commons/io/input/ProxyReader.in:Ljava/io/Reader;\n+   #4 = Methodref          #52.#53        // java/io/Reader.close:()V\n+   #5 = Class              #54            // java/io/IOException\n+   #6 = Methodref          #20.#55        // org/apache/commons/io/input/ProxyReader.handleIOException:(Ljava/io/IOException;)V\n+   #7 = Methodref          #52.#56        // java/io/Reader.mark:(I)V\n+   #8 = Methodref          #52.#57        // java/io/Reader.markSupported:()Z\n+   #9 = Methodref          #20.#58        // org/apache/commons/io/input/ProxyReader.beforeRead:(I)V\n+  #10 = Methodref          #52.#59        // java/io/Reader.read:()I\n+  #11 = Methodref          #20.#60        // org/apache/commons/io/input/ProxyReader.afterRead:(I)V\n+  #12 = Methodref          #1.#61         // org/apache/commons/io/IOUtils.length:([C)I\n+  #13 = Methodref          #52.#62        // java/io/Reader.read:([C)I\n+  #14 = Methodref          #52.#63        // java/io/Reader.read:([CII)I\n+  #15 = Methodref          #1.#64         // org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n+  #16 = Methodref          #52.#65        // java/io/Reader.read:(Ljava/nio/CharBuffer;)I\n+  #17 = Methodref          #52.#66        // java/io/Reader.ready:()Z\n+  #18 = Methodref          #52.#67        // java/io/Reader.reset:()V\n+  #19 = Methodref          #52.#68        // java/io/Reader.skip:(J)J\n+  #20 = Class              #69            // org/apache/commons/io/input/ProxyReader\n+  #21 = Class              #70            // java/io/FilterReader\n   #22 = Utf8               <init>\n   #23 = Utf8               (Ljava/io/Reader;)V\n   #24 = Utf8               Code\n   #25 = Utf8               LineNumberTable\n   #26 = Utf8               afterRead\n   #27 = Utf8               (I)V\n   #28 = Utf8               Exceptions\n   #29 = Utf8               beforeRead\n   #30 = Utf8               close\n   #31 = Utf8               ()V\n   #32 = Utf8               StackMapTable\n-  #33 = Class              #56            // java/io/IOException\n-  #34 = Utf8               handleIOException\n-  #35 = Utf8               (Ljava/io/IOException;)V\n-  #36 = Utf8               mark\n-  #37 = Utf8               markSupported\n-  #38 = Utf8               ()Z\n-  #39 = Utf8               read\n-  #40 = Utf8               ()I\n-  #41 = Class              #71            // org/apache/commons/io/input/ProxyReader\n-  #42 = Utf8               ([C)I\n-  #43 = Utf8               ([CII)I\n-  #44 = Utf8               (Ljava/nio/CharBuffer;)I\n-  #45 = Utf8               ready\n-  #46 = Utf8               reset\n-  #47 = Utf8               skip\n-  #48 = Utf8               (J)J\n-  #49 = Utf8               SourceFile\n-  #50 = Utf8               ProxyReader.java\n-  #51 = Utf8               org/apache/commons/io/IOUtils\n-  #52 = NameAndType        #22:#23        // \"<init>\":(Ljava/io/Reader;)V\n-  #53 = NameAndType        #73:#74        // in:Ljava/io/Reader;\n-  #54 = Class              #75            // java/io/Reader\n-  #55 = NameAndType        #30:#31        // close:()V\n-  #56 = Utf8               java/io/IOException\n-  #57 = NameAndType        #34:#35        // handleIOException:(Ljava/io/IOException;)V\n-  #58 = NameAndType        #36:#27        // mark:(I)V\n-  #59 = NameAndType        #37:#38        // markSupported:()Z\n-  #60 = NameAndType        #29:#27        // beforeRead:(I)V\n-  #61 = NameAndType        #39:#40        // read:()I\n-  #62 = NameAndType        #26:#27        // afterRead:(I)V\n-  #63 = NameAndType        #76:#42        // length:([C)I\n-  #64 = NameAndType        #39:#42        // read:([C)I\n-  #65 = NameAndType        #39:#43        // read:([CII)I\n-  #66 = NameAndType        #76:#77        // length:(Ljava/lang/CharSequence;)I\n-  #67 = NameAndType        #39:#44        // read:(Ljava/nio/CharBuffer;)I\n-  #68 = NameAndType        #45:#38        // ready:()Z\n-  #69 = NameAndType        #46:#31        // reset:()V\n-  #70 = NameAndType        #47:#48        // skip:(J)J\n-  #71 = Utf8               org/apache/commons/io/input/ProxyReader\n-  #72 = Utf8               java/io/FilterReader\n-  #73 = Utf8               in\n-  #74 = Utf8               Ljava/io/Reader;\n-  #75 = Utf8               java/io/Reader\n-  #76 = Utf8               length\n-  #77 = Utf8               (Ljava/lang/CharSequence;)I\n+  #33 = Utf8               handleIOException\n+  #34 = Utf8               (Ljava/io/IOException;)V\n+  #35 = Utf8               mark\n+  #36 = Utf8               markSupported\n+  #37 = Utf8               ()Z\n+  #38 = Utf8               read\n+  #39 = Utf8               ()I\n+  #40 = Utf8               ([C)I\n+  #41 = Utf8               ([CII)I\n+  #42 = Utf8               (Ljava/nio/CharBuffer;)I\n+  #43 = Utf8               ready\n+  #44 = Utf8               reset\n+  #45 = Utf8               skip\n+  #46 = Utf8               (J)J\n+  #47 = Utf8               SourceFile\n+  #48 = Utf8               ProxyReader.java\n+  #49 = Utf8               org/apache/commons/io/IOUtils\n+  #50 = NameAndType        #22:#23        // \"<init>\":(Ljava/io/Reader;)V\n+  #51 = NameAndType        #71:#72        // in:Ljava/io/Reader;\n+  #52 = Class              #73            // java/io/Reader\n+  #53 = NameAndType        #30:#31        // close:()V\n+  #54 = Utf8               java/io/IOException\n+  #55 = NameAndType        #33:#34        // handleIOException:(Ljava/io/IOException;)V\n+  #56 = NameAndType        #35:#27        // mark:(I)V\n+  #57 = NameAndType        #36:#37        // markSupported:()Z\n+  #58 = NameAndType        #29:#27        // beforeRead:(I)V\n+  #59 = NameAndType        #38:#39        // read:()I\n+  #60 = NameAndType        #26:#27        // afterRead:(I)V\n+  #61 = NameAndType        #74:#40        // length:([C)I\n+  #62 = NameAndType        #38:#40        // read:([C)I\n+  #63 = NameAndType        #38:#41        // read:([CII)I\n+  #64 = NameAndType        #74:#75        // length:(Ljava/lang/CharSequence;)I\n+  #65 = NameAndType        #38:#42        // read:(Ljava/nio/CharBuffer;)I\n+  #66 = NameAndType        #43:#37        // ready:()Z\n+  #67 = NameAndType        #44:#31        // reset:()V\n+  #68 = NameAndType        #45:#46        // skip:(J)J\n+  #69 = Utf8               org/apache/commons/io/input/ProxyReader\n+  #70 = Utf8               java/io/FilterReader\n+  #71 = Utf8               in\n+  #72 = Utf8               Ljava/io/Reader;\n+  #73 = Utf8               java/io/Reader\n+  #74 = Utf8               length\n+  #75 = Utf8               (Ljava/lang/CharSequence;)I\n {\n   public org.apache.commons.io.input.ProxyReader(java.io.Reader);\n     descriptor: (Ljava/io/Reader;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n"}]}
