{"diffoscope-json-version": 1, "source1": "first/X000A_NTFS.class", "source2": "second/X000A_NTFS.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,198 +1,198 @@\n-  SHA-256 checksum 3636685143d72d33e8772716c44466f60812e0faf3c4b24c2ad18f1236e5b685\n+  SHA-256 checksum 6860fc4403e6941cc7f2d284bcd6d37a8226fc45e912c4b518f8d1f6425981ef\n   Compiled from \"X000A_NTFS.java\"\n public class org.apache.commons.compress.archivers.zip.X000A_NTFS implements org.apache.commons.compress.archivers.zip.ZipExtraField\n   minor version: 0\n   major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #40                         // org/apache/commons/compress/archivers/zip/X000A_NTFS\n-  super_class: #55                        // java/lang/Object\n+  this_class: #14                         // org/apache/commons/compress/archivers/zip/X000A_NTFS\n+  super_class: #2                         // java/lang/Object\n   interfaces: 1, fields: 7, methods: 28, attributes: 1\n Constant pool:\n-    #1 = Methodref          #55.#116      // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #44.#117      // org/apache/commons/compress/archivers/zip/ZipEightByteInteger.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-    #3 = Fieldref           #40.#118      // org/apache/commons/compress/archivers/zip/X000A_NTFS.modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-    #4 = Fieldref           #40.#119      // org/apache/commons/compress/archivers/zip/X000A_NTFS.accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-    #5 = Fieldref           #40.#120      // org/apache/commons/compress/archivers/zip/X000A_NTFS.createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-    #6 = Fieldref           #40.#121      // org/apache/commons/compress/archivers/zip/X000A_NTFS.HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-    #7 = Class              #122          // org/apache/commons/compress/archivers/zip/ZipShort\n-    #8 = Methodref          #7.#123       // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-    #9 = Methodref          #40.#124      // org/apache/commons/compress/archivers/zip/X000A_NTFS.getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #10 = Methodref          #7.#125       // org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I\n-   #11 = Fieldref           #40.#126      // org/apache/commons/compress/archivers/zip/X000A_NTFS.TIME_ATTR_TAG:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #12 = Methodref          #7.#127       // org/apache/commons/compress/archivers/zip/ZipShort.getBytes:()[B\n-   #13 = Methodref          #128.#129     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #14 = Fieldref           #40.#130      // org/apache/commons/compress/archivers/zip/X000A_NTFS.TIME_ATTR_SIZE:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #15 = Methodref          #44.#127      // org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:()[B\n-   #16 = Methodref          #40.#131      // org/apache/commons/compress/archivers/zip/X000A_NTFS.getLocalFileDataData:()[B\n-   #17 = Methodref          #7.#132       // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":([BI)V\n-   #18 = Methodref          #7.#133       // org/apache/commons/compress/archivers/zip/ZipShort.equals:(Ljava/lang/Object;)Z\n-   #19 = Methodref          #40.#134      // org/apache/commons/compress/archivers/zip/X000A_NTFS.readTimeAttr:([BII)V\n-   #20 = Methodref          #40.#135      // org/apache/commons/compress/archivers/zip/X000A_NTFS.reset:()V\n-   #21 = Methodref          #40.#136      // org/apache/commons/compress/archivers/zip/X000A_NTFS.parseFromLocalFileData:([BII)V\n-   #22 = Methodref          #40.#137      // org/apache/commons/compress/archivers/zip/X000A_NTFS.zipToDate:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)Ljava/util/Date;\n-   #23 = Methodref          #40.#138      // org/apache/commons/compress/archivers/zip/X000A_NTFS.dateToZip:(Ljava/util/Date;)Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-   #24 = Methodref          #40.#139      // org/apache/commons/compress/archivers/zip/X000A_NTFS.setModifyTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n-   #25 = Methodref          #40.#140      // org/apache/commons/compress/archivers/zip/X000A_NTFS.setAccessTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n-   #26 = Methodref          #40.#141      // org/apache/commons/compress/archivers/zip/X000A_NTFS.setCreateTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n-   #27 = Class              #142          // java/lang/StringBuilder\n-   #28 = Methodref          #27.#116      // java/lang/StringBuilder.\"<init>\":()V\n-   #29 = String             #143          // 0x000A Zip Extra Field:\n-   #30 = Methodref          #27.#144      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #31 = String             #145          //  Modify:[\n-   #32 = Methodref          #40.#146      // org/apache/commons/compress/archivers/zip/X000A_NTFS.getModifyJavaTime:()Ljava/util/Date;\n-   #33 = Methodref          #27.#147      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #34 = String             #148          // ]\n-   #35 = String             #149          //  Access:[\n-   #36 = Methodref          #40.#150      // org/apache/commons/compress/archivers/zip/X000A_NTFS.getAccessJavaTime:()Ljava/util/Date;\n-   #37 = String             #151          //  Create:[\n-   #38 = Methodref          #40.#152      // org/apache/commons/compress/archivers/zip/X000A_NTFS.getCreateJavaTime:()Ljava/util/Date;\n-   #39 = Methodref          #27.#153      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #40 = Class              #154          // org/apache/commons/compress/archivers/zip/X000A_NTFS\n-   #41 = Methodref          #44.#133      // org/apache/commons/compress/archivers/zip/ZipEightByteInteger.equals:(Ljava/lang/Object;)Z\n-   #42 = Methodref          #44.#155      // org/apache/commons/compress/archivers/zip/ZipEightByteInteger.hashCode:()I\n-   #43 = Methodref          #156.#157     // java/lang/Integer.rotateLeft:(II)I\n-   #44 = Class              #158          // org/apache/commons/compress/archivers/zip/ZipEightByteInteger\n-   #45 = Methodref          #44.#132      // org/apache/commons/compress/archivers/zip/ZipEightByteInteger.\"<init>\":([BI)V\n-   #46 = Methodref          #53.#159      // java/util/Date.getTime:()J\n-   #47 = Long               10000l\n-   #49 = Long               -116444736000000000l\n-   #51 = Methodref          #44.#160      // org/apache/commons/compress/archivers/zip/ZipEightByteInteger.\"<init>\":(J)V\n-   #52 = Methodref          #44.#161      // org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getLongValue:()J\n-   #53 = Class              #162          // java/util/Date\n-   #54 = Methodref          #53.#160      // java/util/Date.\"<init>\":(J)V\n-   #55 = Class              #163          // java/lang/Object\n-   #56 = Class              #164          // org/apache/commons/compress/archivers/zip/ZipExtraField\n-   #57 = Utf8               HEADER_ID\n-   #58 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #59 = Utf8               TIME_ATTR_TAG\n-   #60 = Utf8               TIME_ATTR_SIZE\n-   #61 = Utf8               modifyTime\n-   #62 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-   #63 = Utf8               accessTime\n-   #64 = Utf8               createTime\n-   #65 = Utf8               EPOCH_OFFSET\n-   #66 = Utf8               J\n-   #67 = Utf8               ConstantValue\n-   #68 = Utf8               <init>\n-   #69 = Utf8               ()V\n-   #70 = Utf8               Code\n-   #71 = Utf8               LineNumberTable\n-   #72 = Utf8               getHeaderId\n-   #73 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #74 = Utf8               getLocalFileDataLength\n-   #75 = Utf8               getCentralDirectoryLength\n-   #76 = Utf8               getLocalFileDataData\n-   #77 = Utf8               ()[B\n-   #78 = Utf8               getCentralDirectoryData\n-   #79 = Utf8               parseFromLocalFileData\n-   #80 = Utf8               ([BII)V\n-   #81 = Utf8               StackMapTable\n-   #82 = Utf8               Exceptions\n-   #83 = Class              #165          // java/util/zip/ZipException\n-   #84 = Utf8               parseFromCentralDirectoryData\n-   #85 = Utf8               getModifyTime\n-   #86 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-   #87 = Utf8               getAccessTime\n-   #88 = Utf8               getCreateTime\n-   #89 = Utf8               getModifyJavaTime\n-   #90 = Utf8               ()Ljava/util/Date;\n-   #91 = Utf8               getAccessJavaTime\n-   #92 = Utf8               getCreateJavaTime\n-   #93 = Utf8               setModifyTime\n-   #94 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n-   #95 = Utf8               setAccessTime\n-   #96 = Utf8               setCreateTime\n-   #97 = Utf8               setModifyJavaTime\n-   #98 = Utf8               (Ljava/util/Date;)V\n-   #99 = Utf8               setAccessJavaTime\n-  #100 = Utf8               setCreateJavaTime\n-  #101 = Utf8               toString\n-  #102 = Utf8               ()Ljava/lang/String;\n-  #103 = Utf8               equals\n-  #104 = Utf8               (Ljava/lang/Object;)Z\n-  #105 = Utf8               hashCode\n-  #106 = Utf8               ()I\n-  #107 = Utf8               reset\n-  #108 = Utf8               readTimeAttr\n-  #109 = Utf8               dateToZip\n-  #110 = Utf8               (Ljava/util/Date;)Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-  #111 = Utf8               zipToDate\n-  #112 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)Ljava/util/Date;\n-  #113 = Utf8               <clinit>\n-  #114 = Utf8               SourceFile\n-  #115 = Utf8               X000A_NTFS.java\n-  #116 = NameAndType        #68:#69       // \"<init>\":()V\n-  #117 = NameAndType        #166:#62      // ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-  #118 = NameAndType        #61:#62       // modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-  #119 = NameAndType        #63:#62       // accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-  #120 = NameAndType        #64:#62       // createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-  #121 = NameAndType        #57:#58       // HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #122 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-  #123 = NameAndType        #68:#167      // \"<init>\":(I)V\n-  #124 = NameAndType        #74:#73       // getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #125 = NameAndType        #168:#106     // getValue:()I\n-  #126 = NameAndType        #59:#58       // TIME_ATTR_TAG:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #127 = NameAndType        #169:#77      // getBytes:()[B\n-  #128 = Class              #170          // java/lang/System\n-  #129 = NameAndType        #171:#172     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #130 = NameAndType        #60:#58       // TIME_ATTR_SIZE:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #131 = NameAndType        #76:#77       // getLocalFileDataData:()[B\n-  #132 = NameAndType        #68:#173      // \"<init>\":([BI)V\n-  #133 = NameAndType        #103:#104     // equals:(Ljava/lang/Object;)Z\n-  #134 = NameAndType        #108:#80      // readTimeAttr:([BII)V\n-  #135 = NameAndType        #107:#69      // reset:()V\n-  #136 = NameAndType        #79:#80       // parseFromLocalFileData:([BII)V\n-  #137 = NameAndType        #111:#112     // zipToDate:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)Ljava/util/Date;\n-  #138 = NameAndType        #109:#110     // dateToZip:(Ljava/util/Date;)Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-  #139 = NameAndType        #93:#94       // setModifyTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n-  #140 = NameAndType        #95:#94       // setAccessTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n-  #141 = NameAndType        #96:#94       // setCreateTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n-  #142 = Utf8               java/lang/StringBuilder\n-  #143 = Utf8               0x000A Zip Extra Field:\n-  #144 = NameAndType        #174:#175     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #145 = Utf8                Modify:[\n-  #146 = NameAndType        #89:#90       // getModifyJavaTime:()Ljava/util/Date;\n-  #147 = NameAndType        #174:#176     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #148 = Utf8               ]\n-  #149 = Utf8                Access:[\n-  #150 = NameAndType        #91:#90       // getAccessJavaTime:()Ljava/util/Date;\n-  #151 = Utf8                Create:[\n-  #152 = NameAndType        #92:#90       // getCreateJavaTime:()Ljava/util/Date;\n-  #153 = NameAndType        #101:#102     // toString:()Ljava/lang/String;\n-  #154 = Utf8               org/apache/commons/compress/archivers/zip/X000A_NTFS\n-  #155 = NameAndType        #105:#106     // hashCode:()I\n-  #156 = Class              #177          // java/lang/Integer\n-  #157 = NameAndType        #178:#179     // rotateLeft:(II)I\n-  #158 = Utf8               org/apache/commons/compress/archivers/zip/ZipEightByteInteger\n-  #159 = NameAndType        #180:#181     // getTime:()J\n-  #160 = NameAndType        #68:#182      // \"<init>\":(J)V\n-  #161 = NameAndType        #183:#181     // getLongValue:()J\n-  #162 = Utf8               java/util/Date\n-  #163 = Utf8               java/lang/Object\n-  #164 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n-  #165 = Utf8               java/util/zip/ZipException\n-  #166 = Utf8               ZERO\n-  #167 = Utf8               (I)V\n-  #168 = Utf8               getValue\n-  #169 = Utf8               getBytes\n-  #170 = Utf8               java/lang/System\n-  #171 = Utf8               arraycopy\n-  #172 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #173 = Utf8               ([BI)V\n-  #174 = Utf8               append\n-  #175 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #176 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #177 = Utf8               java/lang/Integer\n-  #178 = Utf8               rotateLeft\n-  #179 = Utf8               (II)I\n-  #180 = Utf8               getTime\n-  #181 = Utf8               ()J\n-  #182 = Utf8               (J)V\n-  #183 = Utf8               getLongValue\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Fieldref           #8.#9         // org/apache/commons/compress/archivers/zip/ZipEightByteInteger.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+    #8 = Class              #10           // org/apache/commons/compress/archivers/zip/ZipEightByteInteger\n+    #9 = NameAndType        #11:#12       // ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+   #10 = Utf8               org/apache/commons/compress/archivers/zip/ZipEightByteInteger\n+   #11 = Utf8               ZERO\n+   #12 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+   #13 = Fieldref           #14.#15       // org/apache/commons/compress/archivers/zip/X000A_NTFS.modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+   #14 = Class              #16           // org/apache/commons/compress/archivers/zip/X000A_NTFS\n+   #15 = NameAndType        #17:#12       // modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+   #16 = Utf8               org/apache/commons/compress/archivers/zip/X000A_NTFS\n+   #17 = Utf8               modifyTime\n+   #18 = Fieldref           #14.#19       // org/apache/commons/compress/archivers/zip/X000A_NTFS.accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+   #19 = NameAndType        #20:#12       // accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+   #20 = Utf8               accessTime\n+   #21 = Fieldref           #14.#22       // org/apache/commons/compress/archivers/zip/X000A_NTFS.createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+   #22 = NameAndType        #23:#12       // createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+   #23 = Utf8               createTime\n+   #24 = Fieldref           #14.#25       // org/apache/commons/compress/archivers/zip/X000A_NTFS.HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #25 = NameAndType        #26:#27       // HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #26 = Utf8               HEADER_ID\n+   #27 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #28 = Class              #29           // org/apache/commons/compress/archivers/zip/ZipShort\n+   #29 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+   #30 = Methodref          #28.#31       // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+   #31 = NameAndType        #5:#32        // \"<init>\":(I)V\n+   #32 = Utf8               (I)V\n+   #33 = Methodref          #14.#34       // org/apache/commons/compress/archivers/zip/X000A_NTFS.getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #34 = NameAndType        #35:#36       // getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #35 = Utf8               getLocalFileDataLength\n+   #36 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #37 = Methodref          #28.#38       // org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I\n+   #38 = NameAndType        #39:#40       // getValue:()I\n+   #39 = Utf8               getValue\n+   #40 = Utf8               ()I\n+   #41 = Fieldref           #14.#42       // org/apache/commons/compress/archivers/zip/X000A_NTFS.TIME_ATTR_TAG:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #42 = NameAndType        #43:#27       // TIME_ATTR_TAG:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #43 = Utf8               TIME_ATTR_TAG\n+   #44 = Methodref          #28.#45       // org/apache/commons/compress/archivers/zip/ZipShort.getBytes:()[B\n+   #45 = NameAndType        #46:#47       // getBytes:()[B\n+   #46 = Utf8               getBytes\n+   #47 = Utf8               ()[B\n+   #48 = Methodref          #49.#50       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #49 = Class              #51           // java/lang/System\n+   #50 = NameAndType        #52:#53       // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #51 = Utf8               java/lang/System\n+   #52 = Utf8               arraycopy\n+   #53 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #54 = Fieldref           #14.#55       // org/apache/commons/compress/archivers/zip/X000A_NTFS.TIME_ATTR_SIZE:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #55 = NameAndType        #56:#27       // TIME_ATTR_SIZE:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #56 = Utf8               TIME_ATTR_SIZE\n+   #57 = Methodref          #8.#45        // org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:()[B\n+   #58 = Methodref          #14.#59       // org/apache/commons/compress/archivers/zip/X000A_NTFS.getLocalFileDataData:()[B\n+   #59 = NameAndType        #60:#47       // getLocalFileDataData:()[B\n+   #60 = Utf8               getLocalFileDataData\n+   #61 = Methodref          #28.#62       // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":([BI)V\n+   #62 = NameAndType        #5:#63        // \"<init>\":([BI)V\n+   #63 = Utf8               ([BI)V\n+   #64 = Methodref          #28.#65       // org/apache/commons/compress/archivers/zip/ZipShort.equals:(Ljava/lang/Object;)Z\n+   #65 = NameAndType        #66:#67       // equals:(Ljava/lang/Object;)Z\n+   #66 = Utf8               equals\n+   #67 = Utf8               (Ljava/lang/Object;)Z\n+   #68 = Methodref          #14.#69       // org/apache/commons/compress/archivers/zip/X000A_NTFS.readTimeAttr:([BII)V\n+   #69 = NameAndType        #70:#71       // readTimeAttr:([BII)V\n+   #70 = Utf8               readTimeAttr\n+   #71 = Utf8               ([BII)V\n+   #72 = Methodref          #14.#73       // org/apache/commons/compress/archivers/zip/X000A_NTFS.reset:()V\n+   #73 = NameAndType        #74:#6        // reset:()V\n+   #74 = Utf8               reset\n+   #75 = Methodref          #14.#76       // org/apache/commons/compress/archivers/zip/X000A_NTFS.parseFromLocalFileData:([BII)V\n+   #76 = NameAndType        #77:#71       // parseFromLocalFileData:([BII)V\n+   #77 = Utf8               parseFromLocalFileData\n+   #78 = Methodref          #14.#79       // org/apache/commons/compress/archivers/zip/X000A_NTFS.zipToDate:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)Ljava/util/Date;\n+   #79 = NameAndType        #80:#81       // zipToDate:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)Ljava/util/Date;\n+   #80 = Utf8               zipToDate\n+   #81 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)Ljava/util/Date;\n+   #82 = Methodref          #14.#83       // org/apache/commons/compress/archivers/zip/X000A_NTFS.dateToZip:(Ljava/util/Date;)Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+   #83 = NameAndType        #84:#85       // dateToZip:(Ljava/util/Date;)Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+   #84 = Utf8               dateToZip\n+   #85 = Utf8               (Ljava/util/Date;)Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+   #86 = Methodref          #14.#87       // org/apache/commons/compress/archivers/zip/X000A_NTFS.setModifyTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n+   #87 = NameAndType        #88:#89       // setModifyTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n+   #88 = Utf8               setModifyTime\n+   #89 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n+   #90 = Methodref          #14.#91       // org/apache/commons/compress/archivers/zip/X000A_NTFS.setAccessTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n+   #91 = NameAndType        #92:#89       // setAccessTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n+   #92 = Utf8               setAccessTime\n+   #93 = Methodref          #14.#94       // org/apache/commons/compress/archivers/zip/X000A_NTFS.setCreateTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n+   #94 = NameAndType        #95:#89       // setCreateTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n+   #95 = Utf8               setCreateTime\n+   #96 = Class              #97           // java/lang/StringBuilder\n+   #97 = Utf8               java/lang/StringBuilder\n+   #98 = Methodref          #96.#3        // java/lang/StringBuilder.\"<init>\":()V\n+   #99 = String             #100          // 0x000A Zip Extra Field:\n+  #100 = Utf8               0x000A Zip Extra Field:\n+  #101 = Methodref          #96.#102      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #102 = NameAndType        #103:#104     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #103 = Utf8               append\n+  #104 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #105 = String             #106          //  Modify:[\n+  #106 = Utf8                Modify:[\n+  #107 = Methodref          #14.#108      // org/apache/commons/compress/archivers/zip/X000A_NTFS.getModifyJavaTime:()Ljava/util/Date;\n+  #108 = NameAndType        #109:#110     // getModifyJavaTime:()Ljava/util/Date;\n+  #109 = Utf8               getModifyJavaTime\n+  #110 = Utf8               ()Ljava/util/Date;\n+  #111 = Methodref          #96.#112      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #112 = NameAndType        #103:#113     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #113 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #114 = String             #115          // ]\n+  #115 = Utf8               ]\n+  #116 = String             #117          //  Access:[\n+  #117 = Utf8                Access:[\n+  #118 = Methodref          #14.#119      // org/apache/commons/compress/archivers/zip/X000A_NTFS.getAccessJavaTime:()Ljava/util/Date;\n+  #119 = NameAndType        #120:#110     // getAccessJavaTime:()Ljava/util/Date;\n+  #120 = Utf8               getAccessJavaTime\n+  #121 = String             #122          //  Create:[\n+  #122 = Utf8                Create:[\n+  #123 = Methodref          #14.#124      // org/apache/commons/compress/archivers/zip/X000A_NTFS.getCreateJavaTime:()Ljava/util/Date;\n+  #124 = NameAndType        #125:#110     // getCreateJavaTime:()Ljava/util/Date;\n+  #125 = Utf8               getCreateJavaTime\n+  #126 = Methodref          #96.#127      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #127 = NameAndType        #128:#129     // toString:()Ljava/lang/String;\n+  #128 = Utf8               toString\n+  #129 = Utf8               ()Ljava/lang/String;\n+  #130 = Methodref          #8.#65        // org/apache/commons/compress/archivers/zip/ZipEightByteInteger.equals:(Ljava/lang/Object;)Z\n+  #131 = Methodref          #8.#132       // org/apache/commons/compress/archivers/zip/ZipEightByteInteger.hashCode:()I\n+  #132 = NameAndType        #133:#40      // hashCode:()I\n+  #133 = Utf8               hashCode\n+  #134 = Methodref          #135.#136     // java/lang/Integer.rotateLeft:(II)I\n+  #135 = Class              #137          // java/lang/Integer\n+  #136 = NameAndType        #138:#139     // rotateLeft:(II)I\n+  #137 = Utf8               java/lang/Integer\n+  #138 = Utf8               rotateLeft\n+  #139 = Utf8               (II)I\n+  #140 = Methodref          #8.#62        // org/apache/commons/compress/archivers/zip/ZipEightByteInteger.\"<init>\":([BI)V\n+  #141 = Methodref          #142.#143     // java/util/Date.getTime:()J\n+  #142 = Class              #144          // java/util/Date\n+  #143 = NameAndType        #145:#146     // getTime:()J\n+  #144 = Utf8               java/util/Date\n+  #145 = Utf8               getTime\n+  #146 = Utf8               ()J\n+  #147 = Long               10000l\n+  #149 = Long               -116444736000000000l\n+  #151 = Methodref          #8.#152       // org/apache/commons/compress/archivers/zip/ZipEightByteInteger.\"<init>\":(J)V\n+  #152 = NameAndType        #5:#153       // \"<init>\":(J)V\n+  #153 = Utf8               (J)V\n+  #154 = Methodref          #8.#155       // org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getLongValue:()J\n+  #155 = NameAndType        #156:#146     // getLongValue:()J\n+  #156 = Utf8               getLongValue\n+  #157 = Methodref          #142.#152     // java/util/Date.\"<init>\":(J)V\n+  #158 = Class              #159          // org/apache/commons/compress/archivers/zip/ZipExtraField\n+  #159 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n+  #160 = Utf8               EPOCH_OFFSET\n+  #161 = Utf8               J\n+  #162 = Utf8               ConstantValue\n+  #163 = Utf8               Code\n+  #164 = Utf8               LineNumberTable\n+  #165 = Utf8               getHeaderId\n+  #166 = Utf8               getCentralDirectoryLength\n+  #167 = Utf8               getCentralDirectoryData\n+  #168 = Utf8               StackMapTable\n+  #169 = Utf8               Exceptions\n+  #170 = Class              #171          // java/util/zip/ZipException\n+  #171 = Utf8               java/util/zip/ZipException\n+  #172 = Utf8               parseFromCentralDirectoryData\n+  #173 = Utf8               getModifyTime\n+  #174 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+  #175 = Utf8               getAccessTime\n+  #176 = Utf8               getCreateTime\n+  #177 = Utf8               setModifyJavaTime\n+  #178 = Utf8               (Ljava/util/Date;)V\n+  #179 = Utf8               setAccessJavaTime\n+  #180 = Utf8               setCreateJavaTime\n+  #181 = Utf8               <clinit>\n+  #182 = Utf8               SourceFile\n+  #183 = Utf8               X000A_NTFS.java\n {\n   private static final org.apache.commons.compress.archivers.zip.ZipShort HEADER_ID;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final org.apache.commons.compress.archivers.zip.ZipShort TIME_ATTR_TAG;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipShort;\n@@ -223,117 +223,117 @@\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: getstatic     #2                  // Field org/apache/commons/compress/archivers/zip/ZipEightByteInteger.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-         8: putfield      #3                  // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+         5: getstatic     #7                  // Field org/apache/commons/compress/archivers/zip/ZipEightByteInteger.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+         8: putfield      #13                 // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n         11: aload_0\n-        12: getstatic     #2                  // Field org/apache/commons/compress/archivers/zip/ZipEightByteInteger.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-        15: putfield      #4                  // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        12: getstatic     #7                  // Field org/apache/commons/compress/archivers/zip/ZipEightByteInteger.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        15: putfield      #18                 // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n         18: aload_0\n-        19: getstatic     #2                  // Field org/apache/commons/compress/archivers/zip/ZipEightByteInteger.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-        22: putfield      #5                  // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        19: getstatic     #7                  // Field org/apache/commons/compress/archivers/zip/ZipEightByteInteger.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        22: putfield      #21                 // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n         25: return\n       LineNumberTable:\n         line 66: 0\n         line 71: 4\n         line 72: 11\n         line 73: 18\n \n   public org.apache.commons.compress.archivers.zip.ZipShort getHeaderId();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n-         0: getstatic     #6                  // Field HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+         0: getstatic     #24                 // Field HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n          3: areturn\n       LineNumberTable:\n         line 82: 0\n \n   public org.apache.commons.compress.archivers.zip.ZipShort getLocalFileDataLength();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: new           #7                  // class org/apache/commons/compress/archivers/zip/ZipShort\n+         0: new           #28                 // class org/apache/commons/compress/archivers/zip/ZipShort\n          3: dup\n          4: bipush        32\n-         6: invokespecial #8                  // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+         6: invokespecial #30                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n          9: areturn\n       LineNumberTable:\n         line 93: 0\n \n   public org.apache.commons.compress.archivers.zip.ZipShort getCentralDirectoryLength();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #9                  // Method getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+         1: invokevirtual #33                 // Method getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n          4: areturn\n       LineNumberTable:\n         line 111: 0\n \n   public byte[] getLocalFileDataData();\n     descriptor: ()[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=1\n          0: aload_0\n-         1: invokevirtual #9                  // Method getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-         4: invokevirtual #10                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I\n+         1: invokevirtual #33                 // Method getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+         4: invokevirtual #37                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I\n          7: newarray       byte\n          9: astore_1\n         10: iconst_4\n         11: istore_2\n-        12: getstatic     #11                 // Field TIME_ATTR_TAG:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-        15: invokevirtual #12                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getBytes:()[B\n+        12: getstatic     #41                 // Field TIME_ATTR_TAG:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+        15: invokevirtual #44                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getBytes:()[B\n         18: iconst_0\n         19: aload_1\n         20: iload_2\n         21: iconst_2\n-        22: invokestatic  #13                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        22: invokestatic  #48                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         25: iinc          2, 2\n-        28: getstatic     #14                 // Field TIME_ATTR_SIZE:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-        31: invokevirtual #12                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getBytes:()[B\n+        28: getstatic     #54                 // Field TIME_ATTR_SIZE:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+        31: invokevirtual #44                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getBytes:()[B\n         34: iconst_0\n         35: aload_1\n         36: iload_2\n         37: iconst_2\n-        38: invokestatic  #13                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        38: invokestatic  #48                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         41: iinc          2, 2\n         44: aload_0\n-        45: getfield      #3                  // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-        48: invokevirtual #15                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:()[B\n+        45: getfield      #13                 // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        48: invokevirtual #57                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:()[B\n         51: iconst_0\n         52: aload_1\n         53: iload_2\n         54: bipush        8\n-        56: invokestatic  #13                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        56: invokestatic  #48                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         59: iinc          2, 8\n         62: aload_0\n-        63: getfield      #4                  // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-        66: invokevirtual #15                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:()[B\n+        63: getfield      #18                 // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        66: invokevirtual #57                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:()[B\n         69: iconst_0\n         70: aload_1\n         71: iload_2\n         72: bipush        8\n-        74: invokestatic  #13                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        74: invokestatic  #48                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         77: iinc          2, 8\n         80: aload_0\n-        81: getfield      #5                  // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-        84: invokevirtual #15                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:()[B\n+        81: getfield      #21                 // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        84: invokevirtual #57                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:()[B\n         87: iconst_0\n         88: aload_1\n         89: iload_2\n         90: bipush        8\n-        92: invokestatic  #13                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        92: invokestatic  #48                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         95: aload_1\n         96: areturn\n       LineNumberTable:\n         line 122: 0\n         line 123: 10\n         line 124: 12\n         line 125: 25\n@@ -348,15 +348,15 @@\n \n   public byte[] getCentralDirectoryData();\n     descriptor: ()[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #16                 // Method getLocalFileDataData:()[B\n+         1: invokevirtual #58                 // Method getLocalFileDataData:()[B\n          4: areturn\n       LineNumberTable:\n         line 144: 0\n \n   public void parseFromLocalFileData(byte[], int, int) throws java.util.zip.ZipException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n@@ -368,43 +368,43 @@\n          3: istore        4\n          5: iinc          2, 4\n          8: iload_2\n          9: iconst_4\n         10: iadd\n         11: iload         4\n         13: if_icmpgt     78\n-        16: new           #7                  // class org/apache/commons/compress/archivers/zip/ZipShort\n+        16: new           #28                 // class org/apache/commons/compress/archivers/zip/ZipShort\n         19: dup\n         20: aload_1\n         21: iload_2\n-        22: invokespecial #17                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":([BI)V\n+        22: invokespecial #61                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":([BI)V\n         25: astore        5\n         27: iinc          2, 2\n         30: aload         5\n-        32: getstatic     #11                 // Field TIME_ATTR_TAG:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-        35: invokevirtual #18                 // Method org/apache/commons/compress/archivers/zip/ZipShort.equals:(Ljava/lang/Object;)Z\n+        32: getstatic     #41                 // Field TIME_ATTR_TAG:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+        35: invokevirtual #64                 // Method org/apache/commons/compress/archivers/zip/ZipShort.equals:(Ljava/lang/Object;)Z\n         38: ifeq          54\n         41: aload_0\n         42: aload_1\n         43: iload_2\n         44: iload         4\n         46: iload_2\n         47: isub\n-        48: invokespecial #19                 // Method readTimeAttr:([BII)V\n+        48: invokespecial #68                 // Method readTimeAttr:([BII)V\n         51: goto          78\n-        54: new           #7                  // class org/apache/commons/compress/archivers/zip/ZipShort\n+        54: new           #28                 // class org/apache/commons/compress/archivers/zip/ZipShort\n         57: dup\n         58: aload_1\n         59: iload_2\n-        60: invokespecial #17                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":([BI)V\n+        60: invokespecial #61                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":([BI)V\n         63: astore        6\n         65: iload_2\n         66: iconst_2\n         67: aload         6\n-        69: invokevirtual #10                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I\n+        69: invokevirtual #37                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I\n         72: iadd\n         73: iadd\n         74: istore_2\n         75: goto          8\n         78: return\n       LineNumberTable:\n         line 159: 0\n@@ -433,109 +433,109 @@\n \n   public void parseFromCentralDirectoryData(byte[], int, int) throws java.util.zip.ZipException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: invokespecial #20                 // Method reset:()V\n+         1: invokespecial #72                 // Method reset:()V\n          4: aload_0\n          5: aload_1\n          6: iload_2\n          7: iload_3\n-         8: invokevirtual #21                 // Method parseFromLocalFileData:([BII)V\n+         8: invokevirtual #75                 // Method parseFromLocalFileData:([BII)V\n         11: return\n       LineNumberTable:\n         line 184: 0\n         line 185: 4\n         line 186: 11\n     Exceptions:\n       throws java.util.zip.ZipException\n \n   public org.apache.commons.compress.archivers.zip.ZipEightByteInteger getModifyTime();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+         1: getfield      #13                 // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n          4: areturn\n       LineNumberTable:\n         line 196: 0\n \n   public org.apache.commons.compress.archivers.zip.ZipEightByteInteger getAccessTime();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+         1: getfield      #18                 // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n          4: areturn\n       LineNumberTable:\n         line 205: 0\n \n   public org.apache.commons.compress.archivers.zip.ZipEightByteInteger getCreateTime();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+         1: getfield      #21                 // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n          4: areturn\n       LineNumberTable:\n         line 214: 0\n \n   public java.util.Date getModifyJavaTime();\n     descriptor: ()Ljava/util/Date;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-         4: invokestatic  #22                 // Method zipToDate:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)Ljava/util/Date;\n+         1: getfield      #13                 // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+         4: invokestatic  #78                 // Method zipToDate:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)Ljava/util/Date;\n          7: areturn\n       LineNumberTable:\n         line 223: 0\n \n   public java.util.Date getAccessJavaTime();\n     descriptor: ()Ljava/util/Date;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-         4: invokestatic  #22                 // Method zipToDate:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)Ljava/util/Date;\n+         1: getfield      #18                 // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+         4: invokestatic  #78                 // Method zipToDate:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)Ljava/util/Date;\n          7: areturn\n       LineNumberTable:\n         line 233: 0\n \n   public java.util.Date getCreateJavaTime();\n     descriptor: ()Ljava/util/Date;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-         4: invokestatic  #22                 // Method zipToDate:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)Ljava/util/Date;\n+         1: getfield      #21                 // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+         4: invokestatic  #78                 // Method zipToDate:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)Ljava/util/Date;\n          7: areturn\n       LineNumberTable:\n         line 243: 0\n \n   public void setModifyTime(org.apache.commons.compress.archivers.zip.ZipEightByteInteger);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: ifnonnull     11\n-         5: getstatic     #2                  // Field org/apache/commons/compress/archivers/zip/ZipEightByteInteger.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+         5: getstatic     #7                  // Field org/apache/commons/compress/archivers/zip/ZipEightByteInteger.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n          8: goto          12\n         11: aload_1\n-        12: putfield      #3                  // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        12: putfield      #13                 // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n         15: return\n       LineNumberTable:\n         line 253: 0\n         line 254: 15\n       StackMapTable: number_of_entries = 2\n         frame_type = 75 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/compress/archivers/zip/X000A_NTFS ]\n@@ -548,18 +548,18 @@\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: ifnonnull     11\n-         5: getstatic     #2                  // Field org/apache/commons/compress/archivers/zip/ZipEightByteInteger.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+         5: getstatic     #7                  // Field org/apache/commons/compress/archivers/zip/ZipEightByteInteger.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n          8: goto          12\n         11: aload_1\n-        12: putfield      #4                  // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        12: putfield      #18                 // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n         15: return\n       LineNumberTable:\n         line 263: 0\n         line 264: 15\n       StackMapTable: number_of_entries = 2\n         frame_type = 75 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/compress/archivers/zip/X000A_NTFS ]\n@@ -572,18 +572,18 @@\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: ifnonnull     11\n-         5: getstatic     #2                  // Field org/apache/commons/compress/archivers/zip/ZipEightByteInteger.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+         5: getstatic     #7                  // Field org/apache/commons/compress/archivers/zip/ZipEightByteInteger.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n          8: goto          12\n         11: aload_1\n-        12: putfield      #5                  // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        12: putfield      #21                 // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n         15: return\n       LineNumberTable:\n         line 273: 0\n         line 274: 15\n       StackMapTable: number_of_entries = 2\n         frame_type = 75 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/compress/archivers/zip/X000A_NTFS ]\n@@ -595,82 +595,82 @@\n   public void setModifyJavaTime(java.util.Date);\n     descriptor: (Ljava/util/Date;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #23                 // Method dateToZip:(Ljava/util/Date;)Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-         5: invokevirtual #24                 // Method setModifyTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n+         2: invokestatic  #82                 // Method dateToZip:(Ljava/util/Date;)Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+         5: invokevirtual #86                 // Method setModifyTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n          8: return\n       LineNumberTable:\n         line 281: 0\n \n   public void setAccessJavaTime(java.util.Date);\n     descriptor: (Ljava/util/Date;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #23                 // Method dateToZip:(Ljava/util/Date;)Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-         5: invokevirtual #25                 // Method setAccessTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n+         2: invokestatic  #82                 // Method dateToZip:(Ljava/util/Date;)Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+         5: invokevirtual #90                 // Method setAccessTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n          8: return\n       LineNumberTable:\n         line 289: 0\n \n   public void setCreateJavaTime(java.util.Date);\n     descriptor: (Ljava/util/Date;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #23                 // Method dateToZip:(Ljava/util/Date;)Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-         5: invokevirtual #26                 // Method setCreateTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n+         2: invokestatic  #82                 // Method dateToZip:(Ljava/util/Date;)Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+         5: invokevirtual #93                 // Method setCreateTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n          8: return\n       LineNumberTable:\n         line 304: 0\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n-         0: new           #27                 // class java/lang/StringBuilder\n+         0: new           #96                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #28                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #98                 // Method java/lang/StringBuilder.\"<init>\":()V\n          7: astore_1\n          8: aload_1\n-         9: ldc           #29                 // String 0x000A Zip Extra Field:\n-        11: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        14: ldc           #31                 // String  Modify:[\n-        16: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+         9: ldc           #99                 // String 0x000A Zip Extra Field:\n+        11: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        14: ldc           #105                // String  Modify:[\n+        16: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         19: aload_0\n-        20: invokevirtual #32                 // Method getModifyJavaTime:()Ljava/util/Date;\n-        23: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        26: ldc           #34                 // String ]\n-        28: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        31: ldc           #35                 // String  Access:[\n-        33: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        20: invokevirtual #107                // Method getModifyJavaTime:()Ljava/util/Date;\n+        23: invokevirtual #111                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        26: ldc           #114                // String ]\n+        28: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        31: ldc           #116                // String  Access:[\n+        33: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         36: aload_0\n-        37: invokevirtual #36                 // Method getAccessJavaTime:()Ljava/util/Date;\n-        40: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        43: ldc           #34                 // String ]\n-        45: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        48: ldc           #37                 // String  Create:[\n-        50: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        37: invokevirtual #118                // Method getAccessJavaTime:()Ljava/util/Date;\n+        40: invokevirtual #111                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        43: ldc           #114                // String ]\n+        45: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        48: ldc           #121                // String  Create:[\n+        50: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         53: aload_0\n-        54: invokevirtual #38                 // Method getCreateJavaTime:()Ljava/util/Date;\n-        57: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        60: ldc           #34                 // String ]\n-        62: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        54: invokevirtual #123                // Method getCreateJavaTime:()Ljava/util/Date;\n+        57: invokevirtual #111                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        60: ldc           #114                // String ]\n+        62: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         65: pop\n         66: aload_1\n-        67: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        67: invokevirtual #126                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         70: areturn\n       LineNumberTable:\n         line 315: 0\n         line 316: 8\n         line 317: 16\n         line 318: 33\n         line 319: 50\n@@ -678,60 +678,60 @@\n \n   public boolean equals(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_1\n-         1: instanceof    #40                 // class org/apache/commons/compress/archivers/zip/X000A_NTFS\n+         1: instanceof    #14                 // class org/apache/commons/compress/archivers/zip/X000A_NTFS\n          4: ifeq          114\n          7: aload_1\n-         8: checkcast     #40                 // class org/apache/commons/compress/archivers/zip/X000A_NTFS\n+         8: checkcast     #14                 // class org/apache/commons/compress/archivers/zip/X000A_NTFS\n         11: astore_2\n         12: aload_0\n-        13: getfield      #3                  // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        13: getfield      #13                 // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n         16: aload_2\n-        17: getfield      #3                  // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        17: getfield      #13                 // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n         20: if_acmpeq     44\n         23: aload_0\n-        24: getfield      #3                  // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        24: getfield      #13                 // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n         27: ifnull        112\n         30: aload_0\n-        31: getfield      #3                  // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        31: getfield      #13                 // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n         34: aload_2\n-        35: getfield      #3                  // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-        38: invokevirtual #41                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.equals:(Ljava/lang/Object;)Z\n+        35: getfield      #13                 // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        38: invokevirtual #130                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.equals:(Ljava/lang/Object;)Z\n         41: ifeq          112\n         44: aload_0\n-        45: getfield      #4                  // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        45: getfield      #18                 // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n         48: aload_2\n-        49: getfield      #4                  // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        49: getfield      #18                 // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n         52: if_acmpeq     76\n         55: aload_0\n-        56: getfield      #4                  // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        56: getfield      #18                 // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n         59: ifnull        112\n         62: aload_0\n-        63: getfield      #4                  // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        63: getfield      #18                 // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n         66: aload_2\n-        67: getfield      #4                  // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-        70: invokevirtual #41                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.equals:(Ljava/lang/Object;)Z\n+        67: getfield      #18                 // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        70: invokevirtual #130                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.equals:(Ljava/lang/Object;)Z\n         73: ifeq          112\n         76: aload_0\n-        77: getfield      #5                  // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        77: getfield      #21                 // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n         80: aload_2\n-        81: getfield      #5                  // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        81: getfield      #21                 // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n         84: if_acmpeq     108\n         87: aload_0\n-        88: getfield      #5                  // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        88: getfield      #21                 // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n         91: ifnull        112\n         94: aload_0\n-        95: getfield      #5                  // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        95: getfield      #21                 // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n         98: aload_2\n-        99: getfield      #5                  // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-       102: invokevirtual #41                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.equals:(Ljava/lang/Object;)Z\n+        99: getfield      #21                 // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+       102: invokevirtual #130                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.equals:(Ljava/lang/Object;)Z\n        105: ifeq          112\n        108: iconst_1\n        109: goto          113\n        112: iconst_0\n        113: ireturn\n        114: iconst_0\n        115: ireturn\n@@ -759,42 +759,42 @@\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: bipush        -123\n          2: istore_1\n          3: aload_0\n-         4: getfield      #3                  // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+         4: getfield      #13                 // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n          7: ifnull        20\n         10: iload_1\n         11: aload_0\n-        12: getfield      #3                  // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-        15: invokevirtual #42                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.hashCode:()I\n+        12: getfield      #13                 // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        15: invokevirtual #131                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.hashCode:()I\n         18: ixor\n         19: istore_1\n         20: aload_0\n-        21: getfield      #4                  // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        21: getfield      #18                 // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n         24: ifnull        42\n         27: iload_1\n         28: aload_0\n-        29: getfield      #4                  // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-        32: invokevirtual #42                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.hashCode:()I\n+        29: getfield      #18                 // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        32: invokevirtual #131                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.hashCode:()I\n         35: bipush        11\n-        37: invokestatic  #43                 // Method java/lang/Integer.rotateLeft:(II)I\n+        37: invokestatic  #134                // Method java/lang/Integer.rotateLeft:(II)I\n         40: ixor\n         41: istore_1\n         42: aload_0\n-        43: getfield      #5                  // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        43: getfield      #21                 // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n         46: ifnull        64\n         49: iload_1\n         50: aload_0\n-        51: getfield      #5                  // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-        54: invokevirtual #42                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.hashCode:()I\n+        51: getfield      #21                 // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        54: invokevirtual #131                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.hashCode:()I\n         57: bipush        22\n-        59: invokestatic  #43                 // Method java/lang/Integer.rotateLeft:(II)I\n+        59: invokestatic  #134                // Method java/lang/Integer.rotateLeft:(II)I\n         62: ixor\n         63: istore_1\n         64: iload_1\n         65: ireturn\n       LineNumberTable:\n         line 337: 0\n         line 338: 3\n@@ -813,22 +813,22 @@\n \n   private void reset();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #2                  // Field org/apache/commons/compress/archivers/zip/ZipEightByteInteger.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-         4: putfield      #3                  // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+         1: getstatic     #7                  // Field org/apache/commons/compress/archivers/zip/ZipEightByteInteger.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+         4: putfield      #13                 // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n          7: aload_0\n-         8: getstatic     #2                  // Field org/apache/commons/compress/archivers/zip/ZipEightByteInteger.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-        11: putfield      #4                  // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+         8: getstatic     #7                  // Field org/apache/commons/compress/archivers/zip/ZipEightByteInteger.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        11: putfield      #18                 // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n         14: aload_0\n-        15: getstatic     #2                  // Field org/apache/commons/compress/archivers/zip/ZipEightByteInteger.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-        18: putfield      #5                  // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        15: getstatic     #7                  // Field org/apache/commons/compress/archivers/zip/ZipEightByteInteger.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        18: putfield      #21                 // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n         21: return\n       LineNumberTable:\n         line 357: 0\n         line 358: 7\n         line 359: 14\n         line 360: 21\n \n@@ -836,48 +836,48 @@\n     descriptor: ([BII)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=5, args_size=4\n          0: iload_3\n          1: bipush        26\n          3: if_icmplt     76\n-         6: new           #7                  // class org/apache/commons/compress/archivers/zip/ZipShort\n+         6: new           #28                 // class org/apache/commons/compress/archivers/zip/ZipShort\n          9: dup\n         10: aload_1\n         11: iload_2\n-        12: invokespecial #17                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":([BI)V\n+        12: invokespecial #61                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":([BI)V\n         15: astore        4\n-        17: getstatic     #14                 // Field TIME_ATTR_SIZE:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+        17: getstatic     #54                 // Field TIME_ATTR_SIZE:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n         20: aload         4\n-        22: invokevirtual #18                 // Method org/apache/commons/compress/archivers/zip/ZipShort.equals:(Ljava/lang/Object;)Z\n+        22: invokevirtual #64                 // Method org/apache/commons/compress/archivers/zip/ZipShort.equals:(Ljava/lang/Object;)Z\n         25: ifeq          76\n         28: iinc          2, 2\n         31: aload_0\n-        32: new           #44                 // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger\n+        32: new           #8                  // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger\n         35: dup\n         36: aload_1\n         37: iload_2\n-        38: invokespecial #45                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.\"<init>\":([BI)V\n-        41: putfield      #3                  // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        38: invokespecial #140                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.\"<init>\":([BI)V\n+        41: putfield      #13                 // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n         44: iinc          2, 8\n         47: aload_0\n-        48: new           #44                 // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger\n+        48: new           #8                  // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger\n         51: dup\n         52: aload_1\n         53: iload_2\n-        54: invokespecial #45                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.\"<init>\":([BI)V\n-        57: putfield      #4                  // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        54: invokespecial #140                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.\"<init>\":([BI)V\n+        57: putfield      #18                 // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n         60: iinc          2, 8\n         63: aload_0\n-        64: new           #44                 // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger\n+        64: new           #8                  // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger\n         67: dup\n         68: aload_1\n         69: iload_2\n-        70: invokespecial #45                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.\"<init>\":([BI)V\n-        73: putfield      #5                  // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+        70: invokespecial #140                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.\"<init>\":([BI)V\n+        73: putfield      #21                 // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n         76: return\n       LineNumberTable:\n         line 363: 0\n         line 364: 6\n         line 365: 17\n         line 366: 28\n         line 367: 31\n@@ -895,83 +895,83 @@\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=6, locals=1, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n-         6: new           #44                 // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger\n+         6: new           #8                  // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger\n          9: dup\n         10: aload_0\n-        11: invokevirtual #46                 // Method java/util/Date.getTime:()J\n-        14: ldc2_w        #47                 // long 10000l\n+        11: invokevirtual #141                // Method java/util/Date.getTime:()J\n+        14: ldc2_w        #147                // long 10000l\n         17: lmul\n-        18: ldc2_w        #49                 // long -116444736000000000l\n+        18: ldc2_w        #149                // long -116444736000000000l\n         21: lsub\n-        22: invokespecial #51                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.\"<init>\":(J)V\n+        22: invokespecial #151                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.\"<init>\":(J)V\n         25: areturn\n       LineNumberTable:\n         line 384: 0\n         line 385: 6\n       StackMapTable: number_of_entries = 1\n         frame_type = 6 /* same */\n \n   private static java.util.Date zipToDate(org.apache.commons.compress.archivers.zip.ZipEightByteInteger);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)Ljava/util/Date;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=1\n          0: aload_0\n          1: ifnull        14\n-         4: getstatic     #2                  // Field org/apache/commons/compress/archivers/zip/ZipEightByteInteger.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+         4: getstatic     #7                  // Field org/apache/commons/compress/archivers/zip/ZipEightByteInteger.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n          7: aload_0\n-         8: invokevirtual #41                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.equals:(Ljava/lang/Object;)Z\n+         8: invokevirtual #130                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.equals:(Ljava/lang/Object;)Z\n         11: ifeq          16\n         14: aconst_null\n         15: areturn\n         16: aload_0\n-        17: invokevirtual #52                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getLongValue:()J\n-        20: ldc2_w        #49                 // long -116444736000000000l\n+        17: invokevirtual #154                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getLongValue:()J\n+        20: ldc2_w        #149                // long -116444736000000000l\n         23: ladd\n-        24: ldc2_w        #47                 // long 10000l\n+        24: ldc2_w        #147                // long 10000l\n         27: ldiv\n         28: lstore_1\n-        29: new           #53                 // class java/util/Date\n+        29: new           #142                // class java/util/Date\n         32: dup\n         33: lload_1\n-        34: invokespecial #54                 // Method java/util/Date.\"<init>\":(J)V\n+        34: invokespecial #157                // Method java/util/Date.\"<init>\":(J)V\n         37: areturn\n       LineNumberTable:\n         line 389: 0\n         line 390: 16\n         line 391: 29\n       StackMapTable: number_of_entries = 2\n         frame_type = 14 /* same */\n         frame_type = 1 /* same */\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=3, locals=0, args_size=0\n-         0: new           #7                  // class org/apache/commons/compress/archivers/zip/ZipShort\n+         0: new           #28                 // class org/apache/commons/compress/archivers/zip/ZipShort\n          3: dup\n          4: bipush        10\n-         6: invokespecial #8                  // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-         9: putstatic     #6                  // Field HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-        12: new           #7                  // class org/apache/commons/compress/archivers/zip/ZipShort\n+         6: invokespecial #30                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+         9: putstatic     #24                 // Field HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+        12: new           #28                 // class org/apache/commons/compress/archivers/zip/ZipShort\n         15: dup\n         16: iconst_1\n-        17: invokespecial #8                  // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-        20: putstatic     #11                 // Field TIME_ATTR_TAG:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-        23: new           #7                  // class org/apache/commons/compress/archivers/zip/ZipShort\n+        17: invokespecial #30                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+        20: putstatic     #41                 // Field TIME_ATTR_TAG:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+        23: new           #28                 // class org/apache/commons/compress/archivers/zip/ZipShort\n         26: dup\n         27: bipush        24\n-        29: invokespecial #8                  // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-        32: putstatic     #14                 // Field TIME_ATTR_SIZE:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+        29: invokespecial #30                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+        32: putstatic     #54                 // Field TIME_ATTR_SIZE:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n         35: return\n       LineNumberTable:\n         line 67: 0\n         line 68: 12\n         line 69: 23\n }\n SourceFile: \"X000A_NTFS.java\"\n"}]}
