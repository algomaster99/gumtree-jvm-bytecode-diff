{"diffoscope-json-version": 1, "source1": "first/SwappedDataInputStream.class", "source2": "second/SwappedDataInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,145 +1,145 @@\n-  SHA-256 checksum dff8b265055ebce276a96a3adfad9e9233a4101aab599c8eac44fb8b0d11feb8\n+  SHA-256 checksum a414859aa9c626354a5f2e94ccc924b70b4e1f7fb26da29b1b509aee6555f70c\n   Compiled from \"SwappedDataInputStream.java\"\n public class org.apache.commons.io.input.SwappedDataInputStream extends org.apache.commons.io.input.ProxyInputStream implements java.io.DataInput\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #21                         // org/apache/commons/io/input/SwappedDataInputStream\n-  super_class: #22                        // org/apache/commons/io/input/ProxyInputStream\n+  this_class: #10                         // org/apache/commons/io/input/SwappedDataInputStream\n+  super_class: #4                         // org/apache/commons/io/input/ProxyInputStream\n   interfaces: 1, fields: 0, methods: 16, attributes: 1\n Constant pool:\n-    #1 = Class              #59           // org/apache/commons/io/IOUtils\n-    #2 = Methodref          #22.#60       // org/apache/commons/io/input/ProxyInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-    #3 = Methodref          #21.#61       // org/apache/commons/io/input/SwappedDataInputStream.readByte:()B\n-    #4 = Fieldref           #21.#62       // org/apache/commons/io/input/SwappedDataInputStream.in:Ljava/io/InputStream;\n-    #5 = Methodref          #63.#64       // java/io/InputStream.read:()I\n-    #6 = Methodref          #21.#65       // org/apache/commons/io/input/SwappedDataInputStream.readShort:()S\n-    #7 = Methodref          #66.#67       // org/apache/commons/io/EndianUtils.readSwappedDouble:(Ljava/io/InputStream;)D\n-    #8 = Methodref          #66.#68       // org/apache/commons/io/EndianUtils.readSwappedFloat:(Ljava/io/InputStream;)F\n-    #9 = Methodref          #21.#69       // org/apache/commons/io/input/SwappedDataInputStream.readFully:([BII)V\n-   #10 = Methodref          #21.#70       // org/apache/commons/io/input/SwappedDataInputStream.read:([BII)I\n-   #11 = Class              #71           // java/io/EOFException\n-   #12 = Methodref          #11.#72       // java/io/EOFException.\"<init>\":()V\n-   #13 = Methodref          #66.#73       // org/apache/commons/io/EndianUtils.readSwappedInteger:(Ljava/io/InputStream;)I\n-   #14 = String             #46           // readLine\n-   #15 = Methodref          #74.#75       // org/apache/commons/io/input/UnsupportedOperationExceptions.method:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;\n-   #16 = Methodref          #66.#76       // org/apache/commons/io/EndianUtils.readSwappedLong:(Ljava/io/InputStream;)J\n-   #17 = Methodref          #66.#77       // org/apache/commons/io/EndianUtils.readSwappedShort:(Ljava/io/InputStream;)S\n-   #18 = Methodref          #66.#78       // org/apache/commons/io/EndianUtils.readSwappedUnsignedShort:(Ljava/io/InputStream;)I\n-   #19 = String             #54           // readUTF\n-   #20 = Methodref          #63.#79       // java/io/InputStream.skip:(J)J\n-   #21 = Class              #80           // org/apache/commons/io/input/SwappedDataInputStream\n-   #22 = Class              #81           // org/apache/commons/io/input/ProxyInputStream\n-   #23 = Class              #82           // java/io/DataInput\n-   #24 = Utf8               <init>\n-   #25 = Utf8               (Ljava/io/InputStream;)V\n-   #26 = Utf8               Code\n-   #27 = Utf8               LineNumberTable\n-   #28 = Utf8               readBoolean\n-   #29 = Utf8               ()Z\n-   #30 = Utf8               StackMapTable\n-   #31 = Utf8               Exceptions\n-   #32 = Class              #83           // java/io/IOException\n-   #33 = Utf8               readByte\n-   #34 = Utf8               ()B\n-   #35 = Utf8               readChar\n-   #36 = Utf8               ()C\n-   #37 = Utf8               readDouble\n-   #38 = Utf8               ()D\n-   #39 = Utf8               readFloat\n-   #40 = Utf8               ()F\n+    #1 = Class              #2            // org/apache/commons/io/IOUtils\n+    #2 = Utf8               org/apache/commons/io/IOUtils\n+    #3 = Methodref          #4.#5         // org/apache/commons/io/input/ProxyInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+    #4 = Class              #6            // org/apache/commons/io/input/ProxyInputStream\n+    #5 = NameAndType        #7:#8         // \"<init>\":(Ljava/io/InputStream;)V\n+    #6 = Utf8               org/apache/commons/io/input/ProxyInputStream\n+    #7 = Utf8               <init>\n+    #8 = Utf8               (Ljava/io/InputStream;)V\n+    #9 = Methodref          #10.#11       // org/apache/commons/io/input/SwappedDataInputStream.readByte:()B\n+   #10 = Class              #12           // org/apache/commons/io/input/SwappedDataInputStream\n+   #11 = NameAndType        #13:#14       // readByte:()B\n+   #12 = Utf8               org/apache/commons/io/input/SwappedDataInputStream\n+   #13 = Utf8               readByte\n+   #14 = Utf8               ()B\n+   #15 = Fieldref           #10.#16       // org/apache/commons/io/input/SwappedDataInputStream.in:Ljava/io/InputStream;\n+   #16 = NameAndType        #17:#18       // in:Ljava/io/InputStream;\n+   #17 = Utf8               in\n+   #18 = Utf8               Ljava/io/InputStream;\n+   #19 = Methodref          #20.#21       // java/io/InputStream.read:()I\n+   #20 = Class              #22           // java/io/InputStream\n+   #21 = NameAndType        #23:#24       // read:()I\n+   #22 = Utf8               java/io/InputStream\n+   #23 = Utf8               read\n+   #24 = Utf8               ()I\n+   #25 = Methodref          #10.#26       // org/apache/commons/io/input/SwappedDataInputStream.readShort:()S\n+   #26 = NameAndType        #27:#28       // readShort:()S\n+   #27 = Utf8               readShort\n+   #28 = Utf8               ()S\n+   #29 = Methodref          #30.#31       // org/apache/commons/io/EndianUtils.readSwappedDouble:(Ljava/io/InputStream;)D\n+   #30 = Class              #32           // org/apache/commons/io/EndianUtils\n+   #31 = NameAndType        #33:#34       // readSwappedDouble:(Ljava/io/InputStream;)D\n+   #32 = Utf8               org/apache/commons/io/EndianUtils\n+   #33 = Utf8               readSwappedDouble\n+   #34 = Utf8               (Ljava/io/InputStream;)D\n+   #35 = Methodref          #30.#36       // org/apache/commons/io/EndianUtils.readSwappedFloat:(Ljava/io/InputStream;)F\n+   #36 = NameAndType        #37:#38       // readSwappedFloat:(Ljava/io/InputStream;)F\n+   #37 = Utf8               readSwappedFloat\n+   #38 = Utf8               (Ljava/io/InputStream;)F\n+   #39 = Methodref          #10.#40       // org/apache/commons/io/input/SwappedDataInputStream.readFully:([BII)V\n+   #40 = NameAndType        #41:#42       // readFully:([BII)V\n    #41 = Utf8               readFully\n-   #42 = Utf8               ([B)V\n-   #43 = Utf8               ([BII)V\n-   #44 = Utf8               readInt\n-   #45 = Utf8               ()I\n-   #46 = Utf8               readLine\n-   #47 = Utf8               ()Ljava/lang/String;\n-   #48 = Utf8               readLong\n-   #49 = Utf8               ()J\n-   #50 = Utf8               readShort\n-   #51 = Utf8               ()S\n-   #52 = Utf8               readUnsignedByte\n-   #53 = Utf8               readUnsignedShort\n-   #54 = Utf8               readUTF\n-   #55 = Utf8               skipBytes\n-   #56 = Utf8               (I)I\n-   #57 = Utf8               SourceFile\n-   #58 = Utf8               SwappedDataInputStream.java\n-   #59 = Utf8               org/apache/commons/io/IOUtils\n-   #60 = NameAndType        #24:#25       // \"<init>\":(Ljava/io/InputStream;)V\n-   #61 = NameAndType        #33:#34       // readByte:()B\n-   #62 = NameAndType        #84:#85       // in:Ljava/io/InputStream;\n-   #63 = Class              #86           // java/io/InputStream\n-   #64 = NameAndType        #87:#45       // read:()I\n-   #65 = NameAndType        #50:#51       // readShort:()S\n-   #66 = Class              #88           // org/apache/commons/io/EndianUtils\n-   #67 = NameAndType        #89:#90       // readSwappedDouble:(Ljava/io/InputStream;)D\n-   #68 = NameAndType        #91:#92       // readSwappedFloat:(Ljava/io/InputStream;)F\n-   #69 = NameAndType        #41:#43       // readFully:([BII)V\n-   #70 = NameAndType        #87:#93       // read:([BII)I\n-   #71 = Utf8               java/io/EOFException\n-   #72 = NameAndType        #24:#94       // \"<init>\":()V\n-   #73 = NameAndType        #95:#96       // readSwappedInteger:(Ljava/io/InputStream;)I\n-   #74 = Class              #97           // org/apache/commons/io/input/UnsupportedOperationExceptions\n-   #75 = NameAndType        #98:#99       // method:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;\n-   #76 = NameAndType        #100:#101     // readSwappedLong:(Ljava/io/InputStream;)J\n-   #77 = NameAndType        #102:#103     // readSwappedShort:(Ljava/io/InputStream;)S\n-   #78 = NameAndType        #104:#96      // readSwappedUnsignedShort:(Ljava/io/InputStream;)I\n-   #79 = NameAndType        #105:#106     // skip:(J)J\n-   #80 = Utf8               org/apache/commons/io/input/SwappedDataInputStream\n-   #81 = Utf8               org/apache/commons/io/input/ProxyInputStream\n-   #82 = Utf8               java/io/DataInput\n-   #83 = Utf8               java/io/IOException\n-   #84 = Utf8               in\n-   #85 = Utf8               Ljava/io/InputStream;\n-   #86 = Utf8               java/io/InputStream\n-   #87 = Utf8               read\n-   #88 = Utf8               org/apache/commons/io/EndianUtils\n-   #89 = Utf8               readSwappedDouble\n-   #90 = Utf8               (Ljava/io/InputStream;)D\n-   #91 = Utf8               readSwappedFloat\n-   #92 = Utf8               (Ljava/io/InputStream;)F\n-   #93 = Utf8               ([BII)I\n-   #94 = Utf8               ()V\n-   #95 = Utf8               readSwappedInteger\n-   #96 = Utf8               (Ljava/io/InputStream;)I\n-   #97 = Utf8               org/apache/commons/io/input/UnsupportedOperationExceptions\n-   #98 = Utf8               method\n-   #99 = Utf8               (Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;\n-  #100 = Utf8               readSwappedLong\n-  #101 = Utf8               (Ljava/io/InputStream;)J\n-  #102 = Utf8               readSwappedShort\n-  #103 = Utf8               (Ljava/io/InputStream;)S\n-  #104 = Utf8               readSwappedUnsignedShort\n-  #105 = Utf8               skip\n-  #106 = Utf8               (J)J\n+   #42 = Utf8               ([BII)V\n+   #43 = Methodref          #10.#44       // org/apache/commons/io/input/SwappedDataInputStream.read:([BII)I\n+   #44 = NameAndType        #23:#45       // read:([BII)I\n+   #45 = Utf8               ([BII)I\n+   #46 = Class              #47           // java/io/EOFException\n+   #47 = Utf8               java/io/EOFException\n+   #48 = Methodref          #46.#49       // java/io/EOFException.\"<init>\":()V\n+   #49 = NameAndType        #7:#50        // \"<init>\":()V\n+   #50 = Utf8               ()V\n+   #51 = Methodref          #30.#52       // org/apache/commons/io/EndianUtils.readSwappedInteger:(Ljava/io/InputStream;)I\n+   #52 = NameAndType        #53:#54       // readSwappedInteger:(Ljava/io/InputStream;)I\n+   #53 = Utf8               readSwappedInteger\n+   #54 = Utf8               (Ljava/io/InputStream;)I\n+   #55 = String             #56           // readLine\n+   #56 = Utf8               readLine\n+   #57 = Methodref          #58.#59       // org/apache/commons/io/input/UnsupportedOperationExceptions.method:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;\n+   #58 = Class              #60           // org/apache/commons/io/input/UnsupportedOperationExceptions\n+   #59 = NameAndType        #61:#62       // method:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;\n+   #60 = Utf8               org/apache/commons/io/input/UnsupportedOperationExceptions\n+   #61 = Utf8               method\n+   #62 = Utf8               (Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;\n+   #63 = Methodref          #30.#64       // org/apache/commons/io/EndianUtils.readSwappedLong:(Ljava/io/InputStream;)J\n+   #64 = NameAndType        #65:#66       // readSwappedLong:(Ljava/io/InputStream;)J\n+   #65 = Utf8               readSwappedLong\n+   #66 = Utf8               (Ljava/io/InputStream;)J\n+   #67 = Methodref          #30.#68       // org/apache/commons/io/EndianUtils.readSwappedShort:(Ljava/io/InputStream;)S\n+   #68 = NameAndType        #69:#70       // readSwappedShort:(Ljava/io/InputStream;)S\n+   #69 = Utf8               readSwappedShort\n+   #70 = Utf8               (Ljava/io/InputStream;)S\n+   #71 = Methodref          #30.#72       // org/apache/commons/io/EndianUtils.readSwappedUnsignedShort:(Ljava/io/InputStream;)I\n+   #72 = NameAndType        #73:#54       // readSwappedUnsignedShort:(Ljava/io/InputStream;)I\n+   #73 = Utf8               readSwappedUnsignedShort\n+   #74 = String             #75           // readUTF\n+   #75 = Utf8               readUTF\n+   #76 = Methodref          #20.#77       // java/io/InputStream.skip:(J)J\n+   #77 = NameAndType        #78:#79       // skip:(J)J\n+   #78 = Utf8               skip\n+   #79 = Utf8               (J)J\n+   #80 = Class              #81           // java/io/DataInput\n+   #81 = Utf8               java/io/DataInput\n+   #82 = Utf8               Code\n+   #83 = Utf8               LineNumberTable\n+   #84 = Utf8               readBoolean\n+   #85 = Utf8               ()Z\n+   #86 = Utf8               StackMapTable\n+   #87 = Utf8               Exceptions\n+   #88 = Class              #89           // java/io/IOException\n+   #89 = Utf8               java/io/IOException\n+   #90 = Utf8               readChar\n+   #91 = Utf8               ()C\n+   #92 = Utf8               readDouble\n+   #93 = Utf8               ()D\n+   #94 = Utf8               readFloat\n+   #95 = Utf8               ()F\n+   #96 = Utf8               ([B)V\n+   #97 = Utf8               readInt\n+   #98 = Utf8               ()Ljava/lang/String;\n+   #99 = Utf8               readLong\n+  #100 = Utf8               ()J\n+  #101 = Utf8               readUnsignedByte\n+  #102 = Utf8               readUnsignedShort\n+  #103 = Utf8               skipBytes\n+  #104 = Utf8               (I)I\n+  #105 = Utf8               SourceFile\n+  #106 = Utf8               SwappedDataInputStream.java\n {\n   public org.apache.commons.io.input.SwappedDataInputStream(java.io.InputStream);\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #2                  // Method org/apache/commons/io/input/ProxyInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+         2: invokespecial #3                  // Method org/apache/commons/io/input/ProxyInputStream.\"<init>\":(Ljava/io/InputStream;)V\n          5: return\n       LineNumberTable:\n         line 44: 0\n         line 45: 5\n \n   public boolean readBoolean() throws java.io.IOException, java.io.EOFException;\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: iconst_0\n          1: aload_0\n-         2: invokevirtual #3                  // Method readByte:()B\n+         2: invokevirtual #9                  // Method readByte:()B\n          5: if_icmpeq     12\n          8: iconst_1\n          9: goto          13\n         12: iconst_0\n         13: ireturn\n       LineNumberTable:\n         line 56: 0\n@@ -152,59 +152,59 @@\n \n   public byte readByte() throws java.io.IOException, java.io.EOFException;\n     descriptor: ()B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field in:Ljava/io/InputStream;\n-         4: invokevirtual #5                  // Method java/io/InputStream.read:()I\n+         1: getfield      #15                 // Field in:Ljava/io/InputStream;\n+         4: invokevirtual #19                 // Method java/io/InputStream.read:()I\n          7: i2b\n          8: ireturn\n       LineNumberTable:\n         line 68: 0\n     Exceptions:\n       throws java.io.IOException, java.io.EOFException\n \n   public char readChar() throws java.io.IOException, java.io.EOFException;\n     descriptor: ()C\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #6                  // Method readShort:()S\n+         1: invokevirtual #25                 // Method readShort:()S\n          4: i2c\n          5: ireturn\n       LineNumberTable:\n         line 80: 0\n     Exceptions:\n       throws java.io.IOException, java.io.EOFException\n \n   public double readDouble() throws java.io.IOException, java.io.EOFException;\n     descriptor: ()D\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field in:Ljava/io/InputStream;\n-         4: invokestatic  #7                  // Method org/apache/commons/io/EndianUtils.readSwappedDouble:(Ljava/io/InputStream;)D\n+         1: getfield      #15                 // Field in:Ljava/io/InputStream;\n+         4: invokestatic  #29                 // Method org/apache/commons/io/EndianUtils.readSwappedDouble:(Ljava/io/InputStream;)D\n          7: dreturn\n       LineNumberTable:\n         line 92: 0\n     Exceptions:\n       throws java.io.IOException, java.io.EOFException\n \n   public float readFloat() throws java.io.IOException, java.io.EOFException;\n     descriptor: ()F\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field in:Ljava/io/InputStream;\n-         4: invokestatic  #8                  // Method org/apache/commons/io/EndianUtils.readSwappedFloat:(Ljava/io/InputStream;)F\n+         1: getfield      #15                 // Field in:Ljava/io/InputStream;\n+         4: invokestatic  #35                 // Method org/apache/commons/io/EndianUtils.readSwappedFloat:(Ljava/io/InputStream;)F\n          7: freturn\n       LineNumberTable:\n         line 104: 0\n     Exceptions:\n       throws java.io.IOException, java.io.EOFException\n \n   public void readFully(byte[]) throws java.io.IOException, java.io.EOFException;\n@@ -213,15 +213,15 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #9                  // Method readFully:([BII)V\n+         5: invokevirtual #39                 // Method readFully:([BII)V\n          8: return\n       LineNumberTable:\n         line 116: 0\n         line 117: 8\n     Exceptions:\n       throws java.io.IOException, java.io.EOFException\n \n@@ -240,22 +240,22 @@\n         11: iload         4\n         13: isub\n         14: istore        5\n         16: aload_0\n         17: aload_1\n         18: iload         5\n         20: iload         4\n-        22: invokevirtual #10                 // Method read:([BII)I\n+        22: invokevirtual #43                 // Method read:([BII)I\n         25: istore        6\n         27: iconst_m1\n         28: iload         6\n         30: if_icmpne     41\n-        33: new           #11                 // class java/io/EOFException\n+        33: new           #46                 // class java/io/EOFException\n         36: dup\n-        37: invokespecial #12                 // Method java/io/EOFException.\"<init>\":()V\n+        37: invokespecial #48                 // Method java/io/EOFException.\"<init>\":()V\n         40: athrow\n         41: iload         4\n         43: iload         6\n         45: isub\n         46: istore        4\n         48: goto          3\n         51: return\n@@ -283,114 +283,114 @@\n \n   public int readInt() throws java.io.IOException, java.io.EOFException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field in:Ljava/io/InputStream;\n-         4: invokestatic  #13                 // Method org/apache/commons/io/EndianUtils.readSwappedInteger:(Ljava/io/InputStream;)I\n+         1: getfield      #15                 // Field in:Ljava/io/InputStream;\n+         4: invokestatic  #51                 // Method org/apache/commons/io/EndianUtils.readSwappedInteger:(Ljava/io/InputStream;)I\n          7: ireturn\n       LineNumberTable:\n         line 153: 0\n     Exceptions:\n       throws java.io.IOException, java.io.EOFException\n \n   public java.lang.String readLine() throws java.io.IOException, java.io.EOFException;\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n-         0: ldc           #14                 // String readLine\n-         2: invokestatic  #15                 // Method org/apache/commons/io/input/UnsupportedOperationExceptions.method:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;\n+         0: ldc           #55                 // String readLine\n+         2: invokestatic  #57                 // Method org/apache/commons/io/input/UnsupportedOperationExceptions.method:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;\n          5: athrow\n       LineNumberTable:\n         line 165: 0\n     Exceptions:\n       throws java.io.IOException, java.io.EOFException\n \n   public long readLong() throws java.io.IOException, java.io.EOFException;\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field in:Ljava/io/InputStream;\n-         4: invokestatic  #16                 // Method org/apache/commons/io/EndianUtils.readSwappedLong:(Ljava/io/InputStream;)J\n+         1: getfield      #15                 // Field in:Ljava/io/InputStream;\n+         4: invokestatic  #63                 // Method org/apache/commons/io/EndianUtils.readSwappedLong:(Ljava/io/InputStream;)J\n          7: lreturn\n       LineNumberTable:\n         line 177: 0\n     Exceptions:\n       throws java.io.IOException, java.io.EOFException\n \n   public short readShort() throws java.io.IOException, java.io.EOFException;\n     descriptor: ()S\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field in:Ljava/io/InputStream;\n-         4: invokestatic  #17                 // Method org/apache/commons/io/EndianUtils.readSwappedShort:(Ljava/io/InputStream;)S\n+         1: getfield      #15                 // Field in:Ljava/io/InputStream;\n+         4: invokestatic  #67                 // Method org/apache/commons/io/EndianUtils.readSwappedShort:(Ljava/io/InputStream;)S\n          7: ireturn\n       LineNumberTable:\n         line 189: 0\n     Exceptions:\n       throws java.io.IOException, java.io.EOFException\n \n   public int readUnsignedByte() throws java.io.IOException, java.io.EOFException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field in:Ljava/io/InputStream;\n-         4: invokevirtual #5                  // Method java/io/InputStream.read:()I\n+         1: getfield      #15                 // Field in:Ljava/io/InputStream;\n+         4: invokevirtual #19                 // Method java/io/InputStream.read:()I\n          7: ireturn\n       LineNumberTable:\n         line 201: 0\n     Exceptions:\n       throws java.io.IOException, java.io.EOFException\n \n   public int readUnsignedShort() throws java.io.IOException, java.io.EOFException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field in:Ljava/io/InputStream;\n-         4: invokestatic  #18                 // Method org/apache/commons/io/EndianUtils.readSwappedUnsignedShort:(Ljava/io/InputStream;)I\n+         1: getfield      #15                 // Field in:Ljava/io/InputStream;\n+         4: invokestatic  #71                 // Method org/apache/commons/io/EndianUtils.readSwappedUnsignedShort:(Ljava/io/InputStream;)I\n          7: ireturn\n       LineNumberTable:\n         line 213: 0\n     Exceptions:\n       throws java.io.IOException, java.io.EOFException\n \n   public java.lang.String readUTF() throws java.io.IOException, java.io.EOFException;\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n-         0: ldc           #19                 // String readUTF\n-         2: invokestatic  #15                 // Method org/apache/commons/io/input/UnsupportedOperationExceptions.method:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;\n+         0: ldc           #74                 // String readUTF\n+         2: invokestatic  #57                 // Method org/apache/commons/io/input/UnsupportedOperationExceptions.method:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;\n          5: athrow\n       LineNumberTable:\n         line 225: 0\n     Exceptions:\n       throws java.io.IOException, java.io.EOFException\n \n   public int skipBytes(int) throws java.io.IOException, java.io.EOFException;\n     descriptor: (I)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #4                  // Field in:Ljava/io/InputStream;\n+         1: getfield      #15                 // Field in:Ljava/io/InputStream;\n          4: iload_1\n          5: i2l\n-         6: invokevirtual #20                 // Method java/io/InputStream.skip:(J)J\n+         6: invokevirtual #76                 // Method java/io/InputStream.skip:(J)J\n          9: l2i\n         10: ireturn\n       LineNumberTable:\n         line 238: 0\n     Exceptions:\n       throws java.io.IOException, java.io.EOFException\n }\n"}]}
