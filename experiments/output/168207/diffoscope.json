{"diffoscope-json-version": 1, "source1": "first/IOCase.class", "source2": "second/IOCase.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,57 +1,57 @@\n-  SHA-256 checksum d0d19250252bd7edebbea49b7d123ee65c1b91880a10beca039ab539e3fe1671\n+  SHA-256 checksum a4f8d373849b58ad4e99c80458a9ad9d653295a44f7421ad6259bafcb1831631\n   Compiled from \"IOCase.java\"\n public final class org.apache.commons.io.IOCase extends java.lang.Enum<org.apache.commons.io.IOCase>\n   minor version: 0\n   major version: 52\n   flags: (0x4031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER, ACC_ENUM\n   this_class: #4                          // org/apache/commons/io/IOCase\n   super_class: #40                        // java/lang/Enum\n   interfaces: 0, fields: 7, methods: 15, attributes: 2\n Constant pool:\n-    #1 = Fieldref           #4.#106       // org/apache/commons/io/IOCase.$VALUES:[Lorg/apache/commons/io/IOCase;\n-    #2 = Methodref          #107.#108     // \"[Lorg/apache/commons/io/IOCase;\".clone:()Ljava/lang/Object;\n+    #1 = Fieldref           #4.#105       // org/apache/commons/io/IOCase.$VALUES:[Lorg/apache/commons/io/IOCase;\n+    #2 = Methodref          #106.#107     // \"[Lorg/apache/commons/io/IOCase;\".clone:()Ljava/lang/Object;\n     #3 = Class              #55           // \"[Lorg/apache/commons/io/IOCase;\"\n-    #4 = Class              #109          // org/apache/commons/io/IOCase\n-    #5 = Methodref          #40.#110      // java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-    #6 = Methodref          #4.#111       // org/apache/commons/io/IOCase.values:()[Lorg/apache/commons/io/IOCase;\n-    #7 = Methodref          #4.#112       // org/apache/commons/io/IOCase.getName:()Ljava/lang/String;\n-    #8 = Methodref          #113.#114     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-    #9 = Class              #115          // java/lang/IllegalArgumentException\n-   #10 = Class              #116          // java/lang/StringBuilder\n-   #11 = Methodref          #10.#117      // java/lang/StringBuilder.\"<init>\":()V\n-   #12 = String             #118          // Invalid IOCase name:\n-   #13 = Methodref          #10.#119      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #14 = Methodref          #10.#120      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #15 = Methodref          #9.#121       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #16 = Methodref          #40.#122      // java/lang/Enum.\"<init>\":(Ljava/lang/String;I)V\n-   #17 = Fieldref           #4.#123       // org/apache/commons/io/IOCase.name:Ljava/lang/String;\n-   #18 = Fieldref           #4.#124       // org/apache/commons/io/IOCase.sensitive:Z\n-   #19 = Methodref          #4.#125       // org/apache/commons/io/IOCase.forName:(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;\n+    #4 = Class              #108          // org/apache/commons/io/IOCase\n+    #5 = Methodref          #40.#109      // java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+    #6 = Methodref          #4.#110       // org/apache/commons/io/IOCase.values:()[Lorg/apache/commons/io/IOCase;\n+    #7 = Methodref          #4.#111       // org/apache/commons/io/IOCase.getName:()Ljava/lang/String;\n+    #8 = Methodref          #86.#112      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+    #9 = Class              #113          // java/lang/IllegalArgumentException\n+   #10 = Class              #114          // java/lang/StringBuilder\n+   #11 = Methodref          #10.#115      // java/lang/StringBuilder.\"<init>\":()V\n+   #12 = String             #116          // Invalid IOCase name:\n+   #13 = Methodref          #10.#117      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #14 = Methodref          #10.#118      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #15 = Methodref          #9.#119       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #16 = Methodref          #40.#120      // java/lang/Enum.\"<init>\":(Ljava/lang/String;I)V\n+   #17 = Fieldref           #4.#121       // org/apache/commons/io/IOCase.name:Ljava/lang/String;\n+   #18 = Fieldref           #4.#122       // org/apache/commons/io/IOCase.sensitive:Z\n+   #19 = Methodref          #4.#123       // org/apache/commons/io/IOCase.forName:(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;\n    #20 = String             #79           // str1\n-   #21 = Methodref          #126.#127     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #21 = Methodref          #124.#125     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n    #22 = String             #80           // str2\n-   #23 = Methodref          #113.#128     // java/lang/String.compareTo:(Ljava/lang/String;)I\n-   #24 = Methodref          #113.#129     // java/lang/String.compareToIgnoreCase:(Ljava/lang/String;)I\n-   #25 = Methodref          #113.#130     // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-   #26 = Methodref          #113.#131     // java/lang/String.length:()I\n-   #27 = Methodref          #113.#132     // java/lang/String.regionMatches:(ZILjava/lang/String;II)Z\n-   #28 = Methodref          #4.#133       // org/apache/commons/io/IOCase.checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n+   #23 = Methodref          #86.#126      // java/lang/String.compareTo:(Ljava/lang/String;)I\n+   #24 = Methodref          #86.#127      // java/lang/String.compareToIgnoreCase:(Ljava/lang/String;)I\n+   #25 = Methodref          #86.#128      // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+   #26 = Methodref          #86.#129      // java/lang/String.length:()I\n+   #27 = Methodref          #86.#130      // java/lang/String.regionMatches:(ZILjava/lang/String;II)Z\n+   #28 = Methodref          #4.#131       // org/apache/commons/io/IOCase.checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n    #29 = String             #41           // SENSITIVE\n-   #30 = String             #134          // Sensitive\n-   #31 = Methodref          #4.#135       // org/apache/commons/io/IOCase.\"<init>\":(Ljava/lang/String;ILjava/lang/String;Z)V\n-   #32 = Fieldref           #4.#136       // org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n+   #30 = String             #132          // Sensitive\n+   #31 = Methodref          #4.#133       // org/apache/commons/io/IOCase.\"<init>\":(Ljava/lang/String;ILjava/lang/String;Z)V\n+   #32 = Fieldref           #4.#134       // org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n    #33 = String             #43           // INSENSITIVE\n-   #34 = String             #137          // Insensitive\n-   #35 = Fieldref           #4.#138       // org/apache/commons/io/IOCase.INSENSITIVE:Lorg/apache/commons/io/IOCase;\n+   #34 = String             #135          // Insensitive\n+   #35 = Fieldref           #4.#136       // org/apache/commons/io/IOCase.INSENSITIVE:Lorg/apache/commons/io/IOCase;\n    #36 = String             #44           // SYSTEM\n-   #37 = String             #139          // System\n-   #38 = Methodref          #140.#141     // org/apache/commons/io/FilenameUtils.isSystemWindows:()Z\n-   #39 = Fieldref           #4.#142       // org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n-   #40 = Class              #143          // java/lang/Enum\n+   #37 = String             #137          // System\n+   #38 = Methodref          #138.#139     // org/apache/commons/io/FilenameUtils.isSystemWindows:()Z\n+   #39 = Fieldref           #4.#140       // org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n+   #40 = Class              #141          // java/lang/Enum\n    #41 = Utf8               SENSITIVE\n    #42 = Utf8               Lorg/apache/commons/io/IOCase;\n    #43 = Utf8               INSENSITIVE\n    #44 = Utf8               SYSTEM\n    #45 = Utf8               serialVersionUID\n    #46 = Utf8               J\n    #47 = Utf8               ConstantValue\n@@ -88,95 +88,93 @@\n    #79 = Utf8               str1\n    #80 = Utf8               str2\n    #81 = Utf8               checkEquals\n    #82 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n    #83 = Utf8               checkStartsWith\n    #84 = Utf8               str\n    #85 = Utf8               start\n-   #86 = Class              #144          // java/lang/String\n-   #87 = Class              #109          // org/apache/commons/io/IOCase\n-   #88 = Utf8               checkEndsWith\n-   #89 = Utf8               end\n-   #90 = Utf8               endLen\n-   #91 = Utf8               I\n-   #92 = Utf8               checkIndexOf\n-   #93 = Utf8               (Ljava/lang/String;ILjava/lang/String;)I\n-   #94 = Utf8               i\n-   #95 = Utf8               strStartIndex\n-   #96 = Utf8               search\n-   #97 = Utf8               endIndex\n-   #98 = Utf8               checkRegionMatches\n-   #99 = Utf8               (Ljava/lang/String;ILjava/lang/String;)Z\n-  #100 = Utf8               toString\n-  #101 = Utf8               <clinit>\n-  #102 = Utf8               ()V\n-  #103 = Utf8               Ljava/lang/Enum<Lorg/apache/commons/io/IOCase;>;\n-  #104 = Utf8               SourceFile\n-  #105 = Utf8               IOCase.java\n-  #106 = NameAndType        #54:#55       // $VALUES:[Lorg/apache/commons/io/IOCase;\n-  #107 = Class              #55           // \"[Lorg/apache/commons/io/IOCase;\"\n-  #108 = NameAndType        #145:#72      // clone:()Ljava/lang/Object;\n-  #109 = Utf8               org/apache/commons/io/IOCase\n-  #110 = NameAndType        #60:#146      // valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-  #111 = NameAndType        #56:#57       // values:()[Lorg/apache/commons/io/IOCase;\n-  #112 = NameAndType        #73:#74       // getName:()Ljava/lang/String;\n-  #113 = Class              #144          // java/lang/String\n-  #114 = NameAndType        #147:#148     // equals:(Ljava/lang/Object;)Z\n-  #115 = Utf8               java/lang/IllegalArgumentException\n-  #116 = Utf8               java/lang/StringBuilder\n-  #117 = NameAndType        #66:#102      // \"<init>\":()V\n-  #118 = Utf8               Invalid IOCase name:\n-  #119 = NameAndType        #149:#150     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #120 = NameAndType        #100:#74      // toString:()Ljava/lang/String;\n-  #121 = NameAndType        #66:#151      // \"<init>\":(Ljava/lang/String;)V\n-  #122 = NameAndType        #66:#152      // \"<init>\":(Ljava/lang/String;I)V\n-  #123 = NameAndType        #50:#51       // name:Ljava/lang/String;\n-  #124 = NameAndType        #52:#53       // sensitive:Z\n-  #125 = NameAndType        #63:#61       // forName:(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;\n-  #126 = Class              #153          // java/util/Objects\n-  #127 = NameAndType        #154:#155     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #128 = NameAndType        #156:#157     // compareTo:(Ljava/lang/String;)I\n-  #129 = NameAndType        #158:#157     // compareToIgnoreCase:(Ljava/lang/String;)I\n-  #130 = NameAndType        #159:#160     // equalsIgnoreCase:(Ljava/lang/String;)Z\n-  #131 = NameAndType        #161:#162     // length:()I\n-  #132 = NameAndType        #163:#164     // regionMatches:(ZILjava/lang/String;II)Z\n-  #133 = NameAndType        #98:#99       // checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n-  #134 = Utf8               Sensitive\n-  #135 = NameAndType        #66:#67       // \"<init>\":(Ljava/lang/String;ILjava/lang/String;Z)V\n-  #136 = NameAndType        #41:#42       // SENSITIVE:Lorg/apache/commons/io/IOCase;\n-  #137 = Utf8               Insensitive\n-  #138 = NameAndType        #43:#42       // INSENSITIVE:Lorg/apache/commons/io/IOCase;\n-  #139 = Utf8               System\n-  #140 = Class              #165          // org/apache/commons/io/FilenameUtils\n-  #141 = NameAndType        #166:#76      // isSystemWindows:()Z\n-  #142 = NameAndType        #44:#42       // SYSTEM:Lorg/apache/commons/io/IOCase;\n-  #143 = Utf8               java/lang/Enum\n-  #144 = Utf8               java/lang/String\n-  #145 = Utf8               clone\n-  #146 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-  #147 = Utf8               equals\n-  #148 = Utf8               (Ljava/lang/Object;)Z\n-  #149 = Utf8               append\n-  #150 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #151 = Utf8               (Ljava/lang/String;)V\n-  #152 = Utf8               (Ljava/lang/String;I)V\n-  #153 = Utf8               java/util/Objects\n-  #154 = Utf8               requireNonNull\n-  #155 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #156 = Utf8               compareTo\n-  #157 = Utf8               (Ljava/lang/String;)I\n-  #158 = Utf8               compareToIgnoreCase\n-  #159 = Utf8               equalsIgnoreCase\n-  #160 = Utf8               (Ljava/lang/String;)Z\n-  #161 = Utf8               length\n-  #162 = Utf8               ()I\n-  #163 = Utf8               regionMatches\n-  #164 = Utf8               (ZILjava/lang/String;II)Z\n-  #165 = Utf8               org/apache/commons/io/FilenameUtils\n-  #166 = Utf8               isSystemWindows\n+   #86 = Class              #142          // java/lang/String\n+   #87 = Utf8               checkEndsWith\n+   #88 = Utf8               end\n+   #89 = Utf8               endLen\n+   #90 = Utf8               I\n+   #91 = Utf8               checkIndexOf\n+   #92 = Utf8               (Ljava/lang/String;ILjava/lang/String;)I\n+   #93 = Utf8               i\n+   #94 = Utf8               strStartIndex\n+   #95 = Utf8               search\n+   #96 = Utf8               endIndex\n+   #97 = Utf8               checkRegionMatches\n+   #98 = Utf8               (Ljava/lang/String;ILjava/lang/String;)Z\n+   #99 = Utf8               toString\n+  #100 = Utf8               <clinit>\n+  #101 = Utf8               ()V\n+  #102 = Utf8               Ljava/lang/Enum<Lorg/apache/commons/io/IOCase;>;\n+  #103 = Utf8               SourceFile\n+  #104 = Utf8               IOCase.java\n+  #105 = NameAndType        #54:#55       // $VALUES:[Lorg/apache/commons/io/IOCase;\n+  #106 = Class              #55           // \"[Lorg/apache/commons/io/IOCase;\"\n+  #107 = NameAndType        #143:#72      // clone:()Ljava/lang/Object;\n+  #108 = Utf8               org/apache/commons/io/IOCase\n+  #109 = NameAndType        #60:#144      // valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+  #110 = NameAndType        #56:#57       // values:()[Lorg/apache/commons/io/IOCase;\n+  #111 = NameAndType        #73:#74       // getName:()Ljava/lang/String;\n+  #112 = NameAndType        #145:#146     // equals:(Ljava/lang/Object;)Z\n+  #113 = Utf8               java/lang/IllegalArgumentException\n+  #114 = Utf8               java/lang/StringBuilder\n+  #115 = NameAndType        #66:#101      // \"<init>\":()V\n+  #116 = Utf8               Invalid IOCase name:\n+  #117 = NameAndType        #147:#148     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #118 = NameAndType        #99:#74       // toString:()Ljava/lang/String;\n+  #119 = NameAndType        #66:#149      // \"<init>\":(Ljava/lang/String;)V\n+  #120 = NameAndType        #66:#150      // \"<init>\":(Ljava/lang/String;I)V\n+  #121 = NameAndType        #50:#51       // name:Ljava/lang/String;\n+  #122 = NameAndType        #52:#53       // sensitive:Z\n+  #123 = NameAndType        #63:#61       // forName:(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;\n+  #124 = Class              #151          // java/util/Objects\n+  #125 = NameAndType        #152:#153     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #126 = NameAndType        #154:#155     // compareTo:(Ljava/lang/String;)I\n+  #127 = NameAndType        #156:#155     // compareToIgnoreCase:(Ljava/lang/String;)I\n+  #128 = NameAndType        #157:#158     // equalsIgnoreCase:(Ljava/lang/String;)Z\n+  #129 = NameAndType        #159:#160     // length:()I\n+  #130 = NameAndType        #161:#162     // regionMatches:(ZILjava/lang/String;II)Z\n+  #131 = NameAndType        #97:#98       // checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n+  #132 = Utf8               Sensitive\n+  #133 = NameAndType        #66:#67       // \"<init>\":(Ljava/lang/String;ILjava/lang/String;Z)V\n+  #134 = NameAndType        #41:#42       // SENSITIVE:Lorg/apache/commons/io/IOCase;\n+  #135 = Utf8               Insensitive\n+  #136 = NameAndType        #43:#42       // INSENSITIVE:Lorg/apache/commons/io/IOCase;\n+  #137 = Utf8               System\n+  #138 = Class              #163          // org/apache/commons/io/FilenameUtils\n+  #139 = NameAndType        #164:#76      // isSystemWindows:()Z\n+  #140 = NameAndType        #44:#42       // SYSTEM:Lorg/apache/commons/io/IOCase;\n+  #141 = Utf8               java/lang/Enum\n+  #142 = Utf8               java/lang/String\n+  #143 = Utf8               clone\n+  #144 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+  #145 = Utf8               equals\n+  #146 = Utf8               (Ljava/lang/Object;)Z\n+  #147 = Utf8               append\n+  #148 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #149 = Utf8               (Ljava/lang/String;)V\n+  #150 = Utf8               (Ljava/lang/String;I)V\n+  #151 = Utf8               java/util/Objects\n+  #152 = Utf8               requireNonNull\n+  #153 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #154 = Utf8               compareTo\n+  #155 = Utf8               (Ljava/lang/String;)I\n+  #156 = Utf8               compareToIgnoreCase\n+  #157 = Utf8               equalsIgnoreCase\n+  #158 = Utf8               (Ljava/lang/String;)Z\n+  #159 = Utf8               length\n+  #160 = Utf8               ()I\n+  #161 = Utf8               regionMatches\n+  #162 = Utf8               (ZILjava/lang/String;II)Z\n+  #163 = Utf8               org/apache/commons/io/FilenameUtils\n+  #164 = Utf8               isSystemWindows\n {\n   public static final org.apache.commons.io.IOCase SENSITIVE;\n     descriptor: Lorg/apache/commons/io/IOCase;\n     flags: (0x4019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_ENUM\n \n   public static final org.apache.commons.io.IOCase INSENSITIVE;\n     descriptor: Lorg/apache/commons/io/IOCase;\n@@ -698,9 +696,9 @@\n           locals = []\n           stack = [ uninitialized 32, uninitialized 32, class java/lang/String, int, class java/lang/String ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = []\n           stack = [ uninitialized 32, uninitialized 32, class java/lang/String, int, class java/lang/String, int ]\n }\n-Signature: #103                         // Ljava/lang/Enum<Lorg/apache/commons/io/IOCase;>;\n+Signature: #102                         // Ljava/lang/Enum<Lorg/apache/commons/io/IOCase;>;\n SourceFile: \"IOCase.java\"\n"}]}
