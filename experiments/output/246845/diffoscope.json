{"diffoscope-json-version": 1, "source1": "first/ExampleMacro.class", "source2": "second/ExampleMacro.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -31,56 +31,50 @@\n     private List<String> lastLines;\n     \n     public ExampleMacro() {\n         this.lastPath = \"\";\n         this.lastLines = new ArrayList<String>();\n     }\n     \n-    public void execute(final Sink sink, final MacroRequest request) throws MacroExecutionException {\n-        final String path = (String)request.getParameter(\"path\");\n-        final String type = (String)request.getParameter(\"type\");\n-        List<String> lines = this.lastLines;\n-        if (!path.equals(this.lastPath)) {\n-            lines = readFile(\"src/xdocs-examples/\" + path);\n-            this.lastPath = path;\n-            this.lastLines = lines;\n+    public void execute(final Sink sink, final MacroRequest macroRequest) throws MacroExecutionException {\n+        final String lastPath = (String)macroRequest.getParameter(\"path\");\n+        final String s = (String)macroRequest.getParameter(\"type\");\n+        List<String> lastLines = this.lastLines;\n+        if (!lastPath.equals(this.lastPath)) {\n+            lastLines = readFile(\"src/xdocs-examples/\" + lastPath);\n+            this.lastPath = lastPath;\n+            this.lastLines = lastLines;\n         }\n-        if (\"config\".equals(type)) {\n-            final String config = getSnippetBetweenDelimiters(lines, \"/*xml\", \"*/\");\n-            writeSnippet(sink, config);\n+        if (\"config\".equals(s)) {\n+            writeSnippet(sink, getSnippetBetweenDelimiters((Collection<String>)lastLines, \"/*xml\", \"*/\"));\n         }\n         else {\n-            if (!\"code\".equals(type)) {\n-                final String message = String.format(Locale.ROOT, \"Unknown example type: %s\", type);\n-                throw new MacroExecutionException(message);\n+            if (!\"code\".equals(s)) {\n+                throw new MacroExecutionException(String.format(Locale.ROOT, \"Unknown example type: %s\", s));\n             }\n-            final String code = getSnippetBetweenDelimiters(lines, \"// xdoc section -- start\", \"// xdoc section -- end\");\n-            writeSnippet(sink, code);\n+            writeSnippet(sink, getSnippetBetweenDelimiters((Collection<String>)lastLines, \"// xdoc section -- start\", \"// xdoc section -- end\"));\n         }\n     }\n     \n-    private static List<String> readFile(final String path) throws MacroExecutionException {\n+    private static List<String> readFile(final String first) throws MacroExecutionException {\n         try {\n-            final Path exampleFilePath = Path.of(path, new String[0]);\n-            return Files.readAllLines(exampleFilePath);\n+            return Files.readAllLines(Path.of(first, new String[0]));\n         }\n-        catch (final IOException ioException) {\n-            final String message = String.format(Locale.ROOT, \"Failed to read %s\", path);\n-            throw new MacroExecutionException(message, (Throwable)ioException);\n+        catch (final IOException ex) {\n+            throw new MacroExecutionException(String.format(Locale.ROOT, \"Failed to read %s\", first), (Throwable)ex);\n         }\n     }\n     \n-    private static String getSnippetBetweenDelimiters(final Collection<String> lines, final String startingDelimiter, final String endingDelimiter) {\n-        return lines.stream().dropWhile(line -> !line.contains(startingDelimiter)).skip(1L).takeWhile(line -> !line.contains(endingDelimiter)).collect(Collectors.joining(ExampleMacro.NEWLINE));\n+    private static String getSnippetBetweenDelimiters(final Collection<String> collection, final String s, final String s2) {\n+        return collection.stream().dropWhile(s4 -> !s4.contains(s3)).skip(1L).takeWhile(s6 -> !s6.contains(s5)).collect(Collectors.joining(ExampleMacro.NEWLINE));\n     }\n     \n-    private static void writeSnippet(final Sink sink, final String snippet) {\n+    private static void writeSnippet(final Sink sink, final String s) {\n         sink.verbatim(SinkEventAttributeSet.BOXED);\n-        final String text = ExampleMacro.NEWLINE + String.join((CharSequence)ExampleMacro.NEWLINE, snippet.stripTrailing(), \"        \");\n-        sink.text(text);\n+        sink.text(ExampleMacro.NEWLINE + String.join((CharSequence)ExampleMacro.NEWLINE, s.stripTrailing(), \"        \"));\n         sink.verbatim_();\n     }\n     \n     static {\n         NEWLINE = System.lineSeparator();\n     }\n }\n"}]}
