{"diffoscope-json-version": 1, "source1": "first/MurmurHash2.class", "source2": "second/MurmurHash2.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,99 +1,99 @@\n-  SHA-256 checksum 814788a15e0744218dd1439f7c2fb8fc7449deb47d16628a88f279b637421c6c\n+  SHA-256 checksum 0e7befe5cb48341c96c06a2bb56c029e9a07899dc5bf340ce3eb31d1d71dcc95\n   Compiled from \"MurmurHash2.java\"\n public final class org.apache.commons.codec.digest.MurmurHash2\n   minor version: 0\n   major version: 51\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #8                          // org/apache/commons/codec/digest/MurmurHash2\n-  super_class: #2                         // java/lang/Object\n+  this_class: #1                          // org/apache/commons/codec/digest/MurmurHash2\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 4, methods: 11, attributes: 1\n Constant pool:\n-   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n-   #2 = Class              #4             // java/lang/Object\n-   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #1 = Class              #2             // org/apache/commons/codec/digest/MurmurHash2\n+   #2 = Utf8               org/apache/commons/codec/digest/MurmurHash2\n+   #3 = Class              #4             // java/lang/Object\n    #4 = Utf8               java/lang/Object\n-   #5 = Utf8               <init>\n-   #6 = Utf8               ()V\n-   #7 = Methodref          #8.#9          // org/apache/commons/codec/digest/MurmurHash2.getLittleEndianInt:([BI)I\n-   #8 = Class              #10            // org/apache/commons/codec/digest/MurmurHash2\n-   #9 = NameAndType        #11:#12        // getLittleEndianInt:([BI)I\n-  #10 = Utf8               org/apache/commons/codec/digest/MurmurHash2\n-  #11 = Utf8               getLittleEndianInt\n-  #12 = Utf8               ([BI)I\n-  #13 = Integer            1540483477\n-  #14 = Integer            -1756908916\n-  #15 = Methodref          #8.#16         // org/apache/commons/codec/digest/MurmurHash2.hash32:([BII)I\n-  #16 = NameAndType        #17:#18        // hash32:([BII)I\n-  #17 = Utf8               hash32\n-  #18 = Utf8               ([BII)I\n-  #19 = Methodref          #20.#21        // org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n-  #20 = Class              #22            // org/apache/commons/codec/binary/StringUtils\n-  #21 = NameAndType        #23:#24        // getBytesUtf8:(Ljava/lang/String;)[B\n-  #22 = Utf8               org/apache/commons/codec/binary/StringUtils\n-  #23 = Utf8               getBytesUtf8\n-  #24 = Utf8               (Ljava/lang/String;)[B\n-  #25 = Methodref          #8.#26         // org/apache/commons/codec/digest/MurmurHash2.hash32:([BI)I\n-  #26 = NameAndType        #17:#12        // hash32:([BI)I\n-  #27 = Methodref          #28.#29        // java/lang/String.substring:(II)Ljava/lang/String;\n-  #28 = Class              #30            // java/lang/String\n-  #29 = NameAndType        #31:#32        // substring:(II)Ljava/lang/String;\n-  #30 = Utf8               java/lang/String\n-  #31 = Utf8               substring\n-  #32 = Utf8               (II)Ljava/lang/String;\n-  #33 = Methodref          #8.#34         // org/apache/commons/codec/digest/MurmurHash2.hash32:(Ljava/lang/String;)I\n-  #34 = NameAndType        #17:#35        // hash32:(Ljava/lang/String;)I\n-  #35 = Utf8               (Ljava/lang/String;)I\n-  #36 = Long               4294967295l\n-  #38 = Long               -4132994306676758123l\n-  #40 = Methodref          #8.#41         // org/apache/commons/codec/digest/MurmurHash2.getLittleEndianLong:([BI)J\n-  #41 = NameAndType        #42:#43        // getLittleEndianLong:([BI)J\n-  #42 = Utf8               getLittleEndianLong\n-  #43 = Utf8               ([BI)J\n-  #44 = Long               255l\n-  #46 = Integer            -512093083\n-  #47 = Methodref          #8.#48         // org/apache/commons/codec/digest/MurmurHash2.hash64:([BII)J\n-  #48 = NameAndType        #49:#50        // hash64:([BII)J\n-  #49 = Utf8               hash64\n-  #50 = Utf8               ([BII)J\n-  #51 = Methodref          #8.#52         // org/apache/commons/codec/digest/MurmurHash2.hash64:([BI)J\n-  #52 = NameAndType        #49:#43        // hash64:([BI)J\n-  #53 = Methodref          #8.#54         // org/apache/commons/codec/digest/MurmurHash2.hash64:(Ljava/lang/String;)J\n-  #54 = NameAndType        #49:#55        // hash64:(Ljava/lang/String;)J\n-  #55 = Utf8               (Ljava/lang/String;)J\n-  #56 = Utf8               M32\n-  #57 = Utf8               I\n-  #58 = Utf8               ConstantValue\n-  #59 = Utf8               R32\n-  #60 = Integer            24\n-  #61 = Utf8               M64\n-  #62 = Utf8               J\n-  #63 = Utf8               R64\n-  #64 = Integer            47\n-  #65 = Utf8               Code\n-  #66 = Utf8               LineNumberTable\n-  #67 = Utf8               LocalVariableTable\n-  #68 = Utf8               this\n-  #69 = Utf8               Lorg/apache/commons/codec/digest/MurmurHash2;\n-  #70 = Utf8               index\n-  #71 = Utf8               k\n-  #72 = Utf8               i\n-  #73 = Utf8               data\n-  #74 = Utf8               [B\n-  #75 = Utf8               length\n-  #76 = Utf8               seed\n-  #77 = Utf8               h\n-  #78 = Utf8               nblocks\n-  #79 = Utf8               StackMapTable\n-  #80 = Utf8               text\n-  #81 = Utf8               Ljava/lang/String;\n-  #82 = Utf8               bytes\n-  #83 = Utf8               (Ljava/lang/String;II)I\n-  #84 = Utf8               from\n-  #85 = Utf8               (Ljava/lang/String;II)J\n+   #5 = Utf8               M32\n+   #6 = Utf8               I\n+   #7 = Utf8               ConstantValue\n+   #8 = Integer            1540483477\n+   #9 = Utf8               R32\n+  #10 = Integer            24\n+  #11 = Utf8               M64\n+  #12 = Utf8               J\n+  #13 = Long               -4132994306676758123l\n+  #15 = Utf8               R64\n+  #16 = Integer            47\n+  #17 = Utf8               <init>\n+  #18 = Utf8               ()V\n+  #19 = Utf8               Code\n+  #20 = Methodref          #3.#21         // java/lang/Object.\"<init>\":()V\n+  #21 = NameAndType        #17:#18        // \"<init>\":()V\n+  #22 = Utf8               LineNumberTable\n+  #23 = Utf8               LocalVariableTable\n+  #24 = Utf8               this\n+  #25 = Utf8               Lorg/apache/commons/codec/digest/MurmurHash2;\n+  #26 = Utf8               hash32\n+  #27 = Utf8               ([BII)I\n+  #28 = Methodref          #1.#29         // org/apache/commons/codec/digest/MurmurHash2.getLittleEndianInt:([BI)I\n+  #29 = NameAndType        #30:#31        // getLittleEndianInt:([BI)I\n+  #30 = Utf8               getLittleEndianInt\n+  #31 = Utf8               ([BI)I\n+  #32 = Utf8               data\n+  #33 = Utf8               [B\n+  #34 = Utf8               length\n+  #35 = Utf8               seed\n+  #36 = Utf8               h\n+  #37 = Utf8               nblocks\n+  #38 = Utf8               i\n+  #39 = Utf8               index\n+  #40 = Utf8               k\n+  #41 = Utf8               StackMapTable\n+  #42 = Integer            -1756908916\n+  #43 = Methodref          #1.#44         // org/apache/commons/codec/digest/MurmurHash2.hash32:([BII)I\n+  #44 = NameAndType        #26:#27        // hash32:([BII)I\n+  #45 = Utf8               (Ljava/lang/String;)I\n+  #46 = Methodref          #47.#49        // org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n+  #47 = Class              #48            // org/apache/commons/codec/binary/StringUtils\n+  #48 = Utf8               org/apache/commons/codec/binary/StringUtils\n+  #49 = NameAndType        #50:#51        // getBytesUtf8:(Ljava/lang/String;)[B\n+  #50 = Utf8               getBytesUtf8\n+  #51 = Utf8               (Ljava/lang/String;)[B\n+  #52 = Methodref          #1.#53         // org/apache/commons/codec/digest/MurmurHash2.hash32:([BI)I\n+  #53 = NameAndType        #26:#31        // hash32:([BI)I\n+  #54 = Utf8               text\n+  #55 = Utf8               Ljava/lang/String;\n+  #56 = Utf8               bytes\n+  #57 = Utf8               (Ljava/lang/String;II)I\n+  #58 = Methodref          #59.#61        // java/lang/String.substring:(II)Ljava/lang/String;\n+  #59 = Class              #60            // java/lang/String\n+  #60 = Utf8               java/lang/String\n+  #61 = NameAndType        #62:#63        // substring:(II)Ljava/lang/String;\n+  #62 = Utf8               substring\n+  #63 = Utf8               (II)Ljava/lang/String;\n+  #64 = Methodref          #1.#65         // org/apache/commons/codec/digest/MurmurHash2.hash32:(Ljava/lang/String;)I\n+  #65 = NameAndType        #26:#45        // hash32:(Ljava/lang/String;)I\n+  #66 = Utf8               from\n+  #67 = Utf8               hash64\n+  #68 = Utf8               ([BII)J\n+  #69 = Long               4294967295l\n+  #71 = Methodref          #1.#72         // org/apache/commons/codec/digest/MurmurHash2.getLittleEndianLong:([BI)J\n+  #72 = NameAndType        #73:#74        // getLittleEndianLong:([BI)J\n+  #73 = Utf8               getLittleEndianLong\n+  #74 = Utf8               ([BI)J\n+  #75 = Long               255l\n+  #77 = Integer            -512093083\n+  #78 = Methodref          #1.#79         // org/apache/commons/codec/digest/MurmurHash2.hash64:([BII)J\n+  #79 = NameAndType        #67:#68        // hash64:([BII)J\n+  #80 = Utf8               (Ljava/lang/String;)J\n+  #81 = Methodref          #1.#82         // org/apache/commons/codec/digest/MurmurHash2.hash64:([BI)J\n+  #82 = NameAndType        #67:#74        // hash64:([BI)J\n+  #83 = Utf8               (Ljava/lang/String;II)J\n+  #84 = Methodref          #1.#85         // org/apache/commons/codec/digest/MurmurHash2.hash64:(Ljava/lang/String;)J\n+  #85 = NameAndType        #67:#80        // hash64:(Ljava/lang/String;)J\n   #86 = Utf8               SourceFile\n   #87 = Utf8               MurmurHash2.java\n {\n   private static final int M32 = 1540483477;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 1540483477\n@@ -115,15 +115,15 @@\n \n   private org.apache.commons.codec.digest.MurmurHash2();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #20                 // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 62: 0\n         line 63: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/codec/digest/MurmurHash2;\n@@ -139,49 +139,49 @@\n          3: istore_3\n          4: iload_1\n          5: iconst_2\n          6: ishr\n          7: istore        4\n          9: iconst_0\n         10: istore        5\n-        12: iload         5\n-        14: iload         4\n-        16: if_icmpge     73\n-        19: iload         5\n-        21: iconst_2\n-        22: ishl\n-        23: istore        6\n-        25: aload_0\n-        26: iload         6\n-        28: invokestatic  #7                  // Method getLittleEndianInt:([BI)I\n-        31: istore        7\n-        33: iload         7\n-        35: ldc           #13                 // int 1540483477\n-        37: imul\n-        38: istore        7\n-        40: iload         7\n-        42: iload         7\n-        44: bipush        24\n-        46: iushr\n-        47: ixor\n-        48: istore        7\n-        50: iload         7\n-        52: ldc           #13                 // int 1540483477\n-        54: imul\n-        55: istore        7\n-        57: iload_3\n-        58: ldc           #13                 // int 1540483477\n-        60: imul\n-        61: istore_3\n-        62: iload_3\n-        63: iload         7\n-        65: ixor\n-        66: istore_3\n-        67: iinc          5, 1\n-        70: goto          12\n+        12: goto          66\n+        15: iload         5\n+        17: iconst_2\n+        18: ishl\n+        19: istore        6\n+        21: aload_0\n+        22: iload         6\n+        24: invokestatic  #28                 // Method getLittleEndianInt:([BI)I\n+        27: istore        7\n+        29: iload         7\n+        31: ldc           #8                  // int 1540483477\n+        33: imul\n+        34: istore        7\n+        36: iload         7\n+        38: iload         7\n+        40: bipush        24\n+        42: iushr\n+        43: ixor\n+        44: istore        7\n+        46: iload         7\n+        48: ldc           #8                  // int 1540483477\n+        50: imul\n+        51: istore        7\n+        53: iload_3\n+        54: ldc           #8                  // int 1540483477\n+        56: imul\n+        57: istore_3\n+        58: iload_3\n+        59: iload         7\n+        61: ixor\n+        62: istore_3\n+        63: iinc          5, 1\n+        66: iload         5\n+        68: iload         4\n+        70: if_icmplt     15\n         73: iload         4\n         75: iconst_2\n         76: ishl\n         77: istore        5\n         79: iload_1\n         80: iload         5\n         82: isub\n@@ -220,110 +220,108 @@\n        142: iload         5\n        144: baload\n        145: sipush        255\n        148: iand\n        149: ixor\n        150: istore_3\n        151: iload_3\n-       152: ldc           #13                 // int 1540483477\n+       152: ldc           #8                  // int 1540483477\n        154: imul\n        155: istore_3\n        156: iload_3\n        157: iload_3\n        158: bipush        13\n        160: iushr\n        161: ixor\n        162: istore_3\n        163: iload_3\n-       164: ldc           #13                 // int 1540483477\n+       164: ldc           #8                  // int 1540483477\n        166: imul\n        167: istore_3\n        168: iload_3\n        169: iload_3\n        170: bipush        15\n        172: iushr\n        173: ixor\n        174: istore_3\n        175: iload_3\n        176: ireturn\n       LineNumberTable:\n         line 75: 0\n         line 78: 4\n         line 81: 9\n-        line 82: 19\n-        line 83: 25\n-        line 84: 33\n-        line 85: 40\n-        line 86: 50\n-        line 87: 57\n-        line 88: 62\n-        line 81: 67\n+        line 82: 15\n+        line 83: 21\n+        line 84: 29\n+        line 85: 36\n+        line 86: 46\n+        line 87: 53\n+        line 88: 58\n+        line 81: 63\n         line 92: 73\n         line 93: 79\n         line 95: 108\n         line 97: 124\n         line 99: 140\n         line 100: 151\n-        line 105: 156\n+        line 101: 156\n+        line 105: 157\n         line 106: 163\n         line 107: 168\n         line 109: 175\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           25      42     6 index   I\n-           33      34     7     k   I\n-           12      61     5     i   I\n             0     177     0  data   [B\n             0     177     1 length   I\n             0     177     2  seed   I\n             4     173     3     h   I\n             9     168     4 nblocks   I\n+           12      61     5     i   I\n+           21      42     6 index   I\n+           29      34     7     k   I\n            79      98     5 index   I\n       StackMapTable: number_of_entries = 6\n         frame_type = 254 /* append */\n-          offset_delta = 12\n+          offset_delta = 15\n           locals = [ int, int, int ]\n-        frame_type = 250 /* chop */\n-          offset_delta = 60\n-        frame_type = 252 /* append */\n-          offset_delta = 34\n-          locals = [ int ]\n+        frame_type = 50 /* same */\n+        frame_type = 41 /* same */\n         frame_type = 15 /* same */\n         frame_type = 15 /* same */\n         frame_type = 15 /* same */\n \n   public static int hash32(byte[], int);\n     descriptor: ([BI)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: ldc           #14                 // int -1756908916\n-         4: invokestatic  #15                 // Method hash32:([BII)I\n+         2: ldc           #42                 // int -1756908916\n+         4: invokestatic  #43                 // Method hash32:([BII)I\n          7: ireturn\n       LineNumberTable:\n         line 127: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  data   [B\n             0       8     1 length   I\n \n   public static int hash32(java.lang.String);\n     descriptor: (Ljava/lang/String;)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: invokestatic  #19                 // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n+         1: invokestatic  #46                 // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n          4: astore_1\n          5: aload_1\n          6: aload_1\n          7: arraylength\n-         8: invokestatic  #25                 // Method hash32:([BI)I\n+         8: invokestatic  #52                 // Method hash32:([BI)I\n         11: ireturn\n       LineNumberTable:\n         line 149: 0\n         line 150: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  text   Ljava/lang/String;\n@@ -335,16 +333,16 @@\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: iload_1\n          2: iload_1\n          3: iload_2\n          4: iadd\n-         5: invokevirtual #27                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n-         8: invokestatic  #33                 // Method hash32:(Ljava/lang/String;)I\n+         5: invokevirtual #58                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+         8: invokestatic  #64                 // Method hash32:(Ljava/lang/String;)I\n         11: ireturn\n       LineNumberTable:\n         line 171: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  text   Ljava/lang/String;\n             0      12     1  from   I\n@@ -353,63 +351,63 @@\n   public static long hash64(byte[], int, int);\n     descriptor: ([BII)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=6, locals=10, args_size=3\n          0: iload_2\n          1: i2l\n-         2: ldc2_w        #36                 // long 4294967295l\n+         2: ldc2_w        #69                 // long 4294967295l\n          5: land\n          6: iload_1\n          7: i2l\n-         8: ldc2_w        #38                 // long -4132994306676758123l\n+         8: ldc2_w        #13                 // long -4132994306676758123l\n         11: lmul\n         12: lxor\n         13: lstore_3\n         14: iload_1\n         15: iconst_3\n         16: ishr\n         17: istore        5\n         19: iconst_0\n         20: istore        6\n-        22: iload         6\n-        24: iload         5\n-        26: if_icmpge     86\n-        29: iload         6\n-        31: iconst_3\n-        32: ishl\n-        33: istore        7\n-        35: aload_0\n-        36: iload         7\n-        38: invokestatic  #40                 // Method getLittleEndianLong:([BI)J\n-        41: lstore        8\n-        43: lload         8\n-        45: ldc2_w        #38                 // long -4132994306676758123l\n-        48: lmul\n-        49: lstore        8\n-        51: lload         8\n-        53: lload         8\n-        55: bipush        47\n-        57: lushr\n-        58: lxor\n-        59: lstore        8\n-        61: lload         8\n-        63: ldc2_w        #38                 // long -4132994306676758123l\n-        66: lmul\n-        67: lstore        8\n-        69: lload_3\n-        70: lload         8\n-        72: lxor\n-        73: lstore_3\n-        74: lload_3\n-        75: ldc2_w        #38                 // long -4132994306676758123l\n-        78: lmul\n-        79: lstore_3\n-        80: iinc          6, 1\n-        83: goto          22\n+        22: goto          79\n+        25: iload         6\n+        27: iconst_3\n+        28: ishl\n+        29: istore        7\n+        31: aload_0\n+        32: iload         7\n+        34: invokestatic  #71                 // Method getLittleEndianLong:([BI)J\n+        37: lstore        8\n+        39: lload         8\n+        41: ldc2_w        #13                 // long -4132994306676758123l\n+        44: lmul\n+        45: lstore        8\n+        47: lload         8\n+        49: lload         8\n+        51: bipush        47\n+        53: lushr\n+        54: lxor\n+        55: lstore        8\n+        57: lload         8\n+        59: ldc2_w        #13                 // long -4132994306676758123l\n+        62: lmul\n+        63: lstore        8\n+        65: lload_3\n+        66: lload         8\n+        68: lxor\n+        69: lstore_3\n+        70: lload_3\n+        71: ldc2_w        #13                 // long -4132994306676758123l\n+        74: lmul\n+        75: lstore_3\n+        76: iinc          6, 1\n+        79: iload         6\n+        81: iload         5\n+        83: if_icmplt     25\n         86: iload         5\n         88: iconst_3\n         89: ishl\n         90: istore        6\n         92: iload_1\n         93: iload         6\n         95: isub\n@@ -426,162 +424,160 @@\n        140: lload_3\n        141: aload_0\n        142: iload         6\n        144: bipush        6\n        146: iadd\n        147: baload\n        148: i2l\n-       149: ldc2_w        #44                 // long 255l\n+       149: ldc2_w        #75                 // long 255l\n        152: land\n        153: bipush        48\n        155: lshl\n        156: lxor\n        157: lstore_3\n        158: lload_3\n        159: aload_0\n        160: iload         6\n        162: iconst_5\n        163: iadd\n        164: baload\n        165: i2l\n-       166: ldc2_w        #44                 // long 255l\n+       166: ldc2_w        #75                 // long 255l\n        169: land\n        170: bipush        40\n        172: lshl\n        173: lxor\n        174: lstore_3\n        175: lload_3\n        176: aload_0\n        177: iload         6\n        179: iconst_4\n        180: iadd\n        181: baload\n        182: i2l\n-       183: ldc2_w        #44                 // long 255l\n+       183: ldc2_w        #75                 // long 255l\n        186: land\n        187: bipush        32\n        189: lshl\n        190: lxor\n        191: lstore_3\n        192: lload_3\n        193: aload_0\n        194: iload         6\n        196: iconst_3\n        197: iadd\n        198: baload\n        199: i2l\n-       200: ldc2_w        #44                 // long 255l\n+       200: ldc2_w        #75                 // long 255l\n        203: land\n        204: bipush        24\n        206: lshl\n        207: lxor\n        208: lstore_3\n        209: lload_3\n        210: aload_0\n        211: iload         6\n        213: iconst_2\n        214: iadd\n        215: baload\n        216: i2l\n-       217: ldc2_w        #44                 // long 255l\n+       217: ldc2_w        #75                 // long 255l\n        220: land\n        221: bipush        16\n        223: lshl\n        224: lxor\n        225: lstore_3\n        226: lload_3\n        227: aload_0\n        228: iload         6\n        230: iconst_1\n        231: iadd\n        232: baload\n        233: i2l\n-       234: ldc2_w        #44                 // long 255l\n+       234: ldc2_w        #75                 // long 255l\n        237: land\n        238: bipush        8\n        240: lshl\n        241: lxor\n        242: lstore_3\n        243: lload_3\n        244: aload_0\n        245: iload         6\n        247: baload\n        248: i2l\n-       249: ldc2_w        #44                 // long 255l\n+       249: ldc2_w        #75                 // long 255l\n        252: land\n        253: lxor\n        254: lstore_3\n        255: lload_3\n-       256: ldc2_w        #38                 // long -4132994306676758123l\n+       256: ldc2_w        #13                 // long -4132994306676758123l\n        259: lmul\n        260: lstore_3\n        261: lload_3\n        262: lload_3\n        263: bipush        47\n        265: lushr\n        266: lxor\n        267: lstore_3\n        268: lload_3\n-       269: ldc2_w        #38                 // long -4132994306676758123l\n+       269: ldc2_w        #13                 // long -4132994306676758123l\n        272: lmul\n        273: lstore_3\n        274: lload_3\n        275: lload_3\n        276: bipush        47\n        278: lushr\n        279: lxor\n        280: lstore_3\n        281: lload_3\n        282: lreturn\n       LineNumberTable:\n         line 183: 0\n         line 185: 14\n         line 188: 19\n-        line 189: 29\n-        line 190: 35\n-        line 192: 43\n-        line 193: 51\n-        line 194: 61\n-        line 196: 69\n-        line 197: 74\n-        line 188: 80\n+        line 189: 25\n+        line 190: 31\n+        line 192: 39\n+        line 193: 47\n+        line 194: 57\n+        line 196: 65\n+        line 197: 70\n+        line 188: 76\n         line 200: 86\n         line 201: 92\n         line 203: 140\n         line 205: 158\n         line 207: 175\n         line 209: 192\n         line 211: 209\n         line 213: 226\n         line 215: 243\n         line 216: 255\n-        line 219: 261\n+        line 217: 261\n+        line 219: 262\n         line 220: 268\n         line 221: 274\n         line 223: 281\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           35      45     7 index   I\n-           43      37     8     k   J\n-           22      64     6     i   I\n             0     283     0  data   [B\n             0     283     1 length   I\n             0     283     2  seed   I\n            14     269     3     h   J\n            19     264     5 nblocks   I\n+           22      64     6     i   I\n+           31      45     7 index   I\n+           39      37     8     k   J\n            92     191     6 index   I\n       StackMapTable: number_of_entries = 10\n         frame_type = 254 /* append */\n-          offset_delta = 22\n+          offset_delta = 25\n           locals = [ long, int, int ]\n-        frame_type = 250 /* chop */\n-          offset_delta = 63\n-        frame_type = 252 /* append */\n-          offset_delta = 53\n-          locals = [ int ]\n+        frame_type = 53 /* same */\n+        frame_type = 60 /* same */\n         frame_type = 17 /* same */\n         frame_type = 16 /* same */\n         frame_type = 16 /* same */\n         frame_type = 16 /* same */\n         frame_type = 16 /* same */\n         frame_type = 16 /* same */\n         frame_type = 17 /* same */\n@@ -589,36 +585,36 @@\n   public static long hash64(byte[], int);\n     descriptor: ([BI)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: ldc           #46                 // int -512093083\n-         4: invokestatic  #47                 // Method hash64:([BII)J\n+         2: ldc           #77                 // int -512093083\n+         4: invokestatic  #78                 // Method hash64:([BII)J\n          7: lreturn\n       LineNumberTable:\n         line 241: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  data   [B\n             0       8     1 length   I\n \n   public static long hash64(java.lang.String);\n     descriptor: (Ljava/lang/String;)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: invokestatic  #19                 // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n+         1: invokestatic  #46                 // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n          4: astore_1\n          5: aload_1\n          6: aload_1\n          7: arraylength\n-         8: invokestatic  #51                 // Method hash64:([BI)J\n+         8: invokestatic  #81                 // Method hash64:([BI)J\n         11: lreturn\n       LineNumberTable:\n         line 263: 0\n         line 264: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  text   Ljava/lang/String;\n@@ -630,16 +626,16 @@\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: iload_1\n          2: iload_1\n          3: iload_2\n          4: iadd\n-         5: invokevirtual #27                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n-         8: invokestatic  #53                 // Method hash64:(Ljava/lang/String;)J\n+         5: invokevirtual #58                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+         8: invokestatic  #84                 // Method hash64:(Ljava/lang/String;)J\n         11: lreturn\n       LineNumberTable:\n         line 285: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  text   Ljava/lang/String;\n             0      12     1  from   I\n@@ -684,109 +680,129 @@\n         41: iand\n         42: bipush        24\n         44: ishl\n         45: ior\n         46: ireturn\n       LineNumberTable:\n         line 296: 0\n+        line 297: 7\n+        line 296: 19\n+        line 298: 20\n+        line 296: 32\n+        line 299: 33\n+        line 296: 45\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      47     0  data   [B\n             0      47     1 index   I\n \n   private static long getLittleEndianLong(byte[], int);\n     descriptor: ([BI)J\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=6, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: baload\n          3: i2l\n-         4: ldc2_w        #44                 // long 255l\n+         4: ldc2_w        #75                 // long 255l\n          7: land\n          8: aload_0\n          9: iload_1\n         10: iconst_1\n         11: iadd\n         12: baload\n         13: i2l\n-        14: ldc2_w        #44                 // long 255l\n+        14: ldc2_w        #75                 // long 255l\n         17: land\n         18: bipush        8\n         20: lshl\n         21: lor\n         22: aload_0\n         23: iload_1\n         24: iconst_2\n         25: iadd\n         26: baload\n         27: i2l\n-        28: ldc2_w        #44                 // long 255l\n+        28: ldc2_w        #75                 // long 255l\n         31: land\n         32: bipush        16\n         34: lshl\n         35: lor\n         36: aload_0\n         37: iload_1\n         38: iconst_3\n         39: iadd\n         40: baload\n         41: i2l\n-        42: ldc2_w        #44                 // long 255l\n+        42: ldc2_w        #75                 // long 255l\n         45: land\n         46: bipush        24\n         48: lshl\n         49: lor\n         50: aload_0\n         51: iload_1\n         52: iconst_4\n         53: iadd\n         54: baload\n         55: i2l\n-        56: ldc2_w        #44                 // long 255l\n+        56: ldc2_w        #75                 // long 255l\n         59: land\n         60: bipush        32\n         62: lshl\n         63: lor\n         64: aload_0\n         65: iload_1\n         66: iconst_5\n         67: iadd\n         68: baload\n         69: i2l\n-        70: ldc2_w        #44                 // long 255l\n+        70: ldc2_w        #75                 // long 255l\n         73: land\n         74: bipush        40\n         76: lshl\n         77: lor\n         78: aload_0\n         79: iload_1\n         80: bipush        6\n         82: iadd\n         83: baload\n         84: i2l\n-        85: ldc2_w        #44                 // long 255l\n+        85: ldc2_w        #75                 // long 255l\n         88: land\n         89: bipush        48\n         91: lshl\n         92: lor\n         93: aload_0\n         94: iload_1\n         95: bipush        7\n         97: iadd\n         98: baload\n         99: i2l\n-       100: ldc2_w        #44                 // long 255l\n+       100: ldc2_w        #75                 // long 255l\n        103: land\n        104: bipush        56\n        106: lshl\n        107: lor\n        108: lreturn\n       LineNumberTable:\n         line 310: 0\n+        line 311: 8\n+        line 310: 21\n+        line 312: 22\n+        line 310: 35\n+        line 313: 36\n+        line 310: 49\n+        line 314: 50\n+        line 310: 63\n+        line 315: 64\n+        line 310: 77\n+        line 316: 78\n+        line 310: 92\n+        line 317: 93\n+        line 310: 107\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0     109     0  data   [B\n             0     109     1 index   I\n }\n SourceFile: \"MurmurHash2.java\"\n"}]}
