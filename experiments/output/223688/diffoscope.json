{"diffoscope-json-version": 1, "source1": "first/PackageDeclarationCheck.class", "source2": "second/PackageDeclarationCheck.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -31,36 +31,32 @@\n         return new int[] { 16 };\n     }\n     \n     public int[] getAcceptableTokens() {\n         return this.getRequiredTokens();\n     }\n     \n-    public void beginTree(final DetailAST ast) {\n+    public void beginTree(final DetailAST detailAST) {\n         this.defined = false;\n     }\n     \n-    public void finishTree(final DetailAST ast) {\n-        if (!this.defined && ast != null) {\n-            this.log(ast, \"missing.package.declaration\", new Object[0]);\n+    public void finishTree(final DetailAST detailAST) {\n+        if (!this.defined && detailAST != null) {\n+            this.log(detailAST, \"missing.package.declaration\", new Object[0]);\n         }\n     }\n     \n-    public void visitToken(final DetailAST ast) {\n+    public void visitToken(final DetailAST detailAST) {\n         this.defined = true;\n         if (this.matchDirectoryStructure) {\n-            final DetailAST packageNameAst = ast.getLastChild().getPreviousSibling();\n-            final FullIdent fullIdent = FullIdent.createFullIdent(packageNameAst);\n-            final String packageName = fullIdent.getText().replace('.', File.separatorChar);\n-            final String directoryName = this.getDirectoryName();\n-            if (!directoryName.endsWith(packageName)) {\n-                this.log(ast, \"mismatch.package.directory\", new Object[] { packageName });\n+            final String replace = FullIdent.createFullIdent(detailAST.getLastChild().getPreviousSibling()).getText().replace('.', File.separatorChar);\n+            if (!this.getDirectoryName().endsWith(replace)) {\n+                this.log(detailAST, \"mismatch.package.directory\", new Object[] { replace });\n             }\n         }\n     }\n     \n     private String getDirectoryName() {\n-        final String fileName = this.getFilePath();\n-        final int lastSeparatorPos = fileName.lastIndexOf(File.separatorChar);\n-        return fileName.substring(0, lastSeparatorPos);\n+        final String filePath = this.getFilePath();\n+        return filePath.substring(0, filePath.lastIndexOf((int)File.separatorChar));\n     }\n }\n"}]}
