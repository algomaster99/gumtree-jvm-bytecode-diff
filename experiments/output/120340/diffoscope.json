{"diffoscope-json-version": 1, "source1": "first/RequireEmptyLineBeforeBlockTagGroupCheck.class", "source2": "second/RequireEmptyLineBeforeBlockTagGroupCheck.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,24 +1,29 @@\n \n package com.puppycrawl.tools.checkstyle.checks.javadoc;\n \n-import java.util.Arrays;\n import java.util.ArrayList;\n import com.puppycrawl.tools.checkstyle.utils.JavadocUtil;\n import com.puppycrawl.tools.checkstyle.api.DetailNode;\n+import java.util.Arrays;\n import java.util.List;\n import com.puppycrawl.tools.checkstyle.StatelessCheck;\n \n @StatelessCheck\n public class RequireEmptyLineBeforeBlockTagGroupCheck extends AbstractJavadocCheck\n {\n     public static final String MSG_JAVADOC_TAG_LINE_BEFORE = \"javadoc.tag.line.before\";\n     private static final List<Integer> ONLY_TAG_VARIATION_1;\n     private static final List<Integer> ONLY_TAG_VARIATION_2;\n     \n+    static {\n+        ONLY_TAG_VARIATION_1 = Arrays.asList(Integer.valueOf(4), Integer.valueOf(1), Integer.valueOf(6));\n+        ONLY_TAG_VARIATION_2 = Arrays.asList(Integer.valueOf(1), Integer.valueOf(6));\n+    }\n+    \n     public int[] getDefaultJavadocTokens() {\n         return new int[] { 10071 };\n     }\n     \n     public int[] getRequiredJavadocTokens() {\n         return this.getAcceptableJavadocTokens();\n     }\n@@ -53,13 +58,8 @@\n         for (DetailNode currentNode = JavadocUtil.getPreviousSibling(tagNode); currentNode != null && (currentNode.getType() == 6 || currentNode.getType() == 4 || currentNode.getType() == 1); currentNode = JavadocUtil.getPreviousSibling(currentNode)) {\n             if (currentNode.getType() == 6) {\n                 ++count;\n             }\n         }\n         return count <= 1;\n     }\n-    \n-    static {\n-        ONLY_TAG_VARIATION_1 = Arrays.asList(Integer.valueOf(4), Integer.valueOf(1), Integer.valueOf(6));\n-        ONLY_TAG_VARIATION_2 = Arrays.asList(Integer.valueOf(1), Integer.valueOf(6));\n-    }\n }\n"}]}
