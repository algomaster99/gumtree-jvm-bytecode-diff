{"diffoscope-json-version": 1, "source1": "first/ArchiveUtils.class", "source2": "second/ArchiveUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,147 +1,147 @@\n-  SHA-256 checksum bfa9a5ae14d96193cc9a79558fd601badb9431b19b6f157547f652e165406e9a\n+  SHA-256 checksum 7e6515f338d1579db30b891c90f1b1fdadc4273f3d5c8c36652411c15d0148a3\n   Compiled from \"ArchiveUtils.java\"\n public class org.apache.commons.compress.utils.ArchiveUtils\n   minor version: 0\n   major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #24                         // org/apache/commons/compress/utils/ArchiveUtils\n-  super_class: #29                        // java/lang/Object\n+  this_class: #61                         // org/apache/commons/compress/utils/ArchiveUtils\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 1, methods: 14, attributes: 2\n Constant pool:\n-    #1 = Methodref          #29.#64       // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #65           // java/lang/StringBuilder\n-    #3 = Methodref          #2.#64        // java/lang/StringBuilder.\"<init>\":()V\n-    #4 = InterfaceMethodref #41.#66       // org/apache/commons/compress/archivers/ArchiveEntry.isDirectory:()Z\n-    #5 = Methodref          #2.#67        // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-    #6 = InterfaceMethodref #41.#68       // org/apache/commons/compress/archivers/ArchiveEntry.getSize:()J\n-    #7 = Methodref          #69.#70       // java/lang/Long.toString:(J)Ljava/lang/String;\n-    #8 = Methodref          #20.#71       // java/lang/String.length:()I\n-    #9 = Methodref          #2.#72        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #10 = InterfaceMethodref #41.#73       // org/apache/commons/compress/archivers/ArchiveEntry.getName:()Ljava/lang/String;\n-   #11 = Methodref          #2.#74        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #12 = Class              #75           // org/apache/commons/compress/utils/CharsetNames\n-   #13 = String             #76           // US-ASCII\n-   #14 = Methodref          #20.#77       // java/lang/String.getBytes:(Ljava/lang/String;)[B\n-   #15 = Class              #78           // java/io/UnsupportedEncodingException\n-   #16 = Class              #79           // java/lang/RuntimeException\n-   #17 = Methodref          #16.#80       // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n-   #18 = Methodref          #24.#81       // org/apache/commons/compress/utils/ArchiveUtils.isEqual:([BII[BIIZ)Z\n-   #19 = Methodref          #24.#82       // org/apache/commons/compress/utils/ArchiveUtils.matchAsciiBuffer:(Ljava/lang/String;[BII)Z\n-   #20 = Class              #83           // java/lang/String\n-   #21 = Methodref          #20.#84       // java/lang/String.\"<init>\":([BLjava/lang/String;)V\n-   #22 = Methodref          #20.#85       // java/lang/String.\"<init>\":([BIILjava/lang/String;)V\n-   #23 = Methodref          #20.#86       // java/lang/String.toCharArray:()[C\n-   #24 = Class              #87           // org/apache/commons/compress/utils/ArchiveUtils\n-   #25 = Methodref          #88.#89       // java/util/Arrays.copyOf:([CI)[C\n-   #26 = Methodref          #90.#91       // java/lang/Character.isISOControl:(C)Z\n-   #27 = Methodref          #92.#93       // java/lang/Character$UnicodeBlock.of:(C)Ljava/lang/Character$UnicodeBlock;\n-   #28 = Fieldref           #92.#94       // java/lang/Character$UnicodeBlock.SPECIALS:Ljava/lang/Character$UnicodeBlock;\n-   #29 = Class              #95           // java/lang/Object\n-   #30 = Utf8               MAX_SANITIZED_NAME_LENGTH\n-   #31 = Utf8               I\n-   #32 = Utf8               ConstantValue\n-   #33 = Integer            255\n-   #34 = Utf8               <init>\n-   #35 = Utf8               ()V\n-   #36 = Utf8               Code\n-   #37 = Utf8               LineNumberTable\n-   #38 = Utf8               toString\n-   #39 = Utf8               (Lorg/apache/commons/compress/archivers/ArchiveEntry;)Ljava/lang/String;\n-   #40 = Utf8               StackMapTable\n-   #41 = Class              #96           // org/apache/commons/compress/archivers/ArchiveEntry\n-   #42 = Utf8               matchAsciiBuffer\n-   #43 = Utf8               (Ljava/lang/String;[BII)Z\n-   #44 = Class              #97           // \"[B\"\n-   #45 = Utf8               (Ljava/lang/String;[B)Z\n-   #46 = Utf8               toAsciiBytes\n-   #47 = Utf8               (Ljava/lang/String;)[B\n-   #48 = Utf8               toAsciiString\n-   #49 = Utf8               ([B)Ljava/lang/String;\n-   #50 = Utf8               ([BII)Ljava/lang/String;\n-   #51 = Utf8               isEqual\n-   #52 = Utf8               ([BII[BIIZ)Z\n-   #53 = Utf8               ([BII[BII)Z\n-   #54 = Utf8               ([B[B)Z\n-   #55 = Utf8               ([B[BZ)Z\n-   #56 = Utf8               isEqualWithNull\n-   #57 = Utf8               isArrayZero\n-   #58 = Utf8               ([BI)Z\n-   #59 = Utf8               sanitize\n-   #60 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-   #61 = Class              #98           // \"[C\"\n-   #62 = Utf8               SourceFile\n-   #63 = Utf8               ArchiveUtils.java\n-   #64 = NameAndType        #34:#35       // \"<init>\":()V\n-   #65 = Utf8               java/lang/StringBuilder\n-   #66 = NameAndType        #99:#100      // isDirectory:()Z\n-   #67 = NameAndType        #101:#102     // append:(C)Ljava/lang/StringBuilder;\n-   #68 = NameAndType        #103:#104     // getSize:()J\n-   #69 = Class              #105          // java/lang/Long\n-   #70 = NameAndType        #38:#106      // toString:(J)Ljava/lang/String;\n-   #71 = NameAndType        #107:#108     // length:()I\n-   #72 = NameAndType        #101:#109     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #73 = NameAndType        #110:#111     // getName:()Ljava/lang/String;\n-   #74 = NameAndType        #38:#111      // toString:()Ljava/lang/String;\n-   #75 = Utf8               org/apache/commons/compress/utils/CharsetNames\n-   #76 = Utf8               US-ASCII\n-   #77 = NameAndType        #112:#47      // getBytes:(Ljava/lang/String;)[B\n-   #78 = Utf8               java/io/UnsupportedEncodingException\n-   #79 = Utf8               java/lang/RuntimeException\n-   #80 = NameAndType        #34:#113      // \"<init>\":(Ljava/lang/Throwable;)V\n-   #81 = NameAndType        #51:#52       // isEqual:([BII[BIIZ)Z\n-   #82 = NameAndType        #42:#43       // matchAsciiBuffer:(Ljava/lang/String;[BII)Z\n-   #83 = Utf8               java/lang/String\n-   #84 = NameAndType        #34:#114      // \"<init>\":([BLjava/lang/String;)V\n-   #85 = NameAndType        #34:#115      // \"<init>\":([BIILjava/lang/String;)V\n-   #86 = NameAndType        #116:#117     // toCharArray:()[C\n-   #87 = Utf8               org/apache/commons/compress/utils/ArchiveUtils\n-   #88 = Class              #118          // java/util/Arrays\n-   #89 = NameAndType        #119:#120     // copyOf:([CI)[C\n-   #90 = Class              #121          // java/lang/Character\n-   #91 = NameAndType        #122:#123     // isISOControl:(C)Z\n-   #92 = Class              #124          // java/lang/Character$UnicodeBlock\n-   #93 = NameAndType        #127:#128     // of:(C)Ljava/lang/Character$UnicodeBlock;\n-   #94 = NameAndType        #129:#130     // SPECIALS:Ljava/lang/Character$UnicodeBlock;\n-   #95 = Utf8               java/lang/Object\n-   #96 = Utf8               org/apache/commons/compress/archivers/ArchiveEntry\n-   #97 = Utf8               [B\n-   #98 = Utf8               [C\n-   #99 = Utf8               isDirectory\n-  #100 = Utf8               ()Z\n-  #101 = Utf8               append\n-  #102 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #103 = Utf8               getSize\n-  #104 = Utf8               ()J\n-  #105 = Utf8               java/lang/Long\n-  #106 = Utf8               (J)Ljava/lang/String;\n-  #107 = Utf8               length\n-  #108 = Utf8               ()I\n-  #109 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #110 = Utf8               getName\n-  #111 = Utf8               ()Ljava/lang/String;\n-  #112 = Utf8               getBytes\n-  #113 = Utf8               (Ljava/lang/Throwable;)V\n-  #114 = Utf8               ([BLjava/lang/String;)V\n-  #115 = Utf8               ([BIILjava/lang/String;)V\n-  #116 = Utf8               toCharArray\n-  #117 = Utf8               ()[C\n-  #118 = Utf8               java/util/Arrays\n-  #119 = Utf8               copyOf\n-  #120 = Utf8               ([CI)[C\n-  #121 = Utf8               java/lang/Character\n-  #122 = Utf8               isISOControl\n-  #123 = Utf8               (C)Z\n-  #124 = Utf8               java/lang/Character$UnicodeBlock\n-  #125 = Utf8               UnicodeBlock\n-  #126 = Utf8               InnerClasses\n-  #127 = Utf8               of\n-  #128 = Utf8               (C)Ljava/lang/Character$UnicodeBlock;\n-  #129 = Utf8               SPECIALS\n-  #130 = Utf8               Ljava/lang/Character$UnicodeBlock;\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Class              #8            // java/lang/StringBuilder\n+    #8 = Utf8               java/lang/StringBuilder\n+    #9 = Methodref          #7.#3         // java/lang/StringBuilder.\"<init>\":()V\n+   #10 = InterfaceMethodref #11.#12       // org/apache/commons/compress/archivers/ArchiveEntry.isDirectory:()Z\n+   #11 = Class              #13           // org/apache/commons/compress/archivers/ArchiveEntry\n+   #12 = NameAndType        #14:#15       // isDirectory:()Z\n+   #13 = Utf8               org/apache/commons/compress/archivers/ArchiveEntry\n+   #14 = Utf8               isDirectory\n+   #15 = Utf8               ()Z\n+   #16 = Methodref          #7.#17        // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+   #17 = NameAndType        #18:#19       // append:(C)Ljava/lang/StringBuilder;\n+   #18 = Utf8               append\n+   #19 = Utf8               (C)Ljava/lang/StringBuilder;\n+   #20 = InterfaceMethodref #11.#21       // org/apache/commons/compress/archivers/ArchiveEntry.getSize:()J\n+   #21 = NameAndType        #22:#23       // getSize:()J\n+   #22 = Utf8               getSize\n+   #23 = Utf8               ()J\n+   #24 = Methodref          #25.#26       // java/lang/Long.toString:(J)Ljava/lang/String;\n+   #25 = Class              #27           // java/lang/Long\n+   #26 = NameAndType        #28:#29       // toString:(J)Ljava/lang/String;\n+   #27 = Utf8               java/lang/Long\n+   #28 = Utf8               toString\n+   #29 = Utf8               (J)Ljava/lang/String;\n+   #30 = Methodref          #31.#32       // java/lang/String.length:()I\n+   #31 = Class              #33           // java/lang/String\n+   #32 = NameAndType        #34:#35       // length:()I\n+   #33 = Utf8               java/lang/String\n+   #34 = Utf8               length\n+   #35 = Utf8               ()I\n+   #36 = Methodref          #7.#37        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #37 = NameAndType        #18:#38       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #38 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #39 = InterfaceMethodref #11.#40       // org/apache/commons/compress/archivers/ArchiveEntry.getName:()Ljava/lang/String;\n+   #40 = NameAndType        #41:#42       // getName:()Ljava/lang/String;\n+   #41 = Utf8               getName\n+   #42 = Utf8               ()Ljava/lang/String;\n+   #43 = Methodref          #7.#44        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #44 = NameAndType        #28:#42       // toString:()Ljava/lang/String;\n+   #45 = Class              #46           // org/apache/commons/compress/utils/CharsetNames\n+   #46 = Utf8               org/apache/commons/compress/utils/CharsetNames\n+   #47 = String             #48           // US-ASCII\n+   #48 = Utf8               US-ASCII\n+   #49 = Methodref          #31.#50       // java/lang/String.getBytes:(Ljava/lang/String;)[B\n+   #50 = NameAndType        #51:#52       // getBytes:(Ljava/lang/String;)[B\n+   #51 = Utf8               getBytes\n+   #52 = Utf8               (Ljava/lang/String;)[B\n+   #53 = Class              #54           // java/io/UnsupportedEncodingException\n+   #54 = Utf8               java/io/UnsupportedEncodingException\n+   #55 = Class              #56           // java/lang/RuntimeException\n+   #56 = Utf8               java/lang/RuntimeException\n+   #57 = Methodref          #55.#58       // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+   #58 = NameAndType        #5:#59        // \"<init>\":(Ljava/lang/Throwable;)V\n+   #59 = Utf8               (Ljava/lang/Throwable;)V\n+   #60 = Methodref          #61.#62       // org/apache/commons/compress/utils/ArchiveUtils.isEqual:([BII[BIIZ)Z\n+   #61 = Class              #63           // org/apache/commons/compress/utils/ArchiveUtils\n+   #62 = NameAndType        #64:#65       // isEqual:([BII[BIIZ)Z\n+   #63 = Utf8               org/apache/commons/compress/utils/ArchiveUtils\n+   #64 = Utf8               isEqual\n+   #65 = Utf8               ([BII[BIIZ)Z\n+   #66 = Methodref          #61.#67       // org/apache/commons/compress/utils/ArchiveUtils.matchAsciiBuffer:(Ljava/lang/String;[BII)Z\n+   #67 = NameAndType        #68:#69       // matchAsciiBuffer:(Ljava/lang/String;[BII)Z\n+   #68 = Utf8               matchAsciiBuffer\n+   #69 = Utf8               (Ljava/lang/String;[BII)Z\n+   #70 = Methodref          #31.#71       // java/lang/String.\"<init>\":([BLjava/lang/String;)V\n+   #71 = NameAndType        #5:#72        // \"<init>\":([BLjava/lang/String;)V\n+   #72 = Utf8               ([BLjava/lang/String;)V\n+   #73 = Methodref          #31.#74       // java/lang/String.\"<init>\":([BIILjava/lang/String;)V\n+   #74 = NameAndType        #5:#75        // \"<init>\":([BIILjava/lang/String;)V\n+   #75 = Utf8               ([BIILjava/lang/String;)V\n+   #76 = Methodref          #31.#77       // java/lang/String.toCharArray:()[C\n+   #77 = NameAndType        #78:#79       // toCharArray:()[C\n+   #78 = Utf8               toCharArray\n+   #79 = Utf8               ()[C\n+   #80 = Methodref          #81.#82       // java/util/Arrays.copyOf:([CI)[C\n+   #81 = Class              #83           // java/util/Arrays\n+   #82 = NameAndType        #84:#85       // copyOf:([CI)[C\n+   #83 = Utf8               java/util/Arrays\n+   #84 = Utf8               copyOf\n+   #85 = Utf8               ([CI)[C\n+   #86 = Methodref          #87.#88       // java/lang/Character.isISOControl:(C)Z\n+   #87 = Class              #89           // java/lang/Character\n+   #88 = NameAndType        #90:#91       // isISOControl:(C)Z\n+   #89 = Utf8               java/lang/Character\n+   #90 = Utf8               isISOControl\n+   #91 = Utf8               (C)Z\n+   #92 = Methodref          #93.#94       // java/lang/Character$UnicodeBlock.of:(C)Ljava/lang/Character$UnicodeBlock;\n+   #93 = Class              #95           // java/lang/Character$UnicodeBlock\n+   #94 = NameAndType        #96:#97       // of:(C)Ljava/lang/Character$UnicodeBlock;\n+   #95 = Utf8               java/lang/Character$UnicodeBlock\n+   #96 = Utf8               of\n+   #97 = Utf8               (C)Ljava/lang/Character$UnicodeBlock;\n+   #98 = Fieldref           #93.#99       // java/lang/Character$UnicodeBlock.SPECIALS:Ljava/lang/Character$UnicodeBlock;\n+   #99 = NameAndType        #100:#101     // SPECIALS:Ljava/lang/Character$UnicodeBlock;\n+  #100 = Utf8               SPECIALS\n+  #101 = Utf8               Ljava/lang/Character$UnicodeBlock;\n+  #102 = Utf8               MAX_SANITIZED_NAME_LENGTH\n+  #103 = Utf8               I\n+  #104 = Utf8               ConstantValue\n+  #105 = Integer            255\n+  #106 = Utf8               Code\n+  #107 = Utf8               LineNumberTable\n+  #108 = Utf8               (Lorg/apache/commons/compress/archivers/ArchiveEntry;)Ljava/lang/String;\n+  #109 = Utf8               StackMapTable\n+  #110 = Class              #111          // \"[B\"\n+  #111 = Utf8               [B\n+  #112 = Utf8               (Ljava/lang/String;[B)Z\n+  #113 = Utf8               toAsciiBytes\n+  #114 = Utf8               toAsciiString\n+  #115 = Utf8               ([B)Ljava/lang/String;\n+  #116 = Utf8               ([BII)Ljava/lang/String;\n+  #117 = Utf8               ([BII[BII)Z\n+  #118 = Utf8               ([B[B)Z\n+  #119 = Utf8               ([B[BZ)Z\n+  #120 = Utf8               isEqualWithNull\n+  #121 = Utf8               isArrayZero\n+  #122 = Utf8               ([BI)Z\n+  #123 = Utf8               sanitize\n+  #124 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #125 = Class              #126          // \"[C\"\n+  #126 = Utf8               [C\n+  #127 = Utf8               SourceFile\n+  #128 = Utf8               ArchiveUtils.java\n+  #129 = Utf8               InnerClasses\n+  #130 = Utf8               UnicodeBlock\n {\n   private static final int MAX_SANITIZED_NAME_LENGTH = 255;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 255\n \n   private org.apache.commons.compress.utils.ArchiveUtils();\n@@ -157,60 +157,60 @@\n         line 35: 4\n \n   public static java.lang.String toString(org.apache.commons.compress.archivers.ArchiveEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/ArchiveEntry;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=4, args_size=1\n-         0: new           #2                  // class java/lang/StringBuilder\n+         0: new           #7                  // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #3                  // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #9                  // Method java/lang/StringBuilder.\"<init>\":()V\n          7: astore_1\n          8: aload_1\n          9: aload_0\n-        10: invokeinterface #4,  1            // InterfaceMethod org/apache/commons/compress/archivers/ArchiveEntry.isDirectory:()Z\n+        10: invokeinterface #10,  1           // InterfaceMethod org/apache/commons/compress/archivers/ArchiveEntry.isDirectory:()Z\n         15: ifeq          23\n         18: bipush        100\n         20: goto          25\n         23: bipush        45\n-        25: invokevirtual #5                  // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        25: invokevirtual #16                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         28: pop\n         29: aload_0\n-        30: invokeinterface #6,  1            // InterfaceMethod org/apache/commons/compress/archivers/ArchiveEntry.getSize:()J\n-        35: invokestatic  #7                  // Method java/lang/Long.toString:(J)Ljava/lang/String;\n+        30: invokeinterface #20,  1           // InterfaceMethod org/apache/commons/compress/archivers/ArchiveEntry.getSize:()J\n+        35: invokestatic  #24                 // Method java/lang/Long.toString:(J)Ljava/lang/String;\n         38: astore_2\n         39: aload_1\n         40: bipush        32\n-        42: invokevirtual #5                  // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        42: invokevirtual #16                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         45: pop\n         46: bipush        7\n         48: istore_3\n         49: iload_3\n         50: aload_2\n-        51: invokevirtual #8                  // Method java/lang/String.length:()I\n+        51: invokevirtual #30                 // Method java/lang/String.length:()I\n         54: if_icmple     70\n         57: aload_1\n         58: bipush        32\n-        60: invokevirtual #5                  // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        60: invokevirtual #16                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         63: pop\n         64: iinc          3, -1\n         67: goto          49\n         70: aload_1\n         71: aload_2\n-        72: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        72: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         75: pop\n         76: aload_1\n         77: bipush        32\n-        79: invokevirtual #5                  // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        79: invokevirtual #16                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         82: aload_0\n-        83: invokeinterface #10,  1           // InterfaceMethod org/apache/commons/compress/archivers/ArchiveEntry.getName:()Ljava/lang/String;\n-        88: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        83: invokeinterface #39,  1           // InterfaceMethod org/apache/commons/compress/archivers/ArchiveEntry.getName:()Ljava/lang/String;\n+        88: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         91: pop\n         92: aload_1\n-        93: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        93: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         96: areturn\n       LineNumberTable:\n         line 50: 0\n         line 51: 8\n         line 52: 29\n         line 53: 39\n         line 55: 46\n@@ -236,33 +236,33 @@\n \n   public static boolean matchAsciiBuffer(java.lang.String, byte[], int, int);\n     descriptor: (Ljava/lang/String;[BII)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=7, locals=6, args_size=4\n          0: aload_0\n-         1: ldc           #13                 // String US-ASCII\n-         3: invokevirtual #14                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B\n+         1: ldc           #47                 // String US-ASCII\n+         3: invokevirtual #49                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B\n          6: astore        4\n          8: goto          23\n         11: astore        5\n-        13: new           #16                 // class java/lang/RuntimeException\n+        13: new           #55                 // class java/lang/RuntimeException\n         16: dup\n         17: aload         5\n-        19: invokespecial #17                 // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+        19: invokespecial #57                 // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n         22: athrow\n         23: aload         4\n         25: iconst_0\n         26: aload         4\n         28: arraylength\n         29: aload_1\n         30: iload_2\n         31: iload_3\n         32: iconst_0\n-        33: invokestatic  #18                 // Method isEqual:([BII[BIIZ)Z\n+        33: invokestatic  #60                 // Method isEqual:([BII[BIIZ)Z\n         36: ireturn\n       Exception table:\n          from    to  target type\n              0     8    11   Class java/io/UnsupportedEncodingException\n       LineNumberTable:\n         line 76: 0\n         line 80: 8\n@@ -282,33 +282,33 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokestatic  #19                 // Method matchAsciiBuffer:(Ljava/lang/String;[BII)Z\n+         5: invokestatic  #66                 // Method matchAsciiBuffer:(Ljava/lang/String;[BII)Z\n          8: ireturn\n       LineNumberTable:\n         line 92: 0\n \n   public static byte[] toAsciiBytes(java.lang.String);\n     descriptor: (Ljava/lang/String;)[B\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: ldc           #13                 // String US-ASCII\n-         3: invokevirtual #14                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B\n+         1: ldc           #47                 // String US-ASCII\n+         3: invokevirtual #49                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B\n          6: areturn\n          7: astore_1\n-         8: new           #16                 // class java/lang/RuntimeException\n+         8: new           #55                 // class java/lang/RuntimeException\n         11: dup\n         12: aload_1\n-        13: invokespecial #17                 // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+        13: invokespecial #57                 // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n         16: athrow\n       Exception table:\n          from    to  target type\n              0     6     7   Class java/io/UnsupportedEncodingException\n       LineNumberTable:\n         line 104: 0\n         line 105: 7\n@@ -318,25 +318,25 @@\n           stack = [ class java/io/UnsupportedEncodingException ]\n \n   public static java.lang.String toAsciiString(byte[]);\n     descriptor: ([B)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=1\n-         0: new           #20                 // class java/lang/String\n+         0: new           #31                 // class java/lang/String\n          3: dup\n          4: aload_0\n-         5: ldc           #13                 // String US-ASCII\n-         7: invokespecial #21                 // Method java/lang/String.\"<init>\":([BLjava/lang/String;)V\n+         5: ldc           #47                 // String US-ASCII\n+         7: invokespecial #70                 // Method java/lang/String.\"<init>\":([BLjava/lang/String;)V\n         10: areturn\n         11: astore_1\n-        12: new           #16                 // class java/lang/RuntimeException\n+        12: new           #55                 // class java/lang/RuntimeException\n         15: dup\n         16: aload_1\n-        17: invokespecial #17                 // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+        17: invokespecial #57                 // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n         20: athrow\n       Exception table:\n          from    to  target type\n              0    10    11   Class java/io/UnsupportedEncodingException\n       LineNumberTable:\n         line 119: 0\n         line 120: 11\n@@ -346,27 +346,27 @@\n           stack = [ class java/io/UnsupportedEncodingException ]\n \n   public static java.lang.String toAsciiString(byte[], int, int);\n     descriptor: ([BII)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=6, locals=4, args_size=3\n-         0: new           #20                 // class java/lang/String\n+         0: new           #31                 // class java/lang/String\n          3: dup\n          4: aload_0\n          5: iload_1\n          6: iload_2\n-         7: ldc           #13                 // String US-ASCII\n-         9: invokespecial #22                 // Method java/lang/String.\"<init>\":([BIILjava/lang/String;)V\n+         7: ldc           #47                 // String US-ASCII\n+         9: invokespecial #73                 // Method java/lang/String.\"<init>\":([BIILjava/lang/String;)V\n         12: areturn\n         13: astore_3\n-        14: new           #16                 // class java/lang/RuntimeException\n+        14: new           #55                 // class java/lang/RuntimeException\n         17: dup\n         18: aload_3\n-        19: invokespecial #17                 // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+        19: invokespecial #57                 // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n         22: athrow\n       Exception table:\n          from    to  target type\n              0    12    13   Class java/io/UnsupportedEncodingException\n       LineNumberTable:\n         line 136: 0\n         line 137: 13\n@@ -506,15 +506,15 @@\n          0: aload_0\n          1: iload_1\n          2: iload_2\n          3: aload_3\n          4: iload         4\n          6: iload         5\n          8: iconst_0\n-         9: invokestatic  #18                 // Method isEqual:([BII[BIIZ)Z\n+         9: invokestatic  #60                 // Method isEqual:([BII[BIIZ)Z\n         12: ireturn\n       LineNumberTable:\n         line 201: 0\n \n   public static boolean isEqual(byte[], byte[]);\n     descriptor: ([B[B)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n@@ -525,15 +525,15 @@\n          2: aload_0\n          3: arraylength\n          4: aload_1\n          5: iconst_0\n          6: aload_1\n          7: arraylength\n          8: iconst_0\n-         9: invokestatic  #18                 // Method isEqual:([BII[BIIZ)Z\n+         9: invokestatic  #60                 // Method isEqual:([BII[BIIZ)Z\n         12: ireturn\n       LineNumberTable:\n         line 212: 0\n \n   public static boolean isEqual(byte[], byte[], boolean);\n     descriptor: ([B[BZ)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n@@ -544,15 +544,15 @@\n          2: aload_0\n          3: arraylength\n          4: aload_1\n          5: iconst_0\n          6: aload_1\n          7: arraylength\n          8: iload_2\n-         9: invokestatic  #18                 // Method isEqual:([BII[BIIZ)Z\n+         9: invokestatic  #60                 // Method isEqual:([BII[BIIZ)Z\n         12: ireturn\n       LineNumberTable:\n         line 224: 0\n \n   public static boolean isEqualWithNull(byte[], int, int, byte[], int, int);\n     descriptor: ([BII[BII)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n@@ -561,15 +561,15 @@\n          0: aload_0\n          1: iload_1\n          2: iload_2\n          3: aload_3\n          4: iload         4\n          6: iload         5\n          8: iconst_1\n-         9: invokestatic  #18                 // Method isEqual:([BII[BIIZ)Z\n+         9: invokestatic  #60                 // Method isEqual:([BII[BIIZ)Z\n         12: ireturn\n       LineNumberTable:\n         line 241: 0\n \n   public static boolean isArrayZero(byte[], int);\n     descriptor: ([BI)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n@@ -606,25 +606,25 @@\n \n   public static java.lang.String sanitize(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=9, args_size=1\n          0: aload_0\n-         1: invokevirtual #23                 // Method java/lang/String.toCharArray:()[C\n+         1: invokevirtual #76                 // Method java/lang/String.toCharArray:()[C\n          4: astore_1\n          5: aload_1\n          6: arraylength\n          7: sipush        255\n         10: if_icmpgt     17\n         13: aload_1\n         14: goto          24\n         17: aload_1\n         18: sipush        255\n-        21: invokestatic  #25                 // Method java/util/Arrays.copyOf:([CI)[C\n+        21: invokestatic  #80                 // Method java/util/Arrays.copyOf:([CI)[C\n         24: astore_2\n         25: aload_1\n         26: arraylength\n         27: sipush        255\n         30: if_icmple     55\n         33: sipush        252\n         36: istore_3\n@@ -633,17 +633,17 @@\n         41: if_icmpge     55\n         44: aload_2\n         45: iload_3\n         46: bipush        46\n         48: castore\n         49: iinc          3, 1\n         52: goto          37\n-        55: new           #2                  // class java/lang/StringBuilder\n+        55: new           #7                  // class java/lang/StringBuilder\n         58: dup\n-        59: invokespecial #3                  // Method java/lang/StringBuilder.\"<init>\":()V\n+        59: invokespecial #9                  // Method java/lang/StringBuilder.\"<init>\":()V\n         62: astore_3\n         63: aload_2\n         64: astore        4\n         66: aload         4\n         68: arraylength\n         69: istore        5\n         71: iconst_0\n@@ -652,37 +652,37 @@\n         76: iload         5\n         78: if_icmpge     139\n         81: aload         4\n         83: iload         6\n         85: caload\n         86: istore        7\n         88: iload         7\n-        90: invokestatic  #26                 // Method java/lang/Character.isISOControl:(C)Z\n+        90: invokestatic  #86                 // Method java/lang/Character.isISOControl:(C)Z\n         93: ifne          126\n         96: iload         7\n-        98: invokestatic  #27                 // Method java/lang/Character$UnicodeBlock.of:(C)Ljava/lang/Character$UnicodeBlock;\n+        98: invokestatic  #92                 // Method java/lang/Character$UnicodeBlock.of:(C)Ljava/lang/Character$UnicodeBlock;\n        101: astore        8\n        103: aload         8\n        105: ifnull        126\n        108: aload         8\n-       110: getstatic     #28                 // Field java/lang/Character$UnicodeBlock.SPECIALS:Ljava/lang/Character$UnicodeBlock;\n+       110: getstatic     #98                 // Field java/lang/Character$UnicodeBlock.SPECIALS:Ljava/lang/Character$UnicodeBlock;\n        113: if_acmpeq     126\n        116: aload_3\n        117: iload         7\n-       119: invokevirtual #5                  // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       119: invokevirtual #16                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n        122: pop\n        123: goto          133\n        126: aload_3\n        127: bipush        63\n-       129: invokevirtual #5                  // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       129: invokevirtual #16                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n        132: pop\n        133: iinc          6, 1\n        136: goto          74\n        139: aload_3\n-       140: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       140: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        143: areturn\n       LineNumberTable:\n         line 278: 0\n         line 279: 5\n         line 280: 25\n         line 281: 33\n         line 282: 44\n@@ -718,8 +718,8 @@\n         frame_type = 250 /* chop */\n           offset_delta = 6\n         frame_type = 248 /* chop */\n           offset_delta = 5\n }\n SourceFile: \"ArchiveUtils.java\"\n InnerClasses:\n-  public static final #125= #92 of #90;   // UnicodeBlock=class java/lang/Character$UnicodeBlock of class java/lang/Character\n+  public static final #130= #93 of #87;   // UnicodeBlock=class java/lang/Character$UnicodeBlock of class java/lang/Character\n"}]}
