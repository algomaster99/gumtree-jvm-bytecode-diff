{"diffoscope-json-version": 1, "source1": "first/DirectoryWalker.class", "source2": "second/DirectoryWalker.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,169 +1,169 @@\n-  SHA-256 checksum 60c03c39c6871049dc4ee62c3b0079c95960b674338c0f9b17a92a4582b84ac4\n+  SHA-256 checksum 20e2b55f107e23c97f0cff1682aed52e86d3bd6836b7118101f81e92284c208c\n   Compiled from \"DirectoryWalker.java\"\n public abstract class org.apache.commons.io.DirectoryWalker<T extends java.lang.Object> extends java.lang.Object\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #28                         // org/apache/commons/io/DirectoryWalker\n-  super_class: #29                        // java/lang/Object\n+  this_class: #2                          // org/apache/commons/io/DirectoryWalker\n+  super_class: #8                         // java/lang/Object\n   interfaces: 0, fields: 2, methods: 16, attributes: 5\n Constant pool:\n-    #1 = Methodref          #28.#102      // org/apache/commons/io/DirectoryWalker.\"<init>\":(Ljava/io/FileFilter;I)V\n-    #2 = Methodref          #29.#103      // java/lang/Object.\"<init>\":()V\n-    #3 = Fieldref           #28.#104      // org/apache/commons/io/DirectoryWalker.filter:Ljava/io/FileFilter;\n-    #4 = Fieldref           #28.#105      // org/apache/commons/io/DirectoryWalker.depthLimit:I\n-    #5 = Fieldref           #106.#107     // org/apache/commons/io/filefilter/TrueFileFilter.TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-    #6 = Methodref          #108.#109     // org/apache/commons/io/filefilter/FileFilterUtils.makeDirectoryOnly:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-    #7 = Methodref          #108.#110     // org/apache/commons/io/filefilter/FileFilterUtils.makeFileOnly:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-    #8 = InterfaceMethodref #51.#111      // org/apache/commons/io/filefilter/IOFileFilter.or:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-    #9 = String             #56           // startDirectory\n-   #10 = Methodref          #112.#113     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #11 = Methodref          #28.#114      // org/apache/commons/io/DirectoryWalker.handleStart:(Ljava/io/File;Ljava/util/Collection;)V\n-   #12 = Methodref          #28.#115      // org/apache/commons/io/DirectoryWalker.walk:(Ljava/io/File;ILjava/util/Collection;)V\n-   #13 = Methodref          #28.#116      // org/apache/commons/io/DirectoryWalker.handleEnd:(Ljava/util/Collection;)V\n-   #14 = Class              #117          // org/apache/commons/io/DirectoryWalker$CancelException\n-   #15 = Methodref          #28.#118      // org/apache/commons/io/DirectoryWalker.handleCancelled:(Ljava/io/File;Ljava/util/Collection;Lorg/apache/commons/io/DirectoryWalker$CancelException;)V\n-   #16 = Methodref          #28.#119      // org/apache/commons/io/DirectoryWalker.checkIfCancelled:(Ljava/io/File;ILjava/util/Collection;)V\n-   #17 = Methodref          #28.#120      // org/apache/commons/io/DirectoryWalker.handleDirectory:(Ljava/io/File;ILjava/util/Collection;)Z\n-   #18 = Methodref          #28.#121      // org/apache/commons/io/DirectoryWalker.handleDirectoryStart:(Ljava/io/File;ILjava/util/Collection;)V\n-   #19 = Methodref          #73.#122      // java/io/File.listFiles:()[Ljava/io/File;\n-   #20 = Methodref          #73.#123      // java/io/File.listFiles:(Ljava/io/FileFilter;)[Ljava/io/File;\n-   #21 = Methodref          #28.#124      // org/apache/commons/io/DirectoryWalker.filterDirectoryContents:(Ljava/io/File;I[Ljava/io/File;)[Ljava/io/File;\n-   #22 = Methodref          #28.#125      // org/apache/commons/io/DirectoryWalker.handleRestricted:(Ljava/io/File;ILjava/util/Collection;)V\n-   #23 = Methodref          #73.#126      // java/io/File.isDirectory:()Z\n-   #24 = Methodref          #28.#127      // org/apache/commons/io/DirectoryWalker.handleFile:(Ljava/io/File;ILjava/util/Collection;)V\n-   #25 = Methodref          #28.#128      // org/apache/commons/io/DirectoryWalker.handleDirectoryEnd:(Ljava/io/File;ILjava/util/Collection;)V\n-   #26 = Methodref          #28.#129      // org/apache/commons/io/DirectoryWalker.handleIsCancelled:(Ljava/io/File;ILjava/util/Collection;)Z\n-   #27 = Methodref          #14.#130      // org/apache/commons/io/DirectoryWalker$CancelException.\"<init>\":(Ljava/io/File;I)V\n-   #28 = Class              #131          // org/apache/commons/io/DirectoryWalker\n-   #29 = Class              #132          // java/lang/Object\n-   #30 = Utf8               CancelException\n-   #31 = Utf8               InnerClasses\n-   #32 = Utf8               filter\n-   #33 = Utf8               Ljava/io/FileFilter;\n-   #34 = Utf8               depthLimit\n-   #35 = Utf8               I\n-   #36 = Utf8               <init>\n-   #37 = Utf8               ()V\n-   #38 = Utf8               Code\n-   #39 = Utf8               LineNumberTable\n-   #40 = Utf8               LocalVariableTable\n-   #41 = Utf8               this\n-   #42 = Utf8               Lorg/apache/commons/io/DirectoryWalker;\n-   #43 = Utf8               LocalVariableTypeTable\n-   #44 = Utf8               Lorg/apache/commons/io/DirectoryWalker<TT;>;\n-   #45 = Utf8               (Ljava/io/FileFilter;I)V\n-   #46 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;I)V\n-   #47 = Utf8               directoryFilter\n-   #48 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #49 = Utf8               fileFilter\n-   #50 = Utf8               StackMapTable\n-   #51 = Class              #133          // org/apache/commons/io/filefilter/IOFileFilter\n-   #52 = Utf8               walk\n-   #53 = Utf8               (Ljava/io/File;Ljava/util/Collection;)V\n-   #54 = Utf8               cancel\n-   #55 = Utf8               Lorg/apache/commons/io/DirectoryWalker$CancelException;\n-   #56 = Utf8               startDirectory\n-   #57 = Utf8               Ljava/io/File;\n-   #58 = Utf8               results\n-   #59 = Utf8               Ljava/util/Collection;\n-   #60 = Utf8               Ljava/util/Collection<TT;>;\n-   #61 = Utf8               Exceptions\n-   #62 = Class              #134          // java/io/IOException\n-   #63 = Utf8               Signature\n-   #64 = Utf8               (Ljava/io/File;Ljava/util/Collection<TT;>;)V\n-   #65 = Utf8               (Ljava/io/File;ILjava/util/Collection;)V\n-   #66 = Utf8               childFile\n-   #67 = Utf8               childFiles\n-   #68 = Utf8               [Ljava/io/File;\n-   #69 = Utf8               childDepth\n-   #70 = Utf8               directory\n-   #71 = Utf8               depth\n-   #72 = Class              #68           // \"[Ljava/io/File;\"\n-   #73 = Class              #135          // java/io/File\n-   #74 = Class              #136          // java/util/Collection\n-   #75 = Utf8               (Ljava/io/File;ILjava/util/Collection<TT;>;)V\n-   #76 = Utf8               checkIfCancelled\n-   #77 = Utf8               file\n-   #78 = Utf8               handleIsCancelled\n-   #79 = Utf8               (Ljava/io/File;ILjava/util/Collection;)Z\n-   #80 = Utf8               (Ljava/io/File;ILjava/util/Collection<TT;>;)Z\n-   #81 = Utf8               handleCancelled\n-   #82 = Utf8               (Ljava/io/File;Ljava/util/Collection;Lorg/apache/commons/io/DirectoryWalker$CancelException;)V\n-   #83 = Utf8               (Ljava/io/File;Ljava/util/Collection<TT;>;Lorg/apache/commons/io/DirectoryWalker$CancelException;)V\n-   #84 = Utf8               handleStart\n-   #85 = Utf8               handleDirectory\n-   #86 = Utf8               handleDirectoryStart\n+    #1 = Methodref          #2.#3         // org/apache/commons/io/DirectoryWalker.\"<init>\":(Ljava/io/FileFilter;I)V\n+    #2 = Class              #4            // org/apache/commons/io/DirectoryWalker\n+    #3 = NameAndType        #5:#6         // \"<init>\":(Ljava/io/FileFilter;I)V\n+    #4 = Utf8               org/apache/commons/io/DirectoryWalker\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (Ljava/io/FileFilter;I)V\n+    #7 = Methodref          #8.#9         // java/lang/Object.\"<init>\":()V\n+    #8 = Class              #10           // java/lang/Object\n+    #9 = NameAndType        #5:#11        // \"<init>\":()V\n+   #10 = Utf8               java/lang/Object\n+   #11 = Utf8               ()V\n+   #12 = Fieldref           #2.#13        // org/apache/commons/io/DirectoryWalker.filter:Ljava/io/FileFilter;\n+   #13 = NameAndType        #14:#15       // filter:Ljava/io/FileFilter;\n+   #14 = Utf8               filter\n+   #15 = Utf8               Ljava/io/FileFilter;\n+   #16 = Fieldref           #2.#17        // org/apache/commons/io/DirectoryWalker.depthLimit:I\n+   #17 = NameAndType        #18:#19       // depthLimit:I\n+   #18 = Utf8               depthLimit\n+   #19 = Utf8               I\n+   #20 = Fieldref           #21.#22       // org/apache/commons/io/filefilter/TrueFileFilter.TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #21 = Class              #23           // org/apache/commons/io/filefilter/TrueFileFilter\n+   #22 = NameAndType        #24:#25       // TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #23 = Utf8               org/apache/commons/io/filefilter/TrueFileFilter\n+   #24 = Utf8               TRUE\n+   #25 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #26 = Methodref          #27.#28       // org/apache/commons/io/filefilter/FileFilterUtils.makeDirectoryOnly:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #27 = Class              #29           // org/apache/commons/io/filefilter/FileFilterUtils\n+   #28 = NameAndType        #30:#31       // makeDirectoryOnly:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #29 = Utf8               org/apache/commons/io/filefilter/FileFilterUtils\n+   #30 = Utf8               makeDirectoryOnly\n+   #31 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #32 = Methodref          #27.#33       // org/apache/commons/io/filefilter/FileFilterUtils.makeFileOnly:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #33 = NameAndType        #34:#31       // makeFileOnly:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #34 = Utf8               makeFileOnly\n+   #35 = InterfaceMethodref #36.#37       // org/apache/commons/io/filefilter/IOFileFilter.or:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #36 = Class              #38           // org/apache/commons/io/filefilter/IOFileFilter\n+   #37 = NameAndType        #39:#31       // or:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #38 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n+   #39 = Utf8               or\n+   #40 = String             #41           // startDirectory\n+   #41 = Utf8               startDirectory\n+   #42 = Methodref          #43.#44       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #43 = Class              #45           // java/util/Objects\n+   #44 = NameAndType        #46:#47       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #45 = Utf8               java/util/Objects\n+   #46 = Utf8               requireNonNull\n+   #47 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #48 = Methodref          #2.#49        // org/apache/commons/io/DirectoryWalker.handleStart:(Ljava/io/File;Ljava/util/Collection;)V\n+   #49 = NameAndType        #50:#51       // handleStart:(Ljava/io/File;Ljava/util/Collection;)V\n+   #50 = Utf8               handleStart\n+   #51 = Utf8               (Ljava/io/File;Ljava/util/Collection;)V\n+   #52 = Methodref          #2.#53        // org/apache/commons/io/DirectoryWalker.walk:(Ljava/io/File;ILjava/util/Collection;)V\n+   #53 = NameAndType        #54:#55       // walk:(Ljava/io/File;ILjava/util/Collection;)V\n+   #54 = Utf8               walk\n+   #55 = Utf8               (Ljava/io/File;ILjava/util/Collection;)V\n+   #56 = Methodref          #2.#57        // org/apache/commons/io/DirectoryWalker.handleEnd:(Ljava/util/Collection;)V\n+   #57 = NameAndType        #58:#59       // handleEnd:(Ljava/util/Collection;)V\n+   #58 = Utf8               handleEnd\n+   #59 = Utf8               (Ljava/util/Collection;)V\n+   #60 = Class              #61           // org/apache/commons/io/DirectoryWalker$CancelException\n+   #61 = Utf8               org/apache/commons/io/DirectoryWalker$CancelException\n+   #62 = Methodref          #2.#63        // org/apache/commons/io/DirectoryWalker.handleCancelled:(Ljava/io/File;Ljava/util/Collection;Lorg/apache/commons/io/DirectoryWalker$CancelException;)V\n+   #63 = NameAndType        #64:#65       // handleCancelled:(Ljava/io/File;Ljava/util/Collection;Lorg/apache/commons/io/DirectoryWalker$CancelException;)V\n+   #64 = Utf8               handleCancelled\n+   #65 = Utf8               (Ljava/io/File;Ljava/util/Collection;Lorg/apache/commons/io/DirectoryWalker$CancelException;)V\n+   #66 = Methodref          #2.#67        // org/apache/commons/io/DirectoryWalker.checkIfCancelled:(Ljava/io/File;ILjava/util/Collection;)V\n+   #67 = NameAndType        #68:#55       // checkIfCancelled:(Ljava/io/File;ILjava/util/Collection;)V\n+   #68 = Utf8               checkIfCancelled\n+   #69 = Methodref          #2.#70        // org/apache/commons/io/DirectoryWalker.handleDirectory:(Ljava/io/File;ILjava/util/Collection;)Z\n+   #70 = NameAndType        #71:#72       // handleDirectory:(Ljava/io/File;ILjava/util/Collection;)Z\n+   #71 = Utf8               handleDirectory\n+   #72 = Utf8               (Ljava/io/File;ILjava/util/Collection;)Z\n+   #73 = Methodref          #2.#74        // org/apache/commons/io/DirectoryWalker.handleDirectoryStart:(Ljava/io/File;ILjava/util/Collection;)V\n+   #74 = NameAndType        #75:#55       // handleDirectoryStart:(Ljava/io/File;ILjava/util/Collection;)V\n+   #75 = Utf8               handleDirectoryStart\n+   #76 = Methodref          #77.#78       // java/io/File.listFiles:()[Ljava/io/File;\n+   #77 = Class              #79           // java/io/File\n+   #78 = NameAndType        #80:#81       // listFiles:()[Ljava/io/File;\n+   #79 = Utf8               java/io/File\n+   #80 = Utf8               listFiles\n+   #81 = Utf8               ()[Ljava/io/File;\n+   #82 = Methodref          #77.#83       // java/io/File.listFiles:(Ljava/io/FileFilter;)[Ljava/io/File;\n+   #83 = NameAndType        #80:#84       // listFiles:(Ljava/io/FileFilter;)[Ljava/io/File;\n+   #84 = Utf8               (Ljava/io/FileFilter;)[Ljava/io/File;\n+   #85 = Methodref          #2.#86        // org/apache/commons/io/DirectoryWalker.filterDirectoryContents:(Ljava/io/File;I[Ljava/io/File;)[Ljava/io/File;\n+   #86 = NameAndType        #87:#88       // filterDirectoryContents:(Ljava/io/File;I[Ljava/io/File;)[Ljava/io/File;\n    #87 = Utf8               filterDirectoryContents\n    #88 = Utf8               (Ljava/io/File;I[Ljava/io/File;)[Ljava/io/File;\n-   #89 = Utf8               files\n-   #90 = Utf8               handleFile\n+   #89 = Methodref          #2.#90        // org/apache/commons/io/DirectoryWalker.handleRestricted:(Ljava/io/File;ILjava/util/Collection;)V\n+   #90 = NameAndType        #91:#55       // handleRestricted:(Ljava/io/File;ILjava/util/Collection;)V\n    #91 = Utf8               handleRestricted\n-   #92 = Utf8               handleDirectoryEnd\n-   #93 = Utf8               handleEnd\n-   #94 = Utf8               (Ljava/util/Collection;)V\n-   #95 = Utf8               (Ljava/util/Collection<TT;>;)V\n-   #96 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;\n-   #97 = Utf8               SourceFile\n-   #98 = Utf8               DirectoryWalker.java\n-   #99 = Utf8               Deprecated\n-  #100 = Utf8               RuntimeVisibleAnnotations\n-  #101 = Utf8               Ljava/lang/Deprecated;\n-  #102 = NameAndType        #36:#45       // \"<init>\":(Ljava/io/FileFilter;I)V\n-  #103 = NameAndType        #36:#37       // \"<init>\":()V\n-  #104 = NameAndType        #32:#33       // filter:Ljava/io/FileFilter;\n-  #105 = NameAndType        #34:#35       // depthLimit:I\n-  #106 = Class              #137          // org/apache/commons/io/filefilter/TrueFileFilter\n-  #107 = NameAndType        #138:#48      // TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #108 = Class              #139          // org/apache/commons/io/filefilter/FileFilterUtils\n-  #109 = NameAndType        #140:#141     // makeDirectoryOnly:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #110 = NameAndType        #142:#141     // makeFileOnly:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #111 = NameAndType        #143:#141     // or:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #112 = Class              #144          // java/util/Objects\n-  #113 = NameAndType        #145:#146     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #114 = NameAndType        #84:#53       // handleStart:(Ljava/io/File;Ljava/util/Collection;)V\n-  #115 = NameAndType        #52:#65       // walk:(Ljava/io/File;ILjava/util/Collection;)V\n-  #116 = NameAndType        #93:#94       // handleEnd:(Ljava/util/Collection;)V\n-  #117 = Utf8               org/apache/commons/io/DirectoryWalker$CancelException\n-  #118 = NameAndType        #81:#82       // handleCancelled:(Ljava/io/File;Ljava/util/Collection;Lorg/apache/commons/io/DirectoryWalker$CancelException;)V\n-  #119 = NameAndType        #76:#65       // checkIfCancelled:(Ljava/io/File;ILjava/util/Collection;)V\n-  #120 = NameAndType        #85:#79       // handleDirectory:(Ljava/io/File;ILjava/util/Collection;)Z\n-  #121 = NameAndType        #86:#65       // handleDirectoryStart:(Ljava/io/File;ILjava/util/Collection;)V\n-  #122 = NameAndType        #147:#148     // listFiles:()[Ljava/io/File;\n-  #123 = NameAndType        #147:#149     // listFiles:(Ljava/io/FileFilter;)[Ljava/io/File;\n-  #124 = NameAndType        #87:#88       // filterDirectoryContents:(Ljava/io/File;I[Ljava/io/File;)[Ljava/io/File;\n-  #125 = NameAndType        #91:#65       // handleRestricted:(Ljava/io/File;ILjava/util/Collection;)V\n-  #126 = NameAndType        #150:#151     // isDirectory:()Z\n-  #127 = NameAndType        #90:#65       // handleFile:(Ljava/io/File;ILjava/util/Collection;)V\n-  #128 = NameAndType        #92:#65       // handleDirectoryEnd:(Ljava/io/File;ILjava/util/Collection;)V\n-  #129 = NameAndType        #78:#79       // handleIsCancelled:(Ljava/io/File;ILjava/util/Collection;)Z\n-  #130 = NameAndType        #36:#152      // \"<init>\":(Ljava/io/File;I)V\n-  #131 = Utf8               org/apache/commons/io/DirectoryWalker\n-  #132 = Utf8               java/lang/Object\n-  #133 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n-  #134 = Utf8               java/io/IOException\n-  #135 = Utf8               java/io/File\n-  #136 = Utf8               java/util/Collection\n-  #137 = Utf8               org/apache/commons/io/filefilter/TrueFileFilter\n-  #138 = Utf8               TRUE\n-  #139 = Utf8               org/apache/commons/io/filefilter/FileFilterUtils\n-  #140 = Utf8               makeDirectoryOnly\n-  #141 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #142 = Utf8               makeFileOnly\n-  #143 = Utf8               or\n-  #144 = Utf8               java/util/Objects\n-  #145 = Utf8               requireNonNull\n-  #146 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #147 = Utf8               listFiles\n-  #148 = Utf8               ()[Ljava/io/File;\n-  #149 = Utf8               (Ljava/io/FileFilter;)[Ljava/io/File;\n-  #150 = Utf8               isDirectory\n-  #151 = Utf8               ()Z\n-  #152 = Utf8               (Ljava/io/File;I)V\n+   #92 = Methodref          #77.#93       // java/io/File.isDirectory:()Z\n+   #93 = NameAndType        #94:#95       // isDirectory:()Z\n+   #94 = Utf8               isDirectory\n+   #95 = Utf8               ()Z\n+   #96 = Methodref          #2.#97        // org/apache/commons/io/DirectoryWalker.handleFile:(Ljava/io/File;ILjava/util/Collection;)V\n+   #97 = NameAndType        #98:#55       // handleFile:(Ljava/io/File;ILjava/util/Collection;)V\n+   #98 = Utf8               handleFile\n+   #99 = Methodref          #2.#100       // org/apache/commons/io/DirectoryWalker.handleDirectoryEnd:(Ljava/io/File;ILjava/util/Collection;)V\n+  #100 = NameAndType        #101:#55      // handleDirectoryEnd:(Ljava/io/File;ILjava/util/Collection;)V\n+  #101 = Utf8               handleDirectoryEnd\n+  #102 = Methodref          #2.#103       // org/apache/commons/io/DirectoryWalker.handleIsCancelled:(Ljava/io/File;ILjava/util/Collection;)Z\n+  #103 = NameAndType        #104:#72      // handleIsCancelled:(Ljava/io/File;ILjava/util/Collection;)Z\n+  #104 = Utf8               handleIsCancelled\n+  #105 = Methodref          #60.#106      // org/apache/commons/io/DirectoryWalker$CancelException.\"<init>\":(Ljava/io/File;I)V\n+  #106 = NameAndType        #5:#107       // \"<init>\":(Ljava/io/File;I)V\n+  #107 = Utf8               (Ljava/io/File;I)V\n+  #108 = Utf8               Code\n+  #109 = Utf8               LineNumberTable\n+  #110 = Utf8               LocalVariableTable\n+  #111 = Utf8               this\n+  #112 = Utf8               Lorg/apache/commons/io/DirectoryWalker;\n+  #113 = Utf8               LocalVariableTypeTable\n+  #114 = Utf8               Lorg/apache/commons/io/DirectoryWalker<TT;>;\n+  #115 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;I)V\n+  #116 = Utf8               directoryFilter\n+  #117 = Utf8               fileFilter\n+  #118 = Utf8               StackMapTable\n+  #119 = Utf8               cancel\n+  #120 = Utf8               Lorg/apache/commons/io/DirectoryWalker$CancelException;\n+  #121 = Utf8               Ljava/io/File;\n+  #122 = Utf8               results\n+  #123 = Utf8               Ljava/util/Collection;\n+  #124 = Utf8               Ljava/util/Collection<TT;>;\n+  #125 = Utf8               Exceptions\n+  #126 = Class              #127          // java/io/IOException\n+  #127 = Utf8               java/io/IOException\n+  #128 = Utf8               Signature\n+  #129 = Utf8               (Ljava/io/File;Ljava/util/Collection<TT;>;)V\n+  #130 = Utf8               childFile\n+  #131 = Utf8               childFiles\n+  #132 = Utf8               [Ljava/io/File;\n+  #133 = Utf8               childDepth\n+  #134 = Utf8               directory\n+  #135 = Utf8               depth\n+  #136 = Class              #132          // \"[Ljava/io/File;\"\n+  #137 = Class              #138          // java/util/Collection\n+  #138 = Utf8               java/util/Collection\n+  #139 = Utf8               (Ljava/io/File;ILjava/util/Collection<TT;>;)V\n+  #140 = Utf8               file\n+  #141 = Utf8               (Ljava/io/File;ILjava/util/Collection<TT;>;)Z\n+  #142 = Utf8               (Ljava/io/File;Ljava/util/Collection<TT;>;Lorg/apache/commons/io/DirectoryWalker$CancelException;)V\n+  #143 = Utf8               files\n+  #144 = Utf8               (Ljava/util/Collection<TT;>;)V\n+  #145 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;\n+  #146 = Utf8               SourceFile\n+  #147 = Utf8               DirectoryWalker.java\n+  #148 = Utf8               Deprecated\n+  #149 = Utf8               RuntimeVisibleAnnotations\n+  #150 = Utf8               Ljava/lang/Deprecated;\n+  #151 = Utf8               InnerClasses\n+  #152 = Utf8               CancelException\n {\n   private final java.io.FileFilter filter;\n     descriptor: Ljava/io/FileFilter;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final int depthLimit;\n     descriptor: I\n@@ -191,21 +191,21 @@\n \n   protected org.apache.commons.io.DirectoryWalker(java.io.FileFilter, int);\n     descriptor: (Ljava/io/FileFilter;I)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #2                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #7                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #3                  // Field filter:Ljava/io/FileFilter;\n+         6: putfield      #12                 // Field filter:Ljava/io/FileFilter;\n          9: aload_0\n         10: iload_2\n-        11: putfield      #4                  // Field depthLimit:I\n+        11: putfield      #16                 // Field depthLimit:I\n         14: return\n       LineNumberTable:\n         line 286: 0\n         line 287: 4\n         line 288: 9\n         line 289: 14\n       LocalVariableTable:\n@@ -219,49 +219,49 @@\n \n   protected org.apache.commons.io.DirectoryWalker(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter, int);\n     descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;I)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=4, args_size=4\n          0: aload_0\n-         1: invokespecial #2                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #7                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_1\n          5: ifnonnull     20\n          8: aload_2\n          9: ifnonnull     20\n         12: aload_0\n         13: aconst_null\n-        14: putfield      #3                  // Field filter:Ljava/io/FileFilter;\n+        14: putfield      #12                 // Field filter:Ljava/io/FileFilter;\n         17: goto          65\n         20: aload_1\n         21: ifnull        28\n         24: aload_1\n         25: goto          31\n-        28: getstatic     #5                  // Field org/apache/commons/io/filefilter/TrueFileFilter.TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        28: getstatic     #20                 // Field org/apache/commons/io/filefilter/TrueFileFilter.TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n         31: astore_1\n         32: aload_2\n         33: ifnull        40\n         36: aload_2\n         37: goto          43\n-        40: getstatic     #5                  // Field org/apache/commons/io/filefilter/TrueFileFilter.TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        40: getstatic     #20                 // Field org/apache/commons/io/filefilter/TrueFileFilter.TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n         43: astore_2\n         44: aload_1\n-        45: invokestatic  #6                  // Method org/apache/commons/io/filefilter/FileFilterUtils.makeDirectoryOnly:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        45: invokestatic  #26                 // Method org/apache/commons/io/filefilter/FileFilterUtils.makeDirectoryOnly:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n         48: astore_1\n         49: aload_2\n-        50: invokestatic  #7                  // Method org/apache/commons/io/filefilter/FileFilterUtils.makeFileOnly:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        50: invokestatic  #32                 // Method org/apache/commons/io/filefilter/FileFilterUtils.makeFileOnly:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n         53: astore_2\n         54: aload_0\n         55: aload_1\n         56: aload_2\n-        57: invokeinterface #8,  2            // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.or:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-        62: putfield      #3                  // Field filter:Ljava/io/FileFilter;\n+        57: invokeinterface #35,  2           // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.or:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        62: putfield      #12                 // Field filter:Ljava/io/FileFilter;\n         65: aload_0\n         66: iload_3\n-        67: putfield      #4                  // Field depthLimit:I\n+        67: putfield      #16                 // Field depthLimit:I\n         70: return\n       LineNumberTable:\n         line 306: 0\n         line 307: 4\n         line 308: 12\n         line 310: 20\n         line 311: 32\n@@ -294,36 +294,36 @@\n \n   protected final void walk(java.io.File, java.util.Collection<T>) throws java.io.IOException;\n     descriptor: (Ljava/io/File;Ljava/util/Collection;)V\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n     Code:\n       stack=4, locals=4, args_size=3\n          0: aload_1\n-         1: ldc           #9                  // String startDirectory\n-         3: invokestatic  #10                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #40                 // String startDirectory\n+         3: invokestatic  #42                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: aload_0\n          8: aload_1\n          9: aload_2\n-        10: invokevirtual #11                 // Method handleStart:(Ljava/io/File;Ljava/util/Collection;)V\n+        10: invokevirtual #48                 // Method handleStart:(Ljava/io/File;Ljava/util/Collection;)V\n         13: aload_0\n         14: aload_1\n         15: iconst_0\n         16: aload_2\n-        17: invokespecial #12                 // Method walk:(Ljava/io/File;ILjava/util/Collection;)V\n+        17: invokespecial #52                 // Method walk:(Ljava/io/File;ILjava/util/Collection;)V\n         20: aload_0\n         21: aload_2\n-        22: invokevirtual #13                 // Method handleEnd:(Ljava/util/Collection;)V\n+        22: invokevirtual #56                 // Method handleEnd:(Ljava/util/Collection;)V\n         25: goto          36\n         28: astore_3\n         29: aload_0\n         30: aload_1\n         31: aload_2\n         32: aload_3\n-        33: invokevirtual #15                 // Method handleCancelled:(Ljava/io/File;Ljava/util/Collection;Lorg/apache/commons/io/DirectoryWalker$CancelException;)V\n+        33: invokevirtual #62                 // Method handleCancelled:(Ljava/io/File;Ljava/util/Collection;Lorg/apache/commons/io/DirectoryWalker$CancelException;)V\n         36: return\n       Exception table:\n          from    to  target type\n              7    25    28   Class org/apache/commons/io/DirectoryWalker$CancelException\n       LineNumberTable:\n         line 338: 0\n         line 340: 7\n@@ -345,77 +345,77 @@\n             0      37     2 results   Ljava/util/Collection<TT;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 92 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/io/DirectoryWalker$CancelException ]\n         frame_type = 7 /* same */\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #64                          // (Ljava/io/File;Ljava/util/Collection<TT;>;)V\n+    Signature: #129                         // (Ljava/io/File;Ljava/util/Collection<TT;>;)V\n \n   private void walk(java.io.File, int, java.util.Collection<T>) throws java.io.IOException;\n     descriptor: (Ljava/io/File;ILjava/util/Collection;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=10, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: aload_3\n-         4: invokevirtual #16                 // Method checkIfCancelled:(Ljava/io/File;ILjava/util/Collection;)V\n+         4: invokevirtual #66                 // Method checkIfCancelled:(Ljava/io/File;ILjava/util/Collection;)V\n          7: aload_0\n          8: aload_1\n          9: iload_2\n         10: aload_3\n-        11: invokevirtual #17                 // Method handleDirectory:(Ljava/io/File;ILjava/util/Collection;)Z\n+        11: invokevirtual #69                 // Method handleDirectory:(Ljava/io/File;ILjava/util/Collection;)Z\n         14: ifeq          188\n         17: aload_0\n         18: aload_1\n         19: iload_2\n         20: aload_3\n-        21: invokevirtual #18                 // Method handleDirectoryStart:(Ljava/io/File;ILjava/util/Collection;)V\n+        21: invokevirtual #73                 // Method handleDirectoryStart:(Ljava/io/File;ILjava/util/Collection;)V\n         24: iload_2\n         25: iconst_1\n         26: iadd\n         27: istore        4\n         29: aload_0\n-        30: getfield      #4                  // Field depthLimit:I\n+        30: getfield      #16                 // Field depthLimit:I\n         33: iflt          45\n         36: iload         4\n         38: aload_0\n-        39: getfield      #4                  // Field depthLimit:I\n+        39: getfield      #16                 // Field depthLimit:I\n         42: if_icmpgt     181\n         45: aload_0\n         46: aload_1\n         47: iload_2\n         48: aload_3\n-        49: invokevirtual #16                 // Method checkIfCancelled:(Ljava/io/File;ILjava/util/Collection;)V\n+        49: invokevirtual #66                 // Method checkIfCancelled:(Ljava/io/File;ILjava/util/Collection;)V\n         52: aload_0\n-        53: getfield      #3                  // Field filter:Ljava/io/FileFilter;\n+        53: getfield      #12                 // Field filter:Ljava/io/FileFilter;\n         56: ifnonnull     66\n         59: aload_1\n-        60: invokevirtual #19                 // Method java/io/File.listFiles:()[Ljava/io/File;\n+        60: invokevirtual #76                 // Method java/io/File.listFiles:()[Ljava/io/File;\n         63: goto          74\n         66: aload_1\n         67: aload_0\n-        68: getfield      #3                  // Field filter:Ljava/io/FileFilter;\n-        71: invokevirtual #20                 // Method java/io/File.listFiles:(Ljava/io/FileFilter;)[Ljava/io/File;\n+        68: getfield      #12                 // Field filter:Ljava/io/FileFilter;\n+        71: invokevirtual #82                 // Method java/io/File.listFiles:(Ljava/io/FileFilter;)[Ljava/io/File;\n         74: astore        5\n         76: aload_0\n         77: aload_1\n         78: iload_2\n         79: aload         5\n-        81: invokevirtual #21                 // Method filterDirectoryContents:(Ljava/io/File;I[Ljava/io/File;)[Ljava/io/File;\n+        81: invokevirtual #85                 // Method filterDirectoryContents:(Ljava/io/File;I[Ljava/io/File;)[Ljava/io/File;\n         84: astore        5\n         86: aload         5\n         88: ifnonnull     102\n         91: aload_0\n         92: aload_1\n         93: iload         4\n         95: aload_3\n-        96: invokevirtual #22                 // Method handleRestricted:(Ljava/io/File;ILjava/util/Collection;)V\n+        96: invokevirtual #89                 // Method handleRestricted:(Ljava/io/File;ILjava/util/Collection;)V\n         99: goto          181\n        102: aload         5\n        104: astore        6\n        106: aload         6\n        108: arraylength\n        109: istore        7\n        111: iconst_0\n@@ -424,49 +424,49 @@\n        116: iload         7\n        118: if_icmpge     181\n        121: aload         6\n        123: iload         8\n        125: aaload\n        126: astore        9\n        128: aload         9\n-       130: invokevirtual #23                 // Method java/io/File.isDirectory:()Z\n+       130: invokevirtual #92                 // Method java/io/File.isDirectory:()Z\n        133: ifeq          148\n        136: aload_0\n        137: aload         9\n        139: iload         4\n        141: aload_3\n-       142: invokespecial #12                 // Method walk:(Ljava/io/File;ILjava/util/Collection;)V\n+       142: invokespecial #52                 // Method walk:(Ljava/io/File;ILjava/util/Collection;)V\n        145: goto          175\n        148: aload_0\n        149: aload         9\n        151: iload         4\n        153: aload_3\n-       154: invokevirtual #16                 // Method checkIfCancelled:(Ljava/io/File;ILjava/util/Collection;)V\n+       154: invokevirtual #66                 // Method checkIfCancelled:(Ljava/io/File;ILjava/util/Collection;)V\n        157: aload_0\n        158: aload         9\n        160: iload         4\n        162: aload_3\n-       163: invokevirtual #24                 // Method handleFile:(Ljava/io/File;ILjava/util/Collection;)V\n+       163: invokevirtual #96                 // Method handleFile:(Ljava/io/File;ILjava/util/Collection;)V\n        166: aload_0\n        167: aload         9\n        169: iload         4\n        171: aload_3\n-       172: invokevirtual #16                 // Method checkIfCancelled:(Ljava/io/File;ILjava/util/Collection;)V\n+       172: invokevirtual #66                 // Method checkIfCancelled:(Ljava/io/File;ILjava/util/Collection;)V\n        175: iinc          8, 1\n        178: goto          114\n        181: aload_0\n        182: aload_1\n        183: iload_2\n        184: aload_3\n-       185: invokevirtual #25                 // Method handleDirectoryEnd:(Ljava/io/File;ILjava/util/Collection;)V\n+       185: invokevirtual #99                 // Method handleDirectoryEnd:(Ljava/io/File;ILjava/util/Collection;)V\n        188: aload_0\n        189: aload_1\n        190: iload_2\n        191: aload_3\n-       192: invokevirtual #16                 // Method checkIfCancelled:(Ljava/io/File;ILjava/util/Collection;)V\n+       192: invokevirtual #66                 // Method checkIfCancelled:(Ljava/io/File;ILjava/util/Collection;)V\n        195: return\n       LineNumberTable:\n         line 357: 0\n         line 358: 7\n         line 359: 17\n         line 360: 24\n         line 361: 29\n@@ -520,32 +520,32 @@\n           offset_delta = 5\n           locals = [ class org/apache/commons/io/DirectoryWalker, class java/io/File, int, class java/util/Collection, int ]\n           stack = []\n         frame_type = 250 /* chop */\n           offset_delta = 6\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #75                          // (Ljava/io/File;ILjava/util/Collection<TT;>;)V\n+    Signature: #139                         // (Ljava/io/File;ILjava/util/Collection<TT;>;)V\n \n   protected final void checkIfCancelled(java.io.File, int, java.util.Collection<T>) throws java.io.IOException;\n     descriptor: (Ljava/io/File;ILjava/util/Collection;)V\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: aload_3\n-         4: invokevirtual #26                 // Method handleIsCancelled:(Ljava/io/File;ILjava/util/Collection;)Z\n+         4: invokevirtual #102                // Method handleIsCancelled:(Ljava/io/File;ILjava/util/Collection;)Z\n          7: ifeq          20\n-        10: new           #14                 // class org/apache/commons/io/DirectoryWalker$CancelException\n+        10: new           #60                 // class org/apache/commons/io/DirectoryWalker$CancelException\n         13: dup\n         14: aload_1\n         15: iload_2\n-        16: invokespecial #27                 // Method org/apache/commons/io/DirectoryWalker$CancelException.\"<init>\":(Ljava/io/File;I)V\n+        16: invokespecial #105                // Method org/apache/commons/io/DirectoryWalker$CancelException.\"<init>\":(Ljava/io/File;I)V\n         19: athrow\n         20: return\n       LineNumberTable:\n         line 402: 0\n         line 403: 10\n         line 405: 20\n       LocalVariableTable:\n@@ -558,15 +558,15 @@\n         Start  Length  Slot  Name   Signature\n             0      21     0  this   Lorg/apache/commons/io/DirectoryWalker<TT;>;\n             0      21     3 results   Ljava/util/Collection<TT;>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 20 /* same */\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #75                          // (Ljava/io/File;ILjava/util/Collection<TT;>;)V\n+    Signature: #139                         // (Ljava/io/File;ILjava/util/Collection<TT;>;)V\n \n   protected boolean handleIsCancelled(java.io.File, int, java.util.Collection<T>) throws java.io.IOException;\n     descriptor: (Ljava/io/File;ILjava/util/Collection;)Z\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=4, args_size=4\n          0: iconst_0\n@@ -581,15 +581,15 @@\n             0       2     3 results   Ljava/util/Collection;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       2     0  this   Lorg/apache/commons/io/DirectoryWalker<TT;>;\n             0       2     3 results   Ljava/util/Collection<TT;>;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #80                          // (Ljava/io/File;ILjava/util/Collection<TT;>;)Z\n+    Signature: #141                         // (Ljava/io/File;ILjava/util/Collection<TT;>;)Z\n \n   protected void handleCancelled(java.io.File, java.util.Collection<T>, org.apache.commons.io.DirectoryWalker$CancelException) throws java.io.IOException;\n     descriptor: (Ljava/io/File;Ljava/util/Collection;Lorg/apache/commons/io/DirectoryWalker$CancelException;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=4, args_size=4\n          0: aload_3\n@@ -604,15 +604,15 @@\n             0       2     3 cancel   Lorg/apache/commons/io/DirectoryWalker$CancelException;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       2     0  this   Lorg/apache/commons/io/DirectoryWalker<TT;>;\n             0       2     2 results   Ljava/util/Collection<TT;>;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #83                          // (Ljava/io/File;Ljava/util/Collection<TT;>;Lorg/apache/commons/io/DirectoryWalker$CancelException;)V\n+    Signature: #142                         // (Ljava/io/File;Ljava/util/Collection<TT;>;Lorg/apache/commons/io/DirectoryWalker$CancelException;)V\n \n   protected void handleStart(java.io.File, java.util.Collection<T>) throws java.io.IOException;\n     descriptor: (Ljava/io/File;Ljava/util/Collection;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=0, locals=3, args_size=3\n          0: return\n@@ -625,15 +625,15 @@\n             0       1     2 results   Ljava/util/Collection;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/DirectoryWalker<TT;>;\n             0       1     2 results   Ljava/util/Collection<TT;>;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #64                          // (Ljava/io/File;Ljava/util/Collection<TT;>;)V\n+    Signature: #129                         // (Ljava/io/File;Ljava/util/Collection<TT;>;)V\n \n   protected boolean handleDirectory(java.io.File, int, java.util.Collection<T>) throws java.io.IOException;\n     descriptor: (Ljava/io/File;ILjava/util/Collection;)Z\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=4, args_size=4\n          0: iconst_1\n@@ -648,15 +648,15 @@\n             0       2     3 results   Ljava/util/Collection;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       2     0  this   Lorg/apache/commons/io/DirectoryWalker<TT;>;\n             0       2     3 results   Ljava/util/Collection<TT;>;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #80                          // (Ljava/io/File;ILjava/util/Collection<TT;>;)Z\n+    Signature: #141                         // (Ljava/io/File;ILjava/util/Collection<TT;>;)Z\n \n   protected void handleDirectoryStart(java.io.File, int, java.util.Collection<T>) throws java.io.IOException;\n     descriptor: (Ljava/io/File;ILjava/util/Collection;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=0, locals=4, args_size=4\n          0: return\n@@ -670,15 +670,15 @@\n             0       1     3 results   Ljava/util/Collection;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/DirectoryWalker<TT;>;\n             0       1     3 results   Ljava/util/Collection<TT;>;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #75                          // (Ljava/io/File;ILjava/util/Collection<TT;>;)V\n+    Signature: #139                         // (Ljava/io/File;ILjava/util/Collection<TT;>;)V\n \n   protected java.io.File[] filterDirectoryContents(java.io.File, int, java.io.File...) throws java.io.IOException;\n     descriptor: (Ljava/io/File;I[Ljava/io/File;)[Ljava/io/File;\n     flags: (0x0084) ACC_PROTECTED, ACC_VARARGS\n     Code:\n       stack=1, locals=4, args_size=4\n          0: aload_3\n@@ -713,15 +713,15 @@\n             0       1     3 results   Ljava/util/Collection;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/DirectoryWalker<TT;>;\n             0       1     3 results   Ljava/util/Collection<TT;>;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #75                          // (Ljava/io/File;ILjava/util/Collection<TT;>;)V\n+    Signature: #139                         // (Ljava/io/File;ILjava/util/Collection<TT;>;)V\n \n   protected void handleRestricted(java.io.File, int, java.util.Collection<T>) throws java.io.IOException;\n     descriptor: (Ljava/io/File;ILjava/util/Collection;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=0, locals=4, args_size=4\n          0: return\n@@ -735,15 +735,15 @@\n             0       1     3 results   Ljava/util/Collection;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/DirectoryWalker<TT;>;\n             0       1     3 results   Ljava/util/Collection<TT;>;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #75                          // (Ljava/io/File;ILjava/util/Collection<TT;>;)V\n+    Signature: #139                         // (Ljava/io/File;ILjava/util/Collection<TT;>;)V\n \n   protected void handleDirectoryEnd(java.io.File, int, java.util.Collection<T>) throws java.io.IOException;\n     descriptor: (Ljava/io/File;ILjava/util/Collection;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=0, locals=4, args_size=4\n          0: return\n@@ -757,15 +757,15 @@\n             0       1     3 results   Ljava/util/Collection;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/DirectoryWalker<TT;>;\n             0       1     3 results   Ljava/util/Collection<TT;>;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #75                          // (Ljava/io/File;ILjava/util/Collection<TT;>;)V\n+    Signature: #139                         // (Ljava/io/File;ILjava/util/Collection<TT;>;)V\n \n   protected void handleEnd(java.util.Collection<T>) throws java.io.IOException;\n     descriptor: (Ljava/util/Collection;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=0, locals=2, args_size=2\n          0: return\n@@ -777,17 +777,17 @@\n             0       1     1 results   Ljava/util/Collection;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/DirectoryWalker<TT;>;\n             0       1     1 results   Ljava/util/Collection<TT;>;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #95                          // (Ljava/util/Collection<TT;>;)V\n+    Signature: #144                         // (Ljava/util/Collection<TT;>;)V\n }\n-Signature: #96                          // <T:Ljava/lang/Object;>Ljava/lang/Object;\n+Signature: #145                         // <T:Ljava/lang/Object;>Ljava/lang/Object;\n SourceFile: \"DirectoryWalker.java\"\n Deprecated: true\n RuntimeVisibleAnnotations:\n-  0: #101()\n+  0: #150()\n     java.lang.Deprecated\n InnerClasses:\n-  public static #30= #14 of #28;          // CancelException=class org/apache/commons/io/DirectoryWalker$CancelException of class org/apache/commons/io/DirectoryWalker\n+  public static #152= #60 of #2;          // CancelException=class org/apache/commons/io/DirectoryWalker$CancelException of class org/apache/commons/io/DirectoryWalker\n"}]}
