{"diffoscope-json-version": 1, "source1": "first/TriFunction.class", "source2": "second/TriFunction.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,145 +1,145 @@\n-  SHA-256 checksum 214c0b470b3cbabb6b17d3168b7c46a8ab1d8640e1b22a29070c218903a0bd3f\n+  SHA-256 checksum 8c7750fd328b5adc84f5bf6a31cbd65561e8dfd48a42d4a4d0b5443041fd0b76\n   Compiled from \"TriFunction.java\"\n public interface org.apache.commons.lang3.function.TriFunction<T extends java.lang.Object, U extends java.lang.Object, V extends java.lang.Object, R extends java.lang.Object>\n   minor version: 0\n   major version: 52\n   flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT\n-  this_class: #5                          // org/apache/commons/lang3/function/TriFunction\n-  super_class: #6                         // java/lang/Object\n+  this_class: #12                         // org/apache/commons/lang3/function/TriFunction\n+  super_class: #20                        // java/lang/Object\n   interfaces: 0, fields: 0, methods: 3, attributes: 5\n Constant pool:\n-   #1 = Methodref          #35.#36        // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #2 = InvokeDynamic      #0:#41         // #0:apply:(Lorg/apache/commons/lang3/function/TriFunction;Ljava/util/function/Function;)Lorg/apache/commons/lang3/function/TriFunction;\n-   #3 = InterfaceMethodref #5.#42         // org/apache/commons/lang3/function/TriFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #4 = InterfaceMethodref #43.#44        // java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #5 = Class              #45            // org/apache/commons/lang3/function/TriFunction\n-   #6 = Class              #46            // java/lang/Object\n-   #7 = Utf8               apply\n-   #8 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #9 = Utf8               Signature\n-  #10 = Utf8               (TT;TU;TV;)TR;\n-  #11 = Utf8               andThen\n-  #12 = Utf8               (Ljava/util/function/Function;)Lorg/apache/commons/lang3/function/TriFunction;\n-  #13 = Utf8               Code\n-  #14 = Utf8               LineNumberTable\n-  #15 = Utf8               LocalVariableTable\n-  #16 = Utf8               this\n-  #17 = Utf8               Lorg/apache/commons/lang3/function/TriFunction;\n-  #18 = Utf8               after\n-  #19 = Utf8               Ljava/util/function/Function;\n-  #20 = Utf8               LocalVariableTypeTable\n-  #21 = Utf8               Lorg/apache/commons/lang3/function/TriFunction<TT;TU;TV;TR;>;\n-  #22 = Utf8               Ljava/util/function/Function<-TR;+TW;>;\n-  #23 = Utf8               <W:Ljava/lang/Object;>(Ljava/util/function/Function<-TR;+TW;>;)Lorg/apache/commons/lang3/function/TriFunction<TT;TU;TV;TW;>;\n-  #24 = Utf8               lambda$andThen$0\n-  #25 = Utf8               (Ljava/util/function/Function;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #26 = Utf8               t\n-  #27 = Utf8               Ljava/lang/Object;\n-  #28 = Utf8               u\n-  #29 = Utf8               v\n-  #30 = Utf8               <T:Ljava/lang/Object;U:Ljava/lang/Object;V:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/lang/Object;\n-  #31 = Utf8               SourceFile\n-  #32 = Utf8               TriFunction.java\n-  #33 = Utf8               RuntimeVisibleAnnotations\n-  #34 = Utf8               Ljava/lang/FunctionalInterface;\n-  #35 = Class              #47            // java/util/Objects\n-  #36 = NameAndType        #48:#49        // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #37 = Utf8               BootstrapMethods\n-  #38 = MethodHandle       6:#50          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #39 = MethodType         #8             //  (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #40 = MethodHandle       7:#51          // REF_invokeSpecial org/apache/commons/lang3/function/TriFunction.lambda$andThen$0:(Ljava/util/function/Function;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #41 = NameAndType        #7:#52         // apply:(Lorg/apache/commons/lang3/function/TriFunction;Ljava/util/function/Function;)Lorg/apache/commons/lang3/function/TriFunction;\n-  #42 = NameAndType        #7:#8          // apply:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #43 = Class              #53            // java/util/function/Function\n-  #44 = NameAndType        #7:#49         // apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #45 = Utf8               org/apache/commons/lang3/function/TriFunction\n-  #46 = Utf8               java/lang/Object\n-  #47 = Utf8               java/util/Objects\n-  #48 = Utf8               requireNonNull\n-  #49 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #50 = Methodref          #54.#55        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #51 = InterfaceMethodref #5.#56         // org/apache/commons/lang3/function/TriFunction.lambda$andThen$0:(Ljava/util/function/Function;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #52 = Utf8               (Lorg/apache/commons/lang3/function/TriFunction;Ljava/util/function/Function;)Lorg/apache/commons/lang3/function/TriFunction;\n-  #53 = Utf8               java/util/function/Function\n-  #54 = Class              #57            // java/lang/invoke/LambdaMetafactory\n-  #55 = NameAndType        #58:#62        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #56 = NameAndType        #24:#25        // lambda$andThen$0:(Ljava/util/function/Function;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #57 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #58 = Utf8               metafactory\n-  #59 = Class              #64            // java/lang/invoke/MethodHandles$Lookup\n-  #60 = Utf8               Lookup\n-  #61 = Utf8               InnerClasses\n-  #62 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #63 = Class              #65            // java/lang/invoke/MethodHandles\n-  #64 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #65 = Utf8               java/lang/invoke/MethodHandles\n+   #1 = Methodref          #2.#3          // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #2 = Class              #4             // java/util/Objects\n+   #3 = NameAndType        #5:#6          // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #4 = Utf8               java/util/Objects\n+   #5 = Utf8               requireNonNull\n+   #6 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #7 = InvokeDynamic      #0:#8          // #0:apply:(Lorg/apache/commons/lang3/function/TriFunction;Ljava/util/function/Function;)Lorg/apache/commons/lang3/function/TriFunction;\n+   #8 = NameAndType        #9:#10         // apply:(Lorg/apache/commons/lang3/function/TriFunction;Ljava/util/function/Function;)Lorg/apache/commons/lang3/function/TriFunction;\n+   #9 = Utf8               apply\n+  #10 = Utf8               (Lorg/apache/commons/lang3/function/TriFunction;Ljava/util/function/Function;)Lorg/apache/commons/lang3/function/TriFunction;\n+  #11 = InterfaceMethodref #12.#13        // org/apache/commons/lang3/function/TriFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #12 = Class              #14            // org/apache/commons/lang3/function/TriFunction\n+  #13 = NameAndType        #9:#15         // apply:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #14 = Utf8               org/apache/commons/lang3/function/TriFunction\n+  #15 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #16 = InterfaceMethodref #17.#18        // java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #17 = Class              #19            // java/util/function/Function\n+  #18 = NameAndType        #9:#6          // apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #19 = Utf8               java/util/function/Function\n+  #20 = Class              #21            // java/lang/Object\n+  #21 = Utf8               java/lang/Object\n+  #22 = Utf8               Signature\n+  #23 = Utf8               (TT;TU;TV;)TR;\n+  #24 = Utf8               andThen\n+  #25 = Utf8               (Ljava/util/function/Function;)Lorg/apache/commons/lang3/function/TriFunction;\n+  #26 = Utf8               Code\n+  #27 = Utf8               LineNumberTable\n+  #28 = Utf8               LocalVariableTable\n+  #29 = Utf8               this\n+  #30 = Utf8               Lorg/apache/commons/lang3/function/TriFunction;\n+  #31 = Utf8               after\n+  #32 = Utf8               Ljava/util/function/Function;\n+  #33 = Utf8               LocalVariableTypeTable\n+  #34 = Utf8               Lorg/apache/commons/lang3/function/TriFunction<TT;TU;TV;TR;>;\n+  #35 = Utf8               Ljava/util/function/Function<-TR;+TW;>;\n+  #36 = Utf8               <W:Ljava/lang/Object;>(Ljava/util/function/Function<-TR;+TW;>;)Lorg/apache/commons/lang3/function/TriFunction<TT;TU;TV;TW;>;\n+  #37 = Utf8               lambda$andThen$0\n+  #38 = Utf8               (Ljava/util/function/Function;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #39 = Utf8               t\n+  #40 = Utf8               Ljava/lang/Object;\n+  #41 = Utf8               u\n+  #42 = Utf8               v\n+  #43 = Utf8               <T:Ljava/lang/Object;U:Ljava/lang/Object;V:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/lang/Object;\n+  #44 = Utf8               SourceFile\n+  #45 = Utf8               TriFunction.java\n+  #46 = Utf8               RuntimeVisibleAnnotations\n+  #47 = Utf8               Ljava/lang/FunctionalInterface;\n+  #48 = Utf8               BootstrapMethods\n+  #49 = MethodHandle       6:#50          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #50 = Methodref          #51.#52        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #51 = Class              #53            // java/lang/invoke/LambdaMetafactory\n+  #52 = NameAndType        #54:#55        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #53 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #54 = Utf8               metafactory\n+  #55 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #56 = MethodType         #15            //  (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #57 = MethodHandle       7:#58          // REF_invokeSpecial org/apache/commons/lang3/function/TriFunction.lambda$andThen$0:(Ljava/util/function/Function;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #58 = InterfaceMethodref #12.#59        // org/apache/commons/lang3/function/TriFunction.lambda$andThen$0:(Ljava/util/function/Function;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #59 = NameAndType        #37:#38        // lambda$andThen$0:(Ljava/util/function/Function;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #60 = Utf8               InnerClasses\n+  #61 = Class              #62            // java/lang/invoke/MethodHandles$Lookup\n+  #62 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #63 = Class              #64            // java/lang/invoke/MethodHandles\n+  #64 = Utf8               java/lang/invoke/MethodHandles\n+  #65 = Utf8               Lookup\n {\n   public abstract R apply(T, U, V);\n     descriptor: (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n-    Signature: #10                          // (TT;TU;TV;)TR;\n+    Signature: #23                          // (TT;TU;TV;)TR;\n \n   public default <W extends java.lang.Object> org.apache.commons.lang3.function.TriFunction<T, U, V, W> andThen(java.util.function.Function<? super R, ? extends W>);\n     descriptor: (Ljava/util/function/Function;)Lorg/apache/commons/lang3/function/TriFunction;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: invokestatic  #1                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          4: pop\n          5: aload_0\n          6: aload_1\n-         7: invokedynamic #2,  0              // InvokeDynamic #0:apply:(Lorg/apache/commons/lang3/function/TriFunction;Ljava/util/function/Function;)Lorg/apache/commons/lang3/function/TriFunction;\n+         7: invokedynamic #7,  0              // InvokeDynamic #0:apply:(Lorg/apache/commons/lang3/function/TriFunction;Ljava/util/function/Function;)Lorg/apache/commons/lang3/function/TriFunction;\n         12: areturn\n       LineNumberTable:\n         line 63: 0\n         line 64: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/lang3/function/TriFunction;\n             0      13     1 after   Ljava/util/function/Function;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/lang3/function/TriFunction<TT;TU;TV;TR;>;\n             0      13     1 after   Ljava/util/function/Function<-TR;+TW;>;\n-    Signature: #23                          // <W:Ljava/lang/Object;>(Ljava/util/function/Function<-TR;+TW;>;)Lorg/apache/commons/lang3/function/TriFunction<TT;TU;TV;TW;>;\n+    Signature: #36                          // <W:Ljava/lang/Object;>(Ljava/util/function/Function<-TR;+TW;>;)Lorg/apache/commons/lang3/function/TriFunction<TT;TU;TV;TW;>;\n \n   private java.lang.Object lambda$andThen$0(java.util.function.Function, java.lang.Object, java.lang.Object, java.lang.Object);\n     descriptor: (Ljava/util/function/Function;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=5, locals=5, args_size=5\n          0: aload_1\n          1: aload_0\n          2: aload_2\n          3: aload_3\n          4: aload         4\n-         6: invokeinterface #3,  4            // InterfaceMethod apply:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-        11: invokeinterface #4,  2            // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+         6: invokeinterface #11,  4           // InterfaceMethod apply:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+        11: invokeinterface #16,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n         16: areturn\n       LineNumberTable:\n         line 64: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lorg/apache/commons/lang3/function/TriFunction;\n             0      17     1 after   Ljava/util/function/Function;\n             0      17     2     t   Ljava/lang/Object;\n             0      17     3     u   Ljava/lang/Object;\n             0      17     4     v   Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lorg/apache/commons/lang3/function/TriFunction<TT;TU;TV;TR;>;\n }\n-Signature: #30                          // <T:Ljava/lang/Object;U:Ljava/lang/Object;V:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/lang/Object;\n+Signature: #43                          // <T:Ljava/lang/Object;U:Ljava/lang/Object;V:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/lang/Object;\n SourceFile: \"TriFunction.java\"\n RuntimeVisibleAnnotations:\n-  0: #34()\n+  0: #47()\n     java.lang.FunctionalInterface\n-InnerClasses:\n-  public static final #60= #59 of #63;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #38 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #49 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #39 (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-      #40 REF_invokeSpecial org/apache/commons/lang3/function/TriFunction.lambda$andThen$0:(Ljava/util/function/Function;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-      #39 (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+      #56 (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+      #57 REF_invokeSpecial org/apache/commons/lang3/function/TriFunction.lambda$andThen$0:(Ljava/util/function/Function;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+      #56 (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+InnerClasses:\n+  public static final #65= #61 of #63;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
