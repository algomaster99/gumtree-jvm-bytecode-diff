{"diffoscope-json-version": 1, "source1": "first/FTPSSocketFactory.class", "source2": "second/FTPSSocketFactory.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -15,52 +15,52 @@\n     private final SSLContext context;\n     \n     public FTPSSocketFactory(final SSLContext context) {\n         this.context = context;\n     }\n     \n     @Deprecated\n-    public ServerSocket createServerSocket(final int port) throws IOException {\n-        return this.init(this.context.getServerSocketFactory().createServerSocket(port));\n+    public ServerSocket createServerSocket(final int n) throws IOException {\n+        return this.init(this.context.getServerSocketFactory().createServerSocket(n));\n     }\n     \n     @Deprecated\n-    public ServerSocket createServerSocket(final int port, final int backlog) throws IOException {\n-        return this.init(this.context.getServerSocketFactory().createServerSocket(port, backlog));\n+    public ServerSocket createServerSocket(final int n, final int n2) throws IOException {\n+        return this.init(this.context.getServerSocketFactory().createServerSocket(n, n2));\n     }\n     \n     @Deprecated\n-    public ServerSocket createServerSocket(final int port, final int backlog, final InetAddress ifAddress) throws IOException {\n-        return this.init(this.context.getServerSocketFactory().createServerSocket(port, backlog, ifAddress));\n+    public ServerSocket createServerSocket(final int n, final int n2, final InetAddress inetAddress) throws IOException {\n+        return this.init(this.context.getServerSocketFactory().createServerSocket(n, n2, inetAddress));\n     }\n     \n     @Override\n     public Socket createSocket() throws IOException {\n         return this.context.getSocketFactory().createSocket();\n     }\n     \n     @Override\n-    public Socket createSocket(final InetAddress address, final int port) throws IOException {\n-        return this.context.getSocketFactory().createSocket(address, port);\n+    public Socket createSocket(final InetAddress inetAddress, final int n) throws IOException {\n+        return this.context.getSocketFactory().createSocket(inetAddress, n);\n     }\n     \n     @Override\n-    public Socket createSocket(final InetAddress address, final int port, final InetAddress localAddress, final int localPort) throws IOException {\n-        return this.context.getSocketFactory().createSocket(address, port, localAddress, localPort);\n+    public Socket createSocket(final InetAddress inetAddress, final int n, final InetAddress inetAddress2, final int n2) throws IOException {\n+        return this.context.getSocketFactory().createSocket(inetAddress, n, inetAddress2, n2);\n     }\n     \n     @Override\n-    public Socket createSocket(final String address, final int port) throws UnknownHostException, IOException {\n-        return this.context.getSocketFactory().createSocket(address, port);\n+    public Socket createSocket(final String s, final int n) throws UnknownHostException, IOException {\n+        return this.context.getSocketFactory().createSocket(s, n);\n     }\n     \n     @Override\n-    public Socket createSocket(final String address, final int port, final InetAddress localAddress, final int localPort) throws UnknownHostException, IOException {\n-        return this.context.getSocketFactory().createSocket(address, port, localAddress, localPort);\n+    public Socket createSocket(final String s, final int n, final InetAddress inetAddress, final int n2) throws UnknownHostException, IOException {\n+        return this.context.getSocketFactory().createSocket(s, n, inetAddress, n2);\n     }\n     \n     @Deprecated\n-    public ServerSocket init(final ServerSocket socket) throws IOException {\n-        ((SSLServerSocket)socket).setUseClientMode(true);\n-        return socket;\n+    public ServerSocket init(final ServerSocket serverSocket) throws IOException {\n+        ((SSLServerSocket)serverSocket).setUseClientMode(true);\n+        return serverSocket;\n     }\n }\n"}]}
