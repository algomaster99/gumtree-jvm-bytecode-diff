{"diffoscope-json-version": 1, "source1": "first/StringBuilderWriter.class", "source2": "second/StringBuilderWriter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,101 +1,101 @@\n-  SHA-256 checksum ed76c7986d2158620ef413d560620689342a991a66fedc9631ce23ff9e68387f\n+  SHA-256 checksum 341a157c03ea6f43a9476bc587e3240b964de6870febda71ecee983a9b5c0809\n   Compiled from \"StringBuilderWriter.java\"\n public class org.apache.commons.io.output.StringBuilderWriter extends java.io.Writer implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #11                         // org/apache/commons/io/output/StringBuilderWriter\n-  super_class: #2                         // java/io/Writer\n+  this_class: #1                          // org/apache/commons/io/output/StringBuilderWriter\n+  super_class: #3                         // java/io/Writer\n   interfaces: 1, fields: 2, methods: 15, attributes: 1\n Constant pool:\n-   #1 = Methodref          #2.#3          // java/io/Writer.\"<init>\":()V\n-   #2 = Class              #4             // java/io/Writer\n-   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #1 = Class              #2             // org/apache/commons/io/output/StringBuilderWriter\n+   #2 = Utf8               org/apache/commons/io/output/StringBuilderWriter\n+   #3 = Class              #4             // java/io/Writer\n    #4 = Utf8               java/io/Writer\n-   #5 = Utf8               <init>\n-   #6 = Utf8               ()V\n-   #7 = Class              #8             // java/lang/StringBuilder\n-   #8 = Utf8               java/lang/StringBuilder\n-   #9 = Methodref          #7.#3          // java/lang/StringBuilder.\"<init>\":()V\n-  #10 = Fieldref           #11.#12        // org/apache/commons/io/output/StringBuilderWriter.builder:Ljava/lang/StringBuilder;\n-  #11 = Class              #13            // org/apache/commons/io/output/StringBuilderWriter\n-  #12 = NameAndType        #14:#15        // builder:Ljava/lang/StringBuilder;\n-  #13 = Utf8               org/apache/commons/io/output/StringBuilderWriter\n-  #14 = Utf8               builder\n-  #15 = Utf8               Ljava/lang/StringBuilder;\n-  #16 = Methodref          #7.#17         // java/lang/StringBuilder.\"<init>\":(I)V\n-  #17 = NameAndType        #5:#18         // \"<init>\":(I)V\n-  #18 = Utf8               (I)V\n-  #19 = Methodref          #7.#20         // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-  #20 = NameAndType        #21:#22        // append:(C)Ljava/lang/StringBuilder;\n-  #21 = Utf8               append\n-  #22 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #23 = Methodref          #7.#24         // java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n-  #24 = NameAndType        #21:#25        // append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n-  #25 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n-  #26 = Methodref          #7.#27         // java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n-  #27 = NameAndType        #21:#28        // append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n-  #28 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n-  #29 = Methodref          #7.#30         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #30 = NameAndType        #21:#31        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #31 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #32 = Methodref          #7.#33         // java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;\n-  #33 = NameAndType        #21:#34        // append:([CII)Ljava/lang/StringBuilder;\n-  #34 = Utf8               ([CII)Ljava/lang/StringBuilder;\n-  #35 = Methodref          #7.#36         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #36 = NameAndType        #37:#38        // toString:()Ljava/lang/String;\n-  #37 = Utf8               toString\n-  #38 = Utf8               ()Ljava/lang/String;\n-  #39 = Methodref          #11.#40        // org/apache/commons/io/output/StringBuilderWriter.append:(C)Ljava/io/Writer;\n-  #40 = NameAndType        #21:#41        // append:(C)Ljava/io/Writer;\n-  #41 = Utf8               (C)Ljava/io/Writer;\n-  #42 = Methodref          #11.#43        // org/apache/commons/io/output/StringBuilderWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-  #43 = NameAndType        #21:#44        // append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-  #44 = Utf8               (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-  #45 = Methodref          #11.#46        // org/apache/commons/io/output/StringBuilderWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-  #46 = NameAndType        #21:#47        // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-  #47 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;\n-  #48 = Class              #49            // java/io/Serializable\n-  #49 = Utf8               java/io/Serializable\n-  #50 = Utf8               serialVersionUID\n-  #51 = Utf8               J\n-  #52 = Utf8               ConstantValue\n-  #53 = Long               -146927496096066153l\n-  #55 = Utf8               Code\n-  #56 = Utf8               LineNumberTable\n-  #57 = Utf8               LocalVariableTable\n-  #58 = Utf8               this\n-  #59 = Utf8               Lorg/apache/commons/io/output/StringBuilderWriter;\n-  #60 = Utf8               capacity\n-  #61 = Utf8               I\n-  #62 = Utf8               (Ljava/lang/StringBuilder;)V\n-  #63 = Utf8               StackMapTable\n-  #64 = Utf8               value\n-  #65 = Utf8               C\n-  #66 = Utf8               Ljava/lang/CharSequence;\n-  #67 = Utf8               start\n-  #68 = Utf8               end\n-  #69 = Utf8               close\n-  #70 = Utf8               flush\n-  #71 = Utf8               write\n-  #72 = Utf8               (Ljava/lang/String;)V\n-  #73 = Utf8               Ljava/lang/String;\n-  #74 = Utf8               ([CII)V\n-  #75 = Utf8               [C\n-  #76 = Utf8               offset\n-  #77 = Utf8               length\n-  #78 = Utf8               getBuilder\n-  #79 = Utf8               ()Ljava/lang/StringBuilder;\n-  #80 = Utf8               (C)Ljava/lang/Appendable;\n-  #81 = Utf8               Exceptions\n-  #82 = Class              #83            // java/io/IOException\n-  #83 = Utf8               java/io/IOException\n-  #84 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-  #85 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+   #5 = Class              #6             // java/io/Serializable\n+   #6 = Utf8               java/io/Serializable\n+   #7 = Utf8               serialVersionUID\n+   #8 = Utf8               J\n+   #9 = Utf8               ConstantValue\n+  #10 = Long               -146927496096066153l\n+  #12 = Utf8               builder\n+  #13 = Utf8               Ljava/lang/StringBuilder;\n+  #14 = Utf8               <init>\n+  #15 = Utf8               ()V\n+  #16 = Utf8               Code\n+  #17 = Methodref          #3.#18         // java/io/Writer.\"<init>\":()V\n+  #18 = NameAndType        #14:#15        // \"<init>\":()V\n+  #19 = Class              #20            // java/lang/StringBuilder\n+  #20 = Utf8               java/lang/StringBuilder\n+  #21 = Methodref          #19.#18        // java/lang/StringBuilder.\"<init>\":()V\n+  #22 = Fieldref           #1.#23         // org/apache/commons/io/output/StringBuilderWriter.builder:Ljava/lang/StringBuilder;\n+  #23 = NameAndType        #12:#13        // builder:Ljava/lang/StringBuilder;\n+  #24 = Utf8               LineNumberTable\n+  #25 = Utf8               LocalVariableTable\n+  #26 = Utf8               this\n+  #27 = Utf8               Lorg/apache/commons/io/output/StringBuilderWriter;\n+  #28 = Utf8               (I)V\n+  #29 = Methodref          #19.#30        // java/lang/StringBuilder.\"<init>\":(I)V\n+  #30 = NameAndType        #14:#28        // \"<init>\":(I)V\n+  #31 = Utf8               capacity\n+  #32 = Utf8               I\n+  #33 = Utf8               (Ljava/lang/StringBuilder;)V\n+  #34 = Utf8               StackMapTable\n+  #35 = Utf8               append\n+  #36 = Utf8               (C)Ljava/io/Writer;\n+  #37 = Methodref          #19.#38        // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+  #38 = NameAndType        #35:#39        // append:(C)Ljava/lang/StringBuilder;\n+  #39 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #40 = Utf8               value\n+  #41 = Utf8               C\n+  #42 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;\n+  #43 = Methodref          #19.#44        // java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n+  #44 = NameAndType        #35:#45        // append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n+  #45 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n+  #46 = Utf8               Ljava/lang/CharSequence;\n+  #47 = Utf8               (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+  #48 = Methodref          #19.#49        // java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n+  #49 = NameAndType        #35:#50        // append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n+  #50 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n+  #51 = Utf8               start\n+  #52 = Utf8               end\n+  #53 = Utf8               close\n+  #54 = Utf8               flush\n+  #55 = Utf8               write\n+  #56 = Utf8               (Ljava/lang/String;)V\n+  #57 = Methodref          #19.#58        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #58 = NameAndType        #35:#59        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #59 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #60 = Utf8               Ljava/lang/String;\n+  #61 = Utf8               ([CII)V\n+  #62 = Methodref          #19.#63        // java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;\n+  #63 = NameAndType        #35:#64        // append:([CII)Ljava/lang/StringBuilder;\n+  #64 = Utf8               ([CII)Ljava/lang/StringBuilder;\n+  #65 = Utf8               [C\n+  #66 = Utf8               offset\n+  #67 = Utf8               length\n+  #68 = Utf8               getBuilder\n+  #69 = Utf8               ()Ljava/lang/StringBuilder;\n+  #70 = Utf8               toString\n+  #71 = Utf8               ()Ljava/lang/String;\n+  #72 = Methodref          #19.#73        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #73 = NameAndType        #70:#71        // toString:()Ljava/lang/String;\n+  #74 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+  #75 = Utf8               Exceptions\n+  #76 = Class              #77            // java/io/IOException\n+  #77 = Utf8               java/io/IOException\n+  #78 = Methodref          #1.#79         // org/apache/commons/io/output/StringBuilderWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+  #79 = NameAndType        #35:#47        // append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+  #80 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+  #81 = Methodref          #1.#82         // org/apache/commons/io/output/StringBuilderWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+  #82 = NameAndType        #35:#42        // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+  #83 = Utf8               (C)Ljava/lang/Appendable;\n+  #84 = Methodref          #1.#85         // org/apache/commons/io/output/StringBuilderWriter.append:(C)Ljava/io/Writer;\n+  #85 = NameAndType        #35:#36        // append:(C)Ljava/io/Writer;\n   #86 = Utf8               SourceFile\n   #87 = Utf8               StringBuilderWriter.java\n {\n   private static final long serialVersionUID = -146927496096066153l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long -146927496096066153l\n@@ -106,20 +106,20 @@\n \n   public org.apache.commons.io.output.StringBuilderWriter();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method java/io/Writer.\"<init>\":()V\n+         1: invokespecial #17                 // Method java/io/Writer.\"<init>\":()V\n          4: aload_0\n-         5: new           #7                  // class java/lang/StringBuilder\n+         5: new           #19                 // class java/lang/StringBuilder\n          8: dup\n-         9: invokespecial #9                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        12: putfield      #10                 // Field builder:Ljava/lang/StringBuilder;\n+         9: invokespecial #21                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        12: putfield      #22                 // Field builder:Ljava/lang/StringBuilder;\n         15: return\n       LineNumberTable:\n         line 41: 0\n         line 42: 4\n         line 43: 15\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -127,21 +127,21 @@\n \n   public org.apache.commons.io.output.StringBuilderWriter(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method java/io/Writer.\"<init>\":()V\n+         1: invokespecial #17                 // Method java/io/Writer.\"<init>\":()V\n          4: aload_0\n-         5: new           #7                  // class java/lang/StringBuilder\n+         5: new           #19                 // class java/lang/StringBuilder\n          8: dup\n          9: iload_1\n-        10: invokespecial #16                 // Method java/lang/StringBuilder.\"<init>\":(I)V\n-        13: putfield      #10                 // Field builder:Ljava/lang/StringBuilder;\n+        10: invokespecial #29                 // Method java/lang/StringBuilder.\"<init>\":(I)V\n+        13: putfield      #22                 // Field builder:Ljava/lang/StringBuilder;\n         16: return\n       LineNumberTable:\n         line 50: 0\n         line 51: 4\n         line 52: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -150,24 +150,24 @@\n \n   public org.apache.commons.io.output.StringBuilderWriter(java.lang.StringBuilder);\n     descriptor: (Ljava/lang/StringBuilder;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method java/io/Writer.\"<init>\":()V\n+         1: invokespecial #17                 // Method java/io/Writer.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n          6: ifnull        13\n          9: aload_1\n         10: goto          20\n-        13: new           #7                  // class java/lang/StringBuilder\n+        13: new           #19                 // class java/lang/StringBuilder\n         16: dup\n-        17: invokespecial #9                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        20: putfield      #10                 // Field builder:Ljava/lang/StringBuilder;\n+        17: invokespecial #21                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        20: putfield      #22                 // Field builder:Ljava/lang/StringBuilder;\n         23: return\n       LineNumberTable:\n         line 61: 0\n         line 62: 4\n         line 63: 23\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -185,17 +185,17 @@\n \n   public java.io.Writer append(char);\n     descriptor: (C)Ljava/io/Writer;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #10                 // Field builder:Ljava/lang/StringBuilder;\n+         1: getfield      #22                 // Field builder:Ljava/lang/StringBuilder;\n          4: iload_1\n-         5: invokevirtual #19                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+         5: invokevirtual #37                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n          8: pop\n          9: aload_0\n         10: areturn\n       LineNumberTable:\n         line 73: 0\n         line 74: 9\n       LocalVariableTable:\n@@ -205,17 +205,17 @@\n \n   public java.io.Writer append(java.lang.CharSequence);\n     descriptor: (Ljava/lang/CharSequence;)Ljava/io/Writer;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #10                 // Field builder:Ljava/lang/StringBuilder;\n+         1: getfield      #22                 // Field builder:Ljava/lang/StringBuilder;\n          4: aload_1\n-         5: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n+         5: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n          8: pop\n          9: aload_0\n         10: areturn\n       LineNumberTable:\n         line 85: 0\n         line 86: 9\n       LocalVariableTable:\n@@ -225,19 +225,19 @@\n \n   public java.io.Writer append(java.lang.CharSequence, int, int);\n     descriptor: (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #10                 // Field builder:Ljava/lang/StringBuilder;\n+         1: getfield      #22                 // Field builder:Ljava/lang/StringBuilder;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n+         7: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n         10: pop\n         11: aload_0\n         12: areturn\n       LineNumberTable:\n         line 99: 0\n         line 100: 11\n       LocalVariableTable:\n@@ -275,17 +275,17 @@\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: ifnull        13\n          4: aload_0\n-         5: getfield      #10                 // Field builder:Ljava/lang/StringBuilder;\n+         5: getfield      #22                 // Field builder:Ljava/lang/StringBuilder;\n          8: aload_1\n-         9: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+         9: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         12: pop\n         13: return\n       LineNumberTable:\n         line 127: 0\n         line 128: 4\n         line 130: 13\n       LocalVariableTable:\n@@ -299,19 +299,19 @@\n     descriptor: ([CII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_1\n          1: ifnull        15\n          4: aload_0\n-         5: getfield      #10                 // Field builder:Ljava/lang/StringBuilder;\n+         5: getfield      #22                 // Field builder:Ljava/lang/StringBuilder;\n          8: aload_1\n          9: iload_2\n         10: iload_3\n-        11: invokevirtual #32                 // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;\n+        11: invokevirtual #62                 // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;\n         14: pop\n         15: return\n       LineNumberTable:\n         line 141: 0\n         line 142: 4\n         line 144: 15\n       LocalVariableTable:\n@@ -325,84 +325,81 @@\n \n   public java.lang.StringBuilder getBuilder();\n     descriptor: ()Ljava/lang/StringBuilder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field builder:Ljava/lang/StringBuilder;\n+         1: getfield      #22                 // Field builder:Ljava/lang/StringBuilder;\n          4: areturn\n       LineNumberTable:\n         line 152: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/output/StringBuilderWriter;\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field builder:Ljava/lang/StringBuilder;\n-         4: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+         1: getfield      #22                 // Field builder:Ljava/lang/StringBuilder;\n+         4: invokevirtual #72                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 162: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/output/StringBuilderWriter;\n \n-  public java.lang.Appendable append(char) throws java.io.IOException;\n-    descriptor: (C)Ljava/lang/Appendable;\n-    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n-    Code:\n-      stack=2, locals=2, args_size=2\n-         0: aload_0\n-         1: iload_1\n-         2: invokevirtual #39                 // Method append:(C)Ljava/io/Writer;\n-         5: areturn\n-      LineNumberTable:\n-        line 33: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       6     0  this   Lorg/apache/commons/io/output/StringBuilderWriter;\n-    Exceptions:\n-      throws java.io.IOException\n-\n   public java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokevirtual #42                 // Method append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+         4: invokevirtual #78                 // Method append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n          7: areturn\n       LineNumberTable:\n-        line 33: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       8     0  this   Lorg/apache/commons/io/output/StringBuilderWriter;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #45                 // Method append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+         2: invokevirtual #81                 // Method append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n          5: areturn\n       LineNumberTable:\n-        line 33: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       6     0  this   Lorg/apache/commons/io/output/StringBuilderWriter;\n+\n+  public java.lang.Appendable append(char) throws java.io.IOException;\n+    descriptor: (C)Ljava/lang/Appendable;\n+    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Exceptions:\n       throws java.io.IOException\n+    Code:\n+      stack=2, locals=2, args_size=2\n+         0: aload_0\n+         1: iload_1\n+         2: invokevirtual #84                 // Method append:(C)Ljava/io/Writer;\n+         5: areturn\n+      LineNumberTable:\n+        line 1: 0\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n }\n SourceFile: \"StringBuilderWriter.java\"\n"}]}
