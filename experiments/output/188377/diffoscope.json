{"diffoscope-json-version": 1, "source1": "first/ZipSplitReadOnlySeekableByteChannelTest.class", "source2": "second/ZipSplitReadOnlySeekableByteChannelTest.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,309 +1,309 @@\n-  SHA-256 checksum 8f9b09206d546cc6a5373cb3a6fe1c83f2e9ab89e684d09092f65ad249b02e82\n+  SHA-256 checksum fef6d0af51f5c0deaab079d2c91a39d2e1796f6bab4dbd550bc8c197714737e8\n   Compiled from \"ZipSplitReadOnlySeekableByteChannelTest.java\"\n public class org.apache.commons.compress.utils.ZipSplitReadOnlySeekableByteChannelTest\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #58                         // org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest\n-  super_class: #59                        // java/lang/Object\n+  this_class: #62                         // org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 26, attributes: 3\n Constant pool:\n-    #1 = Methodref          #59.#139      // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #140          // java/lang/NullPointerException\n-    #3 = InvokeDynamic      #0:#145       // #0:run:()Lorg/junit/function/ThrowingRunnable;\n-    #4 = Methodref          #146.#147     // org/junit/Assert.assertThrows:(Ljava/lang/Class;Lorg/junit/function/ThrowingRunnable;)Ljava/lang/Throwable;\n-    #5 = Class              #148          // java/util/ArrayList\n-    #6 = Methodref          #5.#139       // java/util/ArrayList.\"<init>\":()V\n-    #7 = String             #149          // COMPRESS-189.zip\n-    #8 = Methodref          #150.#151     // org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n-    #9 = Methodref          #41.#152      // java/io/File.toPath:()Ljava/nio/file/Path;\n-   #10 = Class              #153          // java/nio/file/OpenOption\n-   #11 = Fieldref           #154.#155     // java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;\n-   #12 = Methodref          #156.#157     // java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n-   #13 = InterfaceMethodref #82.#158      // java/util/List.add:(Ljava/lang/Object;)Z\n-   #14 = Class              #159          // java/io/IOException\n-   #15 = InvokeDynamic      #1:#161       // #1:run:(Ljava/util/List;)Lorg/junit/function/ThrowingRunnable;\n-   #16 = Methodref          #58.#162      // org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.getSplitZipChannels:()Ljava/util/List;\n-   #17 = Class              #163          // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n-   #18 = Methodref          #17.#164      // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.\"<init>\":(Ljava/util/List;)V\n-   #19 = InterfaceMethodref #82.#165      // java/util/List.iterator:()Ljava/util/Iterator;\n-   #20 = InterfaceMethodref #83.#166      // java/util/Iterator.hasNext:()Z\n-   #21 = InterfaceMethodref #83.#167      // java/util/Iterator.next:()Ljava/lang/Object;\n-   #22 = Class              #168          // java/nio/channels/SeekableByteChannel\n-   #23 = InterfaceMethodref #22.#169      // java/nio/channels/SeekableByteChannel.position:()J\n-   #24 = Methodref          #146.#170     // org/junit/Assert.assertEquals:(JJ)V\n-   #25 = InvokeDynamic      #2:#145       // #2:run:()Lorg/junit/function/ThrowingRunnable;\n-   #26 = InvokeDynamic      #3:#145       // #3:run:()Lorg/junit/function/ThrowingRunnable;\n-   #27 = String             #173          // COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z01\n-   #28 = String             #174          // COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z02\n-   #29 = String             #175          // COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.zip\n-   #30 = Methodref          #17.#176      // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forOrderedSeekableByteChannels:(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n-   #31 = Methodref          #146.#177     // org/junit/Assert.assertTrue:(Z)V\n-   #32 = Methodref          #17.#178      // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forOrderedSeekableByteChannels:([Ljava/nio/channels/SeekableByteChannel;)Ljava/nio/channels/SeekableByteChannel;\n-   #33 = Class              #179          // org/apache/commons/compress/utils/SeekableInMemoryByteChannel\n-   #34 = Fieldref           #180.#181     // org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B\n-   #35 = Methodref          #33.#182      // org/apache/commons/compress/utils/SeekableInMemoryByteChannel.\"<init>\":([B)V\n-   #36 = Methodref          #146.#183     // org/junit/Assert.assertSame:(Ljava/lang/Object;Ljava/lang/Object;)V\n-   #37 = InvokeDynamic      #4:#145       // #4:run:()Lorg/junit/function/ThrowingRunnable;\n-   #38 = InvokeDynamic      #5:#145       // #5:run:()Lorg/junit/function/ThrowingRunnable;\n-   #39 = Methodref          #5.#158       // java/util/ArrayList.add:(Ljava/lang/Object;)Z\n-   #40 = Methodref          #17.#186      // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forFiles:(Ljava/io/File;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n-   #41 = Class              #187          // java/io/File\n-   #42 = Methodref          #17.#188      // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forFiles:([Ljava/io/File;)Ljava/nio/channels/SeekableByteChannel;\n-   #43 = Class              #189          // java/lang/IllegalArgumentException\n-   #44 = InvokeDynamic      #6:#191       // #6:run:(Ljava/io/File;)Lorg/junit/function/ThrowingRunnable;\n-   #45 = Methodref          #41.#192      // java/io/File.length:()J\n-   #46 = Class              #193          // java/util/Random\n-   #47 = Methodref          #46.#139      // java/util/Random.\"<init>\":()V\n-   #48 = Methodref          #46.#194      // java/util/Random.nextInt:(I)I\n-   #49 = Methodref          #17.#195      // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.buildFromLastSplitSegment:(Ljava/io/File;)Ljava/nio/channels/SeekableByteChannel;\n-   #50 = Methodref          #17.#196      // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.position:(JJ)Ljava/nio/channels/SeekableByteChannel;\n-   #51 = Methodref          #17.#169      // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.position:()J\n-   #52 = InvokeDynamic      #7:#145       // #7:run:()Lorg/junit/function/ThrowingRunnable;\n-   #53 = InvokeDynamic      #8:#145       // #8:run:()Lorg/junit/function/ThrowingRunnable;\n-   #54 = Methodref          #150.#199     // org/apache/commons/compress/AbstractTestCase.getPath:(Ljava/lang/String;)Ljava/nio/file/Path;\n-   #55 = Methodref          #17.#200      // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forPaths:(Ljava/nio/file/Path;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n-   #56 = Class              #201          // java/nio/file/Path\n-   #57 = Methodref          #17.#202      // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forPaths:([Ljava/nio/file/Path;)Ljava/nio/channels/SeekableByteChannel;\n-   #58 = Class              #203          // org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest\n-   #59 = Class              #204          // java/lang/Object\n-   #60 = Utf8               <init>\n-   #61 = Utf8               ()V\n-   #62 = Utf8               Code\n-   #63 = Utf8               LineNumberTable\n-   #64 = Utf8               LocalVariableTable\n-   #65 = Utf8               this\n-   #66 = Utf8               Lorg/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest;\n-   #67 = Utf8               constructorThrowsOnNullArg\n-   #68 = Utf8               Exceptions\n-   #69 = Utf8               RuntimeVisibleAnnotations\n-   #70 = Utf8               Lorg/junit/jupiter/api/Test;\n-   #71 = Utf8               constructorThrowsOnNonSplitZipFiles\n-   #72 = Utf8               channels\n-   #73 = Utf8               Ljava/util/List;\n-   #74 = Utf8               file\n-   #75 = Utf8               Ljava/io/File;\n-   #76 = Utf8               LocalVariableTypeTable\n-   #77 = Utf8               Ljava/util/List<Ljava/nio/channels/SeekableByteChannel;>;\n-   #78 = Utf8               channelsPositionIsZeroAfterConstructor\n-   #79 = Utf8               channel\n-   #80 = Utf8               Ljava/nio/channels/SeekableByteChannel;\n-   #81 = Utf8               StackMapTable\n-   #82 = Class              #205          // java/util/List\n-   #83 = Class              #206          // java/util/Iterator\n-   #84 = Utf8               forOrderedSeekableByteChannelsThrowsOnNullArg\n-   #85 = Utf8               forOrderedSeekableByteChannelsOfTwoParametersThrowsOnNullArg\n-   #86 = Utf8               forOrderedSeekableByteChannelsReturnCorrectClass\n-   #87 = Utf8               file1\n-   #88 = Utf8               firstChannel\n-   #89 = Utf8               file2\n-   #90 = Utf8               secondChannel\n-   #91 = Utf8               lastFile\n-   #92 = Utf8               lastChannel\n-   #93 = Utf8               forOrderedSeekableByteChannelsReturnsIdentityForSingleElement\n-   #94 = Utf8               emptyChannel\n-   #95 = Utf8               forFilesThrowsOnNullArg\n-   #96 = Utf8               forFilesOfTwoParametersThrowsOnNullArg\n-   #97 = Utf8               forFilesReturnCorrectClass\n-   #98 = Utf8               firstFile\n-   #99 = Utf8               secondFile\n-  #100 = Utf8               list\n-  #101 = Utf8               Ljava/util/ArrayList;\n-  #102 = Utf8               Ljava/util/ArrayList<Ljava/io/File;>;\n-  #103 = Utf8               buildFromLastSplitSegmentThrowsOnNotZipFile\n-  #104 = Utf8               positionToSomeZipSplitSegment\n-  #105 = Utf8               firstFileSize\n-  #106 = Utf8               I\n-  #107 = Utf8               secondFileSize\n-  #108 = Utf8               lastFileSize\n-  #109 = Utf8               random\n-  #110 = Utf8               Ljava/util/Random;\n-  #111 = Utf8               randomDiskNumber\n-  #112 = Utf8               randomOffset\n-  #113 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel;\n-  #114 = Utf8               expectedPosition\n-  #115 = Utf8               J\n-  #116 = Utf8               getSplitZipChannels\n-  #117 = Utf8               ()Ljava/util/List;\n-  #118 = Utf8               Signature\n-  #119 = Utf8               ()Ljava/util/List<Ljava/nio/channels/SeekableByteChannel;>;\n-  #120 = Utf8               forPathsThrowsOnNullArg\n-  #121 = Utf8               forPathsOfTwoParametersThrowsOnNullArg\n-  #122 = Utf8               forPathsReturnCorrectClass\n-  #123 = Utf8               Ljava/nio/file/Path;\n-  #124 = Utf8               Ljava/util/ArrayList<Ljava/nio/file/Path;>;\n-  #125 = Utf8               lambda$forPathsOfTwoParametersThrowsOnNullArg$8\n-  #126 = Class              #207          // java/lang/Throwable\n-  #127 = Utf8               lambda$forPathsThrowsOnNullArg$7\n-  #128 = Utf8               lambda$buildFromLastSplitSegmentThrowsOnNotZipFile$6\n-  #129 = Utf8               (Ljava/io/File;)V\n-  #130 = Utf8               lambda$forFilesOfTwoParametersThrowsOnNullArg$5\n-  #131 = Utf8               lambda$forFilesThrowsOnNullArg$4\n-  #132 = Utf8               lambda$forOrderedSeekableByteChannelsOfTwoParametersThrowsOnNullArg$3\n-  #133 = Utf8               lambda$forOrderedSeekableByteChannelsThrowsOnNullArg$2\n-  #134 = Utf8               lambda$constructorThrowsOnNonSplitZipFiles$1\n-  #135 = Utf8               (Ljava/util/List;)V\n-  #136 = Utf8               lambda$constructorThrowsOnNullArg$0\n-  #137 = Utf8               SourceFile\n-  #138 = Utf8               ZipSplitReadOnlySeekableByteChannelTest.java\n-  #139 = NameAndType        #60:#61       // \"<init>\":()V\n-  #140 = Utf8               java/lang/NullPointerException\n-  #141 = Utf8               BootstrapMethods\n-  #142 = MethodHandle       6:#208        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #143 = MethodType         #61           //  ()V\n-  #144 = MethodHandle       6:#209        // REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$constructorThrowsOnNullArg$0:()V\n-  #145 = NameAndType        #210:#211     // run:()Lorg/junit/function/ThrowingRunnable;\n-  #146 = Class              #212          // org/junit/Assert\n-  #147 = NameAndType        #213:#214     // assertThrows:(Ljava/lang/Class;Lorg/junit/function/ThrowingRunnable;)Ljava/lang/Throwable;\n-  #148 = Utf8               java/util/ArrayList\n-  #149 = Utf8               COMPRESS-189.zip\n-  #150 = Class              #215          // org/apache/commons/compress/AbstractTestCase\n-  #151 = NameAndType        #216:#217     // getFile:(Ljava/lang/String;)Ljava/io/File;\n-  #152 = NameAndType        #218:#219     // toPath:()Ljava/nio/file/Path;\n-  #153 = Utf8               java/nio/file/OpenOption\n-  #154 = Class              #220          // java/nio/file/StandardOpenOption\n-  #155 = NameAndType        #221:#222     // READ:Ljava/nio/file/StandardOpenOption;\n-  #156 = Class              #223          // java/nio/file/Files\n-  #157 = NameAndType        #224:#225     // newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n-  #158 = NameAndType        #226:#227     // add:(Ljava/lang/Object;)Z\n-  #159 = Utf8               java/io/IOException\n-  #160 = MethodHandle       6:#228        // REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$constructorThrowsOnNonSplitZipFiles$1:(Ljava/util/List;)V\n-  #161 = NameAndType        #210:#229     // run:(Ljava/util/List;)Lorg/junit/function/ThrowingRunnable;\n-  #162 = NameAndType        #116:#117     // getSplitZipChannels:()Ljava/util/List;\n-  #163 = Utf8               org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n-  #164 = NameAndType        #60:#135      // \"<init>\":(Ljava/util/List;)V\n-  #165 = NameAndType        #230:#231     // iterator:()Ljava/util/Iterator;\n-  #166 = NameAndType        #232:#233     // hasNext:()Z\n-  #167 = NameAndType        #234:#235     // next:()Ljava/lang/Object;\n-  #168 = Utf8               java/nio/channels/SeekableByteChannel\n-  #169 = NameAndType        #236:#237     // position:()J\n-  #170 = NameAndType        #238:#239     // assertEquals:(JJ)V\n-  #171 = MethodHandle       6:#240        // REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forOrderedSeekableByteChannelsThrowsOnNullArg$2:()V\n-  #172 = MethodHandle       6:#241        // REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forOrderedSeekableByteChannelsOfTwoParametersThrowsOnNullArg$3:()V\n-  #173 = Utf8               COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z01\n-  #174 = Utf8               COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z02\n-  #175 = Utf8               COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.zip\n-  #176 = NameAndType        #242:#243     // forOrderedSeekableByteChannels:(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n-  #177 = NameAndType        #244:#245     // assertTrue:(Z)V\n-  #178 = NameAndType        #242:#246     // forOrderedSeekableByteChannels:([Ljava/nio/channels/SeekableByteChannel;)Ljava/nio/channels/SeekableByteChannel;\n-  #179 = Utf8               org/apache/commons/compress/utils/SeekableInMemoryByteChannel\n-  #180 = Class              #247          // org/apache/commons/compress/utils/ByteUtils\n-  #181 = NameAndType        #248:#249     // EMPTY_BYTE_ARRAY:[B\n-  #182 = NameAndType        #60:#250      // \"<init>\":([B)V\n-  #183 = NameAndType        #251:#252     // assertSame:(Ljava/lang/Object;Ljava/lang/Object;)V\n-  #184 = MethodHandle       6:#253        // REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forFilesThrowsOnNullArg$4:()V\n-  #185 = MethodHandle       6:#254        // REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forFilesOfTwoParametersThrowsOnNullArg$5:()V\n-  #186 = NameAndType        #255:#256     // forFiles:(Ljava/io/File;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n-  #187 = Utf8               java/io/File\n-  #188 = NameAndType        #255:#257     // forFiles:([Ljava/io/File;)Ljava/nio/channels/SeekableByteChannel;\n-  #189 = Utf8               java/lang/IllegalArgumentException\n-  #190 = MethodHandle       6:#258        // REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$buildFromLastSplitSegmentThrowsOnNotZipFile$6:(Ljava/io/File;)V\n-  #191 = NameAndType        #210:#259     // run:(Ljava/io/File;)Lorg/junit/function/ThrowingRunnable;\n-  #192 = NameAndType        #260:#237     // length:()J\n-  #193 = Utf8               java/util/Random\n-  #194 = NameAndType        #261:#262     // nextInt:(I)I\n-  #195 = NameAndType        #263:#264     // buildFromLastSplitSegment:(Ljava/io/File;)Ljava/nio/channels/SeekableByteChannel;\n-  #196 = NameAndType        #236:#265     // position:(JJ)Ljava/nio/channels/SeekableByteChannel;\n-  #197 = MethodHandle       6:#266        // REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forPathsThrowsOnNullArg$7:()V\n-  #198 = MethodHandle       6:#267        // REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forPathsOfTwoParametersThrowsOnNullArg$8:()V\n-  #199 = NameAndType        #268:#269     // getPath:(Ljava/lang/String;)Ljava/nio/file/Path;\n-  #200 = NameAndType        #270:#271     // forPaths:(Ljava/nio/file/Path;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n-  #201 = Utf8               java/nio/file/Path\n-  #202 = NameAndType        #270:#272     // forPaths:([Ljava/nio/file/Path;)Ljava/nio/channels/SeekableByteChannel;\n-  #203 = Utf8               org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest\n-  #204 = Utf8               java/lang/Object\n-  #205 = Utf8               java/util/List\n-  #206 = Utf8               java/util/Iterator\n-  #207 = Utf8               java/lang/Throwable\n-  #208 = Methodref          #273.#274     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #209 = Methodref          #58.#275      // org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$constructorThrowsOnNullArg$0:()V\n-  #210 = Utf8               run\n-  #211 = Utf8               ()Lorg/junit/function/ThrowingRunnable;\n-  #212 = Utf8               org/junit/Assert\n-  #213 = Utf8               assertThrows\n-  #214 = Utf8               (Ljava/lang/Class;Lorg/junit/function/ThrowingRunnable;)Ljava/lang/Throwable;\n-  #215 = Utf8               org/apache/commons/compress/AbstractTestCase\n-  #216 = Utf8               getFile\n-  #217 = Utf8               (Ljava/lang/String;)Ljava/io/File;\n-  #218 = Utf8               toPath\n-  #219 = Utf8               ()Ljava/nio/file/Path;\n-  #220 = Utf8               java/nio/file/StandardOpenOption\n-  #221 = Utf8               READ\n-  #222 = Utf8               Ljava/nio/file/StandardOpenOption;\n-  #223 = Utf8               java/nio/file/Files\n-  #224 = Utf8               newByteChannel\n-  #225 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n-  #226 = Utf8               add\n-  #227 = Utf8               (Ljava/lang/Object;)Z\n-  #228 = Methodref          #58.#276      // org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$constructorThrowsOnNonSplitZipFiles$1:(Ljava/util/List;)V\n-  #229 = Utf8               (Ljava/util/List;)Lorg/junit/function/ThrowingRunnable;\n-  #230 = Utf8               iterator\n-  #231 = Utf8               ()Ljava/util/Iterator;\n-  #232 = Utf8               hasNext\n-  #233 = Utf8               ()Z\n-  #234 = Utf8               next\n-  #235 = Utf8               ()Ljava/lang/Object;\n-  #236 = Utf8               position\n-  #237 = Utf8               ()J\n-  #238 = Utf8               assertEquals\n-  #239 = Utf8               (JJ)V\n-  #240 = Methodref          #58.#277      // org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forOrderedSeekableByteChannelsThrowsOnNullArg$2:()V\n-  #241 = Methodref          #58.#278      // org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forOrderedSeekableByteChannelsOfTwoParametersThrowsOnNullArg$3:()V\n-  #242 = Utf8               forOrderedSeekableByteChannels\n-  #243 = Utf8               (Ljava/nio/channels/SeekableByteChannel;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n-  #244 = Utf8               assertTrue\n-  #245 = Utf8               (Z)V\n-  #246 = Utf8               ([Ljava/nio/channels/SeekableByteChannel;)Ljava/nio/channels/SeekableByteChannel;\n-  #247 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #248 = Utf8               EMPTY_BYTE_ARRAY\n-  #249 = Utf8               [B\n-  #250 = Utf8               ([B)V\n-  #251 = Utf8               assertSame\n-  #252 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V\n-  #253 = Methodref          #58.#279      // org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forFilesThrowsOnNullArg$4:()V\n-  #254 = Methodref          #58.#280      // org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forFilesOfTwoParametersThrowsOnNullArg$5:()V\n-  #255 = Utf8               forFiles\n-  #256 = Utf8               (Ljava/io/File;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n-  #257 = Utf8               ([Ljava/io/File;)Ljava/nio/channels/SeekableByteChannel;\n-  #258 = Methodref          #58.#281      // org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$buildFromLastSplitSegmentThrowsOnNotZipFile$6:(Ljava/io/File;)V\n-  #259 = Utf8               (Ljava/io/File;)Lorg/junit/function/ThrowingRunnable;\n-  #260 = Utf8               length\n-  #261 = Utf8               nextInt\n-  #262 = Utf8               (I)I\n-  #263 = Utf8               buildFromLastSplitSegment\n-  #264 = Utf8               (Ljava/io/File;)Ljava/nio/channels/SeekableByteChannel;\n-  #265 = Utf8               (JJ)Ljava/nio/channels/SeekableByteChannel;\n-  #266 = Methodref          #58.#282      // org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forPathsThrowsOnNullArg$7:()V\n-  #267 = Methodref          #58.#283      // org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forPathsOfTwoParametersThrowsOnNullArg$8:()V\n-  #268 = Utf8               getPath\n-  #269 = Utf8               (Ljava/lang/String;)Ljava/nio/file/Path;\n-  #270 = Utf8               forPaths\n-  #271 = Utf8               (Ljava/nio/file/Path;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n-  #272 = Utf8               ([Ljava/nio/file/Path;)Ljava/nio/channels/SeekableByteChannel;\n-  #273 = Class              #284          // java/lang/invoke/LambdaMetafactory\n-  #274 = NameAndType        #285:#289     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #275 = NameAndType        #136:#61      // lambda$constructorThrowsOnNullArg$0:()V\n-  #276 = NameAndType        #134:#135     // lambda$constructorThrowsOnNonSplitZipFiles$1:(Ljava/util/List;)V\n-  #277 = NameAndType        #133:#61      // lambda$forOrderedSeekableByteChannelsThrowsOnNullArg$2:()V\n-  #278 = NameAndType        #132:#61      // lambda$forOrderedSeekableByteChannelsOfTwoParametersThrowsOnNullArg$3:()V\n-  #279 = NameAndType        #131:#61      // lambda$forFilesThrowsOnNullArg$4:()V\n-  #280 = NameAndType        #130:#61      // lambda$forFilesOfTwoParametersThrowsOnNullArg$5:()V\n-  #281 = NameAndType        #128:#129     // lambda$buildFromLastSplitSegmentThrowsOnNotZipFile$6:(Ljava/io/File;)V\n-  #282 = NameAndType        #127:#61      // lambda$forPathsThrowsOnNullArg$7:()V\n-  #283 = NameAndType        #125:#61      // lambda$forPathsOfTwoParametersThrowsOnNullArg$8:()V\n-  #284 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #285 = Utf8               metafactory\n-  #286 = Class              #291          // java/lang/invoke/MethodHandles$Lookup\n-  #287 = Utf8               Lookup\n-  #288 = Utf8               InnerClasses\n-  #289 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #290 = Class              #292          // java/lang/invoke/MethodHandles\n-  #291 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #292 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Class              #8            // java/lang/NullPointerException\n+    #8 = Utf8               java/lang/NullPointerException\n+    #9 = InvokeDynamic      #0:#10        // #0:run:()Lorg/junit/function/ThrowingRunnable;\n+   #10 = NameAndType        #11:#12       // run:()Lorg/junit/function/ThrowingRunnable;\n+   #11 = Utf8               run\n+   #12 = Utf8               ()Lorg/junit/function/ThrowingRunnable;\n+   #13 = Methodref          #14.#15       // org/junit/Assert.assertThrows:(Ljava/lang/Class;Lorg/junit/function/ThrowingRunnable;)Ljava/lang/Throwable;\n+   #14 = Class              #16           // org/junit/Assert\n+   #15 = NameAndType        #17:#18       // assertThrows:(Ljava/lang/Class;Lorg/junit/function/ThrowingRunnable;)Ljava/lang/Throwable;\n+   #16 = Utf8               org/junit/Assert\n+   #17 = Utf8               assertThrows\n+   #18 = Utf8               (Ljava/lang/Class;Lorg/junit/function/ThrowingRunnable;)Ljava/lang/Throwable;\n+   #19 = Class              #20           // java/util/ArrayList\n+   #20 = Utf8               java/util/ArrayList\n+   #21 = Methodref          #19.#3        // java/util/ArrayList.\"<init>\":()V\n+   #22 = String             #23           // COMPRESS-189.zip\n+   #23 = Utf8               COMPRESS-189.zip\n+   #24 = Methodref          #25.#26       // org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n+   #25 = Class              #27           // org/apache/commons/compress/AbstractTestCase\n+   #26 = NameAndType        #28:#29       // getFile:(Ljava/lang/String;)Ljava/io/File;\n+   #27 = Utf8               org/apache/commons/compress/AbstractTestCase\n+   #28 = Utf8               getFile\n+   #29 = Utf8               (Ljava/lang/String;)Ljava/io/File;\n+   #30 = Methodref          #31.#32       // java/io/File.toPath:()Ljava/nio/file/Path;\n+   #31 = Class              #33           // java/io/File\n+   #32 = NameAndType        #34:#35       // toPath:()Ljava/nio/file/Path;\n+   #33 = Utf8               java/io/File\n+   #34 = Utf8               toPath\n+   #35 = Utf8               ()Ljava/nio/file/Path;\n+   #36 = Class              #37           // java/nio/file/OpenOption\n+   #37 = Utf8               java/nio/file/OpenOption\n+   #38 = Fieldref           #39.#40       // java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;\n+   #39 = Class              #41           // java/nio/file/StandardOpenOption\n+   #40 = NameAndType        #42:#43       // READ:Ljava/nio/file/StandardOpenOption;\n+   #41 = Utf8               java/nio/file/StandardOpenOption\n+   #42 = Utf8               READ\n+   #43 = Utf8               Ljava/nio/file/StandardOpenOption;\n+   #44 = Methodref          #45.#46       // java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n+   #45 = Class              #47           // java/nio/file/Files\n+   #46 = NameAndType        #48:#49       // newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n+   #47 = Utf8               java/nio/file/Files\n+   #48 = Utf8               newByteChannel\n+   #49 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n+   #50 = InterfaceMethodref #51.#52       // java/util/List.add:(Ljava/lang/Object;)Z\n+   #51 = Class              #53           // java/util/List\n+   #52 = NameAndType        #54:#55       // add:(Ljava/lang/Object;)Z\n+   #53 = Utf8               java/util/List\n+   #54 = Utf8               add\n+   #55 = Utf8               (Ljava/lang/Object;)Z\n+   #56 = Class              #57           // java/io/IOException\n+   #57 = Utf8               java/io/IOException\n+   #58 = InvokeDynamic      #1:#59        // #1:run:(Ljava/util/List;)Lorg/junit/function/ThrowingRunnable;\n+   #59 = NameAndType        #11:#60       // run:(Ljava/util/List;)Lorg/junit/function/ThrowingRunnable;\n+   #60 = Utf8               (Ljava/util/List;)Lorg/junit/function/ThrowingRunnable;\n+   #61 = Methodref          #62.#63       // org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.getSplitZipChannels:()Ljava/util/List;\n+   #62 = Class              #64           // org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest\n+   #63 = NameAndType        #65:#66       // getSplitZipChannels:()Ljava/util/List;\n+   #64 = Utf8               org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest\n+   #65 = Utf8               getSplitZipChannels\n+   #66 = Utf8               ()Ljava/util/List;\n+   #67 = Class              #68           // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n+   #68 = Utf8               org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n+   #69 = Methodref          #67.#70       // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.\"<init>\":(Ljava/util/List;)V\n+   #70 = NameAndType        #5:#71        // \"<init>\":(Ljava/util/List;)V\n+   #71 = Utf8               (Ljava/util/List;)V\n+   #72 = InterfaceMethodref #51.#73       // java/util/List.iterator:()Ljava/util/Iterator;\n+   #73 = NameAndType        #74:#75       // iterator:()Ljava/util/Iterator;\n+   #74 = Utf8               iterator\n+   #75 = Utf8               ()Ljava/util/Iterator;\n+   #76 = InterfaceMethodref #77.#78       // java/util/Iterator.hasNext:()Z\n+   #77 = Class              #79           // java/util/Iterator\n+   #78 = NameAndType        #80:#81       // hasNext:()Z\n+   #79 = Utf8               java/util/Iterator\n+   #80 = Utf8               hasNext\n+   #81 = Utf8               ()Z\n+   #82 = InterfaceMethodref #77.#83       // java/util/Iterator.next:()Ljava/lang/Object;\n+   #83 = NameAndType        #84:#85       // next:()Ljava/lang/Object;\n+   #84 = Utf8               next\n+   #85 = Utf8               ()Ljava/lang/Object;\n+   #86 = Class              #87           // java/nio/channels/SeekableByteChannel\n+   #87 = Utf8               java/nio/channels/SeekableByteChannel\n+   #88 = InterfaceMethodref #86.#89       // java/nio/channels/SeekableByteChannel.position:()J\n+   #89 = NameAndType        #90:#91       // position:()J\n+   #90 = Utf8               position\n+   #91 = Utf8               ()J\n+   #92 = Methodref          #14.#93       // org/junit/Assert.assertEquals:(JJ)V\n+   #93 = NameAndType        #94:#95       // assertEquals:(JJ)V\n+   #94 = Utf8               assertEquals\n+   #95 = Utf8               (JJ)V\n+   #96 = InvokeDynamic      #2:#10        // #2:run:()Lorg/junit/function/ThrowingRunnable;\n+   #97 = InvokeDynamic      #3:#10        // #3:run:()Lorg/junit/function/ThrowingRunnable;\n+   #98 = String             #99           // COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z01\n+   #99 = Utf8               COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z01\n+  #100 = String             #101          // COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z02\n+  #101 = Utf8               COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z02\n+  #102 = String             #103          // COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.zip\n+  #103 = Utf8               COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.zip\n+  #104 = Methodref          #67.#105      // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forOrderedSeekableByteChannels:(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n+  #105 = NameAndType        #106:#107     // forOrderedSeekableByteChannels:(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n+  #106 = Utf8               forOrderedSeekableByteChannels\n+  #107 = Utf8               (Ljava/nio/channels/SeekableByteChannel;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n+  #108 = Methodref          #14.#109      // org/junit/Assert.assertTrue:(Z)V\n+  #109 = NameAndType        #110:#111     // assertTrue:(Z)V\n+  #110 = Utf8               assertTrue\n+  #111 = Utf8               (Z)V\n+  #112 = Methodref          #67.#113      // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forOrderedSeekableByteChannels:([Ljava/nio/channels/SeekableByteChannel;)Ljava/nio/channels/SeekableByteChannel;\n+  #113 = NameAndType        #106:#114     // forOrderedSeekableByteChannels:([Ljava/nio/channels/SeekableByteChannel;)Ljava/nio/channels/SeekableByteChannel;\n+  #114 = Utf8               ([Ljava/nio/channels/SeekableByteChannel;)Ljava/nio/channels/SeekableByteChannel;\n+  #115 = Class              #116          // org/apache/commons/compress/utils/SeekableInMemoryByteChannel\n+  #116 = Utf8               org/apache/commons/compress/utils/SeekableInMemoryByteChannel\n+  #117 = Fieldref           #118.#119     // org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B\n+  #118 = Class              #120          // org/apache/commons/compress/utils/ByteUtils\n+  #119 = NameAndType        #121:#122     // EMPTY_BYTE_ARRAY:[B\n+  #120 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #121 = Utf8               EMPTY_BYTE_ARRAY\n+  #122 = Utf8               [B\n+  #123 = Methodref          #115.#124     // org/apache/commons/compress/utils/SeekableInMemoryByteChannel.\"<init>\":([B)V\n+  #124 = NameAndType        #5:#125       // \"<init>\":([B)V\n+  #125 = Utf8               ([B)V\n+  #126 = Methodref          #14.#127      // org/junit/Assert.assertSame:(Ljava/lang/Object;Ljava/lang/Object;)V\n+  #127 = NameAndType        #128:#129     // assertSame:(Ljava/lang/Object;Ljava/lang/Object;)V\n+  #128 = Utf8               assertSame\n+  #129 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V\n+  #130 = InvokeDynamic      #4:#10        // #4:run:()Lorg/junit/function/ThrowingRunnable;\n+  #131 = InvokeDynamic      #5:#10        // #5:run:()Lorg/junit/function/ThrowingRunnable;\n+  #132 = Methodref          #19.#52       // java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+  #133 = Methodref          #67.#134      // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forFiles:(Ljava/io/File;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n+  #134 = NameAndType        #135:#136     // forFiles:(Ljava/io/File;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n+  #135 = Utf8               forFiles\n+  #136 = Utf8               (Ljava/io/File;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n+  #137 = Methodref          #67.#138      // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forFiles:([Ljava/io/File;)Ljava/nio/channels/SeekableByteChannel;\n+  #138 = NameAndType        #135:#139     // forFiles:([Ljava/io/File;)Ljava/nio/channels/SeekableByteChannel;\n+  #139 = Utf8               ([Ljava/io/File;)Ljava/nio/channels/SeekableByteChannel;\n+  #140 = Class              #141          // java/lang/IllegalArgumentException\n+  #141 = Utf8               java/lang/IllegalArgumentException\n+  #142 = InvokeDynamic      #6:#143       // #6:run:(Ljava/io/File;)Lorg/junit/function/ThrowingRunnable;\n+  #143 = NameAndType        #11:#144      // run:(Ljava/io/File;)Lorg/junit/function/ThrowingRunnable;\n+  #144 = Utf8               (Ljava/io/File;)Lorg/junit/function/ThrowingRunnable;\n+  #145 = Methodref          #31.#146      // java/io/File.length:()J\n+  #146 = NameAndType        #147:#91      // length:()J\n+  #147 = Utf8               length\n+  #148 = Class              #149          // java/util/Random\n+  #149 = Utf8               java/util/Random\n+  #150 = Methodref          #148.#3       // java/util/Random.\"<init>\":()V\n+  #151 = Methodref          #148.#152     // java/util/Random.nextInt:(I)I\n+  #152 = NameAndType        #153:#154     // nextInt:(I)I\n+  #153 = Utf8               nextInt\n+  #154 = Utf8               (I)I\n+  #155 = Methodref          #67.#156      // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.buildFromLastSplitSegment:(Ljava/io/File;)Ljava/nio/channels/SeekableByteChannel;\n+  #156 = NameAndType        #157:#158     // buildFromLastSplitSegment:(Ljava/io/File;)Ljava/nio/channels/SeekableByteChannel;\n+  #157 = Utf8               buildFromLastSplitSegment\n+  #158 = Utf8               (Ljava/io/File;)Ljava/nio/channels/SeekableByteChannel;\n+  #159 = Methodref          #67.#160      // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.position:(JJ)Ljava/nio/channels/SeekableByteChannel;\n+  #160 = NameAndType        #90:#161      // position:(JJ)Ljava/nio/channels/SeekableByteChannel;\n+  #161 = Utf8               (JJ)Ljava/nio/channels/SeekableByteChannel;\n+  #162 = Methodref          #67.#89       // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.position:()J\n+  #163 = InvokeDynamic      #7:#10        // #7:run:()Lorg/junit/function/ThrowingRunnable;\n+  #164 = InvokeDynamic      #8:#10        // #8:run:()Lorg/junit/function/ThrowingRunnable;\n+  #165 = Methodref          #25.#166      // org/apache/commons/compress/AbstractTestCase.getPath:(Ljava/lang/String;)Ljava/nio/file/Path;\n+  #166 = NameAndType        #167:#168     // getPath:(Ljava/lang/String;)Ljava/nio/file/Path;\n+  #167 = Utf8               getPath\n+  #168 = Utf8               (Ljava/lang/String;)Ljava/nio/file/Path;\n+  #169 = Methodref          #67.#170      // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forPaths:(Ljava/nio/file/Path;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n+  #170 = NameAndType        #171:#172     // forPaths:(Ljava/nio/file/Path;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n+  #171 = Utf8               forPaths\n+  #172 = Utf8               (Ljava/nio/file/Path;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n+  #173 = Class              #174          // java/nio/file/Path\n+  #174 = Utf8               java/nio/file/Path\n+  #175 = Methodref          #67.#176      // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forPaths:([Ljava/nio/file/Path;)Ljava/nio/channels/SeekableByteChannel;\n+  #176 = NameAndType        #171:#177     // forPaths:([Ljava/nio/file/Path;)Ljava/nio/channels/SeekableByteChannel;\n+  #177 = Utf8               ([Ljava/nio/file/Path;)Ljava/nio/channels/SeekableByteChannel;\n+  #178 = Utf8               Code\n+  #179 = Utf8               LineNumberTable\n+  #180 = Utf8               LocalVariableTable\n+  #181 = Utf8               this\n+  #182 = Utf8               Lorg/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest;\n+  #183 = Utf8               constructorThrowsOnNullArg\n+  #184 = Utf8               Exceptions\n+  #185 = Utf8               RuntimeVisibleAnnotations\n+  #186 = Utf8               Lorg/junit/jupiter/api/Test;\n+  #187 = Utf8               constructorThrowsOnNonSplitZipFiles\n+  #188 = Utf8               channels\n+  #189 = Utf8               Ljava/util/List;\n+  #190 = Utf8               file\n+  #191 = Utf8               Ljava/io/File;\n+  #192 = Utf8               LocalVariableTypeTable\n+  #193 = Utf8               Ljava/util/List<Ljava/nio/channels/SeekableByteChannel;>;\n+  #194 = Utf8               channelsPositionIsZeroAfterConstructor\n+  #195 = Utf8               channel\n+  #196 = Utf8               Ljava/nio/channels/SeekableByteChannel;\n+  #197 = Utf8               StackMapTable\n+  #198 = Utf8               forOrderedSeekableByteChannelsThrowsOnNullArg\n+  #199 = Utf8               forOrderedSeekableByteChannelsOfTwoParametersThrowsOnNullArg\n+  #200 = Utf8               forOrderedSeekableByteChannelsReturnCorrectClass\n+  #201 = Utf8               file1\n+  #202 = Utf8               firstChannel\n+  #203 = Utf8               file2\n+  #204 = Utf8               secondChannel\n+  #205 = Utf8               lastFile\n+  #206 = Utf8               lastChannel\n+  #207 = Utf8               forOrderedSeekableByteChannelsReturnsIdentityForSingleElement\n+  #208 = Utf8               emptyChannel\n+  #209 = Utf8               forFilesThrowsOnNullArg\n+  #210 = Utf8               forFilesOfTwoParametersThrowsOnNullArg\n+  #211 = Utf8               forFilesReturnCorrectClass\n+  #212 = Utf8               firstFile\n+  #213 = Utf8               secondFile\n+  #214 = Utf8               list\n+  #215 = Utf8               Ljava/util/ArrayList;\n+  #216 = Utf8               Ljava/util/ArrayList<Ljava/io/File;>;\n+  #217 = Utf8               buildFromLastSplitSegmentThrowsOnNotZipFile\n+  #218 = Utf8               positionToSomeZipSplitSegment\n+  #219 = Utf8               firstFileSize\n+  #220 = Utf8               I\n+  #221 = Utf8               secondFileSize\n+  #222 = Utf8               lastFileSize\n+  #223 = Utf8               random\n+  #224 = Utf8               Ljava/util/Random;\n+  #225 = Utf8               randomDiskNumber\n+  #226 = Utf8               randomOffset\n+  #227 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel;\n+  #228 = Utf8               expectedPosition\n+  #229 = Utf8               J\n+  #230 = Utf8               Signature\n+  #231 = Utf8               ()Ljava/util/List<Ljava/nio/channels/SeekableByteChannel;>;\n+  #232 = Utf8               forPathsThrowsOnNullArg\n+  #233 = Utf8               forPathsOfTwoParametersThrowsOnNullArg\n+  #234 = Utf8               forPathsReturnCorrectClass\n+  #235 = Utf8               Ljava/nio/file/Path;\n+  #236 = Utf8               Ljava/util/ArrayList<Ljava/nio/file/Path;>;\n+  #237 = Utf8               lambda$forPathsOfTwoParametersThrowsOnNullArg$8\n+  #238 = Class              #239          // java/lang/Throwable\n+  #239 = Utf8               java/lang/Throwable\n+  #240 = Utf8               lambda$forPathsThrowsOnNullArg$7\n+  #241 = Utf8               lambda$buildFromLastSplitSegmentThrowsOnNotZipFile$6\n+  #242 = Utf8               (Ljava/io/File;)V\n+  #243 = Utf8               lambda$forFilesOfTwoParametersThrowsOnNullArg$5\n+  #244 = Utf8               lambda$forFilesThrowsOnNullArg$4\n+  #245 = Utf8               lambda$forOrderedSeekableByteChannelsOfTwoParametersThrowsOnNullArg$3\n+  #246 = Utf8               lambda$forOrderedSeekableByteChannelsThrowsOnNullArg$2\n+  #247 = Utf8               lambda$constructorThrowsOnNonSplitZipFiles$1\n+  #248 = Utf8               lambda$constructorThrowsOnNullArg$0\n+  #249 = Utf8               SourceFile\n+  #250 = Utf8               ZipSplitReadOnlySeekableByteChannelTest.java\n+  #251 = Utf8               BootstrapMethods\n+  #252 = MethodHandle       6:#253        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #253 = Methodref          #254.#255     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #254 = Class              #256          // java/lang/invoke/LambdaMetafactory\n+  #255 = NameAndType        #257:#258     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #256 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #257 = Utf8               metafactory\n+  #258 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #259 = MethodType         #6            //  ()V\n+  #260 = MethodHandle       6:#261        // REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$constructorThrowsOnNullArg$0:()V\n+  #261 = Methodref          #62.#262      // org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$constructorThrowsOnNullArg$0:()V\n+  #262 = NameAndType        #248:#6       // lambda$constructorThrowsOnNullArg$0:()V\n+  #263 = MethodHandle       6:#264        // REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$constructorThrowsOnNonSplitZipFiles$1:(Ljava/util/List;)V\n+  #264 = Methodref          #62.#265      // org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$constructorThrowsOnNonSplitZipFiles$1:(Ljava/util/List;)V\n+  #265 = NameAndType        #247:#71      // lambda$constructorThrowsOnNonSplitZipFiles$1:(Ljava/util/List;)V\n+  #266 = MethodHandle       6:#267        // REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forOrderedSeekableByteChannelsThrowsOnNullArg$2:()V\n+  #267 = Methodref          #62.#268      // org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forOrderedSeekableByteChannelsThrowsOnNullArg$2:()V\n+  #268 = NameAndType        #246:#6       // lambda$forOrderedSeekableByteChannelsThrowsOnNullArg$2:()V\n+  #269 = MethodHandle       6:#270        // REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forOrderedSeekableByteChannelsOfTwoParametersThrowsOnNullArg$3:()V\n+  #270 = Methodref          #62.#271      // org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forOrderedSeekableByteChannelsOfTwoParametersThrowsOnNullArg$3:()V\n+  #271 = NameAndType        #245:#6       // lambda$forOrderedSeekableByteChannelsOfTwoParametersThrowsOnNullArg$3:()V\n+  #272 = MethodHandle       6:#273        // REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forFilesThrowsOnNullArg$4:()V\n+  #273 = Methodref          #62.#274      // org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forFilesThrowsOnNullArg$4:()V\n+  #274 = NameAndType        #244:#6       // lambda$forFilesThrowsOnNullArg$4:()V\n+  #275 = MethodHandle       6:#276        // REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forFilesOfTwoParametersThrowsOnNullArg$5:()V\n+  #276 = Methodref          #62.#277      // org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forFilesOfTwoParametersThrowsOnNullArg$5:()V\n+  #277 = NameAndType        #243:#6       // lambda$forFilesOfTwoParametersThrowsOnNullArg$5:()V\n+  #278 = MethodHandle       6:#279        // REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$buildFromLastSplitSegmentThrowsOnNotZipFile$6:(Ljava/io/File;)V\n+  #279 = Methodref          #62.#280      // org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$buildFromLastSplitSegmentThrowsOnNotZipFile$6:(Ljava/io/File;)V\n+  #280 = NameAndType        #241:#242     // lambda$buildFromLastSplitSegmentThrowsOnNotZipFile$6:(Ljava/io/File;)V\n+  #281 = MethodHandle       6:#282        // REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forPathsThrowsOnNullArg$7:()V\n+  #282 = Methodref          #62.#283      // org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forPathsThrowsOnNullArg$7:()V\n+  #283 = NameAndType        #240:#6       // lambda$forPathsThrowsOnNullArg$7:()V\n+  #284 = MethodHandle       6:#285        // REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forPathsOfTwoParametersThrowsOnNullArg$8:()V\n+  #285 = Methodref          #62.#286      // org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forPathsOfTwoParametersThrowsOnNullArg$8:()V\n+  #286 = NameAndType        #237:#6       // lambda$forPathsOfTwoParametersThrowsOnNullArg$8:()V\n+  #287 = Utf8               InnerClasses\n+  #288 = Class              #289          // java/lang/invoke/MethodHandles$Lookup\n+  #289 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #290 = Class              #291          // java/lang/invoke/MethodHandles\n+  #291 = Utf8               java/lang/invoke/MethodHandles\n+  #292 = Utf8               Lookup\n {\n   public org.apache.commons.compress.utils.ZipSplitReadOnlySeekableByteChannelTest();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -316,59 +316,59 @@\n             0       5     0  this   Lorg/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest;\n \n   public void constructorThrowsOnNullArg() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: ldc           #2                  // class java/lang/NullPointerException\n-         2: invokedynamic #3,  0              // InvokeDynamic #0:run:()Lorg/junit/function/ThrowingRunnable;\n-         7: invokestatic  #4                  // Method org/junit/Assert.assertThrows:(Ljava/lang/Class;Lorg/junit/function/ThrowingRunnable;)Ljava/lang/Throwable;\n+         0: ldc           #7                  // class java/lang/NullPointerException\n+         2: invokedynamic #9,  0              // InvokeDynamic #0:run:()Lorg/junit/function/ThrowingRunnable;\n+         7: invokestatic  #13                 // Method org/junit/Assert.assertThrows:(Ljava/lang/Class;Lorg/junit/function/ThrowingRunnable;)Ljava/lang/Throwable;\n         10: pop\n         11: return\n       LineNumberTable:\n         line 43: 0\n         line 44: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest;\n     Exceptions:\n       throws java.io.IOException\n     RuntimeVisibleAnnotations:\n-      0: #70()\n+      0: #186()\n         org.junit.jupiter.api.Test\n \n   public void constructorThrowsOnNonSplitZipFiles() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=3, args_size=1\n-         0: new           #5                  // class java/util/ArrayList\n+         0: new           #19                 // class java/util/ArrayList\n          3: dup\n-         4: invokespecial #6                  // Method java/util/ArrayList.\"<init>\":()V\n+         4: invokespecial #21                 // Method java/util/ArrayList.\"<init>\":()V\n          7: astore_1\n-         8: ldc           #7                  // String COMPRESS-189.zip\n-        10: invokestatic  #8                  // Method org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n+         8: ldc           #22                 // String COMPRESS-189.zip\n+        10: invokestatic  #24                 // Method org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n         13: astore_2\n         14: aload_1\n         15: aload_2\n-        16: invokevirtual #9                  // Method java/io/File.toPath:()Ljava/nio/file/Path;\n+        16: invokevirtual #30                 // Method java/io/File.toPath:()Ljava/nio/file/Path;\n         19: iconst_1\n-        20: anewarray     #10                 // class java/nio/file/OpenOption\n+        20: anewarray     #36                 // class java/nio/file/OpenOption\n         23: dup\n         24: iconst_0\n-        25: getstatic     #11                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;\n+        25: getstatic     #38                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;\n         28: aastore\n-        29: invokestatic  #12                 // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n-        32: invokeinterface #13,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        29: invokestatic  #44                 // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n+        32: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         37: pop\n-        38: ldc           #14                 // class java/io/IOException\n+        38: ldc           #56                 // class java/io/IOException\n         40: aload_1\n-        41: invokedynamic #15,  0             // InvokeDynamic #1:run:(Ljava/util/List;)Lorg/junit/function/ThrowingRunnable;\n-        46: invokestatic  #4                  // Method org/junit/Assert.assertThrows:(Ljava/lang/Class;Lorg/junit/function/ThrowingRunnable;)Ljava/lang/Throwable;\n+        41: invokedynamic #58,  0             // InvokeDynamic #1:run:(Ljava/util/List;)Lorg/junit/function/ThrowingRunnable;\n+        46: invokestatic  #13                 // Method org/junit/Assert.assertThrows:(Ljava/lang/Class;Lorg/junit/function/ThrowingRunnable;)Ljava/lang/Throwable;\n         49: pop\n         50: return\n       LineNumberTable:\n         line 48: 0\n         line 49: 8\n         line 50: 14\n         line 51: 38\n@@ -380,44 +380,44 @@\n            14      37     2  file   Ljava/io/File;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             8      43     1 channels   Ljava/util/List<Ljava/nio/channels/SeekableByteChannel;>;\n     Exceptions:\n       throws java.io.IOException\n     RuntimeVisibleAnnotations:\n-      0: #70()\n+      0: #186()\n         org.junit.jupiter.api.Test\n \n   public void channelsPositionIsZeroAfterConstructor() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=1\n          0: aload_0\n-         1: invokespecial #16                 // Method getSplitZipChannels:()Ljava/util/List;\n+         1: invokespecial #61                 // Method getSplitZipChannels:()Ljava/util/List;\n          4: astore_1\n-         5: new           #17                 // class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n+         5: new           #67                 // class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n          8: dup\n          9: aload_1\n-        10: invokespecial #18                 // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.\"<init>\":(Ljava/util/List;)V\n+        10: invokespecial #69                 // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.\"<init>\":(Ljava/util/List;)V\n         13: pop\n         14: aload_1\n-        15: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+        15: invokeinterface #72,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n         20: astore_2\n         21: aload_2\n-        22: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        22: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         27: ifeq          53\n         30: aload_2\n-        31: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        36: checkcast     #22                 // class java/nio/channels/SeekableByteChannel\n+        31: invokeinterface #82,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        36: checkcast     #86                 // class java/nio/channels/SeekableByteChannel\n         39: astore_3\n         40: lconst_0\n         41: aload_3\n-        42: invokeinterface #23,  1           // InterfaceMethod java/nio/channels/SeekableByteChannel.position:()J\n-        47: invokestatic  #24                 // Method org/junit/Assert.assertEquals:(JJ)V\n+        42: invokeinterface #88,  1           // InterfaceMethod java/nio/channels/SeekableByteChannel.position:()J\n+        47: invokestatic  #92                 // Method org/junit/Assert.assertEquals:(JJ)V\n         50: goto          21\n         53: return\n       LineNumberTable:\n         line 56: 0\n         line 57: 5\n         line 58: 14\n         line 59: 40\n@@ -436,143 +436,143 @@\n           offset_delta = 21\n           locals = [ class java/util/List, class java/util/Iterator ]\n         frame_type = 250 /* chop */\n           offset_delta = 31\n     Exceptions:\n       throws java.io.IOException\n     RuntimeVisibleAnnotations:\n-      0: #70()\n+      0: #186()\n         org.junit.jupiter.api.Test\n \n   public void forOrderedSeekableByteChannelsThrowsOnNullArg() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: ldc           #2                  // class java/lang/NullPointerException\n-         2: invokedynamic #25,  0             // InvokeDynamic #2:run:()Lorg/junit/function/ThrowingRunnable;\n-         7: invokestatic  #4                  // Method org/junit/Assert.assertThrows:(Ljava/lang/Class;Lorg/junit/function/ThrowingRunnable;)Ljava/lang/Throwable;\n+         0: ldc           #7                  // class java/lang/NullPointerException\n+         2: invokedynamic #96,  0             // InvokeDynamic #2:run:()Lorg/junit/function/ThrowingRunnable;\n+         7: invokestatic  #13                 // Method org/junit/Assert.assertThrows:(Ljava/lang/Class;Lorg/junit/function/ThrowingRunnable;)Ljava/lang/Throwable;\n         10: pop\n         11: return\n       LineNumberTable:\n         line 65: 0\n         line 66: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest;\n     Exceptions:\n       throws java.io.IOException\n     RuntimeVisibleAnnotations:\n-      0: #70()\n+      0: #186()\n         org.junit.jupiter.api.Test\n \n   public void forOrderedSeekableByteChannelsOfTwoParametersThrowsOnNullArg() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: ldc           #2                  // class java/lang/NullPointerException\n-         2: invokedynamic #26,  0             // InvokeDynamic #3:run:()Lorg/junit/function/ThrowingRunnable;\n-         7: invokestatic  #4                  // Method org/junit/Assert.assertThrows:(Ljava/lang/Class;Lorg/junit/function/ThrowingRunnable;)Ljava/lang/Throwable;\n+         0: ldc           #7                  // class java/lang/NullPointerException\n+         2: invokedynamic #97,  0             // InvokeDynamic #3:run:()Lorg/junit/function/ThrowingRunnable;\n+         7: invokestatic  #13                 // Method org/junit/Assert.assertThrows:(Ljava/lang/Class;Lorg/junit/function/ThrowingRunnable;)Ljava/lang/Throwable;\n         10: pop\n         11: return\n       LineNumberTable:\n         line 70: 0\n         line 71: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest;\n     Exceptions:\n       throws java.io.IOException\n     RuntimeVisibleAnnotations:\n-      0: #70()\n+      0: #186()\n         org.junit.jupiter.api.Test\n \n   public void forOrderedSeekableByteChannelsReturnCorrectClass() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=9, args_size=1\n-         0: ldc           #27                 // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z01\n-         2: invokestatic  #8                  // Method org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n+         0: ldc           #98                 // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z01\n+         2: invokestatic  #24                 // Method org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n          5: astore_1\n          6: aload_1\n-         7: invokevirtual #9                  // Method java/io/File.toPath:()Ljava/nio/file/Path;\n+         7: invokevirtual #30                 // Method java/io/File.toPath:()Ljava/nio/file/Path;\n         10: iconst_1\n-        11: anewarray     #10                 // class java/nio/file/OpenOption\n+        11: anewarray     #36                 // class java/nio/file/OpenOption\n         14: dup\n         15: iconst_0\n-        16: getstatic     #11                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;\n+        16: getstatic     #38                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;\n         19: aastore\n-        20: invokestatic  #12                 // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n+        20: invokestatic  #44                 // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n         23: astore_2\n-        24: ldc           #28                 // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z02\n-        26: invokestatic  #8                  // Method org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n+        24: ldc           #100                // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z02\n+        26: invokestatic  #24                 // Method org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n         29: astore_3\n         30: aload_3\n-        31: invokevirtual #9                  // Method java/io/File.toPath:()Ljava/nio/file/Path;\n+        31: invokevirtual #30                 // Method java/io/File.toPath:()Ljava/nio/file/Path;\n         34: iconst_1\n-        35: anewarray     #10                 // class java/nio/file/OpenOption\n+        35: anewarray     #36                 // class java/nio/file/OpenOption\n         38: dup\n         39: iconst_0\n-        40: getstatic     #11                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;\n+        40: getstatic     #38                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;\n         43: aastore\n-        44: invokestatic  #12                 // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n+        44: invokestatic  #44                 // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n         47: astore        4\n-        49: ldc           #29                 // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.zip\n-        51: invokestatic  #8                  // Method org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n+        49: ldc           #102                // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.zip\n+        51: invokestatic  #24                 // Method org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n         54: astore        5\n         56: aload         5\n-        58: invokevirtual #9                  // Method java/io/File.toPath:()Ljava/nio/file/Path;\n+        58: invokevirtual #30                 // Method java/io/File.toPath:()Ljava/nio/file/Path;\n         61: iconst_1\n-        62: anewarray     #10                 // class java/nio/file/OpenOption\n+        62: anewarray     #36                 // class java/nio/file/OpenOption\n         65: dup\n         66: iconst_0\n-        67: getstatic     #11                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;\n+        67: getstatic     #38                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;\n         70: aastore\n-        71: invokestatic  #12                 // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n+        71: invokestatic  #44                 // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n         74: astore        6\n-        76: new           #5                  // class java/util/ArrayList\n+        76: new           #19                 // class java/util/ArrayList\n         79: dup\n-        80: invokespecial #6                  // Method java/util/ArrayList.\"<init>\":()V\n+        80: invokespecial #21                 // Method java/util/ArrayList.\"<init>\":()V\n         83: astore        7\n         85: aload         7\n         87: aload_2\n-        88: invokeinterface #13,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        88: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         93: pop\n         94: aload         7\n         96: aload         4\n-        98: invokeinterface #13,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        98: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n        103: pop\n        104: aload         6\n        106: aload         7\n-       108: invokestatic  #30                 // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forOrderedSeekableByteChannels:(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n+       108: invokestatic  #104                // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forOrderedSeekableByteChannels:(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n        111: astore        8\n        113: aload         8\n-       115: instanceof    #17                 // class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n-       118: invokestatic  #31                 // Method org/junit/Assert.assertTrue:(Z)V\n+       115: instanceof    #67                 // class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n+       118: invokestatic  #108                // Method org/junit/Assert.assertTrue:(Z)V\n        121: iconst_3\n-       122: anewarray     #22                 // class java/nio/channels/SeekableByteChannel\n+       122: anewarray     #86                 // class java/nio/channels/SeekableByteChannel\n        125: dup\n        126: iconst_0\n        127: aload_2\n        128: aastore\n        129: dup\n        130: iconst_1\n        131: aload         4\n        133: aastore\n        134: dup\n        135: iconst_2\n        136: aload         6\n        138: aastore\n-       139: invokestatic  #32                 // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forOrderedSeekableByteChannels:([Ljava/nio/channels/SeekableByteChannel;)Ljava/nio/channels/SeekableByteChannel;\n+       139: invokestatic  #112                // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forOrderedSeekableByteChannels:([Ljava/nio/channels/SeekableByteChannel;)Ljava/nio/channels/SeekableByteChannel;\n        142: astore        8\n        144: aload         8\n-       146: instanceof    #17                 // class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n-       149: invokestatic  #31                 // Method org/junit/Assert.assertTrue:(Z)V\n+       146: instanceof    #67                 // class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n+       149: invokestatic  #108                // Method org/junit/Assert.assertTrue:(Z)V\n        152: return\n       LineNumberTable:\n         line 75: 0\n         line 76: 6\n         line 78: 24\n         line 79: 30\n         line 81: 49\n@@ -598,151 +598,151 @@\n           113      40     8 channel   Ljava/nio/channels/SeekableByteChannel;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n            85      68     7 channels   Ljava/util/List<Ljava/nio/channels/SeekableByteChannel;>;\n     Exceptions:\n       throws java.io.IOException\n     RuntimeVisibleAnnotations:\n-      0: #70()\n+      0: #186()\n         org.junit.jupiter.api.Test\n \n   public void forOrderedSeekableByteChannelsReturnsIdentityForSingleElement() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=1\n-         0: new           #33                 // class org/apache/commons/compress/utils/SeekableInMemoryByteChannel\n+         0: new           #115                // class org/apache/commons/compress/utils/SeekableInMemoryByteChannel\n          3: dup\n-         4: getstatic     #34                 // Field org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B\n-         7: invokespecial #35                 // Method org/apache/commons/compress/utils/SeekableInMemoryByteChannel.\"<init>\":([B)V\n+         4: getstatic     #117                // Field org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B\n+         7: invokespecial #123                // Method org/apache/commons/compress/utils/SeekableInMemoryByteChannel.\"<init>\":([B)V\n         10: astore_1\n         11: iconst_1\n-        12: anewarray     #22                 // class java/nio/channels/SeekableByteChannel\n+        12: anewarray     #86                 // class java/nio/channels/SeekableByteChannel\n         15: dup\n         16: iconst_0\n         17: aload_1\n         18: aastore\n-        19: invokestatic  #32                 // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forOrderedSeekableByteChannels:([Ljava/nio/channels/SeekableByteChannel;)Ljava/nio/channels/SeekableByteChannel;\n+        19: invokestatic  #112                // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forOrderedSeekableByteChannels:([Ljava/nio/channels/SeekableByteChannel;)Ljava/nio/channels/SeekableByteChannel;\n         22: astore_2\n         23: aload_1\n         24: aload_2\n-        25: invokestatic  #36                 // Method org/junit/Assert.assertSame:(Ljava/lang/Object;Ljava/lang/Object;)V\n+        25: invokestatic  #126                // Method org/junit/Assert.assertSame:(Ljava/lang/Object;Ljava/lang/Object;)V\n         28: return\n       LineNumberTable:\n         line 97: 0\n         line 98: 11\n         line 99: 23\n         line 100: 28\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      29     0  this   Lorg/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest;\n            11      18     1 emptyChannel   Ljava/nio/channels/SeekableByteChannel;\n            23       6     2 channel   Ljava/nio/channels/SeekableByteChannel;\n     Exceptions:\n       throws java.io.IOException\n     RuntimeVisibleAnnotations:\n-      0: #70()\n+      0: #186()\n         org.junit.jupiter.api.Test\n \n   public void forFilesThrowsOnNullArg() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: ldc           #2                  // class java/lang/NullPointerException\n-         2: invokedynamic #37,  0             // InvokeDynamic #4:run:()Lorg/junit/function/ThrowingRunnable;\n-         7: invokestatic  #4                  // Method org/junit/Assert.assertThrows:(Ljava/lang/Class;Lorg/junit/function/ThrowingRunnable;)Ljava/lang/Throwable;\n+         0: ldc           #7                  // class java/lang/NullPointerException\n+         2: invokedynamic #130,  0            // InvokeDynamic #4:run:()Lorg/junit/function/ThrowingRunnable;\n+         7: invokestatic  #13                 // Method org/junit/Assert.assertThrows:(Ljava/lang/Class;Lorg/junit/function/ThrowingRunnable;)Ljava/lang/Throwable;\n         10: pop\n         11: return\n       LineNumberTable:\n         line 104: 0\n         line 105: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest;\n     Exceptions:\n       throws java.io.IOException\n     RuntimeVisibleAnnotations:\n-      0: #70()\n+      0: #186()\n         org.junit.jupiter.api.Test\n \n   public void forFilesOfTwoParametersThrowsOnNullArg() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: ldc           #2                  // class java/lang/NullPointerException\n-         2: invokedynamic #38,  0             // InvokeDynamic #5:run:()Lorg/junit/function/ThrowingRunnable;\n-         7: invokestatic  #4                  // Method org/junit/Assert.assertThrows:(Ljava/lang/Class;Lorg/junit/function/ThrowingRunnable;)Ljava/lang/Throwable;\n+         0: ldc           #7                  // class java/lang/NullPointerException\n+         2: invokedynamic #131,  0            // InvokeDynamic #5:run:()Lorg/junit/function/ThrowingRunnable;\n+         7: invokestatic  #13                 // Method org/junit/Assert.assertThrows:(Ljava/lang/Class;Lorg/junit/function/ThrowingRunnable;)Ljava/lang/Throwable;\n         10: pop\n         11: return\n       LineNumberTable:\n         line 109: 0\n         line 110: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest;\n     Exceptions:\n       throws java.io.IOException\n     RuntimeVisibleAnnotations:\n-      0: #70()\n+      0: #186()\n         org.junit.jupiter.api.Test\n \n   public void forFilesReturnCorrectClass() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=6, args_size=1\n-         0: ldc           #27                 // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z01\n-         2: invokestatic  #8                  // Method org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n+         0: ldc           #98                 // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z01\n+         2: invokestatic  #24                 // Method org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n          5: astore_1\n-         6: ldc           #28                 // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z02\n-         8: invokestatic  #8                  // Method org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n+         6: ldc           #100                // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z02\n+         8: invokestatic  #24                 // Method org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n         11: astore_2\n-        12: ldc           #27                 // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z01\n-        14: invokestatic  #8                  // Method org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n+        12: ldc           #98                 // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z01\n+        14: invokestatic  #24                 // Method org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n         17: astore_3\n-        18: new           #5                  // class java/util/ArrayList\n+        18: new           #19                 // class java/util/ArrayList\n         21: dup\n-        22: invokespecial #6                  // Method java/util/ArrayList.\"<init>\":()V\n+        22: invokespecial #21                 // Method java/util/ArrayList.\"<init>\":()V\n         25: astore        4\n         27: aload         4\n         29: aload_1\n-        30: invokevirtual #39                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+        30: invokevirtual #132                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n         33: pop\n         34: aload         4\n         36: aload_2\n-        37: invokevirtual #39                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+        37: invokevirtual #132                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n         40: pop\n         41: aload_3\n         42: aload         4\n-        44: invokestatic  #40                 // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forFiles:(Ljava/io/File;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n+        44: invokestatic  #133                // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forFiles:(Ljava/io/File;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n         47: astore        5\n         49: aload         5\n-        51: instanceof    #17                 // class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n-        54: invokestatic  #31                 // Method org/junit/Assert.assertTrue:(Z)V\n+        51: instanceof    #67                 // class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n+        54: invokestatic  #108                // Method org/junit/Assert.assertTrue:(Z)V\n         57: iconst_3\n-        58: anewarray     #41                 // class java/io/File\n+        58: anewarray     #31                 // class java/io/File\n         61: dup\n         62: iconst_0\n         63: aload_1\n         64: aastore\n         65: dup\n         66: iconst_1\n         67: aload_2\n         68: aastore\n         69: dup\n         70: iconst_2\n         71: aload_3\n         72: aastore\n-        73: invokestatic  #42                 // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forFiles:([Ljava/io/File;)Ljava/nio/channels/SeekableByteChannel;\n+        73: invokestatic  #137                // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forFiles:([Ljava/io/File;)Ljava/nio/channels/SeekableByteChannel;\n         76: astore        5\n         78: aload         5\n-        80: instanceof    #17                 // class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n-        83: invokestatic  #31                 // Method org/junit/Assert.assertTrue:(Z)V\n+        80: instanceof    #67                 // class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n+        83: invokestatic  #108                // Method org/junit/Assert.assertTrue:(Z)V\n         86: return\n       LineNumberTable:\n         line 114: 0\n         line 115: 6\n         line 116: 12\n         line 118: 18\n         line 119: 27\n@@ -762,100 +762,100 @@\n            49      38     5 channel   Ljava/nio/channels/SeekableByteChannel;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n            27      60     4  list   Ljava/util/ArrayList<Ljava/io/File;>;\n     Exceptions:\n       throws java.io.IOException\n     RuntimeVisibleAnnotations:\n-      0: #70()\n+      0: #186()\n         org.junit.jupiter.api.Test\n \n   public void buildFromLastSplitSegmentThrowsOnNotZipFile() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n-         0: ldc           #27                 // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z01\n-         2: invokestatic  #8                  // Method org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n+         0: ldc           #98                 // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z01\n+         2: invokestatic  #24                 // Method org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n          5: astore_1\n-         6: ldc           #43                 // class java/lang/IllegalArgumentException\n+         6: ldc           #140                // class java/lang/IllegalArgumentException\n          8: aload_1\n-         9: invokedynamic #44,  0             // InvokeDynamic #6:run:(Ljava/io/File;)Lorg/junit/function/ThrowingRunnable;\n-        14: invokestatic  #4                  // Method org/junit/Assert.assertThrows:(Ljava/lang/Class;Lorg/junit/function/ThrowingRunnable;)Ljava/lang/Throwable;\n+         9: invokedynamic #142,  0            // InvokeDynamic #6:run:(Ljava/io/File;)Lorg/junit/function/ThrowingRunnable;\n+        14: invokestatic  #13                 // Method org/junit/Assert.assertThrows:(Ljava/lang/Class;Lorg/junit/function/ThrowingRunnable;)Ljava/lang/Throwable;\n         17: pop\n         18: return\n       LineNumberTable:\n         line 131: 0\n         line 132: 6\n         line 133: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0  this   Lorg/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest;\n             6      13     1 lastFile   Ljava/io/File;\n     Exceptions:\n       throws java.io.IOException\n     RuntimeVisibleAnnotations:\n-      0: #70()\n+      0: #186()\n         org.junit.jupiter.api.Test\n \n   public void positionToSomeZipSplitSegment() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=13, args_size=1\n-         0: ldc           #27                 // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z01\n-         2: invokestatic  #8                  // Method org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n+         0: ldc           #98                 // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z01\n+         2: invokestatic  #24                 // Method org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n          5: astore_1\n          6: aload_1\n-         7: invokevirtual #45                 // Method java/io/File.length:()J\n+         7: invokevirtual #145                // Method java/io/File.length:()J\n         10: l2i\n         11: istore_2\n-        12: ldc           #28                 // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z02\n-        14: invokestatic  #8                  // Method org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n+        12: ldc           #100                // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z02\n+        14: invokestatic  #24                 // Method org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n         17: astore_3\n         18: aload_3\n-        19: invokevirtual #45                 // Method java/io/File.length:()J\n+        19: invokevirtual #145                // Method java/io/File.length:()J\n         22: l2i\n         23: istore        4\n-        25: ldc           #29                 // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.zip\n-        27: invokestatic  #8                  // Method org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n+        25: ldc           #102                // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.zip\n+        27: invokestatic  #24                 // Method org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n         30: astore        5\n         32: aload         5\n-        34: invokevirtual #45                 // Method java/io/File.length:()J\n+        34: invokevirtual #145                // Method java/io/File.length:()J\n         37: l2i\n         38: istore        6\n-        40: new           #46                 // class java/util/Random\n+        40: new           #148                // class java/util/Random\n         43: dup\n-        44: invokespecial #47                 // Method java/util/Random.\"<init>\":()V\n+        44: invokespecial #150                // Method java/util/Random.\"<init>\":()V\n         47: astore        7\n         49: aload         7\n         51: iconst_3\n-        52: invokevirtual #48                 // Method java/util/Random.nextInt:(I)I\n+        52: invokevirtual #151                // Method java/util/Random.nextInt:(I)I\n         55: istore        8\n         57: iload         8\n         59: iconst_2\n         60: if_icmpge     72\n         63: aload         7\n         65: iload_2\n-        66: invokevirtual #48                 // Method java/util/Random.nextInt:(I)I\n+        66: invokevirtual #151                // Method java/util/Random.nextInt:(I)I\n         69: goto          79\n         72: aload         7\n         74: iload         6\n-        76: invokevirtual #48                 // Method java/util/Random.nextInt:(I)I\n+        76: invokevirtual #151                // Method java/util/Random.nextInt:(I)I\n         79: istore        9\n         81: aload         5\n-        83: invokestatic  #49                 // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.buildFromLastSplitSegment:(Ljava/io/File;)Ljava/nio/channels/SeekableByteChannel;\n-        86: checkcast     #17                 // class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n+        83: invokestatic  #155                // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.buildFromLastSplitSegment:(Ljava/io/File;)Ljava/nio/channels/SeekableByteChannel;\n+        86: checkcast     #67                 // class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n         89: astore        10\n         91: aload         10\n         93: iload         8\n         95: i2l\n         96: iload         9\n         98: i2l\n-        99: invokevirtual #50                 // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.position:(JJ)Ljava/nio/channels/SeekableByteChannel;\n+        99: invokevirtual #159                // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.position:(JJ)Ljava/nio/channels/SeekableByteChannel;\n        102: pop\n        103: iload         9\n        105: i2l\n        106: lstore        11\n        108: lload         11\n        110: iload         8\n        112: ifle          120\n@@ -873,16 +873,16 @@\n        134: i2l\n        135: goto          139\n        138: lconst_0\n        139: ladd\n        140: lstore        11\n        142: lload         11\n        144: aload         10\n-       146: invokevirtual #51                 // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.position:()J\n-       149: invokestatic  #24                 // Method org/junit/Assert.assertEquals:(JJ)V\n+       146: invokevirtual #162                // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.position:()J\n+       149: invokestatic  #92                 // Method org/junit/Assert.assertEquals:(JJ)V\n        152: return\n       LineNumberTable:\n         line 137: 0\n         line 138: 6\n         line 140: 12\n         line 141: 18\n         line 143: 25\n@@ -931,70 +931,70 @@\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = [ class org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest, class java/io/File, int, class java/io/File, int, class java/io/File, int, class java/util/Random, int, int, class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel, long ]\n           stack = [ long, long ]\n     Exceptions:\n       throws java.io.IOException\n     RuntimeVisibleAnnotations:\n-      0: #70()\n+      0: #186()\n         org.junit.jupiter.api.Test\n \n   private java.util.List<java.nio.channels.SeekableByteChannel> getSplitZipChannels() throws java.io.IOException;\n     descriptor: ()Ljava/util/List;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=6, locals=5, args_size=1\n-         0: new           #5                  // class java/util/ArrayList\n+         0: new           #19                 // class java/util/ArrayList\n          3: dup\n-         4: invokespecial #6                  // Method java/util/ArrayList.\"<init>\":()V\n+         4: invokespecial #21                 // Method java/util/ArrayList.\"<init>\":()V\n          7: astore_1\n-         8: ldc           #27                 // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z01\n-        10: invokestatic  #8                  // Method org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n+         8: ldc           #98                 // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z01\n+        10: invokestatic  #24                 // Method org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n         13: astore_2\n         14: aload_1\n         15: aload_2\n-        16: invokevirtual #9                  // Method java/io/File.toPath:()Ljava/nio/file/Path;\n+        16: invokevirtual #30                 // Method java/io/File.toPath:()Ljava/nio/file/Path;\n         19: iconst_1\n-        20: anewarray     #10                 // class java/nio/file/OpenOption\n+        20: anewarray     #36                 // class java/nio/file/OpenOption\n         23: dup\n         24: iconst_0\n-        25: getstatic     #11                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;\n+        25: getstatic     #38                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;\n         28: aastore\n-        29: invokestatic  #12                 // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n-        32: invokeinterface #13,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        29: invokestatic  #44                 // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n+        32: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         37: pop\n-        38: ldc           #28                 // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z02\n-        40: invokestatic  #8                  // Method org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n+        38: ldc           #100                // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z02\n+        40: invokestatic  #24                 // Method org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n         43: astore_3\n         44: aload_1\n         45: aload_3\n-        46: invokevirtual #9                  // Method java/io/File.toPath:()Ljava/nio/file/Path;\n+        46: invokevirtual #30                 // Method java/io/File.toPath:()Ljava/nio/file/Path;\n         49: iconst_1\n-        50: anewarray     #10                 // class java/nio/file/OpenOption\n+        50: anewarray     #36                 // class java/nio/file/OpenOption\n         53: dup\n         54: iconst_0\n-        55: getstatic     #11                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;\n+        55: getstatic     #38                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;\n         58: aastore\n-        59: invokestatic  #12                 // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n-        62: invokeinterface #13,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        59: invokestatic  #44                 // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n+        62: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         67: pop\n-        68: ldc           #29                 // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.zip\n-        70: invokestatic  #8                  // Method org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n+        68: ldc           #102                // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.zip\n+        70: invokestatic  #24                 // Method org/apache/commons/compress/AbstractTestCase.getFile:(Ljava/lang/String;)Ljava/io/File;\n         73: astore        4\n         75: aload_1\n         76: aload         4\n-        78: invokevirtual #9                  // Method java/io/File.toPath:()Ljava/nio/file/Path;\n+        78: invokevirtual #30                 // Method java/io/File.toPath:()Ljava/nio/file/Path;\n         81: iconst_1\n-        82: anewarray     #10                 // class java/nio/file/OpenOption\n+        82: anewarray     #36                 // class java/nio/file/OpenOption\n         85: dup\n         86: iconst_0\n-        87: getstatic     #11                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;\n+        87: getstatic     #38                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;\n         90: aastore\n-        91: invokestatic  #12                 // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n-        94: invokeinterface #13,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        91: invokestatic  #44                 // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n+        94: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         99: pop\n        100: aload_1\n        101: areturn\n       LineNumberTable:\n         line 161: 0\n         line 162: 8\n         line 163: 14\n@@ -1011,112 +1011,112 @@\n            44      58     3 file2   Ljava/io/File;\n            75      27     4 lastFile   Ljava/io/File;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             8      94     1 channels   Ljava/util/List<Ljava/nio/channels/SeekableByteChannel;>;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #119                         // ()Ljava/util/List<Ljava/nio/channels/SeekableByteChannel;>;\n+    Signature: #231                         // ()Ljava/util/List<Ljava/nio/channels/SeekableByteChannel;>;\n \n   public void forPathsThrowsOnNullArg() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: ldc           #2                  // class java/lang/NullPointerException\n-         2: invokedynamic #52,  0             // InvokeDynamic #7:run:()Lorg/junit/function/ThrowingRunnable;\n-         7: invokestatic  #4                  // Method org/junit/Assert.assertThrows:(Ljava/lang/Class;Lorg/junit/function/ThrowingRunnable;)Ljava/lang/Throwable;\n+         0: ldc           #7                  // class java/lang/NullPointerException\n+         2: invokedynamic #163,  0            // InvokeDynamic #7:run:()Lorg/junit/function/ThrowingRunnable;\n+         7: invokestatic  #13                 // Method org/junit/Assert.assertThrows:(Ljava/lang/Class;Lorg/junit/function/ThrowingRunnable;)Ljava/lang/Throwable;\n         10: pop\n         11: return\n       LineNumberTable:\n         line 176: 0\n         line 177: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest;\n     Exceptions:\n       throws java.io.IOException\n     RuntimeVisibleAnnotations:\n-      0: #70()\n+      0: #186()\n         org.junit.jupiter.api.Test\n \n   public void forPathsOfTwoParametersThrowsOnNullArg() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: ldc           #2                  // class java/lang/NullPointerException\n-         2: invokedynamic #53,  0             // InvokeDynamic #8:run:()Lorg/junit/function/ThrowingRunnable;\n-         7: invokestatic  #4                  // Method org/junit/Assert.assertThrows:(Ljava/lang/Class;Lorg/junit/function/ThrowingRunnable;)Ljava/lang/Throwable;\n+         0: ldc           #7                  // class java/lang/NullPointerException\n+         2: invokedynamic #164,  0            // InvokeDynamic #8:run:()Lorg/junit/function/ThrowingRunnable;\n+         7: invokestatic  #13                 // Method org/junit/Assert.assertThrows:(Ljava/lang/Class;Lorg/junit/function/ThrowingRunnable;)Ljava/lang/Throwable;\n         10: pop\n         11: return\n       LineNumberTable:\n         line 181: 0\n         line 182: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest;\n     Exceptions:\n       throws java.io.IOException\n     RuntimeVisibleAnnotations:\n-      0: #70()\n+      0: #186()\n         org.junit.jupiter.api.Test\n \n   public void forPathsReturnCorrectClass() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=6, args_size=1\n-         0: ldc           #27                 // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z01\n-         2: invokestatic  #54                 // Method org/apache/commons/compress/AbstractTestCase.getPath:(Ljava/lang/String;)Ljava/nio/file/Path;\n+         0: ldc           #98                 // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z01\n+         2: invokestatic  #165                // Method org/apache/commons/compress/AbstractTestCase.getPath:(Ljava/lang/String;)Ljava/nio/file/Path;\n          5: astore_1\n-         6: ldc           #28                 // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z02\n-         8: invokestatic  #54                 // Method org/apache/commons/compress/AbstractTestCase.getPath:(Ljava/lang/String;)Ljava/nio/file/Path;\n+         6: ldc           #100                // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.z02\n+         8: invokestatic  #165                // Method org/apache/commons/compress/AbstractTestCase.getPath:(Ljava/lang/String;)Ljava/nio/file/Path;\n         11: astore_2\n-        12: ldc           #29                 // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.zip\n-        14: invokestatic  #54                 // Method org/apache/commons/compress/AbstractTestCase.getPath:(Ljava/lang/String;)Ljava/nio/file/Path;\n+        12: ldc           #102                // String COMPRESS-477/split_zip_created_by_zip/split_zip_created_by_zip.zip\n+        14: invokestatic  #165                // Method org/apache/commons/compress/AbstractTestCase.getPath:(Ljava/lang/String;)Ljava/nio/file/Path;\n         17: astore_3\n-        18: new           #5                  // class java/util/ArrayList\n+        18: new           #19                 // class java/util/ArrayList\n         21: dup\n-        22: invokespecial #6                  // Method java/util/ArrayList.\"<init>\":()V\n+        22: invokespecial #21                 // Method java/util/ArrayList.\"<init>\":()V\n         25: astore        4\n         27: aload         4\n         29: aload_1\n-        30: invokevirtual #39                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+        30: invokevirtual #132                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n         33: pop\n         34: aload         4\n         36: aload_2\n-        37: invokevirtual #39                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+        37: invokevirtual #132                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n         40: pop\n         41: aload_3\n         42: aload         4\n-        44: invokestatic  #55                 // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forPaths:(Ljava/nio/file/Path;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n+        44: invokestatic  #169                // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forPaths:(Ljava/nio/file/Path;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n         47: astore        5\n         49: aload         5\n-        51: instanceof    #17                 // class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n-        54: invokestatic  #31                 // Method org/junit/Assert.assertTrue:(Z)V\n+        51: instanceof    #67                 // class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n+        54: invokestatic  #108                // Method org/junit/Assert.assertTrue:(Z)V\n         57: iconst_3\n-        58: anewarray     #56                 // class java/nio/file/Path\n+        58: anewarray     #173                // class java/nio/file/Path\n         61: dup\n         62: iconst_0\n         63: aload_1\n         64: aastore\n         65: dup\n         66: iconst_1\n         67: aload_2\n         68: aastore\n         69: dup\n         70: iconst_2\n         71: aload_3\n         72: aastore\n-        73: invokestatic  #57                 // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forPaths:([Ljava/nio/file/Path;)Ljava/nio/channels/SeekableByteChannel;\n+        73: invokestatic  #175                // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forPaths:([Ljava/nio/file/Path;)Ljava/nio/channels/SeekableByteChannel;\n         76: astore        5\n         78: aload         5\n-        80: instanceof    #17                 // class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n-        83: invokestatic  #31                 // Method org/junit/Assert.assertTrue:(Z)V\n+        80: instanceof    #67                 // class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n+        83: invokestatic  #108                // Method org/junit/Assert.assertTrue:(Z)V\n         86: return\n       LineNumberTable:\n         line 186: 0\n         line 187: 6\n         line 188: 12\n         line 190: 18\n         line 191: 27\n@@ -1136,53 +1136,53 @@\n            49      38     5 channel   Ljava/nio/channels/SeekableByteChannel;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n            27      60     4  list   Ljava/util/ArrayList<Ljava/nio/file/Path;>;\n     Exceptions:\n       throws java.io.IOException\n     RuntimeVisibleAnnotations:\n-      0: #70()\n+      0: #186()\n         org.junit.jupiter.api.Test\n \n   private static void lambda$forPathsOfTwoParametersThrowsOnNullArg$8() throws java.lang.Throwable;\n     descriptor: ()V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=0, args_size=0\n          0: aconst_null\n          1: aconst_null\n-         2: invokestatic  #55                 // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forPaths:(Ljava/nio/file/Path;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n+         2: invokestatic  #169                // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forPaths:(Ljava/nio/file/Path;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n          5: pop\n          6: return\n       LineNumberTable:\n         line 181: 0\n     Exceptions:\n       throws java.lang.Throwable\n \n   private static void lambda$forPathsThrowsOnNullArg$7() throws java.lang.Throwable;\n     descriptor: ()V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: aconst_null\n-         1: invokestatic  #57                 // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forPaths:([Ljava/nio/file/Path;)Ljava/nio/channels/SeekableByteChannel;\n+         1: invokestatic  #175                // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forPaths:([Ljava/nio/file/Path;)Ljava/nio/channels/SeekableByteChannel;\n          4: pop\n          5: return\n       LineNumberTable:\n         line 176: 0\n     Exceptions:\n       throws java.lang.Throwable\n \n   private static void lambda$buildFromLastSplitSegmentThrowsOnNotZipFile$6(java.io.File) throws java.lang.Throwable;\n     descriptor: (Ljava/io/File;)V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #49                 // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.buildFromLastSplitSegment:(Ljava/io/File;)Ljava/nio/channels/SeekableByteChannel;\n+         1: invokestatic  #155                // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.buildFromLastSplitSegment:(Ljava/io/File;)Ljava/nio/channels/SeekableByteChannel;\n          4: pop\n          5: return\n       LineNumberTable:\n         line 132: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0 lastFile   Ljava/io/File;\n@@ -1192,74 +1192,74 @@\n   private static void lambda$forFilesOfTwoParametersThrowsOnNullArg$5() throws java.lang.Throwable;\n     descriptor: ()V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=0, args_size=0\n          0: aconst_null\n          1: aconst_null\n-         2: invokestatic  #40                 // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forFiles:(Ljava/io/File;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n+         2: invokestatic  #133                // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forFiles:(Ljava/io/File;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n          5: pop\n          6: return\n       LineNumberTable:\n         line 109: 0\n     Exceptions:\n       throws java.lang.Throwable\n \n   private static void lambda$forFilesThrowsOnNullArg$4() throws java.lang.Throwable;\n     descriptor: ()V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: aconst_null\n-         1: invokestatic  #42                 // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forFiles:([Ljava/io/File;)Ljava/nio/channels/SeekableByteChannel;\n+         1: invokestatic  #137                // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forFiles:([Ljava/io/File;)Ljava/nio/channels/SeekableByteChannel;\n          4: pop\n          5: return\n       LineNumberTable:\n         line 104: 0\n     Exceptions:\n       throws java.lang.Throwable\n \n   private static void lambda$forOrderedSeekableByteChannelsOfTwoParametersThrowsOnNullArg$3() throws java.lang.Throwable;\n     descriptor: ()V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=0, args_size=0\n          0: aconst_null\n          1: aconst_null\n-         2: invokestatic  #30                 // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forOrderedSeekableByteChannels:(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n+         2: invokestatic  #104                // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forOrderedSeekableByteChannels:(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;\n          5: pop\n          6: return\n       LineNumberTable:\n         line 70: 0\n     Exceptions:\n       throws java.lang.Throwable\n \n   private static void lambda$forOrderedSeekableByteChannelsThrowsOnNullArg$2() throws java.lang.Throwable;\n     descriptor: ()V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: aconst_null\n-         1: invokestatic  #32                 // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forOrderedSeekableByteChannels:([Ljava/nio/channels/SeekableByteChannel;)Ljava/nio/channels/SeekableByteChannel;\n+         1: invokestatic  #112                // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.forOrderedSeekableByteChannels:([Ljava/nio/channels/SeekableByteChannel;)Ljava/nio/channels/SeekableByteChannel;\n          4: pop\n          5: return\n       LineNumberTable:\n         line 65: 0\n     Exceptions:\n       throws java.lang.Throwable\n \n   private static void lambda$constructorThrowsOnNonSplitZipFiles$1(java.util.List) throws java.lang.Throwable;\n     descriptor: (Ljava/util/List;)V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: new           #17                 // class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n+         0: new           #67                 // class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n          3: dup\n          4: aload_0\n-         5: invokespecial #18                 // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.\"<init>\":(Ljava/util/List;)V\n+         5: invokespecial #69                 // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.\"<init>\":(Ljava/util/List;)V\n          8: pop\n          9: return\n       LineNumberTable:\n         line 51: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0 channels   Ljava/util/List;\n@@ -1267,67 +1267,67 @@\n       throws java.lang.Throwable\n \n   private static void lambda$constructorThrowsOnNullArg$0() throws java.lang.Throwable;\n     descriptor: ()V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=0, args_size=0\n-         0: new           #17                 // class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n+         0: new           #67                 // class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n          3: dup\n          4: aconst_null\n-         5: invokespecial #18                 // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.\"<init>\":(Ljava/util/List;)V\n+         5: invokespecial #69                 // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.\"<init>\":(Ljava/util/List;)V\n          8: pop\n          9: return\n       LineNumberTable:\n         line 43: 0\n     Exceptions:\n       throws java.lang.Throwable\n }\n SourceFile: \"ZipSplitReadOnlySeekableByteChannelTest.java\"\n-InnerClasses:\n-  public static final #287= #286 of #290; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #142 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #252 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #143 ()V\n-      #144 REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$constructorThrowsOnNullArg$0:()V\n-      #143 ()V\n-  1: #142 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #259 ()V\n+      #260 REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$constructorThrowsOnNullArg$0:()V\n+      #259 ()V\n+  1: #252 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #143 ()V\n-      #160 REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$constructorThrowsOnNonSplitZipFiles$1:(Ljava/util/List;)V\n-      #143 ()V\n-  2: #142 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #259 ()V\n+      #263 REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$constructorThrowsOnNonSplitZipFiles$1:(Ljava/util/List;)V\n+      #259 ()V\n+  2: #252 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #143 ()V\n-      #171 REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forOrderedSeekableByteChannelsThrowsOnNullArg$2:()V\n-      #143 ()V\n-  3: #142 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #259 ()V\n+      #266 REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forOrderedSeekableByteChannelsThrowsOnNullArg$2:()V\n+      #259 ()V\n+  3: #252 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #143 ()V\n-      #172 REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forOrderedSeekableByteChannelsOfTwoParametersThrowsOnNullArg$3:()V\n-      #143 ()V\n-  4: #142 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #259 ()V\n+      #269 REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forOrderedSeekableByteChannelsOfTwoParametersThrowsOnNullArg$3:()V\n+      #259 ()V\n+  4: #252 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #143 ()V\n-      #184 REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forFilesThrowsOnNullArg$4:()V\n-      #143 ()V\n-  5: #142 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #259 ()V\n+      #272 REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forFilesThrowsOnNullArg$4:()V\n+      #259 ()V\n+  5: #252 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #143 ()V\n-      #185 REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forFilesOfTwoParametersThrowsOnNullArg$5:()V\n-      #143 ()V\n-  6: #142 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #259 ()V\n+      #275 REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forFilesOfTwoParametersThrowsOnNullArg$5:()V\n+      #259 ()V\n+  6: #252 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #143 ()V\n-      #190 REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$buildFromLastSplitSegmentThrowsOnNotZipFile$6:(Ljava/io/File;)V\n-      #143 ()V\n-  7: #142 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #259 ()V\n+      #278 REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$buildFromLastSplitSegmentThrowsOnNotZipFile$6:(Ljava/io/File;)V\n+      #259 ()V\n+  7: #252 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #143 ()V\n-      #197 REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forPathsThrowsOnNullArg$7:()V\n-      #143 ()V\n-  8: #142 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #259 ()V\n+      #281 REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forPathsThrowsOnNullArg$7:()V\n+      #259 ()V\n+  8: #252 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #143 ()V\n-      #198 REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forPathsOfTwoParametersThrowsOnNullArg$8:()V\n-      #143 ()V\n+      #259 ()V\n+      #284 REF_invokeStatic org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.lambda$forPathsOfTwoParametersThrowsOnNullArg$8:()V\n+      #259 ()V\n+InnerClasses:\n+  public static final #292= #288 of #290; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
