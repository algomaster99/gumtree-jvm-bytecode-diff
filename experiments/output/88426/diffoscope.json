{"diffoscope-json-version": 1, "source1": "first/Memoizer.class", "source2": "second/Memoizer.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,199 +1,199 @@\n-  SHA-256 checksum c7df3d8d49a244c24933c14529ebead792704b4236d173171fdbbddec784d747\n+  SHA-256 checksum aaa3455729f432ddabe66c1753b47a95b505a7594cc2afada3cad7f648dff91c\n   Compiled from \"Memoizer.java\"\n public class org.apache.commons.lang3.concurrent.Memoizer<I extends java.lang.Object, O extends java.lang.Object> extends java.lang.Object implements org.apache.commons.lang3.concurrent.Computable<I, O>\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #2                          // org/apache/commons/lang3/concurrent/Memoizer\n-  super_class: #12                        // java/lang/Object\n+  this_class: #1                          // org/apache/commons/lang3/concurrent/Memoizer\n+  super_class: #3                         // java/lang/Object\n   interfaces: 1, fields: 3, methods: 5, attributes: 3\n Constant pool:\n-    #1 = Fieldref           #2.#3         // org/apache/commons/lang3/concurrent/Memoizer.computable:Lorg/apache/commons/lang3/concurrent/Computable;\n-    #2 = Class              #4            // org/apache/commons/lang3/concurrent/Memoizer\n-    #3 = NameAndType        #5:#6         // computable:Lorg/apache/commons/lang3/concurrent/Computable;\n-    #4 = Utf8               org/apache/commons/lang3/concurrent/Memoizer\n-    #5 = Utf8               computable\n-    #6 = Utf8               Lorg/apache/commons/lang3/concurrent/Computable;\n-    #7 = Methodref          #2.#8         // org/apache/commons/lang3/concurrent/Memoizer.\"<init>\":(Lorg/apache/commons/lang3/concurrent/Computable;Z)V\n-    #8 = NameAndType        #9:#10        // \"<init>\":(Lorg/apache/commons/lang3/concurrent/Computable;Z)V\n-    #9 = Utf8               <init>\n-   #10 = Utf8               (Lorg/apache/commons/lang3/concurrent/Computable;Z)V\n-   #11 = Methodref          #12.#13       // java/lang/Object.\"<init>\":()V\n-   #12 = Class              #14           // java/lang/Object\n-   #13 = NameAndType        #9:#15        // \"<init>\":()V\n-   #14 = Utf8               java/lang/Object\n-   #15 = Utf8               ()V\n-   #16 = Class              #17           // java/util/concurrent/ConcurrentHashMap\n-   #17 = Utf8               java/util/concurrent/ConcurrentHashMap\n-   #18 = Methodref          #16.#13       // java/util/concurrent/ConcurrentHashMap.\"<init>\":()V\n-   #19 = Fieldref           #2.#20        // org/apache/commons/lang3/concurrent/Memoizer.cache:Ljava/util/concurrent/ConcurrentMap;\n-   #20 = NameAndType        #21:#22       // cache:Ljava/util/concurrent/ConcurrentMap;\n-   #21 = Utf8               cache\n-   #22 = Utf8               Ljava/util/concurrent/ConcurrentMap;\n-   #23 = Fieldref           #2.#24        // org/apache/commons/lang3/concurrent/Memoizer.recalculate:Z\n-   #24 = NameAndType        #25:#26       // recalculate:Z\n-   #25 = Utf8               recalculate\n-   #26 = Utf8               Z\n-   #27 = InterfaceMethodref #28.#29       // java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #28 = Class              #30           // java/util/concurrent/ConcurrentMap\n-   #29 = NameAndType        #31:#32       // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #30 = Utf8               java/util/concurrent/ConcurrentMap\n-   #31 = Utf8               get\n-   #32 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-   #33 = Class              #34           // java/util/concurrent/Future\n-   #34 = Utf8               java/util/concurrent/Future\n-   #35 = Class              #36           // org/apache/commons/lang3/concurrent/Memoizer$1\n-   #36 = Utf8               org/apache/commons/lang3/concurrent/Memoizer$1\n-   #37 = Methodref          #35.#38       // org/apache/commons/lang3/concurrent/Memoizer$1.\"<init>\":(Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)V\n-   #38 = NameAndType        #9:#39        // \"<init>\":(Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)V\n-   #39 = Utf8               (Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)V\n-   #40 = Class              #41           // java/util/concurrent/FutureTask\n-   #41 = Utf8               java/util/concurrent/FutureTask\n-   #42 = Methodref          #40.#43       // java/util/concurrent/FutureTask.\"<init>\":(Ljava/util/concurrent/Callable;)V\n-   #43 = NameAndType        #9:#44        // \"<init>\":(Ljava/util/concurrent/Callable;)V\n-   #44 = Utf8               (Ljava/util/concurrent/Callable;)V\n-   #45 = InterfaceMethodref #28.#46       // java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #46 = NameAndType        #47:#48       // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #47 = Utf8               putIfAbsent\n-   #48 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #49 = Methodref          #40.#50       // java/util/concurrent/FutureTask.run:()V\n-   #50 = NameAndType        #51:#15       // run:()V\n-   #51 = Utf8               run\n-   #52 = InterfaceMethodref #33.#53       // java/util/concurrent/Future.get:()Ljava/lang/Object;\n-   #53 = NameAndType        #31:#54       // get:()Ljava/lang/Object;\n-   #54 = Utf8               ()Ljava/lang/Object;\n-   #55 = Class              #56           // java/util/concurrent/CancellationException\n-   #56 = Utf8               java/util/concurrent/CancellationException\n-   #57 = InterfaceMethodref #28.#58       // java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #58 = NameAndType        #59:#60       // remove:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #59 = Utf8               remove\n-   #60 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #61 = Class              #62           // java/util/concurrent/ExecutionException\n-   #62 = Utf8               java/util/concurrent/ExecutionException\n-   #63 = Methodref          #61.#64       // java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n-   #64 = NameAndType        #65:#66       // getCause:()Ljava/lang/Throwable;\n-   #65 = Utf8               getCause\n-   #66 = Utf8               ()Ljava/lang/Throwable;\n-   #67 = Methodref          #2.#68        // org/apache/commons/lang3/concurrent/Memoizer.launderException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n-   #68 = NameAndType        #69:#70       // launderException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n-   #69 = Utf8               launderException\n-   #70 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n-   #71 = Class              #72           // java/lang/RuntimeException\n-   #72 = Utf8               java/lang/RuntimeException\n-   #73 = Class              #74           // java/lang/Error\n-   #74 = Utf8               java/lang/Error\n-   #75 = Class              #76           // java/lang/IllegalStateException\n-   #76 = Utf8               java/lang/IllegalStateException\n-   #77 = String             #78           // Unchecked exception\n-   #78 = Utf8               Unchecked exception\n-   #79 = Methodref          #75.#80       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #80 = NameAndType        #9:#81        // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #81 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #82 = Class              #83           // org/apache/commons/lang3/concurrent/Computable\n-   #83 = Utf8               org/apache/commons/lang3/concurrent/Computable\n-   #84 = Utf8               Signature\n-   #85 = Utf8               Ljava/util/concurrent/ConcurrentMap<TI;Ljava/util/concurrent/Future<TO;>;>;\n-   #86 = Utf8               Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n-   #87 = Utf8               (Lorg/apache/commons/lang3/concurrent/Computable;)V\n-   #88 = Utf8               Code\n-   #89 = Utf8               LineNumberTable\n-   #90 = Utf8               LocalVariableTable\n-   #91 = Utf8               this\n-   #92 = Utf8               Lorg/apache/commons/lang3/concurrent/Memoizer;\n-   #93 = Utf8               LocalVariableTypeTable\n-   #94 = Utf8               Lorg/apache/commons/lang3/concurrent/Memoizer<TI;TO;>;\n-   #95 = Utf8               (Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;)V\n-   #96 = Utf8               (Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;Z)V\n-   #97 = Utf8               compute\n-   #98 = Utf8               eval\n-   #99 = Utf8               Ljava/util/concurrent/Callable;\n-  #100 = Utf8               futureTask\n-  #101 = Utf8               Ljava/util/concurrent/FutureTask;\n-  #102 = Utf8               e\n-  #103 = Utf8               Ljava/util/concurrent/CancellationException;\n-  #104 = Utf8               Ljava/util/concurrent/ExecutionException;\n-  #105 = Utf8               future\n-  #106 = Utf8               Ljava/util/concurrent/Future;\n-  #107 = Utf8               arg\n-  #108 = Utf8               Ljava/lang/Object;\n-  #109 = Utf8               Ljava/util/concurrent/Callable<TO;>;\n-  #110 = Utf8               Ljava/util/concurrent/FutureTask<TO;>;\n-  #111 = Utf8               Ljava/util/concurrent/Future<TO;>;\n-  #112 = Utf8               TI;\n-  #113 = Utf8               StackMapTable\n-  #114 = Utf8               Exceptions\n-  #115 = Class              #116          // java/lang/InterruptedException\n-  #116 = Utf8               java/lang/InterruptedException\n-  #117 = Utf8               (TI;)TO;\n+    #1 = Class              #2            // org/apache/commons/lang3/concurrent/Memoizer\n+    #2 = Utf8               org/apache/commons/lang3/concurrent/Memoizer\n+    #3 = Class              #4            // java/lang/Object\n+    #4 = Utf8               java/lang/Object\n+    #5 = Class              #6            // org/apache/commons/lang3/concurrent/Computable\n+    #6 = Utf8               org/apache/commons/lang3/concurrent/Computable\n+    #7 = Utf8               cache\n+    #8 = Utf8               Ljava/util/concurrent/ConcurrentMap;\n+    #9 = Utf8               Signature\n+   #10 = Utf8               Ljava/util/concurrent/ConcurrentMap<TI;Ljava/util/concurrent/Future<TO;>;>;\n+   #11 = Utf8               computable\n+   #12 = Utf8               Lorg/apache/commons/lang3/concurrent/Computable;\n+   #13 = Utf8               Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n+   #14 = Utf8               recalculate\n+   #15 = Utf8               Z\n+   #16 = Utf8               <init>\n+   #17 = Utf8               (Lorg/apache/commons/lang3/concurrent/Computable;)V\n+   #18 = Utf8               (Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;)V\n+   #19 = Utf8               Code\n+   #20 = Methodref          #1.#21        // org/apache/commons/lang3/concurrent/Memoizer.\"<init>\":(Lorg/apache/commons/lang3/concurrent/Computable;Z)V\n+   #21 = NameAndType        #16:#22       // \"<init>\":(Lorg/apache/commons/lang3/concurrent/Computable;Z)V\n+   #22 = Utf8               (Lorg/apache/commons/lang3/concurrent/Computable;Z)V\n+   #23 = Utf8               LineNumberTable\n+   #24 = Utf8               LocalVariableTable\n+   #25 = Utf8               this\n+   #26 = Utf8               Lorg/apache/commons/lang3/concurrent/Memoizer;\n+   #27 = Utf8               LocalVariableTypeTable\n+   #28 = Utf8               Lorg/apache/commons/lang3/concurrent/Memoizer<TI;TO;>;\n+   #29 = Utf8               (Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;Z)V\n+   #30 = Methodref          #3.#31        // java/lang/Object.\"<init>\":()V\n+   #31 = NameAndType        #16:#32       // \"<init>\":()V\n+   #32 = Utf8               ()V\n+   #33 = Class              #34           // java/util/concurrent/ConcurrentHashMap\n+   #34 = Utf8               java/util/concurrent/ConcurrentHashMap\n+   #35 = Methodref          #33.#31       // java/util/concurrent/ConcurrentHashMap.\"<init>\":()V\n+   #36 = Fieldref           #1.#37        // org/apache/commons/lang3/concurrent/Memoizer.cache:Ljava/util/concurrent/ConcurrentMap;\n+   #37 = NameAndType        #7:#8         // cache:Ljava/util/concurrent/ConcurrentMap;\n+   #38 = Fieldref           #1.#39        // org/apache/commons/lang3/concurrent/Memoizer.computable:Lorg/apache/commons/lang3/concurrent/Computable;\n+   #39 = NameAndType        #11:#12       // computable:Lorg/apache/commons/lang3/concurrent/Computable;\n+   #40 = Fieldref           #1.#41        // org/apache/commons/lang3/concurrent/Memoizer.recalculate:Z\n+   #41 = NameAndType        #14:#15       // recalculate:Z\n+   #42 = Utf8               compute\n+   #43 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #44 = Utf8               Exceptions\n+   #45 = Class              #46           // java/lang/InterruptedException\n+   #46 = Utf8               java/lang/InterruptedException\n+   #47 = Utf8               (TI;)TO;\n+   #48 = InterfaceMethodref #49.#51       // java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #49 = Class              #50           // java/util/concurrent/ConcurrentMap\n+   #50 = Utf8               java/util/concurrent/ConcurrentMap\n+   #51 = NameAndType        #52:#43       // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #52 = Utf8               get\n+   #53 = Class              #54           // java/util/concurrent/Future\n+   #54 = Utf8               java/util/concurrent/Future\n+   #55 = Class              #56           // org/apache/commons/lang3/concurrent/Memoizer$1\n+   #56 = Utf8               org/apache/commons/lang3/concurrent/Memoizer$1\n+   #57 = Methodref          #55.#58       // org/apache/commons/lang3/concurrent/Memoizer$1.\"<init>\":(Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)V\n+   #58 = NameAndType        #16:#59       // \"<init>\":(Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)V\n+   #59 = Utf8               (Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)V\n+   #60 = Class              #61           // java/util/concurrent/FutureTask\n+   #61 = Utf8               java/util/concurrent/FutureTask\n+   #62 = Methodref          #60.#63       // java/util/concurrent/FutureTask.\"<init>\":(Ljava/util/concurrent/Callable;)V\n+   #63 = NameAndType        #16:#64       // \"<init>\":(Ljava/util/concurrent/Callable;)V\n+   #64 = Utf8               (Ljava/util/concurrent/Callable;)V\n+   #65 = InterfaceMethodref #49.#66       // java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #66 = NameAndType        #67:#68       // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #67 = Utf8               putIfAbsent\n+   #68 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #69 = Methodref          #60.#70       // java/util/concurrent/FutureTask.run:()V\n+   #70 = NameAndType        #71:#32       // run:()V\n+   #71 = Utf8               run\n+   #72 = InterfaceMethodref #53.#73       // java/util/concurrent/Future.get:()Ljava/lang/Object;\n+   #73 = NameAndType        #52:#74       // get:()Ljava/lang/Object;\n+   #74 = Utf8               ()Ljava/lang/Object;\n+   #75 = InterfaceMethodref #49.#76       // java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #76 = NameAndType        #77:#78       // remove:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #77 = Utf8               remove\n+   #78 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #79 = Methodref          #80.#82       // java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n+   #80 = Class              #81           // java/util/concurrent/ExecutionException\n+   #81 = Utf8               java/util/concurrent/ExecutionException\n+   #82 = NameAndType        #83:#84       // getCause:()Ljava/lang/Throwable;\n+   #83 = Utf8               getCause\n+   #84 = Utf8               ()Ljava/lang/Throwable;\n+   #85 = Methodref          #1.#86        // org/apache/commons/lang3/concurrent/Memoizer.launderException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+   #86 = NameAndType        #87:#88       // launderException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+   #87 = Utf8               launderException\n+   #88 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+   #89 = Class              #90           // java/util/concurrent/CancellationException\n+   #90 = Utf8               java/util/concurrent/CancellationException\n+   #91 = Utf8               arg\n+   #92 = Utf8               Ljava/lang/Object;\n+   #93 = Utf8               future\n+   #94 = Utf8               Ljava/util/concurrent/Future;\n+   #95 = Utf8               eval\n+   #96 = Utf8               Ljava/util/concurrent/Callable;\n+   #97 = Utf8               futureTask\n+   #98 = Utf8               Ljava/util/concurrent/FutureTask;\n+   #99 = Utf8               e\n+  #100 = Utf8               Ljava/util/concurrent/CancellationException;\n+  #101 = Utf8               Ljava/util/concurrent/ExecutionException;\n+  #102 = Utf8               TI;\n+  #103 = Utf8               Ljava/util/concurrent/Future<TO;>;\n+  #104 = Utf8               Ljava/util/concurrent/Callable<TO;>;\n+  #105 = Utf8               Ljava/util/concurrent/FutureTask<TO;>;\n+  #106 = Utf8               StackMapTable\n+  #107 = Class              #108          // java/lang/RuntimeException\n+  #108 = Utf8               java/lang/RuntimeException\n+  #109 = Class              #110          // java/lang/Error\n+  #110 = Utf8               java/lang/Error\n+  #111 = Class              #112          // java/lang/IllegalStateException\n+  #112 = Utf8               java/lang/IllegalStateException\n+  #113 = String             #114          // Unchecked exception\n+  #114 = Utf8               Unchecked exception\n+  #115 = Methodref          #111.#116     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #116 = NameAndType        #16:#117      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #117 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n   #118 = Utf8               throwable\n   #119 = Utf8               Ljava/lang/Throwable;\n-  #120 = Utf8               access$000\n+  #120 = Utf8               access$0\n   #121 = Utf8               (Lorg/apache/commons/lang3/concurrent/Memoizer;)Lorg/apache/commons/lang3/concurrent/Computable;\n-  #122 = Utf8               x0\n-  #123 = Utf8               <I:Ljava/lang/Object;O:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n-  #124 = Utf8               SourceFile\n-  #125 = Utf8               Memoizer.java\n-  #126 = Utf8               InnerClasses\n+  #122 = Utf8               SourceFile\n+  #123 = Utf8               Memoizer.java\n+  #124 = Utf8               <I:Ljava/lang/Object;O:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n+  #125 = Utf8               InnerClasses\n {\n   private final java.util.concurrent.ConcurrentMap<I, java.util.concurrent.Future<O>> cache;\n     descriptor: Ljava/util/concurrent/ConcurrentMap;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #85                          // Ljava/util/concurrent/ConcurrentMap<TI;Ljava/util/concurrent/Future<TO;>;>;\n+    Signature: #10                          // Ljava/util/concurrent/ConcurrentMap<TI;Ljava/util/concurrent/Future<TO;>;>;\n \n   private final org.apache.commons.lang3.concurrent.Computable<I, O> computable;\n     descriptor: Lorg/apache/commons/lang3/concurrent/Computable;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #86                          // Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n+    Signature: #13                          // Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n \n   private final boolean recalculate;\n     descriptor: Z\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.lang3.concurrent.Memoizer(org.apache.commons.lang3.concurrent.Computable<I, O>);\n     descriptor: (Lorg/apache/commons/lang3/concurrent/Computable;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Signature: #18                          // (Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;)V\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n-         3: invokespecial #7                  // Method \"<init>\":(Lorg/apache/commons/lang3/concurrent/Computable;Z)V\n+         3: invokespecial #20                 // Method \"<init>\":(Lorg/apache/commons/lang3/concurrent/Computable;Z)V\n          6: return\n       LineNumberTable:\n         line 74: 0\n         line 75: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/lang3/concurrent/Memoizer;\n             0       7     1 computable   Lorg/apache/commons/lang3/concurrent/Computable;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/lang3/concurrent/Memoizer<TI;TO;>;\n             0       7     1 computable   Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n-    Signature: #95                          // (Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;)V\n \n   public org.apache.commons.lang3.concurrent.Memoizer(org.apache.commons.lang3.concurrent.Computable<I, O>, boolean);\n     descriptor: (Lorg/apache/commons/lang3/concurrent/Computable;Z)V\n     flags: (0x0001) ACC_PUBLIC\n+    Signature: #29                          // (Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;Z)V\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #11                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #30                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: new           #16                 // class java/util/concurrent/ConcurrentHashMap\n+         5: new           #33                 // class java/util/concurrent/ConcurrentHashMap\n          8: dup\n-         9: invokespecial #18                 // Method java/util/concurrent/ConcurrentHashMap.\"<init>\":()V\n-        12: putfield      #19                 // Field cache:Ljava/util/concurrent/ConcurrentMap;\n+         9: invokespecial #35                 // Method java/util/concurrent/ConcurrentHashMap.\"<init>\":()V\n+        12: putfield      #36                 // Field cache:Ljava/util/concurrent/ConcurrentMap;\n         15: aload_0\n         16: aload_1\n-        17: putfield      #1                  // Field computable:Lorg/apache/commons/lang3/concurrent/Computable;\n+        17: putfield      #38                 // Field computable:Lorg/apache/commons/lang3/concurrent/Computable;\n         20: aload_0\n         21: iload_2\n-        22: putfield      #23                 // Field recalculate:Z\n+        22: putfield      #40                 // Field recalculate:Z\n         25: return\n       LineNumberTable:\n         line 90: 0\n         line 56: 4\n         line 91: 15\n         line 92: 20\n         line 93: 25\n@@ -202,80 +202,81 @@\n             0      26     0  this   Lorg/apache/commons/lang3/concurrent/Memoizer;\n             0      26     1 computable   Lorg/apache/commons/lang3/concurrent/Computable;\n             0      26     2 recalculate   Z\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      26     0  this   Lorg/apache/commons/lang3/concurrent/Memoizer<TI;TO;>;\n             0      26     1 computable   Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n-    Signature: #96                          // (Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;Z)V\n \n   public O compute(I) throws java.lang.InterruptedException;\n     descriptor: (Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.lang.InterruptedException\n+    Signature: #47                          // (TI;)TO;\n     Code:\n       stack=4, locals=5, args_size=2\n          0: aload_0\n-         1: getfield      #19                 // Field cache:Ljava/util/concurrent/ConcurrentMap;\n+         1: getfield      #36                 // Field cache:Ljava/util/concurrent/ConcurrentMap;\n          4: aload_1\n-         5: invokeinterface #27,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-        10: checkcast     #33                 // class java/util/concurrent/Future\n+         5: invokeinterface #48,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+        10: checkcast     #53                 // class java/util/concurrent/Future\n         13: astore_2\n         14: aload_2\n         15: ifnonnull     66\n-        18: new           #35                 // class org/apache/commons/lang3/concurrent/Memoizer$1\n+        18: new           #55                 // class org/apache/commons/lang3/concurrent/Memoizer$1\n         21: dup\n         22: aload_0\n         23: aload_1\n-        24: invokespecial #37                 // Method org/apache/commons/lang3/concurrent/Memoizer$1.\"<init>\":(Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)V\n+        24: invokespecial #57                 // Method org/apache/commons/lang3/concurrent/Memoizer$1.\"<init>\":(Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)V\n         27: astore_3\n-        28: new           #40                 // class java/util/concurrent/FutureTask\n+        28: new           #60                 // class java/util/concurrent/FutureTask\n         31: dup\n         32: aload_3\n-        33: invokespecial #42                 // Method java/util/concurrent/FutureTask.\"<init>\":(Ljava/util/concurrent/Callable;)V\n+        33: invokespecial #62                 // Method java/util/concurrent/FutureTask.\"<init>\":(Ljava/util/concurrent/Callable;)V\n         36: astore        4\n         38: aload_0\n-        39: getfield      #19                 // Field cache:Ljava/util/concurrent/ConcurrentMap;\n+        39: getfield      #36                 // Field cache:Ljava/util/concurrent/ConcurrentMap;\n         42: aload_1\n         43: aload         4\n-        45: invokeinterface #45,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-        50: checkcast     #33                 // class java/util/concurrent/Future\n+        45: invokeinterface #65,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+        50: checkcast     #53                 // class java/util/concurrent/Future\n         53: astore_2\n         54: aload_2\n         55: ifnonnull     66\n         58: aload         4\n         60: astore_2\n         61: aload         4\n-        63: invokevirtual #49                 // Method java/util/concurrent/FutureTask.run:()V\n+        63: invokevirtual #69                 // Method java/util/concurrent/FutureTask.run:()V\n         66: aload_2\n-        67: invokeinterface #52,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;\n+        67: invokeinterface #72,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;\n         72: areturn\n         73: astore_3\n         74: aload_0\n-        75: getfield      #19                 // Field cache:Ljava/util/concurrent/ConcurrentMap;\n+        75: getfield      #36                 // Field cache:Ljava/util/concurrent/ConcurrentMap;\n         78: aload_1\n         79: aload_2\n-        80: invokeinterface #57,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+        80: invokeinterface #75,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z\n         85: pop\n-        86: goto          118\n+        86: goto          0\n         89: astore_3\n         90: aload_0\n-        91: getfield      #23                 // Field recalculate:Z\n+        91: getfield      #40                 // Field recalculate:Z\n         94: ifeq          109\n         97: aload_0\n-        98: getfield      #19                 // Field cache:Ljava/util/concurrent/ConcurrentMap;\n+        98: getfield      #36                 // Field cache:Ljava/util/concurrent/ConcurrentMap;\n        101: aload_1\n        102: aload_2\n-       103: invokeinterface #57,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+       103: invokeinterface #75,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z\n        108: pop\n        109: aload_0\n        110: aload_3\n-       111: invokevirtual #63                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n-       114: invokespecial #67                 // Method launderException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+       111: invokevirtual #79                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n+       114: invokespecial #85                 // Method launderException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n        117: athrow\n-       118: goto          0\n       Exception table:\n          from    to  target type\n             66    72    73   Class java/util/concurrent/CancellationException\n             66    72    89   Class java/util/concurrent/ExecutionException\n       LineNumberTable:\n         line 116: 0\n         line 117: 14\n@@ -284,76 +285,69 @@\n         line 126: 38\n         line 127: 54\n         line 128: 58\n         line 129: 61\n         line 133: 66\n         line 134: 73\n         line 135: 74\n-        line 142: 86\n         line 136: 89\n         line 137: 90\n         line 138: 97\n         line 141: 109\n-        line 143: 118\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n+            0     118     0  this   Lorg/apache/commons/lang3/concurrent/Memoizer;\n+            0     118     1   arg   Ljava/lang/Object;\n+           14     104     2 future   Ljava/util/concurrent/Future;\n            28      38     3  eval   Ljava/util/concurrent/Callable;\n            38      28     4 futureTask   Ljava/util/concurrent/FutureTask;\n            74      12     3     e   Ljava/util/concurrent/CancellationException;\n            90      28     3     e   Ljava/util/concurrent/ExecutionException;\n-           14     104     2 future   Ljava/util/concurrent/Future;\n-            0     121     0  this   Lorg/apache/commons/lang3/concurrent/Memoizer;\n-            0     121     1   arg   Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n+            0     118     0  this   Lorg/apache/commons/lang3/concurrent/Memoizer<TI;TO;>;\n+            0     118     1   arg   TI;\n+           14     104     2 future   Ljava/util/concurrent/Future<TO;>;\n            28      38     3  eval   Ljava/util/concurrent/Callable<TO;>;\n            38      28     4 futureTask   Ljava/util/concurrent/FutureTask<TO;>;\n-           14     104     2 future   Ljava/util/concurrent/Future<TO;>;\n-            0     121     0  this   Lorg/apache/commons/lang3/concurrent/Memoizer<TI;TO;>;\n-            0     121     1   arg   TI;\n-      StackMapTable: number_of_entries = 6\n+      StackMapTable: number_of_entries = 5\n         frame_type = 0 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 65\n           locals = [ class java/util/concurrent/Future ]\n         frame_type = 70 /* same_locals_1_stack_item */\n           stack = [ class java/util/concurrent/CancellationException ]\n         frame_type = 79 /* same_locals_1_stack_item */\n           stack = [ class java/util/concurrent/ExecutionException ]\n         frame_type = 252 /* append */\n           offset_delta = 19\n           locals = [ class java/util/concurrent/ExecutionException ]\n-        frame_type = 249 /* chop */\n-          offset_delta = 8\n-    Exceptions:\n-      throws java.lang.InterruptedException\n-    Signature: #117                         // (TI;)TO;\n \n   private java.lang.RuntimeException launderException(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_1\n-         1: instanceof    #71                 // class java/lang/RuntimeException\n+         1: instanceof    #107                // class java/lang/RuntimeException\n          4: ifeq          12\n          7: aload_1\n-         8: checkcast     #71                 // class java/lang/RuntimeException\n+         8: checkcast     #107                // class java/lang/RuntimeException\n         11: areturn\n         12: aload_1\n-        13: instanceof    #73                 // class java/lang/Error\n+        13: instanceof    #109                // class java/lang/Error\n         16: ifeq          24\n         19: aload_1\n-        20: checkcast     #73                 // class java/lang/Error\n+        20: checkcast     #109                // class java/lang/Error\n         23: athrow\n-        24: new           #75                 // class java/lang/IllegalStateException\n+        24: new           #111                // class java/lang/IllegalStateException\n         27: dup\n-        28: ldc           #77                 // String Unchecked exception\n+        28: ldc           #113                // String Unchecked exception\n         30: aload_1\n-        31: invokespecial #79                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        31: invokespecial #115                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         34: athrow\n       LineNumberTable:\n         line 157: 0\n         line 158: 7\n         line 159: 12\n         line 160: 19\n         line 162: 24\n@@ -364,25 +358,24 @@\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      35     0  this   Lorg/apache/commons/lang3/concurrent/Memoizer<TI;TO;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 12 /* same */\n         frame_type = 11 /* same */\n \n-  static org.apache.commons.lang3.concurrent.Computable access$000(org.apache.commons.lang3.concurrent.Memoizer);\n+  static org.apache.commons.lang3.concurrent.Computable access$0(org.apache.commons.lang3.concurrent.Memoizer);\n     descriptor: (Lorg/apache/commons/lang3/concurrent/Memoizer;)Lorg/apache/commons/lang3/concurrent/Computable;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #1                  // Field computable:Lorg/apache/commons/lang3/concurrent/Computable;\n+         1: getfield      #38                 // Field computable:Lorg/apache/commons/lang3/concurrent/Computable;\n          4: areturn\n       LineNumberTable:\n-        line 54: 0\n+        line 57: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/lang3/concurrent/Memoizer;\n }\n-Signature: #123                         // <I:Ljava/lang/Object;O:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n SourceFile: \"Memoizer.java\"\n+Signature: #124                         // <I:Ljava/lang/Object;O:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n InnerClasses:\n-  #35;                                    // class org/apache/commons/lang3/concurrent/Memoizer$1\n+  #55;                                    // class org/apache/commons/lang3/concurrent/Memoizer$1\n"}]}
