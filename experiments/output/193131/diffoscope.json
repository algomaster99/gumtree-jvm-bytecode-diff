{"diffoscope-json-version": 1, "source1": "first/CircularBufferInputStream.class", "source2": "second/CircularBufferInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,155 +1,155 @@\n-  SHA-256 checksum c3ee5dfe7dc4f861a0d9b671718593c4fe81ef4f64f3a9d32496be94c13c5dbc\n+  SHA-256 checksum 439b2fac7162725eb0c1177215fe0dbf0a47cf8a9374818629aaaf7fd241de75\n   Compiled from \"CircularBufferInputStream.java\"\n public class org.apache.commons.io.input.buffer.CircularBufferInputStream extends java.io.InputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #37                         // org/apache/commons/io/input/buffer/CircularBufferInputStream\n-  super_class: #13                        // java/io/InputStream\n+  this_class: #39                         // org/apache/commons/io/input/buffer/CircularBufferInputStream\n+  super_class: #4                         // java/io/InputStream\n   interfaces: 0, fields: 4, methods: 8, attributes: 1\n Constant pool:\n-    #1 = Class              #80           // org/apache/commons/io/IOUtils\n-    #2 = Methodref          #13.#81       // java/io/InputStream.\"<init>\":()V\n-    #3 = Class              #82           // java/lang/IllegalArgumentException\n-    #4 = Class              #83           // java/lang/StringBuilder\n-    #5 = Methodref          #4.#81        // java/lang/StringBuilder.\"<init>\":()V\n-    #6 = String             #84           // Invalid bufferSize:\n-    #7 = Methodref          #4.#85        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-    #8 = Methodref          #4.#86        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-    #9 = Methodref          #4.#87        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #10 = Methodref          #3.#88        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #11 = String             #53           // inputStream\n-   #12 = Methodref          #89.#90       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #13 = Class              #91           // java/io/InputStream\n-   #14 = Fieldref           #37.#92       // org/apache/commons/io/input/buffer/CircularBufferInputStream.in:Ljava/io/InputStream;\n-   #15 = Class              #93           // org/apache/commons/io/input/buffer/CircularByteBuffer\n-   #16 = Methodref          #15.#94       // org/apache/commons/io/input/buffer/CircularByteBuffer.\"<init>\":(I)V\n-   #17 = Fieldref           #37.#95       // org/apache/commons/io/input/buffer/CircularBufferInputStream.buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-   #18 = Fieldref           #37.#96       // org/apache/commons/io/input/buffer/CircularBufferInputStream.bufferSize:I\n-   #19 = Fieldref           #37.#97       // org/apache/commons/io/input/buffer/CircularBufferInputStream.eof:Z\n-   #20 = Methodref          #37.#98       // org/apache/commons/io/input/buffer/CircularBufferInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-   #21 = Methodref          #15.#99       // org/apache/commons/io/input/buffer/CircularByteBuffer.getSpace:()I\n-   #22 = Methodref          #1.#100       // org/apache/commons/io/IOUtils.byteArray:(I)[B\n-   #23 = Methodref          #13.#101      // java/io/InputStream.read:([BII)I\n-   #24 = Methodref          #15.#102      // org/apache/commons/io/input/buffer/CircularByteBuffer.add:([BII)V\n-   #25 = Methodref          #15.#103      // org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n-   #26 = Methodref          #37.#104      // org/apache/commons/io/input/buffer/CircularBufferInputStream.fillBuffer:()V\n-   #27 = Methodref          #15.#105      // org/apache/commons/io/input/buffer/CircularByteBuffer.hasBytes:()Z\n-   #28 = Methodref          #37.#106      // org/apache/commons/io/input/buffer/CircularBufferInputStream.haveBytes:(I)Z\n-   #29 = Methodref          #15.#107      // org/apache/commons/io/input/buffer/CircularByteBuffer.read:()B\n-   #30 = Methodref          #37.#101      // org/apache/commons/io/input/buffer/CircularBufferInputStream.read:([BII)I\n-   #31 = String             #73           // targetBuffer\n-   #32 = String             #108          // Offset must not be negative\n-   #33 = String             #109          // Length must not be negative\n-   #34 = Methodref          #110.#111     // java/lang/Math.min:(II)I\n-   #35 = Methodref          #13.#112      // java/io/InputStream.close:()V\n-   #36 = Methodref          #15.#113      // org/apache/commons/io/input/buffer/CircularByteBuffer.clear:()V\n-   #37 = Class              #114          // org/apache/commons/io/input/buffer/CircularBufferInputStream\n-   #38 = Utf8               in\n-   #39 = Utf8               Ljava/io/InputStream;\n-   #40 = Utf8               buffer\n-   #41 = Utf8               Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-   #42 = Utf8               bufferSize\n-   #43 = Utf8               I\n-   #44 = Utf8               eof\n-   #45 = Utf8               Z\n-   #46 = Utf8               <init>\n-   #47 = Utf8               (Ljava/io/InputStream;I)V\n-   #48 = Utf8               Code\n-   #49 = Utf8               LineNumberTable\n-   #50 = Utf8               LocalVariableTable\n-   #51 = Utf8               this\n-   #52 = Utf8               Lorg/apache/commons/io/input/buffer/CircularBufferInputStream;\n-   #53 = Utf8               inputStream\n-   #54 = Utf8               StackMapTable\n-   #55 = Utf8               (Ljava/io/InputStream;)V\n-   #56 = Utf8               fillBuffer\n-   #57 = Utf8               ()V\n-   #58 = Utf8               res\n-   #59 = Utf8               space\n-   #60 = Utf8               buf\n-   #61 = Utf8               [B\n-   #62 = Class              #61           // \"[B\"\n-   #63 = Utf8               Exceptions\n-   #64 = Class              #115          // java/io/IOException\n-   #65 = Utf8               haveBytes\n-   #66 = Utf8               (I)Z\n-   #67 = Utf8               count\n-   #68 = Utf8               read\n-   #69 = Utf8               ()I\n-   #70 = Utf8               ([B)I\n-   #71 = Utf8               ([BII)I\n-   #72 = Utf8               i\n-   #73 = Utf8               targetBuffer\n-   #74 = Utf8               offset\n-   #75 = Utf8               length\n-   #76 = Utf8               result\n-   #77 = Utf8               close\n-   #78 = Utf8               SourceFile\n-   #79 = Utf8               CircularBufferInputStream.java\n-   #80 = Utf8               org/apache/commons/io/IOUtils\n-   #81 = NameAndType        #46:#57       // \"<init>\":()V\n-   #82 = Utf8               java/lang/IllegalArgumentException\n-   #83 = Utf8               java/lang/StringBuilder\n-   #84 = Utf8               Invalid bufferSize:\n-   #85 = NameAndType        #116:#117     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #86 = NameAndType        #116:#118     // append:(I)Ljava/lang/StringBuilder;\n-   #87 = NameAndType        #119:#120     // toString:()Ljava/lang/String;\n-   #88 = NameAndType        #46:#121      // \"<init>\":(Ljava/lang/String;)V\n-   #89 = Class              #122          // java/util/Objects\n-   #90 = NameAndType        #123:#124     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #91 = Utf8               java/io/InputStream\n-   #92 = NameAndType        #38:#39       // in:Ljava/io/InputStream;\n-   #93 = Utf8               org/apache/commons/io/input/buffer/CircularByteBuffer\n-   #94 = NameAndType        #46:#125      // \"<init>\":(I)V\n-   #95 = NameAndType        #40:#41       // buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-   #96 = NameAndType        #42:#43       // bufferSize:I\n-   #97 = NameAndType        #44:#45       // eof:Z\n-   #98 = NameAndType        #46:#47       // \"<init>\":(Ljava/io/InputStream;I)V\n-   #99 = NameAndType        #126:#69      // getSpace:()I\n-  #100 = NameAndType        #127:#128     // byteArray:(I)[B\n-  #101 = NameAndType        #68:#71       // read:([BII)I\n-  #102 = NameAndType        #129:#130     // add:([BII)V\n-  #103 = NameAndType        #131:#69      // getCurrentNumberOfBytes:()I\n-  #104 = NameAndType        #56:#57       // fillBuffer:()V\n-  #105 = NameAndType        #132:#133     // hasBytes:()Z\n-  #106 = NameAndType        #65:#66       // haveBytes:(I)Z\n-  #107 = NameAndType        #68:#134      // read:()B\n-  #108 = Utf8               Offset must not be negative\n-  #109 = Utf8               Length must not be negative\n-  #110 = Class              #135          // java/lang/Math\n-  #111 = NameAndType        #136:#137     // min:(II)I\n-  #112 = NameAndType        #77:#57       // close:()V\n-  #113 = NameAndType        #138:#57      // clear:()V\n-  #114 = Utf8               org/apache/commons/io/input/buffer/CircularBufferInputStream\n-  #115 = Utf8               java/io/IOException\n-  #116 = Utf8               append\n-  #117 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #118 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #119 = Utf8               toString\n-  #120 = Utf8               ()Ljava/lang/String;\n-  #121 = Utf8               (Ljava/lang/String;)V\n-  #122 = Utf8               java/util/Objects\n-  #123 = Utf8               requireNonNull\n-  #124 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #125 = Utf8               (I)V\n-  #126 = Utf8               getSpace\n-  #127 = Utf8               byteArray\n-  #128 = Utf8               (I)[B\n-  #129 = Utf8               add\n-  #130 = Utf8               ([BII)V\n-  #131 = Utf8               getCurrentNumberOfBytes\n-  #132 = Utf8               hasBytes\n-  #133 = Utf8               ()Z\n-  #134 = Utf8               ()B\n-  #135 = Utf8               java/lang/Math\n-  #136 = Utf8               min\n-  #137 = Utf8               (II)I\n-  #138 = Utf8               clear\n+    #1 = Class              #2            // org/apache/commons/io/IOUtils\n+    #2 = Utf8               org/apache/commons/io/IOUtils\n+    #3 = Methodref          #4.#5         // java/io/InputStream.\"<init>\":()V\n+    #4 = Class              #6            // java/io/InputStream\n+    #5 = NameAndType        #7:#8         // \"<init>\":()V\n+    #6 = Utf8               java/io/InputStream\n+    #7 = Utf8               <init>\n+    #8 = Utf8               ()V\n+    #9 = Class              #10           // java/lang/IllegalArgumentException\n+   #10 = Utf8               java/lang/IllegalArgumentException\n+   #11 = Class              #12           // java/lang/StringBuilder\n+   #12 = Utf8               java/lang/StringBuilder\n+   #13 = Methodref          #11.#5        // java/lang/StringBuilder.\"<init>\":()V\n+   #14 = String             #15           // Invalid bufferSize:\n+   #15 = Utf8               Invalid bufferSize:\n+   #16 = Methodref          #11.#17       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #17 = NameAndType        #18:#19       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #18 = Utf8               append\n+   #19 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #20 = Methodref          #11.#21       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #21 = NameAndType        #18:#22       // append:(I)Ljava/lang/StringBuilder;\n+   #22 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #23 = Methodref          #11.#24       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #24 = NameAndType        #25:#26       // toString:()Ljava/lang/String;\n+   #25 = Utf8               toString\n+   #26 = Utf8               ()Ljava/lang/String;\n+   #27 = Methodref          #9.#28        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #28 = NameAndType        #7:#29        // \"<init>\":(Ljava/lang/String;)V\n+   #29 = Utf8               (Ljava/lang/String;)V\n+   #30 = String             #31           // inputStream\n+   #31 = Utf8               inputStream\n+   #32 = Methodref          #33.#34       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #33 = Class              #35           // java/util/Objects\n+   #34 = NameAndType        #36:#37       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #35 = Utf8               java/util/Objects\n+   #36 = Utf8               requireNonNull\n+   #37 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #38 = Fieldref           #39.#40       // org/apache/commons/io/input/buffer/CircularBufferInputStream.in:Ljava/io/InputStream;\n+   #39 = Class              #41           // org/apache/commons/io/input/buffer/CircularBufferInputStream\n+   #40 = NameAndType        #42:#43       // in:Ljava/io/InputStream;\n+   #41 = Utf8               org/apache/commons/io/input/buffer/CircularBufferInputStream\n+   #42 = Utf8               in\n+   #43 = Utf8               Ljava/io/InputStream;\n+   #44 = Class              #45           // org/apache/commons/io/input/buffer/CircularByteBuffer\n+   #45 = Utf8               org/apache/commons/io/input/buffer/CircularByteBuffer\n+   #46 = Methodref          #44.#47       // org/apache/commons/io/input/buffer/CircularByteBuffer.\"<init>\":(I)V\n+   #47 = NameAndType        #7:#48        // \"<init>\":(I)V\n+   #48 = Utf8               (I)V\n+   #49 = Fieldref           #39.#50       // org/apache/commons/io/input/buffer/CircularBufferInputStream.buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+   #50 = NameAndType        #51:#52       // buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+   #51 = Utf8               buffer\n+   #52 = Utf8               Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+   #53 = Fieldref           #39.#54       // org/apache/commons/io/input/buffer/CircularBufferInputStream.bufferSize:I\n+   #54 = NameAndType        #55:#56       // bufferSize:I\n+   #55 = Utf8               bufferSize\n+   #56 = Utf8               I\n+   #57 = Fieldref           #39.#58       // org/apache/commons/io/input/buffer/CircularBufferInputStream.eof:Z\n+   #58 = NameAndType        #59:#60       // eof:Z\n+   #59 = Utf8               eof\n+   #60 = Utf8               Z\n+   #61 = Methodref          #39.#62       // org/apache/commons/io/input/buffer/CircularBufferInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+   #62 = NameAndType        #7:#63        // \"<init>\":(Ljava/io/InputStream;I)V\n+   #63 = Utf8               (Ljava/io/InputStream;I)V\n+   #64 = Methodref          #44.#65       // org/apache/commons/io/input/buffer/CircularByteBuffer.getSpace:()I\n+   #65 = NameAndType        #66:#67       // getSpace:()I\n+   #66 = Utf8               getSpace\n+   #67 = Utf8               ()I\n+   #68 = Methodref          #1.#69        // org/apache/commons/io/IOUtils.byteArray:(I)[B\n+   #69 = NameAndType        #70:#71       // byteArray:(I)[B\n+   #70 = Utf8               byteArray\n+   #71 = Utf8               (I)[B\n+   #72 = Methodref          #4.#73        // java/io/InputStream.read:([BII)I\n+   #73 = NameAndType        #74:#75       // read:([BII)I\n+   #74 = Utf8               read\n+   #75 = Utf8               ([BII)I\n+   #76 = Methodref          #44.#77       // org/apache/commons/io/input/buffer/CircularByteBuffer.add:([BII)V\n+   #77 = NameAndType        #78:#79       // add:([BII)V\n+   #78 = Utf8               add\n+   #79 = Utf8               ([BII)V\n+   #80 = Methodref          #44.#81       // org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n+   #81 = NameAndType        #82:#67       // getCurrentNumberOfBytes:()I\n+   #82 = Utf8               getCurrentNumberOfBytes\n+   #83 = Methodref          #39.#84       // org/apache/commons/io/input/buffer/CircularBufferInputStream.fillBuffer:()V\n+   #84 = NameAndType        #85:#8        // fillBuffer:()V\n+   #85 = Utf8               fillBuffer\n+   #86 = Methodref          #44.#87       // org/apache/commons/io/input/buffer/CircularByteBuffer.hasBytes:()Z\n+   #87 = NameAndType        #88:#89       // hasBytes:()Z\n+   #88 = Utf8               hasBytes\n+   #89 = Utf8               ()Z\n+   #90 = Methodref          #39.#91       // org/apache/commons/io/input/buffer/CircularBufferInputStream.haveBytes:(I)Z\n+   #91 = NameAndType        #92:#93       // haveBytes:(I)Z\n+   #92 = Utf8               haveBytes\n+   #93 = Utf8               (I)Z\n+   #94 = Methodref          #44.#95       // org/apache/commons/io/input/buffer/CircularByteBuffer.read:()B\n+   #95 = NameAndType        #74:#96       // read:()B\n+   #96 = Utf8               ()B\n+   #97 = Methodref          #39.#73       // org/apache/commons/io/input/buffer/CircularBufferInputStream.read:([BII)I\n+   #98 = String             #99           // targetBuffer\n+   #99 = Utf8               targetBuffer\n+  #100 = String             #101          // Offset must not be negative\n+  #101 = Utf8               Offset must not be negative\n+  #102 = String             #103          // Length must not be negative\n+  #103 = Utf8               Length must not be negative\n+  #104 = Methodref          #105.#106     // java/lang/Math.min:(II)I\n+  #105 = Class              #107          // java/lang/Math\n+  #106 = NameAndType        #108:#109     // min:(II)I\n+  #107 = Utf8               java/lang/Math\n+  #108 = Utf8               min\n+  #109 = Utf8               (II)I\n+  #110 = Methodref          #4.#111       // java/io/InputStream.close:()V\n+  #111 = NameAndType        #112:#8       // close:()V\n+  #112 = Utf8               close\n+  #113 = Methodref          #44.#114      // org/apache/commons/io/input/buffer/CircularByteBuffer.clear:()V\n+  #114 = NameAndType        #115:#8       // clear:()V\n+  #115 = Utf8               clear\n+  #116 = Utf8               Code\n+  #117 = Utf8               LineNumberTable\n+  #118 = Utf8               LocalVariableTable\n+  #119 = Utf8               this\n+  #120 = Utf8               Lorg/apache/commons/io/input/buffer/CircularBufferInputStream;\n+  #121 = Utf8               StackMapTable\n+  #122 = Utf8               (Ljava/io/InputStream;)V\n+  #123 = Utf8               res\n+  #124 = Utf8               space\n+  #125 = Utf8               buf\n+  #126 = Utf8               [B\n+  #127 = Class              #126          // \"[B\"\n+  #128 = Utf8               Exceptions\n+  #129 = Class              #130          // java/io/IOException\n+  #130 = Utf8               java/io/IOException\n+  #131 = Utf8               count\n+  #132 = Utf8               ([B)I\n+  #133 = Utf8               i\n+  #134 = Utf8               offset\n+  #135 = Utf8               length\n+  #136 = Utf8               result\n+  #137 = Utf8               SourceFile\n+  #138 = Utf8               CircularBufferInputStream.java\n {\n   protected final java.io.InputStream in;\n     descriptor: Ljava/io/InputStream;\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n \n   protected final org.apache.commons.io.input.buffer.CircularByteBuffer buffer;\n     descriptor: Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n@@ -165,47 +165,47 @@\n \n   public org.apache.commons.io.input.buffer.CircularBufferInputStream(java.io.InputStream, int);\n     descriptor: (Ljava/io/InputStream;I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #2                  // Method java/io/InputStream.\"<init>\":()V\n+         1: invokespecial #3                  // Method java/io/InputStream.\"<init>\":()V\n          4: iload_2\n          5: ifgt          35\n-         8: new           #3                  // class java/lang/IllegalArgumentException\n+         8: new           #9                  // class java/lang/IllegalArgumentException\n         11: dup\n-        12: new           #4                  // class java/lang/StringBuilder\n+        12: new           #11                 // class java/lang/StringBuilder\n         15: dup\n-        16: invokespecial #5                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        19: ldc           #6                  // String Invalid bufferSize:\n-        21: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        16: invokespecial #13                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        19: ldc           #14                 // String Invalid bufferSize:\n+        21: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         24: iload_2\n-        25: invokevirtual #8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        28: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        31: invokespecial #10                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        25: invokevirtual #20                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        28: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        31: invokespecial #27                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         34: athrow\n         35: aload_0\n         36: aload_1\n-        37: ldc           #11                 // String inputStream\n-        39: invokestatic  #12                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        42: checkcast     #13                 // class java/io/InputStream\n-        45: putfield      #14                 // Field in:Ljava/io/InputStream;\n+        37: ldc           #30                 // String inputStream\n+        39: invokestatic  #32                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        42: checkcast     #4                  // class java/io/InputStream\n+        45: putfield      #38                 // Field in:Ljava/io/InputStream;\n         48: aload_0\n-        49: new           #15                 // class org/apache/commons/io/input/buffer/CircularByteBuffer\n+        49: new           #44                 // class org/apache/commons/io/input/buffer/CircularByteBuffer\n         52: dup\n         53: iload_2\n-        54: invokespecial #16                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.\"<init>\":(I)V\n-        57: putfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        54: invokespecial #46                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.\"<init>\":(I)V\n+        57: putfield      #49                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n         60: aload_0\n         61: iload_2\n-        62: putfield      #18                 // Field bufferSize:I\n+        62: putfield      #53                 // Field bufferSize:I\n         65: aload_0\n         66: iconst_0\n-        67: putfield      #19                 // Field eof:Z\n+        67: putfield      #57                 // Field eof:Z\n         70: return\n       LineNumberTable:\n         line 51: 0\n         line 52: 4\n         line 53: 8\n         line 55: 35\n         line 56: 48\n@@ -227,15 +227,15 @@\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: sipush        8192\n-         5: invokespecial #20                 // Method \"<init>\":(Ljava/io/InputStream;I)V\n+         5: invokespecial #61                 // Method \"<init>\":(Ljava/io/InputStream;I)V\n          8: return\n       LineNumberTable:\n         line 68: 0\n         line 69: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/buffer/CircularBufferInputStream;\n@@ -243,48 +243,48 @@\n \n   protected void fillBuffer() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=4, locals=4, args_size=1\n          0: aload_0\n-         1: getfield      #19                 // Field eof:Z\n+         1: getfield      #57                 // Field eof:Z\n          4: ifeq          8\n          7: return\n          8: aload_0\n-         9: getfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-        12: invokevirtual #21                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getSpace:()I\n+         9: getfield      #49                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        12: invokevirtual #64                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getSpace:()I\n         15: istore_1\n         16: iload_1\n-        17: invokestatic  #22                 // Method org/apache/commons/io/IOUtils.byteArray:(I)[B\n+        17: invokestatic  #68                 // Method org/apache/commons/io/IOUtils.byteArray:(I)[B\n         20: astore_2\n         21: iload_1\n         22: ifle          68\n         25: aload_0\n-        26: getfield      #14                 // Field in:Ljava/io/InputStream;\n+        26: getfield      #38                 // Field in:Ljava/io/InputStream;\n         29: aload_2\n         30: iconst_0\n         31: iload_1\n-        32: invokevirtual #23                 // Method java/io/InputStream.read:([BII)I\n+        32: invokevirtual #72                 // Method java/io/InputStream.read:([BII)I\n         35: istore_3\n         36: iload_3\n         37: iconst_m1\n         38: if_icmpne     47\n         41: aload_0\n         42: iconst_1\n-        43: putfield      #19                 // Field eof:Z\n+        43: putfield      #57                 // Field eof:Z\n         46: return\n         47: iload_3\n         48: ifle          65\n         51: aload_0\n-        52: getfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        52: getfield      #49                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n         55: aload_2\n         56: iconst_0\n         57: iload_3\n-        58: invokevirtual #24                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.add:([BII)V\n+        58: invokevirtual #76                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.add:([BII)V\n         61: iload_1\n         62: iload_3\n         63: isub\n         64: istore_1\n         65: goto          21\n         68: return\n       LineNumberTable:\n@@ -324,23 +324,23 @@\n \n   protected boolean haveBytes(int) throws java.io.IOException;\n     descriptor: (I)Z\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-         4: invokevirtual #25                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n+         1: getfield      #49                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+         4: invokevirtual #80                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n          7: iload_1\n          8: if_icmpge     15\n         11: aload_0\n-        12: invokevirtual #26                 // Method fillBuffer:()V\n+        12: invokevirtual #83                 // Method fillBuffer:()V\n         15: aload_0\n-        16: getfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-        19: invokevirtual #27                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.hasBytes:()Z\n+        16: getfield      #49                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        19: invokevirtual #86                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.hasBytes:()Z\n         22: ireturn\n       LineNumberTable:\n         line 103: 0\n         line 104: 11\n         line 106: 15\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -354,21 +354,21 @@\n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #28                 // Method haveBytes:(I)Z\n+         2: invokevirtual #90                 // Method haveBytes:(I)Z\n          5: ifne          10\n          8: iconst_m1\n          9: ireturn\n         10: aload_0\n-        11: getfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-        14: invokevirtual #29                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.read:()B\n+        11: getfield      #49                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        14: invokevirtual #94                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.read:()B\n         17: sipush        255\n         20: iand\n         21: ireturn\n       LineNumberTable:\n         line 111: 0\n         line 112: 8\n         line 114: 10\n@@ -386,15 +386,15 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #30                 // Method read:([BII)I\n+         5: invokevirtual #97                 // Method read:([BII)I\n          8: ireturn\n       LineNumberTable:\n         line 119: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/buffer/CircularBufferInputStream;\n             0       9     1 buffer   [B\n@@ -403,55 +403,55 @@\n \n   public int read(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=6, args_size=4\n          0: aload_1\n-         1: ldc           #31                 // String targetBuffer\n-         3: invokestatic  #12                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #98                 // String targetBuffer\n+         3: invokestatic  #32                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: iload_2\n          8: ifge          21\n-        11: new           #3                  // class java/lang/IllegalArgumentException\n+        11: new           #9                  // class java/lang/IllegalArgumentException\n         14: dup\n-        15: ldc           #32                 // String Offset must not be negative\n-        17: invokespecial #10                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        15: ldc           #100                // String Offset must not be negative\n+        17: invokespecial #27                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         20: athrow\n         21: iload_3\n         22: ifge          35\n-        25: new           #3                  // class java/lang/IllegalArgumentException\n+        25: new           #9                  // class java/lang/IllegalArgumentException\n         28: dup\n-        29: ldc           #33                 // String Length must not be negative\n-        31: invokespecial #10                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        29: ldc           #102                // String Length must not be negative\n+        31: invokespecial #27                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         34: athrow\n         35: aload_0\n         36: iload_3\n-        37: invokevirtual #28                 // Method haveBytes:(I)Z\n+        37: invokevirtual #90                 // Method haveBytes:(I)Z\n         40: ifne          45\n         43: iconst_m1\n         44: ireturn\n         45: iload_3\n         46: aload_0\n-        47: getfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-        50: invokevirtual #25                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n-        53: invokestatic  #34                 // Method java/lang/Math.min:(II)I\n+        47: getfield      #49                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        50: invokevirtual #80                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n+        53: invokestatic  #104                // Method java/lang/Math.min:(II)I\n         56: istore        4\n         58: iconst_0\n         59: istore        5\n         61: iload         5\n         63: iload         4\n         65: if_icmpge     87\n         68: aload_1\n         69: iload_2\n         70: iload         5\n         72: iadd\n         73: aload_0\n-        74: getfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-        77: invokevirtual #29                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.read:()B\n+        74: getfield      #49                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        77: invokevirtual #94                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.read:()B\n         80: bastore\n         81: iinc          5, 1\n         84: goto          61\n         87: iload         4\n         89: ireturn\n       LineNumberTable:\n         line 124: 0\n@@ -488,22 +488,22 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #14                 // Field in:Ljava/io/InputStream;\n-         4: invokevirtual #35                 // Method java/io/InputStream.close:()V\n+         1: getfield      #38                 // Field in:Ljava/io/InputStream;\n+         4: invokevirtual #110                // Method java/io/InputStream.close:()V\n          7: aload_0\n          8: iconst_1\n-         9: putfield      #19                 // Field eof:Z\n+         9: putfield      #57                 // Field eof:Z\n         12: aload_0\n-        13: getfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-        16: invokevirtual #36                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.clear:()V\n+        13: getfield      #49                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        16: invokevirtual #113                // Method org/apache/commons/io/input/buffer/CircularByteBuffer.clear:()V\n         19: return\n       LineNumberTable:\n         line 143: 0\n         line 144: 7\n         line 145: 12\n         line 146: 19\n       LocalVariableTable:\n"}]}
