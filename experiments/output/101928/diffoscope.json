{"diffoscope-json-version": 1, "source1": "first/BaseNCodec.class", "source2": "second/BaseNCodec.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,254 +1,251 @@\n-  SHA-256 checksum f8a0701bf637f861c5f9501dc462c8211074662d0c654946b353afb0217efd06\n+  SHA-256 checksum 428ee52e59a4d1402cd99d52c8299457fe9259dba01b15c444414c739ac40893\n   Compiled from \"BaseNCodec.java\"\n public abstract class org.apache.commons.codec.binary.BaseNCodec implements org.apache.commons.codec.BinaryEncoder,org.apache.commons.codec.BinaryDecoder\n   minor version: 0\n   major version: 51\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #3                          // org/apache/commons/codec/binary/BaseNCodec\n-  super_class: #10                        // java/lang/Object\n+  this_class: #1                          // org/apache/commons/codec/binary/BaseNCodec\n+  super_class: #3                         // java/lang/Object\n   interfaces: 2, fields: 14, methods: 26, attributes: 2\n Constant pool:\n-    #1 = Class              #2            // java/lang/Integer\n-    #2 = Utf8               java/lang/Integer\n-    #3 = Class              #4            // org/apache/commons/codec/binary/BaseNCodec\n-    #4 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n-    #5 = Methodref          #3.#6         // org/apache/commons/codec/binary/BaseNCodec.\"<init>\":(IIIIB)V\n-    #6 = NameAndType        #7:#8         // \"<init>\":(IIIIB)V\n-    #7 = Utf8               <init>\n-    #8 = Utf8               (IIIIB)V\n-    #9 = Methodref          #10.#11       // java/lang/Object.\"<init>\":()V\n-   #10 = Class              #12           // java/lang/Object\n-   #11 = NameAndType        #7:#13        // \"<init>\":()V\n-   #12 = Utf8               java/lang/Object\n-   #13 = Utf8               ()V\n-   #14 = Fieldref           #3.#15        // org/apache/commons/codec/binary/BaseNCodec.PAD:B\n-   #15 = NameAndType        #16:#17       // PAD:B\n-   #16 = Utf8               PAD\n-   #17 = Utf8               B\n-   #18 = Fieldref           #3.#19        // org/apache/commons/codec/binary/BaseNCodec.unencodedBlockSize:I\n-   #19 = NameAndType        #20:#21       // unencodedBlockSize:I\n-   #20 = Utf8               unencodedBlockSize\n-   #21 = Utf8               I\n-   #22 = Fieldref           #3.#23        // org/apache/commons/codec/binary/BaseNCodec.encodedBlockSize:I\n-   #23 = NameAndType        #24:#21       // encodedBlockSize:I\n-   #24 = Utf8               encodedBlockSize\n-   #25 = Fieldref           #3.#26        // org/apache/commons/codec/binary/BaseNCodec.lineLength:I\n-   #26 = NameAndType        #27:#21       // lineLength:I\n-   #27 = Utf8               lineLength\n-   #28 = Fieldref           #3.#29        // org/apache/commons/codec/binary/BaseNCodec.chunkSeparatorLength:I\n-   #29 = NameAndType        #30:#21       // chunkSeparatorLength:I\n-   #30 = Utf8               chunkSeparatorLength\n-   #31 = Fieldref           #3.#32        // org/apache/commons/codec/binary/BaseNCodec.pad:B\n-   #32 = NameAndType        #33:#17       // pad:B\n-   #33 = Utf8               pad\n-   #34 = Fieldref           #35.#36       // org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n-   #35 = Class              #37           // org/apache/commons/codec/binary/BaseNCodec$Context\n-   #36 = NameAndType        #38:#39       // buffer:[B\n-   #37 = Utf8               org/apache/commons/codec/binary/BaseNCodec$Context\n-   #38 = Utf8               buffer\n-   #39 = Utf8               [B\n-   #40 = Fieldref           #35.#41       // org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n-   #41 = NameAndType        #42:#21       // pos:I\n-   #42 = Utf8               pos\n-   #43 = Fieldref           #35.#44       // org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n-   #44 = NameAndType        #45:#21       // readPos:I\n-   #45 = Utf8               readPos\n-   #46 = Methodref          #3.#47        // org/apache/commons/codec/binary/BaseNCodec.compareUnsigned:(II)I\n-   #47 = NameAndType        #48:#49       // compareUnsigned:(II)I\n-   #48 = Utf8               compareUnsigned\n-   #49 = Utf8               (II)I\n-   #50 = Integer            2147483639\n-   #51 = Methodref          #3.#52        // org/apache/commons/codec/binary/BaseNCodec.createPositiveCapacity:(I)I\n-   #52 = NameAndType        #53:#54       // createPositiveCapacity:(I)I\n-   #53 = Utf8               createPositiveCapacity\n-   #54 = Utf8               (I)I\n-   #55 = Methodref          #56.#57       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #56 = Class              #58           // java/lang/System\n-   #57 = NameAndType        #59:#60       // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #58 = Utf8               java/lang/System\n-   #59 = Utf8               arraycopy\n-   #60 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #61 = Integer            -2147483648\n-   #62 = Methodref          #1.#63        // java/lang/Integer.compare:(II)I\n-   #63 = NameAndType        #64:#49       // compare:(II)I\n-   #64 = Utf8               compare\n-   #65 = Class              #66           // java/lang/OutOfMemoryError\n-   #66 = Utf8               java/lang/OutOfMemoryError\n-   #67 = Class              #68           // java/lang/StringBuilder\n-   #68 = Utf8               java/lang/StringBuilder\n-   #69 = Methodref          #67.#11       // java/lang/StringBuilder.\"<init>\":()V\n-   #70 = String             #71           // Unable to allocate array size:\n-   #71 = Utf8               Unable to allocate array size:\n-   #72 = Methodref          #67.#73       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #73 = NameAndType        #74:#75       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #74 = Utf8               append\n-   #75 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #76 = Long               4294967295l\n-   #78 = Methodref          #67.#79       // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-   #79 = NameAndType        #74:#80       // append:(J)Ljava/lang/StringBuilder;\n-   #80 = Utf8               (J)Ljava/lang/StringBuilder;\n-   #81 = Methodref          #67.#82       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #82 = NameAndType        #83:#84       // toString:()Ljava/lang/String;\n-   #83 = Utf8               toString\n-   #84 = Utf8               ()Ljava/lang/String;\n-   #85 = Methodref          #65.#86       // java/lang/OutOfMemoryError.\"<init>\":(Ljava/lang/String;)V\n-   #86 = NameAndType        #7:#87        // \"<init>\":(Ljava/lang/String;)V\n-   #87 = Utf8               (Ljava/lang/String;)V\n-   #88 = Methodref          #3.#89        // org/apache/commons/codec/binary/BaseNCodec.getDefaultBufferSize:()I\n-   #89 = NameAndType        #90:#91       // getDefaultBufferSize:()I\n-   #90 = Utf8               getDefaultBufferSize\n-   #91 = Utf8               ()I\n-   #92 = Methodref          #3.#93        // org/apache/commons/codec/binary/BaseNCodec.resizeBuffer:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;I)[B\n-   #93 = NameAndType        #94:#95       // resizeBuffer:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;I)[B\n-   #94 = Utf8               resizeBuffer\n-   #95 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;I)[B\n-   #96 = Methodref          #3.#97        // org/apache/commons/codec/binary/BaseNCodec.available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-   #97 = NameAndType        #98:#99       // available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-   #98 = Utf8               available\n-   #99 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-  #100 = Methodref          #101.#102     // java/lang/Math.min:(II)I\n-  #101 = Class              #103          // java/lang/Math\n-  #102 = NameAndType        #104:#49      // min:(II)I\n-  #103 = Utf8               java/lang/Math\n-  #104 = Utf8               min\n-  #105 = Fieldref           #35.#106      // org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n-  #106 = NameAndType        #107:#108     // eof:Z\n-  #107 = Utf8               eof\n-  #108 = Utf8               Z\n-  #109 = Class              #39           // \"[B\"\n-  #110 = Class              #111          // org/apache/commons/codec/EncoderException\n-  #111 = Utf8               org/apache/commons/codec/EncoderException\n-  #112 = String             #113          // Parameter supplied to Base-N encode is not a byte[]\n-  #113 = Utf8               Parameter supplied to Base-N encode is not a byte[]\n-  #114 = Methodref          #110.#86      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n-  #115 = Methodref          #3.#116       // org/apache/commons/codec/binary/BaseNCodec.encode:([B)[B\n-  #116 = NameAndType        #117:#118     // encode:([B)[B\n-  #117 = Utf8               encode\n-  #118 = Utf8               ([B)[B\n-  #119 = Methodref          #120.#121     // org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;\n-  #120 = Class              #122          // org/apache/commons/codec/binary/StringUtils\n-  #121 = NameAndType        #123:#124     // newStringUtf8:([B)Ljava/lang/String;\n-  #122 = Utf8               org/apache/commons/codec/binary/StringUtils\n-  #123 = Utf8               newStringUtf8\n-  #124 = Utf8               ([B)Ljava/lang/String;\n-  #125 = Methodref          #3.#126       // org/apache/commons/codec/binary/BaseNCodec.decode:([B)[B\n-  #126 = NameAndType        #127:#118     // decode:([B)[B\n-  #127 = Utf8               decode\n-  #128 = Class              #129          // java/lang/String\n-  #129 = Utf8               java/lang/String\n-  #130 = Methodref          #3.#131       // org/apache/commons/codec/binary/BaseNCodec.decode:(Ljava/lang/String;)[B\n-  #131 = NameAndType        #127:#132     // decode:(Ljava/lang/String;)[B\n-  #132 = Utf8               (Ljava/lang/String;)[B\n-  #133 = Class              #134          // org/apache/commons/codec/DecoderException\n-  #134 = Utf8               org/apache/commons/codec/DecoderException\n-  #135 = String             #136          // Parameter supplied to Base-N decode is not a byte[] or a String\n-  #136 = Utf8               Parameter supplied to Base-N decode is not a byte[] or a String\n-  #137 = Methodref          #133.#86      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n-  #138 = Methodref          #120.#139     // org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n-  #139 = NameAndType        #140:#132     // getBytesUtf8:(Ljava/lang/String;)[B\n-  #140 = Utf8               getBytesUtf8\n-  #141 = Methodref          #35.#11       // org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n-  #142 = Methodref          #3.#143       // org/apache/commons/codec/binary/BaseNCodec.decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #143 = NameAndType        #127:#144     // decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #144 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #145 = Methodref          #3.#146       // org/apache/commons/codec/binary/BaseNCodec.readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-  #146 = NameAndType        #147:#148     // readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-  #147 = Utf8               readResults\n-  #148 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-  #149 = Methodref          #3.#150       // org/apache/commons/codec/binary/BaseNCodec.encode:([BII)[B\n-  #150 = NameAndType        #117:#151     // encode:([BII)[B\n-  #151 = Utf8               ([BII)[B\n-  #152 = Methodref          #3.#153       // org/apache/commons/codec/binary/BaseNCodec.encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #153 = NameAndType        #117:#144     // encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #154 = Methodref          #3.#155       // org/apache/commons/codec/binary/BaseNCodec.isInAlphabet:(B)Z\n-  #155 = NameAndType        #156:#157     // isInAlphabet:(B)Z\n-  #156 = Utf8               isInAlphabet\n-  #157 = Utf8               (B)Z\n-  #158 = Methodref          #3.#159       // org/apache/commons/codec/binary/BaseNCodec.isWhiteSpace:(B)Z\n-  #159 = NameAndType        #160:#157     // isWhiteSpace:(B)Z\n-  #160 = Utf8               isWhiteSpace\n-  #161 = Methodref          #3.#162       // org/apache/commons/codec/binary/BaseNCodec.isInAlphabet:([BZ)Z\n-  #162 = NameAndType        #156:#163     // isInAlphabet:([BZ)Z\n-  #163 = Utf8               ([BZ)Z\n-  #164 = Class              #165          // org/apache/commons/codec/BinaryEncoder\n-  #165 = Utf8               org/apache/commons/codec/BinaryEncoder\n-  #166 = Class              #167          // org/apache/commons/codec/BinaryDecoder\n-  #167 = Utf8               org/apache/commons/codec/BinaryDecoder\n-  #168 = Utf8               EOF\n-  #169 = Utf8               ConstantValue\n-  #170 = Integer            -1\n-  #171 = Utf8               MIME_CHUNK_SIZE\n-  #172 = Integer            76\n-  #173 = Utf8               PEM_CHUNK_SIZE\n-  #174 = Integer            64\n-  #175 = Utf8               DEFAULT_BUFFER_RESIZE_FACTOR\n-  #176 = Integer            2\n-  #177 = Utf8               DEFAULT_BUFFER_SIZE\n-  #178 = Integer            8192\n-  #179 = Utf8               MAX_BUFFER_SIZE\n-  #180 = Utf8               MASK_8BITS\n-  #181 = Integer            255\n-  #182 = Utf8               PAD_DEFAULT\n-  #183 = Integer            61\n-  #184 = Utf8               Deprecated\n-  #185 = Utf8               RuntimeVisibleAnnotations\n-  #186 = Utf8               Ljava/lang/Deprecated;\n-  #187 = Utf8               (IIII)V\n-  #188 = Utf8               Code\n-  #189 = Utf8               LineNumberTable\n-  #190 = Utf8               LocalVariableTable\n-  #191 = Utf8               this\n-  #192 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec;\n-  #193 = Utf8               useChunking\n-  #194 = Utf8               StackMapTable\n-  #195 = Utf8               hasData\n-  #196 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n-  #197 = Utf8               context\n-  #198 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-  #199 = Utf8               minCapacity\n-  #200 = Utf8               oldCapacity\n-  #201 = Utf8               newCapacity\n-  #202 = Utf8               b\n-  #203 = Utf8               x\n-  #204 = Utf8               y\n-  #205 = Utf8               ensureBufferSize\n-  #206 = Utf8               (ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n-  #207 = Utf8               size\n-  #208 = Utf8               len\n-  #209 = Utf8               bPos\n-  #210 = Utf8               bAvail\n-  #211 = Utf8               byteToCheck\n-  #212 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #213 = Utf8               obj\n-  #214 = Utf8               Ljava/lang/Object;\n-  #215 = Utf8               Exceptions\n-  #216 = Utf8               encodeToString\n-  #217 = Utf8               pArray\n-  #218 = Utf8               encodeAsString\n-  #219 = Utf8               Ljava/lang/String;\n-  #220 = Utf8               result\n-  #221 = Utf8               offset\n-  #222 = Utf8               length\n-  #223 = Utf8               buf\n-  #224 = Utf8               octet\n-  #225 = Utf8               arrayOctet\n-  #226 = Utf8               allowWSPad\n-  #227 = Utf8               (Ljava/lang/String;)Z\n-  #228 = Utf8               basen\n-  #229 = Utf8               containsAlphabetOrPad\n-  #230 = Utf8               ([B)Z\n-  #231 = Utf8               element\n-  #232 = Utf8               getEncodedLength\n-  #233 = Utf8               ([B)J\n-  #234 = Utf8               J\n-  #235 = Utf8               SourceFile\n-  #236 = Utf8               BaseNCodec.java\n-  #237 = Utf8               InnerClasses\n-  #238 = Utf8               Context\n+    #1 = Class              #2            // org/apache/commons/codec/binary/BaseNCodec\n+    #2 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n+    #3 = Class              #4            // java/lang/Object\n+    #4 = Utf8               java/lang/Object\n+    #5 = Class              #6            // org/apache/commons/codec/BinaryEncoder\n+    #6 = Utf8               org/apache/commons/codec/BinaryEncoder\n+    #7 = Class              #8            // org/apache/commons/codec/BinaryDecoder\n+    #8 = Utf8               org/apache/commons/codec/BinaryDecoder\n+    #9 = Utf8               EOF\n+   #10 = Utf8               I\n+   #11 = Utf8               ConstantValue\n+   #12 = Integer            -1\n+   #13 = Utf8               MIME_CHUNK_SIZE\n+   #14 = Integer            76\n+   #15 = Utf8               PEM_CHUNK_SIZE\n+   #16 = Integer            64\n+   #17 = Utf8               DEFAULT_BUFFER_RESIZE_FACTOR\n+   #18 = Integer            2\n+   #19 = Utf8               DEFAULT_BUFFER_SIZE\n+   #20 = Integer            8192\n+   #21 = Utf8               MAX_BUFFER_SIZE\n+   #22 = Integer            2147483639\n+   #23 = Utf8               MASK_8BITS\n+   #24 = Integer            255\n+   #25 = Utf8               PAD_DEFAULT\n+   #26 = Utf8               B\n+   #27 = Integer            61\n+   #28 = Utf8               PAD\n+   #29 = Utf8               Deprecated\n+   #30 = Utf8               RuntimeVisibleAnnotations\n+   #31 = Utf8               Ljava/lang/Deprecated;\n+   #32 = Utf8               pad\n+   #33 = Utf8               unencodedBlockSize\n+   #34 = Utf8               encodedBlockSize\n+   #35 = Utf8               lineLength\n+   #36 = Utf8               chunkSeparatorLength\n+   #37 = Utf8               <init>\n+   #38 = Utf8               (IIII)V\n+   #39 = Utf8               Code\n+   #40 = Methodref          #1.#41        // org/apache/commons/codec/binary/BaseNCodec.\"<init>\":(IIIIB)V\n+   #41 = NameAndType        #37:#42       // \"<init>\":(IIIIB)V\n+   #42 = Utf8               (IIIIB)V\n+   #43 = Utf8               LineNumberTable\n+   #44 = Utf8               LocalVariableTable\n+   #45 = Utf8               this\n+   #46 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec;\n+   #47 = Methodref          #3.#48        // java/lang/Object.\"<init>\":()V\n+   #48 = NameAndType        #37:#49       // \"<init>\":()V\n+   #49 = Utf8               ()V\n+   #50 = Fieldref           #1.#51        // org/apache/commons/codec/binary/BaseNCodec.PAD:B\n+   #51 = NameAndType        #28:#26       // PAD:B\n+   #52 = Fieldref           #1.#53        // org/apache/commons/codec/binary/BaseNCodec.unencodedBlockSize:I\n+   #53 = NameAndType        #33:#10       // unencodedBlockSize:I\n+   #54 = Fieldref           #1.#55        // org/apache/commons/codec/binary/BaseNCodec.encodedBlockSize:I\n+   #55 = NameAndType        #34:#10       // encodedBlockSize:I\n+   #56 = Fieldref           #1.#57        // org/apache/commons/codec/binary/BaseNCodec.lineLength:I\n+   #57 = NameAndType        #35:#10       // lineLength:I\n+   #58 = Fieldref           #1.#59        // org/apache/commons/codec/binary/BaseNCodec.chunkSeparatorLength:I\n+   #59 = NameAndType        #36:#10       // chunkSeparatorLength:I\n+   #60 = Fieldref           #1.#61        // org/apache/commons/codec/binary/BaseNCodec.pad:B\n+   #61 = NameAndType        #32:#26       // pad:B\n+   #62 = Utf8               useChunking\n+   #63 = Utf8               Z\n+   #64 = Utf8               StackMapTable\n+   #65 = Utf8               hasData\n+   #66 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n+   #67 = Fieldref           #68.#70       // org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+   #68 = Class              #69           // org/apache/commons/codec/binary/BaseNCodec$Context\n+   #69 = Utf8               org/apache/commons/codec/binary/BaseNCodec$Context\n+   #70 = NameAndType        #71:#72       // buffer:[B\n+   #71 = Utf8               buffer\n+   #72 = Utf8               [B\n+   #73 = Utf8               context\n+   #74 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+   #75 = Utf8               available\n+   #76 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+   #77 = Fieldref           #68.#78       // org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+   #78 = NameAndType        #79:#10       // pos:I\n+   #79 = Utf8               pos\n+   #80 = Fieldref           #68.#81       // org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n+   #81 = NameAndType        #82:#10       // readPos:I\n+   #82 = Utf8               readPos\n+   #83 = Utf8               getDefaultBufferSize\n+   #84 = Utf8               ()I\n+   #85 = Utf8               resizeBuffer\n+   #86 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;I)[B\n+   #87 = Methodref          #1.#88        // org/apache/commons/codec/binary/BaseNCodec.compareUnsigned:(II)I\n+   #88 = NameAndType        #89:#90       // compareUnsigned:(II)I\n+   #89 = Utf8               compareUnsigned\n+   #90 = Utf8               (II)I\n+   #91 = Methodref          #1.#92        // org/apache/commons/codec/binary/BaseNCodec.createPositiveCapacity:(I)I\n+   #92 = NameAndType        #93:#94       // createPositiveCapacity:(I)I\n+   #93 = Utf8               createPositiveCapacity\n+   #94 = Utf8               (I)I\n+   #95 = Methodref          #96.#98       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #96 = Class              #97           // java/lang/System\n+   #97 = Utf8               java/lang/System\n+   #98 = NameAndType        #99:#100      // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #99 = Utf8               arraycopy\n+  #100 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #101 = Utf8               minCapacity\n+  #102 = Utf8               oldCapacity\n+  #103 = Utf8               newCapacity\n+  #104 = Utf8               b\n+  #105 = Integer            -2147483648\n+  #106 = Methodref          #107.#109     // java/lang/Integer.compare:(II)I\n+  #107 = Class              #108          // java/lang/Integer\n+  #108 = Utf8               java/lang/Integer\n+  #109 = NameAndType        #110:#90      // compare:(II)I\n+  #110 = Utf8               compare\n+  #111 = Utf8               x\n+  #112 = Utf8               y\n+  #113 = Class              #114          // java/lang/OutOfMemoryError\n+  #114 = Utf8               java/lang/OutOfMemoryError\n+  #115 = Class              #116          // java/lang/StringBuilder\n+  #116 = Utf8               java/lang/StringBuilder\n+  #117 = String             #118          // Unable to allocate array size:\n+  #118 = Utf8               Unable to allocate array size:\n+  #119 = Methodref          #115.#120     // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #120 = NameAndType        #37:#121      // \"<init>\":(Ljava/lang/String;)V\n+  #121 = Utf8               (Ljava/lang/String;)V\n+  #122 = Long               4294967295l\n+  #124 = Methodref          #115.#125     // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+  #125 = NameAndType        #126:#127     // append:(J)Ljava/lang/StringBuilder;\n+  #126 = Utf8               append\n+  #127 = Utf8               (J)Ljava/lang/StringBuilder;\n+  #128 = Methodref          #115.#129     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #129 = NameAndType        #130:#131     // toString:()Ljava/lang/String;\n+  #130 = Utf8               toString\n+  #131 = Utf8               ()Ljava/lang/String;\n+  #132 = Methodref          #113.#120     // java/lang/OutOfMemoryError.\"<init>\":(Ljava/lang/String;)V\n+  #133 = Utf8               ensureBufferSize\n+  #134 = Utf8               (ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+  #135 = Methodref          #1.#136       // org/apache/commons/codec/binary/BaseNCodec.getDefaultBufferSize:()I\n+  #136 = NameAndType        #83:#84       // getDefaultBufferSize:()I\n+  #137 = Methodref          #1.#138       // org/apache/commons/codec/binary/BaseNCodec.resizeBuffer:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;I)[B\n+  #138 = NameAndType        #85:#86       // resizeBuffer:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;I)[B\n+  #139 = Utf8               size\n+  #140 = Utf8               readResults\n+  #141 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+  #142 = Methodref          #1.#143       // org/apache/commons/codec/binary/BaseNCodec.available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+  #143 = NameAndType        #75:#76       // available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+  #144 = Methodref          #145.#147     // java/lang/Math.min:(II)I\n+  #145 = Class              #146          // java/lang/Math\n+  #146 = Utf8               java/lang/Math\n+  #147 = NameAndType        #148:#90      // min:(II)I\n+  #148 = Utf8               min\n+  #149 = Fieldref           #68.#150      // org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n+  #150 = NameAndType        #151:#63      // eof:Z\n+  #151 = Utf8               eof\n+  #152 = Utf8               bPos\n+  #153 = Utf8               bAvail\n+  #154 = Utf8               len\n+  #155 = Utf8               isWhiteSpace\n+  #156 = Utf8               (B)Z\n+  #157 = Utf8               byteToCheck\n+  #158 = Utf8               encode\n+  #159 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #160 = Utf8               Exceptions\n+  #161 = Class              #162          // org/apache/commons/codec/EncoderException\n+  #162 = Utf8               org/apache/commons/codec/EncoderException\n+  #163 = Class              #72           // \"[B\"\n+  #164 = String             #165          // Parameter supplied to Base-N encode is not a byte[]\n+  #165 = Utf8               Parameter supplied to Base-N encode is not a byte[]\n+  #166 = Methodref          #161.#120     // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+  #167 = Methodref          #1.#168       // org/apache/commons/codec/binary/BaseNCodec.encode:([B)[B\n+  #168 = NameAndType        #158:#169     // encode:([B)[B\n+  #169 = Utf8               ([B)[B\n+  #170 = Utf8               obj\n+  #171 = Utf8               Ljava/lang/Object;\n+  #172 = Utf8               encodeToString\n+  #173 = Utf8               ([B)Ljava/lang/String;\n+  #174 = Methodref          #175.#177     // org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;\n+  #175 = Class              #176          // org/apache/commons/codec/binary/StringUtils\n+  #176 = Utf8               org/apache/commons/codec/binary/StringUtils\n+  #177 = NameAndType        #178:#173     // newStringUtf8:([B)Ljava/lang/String;\n+  #178 = Utf8               newStringUtf8\n+  #179 = Utf8               pArray\n+  #180 = Utf8               encodeAsString\n+  #181 = Utf8               decode\n+  #182 = Class              #183          // org/apache/commons/codec/DecoderException\n+  #183 = Utf8               org/apache/commons/codec/DecoderException\n+  #184 = Methodref          #1.#185       // org/apache/commons/codec/binary/BaseNCodec.decode:([B)[B\n+  #185 = NameAndType        #181:#169     // decode:([B)[B\n+  #186 = Class              #187          // java/lang/String\n+  #187 = Utf8               java/lang/String\n+  #188 = Methodref          #1.#189       // org/apache/commons/codec/binary/BaseNCodec.decode:(Ljava/lang/String;)[B\n+  #189 = NameAndType        #181:#190     // decode:(Ljava/lang/String;)[B\n+  #190 = Utf8               (Ljava/lang/String;)[B\n+  #191 = String             #192          // Parameter supplied to Base-N decode is not a byte[] or a String\n+  #192 = Utf8               Parameter supplied to Base-N decode is not a byte[] or a String\n+  #193 = Methodref          #182.#120     // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n+  #194 = Methodref          #175.#195     // org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n+  #195 = NameAndType        #196:#190     // getBytesUtf8:(Ljava/lang/String;)[B\n+  #196 = Utf8               getBytesUtf8\n+  #197 = Utf8               Ljava/lang/String;\n+  #198 = Methodref          #68.#48       // org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n+  #199 = Methodref          #1.#200       // org/apache/commons/codec/binary/BaseNCodec.decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+  #200 = NameAndType        #181:#201     // decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+  #201 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+  #202 = Methodref          #1.#203       // org/apache/commons/codec/binary/BaseNCodec.readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+  #203 = NameAndType        #140:#141     // readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+  #204 = Utf8               result\n+  #205 = Methodref          #1.#206       // org/apache/commons/codec/binary/BaseNCodec.encode:([BII)[B\n+  #206 = NameAndType        #158:#207     // encode:([BII)[B\n+  #207 = Utf8               ([BII)[B\n+  #208 = Methodref          #1.#209       // org/apache/commons/codec/binary/BaseNCodec.encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+  #209 = NameAndType        #158:#201     // encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+  #210 = Utf8               offset\n+  #211 = Utf8               length\n+  #212 = Utf8               buf\n+  #213 = Utf8               isInAlphabet\n+  #214 = Utf8               ([BZ)Z\n+  #215 = Methodref          #1.#216       // org/apache/commons/codec/binary/BaseNCodec.isInAlphabet:(B)Z\n+  #216 = NameAndType        #213:#156     // isInAlphabet:(B)Z\n+  #217 = Methodref          #1.#218       // org/apache/commons/codec/binary/BaseNCodec.isWhiteSpace:(B)Z\n+  #218 = NameAndType        #155:#156     // isWhiteSpace:(B)Z\n+  #219 = Utf8               arrayOctet\n+  #220 = Utf8               allowWSPad\n+  #221 = Utf8               octet\n+  #222 = Utf8               (Ljava/lang/String;)Z\n+  #223 = Methodref          #1.#224       // org/apache/commons/codec/binary/BaseNCodec.isInAlphabet:([BZ)Z\n+  #224 = NameAndType        #213:#214     // isInAlphabet:([BZ)Z\n+  #225 = Utf8               basen\n+  #226 = Utf8               containsAlphabetOrPad\n+  #227 = Utf8               ([B)Z\n+  #228 = Utf8               element\n+  #229 = Utf8               getEncodedLength\n+  #230 = Utf8               ([B)J\n+  #231 = Utf8               J\n+  #232 = Utf8               SourceFile\n+  #233 = Utf8               BaseNCodec.java\n+  #234 = Utf8               InnerClasses\n+  #235 = Utf8               Context\n {\n   static final int EOF = -1;\n     descriptor: I\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n     ConstantValue: int -1\n \n   public static final int MIME_CHUNK_SIZE = 76;\n@@ -288,15 +285,15 @@\n \n   protected final byte PAD = 61;\n     descriptor: B\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n     ConstantValue: int 61\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #186()\n+      0: #31()\n         java.lang.Deprecated\n \n   protected final byte pad;\n     descriptor: B\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n \n   private final int unencodedBlockSize;\n@@ -322,15 +319,15 @@\n       stack=6, locals=5, args_size=5\n          0: aload_0\n          1: iload_1\n          2: iload_2\n          3: iload_3\n          4: iload         4\n          6: bipush        61\n-         8: invokespecial #5                  // Method \"<init>\":(IIIIB)V\n+         8: invokespecial #40                 // Method \"<init>\":(IIIIB)V\n         11: return\n       LineNumberTable:\n         line 203: 0\n         line 204: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n@@ -341,24 +338,24 @@\n \n   protected org.apache.commons.codec.binary.BaseNCodec(int, int, int, int, byte);\n     descriptor: (IIIIB)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=7, args_size=6\n          0: aload_0\n-         1: invokespecial #9                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #47                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: bipush        61\n-         7: putfield      #14                 // Field PAD:B\n+         7: putfield      #50                 // Field PAD:B\n         10: aload_0\n         11: iload_1\n-        12: putfield      #18                 // Field unencodedBlockSize:I\n+        12: putfield      #52                 // Field unencodedBlockSize:I\n         15: aload_0\n         16: iload_2\n-        17: putfield      #22                 // Field encodedBlockSize:I\n+        17: putfield      #54                 // Field encodedBlockSize:I\n         20: iload_3\n         21: ifle          33\n         24: iload         4\n         26: ifle          33\n         29: iconst_1\n         30: goto          34\n         33: iconst_0\n@@ -369,25 +366,25 @@\n         42: iload_3\n         43: iload_2\n         44: idiv\n         45: iload_2\n         46: imul\n         47: goto          51\n         50: iconst_0\n-        51: putfield      #25                 // Field lineLength:I\n+        51: putfield      #56                 // Field lineLength:I\n         54: aload_0\n         55: iload         4\n-        57: putfield      #28                 // Field chunkSeparatorLength:I\n+        57: putfield      #58                 // Field chunkSeparatorLength:I\n         60: aload_0\n         61: iload         5\n-        63: putfield      #31                 // Field pad:B\n+        63: putfield      #60                 // Field pad:B\n         66: return\n       LineNumberTable:\n-        line 216: 0\n-        line 170: 4\n+        line 215: 0\n+        line 171: 4\n         line 217: 10\n         line 218: 15\n         line 219: 20\n         line 220: 36\n         line 221: 54\n         line 223: 60\n         line 224: 66\n@@ -418,43 +415,41 @@\n \n   boolean hasData(org.apache.commons.codec.binary.BaseNCodec$Context);\n     descriptor: (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n     flags: (0x0000)\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_1\n-         1: getfield      #34                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n-         4: ifnull        11\n+         1: getfield      #67                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+         4: ifnull        9\n          7: iconst_1\n-         8: goto          12\n-        11: iconst_0\n-        12: ireturn\n+         8: ireturn\n+         9: iconst_0\n+        10: ireturn\n       LineNumberTable:\n         line 233: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      13     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n-            0      13     1 context   Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-      StackMapTable: number_of_entries = 2\n-        frame_type = 11 /* same */\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n+            0      11     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n+            0      11     1 context   Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+      StackMapTable: number_of_entries = 1\n+        frame_type = 9 /* same */\n \n   int available(org.apache.commons.codec.binary.BaseNCodec$Context);\n     descriptor: (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n     flags: (0x0000)\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: getfield      #34                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+         1: getfield      #67                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n          4: ifnull        19\n          7: aload_1\n-         8: getfield      #40                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+         8: getfield      #77                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n         11: aload_1\n-        12: getfield      #43                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n+        12: getfield      #80                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n         15: isub\n         16: goto          20\n         19: iconst_0\n         20: ireturn\n       LineNumberTable:\n         line 243: 0\n       LocalVariableTable:\n@@ -481,49 +476,49 @@\n \n   private static byte[] resizeBuffer(org.apache.commons.codec.binary.BaseNCodec$Context, int);\n     descriptor: (Lorg/apache/commons/codec/binary/BaseNCodec$Context;I)[B\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=5, locals=5, args_size=2\n          0: aload_0\n-         1: getfield      #34                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+         1: getfield      #67                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n          4: arraylength\n          5: istore_2\n          6: iload_2\n          7: iconst_2\n          8: imul\n          9: istore_3\n         10: iload_3\n         11: iload_1\n-        12: invokestatic  #46                 // Method compareUnsigned:(II)I\n+        12: invokestatic  #87                 // Method compareUnsigned:(II)I\n         15: ifge          20\n         18: iload_1\n         19: istore_3\n         20: iload_3\n-        21: ldc           #50                 // int 2147483639\n-        23: invokestatic  #46                 // Method compareUnsigned:(II)I\n+        21: ldc           #22                 // int 2147483639\n+        23: invokestatic  #87                 // Method compareUnsigned:(II)I\n         26: ifle          34\n         29: iload_1\n-        30: invokestatic  #51                 // Method createPositiveCapacity:(I)I\n+        30: invokestatic  #91                 // Method createPositiveCapacity:(I)I\n         33: istore_3\n         34: iload_3\n         35: newarray       byte\n         37: astore        4\n         39: aload_0\n-        40: getfield      #34                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+        40: getfield      #67                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n         43: iconst_0\n         44: aload         4\n         46: iconst_0\n         47: aload_0\n-        48: getfield      #34                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+        48: getfield      #67                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n         51: arraylength\n-        52: invokestatic  #55                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        52: invokestatic  #95                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         55: aload_0\n         56: aload         4\n-        58: putfield      #34                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+        58: putfield      #67                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n         61: aload         4\n         63: areturn\n       LineNumberTable:\n         line 264: 0\n         line 265: 6\n         line 266: 10\n         line 267: 18\n@@ -548,118 +543,117 @@\n \n   private static int compareUnsigned(int, int);\n     descriptor: (II)I\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: iload_0\n-         1: ldc           #61                 // int -2147483648\n+         1: ldc           #105                // int -2147483648\n          3: iadd\n          4: iload_1\n-         5: ldc           #61                 // int -2147483648\n+         5: ldc           #105                // int -2147483648\n          7: iadd\n-         8: invokestatic  #62                 // Method java/lang/Integer.compare:(II)I\n+         8: invokestatic  #106                // Method java/lang/Integer.compare:(II)I\n         11: ireturn\n       LineNumberTable:\n         line 293: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0     x   I\n             0      12     1     y   I\n \n   private static int createPositiveCapacity(int);\n     descriptor: (I)I\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=7, locals=1, args_size=1\n          0: iload_0\n-         1: ifge          36\n-         4: new           #65                 // class java/lang/OutOfMemoryError\n+         1: ifge          33\n+         4: new           #113                // class java/lang/OutOfMemoryError\n          7: dup\n-         8: new           #67                 // class java/lang/StringBuilder\n+         8: new           #115                // class java/lang/StringBuilder\n         11: dup\n-        12: invokespecial #69                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        15: ldc           #70                 // String Unable to allocate array size:\n-        17: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        20: iload_0\n-        21: i2l\n-        22: ldc2_w        #76                 // long 4294967295l\n-        25: land\n-        26: invokevirtual #78                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-        29: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        32: invokespecial #85                 // Method java/lang/OutOfMemoryError.\"<init>\":(Ljava/lang/String;)V\n-        35: athrow\n-        36: iload_0\n-        37: ldc           #50                 // int 2147483639\n-        39: if_icmple     46\n-        42: iload_0\n-        43: goto          48\n-        46: ldc           #50                 // int 2147483639\n-        48: ireturn\n+        12: ldc           #117                // String Unable to allocate array size:\n+        14: invokespecial #119                // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        17: iload_0\n+        18: i2l\n+        19: ldc2_w        #122                // long 4294967295l\n+        22: land\n+        23: invokevirtual #124                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        26: invokevirtual #128                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        29: invokespecial #132                // Method java/lang/OutOfMemoryError.\"<init>\":(Ljava/lang/String;)V\n+        32: athrow\n+        33: iload_0\n+        34: ldc           #22                 // int 2147483639\n+        36: if_icmple     43\n+        39: iload_0\n+        40: goto          45\n+        43: ldc           #22                 // int 2147483639\n+        45: ireturn\n       LineNumberTable:\n         line 306: 0\n         line 308: 4\n-        line 318: 36\n-        line 319: 42\n-        line 320: 46\n-        line 318: 48\n+        line 318: 33\n+        line 319: 39\n+        line 320: 43\n+        line 318: 45\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      49     0 minCapacity   I\n+            0      46     0 minCapacity   I\n       StackMapTable: number_of_entries = 3\n-        frame_type = 36 /* same */\n+        frame_type = 33 /* same */\n         frame_type = 9 /* same */\n         frame_type = 65 /* same_locals_1_stack_item */\n           stack = [ int ]\n \n   protected byte[] ensureBufferSize(int, org.apache.commons.codec.binary.BaseNCodec$Context);\n     descriptor: (ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_2\n-         1: getfield      #34                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+         1: getfield      #67                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n          4: ifnonnull     30\n          7: aload_2\n          8: aload_0\n-         9: invokevirtual #88                 // Method getDefaultBufferSize:()I\n+         9: invokevirtual #135                // Method getDefaultBufferSize:()I\n         12: newarray       byte\n-        14: putfield      #34                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+        14: putfield      #67                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n         17: aload_2\n         18: iconst_0\n-        19: putfield      #40                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+        19: putfield      #77                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n         22: aload_2\n         23: iconst_0\n-        24: putfield      #43                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n+        24: putfield      #80                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n         27: goto          56\n         30: aload_2\n-        31: getfield      #40                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+        31: getfield      #77                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n         34: iload_1\n         35: iadd\n         36: aload_2\n-        37: getfield      #34                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+        37: getfield      #67                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n         40: arraylength\n         41: isub\n         42: ifle          56\n         45: aload_2\n         46: aload_2\n-        47: getfield      #40                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+        47: getfield      #77                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n         50: iload_1\n         51: iadd\n-        52: invokestatic  #92                 // Method resizeBuffer:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;I)[B\n+        52: invokestatic  #137                // Method resizeBuffer:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;I)[B\n         55: areturn\n         56: aload_2\n-        57: getfield      #34                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+        57: getfield      #67                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n         60: areturn\n       LineNumberTable:\n         line 331: 0\n         line 332: 7\n         line 333: 17\n         line 334: 22\n-        line 338: 30\n+        line 338: 27\n         line 339: 45\n         line 341: 56\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      61     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n             0      61     1  size   I\n             0      61     2 context   Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n@@ -669,48 +663,48 @@\n \n   int readResults(byte[], int, int, org.apache.commons.codec.binary.BaseNCodec$Context);\n     descriptor: ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n     flags: (0x0000)\n     Code:\n       stack=5, locals=6, args_size=5\n          0: aload         4\n-         2: getfield      #34                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+         2: getfield      #67                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n          5: ifnull        71\n          8: aload_0\n          9: aload         4\n-        11: invokevirtual #96                 // Method available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+        11: invokevirtual #142                // Method available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n         14: iload_3\n-        15: invokestatic  #100                // Method java/lang/Math.min:(II)I\n+        15: invokestatic  #144                // Method java/lang/Math.min:(II)I\n         18: istore        5\n         20: aload         4\n-        22: getfield      #34                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+        22: getfield      #67                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n         25: aload         4\n-        27: getfield      #43                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n+        27: getfield      #80                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n         30: aload_1\n         31: iload_2\n         32: iload         5\n-        34: invokestatic  #55                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        34: invokestatic  #95                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         37: aload         4\n         39: dup\n-        40: getfield      #43                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n+        40: getfield      #80                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n         43: iload         5\n         45: iadd\n-        46: putfield      #43                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n+        46: putfield      #80                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n         49: aload         4\n-        51: getfield      #43                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n+        51: getfield      #80                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n         54: aload         4\n-        56: getfield      #40                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+        56: getfield      #77                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n         59: if_icmplt     68\n         62: aload         4\n         64: aconst_null\n-        65: putfield      #34                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+        65: putfield      #67                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n         68: iload         5\n         70: ireturn\n         71: aload         4\n-        73: getfield      #105                // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n+        73: getfield      #149                // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n         76: ifeq          83\n         79: iconst_m1\n         80: goto          84\n         83: iconst_0\n         84: ireturn\n       LineNumberTable:\n         line 361: 0\n@@ -719,20 +713,20 @@\n         line 364: 37\n         line 365: 49\n         line 366: 62\n         line 368: 68\n         line 370: 71\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           20      51     5   len   I\n             0      85     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n             0      85     1     b   [B\n             0      85     2  bPos   I\n             0      85     3 bAvail   I\n             0      85     4 context   Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+           20      51     5   len   I\n       StackMapTable: number_of_entries = 4\n         frame_type = 252 /* append */\n           offset_delta = 68\n           locals = [ int ]\n         frame_type = 250 /* chop */\n           offset_delta = 2\n         frame_type = 11 /* same */\n@@ -766,51 +760,51 @@\n       StackMapTable: number_of_entries = 2\n         frame_type = 44 /* same */\n         frame_type = 1 /* same */\n \n   public java.lang.Object encode(java.lang.Object) throws org.apache.commons.codec.EncoderException;\n     descriptor: (Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws org.apache.commons.codec.EncoderException\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n-         1: instanceof    #109                // class \"[B\"\n+         1: instanceof    #163                // class \"[B\"\n          4: ifne          17\n-         7: new           #110                // class org/apache/commons/codec/EncoderException\n+         7: new           #161                // class org/apache/commons/codec/EncoderException\n         10: dup\n-        11: ldc           #112                // String Parameter supplied to Base-N encode is not a byte[]\n-        13: invokespecial #114                // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #164                // String Parameter supplied to Base-N encode is not a byte[]\n+        13: invokespecial #166                // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n         18: aload_1\n-        19: checkcast     #109                // class \"[B\"\n-        22: invokevirtual #115                // Method encode:([B)[B\n+        19: checkcast     #163                // class \"[B\"\n+        22: invokevirtual #167                // Method encode:([B)[B\n         25: areturn\n       LineNumberTable:\n         line 404: 0\n         line 405: 7\n         line 407: 17\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      26     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n             0      26     1   obj   Ljava/lang/Object;\n       StackMapTable: number_of_entries = 1\n         frame_type = 17 /* same */\n-    Exceptions:\n-      throws org.apache.commons.codec.EncoderException\n \n   public java.lang.String encodeToString(byte[]);\n     descriptor: ([B)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #115                // Method encode:([B)[B\n-         5: invokestatic  #119                // Method org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;\n+         2: invokevirtual #167                // Method encode:([B)[B\n+         5: invokestatic  #174                // Method org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;\n          8: areturn\n       LineNumberTable:\n         line 419: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n             0       9     1 pArray   [B\n@@ -818,75 +812,75 @@\n   public java.lang.String encodeAsString(byte[]);\n     descriptor: ([B)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #115                // Method encode:([B)[B\n-         5: invokestatic  #119                // Method org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;\n+         2: invokevirtual #167                // Method encode:([B)[B\n+         5: invokestatic  #174                // Method org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;\n          8: areturn\n       LineNumberTable:\n         line 432: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n             0       9     1 pArray   [B\n \n   public java.lang.Object decode(java.lang.Object) throws org.apache.commons.codec.DecoderException;\n     descriptor: (Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws org.apache.commons.codec.DecoderException\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n-         1: instanceof    #109                // class \"[B\"\n+         1: instanceof    #163                // class \"[B\"\n          4: ifeq          16\n          7: aload_0\n          8: aload_1\n-         9: checkcast     #109                // class \"[B\"\n-        12: invokevirtual #125                // Method decode:([B)[B\n+         9: checkcast     #163                // class \"[B\"\n+        12: invokevirtual #184                // Method decode:([B)[B\n         15: areturn\n         16: aload_1\n-        17: instanceof    #128                // class java/lang/String\n+        17: instanceof    #186                // class java/lang/String\n         20: ifeq          32\n         23: aload_0\n         24: aload_1\n-        25: checkcast     #128                // class java/lang/String\n-        28: invokevirtual #130                // Method decode:(Ljava/lang/String;)[B\n+        25: checkcast     #186                // class java/lang/String\n+        28: invokevirtual #188                // Method decode:(Ljava/lang/String;)[B\n         31: areturn\n-        32: new           #133                // class org/apache/commons/codec/DecoderException\n+        32: new           #182                // class org/apache/commons/codec/DecoderException\n         35: dup\n-        36: ldc           #135                // String Parameter supplied to Base-N decode is not a byte[] or a String\n-        38: invokespecial #137                // Method org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n+        36: ldc           #191                // String Parameter supplied to Base-N decode is not a byte[] or a String\n+        38: invokespecial #193                // Method org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n         41: athrow\n       LineNumberTable:\n         line 448: 0\n         line 449: 7\n         line 450: 16\n         line 451: 23\n         line 453: 32\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      42     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n             0      42     1   obj   Ljava/lang/Object;\n       StackMapTable: number_of_entries = 2\n         frame_type = 16 /* same */\n         frame_type = 15 /* same */\n-    Exceptions:\n-      throws org.apache.commons.codec.DecoderException\n \n   public byte[] decode(java.lang.String);\n     descriptor: (Ljava/lang/String;)[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #138                // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n-         5: invokevirtual #125                // Method decode:([B)[B\n+         2: invokestatic  #194                // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n+         5: invokevirtual #184                // Method decode:([B)[B\n          8: areturn\n       LineNumberTable:\n         line 465: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n             0       9     1 pArray   Ljava/lang/String;\n@@ -899,42 +893,42 @@\n          0: aload_1\n          1: ifnull        9\n          4: aload_1\n          5: arraylength\n          6: ifne          11\n          9: aload_1\n         10: areturn\n-        11: new           #35                 // class org/apache/commons/codec/binary/BaseNCodec$Context\n+        11: new           #68                 // class org/apache/commons/codec/binary/BaseNCodec$Context\n         14: dup\n-        15: invokespecial #141                // Method org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n+        15: invokespecial #198                // Method org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n         18: astore_2\n         19: aload_0\n         20: aload_1\n         21: iconst_0\n         22: aload_1\n         23: arraylength\n         24: aload_2\n-        25: invokevirtual #142                // Method decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+        25: invokevirtual #199                // Method decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n         28: aload_0\n         29: aload_1\n         30: iconst_0\n         31: iconst_m1\n         32: aload_2\n-        33: invokevirtual #142                // Method decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+        33: invokevirtual #199                // Method decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n         36: aload_2\n-        37: getfield      #40                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+        37: getfield      #77                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n         40: newarray       byte\n         42: astore_3\n         43: aload_0\n         44: aload_3\n         45: iconst_0\n         46: aload_3\n         47: arraylength\n         48: aload_2\n-        49: invokevirtual #145                // Method readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+        49: invokevirtual #202                // Method readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n         52: pop\n         53: aload_3\n         54: areturn\n       LineNumberTable:\n         line 477: 0\n         line 478: 9\n         line 480: 11\n@@ -966,15 +960,15 @@\n          9: aload_1\n         10: areturn\n         11: aload_0\n         12: aload_1\n         13: iconst_0\n         14: aload_1\n         15: arraylength\n-        16: invokevirtual #149                // Method encode:([BII)[B\n+        16: invokevirtual #205                // Method encode:([BII)[B\n         19: areturn\n       LineNumberTable:\n         line 497: 0\n         line 498: 9\n         line 500: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -992,44 +986,44 @@\n          0: aload_1\n          1: ifnull        9\n          4: aload_1\n          5: arraylength\n          6: ifne          11\n          9: aload_1\n         10: areturn\n-        11: new           #35                 // class org/apache/commons/codec/binary/BaseNCodec$Context\n+        11: new           #68                 // class org/apache/commons/codec/binary/BaseNCodec$Context\n         14: dup\n-        15: invokespecial #141                // Method org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n+        15: invokespecial #198                // Method org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n         18: astore        4\n         20: aload_0\n         21: aload_1\n         22: iload_2\n         23: iload_3\n         24: aload         4\n-        26: invokevirtual #152                // Method encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+        26: invokevirtual #208                // Method encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n         29: aload_0\n         30: aload_1\n         31: iload_2\n         32: iconst_m1\n         33: aload         4\n-        35: invokevirtual #152                // Method encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+        35: invokevirtual #208                // Method encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n         38: aload         4\n-        40: getfield      #40                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+        40: getfield      #77                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n         43: aload         4\n-        45: getfield      #43                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n+        45: getfield      #80                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n         48: isub\n         49: newarray       byte\n         51: astore        5\n         53: aload_0\n         54: aload         5\n         56: iconst_0\n         57: aload         5\n         59: arraylength\n         60: aload         4\n-        62: invokevirtual #145                // Method readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+        62: invokevirtual #202                // Method readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n         65: pop\n         66: aload         5\n         68: areturn\n       LineNumberTable:\n         line 517: 0\n         line 518: 9\n         line 520: 11\n@@ -1064,81 +1058,84 @@\n \n   public boolean isInAlphabet(byte[], boolean);\n     descriptor: ([BZ)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=7, args_size=3\n          0: aload_1\n-         1: astore_3\n-         2: aload_3\n-         3: arraylength\n-         4: istore        4\n-         6: iconst_0\n-         7: istore        5\n-         9: iload         5\n-        11: iload         4\n-        13: if_icmpge     60\n-        16: aload_3\n-        17: iload         5\n-        19: baload\n-        20: istore        6\n-        22: aload_0\n-        23: iload         6\n-        25: invokevirtual #154                // Method isInAlphabet:(B)Z\n-        28: ifne          54\n-        31: iload_2\n-        32: ifeq          52\n-        35: iload         6\n-        37: aload_0\n-        38: getfield      #31                 // Field pad:B\n-        41: if_icmpeq     54\n-        44: iload         6\n-        46: invokestatic  #158                // Method isWhiteSpace:(B)Z\n-        49: ifne          54\n-        52: iconst_0\n-        53: ireturn\n-        54: iinc          5, 1\n-        57: goto          9\n-        60: iconst_1\n-        61: ireturn\n+         1: dup\n+         2: astore        6\n+         4: arraylength\n+         5: istore        5\n+         7: iconst_0\n+         8: istore        4\n+        10: goto          51\n+        13: aload         6\n+        15: iload         4\n+        17: baload\n+        18: istore_3\n+        19: aload_0\n+        20: iload_3\n+        21: invokevirtual #215                // Method isInAlphabet:(B)Z\n+        24: ifne          48\n+        27: iload_2\n+        28: ifeq          46\n+        31: iload_3\n+        32: aload_0\n+        33: getfield      #60                 // Field pad:B\n+        36: if_icmpeq     48\n+        39: iload_3\n+        40: invokestatic  #217                // Method isWhiteSpace:(B)Z\n+        43: ifne          48\n+        46: iconst_0\n+        47: ireturn\n+        48: iinc          4, 1\n+        51: iload         4\n+        53: iload         5\n+        55: if_icmplt     13\n+        58: iconst_1\n+        59: ireturn\n       LineNumberTable:\n         line 555: 0\n-        line 556: 22\n-        line 557: 46\n-        line 558: 52\n-        line 555: 54\n-        line 561: 60\n+        line 556: 19\n+        line 557: 27\n+        line 558: 46\n+        line 555: 48\n+        line 561: 58\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           22      32     6 octet   B\n-            0      62     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n-            0      62     1 arrayOctet   [B\n-            0      62     2 allowWSPad   Z\n+            0      60     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n+            0      60     1 arrayOctet   [B\n+            0      60     2 allowWSPad   Z\n+           19      29     3 octet   B\n       StackMapTable: number_of_entries = 4\n-        frame_type = 254 /* append */\n-          offset_delta = 9\n-          locals = [ class \"[B\", int, int ]\n-        frame_type = 252 /* append */\n-          offset_delta = 42\n-          locals = [ int ]\n-        frame_type = 250 /* chop */\n+        frame_type = 255 /* full_frame */\n+          offset_delta = 13\n+          locals = [ class org/apache/commons/codec/binary/BaseNCodec, class \"[B\", int, top, int, int, class \"[B\" ]\n+          stack = []\n+        frame_type = 255 /* full_frame */\n+          offset_delta = 32\n+          locals = [ class org/apache/commons/codec/binary/BaseNCodec, class \"[B\", int, int, int, int, class \"[B\" ]\n+          stack = []\n+        frame_type = 255 /* full_frame */\n           offset_delta = 1\n-        frame_type = 248 /* chop */\n-          offset_delta = 5\n+          locals = [ class org/apache/commons/codec/binary/BaseNCodec, class \"[B\", int, top, int, int, class \"[B\" ]\n+          stack = []\n+        frame_type = 2 /* same */\n \n   public boolean isInAlphabet(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #138                // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n+         2: invokestatic  #194                // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n          5: iconst_1\n-         6: invokevirtual #161                // Method isInAlphabet:([BZ)Z\n+         6: invokevirtual #223                // Method isInAlphabet:([BZ)Z\n          9: ireturn\n       LineNumberTable:\n         line 574: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n             0      10     1 basen   Ljava/lang/String;\n@@ -1149,105 +1146,108 @@\n     Code:\n       stack=2, locals=6, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: iconst_0\n          5: ireturn\n          6: aload_1\n-         7: astore_2\n-         8: aload_2\n-         9: arraylength\n-        10: istore_3\n-        11: iconst_0\n-        12: istore        4\n-        14: iload         4\n-        16: iload_3\n-        17: if_icmpge     52\n-        20: aload_2\n-        21: iload         4\n-        23: baload\n-        24: istore        5\n-        26: aload_0\n-        27: getfield      #31                 // Field pad:B\n-        30: iload         5\n-        32: if_icmpeq     44\n-        35: aload_0\n-        36: iload         5\n-        38: invokevirtual #154                // Method isInAlphabet:(B)Z\n-        41: ifeq          46\n-        44: iconst_1\n-        45: ireturn\n-        46: iinc          4, 1\n-        49: goto          14\n-        52: iconst_0\n-        53: ireturn\n+         7: dup\n+         8: astore        5\n+        10: arraylength\n+        11: istore        4\n+        13: iconst_0\n+        14: istore_3\n+        15: goto          44\n+        18: aload         5\n+        20: iload_3\n+        21: baload\n+        22: istore_2\n+        23: aload_0\n+        24: getfield      #60                 // Field pad:B\n+        27: iload_2\n+        28: if_icmpeq     39\n+        31: aload_0\n+        32: iload_2\n+        33: invokevirtual #215                // Method isInAlphabet:(B)Z\n+        36: ifeq          41\n+        39: iconst_1\n+        40: ireturn\n+        41: iinc          3, 1\n+        44: iload_3\n+        45: iload         4\n+        47: if_icmplt     18\n+        50: iconst_0\n+        51: ireturn\n       LineNumberTable:\n         line 587: 0\n         line 588: 4\n         line 590: 6\n-        line 591: 26\n-        line 592: 44\n-        line 590: 46\n-        line 595: 52\n+        line 591: 23\n+        line 592: 39\n+        line 590: 41\n+        line 595: 50\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           26      20     5 element   B\n-            0      54     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n-            0      54     1 arrayOctet   [B\n+            0      52     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n+            0      52     1 arrayOctet   [B\n+           23      18     2 element   B\n       StackMapTable: number_of_entries = 5\n         frame_type = 6 /* same */\n-        frame_type = 254 /* append */\n-          offset_delta = 7\n-          locals = [ class \"[B\", int, int ]\n-        frame_type = 252 /* append */\n-          offset_delta = 29\n-          locals = [ int ]\n-        frame_type = 250 /* chop */\n+        frame_type = 255 /* full_frame */\n+          offset_delta = 11\n+          locals = [ class org/apache/commons/codec/binary/BaseNCodec, class \"[B\", top, int, int, class \"[B\" ]\n+          stack = []\n+        frame_type = 255 /* full_frame */\n+          offset_delta = 20\n+          locals = [ class org/apache/commons/codec/binary/BaseNCodec, class \"[B\", int, int, int, class \"[B\" ]\n+          stack = []\n+        frame_type = 255 /* full_frame */\n           offset_delta = 1\n-        frame_type = 248 /* chop */\n-          offset_delta = 5\n+          locals = [ class org/apache/commons/codec/binary/BaseNCodec, class \"[B\", top, int, int, class \"[B\" ]\n+          stack = []\n+        frame_type = 2 /* same */\n \n   public long getEncodedLength(byte[]);\n     descriptor: ([B)J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=4, args_size=2\n          0: aload_1\n          1: arraylength\n          2: aload_0\n-         3: getfield      #18                 // Field unencodedBlockSize:I\n+         3: getfield      #52                 // Field unencodedBlockSize:I\n          6: iadd\n          7: iconst_1\n          8: isub\n          9: aload_0\n-        10: getfield      #18                 // Field unencodedBlockSize:I\n+        10: getfield      #52                 // Field unencodedBlockSize:I\n         13: idiv\n         14: i2l\n         15: aload_0\n-        16: getfield      #22                 // Field encodedBlockSize:I\n+        16: getfield      #54                 // Field encodedBlockSize:I\n         19: i2l\n         20: lmul\n         21: lstore_2\n         22: aload_0\n-        23: getfield      #25                 // Field lineLength:I\n+        23: getfield      #56                 // Field lineLength:I\n         26: ifle          53\n         29: lload_2\n         30: lload_2\n         31: aload_0\n-        32: getfield      #25                 // Field lineLength:I\n+        32: getfield      #56                 // Field lineLength:I\n         35: i2l\n         36: ladd\n         37: lconst_1\n         38: lsub\n         39: aload_0\n-        40: getfield      #25                 // Field lineLength:I\n+        40: getfield      #56                 // Field lineLength:I\n         43: i2l\n         44: ldiv\n         45: aload_0\n-        46: getfield      #28                 // Field chunkSeparatorLength:I\n+        46: getfield      #58                 // Field chunkSeparatorLength:I\n         49: i2l\n         50: lmul\n         51: ladd\n         52: lstore_2\n         53: lload_2\n         54: lreturn\n       LineNumberTable:\n@@ -1263,8 +1263,8 @@\n       StackMapTable: number_of_entries = 1\n         frame_type = 252 /* append */\n           offset_delta = 53\n           locals = [ long ]\n }\n SourceFile: \"BaseNCodec.java\"\n InnerClasses:\n-  static #238= #35 of #3;                 // Context=class org/apache/commons/codec/binary/BaseNCodec$Context of class org/apache/commons/codec/binary/BaseNCodec\n+  static #235= #68 of #1;                 // Context=class org/apache/commons/codec/binary/BaseNCodec$Context of class org/apache/commons/codec/binary/BaseNCodec\n"}]}
