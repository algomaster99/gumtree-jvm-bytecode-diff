{"diffoscope-json-version": 1, "source1": "first/CircularBufferInputStream.class", "source2": "second/CircularBufferInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,53 +1,53 @@\n-  SHA-256 checksum b552eb4949d14d16aeff2e81e836d1bcf43aa1d6c5fb017d41a11b182948f5aa\n+  SHA-256 checksum ac80c00e2c0363daabae9a41545e693dd81e2bf97c01d59732a605b96d8841b6\n   Compiled from \"CircularBufferInputStream.java\"\n public class org.apache.commons.io.input.buffer.CircularBufferInputStream extends java.io.InputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #36                         // org/apache/commons/io/input/buffer/CircularBufferInputStream\n   super_class: #12                        // java/io/InputStream\n   interfaces: 0, fields: 4, methods: 8, attributes: 1\n Constant pool:\n-    #1 = Methodref          #12.#81       // java/io/InputStream.\"<init>\":()V\n-    #2 = Class              #82           // java/lang/IllegalArgumentException\n-    #3 = Class              #83           // java/lang/StringBuilder\n-    #4 = Methodref          #3.#81        // java/lang/StringBuilder.\"<init>\":()V\n-    #5 = String             #84           // Invalid bufferSize:\n-    #6 = Methodref          #3.#85        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-    #7 = Methodref          #3.#86        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-    #8 = Methodref          #3.#87        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-    #9 = Methodref          #2.#88        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+    #1 = Methodref          #12.#79       // java/io/InputStream.\"<init>\":()V\n+    #2 = Class              #80           // java/lang/IllegalArgumentException\n+    #3 = Class              #81           // java/lang/StringBuilder\n+    #4 = Methodref          #3.#79        // java/lang/StringBuilder.\"<init>\":()V\n+    #5 = String             #82           // Invalid bufferSize:\n+    #6 = Methodref          #3.#83        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+    #7 = Methodref          #3.#84        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+    #8 = Methodref          #3.#85        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+    #9 = Methodref          #2.#86        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n    #10 = String             #52           // inputStream\n-   #11 = Methodref          #89.#90       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #12 = Class              #91           // java/io/InputStream\n-   #13 = Fieldref           #36.#92       // org/apache/commons/io/input/buffer/CircularBufferInputStream.in:Ljava/io/InputStream;\n-   #14 = Class              #93           // org/apache/commons/io/input/buffer/CircularByteBuffer\n-   #15 = Methodref          #14.#94       // org/apache/commons/io/input/buffer/CircularByteBuffer.\"<init>\":(I)V\n-   #16 = Fieldref           #36.#95       // org/apache/commons/io/input/buffer/CircularBufferInputStream.buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-   #17 = Fieldref           #36.#96       // org/apache/commons/io/input/buffer/CircularBufferInputStream.bufferSize:I\n-   #18 = Fieldref           #36.#97       // org/apache/commons/io/input/buffer/CircularBufferInputStream.eofSeen:Z\n-   #19 = Class              #98           // org/apache/commons/io/IOUtils\n-   #20 = Methodref          #36.#99       // org/apache/commons/io/input/buffer/CircularBufferInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-   #21 = Methodref          #14.#100      // org/apache/commons/io/input/buffer/CircularByteBuffer.getSpace:()I\n-   #22 = Methodref          #12.#101      // java/io/InputStream.read:([BII)I\n-   #23 = Methodref          #14.#102      // org/apache/commons/io/input/buffer/CircularByteBuffer.add:([BII)V\n-   #24 = Methodref          #14.#103      // org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n-   #25 = Methodref          #36.#104      // org/apache/commons/io/input/buffer/CircularBufferInputStream.fillBuffer:()V\n-   #26 = Methodref          #14.#105      // org/apache/commons/io/input/buffer/CircularByteBuffer.hasBytes:()Z\n-   #27 = Methodref          #36.#106      // org/apache/commons/io/input/buffer/CircularBufferInputStream.haveBytes:(I)Z\n-   #28 = Methodref          #14.#107      // org/apache/commons/io/input/buffer/CircularByteBuffer.read:()B\n-   #29 = Methodref          #36.#101      // org/apache/commons/io/input/buffer/CircularBufferInputStream.read:([BII)I\n-   #30 = String             #108          // Buffer\n-   #31 = String             #109          // Offset must not be negative\n-   #32 = String             #110          // Length must not be negative\n-   #33 = Methodref          #111.#112     // java/lang/Math.min:(II)I\n-   #34 = Methodref          #12.#113      // java/io/InputStream.close:()V\n-   #35 = Methodref          #14.#114      // org/apache/commons/io/input/buffer/CircularByteBuffer.clear:()V\n-   #36 = Class              #115          // org/apache/commons/io/input/buffer/CircularBufferInputStream\n+   #11 = Methodref          #87.#88       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #12 = Class              #89           // java/io/InputStream\n+   #13 = Fieldref           #36.#90       // org/apache/commons/io/input/buffer/CircularBufferInputStream.in:Ljava/io/InputStream;\n+   #14 = Class              #91           // org/apache/commons/io/input/buffer/CircularByteBuffer\n+   #15 = Methodref          #14.#92       // org/apache/commons/io/input/buffer/CircularByteBuffer.\"<init>\":(I)V\n+   #16 = Fieldref           #36.#93       // org/apache/commons/io/input/buffer/CircularBufferInputStream.buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+   #17 = Fieldref           #36.#94       // org/apache/commons/io/input/buffer/CircularBufferInputStream.bufferSize:I\n+   #18 = Fieldref           #36.#95       // org/apache/commons/io/input/buffer/CircularBufferInputStream.eofSeen:Z\n+   #19 = Class              #96           // org/apache/commons/io/IOUtils\n+   #20 = Methodref          #36.#97       // org/apache/commons/io/input/buffer/CircularBufferInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+   #21 = Methodref          #14.#98       // org/apache/commons/io/input/buffer/CircularByteBuffer.getSpace:()I\n+   #22 = Methodref          #12.#99       // java/io/InputStream.read:([BII)I\n+   #23 = Methodref          #14.#100      // org/apache/commons/io/input/buffer/CircularByteBuffer.add:([BII)V\n+   #24 = Methodref          #14.#101      // org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n+   #25 = Methodref          #36.#102      // org/apache/commons/io/input/buffer/CircularBufferInputStream.fillBuffer:()V\n+   #26 = Methodref          #14.#103      // org/apache/commons/io/input/buffer/CircularByteBuffer.hasBytes:()Z\n+   #27 = Methodref          #36.#104      // org/apache/commons/io/input/buffer/CircularBufferInputStream.haveBytes:(I)Z\n+   #28 = Methodref          #14.#105      // org/apache/commons/io/input/buffer/CircularByteBuffer.read:()B\n+   #29 = Methodref          #36.#99       // org/apache/commons/io/input/buffer/CircularBufferInputStream.read:([BII)I\n+   #30 = String             #106          // Buffer\n+   #31 = String             #107          // Offset must not be negative\n+   #32 = String             #108          // Length must not be negative\n+   #33 = Methodref          #109.#110     // java/lang/Math.min:(II)I\n+   #34 = Methodref          #12.#111      // java/io/InputStream.close:()V\n+   #35 = Methodref          #14.#112      // org/apache/commons/io/input/buffer/CircularByteBuffer.clear:()V\n+   #36 = Class              #113          // org/apache/commons/io/input/buffer/CircularBufferInputStream\n    #37 = Utf8               in\n    #38 = Utf8               Ljava/io/InputStream;\n    #39 = Utf8               buffer\n    #40 = Utf8               Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n    #41 = Utf8               bufferSize\n    #42 = Utf8               I\n    #43 = Utf8               eofSeen\n@@ -57,98 +57,96 @@\n    #47 = Utf8               Code\n    #48 = Utf8               LineNumberTable\n    #49 = Utf8               LocalVariableTable\n    #50 = Utf8               this\n    #51 = Utf8               Lorg/apache/commons/io/input/buffer/CircularBufferInputStream;\n    #52 = Utf8               inputStream\n    #53 = Utf8               StackMapTable\n-   #54 = Class              #115          // org/apache/commons/io/input/buffer/CircularBufferInputStream\n-   #55 = Class              #91           // java/io/InputStream\n-   #56 = Utf8               (Ljava/io/InputStream;)V\n-   #57 = Utf8               fillBuffer\n-   #58 = Utf8               ()V\n-   #59 = Utf8               res\n-   #60 = Utf8               space\n-   #61 = Utf8               buf\n-   #62 = Utf8               [B\n-   #63 = Class              #62           // \"[B\"\n-   #64 = Utf8               Exceptions\n-   #65 = Class              #116          // java/io/IOException\n-   #66 = Utf8               haveBytes\n-   #67 = Utf8               (I)Z\n-   #68 = Utf8               count\n-   #69 = Utf8               read\n-   #70 = Utf8               ()I\n-   #71 = Utf8               ([B)I\n-   #72 = Utf8               ([BII)I\n-   #73 = Utf8               i\n-   #74 = Utf8               targetBuffer\n-   #75 = Utf8               offset\n-   #76 = Utf8               length\n-   #77 = Utf8               result\n-   #78 = Utf8               close\n-   #79 = Utf8               SourceFile\n-   #80 = Utf8               CircularBufferInputStream.java\n-   #81 = NameAndType        #45:#58       // \"<init>\":()V\n-   #82 = Utf8               java/lang/IllegalArgumentException\n-   #83 = Utf8               java/lang/StringBuilder\n-   #84 = Utf8               Invalid bufferSize:\n-   #85 = NameAndType        #117:#118     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #86 = NameAndType        #117:#119     // append:(I)Ljava/lang/StringBuilder;\n-   #87 = NameAndType        #120:#121     // toString:()Ljava/lang/String;\n-   #88 = NameAndType        #45:#122      // \"<init>\":(Ljava/lang/String;)V\n-   #89 = Class              #123          // java/util/Objects\n-   #90 = NameAndType        #124:#125     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #91 = Utf8               java/io/InputStream\n-   #92 = NameAndType        #37:#38       // in:Ljava/io/InputStream;\n-   #93 = Utf8               org/apache/commons/io/input/buffer/CircularByteBuffer\n-   #94 = NameAndType        #45:#126      // \"<init>\":(I)V\n-   #95 = NameAndType        #39:#40       // buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-   #96 = NameAndType        #41:#42       // bufferSize:I\n-   #97 = NameAndType        #43:#44       // eofSeen:Z\n-   #98 = Utf8               org/apache/commons/io/IOUtils\n-   #99 = NameAndType        #45:#46       // \"<init>\":(Ljava/io/InputStream;I)V\n-  #100 = NameAndType        #127:#70      // getSpace:()I\n-  #101 = NameAndType        #69:#72       // read:([BII)I\n-  #102 = NameAndType        #128:#129     // add:([BII)V\n-  #103 = NameAndType        #130:#70      // getCurrentNumberOfBytes:()I\n-  #104 = NameAndType        #57:#58       // fillBuffer:()V\n-  #105 = NameAndType        #131:#132     // hasBytes:()Z\n-  #106 = NameAndType        #66:#67       // haveBytes:(I)Z\n-  #107 = NameAndType        #69:#133      // read:()B\n-  #108 = Utf8               Buffer\n-  #109 = Utf8               Offset must not be negative\n-  #110 = Utf8               Length must not be negative\n-  #111 = Class              #134          // java/lang/Math\n-  #112 = NameAndType        #135:#136     // min:(II)I\n-  #113 = NameAndType        #78:#58       // close:()V\n-  #114 = NameAndType        #137:#58      // clear:()V\n-  #115 = Utf8               org/apache/commons/io/input/buffer/CircularBufferInputStream\n-  #116 = Utf8               java/io/IOException\n-  #117 = Utf8               append\n-  #118 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #119 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #120 = Utf8               toString\n-  #121 = Utf8               ()Ljava/lang/String;\n-  #122 = Utf8               (Ljava/lang/String;)V\n-  #123 = Utf8               java/util/Objects\n-  #124 = Utf8               requireNonNull\n-  #125 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #126 = Utf8               (I)V\n-  #127 = Utf8               getSpace\n-  #128 = Utf8               add\n-  #129 = Utf8               ([BII)V\n-  #130 = Utf8               getCurrentNumberOfBytes\n-  #131 = Utf8               hasBytes\n-  #132 = Utf8               ()Z\n-  #133 = Utf8               ()B\n-  #134 = Utf8               java/lang/Math\n-  #135 = Utf8               min\n-  #136 = Utf8               (II)I\n-  #137 = Utf8               clear\n+   #54 = Utf8               (Ljava/io/InputStream;)V\n+   #55 = Utf8               fillBuffer\n+   #56 = Utf8               ()V\n+   #57 = Utf8               res\n+   #58 = Utf8               space\n+   #59 = Utf8               buf\n+   #60 = Utf8               [B\n+   #61 = Class              #60           // \"[B\"\n+   #62 = Utf8               Exceptions\n+   #63 = Class              #114          // java/io/IOException\n+   #64 = Utf8               haveBytes\n+   #65 = Utf8               (I)Z\n+   #66 = Utf8               count\n+   #67 = Utf8               read\n+   #68 = Utf8               ()I\n+   #69 = Utf8               ([B)I\n+   #70 = Utf8               ([BII)I\n+   #71 = Utf8               i\n+   #72 = Utf8               targetBuffer\n+   #73 = Utf8               offset\n+   #74 = Utf8               length\n+   #75 = Utf8               result\n+   #76 = Utf8               close\n+   #77 = Utf8               SourceFile\n+   #78 = Utf8               CircularBufferInputStream.java\n+   #79 = NameAndType        #45:#56       // \"<init>\":()V\n+   #80 = Utf8               java/lang/IllegalArgumentException\n+   #81 = Utf8               java/lang/StringBuilder\n+   #82 = Utf8               Invalid bufferSize:\n+   #83 = NameAndType        #115:#116     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #84 = NameAndType        #115:#117     // append:(I)Ljava/lang/StringBuilder;\n+   #85 = NameAndType        #118:#119     // toString:()Ljava/lang/String;\n+   #86 = NameAndType        #45:#120      // \"<init>\":(Ljava/lang/String;)V\n+   #87 = Class              #121          // java/util/Objects\n+   #88 = NameAndType        #122:#123     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #89 = Utf8               java/io/InputStream\n+   #90 = NameAndType        #37:#38       // in:Ljava/io/InputStream;\n+   #91 = Utf8               org/apache/commons/io/input/buffer/CircularByteBuffer\n+   #92 = NameAndType        #45:#124      // \"<init>\":(I)V\n+   #93 = NameAndType        #39:#40       // buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+   #94 = NameAndType        #41:#42       // bufferSize:I\n+   #95 = NameAndType        #43:#44       // eofSeen:Z\n+   #96 = Utf8               org/apache/commons/io/IOUtils\n+   #97 = NameAndType        #45:#46       // \"<init>\":(Ljava/io/InputStream;I)V\n+   #98 = NameAndType        #125:#68      // getSpace:()I\n+   #99 = NameAndType        #67:#70       // read:([BII)I\n+  #100 = NameAndType        #126:#127     // add:([BII)V\n+  #101 = NameAndType        #128:#68      // getCurrentNumberOfBytes:()I\n+  #102 = NameAndType        #55:#56       // fillBuffer:()V\n+  #103 = NameAndType        #129:#130     // hasBytes:()Z\n+  #104 = NameAndType        #64:#65       // haveBytes:(I)Z\n+  #105 = NameAndType        #67:#131      // read:()B\n+  #106 = Utf8               Buffer\n+  #107 = Utf8               Offset must not be negative\n+  #108 = Utf8               Length must not be negative\n+  #109 = Class              #132          // java/lang/Math\n+  #110 = NameAndType        #133:#134     // min:(II)I\n+  #111 = NameAndType        #76:#56       // close:()V\n+  #112 = NameAndType        #135:#56      // clear:()V\n+  #113 = Utf8               org/apache/commons/io/input/buffer/CircularBufferInputStream\n+  #114 = Utf8               java/io/IOException\n+  #115 = Utf8               append\n+  #116 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #117 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #118 = Utf8               toString\n+  #119 = Utf8               ()Ljava/lang/String;\n+  #120 = Utf8               (Ljava/lang/String;)V\n+  #121 = Utf8               java/util/Objects\n+  #122 = Utf8               requireNonNull\n+  #123 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #124 = Utf8               (I)V\n+  #125 = Utf8               getSpace\n+  #126 = Utf8               add\n+  #127 = Utf8               ([BII)V\n+  #128 = Utf8               getCurrentNumberOfBytes\n+  #129 = Utf8               hasBytes\n+  #130 = Utf8               ()Z\n+  #131 = Utf8               ()B\n+  #132 = Utf8               java/lang/Math\n+  #133 = Utf8               min\n+  #134 = Utf8               (II)I\n+  #135 = Utf8               clear\n {\n   protected final java.io.InputStream in;\n     descriptor: Ljava/io/InputStream;\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n \n   protected final org.apache.commons.io.input.buffer.CircularByteBuffer buffer;\n     descriptor: Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n"}]}
