{"diffoscope-json-version": 1, "source1": "first/ZipLong.class", "source2": "second/ZipLong.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -11,54 +11,54 @@\n     public static final ZipLong LFH_SIG;\n     public static final ZipLong DD_SIG;\n     static final ZipLong ZIP64_MAGIC;\n     public static final ZipLong SINGLE_SEGMENT_SPLIT_MARKER;\n     public static final ZipLong AED_SIG;\n     private final long value;\n     \n-    public static byte[] getBytes(final long value) {\n-        final byte[] result = new byte[4];\n-        putLong(value, result, 0);\n-        return result;\n+    public static byte[] getBytes(final long n) {\n+        final byte[] array = new byte[4];\n+        putLong(n, array, 0);\n+        return array;\n     }\n     \n-    public static long getValue(final byte[] bytes) {\n-        return getValue(bytes, 0);\n+    public static long getValue(final byte[] array) {\n+        return getValue(array, 0);\n     }\n     \n-    public static long getValue(final byte[] bytes, final int offset) {\n-        return ByteUtils.fromLittleEndian(bytes, offset, 4);\n+    public static long getValue(final byte[] array, final int n) {\n+        return ByteUtils.fromLittleEndian(array, n, 4);\n     }\n     \n-    public static void putLong(final long value, final byte[] buf, final int offset) {\n-        ByteUtils.toLittleEndian(buf, value, offset, 4);\n+    public static void putLong(final long n, final byte[] array, final int n2) {\n+        ByteUtils.toLittleEndian(array, n, n2, 4);\n     }\n     \n-    public ZipLong(final byte[] bytes) {\n-        this(bytes, 0);\n+    public ZipLong(final byte[] array) {\n+        this(array, 0);\n     }\n     \n-    public ZipLong(final byte[] bytes, final int offset) {\n-        this.value = getValue(bytes, offset);\n+    public ZipLong(final byte[] array, final int n) {\n+        this.value = getValue(array, n);\n     }\n     \n-    public ZipLong(final int value) {\n-        this.value = value;\n+    public ZipLong(final int n) {\n+        this.value = n;\n     }\n     \n     public ZipLong(final long value) {\n         this.value = value;\n     }\n     \n     public Object clone() {\n         try {\n             return super.clone();\n         }\n-        catch (final CloneNotSupportedException cnfe) {\n-            throw new IllegalStateException(cnfe);\n+        catch (final CloneNotSupportedException cause) {\n+            throw new IllegalStateException(cause);\n         }\n     }\n     \n     @Override\n     public boolean equals(final Object o) {\n         return o instanceof ZipLong && this.value == ((ZipLong)o).getValue();\n     }\n@@ -76,16 +76,16 @@\n     }\n     \n     @Override\n     public int hashCode() {\n         return (int)this.value;\n     }\n     \n-    public void putLong(final byte[] buf, final int offset) {\n-        putLong(this.value, buf, offset);\n+    public void putLong(final byte[] array, final int n) {\n+        putLong(this.value, array, n);\n     }\n     \n     @Override\n     public String toString() {\n         return \"ZipLong value: \" + this.value;\n     }\n     \n"}]}
