{"diffoscope-json-version": 1, "source1": "first/BoundedInputStream.class", "source2": "second/BoundedInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,118 +1,118 @@\n-  SHA-256 checksum 7f1ee9f1350cfb412b28ad179acc83609f462a56e25176de4e10ed3198b11258\n+  SHA-256 checksum 39a432c8bc05affb44d3b2a76389134200e3ddc95bb57fd3215ed0e5f9932e2a\n   Compiled from \"BoundedInputStream.java\"\n public class org.apache.commons.io.input.BoundedInputStream extends java.io.InputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #22                         // org/apache/commons/io/input/BoundedInputStream\n-  super_class: #23                        // java/io/InputStream\n+  this_class: #10                         // org/apache/commons/io/input/BoundedInputStream\n+  super_class: #4                         // java/io/InputStream\n   interfaces: 0, fields: 5, methods: 14, attributes: 1\n Constant pool:\n-    #1 = Class              #76           // org/apache/commons/io/IOUtils\n-    #2 = Methodref          #23.#77       // java/io/InputStream.\"<init>\":()V\n-    #3 = Fieldref           #22.#78       // org/apache/commons/io/input/BoundedInputStream.pos:J\n-    #4 = Long               -1l\n-    #6 = Fieldref           #22.#79       // org/apache/commons/io/input/BoundedInputStream.mark:J\n-    #7 = Fieldref           #22.#80       // org/apache/commons/io/input/BoundedInputStream.propagateClose:Z\n-    #8 = Fieldref           #22.#81       // org/apache/commons/io/input/BoundedInputStream.max:J\n-    #9 = Fieldref           #22.#82       // org/apache/commons/io/input/BoundedInputStream.in:Ljava/io/InputStream;\n-   #10 = Methodref          #22.#83       // org/apache/commons/io/input/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n-   #11 = Methodref          #23.#84       // java/io/InputStream.read:()I\n-   #12 = Methodref          #22.#85       // org/apache/commons/io/input/BoundedInputStream.read:([BII)I\n-   #13 = Methodref          #86.#87       // java/lang/Math.min:(JJ)J\n-   #14 = Methodref          #23.#85       // java/io/InputStream.read:([BII)I\n-   #15 = Methodref          #23.#88       // java/io/InputStream.skip:(J)J\n-   #16 = Methodref          #23.#89       // java/io/InputStream.available:()I\n-   #17 = Methodref          #90.#91       // java/lang/Object.toString:()Ljava/lang/String;\n-   #18 = Methodref          #23.#92       // java/io/InputStream.close:()V\n-   #19 = Methodref          #23.#93       // java/io/InputStream.reset:()V\n-   #20 = Methodref          #23.#94       // java/io/InputStream.mark:(I)V\n-   #21 = Methodref          #23.#95       // java/io/InputStream.markSupported:()Z\n-   #22 = Class              #96           // org/apache/commons/io/input/BoundedInputStream\n-   #23 = Class              #97           // java/io/InputStream\n-   #24 = Utf8               in\n-   #25 = Utf8               Ljava/io/InputStream;\n+    #1 = Class              #2            // org/apache/commons/io/IOUtils\n+    #2 = Utf8               org/apache/commons/io/IOUtils\n+    #3 = Methodref          #4.#5         // java/io/InputStream.\"<init>\":()V\n+    #4 = Class              #6            // java/io/InputStream\n+    #5 = NameAndType        #7:#8         // \"<init>\":()V\n+    #6 = Utf8               java/io/InputStream\n+    #7 = Utf8               <init>\n+    #8 = Utf8               ()V\n+    #9 = Fieldref           #10.#11       // org/apache/commons/io/input/BoundedInputStream.pos:J\n+   #10 = Class              #12           // org/apache/commons/io/input/BoundedInputStream\n+   #11 = NameAndType        #13:#14       // pos:J\n+   #12 = Utf8               org/apache/commons/io/input/BoundedInputStream\n+   #13 = Utf8               pos\n+   #14 = Utf8               J\n+   #15 = Long               -1l\n+   #17 = Fieldref           #10.#18       // org/apache/commons/io/input/BoundedInputStream.mark:J\n+   #18 = NameAndType        #19:#14       // mark:J\n+   #19 = Utf8               mark\n+   #20 = Fieldref           #10.#21       // org/apache/commons/io/input/BoundedInputStream.propagateClose:Z\n+   #21 = NameAndType        #22:#23       // propagateClose:Z\n+   #22 = Utf8               propagateClose\n+   #23 = Utf8               Z\n+   #24 = Fieldref           #10.#25       // org/apache/commons/io/input/BoundedInputStream.max:J\n+   #25 = NameAndType        #26:#14       // max:J\n    #26 = Utf8               max\n-   #27 = Utf8               J\n-   #28 = Utf8               pos\n-   #29 = Utf8               mark\n-   #30 = Utf8               propagateClose\n-   #31 = Utf8               Z\n-   #32 = Utf8               <init>\n+   #27 = Fieldref           #10.#28       // org/apache/commons/io/input/BoundedInputStream.in:Ljava/io/InputStream;\n+   #28 = NameAndType        #29:#30       // in:Ljava/io/InputStream;\n+   #29 = Utf8               in\n+   #30 = Utf8               Ljava/io/InputStream;\n+   #31 = Methodref          #10.#32       // org/apache/commons/io/input/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n+   #32 = NameAndType        #7:#33        // \"<init>\":(Ljava/io/InputStream;J)V\n    #33 = Utf8               (Ljava/io/InputStream;J)V\n-   #34 = Utf8               Code\n-   #35 = Utf8               LineNumberTable\n-   #36 = Utf8               LocalVariableTable\n-   #37 = Utf8               this\n-   #38 = Utf8               Lorg/apache/commons/io/input/BoundedInputStream;\n-   #39 = Utf8               size\n-   #40 = Utf8               (Ljava/io/InputStream;)V\n-   #41 = Utf8               read\n-   #42 = Utf8               ()I\n-   #43 = Utf8               result\n-   #44 = Utf8               I\n-   #45 = Utf8               StackMapTable\n-   #46 = Utf8               Exceptions\n-   #47 = Class              #98           // java/io/IOException\n-   #48 = Utf8               ([B)I\n-   #49 = Utf8               b\n-   #50 = Utf8               [B\n-   #51 = Utf8               ([BII)I\n-   #52 = Utf8               off\n-   #53 = Utf8               len\n-   #54 = Utf8               maxRead\n-   #55 = Utf8               bytesRead\n-   #56 = Utf8               skip\n-   #57 = Utf8               (J)J\n-   #58 = Utf8               n\n-   #59 = Utf8               toSkip\n-   #60 = Utf8               skippedBytes\n-   #61 = Utf8               available\n-   #62 = Utf8               toString\n-   #63 = Utf8               ()Ljava/lang/String;\n-   #64 = Utf8               close\n-   #65 = Utf8               ()V\n+   #34 = Methodref          #4.#35        // java/io/InputStream.read:()I\n+   #35 = NameAndType        #36:#37       // read:()I\n+   #36 = Utf8               read\n+   #37 = Utf8               ()I\n+   #38 = Methodref          #10.#39       // org/apache/commons/io/input/BoundedInputStream.read:([BII)I\n+   #39 = NameAndType        #36:#40       // read:([BII)I\n+   #40 = Utf8               ([BII)I\n+   #41 = Methodref          #42.#43       // java/lang/Math.min:(JJ)J\n+   #42 = Class              #44           // java/lang/Math\n+   #43 = NameAndType        #45:#46       // min:(JJ)J\n+   #44 = Utf8               java/lang/Math\n+   #45 = Utf8               min\n+   #46 = Utf8               (JJ)J\n+   #47 = Methodref          #4.#39        // java/io/InputStream.read:([BII)I\n+   #48 = Methodref          #4.#49        // java/io/InputStream.skip:(J)J\n+   #49 = NameAndType        #50:#51       // skip:(J)J\n+   #50 = Utf8               skip\n+   #51 = Utf8               (J)J\n+   #52 = Methodref          #4.#53        // java/io/InputStream.available:()I\n+   #53 = NameAndType        #54:#37       // available:()I\n+   #54 = Utf8               available\n+   #55 = Methodref          #56.#57       // java/lang/Object.toString:()Ljava/lang/String;\n+   #56 = Class              #58           // java/lang/Object\n+   #57 = NameAndType        #59:#60       // toString:()Ljava/lang/String;\n+   #58 = Utf8               java/lang/Object\n+   #59 = Utf8               toString\n+   #60 = Utf8               ()Ljava/lang/String;\n+   #61 = Methodref          #4.#62        // java/io/InputStream.close:()V\n+   #62 = NameAndType        #63:#8        // close:()V\n+   #63 = Utf8               close\n+   #64 = Methodref          #4.#65        // java/io/InputStream.reset:()V\n+   #65 = NameAndType        #66:#8        // reset:()V\n    #66 = Utf8               reset\n-   #67 = Utf8               (I)V\n-   #68 = Utf8               readlimit\n-   #69 = Utf8               markSupported\n-   #70 = Utf8               ()Z\n-   #71 = Utf8               isPropagateClose\n-   #72 = Utf8               setPropagateClose\n-   #73 = Utf8               (Z)V\n-   #74 = Utf8               SourceFile\n-   #75 = Utf8               BoundedInputStream.java\n-   #76 = Utf8               org/apache/commons/io/IOUtils\n-   #77 = NameAndType        #32:#65       // \"<init>\":()V\n-   #78 = NameAndType        #28:#27       // pos:J\n-   #79 = NameAndType        #29:#27       // mark:J\n-   #80 = NameAndType        #30:#31       // propagateClose:Z\n-   #81 = NameAndType        #26:#27       // max:J\n-   #82 = NameAndType        #24:#25       // in:Ljava/io/InputStream;\n-   #83 = NameAndType        #32:#33       // \"<init>\":(Ljava/io/InputStream;J)V\n-   #84 = NameAndType        #41:#42       // read:()I\n-   #85 = NameAndType        #41:#51       // read:([BII)I\n-   #86 = Class              #99           // java/lang/Math\n-   #87 = NameAndType        #100:#101     // min:(JJ)J\n-   #88 = NameAndType        #56:#57       // skip:(J)J\n-   #89 = NameAndType        #61:#42       // available:()I\n-   #90 = Class              #102          // java/lang/Object\n-   #91 = NameAndType        #62:#63       // toString:()Ljava/lang/String;\n-   #92 = NameAndType        #64:#65       // close:()V\n-   #93 = NameAndType        #66:#65       // reset:()V\n-   #94 = NameAndType        #29:#67       // mark:(I)V\n-   #95 = NameAndType        #69:#70       // markSupported:()Z\n-   #96 = Utf8               org/apache/commons/io/input/BoundedInputStream\n-   #97 = Utf8               java/io/InputStream\n-   #98 = Utf8               java/io/IOException\n-   #99 = Utf8               java/lang/Math\n-  #100 = Utf8               min\n-  #101 = Utf8               (JJ)J\n-  #102 = Utf8               java/lang/Object\n+   #67 = Methodref          #4.#68        // java/io/InputStream.mark:(I)V\n+   #68 = NameAndType        #19:#69       // mark:(I)V\n+   #69 = Utf8               (I)V\n+   #70 = Methodref          #4.#71        // java/io/InputStream.markSupported:()Z\n+   #71 = NameAndType        #72:#73       // markSupported:()Z\n+   #72 = Utf8               markSupported\n+   #73 = Utf8               ()Z\n+   #74 = Utf8               Code\n+   #75 = Utf8               LineNumberTable\n+   #76 = Utf8               LocalVariableTable\n+   #77 = Utf8               this\n+   #78 = Utf8               Lorg/apache/commons/io/input/BoundedInputStream;\n+   #79 = Utf8               size\n+   #80 = Utf8               (Ljava/io/InputStream;)V\n+   #81 = Utf8               result\n+   #82 = Utf8               I\n+   #83 = Utf8               StackMapTable\n+   #84 = Utf8               Exceptions\n+   #85 = Class              #86           // java/io/IOException\n+   #86 = Utf8               java/io/IOException\n+   #87 = Utf8               ([B)I\n+   #88 = Utf8               b\n+   #89 = Utf8               [B\n+   #90 = Utf8               off\n+   #91 = Utf8               len\n+   #92 = Utf8               maxRead\n+   #93 = Utf8               bytesRead\n+   #94 = Utf8               n\n+   #95 = Utf8               toSkip\n+   #96 = Utf8               skippedBytes\n+   #97 = Utf8               readlimit\n+   #98 = Utf8               isPropagateClose\n+   #99 = Utf8               setPropagateClose\n+  #100 = Utf8               (Z)V\n+  #101 = Utf8               SourceFile\n+  #102 = Utf8               BoundedInputStream.java\n {\n   private final java.io.InputStream in;\n     descriptor: Ljava/io/InputStream;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final long max;\n     descriptor: J\n@@ -132,30 +132,30 @@\n \n   public org.apache.commons.io.input.BoundedInputStream(java.io.InputStream, long);\n     descriptor: (Ljava/io/InputStream;J)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_0\n-         1: invokespecial #2                  // Method java/io/InputStream.\"<init>\":()V\n+         1: invokespecial #3                  // Method java/io/InputStream.\"<init>\":()V\n          4: aload_0\n          5: lconst_0\n-         6: putfield      #3                  // Field pos:J\n+         6: putfield      #9                  // Field pos:J\n          9: aload_0\n-        10: ldc2_w        #4                  // long -1l\n-        13: putfield      #6                  // Field mark:J\n+        10: ldc2_w        #15                 // long -1l\n+        13: putfield      #17                 // Field mark:J\n         16: aload_0\n         17: iconst_1\n-        18: putfield      #7                  // Field propagateClose:Z\n+        18: putfield      #20                 // Field propagateClose:Z\n         21: aload_0\n         22: lload_2\n-        23: putfield      #8                  // Field max:J\n+        23: putfield      #24                 // Field max:J\n         26: aload_0\n         27: aload_1\n-        28: putfield      #9                  // Field in:Ljava/io/InputStream;\n+        28: putfield      #27                 // Field in:Ljava/io/InputStream;\n         31: return\n       LineNumberTable:\n         line 61: 0\n         line 46: 4\n         line 49: 9\n         line 52: 16\n         line 64: 21\n@@ -170,16 +170,16 @@\n   public org.apache.commons.io.input.BoundedInputStream(java.io.InputStream);\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: ldc2_w        #4                  // long -1l\n-         5: invokespecial #10                 // Method \"<init>\":(Ljava/io/InputStream;J)V\n+         2: ldc2_w        #15                 // long -1l\n+         5: invokespecial #31                 // Method \"<init>\":(Ljava/io/InputStream;J)V\n          8: return\n       LineNumberTable:\n         line 75: 0\n         line 76: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/BoundedInputStream;\n@@ -187,36 +187,36 @@\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field max:J\n+         1: getfield      #24                 // Field max:J\n          4: lconst_0\n          5: lcmp\n          6: iflt          23\n          9: aload_0\n-        10: getfield      #3                  // Field pos:J\n+        10: getfield      #9                  // Field pos:J\n         13: aload_0\n-        14: getfield      #8                  // Field max:J\n+        14: getfield      #24                 // Field max:J\n         17: lcmp\n         18: iflt          23\n         21: iconst_m1\n         22: ireturn\n         23: aload_0\n-        24: getfield      #9                  // Field in:Ljava/io/InputStream;\n-        27: invokevirtual #11                 // Method java/io/InputStream.read:()I\n+        24: getfield      #27                 // Field in:Ljava/io/InputStream;\n+        27: invokevirtual #34                 // Method java/io/InputStream.read:()I\n         30: istore_1\n         31: aload_0\n         32: dup\n-        33: getfield      #3                  // Field pos:J\n+        33: getfield      #9                  // Field pos:J\n         36: lconst_1\n         37: ladd\n-        38: putfield      #3                  // Field pos:J\n+        38: putfield      #9                  // Field pos:J\n         41: iload_1\n         42: ireturn\n       LineNumberTable:\n         line 87: 0\n         line 88: 21\n         line 90: 23\n         line 91: 31\n@@ -236,15 +236,15 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #12                 // Method read:([BII)I\n+         5: invokevirtual #38                 // Method read:([BII)I\n          8: ireturn\n       LineNumberTable:\n         line 104: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/BoundedInputStream;\n             0       9     1     b   [B\n@@ -253,63 +253,63 @@\n \n   public int read(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=7, args_size=4\n          0: aload_0\n-         1: getfield      #8                  // Field max:J\n+         1: getfield      #24                 // Field max:J\n          4: lconst_0\n          5: lcmp\n          6: iflt          23\n          9: aload_0\n-        10: getfield      #3                  // Field pos:J\n+        10: getfield      #9                  // Field pos:J\n         13: aload_0\n-        14: getfield      #8                  // Field max:J\n+        14: getfield      #24                 // Field max:J\n         17: lcmp\n         18: iflt          23\n         21: iconst_m1\n         22: ireturn\n         23: aload_0\n-        24: getfield      #8                  // Field max:J\n+        24: getfield      #24                 // Field max:J\n         27: lconst_0\n         28: lcmp\n         29: iflt          49\n         32: iload_3\n         33: i2l\n         34: aload_0\n-        35: getfield      #8                  // Field max:J\n+        35: getfield      #24                 // Field max:J\n         38: aload_0\n-        39: getfield      #3                  // Field pos:J\n+        39: getfield      #9                  // Field pos:J\n         42: lsub\n-        43: invokestatic  #13                 // Method java/lang/Math.min:(JJ)J\n+        43: invokestatic  #41                 // Method java/lang/Math.min:(JJ)J\n         46: goto          51\n         49: iload_3\n         50: i2l\n         51: lstore        4\n         53: aload_0\n-        54: getfield      #9                  // Field in:Ljava/io/InputStream;\n+        54: getfield      #27                 // Field in:Ljava/io/InputStream;\n         57: aload_1\n         58: iload_2\n         59: lload         4\n         61: l2i\n-        62: invokevirtual #14                 // Method java/io/InputStream.read:([BII)I\n+        62: invokevirtual #47                 // Method java/io/InputStream.read:([BII)I\n         65: istore        6\n         67: iload         6\n         69: iconst_m1\n         70: if_icmpne     75\n         73: iconst_m1\n         74: ireturn\n         75: aload_0\n         76: dup\n-        77: getfield      #3                  // Field pos:J\n+        77: getfield      #9                  // Field pos:J\n         80: iload         6\n         82: i2l\n         83: ladd\n-        84: putfield      #3                  // Field pos:J\n+        84: putfield      #9                  // Field pos:J\n         87: iload         6\n         89: ireturn\n       LineNumberTable:\n         line 118: 0\n         line 119: 21\n         line 121: 23\n         line 122: 53\n@@ -338,39 +338,39 @@\n \n   public long skip(long) throws java.io.IOException;\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=7, args_size=2\n          0: aload_0\n-         1: getfield      #8                  // Field max:J\n+         1: getfield      #24                 // Field max:J\n          4: lconst_0\n          5: lcmp\n          6: iflt          25\n          9: lload_1\n         10: aload_0\n-        11: getfield      #8                  // Field max:J\n+        11: getfield      #24                 // Field max:J\n         14: aload_0\n-        15: getfield      #3                  // Field pos:J\n+        15: getfield      #9                  // Field pos:J\n         18: lsub\n-        19: invokestatic  #13                 // Method java/lang/Math.min:(JJ)J\n+        19: invokestatic  #41                 // Method java/lang/Math.min:(JJ)J\n         22: goto          26\n         25: lload_1\n         26: lstore_3\n         27: aload_0\n-        28: getfield      #9                  // Field in:Ljava/io/InputStream;\n+        28: getfield      #27                 // Field in:Ljava/io/InputStream;\n         31: lload_3\n-        32: invokevirtual #15                 // Method java/io/InputStream.skip:(J)J\n+        32: invokevirtual #48                 // Method java/io/InputStream.skip:(J)J\n         35: lstore        5\n         37: aload_0\n         38: dup\n-        39: getfield      #3                  // Field pos:J\n+        39: getfield      #9                  // Field pos:J\n         42: lload         5\n         44: ladd\n-        45: putfield      #3                  // Field pos:J\n+        45: putfield      #9                  // Field pos:J\n         48: lload         5\n         50: lreturn\n       LineNumberTable:\n         line 140: 0\n         line 141: 27\n         line 142: 37\n         line 143: 48\n@@ -389,29 +389,29 @@\n \n   public int available() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field max:J\n+         1: getfield      #24                 // Field max:J\n          4: lconst_0\n          5: lcmp\n          6: iflt          23\n          9: aload_0\n-        10: getfield      #3                  // Field pos:J\n+        10: getfield      #9                  // Field pos:J\n         13: aload_0\n-        14: getfield      #8                  // Field max:J\n+        14: getfield      #24                 // Field max:J\n         17: lcmp\n         18: iflt          23\n         21: iconst_0\n         22: ireturn\n         23: aload_0\n-        24: getfield      #9                  // Field in:Ljava/io/InputStream;\n-        27: invokevirtual #16                 // Method java/io/InputStream.available:()I\n+        24: getfield      #27                 // Field in:Ljava/io/InputStream;\n+        27: invokevirtual #52                 // Method java/io/InputStream.available:()I\n         30: ireturn\n       LineNumberTable:\n         line 151: 0\n         line 152: 21\n         line 154: 23\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -423,34 +423,34 @@\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field in:Ljava/io/InputStream;\n-         4: invokevirtual #17                 // Method java/lang/Object.toString:()Ljava/lang/String;\n+         1: getfield      #27                 // Field in:Ljava/io/InputStream;\n+         4: invokevirtual #55                 // Method java/lang/Object.toString:()Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 163: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/input/BoundedInputStream;\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field propagateClose:Z\n+         1: getfield      #20                 // Field propagateClose:Z\n          4: ifeq          14\n          7: aload_0\n-         8: getfield      #9                  // Field in:Ljava/io/InputStream;\n-        11: invokevirtual #18                 // Method java/io/InputStream.close:()V\n+         8: getfield      #27                 // Field in:Ljava/io/InputStream;\n+        11: invokevirtual #61                 // Method java/io/InputStream.close:()V\n         14: return\n       LineNumberTable:\n         line 173: 0\n         line 174: 7\n         line 176: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -462,20 +462,20 @@\n \n   public synchronized void reset() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field in:Ljava/io/InputStream;\n-         4: invokevirtual #19                 // Method java/io/InputStream.reset:()V\n+         1: getfield      #27                 // Field in:Ljava/io/InputStream;\n+         4: invokevirtual #64                 // Method java/io/InputStream.reset:()V\n          7: aload_0\n          8: aload_0\n-         9: getfield      #6                  // Field mark:J\n-        12: putfield      #3                  // Field pos:J\n+         9: getfield      #17                 // Field mark:J\n+        12: putfield      #9                  // Field pos:J\n         15: return\n       LineNumberTable:\n         line 184: 0\n         line 185: 7\n         line 186: 15\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -485,21 +485,21 @@\n \n   public synchronized void mark(int);\n     descriptor: (I)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #9                  // Field in:Ljava/io/InputStream;\n+         1: getfield      #27                 // Field in:Ljava/io/InputStream;\n          4: iload_1\n-         5: invokevirtual #20                 // Method java/io/InputStream.mark:(I)V\n+         5: invokevirtual #67                 // Method java/io/InputStream.mark:(I)V\n          8: aload_0\n          9: aload_0\n-        10: getfield      #3                  // Field pos:J\n-        13: putfield      #6                  // Field mark:J\n+        10: getfield      #9                  // Field pos:J\n+        13: putfield      #17                 // Field mark:J\n         16: return\n       LineNumberTable:\n         line 194: 0\n         line 195: 8\n         line 196: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -508,45 +508,45 @@\n \n   public boolean markSupported();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field in:Ljava/io/InputStream;\n-         4: invokevirtual #21                 // Method java/io/InputStream.markSupported:()Z\n+         1: getfield      #27                 // Field in:Ljava/io/InputStream;\n+         4: invokevirtual #70                 // Method java/io/InputStream.markSupported:()Z\n          7: ireturn\n       LineNumberTable:\n         line 204: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/input/BoundedInputStream;\n \n   public boolean isPropagateClose();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field propagateClose:Z\n+         1: getfield      #20                 // Field propagateClose:Z\n          4: ireturn\n       LineNumberTable:\n         line 216: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/input/BoundedInputStream;\n \n   public void setPropagateClose(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #7                  // Field propagateClose:Z\n+         2: putfield      #20                 // Field propagateClose:Z\n          5: return\n       LineNumberTable:\n         line 229: 0\n         line 230: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/input/BoundedInputStream;\n"}]}
