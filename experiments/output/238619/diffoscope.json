{"diffoscope-json-version": 1, "source1": "first/FailableIntUnaryOperator.class", "source2": "second/FailableIntUnaryOperator.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,29 +1,29 @@\n \n package org.apache.commons.lang3.function;\n \n import java.util.Objects;\n \n public interface FailableIntUnaryOperator<E extends Throwable>\n {\n-    public static final FailableIntUnaryOperator NOP = t -> 0;\n+    public static final FailableIntUnaryOperator NOP = p0 -> 0;\n     \n     default <E extends Throwable> FailableIntUnaryOperator<E> identity() {\n-        return t -> t;\n+        return n -> n;\n     }\n     \n     default <E extends Throwable> FailableIntUnaryOperator<E> nop() {\n         return FailableIntUnaryOperator.NOP;\n     }\n     \n-    default FailableIntUnaryOperator<E> andThen(final FailableIntUnaryOperator<E> after) {\n-        Objects.requireNonNull(after);\n-        return t -> after.applyAsInt(this.applyAsInt(t));\n+    default FailableIntUnaryOperator<E> andThen(final FailableIntUnaryOperator<E> obj) {\n+        Objects.requireNonNull(obj);\n+        return n2 -> failableIntUnaryOperator.applyAsInt(this.applyAsInt(n2));\n     }\n     \n     int applyAsInt(final int p0) throws E, Throwable;\n     \n-    default FailableIntUnaryOperator<E> compose(final FailableIntUnaryOperator<E> before) {\n-        Objects.requireNonNull(before);\n-        return v -> this.applyAsInt(before.applyAsInt(v));\n+    default FailableIntUnaryOperator<E> compose(final FailableIntUnaryOperator<E> obj) {\n+        Objects.requireNonNull(obj);\n+        return n2 -> this.applyAsInt(failableIntUnaryOperator.applyAsInt(n2));\n     }\n }\n"}]}
