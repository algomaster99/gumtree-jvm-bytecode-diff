{"diffoscope-json-version": 1, "source1": "first/BandSet$BandData.class", "source2": "second/BandSet$BandData.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,139 +1,139 @@\n-  SHA-256 checksum 62c887eca88cc75336b247f8dd7726f53a809c33b942bef0b34e1360f3c1ea41\n+  SHA-256 checksum 4eeaa6371c77e45bce0cc3c693128a0e846c177ef0a0883c95d18404913413be\n   Compiled from \"BandSet.java\"\n public class org.apache.commons.compress.harmony.pack200.BandSet$BandData\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #29                         // org/apache/commons/compress/harmony/pack200/BandSet$BandData\n-  super_class: #30                        // java/lang/Object\n+  this_class: #2                          // org/apache/commons/compress/harmony/pack200/BandSet$BandData\n+  super_class: #25                        // java/lang/Object\n   interfaces: 0, fields: 11, methods: 11, attributes: 2\n Constant pool:\n-    #1 = Fieldref           #29.#84       // org/apache/commons/compress/harmony/pack200/BandSet$BandData.distinctValues:Ljava/util/Map;\n-    #2 = Fieldref           #29.#85       // org/apache/commons/compress/harmony/pack200/BandSet$BandData.smallest:I\n-    #3 = Fieldref           #29.#86       // org/apache/commons/compress/harmony/pack200/BandSet$BandData.smallestDelta:I\n-    #4 = Fieldref           #29.#87       // org/apache/commons/compress/harmony/pack200/BandSet$BandData.largestDelta:I\n-    #5 = Fieldref           #29.#88       // org/apache/commons/compress/harmony/pack200/BandSet$BandData.largest:I\n-    #6 = Fieldref           #29.#89       // org/apache/commons/compress/harmony/pack200/BandSet$BandData.this$0:Lorg/apache/commons/compress/harmony/pack200/BandSet;\n-    #7 = Methodref          #30.#90       // java/lang/Object.\"<init>\":()V\n-    #8 = Class              #91           // java/lang/Integer\n-    #9 = Integer            2147483647\n-   #10 = Integer            -2147483648\n-   #11 = Fieldref           #29.#92       // org/apache/commons/compress/harmony/pack200/BandSet$BandData.deltaIsAscending:I\n-   #12 = Fieldref           #29.#93       // org/apache/commons/compress/harmony/pack200/BandSet$BandData.smallDeltaCount:I\n-   #13 = Fieldref           #29.#94       // org/apache/commons/compress/harmony/pack200/BandSet$BandData.averageAbsoluteDelta:D\n-   #14 = Fieldref           #29.#95       // org/apache/commons/compress/harmony/pack200/BandSet$BandData.averageAbsoluteValue:D\n-   #15 = Fieldref           #29.#96       // org/apache/commons/compress/harmony/pack200/BandSet$BandData.band:[I\n-   #16 = Methodref          #8.#97        // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #17 = Methodref          #98.#99       // java/lang/Math.abs:(I)I\n-   #18 = Fieldref           #65.#100      // org/apache/commons/compress/harmony/pack200/BandSet.effort:I\n-   #19 = Class              #101          // java/util/HashMap\n-   #20 = Methodref          #19.#90       // java/util/HashMap.\"<init>\":()V\n-   #21 = InterfaceMethodref #102.#103     // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #22 = Methodref          #8.#104       // java/lang/Integer.intValue:()I\n-   #23 = InterfaceMethodref #102.#105     // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #24 = Float              0.7f\n-   #25 = Double             3.1d\n-   #27 = Float              0.95f\n-   #28 = InterfaceMethodref #102.#106     // java/util/Map.size:()I\n-   #29 = Class              #107          // org/apache/commons/compress/harmony/pack200/BandSet$BandData\n-   #30 = Class              #108          // java/lang/Object\n-   #31 = Utf8               band\n-   #32 = Utf8               [I\n-   #33 = Utf8               smallest\n-   #34 = Utf8               I\n-   #35 = Utf8               largest\n-   #36 = Utf8               smallestDelta\n-   #37 = Utf8               largestDelta\n-   #38 = Utf8               deltaIsAscending\n+    #1 = Fieldref           #2.#3         // org/apache/commons/compress/harmony/pack200/BandSet$BandData.distinctValues:Ljava/util/Map;\n+    #2 = Class              #4            // org/apache/commons/compress/harmony/pack200/BandSet$BandData\n+    #3 = NameAndType        #5:#6         // distinctValues:Ljava/util/Map;\n+    #4 = Utf8               org/apache/commons/compress/harmony/pack200/BandSet$BandData\n+    #5 = Utf8               distinctValues\n+    #6 = Utf8               Ljava/util/Map;\n+    #7 = Fieldref           #2.#8         // org/apache/commons/compress/harmony/pack200/BandSet$BandData.smallest:I\n+    #8 = NameAndType        #9:#10        // smallest:I\n+    #9 = Utf8               smallest\n+   #10 = Utf8               I\n+   #11 = Fieldref           #2.#12        // org/apache/commons/compress/harmony/pack200/BandSet$BandData.smallestDelta:I\n+   #12 = NameAndType        #13:#10       // smallestDelta:I\n+   #13 = Utf8               smallestDelta\n+   #14 = Fieldref           #2.#15        // org/apache/commons/compress/harmony/pack200/BandSet$BandData.largestDelta:I\n+   #15 = NameAndType        #16:#10       // largestDelta:I\n+   #16 = Utf8               largestDelta\n+   #17 = Fieldref           #2.#18        // org/apache/commons/compress/harmony/pack200/BandSet$BandData.largest:I\n+   #18 = NameAndType        #19:#10       // largest:I\n+   #19 = Utf8               largest\n+   #20 = Fieldref           #2.#21        // org/apache/commons/compress/harmony/pack200/BandSet$BandData.this$0:Lorg/apache/commons/compress/harmony/pack200/BandSet;\n+   #21 = NameAndType        #22:#23       // this$0:Lorg/apache/commons/compress/harmony/pack200/BandSet;\n+   #22 = Utf8               this$0\n+   #23 = Utf8               Lorg/apache/commons/compress/harmony/pack200/BandSet;\n+   #24 = Methodref          #25.#26       // java/lang/Object.\"<init>\":()V\n+   #25 = Class              #27           // java/lang/Object\n+   #26 = NameAndType        #28:#29       // \"<init>\":()V\n+   #27 = Utf8               java/lang/Object\n+   #28 = Utf8               <init>\n+   #29 = Utf8               ()V\n+   #30 = Class              #31           // java/lang/Integer\n+   #31 = Utf8               java/lang/Integer\n+   #32 = Integer            2147483647\n+   #33 = Integer            -2147483648\n+   #34 = Fieldref           #2.#35        // org/apache/commons/compress/harmony/pack200/BandSet$BandData.deltaIsAscending:I\n+   #35 = NameAndType        #36:#10       // deltaIsAscending:I\n+   #36 = Utf8               deltaIsAscending\n+   #37 = Fieldref           #2.#38        // org/apache/commons/compress/harmony/pack200/BandSet$BandData.smallDeltaCount:I\n+   #38 = NameAndType        #39:#10       // smallDeltaCount:I\n    #39 = Utf8               smallDeltaCount\n-   #40 = Utf8               averageAbsoluteDelta\n-   #41 = Utf8               D\n-   #42 = Utf8               averageAbsoluteValue\n-   #43 = Utf8               distinctValues\n-   #44 = Utf8               Ljava/util/Map;\n-   #45 = Utf8               Signature\n-   #46 = Utf8               Ljava/util/Map<Ljava/lang/Integer;Ljava/lang/Integer;>;\n-   #47 = Utf8               this$0\n-   #48 = Utf8               Lorg/apache/commons/compress/harmony/pack200/BandSet;\n-   #49 = Utf8               <init>\n-   #50 = Utf8               (Lorg/apache/commons/compress/harmony/pack200/BandSet;[I)V\n-   #51 = Utf8               Code\n-   #52 = Utf8               LineNumberTable\n-   #53 = Utf8               LocalVariableTable\n-   #54 = Utf8               delta\n-   #55 = Utf8               value\n-   #56 = Utf8               Ljava/lang/Integer;\n-   #57 = Utf8               count\n-   #58 = Utf8               i\n-   #59 = Utf8               this\n-   #60 = Utf8               BandData\n-   #61 = Utf8               InnerClasses\n-   #62 = Utf8               Lorg/apache/commons/compress/harmony/pack200/BandSet$BandData;\n-   #63 = Utf8               one\n-   #64 = Utf8               StackMapTable\n-   #65 = Class              #109          // org/apache/commons/compress/harmony/pack200/BandSet\n-   #66 = Class              #32           // \"[I\"\n-   #67 = Utf8               mainlySmallDeltas\n-   #68 = Utf8               ()Z\n-   #69 = Utf8               wellCorrelated\n-   #70 = Utf8               mainlyPositiveDeltas\n-   #71 = Utf8               anyNegatives\n-   #72 = Utf8               numDistinctValues\n-   #73 = Utf8               ()I\n-   #74 = Utf8               access$300\n-   #75 = Utf8               (Lorg/apache/commons/compress/harmony/pack200/BandSet$BandData;)I\n-   #76 = Utf8               x0\n-   #77 = Utf8               access$500\n-   #78 = Utf8               access$600\n-   #79 = Utf8               access$700\n-   #80 = Utf8               access$900\n-   #81 = Utf8               (Lorg/apache/commons/compress/harmony/pack200/BandSet$BandData;)Ljava/util/Map;\n-   #82 = Utf8               SourceFile\n-   #83 = Utf8               BandSet.java\n-   #84 = NameAndType        #43:#44       // distinctValues:Ljava/util/Map;\n-   #85 = NameAndType        #33:#34       // smallest:I\n-   #86 = NameAndType        #36:#34       // smallestDelta:I\n-   #87 = NameAndType        #37:#34       // largestDelta:I\n-   #88 = NameAndType        #35:#34       // largest:I\n-   #89 = NameAndType        #47:#48       // this$0:Lorg/apache/commons/compress/harmony/pack200/BandSet;\n-   #90 = NameAndType        #49:#110      // \"<init>\":()V\n-   #91 = Utf8               java/lang/Integer\n-   #92 = NameAndType        #38:#34       // deltaIsAscending:I\n-   #93 = NameAndType        #39:#34       // smallDeltaCount:I\n-   #94 = NameAndType        #40:#41       // averageAbsoluteDelta:D\n-   #95 = NameAndType        #42:#41       // averageAbsoluteValue:D\n-   #96 = NameAndType        #31:#32       // band:[I\n-   #97 = NameAndType        #111:#112     // valueOf:(I)Ljava/lang/Integer;\n-   #98 = Class              #113          // java/lang/Math\n-   #99 = NameAndType        #114:#115     // abs:(I)I\n-  #100 = NameAndType        #116:#34      // effort:I\n-  #101 = Utf8               java/util/HashMap\n-  #102 = Class              #117          // java/util/Map\n-  #103 = NameAndType        #118:#119     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #104 = NameAndType        #120:#73      // intValue:()I\n-  #105 = NameAndType        #121:#122     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #106 = NameAndType        #123:#73      // size:()I\n-  #107 = Utf8               org/apache/commons/compress/harmony/pack200/BandSet$BandData\n-  #108 = Utf8               java/lang/Object\n-  #109 = Utf8               org/apache/commons/compress/harmony/pack200/BandSet\n-  #110 = Utf8               ()V\n-  #111 = Utf8               valueOf\n-  #112 = Utf8               (I)Ljava/lang/Integer;\n-  #113 = Utf8               java/lang/Math\n-  #114 = Utf8               abs\n-  #115 = Utf8               (I)I\n-  #116 = Utf8               effort\n-  #117 = Utf8               java/util/Map\n-  #118 = Utf8               get\n-  #119 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #120 = Utf8               intValue\n-  #121 = Utf8               put\n-  #122 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #123 = Utf8               size\n+   #40 = Fieldref           #2.#41        // org/apache/commons/compress/harmony/pack200/BandSet$BandData.averageAbsoluteDelta:D\n+   #41 = NameAndType        #42:#43       // averageAbsoluteDelta:D\n+   #42 = Utf8               averageAbsoluteDelta\n+   #43 = Utf8               D\n+   #44 = Fieldref           #2.#45        // org/apache/commons/compress/harmony/pack200/BandSet$BandData.averageAbsoluteValue:D\n+   #45 = NameAndType        #46:#43       // averageAbsoluteValue:D\n+   #46 = Utf8               averageAbsoluteValue\n+   #47 = Fieldref           #2.#48        // org/apache/commons/compress/harmony/pack200/BandSet$BandData.band:[I\n+   #48 = NameAndType        #49:#50       // band:[I\n+   #49 = Utf8               band\n+   #50 = Utf8               [I\n+   #51 = Methodref          #30.#52       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+   #52 = NameAndType        #53:#54       // valueOf:(I)Ljava/lang/Integer;\n+   #53 = Utf8               valueOf\n+   #54 = Utf8               (I)Ljava/lang/Integer;\n+   #55 = Methodref          #56.#57       // java/lang/Math.abs:(I)I\n+   #56 = Class              #58           // java/lang/Math\n+   #57 = NameAndType        #59:#60       // abs:(I)I\n+   #58 = Utf8               java/lang/Math\n+   #59 = Utf8               abs\n+   #60 = Utf8               (I)I\n+   #61 = Fieldref           #62.#63       // org/apache/commons/compress/harmony/pack200/BandSet.effort:I\n+   #62 = Class              #64           // org/apache/commons/compress/harmony/pack200/BandSet\n+   #63 = NameAndType        #65:#10       // effort:I\n+   #64 = Utf8               org/apache/commons/compress/harmony/pack200/BandSet\n+   #65 = Utf8               effort\n+   #66 = Class              #67           // java/util/HashMap\n+   #67 = Utf8               java/util/HashMap\n+   #68 = Methodref          #66.#26       // java/util/HashMap.\"<init>\":()V\n+   #69 = InterfaceMethodref #70.#71       // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #70 = Class              #72           // java/util/Map\n+   #71 = NameAndType        #73:#74       // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #72 = Utf8               java/util/Map\n+   #73 = Utf8               get\n+   #74 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #75 = Methodref          #30.#76       // java/lang/Integer.intValue:()I\n+   #76 = NameAndType        #77:#78       // intValue:()I\n+   #77 = Utf8               intValue\n+   #78 = Utf8               ()I\n+   #79 = InterfaceMethodref #70.#80       // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #80 = NameAndType        #81:#82       // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #81 = Utf8               put\n+   #82 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #83 = Float              0.7f\n+   #84 = Double             3.1d\n+   #86 = Float              0.95f\n+   #87 = InterfaceMethodref #70.#88       // java/util/Map.size:()I\n+   #88 = NameAndType        #89:#78       // size:()I\n+   #89 = Utf8               size\n+   #90 = Utf8               Signature\n+   #91 = Utf8               Ljava/util/Map<Ljava/lang/Integer;Ljava/lang/Integer;>;\n+   #92 = Utf8               (Lorg/apache/commons/compress/harmony/pack200/BandSet;[I)V\n+   #93 = Utf8               Code\n+   #94 = Utf8               LineNumberTable\n+   #95 = Utf8               LocalVariableTable\n+   #96 = Utf8               delta\n+   #97 = Utf8               value\n+   #98 = Utf8               Ljava/lang/Integer;\n+   #99 = Utf8               count\n+  #100 = Utf8               i\n+  #101 = Utf8               this\n+  #102 = Utf8               Lorg/apache/commons/compress/harmony/pack200/BandSet$BandData;\n+  #103 = Utf8               one\n+  #104 = Utf8               StackMapTable\n+  #105 = Class              #50           // \"[I\"\n+  #106 = Utf8               mainlySmallDeltas\n+  #107 = Utf8               ()Z\n+  #108 = Utf8               wellCorrelated\n+  #109 = Utf8               mainlyPositiveDeltas\n+  #110 = Utf8               anyNegatives\n+  #111 = Utf8               numDistinctValues\n+  #112 = Utf8               access$300\n+  #113 = Utf8               (Lorg/apache/commons/compress/harmony/pack200/BandSet$BandData;)I\n+  #114 = Utf8               x0\n+  #115 = Utf8               access$500\n+  #116 = Utf8               access$600\n+  #117 = Utf8               access$700\n+  #118 = Utf8               access$900\n+  #119 = Utf8               (Lorg/apache/commons/compress/harmony/pack200/BandSet$BandData;)Ljava/util/Map;\n+  #120 = Utf8               SourceFile\n+  #121 = Utf8               BandSet.java\n+  #122 = Utf8               InnerClasses\n+  #123 = Utf8               BandData\n {\n   private final int[] band;\n     descriptor: [I\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private int smallest;\n     descriptor: I\n@@ -166,204 +166,204 @@\n   private double averageAbsoluteValue;\n     descriptor: D\n     flags: (0x0002) ACC_PRIVATE\n \n   private java.util.Map<java.lang.Integer, java.lang.Integer> distinctValues;\n     descriptor: Ljava/util/Map;\n     flags: (0x0002) ACC_PRIVATE\n-    Signature: #46                          // Ljava/util/Map<Ljava/lang/Integer;Ljava/lang/Integer;>;\n+    Signature: #91                          // Ljava/util/Map<Ljava/lang/Integer;Ljava/lang/Integer;>;\n \n   final org.apache.commons.compress.harmony.pack200.BandSet this$0;\n     descriptor: Lorg/apache/commons/compress/harmony/pack200/BandSet;\n     flags: (0x1010) ACC_FINAL, ACC_SYNTHETIC\n \n   public org.apache.commons.compress.harmony.pack200.BandSet$BandData(org.apache.commons.compress.harmony.pack200.BandSet, int[]);\n     descriptor: (Lorg/apache/commons/compress/harmony/pack200/BandSet;[I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=7, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: putfield      #6                  // Field this$0:Lorg/apache/commons/compress/harmony/pack200/BandSet;\n+         2: putfield      #20                 // Field this$0:Lorg/apache/commons/compress/harmony/pack200/BandSet;\n          5: aload_0\n-         6: invokespecial #7                  // Method java/lang/Object.\"<init>\":()V\n+         6: invokespecial #24                 // Method java/lang/Object.\"<init>\":()V\n          9: aload_0\n-        10: ldc           #9                  // int 2147483647\n-        12: putfield      #2                  // Field smallest:I\n+        10: ldc           #32                 // int 2147483647\n+        12: putfield      #7                  // Field smallest:I\n         15: aload_0\n-        16: ldc           #10                 // int -2147483648\n-        18: putfield      #5                  // Field largest:I\n+        16: ldc           #33                 // int -2147483648\n+        18: putfield      #17                 // Field largest:I\n         21: aload_0\n         22: iconst_0\n-        23: putfield      #11                 // Field deltaIsAscending:I\n+        23: putfield      #34                 // Field deltaIsAscending:I\n         26: aload_0\n         27: iconst_0\n-        28: putfield      #12                 // Field smallDeltaCount:I\n+        28: putfield      #37                 // Field smallDeltaCount:I\n         31: aload_0\n         32: dconst_0\n-        33: putfield      #13                 // Field averageAbsoluteDelta:D\n+        33: putfield      #40                 // Field averageAbsoluteDelta:D\n         36: aload_0\n         37: dconst_0\n-        38: putfield      #14                 // Field averageAbsoluteValue:D\n+        38: putfield      #44                 // Field averageAbsoluteValue:D\n         41: aload_0\n         42: aload_2\n-        43: putfield      #15                 // Field band:[I\n+        43: putfield      #47                 // Field band:[I\n         46: iconst_1\n-        47: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        47: invokestatic  #51                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         50: astore_3\n         51: iconst_0\n         52: istore        4\n         54: iload         4\n         56: aload_2\n         57: arraylength\n         58: if_icmpge     336\n         61: aload_2\n         62: iload         4\n         64: iaload\n         65: aload_0\n-        66: getfield      #2                  // Field smallest:I\n+        66: getfield      #7                  // Field smallest:I\n         69: if_icmpge     80\n         72: aload_0\n         73: aload_2\n         74: iload         4\n         76: iaload\n-        77: putfield      #2                  // Field smallest:I\n+        77: putfield      #7                  // Field smallest:I\n         80: aload_2\n         81: iload         4\n         83: iaload\n         84: aload_0\n-        85: getfield      #5                  // Field largest:I\n+        85: getfield      #17                 // Field largest:I\n         88: if_icmple     99\n         91: aload_0\n         92: aload_2\n         93: iload         4\n         95: iaload\n-        96: putfield      #5                  // Field largest:I\n+        96: putfield      #17                 // Field largest:I\n         99: iload         4\n        101: ifeq          207\n        104: aload_2\n        105: iload         4\n        107: iaload\n        108: aload_2\n        109: iload         4\n        111: iconst_1\n        112: isub\n        113: iaload\n        114: isub\n        115: istore        5\n        117: iload         5\n        119: aload_0\n-       120: getfield      #3                  // Field smallestDelta:I\n+       120: getfield      #11                 // Field smallestDelta:I\n        123: if_icmpge     132\n        126: aload_0\n        127: iload         5\n-       129: putfield      #3                  // Field smallestDelta:I\n+       129: putfield      #11                 // Field smallestDelta:I\n        132: iload         5\n        134: aload_0\n-       135: getfield      #4                  // Field largestDelta:I\n+       135: getfield      #14                 // Field largestDelta:I\n        138: if_icmple     147\n        141: aload_0\n        142: iload         5\n-       144: putfield      #4                  // Field largestDelta:I\n+       144: putfield      #14                 // Field largestDelta:I\n        147: iload         5\n        149: iflt          162\n        152: aload_0\n        153: dup\n-       154: getfield      #11                 // Field deltaIsAscending:I\n+       154: getfield      #34                 // Field deltaIsAscending:I\n        157: iconst_1\n        158: iadd\n-       159: putfield      #11                 // Field deltaIsAscending:I\n+       159: putfield      #34                 // Field deltaIsAscending:I\n        162: aload_0\n        163: dup\n-       164: getfield      #13                 // Field averageAbsoluteDelta:D\n+       164: getfield      #40                 // Field averageAbsoluteDelta:D\n        167: iload         5\n-       169: invokestatic  #17                 // Method java/lang/Math.abs:(I)I\n+       169: invokestatic  #55                 // Method java/lang/Math.abs:(I)I\n        172: i2d\n        173: aload_2\n        174: arraylength\n        175: iconst_1\n        176: isub\n        177: i2d\n        178: ddiv\n        179: dadd\n-       180: putfield      #13                 // Field averageAbsoluteDelta:D\n+       180: putfield      #40                 // Field averageAbsoluteDelta:D\n        183: iload         5\n-       185: invokestatic  #17                 // Method java/lang/Math.abs:(I)I\n+       185: invokestatic  #55                 // Method java/lang/Math.abs:(I)I\n        188: sipush        256\n        191: if_icmpge     204\n        194: aload_0\n        195: dup\n-       196: getfield      #12                 // Field smallDeltaCount:I\n+       196: getfield      #37                 // Field smallDeltaCount:I\n        199: iconst_1\n        200: iadd\n-       201: putfield      #12                 // Field smallDeltaCount:I\n+       201: putfield      #37                 // Field smallDeltaCount:I\n        204: goto          221\n        207: aload_0\n        208: aload_2\n        209: iconst_0\n        210: iaload\n-       211: putfield      #3                  // Field smallestDelta:I\n+       211: putfield      #11                 // Field smallestDelta:I\n        214: aload_0\n        215: aload_2\n        216: iconst_0\n        217: iaload\n-       218: putfield      #4                  // Field largestDelta:I\n+       218: putfield      #14                 // Field largestDelta:I\n        221: aload_0\n        222: dup\n-       223: getfield      #14                 // Field averageAbsoluteValue:D\n+       223: getfield      #44                 // Field averageAbsoluteValue:D\n        226: aload_2\n        227: iload         4\n        229: iaload\n-       230: invokestatic  #17                 // Method java/lang/Math.abs:(I)I\n+       230: invokestatic  #55                 // Method java/lang/Math.abs:(I)I\n        233: i2d\n        234: aload_2\n        235: arraylength\n        236: i2d\n        237: ddiv\n        238: dadd\n-       239: putfield      #14                 // Field averageAbsoluteValue:D\n+       239: putfield      #44                 // Field averageAbsoluteValue:D\n        242: aload_1\n-       243: getfield      #18                 // Field org/apache/commons/compress/harmony/pack200/BandSet.effort:I\n+       243: getfield      #61                 // Field org/apache/commons/compress/harmony/pack200/BandSet.effort:I\n        246: iconst_3\n        247: if_icmple     330\n        250: aload_0\n        251: getfield      #1                  // Field distinctValues:Ljava/util/Map;\n        254: ifnonnull     268\n        257: aload_0\n-       258: new           #19                 // class java/util/HashMap\n+       258: new           #66                 // class java/util/HashMap\n        261: dup\n-       262: invokespecial #20                 // Method java/util/HashMap.\"<init>\":()V\n+       262: invokespecial #68                 // Method java/util/HashMap.\"<init>\":()V\n        265: putfield      #1                  // Field distinctValues:Ljava/util/Map;\n        268: aload_2\n        269: iload         4\n        271: iaload\n-       272: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+       272: invokestatic  #51                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n        275: astore        5\n        277: aload_0\n        278: getfield      #1                  // Field distinctValues:Ljava/util/Map;\n        281: aload         5\n-       283: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-       288: checkcast     #8                  // class java/lang/Integer\n+       283: invokeinterface #69,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+       288: checkcast     #30                 // class java/lang/Integer\n        291: astore        6\n        293: aload         6\n        295: ifnonnull     304\n        298: aload_3\n        299: astore        6\n        301: goto          316\n        304: aload         6\n-       306: invokevirtual #22                 // Method java/lang/Integer.intValue:()I\n+       306: invokevirtual #75                 // Method java/lang/Integer.intValue:()I\n        309: iconst_1\n        310: iadd\n-       311: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+       311: invokestatic  #51                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n        314: astore        6\n        316: aload_0\n        317: getfield      #1                  // Field distinctValues:Ljava/util/Map;\n        320: aload         5\n        322: aload         6\n-       324: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+       324: invokeinterface #79,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n        329: pop\n        330: iinc          4, 1\n        333: goto          54\n        336: return\n       LineNumberTable:\n         line 643: 0\n         line 625: 9\n@@ -443,22 +443,22 @@\n \n   public boolean mainlySmallDeltas();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field smallDeltaCount:I\n+         1: getfield      #37                 // Field smallDeltaCount:I\n          4: i2f\n          5: aload_0\n-         6: getfield      #15                 // Field band:[I\n+         6: getfield      #47                 // Field band:[I\n          9: arraylength\n         10: i2f\n         11: fdiv\n-        12: ldc           #24                 // float 0.7f\n+        12: ldc           #83                 // float 0.7f\n         14: fcmpl\n         15: ifle          22\n         18: iconst_1\n         19: goto          23\n         22: iconst_0\n         23: ireturn\n       LineNumberTable:\n@@ -473,19 +473,19 @@\n \n   public boolean wellCorrelated();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #13                 // Field averageAbsoluteDelta:D\n-         4: ldc2_w        #25                 // double 3.1d\n+         1: getfield      #40                 // Field averageAbsoluteDelta:D\n+         4: ldc2_w        #84                 // double 3.1d\n          7: dmul\n          8: aload_0\n-         9: getfield      #14                 // Field averageAbsoluteValue:D\n+         9: getfield      #44                 // Field averageAbsoluteValue:D\n         12: dcmpg\n         13: ifge          20\n         16: iconst_1\n         17: goto          21\n         20: iconst_0\n         21: ireturn\n       LineNumberTable:\n@@ -500,22 +500,22 @@\n \n   public boolean mainlyPositiveDeltas();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field deltaIsAscending:I\n+         1: getfield      #34                 // Field deltaIsAscending:I\n          4: i2f\n          5: aload_0\n-         6: getfield      #15                 // Field band:[I\n+         6: getfield      #47                 // Field band:[I\n          9: arraylength\n         10: i2f\n         11: fdiv\n-        12: ldc           #27                 // float 0.95f\n+        12: ldc           #86                 // float 0.95f\n         14: fcmpl\n         15: ifle          22\n         18: iconst_1\n         19: goto          23\n         22: iconst_0\n         23: ireturn\n       LineNumberTable:\n@@ -530,15 +530,15 @@\n \n   public boolean anyNegatives();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field smallest:I\n+         1: getfield      #7                  // Field smallest:I\n          4: ifge          11\n          7: iconst_1\n          8: goto          12\n         11: iconst_0\n         12: ireturn\n       LineNumberTable:\n         line 725: 0\n@@ -555,20 +555,20 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #1                  // Field distinctValues:Ljava/util/Map;\n          4: ifnonnull     13\n          7: aload_0\n-         8: getfield      #15                 // Field band:[I\n+         8: getfield      #47                 // Field band:[I\n         11: arraylength\n         12: ireturn\n         13: aload_0\n         14: getfield      #1                  // Field distinctValues:Ljava/util/Map;\n-        17: invokeinterface #28,  1           // InterfaceMethod java/util/Map.size:()I\n+        17: invokeinterface #87,  1           // InterfaceMethod java/util/Map.size:()I\n         22: ireturn\n       LineNumberTable:\n         line 734: 0\n         line 735: 7\n         line 737: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -578,57 +578,57 @@\n \n   static int access$300(org.apache.commons.compress.harmony.pack200.BandSet$BandData);\n     descriptor: (Lorg/apache/commons/compress/harmony/pack200/BandSet$BandData;)I\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field largest:I\n+         1: getfield      #17                 // Field largest:I\n          4: ireturn\n       LineNumberTable:\n         line 622: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/compress/harmony/pack200/BandSet$BandData;\n \n   static int access$500(org.apache.commons.compress.harmony.pack200.BandSet$BandData);\n     descriptor: (Lorg/apache/commons/compress/harmony/pack200/BandSet$BandData;)I\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field largestDelta:I\n+         1: getfield      #14                 // Field largestDelta:I\n          4: ireturn\n       LineNumberTable:\n         line 622: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/compress/harmony/pack200/BandSet$BandData;\n \n   static int access$600(org.apache.commons.compress.harmony.pack200.BandSet$BandData);\n     descriptor: (Lorg/apache/commons/compress/harmony/pack200/BandSet$BandData;)I\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field smallestDelta:I\n+         1: getfield      #11                 // Field smallestDelta:I\n          4: ireturn\n       LineNumberTable:\n         line 622: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/compress/harmony/pack200/BandSet$BandData;\n \n   static int access$700(org.apache.commons.compress.harmony.pack200.BandSet$BandData);\n     descriptor: (Lorg/apache/commons/compress/harmony/pack200/BandSet$BandData;)I\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field smallest:I\n+         1: getfield      #7                  // Field smallest:I\n          4: ireturn\n       LineNumberTable:\n         line 622: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/compress/harmony/pack200/BandSet$BandData;\n \n@@ -644,8 +644,8 @@\n         line 622: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/compress/harmony/pack200/BandSet$BandData;\n }\n SourceFile: \"BandSet.java\"\n InnerClasses:\n-  public #60= #29 of #65;                 // BandData=class org/apache/commons/compress/harmony/pack200/BandSet$BandData of class org/apache/commons/compress/harmony/pack200/BandSet\n+  public #123= #2 of #62;                 // BandData=class org/apache/commons/compress/harmony/pack200/BandSet$BandData of class org/apache/commons/compress/harmony/pack200/BandSet\n"}]}
