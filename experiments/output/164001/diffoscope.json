{"diffoscope-json-version": 1, "source1": "first/X0017_StrongEncryptionHeader.class", "source2": "second/X0017_StrongEncryptionHeader.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,199 +1,196 @@\n-  SHA-256 checksum e1a2f293b7291d31be25965a26f149f7e5c1491c8b36c15a3ecfef525103406c\n+  SHA-256 checksum d87d9d98d5d9aed0f23d6b07a781986e8a03953bfbd4782367f67b552b56f47c\n   Compiled from \"X0017_StrongEncryptionHeader.java\"\n public class org.apache.commons.compress.archivers.zip.X0017_StrongEncryptionHeader extends org.apache.commons.compress.archivers.zip.PKWareExtraHeader\n   minor version: 0\n-  major version: 51\n+  major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #48                         // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader\n-  super_class: #49                        // org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n-  interfaces: 0, fields: 13, methods: 9, attributes: 2\n+  this_class: #38                         // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader\n+  super_class: #39                        // org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n+  interfaces: 0, fields: 13, methods: 9, attributes: 3\n Constant pool:\n-    #1 = Class              #110          // org/apache/commons/compress/archivers/zip/ZipShort\n-    #2 = Methodref          #1.#111       // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-    #3 = Methodref          #49.#112      // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-    #4 = Fieldref           #48.#113      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.rcount:J\n-    #5 = Fieldref           #48.#114      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.hashAlg:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n-    #6 = Fieldref           #48.#115      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.algId:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n-    #7 = Methodref          #48.#116      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.assertMinimalLength:(II)V\n-    #8 = Methodref          #1.#117       // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-    #9 = Fieldref           #48.#118      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.format:I\n-   #10 = Methodref          #53.#119      // org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm.getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n-   #11 = Fieldref           #48.#120      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.bitlen:I\n-   #12 = Fieldref           #48.#121      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.flags:I\n-   #13 = Methodref          #122.#123     // org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n-   #14 = Methodref          #62.#124      // org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm.getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n-   #15 = Fieldref           #48.#125      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.hashSize:I\n-   #16 = String             #98           // ivSize\n-   #17 = Methodref          #48.#126      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.assertDynamicLengthFits:(Ljava/lang/String;III)V\n-   #18 = Methodref          #127.#128     // java/util/Arrays.copyOfRange:([BII)[B\n-   #19 = Fieldref           #48.#129      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.ivData:[B\n-   #20 = String             #99           // erdSize\n-   #21 = Fieldref           #48.#130      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.erdData:[B\n-   #22 = String             #96           // vSize\n-   #23 = Class              #131          // java/util/zip/ZipException\n-   #24 = Class              #132          // java/lang/StringBuilder\n-   #25 = Methodref          #24.#133      // java/lang/StringBuilder.\"<init>\":()V\n-   #26 = String             #134          // Invalid X0017_StrongEncryptionHeader: vSize\n-   #27 = Methodref          #24.#135      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #28 = Methodref          #24.#136      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #29 = String             #137          //  is too small to hold CRC\n-   #30 = Methodref          #24.#138      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #31 = Methodref          #23.#139      // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-   #32 = Fieldref           #48.#140      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.vData:[B\n-   #33 = Fieldref           #48.#141      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.vCRC32:[B\n-   #34 = Fieldref           #48.#142      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.recipientKeyHash:[B\n-   #35 = String             #143          // Invalid X0017_StrongEncryptionHeader: resize\n-   #36 = String             #144          //  is too small to hold hashSize\n-   #37 = Fieldref           #48.#145      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.keyBlob:[B\n-   #38 = String             #97           // resize\n-   #39 = Methodref          #146.#147     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #40 = Methodref          #49.#148      // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.parseFromLocalFileData:([BII)V\n-   #41 = Methodref          #48.#149      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.parseFileFormat:([BII)V\n-   #42 = Methodref          #49.#150      // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.parseFromCentralDirectoryData:([BII)V\n-   #43 = Methodref          #48.#151      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.parseCentralDirectoryFormat:([BII)V\n-   #44 = String             #152          // Invalid X0017_StrongEncryptionHeader:\n-   #45 = String             #153          //\n-   #46 = String             #154          //  doesn\\'t fit into\n-   #47 = String             #155          //  bytes of data at position\n-   #48 = Class              #156          // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader\n-   #49 = Class              #157          // org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n-   #50 = Utf8               format\n-   #51 = Utf8               I\n-   #52 = Utf8               algId\n-   #53 = Class              #158          // org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm\n-   #54 = Utf8               EncryptionAlgorithm\n-   #55 = Utf8               InnerClasses\n-   #56 = Utf8               Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n-   #57 = Utf8               bitlen\n-   #58 = Utf8               flags\n-   #59 = Utf8               rcount\n-   #60 = Utf8               J\n-   #61 = Utf8               hashAlg\n-   #62 = Class              #159          // org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm\n-   #63 = Utf8               HashAlgorithm\n-   #64 = Utf8               Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n-   #65 = Utf8               hashSize\n-   #66 = Utf8               ivData\n-   #67 = Utf8               [B\n-   #68 = Utf8               erdData\n-   #69 = Utf8               recipientKeyHash\n-   #70 = Utf8               keyBlob\n-   #71 = Utf8               vData\n-   #72 = Utf8               vCRC32\n-   #73 = Utf8               <init>\n-   #74 = Utf8               ()V\n-   #75 = Utf8               Code\n-   #76 = Utf8               LineNumberTable\n-   #77 = Utf8               LocalVariableTable\n-   #78 = Utf8               this\n-   #79 = Utf8               Lorg/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader;\n-   #80 = Utf8               getRecordCount\n-   #81 = Utf8               ()J\n-   #82 = Utf8               getHashAlgorithm\n-   #83 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n-   #84 = Utf8               getEncryptionAlgorithm\n-   #85 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n-   #86 = Utf8               parseCentralDirectoryFormat\n-   #87 = Utf8               ([BII)V\n-   #88 = Utf8               j\n-   #89 = Utf8               i\n-   #90 = Utf8               data\n-   #91 = Utf8               offset\n-   #92 = Utf8               length\n-   #93 = Utf8               StackMapTable\n-   #94 = Utf8               Exceptions\n-   #95 = Utf8               parseFileFormat\n-   #96 = Utf8               vSize\n-   #97 = Utf8               resize\n-   #98 = Utf8               ivSize\n-   #99 = Utf8               erdSize\n-  #100 = Utf8               parseFromLocalFileData\n-  #101 = Utf8               parseFromCentralDirectoryData\n-  #102 = Utf8               assertDynamicLengthFits\n-  #103 = Utf8               (Ljava/lang/String;III)V\n-  #104 = Utf8               what\n-  #105 = Utf8               Ljava/lang/String;\n-  #106 = Utf8               dynamicLength\n-  #107 = Utf8               prefixLength\n-  #108 = Utf8               SourceFile\n-  #109 = Utf8               X0017_StrongEncryptionHeader.java\n-  #110 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-  #111 = NameAndType        #73:#160      // \"<init>\":(I)V\n-  #112 = NameAndType        #73:#161      // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-  #113 = NameAndType        #59:#60       // rcount:J\n-  #114 = NameAndType        #61:#64       // hashAlg:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n-  #115 = NameAndType        #52:#56       // algId:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n-  #116 = NameAndType        #162:#163     // assertMinimalLength:(II)V\n-  #117 = NameAndType        #164:#165     // getValue:([BI)I\n-  #118 = NameAndType        #50:#51       // format:I\n-  #119 = NameAndType        #166:#167     // getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n-  #120 = NameAndType        #57:#51       // bitlen:I\n-  #121 = NameAndType        #58:#51       // flags:I\n-  #122 = Class              #168          // org/apache/commons/compress/archivers/zip/ZipLong\n-  #123 = NameAndType        #164:#169     // getValue:([BI)J\n-  #124 = NameAndType        #166:#170     // getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n-  #125 = NameAndType        #65:#51       // hashSize:I\n-  #126 = NameAndType        #102:#103     // assertDynamicLengthFits:(Ljava/lang/String;III)V\n-  #127 = Class              #171          // java/util/Arrays\n-  #128 = NameAndType        #172:#173     // copyOfRange:([BII)[B\n-  #129 = NameAndType        #66:#67       // ivData:[B\n-  #130 = NameAndType        #68:#67       // erdData:[B\n-  #131 = Utf8               java/util/zip/ZipException\n-  #132 = Utf8               java/lang/StringBuilder\n-  #133 = NameAndType        #73:#74       // \"<init>\":()V\n-  #134 = Utf8               Invalid X0017_StrongEncryptionHeader: vSize\n-  #135 = NameAndType        #174:#175     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #136 = NameAndType        #174:#176     // append:(I)Ljava/lang/StringBuilder;\n-  #137 = Utf8                is too small to hold CRC\n-  #138 = NameAndType        #177:#178     // toString:()Ljava/lang/String;\n-  #139 = NameAndType        #73:#179      // \"<init>\":(Ljava/lang/String;)V\n-  #140 = NameAndType        #71:#67       // vData:[B\n-  #141 = NameAndType        #72:#67       // vCRC32:[B\n-  #142 = NameAndType        #69:#67       // recipientKeyHash:[B\n-  #143 = Utf8               Invalid X0017_StrongEncryptionHeader: resize\n-  #144 = Utf8                is too small to hold hashSize\n-  #145 = NameAndType        #70:#67       // keyBlob:[B\n-  #146 = Class              #180          // java/lang/System\n-  #147 = NameAndType        #181:#182     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #148 = NameAndType        #100:#87      // parseFromLocalFileData:([BII)V\n-  #149 = NameAndType        #95:#87       // parseFileFormat:([BII)V\n-  #150 = NameAndType        #101:#87      // parseFromCentralDirectoryData:([BII)V\n-  #151 = NameAndType        #86:#87       // parseCentralDirectoryFormat:([BII)V\n-  #152 = Utf8               Invalid X0017_StrongEncryptionHeader:\n-  #153 = Utf8\n-  #154 = Utf8                doesn\\'t fit into\n-  #155 = Utf8                bytes of data at position\n-  #156 = Utf8               org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader\n-  #157 = Utf8               org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n-  #158 = Utf8               org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm\n-  #159 = Utf8               org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm\n-  #160 = Utf8               (I)V\n-  #161 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-  #162 = Utf8               assertMinimalLength\n-  #163 = Utf8               (II)V\n-  #164 = Utf8               getValue\n-  #165 = Utf8               ([BI)I\n-  #166 = Utf8               getAlgorithmByCode\n-  #167 = Utf8               (I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n-  #168 = Utf8               org/apache/commons/compress/archivers/zip/ZipLong\n-  #169 = Utf8               ([BI)J\n-  #170 = Utf8               (I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n-  #171 = Utf8               java/util/Arrays\n-  #172 = Utf8               copyOfRange\n-  #173 = Utf8               ([BII)[B\n-  #174 = Utf8               append\n-  #175 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #176 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #177 = Utf8               toString\n-  #178 = Utf8               ()Ljava/lang/String;\n-  #179 = Utf8               (Ljava/lang/String;)V\n-  #180 = Utf8               java/lang/System\n-  #181 = Utf8               arraycopy\n-  #182 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+    #1 = Class              #100          // org/apache/commons/compress/archivers/zip/ZipShort\n+    #2 = Methodref          #1.#101       // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+    #3 = Methodref          #39.#102      // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+    #4 = Fieldref           #38.#103      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.rcount:J\n+    #5 = Fieldref           #38.#104      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.hashAlg:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n+    #6 = Fieldref           #38.#105      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.algId:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n+    #7 = Methodref          #38.#106      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.assertMinimalLength:(II)V\n+    #8 = Methodref          #1.#107       // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+    #9 = Fieldref           #38.#108      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.format:I\n+   #10 = Methodref          #43.#109      // org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm.getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n+   #11 = Fieldref           #38.#110      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.bitlen:I\n+   #12 = Fieldref           #38.#111      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.flags:I\n+   #13 = Methodref          #112.#113     // org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n+   #14 = Methodref          #52.#114      // org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm.getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n+   #15 = Fieldref           #38.#115      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.hashSize:I\n+   #16 = String             #88           // ivSize\n+   #17 = Methodref          #38.#116      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.assertDynamicLengthFits:(Ljava/lang/String;III)V\n+   #18 = Methodref          #117.#118     // java/util/Arrays.copyOfRange:([BII)[B\n+   #19 = Fieldref           #38.#119      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.ivData:[B\n+   #20 = String             #89           // erdSize\n+   #21 = Fieldref           #38.#120      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.erdData:[B\n+   #22 = String             #86           // vSize\n+   #23 = Class              #121          // java/util/zip/ZipException\n+   #24 = InvokeDynamic      #0:#125       // #0:makeConcatWithConstants:(I)Ljava/lang/String;\n+   #25 = Methodref          #23.#126      // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+   #26 = Fieldref           #38.#127      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.vData:[B\n+   #27 = Fieldref           #38.#128      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.vCRC32:[B\n+   #28 = Fieldref           #38.#129      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.recipientKeyHash:[B\n+   #29 = InvokeDynamic      #1:#131       // #1:makeConcatWithConstants:(II)Ljava/lang/String;\n+   #30 = Fieldref           #38.#132      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.keyBlob:[B\n+   #31 = String             #87           // resize\n+   #32 = Methodref          #133.#134     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #33 = Methodref          #39.#135      // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.parseFromLocalFileData:([BII)V\n+   #34 = Methodref          #38.#136      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.parseFileFormat:([BII)V\n+   #35 = Methodref          #39.#137      // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.parseFromCentralDirectoryData:([BII)V\n+   #36 = Methodref          #38.#138      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.parseCentralDirectoryFormat:([BII)V\n+   #37 = InvokeDynamic      #2:#140       // #2:makeConcatWithConstants:(Ljava/lang/String;III)Ljava/lang/String;\n+   #38 = Class              #141          // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader\n+   #39 = Class              #142          // org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n+   #40 = Utf8               format\n+   #41 = Utf8               I\n+   #42 = Utf8               algId\n+   #43 = Class              #143          // org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm\n+   #44 = Utf8               EncryptionAlgorithm\n+   #45 = Utf8               InnerClasses\n+   #46 = Utf8               Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n+   #47 = Utf8               bitlen\n+   #48 = Utf8               flags\n+   #49 = Utf8               rcount\n+   #50 = Utf8               J\n+   #51 = Utf8               hashAlg\n+   #52 = Class              #144          // org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm\n+   #53 = Utf8               HashAlgorithm\n+   #54 = Utf8               Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n+   #55 = Utf8               hashSize\n+   #56 = Utf8               ivData\n+   #57 = Utf8               [B\n+   #58 = Utf8               erdData\n+   #59 = Utf8               recipientKeyHash\n+   #60 = Utf8               keyBlob\n+   #61 = Utf8               vData\n+   #62 = Utf8               vCRC32\n+   #63 = Utf8               <init>\n+   #64 = Utf8               ()V\n+   #65 = Utf8               Code\n+   #66 = Utf8               LineNumberTable\n+   #67 = Utf8               LocalVariableTable\n+   #68 = Utf8               this\n+   #69 = Utf8               Lorg/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader;\n+   #70 = Utf8               getRecordCount\n+   #71 = Utf8               ()J\n+   #72 = Utf8               getHashAlgorithm\n+   #73 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n+   #74 = Utf8               getEncryptionAlgorithm\n+   #75 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n+   #76 = Utf8               parseCentralDirectoryFormat\n+   #77 = Utf8               ([BII)V\n+   #78 = Utf8               j\n+   #79 = Utf8               i\n+   #80 = Utf8               data\n+   #81 = Utf8               offset\n+   #82 = Utf8               length\n+   #83 = Utf8               StackMapTable\n+   #84 = Utf8               Exceptions\n+   #85 = Utf8               parseFileFormat\n+   #86 = Utf8               vSize\n+   #87 = Utf8               resize\n+   #88 = Utf8               ivSize\n+   #89 = Utf8               erdSize\n+   #90 = Utf8               parseFromLocalFileData\n+   #91 = Utf8               parseFromCentralDirectoryData\n+   #92 = Utf8               assertDynamicLengthFits\n+   #93 = Utf8               (Ljava/lang/String;III)V\n+   #94 = Utf8               what\n+   #95 = Utf8               Ljava/lang/String;\n+   #96 = Utf8               dynamicLength\n+   #97 = Utf8               prefixLength\n+   #98 = Utf8               SourceFile\n+   #99 = Utf8               X0017_StrongEncryptionHeader.java\n+  #100 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+  #101 = NameAndType        #63:#145      // \"<init>\":(I)V\n+  #102 = NameAndType        #63:#146      // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+  #103 = NameAndType        #49:#50       // rcount:J\n+  #104 = NameAndType        #51:#54       // hashAlg:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n+  #105 = NameAndType        #42:#46       // algId:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n+  #106 = NameAndType        #147:#148     // assertMinimalLength:(II)V\n+  #107 = NameAndType        #149:#150     // getValue:([BI)I\n+  #108 = NameAndType        #40:#41       // format:I\n+  #109 = NameAndType        #151:#152     // getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n+  #110 = NameAndType        #47:#41       // bitlen:I\n+  #111 = NameAndType        #48:#41       // flags:I\n+  #112 = Class              #153          // org/apache/commons/compress/archivers/zip/ZipLong\n+  #113 = NameAndType        #149:#154     // getValue:([BI)J\n+  #114 = NameAndType        #151:#155     // getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n+  #115 = NameAndType        #55:#41       // hashSize:I\n+  #116 = NameAndType        #92:#93       // assertDynamicLengthFits:(Ljava/lang/String;III)V\n+  #117 = Class              #156          // java/util/Arrays\n+  #118 = NameAndType        #157:#158     // copyOfRange:([BII)[B\n+  #119 = NameAndType        #56:#57       // ivData:[B\n+  #120 = NameAndType        #58:#57       // erdData:[B\n+  #121 = Utf8               java/util/zip/ZipException\n+  #122 = Utf8               BootstrapMethods\n+  #123 = MethodHandle       6:#159        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #124 = String             #160          // Invalid X0017_StrongEncryptionHeader: vSize \\u0001 is too small to hold CRC\n+  #125 = NameAndType        #161:#162     // makeConcatWithConstants:(I)Ljava/lang/String;\n+  #126 = NameAndType        #63:#163      // \"<init>\":(Ljava/lang/String;)V\n+  #127 = NameAndType        #61:#57       // vData:[B\n+  #128 = NameAndType        #62:#57       // vCRC32:[B\n+  #129 = NameAndType        #59:#57       // recipientKeyHash:[B\n+  #130 = String             #164          // Invalid X0017_StrongEncryptionHeader: resize \\u0001 is too small to hold hashSize\\u0001\n+  #131 = NameAndType        #161:#165     // makeConcatWithConstants:(II)Ljava/lang/String;\n+  #132 = NameAndType        #60:#57       // keyBlob:[B\n+  #133 = Class              #166          // java/lang/System\n+  #134 = NameAndType        #167:#168     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #135 = NameAndType        #90:#77       // parseFromLocalFileData:([BII)V\n+  #136 = NameAndType        #85:#77       // parseFileFormat:([BII)V\n+  #137 = NameAndType        #91:#77       // parseFromCentralDirectoryData:([BII)V\n+  #138 = NameAndType        #76:#77       // parseCentralDirectoryFormat:([BII)V\n+  #139 = String             #169          // Invalid X0017_StrongEncryptionHeader: \\u0001 \\u0001 doesn\\'t fit into \\u0001 bytes of data at position \\u0001\n+  #140 = NameAndType        #161:#170     // makeConcatWithConstants:(Ljava/lang/String;III)Ljava/lang/String;\n+  #141 = Utf8               org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader\n+  #142 = Utf8               org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n+  #143 = Utf8               org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm\n+  #144 = Utf8               org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm\n+  #145 = Utf8               (I)V\n+  #146 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+  #147 = Utf8               assertMinimalLength\n+  #148 = Utf8               (II)V\n+  #149 = Utf8               getValue\n+  #150 = Utf8               ([BI)I\n+  #151 = Utf8               getAlgorithmByCode\n+  #152 = Utf8               (I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n+  #153 = Utf8               org/apache/commons/compress/archivers/zip/ZipLong\n+  #154 = Utf8               ([BI)J\n+  #155 = Utf8               (I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n+  #156 = Utf8               java/util/Arrays\n+  #157 = Utf8               copyOfRange\n+  #158 = Utf8               ([BII)[B\n+  #159 = Methodref          #171.#172     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #160 = Utf8               Invalid X0017_StrongEncryptionHeader: vSize \\u0001 is too small to hold CRC\n+  #161 = Utf8               makeConcatWithConstants\n+  #162 = Utf8               (I)Ljava/lang/String;\n+  #163 = Utf8               (Ljava/lang/String;)V\n+  #164 = Utf8               Invalid X0017_StrongEncryptionHeader: resize \\u0001 is too small to hold hashSize\\u0001\n+  #165 = Utf8               (II)Ljava/lang/String;\n+  #166 = Utf8               java/lang/System\n+  #167 = Utf8               arraycopy\n+  #168 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #169 = Utf8               Invalid X0017_StrongEncryptionHeader: \\u0001 \\u0001 doesn\\'t fit into \\u0001 bytes of data at position \\u0001\n+  #170 = Utf8               (Ljava/lang/String;III)Ljava/lang/String;\n+  #171 = Class              #173          // java/lang/invoke/StringConcatFactory\n+  #172 = NameAndType        #161:#176     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #173 = Utf8               java/lang/invoke/StringConcatFactory\n+  #174 = Class              #178          // java/lang/invoke/MethodHandles$Lookup\n+  #175 = Utf8               Lookup\n+  #176 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #177 = Class              #179          // java/lang/invoke/MethodHandles\n+  #178 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #179 = Utf8               java/lang/invoke/MethodHandles\n {\n   private int format;\n     descriptor: I\n     flags: (0x0002) ACC_PRIVATE\n \n   private org.apache.commons.compress.archivers.zip.PKWareExtraHeader$EncryptionAlgorithm algId;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n@@ -544,15 +541,15 @@\n        177: iadd\n        178: invokestatic  #13                 // Method org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n        181: putfield      #4                  // Field rcount:J\n        184: aload_0\n        185: getfield      #4                  // Field rcount:J\n        188: lconst_0\n        189: lcmp\n-       190: ifne          329\n+       190: ifne          311\n        193: aload_0\n        194: iload         4\n        196: bipush        20\n        198: iadd\n        199: iload         5\n        201: iadd\n        202: iconst_2\n@@ -577,279 +574,254 @@\n        233: iadd\n        234: iload         5\n        236: iadd\n        237: iload_3\n        238: invokespecial #17                 // Method assertDynamicLengthFits:(Ljava/lang/String;III)V\n        241: iload         6\n        243: iconst_4\n-       244: if_icmpge     280\n+       244: if_icmpge     262\n        247: new           #23                 // class java/util/zip/ZipException\n        250: dup\n-       251: new           #24                 // class java/lang/StringBuilder\n-       254: dup\n-       255: invokespecial #25                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       258: ldc           #26                 // String Invalid X0017_StrongEncryptionHeader: vSize\n-       260: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       263: iload         6\n-       265: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       268: ldc           #29                 // String  is too small to hold CRC\n-       270: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       273: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       276: invokespecial #31                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-       279: athrow\n-       280: aload_0\n-       281: aload_1\n-       282: iload_2\n-       283: iload         4\n-       285: iadd\n-       286: bipush        22\n-       288: iadd\n-       289: iload         5\n-       291: iadd\n-       292: iload         6\n-       294: iconst_4\n-       295: isub\n-       296: invokestatic  #18                 // Method java/util/Arrays.copyOfRange:([BII)[B\n-       299: putfield      #32                 // Field vData:[B\n-       302: aload_0\n-       303: aload_1\n-       304: iload_2\n-       305: iload         4\n-       307: iadd\n-       308: bipush        22\n-       310: iadd\n-       311: iload         5\n-       313: iadd\n-       314: iload         6\n+       251: iload         6\n+       253: invokedynamic #24,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;\n+       258: invokespecial #25                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+       261: athrow\n+       262: aload_0\n+       263: aload_1\n+       264: iload_2\n+       265: iload         4\n+       267: iadd\n+       268: bipush        22\n+       270: iadd\n+       271: iload         5\n+       273: iadd\n+       274: iload         6\n+       276: iconst_4\n+       277: isub\n+       278: invokestatic  #18                 // Method java/util/Arrays.copyOfRange:([BII)[B\n+       281: putfield      #26                 // Field vData:[B\n+       284: aload_0\n+       285: aload_1\n+       286: iload_2\n+       287: iload         4\n+       289: iadd\n+       290: bipush        22\n+       292: iadd\n+       293: iload         5\n+       295: iadd\n+       296: iload         6\n+       298: iadd\n+       299: iconst_4\n+       300: isub\n+       301: iconst_4\n+       302: invokestatic  #18                 // Method java/util/Arrays.copyOfRange:([BII)[B\n+       305: putfield      #27                 // Field vCRC32:[B\n+       308: goto          653\n+       311: aload_0\n+       312: iload         4\n+       314: bipush        20\n        316: iadd\n-       317: iconst_4\n-       318: isub\n-       319: iconst_4\n-       320: invokestatic  #18                 // Method java/util/Arrays.copyOfRange:([BII)[B\n-       323: putfield      #33                 // Field vCRC32:[B\n-       326: goto          710\n-       329: aload_0\n+       317: iload         5\n+       319: iadd\n+       320: bipush        6\n+       322: iadd\n+       323: iload_3\n+       324: invokevirtual #7                  // Method assertMinimalLength:(II)V\n+       327: aload_0\n+       328: aload_1\n+       329: iload_2\n        330: iload         4\n-       332: bipush        20\n-       334: iadd\n-       335: iload         5\n-       337: iadd\n-       338: bipush        6\n-       340: iadd\n-       341: iload_3\n-       342: invokevirtual #7                  // Method assertMinimalLength:(II)V\n-       345: aload_0\n-       346: aload_1\n-       347: iload_2\n-       348: iload         4\n-       350: iadd\n-       351: bipush        20\n+       332: iadd\n+       333: bipush        20\n+       335: iadd\n+       336: iload         5\n+       338: iadd\n+       339: invokestatic  #8                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+       342: invokestatic  #14                 // Method org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm.getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n+       345: putfield      #5                  // Field hashAlg:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n+       348: aload_0\n+       349: aload_1\n+       350: iload_2\n+       351: iload         4\n        353: iadd\n-       354: iload         5\n+       354: bipush        22\n        356: iadd\n-       357: invokestatic  #8                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-       360: invokestatic  #14                 // Method org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm.getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n-       363: putfield      #5                  // Field hashAlg:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n-       366: aload_0\n-       367: aload_1\n-       368: iload_2\n-       369: iload         4\n-       371: iadd\n-       372: bipush        22\n-       374: iadd\n-       375: iload         5\n-       377: iadd\n-       378: invokestatic  #8                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-       381: putfield      #15                 // Field hashSize:I\n-       384: aload_1\n-       385: iload_2\n-       386: iload         4\n-       388: iadd\n-       389: bipush        24\n-       391: iadd\n-       392: iload         5\n-       394: iadd\n-       395: invokestatic  #8                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-       398: istore        6\n-       400: aload_0\n-       401: aload_0\n-       402: getfield      #15                 // Field hashSize:I\n-       405: newarray       byte\n-       407: putfield      #34                 // Field recipientKeyHash:[B\n-       410: iload         6\n-       412: aload_0\n-       413: getfield      #15                 // Field hashSize:I\n-       416: if_icmpge     459\n-       419: new           #23                 // class java/util/zip/ZipException\n-       422: dup\n-       423: new           #24                 // class java/lang/StringBuilder\n-       426: dup\n-       427: invokespecial #25                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       430: ldc           #35                 // String Invalid X0017_StrongEncryptionHeader: resize\n-       432: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       435: iload         6\n-       437: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       440: ldc           #36                 // String  is too small to hold hashSize\n-       442: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       445: aload_0\n-       446: getfield      #15                 // Field hashSize:I\n-       449: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       452: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       455: invokespecial #31                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-       458: athrow\n-       459: aload_0\n-       460: iload         6\n-       462: aload_0\n-       463: getfield      #15                 // Field hashSize:I\n-       466: isub\n-       467: newarray       byte\n-       469: putfield      #37                 // Field keyBlob:[B\n-       472: aload_0\n-       473: ldc           #38                 // String resize\n-       475: iload         6\n-       477: iload         4\n-       479: bipush        24\n-       481: iadd\n-       482: iload         5\n-       484: iadd\n-       485: iload_3\n-       486: invokespecial #17                 // Method assertDynamicLengthFits:(Ljava/lang/String;III)V\n-       489: aload_1\n-       490: iload_2\n-       491: iload         4\n-       493: iadd\n-       494: bipush        24\n-       496: iadd\n-       497: iload         5\n-       499: iadd\n-       500: aload_0\n-       501: getfield      #34                 // Field recipientKeyHash:[B\n-       504: iconst_0\n-       505: aload_0\n-       506: getfield      #15                 // Field hashSize:I\n-       509: invokestatic  #39                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-       512: aload_1\n-       513: iload_2\n-       514: iload         4\n-       516: iadd\n-       517: bipush        24\n-       519: iadd\n-       520: iload         5\n-       522: iadd\n-       523: aload_0\n-       524: getfield      #15                 // Field hashSize:I\n-       527: iadd\n-       528: aload_0\n-       529: getfield      #37                 // Field keyBlob:[B\n-       532: iconst_0\n+       357: iload         5\n+       359: iadd\n+       360: invokestatic  #8                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+       363: putfield      #15                 // Field hashSize:I\n+       366: aload_1\n+       367: iload_2\n+       368: iload         4\n+       370: iadd\n+       371: bipush        24\n+       373: iadd\n+       374: iload         5\n+       376: iadd\n+       377: invokestatic  #8                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+       380: istore        6\n+       382: aload_0\n+       383: aload_0\n+       384: getfield      #15                 // Field hashSize:I\n+       387: newarray       byte\n+       389: putfield      #28                 // Field recipientKeyHash:[B\n+       392: iload         6\n+       394: aload_0\n+       395: getfield      #15                 // Field hashSize:I\n+       398: if_icmpge     420\n+       401: new           #23                 // class java/util/zip/ZipException\n+       404: dup\n+       405: iload         6\n+       407: aload_0\n+       408: getfield      #15                 // Field hashSize:I\n+       411: invokedynamic #29,  0             // InvokeDynamic #1:makeConcatWithConstants:(II)Ljava/lang/String;\n+       416: invokespecial #25                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+       419: athrow\n+       420: aload_0\n+       421: iload         6\n+       423: aload_0\n+       424: getfield      #15                 // Field hashSize:I\n+       427: isub\n+       428: newarray       byte\n+       430: putfield      #30                 // Field keyBlob:[B\n+       433: aload_0\n+       434: ldc           #31                 // String resize\n+       436: iload         6\n+       438: iload         4\n+       440: bipush        24\n+       442: iadd\n+       443: iload         5\n+       445: iadd\n+       446: iload_3\n+       447: invokespecial #17                 // Method assertDynamicLengthFits:(Ljava/lang/String;III)V\n+       450: aload_1\n+       451: iload_2\n+       452: iload         4\n+       454: iadd\n+       455: bipush        24\n+       457: iadd\n+       458: iload         5\n+       460: iadd\n+       461: aload_0\n+       462: getfield      #28                 // Field recipientKeyHash:[B\n+       465: iconst_0\n+       466: aload_0\n+       467: getfield      #15                 // Field hashSize:I\n+       470: invokestatic  #32                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       473: aload_1\n+       474: iload_2\n+       475: iload         4\n+       477: iadd\n+       478: bipush        24\n+       480: iadd\n+       481: iload         5\n+       483: iadd\n+       484: aload_0\n+       485: getfield      #15                 // Field hashSize:I\n+       488: iadd\n+       489: aload_0\n+       490: getfield      #30                 // Field keyBlob:[B\n+       493: iconst_0\n+       494: iload         6\n+       496: aload_0\n+       497: getfield      #15                 // Field hashSize:I\n+       500: isub\n+       501: invokestatic  #32                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       504: aload_0\n+       505: iload         4\n+       507: bipush        26\n+       509: iadd\n+       510: iload         5\n+       512: iadd\n+       513: iload         6\n+       515: iadd\n+       516: iconst_2\n+       517: iadd\n+       518: iload_3\n+       519: invokevirtual #7                  // Method assertMinimalLength:(II)V\n+       522: aload_1\n+       523: iload_2\n+       524: iload         4\n+       526: iadd\n+       527: bipush        26\n+       529: iadd\n+       530: iload         5\n+       532: iadd\n        533: iload         6\n-       535: aload_0\n-       536: getfield      #15                 // Field hashSize:I\n-       539: isub\n-       540: invokestatic  #39                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-       543: aload_0\n-       544: iload         4\n-       546: bipush        26\n-       548: iadd\n-       549: iload         5\n-       551: iadd\n-       552: iload         6\n-       554: iadd\n-       555: iconst_2\n-       556: iadd\n-       557: iload_3\n-       558: invokevirtual #7                  // Method assertMinimalLength:(II)V\n-       561: aload_1\n-       562: iload_2\n-       563: iload         4\n-       565: iadd\n-       566: bipush        26\n-       568: iadd\n-       569: iload         5\n+       535: iadd\n+       536: invokestatic  #8                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+       539: istore        7\n+       541: iload         7\n+       543: iconst_4\n+       544: if_icmpge     562\n+       547: new           #23                 // class java/util/zip/ZipException\n+       550: dup\n+       551: iload         7\n+       553: invokedynamic #24,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;\n+       558: invokespecial #25                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+       561: athrow\n+       562: aload_0\n+       563: ldc           #22                 // String vSize\n+       565: iload         7\n+       567: iload         4\n+       569: bipush        22\n        571: iadd\n-       572: iload         6\n+       572: iload         5\n        574: iadd\n-       575: invokestatic  #8                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-       578: istore        7\n-       580: iload         7\n-       582: iconst_4\n-       583: if_icmpge     619\n-       586: new           #23                 // class java/util/zip/ZipException\n-       589: dup\n-       590: new           #24                 // class java/lang/StringBuilder\n-       593: dup\n-       594: invokespecial #25                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       597: ldc           #26                 // String Invalid X0017_StrongEncryptionHeader: vSize\n-       599: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       602: iload         7\n-       604: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       607: ldc           #29                 // String  is too small to hold CRC\n-       609: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       612: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       615: invokespecial #31                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-       618: athrow\n-       619: aload_0\n-       620: ldc           #22                 // String vSize\n-       622: iload         7\n-       624: iload         4\n-       626: bipush        22\n-       628: iadd\n-       629: iload         5\n-       631: iadd\n-       632: iload         6\n-       634: iadd\n-       635: iload_3\n-       636: invokespecial #17                 // Method assertDynamicLengthFits:(Ljava/lang/String;III)V\n-       639: aload_0\n-       640: iload         7\n+       575: iload         6\n+       577: iadd\n+       578: iload_3\n+       579: invokespecial #17                 // Method assertDynamicLengthFits:(Ljava/lang/String;III)V\n+       582: aload_0\n+       583: iload         7\n+       585: iconst_4\n+       586: isub\n+       587: newarray       byte\n+       589: putfield      #26                 // Field vData:[B\n+       592: aload_0\n+       593: iconst_4\n+       594: newarray       byte\n+       596: putfield      #27                 // Field vCRC32:[B\n+       599: aload_1\n+       600: iload_2\n+       601: iload         4\n+       603: iadd\n+       604: bipush        22\n+       606: iadd\n+       607: iload         5\n+       609: iadd\n+       610: iload         6\n+       612: iadd\n+       613: aload_0\n+       614: getfield      #26                 // Field vData:[B\n+       617: iconst_0\n+       618: iload         7\n+       620: iconst_4\n+       621: isub\n+       622: invokestatic  #32                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       625: aload_1\n+       626: iload_2\n+       627: iload         4\n+       629: iadd\n+       630: bipush        22\n+       632: iadd\n+       633: iload         5\n+       635: iadd\n+       636: iload         6\n+       638: iadd\n+       639: iload         7\n+       641: iadd\n        642: iconst_4\n        643: isub\n-       644: newarray       byte\n-       646: putfield      #32                 // Field vData:[B\n-       649: aload_0\n-       650: iconst_4\n-       651: newarray       byte\n-       653: putfield      #33                 // Field vCRC32:[B\n-       656: aload_1\n-       657: iload_2\n-       658: iload         4\n-       660: iadd\n-       661: bipush        22\n-       663: iadd\n-       664: iload         5\n-       666: iadd\n-       667: iload         6\n-       669: iadd\n-       670: aload_0\n-       671: getfield      #32                 // Field vData:[B\n-       674: iconst_0\n-       675: iload         7\n-       677: iconst_4\n-       678: isub\n-       679: invokestatic  #39                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-       682: aload_1\n-       683: iload_2\n-       684: iload         4\n-       686: iadd\n-       687: bipush        22\n-       689: iadd\n-       690: iload         5\n-       692: iadd\n-       693: iload         6\n-       695: iadd\n-       696: iload         7\n-       698: iadd\n-       699: iconst_4\n-       700: isub\n-       701: aload_0\n-       702: getfield      #33                 // Field vCRC32:[B\n-       705: iconst_0\n-       706: iconst_4\n-       707: invokestatic  #39                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-       710: return\n+       644: aload_0\n+       645: getfield      #27                 // Field vCRC32:[B\n+       648: iconst_0\n+       649: iconst_4\n+       650: invokestatic  #32                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       653: return\n       LineNumberTable:\n         line 341: 0\n         line 342: 6\n         line 343: 13\n         line 345: 23\n         line 347: 36\n         line 349: 46\n@@ -863,60 +835,60 @@\n         line 359: 166\n         line 360: 184\n         line 361: 193\n         line 362: 208\n         line 363: 224\n         line 364: 241\n         line 365: 247\n-        line 368: 280\n-        line 369: 302\n-        line 370: 326\n-        line 371: 329\n-        line 372: 345\n-        line 373: 366\n-        line 374: 384\n-        line 376: 400\n-        line 377: 410\n-        line 378: 419\n-        line 381: 459\n-        line 383: 472\n-        line 385: 489\n-        line 386: 512\n-        line 388: 543\n-        line 389: 561\n-        line 390: 580\n-        line 391: 586\n-        line 395: 619\n-        line 397: 639\n-        line 398: 649\n-        line 399: 656\n-        line 400: 682\n-        line 404: 710\n+        line 368: 262\n+        line 369: 284\n+        line 370: 308\n+        line 371: 311\n+        line 372: 327\n+        line 373: 348\n+        line 374: 366\n+        line 376: 382\n+        line 377: 392\n+        line 378: 401\n+        line 381: 420\n+        line 383: 433\n+        line 385: 450\n+        line 386: 473\n+        line 388: 504\n+        line 389: 522\n+        line 390: 541\n+        line 391: 547\n+        line 395: 562\n+        line 397: 582\n+        line 398: 592\n+        line 399: 599\n+        line 400: 625\n+        line 404: 653\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-          224     102     6 vSize   I\n-          400     310     6 resize   I\n-          580     130     7 vSize   I\n-            0     711     0  this   Lorg/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader;\n-            0     711     1  data   [B\n-            0     711     2 offset   I\n-            0     711     3 length   I\n-           13     698     4 ivSize   I\n-          122     589     5 erdSize   I\n+          224      84     6 vSize   I\n+          382     271     6 resize   I\n+          541     112     7 vSize   I\n+            0     654     0  this   Lorg/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader;\n+            0     654     1  data   [B\n+            0     654     2 offset   I\n+            0     654     3 length   I\n+           13     641     4 ivSize   I\n+          122     532     5 erdSize   I\n       StackMapTable: number_of_entries = 5\n         frame_type = 254 /* append */\n-          offset_delta = 280\n+          offset_delta = 262\n           locals = [ int, int, int ]\n         frame_type = 250 /* chop */\n           offset_delta = 48\n         frame_type = 252 /* append */\n-          offset_delta = 129\n+          offset_delta = 108\n           locals = [ int ]\n         frame_type = 252 /* append */\n-          offset_delta = 159\n+          offset_delta = 141\n           locals = [ int ]\n         frame_type = 249 /* chop */\n           offset_delta = 90\n     Exceptions:\n       throws java.util.zip.ZipException\n \n   public void parseFromLocalFileData(byte[], int, int) throws java.util.zip.ZipException;\n@@ -924,20 +896,20 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokespecial #40                 // Method org/apache/commons/compress/archivers/zip/PKWareExtraHeader.parseFromLocalFileData:([BII)V\n+         4: invokespecial #33                 // Method org/apache/commons/compress/archivers/zip/PKWareExtraHeader.parseFromLocalFileData:([BII)V\n          7: aload_0\n          8: aload_1\n          9: iload_2\n         10: iload_3\n-        11: invokevirtual #41                 // Method parseFileFormat:([BII)V\n+        11: invokevirtual #34                 // Method parseFileFormat:([BII)V\n         14: return\n       LineNumberTable:\n         line 409: 0\n         line 410: 7\n         line 411: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -953,20 +925,20 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokespecial #42                 // Method org/apache/commons/compress/archivers/zip/PKWareExtraHeader.parseFromCentralDirectoryData:([BII)V\n+         4: invokespecial #35                 // Method org/apache/commons/compress/archivers/zip/PKWareExtraHeader.parseFromCentralDirectoryData:([BII)V\n          7: aload_0\n          8: aload_1\n          9: iload_2\n         10: iload_3\n-        11: invokevirtual #43                 // Method parseCentralDirectoryFormat:([BII)V\n+        11: invokevirtual #36                 // Method parseCentralDirectoryFormat:([BII)V\n         14: return\n       LineNumberTable:\n         line 416: 0\n         line 417: 7\n         line 418: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -977,58 +949,54 @@\n     Exceptions:\n       throws java.util.zip.ZipException\n \n   private void assertDynamicLengthFits(java.lang.String, int, int, int) throws java.util.zip.ZipException;\n     descriptor: (Ljava/lang/String;III)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n-      stack=4, locals=5, args_size=5\n+      stack=6, locals=5, args_size=5\n          0: iload_3\n          1: iload_2\n          2: iadd\n          3: iload         4\n-         5: if_icmple     63\n+         5: if_icmple     26\n          8: new           #23                 // class java/util/zip/ZipException\n         11: dup\n-        12: new           #24                 // class java/lang/StringBuilder\n-        15: dup\n-        16: invokespecial #25                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        19: ldc           #44                 // String Invalid X0017_StrongEncryptionHeader:\n-        21: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        24: aload_1\n-        25: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        28: ldc           #45                 // String\n-        30: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        33: iload_2\n-        34: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        37: ldc           #46                 // String  doesn\\'t fit into\n-        39: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        42: iload         4\n-        44: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        47: ldc           #47                 // String  bytes of data at position\n-        49: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        52: iload_3\n-        53: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        56: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        59: invokespecial #31                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-        62: athrow\n-        63: return\n+        12: aload_1\n+        13: iload_2\n+        14: iload         4\n+        16: iload_3\n+        17: invokedynamic #37,  0             // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;III)Ljava/lang/String;\n+        22: invokespecial #25                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+        25: athrow\n+        26: return\n       LineNumberTable:\n         line 422: 0\n         line 423: 8\n-        line 427: 63\n+        line 427: 26\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      64     0  this   Lorg/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader;\n-            0      64     1  what   Ljava/lang/String;\n-            0      64     2 dynamicLength   I\n-            0      64     3 prefixLength   I\n-            0      64     4 length   I\n+            0      27     0  this   Lorg/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader;\n+            0      27     1  what   Ljava/lang/String;\n+            0      27     2 dynamicLength   I\n+            0      27     3 prefixLength   I\n+            0      27     4 length   I\n       StackMapTable: number_of_entries = 1\n-        frame_type = 63 /* same */\n+        frame_type = 26 /* same */\n     Exceptions:\n       throws java.util.zip.ZipException\n }\n SourceFile: \"X0017_StrongEncryptionHeader.java\"\n InnerClasses:\n-  public static final #54= #53 of #49;    // EncryptionAlgorithm=class org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm of class org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n-  public static final #63= #62 of #49;    // HashAlgorithm=class org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm of class org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n+  public static final #44= #43 of #39;    // EncryptionAlgorithm=class org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm of class org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n+  public static final #53= #52 of #39;    // HashAlgorithm=class org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm of class org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n+  public static final #175= #174 of #177; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+BootstrapMethods:\n+  0: #123 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #124 Invalid X0017_StrongEncryptionHeader: vSize \\u0001 is too small to hold CRC\n+  1: #123 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #130 Invalid X0017_StrongEncryptionHeader: resize \\u0001 is too small to hold hashSize\\u0001\n+  2: #123 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #139 Invalid X0017_StrongEncryptionHeader: \\u0001 \\u0001 doesn\\'t fit into \\u0001 bytes of data at position \\u0001\n"}]}
