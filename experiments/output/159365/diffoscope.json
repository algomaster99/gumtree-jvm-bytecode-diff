{"diffoscope-json-version": 1, "source1": "first/SegmentConstantPoolArrayCache$CachedArray.class", "source2": "second/SegmentConstantPoolArrayCache$CachedArray.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,8 +1,8 @@\n-  SHA-256 checksum 59e51a76cae8a59a0775452fcb9873834d1cc6d861d4afef919abe89a7c7edf7\n+  SHA-256 checksum 375a91b60d48ce5343ce117122f28a67800eb9c8cc9550c4a5026c9f625c55d5\n   Compiled from \"SegmentConstantPoolArrayCache.java\"\n public class org.apache.commons.compress.harmony.unpack200.SegmentConstantPoolArrayCache$CachedArray\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/compress/harmony/unpack200/SegmentConstantPoolArrayCache$CachedArray\n   super_class: #3                         // java/lang/Object\n@@ -45,18 +45,18 @@\n    #35 = NameAndType        #36:#22       // cacheIndexes:()V\n    #36 = Utf8               cacheIndexes\n    #37 = Utf8               LineNumberTable\n    #38 = Utf8               LocalVariableTable\n    #39 = Utf8               this\n    #40 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/SegmentConstantPoolArrayCache$CachedArray;\n    #41 = Utf8               array\n-   #42 = NameAndType        #43:#44       // apply:()Ljava/util/function/Function;\n-   #43 = Utf8               apply\n-   #44 = Utf8               ()Ljava/util/function/Function;\n-   #45 = InvokeDynamic      #0:#42        // #0:apply:()Ljava/util/function/Function;\n+   #42 = InvokeDynamic      #0:#43        // #0:apply:()Ljava/util/function/Function;\n+   #43 = NameAndType        #44:#45       // apply:()Ljava/util/function/Function;\n+   #44 = Utf8               apply\n+   #45 = Utf8               ()Ljava/util/function/Function;\n    #46 = Methodref          #27.#47       // java/util/HashMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;\n    #47 = NameAndType        #48:#49       // computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;\n    #48 = Utf8               computeIfAbsent\n    #49 = Utf8               (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;\n    #50 = Methodref          #27.#51       // java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n    #51 = NameAndType        #52:#53       // get:(Ljava/lang/Object;)Ljava/lang/Object;\n    #52 = Utf8               get\n@@ -189,15 +189,15 @@\n          6: getfield      #23                 // Field primaryArray:[Ljava/lang/String;\n          9: iload_1\n         10: aaload\n         11: astore_2\n         12: aload_0\n         13: getfield      #32                 // Field primaryTable:Ljava/util/HashMap;\n         16: aload_2\n-        17: invokedynamic #45,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;\n+        17: invokedynamic #42,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;\n         22: invokevirtual #46                 // Method java/util/HashMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;\n         25: pop\n         26: aload_0\n         27: getfield      #32                 // Field primaryTable:Ljava/util/HashMap;\n         30: aload_2\n         31: invokevirtual #50                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n         34: checkcast     #54                 // class java/util/List\n"}]}
