{"diffoscope-json-version": 1, "source1": "first/ArchiveStreamFactory.class", "source2": "second/ArchiveStreamFactory.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,429 +1,425 @@\n-  SHA-256 checksum 894b3c2217b72103fd5c14247f06e1bc26d1be8648fe117f43fb5529f4ce56cb\n+  SHA-256 checksum 3ffc356457b2a7866902de697c4fa409a1e2831af0a89963ee37c478f3d5075e\n   Compiled from \"ArchiveStreamFactory.java\"\n public class org.apache.commons.compress.archivers.ArchiveStreamFactory implements org.apache.commons.compress.archivers.ArchiveStreamProvider\n   minor version: 0\n-  major version: 51\n+  major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #34                         // org/apache/commons/compress/archivers/ArchiveStreamFactory\n-  super_class: #130                       // java/lang/Object\n-  interfaces: 1, fields: 16, methods: 23, attributes: 2\n+  super_class: #125                       // java/lang/Object\n+  interfaces: 1, fields: 16, methods: 23, attributes: 3\n Constant pool:\n-    #1 = Methodref          #34.#246      // org/apache/commons/compress/archivers/ArchiveStreamFactory.findArchiveStreamProviders:()Ljava/util/ArrayList;\n-    #2 = Fieldref           #34.#247      // org/apache/commons/compress/archivers/ArchiveStreamFactory.SINGLETON:Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n-    #3 = Methodref          #34.#248      // org/apache/commons/compress/archivers/ArchiveStreamFactory.serviceLoaderIterator:()Ljava/util/Iterator;\n-    #4 = Methodref          #249.#250     // org/apache/commons/compress/utils/Lists.newArrayList:(Ljava/util/Iterator;)Ljava/util/ArrayList;\n-    #5 = InterfaceMethodref #251.#252     // java/util/Set.iterator:()Ljava/util/Iterator;\n-    #6 = InterfaceMethodref #253.#254     // java/util/Iterator.hasNext:()Z\n-    #7 = InterfaceMethodref #253.#255     // java/util/Iterator.next:()Ljava/lang/Object;\n-    #8 = Class              #256          // java/lang/String\n-    #9 = Methodref          #34.#257      // org/apache/commons/compress/archivers/ArchiveStreamFactory.toKey:(Ljava/lang/String;)Ljava/lang/String;\n-   #10 = Methodref          #258.#259     // java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #11 = Class              #260          // org/apache/commons/compress/utils/ServiceLoaderIterator\n-   #12 = Class              #261          // org/apache/commons/compress/archivers/ArchiveStreamProvider\n-   #13 = Methodref          #11.#262      // org/apache/commons/compress/utils/ServiceLoaderIterator.\"<init>\":(Ljava/lang/Class;)V\n-   #14 = Fieldref           #263.#264     // java/util/Locale.ROOT:Ljava/util/Locale;\n-   #15 = Methodref          #8.#265       // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-   #16 = Class              #266          // org/apache/commons/compress/archivers/ArchiveStreamFactory$1\n-   #17 = Methodref          #16.#267      // org/apache/commons/compress/archivers/ArchiveStreamFactory$1.\"<init>\":()V\n-   #18 = Methodref          #268.#269     // java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n-   #19 = Class              #270          // java/util/SortedMap\n-   #20 = Class              #271          // org/apache/commons/compress/archivers/ArchiveStreamFactory$2\n-   #21 = Methodref          #20.#267      // org/apache/commons/compress/archivers/ArchiveStreamFactory$2.\"<init>\":()V\n-   #22 = Methodref          #34.#272      // org/apache/commons/compress/archivers/ArchiveStreamFactory.\"<init>\":(Ljava/lang/String;)V\n-   #23 = Methodref          #130.#267     // java/lang/Object.\"<init>\":()V\n-   #24 = Fieldref           #34.#273      // org/apache/commons/compress/archivers/ArchiveStreamFactory.encoding:Ljava/lang/String;\n-   #25 = Fieldref           #34.#274      // org/apache/commons/compress/archivers/ArchiveStreamFactory.entryEncoding:Ljava/lang/String;\n-   #26 = Class              #275          // java/lang/IllegalStateException\n-   #27 = String             #276          // Cannot overide encoding set by the constructor\n-   #28 = Methodref          #26.#272      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #29 = Methodref          #34.#277      // org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n-   #30 = Class              #278          // java/lang/IllegalArgumentException\n-   #31 = String             #279          // Archivername must not be null.\n-   #32 = Methodref          #30.#272      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #33 = String             #280          // InputStream must not be null.\n-   #34 = Class              #281          // org/apache/commons/compress/archivers/ArchiveStreamFactory\n-   #35 = String             #282          // ar\n-   #36 = Methodref          #8.#283       // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-   #37 = Class              #284          // org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n-   #38 = Methodref          #37.#285      // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #39 = String             #286          // arj\n-   #40 = Class              #287          // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream\n-   #41 = Methodref          #40.#288      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #42 = Methodref          #40.#285      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #43 = String             #213          // zip\n-   #44 = Class              #289          // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n-   #45 = Methodref          #44.#288      // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #46 = Methodref          #44.#285      // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #47 = String             #290          // tar\n-   #48 = Class              #291          // org/apache/commons/compress/archivers/tar/TarArchiveInputStream\n-   #49 = Methodref          #48.#288      // org/apache/commons/compress/archivers/tar/TarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #50 = Methodref          #48.#285      // org/apache/commons/compress/archivers/tar/TarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #51 = String             #292          // jar\n-   #52 = Class              #293          // org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n-   #53 = Methodref          #52.#288      // org/apache/commons/compress/archivers/jar/JarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #54 = Methodref          #52.#285      // org/apache/commons/compress/archivers/jar/JarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #55 = String             #294          // cpio\n-   #56 = Class              #295          // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream\n-   #57 = Methodref          #56.#288      // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #58 = Methodref          #56.#285      // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #59 = String             #296          // dump\n-   #60 = Class              #297          // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n-   #61 = Methodref          #60.#288      // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #62 = Methodref          #60.#285      // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #63 = String             #298          // 7z\n-   #64 = Class              #299          // org/apache/commons/compress/archivers/StreamingNotSupportedException\n-   #65 = Methodref          #64.#272      // org/apache/commons/compress/archivers/StreamingNotSupportedException.\"<init>\":(Ljava/lang/String;)V\n-   #66 = Methodref          #34.#300      // org/apache/commons/compress/archivers/ArchiveStreamFactory.getArchiveInputStreamProviders:()Ljava/util/SortedMap;\n-   #67 = InterfaceMethodref #19.#301      // java/util/SortedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #68 = InterfaceMethodref #12.#277      // org/apache/commons/compress/archivers/ArchiveStreamProvider.createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n-   #69 = Class              #302          // org/apache/commons/compress/archivers/ArchiveException\n-   #70 = Class              #303          // java/lang/StringBuilder\n-   #71 = Methodref          #70.#267      // java/lang/StringBuilder.\"<init>\":()V\n-   #72 = String             #304          // Archiver:\n-   #73 = Methodref          #70.#305      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #74 = String             #306          //  not found.\n-   #75 = Methodref          #70.#307      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #76 = Methodref          #69.#272      // org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;)V\n-   #77 = Methodref          #34.#308      // org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n-   #78 = String             #309          // OutputStream must not be null.\n-   #79 = Class              #310          // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n-   #80 = Methodref          #79.#311      // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #81 = Class              #312          // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n-   #82 = Methodref          #81.#311      // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #83 = Methodref          #81.#313      // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.setEncoding:(Ljava/lang/String;)V\n-   #84 = Class              #314          // org/apache/commons/compress/archivers/tar/TarArchiveOutputStream\n-   #85 = Methodref          #84.#315      // org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-   #86 = Methodref          #84.#311      // org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #87 = Class              #316          // org/apache/commons/compress/archivers/jar/JarArchiveOutputStream\n-   #88 = Methodref          #87.#315      // org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-   #89 = Methodref          #87.#311      // org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #90 = Class              #317          // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n-   #91 = Methodref          #90.#315      // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-   #92 = Methodref          #90.#311      // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #93 = Methodref          #34.#318      // org/apache/commons/compress/archivers/ArchiveStreamFactory.getArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n-   #94 = InterfaceMethodref #12.#308      // org/apache/commons/compress/archivers/ArchiveStreamProvider.createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n-   #95 = Methodref          #34.#319      // org/apache/commons/compress/archivers/ArchiveStreamFactory.detect:(Ljava/io/InputStream;)Ljava/lang/String;\n-   #96 = Methodref          #34.#320      // org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n-   #97 = String             #321          // Stream must not be null.\n-   #98 = Methodref          #322.#323     // java/io/InputStream.markSupported:()Z\n-   #99 = String             #324          // Mark is not supported.\n-  #100 = Methodref          #322.#325     // java/io/InputStream.mark:(I)V\n-  #101 = Methodref          #326.#327     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n-  #102 = Methodref          #322.#328     // java/io/InputStream.reset:()V\n-  #103 = Class              #329          // java/io/IOException\n-  #104 = String             #330          // IOException while reading signature.\n-  #105 = Methodref          #69.#331      // org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n-  #106 = Methodref          #44.#332      // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches:([BI)Z\n-  #107 = Methodref          #52.#332      // org/apache/commons/compress/archivers/jar/JarArchiveInputStream.matches:([BI)Z\n-  #108 = Methodref          #37.#332      // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.matches:([BI)Z\n-  #109 = Methodref          #56.#332      // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.matches:([BI)Z\n-  #110 = Methodref          #40.#332      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.matches:([BI)Z\n-  #111 = Methodref          #333.#332     // org/apache/commons/compress/archivers/sevenz/SevenZFile.matches:([BI)Z\n-  #112 = String             #334          // IOException while reading dump signature\n-  #113 = Methodref          #60.#332      // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.matches:([BI)Z\n-  #114 = String             #335          // IOException while reading tar signature\n-  #115 = Methodref          #48.#332      // org/apache/commons/compress/archivers/tar/TarArchiveInputStream.matches:([BI)Z\n-  #116 = Class              #336          // java/io/ByteArrayInputStream\n-  #117 = Methodref          #116.#337     // java/io/ByteArrayInputStream.\"<init>\":([B)V\n-  #118 = Methodref          #48.#338      // org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry:()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n-  #119 = Methodref          #339.#340     // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isCheckSumOK:()Z\n-  #120 = Methodref          #326.#341     // org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n-  #121 = Class              #342          // java/lang/Exception\n-  #122 = String             #343          // No Archiver found for the stream signature\n-  #123 = Fieldref           #34.#344      // org/apache/commons/compress/archivers/ArchiveStreamFactory.archiveInputStreamProviders:Ljava/util/SortedMap;\n-  #124 = Methodref          #34.#345      // org/apache/commons/compress/archivers/ArchiveStreamFactory.findAvailableArchiveInputStreamProviders:()Ljava/util/SortedMap;\n-  #125 = Methodref          #346.#347     // java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n-  #126 = Fieldref           #34.#348      // org/apache/commons/compress/archivers/ArchiveStreamFactory.archiveOutputStreamProviders:Ljava/util/SortedMap;\n-  #127 = Methodref          #34.#349      // org/apache/commons/compress/archivers/ArchiveStreamFactory.findAvailableArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n-  #128 = Methodref          #350.#351     // org/apache/commons/compress/utils/Sets.newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n-  #129 = Methodref          #34.#267      // org/apache/commons/compress/archivers/ArchiveStreamFactory.\"<init>\":()V\n-  #130 = Class              #352          // java/lang/Object\n-  #131 = Utf8               InnerClasses\n-  #132 = Utf8               TAR_HEADER_SIZE\n-  #133 = Utf8               I\n-  #134 = Utf8               ConstantValue\n-  #135 = Integer            512\n-  #136 = Utf8               DUMP_SIGNATURE_SIZE\n-  #137 = Integer            32\n-  #138 = Utf8               SIGNATURE_SIZE\n-  #139 = Integer            12\n-  #140 = Utf8               SINGLETON\n-  #141 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n-  #142 = Utf8               AR\n-  #143 = Utf8               Ljava/lang/String;\n-  #144 = Utf8               ARJ\n-  #145 = Utf8               CPIO\n-  #146 = Utf8               DUMP\n-  #147 = Utf8               JAR\n-  #148 = Utf8               TAR\n-  #149 = Utf8               ZIP\n-  #150 = Utf8               SEVEN_Z\n-  #151 = Utf8               encoding\n-  #152 = Utf8               entryEncoding\n-  #153 = Utf8               archiveInputStreamProviders\n-  #154 = Utf8               Ljava/util/SortedMap;\n-  #155 = Utf8               Signature\n-  #156 = Utf8               Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n-  #157 = Utf8               archiveOutputStreamProviders\n-  #158 = Utf8               findArchiveStreamProviders\n-  #159 = Utf8               ()Ljava/util/ArrayList;\n-  #160 = Utf8               Code\n-  #161 = Utf8               LineNumberTable\n-  #162 = Utf8               ()Ljava/util/ArrayList<Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n-  #163 = Utf8               putAll\n-  #164 = Utf8               (Ljava/util/Set;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap;)V\n-  #165 = Utf8               LocalVariableTable\n-  #166 = Utf8               name\n-  #167 = Utf8               names\n-  #168 = Utf8               Ljava/util/Set;\n-  #169 = Utf8               provider\n-  #170 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;\n-  #171 = Utf8               map\n-  #172 = Utf8               Ljava/util/TreeMap;\n-  #173 = Utf8               LocalVariableTypeTable\n-  #174 = Utf8               Ljava/util/Set<Ljava/lang/String;>;\n-  #175 = Utf8               Ljava/util/TreeMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n-  #176 = Utf8               StackMapTable\n-  #177 = Class              #353          // java/util/Iterator\n-  #178 = Utf8               (Ljava/util/Set<Ljava/lang/String;>;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;)V\n-  #179 = Utf8               serviceLoaderIterator\n-  #180 = Utf8               ()Ljava/util/Iterator;\n-  #181 = Utf8               ()Ljava/util/Iterator<Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n-  #182 = Utf8               toKey\n-  #183 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #184 = Utf8               findAvailableArchiveInputStreamProviders\n-  #185 = Utf8               ()Ljava/util/SortedMap;\n-  #186 = Utf8               ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n-  #187 = Utf8               findAvailableArchiveOutputStreamProviders\n-  #188 = Utf8               <init>\n-  #189 = Utf8               ()V\n-  #190 = Utf8               this\n-  #191 = Utf8               (Ljava/lang/String;)V\n-  #192 = Utf8               getEntryEncoding\n-  #193 = Utf8               ()Ljava/lang/String;\n-  #194 = Utf8               setEntryEncoding\n-  #195 = Utf8               Deprecated\n-  #196 = Utf8               RuntimeVisibleAnnotations\n-  #197 = Utf8               Ljava/lang/Deprecated;\n-  #198 = Utf8               createArchiveInputStream\n-  #199 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n-  #200 = Utf8               archiverName\n-  #201 = Utf8               in\n-  #202 = Utf8               Ljava/io/InputStream;\n-  #203 = Utf8               Exceptions\n-  #204 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n-  #205 = Utf8               actualEncoding\n-  #206 = Utf8               archiveStreamProvider\n-  #207 = Class              #261          // org/apache/commons/compress/archivers/ArchiveStreamProvider\n-  #208 = Utf8               createArchiveOutputStream\n-  #209 = Utf8               (Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n-  #210 = Utf8               out\n-  #211 = Utf8               Ljava/io/OutputStream;\n-  #212 = Utf8               (Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n-  #213 = Utf8               zip\n-  #214 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;\n-  #215 = Class              #312          // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n-  #216 = Utf8               (Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n-  #217 = Utf8               detect\n-  #218 = Utf8               (Ljava/io/InputStream;)Ljava/lang/String;\n-  #219 = Utf8               e\n-  #220 = Utf8               Ljava/io/IOException;\n-  #221 = Utf8               tais\n-  #222 = Utf8               Lorg/apache/commons/compress/archivers/tar/TarArchiveInputStream;\n-  #223 = Utf8               signature\n-  #224 = Utf8               [B\n-  #225 = Utf8               signatureLength\n-  #226 = Utf8               dumpsig\n-  #227 = Utf8               tarHeader\n-  #228 = Class              #354          // java/io/InputStream\n-  #229 = Class              #224          // \"[B\"\n-  #230 = Class              #329          // java/io/IOException\n-  #231 = Class              #291          // org/apache/commons/compress/archivers/tar/TarArchiveInputStream\n-  #232 = Class              #342          // java/lang/Exception\n-  #233 = Class              #355          // java/lang/Throwable\n-  #234 = Utf8               getArchiveInputStreamProviders\n-  #235 = Utf8               getArchiveOutputStreamProviders\n-  #236 = Utf8               getInputStreamArchiveNames\n-  #237 = Utf8               ()Ljava/util/Set;\n-  #238 = Utf8               ()Ljava/util/Set<Ljava/lang/String;>;\n-  #239 = Utf8               getOutputStreamArchiveNames\n-  #240 = Utf8               access$000\n-  #241 = Utf8               ()Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n-  #242 = Utf8               access$100\n-  #243 = Utf8               <clinit>\n-  #244 = Utf8               SourceFile\n-  #245 = Utf8               ArchiveStreamFactory.java\n-  #246 = NameAndType        #158:#159     // findArchiveStreamProviders:()Ljava/util/ArrayList;\n-  #247 = NameAndType        #140:#141     // SINGLETON:Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n-  #248 = NameAndType        #179:#180     // serviceLoaderIterator:()Ljava/util/Iterator;\n-  #249 = Class              #356          // org/apache/commons/compress/utils/Lists\n-  #250 = NameAndType        #357:#358     // newArrayList:(Ljava/util/Iterator;)Ljava/util/ArrayList;\n-  #251 = Class              #359          // java/util/Set\n-  #252 = NameAndType        #360:#180     // iterator:()Ljava/util/Iterator;\n-  #253 = Class              #353          // java/util/Iterator\n-  #254 = NameAndType        #361:#362     // hasNext:()Z\n-  #255 = NameAndType        #363:#364     // next:()Ljava/lang/Object;\n-  #256 = Utf8               java/lang/String\n-  #257 = NameAndType        #182:#183     // toKey:(Ljava/lang/String;)Ljava/lang/String;\n-  #258 = Class              #365          // java/util/TreeMap\n-  #259 = NameAndType        #366:#367     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #260 = Utf8               org/apache/commons/compress/utils/ServiceLoaderIterator\n-  #261 = Utf8               org/apache/commons/compress/archivers/ArchiveStreamProvider\n-  #262 = NameAndType        #188:#368     // \"<init>\":(Ljava/lang/Class;)V\n-  #263 = Class              #369          // java/util/Locale\n-  #264 = NameAndType        #370:#371     // ROOT:Ljava/util/Locale;\n-  #265 = NameAndType        #372:#373     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #266 = Utf8               org/apache/commons/compress/archivers/ArchiveStreamFactory$1\n-  #267 = NameAndType        #188:#189     // \"<init>\":()V\n-  #268 = Class              #374          // java/security/AccessController\n-  #269 = NameAndType        #375:#376     // doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n-  #270 = Utf8               java/util/SortedMap\n-  #271 = Utf8               org/apache/commons/compress/archivers/ArchiveStreamFactory$2\n-  #272 = NameAndType        #188:#191     // \"<init>\":(Ljava/lang/String;)V\n-  #273 = NameAndType        #151:#143     // encoding:Ljava/lang/String;\n-  #274 = NameAndType        #152:#143     // entryEncoding:Ljava/lang/String;\n-  #275 = Utf8               java/lang/IllegalStateException\n-  #276 = Utf8               Cannot overide encoding set by the constructor\n-  #277 = NameAndType        #198:#204     // createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n-  #278 = Utf8               java/lang/IllegalArgumentException\n-  #279 = Utf8               Archivername must not be null.\n-  #280 = Utf8               InputStream must not be null.\n-  #281 = Utf8               org/apache/commons/compress/archivers/ArchiveStreamFactory\n-  #282 = Utf8               ar\n-  #283 = NameAndType        #377:#378     // equalsIgnoreCase:(Ljava/lang/String;)Z\n-  #284 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n-  #285 = NameAndType        #188:#379     // \"<init>\":(Ljava/io/InputStream;)V\n-  #286 = Utf8               arj\n-  #287 = Utf8               org/apache/commons/compress/archivers/arj/ArjArchiveInputStream\n-  #288 = NameAndType        #188:#380     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-  #289 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n-  #290 = Utf8               tar\n-  #291 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveInputStream\n-  #292 = Utf8               jar\n-  #293 = Utf8               org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n-  #294 = Utf8               cpio\n-  #295 = Utf8               org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream\n-  #296 = Utf8               dump\n-  #297 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n-  #298 = Utf8               7z\n-  #299 = Utf8               org/apache/commons/compress/archivers/StreamingNotSupportedException\n-  #300 = NameAndType        #234:#185     // getArchiveInputStreamProviders:()Ljava/util/SortedMap;\n-  #301 = NameAndType        #381:#382     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #302 = Utf8               org/apache/commons/compress/archivers/ArchiveException\n-  #303 = Utf8               java/lang/StringBuilder\n-  #304 = Utf8               Archiver:\n-  #305 = NameAndType        #383:#384     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #306 = Utf8                not found.\n-  #307 = NameAndType        #385:#193     // toString:()Ljava/lang/String;\n-  #308 = NameAndType        #208:#212     // createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n-  #309 = Utf8               OutputStream must not be null.\n-  #310 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n-  #311 = NameAndType        #188:#386     // \"<init>\":(Ljava/io/OutputStream;)V\n-  #312 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n-  #313 = NameAndType        #387:#191     // setEncoding:(Ljava/lang/String;)V\n-  #314 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveOutputStream\n-  #315 = NameAndType        #188:#388     // \"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-  #316 = Utf8               org/apache/commons/compress/archivers/jar/JarArchiveOutputStream\n-  #317 = Utf8               org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n-  #318 = NameAndType        #235:#185     // getArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n-  #319 = NameAndType        #217:#218     // detect:(Ljava/io/InputStream;)Ljava/lang/String;\n-  #320 = NameAndType        #198:#199     // createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n-  #321 = Utf8               Stream must not be null.\n-  #322 = Class              #354          // java/io/InputStream\n-  #323 = NameAndType        #389:#362     // markSupported:()Z\n-  #324 = Utf8               Mark is not supported.\n-  #325 = NameAndType        #390:#391     // mark:(I)V\n-  #326 = Class              #392          // org/apache/commons/compress/utils/IOUtils\n-  #327 = NameAndType        #393:#394     // readFully:(Ljava/io/InputStream;[B)I\n-  #328 = NameAndType        #395:#189     // reset:()V\n-  #329 = Utf8               java/io/IOException\n-  #330 = Utf8               IOException while reading signature.\n-  #331 = NameAndType        #188:#396     // \"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n-  #332 = NameAndType        #397:#398     // matches:([BI)Z\n-  #333 = Class              #399          // org/apache/commons/compress/archivers/sevenz/SevenZFile\n-  #334 = Utf8               IOException while reading dump signature\n-  #335 = Utf8               IOException while reading tar signature\n-  #336 = Utf8               java/io/ByteArrayInputStream\n-  #337 = NameAndType        #188:#400     // \"<init>\":([B)V\n-  #338 = NameAndType        #401:#402     // getNextTarEntry:()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n-  #339 = Class              #403          // org/apache/commons/compress/archivers/tar/TarArchiveEntry\n-  #340 = NameAndType        #404:#362     // isCheckSumOK:()Z\n-  #341 = NameAndType        #405:#406     // closeQuietly:(Ljava/io/Closeable;)V\n-  #342 = Utf8               java/lang/Exception\n-  #343 = Utf8               No Archiver found for the stream signature\n-  #344 = NameAndType        #153:#154     // archiveInputStreamProviders:Ljava/util/SortedMap;\n-  #345 = NameAndType        #184:#185     // findAvailableArchiveInputStreamProviders:()Ljava/util/SortedMap;\n-  #346 = Class              #407          // java/util/Collections\n-  #347 = NameAndType        #408:#409     // unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n-  #348 = NameAndType        #157:#154     // archiveOutputStreamProviders:Ljava/util/SortedMap;\n-  #349 = NameAndType        #187:#185     // findAvailableArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n-  #350 = Class              #410          // org/apache/commons/compress/utils/Sets\n-  #351 = NameAndType        #411:#412     // newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n-  #352 = Utf8               java/lang/Object\n-  #353 = Utf8               java/util/Iterator\n-  #354 = Utf8               java/io/InputStream\n-  #355 = Utf8               java/lang/Throwable\n-  #356 = Utf8               org/apache/commons/compress/utils/Lists\n-  #357 = Utf8               newArrayList\n-  #358 = Utf8               (Ljava/util/Iterator;)Ljava/util/ArrayList;\n-  #359 = Utf8               java/util/Set\n-  #360 = Utf8               iterator\n-  #361 = Utf8               hasNext\n-  #362 = Utf8               ()Z\n-  #363 = Utf8               next\n-  #364 = Utf8               ()Ljava/lang/Object;\n-  #365 = Utf8               java/util/TreeMap\n-  #366 = Utf8               put\n-  #367 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #368 = Utf8               (Ljava/lang/Class;)V\n-  #369 = Utf8               java/util/Locale\n-  #370 = Utf8               ROOT\n-  #371 = Utf8               Ljava/util/Locale;\n-  #372 = Utf8               toUpperCase\n-  #373 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n-  #374 = Utf8               java/security/AccessController\n-  #375 = Utf8               doPrivileged\n-  #376 = Utf8               (Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n-  #377 = Utf8               equalsIgnoreCase\n-  #378 = Utf8               (Ljava/lang/String;)Z\n-  #379 = Utf8               (Ljava/io/InputStream;)V\n-  #380 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n-  #381 = Utf8               get\n-  #382 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #383 = Utf8               append\n-  #384 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #385 = Utf8               toString\n-  #386 = Utf8               (Ljava/io/OutputStream;)V\n-  #387 = Utf8               setEncoding\n-  #388 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)V\n-  #389 = Utf8               markSupported\n-  #390 = Utf8               mark\n-  #391 = Utf8               (I)V\n-  #392 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #393 = Utf8               readFully\n-  #394 = Utf8               (Ljava/io/InputStream;[B)I\n-  #395 = Utf8               reset\n-  #396 = Utf8               (Ljava/lang/String;Ljava/lang/Exception;)V\n-  #397 = Utf8               matches\n-  #398 = Utf8               ([BI)Z\n-  #399 = Utf8               org/apache/commons/compress/archivers/sevenz/SevenZFile\n-  #400 = Utf8               ([B)V\n-  #401 = Utf8               getNextTarEntry\n-  #402 = Utf8               ()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n-  #403 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveEntry\n-  #404 = Utf8               isCheckSumOK\n-  #405 = Utf8               closeQuietly\n-  #406 = Utf8               (Ljava/io/Closeable;)V\n-  #407 = Utf8               java/util/Collections\n-  #408 = Utf8               unmodifiableSortedMap\n-  #409 = Utf8               (Ljava/util/SortedMap;)Ljava/util/SortedMap;\n-  #410 = Utf8               org/apache/commons/compress/utils/Sets\n-  #411 = Utf8               newHashSet\n-  #412 = Utf8               ([Ljava/lang/Object;)Ljava/util/HashSet;\n+    #1 = Methodref          #34.#236      // org/apache/commons/compress/archivers/ArchiveStreamFactory.findArchiveStreamProviders:()Ljava/util/ArrayList;\n+    #2 = Fieldref           #34.#237      // org/apache/commons/compress/archivers/ArchiveStreamFactory.SINGLETON:Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n+    #3 = Methodref          #34.#238      // org/apache/commons/compress/archivers/ArchiveStreamFactory.serviceLoaderIterator:()Ljava/util/Iterator;\n+    #4 = Methodref          #239.#240     // org/apache/commons/compress/utils/Lists.newArrayList:(Ljava/util/Iterator;)Ljava/util/ArrayList;\n+    #5 = InterfaceMethodref #241.#242     // java/util/Set.iterator:()Ljava/util/Iterator;\n+    #6 = InterfaceMethodref #172.#243     // java/util/Iterator.hasNext:()Z\n+    #7 = InterfaceMethodref #172.#244     // java/util/Iterator.next:()Ljava/lang/Object;\n+    #8 = Class              #245          // java/lang/String\n+    #9 = Methodref          #34.#246      // org/apache/commons/compress/archivers/ArchiveStreamFactory.toKey:(Ljava/lang/String;)Ljava/lang/String;\n+   #10 = Methodref          #247.#248     // java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #11 = Class              #249          // org/apache/commons/compress/utils/ServiceLoaderIterator\n+   #12 = Class              #250          // org/apache/commons/compress/archivers/ArchiveStreamProvider\n+   #13 = Methodref          #11.#251      // org/apache/commons/compress/utils/ServiceLoaderIterator.\"<init>\":(Ljava/lang/Class;)V\n+   #14 = Fieldref           #252.#253     // java/util/Locale.ROOT:Ljava/util/Locale;\n+   #15 = Methodref          #8.#254       // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+   #16 = Class              #255          // org/apache/commons/compress/archivers/ArchiveStreamFactory$1\n+   #17 = Methodref          #16.#256      // org/apache/commons/compress/archivers/ArchiveStreamFactory$1.\"<init>\":()V\n+   #18 = Methodref          #257.#258     // java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n+   #19 = Class              #259          // java/util/SortedMap\n+   #20 = Class              #260          // org/apache/commons/compress/archivers/ArchiveStreamFactory$2\n+   #21 = Methodref          #20.#256      // org/apache/commons/compress/archivers/ArchiveStreamFactory$2.\"<init>\":()V\n+   #22 = Methodref          #34.#261      // org/apache/commons/compress/archivers/ArchiveStreamFactory.\"<init>\":(Ljava/lang/String;)V\n+   #23 = Methodref          #125.#256     // java/lang/Object.\"<init>\":()V\n+   #24 = Fieldref           #34.#262      // org/apache/commons/compress/archivers/ArchiveStreamFactory.encoding:Ljava/lang/String;\n+   #25 = Fieldref           #34.#263      // org/apache/commons/compress/archivers/ArchiveStreamFactory.entryEncoding:Ljava/lang/String;\n+   #26 = Class              #264          // java/lang/IllegalStateException\n+   #27 = String             #265          // Cannot overide encoding set by the constructor\n+   #28 = Methodref          #26.#261      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #29 = Methodref          #34.#266      // org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+   #30 = Class              #267          // java/lang/IllegalArgumentException\n+   #31 = String             #268          // Archivername must not be null.\n+   #32 = Methodref          #30.#261      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #33 = String             #269          // InputStream must not be null.\n+   #34 = Class              #270          // org/apache/commons/compress/archivers/ArchiveStreamFactory\n+   #35 = String             #271          // ar\n+   #36 = Methodref          #8.#272       // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+   #37 = Class              #273          // org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n+   #38 = Methodref          #37.#274      // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #39 = String             #275          // arj\n+   #40 = Class              #276          // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream\n+   #41 = Methodref          #40.#277      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+   #42 = Methodref          #40.#274      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #43 = String             #207          // zip\n+   #44 = Class              #278          // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+   #45 = Methodref          #44.#277      // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+   #46 = Methodref          #44.#274      // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #47 = String             #279          // tar\n+   #48 = Class              #280          // org/apache/commons/compress/archivers/tar/TarArchiveInputStream\n+   #49 = Methodref          #48.#277      // org/apache/commons/compress/archivers/tar/TarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+   #50 = Methodref          #48.#274      // org/apache/commons/compress/archivers/tar/TarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #51 = String             #281          // jar\n+   #52 = Class              #282          // org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n+   #53 = Methodref          #52.#277      // org/apache/commons/compress/archivers/jar/JarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+   #54 = Methodref          #52.#274      // org/apache/commons/compress/archivers/jar/JarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #55 = String             #283          // cpio\n+   #56 = Class              #284          // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream\n+   #57 = Methodref          #56.#277      // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+   #58 = Methodref          #56.#274      // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #59 = String             #285          // dump\n+   #60 = Class              #286          // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n+   #61 = Methodref          #60.#277      // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+   #62 = Methodref          #60.#274      // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #63 = String             #287          // 7z\n+   #64 = Class              #288          // org/apache/commons/compress/archivers/StreamingNotSupportedException\n+   #65 = Methodref          #64.#261      // org/apache/commons/compress/archivers/StreamingNotSupportedException.\"<init>\":(Ljava/lang/String;)V\n+   #66 = Methodref          #34.#289      // org/apache/commons/compress/archivers/ArchiveStreamFactory.getArchiveInputStreamProviders:()Ljava/util/SortedMap;\n+   #67 = InterfaceMethodref #19.#290      // java/util/SortedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #68 = InterfaceMethodref #12.#266      // org/apache/commons/compress/archivers/ArchiveStreamProvider.createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+   #69 = Class              #291          // org/apache/commons/compress/archivers/ArchiveException\n+   #70 = InvokeDynamic      #0:#295       // #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+   #71 = Methodref          #69.#261      // org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;)V\n+   #72 = Methodref          #34.#296      // org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n+   #73 = String             #297          // OutputStream must not be null.\n+   #74 = Class              #298          // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n+   #75 = Methodref          #74.#299      // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+   #76 = Class              #300          // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n+   #77 = Methodref          #76.#299      // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+   #78 = Methodref          #76.#301      // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.setEncoding:(Ljava/lang/String;)V\n+   #79 = Class              #302          // org/apache/commons/compress/archivers/tar/TarArchiveOutputStream\n+   #80 = Methodref          #79.#303      // org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+   #81 = Methodref          #79.#299      // org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+   #82 = Class              #304          // org/apache/commons/compress/archivers/jar/JarArchiveOutputStream\n+   #83 = Methodref          #82.#303      // org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+   #84 = Methodref          #82.#299      // org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+   #85 = Class              #305          // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n+   #86 = Methodref          #85.#303      // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+   #87 = Methodref          #85.#299      // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+   #88 = Methodref          #34.#306      // org/apache/commons/compress/archivers/ArchiveStreamFactory.getArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n+   #89 = InterfaceMethodref #12.#296      // org/apache/commons/compress/archivers/ArchiveStreamProvider.createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n+   #90 = Methodref          #34.#307      // org/apache/commons/compress/archivers/ArchiveStreamFactory.detect:(Ljava/io/InputStream;)Ljava/lang/String;\n+   #91 = Methodref          #34.#308      // org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+   #92 = String             #309          // Stream must not be null.\n+   #93 = Methodref          #221.#310     // java/io/InputStream.markSupported:()Z\n+   #94 = String             #311          // Mark is not supported.\n+   #95 = Methodref          #221.#312     // java/io/InputStream.mark:(I)V\n+   #96 = Methodref          #313.#314     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+   #97 = Methodref          #221.#315     // java/io/InputStream.reset:()V\n+   #98 = Class              #316          // java/io/IOException\n+   #99 = String             #317          // IOException while reading signature.\n+  #100 = Methodref          #69.#318      // org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n+  #101 = Methodref          #44.#319      // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches:([BI)Z\n+  #102 = Methodref          #52.#319      // org/apache/commons/compress/archivers/jar/JarArchiveInputStream.matches:([BI)Z\n+  #103 = Methodref          #37.#319      // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.matches:([BI)Z\n+  #104 = Methodref          #56.#319      // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.matches:([BI)Z\n+  #105 = Methodref          #40.#319      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.matches:([BI)Z\n+  #106 = Methodref          #320.#319     // org/apache/commons/compress/archivers/sevenz/SevenZFile.matches:([BI)Z\n+  #107 = String             #321          // IOException while reading dump signature\n+  #108 = Methodref          #60.#319      // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.matches:([BI)Z\n+  #109 = String             #322          // IOException while reading tar signature\n+  #110 = Methodref          #48.#319      // org/apache/commons/compress/archivers/tar/TarArchiveInputStream.matches:([BI)Z\n+  #111 = Class              #323          // java/io/ByteArrayInputStream\n+  #112 = Methodref          #111.#324     // java/io/ByteArrayInputStream.\"<init>\":([B)V\n+  #113 = Methodref          #48.#325      // org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry:()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n+  #114 = Methodref          #326.#327     // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isCheckSumOK:()Z\n+  #115 = Methodref          #313.#328     // org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n+  #116 = Class              #329          // java/lang/Exception\n+  #117 = String             #330          // No Archiver found for the stream signature\n+  #118 = Fieldref           #34.#331      // org/apache/commons/compress/archivers/ArchiveStreamFactory.archiveInputStreamProviders:Ljava/util/SortedMap;\n+  #119 = Methodref          #34.#332      // org/apache/commons/compress/archivers/ArchiveStreamFactory.findAvailableArchiveInputStreamProviders:()Ljava/util/SortedMap;\n+  #120 = Methodref          #333.#334     // java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n+  #121 = Fieldref           #34.#335      // org/apache/commons/compress/archivers/ArchiveStreamFactory.archiveOutputStreamProviders:Ljava/util/SortedMap;\n+  #122 = Methodref          #34.#336      // org/apache/commons/compress/archivers/ArchiveStreamFactory.findAvailableArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n+  #123 = Methodref          #337.#338     // org/apache/commons/compress/utils/Sets.newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n+  #124 = Methodref          #34.#256      // org/apache/commons/compress/archivers/ArchiveStreamFactory.\"<init>\":()V\n+  #125 = Class              #339          // java/lang/Object\n+  #126 = Utf8               InnerClasses\n+  #127 = Utf8               TAR_HEADER_SIZE\n+  #128 = Utf8               I\n+  #129 = Utf8               ConstantValue\n+  #130 = Integer            512\n+  #131 = Utf8               DUMP_SIGNATURE_SIZE\n+  #132 = Integer            32\n+  #133 = Utf8               SIGNATURE_SIZE\n+  #134 = Integer            12\n+  #135 = Utf8               SINGLETON\n+  #136 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n+  #137 = Utf8               AR\n+  #138 = Utf8               Ljava/lang/String;\n+  #139 = Utf8               ARJ\n+  #140 = Utf8               CPIO\n+  #141 = Utf8               DUMP\n+  #142 = Utf8               JAR\n+  #143 = Utf8               TAR\n+  #144 = Utf8               ZIP\n+  #145 = Utf8               SEVEN_Z\n+  #146 = Utf8               encoding\n+  #147 = Utf8               entryEncoding\n+  #148 = Utf8               archiveInputStreamProviders\n+  #149 = Utf8               Ljava/util/SortedMap;\n+  #150 = Utf8               Signature\n+  #151 = Utf8               Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+  #152 = Utf8               archiveOutputStreamProviders\n+  #153 = Utf8               findArchiveStreamProviders\n+  #154 = Utf8               ()Ljava/util/ArrayList;\n+  #155 = Utf8               Code\n+  #156 = Utf8               LineNumberTable\n+  #157 = Utf8               ()Ljava/util/ArrayList<Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+  #158 = Utf8               putAll\n+  #159 = Utf8               (Ljava/util/Set;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap;)V\n+  #160 = Utf8               LocalVariableTable\n+  #161 = Utf8               name\n+  #162 = Utf8               names\n+  #163 = Utf8               Ljava/util/Set;\n+  #164 = Utf8               provider\n+  #165 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;\n+  #166 = Utf8               map\n+  #167 = Utf8               Ljava/util/TreeMap;\n+  #168 = Utf8               LocalVariableTypeTable\n+  #169 = Utf8               Ljava/util/Set<Ljava/lang/String;>;\n+  #170 = Utf8               Ljava/util/TreeMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+  #171 = Utf8               StackMapTable\n+  #172 = Class              #340          // java/util/Iterator\n+  #173 = Utf8               (Ljava/util/Set<Ljava/lang/String;>;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;)V\n+  #174 = Utf8               serviceLoaderIterator\n+  #175 = Utf8               ()Ljava/util/Iterator;\n+  #176 = Utf8               ()Ljava/util/Iterator<Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+  #177 = Utf8               toKey\n+  #178 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #179 = Utf8               findAvailableArchiveInputStreamProviders\n+  #180 = Utf8               ()Ljava/util/SortedMap;\n+  #181 = Utf8               ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+  #182 = Utf8               findAvailableArchiveOutputStreamProviders\n+  #183 = Utf8               <init>\n+  #184 = Utf8               ()V\n+  #185 = Utf8               this\n+  #186 = Utf8               (Ljava/lang/String;)V\n+  #187 = Utf8               getEntryEncoding\n+  #188 = Utf8               ()Ljava/lang/String;\n+  #189 = Utf8               setEntryEncoding\n+  #190 = Utf8               Deprecated\n+  #191 = Utf8               RuntimeVisibleAnnotations\n+  #192 = Utf8               Ljava/lang/Deprecated;\n+  #193 = Utf8               createArchiveInputStream\n+  #194 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+  #195 = Utf8               archiverName\n+  #196 = Utf8               in\n+  #197 = Utf8               Ljava/io/InputStream;\n+  #198 = Utf8               Exceptions\n+  #199 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+  #200 = Utf8               actualEncoding\n+  #201 = Utf8               archiveStreamProvider\n+  #202 = Utf8               createArchiveOutputStream\n+  #203 = Utf8               (Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n+  #204 = Utf8               out\n+  #205 = Utf8               Ljava/io/OutputStream;\n+  #206 = Utf8               (Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n+  #207 = Utf8               zip\n+  #208 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;\n+  #209 = Utf8               (Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+  #210 = Utf8               detect\n+  #211 = Utf8               (Ljava/io/InputStream;)Ljava/lang/String;\n+  #212 = Utf8               e\n+  #213 = Utf8               Ljava/io/IOException;\n+  #214 = Utf8               tais\n+  #215 = Utf8               Lorg/apache/commons/compress/archivers/tar/TarArchiveInputStream;\n+  #216 = Utf8               signature\n+  #217 = Utf8               [B\n+  #218 = Utf8               signatureLength\n+  #219 = Utf8               dumpsig\n+  #220 = Utf8               tarHeader\n+  #221 = Class              #341          // java/io/InputStream\n+  #222 = Class              #217          // \"[B\"\n+  #223 = Class              #342          // java/lang/Throwable\n+  #224 = Utf8               getArchiveInputStreamProviders\n+  #225 = Utf8               getArchiveOutputStreamProviders\n+  #226 = Utf8               getInputStreamArchiveNames\n+  #227 = Utf8               ()Ljava/util/Set;\n+  #228 = Utf8               ()Ljava/util/Set<Ljava/lang/String;>;\n+  #229 = Utf8               getOutputStreamArchiveNames\n+  #230 = Utf8               access$000\n+  #231 = Utf8               ()Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n+  #232 = Utf8               access$100\n+  #233 = Utf8               <clinit>\n+  #234 = Utf8               SourceFile\n+  #235 = Utf8               ArchiveStreamFactory.java\n+  #236 = NameAndType        #153:#154     // findArchiveStreamProviders:()Ljava/util/ArrayList;\n+  #237 = NameAndType        #135:#136     // SINGLETON:Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n+  #238 = NameAndType        #174:#175     // serviceLoaderIterator:()Ljava/util/Iterator;\n+  #239 = Class              #343          // org/apache/commons/compress/utils/Lists\n+  #240 = NameAndType        #344:#345     // newArrayList:(Ljava/util/Iterator;)Ljava/util/ArrayList;\n+  #241 = Class              #346          // java/util/Set\n+  #242 = NameAndType        #347:#175     // iterator:()Ljava/util/Iterator;\n+  #243 = NameAndType        #348:#349     // hasNext:()Z\n+  #244 = NameAndType        #350:#351     // next:()Ljava/lang/Object;\n+  #245 = Utf8               java/lang/String\n+  #246 = NameAndType        #177:#178     // toKey:(Ljava/lang/String;)Ljava/lang/String;\n+  #247 = Class              #352          // java/util/TreeMap\n+  #248 = NameAndType        #353:#354     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #249 = Utf8               org/apache/commons/compress/utils/ServiceLoaderIterator\n+  #250 = Utf8               org/apache/commons/compress/archivers/ArchiveStreamProvider\n+  #251 = NameAndType        #183:#355     // \"<init>\":(Ljava/lang/Class;)V\n+  #252 = Class              #356          // java/util/Locale\n+  #253 = NameAndType        #357:#358     // ROOT:Ljava/util/Locale;\n+  #254 = NameAndType        #359:#360     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #255 = Utf8               org/apache/commons/compress/archivers/ArchiveStreamFactory$1\n+  #256 = NameAndType        #183:#184     // \"<init>\":()V\n+  #257 = Class              #361          // java/security/AccessController\n+  #258 = NameAndType        #362:#363     // doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n+  #259 = Utf8               java/util/SortedMap\n+  #260 = Utf8               org/apache/commons/compress/archivers/ArchiveStreamFactory$2\n+  #261 = NameAndType        #183:#186     // \"<init>\":(Ljava/lang/String;)V\n+  #262 = NameAndType        #146:#138     // encoding:Ljava/lang/String;\n+  #263 = NameAndType        #147:#138     // entryEncoding:Ljava/lang/String;\n+  #264 = Utf8               java/lang/IllegalStateException\n+  #265 = Utf8               Cannot overide encoding set by the constructor\n+  #266 = NameAndType        #193:#199     // createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+  #267 = Utf8               java/lang/IllegalArgumentException\n+  #268 = Utf8               Archivername must not be null.\n+  #269 = Utf8               InputStream must not be null.\n+  #270 = Utf8               org/apache/commons/compress/archivers/ArchiveStreamFactory\n+  #271 = Utf8               ar\n+  #272 = NameAndType        #364:#365     // equalsIgnoreCase:(Ljava/lang/String;)Z\n+  #273 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n+  #274 = NameAndType        #183:#366     // \"<init>\":(Ljava/io/InputStream;)V\n+  #275 = Utf8               arj\n+  #276 = Utf8               org/apache/commons/compress/archivers/arj/ArjArchiveInputStream\n+  #277 = NameAndType        #183:#367     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #278 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+  #279 = Utf8               tar\n+  #280 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveInputStream\n+  #281 = Utf8               jar\n+  #282 = Utf8               org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n+  #283 = Utf8               cpio\n+  #284 = Utf8               org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream\n+  #285 = Utf8               dump\n+  #286 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n+  #287 = Utf8               7z\n+  #288 = Utf8               org/apache/commons/compress/archivers/StreamingNotSupportedException\n+  #289 = NameAndType        #224:#180     // getArchiveInputStreamProviders:()Ljava/util/SortedMap;\n+  #290 = NameAndType        #368:#369     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #291 = Utf8               org/apache/commons/compress/archivers/ArchiveException\n+  #292 = Utf8               BootstrapMethods\n+  #293 = MethodHandle       6:#370        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #294 = String             #371          // Archiver: \\u0001 not found.\n+  #295 = NameAndType        #372:#178     // makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+  #296 = NameAndType        #202:#206     // createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n+  #297 = Utf8               OutputStream must not be null.\n+  #298 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n+  #299 = NameAndType        #183:#373     // \"<init>\":(Ljava/io/OutputStream;)V\n+  #300 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n+  #301 = NameAndType        #374:#186     // setEncoding:(Ljava/lang/String;)V\n+  #302 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveOutputStream\n+  #303 = NameAndType        #183:#375     // \"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+  #304 = Utf8               org/apache/commons/compress/archivers/jar/JarArchiveOutputStream\n+  #305 = Utf8               org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n+  #306 = NameAndType        #225:#180     // getArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n+  #307 = NameAndType        #210:#211     // detect:(Ljava/io/InputStream;)Ljava/lang/String;\n+  #308 = NameAndType        #193:#194     // createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+  #309 = Utf8               Stream must not be null.\n+  #310 = NameAndType        #376:#349     // markSupported:()Z\n+  #311 = Utf8               Mark is not supported.\n+  #312 = NameAndType        #377:#378     // mark:(I)V\n+  #313 = Class              #379          // org/apache/commons/compress/utils/IOUtils\n+  #314 = NameAndType        #380:#381     // readFully:(Ljava/io/InputStream;[B)I\n+  #315 = NameAndType        #382:#184     // reset:()V\n+  #316 = Utf8               java/io/IOException\n+  #317 = Utf8               IOException while reading signature.\n+  #318 = NameAndType        #183:#383     // \"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n+  #319 = NameAndType        #384:#385     // matches:([BI)Z\n+  #320 = Class              #386          // org/apache/commons/compress/archivers/sevenz/SevenZFile\n+  #321 = Utf8               IOException while reading dump signature\n+  #322 = Utf8               IOException while reading tar signature\n+  #323 = Utf8               java/io/ByteArrayInputStream\n+  #324 = NameAndType        #183:#387     // \"<init>\":([B)V\n+  #325 = NameAndType        #388:#389     // getNextTarEntry:()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n+  #326 = Class              #390          // org/apache/commons/compress/archivers/tar/TarArchiveEntry\n+  #327 = NameAndType        #391:#349     // isCheckSumOK:()Z\n+  #328 = NameAndType        #392:#393     // closeQuietly:(Ljava/io/Closeable;)V\n+  #329 = Utf8               java/lang/Exception\n+  #330 = Utf8               No Archiver found for the stream signature\n+  #331 = NameAndType        #148:#149     // archiveInputStreamProviders:Ljava/util/SortedMap;\n+  #332 = NameAndType        #179:#180     // findAvailableArchiveInputStreamProviders:()Ljava/util/SortedMap;\n+  #333 = Class              #394          // java/util/Collections\n+  #334 = NameAndType        #395:#396     // unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n+  #335 = NameAndType        #152:#149     // archiveOutputStreamProviders:Ljava/util/SortedMap;\n+  #336 = NameAndType        #182:#180     // findAvailableArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n+  #337 = Class              #397          // org/apache/commons/compress/utils/Sets\n+  #338 = NameAndType        #398:#399     // newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n+  #339 = Utf8               java/lang/Object\n+  #340 = Utf8               java/util/Iterator\n+  #341 = Utf8               java/io/InputStream\n+  #342 = Utf8               java/lang/Throwable\n+  #343 = Utf8               org/apache/commons/compress/utils/Lists\n+  #344 = Utf8               newArrayList\n+  #345 = Utf8               (Ljava/util/Iterator;)Ljava/util/ArrayList;\n+  #346 = Utf8               java/util/Set\n+  #347 = Utf8               iterator\n+  #348 = Utf8               hasNext\n+  #349 = Utf8               ()Z\n+  #350 = Utf8               next\n+  #351 = Utf8               ()Ljava/lang/Object;\n+  #352 = Utf8               java/util/TreeMap\n+  #353 = Utf8               put\n+  #354 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #355 = Utf8               (Ljava/lang/Class;)V\n+  #356 = Utf8               java/util/Locale\n+  #357 = Utf8               ROOT\n+  #358 = Utf8               Ljava/util/Locale;\n+  #359 = Utf8               toUpperCase\n+  #360 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+  #361 = Utf8               java/security/AccessController\n+  #362 = Utf8               doPrivileged\n+  #363 = Utf8               (Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n+  #364 = Utf8               equalsIgnoreCase\n+  #365 = Utf8               (Ljava/lang/String;)Z\n+  #366 = Utf8               (Ljava/io/InputStream;)V\n+  #367 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n+  #368 = Utf8               get\n+  #369 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #370 = Methodref          #400.#401     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #371 = Utf8               Archiver: \\u0001 not found.\n+  #372 = Utf8               makeConcatWithConstants\n+  #373 = Utf8               (Ljava/io/OutputStream;)V\n+  #374 = Utf8               setEncoding\n+  #375 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)V\n+  #376 = Utf8               markSupported\n+  #377 = Utf8               mark\n+  #378 = Utf8               (I)V\n+  #379 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #380 = Utf8               readFully\n+  #381 = Utf8               (Ljava/io/InputStream;[B)I\n+  #382 = Utf8               reset\n+  #383 = Utf8               (Ljava/lang/String;Ljava/lang/Exception;)V\n+  #384 = Utf8               matches\n+  #385 = Utf8               ([BI)Z\n+  #386 = Utf8               org/apache/commons/compress/archivers/sevenz/SevenZFile\n+  #387 = Utf8               ([B)V\n+  #388 = Utf8               getNextTarEntry\n+  #389 = Utf8               ()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n+  #390 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveEntry\n+  #391 = Utf8               isCheckSumOK\n+  #392 = Utf8               closeQuietly\n+  #393 = Utf8               (Ljava/io/Closeable;)V\n+  #394 = Utf8               java/util/Collections\n+  #395 = Utf8               unmodifiableSortedMap\n+  #396 = Utf8               (Ljava/util/SortedMap;)Ljava/util/SortedMap;\n+  #397 = Utf8               org/apache/commons/compress/utils/Sets\n+  #398 = Utf8               newHashSet\n+  #399 = Utf8               ([Ljava/lang/Object;)Ljava/util/HashSet;\n+  #400 = Class              #402          // java/lang/invoke/StringConcatFactory\n+  #401 = NameAndType        #372:#405     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #402 = Utf8               java/lang/invoke/StringConcatFactory\n+  #403 = Class              #407          // java/lang/invoke/MethodHandles$Lookup\n+  #404 = Utf8               Lookup\n+  #405 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #406 = Class              #408          // java/lang/invoke/MethodHandles\n+  #407 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #408 = Utf8               java/lang/invoke/MethodHandles\n {\n   private static final int TAR_HEADER_SIZE = 512;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 512\n \n   private static final int DUMP_SIGNATURE_SIZE = 32;\n@@ -487,32 +483,32 @@\n   private volatile java.lang.String entryEncoding;\n     descriptor: Ljava/lang/String;\n     flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE\n \n   private java.util.SortedMap<java.lang.String, org.apache.commons.compress.archivers.ArchiveStreamProvider> archiveInputStreamProviders;\n     descriptor: Ljava/util/SortedMap;\n     flags: (0x0002) ACC_PRIVATE\n-    Signature: #156                         // Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+    Signature: #151                         // Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n \n   private java.util.SortedMap<java.lang.String, org.apache.commons.compress.archivers.ArchiveStreamProvider> archiveOutputStreamProviders;\n     descriptor: Ljava/util/SortedMap;\n     flags: (0x0002) ACC_PRIVATE\n-    Signature: #156                         // Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+    Signature: #151                         // Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n \n   private static java.util.ArrayList<org.apache.commons.compress.archivers.ArchiveStreamProvider> findArchiveStreamProviders();\n     descriptor: ()Ljava/util/ArrayList;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: invokestatic  #3                  // Method serviceLoaderIterator:()Ljava/util/Iterator;\n          3: invokestatic  #4                  // Method org/apache/commons/compress/utils/Lists.newArrayList:(Ljava/util/Iterator;)Ljava/util/ArrayList;\n          6: areturn\n       LineNumberTable:\n         line 164: 0\n-    Signature: #162                         // ()Ljava/util/ArrayList<Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+    Signature: #157                         // ()Ljava/util/ArrayList<Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n \n   static void putAll(java.util.Set<java.lang.String>, org.apache.commons.compress.archivers.ArchiveStreamProvider, java.util.TreeMap<java.lang.String, org.apache.commons.compress.archivers.ArchiveStreamProvider>);\n     descriptor: (Ljava/util/Set;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap;)V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=3, locals=5, args_size=3\n          0: aload_0\n@@ -550,29 +546,29 @@\n             0      42     2   map   Ljava/util/TreeMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 252 /* append */\n           offset_delta = 7\n           locals = [ class java/util/Iterator ]\n         frame_type = 250 /* chop */\n           offset_delta = 33\n-    Signature: #178                         // (Ljava/util/Set<Ljava/lang/String;>;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;)V\n+    Signature: #173                         // (Ljava/util/Set<Ljava/lang/String;>;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;)V\n \n   private static java.util.Iterator<org.apache.commons.compress.archivers.ArchiveStreamProvider> serviceLoaderIterator();\n     descriptor: ()Ljava/util/Iterator;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=0, args_size=0\n          0: new           #11                 // class org/apache/commons/compress/utils/ServiceLoaderIterator\n          3: dup\n          4: ldc           #12                 // class org/apache/commons/compress/archivers/ArchiveStreamProvider\n          6: invokespecial #13                 // Method org/apache/commons/compress/utils/ServiceLoaderIterator.\"<init>\":(Ljava/lang/Class;)V\n          9: areturn\n       LineNumberTable:\n         line 175: 0\n-    Signature: #181                         // ()Ljava/util/Iterator<Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+    Signature: #176                         // ()Ljava/util/Iterator<Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n \n   private static java.lang.String toKey(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n@@ -594,30 +590,30 @@\n          3: dup\n          4: invokespecial #17                 // Method org/apache/commons/compress/archivers/ArchiveStreamFactory$1.\"<init>\":()V\n          7: invokestatic  #18                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n         10: checkcast     #19                 // class java/util/SortedMap\n         13: areturn\n       LineNumberTable:\n         line 210: 0\n-    Signature: #186                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+    Signature: #181                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n \n   public static java.util.SortedMap<java.lang.String, org.apache.commons.compress.archivers.ArchiveStreamProvider> findAvailableArchiveOutputStreamProviders();\n     descriptor: ()Ljava/util/SortedMap;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n          0: new           #20                 // class org/apache/commons/compress/archivers/ArchiveStreamFactory$2\n          3: dup\n          4: invokespecial #21                 // Method org/apache/commons/compress/archivers/ArchiveStreamFactory$2.\"<init>\":()V\n          7: invokestatic  #18                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n         10: checkcast     #19                 // class java/util/SortedMap\n         13: areturn\n       LineNumberTable:\n         line 251: 0\n-    Signature: #186                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+    Signature: #181                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n \n   public org.apache.commons.compress.archivers.ArchiveStreamFactory();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n@@ -695,15 +691,15 @@\n         Start  Length  Slot  Name   Signature\n             0      23     0  this   Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n             0      23     1 entryEncoding   Ljava/lang/String;\n       StackMapTable: number_of_entries = 1\n         frame_type = 17 /* same */\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #197()\n+      0: #192()\n         java.lang.Deprecated\n \n   public org.apache.commons.compress.archivers.ArchiveInputStream createArchiveInputStream(java.lang.String, java.io.InputStream) throws org.apache.commons.compress.archivers.ArchiveException;\n     descriptor: (Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n@@ -876,26 +872,18 @@\n        282: aload_1\n        283: aload_2\n        284: aload_3\n        285: invokeinterface #68,  4           // InterfaceMethod org/apache/commons/compress/archivers/ArchiveStreamProvider.createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n        290: areturn\n        291: new           #69                 // class org/apache/commons/compress/archivers/ArchiveException\n        294: dup\n-       295: new           #70                 // class java/lang/StringBuilder\n-       298: dup\n-       299: invokespecial #71                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       302: ldc           #72                 // String Archiver:\n-       304: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       307: aload_1\n-       308: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       311: ldc           #74                 // String  not found.\n-       313: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       316: invokevirtual #75                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       319: invokespecial #76                 // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;)V\n-       322: athrow\n+       295: aload_1\n+       296: invokedynamic #70,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+       301: invokespecial #71                 // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;)V\n+       304: athrow\n       LineNumberTable:\n         line 335: 0\n         line 336: 4\n         line 339: 14\n         line 340: 18\n         line 343: 28\n         line 344: 37\n@@ -927,19 +915,19 @@\n         line 383: 247\n         line 386: 257\n         line 387: 275\n         line 388: 280\n         line 391: 291\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0     323     0  this   Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n-            0     323     1 archiverName   Ljava/lang/String;\n-            0     323     2    in   Ljava/io/InputStream;\n-            0     323     3 actualEncoding   Ljava/lang/String;\n-          275      48     4 archiveStreamProvider   Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;\n+            0     305     0  this   Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n+            0     305     1 archiverName   Ljava/lang/String;\n+            0     305     2    in   Ljava/io/InputStream;\n+            0     305     3 actualEncoding   Ljava/lang/String;\n+          275      30     4 archiveStreamProvider   Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;\n       StackMapTable: number_of_entries = 17\n         frame_type = 14 /* same */\n         frame_type = 13 /* same */\n         frame_type = 17 /* same */\n         frame_type = 22 /* same */\n         frame_type = 8 /* same */\n         frame_type = 22 /* same */\n@@ -965,15 +953,15 @@\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: aload_0\n          4: getfield      #25                 // Field entryEncoding:Ljava/lang/String;\n-         7: invokevirtual #77                 // Method createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n+         7: invokevirtual #72                 // Method createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n         10: areturn\n       LineNumberTable:\n         line 408: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n             0      11     1 archiverName   Ljava/lang/String;\n@@ -993,131 +981,123 @@\n          8: ldc           #31                 // String Archivername must not be null.\n         10: invokespecial #32                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_2\n         15: ifnonnull     28\n         18: new           #30                 // class java/lang/IllegalArgumentException\n         21: dup\n-        22: ldc           #78                 // String OutputStream must not be null.\n+        22: ldc           #73                 // String OutputStream must not be null.\n         24: invokespecial #32                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         27: athrow\n         28: ldc           #35                 // String ar\n         30: aload_1\n         31: invokevirtual #36                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n         34: ifeq          46\n-        37: new           #79                 // class org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n+        37: new           #74                 // class org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n         40: dup\n         41: aload_2\n-        42: invokespecial #80                 // Method org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+        42: invokespecial #75                 // Method org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n         45: areturn\n         46: ldc           #43                 // String zip\n         48: aload_1\n         49: invokevirtual #36                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n         52: ifeq          78\n-        55: new           #81                 // class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n+        55: new           #76                 // class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n         58: dup\n         59: aload_2\n-        60: invokespecial #82                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+        60: invokespecial #77                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n         63: astore        4\n         65: aload_3\n         66: ifnull        75\n         69: aload         4\n         71: aload_3\n-        72: invokevirtual #83                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.setEncoding:(Ljava/lang/String;)V\n+        72: invokevirtual #78                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.setEncoding:(Ljava/lang/String;)V\n         75: aload         4\n         77: areturn\n         78: ldc           #47                 // String tar\n         80: aload_1\n         81: invokevirtual #36                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n         84: ifeq          110\n         87: aload_3\n         88: ifnull        101\n-        91: new           #84                 // class org/apache/commons/compress/archivers/tar/TarArchiveOutputStream\n+        91: new           #79                 // class org/apache/commons/compress/archivers/tar/TarArchiveOutputStream\n         94: dup\n         95: aload_2\n         96: aload_3\n-        97: invokespecial #85                 // Method org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+        97: invokespecial #80                 // Method org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n        100: areturn\n-       101: new           #84                 // class org/apache/commons/compress/archivers/tar/TarArchiveOutputStream\n+       101: new           #79                 // class org/apache/commons/compress/archivers/tar/TarArchiveOutputStream\n        104: dup\n        105: aload_2\n-       106: invokespecial #86                 // Method org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+       106: invokespecial #81                 // Method org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n        109: areturn\n        110: ldc           #51                 // String jar\n        112: aload_1\n        113: invokevirtual #36                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n        116: ifeq          142\n        119: aload_3\n        120: ifnull        133\n-       123: new           #87                 // class org/apache/commons/compress/archivers/jar/JarArchiveOutputStream\n+       123: new           #82                 // class org/apache/commons/compress/archivers/jar/JarArchiveOutputStream\n        126: dup\n        127: aload_2\n        128: aload_3\n-       129: invokespecial #88                 // Method org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+       129: invokespecial #83                 // Method org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n        132: areturn\n-       133: new           #87                 // class org/apache/commons/compress/archivers/jar/JarArchiveOutputStream\n+       133: new           #82                 // class org/apache/commons/compress/archivers/jar/JarArchiveOutputStream\n        136: dup\n        137: aload_2\n-       138: invokespecial #89                 // Method org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+       138: invokespecial #84                 // Method org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n        141: areturn\n        142: ldc           #55                 // String cpio\n        144: aload_1\n        145: invokevirtual #36                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n        148: ifeq          174\n        151: aload_3\n        152: ifnull        165\n-       155: new           #90                 // class org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n+       155: new           #85                 // class org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n        158: dup\n        159: aload_2\n        160: aload_3\n-       161: invokespecial #91                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+       161: invokespecial #86                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n        164: areturn\n-       165: new           #90                 // class org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n+       165: new           #85                 // class org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n        168: dup\n        169: aload_2\n-       170: invokespecial #92                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+       170: invokespecial #87                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n        173: areturn\n        174: ldc           #63                 // String 7z\n        176: aload_1\n        177: invokevirtual #36                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n        180: ifeq          193\n        183: new           #64                 // class org/apache/commons/compress/archivers/StreamingNotSupportedException\n        186: dup\n        187: ldc           #63                 // String 7z\n        189: invokespecial #65                 // Method org/apache/commons/compress/archivers/StreamingNotSupportedException.\"<init>\":(Ljava/lang/String;)V\n        192: athrow\n        193: aload_0\n-       194: invokevirtual #93                 // Method getArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n+       194: invokevirtual #88                 // Method getArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n        197: aload_1\n        198: invokestatic  #9                  // Method toKey:(Ljava/lang/String;)Ljava/lang/String;\n        201: invokeinterface #67,  2           // InterfaceMethod java/util/SortedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n        206: checkcast     #12                 // class org/apache/commons/compress/archivers/ArchiveStreamProvider\n        209: astore        4\n        211: aload         4\n        213: ifnull        227\n        216: aload         4\n        218: aload_1\n        219: aload_2\n        220: aload_3\n-       221: invokeinterface #94,  4           // InterfaceMethod org/apache/commons/compress/archivers/ArchiveStreamProvider.createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n+       221: invokeinterface #89,  4           // InterfaceMethod org/apache/commons/compress/archivers/ArchiveStreamProvider.createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n        226: areturn\n        227: new           #69                 // class org/apache/commons/compress/archivers/ArchiveException\n        230: dup\n-       231: new           #70                 // class java/lang/StringBuilder\n-       234: dup\n-       235: invokespecial #71                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       238: ldc           #72                 // String Archiver:\n-       240: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       243: aload_1\n-       244: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       247: ldc           #74                 // String  not found.\n-       249: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       252: invokevirtual #75                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       255: invokespecial #76                 // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;)V\n-       258: athrow\n+       231: aload_1\n+       232: invokedynamic #70,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+       237: invokespecial #71                 // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;)V\n+       240: athrow\n       LineNumberTable:\n         line 415: 0\n         line 416: 4\n         line 418: 14\n         line 419: 18\n         line 422: 28\n         line 423: 37\n@@ -1143,19 +1123,19 @@\n         line 454: 193\n         line 455: 211\n         line 456: 216\n         line 459: 227\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n            65      13     4   zip   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;\n-            0     259     0  this   Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n-            0     259     1 archiverName   Ljava/lang/String;\n-            0     259     2   out   Ljava/io/OutputStream;\n-            0     259     3 actualEncoding   Ljava/lang/String;\n-          211      48     4 archiveStreamProvider   Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;\n+            0     241     0  this   Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n+            0     241     1 archiverName   Ljava/lang/String;\n+            0     241     2   out   Ljava/io/OutputStream;\n+            0     241     3 actualEncoding   Ljava/lang/String;\n+          211      30     4 archiveStreamProvider   Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;\n       StackMapTable: number_of_entries = 13\n         frame_type = 14 /* same */\n         frame_type = 13 /* same */\n         frame_type = 17 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 28\n           locals = [ class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream ]\n@@ -1177,17 +1157,17 @@\n   public org.apache.commons.compress.archivers.ArchiveInputStream createArchiveInputStream(java.io.InputStream) throws org.apache.commons.compress.archivers.ArchiveException;\n     descriptor: (Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #95                 // Method detect:(Ljava/io/InputStream;)Ljava/lang/String;\n+         2: invokestatic  #90                 // Method detect:(Ljava/io/InputStream;)Ljava/lang/String;\n          5: aload_1\n-         6: invokevirtual #96                 // Method createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+         6: invokevirtual #91                 // Method createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n          9: areturn\n       LineNumberTable:\n         line 476: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n             0      10     1    in   Ljava/io/InputStream;\n@@ -1199,177 +1179,177 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=8, args_size=1\n          0: aload_0\n          1: ifnonnull     14\n          4: new           #30                 // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #97                 // String Stream must not be null.\n+         8: ldc           #92                 // String Stream must not be null.\n         10: invokespecial #32                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_0\n-        15: invokevirtual #98                 // Method java/io/InputStream.markSupported:()Z\n+        15: invokevirtual #93                 // Method java/io/InputStream.markSupported:()Z\n         18: ifne          31\n         21: new           #30                 // class java/lang/IllegalArgumentException\n         24: dup\n-        25: ldc           #99                 // String Mark is not supported.\n+        25: ldc           #94                 // String Mark is not supported.\n         27: invokespecial #32                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         30: athrow\n         31: bipush        12\n         33: newarray       byte\n         35: astore_1\n         36: aload_0\n         37: aload_1\n         38: arraylength\n-        39: invokevirtual #100                // Method java/io/InputStream.mark:(I)V\n+        39: invokevirtual #95                 // Method java/io/InputStream.mark:(I)V\n         42: iconst_m1\n         43: istore_2\n         44: aload_0\n         45: aload_1\n-        46: invokestatic  #101                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+        46: invokestatic  #96                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n         49: istore_2\n         50: aload_0\n-        51: invokevirtual #102                // Method java/io/InputStream.reset:()V\n+        51: invokevirtual #97                 // Method java/io/InputStream.reset:()V\n         54: goto          69\n         57: astore_3\n         58: new           #69                 // class org/apache/commons/compress/archivers/ArchiveException\n         61: dup\n-        62: ldc           #104                // String IOException while reading signature.\n+        62: ldc           #99                 // String IOException while reading signature.\n         64: aload_3\n-        65: invokespecial #105                // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n+        65: invokespecial #100                // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n         68: athrow\n         69: aload_1\n         70: iload_2\n-        71: invokestatic  #106                // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches:([BI)Z\n+        71: invokestatic  #101                // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches:([BI)Z\n         74: ifeq          80\n         77: ldc           #43                 // String zip\n         79: areturn\n         80: aload_1\n         81: iload_2\n-        82: invokestatic  #107                // Method org/apache/commons/compress/archivers/jar/JarArchiveInputStream.matches:([BI)Z\n+        82: invokestatic  #102                // Method org/apache/commons/compress/archivers/jar/JarArchiveInputStream.matches:([BI)Z\n         85: ifeq          91\n         88: ldc           #51                 // String jar\n         90: areturn\n         91: aload_1\n         92: iload_2\n-        93: invokestatic  #108                // Method org/apache/commons/compress/archivers/ar/ArArchiveInputStream.matches:([BI)Z\n+        93: invokestatic  #103                // Method org/apache/commons/compress/archivers/ar/ArArchiveInputStream.matches:([BI)Z\n         96: ifeq          102\n         99: ldc           #35                 // String ar\n        101: areturn\n        102: aload_1\n        103: iload_2\n-       104: invokestatic  #109                // Method org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.matches:([BI)Z\n+       104: invokestatic  #104                // Method org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.matches:([BI)Z\n        107: ifeq          113\n        110: ldc           #55                 // String cpio\n        112: areturn\n        113: aload_1\n        114: iload_2\n-       115: invokestatic  #110                // Method org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.matches:([BI)Z\n+       115: invokestatic  #105                // Method org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.matches:([BI)Z\n        118: ifeq          124\n        121: ldc           #39                 // String arj\n        123: areturn\n        124: aload_1\n        125: iload_2\n-       126: invokestatic  #111                // Method org/apache/commons/compress/archivers/sevenz/SevenZFile.matches:([BI)Z\n+       126: invokestatic  #106                // Method org/apache/commons/compress/archivers/sevenz/SevenZFile.matches:([BI)Z\n        129: ifeq          135\n        132: ldc           #63                 // String 7z\n        134: areturn\n        135: bipush        32\n        137: newarray       byte\n        139: astore_3\n        140: aload_0\n        141: aload_3\n        142: arraylength\n-       143: invokevirtual #100                // Method java/io/InputStream.mark:(I)V\n+       143: invokevirtual #95                 // Method java/io/InputStream.mark:(I)V\n        146: aload_0\n        147: aload_3\n-       148: invokestatic  #101                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+       148: invokestatic  #96                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n        151: istore_2\n        152: aload_0\n-       153: invokevirtual #102                // Method java/io/InputStream.reset:()V\n+       153: invokevirtual #97                 // Method java/io/InputStream.reset:()V\n        156: goto          173\n        159: astore        4\n        161: new           #69                 // class org/apache/commons/compress/archivers/ArchiveException\n        164: dup\n-       165: ldc           #112                // String IOException while reading dump signature\n+       165: ldc           #107                // String IOException while reading dump signature\n        167: aload         4\n-       169: invokespecial #105                // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n+       169: invokespecial #100                // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n        172: athrow\n        173: aload_3\n        174: iload_2\n-       175: invokestatic  #113                // Method org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.matches:([BI)Z\n+       175: invokestatic  #108                // Method org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.matches:([BI)Z\n        178: ifeq          184\n        181: ldc           #59                 // String dump\n        183: areturn\n        184: sipush        512\n        187: newarray       byte\n        189: astore        4\n        191: aload_0\n        192: aload         4\n        194: arraylength\n-       195: invokevirtual #100                // Method java/io/InputStream.mark:(I)V\n+       195: invokevirtual #95                 // Method java/io/InputStream.mark:(I)V\n        198: aload_0\n        199: aload         4\n-       201: invokestatic  #101                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+       201: invokestatic  #96                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n        204: istore_2\n        205: aload_0\n-       206: invokevirtual #102                // Method java/io/InputStream.reset:()V\n+       206: invokevirtual #97                 // Method java/io/InputStream.reset:()V\n        209: goto          226\n        212: astore        5\n        214: new           #69                 // class org/apache/commons/compress/archivers/ArchiveException\n        217: dup\n-       218: ldc           #114                // String IOException while reading tar signature\n+       218: ldc           #109                // String IOException while reading tar signature\n        220: aload         5\n-       222: invokespecial #105                // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n+       222: invokespecial #100                // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n        225: athrow\n        226: aload         4\n        228: iload_2\n-       229: invokestatic  #115                // Method org/apache/commons/compress/archivers/tar/TarArchiveInputStream.matches:([BI)Z\n+       229: invokestatic  #110                // Method org/apache/commons/compress/archivers/tar/TarArchiveInputStream.matches:([BI)Z\n        232: ifeq          238\n        235: ldc           #47                 // String tar\n        237: areturn\n        238: iload_2\n        239: sipush        512\n        242: if_icmplt     317\n        245: aconst_null\n        246: astore        5\n        248: new           #48                 // class org/apache/commons/compress/archivers/tar/TarArchiveInputStream\n        251: dup\n-       252: new           #116                // class java/io/ByteArrayInputStream\n+       252: new           #111                // class java/io/ByteArrayInputStream\n        255: dup\n        256: aload         4\n-       258: invokespecial #117                // Method java/io/ByteArrayInputStream.\"<init>\":([B)V\n+       258: invokespecial #112                // Method java/io/ByteArrayInputStream.\"<init>\":([B)V\n        261: invokespecial #50                 // Method org/apache/commons/compress/archivers/tar/TarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n        264: astore        5\n        266: aload         5\n-       268: invokevirtual #118                // Method org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry:()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n-       271: invokevirtual #119                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isCheckSumOK:()Z\n+       268: invokevirtual #113                // Method org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry:()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n+       271: invokevirtual #114                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isCheckSumOK:()Z\n        274: ifeq          289\n        277: ldc           #47                 // String tar\n        279: astore        6\n        281: aload         5\n-       283: invokestatic  #120                // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n+       283: invokestatic  #115                // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n        286: aload         6\n        288: areturn\n        289: aload         5\n-       291: invokestatic  #120                // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n+       291: invokestatic  #115                // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n        294: goto          317\n        297: astore        6\n        299: aload         5\n-       301: invokestatic  #120                // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n+       301: invokestatic  #115                // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n        304: goto          317\n        307: astore        7\n        309: aload         5\n-       311: invokestatic  #120                // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n+       311: invokestatic  #115                // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n        314: aload         7\n        316: athrow\n        317: new           #69                 // class org/apache/commons/compress/archivers/ArchiveException\n        320: dup\n-       321: ldc           #122                // String No Archiver found for the stream signature\n-       323: invokespecial #76                 // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;)V\n+       321: ldc           #117                // String No Archiver found for the stream signature\n+       323: invokespecial #71                 // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;)V\n        326: athrow\n       Exception table:\n          from    to  target type\n             44    54    57   Class java/io/IOException\n            146   156   159   Class java/io/IOException\n            198   209   212   Class java/io/IOException\n            248   281   297   Class java/lang/Exception\n@@ -1428,15 +1408,14 @@\n         line 552: 286\n         line 560: 289\n         line 561: 294\n         line 554: 297\n         line 560: 299\n         line 561: 304\n         line 560: 307\n-        line 561: 314\n         line 563: 317\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n            58      11     3     e   Ljava/io/IOException;\n           161      12     4     e   Ljava/io/IOException;\n           214      12     5     e   Ljava/io/IOException;\n           248      69     5  tais   Lorg/apache/commons/compress/archivers/tar/TarArchiveInputStream;\n@@ -1485,61 +1464,61 @@\n \n   public java.util.SortedMap<java.lang.String, org.apache.commons.compress.archivers.ArchiveStreamProvider> getArchiveInputStreamProviders();\n     descriptor: ()Ljava/util/SortedMap;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #123                // Field archiveInputStreamProviders:Ljava/util/SortedMap;\n+         1: getfield      #118                // Field archiveInputStreamProviders:Ljava/util/SortedMap;\n          4: ifnonnull     17\n          7: aload_0\n-         8: invokestatic  #124                // Method findAvailableArchiveInputStreamProviders:()Ljava/util/SortedMap;\n-        11: invokestatic  #125                // Method java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n-        14: putfield      #123                // Field archiveInputStreamProviders:Ljava/util/SortedMap;\n+         8: invokestatic  #119                // Method findAvailableArchiveInputStreamProviders:()Ljava/util/SortedMap;\n+        11: invokestatic  #120                // Method java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n+        14: putfield      #118                // Field archiveInputStreamProviders:Ljava/util/SortedMap;\n         17: aload_0\n-        18: getfield      #123                // Field archiveInputStreamProviders:Ljava/util/SortedMap;\n+        18: getfield      #118                // Field archiveInputStreamProviders:Ljava/util/SortedMap;\n         21: areturn\n       LineNumberTable:\n         line 567: 0\n         line 568: 7\n         line 569: 8\n         line 571: 17\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0  this   Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n       StackMapTable: number_of_entries = 1\n         frame_type = 17 /* same */\n-    Signature: #186                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+    Signature: #181                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n \n   public java.util.SortedMap<java.lang.String, org.apache.commons.compress.archivers.ArchiveStreamProvider> getArchiveOutputStreamProviders();\n     descriptor: ()Ljava/util/SortedMap;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #126                // Field archiveOutputStreamProviders:Ljava/util/SortedMap;\n+         1: getfield      #121                // Field archiveOutputStreamProviders:Ljava/util/SortedMap;\n          4: ifnonnull     17\n          7: aload_0\n-         8: invokestatic  #127                // Method findAvailableArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n-        11: invokestatic  #125                // Method java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n-        14: putfield      #126                // Field archiveOutputStreamProviders:Ljava/util/SortedMap;\n+         8: invokestatic  #122                // Method findAvailableArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n+        11: invokestatic  #120                // Method java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n+        14: putfield      #121                // Field archiveOutputStreamProviders:Ljava/util/SortedMap;\n         17: aload_0\n-        18: getfield      #126                // Field archiveOutputStreamProviders:Ljava/util/SortedMap;\n+        18: getfield      #121                // Field archiveOutputStreamProviders:Ljava/util/SortedMap;\n         21: areturn\n       LineNumberTable:\n         line 575: 0\n         line 576: 7\n         line 577: 8\n         line 579: 17\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0  this   Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n       StackMapTable: number_of_entries = 1\n         frame_type = 17 /* same */\n-    Signature: #186                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+    Signature: #181                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n \n   public java.util.Set<java.lang.String> getInputStreamArchiveNames();\n     descriptor: ()Ljava/util/Set;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: bipush        8\n@@ -1572,22 +1551,22 @@\n         36: bipush        6\n         38: ldc           #59                 // String dump\n         40: aastore\n         41: dup\n         42: bipush        7\n         44: ldc           #63                 // String 7z\n         46: aastore\n-        47: invokestatic  #128                // Method org/apache/commons/compress/utils/Sets.newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n+        47: invokestatic  #123                // Method org/apache/commons/compress/utils/Sets.newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n         50: areturn\n       LineNumberTable:\n         line 584: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      51     0  this   Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n-    Signature: #238                         // ()Ljava/util/Set<Ljava/lang/String;>;\n+    Signature: #228                         // ()Ljava/util/Set<Ljava/lang/String;>;\n \n   public java.util.Set<java.lang.String> getOutputStreamArchiveNames();\n     descriptor: ()Ljava/util/Set;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: bipush        6\n@@ -1612,22 +1591,22 @@\n         26: iconst_4\n         27: ldc           #55                 // String cpio\n         29: aastore\n         30: dup\n         31: iconst_5\n         32: ldc           #63                 // String 7z\n         34: aastore\n-        35: invokestatic  #128                // Method org/apache/commons/compress/utils/Sets.newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n+        35: invokestatic  #123                // Method org/apache/commons/compress/utils/Sets.newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n         38: areturn\n       LineNumberTable:\n         line 589: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      39     0  this   Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n-    Signature: #238                         // ()Ljava/util/Set<Ljava/lang/String;>;\n+    Signature: #228                         // ()Ljava/util/Set<Ljava/lang/String;>;\n \n   static org.apache.commons.compress.archivers.ArchiveStreamFactory access$000();\n     descriptor: ()Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: getstatic     #2                  // Field SINGLETON:Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n@@ -1648,17 +1627,22 @@\n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n          0: new           #34                 // class org/apache/commons/compress/archivers/ArchiveStreamFactory\n          3: dup\n-         4: invokespecial #129                // Method \"<init>\":()V\n+         4: invokespecial #124                // Method \"<init>\":()V\n          7: putstatic     #2                  // Field SINGLETON:Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n         10: return\n       LineNumberTable:\n         line 97: 0\n }\n SourceFile: \"ArchiveStreamFactory.java\"\n InnerClasses:\n-  static #20;                             // class org/apache/commons/compress/archivers/ArchiveStreamFactory$2\n-  static #16;                             // class org/apache/commons/compress/archivers/ArchiveStreamFactory$1\n+  #20;                                    // class org/apache/commons/compress/archivers/ArchiveStreamFactory$2\n+  #16;                                    // class org/apache/commons/compress/archivers/ArchiveStreamFactory$1\n+  public static final #404= #403 of #406; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+BootstrapMethods:\n+  0: #293 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #294 Archiver: \\u0001 not found.\n"}]}
