{"diffoscope-json-version": 1, "source1": "first/CompressorStreamFactory.class", "source2": "second/CompressorStreamFactory.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,516 +1,519 @@\n-  SHA-256 checksum 6b0cae60d03a26567097a84912c2f546cf2b04a3fcea2971430208e5c9bf95b3\n+  SHA-256 checksum bf8cddb68aadaa65848f950e54ad02655d22fc02361218ecff4bacc7e89f7b03\n   Compiled from \"CompressorStreamFactory.java\"\n public class org.apache.commons.compress.compressors.CompressorStreamFactory implements org.apache.commons.compress.compressors.CompressorStreamProvider\n   minor version: 0\n-  major version: 51\n+  major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #17                         // org/apache/commons/compress/compressors/CompressorStreamFactory\n-  super_class: #163                       // java/lang/Object\n-  interfaces: 1, fields: 23, methods: 40, attributes: 2\n+  this_class: #12                         // org/apache/commons/compress/compressors/CompressorStreamFactory\n+  super_class: #157                       // java/lang/Object\n+  interfaces: 1, fields: 23, methods: 40, attributes: 3\n Constant pool:\n-    #1 = Methodref          #17.#295      // org/apache/commons/compress/compressors/CompressorStreamFactory.findCompressorStreamProviders:()Ljava/util/ArrayList;\n-    #2 = Fieldref           #17.#296      // org/apache/commons/compress/compressors/CompressorStreamFactory.SINGLETON:Lorg/apache/commons/compress/compressors/CompressorStreamFactory;\n-    #3 = Class              #297          // java/lang/StringBuilder\n-    #4 = Methodref          #3.#298       // java/lang/StringBuilder.\"<init>\":()V\n-    #5 = String             #299          //  In addition to Apache Commons Compress you need the\n-    #6 = Methodref          #3.#300       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-    #7 = String             #301          //  library - see\n-    #8 = Methodref          #3.#302       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-    #9 = Class              #303          // org/apache/commons/compress/compressors/CompressorStreamFactory$1\n-   #10 = Methodref          #9.#298       // org/apache/commons/compress/compressors/CompressorStreamFactory$1.\"<init>\":()V\n-   #11 = Methodref          #304.#305     // java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n-   #12 = Class              #306          // java/util/SortedMap\n-   #13 = Class              #307          // org/apache/commons/compress/compressors/CompressorStreamFactory$2\n-   #14 = Methodref          #13.#298      // org/apache/commons/compress/compressors/CompressorStreamFactory$2.\"<init>\":()V\n-   #15 = Methodref          #17.#308      // org/apache/commons/compress/compressors/CompressorStreamFactory.serviceLoaderIterator:()Ljava/util/Iterator;\n-   #16 = Methodref          #309.#310     // org/apache/commons/compress/utils/Lists.newArrayList:(Ljava/util/Iterator;)Ljava/util/ArrayList;\n-   #17 = Class              #311          // org/apache/commons/compress/compressors/CompressorStreamFactory\n-   #18 = String             #312          // br\n-   #19 = String             #313          // bzip2\n-   #20 = String             #314          // deflate\n-   #21 = String             #315          // deflate64\n-   #22 = String             #316          // gz\n-   #23 = String             #317          // lzma\n-   #24 = String             #318          // pack200\n-   #25 = String             #319          // snappy-framed\n-   #26 = String             #320          // snappy-raw\n-   #27 = String             #321          // xz\n-   #28 = String             #322          // z\n-   #29 = String             #323          // lz4-framed\n-   #30 = String             #324          // lz4-block\n-   #31 = String             #325          // zstd\n-   #32 = InterfaceMethodref #326.#327     // java/util/Set.iterator:()Ljava/util/Iterator;\n-   #33 = InterfaceMethodref #328.#329     // java/util/Iterator.hasNext:()Z\n-   #34 = InterfaceMethodref #328.#330     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #35 = Class              #331          // java/lang/String\n-   #36 = Methodref          #17.#332      // org/apache/commons/compress/compressors/CompressorStreamFactory.toKey:(Ljava/lang/String;)Ljava/lang/String;\n-   #37 = Methodref          #333.#334     // java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #38 = Class              #335          // org/apache/commons/compress/utils/ServiceLoaderIterator\n-   #39 = Class              #336          // org/apache/commons/compress/compressors/CompressorStreamProvider\n-   #40 = Methodref          #38.#337      // org/apache/commons/compress/utils/ServiceLoaderIterator.\"<init>\":(Ljava/lang/Class;)V\n-   #41 = Fieldref           #338.#339     // java/util/Locale.ROOT:Ljava/util/Locale;\n-   #42 = Methodref          #35.#340      // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-   #43 = Methodref          #163.#298     // java/lang/Object.\"<init>\":()V\n-   #44 = Fieldref           #17.#341      // org/apache/commons/compress/compressors/CompressorStreamFactory.decompressConcatenated:Z\n-   #45 = Fieldref           #17.#342      // org/apache/commons/compress/compressors/CompressorStreamFactory.decompressUntilEOF:Ljava/lang/Boolean;\n-   #46 = Fieldref           #17.#343      // org/apache/commons/compress/compressors/CompressorStreamFactory.memoryLimitInKb:I\n-   #47 = Methodref          #344.#345     // java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n-   #48 = Methodref          #17.#346      // org/apache/commons/compress/compressors/CompressorStreamFactory.\"<init>\":(ZI)V\n-   #49 = Class              #347          // java/lang/IllegalArgumentException\n-   #50 = String             #348          // Stream must not be null.\n-   #51 = Methodref          #49.#349      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #52 = Methodref          #350.#351     // java/io/InputStream.markSupported:()Z\n-   #53 = String             #352          // Mark is not supported.\n-   #54 = Methodref          #350.#353     // java/io/InputStream.mark:(I)V\n-   #55 = Methodref          #354.#355     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n-   #56 = Methodref          #350.#356     // java/io/InputStream.reset:()V\n-   #57 = Class              #357          // java/io/IOException\n-   #58 = Class              #358          // org/apache/commons/compress/compressors/CompressorException\n-   #59 = String             #359          // IOException while reading signature.\n-   #60 = Methodref          #58.#360      // org/apache/commons/compress/compressors/CompressorException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #61 = Methodref          #80.#361      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.matches:([BI)Z\n-   #62 = Methodref          #78.#361      // org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.matches:([BI)Z\n-   #63 = Methodref          #101.#361     // org/apache/commons/compress/compressors/pack200/Pack200CompressorInputStream.matches:([BI)Z\n-   #64 = Methodref          #105.#361     // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.matches:([BI)Z\n-   #65 = Methodref          #107.#361     // org/apache/commons/compress/compressors/z/ZCompressorInputStream.matches:([BI)Z\n-   #66 = Methodref          #109.#361     // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.matches:([BI)Z\n-   #67 = Methodref          #362.#361     // org/apache/commons/compress/compressors/xz/XZUtils.matches:([BI)Z\n-   #68 = Methodref          #363.#361     // org/apache/commons/compress/compressors/lzma/LZMAUtils.matches:([BI)Z\n-   #69 = Methodref          #115.#361     // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.matches:([BI)Z\n-   #70 = Methodref          #364.#361     // org/apache/commons/compress/compressors/zstandard/ZstdUtils.matches:([BI)Z\n-   #71 = String             #365          // No Compressor found for the stream signature.\n-   #72 = Methodref          #58.#349      // org/apache/commons/compress/compressors/CompressorException.\"<init>\":(Ljava/lang/String;)V\n-   #73 = Methodref          #17.#366      // org/apache/commons/compress/compressors/CompressorStreamFactory.detect:(Ljava/io/InputStream;)Ljava/lang/String;\n-   #74 = Methodref          #17.#367      // org/apache/commons/compress/compressors/CompressorStreamFactory.createCompressorInputStream:(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/compressors/CompressorInputStream;\n-   #75 = Methodref          #17.#368      // org/apache/commons/compress/compressors/CompressorStreamFactory.createCompressorInputStream:(Ljava/lang/String;Ljava/io/InputStream;Z)Lorg/apache/commons/compress/compressors/CompressorInputStream;\n-   #76 = String             #369          // Compressor name and stream must not be null.\n-   #77 = Methodref          #35.#370      // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-   #78 = Class              #371          // org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream\n-   #79 = Methodref          #78.#372      // org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n-   #80 = Class              #373          // org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream\n-   #81 = Methodref          #80.#372      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n-   #82 = Methodref          #374.#375     // org/apache/commons/compress/compressors/brotli/BrotliUtils.isBrotliCompressionAvailable:()Z\n-   #83 = String             #376          // Brotli compression is not available.\n-   #84 = Fieldref           #17.#377      // org/apache/commons/compress/compressors/CompressorStreamFactory.YOU_NEED_BROTLI_DEC:Ljava/lang/String;\n-   #85 = Class              #378          // org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream\n-   #86 = Methodref          #85.#379      // org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #87 = Methodref          #362.#380     // org/apache/commons/compress/compressors/xz/XZUtils.isXZCompressionAvailable:()Z\n-   #88 = String             #381          // XZ compression is not available.\n-   #89 = Fieldref           #17.#382      // org/apache/commons/compress/compressors/CompressorStreamFactory.YOU_NEED_XZ_JAVA:Ljava/lang/String;\n-   #90 = Class              #383          // org/apache/commons/compress/compressors/xz/XZCompressorInputStream\n-   #91 = Methodref          #90.#384      // org/apache/commons/compress/compressors/xz/XZCompressorInputStream.\"<init>\":(Ljava/io/InputStream;ZI)V\n-   #92 = Methodref          #364.#385     // org/apache/commons/compress/compressors/zstandard/ZstdUtils.isZstdCompressionAvailable:()Z\n-   #93 = String             #386          // Zstandard compression is not available.\n-   #94 = Fieldref           #17.#387      // org/apache/commons/compress/compressors/CompressorStreamFactory.YOU_NEED_ZSTD_JNI:Ljava/lang/String;\n-   #95 = Class              #388          // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream\n-   #96 = Methodref          #95.#379      // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #97 = Methodref          #363.#389     // org/apache/commons/compress/compressors/lzma/LZMAUtils.isLZMACompressionAvailable:()Z\n-   #98 = String             #390          // LZMA compression is not available\n-   #99 = Class              #391          // org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream\n-  #100 = Methodref          #99.#392      // org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-  #101 = Class              #393          // org/apache/commons/compress/compressors/pack200/Pack200CompressorInputStream\n-  #102 = Methodref          #101.#379     // org/apache/commons/compress/compressors/pack200/Pack200CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-  #103 = Class              #394          // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n-  #104 = Methodref          #103.#379     // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-  #105 = Class              #395          // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream\n-  #106 = Methodref          #105.#379     // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-  #107 = Class              #396          // org/apache/commons/compress/compressors/z/ZCompressorInputStream\n-  #108 = Methodref          #107.#392     // org/apache/commons/compress/compressors/z/ZCompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-  #109 = Class              #397          // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream\n-  #110 = Methodref          #109.#379     // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-  #111 = Class              #398          // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream\n-  #112 = Methodref          #111.#379     // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-  #113 = Class              #399          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-  #114 = Methodref          #113.#379     // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-  #115 = Class              #400          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-  #116 = Methodref          #115.#372     // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n-  #117 = String             #401          // Could not create CompressorInputStream.\n-  #118 = Methodref          #17.#402      // org/apache/commons/compress/compressors/CompressorStreamFactory.getCompressorInputStreamProviders:()Ljava/util/SortedMap;\n-  #119 = InterfaceMethodref #12.#403      // java/util/SortedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #120 = InterfaceMethodref #39.#368      // org/apache/commons/compress/compressors/CompressorStreamProvider.createCompressorInputStream:(Ljava/lang/String;Ljava/io/InputStream;Z)Lorg/apache/commons/compress/compressors/CompressorInputStream;\n-  #121 = String             #404          // Compressor:\n-  #122 = String             #405          //  not found.\n-  #123 = Class              #406          // org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream\n-  #124 = Methodref          #123.#407     // org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-  #125 = Class              #408          // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream\n-  #126 = Methodref          #125.#407     // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-  #127 = Class              #409          // org/apache/commons/compress/compressors/xz/XZCompressorOutputStream\n-  #128 = Methodref          #127.#407     // org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-  #129 = Class              #410          // org/apache/commons/compress/compressors/pack200/Pack200CompressorOutputStream\n-  #130 = Methodref          #129.#407     // org/apache/commons/compress/compressors/pack200/Pack200CompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-  #131 = Class              #411          // org/apache/commons/compress/compressors/lzma/LZMACompressorOutputStream\n-  #132 = Methodref          #131.#407     // org/apache/commons/compress/compressors/lzma/LZMACompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-  #133 = Class              #412          // org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream\n-  #134 = Methodref          #133.#407     // org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-  #135 = Class              #413          // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream\n-  #136 = Methodref          #135.#407     // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-  #137 = Class              #414          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream\n-  #138 = Methodref          #137.#407     // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-  #139 = Class              #415          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream\n-  #140 = Methodref          #139.#407     // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-  #141 = Class              #416          // org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream\n-  #142 = Methodref          #141.#407     // org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-  #143 = String             #417          // Could not create CompressorOutputStream\n-  #144 = Methodref          #17.#418      // org/apache/commons/compress/compressors/CompressorStreamFactory.getCompressorOutputStreamProviders:()Ljava/util/SortedMap;\n-  #145 = InterfaceMethodref #39.#419      // org/apache/commons/compress/compressors/CompressorStreamProvider.createCompressorOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/compressors/CompressorOutputStream;\n-  #146 = Fieldref           #17.#420      // org/apache/commons/compress/compressors/CompressorStreamFactory.compressorInputStreamProviders:Ljava/util/SortedMap;\n-  #147 = Methodref          #17.#421      // org/apache/commons/compress/compressors/CompressorStreamFactory.findAvailableCompressorInputStreamProviders:()Ljava/util/SortedMap;\n-  #148 = Methodref          #422.#423     // java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n-  #149 = Fieldref           #17.#424      // org/apache/commons/compress/compressors/CompressorStreamFactory.compressorOutputStreamProviders:Ljava/util/SortedMap;\n-  #150 = Methodref          #17.#425      // org/apache/commons/compress/compressors/CompressorStreamFactory.findAvailableCompressorOutputStreamProviders:()Ljava/util/SortedMap;\n-  #151 = Methodref          #426.#427     // org/apache/commons/compress/utils/Sets.newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n-  #152 = Class              #428          // java/lang/IllegalStateException\n-  #153 = String             #429          // Cannot override the setting defined by the constructor\n-  #154 = Methodref          #152.#349     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-  #155 = Methodref          #17.#298      // org/apache/commons/compress/compressors/CompressorStreamFactory.\"<init>\":()V\n-  #156 = String             #430          // Google Brotli Dec\n-  #157 = String             #431          // https://github.com/google/brotli/\n-  #158 = Methodref          #17.#432      // org/apache/commons/compress/compressors/CompressorStreamFactory.youNeed:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #159 = String             #433          // XZ for Java\n-  #160 = String             #434          // https://tukaani.org/xz/java.html\n-  #161 = String             #435          // Zstd JNI\n-  #162 = String             #436          // https://github.com/luben/zstd-jni\n-  #163 = Class              #437          // java/lang/Object\n-  #164 = Utf8               InnerClasses\n-  #165 = Utf8               SINGLETON\n-  #166 = Utf8               Lorg/apache/commons/compress/compressors/CompressorStreamFactory;\n-  #167 = Utf8               BROTLI\n-  #168 = Utf8               Ljava/lang/String;\n-  #169 = Utf8               ConstantValue\n-  #170 = Utf8               BZIP2\n-  #171 = Utf8               GZIP\n-  #172 = Utf8               PACK200\n-  #173 = Utf8               XZ\n-  #174 = Utf8               LZMA\n-  #175 = Utf8               SNAPPY_FRAMED\n-  #176 = Utf8               SNAPPY_RAW\n-  #177 = Utf8               Z\n-  #178 = Utf8               DEFLATE\n-  #179 = Utf8               DEFLATE64\n-  #180 = Utf8               LZ4_BLOCK\n-  #181 = Utf8               LZ4_FRAMED\n-  #182 = Utf8               ZSTANDARD\n-  #183 = Utf8               YOU_NEED_BROTLI_DEC\n-  #184 = Utf8               YOU_NEED_XZ_JAVA\n-  #185 = Utf8               YOU_NEED_ZSTD_JNI\n-  #186 = Utf8               decompressUntilEOF\n-  #187 = Utf8               Ljava/lang/Boolean;\n-  #188 = Utf8               compressorInputStreamProviders\n-  #189 = Utf8               Ljava/util/SortedMap;\n-  #190 = Utf8               Signature\n-  #191 = Utf8               Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;\n-  #192 = Utf8               compressorOutputStreamProviders\n-  #193 = Utf8               decompressConcatenated\n-  #194 = Utf8               memoryLimitInKb\n-  #195 = Utf8               I\n-  #196 = Utf8               youNeed\n-  #197 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #198 = Utf8               Code\n-  #199 = Utf8               LineNumberTable\n-  #200 = Utf8               LocalVariableTable\n-  #201 = Utf8               name\n-  #202 = Utf8               url\n-  #203 = Utf8               findAvailableCompressorInputStreamProviders\n-  #204 = Utf8               ()Ljava/util/SortedMap;\n-  #205 = Utf8               ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;\n-  #206 = Utf8               findAvailableCompressorOutputStreamProviders\n-  #207 = Utf8               findCompressorStreamProviders\n-  #208 = Utf8               ()Ljava/util/ArrayList;\n-  #209 = Utf8               ()Ljava/util/ArrayList<Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;\n-  #210 = Utf8               getBrotli\n-  #211 = Utf8               ()Ljava/lang/String;\n-  #212 = Utf8               getBzip2\n-  #213 = Utf8               getDeflate\n-  #214 = Utf8               getDeflate64\n-  #215 = Utf8               getGzip\n-  #216 = Utf8               getLzma\n-  #217 = Utf8               getPack200\n-  #218 = Utf8               getSingleton\n-  #219 = Utf8               ()Lorg/apache/commons/compress/compressors/CompressorStreamFactory;\n-  #220 = Utf8               getSnappyFramed\n-  #221 = Utf8               getSnappyRaw\n-  #222 = Utf8               getXz\n-  #223 = Utf8               getZ\n-  #224 = Utf8               getLZ4Framed\n-  #225 = Utf8               getLZ4Block\n-  #226 = Utf8               getZstandard\n-  #227 = Utf8               putAll\n-  #228 = Utf8               (Ljava/util/Set;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;Ljava/util/TreeMap;)V\n-  #229 = Utf8               names\n-  #230 = Utf8               Ljava/util/Set;\n-  #231 = Utf8               provider\n-  #232 = Utf8               Lorg/apache/commons/compress/compressors/CompressorStreamProvider;\n-  #233 = Utf8               map\n-  #234 = Utf8               Ljava/util/TreeMap;\n-  #235 = Utf8               LocalVariableTypeTable\n-  #236 = Utf8               Ljava/util/Set<Ljava/lang/String;>;\n-  #237 = Utf8               Ljava/util/TreeMap<Ljava/lang/String;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;\n-  #238 = Utf8               StackMapTable\n-  #239 = Class              #438          // java/util/Iterator\n-  #240 = Utf8               (Ljava/util/Set<Ljava/lang/String;>;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;Ljava/util/TreeMap<Ljava/lang/String;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;)V\n-  #241 = Utf8               serviceLoaderIterator\n-  #242 = Utf8               ()Ljava/util/Iterator;\n-  #243 = Utf8               ()Ljava/util/Iterator<Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;\n-  #244 = Utf8               toKey\n-  #245 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #246 = Utf8               <init>\n-  #247 = Utf8               ()V\n-  #248 = Utf8               this\n-  #249 = Utf8               (ZI)V\n-  #250 = Utf8               (Z)V\n-  #251 = Utf8               detect\n-  #252 = Utf8               (Ljava/io/InputStream;)Ljava/lang/String;\n-  #253 = Utf8               e\n-  #254 = Utf8               Ljava/io/IOException;\n-  #255 = Utf8               inputStream\n-  #256 = Utf8               Ljava/io/InputStream;\n-  #257 = Utf8               signature\n-  #258 = Utf8               [B\n-  #259 = Utf8               signatureLength\n-  #260 = Class              #439          // java/io/InputStream\n-  #261 = Class              #258          // \"[B\"\n-  #262 = Class              #357          // java/io/IOException\n-  #263 = Utf8               Exceptions\n-  #264 = Utf8               createCompressorInputStream\n-  #265 = Utf8               (Ljava/io/InputStream;)Lorg/apache/commons/compress/compressors/CompressorInputStream;\n-  #266 = Utf8               in\n-  #267 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/compressors/CompressorInputStream;\n-  #268 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;Z)Lorg/apache/commons/compress/compressors/CompressorInputStream;\n-  #269 = Utf8               actualDecompressConcatenated\n-  #270 = Utf8               compressorStreamProvider\n-  #271 = Class              #336          // org/apache/commons/compress/compressors/CompressorStreamProvider\n-  #272 = Utf8               createCompressorOutputStream\n-  #273 = Utf8               (Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/compressors/CompressorOutputStream;\n-  #274 = Utf8               out\n-  #275 = Utf8               Ljava/io/OutputStream;\n-  #276 = Utf8               getCompressorInputStreamProviders\n-  #277 = Utf8               getCompressorOutputStreamProviders\n-  #278 = Utf8               getDecompressConcatenated\n-  #279 = Utf8               ()Z\n-  #280 = Utf8               getDecompressUntilEOF\n-  #281 = Utf8               ()Ljava/lang/Boolean;\n-  #282 = Utf8               getInputStreamCompressorNames\n-  #283 = Utf8               ()Ljava/util/Set;\n-  #284 = Utf8               ()Ljava/util/Set<Ljava/lang/String;>;\n-  #285 = Utf8               getOutputStreamCompressorNames\n-  #286 = Utf8               setDecompressConcatenated\n-  #287 = Utf8               Deprecated\n-  #288 = Utf8               RuntimeVisibleAnnotations\n-  #289 = Utf8               Ljava/lang/Deprecated;\n-  #290 = Utf8               access$000\n-  #291 = Utf8               access$100\n-  #292 = Utf8               <clinit>\n-  #293 = Utf8               SourceFile\n-  #294 = Utf8               CompressorStreamFactory.java\n-  #295 = NameAndType        #207:#208     // findCompressorStreamProviders:()Ljava/util/ArrayList;\n-  #296 = NameAndType        #165:#166     // SINGLETON:Lorg/apache/commons/compress/compressors/CompressorStreamFactory;\n-  #297 = Utf8               java/lang/StringBuilder\n-  #298 = NameAndType        #246:#247     // \"<init>\":()V\n-  #299 = Utf8                In addition to Apache Commons Compress you need the\n-  #300 = NameAndType        #440:#441     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #301 = Utf8                library - see\n-  #302 = NameAndType        #442:#211     // toString:()Ljava/lang/String;\n-  #303 = Utf8               org/apache/commons/compress/compressors/CompressorStreamFactory$1\n-  #304 = Class              #443          // java/security/AccessController\n-  #305 = NameAndType        #444:#445     // doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n-  #306 = Utf8               java/util/SortedMap\n-  #307 = Utf8               org/apache/commons/compress/compressors/CompressorStreamFactory$2\n-  #308 = NameAndType        #241:#242     // serviceLoaderIterator:()Ljava/util/Iterator;\n-  #309 = Class              #446          // org/apache/commons/compress/utils/Lists\n-  #310 = NameAndType        #447:#448     // newArrayList:(Ljava/util/Iterator;)Ljava/util/ArrayList;\n-  #311 = Utf8               org/apache/commons/compress/compressors/CompressorStreamFactory\n-  #312 = Utf8               br\n-  #313 = Utf8               bzip2\n-  #314 = Utf8               deflate\n-  #315 = Utf8               deflate64\n-  #316 = Utf8               gz\n-  #317 = Utf8               lzma\n-  #318 = Utf8               pack200\n-  #319 = Utf8               snappy-framed\n-  #320 = Utf8               snappy-raw\n-  #321 = Utf8               xz\n-  #322 = Utf8               z\n-  #323 = Utf8               lz4-framed\n-  #324 = Utf8               lz4-block\n-  #325 = Utf8               zstd\n-  #326 = Class              #449          // java/util/Set\n-  #327 = NameAndType        #450:#242     // iterator:()Ljava/util/Iterator;\n-  #328 = Class              #438          // java/util/Iterator\n-  #329 = NameAndType        #451:#279     // hasNext:()Z\n-  #330 = NameAndType        #452:#453     // next:()Ljava/lang/Object;\n-  #331 = Utf8               java/lang/String\n-  #332 = NameAndType        #244:#245     // toKey:(Ljava/lang/String;)Ljava/lang/String;\n-  #333 = Class              #454          // java/util/TreeMap\n-  #334 = NameAndType        #455:#456     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #335 = Utf8               org/apache/commons/compress/utils/ServiceLoaderIterator\n-  #336 = Utf8               org/apache/commons/compress/compressors/CompressorStreamProvider\n-  #337 = NameAndType        #246:#457     // \"<init>\":(Ljava/lang/Class;)V\n-  #338 = Class              #458          // java/util/Locale\n-  #339 = NameAndType        #459:#460     // ROOT:Ljava/util/Locale;\n-  #340 = NameAndType        #461:#462     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #341 = NameAndType        #193:#177     // decompressConcatenated:Z\n-  #342 = NameAndType        #186:#187     // decompressUntilEOF:Ljava/lang/Boolean;\n-  #343 = NameAndType        #194:#195     // memoryLimitInKb:I\n-  #344 = Class              #463          // java/lang/Boolean\n-  #345 = NameAndType        #464:#465     // valueOf:(Z)Ljava/lang/Boolean;\n-  #346 = NameAndType        #246:#249     // \"<init>\":(ZI)V\n-  #347 = Utf8               java/lang/IllegalArgumentException\n-  #348 = Utf8               Stream must not be null.\n-  #349 = NameAndType        #246:#466     // \"<init>\":(Ljava/lang/String;)V\n-  #350 = Class              #439          // java/io/InputStream\n-  #351 = NameAndType        #467:#279     // markSupported:()Z\n-  #352 = Utf8               Mark is not supported.\n-  #353 = NameAndType        #468:#469     // mark:(I)V\n-  #354 = Class              #470          // org/apache/commons/compress/utils/IOUtils\n-  #355 = NameAndType        #471:#472     // readFully:(Ljava/io/InputStream;[B)I\n-  #356 = NameAndType        #473:#247     // reset:()V\n-  #357 = Utf8               java/io/IOException\n-  #358 = Utf8               org/apache/commons/compress/compressors/CompressorException\n-  #359 = Utf8               IOException while reading signature.\n-  #360 = NameAndType        #246:#474     // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #361 = NameAndType        #475:#476     // matches:([BI)Z\n-  #362 = Class              #477          // org/apache/commons/compress/compressors/xz/XZUtils\n-  #363 = Class              #478          // org/apache/commons/compress/compressors/lzma/LZMAUtils\n-  #364 = Class              #479          // org/apache/commons/compress/compressors/zstandard/ZstdUtils\n-  #365 = Utf8               No Compressor found for the stream signature.\n-  #366 = NameAndType        #251:#252     // detect:(Ljava/io/InputStream;)Ljava/lang/String;\n-  #367 = NameAndType        #264:#267     // createCompressorInputStream:(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/compressors/CompressorInputStream;\n-  #368 = NameAndType        #264:#268     // createCompressorInputStream:(Ljava/lang/String;Ljava/io/InputStream;Z)Lorg/apache/commons/compress/compressors/CompressorInputStream;\n-  #369 = Utf8               Compressor name and stream must not be null.\n-  #370 = NameAndType        #480:#481     // equalsIgnoreCase:(Ljava/lang/String;)Z\n-  #371 = Utf8               org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream\n-  #372 = NameAndType        #246:#482     // \"<init>\":(Ljava/io/InputStream;Z)V\n-  #373 = Utf8               org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream\n-  #374 = Class              #483          // org/apache/commons/compress/compressors/brotli/BrotliUtils\n-  #375 = NameAndType        #484:#279     // isBrotliCompressionAvailable:()Z\n-  #376 = Utf8               Brotli compression is not available.\n-  #377 = NameAndType        #183:#168     // YOU_NEED_BROTLI_DEC:Ljava/lang/String;\n-  #378 = Utf8               org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream\n-  #379 = NameAndType        #246:#485     // \"<init>\":(Ljava/io/InputStream;)V\n-  #380 = NameAndType        #486:#279     // isXZCompressionAvailable:()Z\n-  #381 = Utf8               XZ compression is not available.\n-  #382 = NameAndType        #184:#168     // YOU_NEED_XZ_JAVA:Ljava/lang/String;\n-  #383 = Utf8               org/apache/commons/compress/compressors/xz/XZCompressorInputStream\n-  #384 = NameAndType        #246:#487     // \"<init>\":(Ljava/io/InputStream;ZI)V\n-  #385 = NameAndType        #488:#279     // isZstdCompressionAvailable:()Z\n-  #386 = Utf8               Zstandard compression is not available.\n-  #387 = NameAndType        #185:#168     // YOU_NEED_ZSTD_JNI:Ljava/lang/String;\n-  #388 = Utf8               org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream\n-  #389 = NameAndType        #489:#279     // isLZMACompressionAvailable:()Z\n-  #390 = Utf8               LZMA compression is not available\n-  #391 = Utf8               org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream\n-  #392 = NameAndType        #246:#490     // \"<init>\":(Ljava/io/InputStream;I)V\n-  #393 = Utf8               org/apache/commons/compress/compressors/pack200/Pack200CompressorInputStream\n-  #394 = Utf8               org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n-  #395 = Utf8               org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream\n-  #396 = Utf8               org/apache/commons/compress/compressors/z/ZCompressorInputStream\n-  #397 = Utf8               org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream\n-  #398 = Utf8               org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream\n-  #399 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-  #400 = Utf8               org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-  #401 = Utf8               Could not create CompressorInputStream.\n-  #402 = NameAndType        #276:#204     // getCompressorInputStreamProviders:()Ljava/util/SortedMap;\n-  #403 = NameAndType        #491:#492     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #404 = Utf8               Compressor:\n-  #405 = Utf8                not found.\n-  #406 = Utf8               org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream\n-  #407 = NameAndType        #246:#493     // \"<init>\":(Ljava/io/OutputStream;)V\n-  #408 = Utf8               org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream\n-  #409 = Utf8               org/apache/commons/compress/compressors/xz/XZCompressorOutputStream\n-  #410 = Utf8               org/apache/commons/compress/compressors/pack200/Pack200CompressorOutputStream\n-  #411 = Utf8               org/apache/commons/compress/compressors/lzma/LZMACompressorOutputStream\n-  #412 = Utf8               org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream\n-  #413 = Utf8               org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream\n-  #414 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream\n-  #415 = Utf8               org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream\n-  #416 = Utf8               org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream\n-  #417 = Utf8               Could not create CompressorOutputStream\n-  #418 = NameAndType        #277:#204     // getCompressorOutputStreamProviders:()Ljava/util/SortedMap;\n-  #419 = NameAndType        #272:#273     // createCompressorOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/compressors/CompressorOutputStream;\n-  #420 = NameAndType        #188:#189     // compressorInputStreamProviders:Ljava/util/SortedMap;\n-  #421 = NameAndType        #203:#204     // findAvailableCompressorInputStreamProviders:()Ljava/util/SortedMap;\n-  #422 = Class              #494          // java/util/Collections\n-  #423 = NameAndType        #495:#496     // unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n-  #424 = NameAndType        #192:#189     // compressorOutputStreamProviders:Ljava/util/SortedMap;\n-  #425 = NameAndType        #206:#204     // findAvailableCompressorOutputStreamProviders:()Ljava/util/SortedMap;\n-  #426 = Class              #497          // org/apache/commons/compress/utils/Sets\n-  #427 = NameAndType        #498:#499     // newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n-  #428 = Utf8               java/lang/IllegalStateException\n-  #429 = Utf8               Cannot override the setting defined by the constructor\n-  #430 = Utf8               Google Brotli Dec\n-  #431 = Utf8               https://github.com/google/brotli/\n-  #432 = NameAndType        #196:#197     // youNeed:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #433 = Utf8               XZ for Java\n-  #434 = Utf8               https://tukaani.org/xz/java.html\n-  #435 = Utf8               Zstd JNI\n-  #436 = Utf8               https://github.com/luben/zstd-jni\n-  #437 = Utf8               java/lang/Object\n-  #438 = Utf8               java/util/Iterator\n-  #439 = Utf8               java/io/InputStream\n-  #440 = Utf8               append\n-  #441 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #442 = Utf8               toString\n-  #443 = Utf8               java/security/AccessController\n-  #444 = Utf8               doPrivileged\n-  #445 = Utf8               (Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n-  #446 = Utf8               org/apache/commons/compress/utils/Lists\n-  #447 = Utf8               newArrayList\n-  #448 = Utf8               (Ljava/util/Iterator;)Ljava/util/ArrayList;\n-  #449 = Utf8               java/util/Set\n-  #450 = Utf8               iterator\n-  #451 = Utf8               hasNext\n-  #452 = Utf8               next\n-  #453 = Utf8               ()Ljava/lang/Object;\n-  #454 = Utf8               java/util/TreeMap\n-  #455 = Utf8               put\n-  #456 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #457 = Utf8               (Ljava/lang/Class;)V\n-  #458 = Utf8               java/util/Locale\n-  #459 = Utf8               ROOT\n-  #460 = Utf8               Ljava/util/Locale;\n-  #461 = Utf8               toUpperCase\n-  #462 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n-  #463 = Utf8               java/lang/Boolean\n-  #464 = Utf8               valueOf\n-  #465 = Utf8               (Z)Ljava/lang/Boolean;\n-  #466 = Utf8               (Ljava/lang/String;)V\n-  #467 = Utf8               markSupported\n-  #468 = Utf8               mark\n-  #469 = Utf8               (I)V\n-  #470 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #471 = Utf8               readFully\n-  #472 = Utf8               (Ljava/io/InputStream;[B)I\n-  #473 = Utf8               reset\n-  #474 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #475 = Utf8               matches\n-  #476 = Utf8               ([BI)Z\n-  #477 = Utf8               org/apache/commons/compress/compressors/xz/XZUtils\n-  #478 = Utf8               org/apache/commons/compress/compressors/lzma/LZMAUtils\n-  #479 = Utf8               org/apache/commons/compress/compressors/zstandard/ZstdUtils\n-  #480 = Utf8               equalsIgnoreCase\n-  #481 = Utf8               (Ljava/lang/String;)Z\n-  #482 = Utf8               (Ljava/io/InputStream;Z)V\n-  #483 = Utf8               org/apache/commons/compress/compressors/brotli/BrotliUtils\n-  #484 = Utf8               isBrotliCompressionAvailable\n-  #485 = Utf8               (Ljava/io/InputStream;)V\n-  #486 = Utf8               isXZCompressionAvailable\n-  #487 = Utf8               (Ljava/io/InputStream;ZI)V\n-  #488 = Utf8               isZstdCompressionAvailable\n-  #489 = Utf8               isLZMACompressionAvailable\n-  #490 = Utf8               (Ljava/io/InputStream;I)V\n-  #491 = Utf8               get\n-  #492 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #493 = Utf8               (Ljava/io/OutputStream;)V\n-  #494 = Utf8               java/util/Collections\n-  #495 = Utf8               unmodifiableSortedMap\n-  #496 = Utf8               (Ljava/util/SortedMap;)Ljava/util/SortedMap;\n-  #497 = Utf8               org/apache/commons/compress/utils/Sets\n-  #498 = Utf8               newHashSet\n-  #499 = Utf8               ([Ljava/lang/Object;)Ljava/util/HashSet;\n+    #1 = Methodref          #12.#287      // org/apache/commons/compress/compressors/CompressorStreamFactory.findCompressorStreamProviders:()Ljava/util/ArrayList;\n+    #2 = Fieldref           #12.#288      // org/apache/commons/compress/compressors/CompressorStreamFactory.SINGLETON:Lorg/apache/commons/compress/compressors/CompressorStreamFactory;\n+    #3 = InvokeDynamic      #0:#292       // #0:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+    #4 = Class              #293          // org/apache/commons/compress/compressors/CompressorStreamFactory$1\n+    #5 = Methodref          #4.#294       // org/apache/commons/compress/compressors/CompressorStreamFactory$1.\"<init>\":()V\n+    #6 = Methodref          #295.#296     // java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n+    #7 = Class              #297          // java/util/SortedMap\n+    #8 = Class              #298          // org/apache/commons/compress/compressors/CompressorStreamFactory$2\n+    #9 = Methodref          #8.#294       // org/apache/commons/compress/compressors/CompressorStreamFactory$2.\"<init>\":()V\n+   #10 = Methodref          #12.#299      // org/apache/commons/compress/compressors/CompressorStreamFactory.serviceLoaderIterator:()Ljava/util/Iterator;\n+   #11 = Methodref          #300.#301     // org/apache/commons/compress/utils/Lists.newArrayList:(Ljava/util/Iterator;)Ljava/util/ArrayList;\n+   #12 = Class              #302          // org/apache/commons/compress/compressors/CompressorStreamFactory\n+   #13 = String             #303          // br\n+   #14 = String             #304          // bzip2\n+   #15 = String             #305          // deflate\n+   #16 = String             #306          // deflate64\n+   #17 = String             #307          // gz\n+   #18 = String             #308          // lzma\n+   #19 = String             #309          // pack200\n+   #20 = String             #310          // snappy-framed\n+   #21 = String             #311          // snappy-raw\n+   #22 = String             #312          // xz\n+   #23 = String             #313          // z\n+   #24 = String             #314          // lz4-framed\n+   #25 = String             #315          // lz4-block\n+   #26 = String             #316          // zstd\n+   #27 = InterfaceMethodref #317.#318     // java/util/Set.iterator:()Ljava/util/Iterator;\n+   #28 = InterfaceMethodref #233.#319     // java/util/Iterator.hasNext:()Z\n+   #29 = InterfaceMethodref #233.#320     // java/util/Iterator.next:()Ljava/lang/Object;\n+   #30 = Class              #321          // java/lang/String\n+   #31 = Methodref          #12.#322      // org/apache/commons/compress/compressors/CompressorStreamFactory.toKey:(Ljava/lang/String;)Ljava/lang/String;\n+   #32 = Methodref          #323.#324     // java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #33 = Class              #325          // org/apache/commons/compress/utils/ServiceLoaderIterator\n+   #34 = Class              #326          // org/apache/commons/compress/compressors/CompressorStreamProvider\n+   #35 = Methodref          #33.#327      // org/apache/commons/compress/utils/ServiceLoaderIterator.\"<init>\":(Ljava/lang/Class;)V\n+   #36 = Fieldref           #328.#329     // java/util/Locale.ROOT:Ljava/util/Locale;\n+   #37 = Methodref          #30.#330      // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+   #38 = Methodref          #157.#294     // java/lang/Object.\"<init>\":()V\n+   #39 = Fieldref           #12.#331      // org/apache/commons/compress/compressors/CompressorStreamFactory.decompressConcatenated:Z\n+   #40 = Fieldref           #12.#332      // org/apache/commons/compress/compressors/CompressorStreamFactory.decompressUntilEOF:Ljava/lang/Boolean;\n+   #41 = Fieldref           #12.#333      // org/apache/commons/compress/compressors/CompressorStreamFactory.memoryLimitInKb:I\n+   #42 = Methodref          #334.#335     // java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+   #43 = Methodref          #12.#336      // org/apache/commons/compress/compressors/CompressorStreamFactory.\"<init>\":(ZI)V\n+   #44 = Class              #337          // java/lang/IllegalArgumentException\n+   #45 = String             #338          // Stream must not be null.\n+   #46 = Methodref          #44.#339      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #47 = Methodref          #254.#340     // java/io/InputStream.markSupported:()Z\n+   #48 = String             #341          // Mark is not supported.\n+   #49 = Methodref          #254.#342     // java/io/InputStream.mark:(I)V\n+   #50 = Methodref          #343.#344     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+   #51 = Methodref          #254.#345     // java/io/InputStream.reset:()V\n+   #52 = Class              #346          // java/io/IOException\n+   #53 = Class              #347          // org/apache/commons/compress/compressors/CompressorException\n+   #54 = String             #348          // IOException while reading signature.\n+   #55 = Methodref          #53.#349      // org/apache/commons/compress/compressors/CompressorException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #56 = Methodref          #75.#350      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.matches:([BI)Z\n+   #57 = Methodref          #73.#350      // org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.matches:([BI)Z\n+   #58 = Methodref          #96.#350      // org/apache/commons/compress/compressors/pack200/Pack200CompressorInputStream.matches:([BI)Z\n+   #59 = Methodref          #100.#350     // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.matches:([BI)Z\n+   #60 = Methodref          #102.#350     // org/apache/commons/compress/compressors/z/ZCompressorInputStream.matches:([BI)Z\n+   #61 = Methodref          #104.#350     // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.matches:([BI)Z\n+   #62 = Methodref          #351.#350     // org/apache/commons/compress/compressors/xz/XZUtils.matches:([BI)Z\n+   #63 = Methodref          #352.#350     // org/apache/commons/compress/compressors/lzma/LZMAUtils.matches:([BI)Z\n+   #64 = Methodref          #110.#350     // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.matches:([BI)Z\n+   #65 = Methodref          #353.#350     // org/apache/commons/compress/compressors/zstandard/ZstdUtils.matches:([BI)Z\n+   #66 = String             #354          // No Compressor found for the stream signature.\n+   #67 = Methodref          #53.#339      // org/apache/commons/compress/compressors/CompressorException.\"<init>\":(Ljava/lang/String;)V\n+   #68 = Methodref          #12.#355      // org/apache/commons/compress/compressors/CompressorStreamFactory.detect:(Ljava/io/InputStream;)Ljava/lang/String;\n+   #69 = Methodref          #12.#356      // org/apache/commons/compress/compressors/CompressorStreamFactory.createCompressorInputStream:(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/compressors/CompressorInputStream;\n+   #70 = Methodref          #12.#357      // org/apache/commons/compress/compressors/CompressorStreamFactory.createCompressorInputStream:(Ljava/lang/String;Ljava/io/InputStream;Z)Lorg/apache/commons/compress/compressors/CompressorInputStream;\n+   #71 = String             #358          // Compressor name and stream must not be null.\n+   #72 = Methodref          #30.#359      // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+   #73 = Class              #360          // org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream\n+   #74 = Methodref          #73.#361      // org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n+   #75 = Class              #362          // org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream\n+   #76 = Methodref          #75.#361      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n+   #77 = Methodref          #363.#364     // org/apache/commons/compress/compressors/brotli/BrotliUtils.isBrotliCompressionAvailable:()Z\n+   #78 = Fieldref           #12.#365      // org/apache/commons/compress/compressors/CompressorStreamFactory.YOU_NEED_BROTLI_DEC:Ljava/lang/String;\n+   #79 = InvokeDynamic      #1:#367       // #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+   #80 = Class              #368          // org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream\n+   #81 = Methodref          #80.#369      // org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #82 = Methodref          #351.#370     // org/apache/commons/compress/compressors/xz/XZUtils.isXZCompressionAvailable:()Z\n+   #83 = Fieldref           #12.#371      // org/apache/commons/compress/compressors/CompressorStreamFactory.YOU_NEED_XZ_JAVA:Ljava/lang/String;\n+   #84 = InvokeDynamic      #2:#367       // #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+   #85 = Class              #373          // org/apache/commons/compress/compressors/xz/XZCompressorInputStream\n+   #86 = Methodref          #85.#374      // org/apache/commons/compress/compressors/xz/XZCompressorInputStream.\"<init>\":(Ljava/io/InputStream;ZI)V\n+   #87 = Methodref          #353.#375     // org/apache/commons/compress/compressors/zstandard/ZstdUtils.isZstdCompressionAvailable:()Z\n+   #88 = Fieldref           #12.#376      // org/apache/commons/compress/compressors/CompressorStreamFactory.YOU_NEED_ZSTD_JNI:Ljava/lang/String;\n+   #89 = InvokeDynamic      #3:#367       // #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+   #90 = Class              #378          // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream\n+   #91 = Methodref          #90.#369      // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #92 = Methodref          #352.#379     // org/apache/commons/compress/compressors/lzma/LZMAUtils.isLZMACompressionAvailable:()Z\n+   #93 = InvokeDynamic      #4:#367       // #4:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+   #94 = Class              #381          // org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream\n+   #95 = Methodref          #94.#382      // org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+   #96 = Class              #383          // org/apache/commons/compress/compressors/pack200/Pack200CompressorInputStream\n+   #97 = Methodref          #96.#369      // org/apache/commons/compress/compressors/pack200/Pack200CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #98 = Class              #384          // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n+   #99 = Methodref          #98.#369      // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #100 = Class              #385          // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream\n+  #101 = Methodref          #100.#369     // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #102 = Class              #386          // org/apache/commons/compress/compressors/z/ZCompressorInputStream\n+  #103 = Methodref          #102.#382     // org/apache/commons/compress/compressors/z/ZCompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+  #104 = Class              #387          // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream\n+  #105 = Methodref          #104.#369     // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #106 = Class              #388          // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream\n+  #107 = Methodref          #106.#369     // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #108 = Class              #389          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+  #109 = Methodref          #108.#369     // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #110 = Class              #390          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n+  #111 = Methodref          #110.#361     // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n+  #112 = String             #391          // Could not create CompressorInputStream.\n+  #113 = Methodref          #12.#392      // org/apache/commons/compress/compressors/CompressorStreamFactory.getCompressorInputStreamProviders:()Ljava/util/SortedMap;\n+  #114 = InterfaceMethodref #7.#393       // java/util/SortedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #115 = InterfaceMethodref #34.#357      // org/apache/commons/compress/compressors/CompressorStreamProvider.createCompressorInputStream:(Ljava/lang/String;Ljava/io/InputStream;Z)Lorg/apache/commons/compress/compressors/CompressorInputStream;\n+  #116 = InvokeDynamic      #5:#367       // #5:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+  #117 = Class              #395          // org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream\n+  #118 = Methodref          #117.#396     // org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #119 = Class              #397          // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream\n+  #120 = Methodref          #119.#396     // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #121 = Class              #398          // org/apache/commons/compress/compressors/xz/XZCompressorOutputStream\n+  #122 = Methodref          #121.#396     // org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #123 = Class              #399          // org/apache/commons/compress/compressors/pack200/Pack200CompressorOutputStream\n+  #124 = Methodref          #123.#396     // org/apache/commons/compress/compressors/pack200/Pack200CompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #125 = Class              #400          // org/apache/commons/compress/compressors/lzma/LZMACompressorOutputStream\n+  #126 = Methodref          #125.#396     // org/apache/commons/compress/compressors/lzma/LZMACompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #127 = Class              #401          // org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream\n+  #128 = Methodref          #127.#396     // org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #129 = Class              #402          // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream\n+  #130 = Methodref          #129.#396     // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #131 = Class              #403          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream\n+  #132 = Methodref          #131.#396     // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #133 = Class              #404          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream\n+  #134 = Methodref          #133.#396     // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #135 = Class              #405          // org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream\n+  #136 = Methodref          #135.#396     // org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #137 = String             #406          // Could not create CompressorOutputStream\n+  #138 = Methodref          #12.#407      // org/apache/commons/compress/compressors/CompressorStreamFactory.getCompressorOutputStreamProviders:()Ljava/util/SortedMap;\n+  #139 = InterfaceMethodref #34.#408      // org/apache/commons/compress/compressors/CompressorStreamProvider.createCompressorOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/compressors/CompressorOutputStream;\n+  #140 = Fieldref           #12.#409      // org/apache/commons/compress/compressors/CompressorStreamFactory.compressorInputStreamProviders:Ljava/util/SortedMap;\n+  #141 = Methodref          #12.#410      // org/apache/commons/compress/compressors/CompressorStreamFactory.findAvailableCompressorInputStreamProviders:()Ljava/util/SortedMap;\n+  #142 = Methodref          #411.#412     // java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n+  #143 = Fieldref           #12.#413      // org/apache/commons/compress/compressors/CompressorStreamFactory.compressorOutputStreamProviders:Ljava/util/SortedMap;\n+  #144 = Methodref          #12.#414      // org/apache/commons/compress/compressors/CompressorStreamFactory.findAvailableCompressorOutputStreamProviders:()Ljava/util/SortedMap;\n+  #145 = Methodref          #415.#416     // org/apache/commons/compress/utils/Sets.newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n+  #146 = Class              #417          // java/lang/IllegalStateException\n+  #147 = String             #418          // Cannot override the setting defined by the constructor\n+  #148 = Methodref          #146.#339     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+  #149 = Methodref          #12.#294      // org/apache/commons/compress/compressors/CompressorStreamFactory.\"<init>\":()V\n+  #150 = String             #419          // Google Brotli Dec\n+  #151 = String             #420          // https://github.com/google/brotli/\n+  #152 = Methodref          #12.#421      // org/apache/commons/compress/compressors/CompressorStreamFactory.youNeed:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #153 = String             #422          // XZ for Java\n+  #154 = String             #423          // https://tukaani.org/xz/java.html\n+  #155 = String             #424          // Zstd JNI\n+  #156 = String             #425          // https://github.com/luben/zstd-jni\n+  #157 = Class              #426          // java/lang/Object\n+  #158 = Utf8               InnerClasses\n+  #159 = Utf8               SINGLETON\n+  #160 = Utf8               Lorg/apache/commons/compress/compressors/CompressorStreamFactory;\n+  #161 = Utf8               BROTLI\n+  #162 = Utf8               Ljava/lang/String;\n+  #163 = Utf8               ConstantValue\n+  #164 = Utf8               BZIP2\n+  #165 = Utf8               GZIP\n+  #166 = Utf8               PACK200\n+  #167 = Utf8               XZ\n+  #168 = Utf8               LZMA\n+  #169 = Utf8               SNAPPY_FRAMED\n+  #170 = Utf8               SNAPPY_RAW\n+  #171 = Utf8               Z\n+  #172 = Utf8               DEFLATE\n+  #173 = Utf8               DEFLATE64\n+  #174 = Utf8               LZ4_BLOCK\n+  #175 = Utf8               LZ4_FRAMED\n+  #176 = Utf8               ZSTANDARD\n+  #177 = Utf8               YOU_NEED_BROTLI_DEC\n+  #178 = Utf8               YOU_NEED_XZ_JAVA\n+  #179 = Utf8               YOU_NEED_ZSTD_JNI\n+  #180 = Utf8               decompressUntilEOF\n+  #181 = Utf8               Ljava/lang/Boolean;\n+  #182 = Utf8               compressorInputStreamProviders\n+  #183 = Utf8               Ljava/util/SortedMap;\n+  #184 = Utf8               Signature\n+  #185 = Utf8               Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;\n+  #186 = Utf8               compressorOutputStreamProviders\n+  #187 = Utf8               decompressConcatenated\n+  #188 = Utf8               memoryLimitInKb\n+  #189 = Utf8               I\n+  #190 = Utf8               youNeed\n+  #191 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #192 = Utf8               Code\n+  #193 = Utf8               LineNumberTable\n+  #194 = Utf8               LocalVariableTable\n+  #195 = Utf8               name\n+  #196 = Utf8               url\n+  #197 = Utf8               findAvailableCompressorInputStreamProviders\n+  #198 = Utf8               ()Ljava/util/SortedMap;\n+  #199 = Utf8               ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;\n+  #200 = Utf8               findAvailableCompressorOutputStreamProviders\n+  #201 = Utf8               findCompressorStreamProviders\n+  #202 = Utf8               ()Ljava/util/ArrayList;\n+  #203 = Utf8               ()Ljava/util/ArrayList<Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;\n+  #204 = Utf8               getBrotli\n+  #205 = Utf8               ()Ljava/lang/String;\n+  #206 = Utf8               getBzip2\n+  #207 = Utf8               getDeflate\n+  #208 = Utf8               getDeflate64\n+  #209 = Utf8               getGzip\n+  #210 = Utf8               getLzma\n+  #211 = Utf8               getPack200\n+  #212 = Utf8               getSingleton\n+  #213 = Utf8               ()Lorg/apache/commons/compress/compressors/CompressorStreamFactory;\n+  #214 = Utf8               getSnappyFramed\n+  #215 = Utf8               getSnappyRaw\n+  #216 = Utf8               getXz\n+  #217 = Utf8               getZ\n+  #218 = Utf8               getLZ4Framed\n+  #219 = Utf8               getLZ4Block\n+  #220 = Utf8               getZstandard\n+  #221 = Utf8               putAll\n+  #222 = Utf8               (Ljava/util/Set;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;Ljava/util/TreeMap;)V\n+  #223 = Utf8               names\n+  #224 = Utf8               Ljava/util/Set;\n+  #225 = Utf8               provider\n+  #226 = Utf8               Lorg/apache/commons/compress/compressors/CompressorStreamProvider;\n+  #227 = Utf8               map\n+  #228 = Utf8               Ljava/util/TreeMap;\n+  #229 = Utf8               LocalVariableTypeTable\n+  #230 = Utf8               Ljava/util/Set<Ljava/lang/String;>;\n+  #231 = Utf8               Ljava/util/TreeMap<Ljava/lang/String;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;\n+  #232 = Utf8               StackMapTable\n+  #233 = Class              #427          // java/util/Iterator\n+  #234 = Utf8               (Ljava/util/Set<Ljava/lang/String;>;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;Ljava/util/TreeMap<Ljava/lang/String;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;)V\n+  #235 = Utf8               serviceLoaderIterator\n+  #236 = Utf8               ()Ljava/util/Iterator;\n+  #237 = Utf8               ()Ljava/util/Iterator<Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;\n+  #238 = Utf8               toKey\n+  #239 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #240 = Utf8               <init>\n+  #241 = Utf8               ()V\n+  #242 = Utf8               this\n+  #243 = Utf8               (ZI)V\n+  #244 = Utf8               (Z)V\n+  #245 = Utf8               detect\n+  #246 = Utf8               (Ljava/io/InputStream;)Ljava/lang/String;\n+  #247 = Utf8               e\n+  #248 = Utf8               Ljava/io/IOException;\n+  #249 = Utf8               inputStream\n+  #250 = Utf8               Ljava/io/InputStream;\n+  #251 = Utf8               signature\n+  #252 = Utf8               [B\n+  #253 = Utf8               signatureLength\n+  #254 = Class              #428          // java/io/InputStream\n+  #255 = Class              #252          // \"[B\"\n+  #256 = Utf8               Exceptions\n+  #257 = Utf8               createCompressorInputStream\n+  #258 = Utf8               (Ljava/io/InputStream;)Lorg/apache/commons/compress/compressors/CompressorInputStream;\n+  #259 = Utf8               in\n+  #260 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/compressors/CompressorInputStream;\n+  #261 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;Z)Lorg/apache/commons/compress/compressors/CompressorInputStream;\n+  #262 = Utf8               actualDecompressConcatenated\n+  #263 = Utf8               compressorStreamProvider\n+  #264 = Utf8               createCompressorOutputStream\n+  #265 = Utf8               (Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/compressors/CompressorOutputStream;\n+  #266 = Utf8               out\n+  #267 = Utf8               Ljava/io/OutputStream;\n+  #268 = Utf8               getCompressorInputStreamProviders\n+  #269 = Utf8               getCompressorOutputStreamProviders\n+  #270 = Utf8               getDecompressConcatenated\n+  #271 = Utf8               ()Z\n+  #272 = Utf8               getDecompressUntilEOF\n+  #273 = Utf8               ()Ljava/lang/Boolean;\n+  #274 = Utf8               getInputStreamCompressorNames\n+  #275 = Utf8               ()Ljava/util/Set;\n+  #276 = Utf8               ()Ljava/util/Set<Ljava/lang/String;>;\n+  #277 = Utf8               getOutputStreamCompressorNames\n+  #278 = Utf8               setDecompressConcatenated\n+  #279 = Utf8               Deprecated\n+  #280 = Utf8               RuntimeVisibleAnnotations\n+  #281 = Utf8               Ljava/lang/Deprecated;\n+  #282 = Utf8               access$000\n+  #283 = Utf8               access$100\n+  #284 = Utf8               <clinit>\n+  #285 = Utf8               SourceFile\n+  #286 = Utf8               CompressorStreamFactory.java\n+  #287 = NameAndType        #201:#202     // findCompressorStreamProviders:()Ljava/util/ArrayList;\n+  #288 = NameAndType        #159:#160     // SINGLETON:Lorg/apache/commons/compress/compressors/CompressorStreamFactory;\n+  #289 = Utf8               BootstrapMethods\n+  #290 = MethodHandle       6:#429        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #291 = String             #430          //  In addition to Apache Commons Compress you need the \\u0001 library - see \\u0001\n+  #292 = NameAndType        #431:#191     // makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #293 = Utf8               org/apache/commons/compress/compressors/CompressorStreamFactory$1\n+  #294 = NameAndType        #240:#241     // \"<init>\":()V\n+  #295 = Class              #432          // java/security/AccessController\n+  #296 = NameAndType        #433:#434     // doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n+  #297 = Utf8               java/util/SortedMap\n+  #298 = Utf8               org/apache/commons/compress/compressors/CompressorStreamFactory$2\n+  #299 = NameAndType        #235:#236     // serviceLoaderIterator:()Ljava/util/Iterator;\n+  #300 = Class              #435          // org/apache/commons/compress/utils/Lists\n+  #301 = NameAndType        #436:#437     // newArrayList:(Ljava/util/Iterator;)Ljava/util/ArrayList;\n+  #302 = Utf8               org/apache/commons/compress/compressors/CompressorStreamFactory\n+  #303 = Utf8               br\n+  #304 = Utf8               bzip2\n+  #305 = Utf8               deflate\n+  #306 = Utf8               deflate64\n+  #307 = Utf8               gz\n+  #308 = Utf8               lzma\n+  #309 = Utf8               pack200\n+  #310 = Utf8               snappy-framed\n+  #311 = Utf8               snappy-raw\n+  #312 = Utf8               xz\n+  #313 = Utf8               z\n+  #314 = Utf8               lz4-framed\n+  #315 = Utf8               lz4-block\n+  #316 = Utf8               zstd\n+  #317 = Class              #438          // java/util/Set\n+  #318 = NameAndType        #439:#236     // iterator:()Ljava/util/Iterator;\n+  #319 = NameAndType        #440:#271     // hasNext:()Z\n+  #320 = NameAndType        #441:#442     // next:()Ljava/lang/Object;\n+  #321 = Utf8               java/lang/String\n+  #322 = NameAndType        #238:#239     // toKey:(Ljava/lang/String;)Ljava/lang/String;\n+  #323 = Class              #443          // java/util/TreeMap\n+  #324 = NameAndType        #444:#445     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #325 = Utf8               org/apache/commons/compress/utils/ServiceLoaderIterator\n+  #326 = Utf8               org/apache/commons/compress/compressors/CompressorStreamProvider\n+  #327 = NameAndType        #240:#446     // \"<init>\":(Ljava/lang/Class;)V\n+  #328 = Class              #447          // java/util/Locale\n+  #329 = NameAndType        #448:#449     // ROOT:Ljava/util/Locale;\n+  #330 = NameAndType        #450:#451     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #331 = NameAndType        #187:#171     // decompressConcatenated:Z\n+  #332 = NameAndType        #180:#181     // decompressUntilEOF:Ljava/lang/Boolean;\n+  #333 = NameAndType        #188:#189     // memoryLimitInKb:I\n+  #334 = Class              #452          // java/lang/Boolean\n+  #335 = NameAndType        #453:#454     // valueOf:(Z)Ljava/lang/Boolean;\n+  #336 = NameAndType        #240:#243     // \"<init>\":(ZI)V\n+  #337 = Utf8               java/lang/IllegalArgumentException\n+  #338 = Utf8               Stream must not be null.\n+  #339 = NameAndType        #240:#455     // \"<init>\":(Ljava/lang/String;)V\n+  #340 = NameAndType        #456:#271     // markSupported:()Z\n+  #341 = Utf8               Mark is not supported.\n+  #342 = NameAndType        #457:#458     // mark:(I)V\n+  #343 = Class              #459          // org/apache/commons/compress/utils/IOUtils\n+  #344 = NameAndType        #460:#461     // readFully:(Ljava/io/InputStream;[B)I\n+  #345 = NameAndType        #462:#241     // reset:()V\n+  #346 = Utf8               java/io/IOException\n+  #347 = Utf8               org/apache/commons/compress/compressors/CompressorException\n+  #348 = Utf8               IOException while reading signature.\n+  #349 = NameAndType        #240:#463     // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #350 = NameAndType        #464:#465     // matches:([BI)Z\n+  #351 = Class              #466          // org/apache/commons/compress/compressors/xz/XZUtils\n+  #352 = Class              #467          // org/apache/commons/compress/compressors/lzma/LZMAUtils\n+  #353 = Class              #468          // org/apache/commons/compress/compressors/zstandard/ZstdUtils\n+  #354 = Utf8               No Compressor found for the stream signature.\n+  #355 = NameAndType        #245:#246     // detect:(Ljava/io/InputStream;)Ljava/lang/String;\n+  #356 = NameAndType        #257:#260     // createCompressorInputStream:(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/compressors/CompressorInputStream;\n+  #357 = NameAndType        #257:#261     // createCompressorInputStream:(Ljava/lang/String;Ljava/io/InputStream;Z)Lorg/apache/commons/compress/compressors/CompressorInputStream;\n+  #358 = Utf8               Compressor name and stream must not be null.\n+  #359 = NameAndType        #469:#470     // equalsIgnoreCase:(Ljava/lang/String;)Z\n+  #360 = Utf8               org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream\n+  #361 = NameAndType        #240:#471     // \"<init>\":(Ljava/io/InputStream;Z)V\n+  #362 = Utf8               org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream\n+  #363 = Class              #472          // org/apache/commons/compress/compressors/brotli/BrotliUtils\n+  #364 = NameAndType        #473:#271     // isBrotliCompressionAvailable:()Z\n+  #365 = NameAndType        #177:#162     // YOU_NEED_BROTLI_DEC:Ljava/lang/String;\n+  #366 = String             #474          // Brotli compression is not available.\\u0001\n+  #367 = NameAndType        #431:#239     // makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+  #368 = Utf8               org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream\n+  #369 = NameAndType        #240:#475     // \"<init>\":(Ljava/io/InputStream;)V\n+  #370 = NameAndType        #476:#271     // isXZCompressionAvailable:()Z\n+  #371 = NameAndType        #178:#162     // YOU_NEED_XZ_JAVA:Ljava/lang/String;\n+  #372 = String             #477          // XZ compression is not available.\\u0001\n+  #373 = Utf8               org/apache/commons/compress/compressors/xz/XZCompressorInputStream\n+  #374 = NameAndType        #240:#478     // \"<init>\":(Ljava/io/InputStream;ZI)V\n+  #375 = NameAndType        #479:#271     // isZstdCompressionAvailable:()Z\n+  #376 = NameAndType        #179:#162     // YOU_NEED_ZSTD_JNI:Ljava/lang/String;\n+  #377 = String             #480          // Zstandard compression is not available.\\u0001\n+  #378 = Utf8               org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream\n+  #379 = NameAndType        #481:#271     // isLZMACompressionAvailable:()Z\n+  #380 = String             #482          // LZMA compression is not available\\u0001\n+  #381 = Utf8               org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream\n+  #382 = NameAndType        #240:#483     // \"<init>\":(Ljava/io/InputStream;I)V\n+  #383 = Utf8               org/apache/commons/compress/compressors/pack200/Pack200CompressorInputStream\n+  #384 = Utf8               org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n+  #385 = Utf8               org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream\n+  #386 = Utf8               org/apache/commons/compress/compressors/z/ZCompressorInputStream\n+  #387 = Utf8               org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream\n+  #388 = Utf8               org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream\n+  #389 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+  #390 = Utf8               org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n+  #391 = Utf8               Could not create CompressorInputStream.\n+  #392 = NameAndType        #268:#198     // getCompressorInputStreamProviders:()Ljava/util/SortedMap;\n+  #393 = NameAndType        #484:#485     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #394 = String             #486          // Compressor: \\u0001 not found.\n+  #395 = Utf8               org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream\n+  #396 = NameAndType        #240:#487     // \"<init>\":(Ljava/io/OutputStream;)V\n+  #397 = Utf8               org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream\n+  #398 = Utf8               org/apache/commons/compress/compressors/xz/XZCompressorOutputStream\n+  #399 = Utf8               org/apache/commons/compress/compressors/pack200/Pack200CompressorOutputStream\n+  #400 = Utf8               org/apache/commons/compress/compressors/lzma/LZMACompressorOutputStream\n+  #401 = Utf8               org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream\n+  #402 = Utf8               org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream\n+  #403 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream\n+  #404 = Utf8               org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream\n+  #405 = Utf8               org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream\n+  #406 = Utf8               Could not create CompressorOutputStream\n+  #407 = NameAndType        #269:#198     // getCompressorOutputStreamProviders:()Ljava/util/SortedMap;\n+  #408 = NameAndType        #264:#265     // createCompressorOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/compressors/CompressorOutputStream;\n+  #409 = NameAndType        #182:#183     // compressorInputStreamProviders:Ljava/util/SortedMap;\n+  #410 = NameAndType        #197:#198     // findAvailableCompressorInputStreamProviders:()Ljava/util/SortedMap;\n+  #411 = Class              #488          // java/util/Collections\n+  #412 = NameAndType        #489:#490     // unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n+  #413 = NameAndType        #186:#183     // compressorOutputStreamProviders:Ljava/util/SortedMap;\n+  #414 = NameAndType        #200:#198     // findAvailableCompressorOutputStreamProviders:()Ljava/util/SortedMap;\n+  #415 = Class              #491          // org/apache/commons/compress/utils/Sets\n+  #416 = NameAndType        #492:#493     // newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n+  #417 = Utf8               java/lang/IllegalStateException\n+  #418 = Utf8               Cannot override the setting defined by the constructor\n+  #419 = Utf8               Google Brotli Dec\n+  #420 = Utf8               https://github.com/google/brotli/\n+  #421 = NameAndType        #190:#191     // youNeed:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #422 = Utf8               XZ for Java\n+  #423 = Utf8               https://tukaani.org/xz/java.html\n+  #424 = Utf8               Zstd JNI\n+  #425 = Utf8               https://github.com/luben/zstd-jni\n+  #426 = Utf8               java/lang/Object\n+  #427 = Utf8               java/util/Iterator\n+  #428 = Utf8               java/io/InputStream\n+  #429 = Methodref          #494.#495     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #430 = Utf8                In addition to Apache Commons Compress you need the \\u0001 library - see \\u0001\n+  #431 = Utf8               makeConcatWithConstants\n+  #432 = Utf8               java/security/AccessController\n+  #433 = Utf8               doPrivileged\n+  #434 = Utf8               (Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n+  #435 = Utf8               org/apache/commons/compress/utils/Lists\n+  #436 = Utf8               newArrayList\n+  #437 = Utf8               (Ljava/util/Iterator;)Ljava/util/ArrayList;\n+  #438 = Utf8               java/util/Set\n+  #439 = Utf8               iterator\n+  #440 = Utf8               hasNext\n+  #441 = Utf8               next\n+  #442 = Utf8               ()Ljava/lang/Object;\n+  #443 = Utf8               java/util/TreeMap\n+  #444 = Utf8               put\n+  #445 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #446 = Utf8               (Ljava/lang/Class;)V\n+  #447 = Utf8               java/util/Locale\n+  #448 = Utf8               ROOT\n+  #449 = Utf8               Ljava/util/Locale;\n+  #450 = Utf8               toUpperCase\n+  #451 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+  #452 = Utf8               java/lang/Boolean\n+  #453 = Utf8               valueOf\n+  #454 = Utf8               (Z)Ljava/lang/Boolean;\n+  #455 = Utf8               (Ljava/lang/String;)V\n+  #456 = Utf8               markSupported\n+  #457 = Utf8               mark\n+  #458 = Utf8               (I)V\n+  #459 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #460 = Utf8               readFully\n+  #461 = Utf8               (Ljava/io/InputStream;[B)I\n+  #462 = Utf8               reset\n+  #463 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #464 = Utf8               matches\n+  #465 = Utf8               ([BI)Z\n+  #466 = Utf8               org/apache/commons/compress/compressors/xz/XZUtils\n+  #467 = Utf8               org/apache/commons/compress/compressors/lzma/LZMAUtils\n+  #468 = Utf8               org/apache/commons/compress/compressors/zstandard/ZstdUtils\n+  #469 = Utf8               equalsIgnoreCase\n+  #470 = Utf8               (Ljava/lang/String;)Z\n+  #471 = Utf8               (Ljava/io/InputStream;Z)V\n+  #472 = Utf8               org/apache/commons/compress/compressors/brotli/BrotliUtils\n+  #473 = Utf8               isBrotliCompressionAvailable\n+  #474 = Utf8               Brotli compression is not available.\\u0001\n+  #475 = Utf8               (Ljava/io/InputStream;)V\n+  #476 = Utf8               isXZCompressionAvailable\n+  #477 = Utf8               XZ compression is not available.\\u0001\n+  #478 = Utf8               (Ljava/io/InputStream;ZI)V\n+  #479 = Utf8               isZstdCompressionAvailable\n+  #480 = Utf8               Zstandard compression is not available.\\u0001\n+  #481 = Utf8               isLZMACompressionAvailable\n+  #482 = Utf8               LZMA compression is not available\\u0001\n+  #483 = Utf8               (Ljava/io/InputStream;I)V\n+  #484 = Utf8               get\n+  #485 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #486 = Utf8               Compressor: \\u0001 not found.\n+  #487 = Utf8               (Ljava/io/OutputStream;)V\n+  #488 = Utf8               java/util/Collections\n+  #489 = Utf8               unmodifiableSortedMap\n+  #490 = Utf8               (Ljava/util/SortedMap;)Ljava/util/SortedMap;\n+  #491 = Utf8               org/apache/commons/compress/utils/Sets\n+  #492 = Utf8               newHashSet\n+  #493 = Utf8               ([Ljava/lang/Object;)Ljava/util/HashSet;\n+  #494 = Class              #496          // java/lang/invoke/StringConcatFactory\n+  #495 = NameAndType        #431:#499     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #496 = Utf8               java/lang/invoke/StringConcatFactory\n+  #497 = Class              #501          // java/lang/invoke/MethodHandles$Lookup\n+  #498 = Utf8               Lookup\n+  #499 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #500 = Class              #502          // java/lang/invoke/MethodHandles\n+  #501 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #502 = Utf8               java/lang/invoke/MethodHandles\n {\n   private static final org.apache.commons.compress.compressors.CompressorStreamFactory SINGLETON;\n     descriptor: Lorg/apache/commons/compress/compressors/CompressorStreamFactory;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   public static final java.lang.String BROTLI = \"br\";\n     descriptor: Ljava/lang/String;\n@@ -597,162 +600,153 @@\n   private final java.lang.Boolean decompressUntilEOF;\n     descriptor: Ljava/lang/Boolean;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private java.util.SortedMap<java.lang.String, org.apache.commons.compress.compressors.CompressorStreamProvider> compressorInputStreamProviders;\n     descriptor: Ljava/util/SortedMap;\n     flags: (0x0002) ACC_PRIVATE\n-    Signature: #191                         // Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;\n+    Signature: #185                         // Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;\n \n   private java.util.SortedMap<java.lang.String, org.apache.commons.compress.compressors.CompressorStreamProvider> compressorOutputStreamProviders;\n     descriptor: Ljava/util/SortedMap;\n     flags: (0x0002) ACC_PRIVATE\n-    Signature: #191                         // Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;\n+    Signature: #185                         // Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;\n \n   private volatile boolean decompressConcatenated;\n     descriptor: Z\n     flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE\n \n   private final int memoryLimitInKb;\n     descriptor: I\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private static java.lang.String youNeed(java.lang.String, java.lang.String);\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n-         0: new           #3                  // class java/lang/StringBuilder\n-         3: dup\n-         4: invokespecial #4                  // Method java/lang/StringBuilder.\"<init>\":()V\n-         7: ldc           #5                  // String  In addition to Apache Commons Compress you need the\n-         9: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        12: aload_0\n-        13: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        16: ldc           #7                  // String  library - see\n-        18: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        21: aload_1\n-        22: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        25: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        28: areturn\n+         0: aload_0\n+         1: aload_1\n+         2: invokedynamic #3,  0              // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+         7: areturn\n       LineNumberTable:\n         line 217: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      29     0  name   Ljava/lang/String;\n-            0      29     1   url   Ljava/lang/String;\n+            0       8     0  name   Ljava/lang/String;\n+            0       8     1   url   Ljava/lang/String;\n \n   public static java.util.SortedMap<java.lang.String, org.apache.commons.compress.compressors.CompressorStreamProvider> findAvailableCompressorInputStreamProviders();\n     descriptor: ()Ljava/util/SortedMap;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: new           #9                  // class org/apache/commons/compress/compressors/CompressorStreamFactory$1\n+         0: new           #4                  // class org/apache/commons/compress/compressors/CompressorStreamFactory$1\n          3: dup\n-         4: invokespecial #10                 // Method org/apache/commons/compress/compressors/CompressorStreamFactory$1.\"<init>\":()V\n-         7: invokestatic  #11                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n-        10: checkcast     #12                 // class java/util/SortedMap\n+         4: invokespecial #5                  // Method org/apache/commons/compress/compressors/CompressorStreamFactory$1.\"<init>\":()V\n+         7: invokestatic  #6                  // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n+        10: checkcast     #7                  // class java/util/SortedMap\n         13: areturn\n       LineNumberTable:\n         line 248: 0\n-    Signature: #205                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;\n+    Signature: #199                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;\n \n   public static java.util.SortedMap<java.lang.String, org.apache.commons.compress.compressors.CompressorStreamProvider> findAvailableCompressorOutputStreamProviders();\n     descriptor: ()Ljava/util/SortedMap;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: new           #13                 // class org/apache/commons/compress/compressors/CompressorStreamFactory$2\n+         0: new           #8                  // class org/apache/commons/compress/compressors/CompressorStreamFactory$2\n          3: dup\n-         4: invokespecial #14                 // Method org/apache/commons/compress/compressors/CompressorStreamFactory$2.\"<init>\":()V\n-         7: invokestatic  #11                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n-        10: checkcast     #12                 // class java/util/SortedMap\n+         4: invokespecial #9                  // Method org/apache/commons/compress/compressors/CompressorStreamFactory$2.\"<init>\":()V\n+         7: invokestatic  #6                  // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n+        10: checkcast     #7                  // class java/util/SortedMap\n         13: areturn\n       LineNumberTable:\n         line 289: 0\n-    Signature: #205                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;\n+    Signature: #199                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;\n \n   private static java.util.ArrayList<org.apache.commons.compress.compressors.CompressorStreamProvider> findCompressorStreamProviders();\n     descriptor: ()Ljava/util/ArrayList;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: invokestatic  #15                 // Method serviceLoaderIterator:()Ljava/util/Iterator;\n-         3: invokestatic  #16                 // Method org/apache/commons/compress/utils/Lists.newArrayList:(Ljava/util/Iterator;)Ljava/util/ArrayList;\n+         0: invokestatic  #10                 // Method serviceLoaderIterator:()Ljava/util/Iterator;\n+         3: invokestatic  #11                 // Method org/apache/commons/compress/utils/Lists.newArrayList:(Ljava/util/Iterator;)Ljava/util/ArrayList;\n          6: areturn\n       LineNumberTable:\n         line 303: 0\n-    Signature: #209                         // ()Ljava/util/ArrayList<Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;\n+    Signature: #203                         // ()Ljava/util/ArrayList<Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;\n \n   public static java.lang.String getBrotli();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: ldc           #18                 // String br\n+         0: ldc           #13                 // String br\n          2: areturn\n       LineNumberTable:\n         line 307: 0\n \n   public static java.lang.String getBzip2();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: ldc           #19                 // String bzip2\n+         0: ldc           #14                 // String bzip2\n          2: areturn\n       LineNumberTable:\n         line 311: 0\n \n   public static java.lang.String getDeflate();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: ldc           #20                 // String deflate\n+         0: ldc           #15                 // String deflate\n          2: areturn\n       LineNumberTable:\n         line 315: 0\n \n   public static java.lang.String getDeflate64();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: ldc           #21                 // String deflate64\n+         0: ldc           #16                 // String deflate64\n          2: areturn\n       LineNumberTable:\n         line 323: 0\n \n   public static java.lang.String getGzip();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: ldc           #22                 // String gz\n+         0: ldc           #17                 // String gz\n          2: areturn\n       LineNumberTable:\n         line 327: 0\n \n   public static java.lang.String getLzma();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: ldc           #23                 // String lzma\n+         0: ldc           #18                 // String lzma\n          2: areturn\n       LineNumberTable:\n         line 331: 0\n \n   public static java.lang.String getPack200();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: ldc           #24                 // String pack200\n+         0: ldc           #19                 // String pack200\n          2: areturn\n       LineNumberTable:\n         line 335: 0\n \n   public static org.apache.commons.compress.compressors.CompressorStreamFactory getSingleton();\n     descriptor: ()Lorg/apache/commons/compress/compressors/CompressorStreamFactory;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n@@ -764,99 +758,99 @@\n         line 339: 0\n \n   public static java.lang.String getSnappyFramed();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: ldc           #25                 // String snappy-framed\n+         0: ldc           #20                 // String snappy-framed\n          2: areturn\n       LineNumberTable:\n         line 343: 0\n \n   public static java.lang.String getSnappyRaw();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: ldc           #26                 // String snappy-raw\n+         0: ldc           #21                 // String snappy-raw\n          2: areturn\n       LineNumberTable:\n         line 347: 0\n \n   public static java.lang.String getXz();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: ldc           #27                 // String xz\n+         0: ldc           #22                 // String xz\n          2: areturn\n       LineNumberTable:\n         line 351: 0\n \n   public static java.lang.String getZ();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: ldc           #28                 // String z\n+         0: ldc           #23                 // String z\n          2: areturn\n       LineNumberTable:\n         line 355: 0\n \n   public static java.lang.String getLZ4Framed();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: ldc           #29                 // String lz4-framed\n+         0: ldc           #24                 // String lz4-framed\n          2: areturn\n       LineNumberTable:\n         line 359: 0\n \n   public static java.lang.String getLZ4Block();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: ldc           #30                 // String lz4-block\n+         0: ldc           #25                 // String lz4-block\n          2: areturn\n       LineNumberTable:\n         line 363: 0\n \n   public static java.lang.String getZstandard();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: ldc           #31                 // String zstd\n+         0: ldc           #26                 // String zstd\n          2: areturn\n       LineNumberTable:\n         line 367: 0\n \n   static void putAll(java.util.Set<java.lang.String>, org.apache.commons.compress.compressors.CompressorStreamProvider, java.util.TreeMap<java.lang.String, org.apache.commons.compress.compressors.CompressorStreamProvider>);\n     descriptor: (Ljava/util/Set;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;Ljava/util/TreeMap;)V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=3, locals=5, args_size=3\n          0: aload_0\n-         1: invokeinterface #32,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;\n+         1: invokeinterface #27,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;\n          6: astore_3\n          7: aload_3\n-         8: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+         8: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         13: ifeq          41\n         16: aload_3\n-        17: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        22: checkcast     #35                 // class java/lang/String\n+        17: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        22: checkcast     #30                 // class java/lang/String\n         25: astore        4\n         27: aload_2\n         28: aload         4\n-        30: invokestatic  #36                 // Method toKey:(Ljava/lang/String;)Ljava/lang/String;\n+        30: invokestatic  #31                 // Method toKey:(Ljava/lang/String;)Ljava/lang/String;\n         33: aload_1\n-        34: invokevirtual #37                 // Method java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+        34: invokevirtual #32                 // Method java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n         37: pop\n         38: goto          7\n         41: return\n       LineNumberTable:\n         line 372: 0\n         line 373: 27\n         line 374: 38\n@@ -873,61 +867,61 @@\n             0      42     2   map   Ljava/util/TreeMap<Ljava/lang/String;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 252 /* append */\n           offset_delta = 7\n           locals = [ class java/util/Iterator ]\n         frame_type = 250 /* chop */\n           offset_delta = 33\n-    Signature: #240                         // (Ljava/util/Set<Ljava/lang/String;>;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;Ljava/util/TreeMap<Ljava/lang/String;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;)V\n+    Signature: #234                         // (Ljava/util/Set<Ljava/lang/String;>;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;Ljava/util/TreeMap<Ljava/lang/String;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;)V\n \n   private static java.util.Iterator<org.apache.commons.compress.compressors.CompressorStreamProvider> serviceLoaderIterator();\n     descriptor: ()Ljava/util/Iterator;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=0, args_size=0\n-         0: new           #38                 // class org/apache/commons/compress/utils/ServiceLoaderIterator\n+         0: new           #33                 // class org/apache/commons/compress/utils/ServiceLoaderIterator\n          3: dup\n-         4: ldc           #39                 // class org/apache/commons/compress/compressors/CompressorStreamProvider\n-         6: invokespecial #40                 // Method org/apache/commons/compress/utils/ServiceLoaderIterator.\"<init>\":(Ljava/lang/Class;)V\n+         4: ldc           #34                 // class org/apache/commons/compress/compressors/CompressorStreamProvider\n+         6: invokespecial #35                 // Method org/apache/commons/compress/utils/ServiceLoaderIterator.\"<init>\":(Ljava/lang/Class;)V\n          9: areturn\n       LineNumberTable:\n         line 378: 0\n-    Signature: #243                         // ()Ljava/util/Iterator<Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;\n+    Signature: #237                         // ()Ljava/util/Iterator<Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;\n \n   private static java.lang.String toKey(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #41                 // Field java/util/Locale.ROOT:Ljava/util/Locale;\n-         4: invokevirtual #42                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+         1: getstatic     #36                 // Field java/util/Locale.ROOT:Ljava/util/Locale;\n+         4: invokevirtual #37                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 382: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  name   Ljava/lang/String;\n \n   public org.apache.commons.compress.compressors.CompressorStreamFactory();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #43                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #38                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iconst_0\n-         6: putfield      #44                 // Field decompressConcatenated:Z\n+         6: putfield      #39                 // Field decompressConcatenated:Z\n          9: aload_0\n         10: aconst_null\n-        11: putfield      #45                 // Field decompressUntilEOF:Ljava/lang/Boolean;\n+        11: putfield      #40                 // Field decompressUntilEOF:Ljava/lang/Boolean;\n         14: aload_0\n         15: iconst_m1\n-        16: putfield      #46                 // Field memoryLimitInKb:I\n+        16: putfield      #41                 // Field memoryLimitInKb:I\n         19: return\n       LineNumberTable:\n         line 411: 0\n         line 405: 4\n         line 412: 9\n         line 413: 14\n         line 414: 19\n@@ -937,28 +931,28 @@\n \n   public org.apache.commons.compress.compressors.CompressorStreamFactory(boolean, int);\n     descriptor: (ZI)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #43                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #38                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iconst_0\n-         6: putfield      #44                 // Field decompressConcatenated:Z\n+         6: putfield      #39                 // Field decompressConcatenated:Z\n          9: aload_0\n         10: iload_1\n-        11: invokestatic  #47                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n-        14: putfield      #45                 // Field decompressUntilEOF:Ljava/lang/Boolean;\n+        11: invokestatic  #42                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+        14: putfield      #40                 // Field decompressUntilEOF:Ljava/lang/Boolean;\n         17: aload_0\n         18: iload_1\n-        19: putfield      #44                 // Field decompressConcatenated:Z\n+        19: putfield      #39                 // Field decompressConcatenated:Z\n         22: aload_0\n         23: iload_2\n-        24: putfield      #46                 // Field memoryLimitInKb:I\n+        24: putfield      #41                 // Field memoryLimitInKb:I\n         27: return\n       LineNumberTable:\n         line 432: 0\n         line 405: 4\n         line 433: 9\n         line 436: 17\n         line 437: 22\n@@ -973,15 +967,15 @@\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: iconst_m1\n-         3: invokespecial #48                 // Method \"<init>\":(ZI)V\n+         3: invokespecial #43                 // Method \"<init>\":(ZI)V\n          6: return\n       LineNumberTable:\n         line 452: 0\n         line 453: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/compress/compressors/CompressorStreamFactory;\n@@ -990,114 +984,114 @@\n   public static java.lang.String detect(java.io.InputStream) throws org.apache.commons.compress.compressors.CompressorException;\n     descriptor: (Ljava/io/InputStream;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=4, args_size=1\n          0: aload_0\n          1: ifnonnull     14\n-         4: new           #49                 // class java/lang/IllegalArgumentException\n+         4: new           #44                 // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #50                 // String Stream must not be null.\n-        10: invokespecial #51                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #45                 // String Stream must not be null.\n+        10: invokespecial #46                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_0\n-        15: invokevirtual #52                 // Method java/io/InputStream.markSupported:()Z\n+        15: invokevirtual #47                 // Method java/io/InputStream.markSupported:()Z\n         18: ifne          31\n-        21: new           #49                 // class java/lang/IllegalArgumentException\n+        21: new           #44                 // class java/lang/IllegalArgumentException\n         24: dup\n-        25: ldc           #53                 // String Mark is not supported.\n-        27: invokespecial #51                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        25: ldc           #48                 // String Mark is not supported.\n+        27: invokespecial #46                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         30: athrow\n         31: bipush        12\n         33: newarray       byte\n         35: astore_1\n         36: aload_0\n         37: aload_1\n         38: arraylength\n-        39: invokevirtual #54                 // Method java/io/InputStream.mark:(I)V\n+        39: invokevirtual #49                 // Method java/io/InputStream.mark:(I)V\n         42: iconst_m1\n         43: istore_2\n         44: aload_0\n         45: aload_1\n-        46: invokestatic  #55                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+        46: invokestatic  #50                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n         49: istore_2\n         50: aload_0\n-        51: invokevirtual #56                 // Method java/io/InputStream.reset:()V\n+        51: invokevirtual #51                 // Method java/io/InputStream.reset:()V\n         54: goto          69\n         57: astore_3\n-        58: new           #58                 // class org/apache/commons/compress/compressors/CompressorException\n+        58: new           #53                 // class org/apache/commons/compress/compressors/CompressorException\n         61: dup\n-        62: ldc           #59                 // String IOException while reading signature.\n+        62: ldc           #54                 // String IOException while reading signature.\n         64: aload_3\n-        65: invokespecial #60                 // Method org/apache/commons/compress/compressors/CompressorException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        65: invokespecial #55                 // Method org/apache/commons/compress/compressors/CompressorException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         68: athrow\n         69: aload_1\n         70: iload_2\n-        71: invokestatic  #61                 // Method org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.matches:([BI)Z\n+        71: invokestatic  #56                 // Method org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.matches:([BI)Z\n         74: ifeq          80\n-        77: ldc           #19                 // String bzip2\n+        77: ldc           #14                 // String bzip2\n         79: areturn\n         80: aload_1\n         81: iload_2\n-        82: invokestatic  #62                 // Method org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.matches:([BI)Z\n+        82: invokestatic  #57                 // Method org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.matches:([BI)Z\n         85: ifeq          91\n-        88: ldc           #22                 // String gz\n+        88: ldc           #17                 // String gz\n         90: areturn\n         91: aload_1\n         92: iload_2\n-        93: invokestatic  #63                 // Method org/apache/commons/compress/compressors/pack200/Pack200CompressorInputStream.matches:([BI)Z\n+        93: invokestatic  #58                 // Method org/apache/commons/compress/compressors/pack200/Pack200CompressorInputStream.matches:([BI)Z\n         96: ifeq          102\n-        99: ldc           #24                 // String pack200\n+        99: ldc           #19                 // String pack200\n        101: areturn\n        102: aload_1\n        103: iload_2\n-       104: invokestatic  #64                 // Method org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.matches:([BI)Z\n+       104: invokestatic  #59                 // Method org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.matches:([BI)Z\n        107: ifeq          113\n-       110: ldc           #25                 // String snappy-framed\n+       110: ldc           #20                 // String snappy-framed\n        112: areturn\n        113: aload_1\n        114: iload_2\n-       115: invokestatic  #65                 // Method org/apache/commons/compress/compressors/z/ZCompressorInputStream.matches:([BI)Z\n+       115: invokestatic  #60                 // Method org/apache/commons/compress/compressors/z/ZCompressorInputStream.matches:([BI)Z\n        118: ifeq          124\n-       121: ldc           #28                 // String z\n+       121: ldc           #23                 // String z\n        123: areturn\n        124: aload_1\n        125: iload_2\n-       126: invokestatic  #66                 // Method org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.matches:([BI)Z\n+       126: invokestatic  #61                 // Method org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.matches:([BI)Z\n        129: ifeq          135\n-       132: ldc           #20                 // String deflate\n+       132: ldc           #15                 // String deflate\n        134: areturn\n        135: aload_1\n        136: iload_2\n-       137: invokestatic  #67                 // Method org/apache/commons/compress/compressors/xz/XZUtils.matches:([BI)Z\n+       137: invokestatic  #62                 // Method org/apache/commons/compress/compressors/xz/XZUtils.matches:([BI)Z\n        140: ifeq          146\n-       143: ldc           #27                 // String xz\n+       143: ldc           #22                 // String xz\n        145: areturn\n        146: aload_1\n        147: iload_2\n-       148: invokestatic  #68                 // Method org/apache/commons/compress/compressors/lzma/LZMAUtils.matches:([BI)Z\n+       148: invokestatic  #63                 // Method org/apache/commons/compress/compressors/lzma/LZMAUtils.matches:([BI)Z\n        151: ifeq          157\n-       154: ldc           #23                 // String lzma\n+       154: ldc           #18                 // String lzma\n        156: areturn\n        157: aload_1\n        158: iload_2\n-       159: invokestatic  #69                 // Method org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.matches:([BI)Z\n+       159: invokestatic  #64                 // Method org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.matches:([BI)Z\n        162: ifeq          168\n-       165: ldc           #29                 // String lz4-framed\n+       165: ldc           #24                 // String lz4-framed\n        167: areturn\n        168: aload_1\n        169: iload_2\n-       170: invokestatic  #70                 // Method org/apache/commons/compress/compressors/zstandard/ZstdUtils.matches:([BI)Z\n+       170: invokestatic  #65                 // Method org/apache/commons/compress/compressors/zstandard/ZstdUtils.matches:([BI)Z\n        173: ifeq          179\n-       176: ldc           #31                 // String zstd\n+       176: ldc           #26                 // String zstd\n        178: areturn\n-       179: new           #58                 // class org/apache/commons/compress/compressors/CompressorException\n+       179: new           #53                 // class org/apache/commons/compress/compressors/CompressorException\n        182: dup\n-       183: ldc           #71                 // String No Compressor found for the stream signature.\n-       185: invokespecial #72                 // Method org/apache/commons/compress/compressors/CompressorException.\"<init>\":(Ljava/lang/String;)V\n+       183: ldc           #66                 // String No Compressor found for the stream signature.\n+       185: invokespecial #67                 // Method org/apache/commons/compress/compressors/CompressorException.\"<init>\":(Ljava/lang/String;)V\n        188: athrow\n       Exception table:\n          from    to  target type\n             44    54    57   Class java/io/IOException\n       LineNumberTable:\n         line 467: 0\n         line 468: 4\n@@ -1162,17 +1156,17 @@\n   public org.apache.commons.compress.compressors.CompressorInputStream createCompressorInputStream(java.io.InputStream) throws org.apache.commons.compress.compressors.CompressorException;\n     descriptor: (Ljava/io/InputStream;)Lorg/apache/commons/compress/compressors/CompressorInputStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #73                 // Method detect:(Ljava/io/InputStream;)Ljava/lang/String;\n+         2: invokestatic  #68                 // Method detect:(Ljava/io/InputStream;)Ljava/lang/String;\n          5: aload_1\n-         6: invokevirtual #74                 // Method createCompressorInputStream:(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/compressors/CompressorInputStream;\n+         6: invokevirtual #69                 // Method createCompressorInputStream:(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/compressors/CompressorInputStream;\n          9: areturn\n       LineNumberTable:\n         line 542: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/compress/compressors/CompressorStreamFactory;\n             0      10     1    in   Ljava/io/InputStream;\n@@ -1184,16 +1178,16 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: aload_0\n-         4: getfield      #44                 // Field decompressConcatenated:Z\n-         7: invokevirtual #75                 // Method createCompressorInputStream:(Ljava/lang/String;Ljava/io/InputStream;Z)Lorg/apache/commons/compress/compressors/CompressorInputStream;\n+         4: getfield      #39                 // Field decompressConcatenated:Z\n+         7: invokevirtual #70                 // Method createCompressorInputStream:(Ljava/lang/String;Ljava/io/InputStream;Z)Lorg/apache/commons/compress/compressors/CompressorInputStream;\n         10: areturn\n       LineNumberTable:\n         line 568: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/compressors/CompressorStreamFactory;\n             0      11     1  name   Ljava/lang/String;\n@@ -1206,330 +1200,298 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=5, args_size=4\n          0: aload_1\n          1: ifnull        8\n          4: aload_2\n          5: ifnonnull     18\n-         8: new           #49                 // class java/lang/IllegalArgumentException\n+         8: new           #44                 // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #76                 // String Compressor name and stream must not be null.\n-        14: invokespecial #51                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #71                 // String Compressor name and stream must not be null.\n+        14: invokespecial #46                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n-        18: ldc           #22                 // String gz\n+        18: ldc           #17                 // String gz\n         20: aload_1\n-        21: invokevirtual #77                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+        21: invokevirtual #72                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n         24: ifeq          37\n-        27: new           #78                 // class org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream\n+        27: new           #73                 // class org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream\n         30: dup\n         31: aload_2\n         32: iload_3\n-        33: invokespecial #79                 // Method org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n+        33: invokespecial #74                 // Method org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n         36: areturn\n-        37: ldc           #19                 // String bzip2\n+        37: ldc           #14                 // String bzip2\n         39: aload_1\n-        40: invokevirtual #77                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+        40: invokevirtual #72                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n         43: ifeq          56\n-        46: new           #80                 // class org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream\n+        46: new           #75                 // class org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream\n         49: dup\n         50: aload_2\n         51: iload_3\n-        52: invokespecial #81                 // Method org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n+        52: invokespecial #76                 // Method org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n         55: areturn\n-        56: ldc           #18                 // String br\n+        56: ldc           #13                 // String br\n         58: aload_1\n-        59: invokevirtual #77                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-        62: ifeq          109\n-        65: invokestatic  #82                 // Method org/apache/commons/compress/compressors/brotli/BrotliUtils.isBrotliCompressionAvailable:()Z\n-        68: ifne          100\n-        71: new           #58                 // class org/apache/commons/compress/compressors/CompressorException\n+        59: invokevirtual #72                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+        62: ifeq          96\n+        65: invokestatic  #77                 // Method org/apache/commons/compress/compressors/brotli/BrotliUtils.isBrotliCompressionAvailable:()Z\n+        68: ifne          87\n+        71: new           #53                 // class org/apache/commons/compress/compressors/CompressorException\n         74: dup\n-        75: new           #3                  // class java/lang/StringBuilder\n-        78: dup\n-        79: invokespecial #4                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        82: ldc           #83                 // String Brotli compression is not available.\n-        84: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        87: getstatic     #84                 // Field YOU_NEED_BROTLI_DEC:Ljava/lang/String;\n-        90: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        93: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        96: invokespecial #72                 // Method org/apache/commons/compress/compressors/CompressorException.\"<init>\":(Ljava/lang/String;)V\n-        99: athrow\n-       100: new           #85                 // class org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream\n-       103: dup\n-       104: aload_2\n-       105: invokespecial #86                 // Method org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-       108: areturn\n-       109: ldc           #27                 // String xz\n-       111: aload_1\n-       112: invokevirtual #77                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-       115: ifeq          167\n-       118: invokestatic  #87                 // Method org/apache/commons/compress/compressors/xz/XZUtils.isXZCompressionAvailable:()Z\n-       121: ifne          153\n-       124: new           #58                 // class org/apache/commons/compress/compressors/CompressorException\n-       127: dup\n-       128: new           #3                  // class java/lang/StringBuilder\n-       131: dup\n-       132: invokespecial #4                  // Method java/lang/StringBuilder.\"<init>\":()V\n-       135: ldc           #88                 // String XZ compression is not available.\n-       137: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       140: getstatic     #89                 // Field YOU_NEED_XZ_JAVA:Ljava/lang/String;\n-       143: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       146: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       149: invokespecial #72                 // Method org/apache/commons/compress/compressors/CompressorException.\"<init>\":(Ljava/lang/String;)V\n-       152: athrow\n-       153: new           #90                 // class org/apache/commons/compress/compressors/xz/XZCompressorInputStream\n-       156: dup\n-       157: aload_2\n-       158: iload_3\n-       159: aload_0\n-       160: getfield      #46                 // Field memoryLimitInKb:I\n-       163: invokespecial #91                 // Method org/apache/commons/compress/compressors/xz/XZCompressorInputStream.\"<init>\":(Ljava/io/InputStream;ZI)V\n-       166: areturn\n-       167: ldc           #31                 // String zstd\n-       169: aload_1\n-       170: invokevirtual #77                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-       173: ifeq          220\n-       176: invokestatic  #92                 // Method org/apache/commons/compress/compressors/zstandard/ZstdUtils.isZstdCompressionAvailable:()Z\n-       179: ifne          211\n-       182: new           #58                 // class org/apache/commons/compress/compressors/CompressorException\n-       185: dup\n-       186: new           #3                  // class java/lang/StringBuilder\n-       189: dup\n-       190: invokespecial #4                  // Method java/lang/StringBuilder.\"<init>\":()V\n-       193: ldc           #93                 // String Zstandard compression is not available.\n-       195: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       198: getstatic     #94                 // Field YOU_NEED_ZSTD_JNI:Ljava/lang/String;\n-       201: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       204: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       207: invokespecial #72                 // Method org/apache/commons/compress/compressors/CompressorException.\"<init>\":(Ljava/lang/String;)V\n-       210: athrow\n-       211: new           #95                 // class org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream\n-       214: dup\n-       215: aload_2\n-       216: invokespecial #96                 // Method org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-       219: areturn\n-       220: ldc           #23                 // String lzma\n-       222: aload_1\n-       223: invokevirtual #77                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-       226: ifeq          277\n-       229: invokestatic  #97                 // Method org/apache/commons/compress/compressors/lzma/LZMAUtils.isLZMACompressionAvailable:()Z\n-       232: ifne          264\n-       235: new           #58                 // class org/apache/commons/compress/compressors/CompressorException\n-       238: dup\n-       239: new           #3                  // class java/lang/StringBuilder\n-       242: dup\n-       243: invokespecial #4                  // Method java/lang/StringBuilder.\"<init>\":()V\n-       246: ldc           #98                 // String LZMA compression is not available\n-       248: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       251: getstatic     #89                 // Field YOU_NEED_XZ_JAVA:Ljava/lang/String;\n-       254: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       257: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       260: invokespecial #72                 // Method org/apache/commons/compress/compressors/CompressorException.\"<init>\":(Ljava/lang/String;)V\n-       263: athrow\n-       264: new           #99                 // class org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream\n-       267: dup\n-       268: aload_2\n-       269: aload_0\n-       270: getfield      #46                 // Field memoryLimitInKb:I\n-       273: invokespecial #100                // Method org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-       276: areturn\n-       277: ldc           #24                 // String pack200\n-       279: aload_1\n-       280: invokevirtual #77                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-       283: ifeq          295\n-       286: new           #101                // class org/apache/commons/compress/compressors/pack200/Pack200CompressorInputStream\n-       289: dup\n-       290: aload_2\n-       291: invokespecial #102                // Method org/apache/commons/compress/compressors/pack200/Pack200CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-       294: areturn\n-       295: ldc           #26                 // String snappy-raw\n-       297: aload_1\n-       298: invokevirtual #77                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-       301: ifeq          313\n-       304: new           #103                // class org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n-       307: dup\n-       308: aload_2\n-       309: invokespecial #104                // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-       312: areturn\n-       313: ldc           #25                 // String snappy-framed\n-       315: aload_1\n-       316: invokevirtual #77                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-       319: ifeq          331\n-       322: new           #105                // class org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream\n-       325: dup\n-       326: aload_2\n-       327: invokespecial #106                // Method org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-       330: areturn\n-       331: ldc           #28                 // String z\n-       333: aload_1\n-       334: invokevirtual #77                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-       337: ifeq          353\n-       340: new           #107                // class org/apache/commons/compress/compressors/z/ZCompressorInputStream\n-       343: dup\n-       344: aload_2\n-       345: aload_0\n-       346: getfield      #46                 // Field memoryLimitInKb:I\n-       349: invokespecial #108                // Method org/apache/commons/compress/compressors/z/ZCompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-       352: areturn\n-       353: ldc           #20                 // String deflate\n-       355: aload_1\n-       356: invokevirtual #77                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-       359: ifeq          371\n-       362: new           #109                // class org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream\n-       365: dup\n-       366: aload_2\n-       367: invokespecial #110                // Method org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-       370: areturn\n-       371: ldc           #21                 // String deflate64\n-       373: aload_1\n-       374: invokevirtual #77                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-       377: ifeq          389\n-       380: new           #111                // class org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream\n-       383: dup\n-       384: aload_2\n-       385: invokespecial #112                // Method org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-       388: areturn\n-       389: ldc           #30                 // String lz4-block\n-       391: aload_1\n-       392: invokevirtual #77                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-       395: ifeq          407\n-       398: new           #113                // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-       401: dup\n-       402: aload_2\n-       403: invokespecial #114                // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-       406: areturn\n-       407: ldc           #29                 // String lz4-framed\n-       409: aload_1\n-       410: invokevirtual #77                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-       413: ifeq          426\n-       416: new           #115                // class org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-       419: dup\n-       420: aload_2\n-       421: iload_3\n-       422: invokespecial #116                // Method org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n-       425: areturn\n-       426: goto          443\n-       429: astore        4\n-       431: new           #58                 // class org/apache/commons/compress/compressors/CompressorException\n-       434: dup\n-       435: ldc           #117                // String Could not create CompressorInputStream.\n-       437: aload         4\n-       439: invokespecial #60                 // Method org/apache/commons/compress/compressors/CompressorException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-       442: athrow\n-       443: aload_0\n-       444: invokevirtual #118                // Method getCompressorInputStreamProviders:()Ljava/util/SortedMap;\n-       447: aload_1\n-       448: invokestatic  #36                 // Method toKey:(Ljava/lang/String;)Ljava/lang/String;\n-       451: invokeinterface #119,  2          // InterfaceMethod java/util/SortedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-       456: checkcast     #39                 // class org/apache/commons/compress/compressors/CompressorStreamProvider\n-       459: astore        4\n-       461: aload         4\n-       463: ifnull        477\n-       466: aload         4\n-       468: aload_1\n-       469: aload_2\n-       470: iload_3\n-       471: invokeinterface #120,  4          // InterfaceMethod org/apache/commons/compress/compressors/CompressorStreamProvider.createCompressorInputStream:(Ljava/lang/String;Ljava/io/InputStream;Z)Lorg/apache/commons/compress/compressors/CompressorInputStream;\n-       476: areturn\n-       477: new           #58                 // class org/apache/commons/compress/compressors/CompressorException\n-       480: dup\n-       481: new           #3                  // class java/lang/StringBuilder\n-       484: dup\n-       485: invokespecial #4                  // Method java/lang/StringBuilder.\"<init>\":()V\n-       488: ldc           #121                // String Compressor:\n-       490: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       493: aload_1\n-       494: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       497: ldc           #122                // String  not found.\n-       499: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       502: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       505: invokespecial #72                 // Method org/apache/commons/compress/compressors/CompressorException.\"<init>\":(Ljava/lang/String;)V\n-       508: athrow\n+        75: getstatic     #78                 // Field YOU_NEED_BROTLI_DEC:Ljava/lang/String;\n+        78: invokedynamic #79,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+        83: invokespecial #67                 // Method org/apache/commons/compress/compressors/CompressorException.\"<init>\":(Ljava/lang/String;)V\n+        86: athrow\n+        87: new           #80                 // class org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream\n+        90: dup\n+        91: aload_2\n+        92: invokespecial #81                 // Method org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+        95: areturn\n+        96: ldc           #22                 // String xz\n+        98: aload_1\n+        99: invokevirtual #72                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       102: ifeq          141\n+       105: invokestatic  #82                 // Method org/apache/commons/compress/compressors/xz/XZUtils.isXZCompressionAvailable:()Z\n+       108: ifne          127\n+       111: new           #53                 // class org/apache/commons/compress/compressors/CompressorException\n+       114: dup\n+       115: getstatic     #83                 // Field YOU_NEED_XZ_JAVA:Ljava/lang/String;\n+       118: invokedynamic #84,  0             // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+       123: invokespecial #67                 // Method org/apache/commons/compress/compressors/CompressorException.\"<init>\":(Ljava/lang/String;)V\n+       126: athrow\n+       127: new           #85                 // class org/apache/commons/compress/compressors/xz/XZCompressorInputStream\n+       130: dup\n+       131: aload_2\n+       132: iload_3\n+       133: aload_0\n+       134: getfield      #41                 // Field memoryLimitInKb:I\n+       137: invokespecial #86                 // Method org/apache/commons/compress/compressors/xz/XZCompressorInputStream.\"<init>\":(Ljava/io/InputStream;ZI)V\n+       140: areturn\n+       141: ldc           #26                 // String zstd\n+       143: aload_1\n+       144: invokevirtual #72                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       147: ifeq          181\n+       150: invokestatic  #87                 // Method org/apache/commons/compress/compressors/zstandard/ZstdUtils.isZstdCompressionAvailable:()Z\n+       153: ifne          172\n+       156: new           #53                 // class org/apache/commons/compress/compressors/CompressorException\n+       159: dup\n+       160: getstatic     #88                 // Field YOU_NEED_ZSTD_JNI:Ljava/lang/String;\n+       163: invokedynamic #89,  0             // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+       168: invokespecial #67                 // Method org/apache/commons/compress/compressors/CompressorException.\"<init>\":(Ljava/lang/String;)V\n+       171: athrow\n+       172: new           #90                 // class org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream\n+       175: dup\n+       176: aload_2\n+       177: invokespecial #91                 // Method org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+       180: areturn\n+       181: ldc           #18                 // String lzma\n+       183: aload_1\n+       184: invokevirtual #72                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       187: ifeq          225\n+       190: invokestatic  #92                 // Method org/apache/commons/compress/compressors/lzma/LZMAUtils.isLZMACompressionAvailable:()Z\n+       193: ifne          212\n+       196: new           #53                 // class org/apache/commons/compress/compressors/CompressorException\n+       199: dup\n+       200: getstatic     #83                 // Field YOU_NEED_XZ_JAVA:Ljava/lang/String;\n+       203: invokedynamic #93,  0             // InvokeDynamic #4:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+       208: invokespecial #67                 // Method org/apache/commons/compress/compressors/CompressorException.\"<init>\":(Ljava/lang/String;)V\n+       211: athrow\n+       212: new           #94                 // class org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream\n+       215: dup\n+       216: aload_2\n+       217: aload_0\n+       218: getfield      #41                 // Field memoryLimitInKb:I\n+       221: invokespecial #95                 // Method org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+       224: areturn\n+       225: ldc           #19                 // String pack200\n+       227: aload_1\n+       228: invokevirtual #72                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       231: ifeq          243\n+       234: new           #96                 // class org/apache/commons/compress/compressors/pack200/Pack200CompressorInputStream\n+       237: dup\n+       238: aload_2\n+       239: invokespecial #97                 // Method org/apache/commons/compress/compressors/pack200/Pack200CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+       242: areturn\n+       243: ldc           #21                 // String snappy-raw\n+       245: aload_1\n+       246: invokevirtual #72                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       249: ifeq          261\n+       252: new           #98                 // class org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n+       255: dup\n+       256: aload_2\n+       257: invokespecial #99                 // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+       260: areturn\n+       261: ldc           #20                 // String snappy-framed\n+       263: aload_1\n+       264: invokevirtual #72                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       267: ifeq          279\n+       270: new           #100                // class org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream\n+       273: dup\n+       274: aload_2\n+       275: invokespecial #101                // Method org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+       278: areturn\n+       279: ldc           #23                 // String z\n+       281: aload_1\n+       282: invokevirtual #72                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       285: ifeq          301\n+       288: new           #102                // class org/apache/commons/compress/compressors/z/ZCompressorInputStream\n+       291: dup\n+       292: aload_2\n+       293: aload_0\n+       294: getfield      #41                 // Field memoryLimitInKb:I\n+       297: invokespecial #103                // Method org/apache/commons/compress/compressors/z/ZCompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+       300: areturn\n+       301: ldc           #15                 // String deflate\n+       303: aload_1\n+       304: invokevirtual #72                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       307: ifeq          319\n+       310: new           #104                // class org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream\n+       313: dup\n+       314: aload_2\n+       315: invokespecial #105                // Method org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+       318: areturn\n+       319: ldc           #16                 // String deflate64\n+       321: aload_1\n+       322: invokevirtual #72                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       325: ifeq          337\n+       328: new           #106                // class org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream\n+       331: dup\n+       332: aload_2\n+       333: invokespecial #107                // Method org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+       336: areturn\n+       337: ldc           #25                 // String lz4-block\n+       339: aload_1\n+       340: invokevirtual #72                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       343: ifeq          355\n+       346: new           #108                // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+       349: dup\n+       350: aload_2\n+       351: invokespecial #109                // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+       354: areturn\n+       355: ldc           #24                 // String lz4-framed\n+       357: aload_1\n+       358: invokevirtual #72                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       361: ifeq          374\n+       364: new           #110                // class org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n+       367: dup\n+       368: aload_2\n+       369: iload_3\n+       370: invokespecial #111                // Method org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n+       373: areturn\n+       374: goto          391\n+       377: astore        4\n+       379: new           #53                 // class org/apache/commons/compress/compressors/CompressorException\n+       382: dup\n+       383: ldc           #112                // String Could not create CompressorInputStream.\n+       385: aload         4\n+       387: invokespecial #55                 // Method org/apache/commons/compress/compressors/CompressorException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+       390: athrow\n+       391: aload_0\n+       392: invokevirtual #113                // Method getCompressorInputStreamProviders:()Ljava/util/SortedMap;\n+       395: aload_1\n+       396: invokestatic  #31                 // Method toKey:(Ljava/lang/String;)Ljava/lang/String;\n+       399: invokeinterface #114,  2          // InterfaceMethod java/util/SortedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+       404: checkcast     #34                 // class org/apache/commons/compress/compressors/CompressorStreamProvider\n+       407: astore        4\n+       409: aload         4\n+       411: ifnull        425\n+       414: aload         4\n+       416: aload_1\n+       417: aload_2\n+       418: iload_3\n+       419: invokeinterface #115,  4          // InterfaceMethod org/apache/commons/compress/compressors/CompressorStreamProvider.createCompressorInputStream:(Ljava/lang/String;Ljava/io/InputStream;Z)Lorg/apache/commons/compress/compressors/CompressorInputStream;\n+       424: areturn\n+       425: new           #53                 // class org/apache/commons/compress/compressors/CompressorException\n+       428: dup\n+       429: aload_1\n+       430: invokedynamic #116,  0            // InvokeDynamic #5:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+       435: invokespecial #67                 // Method org/apache/commons/compress/compressors/CompressorException.\"<init>\":(Ljava/lang/String;)V\n+       438: athrow\n       Exception table:\n          from    to  target type\n-            18    36   429   Class java/io/IOException\n-            37    55   429   Class java/io/IOException\n-            56   108   429   Class java/io/IOException\n-           109   166   429   Class java/io/IOException\n-           167   219   429   Class java/io/IOException\n-           220   276   429   Class java/io/IOException\n-           277   294   429   Class java/io/IOException\n-           295   312   429   Class java/io/IOException\n-           313   330   429   Class java/io/IOException\n-           331   352   429   Class java/io/IOException\n-           353   370   429   Class java/io/IOException\n-           371   388   429   Class java/io/IOException\n-           389   406   429   Class java/io/IOException\n-           407   425   429   Class java/io/IOException\n+            18    36   377   Class java/io/IOException\n+            37    55   377   Class java/io/IOException\n+            56    95   377   Class java/io/IOException\n+            96   140   377   Class java/io/IOException\n+           141   180   377   Class java/io/IOException\n+           181   224   377   Class java/io/IOException\n+           225   242   377   Class java/io/IOException\n+           243   260   377   Class java/io/IOException\n+           261   278   377   Class java/io/IOException\n+           279   300   377   Class java/io/IOException\n+           301   318   377   Class java/io/IOException\n+           319   336   377   Class java/io/IOException\n+           337   354   377   Class java/io/IOException\n+           355   373   377   Class java/io/IOException\n       LineNumberTable:\n         line 574: 0\n         line 575: 8\n         line 580: 18\n         line 581: 27\n         line 584: 37\n         line 585: 46\n         line 588: 56\n         line 589: 65\n         line 590: 71\n-        line 592: 100\n-        line 595: 109\n-        line 596: 118\n-        line 597: 124\n-        line 599: 153\n-        line 602: 167\n-        line 603: 176\n-        line 604: 182\n-        line 606: 211\n-        line 609: 220\n-        line 610: 229\n-        line 611: 235\n-        line 613: 264\n-        line 616: 277\n-        line 617: 286\n-        line 620: 295\n-        line 621: 304\n-        line 624: 313\n-        line 625: 322\n-        line 628: 331\n-        line 629: 340\n-        line 632: 353\n-        line 633: 362\n-        line 636: 371\n-        line 637: 380\n-        line 640: 389\n-        line 641: 398\n-        line 644: 407\n-        line 645: 416\n-        line 650: 426\n-        line 648: 429\n-        line 649: 431\n-        line 651: 443\n-        line 652: 461\n-        line 653: 466\n-        line 656: 477\n+        line 592: 87\n+        line 595: 96\n+        line 596: 105\n+        line 597: 111\n+        line 599: 127\n+        line 602: 141\n+        line 603: 150\n+        line 604: 156\n+        line 606: 172\n+        line 609: 181\n+        line 610: 190\n+        line 611: 196\n+        line 613: 212\n+        line 616: 225\n+        line 617: 234\n+        line 620: 243\n+        line 621: 252\n+        line 624: 261\n+        line 625: 270\n+        line 628: 279\n+        line 629: 288\n+        line 632: 301\n+        line 633: 310\n+        line 636: 319\n+        line 637: 328\n+        line 640: 337\n+        line 641: 346\n+        line 644: 355\n+        line 645: 364\n+        line 650: 374\n+        line 648: 377\n+        line 649: 379\n+        line 651: 391\n+        line 652: 409\n+        line 653: 414\n+        line 656: 425\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-          431      12     4     e   Ljava/io/IOException;\n-            0     509     0  this   Lorg/apache/commons/compress/compressors/CompressorStreamFactory;\n-            0     509     1  name   Ljava/lang/String;\n-            0     509     2    in   Ljava/io/InputStream;\n-            0     509     3 actualDecompressConcatenated   Z\n-          461      48     4 compressorStreamProvider   Lorg/apache/commons/compress/compressors/CompressorStreamProvider;\n+          379      12     4     e   Ljava/io/IOException;\n+            0     439     0  this   Lorg/apache/commons/compress/compressors/CompressorStreamFactory;\n+            0     439     1  name   Ljava/lang/String;\n+            0     439     2    in   Ljava/io/InputStream;\n+            0     439     3 actualDecompressConcatenated   Z\n+          409      30     4 compressorStreamProvider   Lorg/apache/commons/compress/compressors/CompressorStreamProvider;\n       StackMapTable: number_of_entries = 23\n         frame_type = 8 /* same */\n         frame_type = 9 /* same */\n         frame_type = 18 /* same */\n         frame_type = 18 /* same */\n-        frame_type = 43 /* same */\n+        frame_type = 30 /* same */\n         frame_type = 8 /* same */\n-        frame_type = 43 /* same */\n+        frame_type = 30 /* same */\n         frame_type = 13 /* same */\n-        frame_type = 43 /* same */\n+        frame_type = 30 /* same */\n         frame_type = 8 /* same */\n-        frame_type = 43 /* same */\n+        frame_type = 30 /* same */\n         frame_type = 12 /* same */\n         frame_type = 17 /* same */\n         frame_type = 17 /* same */\n         frame_type = 17 /* same */\n         frame_type = 21 /* same */\n         frame_type = 17 /* same */\n         frame_type = 17 /* same */\n@@ -1549,145 +1511,137 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=3\n          0: aload_1\n          1: ifnull        8\n          4: aload_2\n          5: ifnonnull     18\n-         8: new           #49                 // class java/lang/IllegalArgumentException\n+         8: new           #44                 // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #76                 // String Compressor name and stream must not be null.\n-        14: invokespecial #51                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #71                 // String Compressor name and stream must not be null.\n+        14: invokespecial #46                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n-        18: ldc           #22                 // String gz\n+        18: ldc           #17                 // String gz\n         20: aload_1\n-        21: invokevirtual #77                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+        21: invokevirtual #72                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n         24: ifeq          36\n-        27: new           #123                // class org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream\n+        27: new           #117                // class org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream\n         30: dup\n         31: aload_2\n-        32: invokespecial #124                // Method org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+        32: invokespecial #118                // Method org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n         35: areturn\n-        36: ldc           #19                 // String bzip2\n+        36: ldc           #14                 // String bzip2\n         38: aload_1\n-        39: invokevirtual #77                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+        39: invokevirtual #72                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n         42: ifeq          54\n-        45: new           #125                // class org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream\n+        45: new           #119                // class org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream\n         48: dup\n         49: aload_2\n-        50: invokespecial #126                // Method org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+        50: invokespecial #120                // Method org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n         53: areturn\n-        54: ldc           #27                 // String xz\n+        54: ldc           #22                 // String xz\n         56: aload_1\n-        57: invokevirtual #77                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+        57: invokevirtual #72                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n         60: ifeq          72\n-        63: new           #127                // class org/apache/commons/compress/compressors/xz/XZCompressorOutputStream\n+        63: new           #121                // class org/apache/commons/compress/compressors/xz/XZCompressorOutputStream\n         66: dup\n         67: aload_2\n-        68: invokespecial #128                // Method org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+        68: invokespecial #122                // Method org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n         71: areturn\n-        72: ldc           #24                 // String pack200\n+        72: ldc           #19                 // String pack200\n         74: aload_1\n-        75: invokevirtual #77                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+        75: invokevirtual #72                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n         78: ifeq          90\n-        81: new           #129                // class org/apache/commons/compress/compressors/pack200/Pack200CompressorOutputStream\n+        81: new           #123                // class org/apache/commons/compress/compressors/pack200/Pack200CompressorOutputStream\n         84: dup\n         85: aload_2\n-        86: invokespecial #130                // Method org/apache/commons/compress/compressors/pack200/Pack200CompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+        86: invokespecial #124                // Method org/apache/commons/compress/compressors/pack200/Pack200CompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n         89: areturn\n-        90: ldc           #23                 // String lzma\n+        90: ldc           #18                 // String lzma\n         92: aload_1\n-        93: invokevirtual #77                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+        93: invokevirtual #72                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n         96: ifeq          108\n-        99: new           #131                // class org/apache/commons/compress/compressors/lzma/LZMACompressorOutputStream\n+        99: new           #125                // class org/apache/commons/compress/compressors/lzma/LZMACompressorOutputStream\n        102: dup\n        103: aload_2\n-       104: invokespecial #132                // Method org/apache/commons/compress/compressors/lzma/LZMACompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+       104: invokespecial #126                // Method org/apache/commons/compress/compressors/lzma/LZMACompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n        107: areturn\n-       108: ldc           #20                 // String deflate\n+       108: ldc           #15                 // String deflate\n        110: aload_1\n-       111: invokevirtual #77                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       111: invokevirtual #72                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n        114: ifeq          126\n-       117: new           #133                // class org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream\n+       117: new           #127                // class org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream\n        120: dup\n        121: aload_2\n-       122: invokespecial #134                // Method org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+       122: invokespecial #128                // Method org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n        125: areturn\n-       126: ldc           #25                 // String snappy-framed\n+       126: ldc           #20                 // String snappy-framed\n        128: aload_1\n-       129: invokevirtual #77                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       129: invokevirtual #72                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n        132: ifeq          144\n-       135: new           #135                // class org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream\n+       135: new           #129                // class org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream\n        138: dup\n        139: aload_2\n-       140: invokespecial #136                // Method org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+       140: invokespecial #130                // Method org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n        143: areturn\n-       144: ldc           #30                 // String lz4-block\n+       144: ldc           #25                 // String lz4-block\n        146: aload_1\n-       147: invokevirtual #77                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       147: invokevirtual #72                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n        150: ifeq          162\n-       153: new           #137                // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream\n+       153: new           #131                // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream\n        156: dup\n        157: aload_2\n-       158: invokespecial #138                // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+       158: invokespecial #132                // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n        161: areturn\n-       162: ldc           #29                 // String lz4-framed\n+       162: ldc           #24                 // String lz4-framed\n        164: aload_1\n-       165: invokevirtual #77                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       165: invokevirtual #72                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n        168: ifeq          180\n-       171: new           #139                // class org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream\n+       171: new           #133                // class org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream\n        174: dup\n        175: aload_2\n-       176: invokespecial #140                // Method org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+       176: invokespecial #134                // Method org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n        179: areturn\n-       180: ldc           #31                 // String zstd\n+       180: ldc           #26                 // String zstd\n        182: aload_1\n-       183: invokevirtual #77                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       183: invokevirtual #72                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n        186: ifeq          198\n-       189: new           #141                // class org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream\n+       189: new           #135                // class org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream\n        192: dup\n        193: aload_2\n-       194: invokespecial #142                // Method org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+       194: invokespecial #136                // Method org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n        197: areturn\n        198: goto          213\n        201: astore_3\n-       202: new           #58                 // class org/apache/commons/compress/compressors/CompressorException\n+       202: new           #53                 // class org/apache/commons/compress/compressors/CompressorException\n        205: dup\n-       206: ldc           #143                // String Could not create CompressorOutputStream\n+       206: ldc           #137                // String Could not create CompressorOutputStream\n        208: aload_3\n-       209: invokespecial #60                 // Method org/apache/commons/compress/compressors/CompressorException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+       209: invokespecial #55                 // Method org/apache/commons/compress/compressors/CompressorException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n        212: athrow\n        213: aload_0\n-       214: invokevirtual #144                // Method getCompressorOutputStreamProviders:()Ljava/util/SortedMap;\n+       214: invokevirtual #138                // Method getCompressorOutputStreamProviders:()Ljava/util/SortedMap;\n        217: aload_1\n-       218: invokestatic  #36                 // Method toKey:(Ljava/lang/String;)Ljava/lang/String;\n-       221: invokeinterface #119,  2          // InterfaceMethod java/util/SortedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-       226: checkcast     #39                 // class org/apache/commons/compress/compressors/CompressorStreamProvider\n+       218: invokestatic  #31                 // Method toKey:(Ljava/lang/String;)Ljava/lang/String;\n+       221: invokeinterface #114,  2          // InterfaceMethod java/util/SortedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+       226: checkcast     #34                 // class org/apache/commons/compress/compressors/CompressorStreamProvider\n        229: astore_3\n        230: aload_3\n        231: ifnull        243\n        234: aload_3\n        235: aload_1\n        236: aload_2\n-       237: invokeinterface #145,  3          // InterfaceMethod org/apache/commons/compress/compressors/CompressorStreamProvider.createCompressorOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/compressors/CompressorOutputStream;\n+       237: invokeinterface #139,  3          // InterfaceMethod org/apache/commons/compress/compressors/CompressorStreamProvider.createCompressorOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/compressors/CompressorOutputStream;\n        242: areturn\n-       243: new           #58                 // class org/apache/commons/compress/compressors/CompressorException\n+       243: new           #53                 // class org/apache/commons/compress/compressors/CompressorException\n        246: dup\n-       247: new           #3                  // class java/lang/StringBuilder\n-       250: dup\n-       251: invokespecial #4                  // Method java/lang/StringBuilder.\"<init>\":()V\n-       254: ldc           #121                // String Compressor:\n-       256: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       259: aload_1\n-       260: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       263: ldc           #122                // String  not found.\n-       265: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       268: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       271: invokespecial #72                 // Method org/apache/commons/compress/compressors/CompressorException.\"<init>\":(Ljava/lang/String;)V\n-       274: athrow\n+       247: aload_1\n+       248: invokedynamic #116,  0            // InvokeDynamic #5:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+       253: invokespecial #67                 // Method org/apache/commons/compress/compressors/CompressorException.\"<init>\":(Ljava/lang/String;)V\n+       256: athrow\n       Exception table:\n          from    to  target type\n             18    35   201   Class java/io/IOException\n             36    53   201   Class java/io/IOException\n             54    71   201   Class java/io/IOException\n             72    89   201   Class java/io/IOException\n             90   107   201   Class java/io/IOException\n@@ -1725,18 +1679,18 @@\n         line 727: 213\n         line 728: 230\n         line 729: 234\n         line 731: 243\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n           202      11     3     e   Ljava/io/IOException;\n-            0     275     0  this   Lorg/apache/commons/compress/compressors/CompressorStreamFactory;\n-            0     275     1  name   Ljava/lang/String;\n-            0     275     2   out   Ljava/io/OutputStream;\n-          230      45     3 compressorStreamProvider   Lorg/apache/commons/compress/compressors/CompressorStreamProvider;\n+            0     257     0  this   Lorg/apache/commons/compress/compressors/CompressorStreamFactory;\n+            0     257     1  name   Ljava/lang/String;\n+            0     257     2   out   Ljava/io/OutputStream;\n+          230      27     3 compressorStreamProvider   Lorg/apache/commons/compress/compressors/CompressorStreamProvider;\n       StackMapTable: number_of_entries = 15\n         frame_type = 8 /* same */\n         frame_type = 9 /* same */\n         frame_type = 17 /* same */\n         frame_type = 17 /* same */\n         frame_type = 17 /* same */\n         frame_type = 17 /* same */\n@@ -1757,249 +1711,249 @@\n \n   public java.util.SortedMap<java.lang.String, org.apache.commons.compress.compressors.CompressorStreamProvider> getCompressorInputStreamProviders();\n     descriptor: ()Ljava/util/SortedMap;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #146                // Field compressorInputStreamProviders:Ljava/util/SortedMap;\n+         1: getfield      #140                // Field compressorInputStreamProviders:Ljava/util/SortedMap;\n          4: ifnonnull     17\n          7: aload_0\n-         8: invokestatic  #147                // Method findAvailableCompressorInputStreamProviders:()Ljava/util/SortedMap;\n-        11: invokestatic  #148                // Method java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n-        14: putfield      #146                // Field compressorInputStreamProviders:Ljava/util/SortedMap;\n+         8: invokestatic  #141                // Method findAvailableCompressorInputStreamProviders:()Ljava/util/SortedMap;\n+        11: invokestatic  #142                // Method java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n+        14: putfield      #140                // Field compressorInputStreamProviders:Ljava/util/SortedMap;\n         17: aload_0\n-        18: getfield      #146                // Field compressorInputStreamProviders:Ljava/util/SortedMap;\n+        18: getfield      #140                // Field compressorInputStreamProviders:Ljava/util/SortedMap;\n         21: areturn\n       LineNumberTable:\n         line 735: 0\n         line 736: 7\n         line 737: 8\n         line 739: 17\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0  this   Lorg/apache/commons/compress/compressors/CompressorStreamFactory;\n       StackMapTable: number_of_entries = 1\n         frame_type = 17 /* same */\n-    Signature: #205                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;\n+    Signature: #199                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;\n \n   public java.util.SortedMap<java.lang.String, org.apache.commons.compress.compressors.CompressorStreamProvider> getCompressorOutputStreamProviders();\n     descriptor: ()Ljava/util/SortedMap;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #149                // Field compressorOutputStreamProviders:Ljava/util/SortedMap;\n+         1: getfield      #143                // Field compressorOutputStreamProviders:Ljava/util/SortedMap;\n          4: ifnonnull     17\n          7: aload_0\n-         8: invokestatic  #150                // Method findAvailableCompressorOutputStreamProviders:()Ljava/util/SortedMap;\n-        11: invokestatic  #148                // Method java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n-        14: putfield      #149                // Field compressorOutputStreamProviders:Ljava/util/SortedMap;\n+         8: invokestatic  #144                // Method findAvailableCompressorOutputStreamProviders:()Ljava/util/SortedMap;\n+        11: invokestatic  #142                // Method java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n+        14: putfield      #143                // Field compressorOutputStreamProviders:Ljava/util/SortedMap;\n         17: aload_0\n-        18: getfield      #149                // Field compressorOutputStreamProviders:Ljava/util/SortedMap;\n+        18: getfield      #143                // Field compressorOutputStreamProviders:Ljava/util/SortedMap;\n         21: areturn\n       LineNumberTable:\n         line 743: 0\n         line 744: 7\n         line 745: 8\n         line 747: 17\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0  this   Lorg/apache/commons/compress/compressors/CompressorStreamFactory;\n       StackMapTable: number_of_entries = 1\n         frame_type = 17 /* same */\n-    Signature: #205                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;\n+    Signature: #199                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/compressors/CompressorStreamProvider;>;\n \n   boolean getDecompressConcatenated();\n     descriptor: ()Z\n     flags: (0x0000)\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #44                 // Field decompressConcatenated:Z\n+         1: getfield      #39                 // Field decompressConcatenated:Z\n          4: ireturn\n       LineNumberTable:\n         line 752: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/compressors/CompressorStreamFactory;\n \n   public java.lang.Boolean getDecompressUntilEOF();\n     descriptor: ()Ljava/lang/Boolean;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #45                 // Field decompressUntilEOF:Ljava/lang/Boolean;\n+         1: getfield      #40                 // Field decompressUntilEOF:Ljava/lang/Boolean;\n          4: areturn\n       LineNumberTable:\n         line 756: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/compressors/CompressorStreamFactory;\n \n   public java.util.Set<java.lang.String> getInputStreamCompressorNames();\n     descriptor: ()Ljava/util/Set;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: bipush        14\n-         2: anewarray     #35                 // class java/lang/String\n+         2: anewarray     #30                 // class java/lang/String\n          5: dup\n          6: iconst_0\n-         7: ldc           #22                 // String gz\n+         7: ldc           #17                 // String gz\n          9: aastore\n         10: dup\n         11: iconst_1\n-        12: ldc           #18                 // String br\n+        12: ldc           #13                 // String br\n         14: aastore\n         15: dup\n         16: iconst_2\n-        17: ldc           #19                 // String bzip2\n+        17: ldc           #14                 // String bzip2\n         19: aastore\n         20: dup\n         21: iconst_3\n-        22: ldc           #27                 // String xz\n+        22: ldc           #22                 // String xz\n         24: aastore\n         25: dup\n         26: iconst_4\n-        27: ldc           #23                 // String lzma\n+        27: ldc           #18                 // String lzma\n         29: aastore\n         30: dup\n         31: iconst_5\n-        32: ldc           #24                 // String pack200\n+        32: ldc           #19                 // String pack200\n         34: aastore\n         35: dup\n         36: bipush        6\n-        38: ldc           #20                 // String deflate\n+        38: ldc           #15                 // String deflate\n         40: aastore\n         41: dup\n         42: bipush        7\n-        44: ldc           #26                 // String snappy-raw\n+        44: ldc           #21                 // String snappy-raw\n         46: aastore\n         47: dup\n         48: bipush        8\n-        50: ldc           #25                 // String snappy-framed\n+        50: ldc           #20                 // String snappy-framed\n         52: aastore\n         53: dup\n         54: bipush        9\n-        56: ldc           #28                 // String z\n+        56: ldc           #23                 // String z\n         58: aastore\n         59: dup\n         60: bipush        10\n-        62: ldc           #30                 // String lz4-block\n+        62: ldc           #25                 // String lz4-block\n         64: aastore\n         65: dup\n         66: bipush        11\n-        68: ldc           #29                 // String lz4-framed\n+        68: ldc           #24                 // String lz4-framed\n         70: aastore\n         71: dup\n         72: bipush        12\n-        74: ldc           #31                 // String zstd\n+        74: ldc           #26                 // String zstd\n         76: aastore\n         77: dup\n         78: bipush        13\n-        80: ldc           #21                 // String deflate64\n+        80: ldc           #16                 // String deflate64\n         82: aastore\n-        83: invokestatic  #151                // Method org/apache/commons/compress/utils/Sets.newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n+        83: invokestatic  #145                // Method org/apache/commons/compress/utils/Sets.newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n         86: areturn\n       LineNumberTable:\n         line 761: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      87     0  this   Lorg/apache/commons/compress/compressors/CompressorStreamFactory;\n-    Signature: #284                         // ()Ljava/util/Set<Ljava/lang/String;>;\n+    Signature: #276                         // ()Ljava/util/Set<Ljava/lang/String;>;\n \n   public java.util.Set<java.lang.String> getOutputStreamCompressorNames();\n     descriptor: ()Ljava/util/Set;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: bipush        10\n-         2: anewarray     #35                 // class java/lang/String\n+         2: anewarray     #30                 // class java/lang/String\n          5: dup\n          6: iconst_0\n-         7: ldc           #22                 // String gz\n+         7: ldc           #17                 // String gz\n          9: aastore\n         10: dup\n         11: iconst_1\n-        12: ldc           #19                 // String bzip2\n+        12: ldc           #14                 // String bzip2\n         14: aastore\n         15: dup\n         16: iconst_2\n-        17: ldc           #27                 // String xz\n+        17: ldc           #22                 // String xz\n         19: aastore\n         20: dup\n         21: iconst_3\n-        22: ldc           #23                 // String lzma\n+        22: ldc           #18                 // String lzma\n         24: aastore\n         25: dup\n         26: iconst_4\n-        27: ldc           #24                 // String pack200\n+        27: ldc           #19                 // String pack200\n         29: aastore\n         30: dup\n         31: iconst_5\n-        32: ldc           #20                 // String deflate\n+        32: ldc           #15                 // String deflate\n         34: aastore\n         35: dup\n         36: bipush        6\n-        38: ldc           #25                 // String snappy-framed\n+        38: ldc           #20                 // String snappy-framed\n         40: aastore\n         41: dup\n         42: bipush        7\n-        44: ldc           #30                 // String lz4-block\n+        44: ldc           #25                 // String lz4-block\n         46: aastore\n         47: dup\n         48: bipush        8\n-        50: ldc           #29                 // String lz4-framed\n+        50: ldc           #24                 // String lz4-framed\n         52: aastore\n         53: dup\n         54: bipush        9\n-        56: ldc           #31                 // String zstd\n+        56: ldc           #26                 // String zstd\n         58: aastore\n-        59: invokestatic  #151                // Method org/apache/commons/compress/utils/Sets.newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n+        59: invokestatic  #145                // Method org/apache/commons/compress/utils/Sets.newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n         62: areturn\n       LineNumberTable:\n         line 767: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      63     0  this   Lorg/apache/commons/compress/compressors/CompressorStreamFactory;\n-    Signature: #284                         // ()Ljava/util/Set<Ljava/lang/String;>;\n+    Signature: #276                         // ()Ljava/util/Set<Ljava/lang/String;>;\n \n   public void setDecompressConcatenated(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #45                 // Field decompressUntilEOF:Ljava/lang/Boolean;\n+         1: getfield      #40                 // Field decompressUntilEOF:Ljava/lang/Boolean;\n          4: ifnull        17\n-         7: new           #152                // class java/lang/IllegalStateException\n+         7: new           #146                // class java/lang/IllegalStateException\n         10: dup\n-        11: ldc           #153                // String Cannot override the setting defined by the constructor\n-        13: invokespecial #154                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #147                // String Cannot override the setting defined by the constructor\n+        13: invokespecial #148                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n         18: iload_1\n-        19: putfield      #44                 // Field decompressConcatenated:Z\n+        19: putfield      #39                 // Field decompressConcatenated:Z\n         22: return\n       LineNumberTable:\n         line 791: 0\n         line 792: 7\n         line 794: 17\n         line 795: 22\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      23     0  this   Lorg/apache/commons/compress/compressors/CompressorStreamFactory;\n             0      23     1 decompressConcatenated   Z\n       StackMapTable: number_of_entries = 1\n         frame_type = 17 /* same */\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #289()\n+      0: #281()\n         java.lang.Deprecated\n \n   static org.apache.commons.compress.compressors.CompressorStreamFactory access$000();\n     descriptor: ()Lorg/apache/commons/compress/compressors/CompressorStreamFactory;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=0, args_size=0\n@@ -2019,34 +1973,54 @@\n         line 98: 0\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: new           #17                 // class org/apache/commons/compress/compressors/CompressorStreamFactory\n+         0: new           #12                 // class org/apache/commons/compress/compressors/CompressorStreamFactory\n          3: dup\n-         4: invokespecial #155                // Method \"<init>\":()V\n+         4: invokespecial #149                // Method \"<init>\":()V\n          7: putstatic     #2                  // Field SINGLETON:Lorg/apache/commons/compress/compressors/CompressorStreamFactory;\n-        10: ldc           #156                // String Google Brotli Dec\n-        12: ldc           #157                // String https://github.com/google/brotli/\n-        14: invokestatic  #158                // Method youNeed:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-        17: putstatic     #84                 // Field YOU_NEED_BROTLI_DEC:Ljava/lang/String;\n-        20: ldc           #159                // String XZ for Java\n-        22: ldc           #160                // String https://tukaani.org/xz/java.html\n-        24: invokestatic  #158                // Method youNeed:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-        27: putstatic     #89                 // Field YOU_NEED_XZ_JAVA:Ljava/lang/String;\n-        30: ldc           #161                // String Zstd JNI\n-        32: ldc           #162                // String https://github.com/luben/zstd-jni\n-        34: invokestatic  #158                // Method youNeed:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-        37: putstatic     #94                 // Field YOU_NEED_ZSTD_JNI:Ljava/lang/String;\n+        10: ldc           #150                // String Google Brotli Dec\n+        12: ldc           #151                // String https://github.com/google/brotli/\n+        14: invokestatic  #152                // Method youNeed:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+        17: putstatic     #78                 // Field YOU_NEED_BROTLI_DEC:Ljava/lang/String;\n+        20: ldc           #153                // String XZ for Java\n+        22: ldc           #154                // String https://tukaani.org/xz/java.html\n+        24: invokestatic  #152                // Method youNeed:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+        27: putstatic     #83                 // Field YOU_NEED_XZ_JAVA:Ljava/lang/String;\n+        30: ldc           #155                // String Zstd JNI\n+        32: ldc           #156                // String https://github.com/luben/zstd-jni\n+        34: invokestatic  #152                // Method youNeed:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+        37: putstatic     #88                 // Field YOU_NEED_ZSTD_JNI:Ljava/lang/String;\n         40: return\n       LineNumberTable:\n         line 100: 0\n         line 212: 10\n         line 213: 20\n         line 214: 30\n }\n SourceFile: \"CompressorStreamFactory.java\"\n InnerClasses:\n-  static #13;                             // class org/apache/commons/compress/compressors/CompressorStreamFactory$2\n-  static #9;                              // class org/apache/commons/compress/compressors/CompressorStreamFactory$1\n+  #8;                                     // class org/apache/commons/compress/compressors/CompressorStreamFactory$2\n+  #4;                                     // class org/apache/commons/compress/compressors/CompressorStreamFactory$1\n+  public static final #498= #497 of #500; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+BootstrapMethods:\n+  0: #290 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #291  In addition to Apache Commons Compress you need the \\u0001 library - see \\u0001\n+  1: #290 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #366 Brotli compression is not available.\\u0001\n+  2: #290 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #372 XZ compression is not available.\\u0001\n+  3: #290 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #377 Zstandard compression is not available.\\u0001\n+  4: #290 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #380 LZMA compression is not available\\u0001\n+  5: #290 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #394 Compressor: \\u0001 not found.\n"}]}
