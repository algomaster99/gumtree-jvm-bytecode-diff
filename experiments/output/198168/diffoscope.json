{"diffoscope-json-version": 1, "source1": "first/ConversionInstruction.class", "source2": "second/ConversionInstruction.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -2,21 +2,21 @@\n package org.apache.bcel.generic;\n \n public abstract class ConversionInstruction extends Instruction implements TypedInstruction, StackProducer, StackConsumer\n {\n     ConversionInstruction() {\n     }\n     \n-    protected ConversionInstruction(final short opcode) {\n-        super(opcode, (short)1);\n+    protected ConversionInstruction(final short n) {\n+        super(n, (short)1);\n     }\n     \n-    public Type getType(final ConstantPoolGen cp) {\n-        final short _opcode = super.getOpcode();\n-        switch (_opcode) {\n+    public Type getType(final ConstantPoolGen constantPoolGen) {\n+        final short opcode = super.getOpcode();\n+        switch (opcode) {\n             case 136:\n             case 139:\n             case 142: {\n                 return (Type)Type.INT;\n             }\n             case 134:\n             case 137:\n@@ -39,12 +39,12 @@\n             case 146: {\n                 return (Type)Type.CHAR;\n             }\n             case 147: {\n                 return (Type)Type.SHORT;\n             }\n             default: {\n-                throw new ClassGenException(\"Unknown type \" + _opcode);\n+                throw new ClassGenException(\"Unknown type \" + opcode);\n             }\n         }\n     }\n }\n"}]}
