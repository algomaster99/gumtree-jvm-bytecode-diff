{"diffoscope-json-version": 1, "source1": "first/DeflateCompressorInputStream.class", "source2": "second/DeflateCompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,42 +1,42 @@\n-  SHA-256 checksum 3bab8b8a41fa4410d753c275eb6e545d0fbb39dd06dacbe35fd84de0a7ac436b\n+  SHA-256 checksum d0ebc8102e0f37ddf306ea709352aabba966af14dea0f2c5ca2d2ec45cfeec21\n   Compiled from \"DeflateCompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream implements org.apache.commons.compress.utils.InputStreamStatistics\n   minor version: 0\n-  major version: 52\n+  major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #23                         // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream\n   super_class: #24                        // org/apache/commons/compress/compressors/CompressorInputStream\n   interfaces: 1, fields: 8, methods: 9, attributes: 1\n Constant pool:\n-    #1 = Class              #85           // org/apache/commons/compress/compressors/deflate/DeflateParameters\n-    #2 = Methodref          #1.#86        // org/apache/commons/compress/compressors/deflate/DeflateParameters.\"<init>\":()V\n-    #3 = Methodref          #23.#87       // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.\"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V\n-    #4 = Methodref          #24.#86       // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n-    #5 = Class              #88           // java/util/zip/Inflater\n-    #6 = Methodref          #1.#89        // org/apache/commons/compress/compressors/deflate/DeflateParameters.withZlibHeader:()Z\n-    #7 = Methodref          #5.#90        // java/util/zip/Inflater.\"<init>\":(Z)V\n-    #8 = Fieldref           #23.#91       // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.inflater:Ljava/util/zip/Inflater;\n-    #9 = Class              #92           // java/util/zip/InflaterInputStream\n-   #10 = Class              #93           // org/apache/commons/compress/utils/CountingInputStream\n-   #11 = Methodref          #10.#94       // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #12 = Fieldref           #23.#95       // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-   #13 = Methodref          #9.#96        // java/util/zip/InflaterInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/util/zip/Inflater;)V\n-   #14 = Fieldref           #23.#97       // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.in:Ljava/io/InputStream;\n-   #15 = Methodref          #98.#99       // java/io/InputStream.read:()I\n-   #16 = Methodref          #23.#100      // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.count:(I)V\n-   #17 = Methodref          #98.#101      // java/io/InputStream.read:([BII)I\n-   #18 = Methodref          #102.#103     // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n-   #19 = Methodref          #98.#104      // java/io/InputStream.available:()I\n-   #20 = Methodref          #98.#105      // java/io/InputStream.close:()V\n-   #21 = Methodref          #5.#106       // java/util/zip/Inflater.end:()V\n-   #22 = Methodref          #10.#107      // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n-   #23 = Class              #108          // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream\n-   #24 = Class              #109          // org/apache/commons/compress/compressors/CompressorInputStream\n-   #25 = Class              #110          // org/apache/commons/compress/utils/InputStreamStatistics\n+    #1 = Class              #83           // org/apache/commons/compress/compressors/deflate/DeflateParameters\n+    #2 = Methodref          #1.#84        // org/apache/commons/compress/compressors/deflate/DeflateParameters.\"<init>\":()V\n+    #3 = Methodref          #23.#85       // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.\"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V\n+    #4 = Methodref          #24.#84       // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+    #5 = Class              #86           // java/util/zip/Inflater\n+    #6 = Methodref          #1.#87        // org/apache/commons/compress/compressors/deflate/DeflateParameters.withZlibHeader:()Z\n+    #7 = Methodref          #5.#88        // java/util/zip/Inflater.\"<init>\":(Z)V\n+    #8 = Fieldref           #23.#89       // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.inflater:Ljava/util/zip/Inflater;\n+    #9 = Class              #90           // java/util/zip/InflaterInputStream\n+   #10 = Class              #91           // org/apache/commons/compress/utils/CountingInputStream\n+   #11 = Methodref          #10.#92       // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #12 = Fieldref           #23.#93       // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #13 = Methodref          #9.#94        // java/util/zip/InflaterInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/util/zip/Inflater;)V\n+   #14 = Fieldref           #23.#95       // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.in:Ljava/io/InputStream;\n+   #15 = Methodref          #56.#96       // java/io/InputStream.read:()I\n+   #16 = Methodref          #23.#97       // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.count:(I)V\n+   #17 = Methodref          #56.#98       // java/io/InputStream.read:([BII)I\n+   #18 = Methodref          #99.#100      // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+   #19 = Methodref          #56.#101      // java/io/InputStream.available:()I\n+   #20 = Methodref          #56.#102      // java/io/InputStream.close:()V\n+   #21 = Methodref          #5.#103       // java/util/zip/Inflater.end:()V\n+   #22 = Methodref          #10.#104      // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+   #23 = Class              #105          // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream\n+   #24 = Class              #106          // org/apache/commons/compress/compressors/CompressorInputStream\n+   #25 = Class              #107          // org/apache/commons/compress/utils/InputStreamStatistics\n    #26 = Utf8               MAGIC_1\n    #27 = Utf8               I\n    #28 = Utf8               ConstantValue\n    #29 = Integer            120\n    #30 = Utf8               MAGIC_2a\n    #31 = Integer            1\n    #32 = Utf8               MAGIC_2b\n@@ -59,82 +59,79 @@\n    #49 = Utf8               this\n    #50 = Utf8               Lorg/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream;\n    #51 = Utf8               inputStream\n    #52 = Utf8               (Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V\n    #53 = Utf8               parameters\n    #54 = Utf8               Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;\n    #55 = Utf8               StackMapTable\n-   #56 = Class              #108          // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream\n-   #57 = Class              #111          // java/io/InputStream\n-   #58 = Class              #85           // org/apache/commons/compress/compressors/deflate/DeflateParameters\n-   #59 = Utf8               read\n-   #60 = Utf8               ()I\n-   #61 = Utf8               ret\n-   #62 = Utf8               Exceptions\n-   #63 = Class              #112          // java/io/IOException\n-   #64 = Utf8               ([BII)I\n-   #65 = Utf8               buf\n-   #66 = Utf8               [B\n-   #67 = Utf8               off\n-   #68 = Utf8               len\n-   #69 = Utf8               skip\n-   #70 = Utf8               (J)J\n-   #71 = Utf8               n\n-   #72 = Utf8               J\n-   #73 = Utf8               available\n-   #74 = Utf8               close\n-   #75 = Utf8               ()V\n-   #76 = Class              #113          // java/lang/Throwable\n-   #77 = Utf8               getCompressedCount\n-   #78 = Utf8               ()J\n-   #79 = Utf8               matches\n-   #80 = Utf8               ([BI)Z\n-   #81 = Utf8               signature\n-   #82 = Utf8               length\n-   #83 = Utf8               SourceFile\n-   #84 = Utf8               DeflateCompressorInputStream.java\n-   #85 = Utf8               org/apache/commons/compress/compressors/deflate/DeflateParameters\n-   #86 = NameAndType        #44:#75       // \"<init>\":()V\n-   #87 = NameAndType        #44:#52       // \"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V\n-   #88 = Utf8               java/util/zip/Inflater\n-   #89 = NameAndType        #114:#115     // withZlibHeader:()Z\n-   #90 = NameAndType        #44:#116      // \"<init>\":(Z)V\n-   #91 = NameAndType        #42:#43       // inflater:Ljava/util/zip/Inflater;\n-   #92 = Utf8               java/util/zip/InflaterInputStream\n-   #93 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n-   #94 = NameAndType        #44:#45       // \"<init>\":(Ljava/io/InputStream;)V\n-   #95 = NameAndType        #38:#39       // countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-   #96 = NameAndType        #44:#117      // \"<init>\":(Ljava/io/InputStream;Ljava/util/zip/Inflater;)V\n-   #97 = NameAndType        #40:#41       // in:Ljava/io/InputStream;\n-   #98 = Class              #111          // java/io/InputStream\n-   #99 = NameAndType        #59:#60       // read:()I\n-  #100 = NameAndType        #118:#119     // count:(I)V\n-  #101 = NameAndType        #59:#64       // read:([BII)I\n-  #102 = Class              #120          // org/apache/commons/compress/utils/IOUtils\n-  #103 = NameAndType        #69:#121      // skip:(Ljava/io/InputStream;J)J\n-  #104 = NameAndType        #73:#60       // available:()I\n-  #105 = NameAndType        #74:#75       // close:()V\n-  #106 = NameAndType        #122:#75      // end:()V\n-  #107 = NameAndType        #123:#78      // getBytesRead:()J\n-  #108 = Utf8               org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream\n-  #109 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n-  #110 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n-  #111 = Utf8               java/io/InputStream\n-  #112 = Utf8               java/io/IOException\n-  #113 = Utf8               java/lang/Throwable\n-  #114 = Utf8               withZlibHeader\n-  #115 = Utf8               ()Z\n-  #116 = Utf8               (Z)V\n-  #117 = Utf8               (Ljava/io/InputStream;Ljava/util/zip/Inflater;)V\n-  #118 = Utf8               count\n-  #119 = Utf8               (I)V\n-  #120 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #121 = Utf8               (Ljava/io/InputStream;J)J\n-  #122 = Utf8               end\n-  #123 = Utf8               getBytesRead\n+   #56 = Class              #108          // java/io/InputStream\n+   #57 = Utf8               read\n+   #58 = Utf8               ()I\n+   #59 = Utf8               ret\n+   #60 = Utf8               Exceptions\n+   #61 = Class              #109          // java/io/IOException\n+   #62 = Utf8               ([BII)I\n+   #63 = Utf8               buf\n+   #64 = Utf8               [B\n+   #65 = Utf8               off\n+   #66 = Utf8               len\n+   #67 = Utf8               skip\n+   #68 = Utf8               (J)J\n+   #69 = Utf8               n\n+   #70 = Utf8               J\n+   #71 = Utf8               available\n+   #72 = Utf8               close\n+   #73 = Utf8               ()V\n+   #74 = Class              #110          // java/lang/Throwable\n+   #75 = Utf8               getCompressedCount\n+   #76 = Utf8               ()J\n+   #77 = Utf8               matches\n+   #78 = Utf8               ([BI)Z\n+   #79 = Utf8               signature\n+   #80 = Utf8               length\n+   #81 = Utf8               SourceFile\n+   #82 = Utf8               DeflateCompressorInputStream.java\n+   #83 = Utf8               org/apache/commons/compress/compressors/deflate/DeflateParameters\n+   #84 = NameAndType        #44:#73       // \"<init>\":()V\n+   #85 = NameAndType        #44:#52       // \"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V\n+   #86 = Utf8               java/util/zip/Inflater\n+   #87 = NameAndType        #111:#112     // withZlibHeader:()Z\n+   #88 = NameAndType        #44:#113      // \"<init>\":(Z)V\n+   #89 = NameAndType        #42:#43       // inflater:Ljava/util/zip/Inflater;\n+   #90 = Utf8               java/util/zip/InflaterInputStream\n+   #91 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n+   #92 = NameAndType        #44:#45       // \"<init>\":(Ljava/io/InputStream;)V\n+   #93 = NameAndType        #38:#39       // countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #94 = NameAndType        #44:#114      // \"<init>\":(Ljava/io/InputStream;Ljava/util/zip/Inflater;)V\n+   #95 = NameAndType        #40:#41       // in:Ljava/io/InputStream;\n+   #96 = NameAndType        #57:#58       // read:()I\n+   #97 = NameAndType        #115:#116     // count:(I)V\n+   #98 = NameAndType        #57:#62       // read:([BII)I\n+   #99 = Class              #117          // org/apache/commons/compress/utils/IOUtils\n+  #100 = NameAndType        #67:#118      // skip:(Ljava/io/InputStream;J)J\n+  #101 = NameAndType        #71:#58       // available:()I\n+  #102 = NameAndType        #72:#73       // close:()V\n+  #103 = NameAndType        #119:#73      // end:()V\n+  #104 = NameAndType        #120:#76      // getBytesRead:()J\n+  #105 = Utf8               org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream\n+  #106 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n+  #107 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n+  #108 = Utf8               java/io/InputStream\n+  #109 = Utf8               java/io/IOException\n+  #110 = Utf8               java/lang/Throwable\n+  #111 = Utf8               withZlibHeader\n+  #112 = Utf8               ()Z\n+  #113 = Utf8               (Z)V\n+  #114 = Utf8               (Ljava/io/InputStream;Ljava/util/zip/Inflater;)V\n+  #115 = Utf8               count\n+  #116 = Utf8               (I)V\n+  #117 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #118 = Utf8               (Ljava/io/InputStream;J)J\n+  #119 = Utf8               end\n+  #120 = Utf8               getBytesRead\n {\n   private static final int MAGIC_1 = 120;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 120\n \n   private static final int MAGIC_2a = 1;\n"}]}
