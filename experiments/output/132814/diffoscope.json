{"diffoscope-json-version": 1, "source1": "first/CharSet.class", "source2": "second/CharSet.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,14 +1,14 @@\n \n package org.apache.commons.lang3;\n \n-import java.util.HashMap;\n import java.util.Iterator;\n-import java.util.Collections;\n import java.util.HashSet;\n+import java.util.Collections;\n+import java.util.HashMap;\n import java.util.Set;\n import java.util.Map;\n import java.io.Serializable;\n \n public class CharSet implements Serializable\n {\n     private static final long serialVersionUID = 5947847346149275958L;\n@@ -16,14 +16,29 @@\n     public static final CharSet ASCII_ALPHA;\n     public static final CharSet ASCII_ALPHA_LOWER;\n     public static final CharSet ASCII_ALPHA_UPPER;\n     public static final CharSet ASCII_NUMERIC;\n     protected static final Map<String, CharSet> COMMON;\n     private final Set<CharRange> set;\n     \n+    static {\n+        EMPTY = new CharSet(new String[] { null });\n+        ASCII_ALPHA = new CharSet(new String[] { \"a-zA-Z\" });\n+        ASCII_ALPHA_LOWER = new CharSet(new String[] { \"a-z\" });\n+        ASCII_ALPHA_UPPER = new CharSet(new String[] { \"A-Z\" });\n+        ASCII_NUMERIC = new CharSet(new String[] { \"0-9\" });\n+        (COMMON = Collections.synchronizedMap(new HashMap<String, CharSet>())).put(null, CharSet.EMPTY);\n+        CharSet.COMMON.put(\"\", CharSet.EMPTY);\n+        CharSet.COMMON.put(\"a-zA-Z\", CharSet.ASCII_ALPHA);\n+        CharSet.COMMON.put(\"A-Za-z\", CharSet.ASCII_ALPHA);\n+        CharSet.COMMON.put(\"a-z\", CharSet.ASCII_ALPHA_LOWER);\n+        CharSet.COMMON.put(\"A-Z\", CharSet.ASCII_ALPHA_UPPER);\n+        CharSet.COMMON.put(\"0-9\", CharSet.ASCII_NUMERIC);\n+    }\n+    \n     public static CharSet getInstance(final String... setStrs) {\n         if (setStrs == null) {\n             return null;\n         }\n         if (setStrs.length == 1) {\n             final CharSet common = (CharSet)CharSet.COMMON.get(setStrs[0]);\n             if (common != null) {\n@@ -97,23 +112,8 @@\n         return 89 + this.set.hashCode();\n     }\n     \n     @Override\n     public String toString() {\n         return this.set.toString();\n     }\n-    \n-    static {\n-        EMPTY = new CharSet(new String[] { (String)null });\n-        ASCII_ALPHA = new CharSet(new String[] { \"a-zA-Z\" });\n-        ASCII_ALPHA_LOWER = new CharSet(new String[] { \"a-z\" });\n-        ASCII_ALPHA_UPPER = new CharSet(new String[] { \"A-Z\" });\n-        ASCII_NUMERIC = new CharSet(new String[] { \"0-9\" });\n-        (COMMON = Collections.synchronizedMap(new HashMap<String, CharSet>())).put(null, CharSet.EMPTY);\n-        CharSet.COMMON.put(\"\", CharSet.EMPTY);\n-        CharSet.COMMON.put(\"a-zA-Z\", CharSet.ASCII_ALPHA);\n-        CharSet.COMMON.put(\"A-Za-z\", CharSet.ASCII_ALPHA);\n-        CharSet.COMMON.put(\"a-z\", CharSet.ASCII_ALPHA_LOWER);\n-        CharSet.COMMON.put(\"A-Z\", CharSet.ASCII_ALPHA_UPPER);\n-        CharSet.COMMON.put(\"0-9\", CharSet.ASCII_NUMERIC);\n-    }\n }\n"}]}
