{"diffoscope-json-version": 1, "source1": "first/FailableConsumer.class", "source2": "second/FailableConsumer.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,135 +1,135 @@\n-  SHA-256 checksum b0f4bc1865482d9e2267e192fa71f5d8724ab7eda563dc27531bf7637752fce7\n+  SHA-256 checksum a8a5d5c64e0bd89b4c72b638c08646b597a6f4dd61305e44fc2418295d0aa846\n   Compiled from \"FailableConsumer.java\"\n public interface org.apache.commons.lang3.function.FailableConsumer<T extends java.lang.Object, E extends java.lang.Throwable>\n   minor version: 0\n   major version: 52\n   flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT\n-  this_class: #6                          // org/apache/commons/lang3/function/FailableConsumer\n-  super_class: #7                         // java/lang/Object\n+  this_class: #2                          // org/apache/commons/lang3/function/FailableConsumer\n+  super_class: #23                        // java/lang/Object\n   interfaces: 0, fields: 1, methods: 6, attributes: 5\n Constant pool:\n-   #1 = Fieldref           #6.#34         // org/apache/commons/lang3/function/FailableConsumer.NOP:Lorg/apache/commons/lang3/function/FailableConsumer;\n-   #2 = Methodref          #35.#36        // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #3 = InvokeDynamic      #0:#41         // #0:accept:(Lorg/apache/commons/lang3/function/FailableConsumer;Lorg/apache/commons/lang3/function/FailableConsumer;)Lorg/apache/commons/lang3/function/FailableConsumer;\n-   #4 = InterfaceMethodref #6.#42         // org/apache/commons/lang3/function/FailableConsumer.accept:(Ljava/lang/Object;)V\n-   #5 = InvokeDynamic      #1:#44         // #1:accept:()Lorg/apache/commons/lang3/function/FailableConsumer;\n-   #6 = Class              #45            // org/apache/commons/lang3/function/FailableConsumer\n-   #7 = Class              #46            // java/lang/Object\n-   #8 = Utf8               NOP\n-   #9 = Utf8               Lorg/apache/commons/lang3/function/FailableConsumer;\n-  #10 = Utf8               nop\n-  #11 = Utf8               ()Lorg/apache/commons/lang3/function/FailableConsumer;\n-  #12 = Utf8               Code\n-  #13 = Utf8               LineNumberTable\n-  #14 = Utf8               Signature\n-  #15 = Utf8               <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableConsumer<TT;TE;>;\n-  #16 = Utf8               accept\n-  #17 = Utf8               (Ljava/lang/Object;)V\n-  #18 = Utf8               Exceptions\n-  #19 = Class              #47            // java/lang/Throwable\n-  #20 = Utf8               (TT;)V^TE;\n-  #21 = Utf8               andThen\n-  #22 = Utf8               (Lorg/apache/commons/lang3/function/FailableConsumer;)Lorg/apache/commons/lang3/function/FailableConsumer;\n-  #23 = Utf8               (Lorg/apache/commons/lang3/function/FailableConsumer<-TT;TE;>;)Lorg/apache/commons/lang3/function/FailableConsumer<TT;TE;>;\n-  #24 = Utf8               lambda$andThen$1\n-  #25 = Utf8               (Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n-  #26 = Utf8               lambda$static$0\n-  #27 = Utf8               <clinit>\n-  #28 = Utf8               ()V\n-  #29 = Utf8               <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>Ljava/lang/Object;\n-  #30 = Utf8               SourceFile\n-  #31 = Utf8               FailableConsumer.java\n-  #32 = Utf8               RuntimeVisibleAnnotations\n-  #33 = Utf8               Ljava/lang/FunctionalInterface;\n-  #34 = NameAndType        #8:#9          // NOP:Lorg/apache/commons/lang3/function/FailableConsumer;\n-  #35 = Class              #48            // java/util/Objects\n-  #36 = NameAndType        #49:#50        // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #37 = Utf8               BootstrapMethods\n-  #38 = MethodHandle       6:#51          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #39 = MethodType         #17            //  (Ljava/lang/Object;)V\n-  #40 = MethodHandle       7:#52          // REF_invokeSpecial org/apache/commons/lang3/function/FailableConsumer.lambda$andThen$1:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n-  #41 = NameAndType        #16:#53        // accept:(Lorg/apache/commons/lang3/function/FailableConsumer;Lorg/apache/commons/lang3/function/FailableConsumer;)Lorg/apache/commons/lang3/function/FailableConsumer;\n-  #42 = NameAndType        #16:#17        // accept:(Ljava/lang/Object;)V\n-  #43 = MethodHandle       6:#54          // REF_invokeStatic org/apache/commons/lang3/function/FailableConsumer.lambda$static$0:(Ljava/lang/Object;)V\n-  #44 = NameAndType        #16:#11        // accept:()Lorg/apache/commons/lang3/function/FailableConsumer;\n-  #45 = Utf8               org/apache/commons/lang3/function/FailableConsumer\n-  #46 = Utf8               java/lang/Object\n-  #47 = Utf8               java/lang/Throwable\n-  #48 = Utf8               java/util/Objects\n-  #49 = Utf8               requireNonNull\n-  #50 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #51 = Methodref          #55.#56        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #52 = InterfaceMethodref #6.#57         // org/apache/commons/lang3/function/FailableConsumer.lambda$andThen$1:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n-  #53 = Utf8               (Lorg/apache/commons/lang3/function/FailableConsumer;Lorg/apache/commons/lang3/function/FailableConsumer;)Lorg/apache/commons/lang3/function/FailableConsumer;\n-  #54 = InterfaceMethodref #6.#58         // org/apache/commons/lang3/function/FailableConsumer.lambda$static$0:(Ljava/lang/Object;)V\n-  #55 = Class              #59            // java/lang/invoke/LambdaMetafactory\n-  #56 = NameAndType        #60:#64        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #57 = NameAndType        #24:#25        // lambda$andThen$1:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n-  #58 = NameAndType        #26:#17        // lambda$static$0:(Ljava/lang/Object;)V\n-  #59 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #60 = Utf8               metafactory\n-  #61 = Class              #66            // java/lang/invoke/MethodHandles$Lookup\n-  #62 = Utf8               Lookup\n-  #63 = Utf8               InnerClasses\n-  #64 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #65 = Class              #67            // java/lang/invoke/MethodHandles\n-  #66 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #67 = Utf8               java/lang/invoke/MethodHandles\n+   #1 = Fieldref           #2.#3          // org/apache/commons/lang3/function/FailableConsumer.NOP:Lorg/apache/commons/lang3/function/FailableConsumer;\n+   #2 = Class              #4             // org/apache/commons/lang3/function/FailableConsumer\n+   #3 = NameAndType        #5:#6          // NOP:Lorg/apache/commons/lang3/function/FailableConsumer;\n+   #4 = Utf8               org/apache/commons/lang3/function/FailableConsumer\n+   #5 = Utf8               NOP\n+   #6 = Utf8               Lorg/apache/commons/lang3/function/FailableConsumer;\n+   #7 = Methodref          #8.#9          // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #8 = Class              #10            // java/util/Objects\n+   #9 = NameAndType        #11:#12        // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #10 = Utf8               java/util/Objects\n+  #11 = Utf8               requireNonNull\n+  #12 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #13 = InvokeDynamic      #0:#14         // #0:accept:(Lorg/apache/commons/lang3/function/FailableConsumer;Lorg/apache/commons/lang3/function/FailableConsumer;)Lorg/apache/commons/lang3/function/FailableConsumer;\n+  #14 = NameAndType        #15:#16        // accept:(Lorg/apache/commons/lang3/function/FailableConsumer;Lorg/apache/commons/lang3/function/FailableConsumer;)Lorg/apache/commons/lang3/function/FailableConsumer;\n+  #15 = Utf8               accept\n+  #16 = Utf8               (Lorg/apache/commons/lang3/function/FailableConsumer;Lorg/apache/commons/lang3/function/FailableConsumer;)Lorg/apache/commons/lang3/function/FailableConsumer;\n+  #17 = InterfaceMethodref #2.#18         // org/apache/commons/lang3/function/FailableConsumer.accept:(Ljava/lang/Object;)V\n+  #18 = NameAndType        #15:#19        // accept:(Ljava/lang/Object;)V\n+  #19 = Utf8               (Ljava/lang/Object;)V\n+  #20 = InvokeDynamic      #1:#21         // #1:accept:()Lorg/apache/commons/lang3/function/FailableConsumer;\n+  #21 = NameAndType        #15:#22        // accept:()Lorg/apache/commons/lang3/function/FailableConsumer;\n+  #22 = Utf8               ()Lorg/apache/commons/lang3/function/FailableConsumer;\n+  #23 = Class              #24            // java/lang/Object\n+  #24 = Utf8               java/lang/Object\n+  #25 = Utf8               nop\n+  #26 = Utf8               Code\n+  #27 = Utf8               LineNumberTable\n+  #28 = Utf8               Signature\n+  #29 = Utf8               <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableConsumer<TT;TE;>;\n+  #30 = Utf8               Exceptions\n+  #31 = Class              #32            // java/lang/Throwable\n+  #32 = Utf8               java/lang/Throwable\n+  #33 = Utf8               (TT;)V^TE;\n+  #34 = Utf8               andThen\n+  #35 = Utf8               (Lorg/apache/commons/lang3/function/FailableConsumer;)Lorg/apache/commons/lang3/function/FailableConsumer;\n+  #36 = Utf8               (Lorg/apache/commons/lang3/function/FailableConsumer<-TT;TE;>;)Lorg/apache/commons/lang3/function/FailableConsumer<TT;TE;>;\n+  #37 = Utf8               lambda$andThen$1\n+  #38 = Utf8               (Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n+  #39 = Utf8               lambda$static$0\n+  #40 = Utf8               <clinit>\n+  #41 = Utf8               ()V\n+  #42 = Utf8               <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>Ljava/lang/Object;\n+  #43 = Utf8               SourceFile\n+  #44 = Utf8               FailableConsumer.java\n+  #45 = Utf8               RuntimeVisibleAnnotations\n+  #46 = Utf8               Ljava/lang/FunctionalInterface;\n+  #47 = Utf8               BootstrapMethods\n+  #48 = MethodHandle       6:#49          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #49 = Methodref          #50.#51        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #50 = Class              #52            // java/lang/invoke/LambdaMetafactory\n+  #51 = NameAndType        #53:#54        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #52 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #53 = Utf8               metafactory\n+  #54 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #55 = MethodType         #19            //  (Ljava/lang/Object;)V\n+  #56 = MethodHandle       7:#57          // REF_invokeSpecial org/apache/commons/lang3/function/FailableConsumer.lambda$andThen$1:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n+  #57 = InterfaceMethodref #2.#58         // org/apache/commons/lang3/function/FailableConsumer.lambda$andThen$1:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n+  #58 = NameAndType        #37:#38        // lambda$andThen$1:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n+  #59 = MethodHandle       6:#60          // REF_invokeStatic org/apache/commons/lang3/function/FailableConsumer.lambda$static$0:(Ljava/lang/Object;)V\n+  #60 = InterfaceMethodref #2.#61         // org/apache/commons/lang3/function/FailableConsumer.lambda$static$0:(Ljava/lang/Object;)V\n+  #61 = NameAndType        #39:#19        // lambda$static$0:(Ljava/lang/Object;)V\n+  #62 = Utf8               InnerClasses\n+  #63 = Class              #64            // java/lang/invoke/MethodHandles$Lookup\n+  #64 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #65 = Class              #66            // java/lang/invoke/MethodHandles\n+  #66 = Utf8               java/lang/invoke/MethodHandles\n+  #67 = Utf8               Lookup\n {\n   public static final org.apache.commons.lang3.function.FailableConsumer NOP;\n     descriptor: Lorg/apache/commons/lang3/function/FailableConsumer;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public static <T extends java.lang.Object, E extends java.lang.Throwable> org.apache.commons.lang3.function.FailableConsumer<T, E> nop();\n     descriptor: ()Lorg/apache/commons/lang3/function/FailableConsumer;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: getstatic     #1                  // Field NOP:Lorg/apache/commons/lang3/function/FailableConsumer;\n          3: areturn\n       LineNumberTable:\n         line 45: 0\n-    Signature: #15                          // <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableConsumer<TT;TE;>;\n+    Signature: #29                          // <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableConsumer<TT;TE;>;\n \n   public abstract void accept(T) throws E;\n     descriptor: (Ljava/lang/Object;)V\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.lang.Throwable\n-    Signature: #20                          // (TT;)V^TE;\n+    Signature: #33                          // (TT;)V^TE;\n \n   public default org.apache.commons.lang3.function.FailableConsumer<T, E> andThen(org.apache.commons.lang3.function.FailableConsumer<? super T, E>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableConsumer;)Lorg/apache/commons/lang3/function/FailableConsumer;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         1: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          4: pop\n          5: aload_0\n          6: aload_1\n-         7: invokedynamic #3,  0              // InvokeDynamic #0:accept:(Lorg/apache/commons/lang3/function/FailableConsumer;Lorg/apache/commons/lang3/function/FailableConsumer;)Lorg/apache/commons/lang3/function/FailableConsumer;\n+         7: invokedynamic #13,  0             // InvokeDynamic #0:accept:(Lorg/apache/commons/lang3/function/FailableConsumer;Lorg/apache/commons/lang3/function/FailableConsumer;)Lorg/apache/commons/lang3/function/FailableConsumer;\n         12: areturn\n       LineNumberTable:\n         line 64: 0\n         line 65: 5\n-    Signature: #23                          // (Lorg/apache/commons/lang3/function/FailableConsumer<-TT;TE;>;)Lorg/apache/commons/lang3/function/FailableConsumer<TT;TE;>;\n+    Signature: #36                          // (Lorg/apache/commons/lang3/function/FailableConsumer<-TT;TE;>;)Lorg/apache/commons/lang3/function/FailableConsumer<TT;TE;>;\n \n   private void lambda$andThen$1(org.apache.commons.lang3.function.FailableConsumer, java.lang.Object) throws java.lang.Throwable;\n     descriptor: (Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_2\n-         2: invokeinterface #4,  2            // InterfaceMethod accept:(Ljava/lang/Object;)V\n+         2: invokeinterface #17,  2           // InterfaceMethod accept:(Ljava/lang/Object;)V\n          7: aload_1\n          8: aload_2\n-         9: invokeinterface #4,  2            // InterfaceMethod accept:(Ljava/lang/Object;)V\n+         9: invokeinterface #17,  2           // InterfaceMethod accept:(Ljava/lang/Object;)V\n         14: return\n       LineNumberTable:\n         line 66: 0\n         line 67: 7\n         line 68: 14\n     Exceptions:\n       throws java.lang.Throwable\n@@ -146,31 +146,31 @@\n       throws java.lang.Throwable\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: invokedynamic #5,  0              // InvokeDynamic #1:accept:()Lorg/apache/commons/lang3/function/FailableConsumer;\n+         0: invokedynamic #20,  0             // InvokeDynamic #1:accept:()Lorg/apache/commons/lang3/function/FailableConsumer;\n          5: putstatic     #1                  // Field NOP:Lorg/apache/commons/lang3/function/FailableConsumer;\n          8: return\n       LineNumberTable:\n         line 35: 0\n }\n-Signature: #29                          // <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>Ljava/lang/Object;\n+Signature: #42                          // <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>Ljava/lang/Object;\n SourceFile: \"FailableConsumer.java\"\n RuntimeVisibleAnnotations:\n-  0: #33()\n+  0: #46()\n     java.lang.FunctionalInterface\n-InnerClasses:\n-  public static final #62= #61 of #65;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #38 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #48 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #39 (Ljava/lang/Object;)V\n-      #40 REF_invokeSpecial org/apache/commons/lang3/function/FailableConsumer.lambda$andThen$1:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n-      #39 (Ljava/lang/Object;)V\n-  1: #38 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #55 (Ljava/lang/Object;)V\n+      #56 REF_invokeSpecial org/apache/commons/lang3/function/FailableConsumer.lambda$andThen$1:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n+      #55 (Ljava/lang/Object;)V\n+  1: #48 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #39 (Ljava/lang/Object;)V\n-      #43 REF_invokeStatic org/apache/commons/lang3/function/FailableConsumer.lambda$static$0:(Ljava/lang/Object;)V\n-      #39 (Ljava/lang/Object;)V\n+      #55 (Ljava/lang/Object;)V\n+      #59 REF_invokeStatic org/apache/commons/lang3/function/FailableConsumer.lambda$static$0:(Ljava/lang/Object;)V\n+      #55 (Ljava/lang/Object;)V\n+InnerClasses:\n+  public static final #67= #63 of #65;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
