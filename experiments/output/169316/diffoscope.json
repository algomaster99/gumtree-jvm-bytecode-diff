{"diffoscope-json-version": 1, "source1": "first/ExceptionUtils.class", "source2": "second/ExceptionUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,121 +1,121 @@\n-  SHA-256 checksum de82d5e3ca199a05d04344de858fb31c2bc235de7d1d1aae8c8385d3e275c539\n+  SHA-256 checksum b0075cb249b0ff14a3c3504795e4295e173c23e7afe5fcc92aee18911ecc4cc9\n   Compiled from \"ExceptionUtils.java\"\n public class org.apache.commons.lang3.exception.ExceptionUtils\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #50                         // org/apache/commons/lang3/exception/ExceptionUtils\n   super_class: #20                        // java/lang/Object\n   interfaces: 0, fields: 2, methods: 30, attributes: 1\n Constant pool:\n-    #1 = Methodref          #20.#239      // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #50.#240      // org/apache/commons/lang3/exception/ExceptionUtils.CAUSE_METHOD_NAMES:[Ljava/lang/String;\n-    #3 = Methodref          #241.#242     // org/apache/commons/lang3/ArrayUtils.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n+    #1 = Methodref          #20.#235      // java/lang/Object.\"<init>\":()V\n+    #2 = Fieldref           #50.#236      // org/apache/commons/lang3/exception/ExceptionUtils.CAUSE_METHOD_NAMES:[Ljava/lang/String;\n+    #3 = Methodref          #237.#238     // org/apache/commons/lang3/ArrayUtils.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n     #4 = Class              #109          // \"[Ljava/lang/String;\"\n-    #5 = Methodref          #50.#243      // org/apache/commons/lang3/exception/ExceptionUtils.getCause:(Ljava/lang/Throwable;[Ljava/lang/String;)Ljava/lang/Throwable;\n-    #6 = Methodref          #12.#244      // java/lang/Throwable.getCause:()Ljava/lang/Throwable;\n-    #7 = Methodref          #50.#245      // org/apache/commons/lang3/exception/ExceptionUtils.getCauseUsingMethodName:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;\n-    #8 = Methodref          #50.#246      // org/apache/commons/lang3/exception/ExceptionUtils.getThrowableList:(Ljava/lang/Throwable;)Ljava/util/List;\n-    #9 = InterfaceMethodref #247.#248     // java/util/List.isEmpty:()Z\n-   #10 = InterfaceMethodref #247.#249     // java/util/List.size:()I\n-   #11 = InterfaceMethodref #247.#250     // java/util/List.get:(I)Ljava/lang/Object;\n-   #12 = Class              #251          // java/lang/Throwable\n-   #13 = Methodref          #20.#252      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #14 = Class              #253          // java/lang/Class\n-   #15 = Methodref          #14.#254      // java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n-   #16 = Class              #255          // java/lang/NoSuchMethodException\n-   #17 = Class              #256          // java/lang/SecurityException\n-   #18 = Methodref          #257.#258     // java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;\n-   #19 = Methodref          #14.#259      // java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z\n-   #20 = Class              #260          // java/lang/Object\n-   #21 = Methodref          #257.#261     // java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n-   #22 = Class              #262          // java/lang/IllegalAccessException\n-   #23 = Class              #263          // java/lang/IllegalArgumentException\n-   #24 = Class              #264          // java/lang/reflect/InvocationTargetException\n-   #25 = InterfaceMethodref #247.#265     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-   #26 = Class              #172          // \"[Ljava/lang/Throwable;\"\n-   #27 = Class              #266          // java/util/ArrayList\n-   #28 = Methodref          #27.#239      // java/util/ArrayList.\"<init>\":()V\n-   #29 = InterfaceMethodref #247.#267     // java/util/List.contains:(Ljava/lang/Object;)Z\n-   #30 = InterfaceMethodref #247.#268     // java/util/List.add:(Ljava/lang/Object;)Z\n-   #31 = Methodref          #50.#269      // org/apache/commons/lang3/exception/ExceptionUtils.indexOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n-   #32 = Methodref          #50.#270      // org/apache/commons/lang3/exception/ExceptionUtils.getThrowables:(Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n-   #33 = Methodref          #20.#271      // java/lang/Object.equals:(Ljava/lang/Object;)Z\n-   #34 = Fieldref           #272.#273     // java/lang/System.err:Ljava/io/PrintStream;\n-   #35 = Methodref          #50.#274      // org/apache/commons/lang3/exception/ExceptionUtils.printRootCauseStackTrace:(Ljava/lang/Throwable;Ljava/io/PrintStream;)V\n-   #36 = String             #275          // The PrintStream must not be null\n-   #37 = Methodref          #276.#277     // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-   #38 = Methodref          #50.#278      // org/apache/commons/lang3/exception/ExceptionUtils.getRootCauseStackTrace:(Ljava/lang/Throwable;)[Ljava/lang/String;\n-   #39 = Methodref          #279.#280     // java/io/PrintStream.println:(Ljava/lang/String;)V\n-   #40 = Methodref          #279.#281     // java/io/PrintStream.flush:()V\n-   #41 = String             #282          // The PrintWriter must not be null\n-   #42 = Methodref          #62.#280      // java/io/PrintWriter.println:(Ljava/lang/String;)V\n-   #43 = Methodref          #62.#281      // java/io/PrintWriter.flush:()V\n-   #44 = Fieldref           #241.#283     // org/apache/commons/lang3/ArrayUtils.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-   #45 = Methodref          #50.#284      // org/apache/commons/lang3/exception/ExceptionUtils.getStackFrameList:(Ljava/lang/Throwable;)Ljava/util/List;\n-   #46 = Methodref          #50.#285      // org/apache/commons/lang3/exception/ExceptionUtils.removeCommonFrames:(Ljava/util/List;Ljava/util/List;)V\n-   #47 = Methodref          #12.#286      // java/lang/Throwable.toString:()Ljava/lang/String;\n-   #48 = Class              #287          // java/lang/StringBuilder\n-   #49 = Methodref          #48.#239      // java/lang/StringBuilder.\"<init>\":()V\n-   #50 = Class              #288          // org/apache/commons/lang3/exception/ExceptionUtils\n-   #51 = String             #289          //  [wrapped]\n-   #52 = Methodref          #48.#290      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #53 = Methodref          #48.#286      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #54 = InterfaceMethodref #247.#291     // java/util/List.addAll:(Ljava/util/Collection;)Z\n-   #55 = Class              #292          // java/lang/String\n-   #56 = String             #293          // The List must not be null\n-   #57 = Methodref          #23.#294      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #58 = Methodref          #55.#271      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #59 = InterfaceMethodref #247.#295     // java/util/List.remove:(I)Ljava/lang/Object;\n-   #60 = Class              #296          // java/io/StringWriter\n-   #61 = Methodref          #60.#239      // java/io/StringWriter.\"<init>\":()V\n-   #62 = Class              #297          // java/io/PrintWriter\n-   #63 = Methodref          #62.#298      // java/io/PrintWriter.\"<init>\":(Ljava/io/Writer;Z)V\n-   #64 = Methodref          #12.#299      // java/lang/Throwable.printStackTrace:(Ljava/io/PrintWriter;)V\n-   #65 = Methodref          #60.#300      // java/io/StringWriter.getBuffer:()Ljava/lang/StringBuffer;\n-   #66 = Methodref          #301.#286     // java/lang/StringBuffer.toString:()Ljava/lang/String;\n-   #67 = Methodref          #50.#302      // org/apache/commons/lang3/exception/ExceptionUtils.getStackTrace:(Ljava/lang/Throwable;)Ljava/lang/String;\n-   #68 = Methodref          #50.#303      // org/apache/commons/lang3/exception/ExceptionUtils.getStackFrames:(Ljava/lang/String;)[Ljava/lang/String;\n-   #69 = Methodref          #272.#304     // java/lang/System.lineSeparator:()Ljava/lang/String;\n-   #70 = Class              #305          // java/util/StringTokenizer\n-   #71 = Methodref          #70.#306      // java/util/StringTokenizer.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n-   #72 = Methodref          #70.#307      // java/util/StringTokenizer.hasMoreTokens:()Z\n-   #73 = Methodref          #70.#308      // java/util/StringTokenizer.nextToken:()Ljava/lang/String;\n-   #74 = String             #214          // at\n-   #75 = Methodref          #55.#309      // java/lang/String.indexOf:(Ljava/lang/String;)I\n-   #76 = Methodref          #55.#310      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #77 = Methodref          #55.#311      // java/lang/String.trim:()Ljava/lang/String;\n-   #78 = Methodref          #55.#248      // java/lang/String.isEmpty:()Z\n-   #79 = Class              #312          // org/apache/commons/lang3/StringUtils\n-   #80 = String             #313          //\n-   #81 = Methodref          #314.#315     // org/apache/commons/lang3/ClassUtils.getShortClassName:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-   #82 = Methodref          #12.#316      // java/lang/Throwable.getMessage:()Ljava/lang/String;\n-   #83 = String             #317          // :\n-   #84 = Methodref          #79.#318      // org/apache/commons/lang3/StringUtils.defaultString:(Ljava/lang/String;)Ljava/lang/String;\n-   #85 = Methodref          #50.#319      // org/apache/commons/lang3/exception/ExceptionUtils.getRootCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;\n-   #86 = Methodref          #50.#320      // org/apache/commons/lang3/exception/ExceptionUtils.getMessage:(Ljava/lang/Throwable;)Ljava/lang/String;\n-   #87 = Methodref          #50.#321      // org/apache/commons/lang3/exception/ExceptionUtils.typeErasure:(Ljava/lang/Throwable;)Ljava/lang/Object;\n-   #88 = Class              #322          // java/lang/RuntimeException\n-   #89 = Class              #323          // java/lang/Error\n-   #90 = Class              #324          // java/lang/reflect/UndeclaredThrowableException\n-   #91 = Methodref          #90.#325      // java/lang/reflect/UndeclaredThrowableException.\"<init>\":(Ljava/lang/Throwable;)V\n-   #92 = Methodref          #14.#326      // java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n+    #5 = Methodref          #50.#239      // org/apache/commons/lang3/exception/ExceptionUtils.getCause:(Ljava/lang/Throwable;[Ljava/lang/String;)Ljava/lang/Throwable;\n+    #6 = Methodref          #12.#240      // java/lang/Throwable.getCause:()Ljava/lang/Throwable;\n+    #7 = Methodref          #50.#241      // org/apache/commons/lang3/exception/ExceptionUtils.getCauseUsingMethodName:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;\n+    #8 = Methodref          #50.#242      // org/apache/commons/lang3/exception/ExceptionUtils.getThrowableList:(Ljava/lang/Throwable;)Ljava/util/List;\n+    #9 = InterfaceMethodref #137.#243     // java/util/List.isEmpty:()Z\n+   #10 = InterfaceMethodref #137.#244     // java/util/List.size:()I\n+   #11 = InterfaceMethodref #137.#245     // java/util/List.get:(I)Ljava/lang/Object;\n+   #12 = Class              #246          // java/lang/Throwable\n+   #13 = Methodref          #20.#247      // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #14 = Class              #248          // java/lang/Class\n+   #15 = Methodref          #14.#249      // java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n+   #16 = Class              #250          // java/lang/NoSuchMethodException\n+   #17 = Class              #251          // java/lang/SecurityException\n+   #18 = Methodref          #142.#252     // java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;\n+   #19 = Methodref          #14.#253      // java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z\n+   #20 = Class              #254          // java/lang/Object\n+   #21 = Methodref          #142.#255     // java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n+   #22 = Class              #256          // java/lang/IllegalAccessException\n+   #23 = Class              #257          // java/lang/IllegalArgumentException\n+   #24 = Class              #258          // java/lang/reflect/InvocationTargetException\n+   #25 = InterfaceMethodref #137.#259     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+   #26 = Class              #170          // \"[Ljava/lang/Throwable;\"\n+   #27 = Class              #260          // java/util/ArrayList\n+   #28 = Methodref          #27.#235      // java/util/ArrayList.\"<init>\":()V\n+   #29 = InterfaceMethodref #137.#261     // java/util/List.contains:(Ljava/lang/Object;)Z\n+   #30 = InterfaceMethodref #137.#262     // java/util/List.add:(Ljava/lang/Object;)Z\n+   #31 = Methodref          #50.#263      // org/apache/commons/lang3/exception/ExceptionUtils.indexOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n+   #32 = Methodref          #50.#264      // org/apache/commons/lang3/exception/ExceptionUtils.getThrowables:(Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n+   #33 = Methodref          #20.#265      // java/lang/Object.equals:(Ljava/lang/Object;)Z\n+   #34 = Fieldref           #266.#267     // java/lang/System.err:Ljava/io/PrintStream;\n+   #35 = Methodref          #50.#268      // org/apache/commons/lang3/exception/ExceptionUtils.printRootCauseStackTrace:(Ljava/lang/Throwable;Ljava/io/PrintStream;)V\n+   #36 = String             #269          // The PrintStream must not be null\n+   #37 = Methodref          #270.#271     // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+   #38 = Methodref          #50.#272      // org/apache/commons/lang3/exception/ExceptionUtils.getRootCauseStackTrace:(Ljava/lang/Throwable;)[Ljava/lang/String;\n+   #39 = Methodref          #179.#273     // java/io/PrintStream.println:(Ljava/lang/String;)V\n+   #40 = Methodref          #179.#274     // java/io/PrintStream.flush:()V\n+   #41 = String             #275          // The PrintWriter must not be null\n+   #42 = Methodref          #62.#273      // java/io/PrintWriter.println:(Ljava/lang/String;)V\n+   #43 = Methodref          #62.#274      // java/io/PrintWriter.flush:()V\n+   #44 = Fieldref           #237.#276     // org/apache/commons/lang3/ArrayUtils.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+   #45 = Methodref          #50.#277      // org/apache/commons/lang3/exception/ExceptionUtils.getStackFrameList:(Ljava/lang/Throwable;)Ljava/util/List;\n+   #46 = Methodref          #50.#278      // org/apache/commons/lang3/exception/ExceptionUtils.removeCommonFrames:(Ljava/util/List;Ljava/util/List;)V\n+   #47 = Methodref          #12.#279      // java/lang/Throwable.toString:()Ljava/lang/String;\n+   #48 = Class              #280          // java/lang/StringBuilder\n+   #49 = Methodref          #48.#235      // java/lang/StringBuilder.\"<init>\":()V\n+   #50 = Class              #281          // org/apache/commons/lang3/exception/ExceptionUtils\n+   #51 = String             #282          //  [wrapped]\n+   #52 = Methodref          #48.#283      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #53 = Methodref          #48.#279      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #54 = InterfaceMethodref #137.#284     // java/util/List.addAll:(Ljava/util/Collection;)Z\n+   #55 = Class              #285          // java/lang/String\n+   #56 = String             #286          // The List must not be null\n+   #57 = Methodref          #23.#287      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #58 = Methodref          #55.#265      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #59 = InterfaceMethodref #137.#288     // java/util/List.remove:(I)Ljava/lang/Object;\n+   #60 = Class              #289          // java/io/StringWriter\n+   #61 = Methodref          #60.#235      // java/io/StringWriter.\"<init>\":()V\n+   #62 = Class              #290          // java/io/PrintWriter\n+   #63 = Methodref          #62.#291      // java/io/PrintWriter.\"<init>\":(Ljava/io/Writer;Z)V\n+   #64 = Methodref          #12.#292      // java/lang/Throwable.printStackTrace:(Ljava/io/PrintWriter;)V\n+   #65 = Methodref          #60.#293      // java/io/StringWriter.getBuffer:()Ljava/lang/StringBuffer;\n+   #66 = Methodref          #294.#279     // java/lang/StringBuffer.toString:()Ljava/lang/String;\n+   #67 = Methodref          #50.#295      // org/apache/commons/lang3/exception/ExceptionUtils.getStackTrace:(Ljava/lang/Throwable;)Ljava/lang/String;\n+   #68 = Methodref          #50.#296      // org/apache/commons/lang3/exception/ExceptionUtils.getStackFrames:(Ljava/lang/String;)[Ljava/lang/String;\n+   #69 = Methodref          #266.#297     // java/lang/System.lineSeparator:()Ljava/lang/String;\n+   #70 = Class              #298          // java/util/StringTokenizer\n+   #71 = Methodref          #70.#299      // java/util/StringTokenizer.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+   #72 = Methodref          #70.#300      // java/util/StringTokenizer.hasMoreTokens:()Z\n+   #73 = Methodref          #70.#301      // java/util/StringTokenizer.nextToken:()Ljava/lang/String;\n+   #74 = String             #210          // at\n+   #75 = Methodref          #55.#302      // java/lang/String.indexOf:(Ljava/lang/String;)I\n+   #76 = Methodref          #55.#303      // java/lang/String.substring:(II)Ljava/lang/String;\n+   #77 = Methodref          #55.#304      // java/lang/String.trim:()Ljava/lang/String;\n+   #78 = Methodref          #55.#243      // java/lang/String.isEmpty:()Z\n+   #79 = Class              #305          // org/apache/commons/lang3/StringUtils\n+   #80 = String             #306          //\n+   #81 = Methodref          #307.#308     // org/apache/commons/lang3/ClassUtils.getShortClassName:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #82 = Methodref          #12.#309      // java/lang/Throwable.getMessage:()Ljava/lang/String;\n+   #83 = String             #310          // :\n+   #84 = Methodref          #79.#311      // org/apache/commons/lang3/StringUtils.defaultString:(Ljava/lang/String;)Ljava/lang/String;\n+   #85 = Methodref          #50.#312      // org/apache/commons/lang3/exception/ExceptionUtils.getRootCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;\n+   #86 = Methodref          #50.#313      // org/apache/commons/lang3/exception/ExceptionUtils.getMessage:(Ljava/lang/Throwable;)Ljava/lang/String;\n+   #87 = Methodref          #50.#314      // org/apache/commons/lang3/exception/ExceptionUtils.typeErasure:(Ljava/lang/Throwable;)Ljava/lang/Object;\n+   #88 = Class              #315          // java/lang/RuntimeException\n+   #89 = Class              #316          // java/lang/Error\n+   #90 = Class              #317          // java/lang/reflect/UndeclaredThrowableException\n+   #91 = Methodref          #90.#318      // java/lang/reflect/UndeclaredThrowableException.\"<init>\":(Ljava/lang/Throwable;)V\n+   #92 = Methodref          #14.#319      // java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n    #93 = String             #122          // getCause\n-   #94 = String             #327          // getNextException\n-   #95 = String             #328          // getTargetException\n-   #96 = String             #329          // getException\n-   #97 = String             #330          // getSourceException\n-   #98 = String             #133          // getRootCause\n-   #99 = String             #331          // getCausedByException\n-  #100 = String             #332          // getNested\n-  #101 = String             #333          // getLinkedException\n-  #102 = String             #334          // getNestedException\n-  #103 = String             #335          // getLinkedCause\n-  #104 = String             #336          // getThrowable\n+   #94 = String             #320          // getNextException\n+   #95 = String             #321          // getTargetException\n+   #96 = String             #322          // getException\n+   #97 = String             #323          // getSourceException\n+   #98 = String             #132          // getRootCause\n+   #99 = String             #324          // getCausedByException\n+  #100 = String             #325          // getNested\n+  #101 = String             #326          // getLinkedException\n+  #102 = String             #327          // getNestedException\n+  #103 = String             #328          // getLinkedCause\n+  #104 = String             #329          // getThrowable\n   #105 = Utf8               WRAPPED_MARKER\n   #106 = Utf8               Ljava/lang/String;\n   #107 = Utf8               ConstantValue\n   #108 = Utf8               CAUSE_METHOD_NAMES\n   #109 = Utf8               [Ljava/lang/String;\n   #110 = Utf8               <init>\n   #111 = Utf8               ()V\n@@ -135,283 +135,276 @@\n   #125 = Utf8               Ljava/lang/Throwable;\n   #126 = Utf8               (Ljava/lang/Throwable;[Ljava/lang/String;)Ljava/lang/Throwable;\n   #127 = Utf8               cause\n   #128 = Utf8               legacyCause\n   #129 = Utf8               methodName\n   #130 = Utf8               methodNames\n   #131 = Utf8               StackMapTable\n-  #132 = Class              #251          // java/lang/Throwable\n-  #133 = Utf8               getRootCause\n-  #134 = Utf8               list\n-  #135 = Utf8               Ljava/util/List;\n-  #136 = Utf8               LocalVariableTypeTable\n-  #137 = Utf8               Ljava/util/List<Ljava/lang/Throwable;>;\n-  #138 = Class              #337          // java/util/List\n-  #139 = Utf8               getCauseUsingMethodName\n-  #140 = Utf8               (Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;\n-  #141 = Utf8               method\n-  #142 = Utf8               Ljava/lang/reflect/Method;\n-  #143 = Class              #292          // java/lang/String\n-  #144 = Class              #338          // java/lang/reflect/Method\n-  #145 = Class              #339          // java/lang/Exception\n-  #146 = Utf8               getThrowableCount\n-  #147 = Utf8               (Ljava/lang/Throwable;)I\n-  #148 = Utf8               getThrowables\n-  #149 = Utf8               (Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n-  #150 = Utf8               getThrowableList\n-  #151 = Utf8               (Ljava/lang/Throwable;)Ljava/util/List;\n-  #152 = Utf8               Signature\n-  #153 = Utf8               (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/Throwable;>;\n-  #154 = Utf8               indexOfThrowable\n-  #155 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;)I\n-  #156 = Utf8               clazz\n-  #157 = Utf8               Ljava/lang/Class;\n-  #158 = Utf8               Ljava/lang/Class<*>;\n-  #159 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<*>;)I\n-  #160 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;I)I\n-  #161 = Utf8               fromIndex\n-  #162 = Utf8               I\n-  #163 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<*>;I)I\n-  #164 = Utf8               indexOfType\n-  #165 = Utf8               type\n-  #166 = Utf8               indexOf\n-  #167 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n-  #168 = Utf8               i\n-  #169 = Utf8               subclass\n-  #170 = Utf8               Z\n-  #171 = Utf8               throwables\n-  #172 = Utf8               [Ljava/lang/Throwable;\n-  #173 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<*>;IZ)I\n-  #174 = Utf8               printRootCauseStackTrace\n-  #175 = Utf8               (Ljava/lang/Throwable;)V\n-  #176 = Utf8               (Ljava/lang/Throwable;Ljava/io/PrintStream;)V\n-  #177 = Utf8               element\n-  #178 = Utf8               stream\n-  #179 = Utf8               Ljava/io/PrintStream;\n-  #180 = Utf8               trace\n-  #181 = Class              #340          // java/io/PrintStream\n-  #182 = Utf8               (Ljava/lang/Throwable;Ljava/io/PrintWriter;)V\n-  #183 = Utf8               writer\n-  #184 = Utf8               Ljava/io/PrintWriter;\n-  #185 = Class              #297          // java/io/PrintWriter\n-  #186 = Utf8               getRootCauseStackTrace\n-  #187 = Utf8               (Ljava/lang/Throwable;)[Ljava/lang/String;\n-  #188 = Utf8               count\n-  #189 = Utf8               frames\n-  #190 = Utf8               nextTrace\n-  #191 = Utf8               Ljava/util/List<Ljava/lang/String;>;\n-  #192 = Utf8               removeCommonFrames\n-  #193 = Utf8               (Ljava/util/List;Ljava/util/List;)V\n-  #194 = Utf8               causeFrame\n-  #195 = Utf8               wrapperFrame\n-  #196 = Utf8               causeFrames\n-  #197 = Utf8               wrapperFrames\n-  #198 = Utf8               causeFrameIndex\n-  #199 = Utf8               wrapperFrameIndex\n-  #200 = Utf8               (Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;)V\n-  #201 = Utf8               getStackTrace\n-  #202 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/String;\n-  #203 = Utf8               sw\n-  #204 = Utf8               Ljava/io/StringWriter;\n-  #205 = Utf8               pw\n-  #206 = Utf8               getStackFrames\n-  #207 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;\n-  #208 = Utf8               stackTrace\n-  #209 = Utf8               linebreak\n-  #210 = Utf8               Ljava/util/StringTokenizer;\n-  #211 = Class              #305          // java/util/StringTokenizer\n-  #212 = Utf8               getStackFrameList\n-  #213 = Utf8               token\n-  #214 = Utf8               at\n-  #215 = Utf8               t\n-  #216 = Utf8               traceStarted\n-  #217 = Utf8               (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/String;>;\n-  #218 = Utf8               getMessage\n-  #219 = Utf8               th\n-  #220 = Utf8               clsName\n-  #221 = Utf8               msg\n-  #222 = Utf8               getRootCauseMessage\n-  #223 = Utf8               root\n-  #224 = Utf8               rethrow\n-  #225 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/Object;\n-  #226 = Utf8               <R:Ljava/lang/Object;>(Ljava/lang/Throwable;)TR;\n-  #227 = Utf8               typeErasure\n-  #228 = Utf8               Exceptions\n-  #229 = Utf8               <R:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;)TR;^TT;\n-  #230 = Utf8               wrapAndThrow\n-  #231 = Utf8               hasCause\n-  #232 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;)Z\n-  #233 = Utf8               chain\n-  #234 = Utf8               Ljava/lang/Class<+Ljava/lang/Throwable;>;\n-  #235 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)Z\n-  #236 = Utf8               <clinit>\n-  #237 = Utf8               SourceFile\n-  #238 = Utf8               ExceptionUtils.java\n-  #239 = NameAndType        #110:#111     // \"<init>\":()V\n-  #240 = NameAndType        #108:#109     // CAUSE_METHOD_NAMES:[Ljava/lang/String;\n-  #241 = Class              #341          // org/apache/commons/lang3/ArrayUtils\n-  #242 = NameAndType        #342:#343     // clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #243 = NameAndType        #122:#126     // getCause:(Ljava/lang/Throwable;[Ljava/lang/String;)Ljava/lang/Throwable;\n-  #244 = NameAndType        #122:#344     // getCause:()Ljava/lang/Throwable;\n-  #245 = NameAndType        #139:#140     // getCauseUsingMethodName:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;\n-  #246 = NameAndType        #150:#151     // getThrowableList:(Ljava/lang/Throwable;)Ljava/util/List;\n-  #247 = Class              #337          // java/util/List\n-  #248 = NameAndType        #345:#346     // isEmpty:()Z\n-  #249 = NameAndType        #347:#348     // size:()I\n-  #250 = NameAndType        #349:#350     // get:(I)Ljava/lang/Object;\n-  #251 = Utf8               java/lang/Throwable\n-  #252 = NameAndType        #351:#352     // getClass:()Ljava/lang/Class;\n-  #253 = Utf8               java/lang/Class\n-  #254 = NameAndType        #353:#354     // getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n-  #255 = Utf8               java/lang/NoSuchMethodException\n-  #256 = Utf8               java/lang/SecurityException\n-  #257 = Class              #338          // java/lang/reflect/Method\n-  #258 = NameAndType        #355:#352     // getReturnType:()Ljava/lang/Class;\n-  #259 = NameAndType        #356:#357     // isAssignableFrom:(Ljava/lang/Class;)Z\n-  #260 = Utf8               java/lang/Object\n-  #261 = NameAndType        #358:#359     // invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #262 = Utf8               java/lang/IllegalAccessException\n-  #263 = Utf8               java/lang/IllegalArgumentException\n-  #264 = Utf8               java/lang/reflect/InvocationTargetException\n-  #265 = NameAndType        #360:#343     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #266 = Utf8               java/util/ArrayList\n-  #267 = NameAndType        #361:#362     // contains:(Ljava/lang/Object;)Z\n-  #268 = NameAndType        #363:#362     // add:(Ljava/lang/Object;)Z\n-  #269 = NameAndType        #166:#167     // indexOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n-  #270 = NameAndType        #148:#149     // getThrowables:(Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n-  #271 = NameAndType        #364:#362     // equals:(Ljava/lang/Object;)Z\n-  #272 = Class              #365          // java/lang/System\n-  #273 = NameAndType        #366:#179     // err:Ljava/io/PrintStream;\n-  #274 = NameAndType        #174:#176     // printRootCauseStackTrace:(Ljava/lang/Throwable;Ljava/io/PrintStream;)V\n-  #275 = Utf8               The PrintStream must not be null\n-  #276 = Class              #367          // org/apache/commons/lang3/Validate\n-  #277 = NameAndType        #368:#369     // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-  #278 = NameAndType        #186:#187     // getRootCauseStackTrace:(Ljava/lang/Throwable;)[Ljava/lang/String;\n-  #279 = Class              #340          // java/io/PrintStream\n-  #280 = NameAndType        #370:#371     // println:(Ljava/lang/String;)V\n-  #281 = NameAndType        #372:#111     // flush:()V\n-  #282 = Utf8               The PrintWriter must not be null\n-  #283 = NameAndType        #373:#109     // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-  #284 = NameAndType        #212:#151     // getStackFrameList:(Ljava/lang/Throwable;)Ljava/util/List;\n-  #285 = NameAndType        #192:#193     // removeCommonFrames:(Ljava/util/List;Ljava/util/List;)V\n-  #286 = NameAndType        #374:#375     // toString:()Ljava/lang/String;\n-  #287 = Utf8               java/lang/StringBuilder\n-  #288 = Utf8               org/apache/commons/lang3/exception/ExceptionUtils\n-  #289 = Utf8                [wrapped]\n-  #290 = NameAndType        #376:#377     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #291 = NameAndType        #378:#379     // addAll:(Ljava/util/Collection;)Z\n-  #292 = Utf8               java/lang/String\n-  #293 = Utf8               The List must not be null\n-  #294 = NameAndType        #110:#371     // \"<init>\":(Ljava/lang/String;)V\n-  #295 = NameAndType        #380:#350     // remove:(I)Ljava/lang/Object;\n-  #296 = Utf8               java/io/StringWriter\n-  #297 = Utf8               java/io/PrintWriter\n-  #298 = NameAndType        #110:#381     // \"<init>\":(Ljava/io/Writer;Z)V\n-  #299 = NameAndType        #382:#383     // printStackTrace:(Ljava/io/PrintWriter;)V\n-  #300 = NameAndType        #384:#385     // getBuffer:()Ljava/lang/StringBuffer;\n-  #301 = Class              #386          // java/lang/StringBuffer\n-  #302 = NameAndType        #201:#202     // getStackTrace:(Ljava/lang/Throwable;)Ljava/lang/String;\n-  #303 = NameAndType        #206:#207     // getStackFrames:(Ljava/lang/String;)[Ljava/lang/String;\n-  #304 = NameAndType        #387:#375     // lineSeparator:()Ljava/lang/String;\n-  #305 = Utf8               java/util/StringTokenizer\n-  #306 = NameAndType        #110:#388     // \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n-  #307 = NameAndType        #389:#346     // hasMoreTokens:()Z\n-  #308 = NameAndType        #390:#375     // nextToken:()Ljava/lang/String;\n-  #309 = NameAndType        #166:#391     // indexOf:(Ljava/lang/String;)I\n-  #310 = NameAndType        #392:#393     // substring:(II)Ljava/lang/String;\n-  #311 = NameAndType        #394:#375     // trim:()Ljava/lang/String;\n-  #312 = Utf8               org/apache/commons/lang3/StringUtils\n-  #313 = Utf8\n-  #314 = Class              #395          // org/apache/commons/lang3/ClassUtils\n-  #315 = NameAndType        #396:#397     // getShortClassName:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-  #316 = NameAndType        #218:#375     // getMessage:()Ljava/lang/String;\n-  #317 = Utf8               :\n-  #318 = NameAndType        #398:#399     // defaultString:(Ljava/lang/String;)Ljava/lang/String;\n-  #319 = NameAndType        #133:#123     // getRootCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;\n-  #320 = NameAndType        #218:#202     // getMessage:(Ljava/lang/Throwable;)Ljava/lang/String;\n-  #321 = NameAndType        #227:#225     // typeErasure:(Ljava/lang/Throwable;)Ljava/lang/Object;\n-  #322 = Utf8               java/lang/RuntimeException\n-  #323 = Utf8               java/lang/Error\n-  #324 = Utf8               java/lang/reflect/UndeclaredThrowableException\n-  #325 = NameAndType        #110:#175     // \"<init>\":(Ljava/lang/Throwable;)V\n-  #326 = NameAndType        #400:#362     // isInstance:(Ljava/lang/Object;)Z\n-  #327 = Utf8               getNextException\n-  #328 = Utf8               getTargetException\n-  #329 = Utf8               getException\n-  #330 = Utf8               getSourceException\n-  #331 = Utf8               getCausedByException\n-  #332 = Utf8               getNested\n-  #333 = Utf8               getLinkedException\n-  #334 = Utf8               getNestedException\n-  #335 = Utf8               getLinkedCause\n-  #336 = Utf8               getThrowable\n-  #337 = Utf8               java/util/List\n-  #338 = Utf8               java/lang/reflect/Method\n-  #339 = Utf8               java/lang/Exception\n-  #340 = Utf8               java/io/PrintStream\n-  #341 = Utf8               org/apache/commons/lang3/ArrayUtils\n-  #342 = Utf8               clone\n-  #343 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #344 = Utf8               ()Ljava/lang/Throwable;\n-  #345 = Utf8               isEmpty\n-  #346 = Utf8               ()Z\n-  #347 = Utf8               size\n-  #348 = Utf8               ()I\n-  #349 = Utf8               get\n-  #350 = Utf8               (I)Ljava/lang/Object;\n-  #351 = Utf8               getClass\n-  #352 = Utf8               ()Ljava/lang/Class;\n-  #353 = Utf8               getMethod\n-  #354 = Utf8               (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n-  #355 = Utf8               getReturnType\n-  #356 = Utf8               isAssignableFrom\n-  #357 = Utf8               (Ljava/lang/Class;)Z\n-  #358 = Utf8               invoke\n-  #359 = Utf8               (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #360 = Utf8               toArray\n-  #361 = Utf8               contains\n-  #362 = Utf8               (Ljava/lang/Object;)Z\n-  #363 = Utf8               add\n-  #364 = Utf8               equals\n-  #365 = Utf8               java/lang/System\n-  #366 = Utf8               err\n-  #367 = Utf8               org/apache/commons/lang3/Validate\n-  #368 = Utf8               isTrue\n-  #369 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n-  #370 = Utf8               println\n-  #371 = Utf8               (Ljava/lang/String;)V\n-  #372 = Utf8               flush\n-  #373 = Utf8               EMPTY_STRING_ARRAY\n-  #374 = Utf8               toString\n-  #375 = Utf8               ()Ljava/lang/String;\n-  #376 = Utf8               append\n-  #377 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #378 = Utf8               addAll\n-  #379 = Utf8               (Ljava/util/Collection;)Z\n-  #380 = Utf8               remove\n-  #381 = Utf8               (Ljava/io/Writer;Z)V\n-  #382 = Utf8               printStackTrace\n-  #383 = Utf8               (Ljava/io/PrintWriter;)V\n-  #384 = Utf8               getBuffer\n-  #385 = Utf8               ()Ljava/lang/StringBuffer;\n-  #386 = Utf8               java/lang/StringBuffer\n-  #387 = Utf8               lineSeparator\n-  #388 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n-  #389 = Utf8               hasMoreTokens\n-  #390 = Utf8               nextToken\n-  #391 = Utf8               (Ljava/lang/String;)I\n-  #392 = Utf8               substring\n-  #393 = Utf8               (II)Ljava/lang/String;\n-  #394 = Utf8               trim\n-  #395 = Utf8               org/apache/commons/lang3/ClassUtils\n-  #396 = Utf8               getShortClassName\n-  #397 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-  #398 = Utf8               defaultString\n-  #399 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #400 = Utf8               isInstance\n+  #132 = Utf8               getRootCause\n+  #133 = Utf8               list\n+  #134 = Utf8               Ljava/util/List;\n+  #135 = Utf8               LocalVariableTypeTable\n+  #136 = Utf8               Ljava/util/List<Ljava/lang/Throwable;>;\n+  #137 = Class              #330          // java/util/List\n+  #138 = Utf8               getCauseUsingMethodName\n+  #139 = Utf8               (Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;\n+  #140 = Utf8               method\n+  #141 = Utf8               Ljava/lang/reflect/Method;\n+  #142 = Class              #331          // java/lang/reflect/Method\n+  #143 = Class              #332          // java/lang/Exception\n+  #144 = Utf8               getThrowableCount\n+  #145 = Utf8               (Ljava/lang/Throwable;)I\n+  #146 = Utf8               getThrowables\n+  #147 = Utf8               (Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n+  #148 = Utf8               getThrowableList\n+  #149 = Utf8               (Ljava/lang/Throwable;)Ljava/util/List;\n+  #150 = Utf8               Signature\n+  #151 = Utf8               (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/Throwable;>;\n+  #152 = Utf8               indexOfThrowable\n+  #153 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;)I\n+  #154 = Utf8               clazz\n+  #155 = Utf8               Ljava/lang/Class;\n+  #156 = Utf8               Ljava/lang/Class<*>;\n+  #157 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<*>;)I\n+  #158 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;I)I\n+  #159 = Utf8               fromIndex\n+  #160 = Utf8               I\n+  #161 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<*>;I)I\n+  #162 = Utf8               indexOfType\n+  #163 = Utf8               type\n+  #164 = Utf8               indexOf\n+  #165 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n+  #166 = Utf8               i\n+  #167 = Utf8               subclass\n+  #168 = Utf8               Z\n+  #169 = Utf8               throwables\n+  #170 = Utf8               [Ljava/lang/Throwable;\n+  #171 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<*>;IZ)I\n+  #172 = Utf8               printRootCauseStackTrace\n+  #173 = Utf8               (Ljava/lang/Throwable;)V\n+  #174 = Utf8               (Ljava/lang/Throwable;Ljava/io/PrintStream;)V\n+  #175 = Utf8               element\n+  #176 = Utf8               stream\n+  #177 = Utf8               Ljava/io/PrintStream;\n+  #178 = Utf8               trace\n+  #179 = Class              #333          // java/io/PrintStream\n+  #180 = Utf8               (Ljava/lang/Throwable;Ljava/io/PrintWriter;)V\n+  #181 = Utf8               writer\n+  #182 = Utf8               Ljava/io/PrintWriter;\n+  #183 = Utf8               getRootCauseStackTrace\n+  #184 = Utf8               (Ljava/lang/Throwable;)[Ljava/lang/String;\n+  #185 = Utf8               count\n+  #186 = Utf8               frames\n+  #187 = Utf8               nextTrace\n+  #188 = Utf8               Ljava/util/List<Ljava/lang/String;>;\n+  #189 = Utf8               removeCommonFrames\n+  #190 = Utf8               (Ljava/util/List;Ljava/util/List;)V\n+  #191 = Utf8               causeFrame\n+  #192 = Utf8               wrapperFrame\n+  #193 = Utf8               causeFrames\n+  #194 = Utf8               wrapperFrames\n+  #195 = Utf8               causeFrameIndex\n+  #196 = Utf8               wrapperFrameIndex\n+  #197 = Utf8               (Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;)V\n+  #198 = Utf8               getStackTrace\n+  #199 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/String;\n+  #200 = Utf8               sw\n+  #201 = Utf8               Ljava/io/StringWriter;\n+  #202 = Utf8               pw\n+  #203 = Utf8               getStackFrames\n+  #204 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;\n+  #205 = Utf8               stackTrace\n+  #206 = Utf8               linebreak\n+  #207 = Utf8               Ljava/util/StringTokenizer;\n+  #208 = Utf8               getStackFrameList\n+  #209 = Utf8               token\n+  #210 = Utf8               at\n+  #211 = Utf8               t\n+  #212 = Utf8               traceStarted\n+  #213 = Utf8               (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/String;>;\n+  #214 = Utf8               getMessage\n+  #215 = Utf8               th\n+  #216 = Utf8               clsName\n+  #217 = Utf8               msg\n+  #218 = Utf8               getRootCauseMessage\n+  #219 = Utf8               root\n+  #220 = Utf8               rethrow\n+  #221 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/Object;\n+  #222 = Utf8               <R:Ljava/lang/Object;>(Ljava/lang/Throwable;)TR;\n+  #223 = Utf8               typeErasure\n+  #224 = Utf8               Exceptions\n+  #225 = Utf8               <R:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;)TR;^TT;\n+  #226 = Utf8               wrapAndThrow\n+  #227 = Utf8               hasCause\n+  #228 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;)Z\n+  #229 = Utf8               chain\n+  #230 = Utf8               Ljava/lang/Class<+Ljava/lang/Throwable;>;\n+  #231 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)Z\n+  #232 = Utf8               <clinit>\n+  #233 = Utf8               SourceFile\n+  #234 = Utf8               ExceptionUtils.java\n+  #235 = NameAndType        #110:#111     // \"<init>\":()V\n+  #236 = NameAndType        #108:#109     // CAUSE_METHOD_NAMES:[Ljava/lang/String;\n+  #237 = Class              #334          // org/apache/commons/lang3/ArrayUtils\n+  #238 = NameAndType        #335:#336     // clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #239 = NameAndType        #122:#126     // getCause:(Ljava/lang/Throwable;[Ljava/lang/String;)Ljava/lang/Throwable;\n+  #240 = NameAndType        #122:#337     // getCause:()Ljava/lang/Throwable;\n+  #241 = NameAndType        #138:#139     // getCauseUsingMethodName:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;\n+  #242 = NameAndType        #148:#149     // getThrowableList:(Ljava/lang/Throwable;)Ljava/util/List;\n+  #243 = NameAndType        #338:#339     // isEmpty:()Z\n+  #244 = NameAndType        #340:#341     // size:()I\n+  #245 = NameAndType        #342:#343     // get:(I)Ljava/lang/Object;\n+  #246 = Utf8               java/lang/Throwable\n+  #247 = NameAndType        #344:#345     // getClass:()Ljava/lang/Class;\n+  #248 = Utf8               java/lang/Class\n+  #249 = NameAndType        #346:#347     // getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n+  #250 = Utf8               java/lang/NoSuchMethodException\n+  #251 = Utf8               java/lang/SecurityException\n+  #252 = NameAndType        #348:#345     // getReturnType:()Ljava/lang/Class;\n+  #253 = NameAndType        #349:#350     // isAssignableFrom:(Ljava/lang/Class;)Z\n+  #254 = Utf8               java/lang/Object\n+  #255 = NameAndType        #351:#352     // invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #256 = Utf8               java/lang/IllegalAccessException\n+  #257 = Utf8               java/lang/IllegalArgumentException\n+  #258 = Utf8               java/lang/reflect/InvocationTargetException\n+  #259 = NameAndType        #353:#336     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #260 = Utf8               java/util/ArrayList\n+  #261 = NameAndType        #354:#355     // contains:(Ljava/lang/Object;)Z\n+  #262 = NameAndType        #356:#355     // add:(Ljava/lang/Object;)Z\n+  #263 = NameAndType        #164:#165     // indexOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n+  #264 = NameAndType        #146:#147     // getThrowables:(Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n+  #265 = NameAndType        #357:#355     // equals:(Ljava/lang/Object;)Z\n+  #266 = Class              #358          // java/lang/System\n+  #267 = NameAndType        #359:#177     // err:Ljava/io/PrintStream;\n+  #268 = NameAndType        #172:#174     // printRootCauseStackTrace:(Ljava/lang/Throwable;Ljava/io/PrintStream;)V\n+  #269 = Utf8               The PrintStream must not be null\n+  #270 = Class              #360          // org/apache/commons/lang3/Validate\n+  #271 = NameAndType        #361:#362     // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #272 = NameAndType        #183:#184     // getRootCauseStackTrace:(Ljava/lang/Throwable;)[Ljava/lang/String;\n+  #273 = NameAndType        #363:#364     // println:(Ljava/lang/String;)V\n+  #274 = NameAndType        #365:#111     // flush:()V\n+  #275 = Utf8               The PrintWriter must not be null\n+  #276 = NameAndType        #366:#109     // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+  #277 = NameAndType        #208:#149     // getStackFrameList:(Ljava/lang/Throwable;)Ljava/util/List;\n+  #278 = NameAndType        #189:#190     // removeCommonFrames:(Ljava/util/List;Ljava/util/List;)V\n+  #279 = NameAndType        #367:#368     // toString:()Ljava/lang/String;\n+  #280 = Utf8               java/lang/StringBuilder\n+  #281 = Utf8               org/apache/commons/lang3/exception/ExceptionUtils\n+  #282 = Utf8                [wrapped]\n+  #283 = NameAndType        #369:#370     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #284 = NameAndType        #371:#372     // addAll:(Ljava/util/Collection;)Z\n+  #285 = Utf8               java/lang/String\n+  #286 = Utf8               The List must not be null\n+  #287 = NameAndType        #110:#364     // \"<init>\":(Ljava/lang/String;)V\n+  #288 = NameAndType        #373:#343     // remove:(I)Ljava/lang/Object;\n+  #289 = Utf8               java/io/StringWriter\n+  #290 = Utf8               java/io/PrintWriter\n+  #291 = NameAndType        #110:#374     // \"<init>\":(Ljava/io/Writer;Z)V\n+  #292 = NameAndType        #375:#376     // printStackTrace:(Ljava/io/PrintWriter;)V\n+  #293 = NameAndType        #377:#378     // getBuffer:()Ljava/lang/StringBuffer;\n+  #294 = Class              #379          // java/lang/StringBuffer\n+  #295 = NameAndType        #198:#199     // getStackTrace:(Ljava/lang/Throwable;)Ljava/lang/String;\n+  #296 = NameAndType        #203:#204     // getStackFrames:(Ljava/lang/String;)[Ljava/lang/String;\n+  #297 = NameAndType        #380:#368     // lineSeparator:()Ljava/lang/String;\n+  #298 = Utf8               java/util/StringTokenizer\n+  #299 = NameAndType        #110:#381     // \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+  #300 = NameAndType        #382:#339     // hasMoreTokens:()Z\n+  #301 = NameAndType        #383:#368     // nextToken:()Ljava/lang/String;\n+  #302 = NameAndType        #164:#384     // indexOf:(Ljava/lang/String;)I\n+  #303 = NameAndType        #385:#386     // substring:(II)Ljava/lang/String;\n+  #304 = NameAndType        #387:#368     // trim:()Ljava/lang/String;\n+  #305 = Utf8               org/apache/commons/lang3/StringUtils\n+  #306 = Utf8\n+  #307 = Class              #388          // org/apache/commons/lang3/ClassUtils\n+  #308 = NameAndType        #389:#390     // getShortClassName:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+  #309 = NameAndType        #214:#368     // getMessage:()Ljava/lang/String;\n+  #310 = Utf8               :\n+  #311 = NameAndType        #391:#392     // defaultString:(Ljava/lang/String;)Ljava/lang/String;\n+  #312 = NameAndType        #132:#123     // getRootCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;\n+  #313 = NameAndType        #214:#199     // getMessage:(Ljava/lang/Throwable;)Ljava/lang/String;\n+  #314 = NameAndType        #223:#221     // typeErasure:(Ljava/lang/Throwable;)Ljava/lang/Object;\n+  #315 = Utf8               java/lang/RuntimeException\n+  #316 = Utf8               java/lang/Error\n+  #317 = Utf8               java/lang/reflect/UndeclaredThrowableException\n+  #318 = NameAndType        #110:#173     // \"<init>\":(Ljava/lang/Throwable;)V\n+  #319 = NameAndType        #393:#355     // isInstance:(Ljava/lang/Object;)Z\n+  #320 = Utf8               getNextException\n+  #321 = Utf8               getTargetException\n+  #322 = Utf8               getException\n+  #323 = Utf8               getSourceException\n+  #324 = Utf8               getCausedByException\n+  #325 = Utf8               getNested\n+  #326 = Utf8               getLinkedException\n+  #327 = Utf8               getNestedException\n+  #328 = Utf8               getLinkedCause\n+  #329 = Utf8               getThrowable\n+  #330 = Utf8               java/util/List\n+  #331 = Utf8               java/lang/reflect/Method\n+  #332 = Utf8               java/lang/Exception\n+  #333 = Utf8               java/io/PrintStream\n+  #334 = Utf8               org/apache/commons/lang3/ArrayUtils\n+  #335 = Utf8               clone\n+  #336 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #337 = Utf8               ()Ljava/lang/Throwable;\n+  #338 = Utf8               isEmpty\n+  #339 = Utf8               ()Z\n+  #340 = Utf8               size\n+  #341 = Utf8               ()I\n+  #342 = Utf8               get\n+  #343 = Utf8               (I)Ljava/lang/Object;\n+  #344 = Utf8               getClass\n+  #345 = Utf8               ()Ljava/lang/Class;\n+  #346 = Utf8               getMethod\n+  #347 = Utf8               (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n+  #348 = Utf8               getReturnType\n+  #349 = Utf8               isAssignableFrom\n+  #350 = Utf8               (Ljava/lang/Class;)Z\n+  #351 = Utf8               invoke\n+  #352 = Utf8               (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #353 = Utf8               toArray\n+  #354 = Utf8               contains\n+  #355 = Utf8               (Ljava/lang/Object;)Z\n+  #356 = Utf8               add\n+  #357 = Utf8               equals\n+  #358 = Utf8               java/lang/System\n+  #359 = Utf8               err\n+  #360 = Utf8               org/apache/commons/lang3/Validate\n+  #361 = Utf8               isTrue\n+  #362 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #363 = Utf8               println\n+  #364 = Utf8               (Ljava/lang/String;)V\n+  #365 = Utf8               flush\n+  #366 = Utf8               EMPTY_STRING_ARRAY\n+  #367 = Utf8               toString\n+  #368 = Utf8               ()Ljava/lang/String;\n+  #369 = Utf8               append\n+  #370 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #371 = Utf8               addAll\n+  #372 = Utf8               (Ljava/util/Collection;)Z\n+  #373 = Utf8               remove\n+  #374 = Utf8               (Ljava/io/Writer;Z)V\n+  #375 = Utf8               printStackTrace\n+  #376 = Utf8               (Ljava/io/PrintWriter;)V\n+  #377 = Utf8               getBuffer\n+  #378 = Utf8               ()Ljava/lang/StringBuffer;\n+  #379 = Utf8               java/lang/StringBuffer\n+  #380 = Utf8               lineSeparator\n+  #381 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n+  #382 = Utf8               hasMoreTokens\n+  #383 = Utf8               nextToken\n+  #384 = Utf8               (Ljava/lang/String;)I\n+  #385 = Utf8               substring\n+  #386 = Utf8               (II)Ljava/lang/String;\n+  #387 = Utf8               trim\n+  #388 = Utf8               org/apache/commons/lang3/ClassUtils\n+  #389 = Utf8               getShortClassName\n+  #390 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+  #391 = Utf8               defaultString\n+  #392 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #393 = Utf8               isInstance\n {\n   static final java.lang.String WRAPPED_MARKER = \" [wrapped] \";\n     descriptor: Ljava/lang/String;\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n     ConstantValue: String  [wrapped]\n \n   private static final java.lang.String[] CAUSE_METHOD_NAMES;\n@@ -738,15 +731,15 @@\n         Start  Length  Slot  Name   Signature\n             8      32     1  list   Ljava/util/List<Ljava/lang/Throwable;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 252 /* append */\n           offset_delta = 8\n           locals = [ class java/util/List ]\n         frame_type = 29 /* same */\n-    Signature: #153                         // (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/Throwable;>;\n+    Signature: #151                         // (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/Throwable;>;\n \n   public static int indexOfThrowable(java.lang.Throwable, java.lang.Class<?>);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n@@ -760,15 +753,15 @@\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 throwable   Ljava/lang/Throwable;\n             0       8     1 clazz   Ljava/lang/Class;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       8     1 clazz   Ljava/lang/Class<*>;\n-    Signature: #159                         // (Ljava/lang/Throwable;Ljava/lang/Class<*>;)I\n+    Signature: #157                         // (Ljava/lang/Throwable;Ljava/lang/Class<*>;)I\n \n   public static int indexOfThrowable(java.lang.Throwable, java.lang.Class<?>, int);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;I)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n@@ -783,15 +776,15 @@\n         Start  Length  Slot  Name   Signature\n             0       8     0 throwable   Ljava/lang/Throwable;\n             0       8     1 clazz   Ljava/lang/Class;\n             0       8     2 fromIndex   I\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       8     1 clazz   Ljava/lang/Class<*>;\n-    Signature: #163                         // (Ljava/lang/Throwable;Ljava/lang/Class<*>;I)I\n+    Signature: #161                         // (Ljava/lang/Throwable;Ljava/lang/Class<*>;I)I\n \n   public static int indexOfType(java.lang.Throwable, java.lang.Class<?>);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n@@ -805,15 +798,15 @@\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 throwable   Ljava/lang/Throwable;\n             0       8     1  type   Ljava/lang/Class;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       8     1  type   Ljava/lang/Class<*>;\n-    Signature: #159                         // (Ljava/lang/Throwable;Ljava/lang/Class<*>;)I\n+    Signature: #157                         // (Ljava/lang/Throwable;Ljava/lang/Class<*>;)I\n \n   public static int indexOfType(java.lang.Throwable, java.lang.Class<?>, int);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;I)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n@@ -828,15 +821,15 @@\n         Start  Length  Slot  Name   Signature\n             0       8     0 throwable   Ljava/lang/Throwable;\n             0       8     1  type   Ljava/lang/Class;\n             0       8     2 fromIndex   I\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       8     1  type   Ljava/lang/Class<*>;\n-    Signature: #163                         // (Ljava/lang/Throwable;Ljava/lang/Class<*>;I)I\n+    Signature: #161                         // (Ljava/lang/Throwable;Ljava/lang/Class<*>;I)I\n \n   private static int indexOf(java.lang.Throwable, java.lang.Class<?>, int, boolean);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=6, args_size=4\n          0: aload_0\n@@ -943,15 +936,15 @@\n         frame_type = 2 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 2\n           locals = [ int ]\n         frame_type = 25 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 5\n-    Signature: #173                         // (Ljava/lang/Throwable;Ljava/lang/Class<*>;IZ)I\n+    Signature: #171                         // (Ljava/lang/Throwable;Ljava/lang/Class<*>;IZ)I\n \n   public static void printRootCauseStackTrace(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n@@ -1318,15 +1311,15 @@\n           offset_delta = 17\n           locals = [ int, int ]\n         frame_type = 253 /* append */\n           offset_delta = 49\n           locals = [ class java/lang/String, class java/lang/String ]\n         frame_type = 249 /* chop */\n           offset_delta = 8\n-    Signature: #200                         // (Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;)V\n+    Signature: #197                         // (Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;)V\n \n   public static java.lang.String getStackTrace(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=1\n          0: new           #60                 // class java/io/StringWriter\n@@ -1526,15 +1519,15 @@\n           stack = []\n         frame_type = 253 /* append */\n           offset_delta = 60\n           locals = [ class java/lang/String, int ]\n         frame_type = 249 /* chop */\n           offset_delta = 7\n         frame_type = 2 /* same */\n-    Signature: #217                         // (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/String;>;\n+    Signature: #213                         // (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/String;>;\n \n   public static java.lang.String getMessage(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n@@ -1615,15 +1608,15 @@\n          1: invokestatic  #87                 // Method typeErasure:(Ljava/lang/Throwable;)Ljava/lang/Object;\n          4: areturn\n       LineNumberTable:\n         line 747: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0 throwable   Ljava/lang/Throwable;\n-    Signature: #226                         // <R:Ljava/lang/Object;>(Ljava/lang/Throwable;)TR;\n+    Signature: #222                         // <R:Ljava/lang/Object;>(Ljava/lang/Throwable;)TR;\n \n   private static <R extends java.lang.Object, T extends java.lang.Throwable> R typeErasure(java.lang.Throwable) throws T;\n     descriptor: (Ljava/lang/Throwable;)Ljava/lang/Object;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -1631,15 +1624,15 @@\n       LineNumberTable:\n         line 758: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       2     0 throwable   Ljava/lang/Throwable;\n     Exceptions:\n       throws java.lang.Throwable\n-    Signature: #229                         // <R:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;)TR;^TT;\n+    Signature: #225                         // <R:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;)TR;^TT;\n \n   public static <R extends java.lang.Object> R wrapAndThrow(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n@@ -1667,15 +1660,15 @@\n         line 789: 24\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      33     0 throwable   Ljava/lang/Throwable;\n       StackMapTable: number_of_entries = 2\n         frame_type = 12 /* same */\n         frame_type = 11 /* same */\n-    Signature: #226                         // <R:Ljava/lang/Object;>(Ljava/lang/Throwable;)TR;\n+    Signature: #222                         // <R:Ljava/lang/Object;>(Ljava/lang/Throwable;)TR;\n \n   public static boolean hasCause(java.lang.Throwable, java.lang.Class<? extends java.lang.Throwable>);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n@@ -1697,15 +1690,15 @@\n             0      18     0 chain   Ljava/lang/Throwable;\n             0      18     1  type   Ljava/lang/Class;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      18     1  type   Ljava/lang/Class<+Ljava/lang/Throwable;>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 12 /* same */\n-    Signature: #235                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)Z\n+    Signature: #231                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)Z\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=4, locals=0, args_size=0\n          0: bipush        12\n"}]}
