{"diffoscope-json-version": 1, "source1": "first/Hex.class", "source2": "second/Hex.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,26 +1,32 @@\n \n package org.apache.commons.codec.binary;\n \n-import java.nio.charset.StandardCharsets;\n import org.apache.commons.codec.EncoderException;\n import java.nio.ByteBuffer;\n import org.apache.commons.codec.DecoderException;\n+import java.nio.charset.StandardCharsets;\n import java.nio.charset.Charset;\n import org.apache.commons.codec.BinaryDecoder;\n import org.apache.commons.codec.BinaryEncoder;\n \n public class Hex implements BinaryEncoder, BinaryDecoder\n {\n     public static final Charset DEFAULT_CHARSET;\n     public static final String DEFAULT_CHARSET_NAME = \"UTF-8\";\n     private static final char[] DIGITS_LOWER;\n     private static final char[] DIGITS_UPPER;\n     private final Charset charset;\n     \n+    static {\n+        DEFAULT_CHARSET = StandardCharsets.UTF_8;\n+        DIGITS_LOWER = new char[] { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };\n+        DIGITS_UPPER = new char[] { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' };\n+    }\n+    \n     public static byte[] decodeHex(final char[] data) throws DecoderException {\n         final byte[] out = new byte[data.length >> 1];\n         decodeHex(data, out, 0);\n         return out;\n     }\n     \n     public static int decodeHex(final char[] data, final byte[] out, final int outOffset) throws DecoderException {\n@@ -199,16 +205,10 @@\n     \n     public String getCharsetName() {\n         return this.charset.name();\n     }\n     \n     @Override\n     public String toString() {\n-        return super.toString() + \"[charsetName=\" + this.charset + \"]\";\n-    }\n-    \n-    static {\n-        DEFAULT_CHARSET = StandardCharsets.UTF_8;\n-        DIGITS_LOWER = new char[] { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };\n-        DIGITS_UPPER = new char[] { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' };\n+        return String.valueOf(super.toString()) + \"[charsetName=\" + this.charset + \"]\";\n     }\n }\n"}]}
