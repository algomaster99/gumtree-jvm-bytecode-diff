{"diffoscope-json-version": 1, "source1": "first/LCONST.class", "source2": "second/LCONST.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -4,37 +4,37 @@\n public class LCONST extends Instruction implements ConstantPushInstruction\n {\n     private long value;\n     \n     LCONST() {\n     }\n     \n-    public LCONST(final long l) {\n+    public LCONST(final long n) {\n         super((short)9, (short)1);\n-        if (l == 0L) {\n+        if (n == 0L) {\n             super.setOpcode((short)9);\n         }\n         else {\n-            if (l != 1L) {\n-                throw new ClassGenException(\"LCONST can be used only for 0 and 1: \" + l);\n+            if (n != 1L) {\n+                throw new ClassGenException(\"LCONST can be used only for 0 and 1: \" + n);\n             }\n             super.setOpcode((short)10);\n         }\n-        this.value = l;\n+        this.value = n;\n     }\n     \n-    public void accept(final Visitor v) {\n-        v.visitPushInstruction((PushInstruction)this);\n-        v.visitStackProducer((StackProducer)this);\n-        v.visitTypedInstruction((TypedInstruction)this);\n-        v.visitConstantPushInstruction((ConstantPushInstruction)this);\n-        v.visitLCONST(this);\n+    public void accept(final Visitor visitor) {\n+        visitor.visitPushInstruction((PushInstruction)this);\n+        visitor.visitStackProducer((StackProducer)this);\n+        visitor.visitTypedInstruction((TypedInstruction)this);\n+        visitor.visitConstantPushInstruction((ConstantPushInstruction)this);\n+        visitor.visitLCONST(this);\n     }\n     \n-    public Type getType(final ConstantPoolGen cp) {\n+    public Type getType(final ConstantPoolGen constantPoolGen) {\n         return (Type)Type.LONG;\n     }\n     \n     public Number getValue() {\n         return Long.valueOf(this.value);\n     }\n }\n"}]}
