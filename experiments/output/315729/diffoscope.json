{"diffoscope-json-version": 1, "source1": "first/AndFileFilter.class", "source2": "second/AndFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,188 +1,188 @@\n-  SHA-256 checksum fbab138c4c91ec1f4b24dac40adda499c13f154877d1dbb092a747f54c5a5247\n+  SHA-256 checksum a6ef81ff9d8ae6779fef7a481e1aab65fa6131dfe79a056e93dd062ed8026a8d\n   Compiled from \"AndFileFilter.java\"\n public class org.apache.commons.io.filefilter.AndFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements org.apache.commons.io.filefilter.ConditionalFileFilter,java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #44                         // org/apache/commons/io/filefilter/AndFileFilter\n-  super_class: #45                        // org/apache/commons/io/filefilter/AbstractFileFilter\n+  this_class: #2                          // org/apache/commons/io/filefilter/AndFileFilter\n+  super_class: #8                         // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 2, fields: 2, methods: 16, attributes: 1\n Constant pool:\n-    #1 = Methodref          #44.#88       // org/apache/commons/io/filefilter/AndFileFilter.\"<init>\":(I)V\n-    #2 = Methodref          #45.#89       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-    #3 = String             #90           // initialList\n-    #4 = Methodref          #91.#92       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-    #5 = Class              #93           // java/util/List\n-    #6 = Fieldref           #44.#94       // org/apache/commons/io/filefilter/AndFileFilter.fileFilters:Ljava/util/List;\n-    #7 = Class              #95           // java/util/ArrayList\n-    #8 = Methodref          #7.#88        // java/util/ArrayList.\"<init>\":(I)V\n-    #9 = Methodref          #44.#96       // org/apache/commons/io/filefilter/AndFileFilter.\"<init>\":(Ljava/util/ArrayList;)V\n-   #10 = Methodref          #44.#97       // org/apache/commons/io/filefilter/AndFileFilter.addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #11 = String             #53           // fileFilters\n-   #12 = Class              #98           // \"[Lorg/apache/commons/io/filefilter/IOFileFilter;\"\n-   #13 = Methodref          #44.#99       // org/apache/commons/io/filefilter/AndFileFilter.addFileFilter:([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #14 = Class              #100          // java/util/Collection\n-   #15 = Methodref          #7.#101       // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n-   #16 = Methodref          #44.#102      // org/apache/commons/io/filefilter/AndFileFilter.isEmpty:()Z\n-   #17 = InterfaceMethodref #5.#103       // java/util/List.iterator:()Ljava/util/Iterator;\n-   #18 = InterfaceMethodref #71.#104      // java/util/Iterator.hasNext:()Z\n-   #19 = InterfaceMethodref #71.#105      // java/util/Iterator.next:()Ljava/lang/Object;\n-   #20 = Class              #106          // org/apache/commons/io/filefilter/IOFileFilter\n-   #21 = InterfaceMethodref #20.#107      // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n-   #22 = InterfaceMethodref #20.#108      // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n-   #23 = Fieldref           #109.#110     // java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n-   #24 = InterfaceMethodref #20.#111      // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #25 = Fieldref           #109.#112     // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-   #26 = String             #113          // fileFilter\n-   #27 = InterfaceMethodref #5.#114       // java/util/List.add:(Ljava/lang/Object;)Z\n-   #28 = Methodref          #115.#116     // java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n-   #29 = InterfaceMethodref #5.#102       // java/util/List.isEmpty:()Z\n-   #30 = InterfaceMethodref #5.#117       // java/util/List.remove:(Ljava/lang/Object;)Z\n-   #31 = InterfaceMethodref #5.#118       // java/util/List.clear:()V\n-   #32 = InterfaceMethodref #5.#119       // java/util/List.addAll:(Ljava/util/Collection;)Z\n-   #33 = Class              #120          // java/lang/StringBuilder\n-   #34 = Methodref          #33.#89       // java/lang/StringBuilder.\"<init>\":()V\n-   #35 = Methodref          #45.#121      // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n-   #36 = Methodref          #33.#122      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #37 = String             #123          // (\n-   #38 = InterfaceMethodref #5.#124       // java/util/List.size:()I\n-   #39 = String             #125          // ,\n-   #40 = InterfaceMethodref #5.#126       // java/util/List.get:(I)Ljava/lang/Object;\n-   #41 = Methodref          #33.#127      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #42 = String             #128          // )\n-   #43 = Methodref          #33.#121      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #44 = Class              #129          // org/apache/commons/io/filefilter/AndFileFilter\n-   #45 = Class              #130          // org/apache/commons/io/filefilter/AbstractFileFilter\n-   #46 = Class              #131          // org/apache/commons/io/filefilter/ConditionalFileFilter\n-   #47 = Class              #132          // java/io/Serializable\n-   #48 = Utf8               serialVersionUID\n-   #49 = Utf8               J\n-   #50 = Utf8               ConstantValue\n-   #51 = Long               7215974688563965257l\n-   #53 = Utf8               fileFilters\n-   #54 = Utf8               Ljava/util/List;\n-   #55 = Utf8               Signature\n-   #56 = Utf8               Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n-   #57 = Utf8               <init>\n-   #58 = Utf8               ()V\n-   #59 = Utf8               Code\n-   #60 = Utf8               LineNumberTable\n-   #61 = Utf8               (Ljava/util/ArrayList;)V\n-   #62 = Utf8               (Ljava/util/ArrayList<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n-   #63 = Utf8               (I)V\n-   #64 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #65 = Utf8               ([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #66 = Utf8               (Ljava/util/List;)V\n-   #67 = Utf8               (Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n+    #1 = Methodref          #2.#3         // org/apache/commons/io/filefilter/AndFileFilter.\"<init>\":(I)V\n+    #2 = Class              #4            // org/apache/commons/io/filefilter/AndFileFilter\n+    #3 = NameAndType        #5:#6         // \"<init>\":(I)V\n+    #4 = Utf8               org/apache/commons/io/filefilter/AndFileFilter\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (I)V\n+    #7 = Methodref          #8.#9         // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+    #8 = Class              #10           // org/apache/commons/io/filefilter/AbstractFileFilter\n+    #9 = NameAndType        #5:#11        // \"<init>\":()V\n+   #10 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+   #11 = Utf8               ()V\n+   #12 = String             #13           // initialList\n+   #13 = Utf8               initialList\n+   #14 = Methodref          #15.#16       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #15 = Class              #17           // java/util/Objects\n+   #16 = NameAndType        #18:#19       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #17 = Utf8               java/util/Objects\n+   #18 = Utf8               requireNonNull\n+   #19 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #20 = Class              #21           // java/util/List\n+   #21 = Utf8               java/util/List\n+   #22 = Fieldref           #2.#23        // org/apache/commons/io/filefilter/AndFileFilter.fileFilters:Ljava/util/List;\n+   #23 = NameAndType        #24:#25       // fileFilters:Ljava/util/List;\n+   #24 = Utf8               fileFilters\n+   #25 = Utf8               Ljava/util/List;\n+   #26 = Class              #27           // java/util/ArrayList\n+   #27 = Utf8               java/util/ArrayList\n+   #28 = Methodref          #26.#3        // java/util/ArrayList.\"<init>\":(I)V\n+   #29 = Methodref          #2.#30        // org/apache/commons/io/filefilter/AndFileFilter.\"<init>\":(Ljava/util/ArrayList;)V\n+   #30 = NameAndType        #5:#31        // \"<init>\":(Ljava/util/ArrayList;)V\n+   #31 = Utf8               (Ljava/util/ArrayList;)V\n+   #32 = Methodref          #2.#33        // org/apache/commons/io/filefilter/AndFileFilter.addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #33 = NameAndType        #34:#35       // addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #34 = Utf8               addFileFilter\n+   #35 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #36 = String             #24           // fileFilters\n+   #37 = Class              #38           // \"[Lorg/apache/commons/io/filefilter/IOFileFilter;\"\n+   #38 = Utf8               [Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #39 = Methodref          #2.#40        // org/apache/commons/io/filefilter/AndFileFilter.addFileFilter:([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #40 = NameAndType        #34:#41       // addFileFilter:([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #41 = Utf8               ([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #42 = Class              #43           // java/util/Collection\n+   #43 = Utf8               java/util/Collection\n+   #44 = Methodref          #26.#45       // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n+   #45 = NameAndType        #5:#46        // \"<init>\":(Ljava/util/Collection;)V\n+   #46 = Utf8               (Ljava/util/Collection;)V\n+   #47 = Methodref          #2.#48        // org/apache/commons/io/filefilter/AndFileFilter.isEmpty:()Z\n+   #48 = NameAndType        #49:#50       // isEmpty:()Z\n+   #49 = Utf8               isEmpty\n+   #50 = Utf8               ()Z\n+   #51 = InterfaceMethodref #20.#52       // java/util/List.iterator:()Ljava/util/Iterator;\n+   #52 = NameAndType        #53:#54       // iterator:()Ljava/util/Iterator;\n+   #53 = Utf8               iterator\n+   #54 = Utf8               ()Ljava/util/Iterator;\n+   #55 = InterfaceMethodref #56.#57       // java/util/Iterator.hasNext:()Z\n+   #56 = Class              #58           // java/util/Iterator\n+   #57 = NameAndType        #59:#50       // hasNext:()Z\n+   #58 = Utf8               java/util/Iterator\n+   #59 = Utf8               hasNext\n+   #60 = InterfaceMethodref #56.#61       // java/util/Iterator.next:()Ljava/lang/Object;\n+   #61 = NameAndType        #62:#63       // next:()Ljava/lang/Object;\n+   #62 = Utf8               next\n+   #63 = Utf8               ()Ljava/lang/Object;\n+   #64 = Class              #65           // org/apache/commons/io/filefilter/IOFileFilter\n+   #65 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n+   #66 = InterfaceMethodref #64.#67       // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n+   #67 = NameAndType        #68:#69       // accept:(Ljava/io/File;)Z\n    #68 = Utf8               accept\n    #69 = Utf8               (Ljava/io/File;)Z\n-   #70 = Utf8               StackMapTable\n-   #71 = Class              #133          // java/util/Iterator\n+   #70 = InterfaceMethodref #64.#71       // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n+   #71 = NameAndType        #68:#72       // accept:(Ljava/io/File;Ljava/lang/String;)Z\n    #72 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n-   #73 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #74 = Utf8               addFileFilter\n-   #75 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #76 = Utf8               getFileFilters\n-   #77 = Utf8               ()Ljava/util/List;\n-   #78 = Utf8               ()Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n-   #79 = Utf8               isEmpty\n-   #80 = Utf8               ()Z\n-   #81 = Utf8               removeFileFilter\n-   #82 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)Z\n-   #83 = Utf8               setFileFilters\n-   #84 = Utf8               toString\n-   #85 = Utf8               ()Ljava/lang/String;\n-   #86 = Utf8               SourceFile\n-   #87 = Utf8               AndFileFilter.java\n-   #88 = NameAndType        #57:#63       // \"<init>\":(I)V\n-   #89 = NameAndType        #57:#58       // \"<init>\":()V\n-   #90 = Utf8               initialList\n-   #91 = Class              #134          // java/util/Objects\n-   #92 = NameAndType        #135:#136     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #93 = Utf8               java/util/List\n-   #94 = NameAndType        #53:#54       // fileFilters:Ljava/util/List;\n-   #95 = Utf8               java/util/ArrayList\n-   #96 = NameAndType        #57:#61       // \"<init>\":(Ljava/util/ArrayList;)V\n-   #97 = NameAndType        #74:#75       // addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #98 = Utf8               [Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #99 = NameAndType        #74:#65       // addFileFilter:([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-  #100 = Utf8               java/util/Collection\n-  #101 = NameAndType        #57:#137      // \"<init>\":(Ljava/util/Collection;)V\n-  #102 = NameAndType        #79:#80       // isEmpty:()Z\n-  #103 = NameAndType        #138:#139     // iterator:()Ljava/util/Iterator;\n-  #104 = NameAndType        #140:#80      // hasNext:()Z\n-  #105 = NameAndType        #141:#142     // next:()Ljava/lang/Object;\n-  #106 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n-  #107 = NameAndType        #68:#69       // accept:(Ljava/io/File;)Z\n-  #108 = NameAndType        #68:#72       // accept:(Ljava/io/File;Ljava/lang/String;)Z\n-  #109 = Class              #143          // java/nio/file/FileVisitResult\n-  #110 = NameAndType        #144:#145     // TERMINATE:Ljava/nio/file/FileVisitResult;\n-  #111 = NameAndType        #68:#73       // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #112 = NameAndType        #146:#145     // CONTINUE:Ljava/nio/file/FileVisitResult;\n-  #113 = Utf8               fileFilter\n-  #114 = NameAndType        #147:#148     // add:(Ljava/lang/Object;)Z\n-  #115 = Class              #149          // java/util/Collections\n-  #116 = NameAndType        #150:#151     // unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n-  #117 = NameAndType        #152:#148     // remove:(Ljava/lang/Object;)Z\n-  #118 = NameAndType        #153:#58      // clear:()V\n-  #119 = NameAndType        #154:#155     // addAll:(Ljava/util/Collection;)Z\n-  #120 = Utf8               java/lang/StringBuilder\n-  #121 = NameAndType        #84:#85       // toString:()Ljava/lang/String;\n-  #122 = NameAndType        #156:#157     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #123 = Utf8               (\n-  #124 = NameAndType        #158:#159     // size:()I\n-  #125 = Utf8               ,\n-  #126 = NameAndType        #160:#161     // get:(I)Ljava/lang/Object;\n-  #127 = NameAndType        #156:#162     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #128 = Utf8               )\n-  #129 = Utf8               org/apache/commons/io/filefilter/AndFileFilter\n-  #130 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-  #131 = Utf8               org/apache/commons/io/filefilter/ConditionalFileFilter\n-  #132 = Utf8               java/io/Serializable\n-  #133 = Utf8               java/util/Iterator\n-  #134 = Utf8               java/util/Objects\n-  #135 = Utf8               requireNonNull\n-  #136 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #137 = Utf8               (Ljava/util/Collection;)V\n-  #138 = Utf8               iterator\n-  #139 = Utf8               ()Ljava/util/Iterator;\n-  #140 = Utf8               hasNext\n-  #141 = Utf8               next\n-  #142 = Utf8               ()Ljava/lang/Object;\n-  #143 = Utf8               java/nio/file/FileVisitResult\n-  #144 = Utf8               TERMINATE\n-  #145 = Utf8               Ljava/nio/file/FileVisitResult;\n-  #146 = Utf8               CONTINUE\n-  #147 = Utf8               add\n-  #148 = Utf8               (Ljava/lang/Object;)Z\n-  #149 = Utf8               java/util/Collections\n-  #150 = Utf8               unmodifiableList\n-  #151 = Utf8               (Ljava/util/List;)Ljava/util/List;\n-  #152 = Utf8               remove\n-  #153 = Utf8               clear\n-  #154 = Utf8               addAll\n-  #155 = Utf8               (Ljava/util/Collection;)Z\n-  #156 = Utf8               append\n-  #157 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #158 = Utf8               size\n-  #159 = Utf8               ()I\n-  #160 = Utf8               get\n-  #161 = Utf8               (I)Ljava/lang/Object;\n-  #162 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #73 = Fieldref           #74.#75       // java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n+   #74 = Class              #76           // java/nio/file/FileVisitResult\n+   #75 = NameAndType        #77:#78       // TERMINATE:Ljava/nio/file/FileVisitResult;\n+   #76 = Utf8               java/nio/file/FileVisitResult\n+   #77 = Utf8               TERMINATE\n+   #78 = Utf8               Ljava/nio/file/FileVisitResult;\n+   #79 = InterfaceMethodref #64.#80       // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #80 = NameAndType        #68:#81       // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #81 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #82 = Fieldref           #74.#83       // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+   #83 = NameAndType        #84:#78       // CONTINUE:Ljava/nio/file/FileVisitResult;\n+   #84 = Utf8               CONTINUE\n+   #85 = String             #86           // fileFilter\n+   #86 = Utf8               fileFilter\n+   #87 = InterfaceMethodref #20.#88       // java/util/List.add:(Ljava/lang/Object;)Z\n+   #88 = NameAndType        #89:#90       // add:(Ljava/lang/Object;)Z\n+   #89 = Utf8               add\n+   #90 = Utf8               (Ljava/lang/Object;)Z\n+   #91 = Methodref          #92.#93       // java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n+   #92 = Class              #94           // java/util/Collections\n+   #93 = NameAndType        #95:#96       // unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n+   #94 = Utf8               java/util/Collections\n+   #95 = Utf8               unmodifiableList\n+   #96 = Utf8               (Ljava/util/List;)Ljava/util/List;\n+   #97 = InterfaceMethodref #20.#48       // java/util/List.isEmpty:()Z\n+   #98 = InterfaceMethodref #20.#99       // java/util/List.remove:(Ljava/lang/Object;)Z\n+   #99 = NameAndType        #100:#90      // remove:(Ljava/lang/Object;)Z\n+  #100 = Utf8               remove\n+  #101 = InterfaceMethodref #20.#102      // java/util/List.clear:()V\n+  #102 = NameAndType        #103:#11      // clear:()V\n+  #103 = Utf8               clear\n+  #104 = InterfaceMethodref #20.#105      // java/util/List.addAll:(Ljava/util/Collection;)Z\n+  #105 = NameAndType        #106:#107     // addAll:(Ljava/util/Collection;)Z\n+  #106 = Utf8               addAll\n+  #107 = Utf8               (Ljava/util/Collection;)Z\n+  #108 = Class              #109          // java/lang/StringBuilder\n+  #109 = Utf8               java/lang/StringBuilder\n+  #110 = Methodref          #108.#9       // java/lang/StringBuilder.\"<init>\":()V\n+  #111 = Methodref          #8.#112       // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n+  #112 = NameAndType        #113:#114     // toString:()Ljava/lang/String;\n+  #113 = Utf8               toString\n+  #114 = Utf8               ()Ljava/lang/String;\n+  #115 = Methodref          #108.#116     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #116 = NameAndType        #117:#118     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #117 = Utf8               append\n+  #118 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #119 = String             #120          // (\n+  #120 = Utf8               (\n+  #121 = InterfaceMethodref #20.#122      // java/util/List.size:()I\n+  #122 = NameAndType        #123:#124     // size:()I\n+  #123 = Utf8               size\n+  #124 = Utf8               ()I\n+  #125 = String             #126          // ,\n+  #126 = Utf8               ,\n+  #127 = InterfaceMethodref #20.#128      // java/util/List.get:(I)Ljava/lang/Object;\n+  #128 = NameAndType        #129:#130     // get:(I)Ljava/lang/Object;\n+  #129 = Utf8               get\n+  #130 = Utf8               (I)Ljava/lang/Object;\n+  #131 = Methodref          #108.#132     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #132 = NameAndType        #117:#133     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #133 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #134 = String             #135          // )\n+  #135 = Utf8               )\n+  #136 = Methodref          #108.#112     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #137 = Class              #138          // org/apache/commons/io/filefilter/ConditionalFileFilter\n+  #138 = Utf8               org/apache/commons/io/filefilter/ConditionalFileFilter\n+  #139 = Class              #140          // java/io/Serializable\n+  #140 = Utf8               java/io/Serializable\n+  #141 = Utf8               serialVersionUID\n+  #142 = Utf8               J\n+  #143 = Utf8               ConstantValue\n+  #144 = Long               7215974688563965257l\n+  #146 = Utf8               Signature\n+  #147 = Utf8               Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n+  #148 = Utf8               Code\n+  #149 = Utf8               LineNumberTable\n+  #150 = Utf8               (Ljava/util/ArrayList<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n+  #151 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #152 = Utf8               (Ljava/util/List;)V\n+  #153 = Utf8               (Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n+  #154 = Utf8               StackMapTable\n+  #155 = Utf8               getFileFilters\n+  #156 = Utf8               ()Ljava/util/List;\n+  #157 = Utf8               ()Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n+  #158 = Utf8               removeFileFilter\n+  #159 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)Z\n+  #160 = Utf8               setFileFilters\n+  #161 = Utf8               SourceFile\n+  #162 = Utf8               AndFileFilter.java\n {\n   private static final long serialVersionUID = 7215974688563965257l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 7215974688563965257l\n \n   private final java.util.List<org.apache.commons.io.filefilter.IOFileFilter> fileFilters;\n     descriptor: Ljava/util/List;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #56                          // Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n+    Signature: #147                         // Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n \n   public org.apache.commons.io.filefilter.AndFileFilter();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n@@ -195,39 +195,39 @@\n \n   private org.apache.commons.io.filefilter.AndFileFilter(java.util.ArrayList<org.apache.commons.io.filefilter.IOFileFilter>);\n     descriptor: (Ljava/util/ArrayList;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #2                  // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+         1: invokespecial #7                  // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: ldc           #3                  // String initialList\n-         8: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        11: checkcast     #5                  // class java/util/List\n-        14: putfield      #6                  // Field fileFilters:Ljava/util/List;\n+         6: ldc           #12                 // String initialList\n+         8: invokestatic  #14                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        11: checkcast     #20                 // class java/util/List\n+        14: putfield      #22                 // Field fileFilters:Ljava/util/List;\n         17: return\n       LineNumberTable:\n         line 62: 0\n         line 63: 4\n         line 64: 17\n-    Signature: #62                          // (Ljava/util/ArrayList<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n+    Signature: #150                         // (Ljava/util/ArrayList<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n \n   private org.apache.commons.io.filefilter.AndFileFilter(int);\n     descriptor: (I)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: new           #7                  // class java/util/ArrayList\n+         1: new           #26                 // class java/util/ArrayList\n          4: dup\n          5: iload_1\n-         6: invokespecial #8                  // Method java/util/ArrayList.\"<init>\":(I)V\n-         9: invokespecial #9                  // Method \"<init>\":(Ljava/util/ArrayList;)V\n+         6: invokespecial #28                 // Method java/util/ArrayList.\"<init>\":(I)V\n+         9: invokespecial #29                 // Method \"<init>\":(Ljava/util/ArrayList;)V\n         12: return\n       LineNumberTable:\n         line 72: 0\n         line 73: 12\n \n   public org.apache.commons.io.filefilter.AndFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter);\n     descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n@@ -235,90 +235,90 @@\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: iconst_2\n          2: invokespecial #1                  // Method \"<init>\":(I)V\n          5: aload_0\n          6: aload_1\n-         7: invokevirtual #10                 // Method addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+         7: invokevirtual #32                 // Method addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n         10: aload_0\n         11: aload_2\n-        12: invokevirtual #10                 // Method addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+        12: invokevirtual #32                 // Method addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n         15: return\n       LineNumberTable:\n         line 83: 0\n         line 84: 5\n         line 85: 10\n         line 86: 15\n \n   public org.apache.commons.io.filefilter.AndFileFilter(org.apache.commons.io.filefilter.IOFileFilter...);\n     descriptor: ([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: ldc           #11                 // String fileFilters\n-         4: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-         7: checkcast     #12                 // class \"[Lorg/apache/commons/io/filefilter/IOFileFilter;\"\n+         2: ldc           #36                 // String fileFilters\n+         4: invokestatic  #14                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         7: checkcast     #37                 // class \"[Lorg/apache/commons/io/filefilter/IOFileFilter;\"\n         10: arraylength\n         11: invokespecial #1                  // Method \"<init>\":(I)V\n         14: aload_0\n         15: aload_1\n-        16: invokevirtual #13                 // Method addFileFilter:([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+        16: invokevirtual #39                 // Method addFileFilter:([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n         19: return\n       LineNumberTable:\n         line 95: 0\n         line 96: 14\n         line 97: 19\n \n   public org.apache.commons.io.filefilter.AndFileFilter(java.util.List<org.apache.commons.io.filefilter.IOFileFilter>);\n     descriptor: (Ljava/util/List;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n-         1: new           #7                  // class java/util/ArrayList\n+         1: new           #26                 // class java/util/ArrayList\n          4: dup\n          5: aload_1\n-         6: ldc           #11                 // String fileFilters\n-         8: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        11: checkcast     #14                 // class java/util/Collection\n-        14: invokespecial #15                 // Method java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n-        17: invokespecial #9                  // Method \"<init>\":(Ljava/util/ArrayList;)V\n+         6: ldc           #36                 // String fileFilters\n+         8: invokestatic  #14                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        11: checkcast     #42                 // class java/util/Collection\n+        14: invokespecial #44                 // Method java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n+        17: invokespecial #29                 // Method \"<init>\":(Ljava/util/ArrayList;)V\n         20: return\n       LineNumberTable:\n         line 107: 0\n         line 108: 20\n-    Signature: #67                          // (Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n+    Signature: #153                         // (Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n \n   public boolean accept(java.io.File);\n     descriptor: (Ljava/io/File;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=4, args_size=2\n          0: aload_0\n-         1: invokespecial #16                 // Method isEmpty:()Z\n+         1: invokespecial #47                 // Method isEmpty:()Z\n          4: ifeq          9\n          7: iconst_0\n          8: ireturn\n          9: aload_0\n-        10: getfield      #6                  // Field fileFilters:Ljava/util/List;\n-        13: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+        10: getfield      #22                 // Field fileFilters:Ljava/util/List;\n+        13: invokeinterface #51,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n         18: astore_2\n         19: aload_2\n-        20: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        20: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         25: ifeq          53\n         28: aload_2\n-        29: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        34: checkcast     #20                 // class org/apache/commons/io/filefilter/IOFileFilter\n+        29: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        34: checkcast     #64                 // class org/apache/commons/io/filefilter/IOFileFilter\n         37: astore_3\n         38: aload_3\n         39: aload_1\n-        40: invokeinterface #21,  2           // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n+        40: invokeinterface #66,  2           // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n         45: ifne          50\n         48: iconst_0\n         49: ireturn\n         50: goto          19\n         53: iconst_1\n         54: ireturn\n       LineNumberTable:\n@@ -340,33 +340,33 @@\n \n   public boolean accept(java.io.File, java.lang.String);\n     descriptor: (Ljava/io/File;Ljava/lang/String;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=5, args_size=3\n          0: aload_0\n-         1: invokespecial #16                 // Method isEmpty:()Z\n+         1: invokespecial #47                 // Method isEmpty:()Z\n          4: ifeq          9\n          7: iconst_0\n          8: ireturn\n          9: aload_0\n-        10: getfield      #6                  // Field fileFilters:Ljava/util/List;\n-        13: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+        10: getfield      #22                 // Field fileFilters:Ljava/util/List;\n+        13: invokeinterface #51,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n         18: astore_3\n         19: aload_3\n-        20: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        20: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         25: ifeq          56\n         28: aload_3\n-        29: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        34: checkcast     #20                 // class org/apache/commons/io/filefilter/IOFileFilter\n+        29: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        34: checkcast     #64                 // class org/apache/commons/io/filefilter/IOFileFilter\n         37: astore        4\n         39: aload         4\n         41: aload_1\n         42: aload_2\n-        43: invokeinterface #22,  3           // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n+        43: invokeinterface #70,  3           // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n         48: ifne          53\n         51: iconst_0\n         52: ireturn\n         53: goto          19\n         56: iconst_1\n         57: ireturn\n       LineNumberTable:\n@@ -388,39 +388,39 @@\n \n   public java.nio.file.FileVisitResult accept(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes);\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=5, args_size=3\n          0: aload_0\n-         1: invokespecial #16                 // Method isEmpty:()Z\n+         1: invokespecial #47                 // Method isEmpty:()Z\n          4: ifeq          11\n-         7: getstatic     #23                 // Field java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n+         7: getstatic     #73                 // Field java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n         10: areturn\n         11: aload_0\n-        12: getfield      #6                  // Field fileFilters:Ljava/util/List;\n-        15: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+        12: getfield      #22                 // Field fileFilters:Ljava/util/List;\n+        15: invokeinterface #51,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n         20: astore_3\n         21: aload_3\n-        22: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        22: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         27: ifeq          63\n         30: aload_3\n-        31: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        36: checkcast     #20                 // class org/apache/commons/io/filefilter/IOFileFilter\n+        31: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        36: checkcast     #64                 // class org/apache/commons/io/filefilter/IOFileFilter\n         39: astore        4\n         41: aload         4\n         43: aload_1\n         44: aload_2\n-        45: invokeinterface #24,  3           // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-        50: getstatic     #25                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+        45: invokeinterface #79,  3           // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+        50: getstatic     #82                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n         53: if_acmpeq     60\n-        56: getstatic     #23                 // Field java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n+        56: getstatic     #73                 // Field java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n         59: areturn\n         60: goto          21\n-        63: getstatic     #25                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+        63: getstatic     #82                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n         66: areturn\n       LineNumberTable:\n         line 148: 0\n         line 149: 7\n         line 151: 11\n         line 152: 41\n         line 153: 56\n@@ -437,35 +437,35 @@\n \n   public void addFileFilter(org.apache.commons.io.filefilter.IOFileFilter);\n     descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #6                  // Field fileFilters:Ljava/util/List;\n+         1: getfield      #22                 // Field fileFilters:Ljava/util/List;\n          4: aload_1\n-         5: ldc           #26                 // String fileFilter\n-         7: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        10: checkcast     #20                 // class org/apache/commons/io/filefilter/IOFileFilter\n-        13: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+         5: ldc           #85                 // String fileFilter\n+         7: invokestatic  #14                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        10: checkcast     #64                 // class org/apache/commons/io/filefilter/IOFileFilter\n+        13: invokeinterface #87,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         18: pop\n         19: return\n       LineNumberTable:\n         line 164: 0\n         line 165: 19\n \n   public void addFileFilter(org.apache.commons.io.filefilter.IOFileFilter...);\n     descriptor: ([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=2, locals=6, args_size=2\n          0: aload_1\n-         1: ldc           #11                 // String fileFilters\n-         3: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-         6: checkcast     #12                 // class \"[Lorg/apache/commons/io/filefilter/IOFileFilter;\"\n+         1: ldc           #36                 // String fileFilters\n+         3: invokestatic  #14                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         6: checkcast     #37                 // class \"[Lorg/apache/commons/io/filefilter/IOFileFilter;\"\n          9: astore_2\n         10: aload_2\n         11: arraylength\n         12: istore_3\n         13: iconst_0\n         14: istore        4\n         16: iload         4\n@@ -473,15 +473,15 @@\n         19: if_icmpge     40\n         22: aload_2\n         23: iload         4\n         25: aaload\n         26: astore        5\n         28: aload_0\n         29: aload         5\n-        31: invokevirtual #10                 // Method addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+        31: invokevirtual #32                 // Method addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n         34: iinc          4, 1\n         37: goto          16\n         40: return\n       LineNumberTable:\n         line 174: 0\n         line 175: 28\n         line 174: 34\n@@ -495,112 +495,112 @@\n \n   public java.util.List<org.apache.commons.io.filefilter.IOFileFilter> getFileFilters();\n     descriptor: ()Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field fileFilters:Ljava/util/List;\n-         4: invokestatic  #28                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n+         1: getfield      #22                 // Field fileFilters:Ljava/util/List;\n+         4: invokestatic  #91                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n          7: areturn\n       LineNumberTable:\n         line 184: 0\n-    Signature: #78                          // ()Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n+    Signature: #157                         // ()Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n \n   private boolean isEmpty();\n     descriptor: ()Z\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field fileFilters:Ljava/util/List;\n-         4: invokeinterface #29,  1           // InterfaceMethod java/util/List.isEmpty:()Z\n+         1: getfield      #22                 // Field fileFilters:Ljava/util/List;\n+         4: invokeinterface #97,  1           // InterfaceMethod java/util/List.isEmpty:()Z\n          9: ireturn\n       LineNumberTable:\n         line 188: 0\n \n   public boolean removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter);\n     descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #6                  // Field fileFilters:Ljava/util/List;\n+         1: getfield      #22                 // Field fileFilters:Ljava/util/List;\n          4: aload_1\n-         5: invokeinterface #30,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z\n+         5: invokeinterface #98,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z\n         10: ireturn\n       LineNumberTable:\n         line 196: 0\n \n   public void setFileFilters(java.util.List<org.apache.commons.io.filefilter.IOFileFilter>);\n     descriptor: (Ljava/util/List;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #6                  // Field fileFilters:Ljava/util/List;\n-         4: invokeinterface #31,  1           // InterfaceMethod java/util/List.clear:()V\n+         1: getfield      #22                 // Field fileFilters:Ljava/util/List;\n+         4: invokeinterface #101,  1          // InterfaceMethod java/util/List.clear:()V\n          9: aload_0\n-        10: getfield      #6                  // Field fileFilters:Ljava/util/List;\n+        10: getfield      #22                 // Field fileFilters:Ljava/util/List;\n         13: aload_1\n-        14: invokeinterface #32,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z\n+        14: invokeinterface #104,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z\n         19: pop\n         20: return\n       LineNumberTable:\n         line 204: 0\n         line 205: 9\n         line 206: 20\n-    Signature: #67                          // (Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n+    Signature: #153                         // (Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=1\n-         0: new           #33                 // class java/lang/StringBuilder\n+         0: new           #108                // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #34                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #110                // Method java/lang/StringBuilder.\"<init>\":()V\n          7: astore_1\n          8: aload_1\n          9: aload_0\n-        10: invokespecial #35                 // Method org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n-        13: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        10: invokespecial #111                // Method org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n+        13: invokevirtual #115                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         16: pop\n         17: aload_1\n-        18: ldc           #37                 // String (\n-        20: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        18: ldc           #119                // String (\n+        20: invokevirtual #115                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         23: pop\n         24: iconst_0\n         25: istore_2\n         26: iload_2\n         27: aload_0\n-        28: getfield      #6                  // Field fileFilters:Ljava/util/List;\n-        31: invokeinterface #38,  1           // InterfaceMethod java/util/List.size:()I\n+        28: getfield      #22                 // Field fileFilters:Ljava/util/List;\n+        31: invokeinterface #121,  1          // InterfaceMethod java/util/List.size:()I\n         36: if_icmpge     71\n         39: iload_2\n         40: ifle          50\n         43: aload_1\n-        44: ldc           #39                 // String ,\n-        46: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        44: ldc           #125                // String ,\n+        46: invokevirtual #115                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         49: pop\n         50: aload_1\n         51: aload_0\n-        52: getfield      #6                  // Field fileFilters:Ljava/util/List;\n+        52: getfield      #22                 // Field fileFilters:Ljava/util/List;\n         55: iload_2\n-        56: invokeinterface #40,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n-        61: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        56: invokeinterface #127,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n+        61: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n         64: pop\n         65: iinc          2, 1\n         68: goto          26\n         71: aload_1\n-        72: ldc           #42                 // String )\n-        74: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        72: ldc           #134                // String )\n+        74: invokevirtual #115                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         77: pop\n         78: aload_1\n-        79: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        79: invokevirtual #136                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         82: areturn\n       LineNumberTable:\n         line 215: 0\n         line 216: 8\n         line 217: 17\n         line 218: 24\n         line 219: 39\n"}]}
