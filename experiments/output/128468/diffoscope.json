{"diffoscope-json-version": 1, "source1": "first/IOCase.class", "source2": "second/IOCase.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,36 +1,38 @@\n \n package org.apache.commons.io;\n \n import java.util.Objects;\n \n public enum IOCase\n {\n-    SENSITIVE(\"Sensitive\", true), \n-    INSENSITIVE(\"Insensitive\", false), \n-    SYSTEM(\"System\", !FilenameUtils.isSystemWindows());\n+    SENSITIVE(\"SENSITIVE\", 0, \"Sensitive\", true), \n+    INSENSITIVE(\"INSENSITIVE\", 1, \"Insensitive\", false), \n+    SYSTEM(\"SYSTEM\", 2, \"System\", !FilenameUtils.isSystemWindows());\n     \n     private static final long serialVersionUID = -6343169151696340687L;\n     private final String name;\n     private final transient boolean sensitive;\n     \n     public static boolean isCaseSensitive(final IOCase caseSensitivity) {\n         return caseSensitivity != null && !caseSensitivity.isCaseSensitive();\n     }\n     \n     public static IOCase forName(final String name) {\n-        for (final IOCase ioCase : values()) {\n+        IOCase[] values;\n+        for (int length = (values = values()).length, i = 0; i < length; ++i) {\n+            final IOCase ioCase = values[i];\n             if (ioCase.getName().equals(name)) {\n                 return ioCase;\n             }\n         }\n         throw new IllegalArgumentException(\"Invalid IOCase name: \" + name);\n     }\n     \n-    private IOCase(final String name, final boolean sensitive) {\n+    private IOCase(final String name2, final int ordinal, final String name, final boolean sensitive) {\n         this.name = name;\n         this.sensitive = sensitive;\n     }\n     \n     private Object readResolve() {\n         return forName(this.name);\n     }\n"}]}
