{"diffoscope-json-version": 1, "source1": "first/ProxyCollectionWriter.class", "source2": "second/ProxyCollectionWriter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,699 +1,686 @@\n-  SHA-256 checksum 9f8b23d6ae1081328f4837f5c32c090957e3a7e46172c582d38034200e93b63b\n+  SHA-256 checksum e19e4af66952cc333136401ac8b896111c0ba08aede17886dec53d75b38fcf34\n   Compiled from \"ProxyCollectionWriter.java\"\n public class org.apache.commons.io.output.ProxyCollectionWriter extends org.apache.commons.io.output.FilterCollectionWriter\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #11                         // org/apache/commons/io/output/ProxyCollectionWriter\n-  super_class: #2                         // org/apache/commons/io/output/FilterCollectionWriter\n+  this_class: #1                          // org/apache/commons/io/output/ProxyCollectionWriter\n+  super_class: #3                         // org/apache/commons/io/output/FilterCollectionWriter\n   interfaces: 0, fields: 0, methods: 18, attributes: 1\n Constant pool:\n-    #1 = Methodref          #2.#3         // org/apache/commons/io/output/FilterCollectionWriter.\"<init>\":(Ljava/util/Collection;)V\n-    #2 = Class              #4            // org/apache/commons/io/output/FilterCollectionWriter\n-    #3 = NameAndType        #5:#6         // \"<init>\":(Ljava/util/Collection;)V\n+    #1 = Class              #2            // org/apache/commons/io/output/ProxyCollectionWriter\n+    #2 = Utf8               org/apache/commons/io/output/ProxyCollectionWriter\n+    #3 = Class              #4            // org/apache/commons/io/output/FilterCollectionWriter\n     #4 = Utf8               org/apache/commons/io/output/FilterCollectionWriter\n     #5 = Utf8               <init>\n     #6 = Utf8               (Ljava/util/Collection;)V\n-    #7 = Methodref          #2.#8         // org/apache/commons/io/output/FilterCollectionWriter.\"<init>\":([Ljava/io/Writer;)V\n-    #8 = NameAndType        #5:#9         // \"<init>\":([Ljava/io/Writer;)V\n-    #9 = Utf8               ([Ljava/io/Writer;)V\n-   #10 = Methodref          #11.#12       // org/apache/commons/io/output/ProxyCollectionWriter.beforeWrite:(I)V\n-   #11 = Class              #13           // org/apache/commons/io/output/ProxyCollectionWriter\n-   #12 = NameAndType        #14:#15       // beforeWrite:(I)V\n-   #13 = Utf8               org/apache/commons/io/output/ProxyCollectionWriter\n-   #14 = Utf8               beforeWrite\n-   #15 = Utf8               (I)V\n-   #16 = Methodref          #2.#17        // org/apache/commons/io/output/FilterCollectionWriter.append:(C)Ljava/io/Writer;\n-   #17 = NameAndType        #18:#19       // append:(C)Ljava/io/Writer;\n-   #18 = Utf8               append\n-   #19 = Utf8               (C)Ljava/io/Writer;\n-   #20 = Methodref          #11.#21       // org/apache/commons/io/output/ProxyCollectionWriter.afterWrite:(I)V\n-   #21 = NameAndType        #22:#15       // afterWrite:(I)V\n-   #22 = Utf8               afterWrite\n-   #23 = Class              #24           // java/io/IOException\n-   #24 = Utf8               java/io/IOException\n-   #25 = Methodref          #11.#26       // org/apache/commons/io/output/ProxyCollectionWriter.handleIOException:(Ljava/io/IOException;)V\n-   #26 = NameAndType        #27:#28       // handleIOException:(Ljava/io/IOException;)V\n-   #27 = Utf8               handleIOException\n-   #28 = Utf8               (Ljava/io/IOException;)V\n-   #29 = Methodref          #30.#31       // org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n-   #30 = Class              #32           // org/apache/commons/io/IOUtils\n-   #31 = NameAndType        #33:#34       // length:(Ljava/lang/CharSequence;)I\n-   #32 = Utf8               org/apache/commons/io/IOUtils\n-   #33 = Utf8               length\n-   #34 = Utf8               (Ljava/lang/CharSequence;)I\n-   #35 = Methodref          #2.#36        // org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #36 = NameAndType        #18:#37       // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #37 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #38 = Methodref          #2.#39        // org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #39 = NameAndType        #18:#40       // append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #40 = Utf8               (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #41 = Methodref          #2.#42        // org/apache/commons/io/output/FilterCollectionWriter.close:()V\n-   #42 = NameAndType        #43:#44       // close:()V\n-   #43 = Utf8               close\n-   #44 = Utf8               ()V\n-   #45 = Methodref          #2.#46        // org/apache/commons/io/output/FilterCollectionWriter.flush:()V\n-   #46 = NameAndType        #47:#44       // flush:()V\n-   #47 = Utf8               flush\n-   #48 = Methodref          #30.#49       // org/apache/commons/io/IOUtils.length:([C)I\n-   #49 = NameAndType        #33:#50       // length:([C)I\n-   #50 = Utf8               ([C)I\n-   #51 = Methodref          #2.#52        // org/apache/commons/io/output/FilterCollectionWriter.write:([C)V\n-   #52 = NameAndType        #53:#54       // write:([C)V\n-   #53 = Utf8               write\n-   #54 = Utf8               ([C)V\n-   #55 = Methodref          #2.#56        // org/apache/commons/io/output/FilterCollectionWriter.write:([CII)V\n-   #56 = NameAndType        #53:#57       // write:([CII)V\n-   #57 = Utf8               ([CII)V\n-   #58 = Methodref          #2.#59        // org/apache/commons/io/output/FilterCollectionWriter.write:(I)V\n-   #59 = NameAndType        #53:#15       // write:(I)V\n-   #60 = Methodref          #2.#61        // org/apache/commons/io/output/FilterCollectionWriter.write:(Ljava/lang/String;)V\n-   #61 = NameAndType        #53:#62       // write:(Ljava/lang/String;)V\n-   #62 = Utf8               (Ljava/lang/String;)V\n-   #63 = Methodref          #2.#64        // org/apache/commons/io/output/FilterCollectionWriter.write:(Ljava/lang/String;II)V\n-   #64 = NameAndType        #53:#65       // write:(Ljava/lang/String;II)V\n-   #65 = Utf8               (Ljava/lang/String;II)V\n-   #66 = Methodref          #11.#17       // org/apache/commons/io/output/ProxyCollectionWriter.append:(C)Ljava/io/Writer;\n-   #67 = Methodref          #11.#39       // org/apache/commons/io/output/ProxyCollectionWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #68 = Methodref          #11.#36       // org/apache/commons/io/output/ProxyCollectionWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #69 = Utf8               Code\n-   #70 = Utf8               LineNumberTable\n-   #71 = Utf8               LocalVariableTable\n-   #72 = Utf8               this\n-   #73 = Utf8               Lorg/apache/commons/io/output/ProxyCollectionWriter;\n-   #74 = Utf8               writers\n-   #75 = Utf8               Ljava/util/Collection;\n-   #76 = Utf8               LocalVariableTypeTable\n-   #77 = Utf8               Ljava/util/Collection<Ljava/io/Writer;>;\n-   #78 = Utf8               Signature\n-   #79 = Utf8               (Ljava/util/Collection<Ljava/io/Writer;>;)V\n-   #80 = Utf8               [Ljava/io/Writer;\n-   #81 = Utf8               n\n-   #82 = Utf8               I\n-   #83 = Utf8               Exceptions\n-   #84 = Utf8               e\n-   #85 = Utf8               Ljava/io/IOException;\n-   #86 = Utf8               c\n-   #87 = Utf8               C\n-   #88 = Utf8               StackMapTable\n-   #89 = Utf8               len\n-   #90 = Utf8               csq\n-   #91 = Utf8               Ljava/lang/CharSequence;\n-   #92 = Utf8               start\n-   #93 = Utf8               end\n-   #94 = Utf8               cbuf\n-   #95 = Utf8               [C\n-   #96 = Utf8               off\n-   #97 = Utf8               str\n-   #98 = Utf8               Ljava/lang/String;\n-   #99 = Utf8               (C)Ljava/lang/Appendable;\n-  #100 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-  #101 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+    #7 = Utf8               Signature\n+    #8 = Utf8               (Ljava/util/Collection<Ljava/io/Writer;>;)V\n+    #9 = Utf8               Code\n+   #10 = Methodref          #3.#11        // org/apache/commons/io/output/FilterCollectionWriter.\"<init>\":(Ljava/util/Collection;)V\n+   #11 = NameAndType        #5:#6         // \"<init>\":(Ljava/util/Collection;)V\n+   #12 = Utf8               LineNumberTable\n+   #13 = Utf8               LocalVariableTable\n+   #14 = Utf8               this\n+   #15 = Utf8               Lorg/apache/commons/io/output/ProxyCollectionWriter;\n+   #16 = Utf8               writers\n+   #17 = Utf8               Ljava/util/Collection;\n+   #18 = Utf8               LocalVariableTypeTable\n+   #19 = Utf8               Ljava/util/Collection<Ljava/io/Writer;>;\n+   #20 = Utf8               ([Ljava/io/Writer;)V\n+   #21 = Methodref          #3.#22        // org/apache/commons/io/output/FilterCollectionWriter.\"<init>\":([Ljava/io/Writer;)V\n+   #22 = NameAndType        #5:#20        // \"<init>\":([Ljava/io/Writer;)V\n+   #23 = Utf8               [Ljava/io/Writer;\n+   #24 = Utf8               afterWrite\n+   #25 = Utf8               (I)V\n+   #26 = Utf8               Exceptions\n+   #27 = Class              #28           // java/io/IOException\n+   #28 = Utf8               java/io/IOException\n+   #29 = Utf8               n\n+   #30 = Utf8               I\n+   #31 = Utf8               append\n+   #32 = Utf8               (C)Ljava/io/Writer;\n+   #33 = Methodref          #1.#34        // org/apache/commons/io/output/ProxyCollectionWriter.beforeWrite:(I)V\n+   #34 = NameAndType        #35:#25       // beforeWrite:(I)V\n+   #35 = Utf8               beforeWrite\n+   #36 = Methodref          #3.#37        // org/apache/commons/io/output/FilterCollectionWriter.append:(C)Ljava/io/Writer;\n+   #37 = NameAndType        #31:#32       // append:(C)Ljava/io/Writer;\n+   #38 = Methodref          #1.#39        // org/apache/commons/io/output/ProxyCollectionWriter.afterWrite:(I)V\n+   #39 = NameAndType        #24:#25       // afterWrite:(I)V\n+   #40 = Methodref          #1.#41        // org/apache/commons/io/output/ProxyCollectionWriter.handleIOException:(Ljava/io/IOException;)V\n+   #41 = NameAndType        #42:#43       // handleIOException:(Ljava/io/IOException;)V\n+   #42 = Utf8               handleIOException\n+   #43 = Utf8               (Ljava/io/IOException;)V\n+   #44 = Utf8               c\n+   #45 = Utf8               C\n+   #46 = Utf8               e\n+   #47 = Utf8               Ljava/io/IOException;\n+   #48 = Utf8               StackMapTable\n+   #49 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;\n+   #50 = Methodref          #51.#53       // org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n+   #51 = Class              #52           // org/apache/commons/io/IOUtils\n+   #52 = Utf8               org/apache/commons/io/IOUtils\n+   #53 = NameAndType        #54:#55       // length:(Ljava/lang/CharSequence;)I\n+   #54 = Utf8               length\n+   #55 = Utf8               (Ljava/lang/CharSequence;)I\n+   #56 = Methodref          #3.#57        // org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+   #57 = NameAndType        #31:#49       // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+   #58 = Utf8               csq\n+   #59 = Utf8               Ljava/lang/CharSequence;\n+   #60 = Utf8               len\n+   #61 = Utf8               (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+   #62 = Methodref          #3.#63        // org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+   #63 = NameAndType        #31:#61       // append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+   #64 = Utf8               start\n+   #65 = Utf8               end\n+   #66 = Utf8               close\n+   #67 = Utf8               ()V\n+   #68 = Methodref          #3.#69        // org/apache/commons/io/output/FilterCollectionWriter.close:()V\n+   #69 = NameAndType        #66:#67       // close:()V\n+   #70 = Utf8               flush\n+   #71 = Methodref          #3.#72        // org/apache/commons/io/output/FilterCollectionWriter.flush:()V\n+   #72 = NameAndType        #70:#67       // flush:()V\n+   #73 = Utf8               write\n+   #74 = Utf8               ([C)V\n+   #75 = Methodref          #51.#76       // org/apache/commons/io/IOUtils.length:([C)I\n+   #76 = NameAndType        #54:#77       // length:([C)I\n+   #77 = Utf8               ([C)I\n+   #78 = Methodref          #3.#79        // org/apache/commons/io/output/FilterCollectionWriter.write:([C)V\n+   #79 = NameAndType        #73:#74       // write:([C)V\n+   #80 = Utf8               cbuf\n+   #81 = Utf8               [C\n+   #82 = Utf8               ([CII)V\n+   #83 = Methodref          #3.#84        // org/apache/commons/io/output/FilterCollectionWriter.write:([CII)V\n+   #84 = NameAndType        #73:#82       // write:([CII)V\n+   #85 = Utf8               off\n+   #86 = Methodref          #3.#87        // org/apache/commons/io/output/FilterCollectionWriter.write:(I)V\n+   #87 = NameAndType        #73:#25       // write:(I)V\n+   #88 = Utf8               (Ljava/lang/String;)V\n+   #89 = Methodref          #3.#90        // org/apache/commons/io/output/FilterCollectionWriter.write:(Ljava/lang/String;)V\n+   #90 = NameAndType        #73:#88       // write:(Ljava/lang/String;)V\n+   #91 = Utf8               str\n+   #92 = Utf8               Ljava/lang/String;\n+   #93 = Utf8               (Ljava/lang/String;II)V\n+   #94 = Methodref          #3.#95        // org/apache/commons/io/output/FilterCollectionWriter.write:(Ljava/lang/String;II)V\n+   #95 = NameAndType        #73:#93       // write:(Ljava/lang/String;II)V\n+   #96 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+   #97 = Methodref          #1.#63        // org/apache/commons/io/output/ProxyCollectionWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+   #98 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+   #99 = Methodref          #1.#57        // org/apache/commons/io/output/ProxyCollectionWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+  #100 = Utf8               (C)Ljava/lang/Appendable;\n+  #101 = Methodref          #1.#37        // org/apache/commons/io/output/ProxyCollectionWriter.append:(C)Ljava/io/Writer;\n   #102 = Utf8               SourceFile\n   #103 = Utf8               ProxyCollectionWriter.java\n {\n   public org.apache.commons.io.output.ProxyCollectionWriter(java.util.Collection<java.io.Writer>);\n     descriptor: (Ljava/util/Collection;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Signature: #8                           // (Ljava/util/Collection<Ljava/io/Writer;>;)V\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #1                  // Method org/apache/commons/io/output/FilterCollectionWriter.\"<init>\":(Ljava/util/Collection;)V\n+         2: invokespecial #10                 // Method org/apache/commons/io/output/FilterCollectionWriter.\"<init>\":(Ljava/util/Collection;)V\n          5: return\n       LineNumberTable:\n         line 44: 0\n         line 45: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/output/ProxyCollectionWriter;\n             0       6     1 writers   Ljava/util/Collection;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       6     1 writers   Ljava/util/Collection<Ljava/io/Writer;>;\n-    Signature: #79                          // (Ljava/util/Collection<Ljava/io/Writer;>;)V\n \n   public org.apache.commons.io.output.ProxyCollectionWriter(java.io.Writer...);\n     descriptor: ([Ljava/io/Writer;)V\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #7                  // Method org/apache/commons/io/output/FilterCollectionWriter.\"<init>\":([Ljava/io/Writer;)V\n+         2: invokespecial #21                 // Method org/apache/commons/io/output/FilterCollectionWriter.\"<init>\":([Ljava/io/Writer;)V\n          5: return\n       LineNumberTable:\n         line 53: 0\n         line 54: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/output/ProxyCollectionWriter;\n             0       6     1 writers   [Ljava/io/Writer;\n \n   protected void afterWrite(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=0, locals=2, args_size=2\n          0: return\n       LineNumberTable:\n         line 69: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/output/ProxyCollectionWriter;\n             0       1     1     n   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.io.Writer append(char) throws java.io.IOException;\n     descriptor: (C)Ljava/io/Writer;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #10                 // Method beforeWrite:(I)V\n+         2: invokevirtual #33                 // Method beforeWrite:(I)V\n          5: aload_0\n          6: iload_1\n-         7: invokespecial #16                 // Method org/apache/commons/io/output/FilterCollectionWriter.append:(C)Ljava/io/Writer;\n+         7: invokespecial #36                 // Method org/apache/commons/io/output/FilterCollectionWriter.append:(C)Ljava/io/Writer;\n         10: pop\n         11: aload_0\n         12: iconst_1\n-        13: invokevirtual #20                 // Method afterWrite:(I)V\n+        13: invokevirtual #38                 // Method afterWrite:(I)V\n         16: goto          25\n         19: astore_2\n         20: aload_0\n         21: aload_2\n-        22: invokevirtual #25                 // Method handleIOException:(Ljava/io/IOException;)V\n+        22: invokevirtual #40                 // Method handleIOException:(Ljava/io/IOException;)V\n         25: aload_0\n         26: areturn\n       Exception table:\n          from    to  target type\n              0    16    19   Class java/io/IOException\n       LineNumberTable:\n         line 82: 0\n         line 83: 5\n         line 84: 11\n-        line 87: 16\n-        line 85: 19\n+        line 85: 16\n         line 86: 20\n         line 88: 25\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           20       5     2     e   Ljava/io/IOException;\n             0      27     0  this   Lorg/apache/commons/io/output/ProxyCollectionWriter;\n             0      27     1     c   C\n+           20       5     2     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 83 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 5 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.io.Writer append(java.lang.CharSequence) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;)Ljava/io/Writer;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_1\n-         1: invokestatic  #29                 // Method org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n+         1: invokestatic  #50                 // Method org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n          4: istore_2\n          5: aload_0\n          6: iload_2\n-         7: invokevirtual #10                 // Method beforeWrite:(I)V\n+         7: invokevirtual #33                 // Method beforeWrite:(I)V\n         10: aload_0\n         11: aload_1\n-        12: invokespecial #35                 // Method org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+        12: invokespecial #56                 // Method org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n         15: pop\n         16: aload_0\n         17: iload_2\n-        18: invokevirtual #20                 // Method afterWrite:(I)V\n+        18: invokevirtual #38                 // Method afterWrite:(I)V\n         21: goto          30\n         24: astore_2\n         25: aload_0\n         26: aload_2\n-        27: invokevirtual #25                 // Method handleIOException:(Ljava/io/IOException;)V\n+        27: invokevirtual #40                 // Method handleIOException:(Ljava/io/IOException;)V\n         30: aload_0\n         31: areturn\n       Exception table:\n          from    to  target type\n              0    21    24   Class java/io/IOException\n       LineNumberTable:\n         line 101: 0\n         line 102: 5\n         line 103: 10\n         line 104: 16\n-        line 107: 21\n-        line 105: 24\n+        line 105: 21\n         line 106: 25\n         line 108: 30\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            5      16     2   len   I\n-           25       5     2     e   Ljava/io/IOException;\n             0      32     0  this   Lorg/apache/commons/io/output/ProxyCollectionWriter;\n             0      32     1   csq   Ljava/lang/CharSequence;\n+            5      16     2   len   I\n+           25       5     2     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 88 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 5 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.io.Writer append(java.lang.CharSequence, int, int) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_0\n          1: iload_3\n          2: iload_2\n          3: isub\n-         4: invokevirtual #10                 // Method beforeWrite:(I)V\n+         4: invokevirtual #33                 // Method beforeWrite:(I)V\n          7: aload_0\n          8: aload_1\n          9: iload_2\n         10: iload_3\n-        11: invokespecial #38                 // Method org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+        11: invokespecial #62                 // Method org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n         14: pop\n         15: aload_0\n         16: iload_3\n         17: iload_2\n         18: isub\n-        19: invokevirtual #20                 // Method afterWrite:(I)V\n+        19: invokevirtual #38                 // Method afterWrite:(I)V\n         22: goto          33\n         25: astore        4\n         27: aload_0\n         28: aload         4\n-        30: invokevirtual #25                 // Method handleIOException:(Ljava/io/IOException;)V\n+        30: invokevirtual #40                 // Method handleIOException:(Ljava/io/IOException;)V\n         33: aload_0\n         34: areturn\n       Exception table:\n          from    to  target type\n              0    22    25   Class java/io/IOException\n       LineNumberTable:\n         line 123: 0\n         line 124: 7\n         line 125: 15\n-        line 128: 22\n-        line 126: 25\n+        line 126: 22\n         line 127: 27\n         line 129: 33\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           27       6     4     e   Ljava/io/IOException;\n             0      35     0  this   Lorg/apache/commons/io/output/ProxyCollectionWriter;\n             0      35     1   csq   Ljava/lang/CharSequence;\n             0      35     2 start   I\n             0      35     3   end   I\n+           27       6     4     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 89 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 7 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected void beforeWrite(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=0, locals=2, args_size=2\n          0: return\n       LineNumberTable:\n         line 145: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/output/ProxyCollectionWriter;\n             0       1     1     n   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #41                 // Method org/apache/commons/io/output/FilterCollectionWriter.close:()V\n+         1: invokespecial #68                 // Method org/apache/commons/io/output/FilterCollectionWriter.close:()V\n          4: goto          13\n          7: astore_1\n          8: aload_0\n          9: aload_1\n-        10: invokevirtual #25                 // Method handleIOException:(Ljava/io/IOException;)V\n+        10: invokevirtual #40                 // Method handleIOException:(Ljava/io/IOException;)V\n         13: return\n       Exception table:\n          from    to  target type\n              0     4     7   Class java/io/IOException\n       LineNumberTable:\n         line 155: 0\n-        line 158: 4\n-        line 156: 7\n+        line 156: 4\n         line 157: 8\n         line 159: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            8       5     1     e   Ljava/io/IOException;\n             0      14     0  this   Lorg/apache/commons/io/output/ProxyCollectionWriter;\n+            8       5     1     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 71 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 5 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void flush() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #45                 // Method org/apache/commons/io/output/FilterCollectionWriter.flush:()V\n+         1: invokespecial #71                 // Method org/apache/commons/io/output/FilterCollectionWriter.flush:()V\n          4: goto          13\n          7: astore_1\n          8: aload_0\n          9: aload_1\n-        10: invokevirtual #25                 // Method handleIOException:(Ljava/io/IOException;)V\n+        10: invokevirtual #40                 // Method handleIOException:(Ljava/io/IOException;)V\n         13: return\n       Exception table:\n          from    to  target type\n              0     4     7   Class java/io/IOException\n       LineNumberTable:\n         line 169: 0\n-        line 172: 4\n-        line 170: 7\n+        line 170: 4\n         line 171: 8\n         line 173: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            8       5     1     e   Ljava/io/IOException;\n             0      14     0  this   Lorg/apache/commons/io/output/ProxyCollectionWriter;\n+            8       5     1     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 71 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 5 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected void handleIOException(java.io.IOException) throws java.io.IOException;\n     descriptor: (Ljava/io/IOException;)V\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_1\n          1: athrow\n       LineNumberTable:\n         line 186: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       2     0  this   Lorg/apache/commons/io/output/ProxyCollectionWriter;\n             0       2     1     e   Ljava/io/IOException;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(char[]) throws java.io.IOException;\n     descriptor: ([C)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_1\n-         1: invokestatic  #48                 // Method org/apache/commons/io/IOUtils.length:([C)I\n+         1: invokestatic  #75                 // Method org/apache/commons/io/IOUtils.length:([C)I\n          4: istore_2\n          5: aload_0\n          6: iload_2\n-         7: invokevirtual #10                 // Method beforeWrite:(I)V\n+         7: invokevirtual #33                 // Method beforeWrite:(I)V\n         10: aload_0\n         11: aload_1\n-        12: invokespecial #51                 // Method org/apache/commons/io/output/FilterCollectionWriter.write:([C)V\n+        12: invokespecial #78                 // Method org/apache/commons/io/output/FilterCollectionWriter.write:([C)V\n         15: aload_0\n         16: iload_2\n-        17: invokevirtual #20                 // Method afterWrite:(I)V\n+        17: invokevirtual #38                 // Method afterWrite:(I)V\n         20: goto          29\n         23: astore_2\n         24: aload_0\n         25: aload_2\n-        26: invokevirtual #25                 // Method handleIOException:(Ljava/io/IOException;)V\n+        26: invokevirtual #40                 // Method handleIOException:(Ljava/io/IOException;)V\n         29: return\n       Exception table:\n          from    to  target type\n              0    20    23   Class java/io/IOException\n       LineNumberTable:\n         line 198: 0\n         line 199: 5\n         line 200: 10\n         line 201: 15\n-        line 204: 20\n-        line 202: 23\n+        line 202: 20\n         line 203: 24\n         line 205: 29\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            5      15     2   len   I\n-           24       5     2     e   Ljava/io/IOException;\n             0      30     0  this   Lorg/apache/commons/io/output/ProxyCollectionWriter;\n             0      30     1  cbuf   [C\n+            5      15     2   len   I\n+           24       5     2     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 87 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 5 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(char[], int, int) throws java.io.IOException;\n     descriptor: ([CII)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_0\n          1: iload_3\n-         2: invokevirtual #10                 // Method beforeWrite:(I)V\n+         2: invokevirtual #33                 // Method beforeWrite:(I)V\n          5: aload_0\n          6: aload_1\n          7: iload_2\n          8: iload_3\n-         9: invokespecial #55                 // Method org/apache/commons/io/output/FilterCollectionWriter.write:([CII)V\n+         9: invokespecial #83                 // Method org/apache/commons/io/output/FilterCollectionWriter.write:([CII)V\n         12: aload_0\n         13: iload_3\n-        14: invokevirtual #20                 // Method afterWrite:(I)V\n+        14: invokevirtual #38                 // Method afterWrite:(I)V\n         17: goto          28\n         20: astore        4\n         22: aload_0\n         23: aload         4\n-        25: invokevirtual #25                 // Method handleIOException:(Ljava/io/IOException;)V\n+        25: invokevirtual #40                 // Method handleIOException:(Ljava/io/IOException;)V\n         28: return\n       Exception table:\n          from    to  target type\n              0    17    20   Class java/io/IOException\n       LineNumberTable:\n         line 218: 0\n         line 219: 5\n         line 220: 12\n-        line 223: 17\n-        line 221: 20\n+        line 221: 17\n         line 222: 22\n         line 224: 28\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           22       6     4     e   Ljava/io/IOException;\n             0      29     0  this   Lorg/apache/commons/io/output/ProxyCollectionWriter;\n             0      29     1  cbuf   [C\n             0      29     2   off   I\n             0      29     3   len   I\n+           22       6     4     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 84 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 7 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #10                 // Method beforeWrite:(I)V\n+         2: invokevirtual #33                 // Method beforeWrite:(I)V\n          5: aload_0\n          6: iload_1\n-         7: invokespecial #58                 // Method org/apache/commons/io/output/FilterCollectionWriter.write:(I)V\n+         7: invokespecial #86                 // Method org/apache/commons/io/output/FilterCollectionWriter.write:(I)V\n         10: aload_0\n         11: iconst_1\n-        12: invokevirtual #20                 // Method afterWrite:(I)V\n+        12: invokevirtual #38                 // Method afterWrite:(I)V\n         15: goto          24\n         18: astore_2\n         19: aload_0\n         20: aload_2\n-        21: invokevirtual #25                 // Method handleIOException:(Ljava/io/IOException;)V\n+        21: invokevirtual #40                 // Method handleIOException:(Ljava/io/IOException;)V\n         24: return\n       Exception table:\n          from    to  target type\n              0    15    18   Class java/io/IOException\n       LineNumberTable:\n         line 235: 0\n         line 236: 5\n         line 237: 10\n-        line 240: 15\n-        line 238: 18\n+        line 238: 15\n         line 239: 19\n         line 241: 24\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           19       5     2     e   Ljava/io/IOException;\n             0      25     0  this   Lorg/apache/commons/io/output/ProxyCollectionWriter;\n             0      25     1     c   I\n+           19       5     2     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 82 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 5 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_1\n-         1: invokestatic  #29                 // Method org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n+         1: invokestatic  #50                 // Method org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n          4: istore_2\n          5: aload_0\n          6: iload_2\n-         7: invokevirtual #10                 // Method beforeWrite:(I)V\n+         7: invokevirtual #33                 // Method beforeWrite:(I)V\n         10: aload_0\n         11: aload_1\n-        12: invokespecial #60                 // Method org/apache/commons/io/output/FilterCollectionWriter.write:(Ljava/lang/String;)V\n+        12: invokespecial #89                 // Method org/apache/commons/io/output/FilterCollectionWriter.write:(Ljava/lang/String;)V\n         15: aload_0\n         16: iload_2\n-        17: invokevirtual #20                 // Method afterWrite:(I)V\n+        17: invokevirtual #38                 // Method afterWrite:(I)V\n         20: goto          29\n         23: astore_2\n         24: aload_0\n         25: aload_2\n-        26: invokevirtual #25                 // Method handleIOException:(Ljava/io/IOException;)V\n+        26: invokevirtual #40                 // Method handleIOException:(Ljava/io/IOException;)V\n         29: return\n       Exception table:\n          from    to  target type\n              0    20    23   Class java/io/IOException\n       LineNumberTable:\n         line 252: 0\n         line 253: 5\n         line 254: 10\n         line 255: 15\n-        line 258: 20\n-        line 256: 23\n+        line 256: 20\n         line 257: 24\n         line 259: 29\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            5      15     2   len   I\n-           24       5     2     e   Ljava/io/IOException;\n             0      30     0  this   Lorg/apache/commons/io/output/ProxyCollectionWriter;\n             0      30     1   str   Ljava/lang/String;\n+            5      15     2   len   I\n+           24       5     2     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 87 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 5 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(java.lang.String, int, int) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;II)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_0\n          1: iload_3\n-         2: invokevirtual #10                 // Method beforeWrite:(I)V\n+         2: invokevirtual #33                 // Method beforeWrite:(I)V\n          5: aload_0\n          6: aload_1\n          7: iload_2\n          8: iload_3\n-         9: invokespecial #63                 // Method org/apache/commons/io/output/FilterCollectionWriter.write:(Ljava/lang/String;II)V\n+         9: invokespecial #94                 // Method org/apache/commons/io/output/FilterCollectionWriter.write:(Ljava/lang/String;II)V\n         12: aload_0\n         13: iload_3\n-        14: invokevirtual #20                 // Method afterWrite:(I)V\n+        14: invokevirtual #38                 // Method afterWrite:(I)V\n         17: goto          28\n         20: astore        4\n         22: aload_0\n         23: aload         4\n-        25: invokevirtual #25                 // Method handleIOException:(Ljava/io/IOException;)V\n+        25: invokevirtual #40                 // Method handleIOException:(Ljava/io/IOException;)V\n         28: return\n       Exception table:\n          from    to  target type\n              0    17    20   Class java/io/IOException\n       LineNumberTable:\n         line 272: 0\n         line 273: 5\n         line 274: 12\n-        line 277: 17\n-        line 275: 20\n+        line 275: 17\n         line 276: 22\n         line 278: 28\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           22       6     4     e   Ljava/io/IOException;\n             0      29     0  this   Lorg/apache/commons/io/output/ProxyCollectionWriter;\n             0      29     1   str   Ljava/lang/String;\n             0      29     2   off   I\n             0      29     3   len   I\n+           22       6     4     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 84 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 7 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n-\n-  public java.lang.Appendable append(char) throws java.io.IOException;\n-    descriptor: (C)Ljava/lang/Appendable;\n-    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n-    Code:\n-      stack=2, locals=2, args_size=2\n-         0: aload_0\n-         1: iload_1\n-         2: invokevirtual #66                 // Method append:(C)Ljava/io/Writer;\n-         5: areturn\n-      LineNumberTable:\n-        line 36: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       6     0  this   Lorg/apache/commons/io/output/ProxyCollectionWriter;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokevirtual #67                 // Method append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+         4: invokevirtual #97                 // Method append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n          7: areturn\n       LineNumberTable:\n-        line 36: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       8     0  this   Lorg/apache/commons/io/output/ProxyCollectionWriter;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #68                 // Method append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+         2: invokevirtual #99                 // Method append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n          5: areturn\n       LineNumberTable:\n-        line 36: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       6     0  this   Lorg/apache/commons/io/output/ProxyCollectionWriter;\n+\n+  public java.lang.Appendable append(char) throws java.io.IOException;\n+    descriptor: (C)Ljava/lang/Appendable;\n+    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Exceptions:\n       throws java.io.IOException\n+    Code:\n+      stack=2, locals=2, args_size=2\n+         0: aload_0\n+         1: iload_1\n+         2: invokevirtual #101                // Method append:(C)Ljava/io/Writer;\n+         5: areturn\n+      LineNumberTable:\n+        line 1: 0\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n }\n SourceFile: \"ProxyCollectionWriter.java\"\n"}]}
