{"diffoscope-json-version": 1, "source1": "first/SourceFile.class", "source2": "second/SourceFile.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -5,50 +5,49 @@\n import java.io.IOException;\n import java.io.DataInput;\n \n public final class SourceFile extends Attribute\n {\n     private int sourceFileIndex;\n     \n-    public SourceFile(final SourceFile c) {\n-        this(c.getNameIndex(), c.getLength(), c.getSourceFileIndex(), c.getConstantPool());\n+    public SourceFile(final SourceFile sourceFile) {\n+        this(sourceFile.getNameIndex(), sourceFile.getLength(), sourceFile.getSourceFileIndex(), sourceFile.getConstantPool());\n     }\n     \n-    SourceFile(final int name_index, final int length, final DataInput input, final ConstantPool constant_pool) throws IOException {\n-        this(name_index, length, input.readUnsignedShort(), constant_pool);\n+    SourceFile(final int n, final int n2, final DataInput dataInput, final ConstantPool constantPool) throws IOException {\n+        this(n, n2, dataInput.readUnsignedShort(), constantPool);\n     }\n     \n-    public SourceFile(final int name_index, final int length, final int sourceFileIndex, final ConstantPool constantPool) {\n-        super((byte)0, name_index, length, constantPool);\n+    public SourceFile(final int n, final int n2, final int sourceFileIndex, final ConstantPool constantPool) {\n+        super((byte)0, n, n2, constantPool);\n         this.sourceFileIndex = sourceFileIndex;\n     }\n     \n-    public void accept(final Visitor v) {\n-        v.visitSourceFile(this);\n+    public void accept(final Visitor visitor) {\n+        visitor.visitSourceFile(this);\n     }\n     \n-    public void dump(final DataOutputStream file) throws IOException {\n-        super.dump(file);\n-        file.writeShort(this.sourceFileIndex);\n+    public void dump(final DataOutputStream dataOutputStream) throws IOException {\n+        super.dump(dataOutputStream);\n+        dataOutputStream.writeShort(this.sourceFileIndex);\n     }\n     \n     public int getSourceFileIndex() {\n         return this.sourceFileIndex;\n     }\n     \n     public void setSourceFileIndex(final int sourceFileIndex) {\n         this.sourceFileIndex = sourceFileIndex;\n     }\n     \n     public String getSourceFileName() {\n-        final ConstantUtf8 c = (ConstantUtf8)super.getConstantPool().getConstant(this.sourceFileIndex, (byte)1);\n-        return c.getBytes();\n+        return ((ConstantUtf8)super.getConstantPool().getConstant(this.sourceFileIndex, (byte)1)).getBytes();\n     }\n     \n     public String toString() {\n         return \"SourceFile: \" + this.getSourceFileName();\n     }\n     \n-    public Attribute copy(final ConstantPool _constant_pool) {\n+    public Attribute copy(final ConstantPool constantPool) {\n         return (Attribute)this.clone();\n     }\n }\n"}]}
