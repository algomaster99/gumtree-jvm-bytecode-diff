{"diffoscope-json-version": 1, "source1": "first/AbstractClassNameCheck.class", "source2": "second/AbstractClassNameCheck.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,124 +1,122 @@\n-  SHA-256 checksum c85c08e257e123d402e3e4fec33a8ac74289927b3feb399e75dbec6e34258c3a\n+  SHA-256 checksum 8c57b556d5492815045840f04e4ba90f12f2a448e5e85619ab26ba7c91c72489\n   Compiled from \"AbstractClassNameCheck.java\"\n public final class com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheck extends com.puppycrawl.tools.checkstyle.api.AbstractCheck\n   minor version: 0\n   major version: 55\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #16                         // com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck\n-  super_class: #2                         // com/puppycrawl/tools/checkstyle/api/AbstractCheck\n+  this_class: #1                          // com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck\n+  super_class: #3                         // com/puppycrawl/tools/checkstyle/api/AbstractCheck\n   interfaces: 0, fields: 5, methods: 11, attributes: 2\n Constant pool:\n-    #1 = Methodref          #2.#3         // com/puppycrawl/tools/checkstyle/api/AbstractCheck.\"<init>\":()V\n-    #2 = Class              #4            // com/puppycrawl/tools/checkstyle/api/AbstractCheck\n-    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #1 = Class              #2            // com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck\n+    #2 = Utf8               com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck\n+    #3 = Class              #4            // com/puppycrawl/tools/checkstyle/api/AbstractCheck\n     #4 = Utf8               com/puppycrawl/tools/checkstyle/api/AbstractCheck\n-    #5 = Utf8               <init>\n-    #6 = Utf8               ()V\n-    #7 = String             #8            // ^Abstract.+$\n-    #8 = Utf8               ^Abstract.+$\n-    #9 = Methodref          #10.#11       // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-   #10 = Class              #12           // java/util/regex/Pattern\n-   #11 = NameAndType        #13:#14       // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-   #12 = Utf8               java/util/regex/Pattern\n-   #13 = Utf8               compile\n-   #14 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n-   #15 = Fieldref           #16.#17       // com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.format:Ljava/util/regex/Pattern;\n-   #16 = Class              #18           // com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck\n-   #17 = NameAndType        #19:#20       // format:Ljava/util/regex/Pattern;\n-   #18 = Utf8               com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck\n-   #19 = Utf8               format\n-   #20 = Utf8               Ljava/util/regex/Pattern;\n-   #21 = Fieldref           #16.#22       // com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.ignoreModifier:Z\n-   #22 = NameAndType        #23:#24       // ignoreModifier:Z\n-   #23 = Utf8               ignoreModifier\n-   #24 = Utf8               Z\n-   #25 = Fieldref           #16.#26       // com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.ignoreName:Z\n-   #26 = NameAndType        #27:#24       // ignoreName:Z\n-   #27 = Utf8               ignoreName\n-   #28 = Methodref          #16.#29       // com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.getRequiredTokens:()[I\n-   #29 = NameAndType        #30:#31       // getRequiredTokens:()[I\n-   #30 = Utf8               getRequiredTokens\n-   #31 = Utf8               ()[I\n-   #32 = Class              #33           // com/puppycrawl/tools/checkstyle/api/TokenTypes\n-   #33 = Utf8               com/puppycrawl/tools/checkstyle/api/TokenTypes\n-   #34 = Methodref          #16.#35       // com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.visitClassDef:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n-   #35 = NameAndType        #36:#37       // visitClassDef:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n-   #36 = Utf8               visitClassDef\n-   #37 = Utf8               (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n-   #38 = InterfaceMethodref #39.#40       // com/puppycrawl/tools/checkstyle/api/DetailAST.findFirstToken:(I)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n-   #39 = Class              #41           // com/puppycrawl/tools/checkstyle/api/DetailAST\n-   #40 = NameAndType        #42:#43       // findFirstToken:(I)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n-   #41 = Utf8               com/puppycrawl/tools/checkstyle/api/DetailAST\n-   #42 = Utf8               findFirstToken\n-   #43 = Utf8               (I)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n-   #44 = InterfaceMethodref #39.#45       // com/puppycrawl/tools/checkstyle/api/DetailAST.getText:()Ljava/lang/String;\n-   #45 = NameAndType        #46:#47       // getText:()Ljava/lang/String;\n-   #46 = Utf8               getText\n-   #47 = Utf8               ()Ljava/lang/String;\n-   #48 = Methodref          #16.#49       // com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.isAbstract:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)Z\n-   #49 = NameAndType        #50:#51       // isAbstract:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)Z\n-   #50 = Utf8               isAbstract\n-   #51 = Utf8               (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)Z\n-   #52 = Methodref          #16.#53       // com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.isMatchingClassName:(Ljava/lang/String;)Z\n-   #53 = NameAndType        #54:#55       // isMatchingClassName:(Ljava/lang/String;)Z\n-   #54 = Utf8               isMatchingClassName\n-   #55 = Utf8               (Ljava/lang/String;)Z\n-   #56 = String             #57           // illegal.abstract.class.name\n-   #57 = Utf8               illegal.abstract.class.name\n-   #58 = Class              #59           // java/lang/Object\n-   #59 = Utf8               java/lang/Object\n-   #60 = Methodref          #10.#61       // java/util/regex/Pattern.pattern:()Ljava/lang/String;\n-   #61 = NameAndType        #62:#47       // pattern:()Ljava/lang/String;\n-   #62 = Utf8               pattern\n-   #63 = Methodref          #16.#64       // com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.log:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n-   #64 = NameAndType        #65:#66       // log:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n-   #65 = Utf8               log\n-   #66 = Utf8               (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n-   #67 = String             #68           // no.abstract.class.modifier\n-   #68 = Utf8               no.abstract.class.modifier\n-   #69 = Methodref          #10.#70       // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #70 = NameAndType        #71:#72       // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #71 = Utf8               matcher\n-   #72 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #73 = Methodref          #74.#75       // java/util/regex/Matcher.find:()Z\n-   #74 = Class              #76           // java/util/regex/Matcher\n-   #75 = NameAndType        #77:#78       // find:()Z\n-   #76 = Utf8               java/util/regex/Matcher\n-   #77 = Utf8               find\n-   #78 = Utf8               ()Z\n-   #79 = Utf8               MSG_ILLEGAL_ABSTRACT_CLASS_NAME\n-   #80 = Utf8               Ljava/lang/String;\n-   #81 = Utf8               ConstantValue\n-   #82 = Utf8               MSG_NO_ABSTRACT_CLASS_MODIFIER\n-   #83 = Utf8               Code\n-   #84 = Utf8               LineNumberTable\n-   #85 = Utf8               LocalVariableTable\n-   #86 = Utf8               this\n-   #87 = Utf8               Lcom/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck;\n-   #88 = Utf8               setIgnoreModifier\n-   #89 = Utf8               (Z)V\n-   #90 = Utf8               value\n-   #91 = Utf8               setIgnoreName\n-   #92 = Utf8               setFormat\n-   #93 = Utf8               (Ljava/util/regex/Pattern;)V\n-   #94 = Utf8               getDefaultTokens\n-   #95 = Utf8               getAcceptableTokens\n-   #96 = Utf8               visitToken\n-   #97 = Utf8               ast\n-   #98 = Utf8               Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n-   #99 = Utf8               className\n-  #100 = Utf8               StackMapTable\n-  #101 = Class              #102          // java/lang/String\n-  #102 = Utf8               java/lang/String\n-  #103 = Utf8               abstractAST\n-  #104 = Utf8               SourceFile\n-  #105 = Utf8               AbstractClassNameCheck.java\n-  #106 = Utf8               RuntimeVisibleAnnotations\n-  #107 = Utf8               Lcom/puppycrawl/tools/checkstyle/StatelessCheck;\n+    #5 = Utf8               MSG_ILLEGAL_ABSTRACT_CLASS_NAME\n+    #6 = Utf8               Ljava/lang/String;\n+    #7 = Utf8               ConstantValue\n+    #8 = String             #9            // illegal.abstract.class.name\n+    #9 = Utf8               illegal.abstract.class.name\n+   #10 = Utf8               MSG_NO_ABSTRACT_CLASS_MODIFIER\n+   #11 = String             #12           // no.abstract.class.modifier\n+   #12 = Utf8               no.abstract.class.modifier\n+   #13 = Utf8               ignoreModifier\n+   #14 = Utf8               Z\n+   #15 = Utf8               ignoreName\n+   #16 = Utf8               format\n+   #17 = Utf8               Ljava/util/regex/Pattern;\n+   #18 = Utf8               <init>\n+   #19 = Utf8               ()V\n+   #20 = Utf8               Code\n+   #21 = Methodref          #3.#22        // com/puppycrawl/tools/checkstyle/api/AbstractCheck.\"<init>\":()V\n+   #22 = NameAndType        #18:#19       // \"<init>\":()V\n+   #23 = String             #24           // ^Abstract.+$\n+   #24 = Utf8               ^Abstract.+$\n+   #25 = Methodref          #26.#28       // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+   #26 = Class              #27           // java/util/regex/Pattern\n+   #27 = Utf8               java/util/regex/Pattern\n+   #28 = NameAndType        #29:#30       // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+   #29 = Utf8               compile\n+   #30 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n+   #31 = Fieldref           #1.#32        // com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.format:Ljava/util/regex/Pattern;\n+   #32 = NameAndType        #16:#17       // format:Ljava/util/regex/Pattern;\n+   #33 = Utf8               LineNumberTable\n+   #34 = Utf8               LocalVariableTable\n+   #35 = Utf8               this\n+   #36 = Utf8               Lcom/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck;\n+   #37 = Utf8               setIgnoreModifier\n+   #38 = Utf8               (Z)V\n+   #39 = Fieldref           #1.#40        // com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.ignoreModifier:Z\n+   #40 = NameAndType        #13:#14       // ignoreModifier:Z\n+   #41 = Utf8               value\n+   #42 = Utf8               setIgnoreName\n+   #43 = Fieldref           #1.#44        // com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.ignoreName:Z\n+   #44 = NameAndType        #15:#14       // ignoreName:Z\n+   #45 = Utf8               setFormat\n+   #46 = Utf8               (Ljava/util/regex/Pattern;)V\n+   #47 = Utf8               pattern\n+   #48 = Utf8               getDefaultTokens\n+   #49 = Utf8               ()[I\n+   #50 = Methodref          #1.#51        // com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.getRequiredTokens:()[I\n+   #51 = NameAndType        #52:#49       // getRequiredTokens:()[I\n+   #52 = Utf8               getRequiredTokens\n+   #53 = Utf8               getAcceptableTokens\n+   #54 = Utf8               visitToken\n+   #55 = Utf8               (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n+   #56 = Methodref          #1.#57        // com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.visitClassDef:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n+   #57 = NameAndType        #58:#55       // visitClassDef:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n+   #58 = Utf8               visitClassDef\n+   #59 = Utf8               ast\n+   #60 = Utf8               Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+   #61 = InterfaceMethodref #62.#64       // com/puppycrawl/tools/checkstyle/api/DetailAST.findFirstToken:(I)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+   #62 = Class              #63           // com/puppycrawl/tools/checkstyle/api/DetailAST\n+   #63 = Utf8               com/puppycrawl/tools/checkstyle/api/DetailAST\n+   #64 = NameAndType        #65:#66       // findFirstToken:(I)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+   #65 = Utf8               findFirstToken\n+   #66 = Utf8               (I)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+   #67 = InterfaceMethodref #62.#68       // com/puppycrawl/tools/checkstyle/api/DetailAST.getText:()Ljava/lang/String;\n+   #68 = NameAndType        #69:#70       // getText:()Ljava/lang/String;\n+   #69 = Utf8               getText\n+   #70 = Utf8               ()Ljava/lang/String;\n+   #71 = Methodref          #1.#72        // com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.isAbstract:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)Z\n+   #72 = NameAndType        #73:#74       // isAbstract:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)Z\n+   #73 = Utf8               isAbstract\n+   #74 = Utf8               (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)Z\n+   #75 = Methodref          #1.#76        // com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.isMatchingClassName:(Ljava/lang/String;)Z\n+   #76 = NameAndType        #77:#78       // isMatchingClassName:(Ljava/lang/String;)Z\n+   #77 = Utf8               isMatchingClassName\n+   #78 = Utf8               (Ljava/lang/String;)Z\n+   #79 = Class              #80           // java/lang/Object\n+   #80 = Utf8               java/lang/Object\n+   #81 = Methodref          #26.#82       // java/util/regex/Pattern.pattern:()Ljava/lang/String;\n+   #82 = NameAndType        #47:#70       // pattern:()Ljava/lang/String;\n+   #83 = Methodref          #1.#84        // com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.log:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n+   #84 = NameAndType        #85:#86       // log:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n+   #85 = Utf8               log\n+   #86 = Utf8               (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n+   #87 = Utf8               className\n+   #88 = Utf8               StackMapTable\n+   #89 = Class              #90           // java/lang/String\n+   #90 = Utf8               java/lang/String\n+   #91 = Utf8               abstractAST\n+   #92 = Methodref          #26.#93       // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #93 = NameAndType        #94:#95       // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #94 = Utf8               matcher\n+   #95 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #96 = Methodref          #97.#99       // java/util/regex/Matcher.find:()Z\n+   #97 = Class              #98           // java/util/regex/Matcher\n+   #98 = Utf8               java/util/regex/Matcher\n+   #99 = NameAndType        #100:#101     // find:()Z\n+  #100 = Utf8               find\n+  #101 = Utf8               ()Z\n+  #102 = Utf8               SourceFile\n+  #103 = Utf8               AbstractClassNameCheck.java\n+  #104 = Utf8               RuntimeVisibleAnnotations\n+  #105 = Utf8               Lcom/puppycrawl/tools/checkstyle/StatelessCheck;\n {\n   public static final java.lang.String MSG_ILLEGAL_ABSTRACT_CLASS_NAME = \"illegal.abstract.class.name\";\n     descriptor: Ljava/lang/String;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: String illegal.abstract.class.name\n \n   public static final java.lang.String MSG_NO_ABSTRACT_CLASS_MODIFIER = \"no.abstract.class.modifier\";\n@@ -140,35 +138,36 @@\n \n   public com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheck();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method com/puppycrawl/tools/checkstyle/api/AbstractCheck.\"<init>\":()V\n+         1: invokespecial #21                 // Method com/puppycrawl/tools/checkstyle/api/AbstractCheck.\"<init>\":()V\n          4: aload_0\n-         5: ldc           #7                  // String ^Abstract.+$\n-         7: invokestatic  #9                  // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-        10: putfield      #15                 // Field format:Ljava/util/regex/Pattern;\n+         5: ldc           #23                 // String ^Abstract.+$\n+         7: invokestatic  #25                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+        10: putfield      #31                 // Field format:Ljava/util/regex/Pattern;\n         13: return\n       LineNumberTable:\n         line 75: 0\n         line 103: 4\n+        line 75: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lcom/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck;\n \n   public void setIgnoreModifier(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #21                 // Field ignoreModifier:Z\n+         2: putfield      #39                 // Field ignoreModifier:Z\n          5: return\n       LineNumberTable:\n         line 113: 0\n         line 114: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lcom/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck;\n@@ -177,15 +176,15 @@\n   public void setIgnoreName(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #25                 // Field ignoreName:Z\n+         2: putfield      #43                 // Field ignoreName:Z\n          5: return\n       LineNumberTable:\n         line 124: 0\n         line 125: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lcom/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck;\n@@ -194,15 +193,15 @@\n   public void setFormat(java.util.regex.Pattern);\n     descriptor: (Ljava/util/regex/Pattern;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #15                 // Field format:Ljava/util/regex/Pattern;\n+         2: putfield      #31                 // Field format:Ljava/util/regex/Pattern;\n          5: return\n       LineNumberTable:\n         line 134: 0\n         line 135: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lcom/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck;\n@@ -210,15 +209,15 @@\n \n   public int[] getDefaultTokens();\n     descriptor: ()[I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #28                 // Method getRequiredTokens:()[I\n+         1: invokevirtual #50                 // Method getRequiredTokens:()[I\n          4: areturn\n       LineNumberTable:\n         line 139: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lcom/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck;\n \n@@ -242,30 +241,30 @@\n \n   public int[] getAcceptableTokens();\n     descriptor: ()[I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #28                 // Method getRequiredTokens:()[I\n+         1: invokevirtual #50                 // Method getRequiredTokens:()[I\n          4: areturn\n       LineNumberTable:\n         line 149: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lcom/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck;\n \n   public void visitToken(com.puppycrawl.tools.checkstyle.api.DetailAST);\n     descriptor: (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #34                 // Method visitClassDef:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n+         2: invokevirtual #56                 // Method visitClassDef:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n          5: return\n       LineNumberTable:\n         line 154: 0\n         line 155: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lcom/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck;\n@@ -274,68 +273,69 @@\n   private void visitClassDef(com.puppycrawl.tools.checkstyle.api.DetailAST);\n     descriptor: (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=7, locals=3, args_size=2\n          0: aload_1\n          1: bipush        58\n-         3: invokeinterface #38,  2           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.findFirstToken:(I)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n-         8: invokeinterface #44,  1           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getText:()Ljava/lang/String;\n+         3: invokeinterface #61,  2           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.findFirstToken:(I)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+         8: invokeinterface #67,  1           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getText:()Ljava/lang/String;\n         13: astore_2\n         14: aload_1\n-        15: invokestatic  #48                 // Method isAbstract:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)Z\n+        15: invokestatic  #71                 // Method isAbstract:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)Z\n         18: ifeq          64\n         21: aload_0\n-        22: getfield      #25                 // Field ignoreName:Z\n+        22: getfield      #43                 // Field ignoreName:Z\n         25: ifne          94\n         28: aload_0\n         29: aload_2\n-        30: invokevirtual #52                 // Method isMatchingClassName:(Ljava/lang/String;)Z\n+        30: invokevirtual #75                 // Method isMatchingClassName:(Ljava/lang/String;)Z\n         33: ifne          94\n         36: aload_0\n         37: aload_1\n-        38: ldc           #56                 // String illegal.abstract.class.name\n+        38: ldc           #8                  // String illegal.abstract.class.name\n         40: iconst_2\n-        41: anewarray     #58                 // class java/lang/Object\n+        41: anewarray     #79                 // class java/lang/Object\n         44: dup\n         45: iconst_0\n         46: aload_2\n         47: aastore\n         48: dup\n         49: iconst_1\n         50: aload_0\n-        51: getfield      #15                 // Field format:Ljava/util/regex/Pattern;\n-        54: invokevirtual #60                 // Method java/util/regex/Pattern.pattern:()Ljava/lang/String;\n+        51: getfield      #31                 // Field format:Ljava/util/regex/Pattern;\n+        54: invokevirtual #81                 // Method java/util/regex/Pattern.pattern:()Ljava/lang/String;\n         57: aastore\n-        58: invokevirtual #63                 // Method log:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n+        58: invokevirtual #83                 // Method log:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n         61: goto          94\n         64: aload_0\n-        65: getfield      #21                 // Field ignoreModifier:Z\n+        65: getfield      #39                 // Field ignoreModifier:Z\n         68: ifne          94\n         71: aload_0\n         72: aload_2\n-        73: invokevirtual #52                 // Method isMatchingClassName:(Ljava/lang/String;)Z\n+        73: invokevirtual #75                 // Method isMatchingClassName:(Ljava/lang/String;)Z\n         76: ifeq          94\n         79: aload_0\n         80: aload_1\n-        81: ldc           #67                 // String no.abstract.class.modifier\n+        81: ldc           #11                 // String no.abstract.class.modifier\n         83: iconst_1\n-        84: anewarray     #58                 // class java/lang/Object\n+        84: anewarray     #79                 // class java/lang/Object\n         87: dup\n         88: iconst_0\n         89: aload_2\n         90: aastore\n-        91: invokevirtual #63                 // Method log:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n+        91: invokevirtual #83                 // Method log:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n         94: return\n       LineNumberTable:\n-        line 163: 0\n-        line 164: 3\n+        line 164: 0\n+        line 163: 13\n         line 165: 14\n         line 167: 21\n         line 168: 36\n+        line 170: 61\n         line 171: 64\n         line 172: 79\n         line 174: 94\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      95     0  this   Lcom/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck;\n             0      95     1   ast   Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n@@ -349,54 +349,53 @@\n   private static boolean isAbstract(com.puppycrawl.tools.checkstyle.api.DetailAST);\n     descriptor: (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n          1: iconst_5\n-         2: invokeinterface #38,  2           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.findFirstToken:(I)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+         2: invokeinterface #61,  2           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.findFirstToken:(I)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n          7: bipush        40\n-         9: invokeinterface #38,  2           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.findFirstToken:(I)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+         9: invokeinterface #61,  2           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.findFirstToken:(I)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n         14: astore_1\n         15: aload_1\n-        16: ifnull        23\n+        16: ifnull        21\n         19: iconst_1\n-        20: goto          24\n-        23: iconst_0\n-        24: ireturn\n+        20: ireturn\n+        21: iconst_0\n+        22: ireturn\n       LineNumberTable:\n         line 183: 0\n-        line 184: 9\n+        line 184: 7\n+        line 183: 14\n         line 186: 15\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      25     0   ast   Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n-           15      10     1 abstractAST   Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n-      StackMapTable: number_of_entries = 2\n+            0      23     0   ast   Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+           15       8     1 abstractAST   Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+      StackMapTable: number_of_entries = 1\n         frame_type = 252 /* append */\n-          offset_delta = 23\n+          offset_delta = 21\n           locals = [ class com/puppycrawl/tools/checkstyle/api/DetailAST ]\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n \n   private boolean isMatchingClassName(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #15                 // Field format:Ljava/util/regex/Pattern;\n+         1: getfield      #31                 // Field format:Ljava/util/regex/Pattern;\n          4: aload_1\n-         5: invokevirtual #69                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-         8: invokevirtual #73                 // Method java/util/regex/Matcher.find:()Z\n+         5: invokevirtual #92                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+         8: invokevirtual #96                 // Method java/util/regex/Matcher.find:()Z\n         11: ireturn\n       LineNumberTable:\n         line 196: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lcom/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck;\n             0      12     1 className   Ljava/lang/String;\n }\n SourceFile: \"AbstractClassNameCheck.java\"\n RuntimeVisibleAnnotations:\n-  0: #107()\n+  0: #105()\n     com.puppycrawl.tools.checkstyle.StatelessCheck\n"}]}
