{"diffoscope-json-version": 1, "source1": "first/CSVFormat$Builder.class", "source2": "second/CSVFormat$Builder.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,327 +1,327 @@\n-  SHA-256 checksum 50a8075b0623d3284d3c6386db30ce8eb45410f54f629cc3cfb2a80ab9802b13\n+  SHA-256 checksum c5765aa29838bd55790993f96fe184819577e3d4e64b2eff0fd5035600801564\n   Compiled from \"CSVFormat.java\"\n public class org.apache.commons.csv.CSVFormat$Builder\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #20                         // org/apache/commons/csv/CSVFormat$Builder\n+  this_class: #2                          // org/apache/commons/csv/CSVFormat$Builder\n   super_class: #76                        // java/lang/Object\n   interfaces: 0, fields: 19, methods: 50, attributes: 2\n Constant pool:\n-    #1 = Fieldref           #20.#173      // org/apache/commons/csv/CSVFormat$Builder.allowDuplicateHeaderNames:Z\n-    #2 = Fieldref           #20.#174      // org/apache/commons/csv/CSVFormat$Builder.quotedNullString:Ljava/lang/String;\n-    #3 = Fieldref           #20.#175      // org/apache/commons/csv/CSVFormat$Builder.autoFlush:Z\n-    #4 = Fieldref           #20.#176      // org/apache/commons/csv/CSVFormat$Builder.trim:Z\n-    #5 = Fieldref           #20.#177      // org/apache/commons/csv/CSVFormat$Builder.trailingDelimiter:Z\n-    #6 = Fieldref           #20.#178      // org/apache/commons/csv/CSVFormat$Builder.ignoreHeaderCase:Z\n-    #7 = Fieldref           #20.#179      // org/apache/commons/csv/CSVFormat$Builder.skipHeaderRecord:Z\n-    #8 = Fieldref           #20.#180      // org/apache/commons/csv/CSVFormat$Builder.headers:[Ljava/lang/String;\n-    #9 = Fieldref           #20.#181      // org/apache/commons/csv/CSVFormat$Builder.headerComments:[Ljava/lang/String;\n-   #10 = Fieldref           #20.#182      // org/apache/commons/csv/CSVFormat$Builder.nullString:Ljava/lang/String;\n-   #11 = Fieldref           #20.#183      // org/apache/commons/csv/CSVFormat$Builder.recordSeparator:Ljava/lang/String;\n-   #12 = Fieldref           #20.#184      // org/apache/commons/csv/CSVFormat$Builder.ignoreEmptyLines:Z\n-   #13 = Fieldref           #20.#185      // org/apache/commons/csv/CSVFormat$Builder.allowMissingColumnNames:Z\n-   #14 = Fieldref           #20.#186      // org/apache/commons/csv/CSVFormat$Builder.ignoreSurroundingSpaces:Z\n-   #15 = Fieldref           #20.#187      // org/apache/commons/csv/CSVFormat$Builder.escapeCharacter:Ljava/lang/Character;\n-   #16 = Fieldref           #20.#188      // org/apache/commons/csv/CSVFormat$Builder.commentMarker:Ljava/lang/Character;\n-   #17 = Fieldref           #20.#189      // org/apache/commons/csv/CSVFormat$Builder.quoteMode:Lorg/apache/commons/csv/QuoteMode;\n-   #18 = Fieldref           #20.#190      // org/apache/commons/csv/CSVFormat$Builder.quoteCharacter:Ljava/lang/Character;\n-   #19 = Fieldref           #20.#191      // org/apache/commons/csv/CSVFormat$Builder.delimiter:Ljava/lang/String;\n-   #20 = Class              #192          // org/apache/commons/csv/CSVFormat$Builder\n-   #21 = Fieldref           #43.#193      // org/apache/commons/csv/CSVFormat.DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-   #22 = Methodref          #20.#194      // org/apache/commons/csv/CSVFormat$Builder.\"<init>\":(Lorg/apache/commons/csv/CSVFormat;)V\n-   #23 = Methodref          #76.#195      // java/lang/Object.\"<init>\":()V\n-   #24 = Methodref          #43.#196      // org/apache/commons/csv/CSVFormat.access$000:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-   #25 = Methodref          #43.#197      // org/apache/commons/csv/CSVFormat.access$100:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-   #26 = Methodref          #43.#198      // org/apache/commons/csv/CSVFormat.access$200:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/QuoteMode;\n-   #27 = Methodref          #43.#199      // org/apache/commons/csv/CSVFormat.access$300:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-   #28 = Methodref          #43.#200      // org/apache/commons/csv/CSVFormat.access$400:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-   #29 = Methodref          #43.#201      // org/apache/commons/csv/CSVFormat.access$500:(Lorg/apache/commons/csv/CSVFormat;)Z\n-   #30 = Methodref          #43.#202      // org/apache/commons/csv/CSVFormat.access$600:(Lorg/apache/commons/csv/CSVFormat;)Z\n-   #31 = Methodref          #43.#203      // org/apache/commons/csv/CSVFormat.access$700:(Lorg/apache/commons/csv/CSVFormat;)Z\n-   #32 = Methodref          #43.#204      // org/apache/commons/csv/CSVFormat.access$800:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-   #33 = Methodref          #43.#205      // org/apache/commons/csv/CSVFormat.access$900:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-   #34 = Methodref          #43.#206      // org/apache/commons/csv/CSVFormat.access$1000:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n-   #35 = Methodref          #43.#207      // org/apache/commons/csv/CSVFormat.access$1100:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n-   #36 = Methodref          #43.#208      // org/apache/commons/csv/CSVFormat.access$1200:(Lorg/apache/commons/csv/CSVFormat;)Z\n-   #37 = Methodref          #43.#209      // org/apache/commons/csv/CSVFormat.access$1300:(Lorg/apache/commons/csv/CSVFormat;)Z\n-   #38 = Methodref          #43.#210      // org/apache/commons/csv/CSVFormat.access$1400:(Lorg/apache/commons/csv/CSVFormat;)Z\n-   #39 = Methodref          #43.#211      // org/apache/commons/csv/CSVFormat.access$1500:(Lorg/apache/commons/csv/CSVFormat;)Z\n-   #40 = Methodref          #43.#212      // org/apache/commons/csv/CSVFormat.access$1600:(Lorg/apache/commons/csv/CSVFormat;)Z\n-   #41 = Methodref          #43.#213      // org/apache/commons/csv/CSVFormat.access$1700:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-   #42 = Methodref          #43.#214      // org/apache/commons/csv/CSVFormat.access$1800:(Lorg/apache/commons/csv/CSVFormat;)Z\n-   #43 = Class              #215          // org/apache/commons/csv/CSVFormat\n-   #44 = Methodref          #43.#216      // org/apache/commons/csv/CSVFormat.\"<init>\":(Lorg/apache/commons/csv/CSVFormat$Builder;Lorg/apache/commons/csv/CSVFormat$1;)V\n-   #45 = Methodref          #217.#218     // java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-   #46 = Methodref          #20.#219      // org/apache/commons/csv/CSVFormat$Builder.setCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-   #47 = Methodref          #43.#220      // org/apache/commons/csv/CSVFormat.access$2000:(Ljava/lang/Character;)Z\n-   #48 = Class              #221          // java/lang/IllegalArgumentException\n-   #49 = String             #222          // The comment start marker character cannot be a line break\n-   #50 = Methodref          #48.#223      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #51 = Methodref          #59.#224      // java/lang/String.valueOf:(C)Ljava/lang/String;\n-   #52 = Methodref          #20.#225      // org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-   #53 = Methodref          #43.#226      // org/apache/commons/csv/CSVFormat.access$2100:(Ljava/lang/String;)Z\n-   #54 = String             #227          // The delimiter cannot be a line break\n-   #55 = Methodref          #20.#228      // org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-   #56 = String             #229          // The escape character cannot be a line break\n-   #57 = Methodref          #230.#231     // java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n-   #58 = Class              #232          // \"[Ljava/lang/Enum;\"\n-   #59 = Class              #233          // java/lang/String\n-   #60 = Methodref          #234.#235     // java/lang/Enum.name:()Ljava/lang/String;\n-   #61 = Methodref          #20.#236      // org/apache/commons/csv/CSVFormat$Builder.setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-   #62 = InterfaceMethodref #128.#237     // java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;\n-   #63 = Methodref          #20.#238      // org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-   #64 = InterfaceMethodref #129.#239     // java/sql/ResultSetMetaData.getColumnCount:()I\n-   #65 = InterfaceMethodref #129.#240     // java/sql/ResultSetMetaData.getColumnLabel:(I)Ljava/lang/String;\n-   #66 = Methodref          #43.#241      // org/apache/commons/csv/CSVFormat.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n-   #67 = Class              #87           // \"[Ljava/lang/String;\"\n-   #68 = Methodref          #43.#242      // org/apache/commons/csv/CSVFormat.toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n-   #69 = Class              #243          // java/lang/StringBuilder\n-   #70 = Methodref          #69.#195      // java/lang/StringBuilder.\"<init>\":()V\n-   #71 = Methodref          #69.#244      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #72 = Methodref          #69.#245      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #73 = Methodref          #69.#246      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #74 = Methodref          #20.#247      // org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-   #75 = String             #248          // The quoteChar cannot be a line break\n-   #76 = Class              #249          // java/lang/Object\n-   #77 = Utf8               allowDuplicateHeaderNames\n-   #78 = Utf8               Z\n-   #79 = Utf8               allowMissingColumnNames\n-   #80 = Utf8               autoFlush\n-   #81 = Utf8               commentMarker\n-   #82 = Utf8               Ljava/lang/Character;\n-   #83 = Utf8               delimiter\n-   #84 = Utf8               Ljava/lang/String;\n-   #85 = Utf8               escapeCharacter\n-   #86 = Utf8               headerComments\n-   #87 = Utf8               [Ljava/lang/String;\n-   #88 = Utf8               headers\n-   #89 = Utf8               ignoreEmptyLines\n-   #90 = Utf8               ignoreHeaderCase\n-   #91 = Utf8               ignoreSurroundingSpaces\n-   #92 = Utf8               nullString\n-   #93 = Utf8               quoteCharacter\n-   #94 = Utf8               quotedNullString\n-   #95 = Utf8               quoteMode\n-   #96 = Utf8               Lorg/apache/commons/csv/QuoteMode;\n-   #97 = Utf8               recordSeparator\n-   #98 = Utf8               skipHeaderRecord\n-   #99 = Utf8               trailingDelimiter\n-  #100 = Utf8               trim\n-  #101 = Utf8               create\n-  #102 = Utf8               Builder\n-  #103 = Utf8               InnerClasses\n-  #104 = Utf8               ()Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #105 = Utf8               Code\n-  #106 = Utf8               LineNumberTable\n-  #107 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #108 = Utf8               <init>\n-  #109 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)V\n-  #110 = Utf8               build\n-  #111 = Utf8               ()Lorg/apache/commons/csv/CSVFormat;\n-  #112 = Utf8               setAllowDuplicateHeaderNames\n-  #113 = Utf8               (Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #114 = Utf8               setAllowMissingColumnNames\n-  #115 = Utf8               setAutoFlush\n-  #116 = Utf8               setCommentMarker\n-  #117 = Utf8               (C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #118 = Utf8               (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #119 = Utf8               StackMapTable\n-  #120 = Utf8               setDelimiter\n-  #121 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #122 = Utf8               setEscape\n-  #123 = Utf8               setHeader\n-  #124 = Utf8               (Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #125 = Utf8               Signature\n-  #126 = Utf8               (Ljava/lang/Class<+Ljava/lang/Enum<*>;>;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #127 = Utf8               (Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #128 = Class              #250          // java/sql/ResultSet\n-  #129 = Class              #251          // java/sql/ResultSetMetaData\n-  #130 = Utf8               Exceptions\n-  #131 = Class              #252          // java/sql/SQLException\n-  #132 = Utf8               (Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #133 = Utf8               ([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #134 = Utf8               setHeaderComments\n-  #135 = Utf8               ([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #136 = Utf8               setIgnoreEmptyLines\n-  #137 = Utf8               setIgnoreHeaderCase\n-  #138 = Utf8               setIgnoreSurroundingSpaces\n-  #139 = Utf8               setNullString\n-  #140 = Utf8               setQuote\n-  #141 = Utf8               setQuoteMode\n-  #142 = Utf8               (Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #143 = Utf8               setRecordSeparator\n-  #144 = Utf8               setSkipHeaderRecord\n-  #145 = Utf8               setTrailingDelimiter\n-  #146 = Utf8               setTrim\n-  #147 = Utf8               access$2200\n-  #148 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-  #149 = Utf8               access$2300\n-  #150 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n-  #151 = Utf8               access$2400\n-  #152 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/QuoteMode;\n-  #153 = Utf8               access$2500\n-  #154 = Utf8               access$2600\n-  #155 = Utf8               access$2700\n-  #156 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-  #157 = Utf8               access$2800\n-  #158 = Utf8               access$2900\n-  #159 = Utf8               access$3000\n-  #160 = Utf8               access$3100\n-  #161 = Utf8               access$3200\n-  #162 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n-  #163 = Utf8               access$3300\n-  #164 = Utf8               access$3400\n-  #165 = Utf8               access$3500\n-  #166 = Utf8               access$3600\n-  #167 = Utf8               access$3700\n-  #168 = Utf8               access$3800\n-  #169 = Utf8               access$3900\n-  #170 = Utf8               access$4000\n-  #171 = Utf8               SourceFile\n-  #172 = Utf8               CSVFormat.java\n-  #173 = NameAndType        #77:#78       // allowDuplicateHeaderNames:Z\n-  #174 = NameAndType        #94:#84       // quotedNullString:Ljava/lang/String;\n-  #175 = NameAndType        #80:#78       // autoFlush:Z\n-  #176 = NameAndType        #100:#78      // trim:Z\n-  #177 = NameAndType        #99:#78       // trailingDelimiter:Z\n-  #178 = NameAndType        #90:#78       // ignoreHeaderCase:Z\n-  #179 = NameAndType        #98:#78       // skipHeaderRecord:Z\n-  #180 = NameAndType        #88:#87       // headers:[Ljava/lang/String;\n-  #181 = NameAndType        #86:#87       // headerComments:[Ljava/lang/String;\n-  #182 = NameAndType        #92:#84       // nullString:Ljava/lang/String;\n-  #183 = NameAndType        #97:#84       // recordSeparator:Ljava/lang/String;\n-  #184 = NameAndType        #89:#78       // ignoreEmptyLines:Z\n-  #185 = NameAndType        #79:#78       // allowMissingColumnNames:Z\n-  #186 = NameAndType        #91:#78       // ignoreSurroundingSpaces:Z\n-  #187 = NameAndType        #85:#82       // escapeCharacter:Ljava/lang/Character;\n-  #188 = NameAndType        #81:#82       // commentMarker:Ljava/lang/Character;\n-  #189 = NameAndType        #95:#96       // quoteMode:Lorg/apache/commons/csv/QuoteMode;\n-  #190 = NameAndType        #93:#82       // quoteCharacter:Ljava/lang/Character;\n-  #191 = NameAndType        #83:#84       // delimiter:Ljava/lang/String;\n-  #192 = Utf8               org/apache/commons/csv/CSVFormat$Builder\n-  #193 = NameAndType        #253:#254     // DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-  #194 = NameAndType        #108:#109     // \"<init>\":(Lorg/apache/commons/csv/CSVFormat;)V\n-  #195 = NameAndType        #108:#255     // \"<init>\":()V\n-  #196 = NameAndType        #256:#257     // access$000:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-  #197 = NameAndType        #258:#259     // access$100:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-  #198 = NameAndType        #260:#261     // access$200:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/QuoteMode;\n-  #199 = NameAndType        #262:#259     // access$300:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-  #200 = NameAndType        #263:#259     // access$400:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-  #201 = NameAndType        #264:#265     // access$500:(Lorg/apache/commons/csv/CSVFormat;)Z\n-  #202 = NameAndType        #266:#265     // access$600:(Lorg/apache/commons/csv/CSVFormat;)Z\n-  #203 = NameAndType        #267:#265     // access$700:(Lorg/apache/commons/csv/CSVFormat;)Z\n-  #204 = NameAndType        #268:#257     // access$800:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-  #205 = NameAndType        #269:#257     // access$900:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-  #206 = NameAndType        #270:#271     // access$1000:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n-  #207 = NameAndType        #272:#271     // access$1100:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n-  #208 = NameAndType        #273:#265     // access$1200:(Lorg/apache/commons/csv/CSVFormat;)Z\n-  #209 = NameAndType        #274:#265     // access$1300:(Lorg/apache/commons/csv/CSVFormat;)Z\n-  #210 = NameAndType        #275:#265     // access$1400:(Lorg/apache/commons/csv/CSVFormat;)Z\n-  #211 = NameAndType        #276:#265     // access$1500:(Lorg/apache/commons/csv/CSVFormat;)Z\n-  #212 = NameAndType        #277:#265     // access$1600:(Lorg/apache/commons/csv/CSVFormat;)Z\n-  #213 = NameAndType        #278:#257     // access$1700:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-  #214 = NameAndType        #279:#265     // access$1800:(Lorg/apache/commons/csv/CSVFormat;)Z\n-  #215 = Utf8               org/apache/commons/csv/CSVFormat\n-  #216 = NameAndType        #108:#281     // \"<init>\":(Lorg/apache/commons/csv/CSVFormat$Builder;Lorg/apache/commons/csv/CSVFormat$1;)V\n-  #217 = Class              #282          // java/lang/Character\n-  #218 = NameAndType        #283:#284     // valueOf:(C)Ljava/lang/Character;\n-  #219 = NameAndType        #116:#118     // setCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #220 = NameAndType        #285:#286     // access$2000:(Ljava/lang/Character;)Z\n-  #221 = Utf8               java/lang/IllegalArgumentException\n-  #222 = Utf8               The comment start marker character cannot be a line break\n-  #223 = NameAndType        #108:#287     // \"<init>\":(Ljava/lang/String;)V\n-  #224 = NameAndType        #283:#288     // valueOf:(C)Ljava/lang/String;\n-  #225 = NameAndType        #120:#121     // setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #226 = NameAndType        #289:#290     // access$2100:(Ljava/lang/String;)Z\n-  #227 = Utf8               The delimiter cannot be a line break\n-  #228 = NameAndType        #122:#118     // setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #229 = Utf8               The escape character cannot be a line break\n-  #230 = Class              #291          // java/lang/Class\n-  #231 = NameAndType        #292:#293     // getEnumConstants:()[Ljava/lang/Object;\n-  #232 = Utf8               [Ljava/lang/Enum;\n-  #233 = Utf8               java/lang/String\n-  #234 = Class              #294          // java/lang/Enum\n-  #235 = NameAndType        #295:#296     // name:()Ljava/lang/String;\n-  #236 = NameAndType        #123:#133     // setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #237 = NameAndType        #297:#298     // getMetaData:()Ljava/sql/ResultSetMetaData;\n-  #238 = NameAndType        #123:#132     // setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #239 = NameAndType        #299:#300     // getColumnCount:()I\n-  #240 = NameAndType        #301:#302     // getColumnLabel:(I)Ljava/lang/String;\n-  #241 = NameAndType        #303:#304     // clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #242 = NameAndType        #305:#306     // toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n-  #243 = Utf8               java/lang/StringBuilder\n-  #244 = NameAndType        #307:#308     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #245 = NameAndType        #307:#309     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #246 = NameAndType        #310:#296     // toString:()Ljava/lang/String;\n-  #247 = NameAndType        #140:#118     // setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #248 = Utf8               The quoteChar cannot be a line break\n-  #249 = Utf8               java/lang/Object\n-  #250 = Utf8               java/sql/ResultSet\n-  #251 = Utf8               java/sql/ResultSetMetaData\n-  #252 = Utf8               java/sql/SQLException\n-  #253 = Utf8               DEFAULT\n-  #254 = Utf8               Lorg/apache/commons/csv/CSVFormat;\n-  #255 = Utf8               ()V\n-  #256 = Utf8               access$000\n-  #257 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-  #258 = Utf8               access$100\n-  #259 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-  #260 = Utf8               access$200\n-  #261 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/QuoteMode;\n-  #262 = Utf8               access$300\n-  #263 = Utf8               access$400\n-  #264 = Utf8               access$500\n-  #265 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Z\n-  #266 = Utf8               access$600\n-  #267 = Utf8               access$700\n-  #268 = Utf8               access$800\n-  #269 = Utf8               access$900\n-  #270 = Utf8               access$1000\n-  #271 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n-  #272 = Utf8               access$1100\n-  #273 = Utf8               access$1200\n-  #274 = Utf8               access$1300\n-  #275 = Utf8               access$1400\n-  #276 = Utf8               access$1500\n-  #277 = Utf8               access$1600\n-  #278 = Utf8               access$1700\n-  #279 = Utf8               access$1800\n-  #280 = Class              #311          // org/apache/commons/csv/CSVFormat$1\n-  #281 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;Lorg/apache/commons/csv/CSVFormat$1;)V\n-  #282 = Utf8               java/lang/Character\n-  #283 = Utf8               valueOf\n-  #284 = Utf8               (C)Ljava/lang/Character;\n-  #285 = Utf8               access$2000\n-  #286 = Utf8               (Ljava/lang/Character;)Z\n-  #287 = Utf8               (Ljava/lang/String;)V\n-  #288 = Utf8               (C)Ljava/lang/String;\n-  #289 = Utf8               access$2100\n-  #290 = Utf8               (Ljava/lang/String;)Z\n-  #291 = Utf8               java/lang/Class\n-  #292 = Utf8               getEnumConstants\n-  #293 = Utf8               ()[Ljava/lang/Object;\n-  #294 = Utf8               java/lang/Enum\n-  #295 = Utf8               name\n-  #296 = Utf8               ()Ljava/lang/String;\n-  #297 = Utf8               getMetaData\n-  #298 = Utf8               ()Ljava/sql/ResultSetMetaData;\n-  #299 = Utf8               getColumnCount\n-  #300 = Utf8               ()I\n-  #301 = Utf8               getColumnLabel\n-  #302 = Utf8               (I)Ljava/lang/String;\n-  #303 = Utf8               clone\n-  #304 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #305 = Utf8               toStringArray\n-  #306 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/String;\n-  #307 = Utf8               append\n-  #308 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #309 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #310 = Utf8               toString\n+    #1 = Fieldref           #2.#3         // org/apache/commons/csv/CSVFormat$Builder.allowDuplicateHeaderNames:Z\n+    #2 = Class              #4            // org/apache/commons/csv/CSVFormat$Builder\n+    #3 = NameAndType        #5:#6         // allowDuplicateHeaderNames:Z\n+    #4 = Utf8               org/apache/commons/csv/CSVFormat$Builder\n+    #5 = Utf8               allowDuplicateHeaderNames\n+    #6 = Utf8               Z\n+    #7 = Fieldref           #2.#8         // org/apache/commons/csv/CSVFormat$Builder.quotedNullString:Ljava/lang/String;\n+    #8 = NameAndType        #9:#10        // quotedNullString:Ljava/lang/String;\n+    #9 = Utf8               quotedNullString\n+   #10 = Utf8               Ljava/lang/String;\n+   #11 = Fieldref           #2.#12        // org/apache/commons/csv/CSVFormat$Builder.autoFlush:Z\n+   #12 = NameAndType        #13:#6        // autoFlush:Z\n+   #13 = Utf8               autoFlush\n+   #14 = Fieldref           #2.#15        // org/apache/commons/csv/CSVFormat$Builder.trim:Z\n+   #15 = NameAndType        #16:#6        // trim:Z\n+   #16 = Utf8               trim\n+   #17 = Fieldref           #2.#18        // org/apache/commons/csv/CSVFormat$Builder.trailingDelimiter:Z\n+   #18 = NameAndType        #19:#6        // trailingDelimiter:Z\n+   #19 = Utf8               trailingDelimiter\n+   #20 = Fieldref           #2.#21        // org/apache/commons/csv/CSVFormat$Builder.ignoreHeaderCase:Z\n+   #21 = NameAndType        #22:#6        // ignoreHeaderCase:Z\n+   #22 = Utf8               ignoreHeaderCase\n+   #23 = Fieldref           #2.#24        // org/apache/commons/csv/CSVFormat$Builder.skipHeaderRecord:Z\n+   #24 = NameAndType        #25:#6        // skipHeaderRecord:Z\n+   #25 = Utf8               skipHeaderRecord\n+   #26 = Fieldref           #2.#27        // org/apache/commons/csv/CSVFormat$Builder.headers:[Ljava/lang/String;\n+   #27 = NameAndType        #28:#29       // headers:[Ljava/lang/String;\n+   #28 = Utf8               headers\n+   #29 = Utf8               [Ljava/lang/String;\n+   #30 = Fieldref           #2.#31        // org/apache/commons/csv/CSVFormat$Builder.headerComments:[Ljava/lang/String;\n+   #31 = NameAndType        #32:#29       // headerComments:[Ljava/lang/String;\n+   #32 = Utf8               headerComments\n+   #33 = Fieldref           #2.#34        // org/apache/commons/csv/CSVFormat$Builder.nullString:Ljava/lang/String;\n+   #34 = NameAndType        #35:#10       // nullString:Ljava/lang/String;\n+   #35 = Utf8               nullString\n+   #36 = Fieldref           #2.#37        // org/apache/commons/csv/CSVFormat$Builder.recordSeparator:Ljava/lang/String;\n+   #37 = NameAndType        #38:#10       // recordSeparator:Ljava/lang/String;\n+   #38 = Utf8               recordSeparator\n+   #39 = Fieldref           #2.#40        // org/apache/commons/csv/CSVFormat$Builder.ignoreEmptyLines:Z\n+   #40 = NameAndType        #41:#6        // ignoreEmptyLines:Z\n+   #41 = Utf8               ignoreEmptyLines\n+   #42 = Fieldref           #2.#43        // org/apache/commons/csv/CSVFormat$Builder.allowMissingColumnNames:Z\n+   #43 = NameAndType        #44:#6        // allowMissingColumnNames:Z\n+   #44 = Utf8               allowMissingColumnNames\n+   #45 = Fieldref           #2.#46        // org/apache/commons/csv/CSVFormat$Builder.ignoreSurroundingSpaces:Z\n+   #46 = NameAndType        #47:#6        // ignoreSurroundingSpaces:Z\n+   #47 = Utf8               ignoreSurroundingSpaces\n+   #48 = Fieldref           #2.#49        // org/apache/commons/csv/CSVFormat$Builder.escapeCharacter:Ljava/lang/Character;\n+   #49 = NameAndType        #50:#51       // escapeCharacter:Ljava/lang/Character;\n+   #50 = Utf8               escapeCharacter\n+   #51 = Utf8               Ljava/lang/Character;\n+   #52 = Fieldref           #2.#53        // org/apache/commons/csv/CSVFormat$Builder.commentMarker:Ljava/lang/Character;\n+   #53 = NameAndType        #54:#51       // commentMarker:Ljava/lang/Character;\n+   #54 = Utf8               commentMarker\n+   #55 = Fieldref           #2.#56        // org/apache/commons/csv/CSVFormat$Builder.quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+   #56 = NameAndType        #57:#58       // quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+   #57 = Utf8               quoteMode\n+   #58 = Utf8               Lorg/apache/commons/csv/QuoteMode;\n+   #59 = Fieldref           #2.#60        // org/apache/commons/csv/CSVFormat$Builder.quoteCharacter:Ljava/lang/Character;\n+   #60 = NameAndType        #61:#51       // quoteCharacter:Ljava/lang/Character;\n+   #61 = Utf8               quoteCharacter\n+   #62 = Fieldref           #2.#63        // org/apache/commons/csv/CSVFormat$Builder.delimiter:Ljava/lang/String;\n+   #63 = NameAndType        #64:#10       // delimiter:Ljava/lang/String;\n+   #64 = Utf8               delimiter\n+   #65 = Fieldref           #66.#67       // org/apache/commons/csv/CSVFormat.DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+   #66 = Class              #68           // org/apache/commons/csv/CSVFormat\n+   #67 = NameAndType        #69:#70       // DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+   #68 = Utf8               org/apache/commons/csv/CSVFormat\n+   #69 = Utf8               DEFAULT\n+   #70 = Utf8               Lorg/apache/commons/csv/CSVFormat;\n+   #71 = Methodref          #2.#72        // org/apache/commons/csv/CSVFormat$Builder.\"<init>\":(Lorg/apache/commons/csv/CSVFormat;)V\n+   #72 = NameAndType        #73:#74       // \"<init>\":(Lorg/apache/commons/csv/CSVFormat;)V\n+   #73 = Utf8               <init>\n+   #74 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)V\n+   #75 = Methodref          #76.#77       // java/lang/Object.\"<init>\":()V\n+   #76 = Class              #78           // java/lang/Object\n+   #77 = NameAndType        #73:#79       // \"<init>\":()V\n+   #78 = Utf8               java/lang/Object\n+   #79 = Utf8               ()V\n+   #80 = Methodref          #66.#81       // org/apache/commons/csv/CSVFormat.access$000:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+   #81 = NameAndType        #82:#83       // access$000:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+   #82 = Utf8               access$000\n+   #83 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+   #84 = Methodref          #66.#85       // org/apache/commons/csv/CSVFormat.access$100:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+   #85 = NameAndType        #86:#87       // access$100:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+   #86 = Utf8               access$100\n+   #87 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+   #88 = Methodref          #66.#89       // org/apache/commons/csv/CSVFormat.access$200:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/QuoteMode;\n+   #89 = NameAndType        #90:#91       // access$200:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/QuoteMode;\n+   #90 = Utf8               access$200\n+   #91 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/QuoteMode;\n+   #92 = Methodref          #66.#93       // org/apache/commons/csv/CSVFormat.access$300:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+   #93 = NameAndType        #94:#87       // access$300:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+   #94 = Utf8               access$300\n+   #95 = Methodref          #66.#96       // org/apache/commons/csv/CSVFormat.access$400:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+   #96 = NameAndType        #97:#87       // access$400:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+   #97 = Utf8               access$400\n+   #98 = Methodref          #66.#99       // org/apache/commons/csv/CSVFormat.access$500:(Lorg/apache/commons/csv/CSVFormat;)Z\n+   #99 = NameAndType        #100:#101     // access$500:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #100 = Utf8               access$500\n+  #101 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Z\n+  #102 = Methodref          #66.#103      // org/apache/commons/csv/CSVFormat.access$600:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #103 = NameAndType        #104:#101     // access$600:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #104 = Utf8               access$600\n+  #105 = Methodref          #66.#106      // org/apache/commons/csv/CSVFormat.access$700:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #106 = NameAndType        #107:#101     // access$700:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #107 = Utf8               access$700\n+  #108 = Methodref          #66.#109      // org/apache/commons/csv/CSVFormat.access$800:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+  #109 = NameAndType        #110:#83      // access$800:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+  #110 = Utf8               access$800\n+  #111 = Methodref          #66.#112      // org/apache/commons/csv/CSVFormat.access$900:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+  #112 = NameAndType        #113:#83      // access$900:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+  #113 = Utf8               access$900\n+  #114 = Methodref          #66.#115      // org/apache/commons/csv/CSVFormat.access$1000:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n+  #115 = NameAndType        #116:#117     // access$1000:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n+  #116 = Utf8               access$1000\n+  #117 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n+  #118 = Methodref          #66.#119      // org/apache/commons/csv/CSVFormat.access$1100:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n+  #119 = NameAndType        #120:#117     // access$1100:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n+  #120 = Utf8               access$1100\n+  #121 = Methodref          #66.#122      // org/apache/commons/csv/CSVFormat.access$1200:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #122 = NameAndType        #123:#101     // access$1200:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #123 = Utf8               access$1200\n+  #124 = Methodref          #66.#125      // org/apache/commons/csv/CSVFormat.access$1300:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #125 = NameAndType        #126:#101     // access$1300:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #126 = Utf8               access$1300\n+  #127 = Methodref          #66.#128      // org/apache/commons/csv/CSVFormat.access$1400:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #128 = NameAndType        #129:#101     // access$1400:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #129 = Utf8               access$1400\n+  #130 = Methodref          #66.#131      // org/apache/commons/csv/CSVFormat.access$1500:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #131 = NameAndType        #132:#101     // access$1500:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #132 = Utf8               access$1500\n+  #133 = Methodref          #66.#134      // org/apache/commons/csv/CSVFormat.access$1600:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #134 = NameAndType        #135:#101     // access$1600:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #135 = Utf8               access$1600\n+  #136 = Methodref          #66.#137      // org/apache/commons/csv/CSVFormat.access$1700:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+  #137 = NameAndType        #138:#83      // access$1700:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+  #138 = Utf8               access$1700\n+  #139 = Methodref          #66.#140      // org/apache/commons/csv/CSVFormat.access$1800:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #140 = NameAndType        #141:#101     // access$1800:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #141 = Utf8               access$1800\n+  #142 = Methodref          #66.#143      // org/apache/commons/csv/CSVFormat.\"<init>\":(Lorg/apache/commons/csv/CSVFormat$Builder;Lorg/apache/commons/csv/CSVFormat$1;)V\n+  #143 = NameAndType        #73:#144      // \"<init>\":(Lorg/apache/commons/csv/CSVFormat$Builder;Lorg/apache/commons/csv/CSVFormat$1;)V\n+  #144 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;Lorg/apache/commons/csv/CSVFormat$1;)V\n+  #145 = Methodref          #146.#147     // java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+  #146 = Class              #148          // java/lang/Character\n+  #147 = NameAndType        #149:#150     // valueOf:(C)Ljava/lang/Character;\n+  #148 = Utf8               java/lang/Character\n+  #149 = Utf8               valueOf\n+  #150 = Utf8               (C)Ljava/lang/Character;\n+  #151 = Methodref          #2.#152       // org/apache/commons/csv/CSVFormat$Builder.setCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #152 = NameAndType        #153:#154     // setCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #153 = Utf8               setCommentMarker\n+  #154 = Utf8               (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #155 = Methodref          #66.#156      // org/apache/commons/csv/CSVFormat.access$2000:(Ljava/lang/Character;)Z\n+  #156 = NameAndType        #157:#158     // access$2000:(Ljava/lang/Character;)Z\n+  #157 = Utf8               access$2000\n+  #158 = Utf8               (Ljava/lang/Character;)Z\n+  #159 = Class              #160          // java/lang/IllegalArgumentException\n+  #160 = Utf8               java/lang/IllegalArgumentException\n+  #161 = String             #162          // The comment start marker character cannot be a line break\n+  #162 = Utf8               The comment start marker character cannot be a line break\n+  #163 = Methodref          #159.#164     // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #164 = NameAndType        #73:#165      // \"<init>\":(Ljava/lang/String;)V\n+  #165 = Utf8               (Ljava/lang/String;)V\n+  #166 = Methodref          #167.#168     // java/lang/String.valueOf:(C)Ljava/lang/String;\n+  #167 = Class              #169          // java/lang/String\n+  #168 = NameAndType        #149:#170     // valueOf:(C)Ljava/lang/String;\n+  #169 = Utf8               java/lang/String\n+  #170 = Utf8               (C)Ljava/lang/String;\n+  #171 = Methodref          #2.#172       // org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #172 = NameAndType        #173:#174     // setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #173 = Utf8               setDelimiter\n+  #174 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #175 = Methodref          #66.#176      // org/apache/commons/csv/CSVFormat.access$2100:(Ljava/lang/String;)Z\n+  #176 = NameAndType        #177:#178     // access$2100:(Ljava/lang/String;)Z\n+  #177 = Utf8               access$2100\n+  #178 = Utf8               (Ljava/lang/String;)Z\n+  #179 = String             #180          // The delimiter cannot be a line break\n+  #180 = Utf8               The delimiter cannot be a line break\n+  #181 = Methodref          #2.#182       // org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #182 = NameAndType        #183:#154     // setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #183 = Utf8               setEscape\n+  #184 = String             #185          // The escape character cannot be a line break\n+  #185 = Utf8               The escape character cannot be a line break\n+  #186 = Methodref          #187.#188     // java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n+  #187 = Class              #189          // java/lang/Class\n+  #188 = NameAndType        #190:#191     // getEnumConstants:()[Ljava/lang/Object;\n+  #189 = Utf8               java/lang/Class\n+  #190 = Utf8               getEnumConstants\n+  #191 = Utf8               ()[Ljava/lang/Object;\n+  #192 = Class              #193          // \"[Ljava/lang/Enum;\"\n+  #193 = Utf8               [Ljava/lang/Enum;\n+  #194 = Methodref          #195.#196     // java/lang/Enum.name:()Ljava/lang/String;\n+  #195 = Class              #197          // java/lang/Enum\n+  #196 = NameAndType        #198:#199     // name:()Ljava/lang/String;\n+  #197 = Utf8               java/lang/Enum\n+  #198 = Utf8               name\n+  #199 = Utf8               ()Ljava/lang/String;\n+  #200 = Methodref          #2.#201       // org/apache/commons/csv/CSVFormat$Builder.setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #201 = NameAndType        #202:#203     // setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #202 = Utf8               setHeader\n+  #203 = Utf8               ([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #204 = InterfaceMethodref #205.#206     // java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;\n+  #205 = Class              #207          // java/sql/ResultSet\n+  #206 = NameAndType        #208:#209     // getMetaData:()Ljava/sql/ResultSetMetaData;\n+  #207 = Utf8               java/sql/ResultSet\n+  #208 = Utf8               getMetaData\n+  #209 = Utf8               ()Ljava/sql/ResultSetMetaData;\n+  #210 = Methodref          #2.#211       // org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #211 = NameAndType        #202:#212     // setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #212 = Utf8               (Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #213 = InterfaceMethodref #214.#215     // java/sql/ResultSetMetaData.getColumnCount:()I\n+  #214 = Class              #216          // java/sql/ResultSetMetaData\n+  #215 = NameAndType        #217:#218     // getColumnCount:()I\n+  #216 = Utf8               java/sql/ResultSetMetaData\n+  #217 = Utf8               getColumnCount\n+  #218 = Utf8               ()I\n+  #219 = InterfaceMethodref #214.#220     // java/sql/ResultSetMetaData.getColumnLabel:(I)Ljava/lang/String;\n+  #220 = NameAndType        #221:#222     // getColumnLabel:(I)Ljava/lang/String;\n+  #221 = Utf8               getColumnLabel\n+  #222 = Utf8               (I)Ljava/lang/String;\n+  #223 = Methodref          #66.#224      // org/apache/commons/csv/CSVFormat.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #224 = NameAndType        #225:#226     // clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #225 = Utf8               clone\n+  #226 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #227 = Class              #29           // \"[Ljava/lang/String;\"\n+  #228 = Methodref          #66.#229      // org/apache/commons/csv/CSVFormat.toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n+  #229 = NameAndType        #230:#231     // toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n+  #230 = Utf8               toStringArray\n+  #231 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/String;\n+  #232 = Class              #233          // java/lang/StringBuilder\n+  #233 = Utf8               java/lang/StringBuilder\n+  #234 = Methodref          #232.#77      // java/lang/StringBuilder.\"<init>\":()V\n+  #235 = Methodref          #232.#236     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #236 = NameAndType        #237:#238     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #237 = Utf8               append\n+  #238 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #239 = Methodref          #232.#240     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #240 = NameAndType        #237:#241     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #241 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #242 = Methodref          #232.#243     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #243 = NameAndType        #244:#199     // toString:()Ljava/lang/String;\n+  #244 = Utf8               toString\n+  #245 = Methodref          #2.#246       // org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #246 = NameAndType        #247:#154     // setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #247 = Utf8               setQuote\n+  #248 = String             #249          // The quoteChar cannot be a line break\n+  #249 = Utf8               The quoteChar cannot be a line break\n+  #250 = Utf8               create\n+  #251 = Utf8               ()Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #252 = Utf8               Code\n+  #253 = Utf8               LineNumberTable\n+  #254 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #255 = Utf8               build\n+  #256 = Utf8               ()Lorg/apache/commons/csv/CSVFormat;\n+  #257 = Utf8               setAllowDuplicateHeaderNames\n+  #258 = Utf8               (Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #259 = Utf8               setAllowMissingColumnNames\n+  #260 = Utf8               setAutoFlush\n+  #261 = Utf8               (C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #262 = Utf8               StackMapTable\n+  #263 = Utf8               (Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #264 = Utf8               Signature\n+  #265 = Utf8               (Ljava/lang/Class<+Ljava/lang/Enum<*>;>;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #266 = Utf8               (Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #267 = Utf8               Exceptions\n+  #268 = Class              #269          // java/sql/SQLException\n+  #269 = Utf8               java/sql/SQLException\n+  #270 = Utf8               setHeaderComments\n+  #271 = Utf8               ([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #272 = Utf8               setIgnoreEmptyLines\n+  #273 = Utf8               setIgnoreHeaderCase\n+  #274 = Utf8               setIgnoreSurroundingSpaces\n+  #275 = Utf8               setNullString\n+  #276 = Utf8               setQuoteMode\n+  #277 = Utf8               (Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #278 = Utf8               setRecordSeparator\n+  #279 = Utf8               setSkipHeaderRecord\n+  #280 = Utf8               setTrailingDelimiter\n+  #281 = Utf8               setTrim\n+  #282 = Utf8               access$2200\n+  #283 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+  #284 = Utf8               access$2300\n+  #285 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n+  #286 = Utf8               access$2400\n+  #287 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/QuoteMode;\n+  #288 = Utf8               access$2500\n+  #289 = Utf8               access$2600\n+  #290 = Utf8               access$2700\n+  #291 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #292 = Utf8               access$2800\n+  #293 = Utf8               access$2900\n+  #294 = Utf8               access$3000\n+  #295 = Utf8               access$3100\n+  #296 = Utf8               access$3200\n+  #297 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n+  #298 = Utf8               access$3300\n+  #299 = Utf8               access$3400\n+  #300 = Utf8               access$3500\n+  #301 = Utf8               access$3600\n+  #302 = Utf8               access$3700\n+  #303 = Utf8               access$3800\n+  #304 = Utf8               access$3900\n+  #305 = Utf8               access$4000\n+  #306 = Utf8               SourceFile\n+  #307 = Utf8               CSVFormat.java\n+  #308 = Utf8               InnerClasses\n+  #309 = Utf8               Builder\n+  #310 = Class              #311          // org/apache/commons/csv/CSVFormat$1\n   #311 = Utf8               org/apache/commons/csv/CSVFormat$1\n {\n   private boolean allowDuplicateHeaderNames;\n     descriptor: Z\n     flags: (0x0002) ACC_PRIVATE\n \n   private boolean allowMissingColumnNames;\n@@ -397,117 +397,117 @@\n     flags: (0x0002) ACC_PRIVATE\n \n   public static org.apache.commons.csv.CSVFormat$Builder create();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=0, args_size=0\n-         0: new           #20                 // class org/apache/commons/csv/CSVFormat$Builder\n+         0: new           #2                  // class org/apache/commons/csv/CSVFormat$Builder\n          3: dup\n-         4: getstatic     #21                 // Field org/apache/commons/csv/CSVFormat.DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-         7: invokespecial #22                 // Method \"<init>\":(Lorg/apache/commons/csv/CSVFormat;)V\n+         4: getstatic     #65                 // Field org/apache/commons/csv/CSVFormat.DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+         7: invokespecial #71                 // Method \"<init>\":(Lorg/apache/commons/csv/CSVFormat;)V\n         10: areturn\n       LineNumberTable:\n         line 178: 0\n \n   public static org.apache.commons.csv.CSVFormat$Builder create(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: new           #20                 // class org/apache/commons/csv/CSVFormat$Builder\n+         0: new           #2                  // class org/apache/commons/csv/CSVFormat$Builder\n          3: dup\n          4: aload_0\n-         5: invokespecial #22                 // Method \"<init>\":(Lorg/apache/commons/csv/CSVFormat;)V\n+         5: invokespecial #71                 // Method \"<init>\":(Lorg/apache/commons/csv/CSVFormat;)V\n          8: areturn\n       LineNumberTable:\n         line 188: 0\n \n   private org.apache.commons.csv.CSVFormat$Builder(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #23                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #75                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: invokestatic  #24                 // Method org/apache/commons/csv/CSVFormat.access$000:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-         9: putfield      #19                 // Field delimiter:Ljava/lang/String;\n+         6: invokestatic  #80                 // Method org/apache/commons/csv/CSVFormat.access$000:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+         9: putfield      #62                 // Field delimiter:Ljava/lang/String;\n         12: aload_0\n         13: aload_1\n-        14: invokestatic  #25                 // Method org/apache/commons/csv/CSVFormat.access$100:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-        17: putfield      #18                 // Field quoteCharacter:Ljava/lang/Character;\n+        14: invokestatic  #84                 // Method org/apache/commons/csv/CSVFormat.access$100:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+        17: putfield      #59                 // Field quoteCharacter:Ljava/lang/Character;\n         20: aload_0\n         21: aload_1\n-        22: invokestatic  #26                 // Method org/apache/commons/csv/CSVFormat.access$200:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/QuoteMode;\n-        25: putfield      #17                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        22: invokestatic  #88                 // Method org/apache/commons/csv/CSVFormat.access$200:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/QuoteMode;\n+        25: putfield      #55                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n         28: aload_0\n         29: aload_1\n-        30: invokestatic  #27                 // Method org/apache/commons/csv/CSVFormat.access$300:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-        33: putfield      #16                 // Field commentMarker:Ljava/lang/Character;\n+        30: invokestatic  #92                 // Method org/apache/commons/csv/CSVFormat.access$300:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+        33: putfield      #52                 // Field commentMarker:Ljava/lang/Character;\n         36: aload_0\n         37: aload_1\n-        38: invokestatic  #28                 // Method org/apache/commons/csv/CSVFormat.access$400:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-        41: putfield      #15                 // Field escapeCharacter:Ljava/lang/Character;\n+        38: invokestatic  #95                 // Method org/apache/commons/csv/CSVFormat.access$400:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+        41: putfield      #48                 // Field escapeCharacter:Ljava/lang/Character;\n         44: aload_0\n         45: aload_1\n-        46: invokestatic  #29                 // Method org/apache/commons/csv/CSVFormat.access$500:(Lorg/apache/commons/csv/CSVFormat;)Z\n-        49: putfield      #14                 // Field ignoreSurroundingSpaces:Z\n+        46: invokestatic  #98                 // Method org/apache/commons/csv/CSVFormat.access$500:(Lorg/apache/commons/csv/CSVFormat;)Z\n+        49: putfield      #45                 // Field ignoreSurroundingSpaces:Z\n         52: aload_0\n         53: aload_1\n-        54: invokestatic  #30                 // Method org/apache/commons/csv/CSVFormat.access$600:(Lorg/apache/commons/csv/CSVFormat;)Z\n-        57: putfield      #13                 // Field allowMissingColumnNames:Z\n+        54: invokestatic  #102                // Method org/apache/commons/csv/CSVFormat.access$600:(Lorg/apache/commons/csv/CSVFormat;)Z\n+        57: putfield      #42                 // Field allowMissingColumnNames:Z\n         60: aload_0\n         61: aload_1\n-        62: invokestatic  #31                 // Method org/apache/commons/csv/CSVFormat.access$700:(Lorg/apache/commons/csv/CSVFormat;)Z\n-        65: putfield      #12                 // Field ignoreEmptyLines:Z\n+        62: invokestatic  #105                // Method org/apache/commons/csv/CSVFormat.access$700:(Lorg/apache/commons/csv/CSVFormat;)Z\n+        65: putfield      #39                 // Field ignoreEmptyLines:Z\n         68: aload_0\n         69: aload_1\n-        70: invokestatic  #32                 // Method org/apache/commons/csv/CSVFormat.access$800:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-        73: putfield      #11                 // Field recordSeparator:Ljava/lang/String;\n+        70: invokestatic  #108                // Method org/apache/commons/csv/CSVFormat.access$800:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+        73: putfield      #36                 // Field recordSeparator:Ljava/lang/String;\n         76: aload_0\n         77: aload_1\n-        78: invokestatic  #33                 // Method org/apache/commons/csv/CSVFormat.access$900:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-        81: putfield      #10                 // Field nullString:Ljava/lang/String;\n+        78: invokestatic  #111                // Method org/apache/commons/csv/CSVFormat.access$900:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+        81: putfield      #33                 // Field nullString:Ljava/lang/String;\n         84: aload_0\n         85: aload_1\n-        86: invokestatic  #34                 // Method org/apache/commons/csv/CSVFormat.access$1000:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n-        89: putfield      #9                  // Field headerComments:[Ljava/lang/String;\n+        86: invokestatic  #114                // Method org/apache/commons/csv/CSVFormat.access$1000:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n+        89: putfield      #30                 // Field headerComments:[Ljava/lang/String;\n         92: aload_0\n         93: aload_1\n-        94: invokestatic  #35                 // Method org/apache/commons/csv/CSVFormat.access$1100:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n-        97: putfield      #8                  // Field headers:[Ljava/lang/String;\n+        94: invokestatic  #118                // Method org/apache/commons/csv/CSVFormat.access$1100:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n+        97: putfield      #26                 // Field headers:[Ljava/lang/String;\n        100: aload_0\n        101: aload_1\n-       102: invokestatic  #36                 // Method org/apache/commons/csv/CSVFormat.access$1200:(Lorg/apache/commons/csv/CSVFormat;)Z\n-       105: putfield      #7                  // Field skipHeaderRecord:Z\n+       102: invokestatic  #121                // Method org/apache/commons/csv/CSVFormat.access$1200:(Lorg/apache/commons/csv/CSVFormat;)Z\n+       105: putfield      #23                 // Field skipHeaderRecord:Z\n        108: aload_0\n        109: aload_1\n-       110: invokestatic  #37                 // Method org/apache/commons/csv/CSVFormat.access$1300:(Lorg/apache/commons/csv/CSVFormat;)Z\n-       113: putfield      #6                  // Field ignoreHeaderCase:Z\n+       110: invokestatic  #124                // Method org/apache/commons/csv/CSVFormat.access$1300:(Lorg/apache/commons/csv/CSVFormat;)Z\n+       113: putfield      #20                 // Field ignoreHeaderCase:Z\n        116: aload_0\n        117: aload_1\n-       118: invokestatic  #38                 // Method org/apache/commons/csv/CSVFormat.access$1400:(Lorg/apache/commons/csv/CSVFormat;)Z\n-       121: putfield      #5                  // Field trailingDelimiter:Z\n+       118: invokestatic  #127                // Method org/apache/commons/csv/CSVFormat.access$1400:(Lorg/apache/commons/csv/CSVFormat;)Z\n+       121: putfield      #17                 // Field trailingDelimiter:Z\n        124: aload_0\n        125: aload_1\n-       126: invokestatic  #39                 // Method org/apache/commons/csv/CSVFormat.access$1500:(Lorg/apache/commons/csv/CSVFormat;)Z\n-       129: putfield      #4                  // Field trim:Z\n+       126: invokestatic  #130                // Method org/apache/commons/csv/CSVFormat.access$1500:(Lorg/apache/commons/csv/CSVFormat;)Z\n+       129: putfield      #14                 // Field trim:Z\n        132: aload_0\n        133: aload_1\n-       134: invokestatic  #40                 // Method org/apache/commons/csv/CSVFormat.access$1600:(Lorg/apache/commons/csv/CSVFormat;)Z\n-       137: putfield      #3                  // Field autoFlush:Z\n+       134: invokestatic  #133                // Method org/apache/commons/csv/CSVFormat.access$1600:(Lorg/apache/commons/csv/CSVFormat;)Z\n+       137: putfield      #11                 // Field autoFlush:Z\n        140: aload_0\n        141: aload_1\n-       142: invokestatic  #41                 // Method org/apache/commons/csv/CSVFormat.access$1700:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-       145: putfield      #2                  // Field quotedNullString:Ljava/lang/String;\n+       142: invokestatic  #136                // Method org/apache/commons/csv/CSVFormat.access$1700:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+       145: putfield      #7                  // Field quotedNullString:Ljava/lang/String;\n        148: aload_0\n        149: aload_1\n-       150: invokestatic  #42                 // Method org/apache/commons/csv/CSVFormat.access$1800:(Lorg/apache/commons/csv/CSVFormat;)Z\n+       150: invokestatic  #139                // Method org/apache/commons/csv/CSVFormat.access$1800:(Lorg/apache/commons/csv/CSVFormat;)Z\n        153: putfield      #1                  // Field allowDuplicateHeaderNames:Z\n        156: return\n       LineNumberTable:\n         line 229: 0\n         line 230: 4\n         line 231: 12\n         line 232: 20\n@@ -530,19 +530,19 @@\n         line 249: 156\n \n   public org.apache.commons.csv.CSVFormat build();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n-         0: new           #43                 // class org/apache/commons/csv/CSVFormat\n+         0: new           #66                 // class org/apache/commons/csv/CSVFormat\n          3: dup\n          4: aload_0\n          5: aconst_null\n-         6: invokespecial #44                 // Method org/apache/commons/csv/CSVFormat.\"<init>\":(Lorg/apache/commons/csv/CSVFormat$Builder;Lorg/apache/commons/csv/CSVFormat$1;)V\n+         6: invokespecial #142                // Method org/apache/commons/csv/CSVFormat.\"<init>\":(Lorg/apache/commons/csv/CSVFormat$Builder;Lorg/apache/commons/csv/CSVFormat$1;)V\n          9: areturn\n       LineNumberTable:\n         line 257: 0\n \n   public org.apache.commons.csv.CSVFormat$Builder setAllowDuplicateHeaderNames(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n@@ -560,67 +560,67 @@\n   public org.apache.commons.csv.CSVFormat$Builder setAllowMissingColumnNames(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #13                 // Field allowMissingColumnNames:Z\n+         2: putfield      #42                 // Field allowMissingColumnNames:Z\n          5: aload_0\n          6: areturn\n       LineNumberTable:\n         line 280: 0\n         line 281: 5\n \n   public org.apache.commons.csv.CSVFormat$Builder setAutoFlush(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #3                  // Field autoFlush:Z\n+         2: putfield      #11                 // Field autoFlush:Z\n          5: aload_0\n          6: areturn\n       LineNumberTable:\n         line 291: 0\n         line 292: 5\n \n   public org.apache.commons.csv.CSVFormat$Builder setCommentMarker(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #45                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-         5: invokevirtual #46                 // Method setCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         2: invokestatic  #145                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+         5: invokevirtual #151                // Method setCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n          8: pop\n          9: aload_0\n         10: areturn\n       LineNumberTable:\n         line 305: 0\n         line 306: 9\n \n   public org.apache.commons.csv.CSVFormat$Builder setCommentMarker(java.lang.Character);\n     descriptor: (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #47                 // Method org/apache/commons/csv/CSVFormat.access$2000:(Ljava/lang/Character;)Z\n+         1: invokestatic  #155                // Method org/apache/commons/csv/CSVFormat.access$2000:(Ljava/lang/Character;)Z\n          4: ifeq          17\n-         7: new           #48                 // class java/lang/IllegalArgumentException\n+         7: new           #159                // class java/lang/IllegalArgumentException\n         10: dup\n-        11: ldc           #49                 // String The comment start marker character cannot be a line break\n-        13: invokespecial #50                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #161                // String The comment start marker character cannot be a line break\n+        13: invokespecial #163                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n         18: aload_1\n-        19: putfield      #16                 // Field commentMarker:Ljava/lang/Character;\n+        19: putfield      #52                 // Field commentMarker:Ljava/lang/Character;\n         22: aload_0\n         23: areturn\n       LineNumberTable:\n         line 319: 0\n         line 320: 7\n         line 322: 17\n         line 323: 22\n@@ -630,36 +630,36 @@\n   public org.apache.commons.csv.CSVFormat$Builder setDelimiter(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #51                 // Method java/lang/String.valueOf:(C)Ljava/lang/String;\n-         5: invokevirtual #52                 // Method setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         2: invokestatic  #166                // Method java/lang/String.valueOf:(C)Ljava/lang/String;\n+         5: invokevirtual #171                // Method setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n          8: areturn\n       LineNumberTable:\n         line 333: 0\n \n   public org.apache.commons.csv.CSVFormat$Builder setDelimiter(java.lang.String);\n     descriptor: (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #53                 // Method org/apache/commons/csv/CSVFormat.access$2100:(Ljava/lang/String;)Z\n+         1: invokestatic  #175                // Method org/apache/commons/csv/CSVFormat.access$2100:(Ljava/lang/String;)Z\n          4: ifeq          17\n-         7: new           #48                 // class java/lang/IllegalArgumentException\n+         7: new           #159                // class java/lang/IllegalArgumentException\n         10: dup\n-        11: ldc           #54                 // String The delimiter cannot be a line break\n-        13: invokespecial #50                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #179                // String The delimiter cannot be a line break\n+        13: invokespecial #163                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n         18: aload_1\n-        19: putfield      #19                 // Field delimiter:Ljava/lang/String;\n+        19: putfield      #62                 // Field delimiter:Ljava/lang/String;\n         22: aload_0\n         23: areturn\n       LineNumberTable:\n         line 343: 0\n         line 344: 7\n         line 346: 17\n         line 347: 22\n@@ -669,39 +669,39 @@\n   public org.apache.commons.csv.CSVFormat$Builder setEscape(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #45                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-         5: invokevirtual #55                 // Method setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         2: invokestatic  #145                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+         5: invokevirtual #181                // Method setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n          8: pop\n          9: aload_0\n         10: areturn\n       LineNumberTable:\n         line 358: 0\n         line 359: 9\n \n   public org.apache.commons.csv.CSVFormat$Builder setEscape(java.lang.Character);\n     descriptor: (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #47                 // Method org/apache/commons/csv/CSVFormat.access$2000:(Ljava/lang/Character;)Z\n+         1: invokestatic  #155                // Method org/apache/commons/csv/CSVFormat.access$2000:(Ljava/lang/Character;)Z\n          4: ifeq          17\n-         7: new           #48                 // class java/lang/IllegalArgumentException\n+         7: new           #159                // class java/lang/IllegalArgumentException\n         10: dup\n-        11: ldc           #56                 // String The escape character cannot be a line break\n-        13: invokespecial #50                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #184                // String The escape character cannot be a line break\n+        13: invokespecial #163                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n         18: aload_1\n-        19: putfield      #15                 // Field escapeCharacter:Ljava/lang/Character;\n+        19: putfield      #48                 // Field escapeCharacter:Ljava/lang/Character;\n         22: aload_0\n         23: areturn\n       LineNumberTable:\n         line 370: 0\n         line 371: 7\n         line 373: 17\n         line 374: 22\n@@ -714,39 +714,39 @@\n     Code:\n       stack=4, locals=5, args_size=2\n          0: aconst_null\n          1: astore_2\n          2: aload_1\n          3: ifnull        47\n          6: aload_1\n-         7: invokevirtual #57                 // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n-        10: checkcast     #58                 // class \"[Ljava/lang/Enum;\"\n+         7: invokevirtual #186                // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n+        10: checkcast     #192                // class \"[Ljava/lang/Enum;\"\n         13: astore_3\n         14: aload_3\n         15: arraylength\n-        16: anewarray     #59                 // class java/lang/String\n+        16: anewarray     #167                // class java/lang/String\n         19: astore_2\n         20: iconst_0\n         21: istore        4\n         23: iload         4\n         25: aload_3\n         26: arraylength\n         27: if_icmpge     47\n         30: aload_2\n         31: iload         4\n         33: aload_3\n         34: iload         4\n         36: aaload\n-        37: invokevirtual #60                 // Method java/lang/Enum.name:()Ljava/lang/String;\n+        37: invokevirtual #194                // Method java/lang/Enum.name:()Ljava/lang/String;\n         40: aastore\n         41: iinc          4, 1\n         44: goto          23\n         47: aload_0\n         48: aload_2\n-        49: invokevirtual #61                 // Method setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+        49: invokevirtual #200                // Method setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n         52: areturn\n       LineNumberTable:\n         line 399: 0\n         line 400: 2\n         line 401: 6\n         line 402: 14\n         line 403: 20\n@@ -755,29 +755,29 @@\n         line 407: 47\n       StackMapTable: number_of_entries = 2\n         frame_type = 254 /* append */\n           offset_delta = 23\n           locals = [ class \"[Ljava/lang/String;\", class \"[Ljava/lang/Enum;\", int ]\n         frame_type = 249 /* chop */\n           offset_delta = 23\n-    Signature: #126                         // (Ljava/lang/Class<+Ljava/lang/Enum<*>;>;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+    Signature: #265                         // (Ljava/lang/Class<+Ljava/lang/Enum<*>;>;)Lorg/apache/commons/csv/CSVFormat$Builder;\n \n   public org.apache.commons.csv.CSVFormat$Builder setHeader(java.sql.ResultSet) throws java.sql.SQLException;\n     descriptor: (Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: ifnull        14\n          5: aload_1\n-         6: invokeinterface #62,  1           // InterfaceMethod java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;\n+         6: invokeinterface #204,  1          // InterfaceMethod java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;\n         11: goto          15\n         14: aconst_null\n-        15: invokevirtual #63                 // Method setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+        15: invokevirtual #210                // Method setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n         18: areturn\n       LineNumberTable:\n         line 431: 0\n       StackMapTable: number_of_entries = 2\n         frame_type = 78 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/csv/CSVFormat$Builder ]\n         frame_type = 255 /* full_frame */\n@@ -793,37 +793,37 @@\n     Code:\n       stack=5, locals=5, args_size=2\n          0: aconst_null\n          1: astore_2\n          2: aload_1\n          3: ifnull        47\n          6: aload_1\n-         7: invokeinterface #64,  1           // InterfaceMethod java/sql/ResultSetMetaData.getColumnCount:()I\n+         7: invokeinterface #213,  1          // InterfaceMethod java/sql/ResultSetMetaData.getColumnCount:()I\n         12: istore_3\n         13: iload_3\n-        14: anewarray     #59                 // class java/lang/String\n+        14: anewarray     #167                // class java/lang/String\n         17: astore_2\n         18: iconst_0\n         19: istore        4\n         21: iload         4\n         23: iload_3\n         24: if_icmpge     47\n         27: aload_2\n         28: iload         4\n         30: aload_1\n         31: iload         4\n         33: iconst_1\n         34: iadd\n-        35: invokeinterface #65,  2           // InterfaceMethod java/sql/ResultSetMetaData.getColumnLabel:(I)Ljava/lang/String;\n+        35: invokeinterface #219,  2          // InterfaceMethod java/sql/ResultSetMetaData.getColumnLabel:(I)Ljava/lang/String;\n         40: aastore\n         41: iinc          4, 1\n         44: goto          21\n         47: aload_0\n         48: aload_2\n-        49: invokevirtual #61                 // Method setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+        49: invokevirtual #200                // Method setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n         52: areturn\n       LineNumberTable:\n         line 455: 0\n         line 456: 2\n         line 457: 6\n         line 458: 13\n         line 459: 18\n@@ -842,159 +842,159 @@\n   public org.apache.commons.csv.CSVFormat$Builder setHeader(java.lang.String...);\n     descriptor: ([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #66                 // Method org/apache/commons/csv/CSVFormat.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n-         5: checkcast     #67                 // class \"[Ljava/lang/String;\"\n-         8: putfield      #8                  // Field headers:[Ljava/lang/String;\n+         2: invokestatic  #223                // Method org/apache/commons/csv/CSVFormat.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n+         5: checkcast     #227                // class \"[Ljava/lang/String;\"\n+         8: putfield      #26                 // Field headers:[Ljava/lang/String;\n         11: aload_0\n         12: areturn\n       LineNumberTable:\n         line 486: 0\n         line 487: 11\n \n   public org.apache.commons.csv.CSVFormat$Builder setHeaderComments(java.lang.Object...);\n     descriptor: ([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #68                 // Method org/apache/commons/csv/CSVFormat.toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n-         5: invokestatic  #66                 // Method org/apache/commons/csv/CSVFormat.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n-         8: checkcast     #67                 // class \"[Ljava/lang/String;\"\n-        11: putfield      #9                  // Field headerComments:[Ljava/lang/String;\n+         2: invokestatic  #228                // Method org/apache/commons/csv/CSVFormat.toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n+         5: invokestatic  #223                // Method org/apache/commons/csv/CSVFormat.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n+         8: checkcast     #227                // class \"[Ljava/lang/String;\"\n+        11: putfield      #30                 // Field headerComments:[Ljava/lang/String;\n         14: aload_0\n         15: areturn\n       LineNumberTable:\n         line 501: 0\n         line 502: 14\n \n   public org.apache.commons.csv.CSVFormat$Builder setHeaderComments(java.lang.String...);\n     descriptor: ([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #66                 // Method org/apache/commons/csv/CSVFormat.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n-         5: checkcast     #67                 // class \"[Ljava/lang/String;\"\n-         8: putfield      #9                  // Field headerComments:[Ljava/lang/String;\n+         2: invokestatic  #223                // Method org/apache/commons/csv/CSVFormat.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n+         5: checkcast     #227                // class \"[Ljava/lang/String;\"\n+         8: putfield      #30                 // Field headerComments:[Ljava/lang/String;\n         11: aload_0\n         12: areturn\n       LineNumberTable:\n         line 516: 0\n         line 517: 11\n \n   public org.apache.commons.csv.CSVFormat$Builder setIgnoreEmptyLines(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #12                 // Field ignoreEmptyLines:Z\n+         2: putfield      #39                 // Field ignoreEmptyLines:Z\n          5: aload_0\n          6: areturn\n       LineNumberTable:\n         line 529: 0\n         line 530: 5\n \n   public org.apache.commons.csv.CSVFormat$Builder setIgnoreHeaderCase(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #6                  // Field ignoreHeaderCase:Z\n+         2: putfield      #20                 // Field ignoreHeaderCase:Z\n          5: aload_0\n          6: areturn\n       LineNumberTable:\n         line 540: 0\n         line 541: 5\n \n   public org.apache.commons.csv.CSVFormat$Builder setIgnoreSurroundingSpaces(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #14                 // Field ignoreSurroundingSpaces:Z\n+         2: putfield      #45                 // Field ignoreSurroundingSpaces:Z\n          5: aload_0\n          6: areturn\n       LineNumberTable:\n         line 551: 0\n         line 552: 5\n \n   public org.apache.commons.csv.CSVFormat$Builder setNullString(java.lang.String);\n     descriptor: (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #10                 // Field nullString:Ljava/lang/String;\n+         2: putfield      #33                 // Field nullString:Ljava/lang/String;\n          5: aload_0\n-         6: new           #69                 // class java/lang/StringBuilder\n+         6: new           #232                // class java/lang/StringBuilder\n          9: dup\n-        10: invokespecial #70                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        10: invokespecial #234                // Method java/lang/StringBuilder.\"<init>\":()V\n         13: aload_0\n-        14: getfield      #18                 // Field quoteCharacter:Ljava/lang/Character;\n-        17: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        14: getfield      #59                 // Field quoteCharacter:Ljava/lang/Character;\n+        17: invokevirtual #235                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n         20: aload_1\n-        21: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        21: invokevirtual #239                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         24: aload_0\n-        25: getfield      #18                 // Field quoteCharacter:Ljava/lang/Character;\n-        28: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        31: invokevirtual #73                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        34: putfield      #2                  // Field quotedNullString:Ljava/lang/String;\n+        25: getfield      #59                 // Field quoteCharacter:Ljava/lang/Character;\n+        28: invokevirtual #235                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        31: invokevirtual #242                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        34: putfield      #7                  // Field quotedNullString:Ljava/lang/String;\n         37: aload_0\n         38: areturn\n       LineNumberTable:\n         line 567: 0\n         line 568: 5\n         line 569: 37\n \n   public org.apache.commons.csv.CSVFormat$Builder setQuote(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #45                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-         5: invokevirtual #74                 // Method setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         2: invokestatic  #145                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+         5: invokevirtual #245                // Method setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n          8: pop\n          9: aload_0\n         10: areturn\n       LineNumberTable:\n         line 579: 0\n         line 580: 9\n \n   public org.apache.commons.csv.CSVFormat$Builder setQuote(java.lang.Character);\n     descriptor: (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #47                 // Method org/apache/commons/csv/CSVFormat.access$2000:(Ljava/lang/Character;)Z\n+         1: invokestatic  #155                // Method org/apache/commons/csv/CSVFormat.access$2000:(Ljava/lang/Character;)Z\n          4: ifeq          17\n-         7: new           #48                 // class java/lang/IllegalArgumentException\n+         7: new           #159                // class java/lang/IllegalArgumentException\n         10: dup\n-        11: ldc           #75                 // String The quoteChar cannot be a line break\n-        13: invokespecial #50                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #248                // String The quoteChar cannot be a line break\n+        13: invokespecial #163                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n         18: aload_1\n-        19: putfield      #18                 // Field quoteCharacter:Ljava/lang/Character;\n+        19: putfield      #59                 // Field quoteCharacter:Ljava/lang/Character;\n         22: aload_0\n         23: areturn\n       LineNumberTable:\n         line 590: 0\n         line 591: 7\n         line 593: 17\n         line 594: 22\n@@ -1004,286 +1004,286 @@\n   public org.apache.commons.csv.CSVFormat$Builder setQuoteMode(org.apache.commons.csv.QuoteMode);\n     descriptor: (Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #17                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+         2: putfield      #55                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n          5: aload_0\n          6: areturn\n       LineNumberTable:\n         line 604: 0\n         line 605: 5\n \n   public org.apache.commons.csv.CSVFormat$Builder setRecordSeparator(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #51                 // Method java/lang/String.valueOf:(C)Ljava/lang/String;\n-         5: putfield      #11                 // Field recordSeparator:Ljava/lang/String;\n+         2: invokestatic  #166                // Method java/lang/String.valueOf:(C)Ljava/lang/String;\n+         5: putfield      #36                 // Field recordSeparator:Ljava/lang/String;\n          8: aload_0\n          9: areturn\n       LineNumberTable:\n         line 620: 0\n         line 621: 8\n \n   public org.apache.commons.csv.CSVFormat$Builder setRecordSeparator(java.lang.String);\n     descriptor: (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #11                 // Field recordSeparator:Ljava/lang/String;\n+         2: putfield      #36                 // Field recordSeparator:Ljava/lang/String;\n          5: aload_0\n          6: areturn\n       LineNumberTable:\n         line 636: 0\n         line 637: 5\n \n   public org.apache.commons.csv.CSVFormat$Builder setSkipHeaderRecord(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #7                  // Field skipHeaderRecord:Z\n+         2: putfield      #23                 // Field skipHeaderRecord:Z\n          5: aload_0\n          6: areturn\n       LineNumberTable:\n         line 647: 0\n         line 648: 5\n \n   public org.apache.commons.csv.CSVFormat$Builder setTrailingDelimiter(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #5                  // Field trailingDelimiter:Z\n+         2: putfield      #17                 // Field trailingDelimiter:Z\n          5: aload_0\n          6: areturn\n       LineNumberTable:\n         line 658: 0\n         line 659: 5\n \n   public org.apache.commons.csv.CSVFormat$Builder setTrim(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #4                  // Field trim:Z\n+         2: putfield      #14                 // Field trim:Z\n          5: aload_0\n          6: areturn\n       LineNumberTable:\n         line 669: 0\n         line 670: 5\n \n   static java.lang.String access$2200(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #19                 // Field delimiter:Ljava/lang/String;\n+         1: getfield      #62                 // Field delimiter:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 170: 0\n \n   static java.lang.Character access$2300(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field quoteCharacter:Ljava/lang/Character;\n+         1: getfield      #59                 // Field quoteCharacter:Ljava/lang/Character;\n          4: areturn\n       LineNumberTable:\n         line 170: 0\n \n   static org.apache.commons.csv.QuoteMode access$2400(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/QuoteMode;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #17                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+         1: getfield      #55                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n          4: areturn\n       LineNumberTable:\n         line 170: 0\n \n   static java.lang.Character access$2500(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #16                 // Field commentMarker:Ljava/lang/Character;\n+         1: getfield      #52                 // Field commentMarker:Ljava/lang/Character;\n          4: areturn\n       LineNumberTable:\n         line 170: 0\n \n   static java.lang.Character access$2600(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #15                 // Field escapeCharacter:Ljava/lang/Character;\n+         1: getfield      #48                 // Field escapeCharacter:Ljava/lang/Character;\n          4: areturn\n       LineNumberTable:\n         line 170: 0\n \n   static boolean access$2700(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #14                 // Field ignoreSurroundingSpaces:Z\n+         1: getfield      #45                 // Field ignoreSurroundingSpaces:Z\n          4: ireturn\n       LineNumberTable:\n         line 170: 0\n \n   static boolean access$2800(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #13                 // Field allowMissingColumnNames:Z\n+         1: getfield      #42                 // Field allowMissingColumnNames:Z\n          4: ireturn\n       LineNumberTable:\n         line 170: 0\n \n   static boolean access$2900(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field ignoreEmptyLines:Z\n+         1: getfield      #39                 // Field ignoreEmptyLines:Z\n          4: ireturn\n       LineNumberTable:\n         line 170: 0\n \n   static java.lang.String access$3000(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field recordSeparator:Ljava/lang/String;\n+         1: getfield      #36                 // Field recordSeparator:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 170: 0\n \n   static java.lang.String access$3100(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field nullString:Ljava/lang/String;\n+         1: getfield      #33                 // Field nullString:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 170: 0\n \n   static java.lang.String[] access$3200(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field headerComments:[Ljava/lang/String;\n+         1: getfield      #30                 // Field headerComments:[Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 170: 0\n \n   static java.lang.String[] access$3300(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field headers:[Ljava/lang/String;\n+         1: getfield      #26                 // Field headers:[Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 170: 0\n \n   static boolean access$3400(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field skipHeaderRecord:Z\n+         1: getfield      #23                 // Field skipHeaderRecord:Z\n          4: ireturn\n       LineNumberTable:\n         line 170: 0\n \n   static boolean access$3500(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field ignoreHeaderCase:Z\n+         1: getfield      #20                 // Field ignoreHeaderCase:Z\n          4: ireturn\n       LineNumberTable:\n         line 170: 0\n \n   static boolean access$3600(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field trailingDelimiter:Z\n+         1: getfield      #17                 // Field trailingDelimiter:Z\n          4: ireturn\n       LineNumberTable:\n         line 170: 0\n \n   static boolean access$3700(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field trim:Z\n+         1: getfield      #14                 // Field trim:Z\n          4: ireturn\n       LineNumberTable:\n         line 170: 0\n \n   static boolean access$3800(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field autoFlush:Z\n+         1: getfield      #11                 // Field autoFlush:Z\n          4: ireturn\n       LineNumberTable:\n         line 170: 0\n \n   static java.lang.String access$3900(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field quotedNullString:Ljava/lang/String;\n+         1: getfield      #7                  // Field quotedNullString:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 170: 0\n \n   static boolean access$4000(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n@@ -1293,9 +1293,9 @@\n          1: getfield      #1                  // Field allowDuplicateHeaderNames:Z\n          4: ireturn\n       LineNumberTable:\n         line 170: 0\n }\n SourceFile: \"CSVFormat.java\"\n InnerClasses:\n-  public static #102= #20 of #43;         // Builder=class org/apache/commons/csv/CSVFormat$Builder of class org/apache/commons/csv/CSVFormat\n-  static #280;                            // class org/apache/commons/csv/CSVFormat$1\n+  public static #309= #2 of #66;          // Builder=class org/apache/commons/csv/CSVFormat$Builder of class org/apache/commons/csv/CSVFormat\n+  static #310;                            // class org/apache/commons/csv/CSVFormat$1\n"}]}
