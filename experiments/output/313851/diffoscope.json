{"diffoscope-json-version": 1, "source1": "first/IOIndexedException.class", "source2": "second/IOIndexedException.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,78 +1,78 @@\n-  SHA-256 checksum 503fbe9875d041959be5d0c2aedcd6cfd42b9667a4d63c547641de32454f26e7\n+  SHA-256 checksum 871d4eb9715f9bf27431710a78cbc074aae73450c63fb6e4d0e4803b580a3888\n   Compiled from \"IOIndexedException.java\"\n public class org.apache.commons.io.IOIndexedException extends java.io.IOException\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #12                         // org/apache/commons/io/IOIndexedException\n-  super_class: #13                        // java/io/IOException\n+  this_class: #2                          // org/apache/commons/io/IOIndexedException\n+  super_class: #8                         // java/io/IOException\n   interfaces: 0, fields: 2, methods: 3, attributes: 1\n Constant pool:\n-   #1 = Methodref          #12.#33        // org/apache/commons/io/IOIndexedException.toMessage:(ILjava/lang/Throwable;)Ljava/lang/String;\n-   #2 = Methodref          #13.#34        // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #3 = Fieldref           #12.#35        // org/apache/commons/io/IOIndexedException.index:I\n-   #4 = String             #36            // Null\n-   #5 = Methodref          #9.#37         // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #6 = Methodref          #38.#39        // java/lang/Class.getSimpleName:()Ljava/lang/String;\n-   #7 = Methodref          #40.#41        // java/lang/Throwable.getMessage:()Ljava/lang/String;\n-   #8 = String             #42            // %s #%,d: %s\n-   #9 = Class              #43            // java/lang/Object\n-  #10 = Methodref          #44.#45        // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-  #11 = Methodref          #28.#46        // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #12 = Class              #47            // org/apache/commons/io/IOIndexedException\n-  #13 = Class              #48            // java/io/IOException\n-  #14 = Utf8               serialVersionUID\n-  #15 = Utf8               J\n-  #16 = Utf8               ConstantValue\n-  #17 = Long               1l\n-  #19 = Utf8               index\n-  #20 = Utf8               I\n-  #21 = Utf8               <init>\n-  #22 = Utf8               (ILjava/lang/Throwable;)V\n-  #23 = Utf8               Code\n-  #24 = Utf8               LineNumberTable\n-  #25 = Utf8               toMessage\n-  #26 = Utf8               (ILjava/lang/Throwable;)Ljava/lang/String;\n-  #27 = Utf8               StackMapTable\n-  #28 = Class              #49            // java/lang/String\n-  #29 = Utf8               getIndex\n-  #30 = Utf8               ()I\n-  #31 = Utf8               SourceFile\n-  #32 = Utf8               IOIndexedException.java\n-  #33 = NameAndType        #25:#26        // toMessage:(ILjava/lang/Throwable;)Ljava/lang/String;\n-  #34 = NameAndType        #21:#50        // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #35 = NameAndType        #19:#20        // index:I\n-  #36 = Utf8               Null\n-  #37 = NameAndType        #51:#52        // getClass:()Ljava/lang/Class;\n-  #38 = Class              #53            // java/lang/Class\n-  #39 = NameAndType        #54:#55        // getSimpleName:()Ljava/lang/String;\n-  #40 = Class              #56            // java/lang/Throwable\n-  #41 = NameAndType        #57:#55        // getMessage:()Ljava/lang/String;\n-  #42 = Utf8               %s #%,d: %s\n-  #43 = Utf8               java/lang/Object\n-  #44 = Class              #58            // java/lang/Integer\n-  #45 = NameAndType        #59:#60        // valueOf:(I)Ljava/lang/Integer;\n-  #46 = NameAndType        #61:#62        // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #47 = Utf8               org/apache/commons/io/IOIndexedException\n-  #48 = Utf8               java/io/IOException\n-  #49 = Utf8               java/lang/String\n-  #50 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #51 = Utf8               getClass\n-  #52 = Utf8               ()Ljava/lang/Class;\n-  #53 = Utf8               java/lang/Class\n-  #54 = Utf8               getSimpleName\n-  #55 = Utf8               ()Ljava/lang/String;\n-  #56 = Utf8               java/lang/Throwable\n-  #57 = Utf8               getMessage\n-  #58 = Utf8               java/lang/Integer\n-  #59 = Utf8               valueOf\n-  #60 = Utf8               (I)Ljava/lang/Integer;\n-  #61 = Utf8               format\n-  #62 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #1 = Methodref          #2.#3          // org/apache/commons/io/IOIndexedException.toMessage:(ILjava/lang/Throwable;)Ljava/lang/String;\n+   #2 = Class              #4             // org/apache/commons/io/IOIndexedException\n+   #3 = NameAndType        #5:#6          // toMessage:(ILjava/lang/Throwable;)Ljava/lang/String;\n+   #4 = Utf8               org/apache/commons/io/IOIndexedException\n+   #5 = Utf8               toMessage\n+   #6 = Utf8               (ILjava/lang/Throwable;)Ljava/lang/String;\n+   #7 = Methodref          #8.#9          // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #8 = Class              #10            // java/io/IOException\n+   #9 = NameAndType        #11:#12        // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #10 = Utf8               java/io/IOException\n+  #11 = Utf8               <init>\n+  #12 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #13 = Fieldref           #2.#14         // org/apache/commons/io/IOIndexedException.index:I\n+  #14 = NameAndType        #15:#16        // index:I\n+  #15 = Utf8               index\n+  #16 = Utf8               I\n+  #17 = String             #18            // Null\n+  #18 = Utf8               Null\n+  #19 = Methodref          #20.#21        // java/lang/Object.getClass:()Ljava/lang/Class;\n+  #20 = Class              #22            // java/lang/Object\n+  #21 = NameAndType        #23:#24        // getClass:()Ljava/lang/Class;\n+  #22 = Utf8               java/lang/Object\n+  #23 = Utf8               getClass\n+  #24 = Utf8               ()Ljava/lang/Class;\n+  #25 = Methodref          #26.#27        // java/lang/Class.getSimpleName:()Ljava/lang/String;\n+  #26 = Class              #28            // java/lang/Class\n+  #27 = NameAndType        #29:#30        // getSimpleName:()Ljava/lang/String;\n+  #28 = Utf8               java/lang/Class\n+  #29 = Utf8               getSimpleName\n+  #30 = Utf8               ()Ljava/lang/String;\n+  #31 = Methodref          #32.#33        // java/lang/Throwable.getMessage:()Ljava/lang/String;\n+  #32 = Class              #34            // java/lang/Throwable\n+  #33 = NameAndType        #35:#30        // getMessage:()Ljava/lang/String;\n+  #34 = Utf8               java/lang/Throwable\n+  #35 = Utf8               getMessage\n+  #36 = String             #37            // %s #%,d: %s\n+  #37 = Utf8               %s #%,d: %s\n+  #38 = Methodref          #39.#40        // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+  #39 = Class              #41            // java/lang/Integer\n+  #40 = NameAndType        #42:#43        // valueOf:(I)Ljava/lang/Integer;\n+  #41 = Utf8               java/lang/Integer\n+  #42 = Utf8               valueOf\n+  #43 = Utf8               (I)Ljava/lang/Integer;\n+  #44 = Methodref          #45.#46        // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #45 = Class              #47            // java/lang/String\n+  #46 = NameAndType        #48:#49        // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #47 = Utf8               java/lang/String\n+  #48 = Utf8               format\n+  #49 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #50 = Utf8               serialVersionUID\n+  #51 = Utf8               J\n+  #52 = Utf8               ConstantValue\n+  #53 = Long               1l\n+  #55 = Utf8               (ILjava/lang/Throwable;)V\n+  #56 = Utf8               Code\n+  #57 = Utf8               LineNumberTable\n+  #58 = Utf8               StackMapTable\n+  #59 = Utf8               getIndex\n+  #60 = Utf8               ()I\n+  #61 = Utf8               SourceFile\n+  #62 = Utf8               IOIndexedException.java\n {\n   private static final long serialVersionUID = 1l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 1l\n \n   private final int index;\n@@ -85,81 +85,81 @@\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: iload_1\n          2: aload_2\n          3: invokestatic  #1                  // Method toMessage:(ILjava/lang/Throwable;)Ljava/lang/String;\n          6: aload_2\n-         7: invokespecial #2                  // Method java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+         7: invokespecial #7                  // Method java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         10: aload_0\n         11: iload_1\n-        12: putfield      #3                  // Field index:I\n+        12: putfield      #13                 // Field index:I\n         15: return\n       LineNumberTable:\n         line 39: 0\n         line 40: 10\n         line 41: 15\n \n   protected static java.lang.String toMessage(int, java.lang.Throwable);\n     descriptor: (ILjava/lang/Throwable;)Ljava/lang/String;\n     flags: (0x000c) ACC_PROTECTED, ACC_STATIC\n     Code:\n-      stack=5, locals=5, args_size=2\n+      stack=5, locals=4, args_size=2\n          0: aload_1\n          1: ifnonnull     9\n-         4: ldc           #4                  // String Null\n+         4: ldc           #17                 // String Null\n          6: goto          16\n          9: aload_1\n-        10: invokevirtual #5                  // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-        13: invokevirtual #6                  // Method java/lang/Class.getSimpleName:()Ljava/lang/String;\n-        16: astore_3\n+        10: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        13: invokevirtual #25                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;\n+        16: astore_2\n         17: aload_1\n         18: ifnonnull     26\n-        21: ldc           #4                  // String Null\n+        21: ldc           #17                 // String Null\n         23: goto          30\n         26: aload_1\n-        27: invokevirtual #7                  // Method java/lang/Throwable.getMessage:()Ljava/lang/String;\n-        30: astore        4\n-        32: ldc           #8                  // String %s #%,d: %s\n-        34: iconst_3\n-        35: anewarray     #9                  // class java/lang/Object\n-        38: dup\n-        39: iconst_0\n-        40: aload_3\n-        41: aastore\n-        42: dup\n-        43: iconst_1\n-        44: iload_0\n-        45: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        48: aastore\n-        49: dup\n-        50: iconst_2\n-        51: aload         4\n-        53: aastore\n-        54: invokestatic  #11                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        57: areturn\n+        27: invokevirtual #31                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;\n+        30: astore_3\n+        31: ldc           #36                 // String %s #%,d: %s\n+        33: iconst_3\n+        34: anewarray     #20                 // class java/lang/Object\n+        37: dup\n+        38: iconst_0\n+        39: aload_2\n+        40: aastore\n+        41: dup\n+        42: iconst_1\n+        43: iload_0\n+        44: invokestatic  #38                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        47: aastore\n+        48: dup\n+        49: iconst_2\n+        50: aload_3\n+        51: aastore\n+        52: invokestatic  #44                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        55: areturn\n       LineNumberTable:\n         line 53: 0\n         line 54: 17\n-        line 55: 32\n+        line 55: 31\n       StackMapTable: number_of_entries = 4\n         frame_type = 9 /* same */\n         frame_type = 70 /* same_locals_1_stack_item */\n           stack = [ class java/lang/String ]\n-        frame_type = 253 /* append */\n+        frame_type = 252 /* append */\n           offset_delta = 9\n-          locals = [ top, class java/lang/String ]\n+          locals = [ class java/lang/String ]\n         frame_type = 67 /* same_locals_1_stack_item */\n           stack = [ class java/lang/String ]\n \n   public int getIndex();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field index:I\n+         1: getfield      #13                 // Field index:I\n          4: ireturn\n       LineNumberTable:\n         line 64: 0\n }\n SourceFile: \"IOIndexedException.java\"\n"}]}
