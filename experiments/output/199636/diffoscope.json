{"diffoscope-json-version": 1, "source1": "first/GOTO.class", "source2": "second/GOTO.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -5,44 +5,44 @@\n import java.io.DataOutputStream;\n \n public class GOTO extends GotoInstruction implements VariableLengthInstruction\n {\n     GOTO() {\n     }\n     \n-    public GOTO(final InstructionHandle target) {\n-        super((short)167, target);\n+    public GOTO(final InstructionHandle instructionHandle) {\n+        super((short)167, instructionHandle);\n     }\n     \n-    public void accept(final Visitor v) {\n-        v.visitVariableLengthInstruction((VariableLengthInstruction)this);\n-        v.visitUnconditionalBranch((UnconditionalBranch)this);\n-        v.visitBranchInstruction((BranchInstruction)this);\n-        v.visitGotoInstruction((GotoInstruction)this);\n-        v.visitGOTO(this);\n+    public void accept(final Visitor visitor) {\n+        visitor.visitVariableLengthInstruction((VariableLengthInstruction)this);\n+        visitor.visitUnconditionalBranch((UnconditionalBranch)this);\n+        visitor.visitBranchInstruction((BranchInstruction)this);\n+        visitor.visitGotoInstruction((GotoInstruction)this);\n+        visitor.visitGOTO(this);\n     }\n     \n-    public void dump(final DataOutputStream out) throws IOException {\n+    public void dump(final DataOutputStream dataOutputStream) throws IOException {\n         super.setIndex(this.getTargetOffset());\n         final short opcode = this.getOpcode();\n         if (opcode == 167) {\n-            super.dump(out);\n+            super.dump(dataOutputStream);\n         }\n         else {\n             super.setIndex(this.getTargetOffset());\n-            out.writeByte(opcode);\n-            out.writeInt(super.getIndex());\n+            dataOutputStream.writeByte(opcode);\n+            dataOutputStream.writeInt(super.getIndex());\n         }\n     }\n     \n-    protected int updatePosition(final int offset, final int max_offset) {\n-        final int i = this.getTargetOffset();\n-        this.setPosition(this.getPosition() + offset);\n-        if (Math.abs(i) >= 32767 - max_offset) {\n+    protected int updatePosition(final int n, final int n2) {\n+        final int targetOffset = this.getTargetOffset();\n+        this.setPosition(this.getPosition() + n);\n+        if (Math.abs(targetOffset) >= 32767 - n2) {\n             super.setOpcode((short)200);\n-            final short old_length = (short)super.getLength();\n+            final short n3 = (short)super.getLength();\n             super.setLength(5);\n-            return super.getLength() - old_length;\n+            return super.getLength() - n3;\n         }\n         return 0;\n     }\n }\n"}]}
