{"diffoscope-json-version": 1, "source1": "first/ProtocolCommandSupport.class", "source2": "second/ProtocolCommandSupport.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -13,33 +13,35 @@\n     private final ListenerList listeners;\n     \n     public ProtocolCommandSupport(final Object source) {\n         this.listeners = new ListenerList();\n         this.source = source;\n     }\n     \n-    public void fireCommandSent(final String command, final String message) {\n-        final ProtocolCommandEvent event = new ProtocolCommandEvent(this.source, command, message);\n-        for (final EventListener listener : this.listeners) {\n-            ((ProtocolCommandListener)listener).protocolCommandSent(event);\n+    public void fireCommandSent(final String s, final String s2) {\n+        final ProtocolCommandEvent protocolCommandEvent = new ProtocolCommandEvent(this.source, s, s2);\n+        final Iterator iterator = this.listeners.iterator();\n+        while (iterator.hasNext()) {\n+            ((ProtocolCommandListener)iterator.next()).protocolCommandSent(protocolCommandEvent);\n         }\n     }\n     \n-    public void fireReplyReceived(final int replyCode, final String message) {\n-        final ProtocolCommandEvent event = new ProtocolCommandEvent(this.source, replyCode, message);\n-        for (final EventListener listener : this.listeners) {\n-            ((ProtocolCommandListener)listener).protocolReplyReceived(event);\n+    public void fireReplyReceived(final int n, final String s) {\n+        final ProtocolCommandEvent protocolCommandEvent = new ProtocolCommandEvent(this.source, n, s);\n+        final Iterator iterator = this.listeners.iterator();\n+        while (iterator.hasNext()) {\n+            ((ProtocolCommandListener)iterator.next()).protocolReplyReceived(protocolCommandEvent);\n         }\n     }\n     \n-    public void addProtocolCommandListener(final ProtocolCommandListener listener) {\n-        this.listeners.addListener((EventListener)listener);\n+    public void addProtocolCommandListener(final ProtocolCommandListener protocolCommandListener) {\n+        this.listeners.addListener((EventListener)protocolCommandListener);\n     }\n     \n-    public void removeProtocolCommandListener(final ProtocolCommandListener listener) {\n-        this.listeners.removeListener((EventListener)listener);\n+    public void removeProtocolCommandListener(final ProtocolCommandListener protocolCommandListener) {\n+        this.listeners.removeListener((EventListener)protocolCommandListener);\n     }\n     \n     public int getListenerCount() {\n         return this.listeners.getListenerCount();\n     }\n }\n"}]}
