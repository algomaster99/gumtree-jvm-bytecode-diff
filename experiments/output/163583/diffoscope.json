{"diffoscope-json-version": 1, "source1": "first/TapeInputStream.class", "source2": "second/TapeInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,68 +1,68 @@\n-  SHA-256 checksum 03a04f9243131912bdb509b827325b447b3aea25eaa917fb41b64e4ba166ca53\n+  SHA-256 checksum bb0800757b736ac73ae6f70b655df6ff2821d6ce4edbeead45c9ebc86c033ffb\n   Compiled from \"TapeInputStream.java\"\n class org.apache.commons.compress.archivers.dump.TapeInputStream extends java.io.FilterInputStream\n   minor version: 0\n   major version: 51\n   flags: (0x0020) ACC_SUPER\n   this_class: #9                          // org/apache/commons/compress/archivers/dump/TapeInputStream\n   super_class: #53                        // java/io/FilterInputStream\n   interfaces: 0, fields: 7, methods: 12, attributes: 2\n Constant pool:\n-    #1 = Class              #128          // org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n-    #2 = Methodref          #53.#129      // java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-    #3 = Fieldref           #9.#130       // org/apache/commons/compress/archivers/dump/TapeInputStream.blockBuffer:[B\n-    #4 = Fieldref           #9.#131       // org/apache/commons/compress/archivers/dump/TapeInputStream.currBlkIdx:I\n-    #5 = Fieldref           #9.#132       // org/apache/commons/compress/archivers/dump/TapeInputStream.blockSize:I\n-    #6 = Fieldref           #9.#133       // org/apache/commons/compress/archivers/dump/TapeInputStream.readOffset:I\n-    #7 = Fieldref           #9.#134       // org/apache/commons/compress/archivers/dump/TapeInputStream.isCompressed:Z\n-    #8 = Fieldref           #9.#135       // org/apache/commons/compress/archivers/dump/TapeInputStream.bytesRead:J\n-    #9 = Class              #136          // org/apache/commons/compress/archivers/dump/TapeInputStream\n-   #10 = Methodref          #137.#138     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #11 = Methodref          #9.#139       // org/apache/commons/compress/archivers/dump/TapeInputStream.readFully:([BII)V\n-   #12 = Fieldref           #9.#140       // org/apache/commons/compress/archivers/dump/TapeInputStream.in:Ljava/io/InputStream;\n-   #13 = Methodref          #141.#142     // java/io/InputStream.available:()I\n-   #14 = Class              #143          // java/lang/IllegalArgumentException\n-   #15 = String             #144          // all reads must be multiple of record size (1024 bytes.\n-   #16 = Methodref          #14.#145      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #17 = Methodref          #9.#146       // org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock:(Z)V\n-   #18 = Class              #147          // org/apache/commons/compress/archivers/dump/ShortFileException\n+    #1 = Class              #124          // org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n+    #2 = Methodref          #53.#125      // java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+    #3 = Fieldref           #9.#126       // org/apache/commons/compress/archivers/dump/TapeInputStream.blockBuffer:[B\n+    #4 = Fieldref           #9.#127       // org/apache/commons/compress/archivers/dump/TapeInputStream.currBlkIdx:I\n+    #5 = Fieldref           #9.#128       // org/apache/commons/compress/archivers/dump/TapeInputStream.blockSize:I\n+    #6 = Fieldref           #9.#129       // org/apache/commons/compress/archivers/dump/TapeInputStream.readOffset:I\n+    #7 = Fieldref           #9.#130       // org/apache/commons/compress/archivers/dump/TapeInputStream.isCompressed:Z\n+    #8 = Fieldref           #9.#131       // org/apache/commons/compress/archivers/dump/TapeInputStream.bytesRead:J\n+    #9 = Class              #132          // org/apache/commons/compress/archivers/dump/TapeInputStream\n+   #10 = Methodref          #133.#134     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #11 = Methodref          #9.#135       // org/apache/commons/compress/archivers/dump/TapeInputStream.readFully:([BII)V\n+   #12 = Fieldref           #9.#136       // org/apache/commons/compress/archivers/dump/TapeInputStream.in:Ljava/io/InputStream;\n+   #13 = Methodref          #137.#138     // java/io/InputStream.available:()I\n+   #14 = Class              #139          // java/lang/IllegalArgumentException\n+   #15 = String             #140          // all reads must be multiple of record size (1024 bytes.\n+   #16 = Methodref          #14.#141      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #17 = Methodref          #9.#142       // org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock:(Z)V\n+   #18 = Class              #143          // org/apache/commons/compress/archivers/dump/ShortFileException\n    #19 = Long               1024l\n    #21 = Long               -1l\n-   #23 = Fieldref           #137.#140     // java/lang/System.in:Ljava/io/InputStream;\n-   #24 = Methodref          #141.#148     // java/io/InputStream.close:()V\n-   #25 = Methodref          #9.#149       // org/apache/commons/compress/archivers/dump/TapeInputStream.read:([BII)I\n-   #26 = Methodref          #18.#150      // org/apache/commons/compress/archivers/dump/ShortFileException.\"<init>\":()V\n-   #27 = Class              #151          // java/io/IOException\n-   #28 = String             #152          // input buffer is closed\n-   #29 = Methodref          #27.#145      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #23 = Fieldref           #133.#136     // java/lang/System.in:Ljava/io/InputStream;\n+   #24 = Methodref          #137.#144     // java/io/InputStream.close:()V\n+   #25 = Methodref          #9.#145       // org/apache/commons/compress/archivers/dump/TapeInputStream.read:([BII)I\n+   #26 = Methodref          #18.#146      // org/apache/commons/compress/archivers/dump/ShortFileException.\"<init>\":()V\n+   #27 = Class              #147          // java/io/IOException\n+   #28 = String             #148          // input buffer is closed\n+   #29 = Methodref          #27.#141      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n    #30 = Long               4l\n-   #32 = Methodref          #153.#154     // org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32:([BI)I\n+   #32 = Methodref          #149.#150     // org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32:([BI)I\n    #33 = Integer            268435455\n-   #34 = Methodref          #155.#156     // java/util/Arrays.fill:([BB)V\n-   #35 = Fieldref           #54.#157      // org/apache/commons/compress/archivers/dump/TapeInputStream$1.$SwitchMap$org$apache$commons$compress$archivers$dump$DumpArchiveConstants$COMPRESSION_TYPE:[I\n-   #36 = Methodref          #158.#159     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE.find:(I)Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE;\n-   #37 = Methodref          #158.#160     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE.ordinal:()I\n-   #38 = Class              #161          // java/util/zip/Inflater\n-   #39 = Methodref          #38.#150      // java/util/zip/Inflater.\"<init>\":()V\n-   #40 = Methodref          #38.#162      // java/util/zip/Inflater.setInput:([BII)V\n-   #41 = Methodref          #38.#163      // java/util/zip/Inflater.inflate:([B)I\n-   #42 = Methodref          #38.#164      // java/util/zip/Inflater.end:()V\n-   #43 = Class              #165          // java/util/zip/DataFormatException\n-   #44 = Class              #166          // org/apache/commons/compress/archivers/dump/DumpArchiveException\n-   #45 = String             #167          // bad data\n-   #46 = Methodref          #44.#168      // org/apache/commons/compress/archivers/dump/DumpArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #47 = Class              #169          // org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException\n-   #48 = String             #170          // BZLIB2\n-   #49 = Methodref          #47.#145      // org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.\"<init>\":(Ljava/lang/String;)V\n-   #50 = String             #171          // LZO\n-   #51 = Methodref          #47.#150      // org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.\"<init>\":()V\n-   #52 = Methodref          #172.#173     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[BII)I\n-   #53 = Class              #174          // java/io/FilterInputStream\n-   #54 = Class              #175          // org/apache/commons/compress/archivers/dump/TapeInputStream$1\n+   #34 = Methodref          #151.#152     // java/util/Arrays.fill:([BB)V\n+   #35 = Fieldref           #54.#153      // org/apache/commons/compress/archivers/dump/TapeInputStream$1.$SwitchMap$org$apache$commons$compress$archivers$dump$DumpArchiveConstants$COMPRESSION_TYPE:[I\n+   #36 = Methodref          #154.#155     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE.find:(I)Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE;\n+   #37 = Methodref          #154.#156     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE.ordinal:()I\n+   #38 = Class              #157          // java/util/zip/Inflater\n+   #39 = Methodref          #38.#146      // java/util/zip/Inflater.\"<init>\":()V\n+   #40 = Methodref          #38.#158      // java/util/zip/Inflater.setInput:([BII)V\n+   #41 = Methodref          #38.#159      // java/util/zip/Inflater.inflate:([B)I\n+   #42 = Methodref          #38.#160      // java/util/zip/Inflater.end:()V\n+   #43 = Class              #161          // java/util/zip/DataFormatException\n+   #44 = Class              #162          // org/apache/commons/compress/archivers/dump/DumpArchiveException\n+   #45 = String             #163          // bad data\n+   #46 = Methodref          #44.#164      // org/apache/commons/compress/archivers/dump/DumpArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #47 = Class              #165          // org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException\n+   #48 = String             #166          // BZLIB2\n+   #49 = Methodref          #47.#141      // org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.\"<init>\":(Ljava/lang/String;)V\n+   #50 = String             #167          // LZO\n+   #51 = Methodref          #47.#146      // org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.\"<init>\":()V\n+   #52 = Methodref          #168.#169     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[BII)I\n+   #53 = Class              #170          // java/io/FilterInputStream\n+   #54 = Class              #171          // org/apache/commons/compress/archivers/dump/TapeInputStream$1\n    #55 = Utf8               InnerClasses\n    #56 = Utf8               blockBuffer\n    #57 = Utf8               [B\n    #58 = Utf8               currBlkIdx\n    #59 = Utf8               I\n    #60 = Utf8               blockSize\n    #61 = Utf8               RECORD_SIZE\n@@ -95,121 +95,117 @@\n    #88 = Utf8               sfe\n    #89 = Utf8               Lorg/apache/commons/compress/archivers/dump/ShortFileException;\n    #90 = Utf8               n\n    #91 = Utf8               b\n    #92 = Utf8               off\n    #93 = Utf8               len\n    #94 = Utf8               bytes\n-   #95 = Class              #147          // org/apache/commons/compress/archivers/dump/ShortFileException\n-   #96 = Utf8               skip\n-   #97 = Utf8               (J)J\n-   #98 = Class              #136          // org/apache/commons/compress/archivers/dump/TapeInputStream\n-   #99 = Utf8               close\n-  #100 = Utf8               ()V\n-  #101 = Utf8               peek\n-  #102 = Utf8               ()[B\n-  #103 = Utf8               readRecord\n-  #104 = Utf8               result\n-  #105 = Class              #57           // \"[B\"\n-  #106 = Utf8               readBlock\n-  #107 = Utf8               (Z)V\n-  #108 = Utf8               e\n-  #109 = Utf8               Ljava/util/zip/DataFormatException;\n-  #110 = Utf8               inflator\n-  #111 = Utf8               Ljava/util/zip/Inflater;\n-  #112 = Utf8               flags\n-  #113 = Utf8               length\n-  #114 = Utf8               compBuffer\n-  #115 = Utf8               h\n-  #116 = Utf8               compressed\n-  #117 = Utf8               decompress\n-  #118 = Class              #161          // java/util/zip/Inflater\n-  #119 = Class              #165          // java/util/zip/DataFormatException\n-  #120 = Class              #176          // java/lang/Throwable\n-  #121 = Utf8               readFully\n-  #122 = Utf8               ([BII)V\n-  #123 = Utf8               count\n-  #124 = Utf8               getBytesRead\n-  #125 = Utf8               ()J\n-  #126 = Utf8               SourceFile\n-  #127 = Utf8               TapeInputStream.java\n-  #128 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n-  #129 = NameAndType        #69:#70       // \"<init>\":(Ljava/io/InputStream;)V\n-  #130 = NameAndType        #56:#57       // blockBuffer:[B\n-  #131 = NameAndType        #58:#59       // currBlkIdx:I\n-  #132 = NameAndType        #60:#59       // blockSize:I\n-  #133 = NameAndType        #64:#59       // readOffset:I\n-  #134 = NameAndType        #65:#66       // isCompressed:Z\n-  #135 = NameAndType        #67:#68       // bytesRead:J\n-  #136 = Utf8               org/apache/commons/compress/archivers/dump/TapeInputStream\n-  #137 = Class              #177          // java/lang/System\n-  #138 = NameAndType        #178:#179     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #139 = NameAndType        #121:#122     // readFully:([BII)V\n-  #140 = NameAndType        #76:#77       // in:Ljava/io/InputStream;\n-  #141 = Class              #180          // java/io/InputStream\n-  #142 = NameAndType        #83:#84       // available:()I\n-  #143 = Utf8               java/lang/IllegalArgumentException\n-  #144 = Utf8               all reads must be multiple of record size (1024 bytes.\n-  #145 = NameAndType        #69:#181      // \"<init>\":(Ljava/lang/String;)V\n-  #146 = NameAndType        #106:#107     // readBlock:(Z)V\n-  #147 = Utf8               org/apache/commons/compress/archivers/dump/ShortFileException\n-  #148 = NameAndType        #99:#100      // close:()V\n-  #149 = NameAndType        #86:#87       // read:([BII)I\n-  #150 = NameAndType        #69:#100      // \"<init>\":()V\n-  #151 = Utf8               java/io/IOException\n-  #152 = Utf8               input buffer is closed\n-  #153 = Class              #182          // org/apache/commons/compress/archivers/dump/DumpArchiveUtil\n-  #154 = NameAndType        #183:#184     // convert32:([BI)I\n-  #155 = Class              #185          // java/util/Arrays\n-  #156 = NameAndType        #186:#187     // fill:([BB)V\n-  #157 = NameAndType        #188:#189     // $SwitchMap$org$apache$commons$compress$archivers$dump$DumpArchiveConstants$COMPRESSION_TYPE:[I\n-  #158 = Class              #190          // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE\n-  #159 = NameAndType        #192:#193     // find:(I)Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE;\n-  #160 = NameAndType        #194:#84      // ordinal:()I\n-  #161 = Utf8               java/util/zip/Inflater\n-  #162 = NameAndType        #195:#122     // setInput:([BII)V\n-  #163 = NameAndType        #196:#197     // inflate:([B)I\n-  #164 = NameAndType        #198:#100     // end:()V\n-  #165 = Utf8               java/util/zip/DataFormatException\n-  #166 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveException\n-  #167 = Utf8               bad data\n-  #168 = NameAndType        #69:#199      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #169 = Utf8               org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException\n-  #170 = Utf8               BZLIB2\n-  #171 = Utf8               LZO\n-  #172 = Class              #200          // org/apache/commons/compress/utils/IOUtils\n-  #173 = NameAndType        #121:#201     // readFully:(Ljava/io/InputStream;[BII)I\n-  #174 = Utf8               java/io/FilterInputStream\n-  #175 = Utf8               org/apache/commons/compress/archivers/dump/TapeInputStream$1\n-  #176 = Utf8               java/lang/Throwable\n-  #177 = Utf8               java/lang/System\n-  #178 = Utf8               arraycopy\n-  #179 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #180 = Utf8               java/io/InputStream\n-  #181 = Utf8               (Ljava/lang/String;)V\n-  #182 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveUtil\n-  #183 = Utf8               convert32\n-  #184 = Utf8               ([BI)I\n-  #185 = Utf8               java/util/Arrays\n-  #186 = Utf8               fill\n-  #187 = Utf8               ([BB)V\n-  #188 = Utf8               $SwitchMap$org$apache$commons$compress$archivers$dump$DumpArchiveConstants$COMPRESSION_TYPE\n-  #189 = Utf8               [I\n-  #190 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE\n-  #191 = Utf8               COMPRESSION_TYPE\n-  #192 = Utf8               find\n-  #193 = Utf8               (I)Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE;\n-  #194 = Utf8               ordinal\n-  #195 = Utf8               setInput\n-  #196 = Utf8               inflate\n-  #197 = Utf8               ([B)I\n-  #198 = Utf8               end\n-  #199 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #200 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #201 = Utf8               (Ljava/io/InputStream;[BII)I\n+   #95 = Utf8               skip\n+   #96 = Utf8               (J)J\n+   #97 = Utf8               close\n+   #98 = Utf8               ()V\n+   #99 = Utf8               peek\n+  #100 = Utf8               ()[B\n+  #101 = Utf8               readRecord\n+  #102 = Utf8               result\n+  #103 = Class              #57           // \"[B\"\n+  #104 = Utf8               readBlock\n+  #105 = Utf8               (Z)V\n+  #106 = Utf8               e\n+  #107 = Utf8               Ljava/util/zip/DataFormatException;\n+  #108 = Utf8               inflator\n+  #109 = Utf8               Ljava/util/zip/Inflater;\n+  #110 = Utf8               flags\n+  #111 = Utf8               length\n+  #112 = Utf8               compBuffer\n+  #113 = Utf8               h\n+  #114 = Utf8               compressed\n+  #115 = Utf8               decompress\n+  #116 = Class              #172          // java/lang/Throwable\n+  #117 = Utf8               readFully\n+  #118 = Utf8               ([BII)V\n+  #119 = Utf8               count\n+  #120 = Utf8               getBytesRead\n+  #121 = Utf8               ()J\n+  #122 = Utf8               SourceFile\n+  #123 = Utf8               TapeInputStream.java\n+  #124 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n+  #125 = NameAndType        #69:#70       // \"<init>\":(Ljava/io/InputStream;)V\n+  #126 = NameAndType        #56:#57       // blockBuffer:[B\n+  #127 = NameAndType        #58:#59       // currBlkIdx:I\n+  #128 = NameAndType        #60:#59       // blockSize:I\n+  #129 = NameAndType        #64:#59       // readOffset:I\n+  #130 = NameAndType        #65:#66       // isCompressed:Z\n+  #131 = NameAndType        #67:#68       // bytesRead:J\n+  #132 = Utf8               org/apache/commons/compress/archivers/dump/TapeInputStream\n+  #133 = Class              #173          // java/lang/System\n+  #134 = NameAndType        #174:#175     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #135 = NameAndType        #117:#118     // readFully:([BII)V\n+  #136 = NameAndType        #76:#77       // in:Ljava/io/InputStream;\n+  #137 = Class              #176          // java/io/InputStream\n+  #138 = NameAndType        #83:#84       // available:()I\n+  #139 = Utf8               java/lang/IllegalArgumentException\n+  #140 = Utf8               all reads must be multiple of record size (1024 bytes.\n+  #141 = NameAndType        #69:#177      // \"<init>\":(Ljava/lang/String;)V\n+  #142 = NameAndType        #104:#105     // readBlock:(Z)V\n+  #143 = Utf8               org/apache/commons/compress/archivers/dump/ShortFileException\n+  #144 = NameAndType        #97:#98       // close:()V\n+  #145 = NameAndType        #86:#87       // read:([BII)I\n+  #146 = NameAndType        #69:#98       // \"<init>\":()V\n+  #147 = Utf8               java/io/IOException\n+  #148 = Utf8               input buffer is closed\n+  #149 = Class              #178          // org/apache/commons/compress/archivers/dump/DumpArchiveUtil\n+  #150 = NameAndType        #179:#180     // convert32:([BI)I\n+  #151 = Class              #181          // java/util/Arrays\n+  #152 = NameAndType        #182:#183     // fill:([BB)V\n+  #153 = NameAndType        #184:#185     // $SwitchMap$org$apache$commons$compress$archivers$dump$DumpArchiveConstants$COMPRESSION_TYPE:[I\n+  #154 = Class              #186          // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE\n+  #155 = NameAndType        #188:#189     // find:(I)Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE;\n+  #156 = NameAndType        #190:#84      // ordinal:()I\n+  #157 = Utf8               java/util/zip/Inflater\n+  #158 = NameAndType        #191:#118     // setInput:([BII)V\n+  #159 = NameAndType        #192:#193     // inflate:([B)I\n+  #160 = NameAndType        #194:#98      // end:()V\n+  #161 = Utf8               java/util/zip/DataFormatException\n+  #162 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveException\n+  #163 = Utf8               bad data\n+  #164 = NameAndType        #69:#195      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #165 = Utf8               org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException\n+  #166 = Utf8               BZLIB2\n+  #167 = Utf8               LZO\n+  #168 = Class              #196          // org/apache/commons/compress/utils/IOUtils\n+  #169 = NameAndType        #117:#197     // readFully:(Ljava/io/InputStream;[BII)I\n+  #170 = Utf8               java/io/FilterInputStream\n+  #171 = Utf8               org/apache/commons/compress/archivers/dump/TapeInputStream$1\n+  #172 = Utf8               java/lang/Throwable\n+  #173 = Utf8               java/lang/System\n+  #174 = Utf8               arraycopy\n+  #175 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #176 = Utf8               java/io/InputStream\n+  #177 = Utf8               (Ljava/lang/String;)V\n+  #178 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveUtil\n+  #179 = Utf8               convert32\n+  #180 = Utf8               ([BI)I\n+  #181 = Utf8               java/util/Arrays\n+  #182 = Utf8               fill\n+  #183 = Utf8               ([BB)V\n+  #184 = Utf8               $SwitchMap$org$apache$commons$compress$archivers$dump$DumpArchiveConstants$COMPRESSION_TYPE\n+  #185 = Utf8               [I\n+  #186 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE\n+  #187 = Utf8               COMPRESSION_TYPE\n+  #188 = Utf8               find\n+  #189 = Utf8               (I)Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE;\n+  #190 = Utf8               ordinal\n+  #191 = Utf8               setInput\n+  #192 = Utf8               inflate\n+  #193 = Utf8               ([B)I\n+  #194 = Utf8               end\n+  #195 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #196 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #197 = Utf8               (Ljava/io/InputStream;[BII)I\n {\n   private byte[] blockBuffer;\n     descriptor: [B\n     flags: (0x0002) ACC_PRIVATE\n \n   private int currBlkIdx;\n     descriptor: I\n@@ -1108,8 +1104,8 @@\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n }\n SourceFile: \"TapeInputStream.java\"\n InnerClasses:\n   static #54;                             // class org/apache/commons/compress/archivers/dump/TapeInputStream$1\n-  public static final #191= #158 of #1;   // COMPRESSION_TYPE=class org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE of class org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n+  public static final #187= #154 of #1;   // COMPRESSION_TYPE=class org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE of class org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n"}]}
