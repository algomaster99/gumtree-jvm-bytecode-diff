{"diffoscope-json-version": 1, "source1": "first/AbstractFloatingPointBitsFromCharSequence.class", "source2": "second/AbstractFloatingPointBitsFromCharSequence.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,147 +1,147 @@\n-  SHA-256 checksum a27171c68ef352702060ca406424b4940b566d3505c1b6e8cd023d3b1b8dfab5\n+  SHA-256 checksum 01b3be50259a98d2080d9371b3cfe7a3cf7d13654855d836f97bad38493b3d56\n   Compiled from \"AbstractFloatingPointBitsFromCharSequence.java\"\n abstract class com.fasterxml.jackson.core.io.doubleparser.AbstractFloatingPointBitsFromCharSequence extends com.fasterxml.jackson.core.io.doubleparser.AbstractFloatValueParser\n   minor version: 0\n   major version: 52\n   flags: (0x0420) ACC_SUPER, ACC_ABSTRACT\n-  this_class: #31                         // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence\n-  super_class: #11                        // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser\n+  this_class: #14                         // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence\n+  super_class: #2                         // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser\n   interfaces: 0, fields: 0, methods: 14, attributes: 1\n Constant pool:\n-    #1 = Methodref          #11.#98       // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser.\"<init>\":()V\n-    #2 = InterfaceMethodref #70.#99       // java/lang/CharSequence.charAt:(I)C\n-    #3 = Methodref          #31.#100      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.isDigit:(C)Z\n-    #4 = Long               10l\n-    #6 = Long               48l\n-    #8 = Methodref          #31.#101      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.tryToParseEightDigits:(Ljava/lang/CharSequence;I)I\n-    #9 = Long               100000000l\n-   #11 = Class              #102          // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser\n-   #12 = Methodref          #31.#103      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.skipWhitespace:(Ljava/lang/CharSequence;II)I\n-   #13 = Long               -1l\n-   #15 = Long               1000000000000000000l\n-   #17 = Methodref          #104.#105     // java/lang/Long.compareUnsigned:(JJ)I\n-   #18 = Methodref          #31.#106      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.valueOfFloatLiteral:(Ljava/lang/CharSequence;IIZJIZI)J\n-   #19 = InterfaceMethodref #70.#107      // java/lang/CharSequence.length:()I\n-   #20 = Methodref          #31.#108      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.parseNaN:(Ljava/lang/CharSequence;II)J\n-   #21 = Methodref          #31.#109      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.parseInfinity:(Ljava/lang/CharSequence;IIZ)J\n-   #22 = Methodref          #31.#110      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.parseHexFloatLiteral:(Ljava/lang/CharSequence;IIIZ)J\n-   #23 = Methodref          #31.#111      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.parseDecFloatLiteral:(Ljava/lang/CharSequence;IIIZZ)J\n-   #24 = Fieldref           #11.#112      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser.CHAR_TO_HEX_MAP:[B\n-   #25 = Methodref          #113.#114     // java/lang/Math.min:(II)I\n-   #26 = Methodref          #31.#115      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.valueOfHexLiteral:(Ljava/lang/CharSequence;IIZJIZI)J\n-   #27 = Methodref          #31.#116      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.negativeInfinity:()J\n-   #28 = Methodref          #31.#117      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.positiveInfinity:()J\n-   #29 = Methodref          #31.#118      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.nan:()J\n-   #30 = Methodref          #119.#120     // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.tryToParseEightDigitsUtf16:(JJ)I\n-   #31 = Class              #121          // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence\n-   #32 = Utf8               <init>\n-   #33 = Utf8               ()V\n-   #34 = Utf8               Code\n-   #35 = Utf8               LineNumberTable\n-   #36 = Utf8               LocalVariableTable\n-   #37 = Utf8               this\n-   #38 = Utf8               Lcom/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence;\n-   #39 = Utf8               isDigit\n-   #40 = Utf8               (C)Z\n-   #41 = Utf8               c\n-   #42 = Utf8               C\n-   #43 = Utf8               StackMapTable\n-   #44 = Utf8               parseDecFloatLiteral\n-   #45 = Utf8               (Ljava/lang/CharSequence;IIIZZ)J\n-   #46 = Utf8               eightDigits\n-   #47 = Utf8               I\n-   #48 = Utf8               digitCount\n-   #49 = Utf8               exponent\n-   #50 = Utf8               neg_exp\n-   #51 = Utf8               Z\n-   #52 = Utf8               isSignificandTruncated\n-   #53 = Utf8               exponentOfTruncatedSignificand\n-   #54 = Utf8               str\n-   #55 = Utf8               Ljava/lang/CharSequence;\n-   #56 = Utf8               index\n-   #57 = Utf8               startIndex\n-   #58 = Utf8               endIndex\n-   #59 = Utf8               isNegative\n-   #60 = Utf8               hasLeadingZero\n-   #61 = Utf8               significand\n-   #62 = Utf8               J\n-   #63 = Utf8               significandStartIndex\n-   #64 = Utf8               virtualIndexOfPoint\n-   #65 = Utf8               illegal\n-   #66 = Utf8               ch\n-   #67 = Utf8               significandEndIndex\n-   #68 = Utf8               expNumber\n-   #69 = Utf8               skipCountInTruncatedDigits\n-   #70 = Class              #122          // java/lang/CharSequence\n-   #71 = Utf8               parseFloatingPointLiteral\n-   #72 = Utf8               (Ljava/lang/CharSequence;II)J\n-   #73 = Utf8               offset\n-   #74 = Utf8               length\n-   #75 = Utf8               parseHexFloatLiteral\n-   #76 = Utf8               (Ljava/lang/CharSequence;IIIZ)J\n-   #77 = Utf8               hexValue\n-   #78 = Utf8               hasExponent\n-   #79 = Utf8               parseInfinity\n-   #80 = Utf8               (Ljava/lang/CharSequence;IIZ)J\n-   #81 = Utf8               negative\n-   #82 = Utf8               parseNaN\n-   #83 = Utf8               skipWhitespace\n-   #84 = Utf8               (Ljava/lang/CharSequence;II)I\n-   #85 = Utf8               tryToParseEightDigits\n-   #86 = Utf8               (Ljava/lang/CharSequence;I)I\n-   #87 = Utf8               first\n-   #88 = Utf8               second\n+    #1 = Methodref          #2.#3         // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser.\"<init>\":()V\n+    #2 = Class              #4            // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = InterfaceMethodref #8.#9         // java/lang/CharSequence.charAt:(I)C\n+    #8 = Class              #10           // java/lang/CharSequence\n+    #9 = NameAndType        #11:#12       // charAt:(I)C\n+   #10 = Utf8               java/lang/CharSequence\n+   #11 = Utf8               charAt\n+   #12 = Utf8               (I)C\n+   #13 = Methodref          #14.#15       // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.isDigit:(C)Z\n+   #14 = Class              #16           // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence\n+   #15 = NameAndType        #17:#18       // isDigit:(C)Z\n+   #16 = Utf8               com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence\n+   #17 = Utf8               isDigit\n+   #18 = Utf8               (C)Z\n+   #19 = Long               10l\n+   #21 = Long               48l\n+   #23 = Methodref          #14.#24       // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.tryToParseEightDigits:(Ljava/lang/CharSequence;I)I\n+   #24 = NameAndType        #25:#26       // tryToParseEightDigits:(Ljava/lang/CharSequence;I)I\n+   #25 = Utf8               tryToParseEightDigits\n+   #26 = Utf8               (Ljava/lang/CharSequence;I)I\n+   #27 = Long               100000000l\n+   #29 = Methodref          #14.#30       // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.skipWhitespace:(Ljava/lang/CharSequence;II)I\n+   #30 = NameAndType        #31:#32       // skipWhitespace:(Ljava/lang/CharSequence;II)I\n+   #31 = Utf8               skipWhitespace\n+   #32 = Utf8               (Ljava/lang/CharSequence;II)I\n+   #33 = Long               -1l\n+   #35 = Long               1000000000000000000l\n+   #37 = Methodref          #38.#39       // java/lang/Long.compareUnsigned:(JJ)I\n+   #38 = Class              #40           // java/lang/Long\n+   #39 = NameAndType        #41:#42       // compareUnsigned:(JJ)I\n+   #40 = Utf8               java/lang/Long\n+   #41 = Utf8               compareUnsigned\n+   #42 = Utf8               (JJ)I\n+   #43 = Methodref          #14.#44       // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.valueOfFloatLiteral:(Ljava/lang/CharSequence;IIZJIZI)J\n+   #44 = NameAndType        #45:#46       // valueOfFloatLiteral:(Ljava/lang/CharSequence;IIZJIZI)J\n+   #45 = Utf8               valueOfFloatLiteral\n+   #46 = Utf8               (Ljava/lang/CharSequence;IIZJIZI)J\n+   #47 = InterfaceMethodref #8.#48        // java/lang/CharSequence.length:()I\n+   #48 = NameAndType        #49:#50       // length:()I\n+   #49 = Utf8               length\n+   #50 = Utf8               ()I\n+   #51 = Methodref          #14.#52       // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.parseNaN:(Ljava/lang/CharSequence;II)J\n+   #52 = NameAndType        #53:#54       // parseNaN:(Ljava/lang/CharSequence;II)J\n+   #53 = Utf8               parseNaN\n+   #54 = Utf8               (Ljava/lang/CharSequence;II)J\n+   #55 = Methodref          #14.#56       // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.parseInfinity:(Ljava/lang/CharSequence;IIZ)J\n+   #56 = NameAndType        #57:#58       // parseInfinity:(Ljava/lang/CharSequence;IIZ)J\n+   #57 = Utf8               parseInfinity\n+   #58 = Utf8               (Ljava/lang/CharSequence;IIZ)J\n+   #59 = Methodref          #14.#60       // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.parseHexFloatLiteral:(Ljava/lang/CharSequence;IIIZ)J\n+   #60 = NameAndType        #61:#62       // parseHexFloatLiteral:(Ljava/lang/CharSequence;IIIZ)J\n+   #61 = Utf8               parseHexFloatLiteral\n+   #62 = Utf8               (Ljava/lang/CharSequence;IIIZ)J\n+   #63 = Methodref          #14.#64       // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.parseDecFloatLiteral:(Ljava/lang/CharSequence;IIIZZ)J\n+   #64 = NameAndType        #65:#66       // parseDecFloatLiteral:(Ljava/lang/CharSequence;IIIZZ)J\n+   #65 = Utf8               parseDecFloatLiteral\n+   #66 = Utf8               (Ljava/lang/CharSequence;IIIZZ)J\n+   #67 = Fieldref           #2.#68        // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser.CHAR_TO_HEX_MAP:[B\n+   #68 = NameAndType        #69:#70       // CHAR_TO_HEX_MAP:[B\n+   #69 = Utf8               CHAR_TO_HEX_MAP\n+   #70 = Utf8               [B\n+   #71 = Methodref          #72.#73       // java/lang/Math.min:(II)I\n+   #72 = Class              #74           // java/lang/Math\n+   #73 = NameAndType        #75:#76       // min:(II)I\n+   #74 = Utf8               java/lang/Math\n+   #75 = Utf8               min\n+   #76 = Utf8               (II)I\n+   #77 = Methodref          #14.#78       // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.valueOfHexLiteral:(Ljava/lang/CharSequence;IIZJIZI)J\n+   #78 = NameAndType        #79:#46       // valueOfHexLiteral:(Ljava/lang/CharSequence;IIZJIZI)J\n+   #79 = Utf8               valueOfHexLiteral\n+   #80 = Methodref          #14.#81       // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.negativeInfinity:()J\n+   #81 = NameAndType        #82:#83       // negativeInfinity:()J\n+   #82 = Utf8               negativeInfinity\n+   #83 = Utf8               ()J\n+   #84 = Methodref          #14.#85       // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.positiveInfinity:()J\n+   #85 = NameAndType        #86:#83       // positiveInfinity:()J\n+   #86 = Utf8               positiveInfinity\n+   #87 = Methodref          #14.#88       // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.nan:()J\n+   #88 = NameAndType        #89:#83       // nan:()J\n    #89 = Utf8               nan\n-   #90 = Utf8               ()J\n-   #91 = Utf8               negativeInfinity\n-   #92 = Utf8               positiveInfinity\n-   #93 = Utf8               valueOfFloatLiteral\n-   #94 = Utf8               (Ljava/lang/CharSequence;IIZJIZI)J\n-   #95 = Utf8               valueOfHexLiteral\n-   #96 = Utf8               SourceFile\n-   #97 = Utf8               AbstractFloatingPointBitsFromCharSequence.java\n-   #98 = NameAndType        #32:#33       // \"<init>\":()V\n-   #99 = NameAndType        #123:#124     // charAt:(I)C\n-  #100 = NameAndType        #39:#40       // isDigit:(C)Z\n-  #101 = NameAndType        #85:#86       // tryToParseEightDigits:(Ljava/lang/CharSequence;I)I\n-  #102 = Utf8               com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser\n-  #103 = NameAndType        #83:#84       // skipWhitespace:(Ljava/lang/CharSequence;II)I\n-  #104 = Class              #125          // java/lang/Long\n-  #105 = NameAndType        #126:#127     // compareUnsigned:(JJ)I\n-  #106 = NameAndType        #93:#94       // valueOfFloatLiteral:(Ljava/lang/CharSequence;IIZJIZI)J\n-  #107 = NameAndType        #74:#128      // length:()I\n-  #108 = NameAndType        #82:#72       // parseNaN:(Ljava/lang/CharSequence;II)J\n-  #109 = NameAndType        #79:#80       // parseInfinity:(Ljava/lang/CharSequence;IIZ)J\n-  #110 = NameAndType        #75:#76       // parseHexFloatLiteral:(Ljava/lang/CharSequence;IIIZ)J\n-  #111 = NameAndType        #44:#45       // parseDecFloatLiteral:(Ljava/lang/CharSequence;IIIZZ)J\n-  #112 = NameAndType        #129:#130     // CHAR_TO_HEX_MAP:[B\n-  #113 = Class              #131          // java/lang/Math\n-  #114 = NameAndType        #132:#133     // min:(II)I\n-  #115 = NameAndType        #95:#94       // valueOfHexLiteral:(Ljava/lang/CharSequence;IIZJIZI)J\n-  #116 = NameAndType        #91:#90       // negativeInfinity:()J\n-  #117 = NameAndType        #92:#90       // positiveInfinity:()J\n-  #118 = NameAndType        #89:#90       // nan:()J\n-  #119 = Class              #134          // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar\n-  #120 = NameAndType        #135:#127     // tryToParseEightDigitsUtf16:(JJ)I\n-  #121 = Utf8               com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence\n-  #122 = Utf8               java/lang/CharSequence\n-  #123 = Utf8               charAt\n-  #124 = Utf8               (I)C\n-  #125 = Utf8               java/lang/Long\n-  #126 = Utf8               compareUnsigned\n-  #127 = Utf8               (JJ)I\n-  #128 = Utf8               ()I\n-  #129 = Utf8               CHAR_TO_HEX_MAP\n-  #130 = Utf8               [B\n-  #131 = Utf8               java/lang/Math\n-  #132 = Utf8               min\n-  #133 = Utf8               (II)I\n-  #134 = Utf8               com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar\n-  #135 = Utf8               tryToParseEightDigitsUtf16\n+   #90 = Methodref          #91.#92       // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.tryToParseEightDigitsUtf16:(JJ)I\n+   #91 = Class              #93           // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar\n+   #92 = NameAndType        #94:#42       // tryToParseEightDigitsUtf16:(JJ)I\n+   #93 = Utf8               com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar\n+   #94 = Utf8               tryToParseEightDigitsUtf16\n+   #95 = Utf8               Code\n+   #96 = Utf8               LineNumberTable\n+   #97 = Utf8               LocalVariableTable\n+   #98 = Utf8               this\n+   #99 = Utf8               Lcom/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence;\n+  #100 = Utf8               c\n+  #101 = Utf8               C\n+  #102 = Utf8               StackMapTable\n+  #103 = Utf8               eightDigits\n+  #104 = Utf8               I\n+  #105 = Utf8               digitCount\n+  #106 = Utf8               exponent\n+  #107 = Utf8               neg_exp\n+  #108 = Utf8               Z\n+  #109 = Utf8               isSignificandTruncated\n+  #110 = Utf8               exponentOfTruncatedSignificand\n+  #111 = Utf8               str\n+  #112 = Utf8               Ljava/lang/CharSequence;\n+  #113 = Utf8               index\n+  #114 = Utf8               startIndex\n+  #115 = Utf8               endIndex\n+  #116 = Utf8               isNegative\n+  #117 = Utf8               hasLeadingZero\n+  #118 = Utf8               significand\n+  #119 = Utf8               J\n+  #120 = Utf8               significandStartIndex\n+  #121 = Utf8               virtualIndexOfPoint\n+  #122 = Utf8               illegal\n+  #123 = Utf8               ch\n+  #124 = Utf8               significandEndIndex\n+  #125 = Utf8               expNumber\n+  #126 = Utf8               skipCountInTruncatedDigits\n+  #127 = Utf8               parseFloatingPointLiteral\n+  #128 = Utf8               offset\n+  #129 = Utf8               hexValue\n+  #130 = Utf8               hasExponent\n+  #131 = Utf8               negative\n+  #132 = Utf8               first\n+  #133 = Utf8               second\n+  #134 = Utf8               SourceFile\n+  #135 = Utf8               AbstractFloatingPointBitsFromCharSequence.java\n {\n   com.fasterxml.jackson.core.io.doubleparser.AbstractFloatingPointBitsFromCharSequence();\n     descriptor: ()V\n     flags: (0x0000)\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -195,27 +195,27 @@\n         12: iconst_0\n         13: istore        12\n         15: iload_2\n         16: iload         4\n         18: if_icmpge     134\n         21: aload_1\n         22: iload_2\n-        23: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        23: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         28: istore        12\n         30: aload_0\n         31: iload         12\n-        33: invokespecial #3                  // Method isDigit:(C)Z\n+        33: invokespecial #13                 // Method isDigit:(C)Z\n         36: ifeq          58\n-        39: ldc2_w        #4                  // long 10l\n+        39: ldc2_w        #19                 // long 10l\n         42: lload         7\n         44: lmul\n         45: iload         12\n         47: i2l\n         48: ladd\n-        49: ldc2_w        #6                  // long 48l\n+        49: ldc2_w        #21                 // long 48l\n         52: lsub\n         53: lstore        7\n         55: goto          128\n         58: iload         12\n         60: bipush        46\n         62: if_icmpne     134\n         65: iload         11\n@@ -234,20 +234,20 @@\n         88: isub\n         89: if_icmpge     128\n         92: aload_0\n         93: aload_1\n         94: iload_2\n         95: iconst_1\n         96: iadd\n-        97: invokespecial #8                  // Method tryToParseEightDigits:(Ljava/lang/CharSequence;I)I\n+        97: invokespecial #23                 // Method tryToParseEightDigits:(Ljava/lang/CharSequence;I)I\n        100: istore        13\n        102: iload         13\n        104: ifge          110\n        107: goto          128\n-       110: ldc2_w        #9                  // long 100000000l\n+       110: ldc2_w        #27                 // long 100000000l\n        113: lload         7\n        115: lmul\n        116: iload         13\n        118: i2l\n        119: ladd\n        120: lstore        7\n        122: iinc          2, 8\n@@ -289,15 +289,15 @@\n        191: if_icmpne     352\n        194: iinc          2, 1\n        197: iload_2\n        198: iload         4\n        200: if_icmpge     213\n        203: aload_1\n        204: iload_2\n-       205: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+       205: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n        210: goto          214\n        213: iconst_0\n        214: istore        12\n        216: iload         12\n        218: bipush        45\n        220: if_icmpne     227\n        223: iconst_1\n@@ -311,22 +311,22 @@\n        239: if_icmpne     264\n        242: iinc          2, 1\n        245: iload_2\n        246: iload         4\n        248: if_icmpge     261\n        251: aload_1\n        252: iload_2\n-       253: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+       253: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n        258: goto          262\n        261: iconst_0\n        262: istore        12\n        264: iload         11\n        266: aload_0\n        267: iload         12\n-       269: invokespecial #3                  // Method isDigit:(C)Z\n+       269: invokespecial #13                 // Method isDigit:(C)Z\n        272: ifne          279\n        275: iconst_1\n        276: goto          280\n        279: iconst_0\n        280: ior\n        281: istore        11\n        283: iload         16\n@@ -342,21 +342,21 @@\n        302: istore        16\n        304: iinc          2, 1\n        307: iload_2\n        308: iload         4\n        310: if_icmpge     323\n        313: aload_1\n        314: iload_2\n-       315: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+       315: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n        320: goto          324\n        323: iconst_0\n        324: istore        12\n        326: aload_0\n        327: iload         12\n-       329: invokespecial #3                  // Method isDigit:(C)Z\n+       329: invokespecial #13                 // Method isDigit:(C)Z\n        332: ifne          283\n        335: iload         17\n        337: ifeq          345\n        340: iload         16\n        342: ineg\n        343: istore        16\n        345: iload         15\n@@ -379,26 +379,26 @@\n        381: bipush        70\n        383: if_icmpne     389\n        386: iinc          2, 1\n        389: aload_0\n        390: aload_1\n        391: iload_2\n        392: iload         4\n-       394: invokespecial #12                 // Method skipWhitespace:(Ljava/lang/CharSequence;II)I\n+       394: invokespecial #29                 // Method skipWhitespace:(Ljava/lang/CharSequence;II)I\n        397: istore_2\n        398: iload         11\n        400: ifne          419\n        403: iload_2\n        404: iload         4\n        406: if_icmplt     419\n        409: iload         6\n        411: ifne          423\n        414: iload         13\n        416: ifne          423\n-       419: ldc2_w        #13                 // long -1l\n+       419: ldc2_w        #33                 // long -1l\n        422: lreturn\n        423: iconst_0\n        424: istore        18\n        426: iload         13\n        428: bipush        19\n        430: if_icmple     528\n        433: lconst_0\n@@ -406,32 +406,32 @@\n        436: iload         9\n        438: istore_2\n        439: iload_2\n        440: iload         14\n        442: if_icmpge     500\n        445: aload_1\n        446: iload_2\n-       447: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+       447: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n        452: istore        12\n        454: iload         12\n        456: bipush        46\n        458: if_icmpne     467\n        461: iinc          18, 1\n        464: goto          494\n        467: lload         7\n-       469: ldc2_w        #15                 // long 1000000000000000000l\n-       472: invokestatic  #17                 // Method java/lang/Long.compareUnsigned:(JJ)I\n+       469: ldc2_w        #35                 // long 1000000000000000000l\n+       472: invokestatic  #37                 // Method java/lang/Long.compareUnsigned:(JJ)I\n        475: ifge          500\n-       478: ldc2_w        #4                  // long 10l\n+       478: ldc2_w        #19                 // long 10l\n        481: lload         7\n        483: lmul\n        484: iload         12\n        486: i2l\n        487: ladd\n-       488: ldc2_w        #6                  // long 48l\n+       488: ldc2_w        #21                 // long 48l\n        491: lsub\n        492: lstore        7\n        494: iinc          2, 1\n        497: goto          439\n        500: iload_2\n        501: iload         14\n        503: if_icmpge     510\n@@ -457,15 +457,15 @@\n        536: iload_3\n        537: iload         4\n        539: iload         5\n        541: lload         7\n        543: iload         15\n        545: iload         17\n        547: iload         19\n-       549: invokevirtual #18                 // Method valueOfFloatLiteral:(Ljava/lang/CharSequence;IIZJIZI)J\n+       549: invokevirtual #43                 // Method valueOfFloatLiteral:(Ljava/lang/CharSequence;IIZJIZI)J\n        552: lreturn\n       LineNumberTable:\n         line 56: 0\n         line 57: 3\n         line 58: 6\n         line 59: 9\n         line 60: 12\n@@ -635,32 +635,32 @@\n          1: iload_3\n          2: iadd\n          3: istore        4\n          5: iload_2\n          6: iflt          20\n          9: iload         4\n         11: aload_1\n-        12: invokeinterface #19,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n+        12: invokeinterface #47,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n         17: if_icmple     24\n-        20: ldc2_w        #13                 // long -1l\n+        20: ldc2_w        #33                 // long -1l\n         23: lreturn\n         24: aload_0\n         25: aload_1\n         26: iload_2\n         27: iload         4\n-        29: invokespecial #12                 // Method skipWhitespace:(Ljava/lang/CharSequence;II)I\n+        29: invokespecial #29                 // Method skipWhitespace:(Ljava/lang/CharSequence;II)I\n         32: istore        5\n         34: iload         5\n         36: iload         4\n         38: if_icmpne     45\n-        41: ldc2_w        #13                 // long -1l\n+        41: ldc2_w        #33                 // long -1l\n         44: lreturn\n         45: aload_1\n         46: iload         5\n-        48: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        48: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         53: istore        6\n         55: iload         6\n         57: bipush        45\n         59: if_icmpne     66\n         62: iconst_1\n         63: goto          67\n         66: iconst_0\n@@ -672,40 +672,40 @@\n         78: if_icmpne     114\n         81: iinc          5, 1\n         84: iload         5\n         86: iload         4\n         88: if_icmpge     102\n         91: aload_1\n         92: iload         5\n-        94: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        94: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         99: goto          103\n        102: iconst_0\n        103: istore        6\n        105: iload         6\n        107: ifne          114\n-       110: ldc2_w        #13                 // long -1l\n+       110: ldc2_w        #33                 // long -1l\n        113: lreturn\n        114: iload         6\n        116: bipush        73\n        118: if_icmplt     152\n        121: iload         6\n        123: bipush        78\n        125: if_icmpne     140\n        128: aload_0\n        129: aload_1\n        130: iload         5\n        132: iload         4\n-       134: invokespecial #20                 // Method parseNaN:(Ljava/lang/CharSequence;II)J\n+       134: invokespecial #51                 // Method parseNaN:(Ljava/lang/CharSequence;II)J\n        137: goto          151\n        140: aload_0\n        141: aload_1\n        142: iload         5\n        144: iload         4\n        146: iload         7\n-       148: invokespecial #21                 // Method parseInfinity:(Ljava/lang/CharSequence;IIZ)J\n+       148: invokespecial #55                 // Method parseInfinity:(Ljava/lang/CharSequence;IIZ)J\n        151: lreturn\n        152: iload         6\n        154: bipush        48\n        156: if_icmpne     163\n        159: iconst_1\n        160: goto          164\n        163: iconst_0\n@@ -714,15 +714,15 @@\n        168: ifeq          224\n        171: iinc          5, 1\n        174: iload         5\n        176: iload         4\n        178: if_icmpge     192\n        181: aload_1\n        182: iload         5\n-       184: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+       184: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n        189: goto          193\n        192: iconst_0\n        193: istore        6\n        195: iload         6\n        197: bipush        120\n        199: if_icmpeq     209\n        202: iload         6\n@@ -732,24 +732,24 @@\n        210: aload_1\n        211: iload         5\n        213: iconst_1\n        214: iadd\n        215: iload_2\n        216: iload         4\n        218: iload         7\n-       220: invokespecial #22                 // Method parseHexFloatLiteral:(Ljava/lang/CharSequence;IIIZ)J\n+       220: invokespecial #59                 // Method parseHexFloatLiteral:(Ljava/lang/CharSequence;IIIZ)J\n        223: lreturn\n        224: aload_0\n        225: aload_1\n        226: iload         5\n        228: iload_2\n        229: iload         4\n        231: iload         7\n        233: iload         8\n-       235: invokespecial #23                 // Method parseDecFloatLiteral:(Ljava/lang/CharSequence;IIIZZ)J\n+       235: invokespecial #63                 // Method parseDecFloatLiteral:(Ljava/lang/CharSequence;IIIZZ)J\n        238: lreturn\n       LineNumberTable:\n         line 178: 0\n         line 179: 5\n         line 180: 20\n         line 185: 24\n         line 186: 34\n@@ -835,22 +835,22 @@\n         15: iconst_0\n         16: istore        13\n         18: iload_2\n         19: iload         4\n         21: if_icmpge     101\n         24: aload_1\n         25: iload_2\n-        26: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        26: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         31: istore        13\n         33: iload         13\n         35: bipush        127\n         37: if_icmple     44\n         40: iconst_m1\n         41: goto          50\n-        44: getstatic     #24                 // Field com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser.CHAR_TO_HEX_MAP:[B\n+        44: getstatic     #67                 // Field com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser.CHAR_TO_HEX_MAP:[B\n         47: iload         13\n         49: baload\n         50: istore        14\n         52: iload         14\n         54: iflt          70\n         57: lload         6\n         59: iconst_4\n@@ -894,15 +894,15 @@\n        130: istore        11\n        132: iload         10\n        134: iload_2\n        135: isub\n        136: iconst_1\n        137: iadd\n        138: sipush        1024\n-       141: invokestatic  #25                 // Method java/lang/Math.min:(II)I\n+       141: invokestatic  #71                 // Method java/lang/Math.min:(II)I\n        144: iconst_4\n        145: imul\n        146: istore        8\n        148: iconst_0\n        149: istore        15\n        151: iload         13\n        153: bipush        112\n@@ -918,15 +918,15 @@\n        174: ifeq          335\n        177: iinc          2, 1\n        180: iload_2\n        181: iload         4\n        183: if_icmpge     196\n        186: aload_1\n        187: iload_2\n-       188: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+       188: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n        193: goto          197\n        196: iconst_0\n        197: istore        13\n        199: iload         13\n        201: bipush        45\n        203: if_icmpne     210\n        206: iconst_1\n@@ -940,22 +940,22 @@\n        222: if_icmpne     247\n        225: iinc          2, 1\n        228: iload_2\n        229: iload         4\n        231: if_icmpge     244\n        234: aload_1\n        235: iload_2\n-       236: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+       236: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n        241: goto          245\n        244: iconst_0\n        245: istore        13\n        247: iload         12\n        249: aload_0\n        250: iload         13\n-       252: invokespecial #3                  // Method isDigit:(C)Z\n+       252: invokespecial #13                 // Method isDigit:(C)Z\n        255: ifne          262\n        258: iconst_1\n        259: goto          263\n        262: iconst_0\n        263: ior\n        264: istore        12\n        266: iload         15\n@@ -971,21 +971,21 @@\n        285: istore        15\n        287: iinc          2, 1\n        290: iload_2\n        291: iload         4\n        293: if_icmpge     306\n        296: aload_1\n        297: iload_2\n-       298: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+       298: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n        303: goto          307\n        306: iconst_0\n        307: istore        13\n        309: aload_0\n        310: iload         13\n-       312: invokespecial #3                  // Method isDigit:(C)Z\n+       312: invokespecial #13                 // Method isDigit:(C)Z\n        315: ifne          266\n        318: iload         17\n        320: ifeq          328\n        323: iload         15\n        325: ineg\n        326: istore        15\n        328: iload         8\n@@ -1008,26 +1008,26 @@\n        364: bipush        70\n        366: if_icmpne     372\n        369: iinc          2, 1\n        372: aload_0\n        373: aload_1\n        374: iload_2\n        375: iload         4\n-       377: invokespecial #12                 // Method skipWhitespace:(Ljava/lang/CharSequence;II)I\n+       377: invokespecial #29                 // Method skipWhitespace:(Ljava/lang/CharSequence;II)I\n        380: istore_2\n        381: iload         12\n        383: ifne          402\n        386: iload_2\n        387: iload         4\n        389: if_icmplt     402\n        392: iload         11\n        394: ifeq          402\n        397: iload         16\n        399: ifne          406\n-       402: ldc2_w        #13                 // long -1l\n+       402: ldc2_w        #33                 // long -1l\n        405: lreturn\n        406: iconst_0\n        407: istore        18\n        409: iload         11\n        411: bipush        16\n        413: if_icmple     510\n        416: lconst_0\n@@ -1035,30 +1035,30 @@\n        419: iload         9\n        421: istore_2\n        422: iload_2\n        423: iload         14\n        425: if_icmpge     494\n        428: aload_1\n        429: iload_2\n-       430: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+       430: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n        435: istore        13\n        437: iload         13\n        439: bipush        127\n        441: if_icmple     448\n        444: iconst_m1\n        445: goto          454\n-       448: getstatic     #24                 // Field com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser.CHAR_TO_HEX_MAP:[B\n+       448: getstatic     #67                 // Field com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser.CHAR_TO_HEX_MAP:[B\n        451: iload         13\n        453: baload\n        454: istore        19\n        456: iload         19\n        458: iflt          485\n        461: lload         6\n-       463: ldc2_w        #15                 // long 1000000000000000000l\n-       466: invokestatic  #17                 // Method java/lang/Long.compareUnsigned:(JJ)I\n+       463: ldc2_w        #35                 // long 1000000000000000000l\n+       466: invokestatic  #37                 // Method java/lang/Long.compareUnsigned:(JJ)I\n        469: ifge          494\n        472: lload         6\n        474: iconst_4\n        475: lshl\n        476: iload         19\n        478: i2l\n        479: lor\n@@ -1088,15 +1088,15 @@\n        526: iload         10\n        528: iload_2\n        529: isub\n        530: iload         18\n        532: iadd\n        533: iload         15\n        535: iadd\n-       536: invokevirtual #26                 // Method valueOfHexLiteral:(Ljava/lang/CharSequence;IIZJIZI)J\n+       536: invokevirtual #77                 // Method valueOfHexLiteral:(Ljava/lang/CharSequence;IIZJIZI)J\n        539: lreturn\n       LineNumberTable:\n         line 257: 0\n         line 258: 3\n         line 259: 6\n         line 260: 9\n         line 262: 12\n@@ -1270,86 +1270,86 @@\n          0: iload_2\n          1: bipush        7\n          3: iadd\n          4: iload_3\n          5: if_icmpge     153\n          8: aload_1\n          9: iload_2\n-        10: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        10: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         15: bipush        73\n         17: if_icmpne     153\n         20: aload_1\n         21: iload_2\n         22: iconst_1\n         23: iadd\n-        24: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        24: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         29: bipush        110\n         31: if_icmpne     153\n         34: aload_1\n         35: iload_2\n         36: iconst_2\n         37: iadd\n-        38: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        38: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         43: bipush        102\n         45: if_icmpne     153\n         48: aload_1\n         49: iload_2\n         50: iconst_3\n         51: iadd\n-        52: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        52: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         57: bipush        105\n         59: if_icmpne     153\n         62: aload_1\n         63: iload_2\n         64: iconst_4\n         65: iadd\n-        66: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        66: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         71: bipush        110\n         73: if_icmpne     153\n         76: aload_1\n         77: iload_2\n         78: iconst_5\n         79: iadd\n-        80: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        80: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         85: bipush        105\n         87: if_icmpne     153\n         90: aload_1\n         91: iload_2\n         92: bipush        6\n         94: iadd\n-        95: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        95: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n        100: bipush        116\n        102: if_icmpne     153\n        105: aload_1\n        106: iload_2\n        107: bipush        7\n        109: iadd\n-       110: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+       110: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n        115: bipush        121\n        117: if_icmpne     153\n        120: aload_0\n        121: aload_1\n        122: iload_2\n        123: bipush        8\n        125: iadd\n        126: iload_3\n-       127: invokespecial #12                 // Method skipWhitespace:(Ljava/lang/CharSequence;II)I\n+       127: invokespecial #29                 // Method skipWhitespace:(Ljava/lang/CharSequence;II)I\n        130: istore_2\n        131: iload_2\n        132: iload_3\n        133: if_icmpne     153\n        136: iload         4\n        138: ifeq          148\n        141: aload_0\n-       142: invokevirtual #27                 // Method negativeInfinity:()J\n+       142: invokevirtual #80                 // Method negativeInfinity:()J\n        145: goto          152\n        148: aload_0\n-       149: invokevirtual #28                 // Method positiveInfinity:()J\n+       149: invokevirtual #84                 // Method positiveInfinity:()J\n        152: lreturn\n-       153: ldc2_w        #13                 // long -1l\n+       153: ldc2_w        #33                 // long -1l\n        156: lreturn\n       LineNumberTable:\n         line 382: 0\n         line 383: 10\n         line 384: 24\n         line 385: 38\n         line 386: 52\n@@ -1385,39 +1385,39 @@\n          2: iadd\n          3: iload_3\n          4: if_icmpge     55\n          7: aload_1\n          8: iload_2\n          9: iconst_1\n         10: iadd\n-        11: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        11: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         16: bipush        97\n         18: if_icmpne     55\n         21: aload_1\n         22: iload_2\n         23: iconst_2\n         24: iadd\n-        25: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        25: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         30: bipush        78\n         32: if_icmpne     55\n         35: aload_0\n         36: aload_1\n         37: iload_2\n         38: iconst_3\n         39: iadd\n         40: iload_3\n-        41: invokespecial #12                 // Method skipWhitespace:(Ljava/lang/CharSequence;II)I\n+        41: invokespecial #29                 // Method skipWhitespace:(Ljava/lang/CharSequence;II)I\n         44: istore_2\n         45: iload_2\n         46: iload_3\n         47: if_icmpne     55\n         50: aload_0\n-        51: invokevirtual #29                 // Method nan:()J\n+        51: invokevirtual #87                 // Method nan:()J\n         54: lreturn\n-        55: ldc2_w        #13                 // long -1l\n+        55: ldc2_w        #33                 // long -1l\n         58: lreturn\n       LineNumberTable:\n         line 419: 0\n         line 421: 11\n         line 422: 25\n         line 424: 35\n         line 425: 45\n@@ -1438,15 +1438,15 @@\n     Code:\n       stack=2, locals=4, args_size=4\n          0: iload_2\n          1: iload_3\n          2: if_icmpge     26\n          5: aload_1\n          6: iload_2\n-         7: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+         7: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         12: bipush        32\n         14: if_icmple     20\n         17: goto          26\n         20: iinc          2, 1\n         23: goto          0\n         26: iload_2\n         27: ireturn\n@@ -1470,81 +1470,81 @@\n   private int tryToParseEightDigits(java.lang.CharSequence, int);\n     descriptor: (Ljava/lang/CharSequence;I)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=7, args_size=3\n          0: aload_1\n          1: iload_2\n-         2: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+         2: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n          7: i2l\n          8: aload_1\n          9: iload_2\n         10: iconst_1\n         11: iadd\n-        12: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        12: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         17: i2l\n         18: bipush        16\n         20: lshl\n         21: lor\n         22: aload_1\n         23: iload_2\n         24: iconst_2\n         25: iadd\n-        26: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        26: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         31: i2l\n         32: bipush        32\n         34: lshl\n         35: lor\n         36: aload_1\n         37: iload_2\n         38: iconst_3\n         39: iadd\n-        40: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        40: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         45: i2l\n         46: bipush        48\n         48: lshl\n         49: lor\n         50: lstore_3\n         51: aload_1\n         52: iload_2\n         53: iconst_4\n         54: iadd\n-        55: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        55: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         60: i2l\n         61: aload_1\n         62: iload_2\n         63: iconst_5\n         64: iadd\n-        65: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        65: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         70: i2l\n         71: bipush        16\n         73: lshl\n         74: lor\n         75: aload_1\n         76: iload_2\n         77: bipush        6\n         79: iadd\n-        80: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        80: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         85: i2l\n         86: bipush        32\n         88: lshl\n         89: lor\n         90: aload_1\n         91: iload_2\n         92: bipush        7\n         94: iadd\n-        95: invokeinterface #2,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        95: invokeinterface #7,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n        100: i2l\n        101: bipush        48\n        103: lshl\n        104: lor\n        105: lstore        5\n        107: lload_3\n        108: lload         5\n-       110: invokestatic  #30                 // Method com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.tryToParseEightDigitsUtf16:(JJ)I\n+       110: invokestatic  #90                 // Method com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.tryToParseEightDigitsUtf16:(JJ)I\n        113: ireturn\n       LineNumberTable:\n         line 452: 0\n         line 453: 12\n         line 454: 26\n         line 455: 40\n         line 457: 51\n"}]}
