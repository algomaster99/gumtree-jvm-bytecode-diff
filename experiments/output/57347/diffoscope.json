{"diffoscope-json-version": 1, "source1": "first/RegexpClassNameMatcher.class", "source2": "second/RegexpClassNameMatcher.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,85 +1,83 @@\n-  SHA-256 checksum 8f6ad27c8c0ab2e21279df1ac0ee1fb34a1dbe25f01640c1f6bfa22f93604878\n+  SHA-256 checksum 0a9f29f33dd55d4590a336eb2cd47c6f4610daa2eab3537d7a9969468c523acc\n   Compiled from \"RegexpClassNameMatcher.java\"\n final class org.apache.commons.io.serialization.RegexpClassNameMatcher implements org.apache.commons.io.serialization.ClassNameMatcher\n   minor version: 0\n   major version: 52\n   flags: (0x0030) ACC_FINAL, ACC_SUPER\n-  this_class: #10                         // org/apache/commons/io/serialization/RegexpClassNameMatcher\n-  super_class: #11                        // java/lang/Object\n+  this_class: #1                          // org/apache/commons/io/serialization/RegexpClassNameMatcher\n+  super_class: #3                         // java/lang/Object\n   interfaces: 1, fields: 1, methods: 3, attributes: 1\n Constant pool:\n-   #1 = Methodref          #33.#34        // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-   #2 = Methodref          #10.#35        // org/apache/commons/io/serialization/RegexpClassNameMatcher.\"<init>\":(Ljava/util/regex/Pattern;)V\n-   #3 = Methodref          #11.#36        // java/lang/Object.\"<init>\":()V\n-   #4 = Class              #37            // java/lang/IllegalArgumentException\n-   #5 = String             #38            // Null pattern\n-   #6 = Methodref          #4.#39         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #7 = Fieldref           #10.#40        // org/apache/commons/io/serialization/RegexpClassNameMatcher.pattern:Ljava/util/regex/Pattern;\n-   #8 = Methodref          #33.#41        // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #9 = Methodref          #42.#43        // java/util/regex/Matcher.matches:()Z\n-  #10 = Class              #44            // org/apache/commons/io/serialization/RegexpClassNameMatcher\n-  #11 = Class              #45            // java/lang/Object\n-  #12 = Class              #46            // org/apache/commons/io/serialization/ClassNameMatcher\n-  #13 = Utf8               pattern\n-  #14 = Utf8               Ljava/util/regex/Pattern;\n-  #15 = Utf8               <init>\n-  #16 = Utf8               (Ljava/lang/String;)V\n-  #17 = Utf8               Code\n-  #18 = Utf8               LineNumberTable\n-  #19 = Utf8               LocalVariableTable\n-  #20 = Utf8               this\n-  #21 = Utf8               Lorg/apache/commons/io/serialization/RegexpClassNameMatcher;\n-  #22 = Utf8               regex\n-  #23 = Utf8               Ljava/lang/String;\n-  #24 = Utf8               (Ljava/util/regex/Pattern;)V\n-  #25 = Utf8               StackMapTable\n-  #26 = Class              #44            // org/apache/commons/io/serialization/RegexpClassNameMatcher\n-  #27 = Class              #47            // java/util/regex/Pattern\n-  #28 = Utf8               matches\n-  #29 = Utf8               (Ljava/lang/String;)Z\n-  #30 = Utf8               className\n-  #31 = Utf8               SourceFile\n-  #32 = Utf8               RegexpClassNameMatcher.java\n-  #33 = Class              #47            // java/util/regex/Pattern\n-  #34 = NameAndType        #48:#49        // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #35 = NameAndType        #15:#24        // \"<init>\":(Ljava/util/regex/Pattern;)V\n-  #36 = NameAndType        #15:#50        // \"<init>\":()V\n-  #37 = Utf8               java/lang/IllegalArgumentException\n-  #38 = Utf8               Null pattern\n-  #39 = NameAndType        #15:#16        // \"<init>\":(Ljava/lang/String;)V\n-  #40 = NameAndType        #13:#14        // pattern:Ljava/util/regex/Pattern;\n-  #41 = NameAndType        #51:#52        // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #42 = Class              #53            // java/util/regex/Matcher\n-  #43 = NameAndType        #28:#54        // matches:()Z\n-  #44 = Utf8               org/apache/commons/io/serialization/RegexpClassNameMatcher\n-  #45 = Utf8               java/lang/Object\n-  #46 = Utf8               org/apache/commons/io/serialization/ClassNameMatcher\n-  #47 = Utf8               java/util/regex/Pattern\n-  #48 = Utf8               compile\n-  #49 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #50 = Utf8               ()V\n-  #51 = Utf8               matcher\n-  #52 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #53 = Utf8               java/util/regex/Matcher\n-  #54 = Utf8               ()Z\n+   #1 = Class              #2             // org/apache/commons/io/serialization/RegexpClassNameMatcher\n+   #2 = Utf8               org/apache/commons/io/serialization/RegexpClassNameMatcher\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n+   #5 = Class              #6             // org/apache/commons/io/serialization/ClassNameMatcher\n+   #6 = Utf8               org/apache/commons/io/serialization/ClassNameMatcher\n+   #7 = Utf8               pattern\n+   #8 = Utf8               Ljava/util/regex/Pattern;\n+   #9 = Utf8               <init>\n+  #10 = Utf8               (Ljava/lang/String;)V\n+  #11 = Utf8               Code\n+  #12 = Methodref          #13.#15        // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #13 = Class              #14            // java/util/regex/Pattern\n+  #14 = Utf8               java/util/regex/Pattern\n+  #15 = NameAndType        #16:#17        // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #16 = Utf8               compile\n+  #17 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #18 = Methodref          #1.#19         // org/apache/commons/io/serialization/RegexpClassNameMatcher.\"<init>\":(Ljava/util/regex/Pattern;)V\n+  #19 = NameAndType        #9:#20         // \"<init>\":(Ljava/util/regex/Pattern;)V\n+  #20 = Utf8               (Ljava/util/regex/Pattern;)V\n+  #21 = Utf8               LineNumberTable\n+  #22 = Utf8               LocalVariableTable\n+  #23 = Utf8               this\n+  #24 = Utf8               Lorg/apache/commons/io/serialization/RegexpClassNameMatcher;\n+  #25 = Utf8               regex\n+  #26 = Utf8               Ljava/lang/String;\n+  #27 = Methodref          #3.#28         // java/lang/Object.\"<init>\":()V\n+  #28 = NameAndType        #9:#29         // \"<init>\":()V\n+  #29 = Utf8               ()V\n+  #30 = Class              #31            // java/lang/IllegalArgumentException\n+  #31 = Utf8               java/lang/IllegalArgumentException\n+  #32 = String             #33            // Null pattern\n+  #33 = Utf8               Null pattern\n+  #34 = Methodref          #30.#35        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #35 = NameAndType        #9:#10         // \"<init>\":(Ljava/lang/String;)V\n+  #36 = Fieldref           #1.#37         // org/apache/commons/io/serialization/RegexpClassNameMatcher.pattern:Ljava/util/regex/Pattern;\n+  #37 = NameAndType        #7:#8          // pattern:Ljava/util/regex/Pattern;\n+  #38 = Utf8               StackMapTable\n+  #39 = Utf8               matches\n+  #40 = Utf8               (Ljava/lang/String;)Z\n+  #41 = Methodref          #13.#42        // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #42 = NameAndType        #43:#44        // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #43 = Utf8               matcher\n+  #44 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #45 = Methodref          #46.#48        // java/util/regex/Matcher.matches:()Z\n+  #46 = Class              #47            // java/util/regex/Matcher\n+  #47 = Utf8               java/util/regex/Matcher\n+  #48 = NameAndType        #39:#49        // matches:()Z\n+  #49 = Utf8               ()Z\n+  #50 = Utf8               className\n+  #51 = Utf8               SourceFile\n+  #52 = Utf8               RegexpClassNameMatcher.java\n {\n   private final java.util.regex.Pattern pattern;\n     descriptor: Ljava/util/regex/Pattern;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.io.serialization.RegexpClassNameMatcher(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #1                  // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-         5: invokespecial #2                  // Method \"<init>\":(Ljava/util/regex/Pattern;)V\n+         2: invokestatic  #12                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+         5: invokespecial #18                 // Method \"<init>\":(Ljava/util/regex/Pattern;)V\n          8: return\n       LineNumberTable:\n         line 39: 0\n         line 40: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/serialization/RegexpClassNameMatcher;\n@@ -87,25 +85,25 @@\n \n   public org.apache.commons.io.serialization.RegexpClassNameMatcher(java.util.regex.Pattern);\n     descriptor: (Ljava/util/regex/Pattern;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #3                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #27                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_1\n          5: ifnonnull     18\n-         8: new           #4                  // class java/lang/IllegalArgumentException\n+         8: new           #30                 // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #5                  // String Null pattern\n-        14: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #32                 // String Null pattern\n+        14: invokespecial #34                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: aload_0\n         19: aload_1\n-        20: putfield      #7                  // Field pattern:Ljava/util/regex/Pattern;\n+        20: putfield      #36                 // Field pattern:Ljava/util/regex/Pattern;\n         23: return\n       LineNumberTable:\n         line 48: 0\n         line 49: 4\n         line 50: 8\n         line 52: 18\n         line 53: 23\n@@ -121,18 +119,18 @@\n \n   public boolean matches(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #7                  // Field pattern:Ljava/util/regex/Pattern;\n+         1: getfield      #36                 // Field pattern:Ljava/util/regex/Pattern;\n          4: aload_1\n-         5: invokevirtual #8                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-         8: invokevirtual #9                  // Method java/util/regex/Matcher.matches:()Z\n+         5: invokevirtual #41                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+         8: invokevirtual #45                 // Method java/util/regex/Matcher.matches:()Z\n         11: ireturn\n       LineNumberTable:\n         line 57: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/io/serialization/RegexpClassNameMatcher;\n             0      12     1 className   Ljava/lang/String;\n"}]}
