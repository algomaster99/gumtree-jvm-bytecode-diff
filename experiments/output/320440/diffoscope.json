{"diffoscope-json-version": 1, "source1": "first/IllegalTypeCheck.class", "source2": "second/IllegalTypeCheck.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -263,25 +263,25 @@\n                 }\n                 sb.append(nextSubTreeNode.getText());\n             }\n         }\n         return sb.toString();\n     }\n     \n-    private static DetailAST getNextSubTreeNode(final DetailAST detailAST, final DetailAST obj) {\n+    private static DetailAST getNextSubTreeNode(final DetailAST detailAST, final DetailAST detailAST2) {\n         DetailAST parent = detailAST;\n-        DetailAST detailAST2 = parent.getFirstChild();\n-        while (detailAST2 == null) {\n-            detailAST2 = parent.getNextSibling();\n-            if (parent.getParent().equals(obj)) {\n+        DetailAST detailAST3 = parent.getFirstChild();\n+        while (detailAST3 == null) {\n+            detailAST3 = parent.getNextSibling();\n+            if (parent.getParent().equals((Object)detailAST2)) {\n                 break;\n             }\n             parent = parent.getParent();\n         }\n-        return detailAST2;\n+        return detailAST3;\n     }\n     \n     private boolean isCheckedMethod(final DetailAST detailAST) {\n         final String text = detailAST.findFirstToken(58).getText();\n         return this.isVerifiable(detailAST) && !this.ignoredMethodNames.contains(text) && !AnnotationUtil.hasOverrideAnnotation(detailAST);\n     }\n     \n"}]}
