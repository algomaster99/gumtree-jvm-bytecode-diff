{"diffoscope-json-version": 1, "source1": "first/TokenMgrError.class", "source2": "second/TokenMgrError.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,169 +1,166 @@\n-  SHA-256 checksum 4e9354109a485ed5406076adfcd069eaf4276a24ca264f87273f3040bbc0550f\n+  SHA-256 checksum e620568c78301c01e9c01d6b3b0ae021977f39e52ade6bba3cd4b478ff87127c\n   Compiled from \"TokenMgrError.java\"\n public class org.apache.commons.configuration2.plist.TokenMgrError extends java.lang.Error\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #41                         // org/apache/commons/configuration2/plist/TokenMgrError\n-  super_class: #42                        // java/lang/Error\n+  this_class: #1                          // org/apache/commons/configuration2/plist/TokenMgrError\n+  super_class: #3                         // java/lang/Error\n   interfaces: 0, fields: 6, methods: 6, attributes: 1\n Constant pool:\n-    #1 = Class              #96           // java/lang/StringBuffer\n-    #2 = Methodref          #1.#97        // java/lang/StringBuffer.\"<init>\":()V\n-    #3 = Methodref          #98.#99       // java/lang/String.length:()I\n-    #4 = Methodref          #98.#100      // java/lang/String.charAt:(I)C\n-    #5 = String             #101          // \\\\b\n-    #6 = Methodref          #1.#102       // java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n-    #7 = String             #103          // \\\\t\n-    #8 = String             #104          // \\\\n\n-    #9 = String             #105          // \\\\f\n-   #10 = String             #106          // \\\\r\n-   #11 = String             #107          // \\\\\\\"\n-   #12 = String             #108          // \\\\\\'\n-   #13 = String             #109          // \\\\\\\\\n-   #14 = Class              #110          // java/lang/StringBuilder\n-   #15 = Methodref          #14.#97       // java/lang/StringBuilder.\"<init>\":()V\n-   #16 = String             #111          // 0000\n-   #17 = Methodref          #14.#112      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #18 = Methodref          #113.#114     // java/lang/Integer.toString:(II)Ljava/lang/String;\n-   #19 = Methodref          #14.#115      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #20 = String             #116          // \\\\u\n-   #21 = Methodref          #98.#117      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #22 = Methodref          #1.#118       // java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;\n-   #23 = Methodref          #1.#115       // java/lang/StringBuffer.toString:()Ljava/lang/String;\n-   #24 = String             #119          // Lexical error at line\n-   #25 = Methodref          #14.#120      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #26 = String             #121          // , column\n-   #27 = String             #122          // .  Encountered:\n-   #28 = String             #123          // <EOF>\n-   #29 = String             #124          // \\\"\n-   #30 = Methodref          #98.#125      // java/lang/String.valueOf:(C)Ljava/lang/String;\n-   #31 = Methodref          #41.#126      // org/apache/commons/configuration2/plist/TokenMgrError.addEscapes:(Ljava/lang/String;)Ljava/lang/String;\n-   #32 = String             #127          //  (\n-   #33 = String             #128          // ),\n-   #34 = String             #129          // after : \\\"\n-   #35 = Methodref          #42.#130      // java/lang/Error.getMessage:()Ljava/lang/String;\n-   #36 = Methodref          #42.#97       // java/lang/Error.\"<init>\":()V\n-   #37 = Methodref          #42.#131      // java/lang/Error.\"<init>\":(Ljava/lang/String;)V\n-   #38 = Fieldref           #41.#132      // org/apache/commons/configuration2/plist/TokenMgrError.errorCode:I\n-   #39 = Methodref          #41.#133      // org/apache/commons/configuration2/plist/TokenMgrError.LexicalError:(ZIIILjava/lang/String;C)Ljava/lang/String;\n-   #40 = Methodref          #41.#134      // org/apache/commons/configuration2/plist/TokenMgrError.\"<init>\":(Ljava/lang/String;I)V\n-   #41 = Class              #135          // org/apache/commons/configuration2/plist/TokenMgrError\n-   #42 = Class              #136          // java/lang/Error\n-   #43 = Utf8               serialVersionUID\n-   #44 = Utf8               J\n-   #45 = Utf8               ConstantValue\n-   #46 = Long               1l\n-   #48 = Utf8               LEXICAL_ERROR\n-   #49 = Utf8               I\n-   #50 = Integer            0\n-   #51 = Utf8               STATIC_LEXER_ERROR\n-   #52 = Integer            1\n-   #53 = Utf8               INVALID_LEXICAL_STATE\n-   #54 = Integer            2\n-   #55 = Utf8               LOOP_DETECTED\n-   #56 = Integer            3\n-   #57 = Utf8               errorCode\n-   #58 = Utf8               addEscapes\n-   #59 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-   #60 = Utf8               Code\n-   #61 = Utf8               LineNumberTable\n-   #62 = Utf8               LocalVariableTable\n-   #63 = Utf8               s\n-   #64 = Utf8               Ljava/lang/String;\n-   #65 = Utf8               ch\n-   #66 = Utf8               C\n-   #67 = Utf8               i\n-   #68 = Utf8               str\n-   #69 = Utf8               retval\n-   #70 = Utf8               Ljava/lang/StringBuffer;\n-   #71 = Utf8               StackMapTable\n-   #72 = Class              #96           // java/lang/StringBuffer\n-   #73 = Class              #137          // java/lang/String\n-   #74 = Utf8               LexicalError\n-   #75 = Utf8               (ZIIILjava/lang/String;C)Ljava/lang/String;\n-   #76 = Utf8               EOFSeen\n-   #77 = Utf8               Z\n-   #78 = Utf8               lexState\n-   #79 = Utf8               errorLine\n-   #80 = Utf8               errorColumn\n-   #81 = Utf8               errorAfter\n-   #82 = Utf8               curChar\n-   #83 = Class              #110          // java/lang/StringBuilder\n-   #84 = Utf8               getMessage\n-   #85 = Utf8               ()Ljava/lang/String;\n-   #86 = Utf8               this\n-   #87 = Utf8               Lorg/apache/commons/configuration2/plist/TokenMgrError;\n-   #88 = Utf8               <init>\n-   #89 = Utf8               ()V\n-   #90 = Utf8               (Ljava/lang/String;I)V\n-   #91 = Utf8               message\n-   #92 = Utf8               reason\n-   #93 = Utf8               (ZIIILjava/lang/String;CI)V\n-   #94 = Utf8               SourceFile\n-   #95 = Utf8               TokenMgrError.java\n-   #96 = Utf8               java/lang/StringBuffer\n-   #97 = NameAndType        #88:#89       // \"<init>\":()V\n-   #98 = Class              #137          // java/lang/String\n-   #99 = NameAndType        #138:#139     // length:()I\n-  #100 = NameAndType        #140:#141     // charAt:(I)C\n-  #101 = Utf8               \\\\b\n-  #102 = NameAndType        #142:#143     // append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n-  #103 = Utf8               \\\\t\n-  #104 = Utf8               \\\\n\n-  #105 = Utf8               \\\\f\n-  #106 = Utf8               \\\\r\n-  #107 = Utf8               \\\\\\\"\n-  #108 = Utf8               \\\\\\'\n-  #109 = Utf8               \\\\\\\\\n-  #110 = Utf8               java/lang/StringBuilder\n-  #111 = Utf8               0000\n-  #112 = NameAndType        #142:#144     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #113 = Class              #145          // java/lang/Integer\n-  #114 = NameAndType        #146:#147     // toString:(II)Ljava/lang/String;\n-  #115 = NameAndType        #146:#85      // toString:()Ljava/lang/String;\n-  #116 = Utf8               \\\\u\n-  #117 = NameAndType        #148:#147     // substring:(II)Ljava/lang/String;\n-  #118 = NameAndType        #142:#149     // append:(C)Ljava/lang/StringBuffer;\n-  #119 = Utf8               Lexical error at line\n-  #120 = NameAndType        #142:#150     // append:(I)Ljava/lang/StringBuilder;\n-  #121 = Utf8               , column\n-  #122 = Utf8               .  Encountered:\n-  #123 = Utf8               <EOF>\n-  #124 = Utf8               \\\"\n-  #125 = NameAndType        #151:#152     // valueOf:(C)Ljava/lang/String;\n-  #126 = NameAndType        #58:#59       // addEscapes:(Ljava/lang/String;)Ljava/lang/String;\n-  #127 = Utf8                (\n-  #128 = Utf8               ),\n-  #129 = Utf8               after : \\\"\n-  #130 = NameAndType        #84:#85       // getMessage:()Ljava/lang/String;\n-  #131 = NameAndType        #88:#153      // \"<init>\":(Ljava/lang/String;)V\n-  #132 = NameAndType        #57:#49       // errorCode:I\n-  #133 = NameAndType        #74:#75       // LexicalError:(ZIIILjava/lang/String;C)Ljava/lang/String;\n-  #134 = NameAndType        #88:#90       // \"<init>\":(Ljava/lang/String;I)V\n-  #135 = Utf8               org/apache/commons/configuration2/plist/TokenMgrError\n-  #136 = Utf8               java/lang/Error\n-  #137 = Utf8               java/lang/String\n-  #138 = Utf8               length\n-  #139 = Utf8               ()I\n-  #140 = Utf8               charAt\n-  #141 = Utf8               (I)C\n-  #142 = Utf8               append\n-  #143 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuffer;\n-  #144 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #145 = Utf8               java/lang/Integer\n-  #146 = Utf8               toString\n-  #147 = Utf8               (II)Ljava/lang/String;\n-  #148 = Utf8               substring\n-  #149 = Utf8               (C)Ljava/lang/StringBuffer;\n-  #150 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #151 = Utf8               valueOf\n-  #152 = Utf8               (C)Ljava/lang/String;\n-  #153 = Utf8               (Ljava/lang/String;)V\n+    #1 = Class              #2            // org/apache/commons/configuration2/plist/TokenMgrError\n+    #2 = Utf8               org/apache/commons/configuration2/plist/TokenMgrError\n+    #3 = Class              #4            // java/lang/Error\n+    #4 = Utf8               java/lang/Error\n+    #5 = Utf8               serialVersionUID\n+    #6 = Utf8               J\n+    #7 = Utf8               ConstantValue\n+    #8 = Long               1l\n+   #10 = Utf8               LEXICAL_ERROR\n+   #11 = Utf8               I\n+   #12 = Integer            0\n+   #13 = Utf8               STATIC_LEXER_ERROR\n+   #14 = Integer            1\n+   #15 = Utf8               INVALID_LEXICAL_STATE\n+   #16 = Integer            2\n+   #17 = Utf8               LOOP_DETECTED\n+   #18 = Integer            3\n+   #19 = Utf8               errorCode\n+   #20 = Utf8               addEscapes\n+   #21 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+   #22 = Utf8               Code\n+   #23 = Class              #24           // java/lang/StringBuffer\n+   #24 = Utf8               java/lang/StringBuffer\n+   #25 = Methodref          #23.#26       // java/lang/StringBuffer.\"<init>\":()V\n+   #26 = NameAndType        #27:#28       // \"<init>\":()V\n+   #27 = Utf8               <init>\n+   #28 = Utf8               ()V\n+   #29 = Methodref          #30.#32       // java/lang/String.charAt:(I)C\n+   #30 = Class              #31           // java/lang/String\n+   #31 = Utf8               java/lang/String\n+   #32 = NameAndType        #33:#34       // charAt:(I)C\n+   #33 = Utf8               charAt\n+   #34 = Utf8               (I)C\n+   #35 = String             #36           // \\\\b\n+   #36 = Utf8               \\\\b\n+   #37 = Methodref          #23.#38       // java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+   #38 = NameAndType        #39:#40       // append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+   #39 = Utf8               append\n+   #40 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuffer;\n+   #41 = String             #42           // \\\\t\n+   #42 = Utf8               \\\\t\n+   #43 = String             #44           // \\\\n\n+   #44 = Utf8               \\\\n\n+   #45 = String             #46           // \\\\f\n+   #46 = Utf8               \\\\f\n+   #47 = String             #48           // \\\\r\n+   #48 = Utf8               \\\\r\n+   #49 = String             #50           // \\\\\\\"\n+   #50 = Utf8               \\\\\\\"\n+   #51 = String             #52           // \\\\\\'\n+   #52 = Utf8               \\\\\\'\n+   #53 = String             #54           // \\\\\\\\\n+   #54 = Utf8               \\\\\\\\\n+   #55 = Class              #56           // java/lang/StringBuilder\n+   #56 = Utf8               java/lang/StringBuilder\n+   #57 = String             #58           // 0000\n+   #58 = Utf8               0000\n+   #59 = Methodref          #55.#60       // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+   #60 = NameAndType        #27:#61       // \"<init>\":(Ljava/lang/String;)V\n+   #61 = Utf8               (Ljava/lang/String;)V\n+   #62 = Methodref          #63.#65       // java/lang/Integer.toString:(II)Ljava/lang/String;\n+   #63 = Class              #64           // java/lang/Integer\n+   #64 = Utf8               java/lang/Integer\n+   #65 = NameAndType        #66:#67       // toString:(II)Ljava/lang/String;\n+   #66 = Utf8               toString\n+   #67 = Utf8               (II)Ljava/lang/String;\n+   #68 = Methodref          #55.#69       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #69 = NameAndType        #39:#70       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #70 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #71 = Methodref          #55.#72       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #72 = NameAndType        #66:#73       // toString:()Ljava/lang/String;\n+   #73 = Utf8               ()Ljava/lang/String;\n+   #74 = String             #75           // \\\\u\n+   #75 = Utf8               \\\\u\n+   #76 = Methodref          #30.#77       // java/lang/String.length:()I\n+   #77 = NameAndType        #78:#79       // length:()I\n+   #78 = Utf8               length\n+   #79 = Utf8               ()I\n+   #80 = Methodref          #30.#81       // java/lang/String.substring:(II)Ljava/lang/String;\n+   #81 = NameAndType        #82:#67       // substring:(II)Ljava/lang/String;\n+   #82 = Utf8               substring\n+   #83 = Methodref          #23.#84       // java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;\n+   #84 = NameAndType        #39:#85       // append:(C)Ljava/lang/StringBuffer;\n+   #85 = Utf8               (C)Ljava/lang/StringBuffer;\n+   #86 = Methodref          #23.#72       // java/lang/StringBuffer.toString:()Ljava/lang/String;\n+   #87 = Utf8               LineNumberTable\n+   #88 = Utf8               LocalVariableTable\n+   #89 = Utf8               str\n+   #90 = Utf8               Ljava/lang/String;\n+   #91 = Utf8               retval\n+   #92 = Utf8               Ljava/lang/StringBuffer;\n+   #93 = Utf8               ch\n+   #94 = Utf8               C\n+   #95 = Utf8               i\n+   #96 = Utf8               s\n+   #97 = Utf8               StackMapTable\n+   #98 = Utf8               LexicalError\n+   #99 = Utf8               (ZIIILjava/lang/String;C)Ljava/lang/String;\n+  #100 = String             #101          // Lexical error at line\n+  #101 = Utf8               Lexical error at line\n+  #102 = Methodref          #55.#103      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #103 = NameAndType        #39:#104      // append:(I)Ljava/lang/StringBuilder;\n+  #104 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #105 = String             #106          // , column\n+  #106 = Utf8               , column\n+  #107 = String             #108          // .  Encountered:\n+  #108 = Utf8               .  Encountered:\n+  #109 = String             #110          // <EOF>\n+  #110 = Utf8               <EOF>\n+  #111 = String             #112          // \\\"\n+  #112 = Utf8               \\\"\n+  #113 = Methodref          #30.#114      // java/lang/String.valueOf:(C)Ljava/lang/String;\n+  #114 = NameAndType        #115:#116     // valueOf:(C)Ljava/lang/String;\n+  #115 = Utf8               valueOf\n+  #116 = Utf8               (C)Ljava/lang/String;\n+  #117 = Methodref          #1.#118       // org/apache/commons/configuration2/plist/TokenMgrError.addEscapes:(Ljava/lang/String;)Ljava/lang/String;\n+  #118 = NameAndType        #20:#21       // addEscapes:(Ljava/lang/String;)Ljava/lang/String;\n+  #119 = String             #120          //  (\n+  #120 = Utf8                (\n+  #121 = String             #122          // ),\n+  #122 = Utf8               ),\n+  #123 = String             #124          // after : \\\"\n+  #124 = Utf8               after : \\\"\n+  #125 = Utf8               EOFSeen\n+  #126 = Utf8               Z\n+  #127 = Utf8               lexState\n+  #128 = Utf8               errorLine\n+  #129 = Utf8               errorColumn\n+  #130 = Utf8               errorAfter\n+  #131 = Utf8               curChar\n+  #132 = Utf8               getMessage\n+  #133 = Methodref          #3.#134       // java/lang/Error.getMessage:()Ljava/lang/String;\n+  #134 = NameAndType        #132:#73      // getMessage:()Ljava/lang/String;\n+  #135 = Utf8               this\n+  #136 = Utf8               Lorg/apache/commons/configuration2/plist/TokenMgrError;\n+  #137 = Methodref          #3.#26        // java/lang/Error.\"<init>\":()V\n+  #138 = Utf8               (Ljava/lang/String;I)V\n+  #139 = Methodref          #3.#60        // java/lang/Error.\"<init>\":(Ljava/lang/String;)V\n+  #140 = Fieldref           #1.#141       // org/apache/commons/configuration2/plist/TokenMgrError.errorCode:I\n+  #141 = NameAndType        #19:#11       // errorCode:I\n+  #142 = Utf8               message\n+  #143 = Utf8               reason\n+  #144 = Utf8               (ZIIILjava/lang/String;CI)V\n+  #145 = Methodref          #1.#146       // org/apache/commons/configuration2/plist/TokenMgrError.LexicalError:(ZIIILjava/lang/String;C)Ljava/lang/String;\n+  #146 = NameAndType        #98:#99       // LexicalError:(ZIIILjava/lang/String;C)Ljava/lang/String;\n+  #147 = Methodref          #1.#148       // org/apache/commons/configuration2/plist/TokenMgrError.\"<init>\":(Ljava/lang/String;I)V\n+  #148 = NameAndType        #27:#138      // \"<init>\":(Ljava/lang/String;I)V\n+  #149 = Utf8               SourceFile\n+  #150 = Utf8               TokenMgrError.java\n {\n   private static final long serialVersionUID = 1l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 1l\n \n   static final int LEXICAL_ERROR = 0;\n@@ -191,284 +188,281 @@\n     flags: (0x0000)\n \n   protected static final java.lang.String addEscapes(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x001c) ACC_PROTECTED, ACC_STATIC, ACC_FINAL\n     Code:\n       stack=5, locals=5, args_size=1\n-         0: new           #1                  // class java/lang/StringBuffer\n+         0: new           #23                 // class java/lang/StringBuffer\n          3: dup\n-         4: invokespecial #2                  // Method java/lang/StringBuffer.\"<init>\":()V\n+         4: invokespecial #25                 // Method java/lang/StringBuffer.\"<init>\":()V\n          7: astore_1\n          8: iconst_0\n          9: istore_3\n-        10: iload_3\n-        11: aload_0\n-        12: invokevirtual #3                  // Method java/lang/String.length:()I\n-        15: if_icmpge     286\n-        18: aload_0\n-        19: iload_3\n-        20: invokevirtual #4                  // Method java/lang/String.charAt:(I)C\n-        23: lookupswitch  { // 9\n-                       0: 104\n-                       8: 107\n-                       9: 117\n-                      10: 127\n-                      12: 137\n-                      13: 147\n-                      34: 157\n-                      39: 167\n-                      92: 177\n-                 default: 187\n+        10: goto          273\n+        13: aload_0\n+        14: iload_3\n+        15: invokevirtual #29                 // Method java/lang/String.charAt:(I)C\n+        18: lookupswitch  { // 9\n+                       0: 100\n+                       8: 103\n+                       9: 113\n+                      10: 123\n+                      12: 133\n+                      13: 143\n+                      34: 153\n+                      39: 163\n+                      92: 173\n+                 default: 183\n             }\n-       104: goto          280\n-       107: aload_1\n-       108: ldc           #5                  // String \\\\b\n-       110: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n-       113: pop\n-       114: goto          280\n-       117: aload_1\n-       118: ldc           #7                  // String \\\\t\n-       120: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n-       123: pop\n-       124: goto          280\n-       127: aload_1\n-       128: ldc           #8                  // String \\\\n\n-       130: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n-       133: pop\n-       134: goto          280\n-       137: aload_1\n-       138: ldc           #9                  // String \\\\f\n-       140: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n-       143: pop\n-       144: goto          280\n-       147: aload_1\n-       148: ldc           #10                 // String \\\\r\n-       150: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n-       153: pop\n-       154: goto          280\n-       157: aload_1\n-       158: ldc           #11                 // String \\\\\\\"\n-       160: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n-       163: pop\n-       164: goto          280\n-       167: aload_1\n-       168: ldc           #12                 // String \\\\\\'\n-       170: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n-       173: pop\n-       174: goto          280\n-       177: aload_1\n-       178: ldc           #13                 // String \\\\\\\\\n-       180: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n-       183: pop\n-       184: goto          280\n-       187: aload_0\n-       188: iload_3\n-       189: invokevirtual #4                  // Method java/lang/String.charAt:(I)C\n-       192: dup\n-       193: istore_2\n-       194: bipush        32\n-       196: if_icmplt     205\n-       199: iload_2\n-       200: bipush        126\n-       202: if_icmple     274\n-       205: new           #14                 // class java/lang/StringBuilder\n-       208: dup\n-       209: invokespecial #15                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       212: ldc           #16                 // String 0000\n-       214: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       217: iload_2\n-       218: bipush        16\n-       220: invokestatic  #18                 // Method java/lang/Integer.toString:(II)Ljava/lang/String;\n-       223: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       226: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       229: astore        4\n-       231: aload_1\n-       232: new           #14                 // class java/lang/StringBuilder\n-       235: dup\n-       236: invokespecial #15                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       239: ldc           #20                 // String \\\\u\n-       241: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       244: aload         4\n-       246: aload         4\n-       248: invokevirtual #3                  // Method java/lang/String.length:()I\n-       251: iconst_4\n-       252: isub\n-       253: aload         4\n-       255: invokevirtual #3                  // Method java/lang/String.length:()I\n-       258: invokevirtual #21                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n-       261: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       264: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       267: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n-       270: pop\n-       271: goto          280\n-       274: aload_1\n-       275: iload_2\n-       276: invokevirtual #22                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;\n-       279: pop\n-       280: iinc          3, 1\n-       283: goto          10\n-       286: aload_1\n-       287: invokevirtual #23                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;\n-       290: areturn\n+       100: goto          270\n+       103: aload_1\n+       104: ldc           #35                 // String \\\\b\n+       106: invokevirtual #37                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+       109: pop\n+       110: goto          270\n+       113: aload_1\n+       114: ldc           #41                 // String \\\\t\n+       116: invokevirtual #37                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+       119: pop\n+       120: goto          270\n+       123: aload_1\n+       124: ldc           #43                 // String \\\\n\n+       126: invokevirtual #37                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+       129: pop\n+       130: goto          270\n+       133: aload_1\n+       134: ldc           #45                 // String \\\\f\n+       136: invokevirtual #37                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+       139: pop\n+       140: goto          270\n+       143: aload_1\n+       144: ldc           #47                 // String \\\\r\n+       146: invokevirtual #37                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+       149: pop\n+       150: goto          270\n+       153: aload_1\n+       154: ldc           #49                 // String \\\\\\\"\n+       156: invokevirtual #37                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+       159: pop\n+       160: goto          270\n+       163: aload_1\n+       164: ldc           #51                 // String \\\\\\'\n+       166: invokevirtual #37                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+       169: pop\n+       170: goto          270\n+       173: aload_1\n+       174: ldc           #53                 // String \\\\\\\\\n+       176: invokevirtual #37                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+       179: pop\n+       180: goto          270\n+       183: aload_0\n+       184: iload_3\n+       185: invokevirtual #29                 // Method java/lang/String.charAt:(I)C\n+       188: dup\n+       189: istore_2\n+       190: bipush        32\n+       192: if_icmplt     201\n+       195: iload_2\n+       196: bipush        126\n+       198: if_icmple     264\n+       201: new           #55                 // class java/lang/StringBuilder\n+       204: dup\n+       205: ldc           #57                 // String 0000\n+       207: invokespecial #59                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+       210: iload_2\n+       211: bipush        16\n+       213: invokestatic  #62                 // Method java/lang/Integer.toString:(II)Ljava/lang/String;\n+       216: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       219: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       222: astore        4\n+       224: aload_1\n+       225: new           #55                 // class java/lang/StringBuilder\n+       228: dup\n+       229: ldc           #74                 // String \\\\u\n+       231: invokespecial #59                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+       234: aload         4\n+       236: aload         4\n+       238: invokevirtual #76                 // Method java/lang/String.length:()I\n+       241: iconst_4\n+       242: isub\n+       243: aload         4\n+       245: invokevirtual #76                 // Method java/lang/String.length:()I\n+       248: invokevirtual #80                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+       251: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       254: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       257: invokevirtual #37                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+       260: pop\n+       261: goto          270\n+       264: aload_1\n+       265: iload_2\n+       266: invokevirtual #83                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;\n+       269: pop\n+       270: iinc          3, 1\n+       273: iload_3\n+       274: aload_0\n+       275: invokevirtual #76                 // Method java/lang/String.length:()I\n+       278: if_icmplt     13\n+       281: aload_1\n+       282: invokevirtual #86                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;\n+       285: areturn\n       LineNumberTable:\n         line 51: 0\n         line 53: 8\n-        line 54: 18\n-        line 57: 104\n-        line 59: 107\n-        line 60: 114\n-        line 62: 117\n-        line 63: 124\n-        line 65: 127\n-        line 66: 134\n-        line 68: 137\n-        line 69: 144\n-        line 71: 147\n-        line 72: 154\n-        line 74: 157\n-        line 75: 164\n-        line 77: 167\n-        line 78: 174\n-        line 80: 177\n-        line 81: 184\n-        line 83: 187\n-        line 84: 205\n-        line 85: 231\n-        line 86: 271\n-        line 87: 274\n-        line 53: 280\n-        line 92: 286\n+        line 54: 13\n+        line 57: 100\n+        line 59: 103\n+        line 60: 110\n+        line 62: 113\n+        line 63: 120\n+        line 65: 123\n+        line 66: 130\n+        line 68: 133\n+        line 69: 140\n+        line 71: 143\n+        line 72: 150\n+        line 74: 153\n+        line 75: 160\n+        line 77: 163\n+        line 78: 170\n+        line 80: 173\n+        line 81: 180\n+        line 83: 183\n+        line 84: 201\n+        line 85: 224\n+        line 86: 261\n+        line 87: 264\n+        line 53: 270\n+        line 92: 281\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-          231      40     4     s   Ljava/lang/String;\n-          194      86     2    ch   C\n-           10     276     3     i   I\n-            0     291     0   str   Ljava/lang/String;\n-            8     283     1 retval   Ljava/lang/StringBuffer;\n+            0     286     0   str   Ljava/lang/String;\n+            8     278     1 retval   Ljava/lang/StringBuffer;\n+          190      80     2    ch   C\n+           10     271     3     i   I\n+          224      37     4     s   Ljava/lang/String;\n       StackMapTable: number_of_entries = 15\n-        frame_type = 254 /* append */\n-          offset_delta = 10\n-          locals = [ class java/lang/StringBuffer, top, int ]\n+        frame_type = 255 /* full_frame */\n+          offset_delta = 13\n+          locals = [ class java/lang/String, class java/lang/StringBuffer, top, int ]\n+          stack = []\n         frame_type = 251 /* same_frame_extended */\n-          offset_delta = 93\n+          offset_delta = 86\n         frame_type = 2 /* same */\n         frame_type = 9 /* same */\n         frame_type = 9 /* same */\n         frame_type = 9 /* same */\n         frame_type = 9 /* same */\n         frame_type = 9 /* same */\n         frame_type = 9 /* same */\n         frame_type = 9 /* same */\n         frame_type = 9 /* same */\n         frame_type = 255 /* full_frame */\n           offset_delta = 17\n           locals = [ class java/lang/String, class java/lang/StringBuffer, int, int ]\n           stack = []\n-        frame_type = 251 /* same_frame_extended */\n-          offset_delta = 68\n+        frame_type = 62 /* same */\n         frame_type = 255 /* full_frame */\n           offset_delta = 5\n           locals = [ class java/lang/String, class java/lang/StringBuffer, top, int ]\n           stack = []\n-        frame_type = 249 /* chop */\n-          offset_delta = 5\n+        frame_type = 2 /* same */\n \n   protected static java.lang.String LexicalError(boolean, int, int, int, java.lang.String, char);\n     descriptor: (ZIIILjava/lang/String;C)Ljava/lang/String;\n     flags: (0x000c) ACC_PROTECTED, ACC_STATIC\n     Code:\n-      stack=3, locals=6, args_size=6\n-         0: new           #14                 // class java/lang/StringBuilder\n+      stack=4, locals=6, args_size=6\n+         0: new           #55                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #15                 // Method java/lang/StringBuilder.\"<init>\":()V\n-         7: ldc           #24                 // String Lexical error at line\n-         9: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        12: iload_2\n-        13: invokevirtual #25                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        16: ldc           #26                 // String , column\n-        18: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        21: iload_3\n-        22: invokevirtual #25                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        25: ldc           #27                 // String .  Encountered:\n-        27: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        30: iload_0\n-        31: ifeq          39\n-        34: ldc           #28                 // String <EOF>\n-        36: goto          85\n-        39: new           #14                 // class java/lang/StringBuilder\n-        42: dup\n-        43: invokespecial #15                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        46: ldc           #29                 // String \\\"\n-        48: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        51: iload         5\n-        53: invokestatic  #30                 // Method java/lang/String.valueOf:(C)Ljava/lang/String;\n-        56: invokestatic  #31                 // Method addEscapes:(Ljava/lang/String;)Ljava/lang/String;\n-        59: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        62: ldc           #29                 // String \\\"\n-        64: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        67: ldc           #32                 // String  (\n-        69: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        72: iload         5\n-        74: invokevirtual #25                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        77: ldc           #33                 // String ),\n-        79: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        82: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        85: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        88: ldc           #34                 // String after : \\\"\n-        90: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        93: aload         4\n-        95: invokestatic  #31                 // Method addEscapes:(Ljava/lang/String;)Ljava/lang/String;\n-        98: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       101: ldc           #29                 // String \\\"\n-       103: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       106: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       109: areturn\n+         4: ldc           #100                // String Lexical error at line\n+         6: invokespecial #59                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+         9: iload_2\n+        10: invokevirtual #102                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        13: ldc           #105                // String , column\n+        15: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        18: iload_3\n+        19: invokevirtual #102                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        22: ldc           #107                // String .  Encountered:\n+        24: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        27: iload_0\n+        28: ifeq          36\n+        31: ldc           #109                // String <EOF>\n+        33: goto          79\n+        36: new           #55                 // class java/lang/StringBuilder\n+        39: dup\n+        40: ldc           #111                // String \\\"\n+        42: invokespecial #59                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        45: iload         5\n+        47: invokestatic  #113                // Method java/lang/String.valueOf:(C)Ljava/lang/String;\n+        50: invokestatic  #117                // Method addEscapes:(Ljava/lang/String;)Ljava/lang/String;\n+        53: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        56: ldc           #111                // String \\\"\n+        58: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        61: ldc           #119                // String  (\n+        63: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        66: iload         5\n+        68: invokevirtual #102                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        71: ldc           #121                // String ),\n+        73: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        76: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        79: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        82: ldc           #123                // String after : \\\"\n+        84: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        87: aload         4\n+        89: invokestatic  #117                // Method addEscapes:(Ljava/lang/String;)Ljava/lang/String;\n+        92: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        95: ldc           #111                // String \\\"\n+        97: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       100: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       103: areturn\n       LineNumberTable:\n         line 108: 0\n-        line 111: 53\n-        line 112: 95\n-        line 108: 109\n+        line 109: 9\n+        line 110: 18\n+        line 111: 27\n+        line 112: 82\n+        line 108: 100\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0     110     0 EOFSeen   Z\n-            0     110     1 lexState   I\n-            0     110     2 errorLine   I\n-            0     110     3 errorColumn   I\n-            0     110     4 errorAfter   Ljava/lang/String;\n-            0     110     5 curChar   C\n+            0     104     0 EOFSeen   Z\n+            0     104     1 lexState   I\n+            0     104     2 errorLine   I\n+            0     104     3 errorColumn   I\n+            0     104     4 errorAfter   Ljava/lang/String;\n+            0     104     5 curChar   C\n       StackMapTable: number_of_entries = 2\n-        frame_type = 103 /* same_locals_1_stack_item */\n+        frame_type = 100 /* same_locals_1_stack_item */\n           stack = [ class java/lang/StringBuilder ]\n         frame_type = 255 /* full_frame */\n-          offset_delta = 45\n+          offset_delta = 42\n           locals = [ int, int, int, int, class java/lang/String, int ]\n           stack = [ class java/lang/StringBuilder, class java/lang/String ]\n \n   public java.lang.String getMessage();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #35                 // Method java/lang/Error.getMessage:()Ljava/lang/String;\n+         1: invokespecial #133                // Method java/lang/Error.getMessage:()Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 125: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/configuration2/plist/TokenMgrError;\n \n   public org.apache.commons.configuration2.plist.TokenMgrError();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #36                 // Method java/lang/Error.\"<init>\":()V\n+         1: invokespecial #137                // Method java/lang/Error.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 133: 0\n         line 134: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/configuration2/plist/TokenMgrError;\n@@ -476,18 +470,18 @@\n   public org.apache.commons.configuration2.plist.TokenMgrError(java.lang.String, int);\n     descriptor: (Ljava/lang/String;I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #37                 // Method java/lang/Error.\"<init>\":(Ljava/lang/String;)V\n+         2: invokespecial #139                // Method java/lang/Error.\"<init>\":(Ljava/lang/String;)V\n          5: aload_0\n          6: iload_2\n-         7: putfield      #38                 // Field errorCode:I\n+         7: putfield      #140                // Field errorCode:I\n         10: return\n       LineNumberTable:\n         line 138: 0\n         line 139: 5\n         line 140: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -503,17 +497,17 @@\n          0: aload_0\n          1: iload_1\n          2: iload_2\n          3: iload_3\n          4: iload         4\n          6: aload         5\n          8: iload         6\n-        10: invokestatic  #39                 // Method LexicalError:(ZIIILjava/lang/String;C)Ljava/lang/String;\n+        10: invokestatic  #145                // Method LexicalError:(ZIIILjava/lang/String;C)Ljava/lang/String;\n         13: iload         7\n-        15: invokespecial #40                 // Method \"<init>\":(Ljava/lang/String;I)V\n+        15: invokespecial #147                // Method \"<init>\":(Ljava/lang/String;I)V\n         18: return\n       LineNumberTable:\n         line 144: 0\n         line 145: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0  this   Lorg/apache/commons/configuration2/plist/TokenMgrError;\n"}]}
