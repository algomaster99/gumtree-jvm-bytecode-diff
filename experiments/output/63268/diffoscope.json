{"diffoscope-json-version": 1, "source1": "first/ColognePhonetic.class", "source2": "second/ColognePhonetic.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -14,14 +14,27 @@\n     private static final char[] CKQ;\n     private static final char[] AHKLOQRUX;\n     private static final char[] SZ;\n     private static final char[] AHOUKQX;\n     private static final char[] TDX;\n     private static final char[][] PREPROCESS_MAP;\n     \n+    static {\n+        AEIJOUY = new char[] { 'A', 'E', 'I', 'J', 'O', 'U', 'Y' };\n+        SCZ = new char[] { 'S', 'C', 'Z' };\n+        WFPV = new char[] { 'W', 'F', 'P', 'V' };\n+        GKQ = new char[] { 'G', 'K', 'Q' };\n+        CKQ = new char[] { 'C', 'K', 'Q' };\n+        AHKLOQRUX = new char[] { 'A', 'H', 'K', 'L', 'O', 'Q', 'R', 'U', 'X' };\n+        SZ = new char[] { 'S', 'Z' };\n+        AHOUKQX = new char[] { 'A', 'H', 'O', 'U', 'K', 'Q', 'X' };\n+        TDX = new char[] { 'T', 'D', 'X' };\n+        PREPROCESS_MAP = new char[][] { { '\\u00c4', 'A' }, { '\\u00dc', 'U' }, { '\\u00d6', 'O' }, { '\\u00df', 'S' } };\n+    }\n+    \n     private static boolean arrayContains(final char[] arr, final char key) {\n         for (final char element : arr) {\n             if (element == key) {\n                 return true;\n             }\n         }\n         return false;\n@@ -132,31 +145,20 @@\n     }\n     \n     private String preprocess(String text) {\n         text = text.toUpperCase(Locale.GERMAN);\n         final char[] chrs = text.toCharArray();\n         for (int index = 0; index < chrs.length; ++index) {\n             if (chrs[index] > 'Z') {\n-                for (final char[] element : ColognePhonetic.PREPROCESS_MAP) {\n+                char[][] preprocess_MAP;\n+                for (int length = (preprocess_MAP = ColognePhonetic.PREPROCESS_MAP).length, i = 0; i < length; ++i) {\n+                    final char[] element = preprocess_MAP[i];\n                     if (chrs[index] == element[0]) {\n                         chrs[index] = element[1];\n                         break;\n                     }\n                 }\n             }\n         }\n         return new String(chrs);\n     }\n-    \n-    static {\n-        AEIJOUY = new char[] { 'A', 'E', 'I', 'J', 'O', 'U', 'Y' };\n-        SCZ = new char[] { 'S', 'C', 'Z' };\n-        WFPV = new char[] { 'W', 'F', 'P', 'V' };\n-        GKQ = new char[] { 'G', 'K', 'Q' };\n-        CKQ = new char[] { 'C', 'K', 'Q' };\n-        AHKLOQRUX = new char[] { 'A', 'H', 'K', 'L', 'O', 'Q', 'R', 'U', 'X' };\n-        SZ = new char[] { 'S', 'Z' };\n-        AHOUKQX = new char[] { 'A', 'H', 'O', 'U', 'K', 'Q', 'X' };\n-        TDX = new char[] { 'T', 'D', 'X' };\n-        PREPROCESS_MAP = new char[][] { { '\\u00c4', 'A' }, { '\\u00dc', 'U' }, { '\\u00d6', 'O' }, { '\\u00df', 'S' } };\n-    }\n }\n"}]}
