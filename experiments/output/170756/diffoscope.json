{"diffoscope-json-version": 1, "source1": "first/MethodParameter.class", "source2": "second/MethodParameter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,110 +1,110 @@\n-  SHA-256 checksum a9d2613c7646abd82e8adb768022f589138b06482ceb857e600d4fe18ecfe72c\n+  SHA-256 checksum 0762fdbbc6fc86f7ac62d5d5ea82827070a32e6e6668cb66406d6f3c008aec50\n   Compiled from \"MethodParameter.java\"\n public class org.apache.bcel.classfile.MethodParameter implements java.lang.Cloneable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #12                         // org/apache/bcel/classfile/MethodParameter\n-  super_class: #14                        // java/lang/Object\n+  this_class: #14                         // org/apache/bcel/classfile/MethodParameter\n+  super_class: #2                         // java/lang/Object\n   interfaces: 1, fields: 2, methods: 13, attributes: 1\n Constant pool:\n-   #1 = Methodref          #14.#60        // java/lang/Object.\"<init>\":()V\n-   #2 = InterfaceMethodref #61.#62        // java/io/DataInput.readUnsignedShort:()I\n-   #3 = Fieldref           #12.#63        // org/apache/bcel/classfile/MethodParameter.nameIndex:I\n-   #4 = Fieldref           #12.#64        // org/apache/bcel/classfile/MethodParameter.accessFlags:I\n-   #5 = Class              #65            // org/apache/bcel/Const\n-   #6 = Methodref          #66.#67        // org/apache/bcel/classfile/ConstantPool.getConstant:(IB)Lorg/apache/bcel/classfile/Constant;\n-   #7 = Class              #68            // org/apache/bcel/classfile/ConstantUtf8\n-   #8 = Methodref          #7.#69         // org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n-   #9 = InterfaceMethodref #70.#71        // org/apache/bcel/classfile/Visitor.visitMethodParameter:(Lorg/apache/bcel/classfile/MethodParameter;)V\n-  #10 = Methodref          #72.#73        // java/io/DataOutputStream.writeShort:(I)V\n-  #11 = Methodref          #14.#74        // java/lang/Object.clone:()Ljava/lang/Object;\n-  #12 = Class              #75            // org/apache/bcel/classfile/MethodParameter\n-  #13 = Class              #76            // java/lang/CloneNotSupportedException\n-  #14 = Class              #77            // java/lang/Object\n-  #15 = Class              #78            // java/lang/Cloneable\n-  #16 = Utf8               nameIndex\n-  #17 = Utf8               I\n-  #18 = Utf8               accessFlags\n-  #19 = Utf8               <init>\n-  #20 = Utf8               ()V\n-  #21 = Utf8               Code\n-  #22 = Utf8               LineNumberTable\n-  #23 = Utf8               LocalVariableTable\n-  #24 = Utf8               this\n-  #25 = Utf8               Lorg/apache/bcel/classfile/MethodParameter;\n-  #26 = Utf8               (Ljava/io/DataInput;)V\n-  #27 = Utf8               input\n-  #28 = Utf8               Ljava/io/DataInput;\n-  #29 = Utf8               Exceptions\n-  #30 = Class              #79            // java/io/IOException\n-  #31 = Utf8               getNameIndex\n-  #32 = Utf8               ()I\n-  #33 = Utf8               setNameIndex\n-  #34 = Utf8               (I)V\n-  #35 = Utf8               name_index\n-  #36 = Utf8               getParameterName\n-  #37 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)Ljava/lang/String;\n-  #38 = Utf8               constant_pool\n-  #39 = Utf8               Lorg/apache/bcel/classfile/ConstantPool;\n-  #40 = Utf8               StackMapTable\n-  #41 = Utf8               getAccessFlags\n-  #42 = Utf8               setAccessFlags\n-  #43 = Utf8               access_flags\n-  #44 = Utf8               isFinal\n-  #45 = Utf8               ()Z\n-  #46 = Utf8               isSynthetic\n-  #47 = Utf8               isMandated\n-  #48 = Utf8               accept\n-  #49 = Utf8               (Lorg/apache/bcel/classfile/Visitor;)V\n-  #50 = Utf8               v\n-  #51 = Utf8               Lorg/apache/bcel/classfile/Visitor;\n-  #52 = Utf8               dump\n-  #53 = Utf8               (Ljava/io/DataOutputStream;)V\n-  #54 = Utf8               file\n-  #55 = Utf8               Ljava/io/DataOutputStream;\n-  #56 = Utf8               copy\n-  #57 = Utf8               ()Lorg/apache/bcel/classfile/MethodParameter;\n-  #58 = Utf8               SourceFile\n-  #59 = Utf8               MethodParameter.java\n-  #60 = NameAndType        #19:#20        // \"<init>\":()V\n-  #61 = Class              #80            // java/io/DataInput\n-  #62 = NameAndType        #81:#32        // readUnsignedShort:()I\n-  #63 = NameAndType        #16:#17        // nameIndex:I\n-  #64 = NameAndType        #18:#17        // accessFlags:I\n-  #65 = Utf8               org/apache/bcel/Const\n-  #66 = Class              #82            // org/apache/bcel/classfile/ConstantPool\n-  #67 = NameAndType        #83:#84        // getConstant:(IB)Lorg/apache/bcel/classfile/Constant;\n-  #68 = Utf8               org/apache/bcel/classfile/ConstantUtf8\n-  #69 = NameAndType        #85:#86        // getBytes:()Ljava/lang/String;\n-  #70 = Class              #87            // org/apache/bcel/classfile/Visitor\n-  #71 = NameAndType        #88:#89        // visitMethodParameter:(Lorg/apache/bcel/classfile/MethodParameter;)V\n-  #72 = Class              #90            // java/io/DataOutputStream\n-  #73 = NameAndType        #91:#34        // writeShort:(I)V\n-  #74 = NameAndType        #92:#93        // clone:()Ljava/lang/Object;\n-  #75 = Utf8               org/apache/bcel/classfile/MethodParameter\n-  #76 = Utf8               java/lang/CloneNotSupportedException\n-  #77 = Utf8               java/lang/Object\n-  #78 = Utf8               java/lang/Cloneable\n-  #79 = Utf8               java/io/IOException\n-  #80 = Utf8               java/io/DataInput\n-  #81 = Utf8               readUnsignedShort\n-  #82 = Utf8               org/apache/bcel/classfile/ConstantPool\n-  #83 = Utf8               getConstant\n-  #84 = Utf8               (IB)Lorg/apache/bcel/classfile/Constant;\n-  #85 = Utf8               getBytes\n-  #86 = Utf8               ()Ljava/lang/String;\n-  #87 = Utf8               org/apache/bcel/classfile/Visitor\n-  #88 = Utf8               visitMethodParameter\n-  #89 = Utf8               (Lorg/apache/bcel/classfile/MethodParameter;)V\n-  #90 = Utf8               java/io/DataOutputStream\n-  #91 = Utf8               writeShort\n-  #92 = Utf8               clone\n-  #93 = Utf8               ()Ljava/lang/Object;\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = InterfaceMethodref #8.#9          // java/io/DataInput.readUnsignedShort:()I\n+   #8 = Class              #10            // java/io/DataInput\n+   #9 = NameAndType        #11:#12        // readUnsignedShort:()I\n+  #10 = Utf8               java/io/DataInput\n+  #11 = Utf8               readUnsignedShort\n+  #12 = Utf8               ()I\n+  #13 = Fieldref           #14.#15        // org/apache/bcel/classfile/MethodParameter.nameIndex:I\n+  #14 = Class              #16            // org/apache/bcel/classfile/MethodParameter\n+  #15 = NameAndType        #17:#18        // nameIndex:I\n+  #16 = Utf8               org/apache/bcel/classfile/MethodParameter\n+  #17 = Utf8               nameIndex\n+  #18 = Utf8               I\n+  #19 = Fieldref           #14.#20        // org/apache/bcel/classfile/MethodParameter.accessFlags:I\n+  #20 = NameAndType        #21:#18        // accessFlags:I\n+  #21 = Utf8               accessFlags\n+  #22 = Class              #23            // org/apache/bcel/Const\n+  #23 = Utf8               org/apache/bcel/Const\n+  #24 = Methodref          #25.#26        // org/apache/bcel/classfile/ConstantPool.getConstant:(IB)Lorg/apache/bcel/classfile/Constant;\n+  #25 = Class              #27            // org/apache/bcel/classfile/ConstantPool\n+  #26 = NameAndType        #28:#29        // getConstant:(IB)Lorg/apache/bcel/classfile/Constant;\n+  #27 = Utf8               org/apache/bcel/classfile/ConstantPool\n+  #28 = Utf8               getConstant\n+  #29 = Utf8               (IB)Lorg/apache/bcel/classfile/Constant;\n+  #30 = Class              #31            // org/apache/bcel/classfile/ConstantUtf8\n+  #31 = Utf8               org/apache/bcel/classfile/ConstantUtf8\n+  #32 = Methodref          #30.#33        // org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n+  #33 = NameAndType        #34:#35        // getBytes:()Ljava/lang/String;\n+  #34 = Utf8               getBytes\n+  #35 = Utf8               ()Ljava/lang/String;\n+  #36 = InterfaceMethodref #37.#38        // org/apache/bcel/classfile/Visitor.visitMethodParameter:(Lorg/apache/bcel/classfile/MethodParameter;)V\n+  #37 = Class              #39            // org/apache/bcel/classfile/Visitor\n+  #38 = NameAndType        #40:#41        // visitMethodParameter:(Lorg/apache/bcel/classfile/MethodParameter;)V\n+  #39 = Utf8               org/apache/bcel/classfile/Visitor\n+  #40 = Utf8               visitMethodParameter\n+  #41 = Utf8               (Lorg/apache/bcel/classfile/MethodParameter;)V\n+  #42 = Methodref          #43.#44        // java/io/DataOutputStream.writeShort:(I)V\n+  #43 = Class              #45            // java/io/DataOutputStream\n+  #44 = NameAndType        #46:#47        // writeShort:(I)V\n+  #45 = Utf8               java/io/DataOutputStream\n+  #46 = Utf8               writeShort\n+  #47 = Utf8               (I)V\n+  #48 = Methodref          #2.#49         // java/lang/Object.clone:()Ljava/lang/Object;\n+  #49 = NameAndType        #50:#51        // clone:()Ljava/lang/Object;\n+  #50 = Utf8               clone\n+  #51 = Utf8               ()Ljava/lang/Object;\n+  #52 = Class              #53            // java/lang/CloneNotSupportedException\n+  #53 = Utf8               java/lang/CloneNotSupportedException\n+  #54 = Class              #55            // java/lang/Cloneable\n+  #55 = Utf8               java/lang/Cloneable\n+  #56 = Utf8               Code\n+  #57 = Utf8               LineNumberTable\n+  #58 = Utf8               LocalVariableTable\n+  #59 = Utf8               this\n+  #60 = Utf8               Lorg/apache/bcel/classfile/MethodParameter;\n+  #61 = Utf8               (Ljava/io/DataInput;)V\n+  #62 = Utf8               input\n+  #63 = Utf8               Ljava/io/DataInput;\n+  #64 = Utf8               Exceptions\n+  #65 = Class              #66            // java/io/IOException\n+  #66 = Utf8               java/io/IOException\n+  #67 = Utf8               getNameIndex\n+  #68 = Utf8               setNameIndex\n+  #69 = Utf8               name_index\n+  #70 = Utf8               getParameterName\n+  #71 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)Ljava/lang/String;\n+  #72 = Utf8               constant_pool\n+  #73 = Utf8               Lorg/apache/bcel/classfile/ConstantPool;\n+  #74 = Utf8               StackMapTable\n+  #75 = Utf8               getAccessFlags\n+  #76 = Utf8               setAccessFlags\n+  #77 = Utf8               access_flags\n+  #78 = Utf8               isFinal\n+  #79 = Utf8               ()Z\n+  #80 = Utf8               isSynthetic\n+  #81 = Utf8               isMandated\n+  #82 = Utf8               accept\n+  #83 = Utf8               (Lorg/apache/bcel/classfile/Visitor;)V\n+  #84 = Utf8               v\n+  #85 = Utf8               Lorg/apache/bcel/classfile/Visitor;\n+  #86 = Utf8               dump\n+  #87 = Utf8               (Ljava/io/DataOutputStream;)V\n+  #88 = Utf8               file\n+  #89 = Utf8               Ljava/io/DataOutputStream;\n+  #90 = Utf8               copy\n+  #91 = Utf8               ()Lorg/apache/bcel/classfile/MethodParameter;\n+  #92 = Utf8               SourceFile\n+  #93 = Utf8               MethodParameter.java\n {\n   private int nameIndex;\n     descriptor: I\n     flags: (0x0002) ACC_PRIVATE\n \n   private int accessFlags;\n     descriptor: I\n@@ -130,20 +130,20 @@\n     flags: (0x0000)\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: invokeinterface #2,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n-        11: putfield      #3                  // Field nameIndex:I\n+         6: invokeinterface #7,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n+        11: putfield      #13                 // Field nameIndex:I\n         14: aload_0\n         15: aload_1\n-        16: invokeinterface #2,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n-        21: putfield      #4                  // Field accessFlags:I\n+        16: invokeinterface #7,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n+        21: putfield      #19                 // Field accessFlags:I\n         24: return\n       LineNumberTable:\n         line 51: 0\n         line 52: 4\n         line 53: 14\n         line 54: 24\n       LocalVariableTable:\n@@ -155,30 +155,30 @@\n \n   public int getNameIndex();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field nameIndex:I\n+         1: getfield      #13                 // Field nameIndex:I\n          4: ireturn\n       LineNumberTable:\n         line 57: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/bcel/classfile/MethodParameter;\n \n   public void setNameIndex(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #3                  // Field nameIndex:I\n+         2: putfield      #13                 // Field nameIndex:I\n          5: return\n       LineNumberTable:\n         line 61: 0\n         line 62: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/bcel/classfile/MethodParameter;\n@@ -186,25 +186,25 @@\n \n   public java.lang.String getParameterName(org.apache.bcel.classfile.ConstantPool);\n     descriptor: (Lorg/apache/bcel/classfile/ConstantPool;)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #3                  // Field nameIndex:I\n+         1: getfield      #13                 // Field nameIndex:I\n          4: ifne          9\n          7: aconst_null\n          8: areturn\n          9: aload_1\n         10: aload_0\n-        11: getfield      #3                  // Field nameIndex:I\n+        11: getfield      #13                 // Field nameIndex:I\n         14: iconst_1\n-        15: invokevirtual #6                  // Method org/apache/bcel/classfile/ConstantPool.getConstant:(IB)Lorg/apache/bcel/classfile/Constant;\n-        18: checkcast     #7                  // class org/apache/bcel/classfile/ConstantUtf8\n-        21: invokevirtual #8                  // Method org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n+        15: invokevirtual #24                 // Method org/apache/bcel/classfile/ConstantPool.getConstant:(IB)Lorg/apache/bcel/classfile/Constant;\n+        18: checkcast     #30                 // class org/apache/bcel/classfile/ConstantUtf8\n+        21: invokevirtual #32                 // Method org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n         24: areturn\n       LineNumberTable:\n         line 68: 0\n         line 69: 7\n         line 71: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -215,30 +215,30 @@\n \n   public int getAccessFlags();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field accessFlags:I\n+         1: getfield      #19                 // Field accessFlags:I\n          4: ireturn\n       LineNumberTable:\n         line 75: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/bcel/classfile/MethodParameter;\n \n   public void setAccessFlags(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #4                  // Field accessFlags:I\n+         2: putfield      #19                 // Field accessFlags:I\n          5: return\n       LineNumberTable:\n         line 79: 0\n         line 80: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/bcel/classfile/MethodParameter;\n@@ -246,15 +246,15 @@\n \n   public boolean isFinal();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field accessFlags:I\n+         1: getfield      #19                 // Field accessFlags:I\n          4: bipush        16\n          6: iand\n          7: ifeq          14\n         10: iconst_1\n         11: goto          15\n         14: iconst_0\n         15: ireturn\n@@ -270,15 +270,15 @@\n \n   public boolean isSynthetic();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field accessFlags:I\n+         1: getfield      #19                 // Field accessFlags:I\n          4: sipush        4096\n          7: iand\n          8: ifeq          15\n         11: iconst_1\n         12: goto          16\n         15: iconst_0\n         16: ireturn\n@@ -294,15 +294,15 @@\n \n   public boolean isMandated();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field accessFlags:I\n+         1: getfield      #19                 // Field accessFlags:I\n          4: sipush        -32768\n          7: iand\n          8: ifeq          15\n         11: iconst_1\n         12: goto          16\n         15: iconst_0\n         16: ireturn\n@@ -319,15 +319,15 @@\n   public void accept(org.apache.bcel.classfile.Visitor);\n     descriptor: (Lorg/apache/bcel/classfile/Visitor;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: invokeinterface #9,  2            // InterfaceMethod org/apache/bcel/classfile/Visitor.visitMethodParameter:(Lorg/apache/bcel/classfile/MethodParameter;)V\n+         2: invokeinterface #36,  2           // InterfaceMethod org/apache/bcel/classfile/Visitor.visitMethodParameter:(Lorg/apache/bcel/classfile/MethodParameter;)V\n          7: return\n       LineNumberTable:\n         line 95: 0\n         line 96: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/bcel/classfile/MethodParameter;\n@@ -336,20 +336,20 @@\n   public final void dump(java.io.DataOutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/DataOutputStream;)V\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: getfield      #3                  // Field nameIndex:I\n-         5: invokevirtual #10                 // Method java/io/DataOutputStream.writeShort:(I)V\n+         2: getfield      #13                 // Field nameIndex:I\n+         5: invokevirtual #42                 // Method java/io/DataOutputStream.writeShort:(I)V\n          8: aload_1\n          9: aload_0\n-        10: getfield      #4                  // Field accessFlags:I\n-        13: invokevirtual #10                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        10: getfield      #19                 // Field accessFlags:I\n+        13: invokevirtual #42                 // Method java/io/DataOutputStream.writeShort:(I)V\n         16: return\n       LineNumberTable:\n         line 105: 0\n         line 106: 8\n         line 107: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -360,16 +360,16 @@\n \n   public org.apache.bcel.classfile.MethodParameter copy();\n     descriptor: ()Lorg/apache/bcel/classfile/MethodParameter;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #11                 // Method java/lang/Object.clone:()Ljava/lang/Object;\n-         4: checkcast     #12                 // class org/apache/bcel/classfile/MethodParameter\n+         1: invokevirtual #48                 // Method java/lang/Object.clone:()Ljava/lang/Object;\n+         4: checkcast     #14                 // class org/apache/bcel/classfile/MethodParameter\n          7: areturn\n          8: astore_1\n          9: aconst_null\n         10: areturn\n       Exception table:\n          from    to  target type\n              0     7     8   Class java/lang/CloneNotSupportedException\n"}]}
