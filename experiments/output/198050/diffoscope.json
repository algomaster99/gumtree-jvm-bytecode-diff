{"diffoscope-json-version": 1, "source1": "first/AccessFlags.class", "source2": "second/AccessFlags.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -5,166 +5,166 @@\n {\n     @Deprecated\n     protected int access_flags;\n     \n     public AccessFlags() {\n     }\n     \n-    public AccessFlags(final int a) {\n-        this.access_flags = a;\n+    public AccessFlags(final int access_flags) {\n+        this.access_flags = access_flags;\n     }\n     \n     public final int getAccessFlags() {\n         return this.access_flags;\n     }\n     \n     public final int getModifiers() {\n         return this.access_flags;\n     }\n     \n     public final void setAccessFlags(final int access_flags) {\n         this.access_flags = access_flags;\n     }\n     \n-    public final void setModifiers(final int access_flags) {\n-        this.setAccessFlags(access_flags);\n+    public final void setModifiers(final int accessFlags) {\n+        this.setAccessFlags(accessFlags);\n     }\n     \n-    private void setFlag(final int flag, final boolean set) {\n-        if ((this.access_flags & flag) != 0x0) {\n-            if (!set) {\n-                this.access_flags ^= flag;\n+    private void setFlag(final int n, final boolean b) {\n+        if ((this.access_flags & n) != 0x0) {\n+            if (!b) {\n+                this.access_flags ^= n;\n             }\n         }\n-        else if (set) {\n-            this.access_flags |= flag;\n+        else if (b) {\n+            this.access_flags |= n;\n         }\n     }\n     \n-    public final void isPublic(final boolean flag) {\n-        this.setFlag(1, flag);\n+    public final void isPublic(final boolean b) {\n+        this.setFlag(1, b);\n     }\n     \n     public final boolean isPublic() {\n         return (this.access_flags & 0x1) != 0x0;\n     }\n     \n-    public final void isPrivate(final boolean flag) {\n-        this.setFlag(2, flag);\n+    public final void isPrivate(final boolean b) {\n+        this.setFlag(2, b);\n     }\n     \n     public final boolean isPrivate() {\n         return (this.access_flags & 0x2) != 0x0;\n     }\n     \n-    public final void isProtected(final boolean flag) {\n-        this.setFlag(4, flag);\n+    public final void isProtected(final boolean b) {\n+        this.setFlag(4, b);\n     }\n     \n     public final boolean isProtected() {\n         return (this.access_flags & 0x4) != 0x0;\n     }\n     \n-    public final void isStatic(final boolean flag) {\n-        this.setFlag(8, flag);\n+    public final void isStatic(final boolean b) {\n+        this.setFlag(8, b);\n     }\n     \n     public final boolean isStatic() {\n         return (this.access_flags & 0x8) != 0x0;\n     }\n     \n-    public final void isFinal(final boolean flag) {\n-        this.setFlag(16, flag);\n+    public final void isFinal(final boolean b) {\n+        this.setFlag(16, b);\n     }\n     \n     public final boolean isFinal() {\n         return (this.access_flags & 0x10) != 0x0;\n     }\n     \n-    public final void isSynchronized(final boolean flag) {\n-        this.setFlag(32, flag);\n+    public final void isSynchronized(final boolean b) {\n+        this.setFlag(32, b);\n     }\n     \n     public final boolean isSynchronized() {\n         return (this.access_flags & 0x20) != 0x0;\n     }\n     \n-    public final void isVolatile(final boolean flag) {\n-        this.setFlag(64, flag);\n+    public final void isVolatile(final boolean b) {\n+        this.setFlag(64, b);\n     }\n     \n     public final boolean isVolatile() {\n         return (this.access_flags & 0x40) != 0x0;\n     }\n     \n-    public final void isTransient(final boolean flag) {\n-        this.setFlag(128, flag);\n+    public final void isTransient(final boolean b) {\n+        this.setFlag(128, b);\n     }\n     \n     public final boolean isTransient() {\n         return (this.access_flags & 0x80) != 0x0;\n     }\n     \n-    public final void isNative(final boolean flag) {\n-        this.setFlag(256, flag);\n+    public final void isNative(final boolean b) {\n+        this.setFlag(256, b);\n     }\n     \n     public final boolean isNative() {\n         return (this.access_flags & 0x100) != 0x0;\n     }\n     \n-    public final void isInterface(final boolean flag) {\n-        this.setFlag(512, flag);\n+    public final void isInterface(final boolean b) {\n+        this.setFlag(512, b);\n     }\n     \n     public final boolean isInterface() {\n         return (this.access_flags & 0x200) != 0x0;\n     }\n     \n-    public final void isAbstract(final boolean flag) {\n-        this.setFlag(1024, flag);\n+    public final void isAbstract(final boolean b) {\n+        this.setFlag(1024, b);\n     }\n     \n     public final boolean isAbstract() {\n         return (this.access_flags & 0x400) != 0x0;\n     }\n     \n-    public final void isStrictfp(final boolean flag) {\n-        this.setFlag(2048, flag);\n+    public final void isStrictfp(final boolean b) {\n+        this.setFlag(2048, b);\n     }\n     \n     public final boolean isStrictfp() {\n         return (this.access_flags & 0x800) != 0x0;\n     }\n     \n-    public final void isSynthetic(final boolean flag) {\n-        this.setFlag(4096, flag);\n+    public final void isSynthetic(final boolean b) {\n+        this.setFlag(4096, b);\n     }\n     \n     public final boolean isSynthetic() {\n         return (this.access_flags & 0x1000) != 0x0;\n     }\n     \n-    public final void isAnnotation(final boolean flag) {\n-        this.setFlag(8192, flag);\n+    public final void isAnnotation(final boolean b) {\n+        this.setFlag(8192, b);\n     }\n     \n     public final boolean isAnnotation() {\n         return (this.access_flags & 0x2000) != 0x0;\n     }\n     \n-    public final void isEnum(final boolean flag) {\n-        this.setFlag(16384, flag);\n+    public final void isEnum(final boolean b) {\n+        this.setFlag(16384, b);\n     }\n     \n     public final boolean isEnum() {\n         return (this.access_flags & 0x4000) != 0x0;\n     }\n     \n-    public final void isVarArgs(final boolean flag) {\n-        this.setFlag(128, flag);\n+    public final void isVarArgs(final boolean b) {\n+        this.setFlag(128, b);\n     }\n     \n     public final boolean isVarArgs() {\n         return (this.access_flags & 0x80) != 0x0;\n     }\n }\n"}]}
