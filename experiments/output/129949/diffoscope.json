{"diffoscope-json-version": 1, "source1": "first/CircularInputStream.class", "source2": "second/CircularInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,77 +1,75 @@\n-  SHA-256 checksum 5342aa21e4f9c4f952b53148803ef2c112ff983683c9268322da58eb82eb6484\n+  SHA-256 checksum abf18f9772cb7c95455bc24abffd81ada50cfd6c21f5aceaf5f6a55b0320089c\n   Compiled from \"CircularInputStream.java\"\n public class org.apache.commons.io.input.CircularInputStream extends java.io.InputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #25                         // org/apache/commons/io/input/CircularInputStream\n-  super_class: #20                        // java/io/InputStream\n+  this_class: #1                          // org/apache/commons/io/input/CircularInputStream\n+  super_class: #3                         // java/io/InputStream\n   interfaces: 0, fields: 4, methods: 3, attributes: 1\n Constant pool:\n-   #1 = String             #2             // repeatContent\n-   #2 = Utf8               repeatContent\n-   #3 = Methodref          #4.#5          // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #4 = Class              #6             // java/util/Objects\n-   #5 = NameAndType        #7:#8          // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #6 = Utf8               java/util/Objects\n-   #7 = Utf8               requireNonNull\n-   #8 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #9 = Class              #10            // org/apache/commons/io/IOUtils\n-  #10 = Utf8               org/apache/commons/io/IOUtils\n-  #11 = Class              #12            // java/lang/IllegalArgumentException\n-  #12 = Utf8               java/lang/IllegalArgumentException\n-  #13 = String             #14            // repeatContent contains the end-of-stream marker -1\n-  #14 = Utf8               repeatContent contains the end-of-stream marker -1\n-  #15 = Methodref          #11.#16        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #16 = NameAndType        #17:#18        // \"<init>\":(Ljava/lang/String;)V\n-  #17 = Utf8               <init>\n-  #18 = Utf8               (Ljava/lang/String;)V\n-  #19 = Methodref          #20.#21        // java/io/InputStream.\"<init>\":()V\n-  #20 = Class              #22            // java/io/InputStream\n-  #21 = NameAndType        #17:#23        // \"<init>\":()V\n-  #22 = Utf8               java/io/InputStream\n-  #23 = Utf8               ()V\n-  #24 = Fieldref           #25.#26        // org/apache/commons/io/input/CircularInputStream.position:I\n-  #25 = Class              #27            // org/apache/commons/io/input/CircularInputStream\n-  #26 = NameAndType        #28:#29        // position:I\n-  #27 = Utf8               org/apache/commons/io/input/CircularInputStream\n-  #28 = Utf8               position\n-  #29 = Utf8               I\n-  #30 = Methodref          #25.#31        // org/apache/commons/io/input/CircularInputStream.validate:([B)[B\n-  #31 = NameAndType        #32:#33        // validate:([B)[B\n-  #32 = Utf8               validate\n-  #33 = Utf8               ([B)[B\n-  #34 = Fieldref           #25.#35        // org/apache/commons/io/input/CircularInputStream.repeatedContent:[B\n-  #35 = NameAndType        #36:#37        // repeatedContent:[B\n-  #36 = Utf8               repeatedContent\n-  #37 = Utf8               [B\n-  #38 = String             #39            // repeatContent is empty.\n-  #39 = Utf8               repeatContent is empty.\n-  #40 = Fieldref           #25.#41        // org/apache/commons/io/input/CircularInputStream.targetByteCount:J\n-  #41 = NameAndType        #42:#43        // targetByteCount:J\n-  #42 = Utf8               targetByteCount\n-  #43 = Utf8               J\n-  #44 = Fieldref           #25.#45        // org/apache/commons/io/input/CircularInputStream.byteCount:J\n-  #45 = NameAndType        #46:#43        // byteCount:J\n-  #46 = Utf8               byteCount\n-  #47 = Utf8               Code\n-  #48 = Utf8               LineNumberTable\n-  #49 = Utf8               LocalVariableTable\n-  #50 = Utf8               b\n-  #51 = Utf8               B\n-  #52 = Utf8               StackMapTable\n-  #53 = Class              #37            // \"[B\"\n-  #54 = Utf8               ([BJ)V\n-  #55 = Utf8               this\n-  #56 = Utf8               Lorg/apache/commons/io/input/CircularInputStream;\n-  #57 = Utf8               read\n-  #58 = Utf8               ()I\n-  #59 = Utf8               SourceFile\n-  #60 = Utf8               CircularInputStream.java\n+   #1 = Class              #2             // org/apache/commons/io/input/CircularInputStream\n+   #2 = Utf8               org/apache/commons/io/input/CircularInputStream\n+   #3 = Class              #4             // java/io/InputStream\n+   #4 = Utf8               java/io/InputStream\n+   #5 = Utf8               byteCount\n+   #6 = Utf8               J\n+   #7 = Utf8               position\n+   #8 = Utf8               I\n+   #9 = Utf8               repeatedContent\n+  #10 = Utf8               [B\n+  #11 = Utf8               targetByteCount\n+  #12 = Utf8               validate\n+  #13 = Utf8               ([B)[B\n+  #14 = Utf8               Code\n+  #15 = String             #16            // repeatContent\n+  #16 = Utf8               repeatContent\n+  #17 = Methodref          #18.#20        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #18 = Class              #19            // java/util/Objects\n+  #19 = Utf8               java/util/Objects\n+  #20 = NameAndType        #21:#22        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #21 = Utf8               requireNonNull\n+  #22 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #23 = Class              #24            // java/lang/IllegalArgumentException\n+  #24 = Utf8               java/lang/IllegalArgumentException\n+  #25 = String             #26            // repeatContent contains the end-of-stream marker -1\n+  #26 = Utf8               repeatContent contains the end-of-stream marker -1\n+  #27 = Methodref          #23.#28        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #28 = NameAndType        #29:#30        // \"<init>\":(Ljava/lang/String;)V\n+  #29 = Utf8               <init>\n+  #30 = Utf8               (Ljava/lang/String;)V\n+  #31 = Utf8               LineNumberTable\n+  #32 = Utf8               LocalVariableTable\n+  #33 = Utf8               b\n+  #34 = Utf8               B\n+  #35 = Utf8               StackMapTable\n+  #36 = Class              #10            // \"[B\"\n+  #37 = Utf8               ([BJ)V\n+  #38 = Methodref          #3.#39         // java/io/InputStream.\"<init>\":()V\n+  #39 = NameAndType        #29:#40        // \"<init>\":()V\n+  #40 = Utf8               ()V\n+  #41 = Fieldref           #1.#42         // org/apache/commons/io/input/CircularInputStream.position:I\n+  #42 = NameAndType        #7:#8          // position:I\n+  #43 = Methodref          #1.#44         // org/apache/commons/io/input/CircularInputStream.validate:([B)[B\n+  #44 = NameAndType        #12:#13        // validate:([B)[B\n+  #45 = Fieldref           #1.#46         // org/apache/commons/io/input/CircularInputStream.repeatedContent:[B\n+  #46 = NameAndType        #9:#10         // repeatedContent:[B\n+  #47 = String             #48            // repeatContent is empty.\n+  #48 = Utf8               repeatContent is empty.\n+  #49 = Fieldref           #1.#50         // org/apache/commons/io/input/CircularInputStream.targetByteCount:J\n+  #50 = NameAndType        #11:#6         // targetByteCount:J\n+  #51 = Utf8               this\n+  #52 = Utf8               Lorg/apache/commons/io/input/CircularInputStream;\n+  #53 = Utf8               read\n+  #54 = Utf8               ()I\n+  #55 = Fieldref           #1.#56         // org/apache/commons/io/input/CircularInputStream.byteCount:J\n+  #56 = NameAndType        #5:#6          // byteCount:J\n+  #57 = Utf8               SourceFile\n+  #58 = Utf8               CircularInputStream.java\n {\n   private long byteCount;\n     descriptor: J\n     flags: (0x0002) ACC_PRIVATE\n \n   private int position;\n     descriptor: I\n@@ -87,87 +85,87 @@\n \n   private static byte[] validate(byte[]);\n     descriptor: ([B)[B\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=5, args_size=1\n          0: aload_0\n-         1: ldc           #1                  // String repeatContent\n-         3: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #15                 // String repeatContent\n+         3: invokestatic  #17                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: aload_0\n-         8: astore_1\n-         9: aload_1\n-        10: arraylength\n-        11: istore_2\n-        12: iconst_0\n-        13: istore_3\n-        14: iload_3\n-        15: iload_2\n-        16: if_icmpge     46\n-        19: aload_1\n-        20: iload_3\n+         8: dup\n+         9: astore        4\n+        11: arraylength\n+        12: istore_3\n+        13: iconst_0\n+        14: istore_2\n+        15: goto          41\n+        18: aload         4\n+        20: iload_2\n         21: baload\n-        22: istore        4\n-        24: iload         4\n-        26: iconst_m1\n-        27: if_icmpne     40\n-        30: new           #11                 // class java/lang/IllegalArgumentException\n-        33: dup\n-        34: ldc           #13                 // String repeatContent contains the end-of-stream marker -1\n-        36: invokespecial #15                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        39: athrow\n-        40: iinc          3, 1\n-        43: goto          14\n+        22: istore_1\n+        23: iload_1\n+        24: iconst_m1\n+        25: if_icmpne     38\n+        28: new           #23                 // class java/lang/IllegalArgumentException\n+        31: dup\n+        32: ldc           #25                 // String repeatContent contains the end-of-stream marker -1\n+        34: invokespecial #27                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        37: athrow\n+        38: iinc          2, 1\n+        41: iload_2\n+        42: iload_3\n+        43: if_icmplt     18\n         46: aload_0\n         47: areturn\n       LineNumberTable:\n         line 45: 0\n         line 46: 7\n-        line 47: 24\n-        line 48: 30\n-        line 46: 40\n+        line 47: 23\n+        line 48: 28\n+        line 46: 38\n         line 51: 46\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           24      16     4     b   B\n             0      48     0 repeatContent   [B\n+           23      15     1     b   B\n       StackMapTable: number_of_entries = 3\n-        frame_type = 254 /* append */\n-          offset_delta = 14\n-          locals = [ class \"[B\", int, int ]\n-        frame_type = 25 /* same */\n-        frame_type = 248 /* chop */\n-          offset_delta = 5\n+        frame_type = 255 /* full_frame */\n+          offset_delta = 18\n+          locals = [ class \"[B\", top, int, int, class \"[B\" ]\n+          stack = []\n+        frame_type = 19 /* same */\n+        frame_type = 2 /* same */\n \n   public org.apache.commons.io.input.CircularInputStream(byte[], long);\n     descriptor: ([BJ)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_0\n-         1: invokespecial #19                 // Method java/io/InputStream.\"<init>\":()V\n+         1: invokespecial #38                 // Method java/io/InputStream.\"<init>\":()V\n          4: aload_0\n          5: iconst_m1\n-         6: putfield      #24                 // Field position:I\n+         6: putfield      #41                 // Field position:I\n          9: aload_0\n         10: aload_1\n-        11: invokestatic  #30                 // Method validate:([B)[B\n-        14: putfield      #34                 // Field repeatedContent:[B\n+        11: invokestatic  #43                 // Method validate:([B)[B\n+        14: putfield      #45                 // Field repeatedContent:[B\n         17: aload_1\n         18: arraylength\n         19: ifne          32\n-        22: new           #11                 // class java/lang/IllegalArgumentException\n+        22: new           #23                 // class java/lang/IllegalArgumentException\n         25: dup\n-        26: ldc           #38                 // String repeatContent is empty.\n-        28: invokespecial #15                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        26: ldc           #47                 // String repeatContent is empty.\n+        28: invokespecial #27                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         31: athrow\n         32: aload_0\n         33: lload_2\n-        34: putfield      #40                 // Field targetByteCount:J\n+        34: putfield      #49                 // Field targetByteCount:J\n         37: return\n       LineNumberTable:\n         line 65: 0\n         line 55: 4\n         line 66: 9\n         line 67: 17\n         line 68: 22\n@@ -186,46 +184,46 @@\n \n   public int read();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #40                 // Field targetByteCount:J\n+         1: getfield      #49                 // Field targetByteCount:J\n          4: lconst_0\n          5: lcmp\n          6: iflt          33\n          9: aload_0\n-        10: getfield      #44                 // Field byteCount:J\n+        10: getfield      #55                 // Field byteCount:J\n         13: aload_0\n-        14: getfield      #40                 // Field targetByteCount:J\n+        14: getfield      #49                 // Field targetByteCount:J\n         17: lcmp\n         18: ifne          23\n         21: iconst_m1\n         22: ireturn\n         23: aload_0\n         24: dup\n-        25: getfield      #44                 // Field byteCount:J\n+        25: getfield      #55                 // Field byteCount:J\n         28: lconst_1\n         29: ladd\n-        30: putfield      #44                 // Field byteCount:J\n+        30: putfield      #55                 // Field byteCount:J\n         33: aload_0\n         34: aload_0\n-        35: getfield      #24                 // Field position:I\n+        35: getfield      #41                 // Field position:I\n         38: iconst_1\n         39: iadd\n         40: aload_0\n-        41: getfield      #34                 // Field repeatedContent:[B\n+        41: getfield      #45                 // Field repeatedContent:[B\n         44: arraylength\n         45: irem\n-        46: putfield      #24                 // Field position:I\n+        46: putfield      #41                 // Field position:I\n         49: aload_0\n-        50: getfield      #34                 // Field repeatedContent:[B\n+        50: getfield      #45                 // Field repeatedContent:[B\n         53: aload_0\n-        54: getfield      #24                 // Field position:I\n+        54: getfield      #41                 // Field position:I\n         57: baload\n         58: sipush        255\n         61: iand\n         62: ireturn\n       LineNumberTable:\n         line 75: 0\n         line 76: 9\n"}]}
