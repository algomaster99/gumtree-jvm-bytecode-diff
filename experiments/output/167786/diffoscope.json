{"diffoscope-json-version": 1, "source1": "first/AndFileFilter.class", "source2": "second/AndFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,55 +1,55 @@\n-  SHA-256 checksum 1c49f84aa6e5f9f8a81ad9146bf818d5335ef017b594ee44a924ee995b381323\n+  SHA-256 checksum c1034706107515c188afb76d273054bdfd7045fcc83f7d153e63326a5240da15\n   Compiled from \"AndFileFilter.java\"\n public class org.apache.commons.io.filefilter.AndFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements org.apache.commons.io.filefilter.ConditionalFileFilter,java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #35                         // org/apache/commons/io/filefilter/AndFileFilter\n   super_class: #36                        // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 2, fields: 2, methods: 10, attributes: 1\n Constant pool:\n-    #1 = Methodref          #36.#97       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-    #2 = Class              #98           // java/util/ArrayList\n-    #3 = Methodref          #2.#97        // java/util/ArrayList.\"<init>\":()V\n-    #4 = Fieldref           #35.#99       // org/apache/commons/io/filefilter/AndFileFilter.fileFilters:Ljava/util/List;\n-    #5 = Methodref          #2.#100       // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n-    #6 = Class              #101          // java/lang/IllegalArgumentException\n-    #7 = String             #102          // The filters must not be null\n-    #8 = Methodref          #6.#103       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #9 = Methodref          #2.#104       // java/util/ArrayList.\"<init>\":(I)V\n-   #10 = Methodref          #35.#105      // org/apache/commons/io/filefilter/AndFileFilter.addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #11 = InterfaceMethodref #106.#107     // java/util/List.add:(Ljava/lang/Object;)Z\n-   #12 = Methodref          #108.#109     // java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n-   #13 = InterfaceMethodref #106.#110     // java/util/List.remove:(Ljava/lang/Object;)Z\n-   #14 = InterfaceMethodref #106.#111     // java/util/List.clear:()V\n-   #15 = InterfaceMethodref #106.#112     // java/util/List.addAll:(Ljava/util/Collection;)Z\n-   #16 = InterfaceMethodref #106.#113     // java/util/List.isEmpty:()Z\n-   #17 = InterfaceMethodref #106.#114     // java/util/List.iterator:()Ljava/util/Iterator;\n-   #18 = InterfaceMethodref #115.#116     // java/util/Iterator.hasNext:()Z\n-   #19 = InterfaceMethodref #115.#117     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #20 = Class              #118          // org/apache/commons/io/filefilter/IOFileFilter\n-   #21 = InterfaceMethodref #20.#119      // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n-   #22 = InterfaceMethodref #20.#120      // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n-   #23 = Class              #121          // java/lang/StringBuilder\n-   #24 = Methodref          #23.#97       // java/lang/StringBuilder.\"<init>\":()V\n-   #25 = Methodref          #36.#122      // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n-   #26 = Methodref          #23.#123      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #27 = String             #124          // (\n-   #28 = InterfaceMethodref #106.#125     // java/util/List.size:()I\n-   #29 = String             #126          // ,\n-   #30 = InterfaceMethodref #106.#127     // java/util/List.get:(I)Ljava/lang/Object;\n-   #31 = String             #128          // null\n-   #32 = Methodref          #129.#122     // java/lang/Object.toString:()Ljava/lang/String;\n-   #33 = String             #130          // )\n-   #34 = Methodref          #23.#122      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #35 = Class              #131          // org/apache/commons/io/filefilter/AndFileFilter\n-   #36 = Class              #132          // org/apache/commons/io/filefilter/AbstractFileFilter\n-   #37 = Class              #133          // org/apache/commons/io/filefilter/ConditionalFileFilter\n-   #38 = Class              #134          // java/io/Serializable\n+    #1 = Methodref          #36.#94       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+    #2 = Class              #95           // java/util/ArrayList\n+    #3 = Methodref          #2.#94        // java/util/ArrayList.\"<init>\":()V\n+    #4 = Fieldref           #35.#96       // org/apache/commons/io/filefilter/AndFileFilter.fileFilters:Ljava/util/List;\n+    #5 = Methodref          #2.#97        // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n+    #6 = Class              #98           // java/lang/IllegalArgumentException\n+    #7 = String             #99           // The filters must not be null\n+    #8 = Methodref          #6.#100       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+    #9 = Methodref          #2.#101       // java/util/ArrayList.\"<init>\":(I)V\n+   #10 = Methodref          #35.#102      // org/apache/commons/io/filefilter/AndFileFilter.addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #11 = InterfaceMethodref #58.#103      // java/util/List.add:(Ljava/lang/Object;)Z\n+   #12 = Methodref          #104.#105     // java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n+   #13 = InterfaceMethodref #58.#106      // java/util/List.remove:(Ljava/lang/Object;)Z\n+   #14 = InterfaceMethodref #58.#107      // java/util/List.clear:()V\n+   #15 = InterfaceMethodref #58.#108      // java/util/List.addAll:(Ljava/util/Collection;)Z\n+   #16 = InterfaceMethodref #58.#109      // java/util/List.isEmpty:()Z\n+   #17 = InterfaceMethodref #58.#110      // java/util/List.iterator:()Ljava/util/Iterator;\n+   #18 = InterfaceMethodref #78.#111      // java/util/Iterator.hasNext:()Z\n+   #19 = InterfaceMethodref #78.#112      // java/util/Iterator.next:()Ljava/lang/Object;\n+   #20 = Class              #113          // org/apache/commons/io/filefilter/IOFileFilter\n+   #21 = InterfaceMethodref #20.#114      // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n+   #22 = InterfaceMethodref #20.#115      // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n+   #23 = Class              #116          // java/lang/StringBuilder\n+   #24 = Methodref          #23.#94       // java/lang/StringBuilder.\"<init>\":()V\n+   #25 = Methodref          #36.#117      // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n+   #26 = Methodref          #23.#118      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #27 = String             #119          // (\n+   #28 = InterfaceMethodref #58.#120      // java/util/List.size:()I\n+   #29 = String             #121          // ,\n+   #30 = InterfaceMethodref #58.#122      // java/util/List.get:(I)Ljava/lang/Object;\n+   #31 = String             #123          // null\n+   #32 = Methodref          #90.#117      // java/lang/Object.toString:()Ljava/lang/String;\n+   #33 = String             #124          // )\n+   #34 = Methodref          #23.#117      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #35 = Class              #125          // org/apache/commons/io/filefilter/AndFileFilter\n+   #36 = Class              #126          // org/apache/commons/io/filefilter/AbstractFileFilter\n+   #37 = Class              #127          // org/apache/commons/io/filefilter/ConditionalFileFilter\n+   #38 = Class              #128          // java/io/Serializable\n    #39 = Utf8               serialVersionUID\n    #40 = Utf8               J\n    #41 = Utf8               ConstantValue\n    #42 = Long               7215974688563965257l\n    #44 = Utf8               fileFilters\n    #45 = Utf8               Ljava/util/List;\n    #46 = Utf8               Signature\n@@ -60,120 +60,114 @@\n    #51 = Utf8               LineNumberTable\n    #52 = Utf8               LocalVariableTable\n    #53 = Utf8               this\n    #54 = Utf8               Lorg/apache/commons/io/filefilter/AndFileFilter;\n    #55 = Utf8               (Ljava/util/List;)V\n    #56 = Utf8               LocalVariableTypeTable\n    #57 = Utf8               StackMapTable\n-   #58 = Class              #131          // org/apache/commons/io/filefilter/AndFileFilter\n-   #59 = Class              #135          // java/util/List\n-   #60 = Utf8               (Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n-   #61 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #62 = Utf8               filter1\n-   #63 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #64 = Utf8               filter2\n-   #65 = Class              #118          // org/apache/commons/io/filefilter/IOFileFilter\n-   #66 = Utf8               addFileFilter\n-   #67 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #68 = Utf8               ioFileFilter\n-   #69 = Utf8               getFileFilters\n-   #70 = Utf8               ()Ljava/util/List;\n-   #71 = Utf8               ()Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n-   #72 = Utf8               removeFileFilter\n-   #73 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)Z\n-   #74 = Utf8               setFileFilters\n-   #75 = Utf8               accept\n-   #76 = Utf8               (Ljava/io/File;)Z\n-   #77 = Utf8               fileFilter\n-   #78 = Utf8               file\n-   #79 = Utf8               Ljava/io/File;\n-   #80 = Class              #136          // java/util/Iterator\n-   #81 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n-   #82 = Utf8               name\n-   #83 = Utf8               Ljava/lang/String;\n-   #84 = Utf8               toString\n-   #85 = Utf8               ()Ljava/lang/String;\n-   #86 = Utf8               filter\n-   #87 = Utf8               Ljava/lang/Object;\n-   #88 = Utf8               i\n-   #89 = Utf8               I\n-   #90 = Utf8               buffer\n-   #91 = Utf8               Ljava/lang/StringBuilder;\n-   #92 = Class              #121          // java/lang/StringBuilder\n-   #93 = Class              #137          // java/lang/Object\n-   #94 = Class              #138          // java/lang/String\n-   #95 = Utf8               SourceFile\n-   #96 = Utf8               AndFileFilter.java\n-   #97 = NameAndType        #48:#49       // \"<init>\":()V\n-   #98 = Utf8               java/util/ArrayList\n-   #99 = NameAndType        #44:#45       // fileFilters:Ljava/util/List;\n-  #100 = NameAndType        #48:#139      // \"<init>\":(Ljava/util/Collection;)V\n-  #101 = Utf8               java/lang/IllegalArgumentException\n-  #102 = Utf8               The filters must not be null\n-  #103 = NameAndType        #48:#140      // \"<init>\":(Ljava/lang/String;)V\n-  #104 = NameAndType        #48:#141      // \"<init>\":(I)V\n-  #105 = NameAndType        #66:#67       // addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-  #106 = Class              #135          // java/util/List\n-  #107 = NameAndType        #142:#143     // add:(Ljava/lang/Object;)Z\n-  #108 = Class              #144          // java/util/Collections\n-  #109 = NameAndType        #145:#146     // unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n-  #110 = NameAndType        #147:#143     // remove:(Ljava/lang/Object;)Z\n-  #111 = NameAndType        #148:#49      // clear:()V\n-  #112 = NameAndType        #149:#150     // addAll:(Ljava/util/Collection;)Z\n-  #113 = NameAndType        #151:#152     // isEmpty:()Z\n-  #114 = NameAndType        #153:#154     // iterator:()Ljava/util/Iterator;\n-  #115 = Class              #136          // java/util/Iterator\n-  #116 = NameAndType        #155:#152     // hasNext:()Z\n-  #117 = NameAndType        #156:#157     // next:()Ljava/lang/Object;\n-  #118 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n-  #119 = NameAndType        #75:#76       // accept:(Ljava/io/File;)Z\n-  #120 = NameAndType        #75:#81       // accept:(Ljava/io/File;Ljava/lang/String;)Z\n-  #121 = Utf8               java/lang/StringBuilder\n-  #122 = NameAndType        #84:#85       // toString:()Ljava/lang/String;\n-  #123 = NameAndType        #158:#159     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #124 = Utf8               (\n-  #125 = NameAndType        #160:#161     // size:()I\n-  #126 = Utf8               ,\n-  #127 = NameAndType        #162:#163     // get:(I)Ljava/lang/Object;\n-  #128 = Utf8               null\n-  #129 = Class              #137          // java/lang/Object\n-  #130 = Utf8               )\n-  #131 = Utf8               org/apache/commons/io/filefilter/AndFileFilter\n-  #132 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-  #133 = Utf8               org/apache/commons/io/filefilter/ConditionalFileFilter\n-  #134 = Utf8               java/io/Serializable\n-  #135 = Utf8               java/util/List\n-  #136 = Utf8               java/util/Iterator\n-  #137 = Utf8               java/lang/Object\n-  #138 = Utf8               java/lang/String\n-  #139 = Utf8               (Ljava/util/Collection;)V\n-  #140 = Utf8               (Ljava/lang/String;)V\n-  #141 = Utf8               (I)V\n-  #142 = Utf8               add\n-  #143 = Utf8               (Ljava/lang/Object;)Z\n-  #144 = Utf8               java/util/Collections\n-  #145 = Utf8               unmodifiableList\n-  #146 = Utf8               (Ljava/util/List;)Ljava/util/List;\n-  #147 = Utf8               remove\n-  #148 = Utf8               clear\n-  #149 = Utf8               addAll\n-  #150 = Utf8               (Ljava/util/Collection;)Z\n-  #151 = Utf8               isEmpty\n-  #152 = Utf8               ()Z\n-  #153 = Utf8               iterator\n-  #154 = Utf8               ()Ljava/util/Iterator;\n-  #155 = Utf8               hasNext\n-  #156 = Utf8               next\n-  #157 = Utf8               ()Ljava/lang/Object;\n-  #158 = Utf8               append\n-  #159 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #160 = Utf8               size\n-  #161 = Utf8               ()I\n-  #162 = Utf8               get\n-  #163 = Utf8               (I)Ljava/lang/Object;\n+   #58 = Class              #129          // java/util/List\n+   #59 = Utf8               (Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n+   #60 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #61 = Utf8               filter1\n+   #62 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #63 = Utf8               filter2\n+   #64 = Utf8               addFileFilter\n+   #65 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #66 = Utf8               ioFileFilter\n+   #67 = Utf8               getFileFilters\n+   #68 = Utf8               ()Ljava/util/List;\n+   #69 = Utf8               ()Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n+   #70 = Utf8               removeFileFilter\n+   #71 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)Z\n+   #72 = Utf8               setFileFilters\n+   #73 = Utf8               accept\n+   #74 = Utf8               (Ljava/io/File;)Z\n+   #75 = Utf8               fileFilter\n+   #76 = Utf8               file\n+   #77 = Utf8               Ljava/io/File;\n+   #78 = Class              #130          // java/util/Iterator\n+   #79 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+   #80 = Utf8               name\n+   #81 = Utf8               Ljava/lang/String;\n+   #82 = Utf8               toString\n+   #83 = Utf8               ()Ljava/lang/String;\n+   #84 = Utf8               filter\n+   #85 = Utf8               Ljava/lang/Object;\n+   #86 = Utf8               i\n+   #87 = Utf8               I\n+   #88 = Utf8               buffer\n+   #89 = Utf8               Ljava/lang/StringBuilder;\n+   #90 = Class              #131          // java/lang/Object\n+   #91 = Class              #132          // java/lang/String\n+   #92 = Utf8               SourceFile\n+   #93 = Utf8               AndFileFilter.java\n+   #94 = NameAndType        #48:#49       // \"<init>\":()V\n+   #95 = Utf8               java/util/ArrayList\n+   #96 = NameAndType        #44:#45       // fileFilters:Ljava/util/List;\n+   #97 = NameAndType        #48:#133      // \"<init>\":(Ljava/util/Collection;)V\n+   #98 = Utf8               java/lang/IllegalArgumentException\n+   #99 = Utf8               The filters must not be null\n+  #100 = NameAndType        #48:#134      // \"<init>\":(Ljava/lang/String;)V\n+  #101 = NameAndType        #48:#135      // \"<init>\":(I)V\n+  #102 = NameAndType        #64:#65       // addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #103 = NameAndType        #136:#137     // add:(Ljava/lang/Object;)Z\n+  #104 = Class              #138          // java/util/Collections\n+  #105 = NameAndType        #139:#140     // unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n+  #106 = NameAndType        #141:#137     // remove:(Ljava/lang/Object;)Z\n+  #107 = NameAndType        #142:#49      // clear:()V\n+  #108 = NameAndType        #143:#144     // addAll:(Ljava/util/Collection;)Z\n+  #109 = NameAndType        #145:#146     // isEmpty:()Z\n+  #110 = NameAndType        #147:#148     // iterator:()Ljava/util/Iterator;\n+  #111 = NameAndType        #149:#146     // hasNext:()Z\n+  #112 = NameAndType        #150:#151     // next:()Ljava/lang/Object;\n+  #113 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n+  #114 = NameAndType        #73:#74       // accept:(Ljava/io/File;)Z\n+  #115 = NameAndType        #73:#79       // accept:(Ljava/io/File;Ljava/lang/String;)Z\n+  #116 = Utf8               java/lang/StringBuilder\n+  #117 = NameAndType        #82:#83       // toString:()Ljava/lang/String;\n+  #118 = NameAndType        #152:#153     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #119 = Utf8               (\n+  #120 = NameAndType        #154:#155     // size:()I\n+  #121 = Utf8               ,\n+  #122 = NameAndType        #156:#157     // get:(I)Ljava/lang/Object;\n+  #123 = Utf8               null\n+  #124 = Utf8               )\n+  #125 = Utf8               org/apache/commons/io/filefilter/AndFileFilter\n+  #126 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+  #127 = Utf8               org/apache/commons/io/filefilter/ConditionalFileFilter\n+  #128 = Utf8               java/io/Serializable\n+  #129 = Utf8               java/util/List\n+  #130 = Utf8               java/util/Iterator\n+  #131 = Utf8               java/lang/Object\n+  #132 = Utf8               java/lang/String\n+  #133 = Utf8               (Ljava/util/Collection;)V\n+  #134 = Utf8               (Ljava/lang/String;)V\n+  #135 = Utf8               (I)V\n+  #136 = Utf8               add\n+  #137 = Utf8               (Ljava/lang/Object;)Z\n+  #138 = Utf8               java/util/Collections\n+  #139 = Utf8               unmodifiableList\n+  #140 = Utf8               (Ljava/util/List;)Ljava/util/List;\n+  #141 = Utf8               remove\n+  #142 = Utf8               clear\n+  #143 = Utf8               addAll\n+  #144 = Utf8               (Ljava/util/Collection;)Z\n+  #145 = Utf8               isEmpty\n+  #146 = Utf8               ()Z\n+  #147 = Utf8               iterator\n+  #148 = Utf8               ()Ljava/util/Iterator;\n+  #149 = Utf8               hasNext\n+  #150 = Utf8               next\n+  #151 = Utf8               ()Ljava/lang/Object;\n+  #152 = Utf8               append\n+  #153 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #154 = Utf8               size\n+  #155 = Utf8               ()I\n+  #156 = Utf8               get\n+  #157 = Utf8               (I)Ljava/lang/Object;\n {\n   private static final long serialVersionUID = 7215974688563965257l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 7215974688563965257l\n \n   private final java.util.List<org.apache.commons.io.filefilter.IOFileFilter> fileFilters;\n@@ -239,15 +233,15 @@\n             0      35     1 fileFilters   Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 255 /* full_frame */\n           offset_delta = 22\n           locals = [ class org/apache/commons/io/filefilter/AndFileFilter, class java/util/List ]\n           stack = []\n         frame_type = 11 /* same */\n-    Signature: #60                          // (Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n+    Signature: #59                          // (Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n \n   public org.apache.commons.io.filefilter.AndFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter);\n     descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n@@ -323,15 +317,15 @@\n          4: invokestatic  #12                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n          7: areturn\n       LineNumberTable:\n         line 99: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/filefilter/AndFileFilter;\n-    Signature: #71                          // ()Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n+    Signature: #69                          // ()Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n \n   public boolean removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter);\n     descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n@@ -367,15 +361,15 @@\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      21     0  this   Lorg/apache/commons/io/filefilter/AndFileFilter;\n             0      21     1 fileFilters   Ljava/util/List;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      21     1 fileFilters   Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n-    Signature: #60                          // (Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n+    Signature: #59                          // (Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n \n   public boolean accept(java.io.File);\n     descriptor: (Ljava/io/File;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=4, args_size=2\n          0: aload_0\n"}]}
