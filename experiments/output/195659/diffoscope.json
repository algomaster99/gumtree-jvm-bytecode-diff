{"diffoscope-json-version": 1, "source1": "first/Validate.class", "source2": "second/Validate.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,362 +1,362 @@\n-  SHA-256 checksum 2d24a8c784fc02f0feebe045ebc1e4e0b84e637c00e36d4a06e672f9fa183fc3\n+  SHA-256 checksum cd92c4222a5908a7a4601808e44860254423c2aece3d4bd745c4a6487bf0ec7b\n   Compiled from \"Validate.java\"\n public class org.apache.commons.lang3.Validate\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #8                          // org/apache/commons/lang3/Validate\n-  super_class: #3                         // java/lang/Object\n+  this_class: #29                         // org/apache/commons/lang3/Validate\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 20, methods: 51, attributes: 1\n Constant pool:\n-    #1 = Methodref          #3.#220       // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #221          // java/lang/IllegalArgumentException\n-    #3 = Class              #222          // java/lang/Object\n-    #4 = Methodref          #223.#224     // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n-    #5 = Methodref          #207.#225     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-    #6 = Methodref          #2.#226       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #7 = Methodref          #227.#228     // java/lang/Double.valueOf:(D)Ljava/lang/Double;\n-    #8 = Class              #229          // org/apache/commons/lang3/Validate\n-    #9 = String             #230          // The validated expression is false\n-   #10 = String             #231          // The validated object is null\n-   #11 = Methodref          #8.#232       // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-   #12 = Class              #233          // java/lang/NullPointerException\n-   #13 = Methodref          #12.#226      // java/lang/NullPointerException.\"<init>\":(Ljava/lang/String;)V\n-   #14 = String             #234          // The validated array is empty\n-   #15 = Methodref          #8.#235       // org/apache/commons/lang3/Validate.notEmpty:([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n-   #16 = InterfaceMethodref #236.#237     // java/util/Collection.isEmpty:()Z\n-   #17 = String             #238          // The validated collection is empty\n-   #18 = Methodref          #8.#239       // org/apache/commons/lang3/Validate.notEmpty:(Ljava/util/Collection;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;\n-   #19 = InterfaceMethodref #240.#237     // java/util/Map.isEmpty:()Z\n-   #20 = String             #241          // The validated map is empty\n-   #21 = Methodref          #8.#242       // org/apache/commons/lang3/Validate.notEmpty:(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Map;\n-   #22 = InterfaceMethodref #243.#244     // java/lang/CharSequence.length:()I\n-   #23 = String             #245          // The validated character sequence is empty\n-   #24 = Methodref          #8.#246       // org/apache/commons/lang3/Validate.notEmpty:(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n-   #25 = Methodref          #247.#248     // org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n-   #26 = String             #249          // The validated character sequence is blank\n-   #27 = Methodref          #8.#250       // org/apache/commons/lang3/Validate.notBlank:(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n-   #28 = Methodref          #8.#251       // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #29 = Methodref          #252.#253     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #30 = Methodref          #254.#255     // org/apache/commons/lang3/ArrayUtils.add:([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;\n-   #31 = String             #256          // The validated array contains null element at index: %d\n-   #32 = Methodref          #8.#257       // org/apache/commons/lang3/Validate.noNullElements:([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n-   #33 = InterfaceMethodref #258.#259     // java/lang/Iterable.iterator:()Ljava/util/Iterator;\n-   #34 = InterfaceMethodref #158.#260     // java/util/Iterator.hasNext:()Z\n-   #35 = InterfaceMethodref #158.#261     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #36 = Methodref          #254.#262     // org/apache/commons/lang3/ArrayUtils.addAll:([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;\n-   #37 = String             #263          // The validated collection contains null element at index: %d\n-   #38 = Methodref          #8.#264       // org/apache/commons/lang3/Validate.noNullElements:(Ljava/lang/Iterable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Iterable;\n-   #39 = Class              #265          // java/lang/IndexOutOfBoundsException\n-   #40 = Methodref          #39.#226      // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n-   #41 = String             #266          // The validated array index is invalid: %d\n-   #42 = Methodref          #8.#267       // org/apache/commons/lang3/Validate.validIndex:([Ljava/lang/Object;ILjava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n-   #43 = InterfaceMethodref #236.#268     // java/util/Collection.size:()I\n-   #44 = String             #269          // The validated collection index is invalid: %d\n-   #45 = Methodref          #8.#270       // org/apache/commons/lang3/Validate.validIndex:(Ljava/util/Collection;ILjava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;\n-   #46 = String             #271          // The validated character sequence index is invalid: %d\n-   #47 = Methodref          #8.#272       // org/apache/commons/lang3/Validate.validIndex:(Ljava/lang/CharSequence;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n-   #48 = Class              #273          // java/lang/IllegalStateException\n-   #49 = String             #274          // The validated state is false\n-   #50 = Methodref          #48.#226      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #51 = Methodref          #275.#276     // java/util/regex/Pattern.matches:(Ljava/lang/String;Ljava/lang/CharSequence;)Z\n-   #52 = String             #277          // The string %s does not match the pattern %s\n-   #53 = String             #278          // The validated value is not a number\n-   #54 = Methodref          #8.#279       // org/apache/commons/lang3/Validate.notNaN:(DLjava/lang/String;[Ljava/lang/Object;)V\n-   #55 = Methodref          #227.#280     // java/lang/Double.isNaN:(D)Z\n-   #56 = String             #281          // The value is invalid: %f\n-   #57 = Methodref          #8.#282       // org/apache/commons/lang3/Validate.finite:(DLjava/lang/String;[Ljava/lang/Object;)V\n-   #58 = Methodref          #227.#283     // java/lang/Double.isInfinite:(D)Z\n-   #59 = InterfaceMethodref #284.#285     // java/lang/Comparable.compareTo:(Ljava/lang/Object;)I\n-   #60 = String             #286          // The value %s is not in the specified inclusive range of %s to %s\n-   #61 = String             #287          // The value %s is not in the specified exclusive range of %s to %s\n-   #62 = Methodref          #206.#288     // java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n-   #63 = String             #289          // Expected type: %s, actual: %s\n-   #64 = Methodref          #206.#290     // java/lang/Class.getName:()Ljava/lang/String;\n-   #65 = String             #291          // null\n-   #66 = Methodref          #3.#292       // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #67 = Methodref          #206.#293     // java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z\n-   #68 = String             #294          // Cannot assign a %s to a %s\n-   #69 = Utf8               DEFAULT_NOT_NAN_EX_MESSAGE\n-   #70 = Utf8               Ljava/lang/String;\n-   #71 = Utf8               ConstantValue\n-   #72 = Utf8               DEFAULT_FINITE_EX_MESSAGE\n-   #73 = Utf8               DEFAULT_EXCLUSIVE_BETWEEN_EX_MESSAGE\n-   #74 = Utf8               DEFAULT_INCLUSIVE_BETWEEN_EX_MESSAGE\n-   #75 = Utf8               DEFAULT_MATCHES_PATTERN_EX\n-   #76 = Utf8               DEFAULT_IS_NULL_EX_MESSAGE\n-   #77 = Utf8               DEFAULT_IS_TRUE_EX_MESSAGE\n-   #78 = Utf8               DEFAULT_NO_NULL_ELEMENTS_ARRAY_EX_MESSAGE\n-   #79 = Utf8               DEFAULT_NO_NULL_ELEMENTS_COLLECTION_EX_MESSAGE\n-   #80 = Utf8               DEFAULT_NOT_BLANK_EX_MESSAGE\n-   #81 = Utf8               DEFAULT_NOT_EMPTY_ARRAY_EX_MESSAGE\n-   #82 = Utf8               DEFAULT_NOT_EMPTY_CHAR_SEQUENCE_EX_MESSAGE\n-   #83 = Utf8               DEFAULT_NOT_EMPTY_COLLECTION_EX_MESSAGE\n-   #84 = Utf8               DEFAULT_NOT_EMPTY_MAP_EX_MESSAGE\n-   #85 = Utf8               DEFAULT_VALID_INDEX_ARRAY_EX_MESSAGE\n-   #86 = Utf8               DEFAULT_VALID_INDEX_CHAR_SEQUENCE_EX_MESSAGE\n-   #87 = Utf8               DEFAULT_VALID_INDEX_COLLECTION_EX_MESSAGE\n-   #88 = Utf8               DEFAULT_VALID_STATE_EX_MESSAGE\n-   #89 = Utf8               DEFAULT_IS_ASSIGNABLE_EX_MESSAGE\n-   #90 = Utf8               DEFAULT_IS_INSTANCE_OF_EX_MESSAGE\n-   #91 = Utf8               <init>\n-   #92 = Utf8               ()V\n-   #93 = Utf8               Code\n-   #94 = Utf8               LineNumberTable\n-   #95 = Utf8               LocalVariableTable\n-   #96 = Utf8               this\n-   #97 = Utf8               Lorg/apache/commons/lang3/Validate;\n-   #98 = Utf8               isTrue\n-   #99 = Utf8               (ZLjava/lang/String;J)V\n-  #100 = Utf8               expression\n-  #101 = Utf8               Z\n-  #102 = Utf8               message\n-  #103 = Utf8               value\n-  #104 = Utf8               J\n-  #105 = Utf8               StackMapTable\n-  #106 = Utf8               (ZLjava/lang/String;D)V\n-  #107 = Utf8               D\n-  #108 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n-  #109 = Utf8               values\n-  #110 = Utf8               [Ljava/lang/Object;\n-  #111 = Utf8               (Z)V\n-  #112 = Utf8               notNull\n-  #113 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #114 = Utf8               object\n-  #115 = Utf8               Ljava/lang/Object;\n-  #116 = Utf8               LocalVariableTypeTable\n-  #117 = Utf8               TT;\n-  #118 = Utf8               Signature\n-  #119 = Utf8               <T:Ljava/lang/Object;>(TT;)TT;\n-  #120 = Utf8               (Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #121 = Utf8               <T:Ljava/lang/Object;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;\n-  #122 = Utf8               notEmpty\n-  #123 = Utf8               ([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n-  #124 = Utf8               array\n-  #125 = Utf8               [TT;\n-  #126 = Utf8               <T:Ljava/lang/Object;>([TT;Ljava/lang/String;[Ljava/lang/Object;)[TT;\n-  #127 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #128 = Utf8               <T:Ljava/lang/Object;>([TT;)[TT;\n-  #129 = Utf8               (Ljava/util/Collection;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;\n-  #130 = Utf8               collection\n-  #131 = Utf8               Ljava/util/Collection;\n-  #132 = Utf8               <T::Ljava/util/Collection<*>;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;\n-  #133 = Utf8               (Ljava/util/Collection;)Ljava/util/Collection;\n-  #134 = Utf8               <T::Ljava/util/Collection<*>;>(TT;)TT;\n-  #135 = Utf8               (Ljava/util/Map;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Map;\n-  #136 = Utf8               map\n-  #137 = Utf8               Ljava/util/Map;\n-  #138 = Utf8               <T::Ljava/util/Map<**>;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;\n-  #139 = Utf8               (Ljava/util/Map;)Ljava/util/Map;\n-  #140 = Utf8               <T::Ljava/util/Map<**>;>(TT;)TT;\n-  #141 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n-  #142 = Utf8               chars\n-  #143 = Utf8               Ljava/lang/CharSequence;\n-  #144 = Utf8               <T::Ljava/lang/CharSequence;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;\n-  #145 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n-  #146 = Utf8               <T::Ljava/lang/CharSequence;>(TT;)TT;\n-  #147 = Utf8               notBlank\n-  #148 = Utf8               noNullElements\n-  #149 = Utf8               values2\n-  #150 = Utf8               i\n-  #151 = Utf8               I\n-  #152 = Utf8               (Ljava/lang/Iterable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Iterable;\n-  #153 = Utf8               it\n-  #154 = Utf8               Ljava/util/Iterator;\n-  #155 = Utf8               iterable\n-  #156 = Utf8               Ljava/lang/Iterable;\n-  #157 = Utf8               Ljava/util/Iterator<*>;\n-  #158 = Class              #295          // java/util/Iterator\n-  #159 = Utf8               <T::Ljava/lang/Iterable<*>;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;\n-  #160 = Utf8               (Ljava/lang/Iterable;)Ljava/lang/Iterable;\n-  #161 = Utf8               <T::Ljava/lang/Iterable<*>;>(TT;)TT;\n-  #162 = Utf8               validIndex\n-  #163 = Utf8               ([Ljava/lang/Object;ILjava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n-  #164 = Utf8               index\n-  #165 = Utf8               <T:Ljava/lang/Object;>([TT;ILjava/lang/String;[Ljava/lang/Object;)[TT;\n-  #166 = Utf8               ([Ljava/lang/Object;I)[Ljava/lang/Object;\n-  #167 = Utf8               <T:Ljava/lang/Object;>([TT;I)[TT;\n-  #168 = Utf8               (Ljava/util/Collection;ILjava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;\n-  #169 = Utf8               <T::Ljava/util/Collection<*>;>(TT;ILjava/lang/String;[Ljava/lang/Object;)TT;\n-  #170 = Utf8               (Ljava/util/Collection;I)Ljava/util/Collection;\n-  #171 = Utf8               <T::Ljava/util/Collection<*>;>(TT;I)TT;\n-  #172 = Utf8               (Ljava/lang/CharSequence;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n-  #173 = Utf8               <T::Ljava/lang/CharSequence;>(TT;ILjava/lang/String;[Ljava/lang/Object;)TT;\n-  #174 = Utf8               (Ljava/lang/CharSequence;I)Ljava/lang/CharSequence;\n-  #175 = Utf8               <T::Ljava/lang/CharSequence;>(TT;I)TT;\n-  #176 = Utf8               validState\n-  #177 = Utf8               matchesPattern\n-  #178 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/String;)V\n-  #179 = Utf8               input\n-  #180 = Utf8               pattern\n-  #181 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V\n-  #182 = Utf8               notNaN\n-  #183 = Utf8               (D)V\n-  #184 = Utf8               (DLjava/lang/String;[Ljava/lang/Object;)V\n-  #185 = Utf8               finite\n-  #186 = Utf8               inclusiveBetween\n-  #187 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Comparable;)V\n-  #188 = Utf8               start\n-  #189 = Utf8               end\n-  #190 = Utf8               Ljava/lang/Comparable;\n-  #191 = Utf8               Ljava/lang/Comparable<TT;>;\n-  #192 = Utf8               <T:Ljava/lang/Object;>(TT;TT;Ljava/lang/Comparable<TT;>;)V\n-  #193 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/String;[Ljava/lang/Object;)V\n-  #194 = Utf8               <T:Ljava/lang/Object;>(TT;TT;Ljava/lang/Comparable<TT;>;Ljava/lang/String;[Ljava/lang/Object;)V\n-  #195 = Utf8               (JJJ)V\n-  #196 = Utf8               (JJJLjava/lang/String;)V\n-  #197 = Utf8               (DDD)V\n-  #198 = Utf8               (DDDLjava/lang/String;)V\n-  #199 = Utf8               exclusiveBetween\n-  #200 = Utf8               isInstanceOf\n-  #201 = Utf8               (Ljava/lang/Class;Ljava/lang/Object;)V\n-  #202 = Utf8               type\n-  #203 = Utf8               Ljava/lang/Class;\n-  #204 = Utf8               obj\n-  #205 = Utf8               Ljava/lang/Class<*>;\n-  #206 = Class              #296          // java/lang/Class\n-  #207 = Class              #297          // java/lang/String\n-  #208 = Class              #110          // \"[Ljava/lang/Object;\"\n-  #209 = Utf8               (Ljava/lang/Class<*>;Ljava/lang/Object;)V\n-  #210 = Utf8               (Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V\n-  #211 = Utf8               (Ljava/lang/Class<*>;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V\n-  #212 = Utf8               isAssignableFrom\n-  #213 = Utf8               (Ljava/lang/Class;Ljava/lang/Class;)V\n-  #214 = Utf8               superType\n-  #215 = Utf8               (Ljava/lang/Class<*>;Ljava/lang/Class<*>;)V\n-  #216 = Utf8               (Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)V\n-  #217 = Utf8               (Ljava/lang/Class<*>;Ljava/lang/Class<*>;Ljava/lang/String;[Ljava/lang/Object;)V\n-  #218 = Utf8               SourceFile\n-  #219 = Utf8               Validate.java\n-  #220 = NameAndType        #91:#92       // \"<init>\":()V\n-  #221 = Utf8               java/lang/IllegalArgumentException\n-  #222 = Utf8               java/lang/Object\n-  #223 = Class              #298          // java/lang/Long\n-  #224 = NameAndType        #299:#300     // valueOf:(J)Ljava/lang/Long;\n-  #225 = NameAndType        #301:#302     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #226 = NameAndType        #91:#303      // \"<init>\":(Ljava/lang/String;)V\n-  #227 = Class              #304          // java/lang/Double\n-  #228 = NameAndType        #299:#305     // valueOf:(D)Ljava/lang/Double;\n-  #229 = Utf8               org/apache/commons/lang3/Validate\n-  #230 = Utf8               The validated expression is false\n-  #231 = Utf8               The validated object is null\n-  #232 = NameAndType        #112:#120     // notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #233 = Utf8               java/lang/NullPointerException\n-  #234 = Utf8               The validated array is empty\n-  #235 = NameAndType        #122:#123     // notEmpty:([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n-  #236 = Class              #306          // java/util/Collection\n-  #237 = NameAndType        #307:#308     // isEmpty:()Z\n-  #238 = Utf8               The validated collection is empty\n-  #239 = NameAndType        #122:#129     // notEmpty:(Ljava/util/Collection;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;\n-  #240 = Class              #309          // java/util/Map\n-  #241 = Utf8               The validated map is empty\n-  #242 = NameAndType        #122:#135     // notEmpty:(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Map;\n-  #243 = Class              #310          // java/lang/CharSequence\n-  #244 = NameAndType        #311:#312     // length:()I\n-  #245 = Utf8               The validated character sequence is empty\n-  #246 = NameAndType        #122:#141     // notEmpty:(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n-  #247 = Class              #313          // org/apache/commons/lang3/StringUtils\n-  #248 = NameAndType        #314:#315     // isBlank:(Ljava/lang/CharSequence;)Z\n-  #249 = Utf8               The validated character sequence is blank\n-  #250 = NameAndType        #147:#141     // notBlank:(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n-  #251 = NameAndType        #112:#113     // notNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #252 = Class              #316          // java/lang/Integer\n-  #253 = NameAndType        #299:#317     // valueOf:(I)Ljava/lang/Integer;\n-  #254 = Class              #318          // org/apache/commons/lang3/ArrayUtils\n-  #255 = NameAndType        #319:#320     // add:([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;\n-  #256 = Utf8               The validated array contains null element at index: %d\n-  #257 = NameAndType        #148:#123     // noNullElements:([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n-  #258 = Class              #321          // java/lang/Iterable\n-  #259 = NameAndType        #322:#323     // iterator:()Ljava/util/Iterator;\n-  #260 = NameAndType        #324:#308     // hasNext:()Z\n-  #261 = NameAndType        #325:#326     // next:()Ljava/lang/Object;\n-  #262 = NameAndType        #327:#328     // addAll:([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;\n-  #263 = Utf8               The validated collection contains null element at index: %d\n-  #264 = NameAndType        #148:#152     // noNullElements:(Ljava/lang/Iterable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Iterable;\n-  #265 = Utf8               java/lang/IndexOutOfBoundsException\n-  #266 = Utf8               The validated array index is invalid: %d\n-  #267 = NameAndType        #162:#163     // validIndex:([Ljava/lang/Object;ILjava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n-  #268 = NameAndType        #329:#312     // size:()I\n-  #269 = Utf8               The validated collection index is invalid: %d\n-  #270 = NameAndType        #162:#168     // validIndex:(Ljava/util/Collection;ILjava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;\n-  #271 = Utf8               The validated character sequence index is invalid: %d\n-  #272 = NameAndType        #162:#172     // validIndex:(Ljava/lang/CharSequence;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n-  #273 = Utf8               java/lang/IllegalStateException\n-  #274 = Utf8               The validated state is false\n-  #275 = Class              #330          // java/util/regex/Pattern\n-  #276 = NameAndType        #331:#332     // matches:(Ljava/lang/String;Ljava/lang/CharSequence;)Z\n-  #277 = Utf8               The string %s does not match the pattern %s\n-  #278 = Utf8               The validated value is not a number\n-  #279 = NameAndType        #182:#184     // notNaN:(DLjava/lang/String;[Ljava/lang/Object;)V\n-  #280 = NameAndType        #333:#334     // isNaN:(D)Z\n-  #281 = Utf8               The value is invalid: %f\n-  #282 = NameAndType        #185:#184     // finite:(DLjava/lang/String;[Ljava/lang/Object;)V\n-  #283 = NameAndType        #335:#334     // isInfinite:(D)Z\n-  #284 = Class              #336          // java/lang/Comparable\n-  #285 = NameAndType        #337:#338     // compareTo:(Ljava/lang/Object;)I\n-  #286 = Utf8               The value %s is not in the specified inclusive range of %s to %s\n-  #287 = Utf8               The value %s is not in the specified exclusive range of %s to %s\n-  #288 = NameAndType        #339:#340     // isInstance:(Ljava/lang/Object;)Z\n-  #289 = Utf8               Expected type: %s, actual: %s\n-  #290 = NameAndType        #341:#342     // getName:()Ljava/lang/String;\n-  #291 = Utf8               null\n-  #292 = NameAndType        #343:#344     // getClass:()Ljava/lang/Class;\n-  #293 = NameAndType        #212:#345     // isAssignableFrom:(Ljava/lang/Class;)Z\n-  #294 = Utf8               Cannot assign a %s to a %s\n-  #295 = Utf8               java/util/Iterator\n-  #296 = Utf8               java/lang/Class\n-  #297 = Utf8               java/lang/String\n-  #298 = Utf8               java/lang/Long\n-  #299 = Utf8               valueOf\n-  #300 = Utf8               (J)Ljava/lang/Long;\n-  #301 = Utf8               format\n-  #302 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #303 = Utf8               (Ljava/lang/String;)V\n-  #304 = Utf8               java/lang/Double\n-  #305 = Utf8               (D)Ljava/lang/Double;\n-  #306 = Utf8               java/util/Collection\n-  #307 = Utf8               isEmpty\n-  #308 = Utf8               ()Z\n-  #309 = Utf8               java/util/Map\n-  #310 = Utf8               java/lang/CharSequence\n-  #311 = Utf8               length\n-  #312 = Utf8               ()I\n-  #313 = Utf8               org/apache/commons/lang3/StringUtils\n-  #314 = Utf8               isBlank\n-  #315 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #316 = Utf8               java/lang/Integer\n-  #317 = Utf8               (I)Ljava/lang/Integer;\n-  #318 = Utf8               org/apache/commons/lang3/ArrayUtils\n-  #319 = Utf8               add\n-  #320 = Utf8               ([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;\n-  #321 = Utf8               java/lang/Iterable\n-  #322 = Utf8               iterator\n-  #323 = Utf8               ()Ljava/util/Iterator;\n-  #324 = Utf8               hasNext\n-  #325 = Utf8               next\n-  #326 = Utf8               ()Ljava/lang/Object;\n-  #327 = Utf8               addAll\n-  #328 = Utf8               ([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;\n-  #329 = Utf8               size\n-  #330 = Utf8               java/util/regex/Pattern\n-  #331 = Utf8               matches\n-  #332 = Utf8               (Ljava/lang/String;Ljava/lang/CharSequence;)Z\n-  #333 = Utf8               isNaN\n-  #334 = Utf8               (D)Z\n-  #335 = Utf8               isInfinite\n-  #336 = Utf8               java/lang/Comparable\n-  #337 = Utf8               compareTo\n-  #338 = Utf8               (Ljava/lang/Object;)I\n-  #339 = Utf8               isInstance\n-  #340 = Utf8               (Ljava/lang/Object;)Z\n-  #341 = Utf8               getName\n-  #342 = Utf8               ()Ljava/lang/String;\n-  #343 = Utf8               getClass\n-  #344 = Utf8               ()Ljava/lang/Class;\n-  #345 = Utf8               (Ljava/lang/Class;)Z\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Class              #8            // java/lang/IllegalArgumentException\n+    #8 = Utf8               java/lang/IllegalArgumentException\n+    #9 = Methodref          #10.#11       // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+   #10 = Class              #12           // java/lang/Long\n+   #11 = NameAndType        #13:#14       // valueOf:(J)Ljava/lang/Long;\n+   #12 = Utf8               java/lang/Long\n+   #13 = Utf8               valueOf\n+   #14 = Utf8               (J)Ljava/lang/Long;\n+   #15 = Methodref          #16.#17       // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #16 = Class              #18           // java/lang/String\n+   #17 = NameAndType        #19:#20       // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #18 = Utf8               java/lang/String\n+   #19 = Utf8               format\n+   #20 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #21 = Methodref          #7.#22        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #22 = NameAndType        #5:#23        // \"<init>\":(Ljava/lang/String;)V\n+   #23 = Utf8               (Ljava/lang/String;)V\n+   #24 = Methodref          #25.#26       // java/lang/Double.valueOf:(D)Ljava/lang/Double;\n+   #25 = Class              #27           // java/lang/Double\n+   #26 = NameAndType        #13:#28       // valueOf:(D)Ljava/lang/Double;\n+   #27 = Utf8               java/lang/Double\n+   #28 = Utf8               (D)Ljava/lang/Double;\n+   #29 = Class              #30           // org/apache/commons/lang3/Validate\n+   #30 = Utf8               org/apache/commons/lang3/Validate\n+   #31 = String             #32           // The validated expression is false\n+   #32 = Utf8               The validated expression is false\n+   #33 = String             #34           // The validated object is null\n+   #34 = Utf8               The validated object is null\n+   #35 = Methodref          #29.#36       // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+   #36 = NameAndType        #37:#38       // notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+   #37 = Utf8               notNull\n+   #38 = Utf8               (Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+   #39 = Class              #40           // java/lang/NullPointerException\n+   #40 = Utf8               java/lang/NullPointerException\n+   #41 = Methodref          #39.#22       // java/lang/NullPointerException.\"<init>\":(Ljava/lang/String;)V\n+   #42 = String             #43           // The validated array is empty\n+   #43 = Utf8               The validated array is empty\n+   #44 = Methodref          #29.#45       // org/apache/commons/lang3/Validate.notEmpty:([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n+   #45 = NameAndType        #46:#47       // notEmpty:([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n+   #46 = Utf8               notEmpty\n+   #47 = Utf8               ([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n+   #48 = InterfaceMethodref #49.#50       // java/util/Collection.isEmpty:()Z\n+   #49 = Class              #51           // java/util/Collection\n+   #50 = NameAndType        #52:#53       // isEmpty:()Z\n+   #51 = Utf8               java/util/Collection\n+   #52 = Utf8               isEmpty\n+   #53 = Utf8               ()Z\n+   #54 = String             #55           // The validated collection is empty\n+   #55 = Utf8               The validated collection is empty\n+   #56 = Methodref          #29.#57       // org/apache/commons/lang3/Validate.notEmpty:(Ljava/util/Collection;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;\n+   #57 = NameAndType        #46:#58       // notEmpty:(Ljava/util/Collection;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;\n+   #58 = Utf8               (Ljava/util/Collection;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;\n+   #59 = InterfaceMethodref #60.#50       // java/util/Map.isEmpty:()Z\n+   #60 = Class              #61           // java/util/Map\n+   #61 = Utf8               java/util/Map\n+   #62 = String             #63           // The validated map is empty\n+   #63 = Utf8               The validated map is empty\n+   #64 = Methodref          #29.#65       // org/apache/commons/lang3/Validate.notEmpty:(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Map;\n+   #65 = NameAndType        #46:#66       // notEmpty:(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Map;\n+   #66 = Utf8               (Ljava/util/Map;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Map;\n+   #67 = InterfaceMethodref #68.#69       // java/lang/CharSequence.length:()I\n+   #68 = Class              #70           // java/lang/CharSequence\n+   #69 = NameAndType        #71:#72       // length:()I\n+   #70 = Utf8               java/lang/CharSequence\n+   #71 = Utf8               length\n+   #72 = Utf8               ()I\n+   #73 = String             #74           // The validated character sequence is empty\n+   #74 = Utf8               The validated character sequence is empty\n+   #75 = Methodref          #29.#76       // org/apache/commons/lang3/Validate.notEmpty:(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n+   #76 = NameAndType        #46:#77       // notEmpty:(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n+   #77 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n+   #78 = Methodref          #79.#80       // org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n+   #79 = Class              #81           // org/apache/commons/lang3/StringUtils\n+   #80 = NameAndType        #82:#83       // isBlank:(Ljava/lang/CharSequence;)Z\n+   #81 = Utf8               org/apache/commons/lang3/StringUtils\n+   #82 = Utf8               isBlank\n+   #83 = Utf8               (Ljava/lang/CharSequence;)Z\n+   #84 = String             #85           // The validated character sequence is blank\n+   #85 = Utf8               The validated character sequence is blank\n+   #86 = Methodref          #29.#87       // org/apache/commons/lang3/Validate.notBlank:(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n+   #87 = NameAndType        #88:#77       // notBlank:(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n+   #88 = Utf8               notBlank\n+   #89 = Methodref          #29.#90       // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #90 = NameAndType        #37:#91       // notNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #91 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #92 = Methodref          #93.#94       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+   #93 = Class              #95           // java/lang/Integer\n+   #94 = NameAndType        #13:#96       // valueOf:(I)Ljava/lang/Integer;\n+   #95 = Utf8               java/lang/Integer\n+   #96 = Utf8               (I)Ljava/lang/Integer;\n+   #97 = Methodref          #98.#99       // org/apache/commons/lang3/ArrayUtils.add:([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;\n+   #98 = Class              #100          // org/apache/commons/lang3/ArrayUtils\n+   #99 = NameAndType        #101:#102     // add:([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;\n+  #100 = Utf8               org/apache/commons/lang3/ArrayUtils\n+  #101 = Utf8               add\n+  #102 = Utf8               ([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;\n+  #103 = String             #104          // The validated array contains null element at index: %d\n+  #104 = Utf8               The validated array contains null element at index: %d\n+  #105 = Methodref          #29.#106      // org/apache/commons/lang3/Validate.noNullElements:([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n+  #106 = NameAndType        #107:#47      // noNullElements:([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n+  #107 = Utf8               noNullElements\n+  #108 = InterfaceMethodref #109.#110     // java/lang/Iterable.iterator:()Ljava/util/Iterator;\n+  #109 = Class              #111          // java/lang/Iterable\n+  #110 = NameAndType        #112:#113     // iterator:()Ljava/util/Iterator;\n+  #111 = Utf8               java/lang/Iterable\n+  #112 = Utf8               iterator\n+  #113 = Utf8               ()Ljava/util/Iterator;\n+  #114 = InterfaceMethodref #115.#116     // java/util/Iterator.hasNext:()Z\n+  #115 = Class              #117          // java/util/Iterator\n+  #116 = NameAndType        #118:#53      // hasNext:()Z\n+  #117 = Utf8               java/util/Iterator\n+  #118 = Utf8               hasNext\n+  #119 = InterfaceMethodref #115.#120     // java/util/Iterator.next:()Ljava/lang/Object;\n+  #120 = NameAndType        #121:#122     // next:()Ljava/lang/Object;\n+  #121 = Utf8               next\n+  #122 = Utf8               ()Ljava/lang/Object;\n+  #123 = Methodref          #98.#124      // org/apache/commons/lang3/ArrayUtils.addAll:([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;\n+  #124 = NameAndType        #125:#126     // addAll:([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;\n+  #125 = Utf8               addAll\n+  #126 = Utf8               ([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;\n+  #127 = String             #128          // The validated collection contains null element at index: %d\n+  #128 = Utf8               The validated collection contains null element at index: %d\n+  #129 = Methodref          #29.#130      // org/apache/commons/lang3/Validate.noNullElements:(Ljava/lang/Iterable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Iterable;\n+  #130 = NameAndType        #107:#131     // noNullElements:(Ljava/lang/Iterable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Iterable;\n+  #131 = Utf8               (Ljava/lang/Iterable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Iterable;\n+  #132 = Class              #133          // java/lang/IndexOutOfBoundsException\n+  #133 = Utf8               java/lang/IndexOutOfBoundsException\n+  #134 = Methodref          #132.#22      // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+  #135 = String             #136          // The validated array index is invalid: %d\n+  #136 = Utf8               The validated array index is invalid: %d\n+  #137 = Methodref          #29.#138      // org/apache/commons/lang3/Validate.validIndex:([Ljava/lang/Object;ILjava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n+  #138 = NameAndType        #139:#140     // validIndex:([Ljava/lang/Object;ILjava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n+  #139 = Utf8               validIndex\n+  #140 = Utf8               ([Ljava/lang/Object;ILjava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n+  #141 = InterfaceMethodref #49.#142      // java/util/Collection.size:()I\n+  #142 = NameAndType        #143:#72      // size:()I\n+  #143 = Utf8               size\n+  #144 = String             #145          // The validated collection index is invalid: %d\n+  #145 = Utf8               The validated collection index is invalid: %d\n+  #146 = Methodref          #29.#147      // org/apache/commons/lang3/Validate.validIndex:(Ljava/util/Collection;ILjava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;\n+  #147 = NameAndType        #139:#148     // validIndex:(Ljava/util/Collection;ILjava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;\n+  #148 = Utf8               (Ljava/util/Collection;ILjava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;\n+  #149 = String             #150          // The validated character sequence index is invalid: %d\n+  #150 = Utf8               The validated character sequence index is invalid: %d\n+  #151 = Methodref          #29.#152      // org/apache/commons/lang3/Validate.validIndex:(Ljava/lang/CharSequence;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n+  #152 = NameAndType        #139:#153     // validIndex:(Ljava/lang/CharSequence;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n+  #153 = Utf8               (Ljava/lang/CharSequence;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n+  #154 = Class              #155          // java/lang/IllegalStateException\n+  #155 = Utf8               java/lang/IllegalStateException\n+  #156 = String             #157          // The validated state is false\n+  #157 = Utf8               The validated state is false\n+  #158 = Methodref          #154.#22      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+  #159 = Methodref          #160.#161     // java/util/regex/Pattern.matches:(Ljava/lang/String;Ljava/lang/CharSequence;)Z\n+  #160 = Class              #162          // java/util/regex/Pattern\n+  #161 = NameAndType        #163:#164     // matches:(Ljava/lang/String;Ljava/lang/CharSequence;)Z\n+  #162 = Utf8               java/util/regex/Pattern\n+  #163 = Utf8               matches\n+  #164 = Utf8               (Ljava/lang/String;Ljava/lang/CharSequence;)Z\n+  #165 = String             #166          // The string %s does not match the pattern %s\n+  #166 = Utf8               The string %s does not match the pattern %s\n+  #167 = String             #168          // The validated value is not a number\n+  #168 = Utf8               The validated value is not a number\n+  #169 = Methodref          #29.#170      // org/apache/commons/lang3/Validate.notNaN:(DLjava/lang/String;[Ljava/lang/Object;)V\n+  #170 = NameAndType        #171:#172     // notNaN:(DLjava/lang/String;[Ljava/lang/Object;)V\n+  #171 = Utf8               notNaN\n+  #172 = Utf8               (DLjava/lang/String;[Ljava/lang/Object;)V\n+  #173 = Methodref          #25.#174      // java/lang/Double.isNaN:(D)Z\n+  #174 = NameAndType        #175:#176     // isNaN:(D)Z\n+  #175 = Utf8               isNaN\n+  #176 = Utf8               (D)Z\n+  #177 = String             #178          // The value is invalid: %f\n+  #178 = Utf8               The value is invalid: %f\n+  #179 = Methodref          #29.#180      // org/apache/commons/lang3/Validate.finite:(DLjava/lang/String;[Ljava/lang/Object;)V\n+  #180 = NameAndType        #181:#172     // finite:(DLjava/lang/String;[Ljava/lang/Object;)V\n+  #181 = Utf8               finite\n+  #182 = Methodref          #25.#183      // java/lang/Double.isInfinite:(D)Z\n+  #183 = NameAndType        #184:#176     // isInfinite:(D)Z\n+  #184 = Utf8               isInfinite\n+  #185 = InterfaceMethodref #186.#187     // java/lang/Comparable.compareTo:(Ljava/lang/Object;)I\n+  #186 = Class              #188          // java/lang/Comparable\n+  #187 = NameAndType        #189:#190     // compareTo:(Ljava/lang/Object;)I\n+  #188 = Utf8               java/lang/Comparable\n+  #189 = Utf8               compareTo\n+  #190 = Utf8               (Ljava/lang/Object;)I\n+  #191 = String             #192          // The value %s is not in the specified inclusive range of %s to %s\n+  #192 = Utf8               The value %s is not in the specified inclusive range of %s to %s\n+  #193 = String             #194          // The value %s is not in the specified exclusive range of %s to %s\n+  #194 = Utf8               The value %s is not in the specified exclusive range of %s to %s\n+  #195 = Methodref          #196.#197     // java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n+  #196 = Class              #198          // java/lang/Class\n+  #197 = NameAndType        #199:#200     // isInstance:(Ljava/lang/Object;)Z\n+  #198 = Utf8               java/lang/Class\n+  #199 = Utf8               isInstance\n+  #200 = Utf8               (Ljava/lang/Object;)Z\n+  #201 = String             #202          // Expected type: %s, actual: %s\n+  #202 = Utf8               Expected type: %s, actual: %s\n+  #203 = Methodref          #196.#204     // java/lang/Class.getName:()Ljava/lang/String;\n+  #204 = NameAndType        #205:#206     // getName:()Ljava/lang/String;\n+  #205 = Utf8               getName\n+  #206 = Utf8               ()Ljava/lang/String;\n+  #207 = String             #208          // null\n+  #208 = Utf8               null\n+  #209 = Methodref          #2.#210       // java/lang/Object.getClass:()Ljava/lang/Class;\n+  #210 = NameAndType        #211:#212     // getClass:()Ljava/lang/Class;\n+  #211 = Utf8               getClass\n+  #212 = Utf8               ()Ljava/lang/Class;\n+  #213 = Methodref          #196.#214     // java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z\n+  #214 = NameAndType        #215:#216     // isAssignableFrom:(Ljava/lang/Class;)Z\n+  #215 = Utf8               isAssignableFrom\n+  #216 = Utf8               (Ljava/lang/Class;)Z\n+  #217 = String             #218          // Cannot assign a %s to a %s\n+  #218 = Utf8               Cannot assign a %s to a %s\n+  #219 = Utf8               DEFAULT_NOT_NAN_EX_MESSAGE\n+  #220 = Utf8               Ljava/lang/String;\n+  #221 = Utf8               ConstantValue\n+  #222 = Utf8               DEFAULT_FINITE_EX_MESSAGE\n+  #223 = Utf8               DEFAULT_EXCLUSIVE_BETWEEN_EX_MESSAGE\n+  #224 = Utf8               DEFAULT_INCLUSIVE_BETWEEN_EX_MESSAGE\n+  #225 = Utf8               DEFAULT_MATCHES_PATTERN_EX\n+  #226 = Utf8               DEFAULT_IS_NULL_EX_MESSAGE\n+  #227 = Utf8               DEFAULT_IS_TRUE_EX_MESSAGE\n+  #228 = Utf8               DEFAULT_NO_NULL_ELEMENTS_ARRAY_EX_MESSAGE\n+  #229 = Utf8               DEFAULT_NO_NULL_ELEMENTS_COLLECTION_EX_MESSAGE\n+  #230 = Utf8               DEFAULT_NOT_BLANK_EX_MESSAGE\n+  #231 = Utf8               DEFAULT_NOT_EMPTY_ARRAY_EX_MESSAGE\n+  #232 = Utf8               DEFAULT_NOT_EMPTY_CHAR_SEQUENCE_EX_MESSAGE\n+  #233 = Utf8               DEFAULT_NOT_EMPTY_COLLECTION_EX_MESSAGE\n+  #234 = Utf8               DEFAULT_NOT_EMPTY_MAP_EX_MESSAGE\n+  #235 = Utf8               DEFAULT_VALID_INDEX_ARRAY_EX_MESSAGE\n+  #236 = Utf8               DEFAULT_VALID_INDEX_CHAR_SEQUENCE_EX_MESSAGE\n+  #237 = Utf8               DEFAULT_VALID_INDEX_COLLECTION_EX_MESSAGE\n+  #238 = Utf8               DEFAULT_VALID_STATE_EX_MESSAGE\n+  #239 = Utf8               DEFAULT_IS_ASSIGNABLE_EX_MESSAGE\n+  #240 = Utf8               DEFAULT_IS_INSTANCE_OF_EX_MESSAGE\n+  #241 = Utf8               Code\n+  #242 = Utf8               LineNumberTable\n+  #243 = Utf8               LocalVariableTable\n+  #244 = Utf8               this\n+  #245 = Utf8               Lorg/apache/commons/lang3/Validate;\n+  #246 = Utf8               isTrue\n+  #247 = Utf8               (ZLjava/lang/String;J)V\n+  #248 = Utf8               expression\n+  #249 = Utf8               Z\n+  #250 = Utf8               message\n+  #251 = Utf8               value\n+  #252 = Utf8               J\n+  #253 = Utf8               StackMapTable\n+  #254 = Utf8               (ZLjava/lang/String;D)V\n+  #255 = Utf8               D\n+  #256 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #257 = Utf8               values\n+  #258 = Utf8               [Ljava/lang/Object;\n+  #259 = Utf8               (Z)V\n+  #260 = Utf8               object\n+  #261 = Utf8               Ljava/lang/Object;\n+  #262 = Utf8               LocalVariableTypeTable\n+  #263 = Utf8               TT;\n+  #264 = Utf8               Signature\n+  #265 = Utf8               <T:Ljava/lang/Object;>(TT;)TT;\n+  #266 = Utf8               <T:Ljava/lang/Object;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;\n+  #267 = Utf8               array\n+  #268 = Utf8               [TT;\n+  #269 = Utf8               <T:Ljava/lang/Object;>([TT;Ljava/lang/String;[Ljava/lang/Object;)[TT;\n+  #270 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #271 = Utf8               <T:Ljava/lang/Object;>([TT;)[TT;\n+  #272 = Utf8               collection\n+  #273 = Utf8               Ljava/util/Collection;\n+  #274 = Utf8               <T::Ljava/util/Collection<*>;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;\n+  #275 = Utf8               (Ljava/util/Collection;)Ljava/util/Collection;\n+  #276 = Utf8               <T::Ljava/util/Collection<*>;>(TT;)TT;\n+  #277 = Utf8               map\n+  #278 = Utf8               Ljava/util/Map;\n+  #279 = Utf8               <T::Ljava/util/Map<**>;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;\n+  #280 = Utf8               (Ljava/util/Map;)Ljava/util/Map;\n+  #281 = Utf8               <T::Ljava/util/Map<**>;>(TT;)TT;\n+  #282 = Utf8               chars\n+  #283 = Utf8               Ljava/lang/CharSequence;\n+  #284 = Utf8               <T::Ljava/lang/CharSequence;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;\n+  #285 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n+  #286 = Utf8               <T::Ljava/lang/CharSequence;>(TT;)TT;\n+  #287 = Utf8               values2\n+  #288 = Utf8               i\n+  #289 = Utf8               I\n+  #290 = Utf8               it\n+  #291 = Utf8               Ljava/util/Iterator;\n+  #292 = Utf8               iterable\n+  #293 = Utf8               Ljava/lang/Iterable;\n+  #294 = Utf8               Ljava/util/Iterator<*>;\n+  #295 = Utf8               <T::Ljava/lang/Iterable<*>;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;\n+  #296 = Utf8               (Ljava/lang/Iterable;)Ljava/lang/Iterable;\n+  #297 = Utf8               <T::Ljava/lang/Iterable<*>;>(TT;)TT;\n+  #298 = Utf8               index\n+  #299 = Utf8               <T:Ljava/lang/Object;>([TT;ILjava/lang/String;[Ljava/lang/Object;)[TT;\n+  #300 = Utf8               ([Ljava/lang/Object;I)[Ljava/lang/Object;\n+  #301 = Utf8               <T:Ljava/lang/Object;>([TT;I)[TT;\n+  #302 = Utf8               <T::Ljava/util/Collection<*>;>(TT;ILjava/lang/String;[Ljava/lang/Object;)TT;\n+  #303 = Utf8               (Ljava/util/Collection;I)Ljava/util/Collection;\n+  #304 = Utf8               <T::Ljava/util/Collection<*>;>(TT;I)TT;\n+  #305 = Utf8               <T::Ljava/lang/CharSequence;>(TT;ILjava/lang/String;[Ljava/lang/Object;)TT;\n+  #306 = Utf8               (Ljava/lang/CharSequence;I)Ljava/lang/CharSequence;\n+  #307 = Utf8               <T::Ljava/lang/CharSequence;>(TT;I)TT;\n+  #308 = Utf8               validState\n+  #309 = Utf8               matchesPattern\n+  #310 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/String;)V\n+  #311 = Utf8               input\n+  #312 = Utf8               pattern\n+  #313 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V\n+  #314 = Utf8               (D)V\n+  #315 = Utf8               inclusiveBetween\n+  #316 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Comparable;)V\n+  #317 = Utf8               start\n+  #318 = Utf8               end\n+  #319 = Utf8               Ljava/lang/Comparable;\n+  #320 = Utf8               Ljava/lang/Comparable<TT;>;\n+  #321 = Utf8               <T:Ljava/lang/Object;>(TT;TT;Ljava/lang/Comparable<TT;>;)V\n+  #322 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/String;[Ljava/lang/Object;)V\n+  #323 = Utf8               <T:Ljava/lang/Object;>(TT;TT;Ljava/lang/Comparable<TT;>;Ljava/lang/String;[Ljava/lang/Object;)V\n+  #324 = Utf8               (JJJ)V\n+  #325 = Utf8               (JJJLjava/lang/String;)V\n+  #326 = Utf8               (DDD)V\n+  #327 = Utf8               (DDDLjava/lang/String;)V\n+  #328 = Utf8               exclusiveBetween\n+  #329 = Utf8               isInstanceOf\n+  #330 = Utf8               (Ljava/lang/Class;Ljava/lang/Object;)V\n+  #331 = Utf8               type\n+  #332 = Utf8               Ljava/lang/Class;\n+  #333 = Utf8               obj\n+  #334 = Utf8               Ljava/lang/Class<*>;\n+  #335 = Class              #258          // \"[Ljava/lang/Object;\"\n+  #336 = Utf8               (Ljava/lang/Class<*>;Ljava/lang/Object;)V\n+  #337 = Utf8               (Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V\n+  #338 = Utf8               (Ljava/lang/Class<*>;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V\n+  #339 = Utf8               (Ljava/lang/Class;Ljava/lang/Class;)V\n+  #340 = Utf8               superType\n+  #341 = Utf8               (Ljava/lang/Class<*>;Ljava/lang/Class<*>;)V\n+  #342 = Utf8               (Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)V\n+  #343 = Utf8               (Ljava/lang/Class<*>;Ljava/lang/Class<*>;Ljava/lang/String;[Ljava/lang/Object;)V\n+  #344 = Utf8               SourceFile\n+  #345 = Utf8               Validate.java\n {\n   private static final java.lang.String DEFAULT_NOT_NAN_EX_MESSAGE = \"The validated value is not a number\";\n     descriptor: Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: String The validated value is not a number\n \n   private static final java.lang.String DEFAULT_FINITE_EX_MESSAGE = \"The value is invalid: %f\";\n@@ -472,26 +472,26 @@\n   public static void isTrue(boolean, java.lang.String, long);\n     descriptor: (ZLjava/lang/String;J)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=8, locals=4, args_size=3\n          0: iload_0\n          1: ifne          27\n-         4: new           #2                  // class java/lang/IllegalArgumentException\n+         4: new           #7                  // class java/lang/IllegalArgumentException\n          7: dup\n          8: aload_1\n          9: iconst_1\n-        10: anewarray     #3                  // class java/lang/Object\n+        10: anewarray     #2                  // class java/lang/Object\n         13: dup\n         14: iconst_0\n         15: lload_2\n-        16: invokestatic  #4                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+        16: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n         19: aastore\n-        20: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        23: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        20: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        23: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         26: athrow\n         27: return\n       LineNumberTable:\n         line 108: 0\n         line 109: 4\n         line 111: 27\n       LocalVariableTable:\n@@ -505,26 +505,26 @@\n   public static void isTrue(boolean, java.lang.String, double);\n     descriptor: (ZLjava/lang/String;D)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=8, locals=4, args_size=3\n          0: iload_0\n          1: ifne          27\n-         4: new           #2                  // class java/lang/IllegalArgumentException\n+         4: new           #7                  // class java/lang/IllegalArgumentException\n          7: dup\n          8: aload_1\n          9: iconst_1\n-        10: anewarray     #3                  // class java/lang/Object\n+        10: anewarray     #2                  // class java/lang/Object\n         13: dup\n         14: iconst_0\n         15: dload_2\n-        16: invokestatic  #7                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n+        16: invokestatic  #24                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n         19: aastore\n-        20: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        23: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        20: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        23: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         26: athrow\n         27: return\n       LineNumberTable:\n         line 133: 0\n         line 134: 4\n         line 136: 27\n       LocalVariableTable:\n@@ -538,20 +538,20 @@\n   public static void isTrue(boolean, java.lang.String, java.lang.Object...);\n     descriptor: (ZLjava/lang/String;[Ljava/lang/Object;)V\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=3, args_size=3\n          0: iload_0\n          1: ifne          17\n-         4: new           #2                  // class java/lang/IllegalArgumentException\n+         4: new           #7                  // class java/lang/IllegalArgumentException\n          7: dup\n          8: aload_1\n          9: aload_2\n-        10: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        13: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        10: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        13: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: return\n       LineNumberTable:\n         line 157: 0\n         line 158: 4\n         line 160: 17\n       LocalVariableTable:\n@@ -565,18 +565,18 @@\n   public static void isTrue(boolean);\n     descriptor: (Z)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: iload_0\n          1: ifne          14\n-         4: new           #2                  // class java/lang/IllegalArgumentException\n+         4: new           #7                  // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #9                  // String The validated expression is false\n-        10: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #31                 // String The validated expression is false\n+        10: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: return\n       LineNumberTable:\n         line 182: 0\n         line 183: 4\n         line 185: 14\n       LocalVariableTable:\n@@ -587,42 +587,42 @@\n \n   public static <T extends java.lang.Object> T notNull(T);\n     descriptor: (Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: ldc           #10                 // String The validated object is null\n+         1: ldc           #33                 // String The validated object is null\n          3: iconst_0\n-         4: anewarray     #3                  // class java/lang/Object\n-         7: invokestatic  #11                 // Method notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+         4: anewarray     #2                  // class java/lang/Object\n+         7: invokestatic  #35                 // Method notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n         10: areturn\n       LineNumberTable:\n         line 206: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 object   Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 object   TT;\n-    Signature: #119                         // <T:Ljava/lang/Object;>(TT;)TT;\n+    Signature: #265                         // <T:Ljava/lang/Object;>(TT;)TT;\n \n   public static <T extends java.lang.Object> T notNull(T, java.lang.String, java.lang.Object...);\n     descriptor: (Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: ifnonnull     17\n-         4: new           #12                 // class java/lang/NullPointerException\n+         4: new           #39                 // class java/lang/NullPointerException\n          7: dup\n          8: aload_1\n          9: aload_2\n-        10: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        13: invokespecial #13                 // Method java/lang/NullPointerException.\"<init>\":(Ljava/lang/String;)V\n+        10: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        13: invokespecial #41                 // Method java/lang/NullPointerException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n         18: areturn\n       LineNumberTable:\n         line 224: 0\n         line 225: 4\n         line 227: 17\n@@ -632,39 +632,39 @@\n             0      19     1 message   Ljava/lang/String;\n             0      19     2 values   [Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0 object   TT;\n       StackMapTable: number_of_entries = 1\n         frame_type = 17 /* same */\n-    Signature: #121                         // <T:Ljava/lang/Object;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;\n+    Signature: #266                         // <T:Ljava/lang/Object;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;\n \n   public static <T extends java.lang.Object> T[] notEmpty(T[], java.lang.String, java.lang.Object...);\n     descriptor: ([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: ifnonnull     17\n-         4: new           #12                 // class java/lang/NullPointerException\n+         4: new           #39                 // class java/lang/NullPointerException\n          7: dup\n          8: aload_1\n          9: aload_2\n-        10: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        13: invokespecial #13                 // Method java/lang/NullPointerException.\"<init>\":(Ljava/lang/String;)V\n+        10: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        13: invokespecial #41                 // Method java/lang/NullPointerException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n         18: arraylength\n         19: ifne          35\n-        22: new           #2                  // class java/lang/IllegalArgumentException\n+        22: new           #7                  // class java/lang/IllegalArgumentException\n         25: dup\n         26: aload_1\n         27: aload_2\n-        28: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        31: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        28: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        31: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         34: athrow\n         35: aload_0\n         36: areturn\n       LineNumberTable:\n         line 250: 0\n         line 251: 4\n         line 253: 17\n@@ -677,60 +677,60 @@\n             0      37     2 values   [Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      37     0 array   [TT;\n       StackMapTable: number_of_entries = 2\n         frame_type = 17 /* same */\n         frame_type = 17 /* same */\n-    Signature: #126                         // <T:Ljava/lang/Object;>([TT;Ljava/lang/String;[Ljava/lang/Object;)[TT;\n+    Signature: #269                         // <T:Ljava/lang/Object;>([TT;Ljava/lang/String;[Ljava/lang/Object;)[TT;\n \n   public static <T extends java.lang.Object> T[] notEmpty(T[]);\n     descriptor: ([Ljava/lang/Object;)[Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: ldc           #14                 // String The validated array is empty\n+         1: ldc           #42                 // String The validated array is empty\n          3: iconst_0\n-         4: anewarray     #3                  // class java/lang/Object\n-         7: invokestatic  #15                 // Method notEmpty:([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n+         4: anewarray     #2                  // class java/lang/Object\n+         7: invokestatic  #44                 // Method notEmpty:([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n         10: areturn\n       LineNumberTable:\n         line 276: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 array   [Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 array   [TT;\n-    Signature: #128                         // <T:Ljava/lang/Object;>([TT;)[TT;\n+    Signature: #271                         // <T:Ljava/lang/Object;>([TT;)[TT;\n \n   public static <T extends java.util.Collection<?>> T notEmpty(T, java.lang.String, java.lang.Object...);\n     descriptor: (Ljava/util/Collection;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: ifnonnull     17\n-         4: new           #12                 // class java/lang/NullPointerException\n+         4: new           #39                 // class java/lang/NullPointerException\n          7: dup\n          8: aload_1\n          9: aload_2\n-        10: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        13: invokespecial #13                 // Method java/lang/NullPointerException.\"<init>\":(Ljava/lang/String;)V\n+        10: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        13: invokespecial #41                 // Method java/lang/NullPointerException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: invokeinterface #16,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z\n+        18: invokeinterface #48,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z\n         23: ifeq          39\n-        26: new           #2                  // class java/lang/IllegalArgumentException\n+        26: new           #7                  // class java/lang/IllegalArgumentException\n         29: dup\n         30: aload_1\n         31: aload_2\n-        32: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        35: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        32: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        35: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         38: athrow\n         39: aload_0\n         40: areturn\n       LineNumberTable:\n         line 299: 0\n         line 300: 4\n         line 302: 17\n@@ -743,60 +743,60 @@\n             0      41     2 values   [Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      41     0 collection   TT;\n       StackMapTable: number_of_entries = 2\n         frame_type = 17 /* same */\n         frame_type = 21 /* same */\n-    Signature: #132                         // <T::Ljava/util/Collection<*>;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;\n+    Signature: #274                         // <T::Ljava/util/Collection<*>;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;\n \n   public static <T extends java.util.Collection<?>> T notEmpty(T);\n     descriptor: (Ljava/util/Collection;)Ljava/util/Collection;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: ldc           #17                 // String The validated collection is empty\n+         1: ldc           #54                 // String The validated collection is empty\n          3: iconst_0\n-         4: anewarray     #3                  // class java/lang/Object\n-         7: invokestatic  #18                 // Method notEmpty:(Ljava/util/Collection;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;\n+         4: anewarray     #2                  // class java/lang/Object\n+         7: invokestatic  #56                 // Method notEmpty:(Ljava/util/Collection;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;\n         10: areturn\n       LineNumberTable:\n         line 325: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 collection   Ljava/util/Collection;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 collection   TT;\n-    Signature: #134                         // <T::Ljava/util/Collection<*>;>(TT;)TT;\n+    Signature: #276                         // <T::Ljava/util/Collection<*>;>(TT;)TT;\n \n   public static <T extends java.util.Map<?, ?>> T notEmpty(T, java.lang.String, java.lang.Object...);\n     descriptor: (Ljava/util/Map;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Map;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: ifnonnull     17\n-         4: new           #12                 // class java/lang/NullPointerException\n+         4: new           #39                 // class java/lang/NullPointerException\n          7: dup\n          8: aload_1\n          9: aload_2\n-        10: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        13: invokespecial #13                 // Method java/lang/NullPointerException.\"<init>\":(Ljava/lang/String;)V\n+        10: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        13: invokespecial #41                 // Method java/lang/NullPointerException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: invokeinterface #19,  1           // InterfaceMethod java/util/Map.isEmpty:()Z\n+        18: invokeinterface #59,  1           // InterfaceMethod java/util/Map.isEmpty:()Z\n         23: ifeq          39\n-        26: new           #2                  // class java/lang/IllegalArgumentException\n+        26: new           #7                  // class java/lang/IllegalArgumentException\n         29: dup\n         30: aload_1\n         31: aload_2\n-        32: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        35: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        32: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        35: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         38: athrow\n         39: aload_0\n         40: areturn\n       LineNumberTable:\n         line 348: 0\n         line 349: 4\n         line 351: 17\n@@ -809,60 +809,60 @@\n             0      41     2 values   [Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      41     0   map   TT;\n       StackMapTable: number_of_entries = 2\n         frame_type = 17 /* same */\n         frame_type = 21 /* same */\n-    Signature: #138                         // <T::Ljava/util/Map<**>;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;\n+    Signature: #279                         // <T::Ljava/util/Map<**>;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;\n \n   public static <T extends java.util.Map<?, ?>> T notEmpty(T);\n     descriptor: (Ljava/util/Map;)Ljava/util/Map;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: ldc           #20                 // String The validated map is empty\n+         1: ldc           #62                 // String The validated map is empty\n          3: iconst_0\n-         4: anewarray     #3                  // class java/lang/Object\n-         7: invokestatic  #21                 // Method notEmpty:(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Map;\n+         4: anewarray     #2                  // class java/lang/Object\n+         7: invokestatic  #64                 // Method notEmpty:(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Map;\n         10: areturn\n       LineNumberTable:\n         line 374: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0   map   Ljava/util/Map;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0   map   TT;\n-    Signature: #140                         // <T::Ljava/util/Map<**>;>(TT;)TT;\n+    Signature: #281                         // <T::Ljava/util/Map<**>;>(TT;)TT;\n \n   public static <T extends java.lang.CharSequence> T notEmpty(T, java.lang.String, java.lang.Object...);\n     descriptor: (Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: ifnonnull     17\n-         4: new           #12                 // class java/lang/NullPointerException\n+         4: new           #39                 // class java/lang/NullPointerException\n          7: dup\n          8: aload_1\n          9: aload_2\n-        10: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        13: invokespecial #13                 // Method java/lang/NullPointerException.\"<init>\":(Ljava/lang/String;)V\n+        10: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        13: invokespecial #41                 // Method java/lang/NullPointerException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: invokeinterface #22,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n+        18: invokeinterface #67,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n         23: ifne          39\n-        26: new           #2                  // class java/lang/IllegalArgumentException\n+        26: new           #7                  // class java/lang/IllegalArgumentException\n         29: dup\n         30: aload_1\n         31: aload_2\n-        32: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        35: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        32: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        35: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         38: athrow\n         39: aload_0\n         40: areturn\n       LineNumberTable:\n         line 397: 0\n         line 398: 4\n         line 400: 17\n@@ -875,60 +875,60 @@\n             0      41     2 values   [Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      41     0 chars   TT;\n       StackMapTable: number_of_entries = 2\n         frame_type = 17 /* same */\n         frame_type = 21 /* same */\n-    Signature: #144                         // <T::Ljava/lang/CharSequence;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;\n+    Signature: #284                         // <T::Ljava/lang/CharSequence;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;\n \n   public static <T extends java.lang.CharSequence> T notEmpty(T);\n     descriptor: (Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: ldc           #23                 // String The validated character sequence is empty\n+         1: ldc           #73                 // String The validated character sequence is empty\n          3: iconst_0\n-         4: anewarray     #3                  // class java/lang/Object\n-         7: invokestatic  #24                 // Method notEmpty:(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n+         4: anewarray     #2                  // class java/lang/Object\n+         7: invokestatic  #75                 // Method notEmpty:(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n         10: areturn\n       LineNumberTable:\n         line 424: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 chars   Ljava/lang/CharSequence;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 chars   TT;\n-    Signature: #146                         // <T::Ljava/lang/CharSequence;>(TT;)TT;\n+    Signature: #286                         // <T::Ljava/lang/CharSequence;>(TT;)TT;\n \n   public static <T extends java.lang.CharSequence> T notBlank(T, java.lang.String, java.lang.Object...);\n     descriptor: (Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: ifnonnull     17\n-         4: new           #12                 // class java/lang/NullPointerException\n+         4: new           #39                 // class java/lang/NullPointerException\n          7: dup\n          8: aload_1\n          9: aload_2\n-        10: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        13: invokespecial #13                 // Method java/lang/NullPointerException.\"<init>\":(Ljava/lang/String;)V\n+        10: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        13: invokespecial #41                 // Method java/lang/NullPointerException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: invokestatic  #25                 // Method org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n+        18: invokestatic  #78                 // Method org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n         21: ifeq          37\n-        24: new           #2                  // class java/lang/IllegalArgumentException\n+        24: new           #7                  // class java/lang/IllegalArgumentException\n         27: dup\n         28: aload_1\n         29: aload_2\n-        30: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        33: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        30: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        33: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         36: athrow\n         37: aload_0\n         38: areturn\n       LineNumberTable:\n         line 450: 0\n         line 451: 4\n         line 453: 17\n@@ -941,66 +941,66 @@\n             0      39     2 values   [Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      39     0 chars   TT;\n       StackMapTable: number_of_entries = 2\n         frame_type = 17 /* same */\n         frame_type = 19 /* same */\n-    Signature: #144                         // <T::Ljava/lang/CharSequence;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;\n+    Signature: #284                         // <T::Ljava/lang/CharSequence;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;\n \n   public static <T extends java.lang.CharSequence> T notBlank(T);\n     descriptor: (Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: ldc           #26                 // String The validated character sequence is blank\n+         1: ldc           #84                 // String The validated character sequence is blank\n          3: iconst_0\n-         4: anewarray     #3                  // class java/lang/Object\n-         7: invokestatic  #27                 // Method notBlank:(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n+         4: anewarray     #2                  // class java/lang/Object\n+         7: invokestatic  #86                 // Method notBlank:(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n         10: areturn\n       LineNumberTable:\n         line 479: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 chars   Ljava/lang/CharSequence;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 chars   TT;\n-    Signature: #146                         // <T::Ljava/lang/CharSequence;>(TT;)TT;\n+    Signature: #286                         // <T::Ljava/lang/CharSequence;>(TT;)TT;\n \n   public static <T extends java.lang.Object> T[] noNullElements(T[], java.lang.String, java.lang.Object...);\n     descriptor: ([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=5, args_size=3\n          0: aload_0\n-         1: invokestatic  #28                 // Method notNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         1: invokestatic  #89                 // Method notNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          4: pop\n          5: iconst_0\n          6: istore_3\n          7: iload_3\n          8: aload_0\n          9: arraylength\n         10: if_icmpge     49\n         13: aload_0\n         14: iload_3\n         15: aaload\n         16: ifnonnull     43\n         19: aload_2\n         20: iload_3\n-        21: invokestatic  #29                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        24: invokestatic  #30                 // Method org/apache/commons/lang3/ArrayUtils.add:([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;\n+        21: invokestatic  #92                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        24: invokestatic  #97                 // Method org/apache/commons/lang3/ArrayUtils.add:([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;\n         27: astore        4\n-        29: new           #2                  // class java/lang/IllegalArgumentException\n+        29: new           #7                  // class java/lang/IllegalArgumentException\n         32: dup\n         33: aload_1\n         34: aload         4\n-        36: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        39: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        36: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        39: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         42: athrow\n         43: iinc          3, 1\n         46: goto          7\n         49: aload_0\n         50: areturn\n       LineNumberTable:\n         line 509: 0\n@@ -1023,72 +1023,72 @@\n       StackMapTable: number_of_entries = 3\n         frame_type = 252 /* append */\n           offset_delta = 7\n           locals = [ int ]\n         frame_type = 35 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 5\n-    Signature: #126                         // <T:Ljava/lang/Object;>([TT;Ljava/lang/String;[Ljava/lang/Object;)[TT;\n+    Signature: #269                         // <T:Ljava/lang/Object;>([TT;Ljava/lang/String;[Ljava/lang/Object;)[TT;\n \n   public static <T extends java.lang.Object> T[] noNullElements(T[]);\n     descriptor: ([Ljava/lang/Object;)[Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: ldc           #31                 // String The validated array contains null element at index: %d\n+         1: ldc           #103                // String The validated array contains null element at index: %d\n          3: iconst_0\n-         4: anewarray     #3                  // class java/lang/Object\n-         7: invokestatic  #32                 // Method noNullElements:([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n+         4: anewarray     #2                  // class java/lang/Object\n+         7: invokestatic  #105                // Method noNullElements:([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n         10: areturn\n       LineNumberTable:\n         line 541: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 array   [Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 array   [TT;\n-    Signature: #128                         // <T:Ljava/lang/Object;>([TT;)[TT;\n+    Signature: #271                         // <T:Ljava/lang/Object;>([TT;)[TT;\n \n   public static <T extends java.lang.Iterable<?>> T noNullElements(T, java.lang.String, java.lang.Object...);\n     descriptor: (Ljava/lang/Iterable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Iterable;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=5, locals=6, args_size=3\n          0: aload_0\n-         1: invokestatic  #28                 // Method notNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         1: invokestatic  #89                 // Method notNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          4: pop\n          5: iconst_0\n          6: istore_3\n          7: aload_0\n-         8: invokeinterface #33,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;\n+         8: invokeinterface #108,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;\n         13: astore        4\n         15: aload         4\n-        17: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        17: invokeinterface #114,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n         22: ifeq          72\n         25: aload         4\n-        27: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        27: invokeinterface #119,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n         32: ifnonnull     66\n         35: aload_2\n         36: iconst_1\n-        37: anewarray     #3                  // class java/lang/Object\n+        37: anewarray     #2                  // class java/lang/Object\n         40: dup\n         41: iconst_0\n         42: iload_3\n-        43: invokestatic  #29                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        43: invokestatic  #92                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         46: aastore\n-        47: invokestatic  #36                 // Method org/apache/commons/lang3/ArrayUtils.addAll:([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;\n+        47: invokestatic  #123                // Method org/apache/commons/lang3/ArrayUtils.addAll:([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;\n         50: astore        5\n-        52: new           #2                  // class java/lang/IllegalArgumentException\n+        52: new           #7                  // class java/lang/IllegalArgumentException\n         55: dup\n         56: aload_1\n         57: aload         5\n-        59: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        62: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        59: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        62: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         65: athrow\n         66: iinc          3, 1\n         69: goto          15\n         72: aload_0\n         73: areturn\n       LineNumberTable:\n         line 571: 0\n@@ -1114,57 +1114,57 @@\n       StackMapTable: number_of_entries = 3\n         frame_type = 253 /* append */\n           offset_delta = 15\n           locals = [ int, class java/util/Iterator ]\n         frame_type = 50 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 5\n-    Signature: #159                         // <T::Ljava/lang/Iterable<*>;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;\n+    Signature: #295                         // <T::Ljava/lang/Iterable<*>;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;\n \n   public static <T extends java.lang.Iterable<?>> T noNullElements(T);\n     descriptor: (Ljava/lang/Iterable;)Ljava/lang/Iterable;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: ldc           #37                 // String The validated collection contains null element at index: %d\n+         1: ldc           #127                // String The validated collection contains null element at index: %d\n          3: iconst_0\n-         4: anewarray     #3                  // class java/lang/Object\n-         7: invokestatic  #38                 // Method noNullElements:(Ljava/lang/Iterable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Iterable;\n+         4: anewarray     #2                  // class java/lang/Object\n+         7: invokestatic  #129                // Method noNullElements:(Ljava/lang/Iterable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Iterable;\n         10: areturn\n       LineNumberTable:\n         line 604: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 iterable   Ljava/lang/Iterable;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 iterable   TT;\n-    Signature: #161                         // <T::Ljava/lang/Iterable<*>;>(TT;)TT;\n+    Signature: #297                         // <T::Ljava/lang/Iterable<*>;>(TT;)TT;\n \n   public static <T extends java.lang.Object> T[] validIndex(T[], int, java.lang.String, java.lang.Object...);\n     descriptor: ([Ljava/lang/Object;ILjava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: invokestatic  #28                 // Method notNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         1: invokestatic  #89                 // Method notNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          4: pop\n          5: iload_1\n          6: iflt          15\n          9: iload_1\n         10: aload_0\n         11: arraylength\n         12: if_icmplt     28\n-        15: new           #39                 // class java/lang/IndexOutOfBoundsException\n+        15: new           #132                // class java/lang/IndexOutOfBoundsException\n         18: dup\n         19: aload_2\n         20: aload_3\n-        21: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        24: invokespecial #40                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+        21: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        24: invokespecial #134                // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n         27: athrow\n         28: aload_0\n         29: areturn\n       LineNumberTable:\n         line 632: 0\n         line 633: 5\n         line 634: 15\n@@ -1177,64 +1177,64 @@\n             0      30     3 values   [Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      30     0 array   [TT;\n       StackMapTable: number_of_entries = 2\n         frame_type = 15 /* same */\n         frame_type = 12 /* same */\n-    Signature: #165                         // <T:Ljava/lang/Object;>([TT;ILjava/lang/String;[Ljava/lang/Object;)[TT;\n+    Signature: #299                         // <T:Ljava/lang/Object;>([TT;ILjava/lang/String;[Ljava/lang/Object;)[TT;\n \n   public static <T extends java.lang.Object> T[] validIndex(T[], int);\n     descriptor: ([Ljava/lang/Object;I)[Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=7, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: ldc           #41                 // String The validated array index is invalid: %d\n+         2: ldc           #135                // String The validated array index is invalid: %d\n          4: iconst_1\n-         5: anewarray     #3                  // class java/lang/Object\n+         5: anewarray     #2                  // class java/lang/Object\n          8: dup\n          9: iconst_0\n         10: iload_1\n-        11: invokestatic  #29                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        11: invokestatic  #92                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         14: aastore\n-        15: invokestatic  #42                 // Method validIndex:([Ljava/lang/Object;ILjava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n+        15: invokestatic  #137                // Method validIndex:([Ljava/lang/Object;ILjava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n         18: areturn\n       LineNumberTable:\n         line 663: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0 array   [Ljava/lang/Object;\n             0      19     1 index   I\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0 array   [TT;\n-    Signature: #167                         // <T:Ljava/lang/Object;>([TT;I)[TT;\n+    Signature: #301                         // <T:Ljava/lang/Object;>([TT;I)[TT;\n \n   public static <T extends java.util.Collection<?>> T validIndex(T, int, java.lang.String, java.lang.Object...);\n     descriptor: (Ljava/util/Collection;ILjava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: invokestatic  #28                 // Method notNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         1: invokestatic  #89                 // Method notNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          4: pop\n          5: iload_1\n          6: iflt          19\n          9: iload_1\n         10: aload_0\n-        11: invokeinterface #43,  1           // InterfaceMethod java/util/Collection.size:()I\n+        11: invokeinterface #141,  1          // InterfaceMethod java/util/Collection.size:()I\n         16: if_icmplt     32\n-        19: new           #39                 // class java/lang/IndexOutOfBoundsException\n+        19: new           #132                // class java/lang/IndexOutOfBoundsException\n         22: dup\n         23: aload_2\n         24: aload_3\n-        25: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        28: invokespecial #40                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+        25: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        28: invokespecial #134                // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n         31: athrow\n         32: aload_0\n         33: areturn\n       LineNumberTable:\n         line 691: 0\n         line 692: 5\n         line 693: 19\n@@ -1247,64 +1247,64 @@\n             0      34     3 values   [Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      34     0 collection   TT;\n       StackMapTable: number_of_entries = 2\n         frame_type = 19 /* same */\n         frame_type = 12 /* same */\n-    Signature: #169                         // <T::Ljava/util/Collection<*>;>(TT;ILjava/lang/String;[Ljava/lang/Object;)TT;\n+    Signature: #302                         // <T::Ljava/util/Collection<*>;>(TT;ILjava/lang/String;[Ljava/lang/Object;)TT;\n \n   public static <T extends java.util.Collection<?>> T validIndex(T, int);\n     descriptor: (Ljava/util/Collection;I)Ljava/util/Collection;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=7, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: ldc           #44                 // String The validated collection index is invalid: %d\n+         2: ldc           #144                // String The validated collection index is invalid: %d\n          4: iconst_1\n-         5: anewarray     #3                  // class java/lang/Object\n+         5: anewarray     #2                  // class java/lang/Object\n          8: dup\n          9: iconst_0\n         10: iload_1\n-        11: invokestatic  #29                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        11: invokestatic  #92                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         14: aastore\n-        15: invokestatic  #45                 // Method validIndex:(Ljava/util/Collection;ILjava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;\n+        15: invokestatic  #146                // Method validIndex:(Ljava/util/Collection;ILjava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;\n         18: areturn\n       LineNumberTable:\n         line 719: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0 collection   Ljava/util/Collection;\n             0      19     1 index   I\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0 collection   TT;\n-    Signature: #171                         // <T::Ljava/util/Collection<*>;>(TT;I)TT;\n+    Signature: #304                         // <T::Ljava/util/Collection<*>;>(TT;I)TT;\n \n   public static <T extends java.lang.CharSequence> T validIndex(T, int, java.lang.String, java.lang.Object...);\n     descriptor: (Ljava/lang/CharSequence;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: invokestatic  #28                 // Method notNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         1: invokestatic  #89                 // Method notNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          4: pop\n          5: iload_1\n          6: iflt          19\n          9: iload_1\n         10: aload_0\n-        11: invokeinterface #22,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n+        11: invokeinterface #67,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n         16: if_icmplt     32\n-        19: new           #39                 // class java/lang/IndexOutOfBoundsException\n+        19: new           #132                // class java/lang/IndexOutOfBoundsException\n         22: dup\n         23: aload_2\n         24: aload_3\n-        25: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        28: invokespecial #40                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+        25: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        28: invokespecial #134                // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n         31: athrow\n         32: aload_0\n         33: areturn\n       LineNumberTable:\n         line 748: 0\n         line 749: 5\n         line 750: 19\n@@ -1317,55 +1317,55 @@\n             0      34     3 values   [Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      34     0 chars   TT;\n       StackMapTable: number_of_entries = 2\n         frame_type = 19 /* same */\n         frame_type = 12 /* same */\n-    Signature: #173                         // <T::Ljava/lang/CharSequence;>(TT;ILjava/lang/String;[Ljava/lang/Object;)TT;\n+    Signature: #305                         // <T::Ljava/lang/CharSequence;>(TT;ILjava/lang/String;[Ljava/lang/Object;)TT;\n \n   public static <T extends java.lang.CharSequence> T validIndex(T, int);\n     descriptor: (Ljava/lang/CharSequence;I)Ljava/lang/CharSequence;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=7, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: ldc           #46                 // String The validated character sequence index is invalid: %d\n+         2: ldc           #149                // String The validated character sequence index is invalid: %d\n          4: iconst_1\n-         5: anewarray     #3                  // class java/lang/Object\n+         5: anewarray     #2                  // class java/lang/Object\n          8: dup\n          9: iconst_0\n         10: iload_1\n-        11: invokestatic  #29                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        11: invokestatic  #92                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         14: aastore\n-        15: invokestatic  #47                 // Method validIndex:(Ljava/lang/CharSequence;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n+        15: invokestatic  #151                // Method validIndex:(Ljava/lang/CharSequence;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n         18: areturn\n       LineNumberTable:\n         line 780: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0 chars   Ljava/lang/CharSequence;\n             0      19     1 index   I\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0 chars   TT;\n-    Signature: #175                         // <T::Ljava/lang/CharSequence;>(TT;I)TT;\n+    Signature: #307                         // <T::Ljava/lang/CharSequence;>(TT;I)TT;\n \n   public static void validState(boolean);\n     descriptor: (Z)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: iload_0\n          1: ifne          14\n-         4: new           #48                 // class java/lang/IllegalStateException\n+         4: new           #154                // class java/lang/IllegalStateException\n          7: dup\n-         8: ldc           #49                 // String The validated state is false\n-        10: invokespecial #50                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #156                // String The validated state is false\n+        10: invokespecial #158                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: return\n       LineNumberTable:\n         line 806: 0\n         line 807: 4\n         line 809: 14\n       LocalVariableTable:\n@@ -1377,20 +1377,20 @@\n   public static void validState(boolean, java.lang.String, java.lang.Object...);\n     descriptor: (ZLjava/lang/String;[Ljava/lang/Object;)V\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=3, args_size=3\n          0: iload_0\n          1: ifne          17\n-         4: new           #48                 // class java/lang/IllegalStateException\n+         4: new           #154                // class java/lang/IllegalStateException\n          7: dup\n          8: aload_1\n          9: aload_2\n-        10: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        13: invokespecial #50                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        10: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        13: invokespecial #158                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: return\n       LineNumberTable:\n         line 828: 0\n         line 829: 4\n         line 831: 17\n       LocalVariableTable:\n@@ -1404,31 +1404,31 @@\n   public static void matchesPattern(java.lang.CharSequence, java.lang.String);\n     descriptor: (Ljava/lang/CharSequence;Ljava/lang/String;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=7, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: invokestatic  #51                 // Method java/util/regex/Pattern.matches:(Ljava/lang/String;Ljava/lang/CharSequence;)Z\n+         2: invokestatic  #159                // Method java/util/regex/Pattern.matches:(Ljava/lang/String;Ljava/lang/CharSequence;)Z\n          5: ifne          33\n-         8: new           #2                  // class java/lang/IllegalArgumentException\n+         8: new           #7                  // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #52                 // String The string %s does not match the pattern %s\n+        12: ldc           #165                // String The string %s does not match the pattern %s\n         14: iconst_2\n-        15: anewarray     #3                  // class java/lang/Object\n+        15: anewarray     #2                  // class java/lang/Object\n         18: dup\n         19: iconst_0\n         20: aload_0\n         21: aastore\n         22: dup\n         23: iconst_1\n         24: aload_1\n         25: aastore\n-        26: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        29: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        26: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        29: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         32: athrow\n         33: return\n       LineNumberTable:\n         line 853: 0\n         line 854: 8\n         line 856: 33\n       LocalVariableTable:\n@@ -1441,22 +1441,22 @@\n   public static void matchesPattern(java.lang.CharSequence, java.lang.String, java.lang.String, java.lang.Object...);\n     descriptor: (Ljava/lang/CharSequence;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_1\n          1: aload_0\n-         2: invokestatic  #51                 // Method java/util/regex/Pattern.matches:(Ljava/lang/String;Ljava/lang/CharSequence;)Z\n+         2: invokestatic  #159                // Method java/util/regex/Pattern.matches:(Ljava/lang/String;Ljava/lang/CharSequence;)Z\n          5: ifne          21\n-         8: new           #2                  // class java/lang/IllegalArgumentException\n+         8: new           #7                  // class java/lang/IllegalArgumentException\n         11: dup\n         12: aload_2\n         13: aload_3\n-        14: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        17: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        14: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        17: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         20: athrow\n         21: return\n       LineNumberTable:\n         line 877: 0\n         line 878: 8\n         line 880: 21\n       LocalVariableTable:\n@@ -1470,40 +1470,40 @@\n \n   public static void notNaN(double);\n     descriptor: (D)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=1\n          0: dload_0\n-         1: ldc           #53                 // String The validated value is not a number\n+         1: ldc           #167                // String The validated value is not a number\n          3: iconst_0\n-         4: anewarray     #3                  // class java/lang/Object\n-         7: invokestatic  #54                 // Method notNaN:(DLjava/lang/String;[Ljava/lang/Object;)V\n+         4: anewarray     #2                  // class java/lang/Object\n+         7: invokestatic  #169                // Method notNaN:(DLjava/lang/String;[Ljava/lang/Object;)V\n         10: return\n       LineNumberTable:\n         line 901: 0\n         line 902: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 value   D\n \n   public static void notNaN(double, java.lang.String, java.lang.Object...);\n     descriptor: (DLjava/lang/String;[Ljava/lang/Object;)V\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=4, args_size=3\n          0: dload_0\n-         1: invokestatic  #55                 // Method java/lang/Double.isNaN:(D)Z\n+         1: invokestatic  #173                // Method java/lang/Double.isNaN:(D)Z\n          4: ifeq          20\n-         7: new           #2                  // class java/lang/IllegalArgumentException\n+         7: new           #7                  // class java/lang/IllegalArgumentException\n         10: dup\n         11: aload_2\n         12: aload_3\n-        13: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        16: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        13: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        16: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         19: athrow\n         20: return\n       LineNumberTable:\n         line 919: 0\n         line 920: 7\n         line 922: 20\n       LocalVariableTable:\n@@ -1516,48 +1516,48 @@\n \n   public static void finite(double);\n     descriptor: (D)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=8, locals=2, args_size=1\n          0: dload_0\n-         1: ldc           #56                 // String The value is invalid: %f\n+         1: ldc           #177                // String The value is invalid: %f\n          3: iconst_1\n-         4: anewarray     #3                  // class java/lang/Object\n+         4: anewarray     #2                  // class java/lang/Object\n          7: dup\n          8: iconst_0\n          9: dload_0\n-        10: invokestatic  #7                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n+        10: invokestatic  #24                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n         13: aastore\n-        14: invokestatic  #57                 // Method finite:(DLjava/lang/String;[Ljava/lang/Object;)V\n+        14: invokestatic  #179                // Method finite:(DLjava/lang/String;[Ljava/lang/Object;)V\n         17: return\n       LineNumberTable:\n         line 942: 0\n         line 943: 17\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0 value   D\n \n   public static void finite(double, java.lang.String, java.lang.Object...);\n     descriptor: (DLjava/lang/String;[Ljava/lang/Object;)V\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=4, args_size=3\n          0: dload_0\n-         1: invokestatic  #55                 // Method java/lang/Double.isNaN:(D)Z\n+         1: invokestatic  #173                // Method java/lang/Double.isNaN:(D)Z\n          4: ifne          14\n          7: dload_0\n-         8: invokestatic  #58                 // Method java/lang/Double.isInfinite:(D)Z\n+         8: invokestatic  #182                // Method java/lang/Double.isInfinite:(D)Z\n         11: ifeq          27\n-        14: new           #2                  // class java/lang/IllegalArgumentException\n+        14: new           #7                  // class java/lang/IllegalArgumentException\n         17: dup\n         18: aload_2\n         19: aload_3\n-        20: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        23: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        20: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        23: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         26: athrow\n         27: return\n       LineNumberTable:\n         line 960: 0\n         line 961: 14\n         line 963: 27\n       LocalVariableTable:\n@@ -1572,39 +1572,39 @@\n   public static <T extends java.lang.Object> void inclusiveBetween(T, T, java.lang.Comparable<T>);\n     descriptor: (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Comparable;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=7, locals=3, args_size=3\n          0: aload_2\n          1: aload_0\n-         2: invokeinterface #59,  2           // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I\n+         2: invokeinterface #185,  2          // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I\n          7: iflt          20\n         10: aload_2\n         11: aload_1\n-        12: invokeinterface #59,  2           // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I\n+        12: invokeinterface #185,  2          // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I\n         17: ifle          49\n-        20: new           #2                  // class java/lang/IllegalArgumentException\n+        20: new           #7                  // class java/lang/IllegalArgumentException\n         23: dup\n-        24: ldc           #60                 // String The value %s is not in the specified inclusive range of %s to %s\n+        24: ldc           #191                // String The value %s is not in the specified inclusive range of %s to %s\n         26: iconst_3\n-        27: anewarray     #3                  // class java/lang/Object\n+        27: anewarray     #2                  // class java/lang/Object\n         30: dup\n         31: iconst_0\n         32: aload_2\n         33: aastore\n         34: dup\n         35: iconst_1\n         36: aload_0\n         37: aastore\n         38: dup\n         39: iconst_2\n         40: aload_1\n         41: aastore\n-        42: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        45: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        42: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        45: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         48: athrow\n         49: return\n       LineNumberTable:\n         line 985: 0\n         line 986: 20\n         line 988: 49\n       LocalVariableTable:\n@@ -1616,35 +1616,35 @@\n         Start  Length  Slot  Name   Signature\n             0      50     0 start   TT;\n             0      50     1   end   TT;\n             0      50     2 value   Ljava/lang/Comparable<TT;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 20 /* same */\n         frame_type = 28 /* same */\n-    Signature: #192                         // <T:Ljava/lang/Object;>(TT;TT;Ljava/lang/Comparable<TT;>;)V\n+    Signature: #321                         // <T:Ljava/lang/Object;>(TT;TT;Ljava/lang/Comparable<TT;>;)V\n \n   public static <T extends java.lang.Object> void inclusiveBetween(T, T, java.lang.Comparable<T>, java.lang.String, java.lang.Object...);\n     descriptor: (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/String;[Ljava/lang/Object;)V\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=5, args_size=5\n          0: aload_2\n          1: aload_0\n-         2: invokeinterface #59,  2           // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I\n+         2: invokeinterface #185,  2          // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I\n          7: iflt          20\n         10: aload_2\n         11: aload_1\n-        12: invokeinterface #59,  2           // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I\n+        12: invokeinterface #185,  2          // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I\n         17: ifle          34\n-        20: new           #2                  // class java/lang/IllegalArgumentException\n+        20: new           #7                  // class java/lang/IllegalArgumentException\n         23: dup\n         24: aload_3\n         25: aload         4\n-        27: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        30: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        27: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        30: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         33: athrow\n         34: return\n       LineNumberTable:\n         line 1010: 0\n         line 1011: 20\n         line 1013: 34\n       LocalVariableTable:\n@@ -1658,51 +1658,51 @@\n         Start  Length  Slot  Name   Signature\n             0      35     0 start   TT;\n             0      35     1   end   TT;\n             0      35     2 value   Ljava/lang/Comparable<TT;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 20 /* same */\n         frame_type = 13 /* same */\n-    Signature: #194                         // <T:Ljava/lang/Object;>(TT;TT;Ljava/lang/Comparable<TT;>;Ljava/lang/String;[Ljava/lang/Object;)V\n+    Signature: #323                         // <T:Ljava/lang/Object;>(TT;TT;Ljava/lang/Comparable<TT;>;Ljava/lang/String;[Ljava/lang/Object;)V\n \n   public static void inclusiveBetween(long, long, long);\n     descriptor: (JJJ)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=8, locals=6, args_size=3\n          0: lload         4\n          2: lload_0\n          3: lcmp\n          4: iflt          14\n          7: lload         4\n          9: lload_2\n         10: lcmp\n         11: ifle          53\n-        14: new           #2                  // class java/lang/IllegalArgumentException\n+        14: new           #7                  // class java/lang/IllegalArgumentException\n         17: dup\n-        18: ldc           #60                 // String The value %s is not in the specified inclusive range of %s to %s\n+        18: ldc           #191                // String The value %s is not in the specified inclusive range of %s to %s\n         20: iconst_3\n-        21: anewarray     #3                  // class java/lang/Object\n+        21: anewarray     #2                  // class java/lang/Object\n         24: dup\n         25: iconst_0\n         26: lload         4\n-        28: invokestatic  #4                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+        28: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n         31: aastore\n         32: dup\n         33: iconst_1\n         34: lload_0\n-        35: invokestatic  #4                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+        35: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n         38: aastore\n         39: dup\n         40: iconst_2\n         41: lload_2\n-        42: invokestatic  #4                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+        42: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n         45: aastore\n-        46: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        49: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        46: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        49: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         52: athrow\n         53: return\n       LineNumberTable:\n         line 1031: 0\n         line 1032: 14\n         line 1034: 53\n       LocalVariableTable:\n@@ -1723,18 +1723,18 @@\n          2: lload_0\n          3: lcmp\n          4: iflt          14\n          7: lload         4\n          9: lload_2\n         10: lcmp\n         11: ifle          24\n-        14: new           #2                  // class java/lang/IllegalArgumentException\n+        14: new           #7                  // class java/lang/IllegalArgumentException\n         17: dup\n         18: aload         6\n-        20: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        20: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         23: athrow\n         24: return\n       LineNumberTable:\n         line 1054: 0\n         line 1055: 14\n         line 1057: 24\n       LocalVariableTable:\n@@ -1756,36 +1756,36 @@\n          2: dload_0\n          3: dcmpg\n          4: iflt          14\n          7: dload         4\n          9: dload_2\n         10: dcmpl\n         11: ifle          53\n-        14: new           #2                  // class java/lang/IllegalArgumentException\n+        14: new           #7                  // class java/lang/IllegalArgumentException\n         17: dup\n-        18: ldc           #60                 // String The value %s is not in the specified inclusive range of %s to %s\n+        18: ldc           #191                // String The value %s is not in the specified inclusive range of %s to %s\n         20: iconst_3\n-        21: anewarray     #3                  // class java/lang/Object\n+        21: anewarray     #2                  // class java/lang/Object\n         24: dup\n         25: iconst_0\n         26: dload         4\n-        28: invokestatic  #7                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n+        28: invokestatic  #24                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n         31: aastore\n         32: dup\n         33: iconst_1\n         34: dload_0\n-        35: invokestatic  #7                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n+        35: invokestatic  #24                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n         38: aastore\n         39: dup\n         40: iconst_2\n         41: dload_2\n-        42: invokestatic  #7                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n+        42: invokestatic  #24                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n         45: aastore\n-        46: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        49: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        46: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        49: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         52: athrow\n         53: return\n       LineNumberTable:\n         line 1075: 0\n         line 1076: 14\n         line 1078: 53\n       LocalVariableTable:\n@@ -1806,18 +1806,18 @@\n          2: dload_0\n          3: dcmpg\n          4: iflt          14\n          7: dload         4\n          9: dload_2\n         10: dcmpl\n         11: ifle          24\n-        14: new           #2                  // class java/lang/IllegalArgumentException\n+        14: new           #7                  // class java/lang/IllegalArgumentException\n         17: dup\n         18: aload         6\n-        20: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        20: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         23: athrow\n         24: return\n       LineNumberTable:\n         line 1098: 0\n         line 1099: 14\n         line 1101: 24\n       LocalVariableTable:\n@@ -1833,39 +1833,39 @@\n   public static <T extends java.lang.Object> void exclusiveBetween(T, T, java.lang.Comparable<T>);\n     descriptor: (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Comparable;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=7, locals=3, args_size=3\n          0: aload_2\n          1: aload_0\n-         2: invokeinterface #59,  2           // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I\n+         2: invokeinterface #185,  2          // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I\n          7: ifle          20\n         10: aload_2\n         11: aload_1\n-        12: invokeinterface #59,  2           // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I\n+        12: invokeinterface #185,  2          // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I\n         17: iflt          49\n-        20: new           #2                  // class java/lang/IllegalArgumentException\n+        20: new           #7                  // class java/lang/IllegalArgumentException\n         23: dup\n-        24: ldc           #61                 // String The value %s is not in the specified exclusive range of %s to %s\n+        24: ldc           #193                // String The value %s is not in the specified exclusive range of %s to %s\n         26: iconst_3\n-        27: anewarray     #3                  // class java/lang/Object\n+        27: anewarray     #2                  // class java/lang/Object\n         30: dup\n         31: iconst_0\n         32: aload_2\n         33: aastore\n         34: dup\n         35: iconst_1\n         36: aload_0\n         37: aastore\n         38: dup\n         39: iconst_2\n         40: aload_1\n         41: aastore\n-        42: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        45: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        42: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        45: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         48: athrow\n         49: return\n       LineNumberTable:\n         line 1123: 0\n         line 1124: 20\n         line 1126: 49\n       LocalVariableTable:\n@@ -1877,35 +1877,35 @@\n         Start  Length  Slot  Name   Signature\n             0      50     0 start   TT;\n             0      50     1   end   TT;\n             0      50     2 value   Ljava/lang/Comparable<TT;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 20 /* same */\n         frame_type = 28 /* same */\n-    Signature: #192                         // <T:Ljava/lang/Object;>(TT;TT;Ljava/lang/Comparable<TT;>;)V\n+    Signature: #321                         // <T:Ljava/lang/Object;>(TT;TT;Ljava/lang/Comparable<TT;>;)V\n \n   public static <T extends java.lang.Object> void exclusiveBetween(T, T, java.lang.Comparable<T>, java.lang.String, java.lang.Object...);\n     descriptor: (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/String;[Ljava/lang/Object;)V\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=5, args_size=5\n          0: aload_2\n          1: aload_0\n-         2: invokeinterface #59,  2           // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I\n+         2: invokeinterface #185,  2          // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I\n          7: ifle          20\n         10: aload_2\n         11: aload_1\n-        12: invokeinterface #59,  2           // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I\n+        12: invokeinterface #185,  2          // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I\n         17: iflt          34\n-        20: new           #2                  // class java/lang/IllegalArgumentException\n+        20: new           #7                  // class java/lang/IllegalArgumentException\n         23: dup\n         24: aload_3\n         25: aload         4\n-        27: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        30: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        27: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        30: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         33: athrow\n         34: return\n       LineNumberTable:\n         line 1148: 0\n         line 1149: 20\n         line 1151: 34\n       LocalVariableTable:\n@@ -1919,51 +1919,51 @@\n         Start  Length  Slot  Name   Signature\n             0      35     0 start   TT;\n             0      35     1   end   TT;\n             0      35     2 value   Ljava/lang/Comparable<TT;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 20 /* same */\n         frame_type = 13 /* same */\n-    Signature: #194                         // <T:Ljava/lang/Object;>(TT;TT;Ljava/lang/Comparable<TT;>;Ljava/lang/String;[Ljava/lang/Object;)V\n+    Signature: #323                         // <T:Ljava/lang/Object;>(TT;TT;Ljava/lang/Comparable<TT;>;Ljava/lang/String;[Ljava/lang/Object;)V\n \n   public static void exclusiveBetween(long, long, long);\n     descriptor: (JJJ)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=8, locals=6, args_size=3\n          0: lload         4\n          2: lload_0\n          3: lcmp\n          4: ifle          14\n          7: lload         4\n          9: lload_2\n         10: lcmp\n         11: iflt          53\n-        14: new           #2                  // class java/lang/IllegalArgumentException\n+        14: new           #7                  // class java/lang/IllegalArgumentException\n         17: dup\n-        18: ldc           #61                 // String The value %s is not in the specified exclusive range of %s to %s\n+        18: ldc           #193                // String The value %s is not in the specified exclusive range of %s to %s\n         20: iconst_3\n-        21: anewarray     #3                  // class java/lang/Object\n+        21: anewarray     #2                  // class java/lang/Object\n         24: dup\n         25: iconst_0\n         26: lload         4\n-        28: invokestatic  #4                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+        28: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n         31: aastore\n         32: dup\n         33: iconst_1\n         34: lload_0\n-        35: invokestatic  #4                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+        35: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n         38: aastore\n         39: dup\n         40: iconst_2\n         41: lload_2\n-        42: invokestatic  #4                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+        42: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n         45: aastore\n-        46: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        49: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        46: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        49: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         52: athrow\n         53: return\n       LineNumberTable:\n         line 1169: 0\n         line 1170: 14\n         line 1172: 53\n       LocalVariableTable:\n@@ -1984,18 +1984,18 @@\n          2: lload_0\n          3: lcmp\n          4: ifle          14\n          7: lload         4\n          9: lload_2\n         10: lcmp\n         11: iflt          24\n-        14: new           #2                  // class java/lang/IllegalArgumentException\n+        14: new           #7                  // class java/lang/IllegalArgumentException\n         17: dup\n         18: aload         6\n-        20: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        20: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         23: athrow\n         24: return\n       LineNumberTable:\n         line 1192: 0\n         line 1193: 14\n         line 1195: 24\n       LocalVariableTable:\n@@ -2017,36 +2017,36 @@\n          2: dload_0\n          3: dcmpg\n          4: ifle          14\n          7: dload         4\n          9: dload_2\n         10: dcmpl\n         11: iflt          53\n-        14: new           #2                  // class java/lang/IllegalArgumentException\n+        14: new           #7                  // class java/lang/IllegalArgumentException\n         17: dup\n-        18: ldc           #61                 // String The value %s is not in the specified exclusive range of %s to %s\n+        18: ldc           #193                // String The value %s is not in the specified exclusive range of %s to %s\n         20: iconst_3\n-        21: anewarray     #3                  // class java/lang/Object\n+        21: anewarray     #2                  // class java/lang/Object\n         24: dup\n         25: iconst_0\n         26: dload         4\n-        28: invokestatic  #7                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n+        28: invokestatic  #24                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n         31: aastore\n         32: dup\n         33: iconst_1\n         34: dload_0\n-        35: invokestatic  #7                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n+        35: invokestatic  #24                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n         38: aastore\n         39: dup\n         40: iconst_2\n         41: dload_2\n-        42: invokestatic  #7                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n+        42: invokestatic  #24                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n         45: aastore\n-        46: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        49: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        46: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        49: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         52: athrow\n         53: return\n       LineNumberTable:\n         line 1213: 0\n         line 1214: 14\n         line 1216: 53\n       LocalVariableTable:\n@@ -2067,18 +2067,18 @@\n          2: dload_0\n          3: dcmpg\n          4: ifle          14\n          7: dload         4\n          9: dload_2\n         10: dcmpl\n         11: iflt          24\n-        14: new           #2                  // class java/lang/IllegalArgumentException\n+        14: new           #7                  // class java/lang/IllegalArgumentException\n         17: dup\n         18: aload         6\n-        20: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        20: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         23: athrow\n         24: return\n       LineNumberTable:\n         line 1236: 0\n         line 1237: 14\n         line 1239: 24\n       LocalVariableTable:\n@@ -2094,38 +2094,38 @@\n   public static void isInstanceOf(java.lang.Class<?>, java.lang.Object);\n     descriptor: (Ljava/lang/Class;Ljava/lang/Object;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=7, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #62                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n+         2: invokevirtual #195                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n          5: ifne          51\n-         8: new           #2                  // class java/lang/IllegalArgumentException\n+         8: new           #7                  // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #63                 // String Expected type: %s, actual: %s\n+        12: ldc           #201                // String Expected type: %s, actual: %s\n         14: iconst_2\n-        15: anewarray     #3                  // class java/lang/Object\n+        15: anewarray     #2                  // class java/lang/Object\n         18: dup\n         19: iconst_0\n         20: aload_0\n-        21: invokevirtual #64                 // Method java/lang/Class.getName:()Ljava/lang/String;\n+        21: invokevirtual #203                // Method java/lang/Class.getName:()Ljava/lang/String;\n         24: aastore\n         25: dup\n         26: iconst_1\n         27: aload_1\n         28: ifnonnull     36\n-        31: ldc           #65                 // String null\n+        31: ldc           #207                // String null\n         33: goto          43\n         36: aload_1\n-        37: invokevirtual #66                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-        40: invokevirtual #64                 // Method java/lang/Class.getName:()Ljava/lang/String;\n+        37: invokevirtual #209                // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        40: invokevirtual #203                // Method java/lang/Class.getName:()Ljava/lang/String;\n         43: aastore\n-        44: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        47: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        44: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        47: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         50: athrow\n         51: return\n       LineNumberTable:\n         line 1262: 0\n         line 1263: 8\n         line 1264: 27\n         line 1263: 44\n@@ -2143,31 +2143,31 @@\n           locals = [ class java/lang/Class, class java/lang/Object ]\n           stack = [ uninitialized 8, uninitialized 8, class java/lang/String, class \"[Ljava/lang/Object;\", class \"[Ljava/lang/Object;\", int ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 6\n           locals = [ class java/lang/Class, class java/lang/Object ]\n           stack = [ uninitialized 8, uninitialized 8, class java/lang/String, class \"[Ljava/lang/Object;\", class \"[Ljava/lang/Object;\", int, class java/lang/String ]\n         frame_type = 7 /* same */\n-    Signature: #209                         // (Ljava/lang/Class<*>;Ljava/lang/Object;)V\n+    Signature: #336                         // (Ljava/lang/Class<*>;Ljava/lang/Object;)V\n \n   public static void isInstanceOf(java.lang.Class<?>, java.lang.Object, java.lang.String, java.lang.Object...);\n     descriptor: (Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #62                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n+         2: invokevirtual #195                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n          5: ifne          21\n-         8: new           #2                  // class java/lang/IllegalArgumentException\n+         8: new           #7                  // class java/lang/IllegalArgumentException\n         11: dup\n         12: aload_2\n         13: aload_3\n-        14: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        17: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        14: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        17: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         20: athrow\n         21: return\n       LineNumberTable:\n         line 1287: 0\n         line 1288: 8\n         line 1290: 21\n       LocalVariableTable:\n@@ -2177,46 +2177,46 @@\n             0      22     2 message   Ljava/lang/String;\n             0      22     3 values   [Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0  type   Ljava/lang/Class<*>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 21 /* same */\n-    Signature: #211                         // (Ljava/lang/Class<*>;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V\n+    Signature: #338                         // (Ljava/lang/Class<*>;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V\n \n   public static void isAssignableFrom(java.lang.Class<?>, java.lang.Class<?>);\n     descriptor: (Ljava/lang/Class;Ljava/lang/Class;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=7, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #67                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z\n+         2: invokevirtual #213                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z\n          5: ifne          48\n-         8: new           #2                  // class java/lang/IllegalArgumentException\n+         8: new           #7                  // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #68                 // String Cannot assign a %s to a %s\n+        12: ldc           #217                // String Cannot assign a %s to a %s\n         14: iconst_2\n-        15: anewarray     #3                  // class java/lang/Object\n+        15: anewarray     #2                  // class java/lang/Object\n         18: dup\n         19: iconst_0\n         20: aload_1\n         21: ifnonnull     29\n-        24: ldc           #65                 // String null\n+        24: ldc           #207                // String null\n         26: goto          33\n         29: aload_1\n-        30: invokevirtual #64                 // Method java/lang/Class.getName:()Ljava/lang/String;\n+        30: invokevirtual #203                // Method java/lang/Class.getName:()Ljava/lang/String;\n         33: aastore\n         34: dup\n         35: iconst_1\n         36: aload_0\n-        37: invokevirtual #64                 // Method java/lang/Class.getName:()Ljava/lang/String;\n+        37: invokevirtual #203                // Method java/lang/Class.getName:()Ljava/lang/String;\n         40: aastore\n-        41: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        44: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        41: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        44: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         47: athrow\n         48: return\n       LineNumberTable:\n         line 1313: 0\n         line 1314: 8\n         line 1315: 37\n         line 1314: 41\n@@ -2235,31 +2235,31 @@\n           locals = [ class java/lang/Class, class java/lang/Class ]\n           stack = [ uninitialized 8, uninitialized 8, class java/lang/String, class \"[Ljava/lang/Object;\", class \"[Ljava/lang/Object;\", int ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 3\n           locals = [ class java/lang/Class, class java/lang/Class ]\n           stack = [ uninitialized 8, uninitialized 8, class java/lang/String, class \"[Ljava/lang/Object;\", class \"[Ljava/lang/Object;\", int, class java/lang/String ]\n         frame_type = 14 /* same */\n-    Signature: #215                         // (Ljava/lang/Class<*>;Ljava/lang/Class<*>;)V\n+    Signature: #341                         // (Ljava/lang/Class<*>;Ljava/lang/Class<*>;)V\n \n   public static void isAssignableFrom(java.lang.Class<?>, java.lang.Class<?>, java.lang.String, java.lang.Object...);\n     descriptor: (Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)V\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #67                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z\n+         2: invokevirtual #213                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z\n          5: ifne          21\n-         8: new           #2                  // class java/lang/IllegalArgumentException\n+         8: new           #7                  // class java/lang/IllegalArgumentException\n         11: dup\n         12: aload_2\n         13: aload_3\n-        14: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        17: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        14: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        17: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         20: athrow\n         21: return\n       LineNumberTable:\n         line 1338: 0\n         line 1339: 8\n         line 1341: 21\n       LocalVariableTable:\n@@ -2270,10 +2270,10 @@\n             0      22     3 values   [Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0 superType   Ljava/lang/Class<*>;\n             0      22     1  type   Ljava/lang/Class<*>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 21 /* same */\n-    Signature: #217                         // (Ljava/lang/Class<*>;Ljava/lang/Class<*>;Ljava/lang/String;[Ljava/lang/Object;)V\n+    Signature: #343                         // (Ljava/lang/Class<*>;Ljava/lang/Class<*>;Ljava/lang/String;[Ljava/lang/Object;)V\n }\n SourceFile: \"Validate.java\"\n"}]}
