{"diffoscope-json-version": 1, "source1": "first/PathVisitorFileFilter.class", "source2": "second/PathVisitorFileFilter.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -21,30 +21,30 @@\n     }\n     \n     public boolean accept(final File file) {\n         try {\n             final Path path = file.toPath();\n             return this.visitFile(path, file.exists() ? PathUtils.readBasicFileAttributes(path) : null) == FileVisitResult.CONTINUE;\n         }\n-        catch (final IOException e) {\n-            return this.handle((Throwable)e) == FileVisitResult.CONTINUE;\n+        catch (final IOException ex) {\n+            return this.handle((Throwable)ex) == FileVisitResult.CONTINUE;\n         }\n     }\n     \n-    public boolean accept(final File dir, final String name) {\n+    public boolean accept(final File file, final String other) {\n         try {\n-            final Path path = dir.toPath().resolve(name);\n-            return this.accept(path, PathUtils.readBasicFileAttributes(path)) == FileVisitResult.CONTINUE;\n+            final Path resolve = file.toPath().resolve(other);\n+            return this.accept(resolve, PathUtils.readBasicFileAttributes(resolve)) == FileVisitResult.CONTINUE;\n         }\n-        catch (final IOException e) {\n-            return this.handle((Throwable)e) == FileVisitResult.CONTINUE;\n+        catch (final IOException ex) {\n+            return this.handle((Throwable)ex) == FileVisitResult.CONTINUE;\n         }\n     }\n     \n-    public FileVisitResult accept(final Path path, final BasicFileAttributes attributes) {\n-        return this.get(() -> Files.isDirectory(path, new LinkOption[0]) ? this.pathVisitor.postVisitDirectory((Object)path, (IOException)null) : this.visitFile(path, attributes));\n+    public FileVisitResult accept(final Path path, final BasicFileAttributes basicFileAttributes) {\n+        return this.get(() -> Files.isDirectory(path, new LinkOption[0]) ? this.pathVisitor.postVisitDirectory((Object)path, (IOException)null) : this.visitFile(path, basicFileAttributes));\n     }\n     \n-    public FileVisitResult visitFile(final Path path, final BasicFileAttributes attributes) throws IOException {\n-        return this.pathVisitor.visitFile((Object)path, attributes);\n+    public FileVisitResult visitFile(final Path path, final BasicFileAttributes basicFileAttributes) throws IOException {\n+        return this.pathVisitor.visitFile((Object)path, basicFileAttributes);\n     }\n }\n"}]}
