{"diffoscope-json-version": 1, "source1": "first/UncheckedFilterInputStream.class", "source2": "second/UncheckedFilterInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,343 +1,343 @@\n-  SHA-256 checksum e875fa928ec6f4da196dee370f716ecd5fa957ff4d8723d231a38397a5c35483\n+  SHA-256 checksum a3d0837dd052abedaa17165eb15f0067b91518157fe1ba082039748653cc5783\n   Compiled from \"UncheckedFilterInputStream.java\"\n public final class org.apache.commons.io.input.UncheckedFilterInputStream extends java.io.FilterInputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #29                         // org/apache/commons/io/input/UncheckedFilterInputStream\n-  super_class: #30                        // java/io/FilterInputStream\n+  this_class: #2                          // org/apache/commons/io/input/UncheckedFilterInputStream\n+  super_class: #13                        // java/io/FilterInputStream\n   interfaces: 0, fields: 0, methods: 17, attributes: 3\n Constant pool:\n-    #1 = Methodref          #29.#67       // org/apache/commons/io/input/UncheckedFilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-    #2 = Class              #68           // org/apache/commons/io/input/UncheckedFilterInputStream$Builder\n-    #3 = Methodref          #2.#69        // org/apache/commons/io/input/UncheckedFilterInputStream$Builder.\"<init>\":()V\n-    #4 = Methodref          #30.#67       // java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-    #5 = InvokeDynamic      #0:#75        // #0:get:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOSupplier;\n-    #6 = Methodref          #76.#77       // org/apache/commons/io/function/Uncheck.get:(Lorg/apache/commons/io/function/IOSupplier;)Ljava/lang/Object;\n-    #7 = Class              #78           // java/lang/Integer\n-    #8 = Methodref          #7.#79        // java/lang/Integer.intValue:()I\n-    #9 = InvokeDynamic      #1:#82        // #1:run:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IORunnable;\n-   #10 = Methodref          #76.#83       // org/apache/commons/io/function/Uncheck.run:(Lorg/apache/commons/io/function/IORunnable;)V\n-   #11 = InvokeDynamic      #2:#75        // #2:get:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOSupplier;\n-   #12 = InvokeDynamic      #3:#88        // #3:apply:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOFunction;\n-   #13 = Methodref          #76.#89       // org/apache/commons/io/function/Uncheck.apply:(Lorg/apache/commons/io/function/IOFunction;Ljava/lang/Object;)Ljava/lang/Object;\n-   #14 = InvokeDynamic      #4:#93        // #4:apply:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOTriFunction;\n-   #15 = Methodref          #7.#94        // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #16 = Methodref          #76.#95       // org/apache/commons/io/function/Uncheck.apply:(Lorg/apache/commons/io/function/IOTriFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #17 = InvokeDynamic      #5:#82        // #5:run:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IORunnable;\n-   #18 = InvokeDynamic      #6:#88        // #6:apply:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOFunction;\n-   #19 = Methodref          #20.#99       // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n-   #20 = Class              #100          // java/lang/Long\n-   #21 = Methodref          #20.#101      // java/lang/Long.longValue:()J\n-   #22 = Methodref          #30.#102      // java/io/FilterInputStream.skip:(J)J\n-   #23 = Methodref          #30.#103      // java/io/FilterInputStream.reset:()V\n-   #24 = Methodref          #30.#104      // java/io/FilterInputStream.read:([BII)I\n-   #25 = Methodref          #30.#105      // java/io/FilterInputStream.read:([B)I\n-   #26 = Methodref          #30.#106      // java/io/FilterInputStream.read:()I\n-   #27 = Methodref          #30.#107      // java/io/FilterInputStream.close:()V\n-   #28 = Methodref          #30.#108      // java/io/FilterInputStream.available:()I\n-   #29 = Class              #109          // org/apache/commons/io/input/UncheckedFilterInputStream\n-   #30 = Class              #110          // java/io/FilterInputStream\n-   #31 = Class              #111          // org/apache/commons/io/input/UncheckedFilterInputStream$1\n-   #32 = Utf8               InnerClasses\n-   #33 = Utf8               Builder\n-   #34 = Utf8               builder\n-   #35 = Utf8               ()Lorg/apache/commons/io/input/UncheckedFilterInputStream$Builder;\n-   #36 = Utf8               Code\n-   #37 = Utf8               LineNumberTable\n-   #38 = Utf8               <init>\n-   #39 = Utf8               (Ljava/io/InputStream;)V\n-   #40 = Utf8               available\n-   #41 = Utf8               ()I\n-   #42 = Utf8               Exceptions\n-   #43 = Class              #112          // java/io/UncheckedIOException\n-   #44 = Utf8               close\n-   #45 = Utf8               ()V\n-   #46 = Utf8               read\n-   #47 = Utf8               ([B)I\n-   #48 = Utf8               ([BII)I\n-   #49 = Utf8               reset\n-   #50 = Utf8               skip\n-   #51 = Utf8               (J)J\n-   #52 = Utf8               lambda$skip$6\n-   #53 = Utf8               (J)Ljava/lang/Long;\n-   #54 = Class              #113          // java/io/IOException\n-   #55 = Utf8               lambda$reset$5\n-   #56 = Utf8               lambda$read$4\n-   #57 = Utf8               ([BII)Ljava/lang/Integer;\n-   #58 = Utf8               lambda$read$3\n-   #59 = Utf8               ([B)Ljava/lang/Integer;\n-   #60 = Utf8               lambda$read$2\n-   #61 = Utf8               ()Ljava/lang/Integer;\n-   #62 = Utf8               lambda$close$1\n-   #63 = Utf8               lambda$available$0\n-   #64 = Utf8               (Ljava/io/InputStream;Lorg/apache/commons/io/input/UncheckedFilterInputStream$1;)V\n-   #65 = Utf8               SourceFile\n-   #66 = Utf8               UncheckedFilterInputStream.java\n-   #67 = NameAndType        #38:#39       // \"<init>\":(Ljava/io/InputStream;)V\n-   #68 = Utf8               org/apache/commons/io/input/UncheckedFilterInputStream$Builder\n-   #69 = NameAndType        #38:#45       // \"<init>\":()V\n-   #70 = Utf8               BootstrapMethods\n-   #71 = MethodHandle       6:#114        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #72 = MethodType         #115          //  ()Ljava/lang/Object;\n-   #73 = MethodHandle       7:#116        // REF_invokeSpecial org/apache/commons/io/input/UncheckedFilterInputStream.lambda$available$0:()Ljava/lang/Integer;\n-   #74 = MethodType         #61           //  ()Ljava/lang/Integer;\n-   #75 = NameAndType        #117:#118     // get:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOSupplier;\n-   #76 = Class              #119          // org/apache/commons/io/function/Uncheck\n-   #77 = NameAndType        #117:#120     // get:(Lorg/apache/commons/io/function/IOSupplier;)Ljava/lang/Object;\n-   #78 = Utf8               java/lang/Integer\n-   #79 = NameAndType        #121:#41      // intValue:()I\n-   #80 = MethodType         #45           //  ()V\n-   #81 = MethodHandle       7:#122        // REF_invokeSpecial org/apache/commons/io/input/UncheckedFilterInputStream.lambda$close$1:()V\n-   #82 = NameAndType        #123:#124     // run:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IORunnable;\n-   #83 = NameAndType        #123:#125     // run:(Lorg/apache/commons/io/function/IORunnable;)V\n-   #84 = MethodHandle       7:#126        // REF_invokeSpecial org/apache/commons/io/input/UncheckedFilterInputStream.lambda$read$2:()Ljava/lang/Integer;\n-   #85 = MethodType         #127          //  (Ljava/lang/Object;)Ljava/lang/Object;\n-   #86 = MethodHandle       7:#128        // REF_invokeSpecial org/apache/commons/io/input/UncheckedFilterInputStream.lambda$read$3:([B)Ljava/lang/Integer;\n-   #87 = MethodType         #59           //  ([B)Ljava/lang/Integer;\n-   #88 = NameAndType        #129:#130     // apply:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOFunction;\n-   #89 = NameAndType        #129:#131     // apply:(Lorg/apache/commons/io/function/IOFunction;Ljava/lang/Object;)Ljava/lang/Object;\n-   #90 = MethodType         #132          //  (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #91 = MethodHandle       7:#133        // REF_invokeSpecial org/apache/commons/io/input/UncheckedFilterInputStream.lambda$read$4:([BII)Ljava/lang/Integer;\n-   #92 = MethodType         #134          //  ([BLjava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;\n-   #93 = NameAndType        #129:#135     // apply:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOTriFunction;\n-   #94 = NameAndType        #136:#137     // valueOf:(I)Ljava/lang/Integer;\n-   #95 = NameAndType        #129:#138     // apply:(Lorg/apache/commons/io/function/IOTriFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #96 = MethodHandle       7:#139        // REF_invokeSpecial org/apache/commons/io/input/UncheckedFilterInputStream.lambda$reset$5:()V\n-   #97 = MethodHandle       7:#140        // REF_invokeSpecial org/apache/commons/io/input/UncheckedFilterInputStream.lambda$skip$6:(J)Ljava/lang/Long;\n-   #98 = MethodType         #141          //  (Ljava/lang/Long;)Ljava/lang/Long;\n-   #99 = NameAndType        #136:#53      // valueOf:(J)Ljava/lang/Long;\n-  #100 = Utf8               java/lang/Long\n-  #101 = NameAndType        #142:#143     // longValue:()J\n-  #102 = NameAndType        #50:#51       // skip:(J)J\n-  #103 = NameAndType        #49:#45       // reset:()V\n-  #104 = NameAndType        #46:#48       // read:([BII)I\n-  #105 = NameAndType        #46:#47       // read:([B)I\n-  #106 = NameAndType        #46:#41       // read:()I\n-  #107 = NameAndType        #44:#45       // close:()V\n-  #108 = NameAndType        #40:#41       // available:()I\n-  #109 = Utf8               org/apache/commons/io/input/UncheckedFilterInputStream\n-  #110 = Utf8               java/io/FilterInputStream\n-  #111 = Utf8               org/apache/commons/io/input/UncheckedFilterInputStream$1\n-  #112 = Utf8               java/io/UncheckedIOException\n-  #113 = Utf8               java/io/IOException\n-  #114 = Methodref          #144.#145     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #115 = Utf8               ()Ljava/lang/Object;\n-  #116 = Methodref          #29.#146      // org/apache/commons/io/input/UncheckedFilterInputStream.lambda$available$0:()Ljava/lang/Integer;\n-  #117 = Utf8               get\n-  #118 = Utf8               (Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOSupplier;\n-  #119 = Utf8               org/apache/commons/io/function/Uncheck\n-  #120 = Utf8               (Lorg/apache/commons/io/function/IOSupplier;)Ljava/lang/Object;\n-  #121 = Utf8               intValue\n-  #122 = Methodref          #29.#147      // org/apache/commons/io/input/UncheckedFilterInputStream.lambda$close$1:()V\n-  #123 = Utf8               run\n-  #124 = Utf8               (Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IORunnable;\n-  #125 = Utf8               (Lorg/apache/commons/io/function/IORunnable;)V\n-  #126 = Methodref          #29.#148      // org/apache/commons/io/input/UncheckedFilterInputStream.lambda$read$2:()Ljava/lang/Integer;\n-  #127 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #128 = Methodref          #29.#149      // org/apache/commons/io/input/UncheckedFilterInputStream.lambda$read$3:([B)Ljava/lang/Integer;\n-  #129 = Utf8               apply\n-  #130 = Utf8               (Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOFunction;\n-  #131 = Utf8               (Lorg/apache/commons/io/function/IOFunction;Ljava/lang/Object;)Ljava/lang/Object;\n-  #132 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #133 = Methodref          #29.#150      // org/apache/commons/io/input/UncheckedFilterInputStream.lambda$read$4:([BII)Ljava/lang/Integer;\n-  #134 = Utf8               ([BLjava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;\n-  #135 = Utf8               (Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOTriFunction;\n-  #136 = Utf8               valueOf\n-  #137 = Utf8               (I)Ljava/lang/Integer;\n-  #138 = Utf8               (Lorg/apache/commons/io/function/IOTriFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #139 = Methodref          #29.#151      // org/apache/commons/io/input/UncheckedFilterInputStream.lambda$reset$5:()V\n-  #140 = Methodref          #29.#152      // org/apache/commons/io/input/UncheckedFilterInputStream.lambda$skip$6:(J)Ljava/lang/Long;\n-  #141 = Utf8               (Ljava/lang/Long;)Ljava/lang/Long;\n-  #142 = Utf8               longValue\n-  #143 = Utf8               ()J\n-  #144 = Class              #153          // java/lang/invoke/LambdaMetafactory\n-  #145 = NameAndType        #154:#157     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #146 = NameAndType        #63:#61       // lambda$available$0:()Ljava/lang/Integer;\n-  #147 = NameAndType        #62:#45       // lambda$close$1:()V\n-  #148 = NameAndType        #60:#61       // lambda$read$2:()Ljava/lang/Integer;\n-  #149 = NameAndType        #58:#59       // lambda$read$3:([B)Ljava/lang/Integer;\n-  #150 = NameAndType        #56:#57       // lambda$read$4:([BII)Ljava/lang/Integer;\n-  #151 = NameAndType        #55:#45       // lambda$reset$5:()V\n-  #152 = NameAndType        #52:#53       // lambda$skip$6:(J)Ljava/lang/Long;\n-  #153 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #154 = Utf8               metafactory\n-  #155 = Class              #159          // java/lang/invoke/MethodHandles$Lookup\n-  #156 = Utf8               Lookup\n-  #157 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #158 = Class              #160          // java/lang/invoke/MethodHandles\n-  #159 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #160 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Methodref          #2.#3         // org/apache/commons/io/input/UncheckedFilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+    #2 = Class              #4            // org/apache/commons/io/input/UncheckedFilterInputStream\n+    #3 = NameAndType        #5:#6         // \"<init>\":(Ljava/io/InputStream;)V\n+    #4 = Utf8               org/apache/commons/io/input/UncheckedFilterInputStream\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (Ljava/io/InputStream;)V\n+    #7 = Class              #8            // org/apache/commons/io/input/UncheckedFilterInputStream$Builder\n+    #8 = Utf8               org/apache/commons/io/input/UncheckedFilterInputStream$Builder\n+    #9 = Methodref          #7.#10        // org/apache/commons/io/input/UncheckedFilterInputStream$Builder.\"<init>\":()V\n+   #10 = NameAndType        #5:#11        // \"<init>\":()V\n+   #11 = Utf8               ()V\n+   #12 = Methodref          #13.#3        // java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #13 = Class              #14           // java/io/FilterInputStream\n+   #14 = Utf8               java/io/FilterInputStream\n+   #15 = InvokeDynamic      #0:#16        // #0:get:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOSupplier;\n+   #16 = NameAndType        #17:#18       // get:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOSupplier;\n+   #17 = Utf8               get\n+   #18 = Utf8               (Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOSupplier;\n+   #19 = Methodref          #20.#21       // org/apache/commons/io/function/Uncheck.get:(Lorg/apache/commons/io/function/IOSupplier;)Ljava/lang/Object;\n+   #20 = Class              #22           // org/apache/commons/io/function/Uncheck\n+   #21 = NameAndType        #17:#23       // get:(Lorg/apache/commons/io/function/IOSupplier;)Ljava/lang/Object;\n+   #22 = Utf8               org/apache/commons/io/function/Uncheck\n+   #23 = Utf8               (Lorg/apache/commons/io/function/IOSupplier;)Ljava/lang/Object;\n+   #24 = Class              #25           // java/lang/Integer\n+   #25 = Utf8               java/lang/Integer\n+   #26 = Methodref          #24.#27       // java/lang/Integer.intValue:()I\n+   #27 = NameAndType        #28:#29       // intValue:()I\n+   #28 = Utf8               intValue\n+   #29 = Utf8               ()I\n+   #30 = InvokeDynamic      #1:#31        // #1:run:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IORunnable;\n+   #31 = NameAndType        #32:#33       // run:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IORunnable;\n+   #32 = Utf8               run\n+   #33 = Utf8               (Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IORunnable;\n+   #34 = Methodref          #20.#35       // org/apache/commons/io/function/Uncheck.run:(Lorg/apache/commons/io/function/IORunnable;)V\n+   #35 = NameAndType        #32:#36       // run:(Lorg/apache/commons/io/function/IORunnable;)V\n+   #36 = Utf8               (Lorg/apache/commons/io/function/IORunnable;)V\n+   #37 = InvokeDynamic      #2:#16        // #2:get:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOSupplier;\n+   #38 = InvokeDynamic      #3:#39        // #3:apply:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOFunction;\n+   #39 = NameAndType        #40:#41       // apply:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOFunction;\n+   #40 = Utf8               apply\n+   #41 = Utf8               (Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOFunction;\n+   #42 = Methodref          #20.#43       // org/apache/commons/io/function/Uncheck.apply:(Lorg/apache/commons/io/function/IOFunction;Ljava/lang/Object;)Ljava/lang/Object;\n+   #43 = NameAndType        #40:#44       // apply:(Lorg/apache/commons/io/function/IOFunction;Ljava/lang/Object;)Ljava/lang/Object;\n+   #44 = Utf8               (Lorg/apache/commons/io/function/IOFunction;Ljava/lang/Object;)Ljava/lang/Object;\n+   #45 = InvokeDynamic      #4:#46        // #4:apply:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOTriFunction;\n+   #46 = NameAndType        #40:#47       // apply:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOTriFunction;\n+   #47 = Utf8               (Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOTriFunction;\n+   #48 = Methodref          #24.#49       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+   #49 = NameAndType        #50:#51       // valueOf:(I)Ljava/lang/Integer;\n+   #50 = Utf8               valueOf\n+   #51 = Utf8               (I)Ljava/lang/Integer;\n+   #52 = Methodref          #20.#53       // org/apache/commons/io/function/Uncheck.apply:(Lorg/apache/commons/io/function/IOTriFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #53 = NameAndType        #40:#54       // apply:(Lorg/apache/commons/io/function/IOTriFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #54 = Utf8               (Lorg/apache/commons/io/function/IOTriFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #55 = InvokeDynamic      #5:#31        // #5:run:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IORunnable;\n+   #56 = InvokeDynamic      #6:#39        // #6:apply:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOFunction;\n+   #57 = Methodref          #58.#59       // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+   #58 = Class              #60           // java/lang/Long\n+   #59 = NameAndType        #50:#61       // valueOf:(J)Ljava/lang/Long;\n+   #60 = Utf8               java/lang/Long\n+   #61 = Utf8               (J)Ljava/lang/Long;\n+   #62 = Methodref          #58.#63       // java/lang/Long.longValue:()J\n+   #63 = NameAndType        #64:#65       // longValue:()J\n+   #64 = Utf8               longValue\n+   #65 = Utf8               ()J\n+   #66 = Methodref          #13.#67       // java/io/FilterInputStream.skip:(J)J\n+   #67 = NameAndType        #68:#69       // skip:(J)J\n+   #68 = Utf8               skip\n+   #69 = Utf8               (J)J\n+   #70 = Methodref          #13.#71       // java/io/FilterInputStream.reset:()V\n+   #71 = NameAndType        #72:#11       // reset:()V\n+   #72 = Utf8               reset\n+   #73 = Methodref          #13.#74       // java/io/FilterInputStream.read:([BII)I\n+   #74 = NameAndType        #75:#76       // read:([BII)I\n+   #75 = Utf8               read\n+   #76 = Utf8               ([BII)I\n+   #77 = Methodref          #13.#78       // java/io/FilterInputStream.read:([B)I\n+   #78 = NameAndType        #75:#79       // read:([B)I\n+   #79 = Utf8               ([B)I\n+   #80 = Methodref          #13.#81       // java/io/FilterInputStream.read:()I\n+   #81 = NameAndType        #75:#29       // read:()I\n+   #82 = Methodref          #13.#83       // java/io/FilterInputStream.close:()V\n+   #83 = NameAndType        #84:#11       // close:()V\n+   #84 = Utf8               close\n+   #85 = Methodref          #13.#86       // java/io/FilterInputStream.available:()I\n+   #86 = NameAndType        #87:#29       // available:()I\n+   #87 = Utf8               available\n+   #88 = Utf8               builder\n+   #89 = Utf8               ()Lorg/apache/commons/io/input/UncheckedFilterInputStream$Builder;\n+   #90 = Utf8               Code\n+   #91 = Utf8               LineNumberTable\n+   #92 = Utf8               Exceptions\n+   #93 = Class              #94           // java/io/UncheckedIOException\n+   #94 = Utf8               java/io/UncheckedIOException\n+   #95 = Utf8               lambda$skip$6\n+   #96 = Class              #97           // java/io/IOException\n+   #97 = Utf8               java/io/IOException\n+   #98 = Utf8               lambda$reset$5\n+   #99 = Utf8               lambda$read$4\n+  #100 = Utf8               ([BII)Ljava/lang/Integer;\n+  #101 = Utf8               lambda$read$3\n+  #102 = Utf8               ([B)Ljava/lang/Integer;\n+  #103 = Utf8               lambda$read$2\n+  #104 = Utf8               ()Ljava/lang/Integer;\n+  #105 = Utf8               lambda$close$1\n+  #106 = Utf8               lambda$available$0\n+  #107 = Utf8               (Ljava/io/InputStream;Lorg/apache/commons/io/input/UncheckedFilterInputStream$1;)V\n+  #108 = Utf8               SourceFile\n+  #109 = Utf8               UncheckedFilterInputStream.java\n+  #110 = Utf8               BootstrapMethods\n+  #111 = MethodHandle       6:#112        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #112 = Methodref          #113.#114     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #113 = Class              #115          // java/lang/invoke/LambdaMetafactory\n+  #114 = NameAndType        #116:#117     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #115 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #116 = Utf8               metafactory\n+  #117 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #118 = MethodType         #119          //  ()Ljava/lang/Object;\n+  #119 = Utf8               ()Ljava/lang/Object;\n+  #120 = MethodHandle       7:#121        // REF_invokeSpecial org/apache/commons/io/input/UncheckedFilterInputStream.lambda$available$0:()Ljava/lang/Integer;\n+  #121 = Methodref          #2.#122       // org/apache/commons/io/input/UncheckedFilterInputStream.lambda$available$0:()Ljava/lang/Integer;\n+  #122 = NameAndType        #106:#104     // lambda$available$0:()Ljava/lang/Integer;\n+  #123 = MethodType         #104          //  ()Ljava/lang/Integer;\n+  #124 = MethodType         #11           //  ()V\n+  #125 = MethodHandle       7:#126        // REF_invokeSpecial org/apache/commons/io/input/UncheckedFilterInputStream.lambda$close$1:()V\n+  #126 = Methodref          #2.#127       // org/apache/commons/io/input/UncheckedFilterInputStream.lambda$close$1:()V\n+  #127 = NameAndType        #105:#11      // lambda$close$1:()V\n+  #128 = MethodHandle       7:#129        // REF_invokeSpecial org/apache/commons/io/input/UncheckedFilterInputStream.lambda$read$2:()Ljava/lang/Integer;\n+  #129 = Methodref          #2.#130       // org/apache/commons/io/input/UncheckedFilterInputStream.lambda$read$2:()Ljava/lang/Integer;\n+  #130 = NameAndType        #103:#104     // lambda$read$2:()Ljava/lang/Integer;\n+  #131 = MethodType         #132          //  (Ljava/lang/Object;)Ljava/lang/Object;\n+  #132 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #133 = MethodHandle       7:#134        // REF_invokeSpecial org/apache/commons/io/input/UncheckedFilterInputStream.lambda$read$3:([B)Ljava/lang/Integer;\n+  #134 = Methodref          #2.#135       // org/apache/commons/io/input/UncheckedFilterInputStream.lambda$read$3:([B)Ljava/lang/Integer;\n+  #135 = NameAndType        #101:#102     // lambda$read$3:([B)Ljava/lang/Integer;\n+  #136 = MethodType         #102          //  ([B)Ljava/lang/Integer;\n+  #137 = MethodType         #138          //  (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #138 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #139 = MethodHandle       7:#140        // REF_invokeSpecial org/apache/commons/io/input/UncheckedFilterInputStream.lambda$read$4:([BII)Ljava/lang/Integer;\n+  #140 = Methodref          #2.#141       // org/apache/commons/io/input/UncheckedFilterInputStream.lambda$read$4:([BII)Ljava/lang/Integer;\n+  #141 = NameAndType        #99:#100      // lambda$read$4:([BII)Ljava/lang/Integer;\n+  #142 = MethodType         #143          //  ([BLjava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;\n+  #143 = Utf8               ([BLjava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;\n+  #144 = MethodHandle       7:#145        // REF_invokeSpecial org/apache/commons/io/input/UncheckedFilterInputStream.lambda$reset$5:()V\n+  #145 = Methodref          #2.#146       // org/apache/commons/io/input/UncheckedFilterInputStream.lambda$reset$5:()V\n+  #146 = NameAndType        #98:#11       // lambda$reset$5:()V\n+  #147 = MethodHandle       7:#148        // REF_invokeSpecial org/apache/commons/io/input/UncheckedFilterInputStream.lambda$skip$6:(J)Ljava/lang/Long;\n+  #148 = Methodref          #2.#149       // org/apache/commons/io/input/UncheckedFilterInputStream.lambda$skip$6:(J)Ljava/lang/Long;\n+  #149 = NameAndType        #95:#61       // lambda$skip$6:(J)Ljava/lang/Long;\n+  #150 = MethodType         #151          //  (Ljava/lang/Long;)Ljava/lang/Long;\n+  #151 = Utf8               (Ljava/lang/Long;)Ljava/lang/Long;\n+  #152 = Utf8               InnerClasses\n+  #153 = Utf8               Builder\n+  #154 = Class              #155          // org/apache/commons/io/input/UncheckedFilterInputStream$1\n+  #155 = Utf8               org/apache/commons/io/input/UncheckedFilterInputStream$1\n+  #156 = Class              #157          // java/lang/invoke/MethodHandles$Lookup\n+  #157 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #158 = Class              #159          // java/lang/invoke/MethodHandles\n+  #159 = Utf8               java/lang/invoke/MethodHandles\n+  #160 = Utf8               Lookup\n {\n   public static org.apache.commons.io.input.UncheckedFilterInputStream$Builder builder();\n     descriptor: ()Lorg/apache/commons/io/input/UncheckedFilterInputStream$Builder;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: new           #2                  // class org/apache/commons/io/input/UncheckedFilterInputStream$Builder\n+         0: new           #7                  // class org/apache/commons/io/input/UncheckedFilterInputStream$Builder\n          3: dup\n-         4: invokespecial #3                  // Method org/apache/commons/io/input/UncheckedFilterInputStream$Builder.\"<init>\":()V\n+         4: invokespecial #9                  // Method org/apache/commons/io/input/UncheckedFilterInputStream$Builder.\"<init>\":()V\n          7: areturn\n       LineNumberTable:\n         line 74: 0\n \n   private org.apache.commons.io.input.UncheckedFilterInputStream(java.io.InputStream);\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #4                  // Method java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+         2: invokespecial #12                 // Method java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n          5: return\n       LineNumberTable:\n         line 84: 0\n         line 85: 5\n \n   public int available() throws java.io.UncheckedIOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokedynamic #5,  0              // InvokeDynamic #0:get:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOSupplier;\n-         6: invokestatic  #6                  // Method org/apache/commons/io/function/Uncheck.get:(Lorg/apache/commons/io/function/IOSupplier;)Ljava/lang/Object;\n-         9: checkcast     #7                  // class java/lang/Integer\n-        12: invokevirtual #8                  // Method java/lang/Integer.intValue:()I\n+         1: invokedynamic #15,  0             // InvokeDynamic #0:get:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOSupplier;\n+         6: invokestatic  #19                 // Method org/apache/commons/io/function/Uncheck.get:(Lorg/apache/commons/io/function/IOSupplier;)Ljava/lang/Object;\n+         9: checkcast     #24                 // class java/lang/Integer\n+        12: invokevirtual #26                 // Method java/lang/Integer.intValue:()I\n         15: ireturn\n       LineNumberTable:\n         line 92: 0\n     Exceptions:\n       throws java.io.UncheckedIOException\n \n   public void close() throws java.io.UncheckedIOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokedynamic #9,  0              // InvokeDynamic #1:run:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IORunnable;\n-         6: invokestatic  #10                 // Method org/apache/commons/io/function/Uncheck.run:(Lorg/apache/commons/io/function/IORunnable;)V\n+         1: invokedynamic #30,  0             // InvokeDynamic #1:run:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IORunnable;\n+         6: invokestatic  #34                 // Method org/apache/commons/io/function/Uncheck.run:(Lorg/apache/commons/io/function/IORunnable;)V\n          9: return\n       LineNumberTable:\n         line 100: 0\n         line 101: 9\n     Exceptions:\n       throws java.io.UncheckedIOException\n \n   public int read() throws java.io.UncheckedIOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokedynamic #11,  0             // InvokeDynamic #2:get:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOSupplier;\n-         6: invokestatic  #6                  // Method org/apache/commons/io/function/Uncheck.get:(Lorg/apache/commons/io/function/IOSupplier;)Ljava/lang/Object;\n-         9: checkcast     #7                  // class java/lang/Integer\n-        12: invokevirtual #8                  // Method java/lang/Integer.intValue:()I\n+         1: invokedynamic #37,  0             // InvokeDynamic #2:get:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOSupplier;\n+         6: invokestatic  #19                 // Method org/apache/commons/io/function/Uncheck.get:(Lorg/apache/commons/io/function/IOSupplier;)Ljava/lang/Object;\n+         9: checkcast     #24                 // class java/lang/Integer\n+        12: invokevirtual #26                 // Method java/lang/Integer.intValue:()I\n         15: ireturn\n       LineNumberTable:\n         line 108: 0\n     Exceptions:\n       throws java.io.UncheckedIOException\n \n   public int read(byte[]) throws java.io.UncheckedIOException;\n     descriptor: ([B)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokedynamic #12,  0             // InvokeDynamic #3:apply:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOFunction;\n+         1: invokedynamic #38,  0             // InvokeDynamic #3:apply:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOFunction;\n          6: aload_1\n-         7: invokestatic  #13                 // Method org/apache/commons/io/function/Uncheck.apply:(Lorg/apache/commons/io/function/IOFunction;Ljava/lang/Object;)Ljava/lang/Object;\n-        10: checkcast     #7                  // class java/lang/Integer\n-        13: invokevirtual #8                  // Method java/lang/Integer.intValue:()I\n+         7: invokestatic  #42                 // Method org/apache/commons/io/function/Uncheck.apply:(Lorg/apache/commons/io/function/IOFunction;Ljava/lang/Object;)Ljava/lang/Object;\n+        10: checkcast     #24                 // class java/lang/Integer\n+        13: invokevirtual #26                 // Method java/lang/Integer.intValue:()I\n         16: ireturn\n       LineNumberTable:\n         line 116: 0\n     Exceptions:\n       throws java.io.UncheckedIOException\n \n   public int read(byte[], int, int) throws java.io.UncheckedIOException;\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: invokedynamic #14,  0             // InvokeDynamic #4:apply:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOTriFunction;\n+         1: invokedynamic #45,  0             // InvokeDynamic #4:apply:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOTriFunction;\n          6: aload_1\n          7: iload_2\n-         8: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+         8: invokestatic  #48                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         11: iload_3\n-        12: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        15: invokestatic  #16                 // Method org/apache/commons/io/function/Uncheck.apply:(Lorg/apache/commons/io/function/IOTriFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-        18: checkcast     #7                  // class java/lang/Integer\n-        21: invokevirtual #8                  // Method java/lang/Integer.intValue:()I\n+        12: invokestatic  #48                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        15: invokestatic  #52                 // Method org/apache/commons/io/function/Uncheck.apply:(Lorg/apache/commons/io/function/IOTriFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+        18: checkcast     #24                 // class java/lang/Integer\n+        21: invokevirtual #26                 // Method java/lang/Integer.intValue:()I\n         24: ireturn\n       LineNumberTable:\n         line 124: 0\n     Exceptions:\n       throws java.io.UncheckedIOException\n \n   public synchronized void reset() throws java.io.UncheckedIOException;\n     descriptor: ()V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokedynamic #17,  0             // InvokeDynamic #5:run:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IORunnable;\n-         6: invokestatic  #10                 // Method org/apache/commons/io/function/Uncheck.run:(Lorg/apache/commons/io/function/IORunnable;)V\n+         1: invokedynamic #55,  0             // InvokeDynamic #5:run:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IORunnable;\n+         6: invokestatic  #34                 // Method org/apache/commons/io/function/Uncheck.run:(Lorg/apache/commons/io/function/IORunnable;)V\n          9: return\n       LineNumberTable:\n         line 132: 0\n         line 133: 9\n     Exceptions:\n       throws java.io.UncheckedIOException\n \n   public long skip(long) throws java.io.UncheckedIOException;\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: invokedynamic #18,  0             // InvokeDynamic #6:apply:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOFunction;\n+         1: invokedynamic #56,  0             // InvokeDynamic #6:apply:(Lorg/apache/commons/io/input/UncheckedFilterInputStream;)Lorg/apache/commons/io/function/IOFunction;\n          6: lload_1\n-         7: invokestatic  #19                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n-        10: invokestatic  #13                 // Method org/apache/commons/io/function/Uncheck.apply:(Lorg/apache/commons/io/function/IOFunction;Ljava/lang/Object;)Ljava/lang/Object;\n-        13: checkcast     #20                 // class java/lang/Long\n-        16: invokevirtual #21                 // Method java/lang/Long.longValue:()J\n+         7: invokestatic  #57                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+        10: invokestatic  #42                 // Method org/apache/commons/io/function/Uncheck.apply:(Lorg/apache/commons/io/function/IOFunction;Ljava/lang/Object;)Ljava/lang/Object;\n+        13: checkcast     #58                 // class java/lang/Long\n+        16: invokevirtual #62                 // Method java/lang/Long.longValue:()J\n         19: lreturn\n       LineNumberTable:\n         line 140: 0\n     Exceptions:\n       throws java.io.UncheckedIOException\n \n   private java.lang.Long lambda$skip$6(long) throws java.io.IOException;\n     descriptor: (J)Ljava/lang/Long;\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n-         2: invokespecial #22                 // Method java/io/FilterInputStream.skip:(J)J\n-         5: invokestatic  #19                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+         2: invokespecial #66                 // Method java/io/FilterInputStream.skip:(J)J\n+         5: invokestatic  #57                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n          8: areturn\n       LineNumberTable:\n         line 140: 0\n     Exceptions:\n       throws java.io.IOException\n \n   private void lambda$reset$5() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #23                 // Method java/io/FilterInputStream.reset:()V\n+         1: invokespecial #70                 // Method java/io/FilterInputStream.reset:()V\n          4: return\n       LineNumberTable:\n         line 132: 0\n     Exceptions:\n       throws java.io.IOException\n \n   private java.lang.Integer lambda$read$4(byte[], int, int) throws java.io.IOException;\n@@ -345,72 +345,72 @@\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokespecial #24                 // Method java/io/FilterInputStream.read:([BII)I\n-         7: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+         4: invokespecial #73                 // Method java/io/FilterInputStream.read:([BII)I\n+         7: invokestatic  #48                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         10: areturn\n       LineNumberTable:\n         line 124: 0\n     Exceptions:\n       throws java.io.IOException\n \n   private java.lang.Integer lambda$read$3(byte[]) throws java.io.IOException;\n     descriptor: ([B)Ljava/lang/Integer;\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #25                 // Method java/io/FilterInputStream.read:([B)I\n-         5: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+         2: invokespecial #77                 // Method java/io/FilterInputStream.read:([B)I\n+         5: invokestatic  #48                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n          8: areturn\n       LineNumberTable:\n         line 116: 0\n     Exceptions:\n       throws java.io.IOException\n \n   private java.lang.Integer lambda$read$2() throws java.io.IOException;\n     descriptor: ()Ljava/lang/Integer;\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #26                 // Method java/io/FilterInputStream.read:()I\n-         4: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+         1: invokespecial #80                 // Method java/io/FilterInputStream.read:()I\n+         4: invokestatic  #48                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n          7: areturn\n       LineNumberTable:\n         line 108: 0\n     Exceptions:\n       throws java.io.IOException\n \n   private void lambda$close$1() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #27                 // Method java/io/FilterInputStream.close:()V\n+         1: invokespecial #82                 // Method java/io/FilterInputStream.close:()V\n          4: return\n       LineNumberTable:\n         line 100: 0\n     Exceptions:\n       throws java.io.IOException\n \n   private java.lang.Integer lambda$available$0() throws java.io.IOException;\n     descriptor: ()Ljava/lang/Integer;\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #28                 // Method java/io/FilterInputStream.available:()I\n-         4: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+         1: invokespecial #85                 // Method java/io/FilterInputStream.available:()I\n+         4: invokestatic  #48                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n          7: areturn\n       LineNumberTable:\n         line 92: 0\n     Exceptions:\n       throws java.io.IOException\n \n   org.apache.commons.io.input.UncheckedFilterInputStream(java.io.InputStream, org.apache.commons.io.input.UncheckedFilterInputStream$1);\n@@ -422,47 +422,47 @@\n          1: aload_1\n          2: invokespecial #1                  // Method \"<init>\":(Ljava/io/InputStream;)V\n          5: return\n       LineNumberTable:\n         line 37: 0\n }\n SourceFile: \"UncheckedFilterInputStream.java\"\n-InnerClasses:\n-  static #31;                             // class org/apache/commons/io/input/UncheckedFilterInputStream$1\n-  public static #33= #2 of #29;           // Builder=class org/apache/commons/io/input/UncheckedFilterInputStream$Builder of class org/apache/commons/io/input/UncheckedFilterInputStream\n-  public static final #156= #155 of #158; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #71 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #111 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #72 ()Ljava/lang/Object;\n-      #73 REF_invokeSpecial org/apache/commons/io/input/UncheckedFilterInputStream.lambda$available$0:()Ljava/lang/Integer;\n-      #74 ()Ljava/lang/Integer;\n-  1: #71 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #118 ()Ljava/lang/Object;\n+      #120 REF_invokeSpecial org/apache/commons/io/input/UncheckedFilterInputStream.lambda$available$0:()Ljava/lang/Integer;\n+      #123 ()Ljava/lang/Integer;\n+  1: #111 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #80 ()V\n-      #81 REF_invokeSpecial org/apache/commons/io/input/UncheckedFilterInputStream.lambda$close$1:()V\n-      #80 ()V\n-  2: #71 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #124 ()V\n+      #125 REF_invokeSpecial org/apache/commons/io/input/UncheckedFilterInputStream.lambda$close$1:()V\n+      #124 ()V\n+  2: #111 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #72 ()Ljava/lang/Object;\n-      #84 REF_invokeSpecial org/apache/commons/io/input/UncheckedFilterInputStream.lambda$read$2:()Ljava/lang/Integer;\n-      #74 ()Ljava/lang/Integer;\n-  3: #71 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #118 ()Ljava/lang/Object;\n+      #128 REF_invokeSpecial org/apache/commons/io/input/UncheckedFilterInputStream.lambda$read$2:()Ljava/lang/Integer;\n+      #123 ()Ljava/lang/Integer;\n+  3: #111 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #85 (Ljava/lang/Object;)Ljava/lang/Object;\n-      #86 REF_invokeSpecial org/apache/commons/io/input/UncheckedFilterInputStream.lambda$read$3:([B)Ljava/lang/Integer;\n-      #87 ([B)Ljava/lang/Integer;\n-  4: #71 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #131 (Ljava/lang/Object;)Ljava/lang/Object;\n+      #133 REF_invokeSpecial org/apache/commons/io/input/UncheckedFilterInputStream.lambda$read$3:([B)Ljava/lang/Integer;\n+      #136 ([B)Ljava/lang/Integer;\n+  4: #111 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #90 (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-      #91 REF_invokeSpecial org/apache/commons/io/input/UncheckedFilterInputStream.lambda$read$4:([BII)Ljava/lang/Integer;\n-      #92 ([BLjava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;\n-  5: #71 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #137 (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+      #139 REF_invokeSpecial org/apache/commons/io/input/UncheckedFilterInputStream.lambda$read$4:([BII)Ljava/lang/Integer;\n+      #142 ([BLjava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;\n+  5: #111 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #80 ()V\n-      #96 REF_invokeSpecial org/apache/commons/io/input/UncheckedFilterInputStream.lambda$reset$5:()V\n-      #80 ()V\n-  6: #71 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #124 ()V\n+      #144 REF_invokeSpecial org/apache/commons/io/input/UncheckedFilterInputStream.lambda$reset$5:()V\n+      #124 ()V\n+  6: #111 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #85 (Ljava/lang/Object;)Ljava/lang/Object;\n-      #97 REF_invokeSpecial org/apache/commons/io/input/UncheckedFilterInputStream.lambda$skip$6:(J)Ljava/lang/Long;\n-      #98 (Ljava/lang/Long;)Ljava/lang/Long;\n+      #131 (Ljava/lang/Object;)Ljava/lang/Object;\n+      #147 REF_invokeSpecial org/apache/commons/io/input/UncheckedFilterInputStream.lambda$skip$6:(J)Ljava/lang/Long;\n+      #150 (Ljava/lang/Long;)Ljava/lang/Long;\n+InnerClasses:\n+  public static #153= #7 of #2;           // Builder=class org/apache/commons/io/input/UncheckedFilterInputStream$Builder of class org/apache/commons/io/input/UncheckedFilterInputStream\n+  static #154;                            // class org/apache/commons/io/input/UncheckedFilterInputStream$1\n+  public static final #160= #156 of #158; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
