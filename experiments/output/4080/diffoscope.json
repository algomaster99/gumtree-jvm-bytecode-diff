{"diffoscope-json-version": 1, "source1": "first/NodeTreeWalker.class", "source2": "second/NodeTreeWalker.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,8 +1,8 @@\n-  SHA-256 checksum 4bf8533a2216407aa03092ecbb8f49467f24d12a18615c57305f575f219d6c5a\n+  SHA-256 checksum a09cd06feea59edd9b21ccd866ecb10d683798bc2243965cd9f9d1a1123c5385\n   Compiled from \"NodeTreeWalker.java\"\n public class org.apache.commons.configuration2.tree.NodeTreeWalker\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #22                         // org/apache/commons/configuration2/tree/NodeTreeWalker\n   super_class: #25                        // java/lang/Object\n@@ -11,32 +11,32 @@\n     #1 = Methodref          #25.#67       // java/lang/Object.\"<init>\":()V\n     #2 = Methodref          #22.#68       // org/apache/commons/configuration2/tree/NodeTreeWalker.checkParameters:(Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/ConfigurationNodeVisitor;Lorg/apache/commons/configuration2/tree/NodeHandler;)Z\n     #3 = Methodref          #22.#69       // org/apache/commons/configuration2/tree/NodeTreeWalker.dfs:(Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/ConfigurationNodeVisitor;Lorg/apache/commons/configuration2/tree/NodeHandler;)V\n     #4 = Methodref          #22.#70       // org/apache/commons/configuration2/tree/NodeTreeWalker.bfs:(Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/ConfigurationNodeVisitor;Lorg/apache/commons/configuration2/tree/NodeHandler;)V\n     #5 = InterfaceMethodref #71.#72       // org/apache/commons/configuration2/tree/ConfigurationNodeVisitor.terminate:()Z\n     #6 = InterfaceMethodref #71.#73       // org/apache/commons/configuration2/tree/ConfigurationNodeVisitor.visitBeforeChildren:(Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/NodeHandler;)V\n     #7 = InterfaceMethodref #74.#75       // org/apache/commons/configuration2/tree/NodeHandler.getChildren:(Ljava/lang/Object;)Ljava/util/List;\n-    #8 = InterfaceMethodref #76.#77       // java/util/List.iterator:()Ljava/util/Iterator;\n-    #9 = InterfaceMethodref #78.#79       // java/util/Iterator.hasNext:()Z\n-   #10 = InterfaceMethodref #78.#80       // java/util/Iterator.next:()Ljava/lang/Object;\n-   #11 = InterfaceMethodref #71.#81       // org/apache/commons/configuration2/tree/ConfigurationNodeVisitor.visitAfterChildren:(Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/NodeHandler;)V\n-   #12 = Class              #82           // java/util/LinkedList\n+    #8 = InterfaceMethodref #60.#76       // java/util/List.iterator:()Ljava/util/Iterator;\n+    #9 = InterfaceMethodref #53.#77       // java/util/Iterator.hasNext:()Z\n+   #10 = InterfaceMethodref #53.#78       // java/util/Iterator.next:()Ljava/lang/Object;\n+   #11 = InterfaceMethodref #71.#79       // org/apache/commons/configuration2/tree/ConfigurationNodeVisitor.visitAfterChildren:(Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/NodeHandler;)V\n+   #12 = Class              #80           // java/util/LinkedList\n    #13 = Methodref          #12.#67       // java/util/LinkedList.\"<init>\":()V\n-   #14 = InterfaceMethodref #76.#83       // java/util/List.add:(Ljava/lang/Object;)Z\n-   #15 = InterfaceMethodref #76.#84       // java/util/List.isEmpty:()Z\n-   #16 = InterfaceMethodref #76.#85       // java/util/List.remove:(I)Ljava/lang/Object;\n-   #17 = InterfaceMethodref #76.#86       // java/util/List.addAll:(Ljava/util/Collection;)Z\n-   #18 = Class              #87           // java/lang/IllegalArgumentException\n-   #19 = String             #88           // Visitor must not be null!\n-   #20 = Methodref          #18.#89       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #21 = String             #90           // NodeHandler must not be null!\n-   #22 = Class              #91           // org/apache/commons/configuration2/tree/NodeTreeWalker\n+   #14 = InterfaceMethodref #60.#81       // java/util/List.add:(Ljava/lang/Object;)Z\n+   #15 = InterfaceMethodref #60.#82       // java/util/List.isEmpty:()Z\n+   #16 = InterfaceMethodref #60.#83       // java/util/List.remove:(I)Ljava/lang/Object;\n+   #17 = InterfaceMethodref #60.#84       // java/util/List.addAll:(Ljava/util/Collection;)Z\n+   #18 = Class              #85           // java/lang/IllegalArgumentException\n+   #19 = String             #86           // Visitor must not be null!\n+   #20 = Methodref          #18.#87       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #21 = String             #88           // NodeHandler must not be null!\n+   #22 = Class              #89           // org/apache/commons/configuration2/tree/NodeTreeWalker\n    #23 = Methodref          #22.#67       // org/apache/commons/configuration2/tree/NodeTreeWalker.\"<init>\":()V\n-   #24 = Fieldref           #22.#92       // org/apache/commons/configuration2/tree/NodeTreeWalker.INSTANCE:Lorg/apache/commons/configuration2/tree/NodeTreeWalker;\n-   #25 = Class              #93           // java/lang/Object\n+   #24 = Fieldref           #22.#90       // org/apache/commons/configuration2/tree/NodeTreeWalker.INSTANCE:Lorg/apache/commons/configuration2/tree/NodeTreeWalker;\n+   #25 = Class              #91           // java/lang/Object\n    #26 = Utf8               INSTANCE\n    #27 = Utf8               Lorg/apache/commons/configuration2/tree/NodeTreeWalker;\n    #28 = Utf8               <init>\n    #29 = Utf8               ()V\n    #30 = Utf8               Code\n    #31 = Utf8               LineNumberTable\n    #32 = Utf8               LocalVariableTable\n@@ -56,79 +56,77 @@\n    #46 = Utf8               StackMapTable\n    #47 = Utf8               Signature\n    #48 = Utf8               <T:Ljava/lang/Object;>(TT;Lorg/apache/commons/configuration2/tree/ConfigurationNodeVisitor<TT;>;Lorg/apache/commons/configuration2/tree/NodeHandler<TT;>;)V\n    #49 = Utf8               walkBFS\n    #50 = Utf8               dfs\n    #51 = Utf8               c\n    #52 = Utf8               node\n-   #53 = Class              #94           // java/util/Iterator\n+   #53 = Class              #92           // java/util/Iterator\n    #54 = Utf8               bfs\n    #55 = Utf8               pendingNodes\n    #56 = Utf8               Ljava/util/List;\n    #57 = Utf8               cancel\n    #58 = Utf8               Z\n    #59 = Utf8               Ljava/util/List<TT;>;\n-   #60 = Class              #95           // java/util/List\n+   #60 = Class              #93           // java/util/List\n    #61 = Utf8               checkParameters\n    #62 = Utf8               (Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/ConfigurationNodeVisitor;Lorg/apache/commons/configuration2/tree/NodeHandler;)Z\n    #63 = Utf8               <T:Ljava/lang/Object;>(TT;Lorg/apache/commons/configuration2/tree/ConfigurationNodeVisitor<TT;>;Lorg/apache/commons/configuration2/tree/NodeHandler<TT;>;)Z\n    #64 = Utf8               <clinit>\n    #65 = Utf8               SourceFile\n    #66 = Utf8               NodeTreeWalker.java\n    #67 = NameAndType        #28:#29       // \"<init>\":()V\n    #68 = NameAndType        #61:#62       // checkParameters:(Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/ConfigurationNodeVisitor;Lorg/apache/commons/configuration2/tree/NodeHandler;)Z\n    #69 = NameAndType        #50:#35       // dfs:(Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/ConfigurationNodeVisitor;Lorg/apache/commons/configuration2/tree/NodeHandler;)V\n    #70 = NameAndType        #54:#35       // bfs:(Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/ConfigurationNodeVisitor;Lorg/apache/commons/configuration2/tree/NodeHandler;)V\n-   #71 = Class              #96           // org/apache/commons/configuration2/tree/ConfigurationNodeVisitor\n-   #72 = NameAndType        #97:#98       // terminate:()Z\n-   #73 = NameAndType        #99:#100      // visitBeforeChildren:(Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/NodeHandler;)V\n-   #74 = Class              #101          // org/apache/commons/configuration2/tree/NodeHandler\n-   #75 = NameAndType        #102:#103     // getChildren:(Ljava/lang/Object;)Ljava/util/List;\n-   #76 = Class              #95           // java/util/List\n-   #77 = NameAndType        #104:#105     // iterator:()Ljava/util/Iterator;\n-   #78 = Class              #94           // java/util/Iterator\n-   #79 = NameAndType        #106:#98      // hasNext:()Z\n-   #80 = NameAndType        #107:#108     // next:()Ljava/lang/Object;\n-   #81 = NameAndType        #109:#100     // visitAfterChildren:(Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/NodeHandler;)V\n-   #82 = Utf8               java/util/LinkedList\n-   #83 = NameAndType        #110:#111     // add:(Ljava/lang/Object;)Z\n-   #84 = NameAndType        #112:#98      // isEmpty:()Z\n-   #85 = NameAndType        #113:#114     // remove:(I)Ljava/lang/Object;\n-   #86 = NameAndType        #115:#116     // addAll:(Ljava/util/Collection;)Z\n-   #87 = Utf8               java/lang/IllegalArgumentException\n-   #88 = Utf8               Visitor must not be null!\n-   #89 = NameAndType        #28:#117      // \"<init>\":(Ljava/lang/String;)V\n-   #90 = Utf8               NodeHandler must not be null!\n-   #91 = Utf8               org/apache/commons/configuration2/tree/NodeTreeWalker\n-   #92 = NameAndType        #26:#27       // INSTANCE:Lorg/apache/commons/configuration2/tree/NodeTreeWalker;\n-   #93 = Utf8               java/lang/Object\n-   #94 = Utf8               java/util/Iterator\n-   #95 = Utf8               java/util/List\n-   #96 = Utf8               org/apache/commons/configuration2/tree/ConfigurationNodeVisitor\n-   #97 = Utf8               terminate\n-   #98 = Utf8               ()Z\n-   #99 = Utf8               visitBeforeChildren\n-  #100 = Utf8               (Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/NodeHandler;)V\n-  #101 = Utf8               org/apache/commons/configuration2/tree/NodeHandler\n-  #102 = Utf8               getChildren\n-  #103 = Utf8               (Ljava/lang/Object;)Ljava/util/List;\n-  #104 = Utf8               iterator\n-  #105 = Utf8               ()Ljava/util/Iterator;\n-  #106 = Utf8               hasNext\n-  #107 = Utf8               next\n-  #108 = Utf8               ()Ljava/lang/Object;\n-  #109 = Utf8               visitAfterChildren\n-  #110 = Utf8               add\n-  #111 = Utf8               (Ljava/lang/Object;)Z\n-  #112 = Utf8               isEmpty\n-  #113 = Utf8               remove\n-  #114 = Utf8               (I)Ljava/lang/Object;\n-  #115 = Utf8               addAll\n-  #116 = Utf8               (Ljava/util/Collection;)Z\n-  #117 = Utf8               (Ljava/lang/String;)V\n+   #71 = Class              #94           // org/apache/commons/configuration2/tree/ConfigurationNodeVisitor\n+   #72 = NameAndType        #95:#96       // terminate:()Z\n+   #73 = NameAndType        #97:#98       // visitBeforeChildren:(Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/NodeHandler;)V\n+   #74 = Class              #99           // org/apache/commons/configuration2/tree/NodeHandler\n+   #75 = NameAndType        #100:#101     // getChildren:(Ljava/lang/Object;)Ljava/util/List;\n+   #76 = NameAndType        #102:#103     // iterator:()Ljava/util/Iterator;\n+   #77 = NameAndType        #104:#96      // hasNext:()Z\n+   #78 = NameAndType        #105:#106     // next:()Ljava/lang/Object;\n+   #79 = NameAndType        #107:#98      // visitAfterChildren:(Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/NodeHandler;)V\n+   #80 = Utf8               java/util/LinkedList\n+   #81 = NameAndType        #108:#109     // add:(Ljava/lang/Object;)Z\n+   #82 = NameAndType        #110:#96      // isEmpty:()Z\n+   #83 = NameAndType        #111:#112     // remove:(I)Ljava/lang/Object;\n+   #84 = NameAndType        #113:#114     // addAll:(Ljava/util/Collection;)Z\n+   #85 = Utf8               java/lang/IllegalArgumentException\n+   #86 = Utf8               Visitor must not be null!\n+   #87 = NameAndType        #28:#115      // \"<init>\":(Ljava/lang/String;)V\n+   #88 = Utf8               NodeHandler must not be null!\n+   #89 = Utf8               org/apache/commons/configuration2/tree/NodeTreeWalker\n+   #90 = NameAndType        #26:#27       // INSTANCE:Lorg/apache/commons/configuration2/tree/NodeTreeWalker;\n+   #91 = Utf8               java/lang/Object\n+   #92 = Utf8               java/util/Iterator\n+   #93 = Utf8               java/util/List\n+   #94 = Utf8               org/apache/commons/configuration2/tree/ConfigurationNodeVisitor\n+   #95 = Utf8               terminate\n+   #96 = Utf8               ()Z\n+   #97 = Utf8               visitBeforeChildren\n+   #98 = Utf8               (Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/NodeHandler;)V\n+   #99 = Utf8               org/apache/commons/configuration2/tree/NodeHandler\n+  #100 = Utf8               getChildren\n+  #101 = Utf8               (Ljava/lang/Object;)Ljava/util/List;\n+  #102 = Utf8               iterator\n+  #103 = Utf8               ()Ljava/util/Iterator;\n+  #104 = Utf8               hasNext\n+  #105 = Utf8               next\n+  #106 = Utf8               ()Ljava/lang/Object;\n+  #107 = Utf8               visitAfterChildren\n+  #108 = Utf8               add\n+  #109 = Utf8               (Ljava/lang/Object;)Z\n+  #110 = Utf8               isEmpty\n+  #111 = Utf8               remove\n+  #112 = Utf8               (I)Ljava/lang/Object;\n+  #113 = Utf8               addAll\n+  #114 = Utf8               (Ljava/util/Collection;)Z\n+  #115 = Utf8               (Ljava/lang/String;)V\n {\n   public static final org.apache.commons.configuration2.tree.NodeTreeWalker INSTANCE;\n     descriptor: Lorg/apache/commons/configuration2/tree/NodeTreeWalker;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public org.apache.commons.configuration2.tree.NodeTreeWalker();\n     descriptor: ()V\n"}]}
