{"diffoscope-json-version": 1, "source1": "first/ZipFile$Entry.class", "source2": "second/ZipFile$Entry.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,68 +1,68 @@\n-  SHA-256 checksum 381ae9ffa155eac207c6eeea7bb022726ce8b75fdd5e42b42750b3fd910a76d9\n+  SHA-256 checksum 5e10dc6b2e1e132b37258a9ee8484dd8837e274fbfb56a9d2e519642b0c019a0\n   Compiled from \"ZipFile.java\"\n class org.apache.commons.compress.archivers.zip.ZipFile$Entry extends org.apache.commons.compress.archivers.zip.ZipArchiveEntry\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n-  this_class: #12                         // org/apache/commons/compress/archivers/zip/ZipFile$Entry\n-  super_class: #2                         // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  this_class: #1                          // org/apache/commons/compress/archivers/zip/ZipFile$Entry\n+  super_class: #3                         // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n   interfaces: 0, fields: 0, methods: 3, attributes: 2\n Constant pool:\n-   #1 = Methodref          #2.#3          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":()V\n-   #2 = Class              #4             // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #1 = Class              #2             // org/apache/commons/compress/archivers/zip/ZipFile$Entry\n+   #2 = Utf8               org/apache/commons/compress/archivers/zip/ZipFile$Entry\n+   #3 = Class              #4             // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n    #4 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n    #5 = Utf8               <init>\n    #6 = Utf8               ()V\n-   #7 = Methodref          #2.#8          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.hashCode:()I\n-   #8 = NameAndType        #9:#10         // hashCode:()I\n-   #9 = Utf8               hashCode\n-  #10 = Utf8               ()I\n-  #11 = Methodref          #12.#13        // org/apache/commons/compress/archivers/zip/ZipFile$Entry.getLocalHeaderOffset:()J\n-  #12 = Class              #14            // org/apache/commons/compress/archivers/zip/ZipFile$Entry\n-  #13 = NameAndType        #15:#16        // getLocalHeaderOffset:()J\n-  #14 = Utf8               org/apache/commons/compress/archivers/zip/ZipFile$Entry\n-  #15 = Utf8               getLocalHeaderOffset\n-  #16 = Utf8               ()J\n-  #17 = Methodref          #2.#18         // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.equals:(Ljava/lang/Object;)Z\n-  #18 = NameAndType        #19:#20        // equals:(Ljava/lang/Object;)Z\n-  #19 = Utf8               equals\n-  #20 = Utf8               (Ljava/lang/Object;)Z\n-  #21 = Methodref          #2.#22         // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getDataOffset:()J\n-  #22 = NameAndType        #23:#16        // getDataOffset:()J\n-  #23 = Utf8               getDataOffset\n-  #24 = Methodref          #12.#22        // org/apache/commons/compress/archivers/zip/ZipFile$Entry.getDataOffset:()J\n-  #25 = Methodref          #2.#26         // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getDiskNumberStart:()J\n-  #26 = NameAndType        #27:#16        // getDiskNumberStart:()J\n-  #27 = Utf8               getDiskNumberStart\n-  #28 = Methodref          #12.#26        // org/apache/commons/compress/archivers/zip/ZipFile$Entry.getDiskNumberStart:()J\n-  #29 = Utf8               Code\n-  #30 = Utf8               LineNumberTable\n-  #31 = Utf8               LocalVariableTable\n-  #32 = Utf8               this\n-  #33 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipFile$Entry;\n-  #34 = Utf8               otherEntry\n-  #35 = Utf8               other\n-  #36 = Utf8               Ljava/lang/Object;\n+   #7 = Utf8               Code\n+   #8 = Methodref          #3.#9          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":()V\n+   #9 = NameAndType        #5:#6          // \"<init>\":()V\n+  #10 = Utf8               LineNumberTable\n+  #11 = Utf8               LocalVariableTable\n+  #12 = Utf8               this\n+  #13 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipFile$Entry;\n+  #14 = Utf8               hashCode\n+  #15 = Utf8               ()I\n+  #16 = Methodref          #3.#17         // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.hashCode:()I\n+  #17 = NameAndType        #14:#15        // hashCode:()I\n+  #18 = Methodref          #1.#19         // org/apache/commons/compress/archivers/zip/ZipFile$Entry.getLocalHeaderOffset:()J\n+  #19 = NameAndType        #20:#21        // getLocalHeaderOffset:()J\n+  #20 = Utf8               getLocalHeaderOffset\n+  #21 = Utf8               ()J\n+  #22 = Utf8               equals\n+  #23 = Utf8               (Ljava/lang/Object;)Z\n+  #24 = Methodref          #3.#25         // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.equals:(Ljava/lang/Object;)Z\n+  #25 = NameAndType        #22:#23        // equals:(Ljava/lang/Object;)Z\n+  #26 = Methodref          #3.#27         // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getDataOffset:()J\n+  #27 = NameAndType        #28:#21        // getDataOffset:()J\n+  #28 = Utf8               getDataOffset\n+  #29 = Methodref          #1.#27         // org/apache/commons/compress/archivers/zip/ZipFile$Entry.getDataOffset:()J\n+  #30 = Methodref          #3.#31         // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getDiskNumberStart:()J\n+  #31 = NameAndType        #32:#21        // getDiskNumberStart:()J\n+  #32 = Utf8               getDiskNumberStart\n+  #33 = Methodref          #1.#31         // org/apache/commons/compress/archivers/zip/ZipFile$Entry.getDiskNumberStart:()J\n+  #34 = Utf8               other\n+  #35 = Utf8               Ljava/lang/Object;\n+  #36 = Utf8               otherEntry\n   #37 = Utf8               StackMapTable\n   #38 = Utf8               SourceFile\n   #39 = Utf8               ZipFile.java\n   #40 = Utf8               InnerClasses\n   #41 = Class              #42            // org/apache/commons/compress/archivers/zip/ZipFile\n   #42 = Utf8               org/apache/commons/compress/archivers/zip/ZipFile\n   #43 = Utf8               Entry\n {\n   org.apache.commons.compress.archivers.zip.ZipFile$Entry();\n     descriptor: ()V\n     flags: (0x0000)\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":()V\n+         1: invokespecial #8                  // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 1519: 0\n         line 1520: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipFile$Entry;\n@@ -70,92 +70,95 @@\n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: iconst_3\n          1: aload_0\n-         2: invokespecial #7                  // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.hashCode:()I\n+         2: invokespecial #16                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.hashCode:()I\n          5: imul\n          6: aload_0\n-         7: invokevirtual #11                 // Method getLocalHeaderOffset:()J\n+         7: invokevirtual #18                 // Method getLocalHeaderOffset:()J\n         10: l2i\n         11: iadd\n         12: aload_0\n-        13: invokevirtual #11                 // Method getLocalHeaderOffset:()J\n+        13: invokevirtual #18                 // Method getLocalHeaderOffset:()J\n         16: bipush        32\n         18: lshr\n         19: l2i\n         20: iadd\n         21: ireturn\n       LineNumberTable:\n         line 1524: 0\n-        line 1525: 7\n-        line 1524: 21\n+        line 1525: 6\n+        line 1524: 11\n+        line 1525: 12\n+        line 1524: 20\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0  this   Lorg/apache/commons/compress/archivers/zip/ZipFile$Entry;\n \n   public boolean equals(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #17                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.equals:(Ljava/lang/Object;)Z\n-         5: ifeq          55\n+         2: invokespecial #24                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.equals:(Ljava/lang/Object;)Z\n+         5: ifeq          53\n          8: aload_1\n-         9: checkcast     #12                 // class org/apache/commons/compress/archivers/zip/ZipFile$Entry\n+         9: checkcast     #1                  // class org/apache/commons/compress/archivers/zip/ZipFile$Entry\n         12: astore_2\n         13: aload_0\n-        14: invokevirtual #11                 // Method getLocalHeaderOffset:()J\n+        14: invokevirtual #18                 // Method getLocalHeaderOffset:()J\n         17: aload_2\n-        18: invokevirtual #11                 // Method getLocalHeaderOffset:()J\n+        18: invokevirtual #18                 // Method getLocalHeaderOffset:()J\n         21: lcmp\n-        22: ifne          53\n+        22: ifne          51\n         25: aload_0\n-        26: invokespecial #21                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getDataOffset:()J\n+        26: invokespecial #26                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getDataOffset:()J\n         29: aload_2\n-        30: invokevirtual #24                 // Method getDataOffset:()J\n+        30: invokevirtual #29                 // Method getDataOffset:()J\n         33: lcmp\n-        34: ifne          53\n+        34: ifne          51\n         37: aload_0\n-        38: invokespecial #25                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getDiskNumberStart:()J\n+        38: invokespecial #30                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getDiskNumberStart:()J\n         41: aload_2\n-        42: invokevirtual #28                 // Method getDiskNumberStart:()J\n+        42: invokevirtual #33                 // Method getDiskNumberStart:()J\n         45: lcmp\n-        46: ifne          53\n+        46: ifne          51\n         49: iconst_1\n-        50: goto          54\n+        50: ireturn\n+        51: iconst_0\n+        52: ireturn\n         53: iconst_0\n         54: ireturn\n-        55: iconst_0\n-        56: ireturn\n       LineNumberTable:\n         line 1530: 0\n         line 1532: 8\n         line 1533: 13\n-        line 1534: 18\n-        line 1535: 26\n-        line 1536: 30\n-        line 1537: 38\n-        line 1538: 42\n-        line 1533: 54\n-        line 1540: 55\n+        line 1534: 17\n+        line 1533: 21\n+        line 1535: 25\n+        line 1536: 29\n+        line 1535: 33\n+        line 1537: 37\n+        line 1538: 41\n+        line 1537: 45\n+        line 1533: 49\n+        line 1540: 53\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           13      42     2 otherEntry   Lorg/apache/commons/compress/archivers/zip/ZipFile$Entry;\n-            0      57     0  this   Lorg/apache/commons/compress/archivers/zip/ZipFile$Entry;\n-            0      57     1 other   Ljava/lang/Object;\n-      StackMapTable: number_of_entries = 3\n+            0      55     0  this   Lorg/apache/commons/compress/archivers/zip/ZipFile$Entry;\n+            0      55     1 other   Ljava/lang/Object;\n+           13      40     2 otherEntry   Lorg/apache/commons/compress/archivers/zip/ZipFile$Entry;\n+      StackMapTable: number_of_entries = 2\n         frame_type = 252 /* append */\n-          offset_delta = 53\n+          offset_delta = 51\n           locals = [ class org/apache/commons/compress/archivers/zip/ZipFile$Entry ]\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n         frame_type = 250 /* chop */\n-          offset_delta = 0\n+          offset_delta = 1\n }\n SourceFile: \"ZipFile.java\"\n InnerClasses:\n-  private static #43= #12 of #41;         // Entry=class org/apache/commons/compress/archivers/zip/ZipFile$Entry of class org/apache/commons/compress/archivers/zip/ZipFile\n+  private static #43= #1 of #41;          // Entry=class org/apache/commons/compress/archivers/zip/ZipFile$Entry of class org/apache/commons/compress/archivers/zip/ZipFile\n"}]}
