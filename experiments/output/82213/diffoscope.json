{"diffoscope-json-version": 1, "source1": "first/GeneralPurposeBit.class", "source2": "second/GeneralPurposeBit.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,119 +1,119 @@\n-  SHA-256 checksum 82802793ba12829137ebd8008ab1e2ef8d1d4b242546714ff9ad9cf389dcf925\n+  SHA-256 checksum 38dc573d8d7e4fe4e0a6278a8118ec4d4915994f555d05f49ca78fbcdfaae28e\n   Compiled from \"GeneralPurposeBit.java\"\n public final class org.apache.commons.compress.archivers.zip.GeneralPurposeBit implements java.lang.Cloneable\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #7                          // org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n-  super_class: #34                        // java/lang/Object\n+  this_class: #1                          // org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+  super_class: #3                         // java/lang/Object\n   interfaces: 1, fields: 12, methods: 17, attributes: 1\n Constant pool:\n-    #1 = Methodref          #2.#3         // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-    #2 = Class              #4            // org/apache/commons/compress/archivers/zip/ZipShort\n-    #3 = NameAndType        #5:#6         // getValue:([BI)I\n-    #4 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-    #5 = Utf8               getValue\n-    #6 = Utf8               ([BI)I\n-    #7 = Class              #8            // org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n-    #8 = Utf8               org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n-    #9 = Methodref          #7.#10        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.\"<init>\":()V\n-   #10 = NameAndType        #11:#12       // \"<init>\":()V\n-   #11 = Utf8               <init>\n-   #12 = Utf8               ()V\n-   #13 = Methodref          #7.#14        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useDataDescriptor:(Z)V\n-   #14 = NameAndType        #15:#16       // useDataDescriptor:(Z)V\n-   #15 = Utf8               useDataDescriptor\n-   #16 = Utf8               (Z)V\n-   #17 = Methodref          #7.#18        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useUTF8ForNames:(Z)V\n-   #18 = NameAndType        #19:#16       // useUTF8ForNames:(Z)V\n-   #19 = Utf8               useUTF8ForNames\n-   #20 = Methodref          #7.#21        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useStrongEncryption:(Z)V\n-   #21 = NameAndType        #22:#16       // useStrongEncryption:(Z)V\n-   #22 = Utf8               useStrongEncryption\n-   #23 = Methodref          #7.#24        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useEncryption:(Z)V\n-   #24 = NameAndType        #25:#16       // useEncryption:(Z)V\n-   #25 = Utf8               useEncryption\n-   #26 = Fieldref           #7.#27        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.slidingDictionarySize:I\n-   #27 = NameAndType        #28:#29       // slidingDictionarySize:I\n-   #28 = Utf8               slidingDictionarySize\n-   #29 = Utf8               I\n-   #30 = Fieldref           #7.#31        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.numberOfShannonFanoTrees:I\n-   #31 = NameAndType        #32:#29       // numberOfShannonFanoTrees:I\n-   #32 = Utf8               numberOfShannonFanoTrees\n-   #33 = Methodref          #34.#10       // java/lang/Object.\"<init>\":()V\n-   #34 = Class              #35           // java/lang/Object\n-   #35 = Utf8               java/lang/Object\n-   #36 = Methodref          #34.#37       // java/lang/Object.clone:()Ljava/lang/Object;\n-   #37 = NameAndType        #38:#39       // clone:()Ljava/lang/Object;\n-   #38 = Utf8               clone\n-   #39 = Utf8               ()Ljava/lang/Object;\n-   #40 = Class              #41           // java/lang/CloneNotSupportedException\n-   #41 = Utf8               java/lang/CloneNotSupportedException\n-   #42 = Class              #43           // java/lang/IllegalStateException\n-   #43 = Utf8               java/lang/IllegalStateException\n-   #44 = String             #45           // GeneralPurposeBit is not Cloneable?\n-   #45 = Utf8               GeneralPurposeBit is not Cloneable?\n-   #46 = Methodref          #42.#47       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #47 = NameAndType        #11:#48       // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #48 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #49 = Methodref          #7.#50        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.encode:([BI)V\n-   #50 = NameAndType        #51:#52       // encode:([BI)V\n-   #51 = Utf8               encode\n-   #52 = Utf8               ([BI)V\n-   #53 = Fieldref           #7.#54        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.dataDescriptorFlag:Z\n-   #54 = NameAndType        #55:#56       // dataDescriptorFlag:Z\n-   #55 = Utf8               dataDescriptorFlag\n-   #56 = Utf8               Z\n-   #57 = Fieldref           #7.#58        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.languageEncodingFlag:Z\n-   #58 = NameAndType        #59:#56       // languageEncodingFlag:Z\n-   #59 = Utf8               languageEncodingFlag\n-   #60 = Fieldref           #7.#61        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.encryptionFlag:Z\n-   #61 = NameAndType        #62:#56       // encryptionFlag:Z\n-   #62 = Utf8               encryptionFlag\n-   #63 = Fieldref           #7.#64        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.strongEncryptionFlag:Z\n-   #64 = NameAndType        #65:#56       // strongEncryptionFlag:Z\n-   #65 = Utf8               strongEncryptionFlag\n-   #66 = Methodref          #2.#67        // org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n-   #67 = NameAndType        #68:#69       // putShort:(I[BI)V\n-   #68 = Utf8               putShort\n-   #69 = Utf8               (I[BI)V\n-   #70 = Class              #71           // java/lang/Cloneable\n-   #71 = Utf8               java/lang/Cloneable\n-   #72 = Utf8               ENCRYPTION_FLAG\n-   #73 = Utf8               ConstantValue\n-   #74 = Integer            1\n-   #75 = Utf8               SLIDING_DICTIONARY_SIZE_FLAG\n-   #76 = Integer            2\n-   #77 = Utf8               NUMBER_OF_SHANNON_FANO_TREES_FLAG\n-   #78 = Integer            4\n-   #79 = Utf8               DATA_DESCRIPTOR_FLAG\n-   #80 = Integer            8\n-   #81 = Utf8               STRONG_ENCRYPTION_FLAG\n-   #82 = Integer            64\n-   #83 = Utf8               UFT8_NAMES_FLAG\n-   #84 = Integer            2048\n-   #85 = Utf8               parse\n-   #86 = Utf8               ([BI)Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-   #87 = Utf8               Code\n-   #88 = Utf8               LineNumberTable\n-   #89 = Utf8               LocalVariableTable\n-   #90 = Utf8               data\n-   #91 = Utf8               [B\n-   #92 = Utf8               offset\n-   #93 = Utf8               generalPurposeFlag\n-   #94 = Utf8               b\n-   #95 = Utf8               Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-   #96 = Utf8               StackMapTable\n-   #97 = Class              #91           // \"[B\"\n-   #98 = Utf8               this\n-   #99 = Utf8               ex\n-  #100 = Utf8               Ljava/lang/CloneNotSupportedException;\n-  #101 = Utf8               ()[B\n-  #102 = Utf8               result\n+    #1 = Class              #2            // org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+    #2 = Utf8               org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+    #3 = Class              #4            // java/lang/Object\n+    #4 = Utf8               java/lang/Object\n+    #5 = Class              #6            // java/lang/Cloneable\n+    #6 = Utf8               java/lang/Cloneable\n+    #7 = Utf8               ENCRYPTION_FLAG\n+    #8 = Utf8               I\n+    #9 = Utf8               ConstantValue\n+   #10 = Integer            1\n+   #11 = Utf8               SLIDING_DICTIONARY_SIZE_FLAG\n+   #12 = Integer            2\n+   #13 = Utf8               NUMBER_OF_SHANNON_FANO_TREES_FLAG\n+   #14 = Integer            4\n+   #15 = Utf8               DATA_DESCRIPTOR_FLAG\n+   #16 = Integer            8\n+   #17 = Utf8               STRONG_ENCRYPTION_FLAG\n+   #18 = Integer            64\n+   #19 = Utf8               UFT8_NAMES_FLAG\n+   #20 = Integer            2048\n+   #21 = Utf8               languageEncodingFlag\n+   #22 = Utf8               Z\n+   #23 = Utf8               dataDescriptorFlag\n+   #24 = Utf8               encryptionFlag\n+   #25 = Utf8               strongEncryptionFlag\n+   #26 = Utf8               slidingDictionarySize\n+   #27 = Utf8               numberOfShannonFanoTrees\n+   #28 = Utf8               parse\n+   #29 = Utf8               ([BI)Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+   #30 = Utf8               Code\n+   #31 = Methodref          #32.#34       // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+   #32 = Class              #33           // org/apache/commons/compress/archivers/zip/ZipShort\n+   #33 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+   #34 = NameAndType        #35:#36       // getValue:([BI)I\n+   #35 = Utf8               getValue\n+   #36 = Utf8               ([BI)I\n+   #37 = Methodref          #1.#38        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.\"<init>\":()V\n+   #38 = NameAndType        #39:#40       // \"<init>\":()V\n+   #39 = Utf8               <init>\n+   #40 = Utf8               ()V\n+   #41 = Methodref          #1.#42        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useDataDescriptor:(Z)V\n+   #42 = NameAndType        #43:#44       // useDataDescriptor:(Z)V\n+   #43 = Utf8               useDataDescriptor\n+   #44 = Utf8               (Z)V\n+   #45 = Methodref          #1.#46        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useUTF8ForNames:(Z)V\n+   #46 = NameAndType        #47:#44       // useUTF8ForNames:(Z)V\n+   #47 = Utf8               useUTF8ForNames\n+   #48 = Methodref          #1.#49        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useStrongEncryption:(Z)V\n+   #49 = NameAndType        #50:#44       // useStrongEncryption:(Z)V\n+   #50 = Utf8               useStrongEncryption\n+   #51 = Methodref          #1.#52        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useEncryption:(Z)V\n+   #52 = NameAndType        #53:#44       // useEncryption:(Z)V\n+   #53 = Utf8               useEncryption\n+   #54 = Fieldref           #1.#55        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.slidingDictionarySize:I\n+   #55 = NameAndType        #26:#8        // slidingDictionarySize:I\n+   #56 = Fieldref           #1.#57        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.numberOfShannonFanoTrees:I\n+   #57 = NameAndType        #27:#8        // numberOfShannonFanoTrees:I\n+   #58 = Utf8               LineNumberTable\n+   #59 = Utf8               LocalVariableTable\n+   #60 = Utf8               data\n+   #61 = Utf8               [B\n+   #62 = Utf8               offset\n+   #63 = Utf8               generalPurposeFlag\n+   #64 = Utf8               b\n+   #65 = Utf8               Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+   #66 = Utf8               StackMapTable\n+   #67 = Class              #61           // \"[B\"\n+   #68 = Methodref          #3.#38        // java/lang/Object.\"<init>\":()V\n+   #69 = Utf8               this\n+   #70 = Utf8               clone\n+   #71 = Utf8               ()Ljava/lang/Object;\n+   #72 = Methodref          #3.#73        // java/lang/Object.clone:()Ljava/lang/Object;\n+   #73 = NameAndType        #70:#71       // clone:()Ljava/lang/Object;\n+   #74 = Class              #75           // java/lang/IllegalStateException\n+   #75 = Utf8               java/lang/IllegalStateException\n+   #76 = String             #77           // GeneralPurposeBit is not Cloneable?\n+   #77 = Utf8               GeneralPurposeBit is not Cloneable?\n+   #78 = Methodref          #74.#79       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #79 = NameAndType        #39:#80       // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #80 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #81 = Class              #82           // java/lang/CloneNotSupportedException\n+   #82 = Utf8               java/lang/CloneNotSupportedException\n+   #83 = Utf8               ex\n+   #84 = Utf8               Ljava/lang/CloneNotSupportedException;\n+   #85 = Utf8               encode\n+   #86 = Utf8               ()[B\n+   #87 = Methodref          #1.#88        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.encode:([BI)V\n+   #88 = NameAndType        #85:#89       // encode:([BI)V\n+   #89 = Utf8               ([BI)V\n+   #90 = Utf8               result\n+   #91 = Fieldref           #1.#92        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.dataDescriptorFlag:Z\n+   #92 = NameAndType        #23:#22       // dataDescriptorFlag:Z\n+   #93 = Fieldref           #1.#94        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.languageEncodingFlag:Z\n+   #94 = NameAndType        #21:#22       // languageEncodingFlag:Z\n+   #95 = Fieldref           #1.#96        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.encryptionFlag:Z\n+   #96 = NameAndType        #24:#22       // encryptionFlag:Z\n+   #97 = Fieldref           #1.#98        // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.strongEncryptionFlag:Z\n+   #98 = NameAndType        #25:#22       // strongEncryptionFlag:Z\n+   #99 = Methodref          #32.#100      // org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n+  #100 = NameAndType        #101:#102     // putShort:(I[BI)V\n+  #101 = Utf8               putShort\n+  #102 = Utf8               (I[BI)V\n   #103 = Utf8               buf\n   #104 = Utf8               equals\n   #105 = Utf8               (Ljava/lang/Object;)Z\n   #106 = Utf8               o\n   #107 = Utf8               Ljava/lang/Object;\n   #108 = Utf8               g\n   #109 = Utf8               getNumberOfShannonFanoTrees\n@@ -185,74 +185,74 @@\n   public static org.apache.commons.compress.archivers.zip.GeneralPurposeBit parse(byte[], int);\n     descriptor: ([BI)Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=4, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #1                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+         2: invokestatic  #31                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n          5: istore_2\n-         6: new           #7                  // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+         6: new           #1                  // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n          9: dup\n-        10: invokespecial #9                  // Method \"<init>\":()V\n+        10: invokespecial #37                 // Method \"<init>\":()V\n         13: astore_3\n         14: aload_3\n         15: iload_2\n         16: bipush        8\n         18: iand\n         19: ifeq          26\n         22: iconst_1\n         23: goto          27\n         26: iconst_0\n-        27: invokevirtual #13                 // Method useDataDescriptor:(Z)V\n+        27: invokevirtual #41                 // Method useDataDescriptor:(Z)V\n         30: aload_3\n         31: iload_2\n         32: sipush        2048\n         35: iand\n         36: ifeq          43\n         39: iconst_1\n         40: goto          44\n         43: iconst_0\n-        44: invokevirtual #17                 // Method useUTF8ForNames:(Z)V\n+        44: invokevirtual #45                 // Method useUTF8ForNames:(Z)V\n         47: aload_3\n         48: iload_2\n         49: bipush        64\n         51: iand\n         52: ifeq          59\n         55: iconst_1\n         56: goto          60\n         59: iconst_0\n-        60: invokevirtual #20                 // Method useStrongEncryption:(Z)V\n+        60: invokevirtual #48                 // Method useStrongEncryption:(Z)V\n         63: aload_3\n         64: iload_2\n         65: iconst_1\n         66: iand\n         67: ifeq          74\n         70: iconst_1\n         71: goto          75\n         74: iconst_0\n-        75: invokevirtual #23                 // Method useEncryption:(Z)V\n+        75: invokevirtual #51                 // Method useEncryption:(Z)V\n         78: aload_3\n         79: iload_2\n         80: iconst_2\n         81: iand\n         82: ifeq          91\n         85: sipush        8192\n         88: goto          94\n         91: sipush        4096\n-        94: putfield      #26                 // Field slidingDictionarySize:I\n+        94: putfield      #54                 // Field slidingDictionarySize:I\n         97: aload_3\n         98: iload_2\n         99: iconst_4\n        100: iand\n        101: ifeq          108\n        104: iconst_3\n        105: goto          109\n        108: iconst_2\n-       109: putfield      #30                 // Field numberOfShannonFanoTrees:I\n+       109: putfield      #56                 // Field numberOfShannonFanoTrees:I\n        112: aload_3\n        113: areturn\n       LineNumberTable:\n         line 80: 0\n         line 81: 6\n         line 82: 14\n         line 83: 30\n@@ -309,49 +309,49 @@\n \n   public org.apache.commons.compress.archivers.zip.GeneralPurposeBit();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #33                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #68                 // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 98: 0\n         line 99: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n \n   public java.lang.Object clone();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #36                 // Method java/lang/Object.clone:()Ljava/lang/Object;\n+         1: invokespecial #72                 // Method java/lang/Object.clone:()Ljava/lang/Object;\n          4: areturn\n          5: astore_1\n-         6: new           #42                 // class java/lang/IllegalStateException\n+         6: new           #74                 // class java/lang/IllegalStateException\n          9: dup\n-        10: ldc           #44                 // String GeneralPurposeBit is not Cloneable?\n+        10: ldc           #76                 // String GeneralPurposeBit is not Cloneable?\n         12: aload_1\n-        13: invokespecial #46                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        13: invokespecial #78                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         16: athrow\n       Exception table:\n          from    to  target type\n              0     4     5   Class java/lang/CloneNotSupportedException\n       LineNumberTable:\n         line 104: 0\n         line 105: 5\n         line 107: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            6      11     1    ex   Ljava/lang/CloneNotSupportedException;\n             0      17     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+            6      11     1    ex   Ljava/lang/CloneNotSupportedException;\n       StackMapTable: number_of_entries = 1\n         frame_type = 69 /* same_locals_1_stack_item */\n           stack = [ class java/lang/CloneNotSupportedException ]\n \n   public byte[] encode();\n     descriptor: ()[B\n     flags: (0x0001) ACC_PUBLIC\n@@ -359,15 +359,15 @@\n       stack=3, locals=2, args_size=1\n          0: iconst_2\n          1: newarray       byte\n          3: astore_1\n          4: aload_0\n          5: aload_1\n          6: iconst_0\n-         7: invokevirtual #49                 // Method encode:([BI)V\n+         7: invokevirtual #87                 // Method encode:([BI)V\n         10: aload_1\n         11: areturn\n       LineNumberTable:\n         line 116: 0\n         line 117: 4\n         line 118: 10\n       LocalVariableTable:\n@@ -377,49 +377,53 @@\n \n   public void encode(byte[], int);\n     descriptor: ([BI)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: getfield      #53                 // Field dataDescriptorFlag:Z\n+         1: getfield      #91                 // Field dataDescriptorFlag:Z\n          4: ifeq          12\n          7: bipush        8\n          9: goto          13\n         12: iconst_0\n         13: aload_0\n-        14: getfield      #57                 // Field languageEncodingFlag:Z\n+        14: getfield      #93                 // Field languageEncodingFlag:Z\n         17: ifeq          26\n         20: sipush        2048\n         23: goto          27\n         26: iconst_0\n         27: ior\n         28: aload_0\n-        29: getfield      #60                 // Field encryptionFlag:Z\n+        29: getfield      #95                 // Field encryptionFlag:Z\n         32: ifeq          39\n         35: iconst_1\n         36: goto          40\n         39: iconst_0\n         40: ior\n         41: aload_0\n-        42: getfield      #63                 // Field strongEncryptionFlag:Z\n+        42: getfield      #97                 // Field strongEncryptionFlag:Z\n         45: ifeq          53\n         48: bipush        64\n         50: goto          54\n         53: iconst_0\n         54: ior\n         55: aload_1\n         56: iload_2\n-        57: invokestatic  #66                 // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n+        57: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n         60: return\n       LineNumberTable:\n         line 130: 0\n         line 132: 13\n+        line 130: 27\n         line 134: 28\n+        line 130: 40\n         line 136: 41\n+        line 130: 54\n+        line 137: 55\n         line 130: 57\n         line 138: 60\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      61     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n             0      61     1   buf   [B\n             0      61     2 offset   I\n@@ -448,84 +452,86 @@\n \n   public boolean equals(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_1\n-         1: instanceof    #7                  // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+         1: instanceof    #1                  // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n          4: ifne          9\n          7: iconst_0\n          8: ireturn\n          9: aload_1\n-        10: checkcast     #7                  // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+        10: checkcast     #1                  // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n         13: astore_2\n         14: aload_2\n-        15: getfield      #60                 // Field encryptionFlag:Z\n+        15: getfield      #95                 // Field encryptionFlag:Z\n         18: aload_0\n-        19: getfield      #60                 // Field encryptionFlag:Z\n-        22: if_icmpne     62\n+        19: getfield      #95                 // Field encryptionFlag:Z\n+        22: if_icmpne     60\n         25: aload_2\n-        26: getfield      #63                 // Field strongEncryptionFlag:Z\n+        26: getfield      #97                 // Field strongEncryptionFlag:Z\n         29: aload_0\n-        30: getfield      #63                 // Field strongEncryptionFlag:Z\n-        33: if_icmpne     62\n+        30: getfield      #97                 // Field strongEncryptionFlag:Z\n+        33: if_icmpne     60\n         36: aload_2\n-        37: getfield      #57                 // Field languageEncodingFlag:Z\n+        37: getfield      #93                 // Field languageEncodingFlag:Z\n         40: aload_0\n-        41: getfield      #57                 // Field languageEncodingFlag:Z\n-        44: if_icmpne     62\n+        41: getfield      #93                 // Field languageEncodingFlag:Z\n+        44: if_icmpne     60\n         47: aload_2\n-        48: getfield      #53                 // Field dataDescriptorFlag:Z\n+        48: getfield      #91                 // Field dataDescriptorFlag:Z\n         51: aload_0\n-        52: getfield      #53                 // Field dataDescriptorFlag:Z\n-        55: if_icmpne     62\n+        52: getfield      #91                 // Field dataDescriptorFlag:Z\n+        55: if_icmpne     60\n         58: iconst_1\n-        59: goto          63\n-        62: iconst_0\n-        63: ireturn\n+        59: ireturn\n+        60: iconst_0\n+        61: ireturn\n       LineNumberTable:\n         line 142: 0\n         line 143: 7\n         line 145: 9\n         line 146: 14\n+        line 147: 25\n+        line 148: 36\n+        line 149: 47\n+        line 146: 58\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      64     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-            0      64     1     o   Ljava/lang/Object;\n-           14      50     2     g   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-      StackMapTable: number_of_entries = 3\n+            0      62     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+            0      62     1     o   Ljava/lang/Object;\n+           14      48     2     g   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+      StackMapTable: number_of_entries = 2\n         frame_type = 9 /* same */\n         frame_type = 252 /* append */\n-          offset_delta = 52\n+          offset_delta = 50\n           locals = [ class org/apache/commons/compress/archivers/zip/GeneralPurposeBit ]\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n \n   int getNumberOfShannonFanoTrees();\n     descriptor: ()I\n     flags: (0x0000)\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #30                 // Field numberOfShannonFanoTrees:I\n+         1: getfield      #56                 // Field numberOfShannonFanoTrees:I\n          4: ireturn\n       LineNumberTable:\n         line 156: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n \n   int getSlidingDictionarySize();\n     descriptor: ()I\n     flags: (0x0000)\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #26                 // Field slidingDictionarySize:I\n+         1: getfield      #54                 // Field slidingDictionarySize:I\n          4: ireturn\n       LineNumberTable:\n         line 163: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n \n@@ -535,51 +541,51 @@\n     Code:\n       stack=5, locals=1, args_size=1\n          0: iconst_3\n          1: bipush        7\n          3: bipush        13\n          5: bipush        17\n          7: aload_0\n-         8: getfield      #60                 // Field encryptionFlag:Z\n+         8: getfield      #95                 // Field encryptionFlag:Z\n         11: ifeq          18\n         14: iconst_1\n         15: goto          19\n         18: iconst_0\n         19: imul\n         20: aload_0\n-        21: getfield      #63                 // Field strongEncryptionFlag:Z\n+        21: getfield      #97                 // Field strongEncryptionFlag:Z\n         24: ifeq          31\n         27: iconst_1\n         28: goto          32\n         31: iconst_0\n         32: iadd\n         33: imul\n         34: aload_0\n-        35: getfield      #57                 // Field languageEncodingFlag:Z\n+        35: getfield      #93                 // Field languageEncodingFlag:Z\n         38: ifeq          45\n         41: iconst_1\n         42: goto          46\n         45: iconst_0\n         46: iadd\n         47: imul\n         48: aload_0\n-        49: getfield      #53                 // Field dataDescriptorFlag:Z\n+        49: getfield      #91                 // Field dataDescriptorFlag:Z\n         52: ifeq          59\n         55: iconst_1\n         56: goto          60\n         59: iconst_0\n         60: iadd\n         61: imul\n         62: ireturn\n       LineNumberTable:\n         line 168: 0\n         line 169: 20\n         line 170: 34\n         line 171: 48\n-        line 168: 62\n+        line 168: 61\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      63     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n       StackMapTable: number_of_entries = 8\n         frame_type = 255 /* full_frame */\n           offset_delta = 18\n           locals = [ class org/apache/commons/compress/archivers/zip/GeneralPurposeBit ]\n@@ -616,15 +622,15 @@\n   public void useDataDescriptor(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #53                 // Field dataDescriptorFlag:Z\n+         2: putfield      #91                 // Field dataDescriptorFlag:Z\n          5: return\n       LineNumberTable:\n         line 181: 0\n         line 182: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n@@ -633,15 +639,15 @@\n   public void useEncryption(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #60                 // Field encryptionFlag:Z\n+         2: putfield      #95                 // Field encryptionFlag:Z\n          5: return\n       LineNumberTable:\n         line 189: 0\n         line 190: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n@@ -649,74 +655,72 @@\n \n   public boolean usesDataDescriptor();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #53                 // Field dataDescriptorFlag:Z\n+         1: getfield      #91                 // Field dataDescriptorFlag:Z\n          4: ireturn\n       LineNumberTable:\n         line 199: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n \n   public boolean usesEncryption();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #60                 // Field encryptionFlag:Z\n+         1: getfield      #95                 // Field encryptionFlag:Z\n          4: ireturn\n       LineNumberTable:\n         line 208: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n \n   public boolean usesStrongEncryption();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #60                 // Field encryptionFlag:Z\n-         4: ifeq          18\n+         1: getfield      #95                 // Field encryptionFlag:Z\n+         4: ifeq          16\n          7: aload_0\n-         8: getfield      #63                 // Field strongEncryptionFlag:Z\n-        11: ifeq          18\n+         8: getfield      #97                 // Field strongEncryptionFlag:Z\n+        11: ifeq          16\n         14: iconst_1\n-        15: goto          19\n-        18: iconst_0\n-        19: ireturn\n+        15: ireturn\n+        16: iconst_0\n+        17: ireturn\n       LineNumberTable:\n         line 216: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      20     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-      StackMapTable: number_of_entries = 2\n-        frame_type = 18 /* same */\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n+            0      18     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+      StackMapTable: number_of_entries = 1\n+        frame_type = 16 /* same */\n \n   public void useStrongEncryption(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #63                 // Field strongEncryptionFlag:Z\n+         2: putfield      #97                 // Field strongEncryptionFlag:Z\n          5: iload_1\n          6: ifeq          14\n          9: aload_0\n         10: iconst_1\n-        11: invokevirtual #23                 // Method useEncryption:(Z)V\n+        11: invokevirtual #51                 // Method useEncryption:(Z)V\n         14: return\n       LineNumberTable:\n         line 224: 0\n         line 225: 5\n         line 226: 9\n         line 228: 14\n       LocalVariableTable:\n@@ -728,30 +732,30 @@\n \n   public boolean usesUTF8ForNames();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #57                 // Field languageEncodingFlag:Z\n+         1: getfield      #93                 // Field languageEncodingFlag:Z\n          4: ireturn\n       LineNumberTable:\n         line 235: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n \n   public void useUTF8ForNames(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #57                 // Field languageEncodingFlag:Z\n+         2: putfield      #93                 // Field languageEncodingFlag:Z\n          5: return\n       LineNumberTable:\n         line 243: 0\n         line 244: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n"}]}
