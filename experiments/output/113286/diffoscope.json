{"diffoscope-json-version": 1, "source1": "first/ClassPath$JrtModule.class", "source2": "second/ClassPath$JrtModule.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -13,37 +13,37 @@\n import java.nio.file.Path;\n \n private static class JrtModule extends ClassPath.AbstractPathEntry\n {\n     private final Path modulePath;\n     \n     public JrtModule(final Path modulePath) {\n-        super((ClassPath.ClassPath$1)null);\n+        super((ClassPath.AbstractPathEntry)null);\n         this.modulePath = Objects.requireNonNull(modulePath, \"modulePath\");\n     }\n     \n     public void close() throws IOException {\n     }\n     \n     ClassPath.ClassFile getClassFile(final String name, final String suffix) {\n-        final Path resolved = this.modulePath.resolve(Utility.packageToPath(name) + suffix);\n+        final Path resolved = this.modulePath.resolve(String.valueOf(Utility.packageToPath(name)) + suffix);\n         if (Files.exists(resolved, new LinkOption[0])) {\n             return (ClassPath.ClassFile)new JrtModule.ClassPath$JrtModule$1(this, resolved);\n         }\n         return null;\n     }\n     \n     URL getResource(final String name) {\n         final Path resovled = this.modulePath.resolve(name);\n         try {\n             URL url;\n             if (Files.exists(resovled, new LinkOption[0])) {\n                 final StringBuilder sb;\n-                url = new URL(sb.append(\"jrt:\").append(this.modulePath).append(\"/\").append(name).toString());\n-                sb = new StringBuilder();\n+                url = new URL(sb.append(this.modulePath).append(\"/\").append(name).toString());\n+                sb = new StringBuilder(\"jrt:\");\n             }\n             else {\n                 url = null;\n             }\n             return url;\n         }\n         catch (final MalformedURLException e) {\n"}]}
