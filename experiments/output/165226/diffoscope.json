{"diffoscope-json-version": 1, "source1": "first/BoundedArchiveInputStream.class", "source2": "second/BoundedArchiveInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,41 +1,41 @@\n-  SHA-256 checksum 1d59c3650c7430a2bcfd5ce643f0e57e7586488ecdb817a47cc7c5ef23d9ac09\n+  SHA-256 checksum d3f9c46d828e05e43e1ea6d3ec8ad010af8ae7f4bae8119fa92067d84b9f670f\n   Compiled from \"BoundedArchiveInputStream.java\"\n public abstract class org.apache.commons.compress.utils.BoundedArchiveInputStream extends java.io.InputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #23                         // org/apache/commons/compress/utils/BoundedArchiveInputStream\n   super_class: #24                        // java/io/InputStream\n   interfaces: 0, fields: 3, methods: 4, attributes: 1\n Constant pool:\n-    #1 = Methodref          #24.#58       // java/io/InputStream.\"<init>\":()V\n-    #2 = Fieldref           #23.#59       // org/apache/commons/compress/utils/BoundedArchiveInputStream.end:J\n-    #3 = Class              #60           // java/lang/IllegalArgumentException\n-    #4 = Class              #61           // java/lang/StringBuilder\n-    #5 = Methodref          #4.#58        // java/lang/StringBuilder.\"<init>\":()V\n-    #6 = String             #62           // Invalid length of stream at offset=\n-    #7 = Methodref          #4.#63        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-    #8 = Methodref          #4.#64        // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-    #9 = String             #65           // , length=\n-   #10 = Methodref          #4.#66        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #11 = Methodref          #3.#67        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #12 = Fieldref           #23.#68       // org/apache/commons/compress/utils/BoundedArchiveInputStream.loc:J\n-   #13 = Fieldref           #23.#69       // org/apache/commons/compress/utils/BoundedArchiveInputStream.singleByteBuffer:Ljava/nio/ByteBuffer;\n-   #14 = Methodref          #70.#71       // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n-   #15 = Methodref          #70.#72       // java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;\n-   #16 = Methodref          #23.#73       // org/apache/commons/compress/utils/BoundedArchiveInputStream.read:(JLjava/nio/ByteBuffer;)I\n-   #17 = Methodref          #70.#74       // java/nio/ByteBuffer.get:()B\n-   #18 = Methodref          #75.#76       // java/lang/Math.min:(JJ)J\n-   #19 = Class              #77           // java/lang/IndexOutOfBoundsException\n-   #20 = String             #78           // offset or len are out of bounds\n-   #21 = Methodref          #19.#67       // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n-   #22 = Methodref          #70.#79       // java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;\n-   #23 = Class              #80           // org/apache/commons/compress/utils/BoundedArchiveInputStream\n-   #24 = Class              #81           // java/io/InputStream\n+    #1 = Methodref          #24.#57       // java/io/InputStream.\"<init>\":()V\n+    #2 = Fieldref           #23.#58       // org/apache/commons/compress/utils/BoundedArchiveInputStream.end:J\n+    #3 = Class              #59           // java/lang/IllegalArgumentException\n+    #4 = Class              #60           // java/lang/StringBuilder\n+    #5 = Methodref          #4.#57        // java/lang/StringBuilder.\"<init>\":()V\n+    #6 = String             #61           // Invalid length of stream at offset=\n+    #7 = Methodref          #4.#62        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+    #8 = Methodref          #4.#63        // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+    #9 = String             #64           // , length=\n+   #10 = Methodref          #4.#65        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #11 = Methodref          #3.#66        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #12 = Fieldref           #23.#67       // org/apache/commons/compress/utils/BoundedArchiveInputStream.loc:J\n+   #13 = Fieldref           #23.#68       // org/apache/commons/compress/utils/BoundedArchiveInputStream.singleByteBuffer:Ljava/nio/ByteBuffer;\n+   #14 = Methodref          #53.#69       // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n+   #15 = Methodref          #53.#70       // java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;\n+   #16 = Methodref          #23.#71       // org/apache/commons/compress/utils/BoundedArchiveInputStream.read:(JLjava/nio/ByteBuffer;)I\n+   #17 = Methodref          #53.#72       // java/nio/ByteBuffer.get:()B\n+   #18 = Methodref          #73.#74       // java/lang/Math.min:(JJ)J\n+   #19 = Class              #75           // java/lang/IndexOutOfBoundsException\n+   #20 = String             #76           // offset or len are out of bounds\n+   #21 = Methodref          #19.#66       // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+   #22 = Methodref          #53.#77       // java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;\n+   #23 = Class              #78           // org/apache/commons/compress/utils/BoundedArchiveInputStream\n+   #24 = Class              #79           // java/io/InputStream\n    #25 = Utf8               end\n    #26 = Utf8               J\n    #27 = Utf8               singleByteBuffer\n    #28 = Utf8               Ljava/nio/ByteBuffer;\n    #29 = Utf8               loc\n    #30 = Utf8               <init>\n    #31 = Utf8               (JJ)V\n@@ -43,76 +43,74 @@\n    #33 = Utf8               LineNumberTable\n    #34 = Utf8               LocalVariableTable\n    #35 = Utf8               this\n    #36 = Utf8               Lorg/apache/commons/compress/utils/BoundedArchiveInputStream;\n    #37 = Utf8               start\n    #38 = Utf8               remaining\n    #39 = Utf8               StackMapTable\n-   #40 = Class              #80           // org/apache/commons/compress/utils/BoundedArchiveInputStream\n-   #41 = Utf8               read\n-   #42 = Utf8               ()I\n-   #43 = Utf8               I\n-   #44 = Utf8               Exceptions\n-   #45 = Class              #82           // java/io/IOException\n-   #46 = Utf8               ([BII)I\n-   #47 = Utf8               b\n-   #48 = Utf8               [B\n-   #49 = Utf8               off\n-   #50 = Utf8               len\n-   #51 = Utf8               maxLen\n-   #52 = Utf8               buf\n-   #53 = Utf8               ret\n-   #54 = Class              #83           // java/nio/ByteBuffer\n-   #55 = Utf8               (JLjava/nio/ByteBuffer;)I\n-   #56 = Utf8               SourceFile\n-   #57 = Utf8               BoundedArchiveInputStream.java\n-   #58 = NameAndType        #30:#84       // \"<init>\":()V\n-   #59 = NameAndType        #25:#26       // end:J\n-   #60 = Utf8               java/lang/IllegalArgumentException\n-   #61 = Utf8               java/lang/StringBuilder\n-   #62 = Utf8               Invalid length of stream at offset=\n-   #63 = NameAndType        #85:#86       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #64 = NameAndType        #85:#87       // append:(J)Ljava/lang/StringBuilder;\n-   #65 = Utf8               , length=\n-   #66 = NameAndType        #88:#89       // toString:()Ljava/lang/String;\n-   #67 = NameAndType        #30:#90       // \"<init>\":(Ljava/lang/String;)V\n-   #68 = NameAndType        #29:#26       // loc:J\n-   #69 = NameAndType        #27:#28       // singleByteBuffer:Ljava/nio/ByteBuffer;\n-   #70 = Class              #83           // java/nio/ByteBuffer\n-   #71 = NameAndType        #91:#92       // allocate:(I)Ljava/nio/ByteBuffer;\n-   #72 = NameAndType        #93:#94       // rewind:()Ljava/nio/Buffer;\n-   #73 = NameAndType        #41:#55       // read:(JLjava/nio/ByteBuffer;)I\n-   #74 = NameAndType        #95:#96       // get:()B\n-   #75 = Class              #97           // java/lang/Math\n-   #76 = NameAndType        #98:#99       // min:(JJ)J\n-   #77 = Utf8               java/lang/IndexOutOfBoundsException\n-   #78 = Utf8               offset or len are out of bounds\n-   #79 = NameAndType        #100:#101     // wrap:([BII)Ljava/nio/ByteBuffer;\n-   #80 = Utf8               org/apache/commons/compress/utils/BoundedArchiveInputStream\n-   #81 = Utf8               java/io/InputStream\n-   #82 = Utf8               java/io/IOException\n-   #83 = Utf8               java/nio/ByteBuffer\n-   #84 = Utf8               ()V\n-   #85 = Utf8               append\n-   #86 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #87 = Utf8               (J)Ljava/lang/StringBuilder;\n-   #88 = Utf8               toString\n-   #89 = Utf8               ()Ljava/lang/String;\n-   #90 = Utf8               (Ljava/lang/String;)V\n-   #91 = Utf8               allocate\n-   #92 = Utf8               (I)Ljava/nio/ByteBuffer;\n-   #93 = Utf8               rewind\n-   #94 = Utf8               ()Ljava/nio/Buffer;\n-   #95 = Utf8               get\n-   #96 = Utf8               ()B\n-   #97 = Utf8               java/lang/Math\n-   #98 = Utf8               min\n-   #99 = Utf8               (JJ)J\n-  #100 = Utf8               wrap\n-  #101 = Utf8               ([BII)Ljava/nio/ByteBuffer;\n+   #40 = Utf8               read\n+   #41 = Utf8               ()I\n+   #42 = Utf8               I\n+   #43 = Utf8               Exceptions\n+   #44 = Class              #80           // java/io/IOException\n+   #45 = Utf8               ([BII)I\n+   #46 = Utf8               b\n+   #47 = Utf8               [B\n+   #48 = Utf8               off\n+   #49 = Utf8               len\n+   #50 = Utf8               maxLen\n+   #51 = Utf8               buf\n+   #52 = Utf8               ret\n+   #53 = Class              #81           // java/nio/ByteBuffer\n+   #54 = Utf8               (JLjava/nio/ByteBuffer;)I\n+   #55 = Utf8               SourceFile\n+   #56 = Utf8               BoundedArchiveInputStream.java\n+   #57 = NameAndType        #30:#82       // \"<init>\":()V\n+   #58 = NameAndType        #25:#26       // end:J\n+   #59 = Utf8               java/lang/IllegalArgumentException\n+   #60 = Utf8               java/lang/StringBuilder\n+   #61 = Utf8               Invalid length of stream at offset=\n+   #62 = NameAndType        #83:#84       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #63 = NameAndType        #83:#85       // append:(J)Ljava/lang/StringBuilder;\n+   #64 = Utf8               , length=\n+   #65 = NameAndType        #86:#87       // toString:()Ljava/lang/String;\n+   #66 = NameAndType        #30:#88       // \"<init>\":(Ljava/lang/String;)V\n+   #67 = NameAndType        #29:#26       // loc:J\n+   #68 = NameAndType        #27:#28       // singleByteBuffer:Ljava/nio/ByteBuffer;\n+   #69 = NameAndType        #89:#90       // allocate:(I)Ljava/nio/ByteBuffer;\n+   #70 = NameAndType        #91:#92       // rewind:()Ljava/nio/Buffer;\n+   #71 = NameAndType        #40:#54       // read:(JLjava/nio/ByteBuffer;)I\n+   #72 = NameAndType        #93:#94       // get:()B\n+   #73 = Class              #95           // java/lang/Math\n+   #74 = NameAndType        #96:#97       // min:(JJ)J\n+   #75 = Utf8               java/lang/IndexOutOfBoundsException\n+   #76 = Utf8               offset or len are out of bounds\n+   #77 = NameAndType        #98:#99       // wrap:([BII)Ljava/nio/ByteBuffer;\n+   #78 = Utf8               org/apache/commons/compress/utils/BoundedArchiveInputStream\n+   #79 = Utf8               java/io/InputStream\n+   #80 = Utf8               java/io/IOException\n+   #81 = Utf8               java/nio/ByteBuffer\n+   #82 = Utf8               ()V\n+   #83 = Utf8               append\n+   #84 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #85 = Utf8               (J)Ljava/lang/StringBuilder;\n+   #86 = Utf8               toString\n+   #87 = Utf8               ()Ljava/lang/String;\n+   #88 = Utf8               (Ljava/lang/String;)V\n+   #89 = Utf8               allocate\n+   #90 = Utf8               (I)Ljava/nio/ByteBuffer;\n+   #91 = Utf8               rewind\n+   #92 = Utf8               ()Ljava/nio/Buffer;\n+   #93 = Utf8               get\n+   #94 = Utf8               ()B\n+   #95 = Utf8               java/lang/Math\n+   #96 = Utf8               min\n+   #97 = Utf8               (JJ)J\n+   #98 = Utf8               wrap\n+   #99 = Utf8               ([BII)Ljava/nio/ByteBuffer;\n {\n   private final long end;\n     descriptor: J\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private java.nio.ByteBuffer singleByteBuffer;\n     descriptor: Ljava/nio/ByteBuffer;\n"}]}
