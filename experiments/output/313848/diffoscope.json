{"diffoscope-json-version": 1, "source1": "first/IOCase.class", "source2": "second/IOCase.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,171 +1,173 @@\n-  SHA-256 checksum 4b3183c464536fa403e692b0ebdda0339bfad7f6544878838770c11a73d1c503\n+  SHA-256 checksum 8668e6a22c420781f3b85209b7a1701e0443f30194c0de792289d6ac6a8680f7\n   Compiled from \"IOCase.java\"\n public final class org.apache.commons.io.IOCase extends java.lang.Enum<org.apache.commons.io.IOCase>\n   minor version: 0\n   major version: 52\n   flags: (0x4031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER, ACC_ENUM\n-  this_class: #4                          // org/apache/commons/io/IOCase\n-  super_class: #41                        // java/lang/Enum\n-  interfaces: 0, fields: 7, methods: 16, attributes: 2\n+  this_class: #1                          // org/apache/commons/io/IOCase\n+  super_class: #23                        // java/lang/Enum\n+  interfaces: 0, fields: 7, methods: 17, attributes: 2\n Constant pool:\n-    #1 = Fieldref           #4.#93        // org/apache/commons/io/IOCase.$VALUES:[Lorg/apache/commons/io/IOCase;\n-    #2 = Methodref          #94.#95       // \"[Lorg/apache/commons/io/IOCase;\".clone:()Ljava/lang/Object;\n-    #3 = Class              #56           // \"[Lorg/apache/commons/io/IOCase;\"\n-    #4 = Class              #96           // org/apache/commons/io/IOCase\n-    #5 = Methodref          #41.#97       // java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-    #6 = Methodref          #4.#98        // org/apache/commons/io/IOCase.isCaseSensitive:()Z\n-    #7 = Methodref          #4.#99        // org/apache/commons/io/IOCase.values:()[Lorg/apache/commons/io/IOCase;\n-    #8 = Methodref          #4.#100       // org/apache/commons/io/IOCase.getName:()Ljava/lang/String;\n-    #9 = Methodref          #81.#101      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #10 = Class              #102          // java/lang/IllegalArgumentException\n-   #11 = Class              #103          // java/lang/StringBuilder\n-   #12 = Methodref          #11.#104      // java/lang/StringBuilder.\"<init>\":()V\n-   #13 = String             #105          // Invalid IOCase name:\n-   #14 = Methodref          #11.#106      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #15 = Methodref          #11.#107      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #16 = Methodref          #10.#108      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #17 = Methodref          #41.#109      // java/lang/Enum.\"<init>\":(Ljava/lang/String;I)V\n-   #18 = Fieldref           #4.#110       // org/apache/commons/io/IOCase.name:Ljava/lang/String;\n-   #19 = Fieldref           #4.#111       // org/apache/commons/io/IOCase.sensitive:Z\n-   #20 = Methodref          #4.#112       // org/apache/commons/io/IOCase.forName:(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;\n-   #21 = String             #113          // str1\n-   #22 = Methodref          #114.#115     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #23 = String             #116          // str2\n-   #24 = Methodref          #81.#117      // java/lang/String.compareTo:(Ljava/lang/String;)I\n-   #25 = Methodref          #81.#118      // java/lang/String.compareToIgnoreCase:(Ljava/lang/String;)I\n-   #26 = Methodref          #81.#119      // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-   #27 = Methodref          #81.#120      // java/lang/String.length:()I\n-   #28 = Methodref          #81.#121      // java/lang/String.regionMatches:(ZILjava/lang/String;II)Z\n-   #29 = Methodref          #4.#122       // org/apache/commons/io/IOCase.checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n-   #30 = String             #42           // SENSITIVE\n-   #31 = String             #123          // Sensitive\n-   #32 = Methodref          #4.#124       // org/apache/commons/io/IOCase.\"<init>\":(Ljava/lang/String;ILjava/lang/String;Z)V\n-   #33 = Fieldref           #4.#125       // org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n-   #34 = String             #44           // INSENSITIVE\n-   #35 = String             #126          // Insensitive\n-   #36 = Fieldref           #4.#127       // org/apache/commons/io/IOCase.INSENSITIVE:Lorg/apache/commons/io/IOCase;\n-   #37 = String             #45           // SYSTEM\n-   #38 = String             #128          // System\n-   #39 = Methodref          #129.#130     // org/apache/commons/io/FilenameUtils.isSystemWindows:()Z\n-   #40 = Fieldref           #4.#131       // org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n-   #41 = Class              #132          // java/lang/Enum\n-   #42 = Utf8               SENSITIVE\n-   #43 = Utf8               Lorg/apache/commons/io/IOCase;\n-   #44 = Utf8               INSENSITIVE\n-   #45 = Utf8               SYSTEM\n-   #46 = Utf8               serialVersionUID\n-   #47 = Utf8               J\n-   #48 = Utf8               ConstantValue\n-   #49 = Long               -6343169151696340687l\n-   #51 = Utf8               name\n-   #52 = Utf8               Ljava/lang/String;\n-   #53 = Utf8               sensitive\n-   #54 = Utf8               Z\n-   #55 = Utf8               $VALUES\n-   #56 = Utf8               [Lorg/apache/commons/io/IOCase;\n-   #57 = Utf8               values\n-   #58 = Utf8               ()[Lorg/apache/commons/io/IOCase;\n-   #59 = Utf8               Code\n-   #60 = Utf8               LineNumberTable\n-   #61 = Utf8               valueOf\n-   #62 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/io/IOCase;\n-   #63 = Utf8               isCaseSensitive\n-   #64 = Utf8               (Lorg/apache/commons/io/IOCase;)Z\n-   #65 = Utf8               StackMapTable\n-   #66 = Utf8               forName\n-   #67 = Utf8               <init>\n-   #68 = Utf8               (Ljava/lang/String;ILjava/lang/String;Z)V\n-   #69 = Utf8               Signature\n-   #70 = Utf8               (Ljava/lang/String;Z)V\n-   #71 = Utf8               readResolve\n-   #72 = Utf8               ()Ljava/lang/Object;\n-   #73 = Utf8               getName\n-   #74 = Utf8               ()Ljava/lang/String;\n-   #75 = Utf8               ()Z\n-   #76 = Utf8               checkCompareTo\n-   #77 = Utf8               (Ljava/lang/String;Ljava/lang/String;)I\n-   #78 = Utf8               checkEquals\n-   #79 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n-   #80 = Utf8               checkStartsWith\n-   #81 = Class              #133          // java/lang/String\n-   #82 = Utf8               checkEndsWith\n-   #83 = Utf8               checkIndexOf\n-   #84 = Utf8               (Ljava/lang/String;ILjava/lang/String;)I\n-   #85 = Utf8               checkRegionMatches\n-   #86 = Utf8               (Ljava/lang/String;ILjava/lang/String;)Z\n-   #87 = Utf8               toString\n-   #88 = Utf8               <clinit>\n-   #89 = Utf8               ()V\n-   #90 = Utf8               Ljava/lang/Enum<Lorg/apache/commons/io/IOCase;>;\n-   #91 = Utf8               SourceFile\n-   #92 = Utf8               IOCase.java\n-   #93 = NameAndType        #55:#56       // $VALUES:[Lorg/apache/commons/io/IOCase;\n-   #94 = Class              #56           // \"[Lorg/apache/commons/io/IOCase;\"\n-   #95 = NameAndType        #134:#72      // clone:()Ljava/lang/Object;\n-   #96 = Utf8               org/apache/commons/io/IOCase\n-   #97 = NameAndType        #61:#135      // valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-   #98 = NameAndType        #63:#75       // isCaseSensitive:()Z\n-   #99 = NameAndType        #57:#58       // values:()[Lorg/apache/commons/io/IOCase;\n-  #100 = NameAndType        #73:#74       // getName:()Ljava/lang/String;\n-  #101 = NameAndType        #136:#137     // equals:(Ljava/lang/Object;)Z\n-  #102 = Utf8               java/lang/IllegalArgumentException\n-  #103 = Utf8               java/lang/StringBuilder\n-  #104 = NameAndType        #67:#89       // \"<init>\":()V\n-  #105 = Utf8               Invalid IOCase name:\n-  #106 = NameAndType        #138:#139     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #107 = NameAndType        #87:#74       // toString:()Ljava/lang/String;\n-  #108 = NameAndType        #67:#140      // \"<init>\":(Ljava/lang/String;)V\n-  #109 = NameAndType        #67:#141      // \"<init>\":(Ljava/lang/String;I)V\n-  #110 = NameAndType        #51:#52       // name:Ljava/lang/String;\n-  #111 = NameAndType        #53:#54       // sensitive:Z\n-  #112 = NameAndType        #66:#62       // forName:(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;\n-  #113 = Utf8               str1\n-  #114 = Class              #142          // java/util/Objects\n-  #115 = NameAndType        #143:#144     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #116 = Utf8               str2\n-  #117 = NameAndType        #145:#146     // compareTo:(Ljava/lang/String;)I\n-  #118 = NameAndType        #147:#146     // compareToIgnoreCase:(Ljava/lang/String;)I\n-  #119 = NameAndType        #148:#149     // equalsIgnoreCase:(Ljava/lang/String;)Z\n-  #120 = NameAndType        #150:#151     // length:()I\n-  #121 = NameAndType        #152:#153     // regionMatches:(ZILjava/lang/String;II)Z\n-  #122 = NameAndType        #85:#86       // checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n-  #123 = Utf8               Sensitive\n-  #124 = NameAndType        #67:#68       // \"<init>\":(Ljava/lang/String;ILjava/lang/String;Z)V\n-  #125 = NameAndType        #42:#43       // SENSITIVE:Lorg/apache/commons/io/IOCase;\n-  #126 = Utf8               Insensitive\n-  #127 = NameAndType        #44:#43       // INSENSITIVE:Lorg/apache/commons/io/IOCase;\n-  #128 = Utf8               System\n-  #129 = Class              #154          // org/apache/commons/io/FilenameUtils\n-  #130 = NameAndType        #155:#75      // isSystemWindows:()Z\n-  #131 = NameAndType        #45:#43       // SYSTEM:Lorg/apache/commons/io/IOCase;\n-  #132 = Utf8               java/lang/Enum\n-  #133 = Utf8               java/lang/String\n-  #134 = Utf8               clone\n-  #135 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-  #136 = Utf8               equals\n-  #137 = Utf8               (Ljava/lang/Object;)Z\n-  #138 = Utf8               append\n-  #139 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #140 = Utf8               (Ljava/lang/String;)V\n-  #141 = Utf8               (Ljava/lang/String;I)V\n-  #142 = Utf8               java/util/Objects\n-  #143 = Utf8               requireNonNull\n-  #144 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #145 = Utf8               compareTo\n-  #146 = Utf8               (Ljava/lang/String;)I\n-  #147 = Utf8               compareToIgnoreCase\n-  #148 = Utf8               equalsIgnoreCase\n-  #149 = Utf8               (Ljava/lang/String;)Z\n-  #150 = Utf8               length\n-  #151 = Utf8               ()I\n-  #152 = Utf8               regionMatches\n-  #153 = Utf8               (ZILjava/lang/String;II)Z\n-  #154 = Utf8               org/apache/commons/io/FilenameUtils\n-  #155 = Utf8               isSystemWindows\n+    #1 = Class              #2            // org/apache/commons/io/IOCase\n+    #2 = Utf8               org/apache/commons/io/IOCase\n+    #3 = Fieldref           #1.#4         // org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n+    #4 = NameAndType        #5:#6         // SENSITIVE:Lorg/apache/commons/io/IOCase;\n+    #5 = Utf8               SENSITIVE\n+    #6 = Utf8               Lorg/apache/commons/io/IOCase;\n+    #7 = Fieldref           #1.#8         // org/apache/commons/io/IOCase.INSENSITIVE:Lorg/apache/commons/io/IOCase;\n+    #8 = NameAndType        #9:#6         // INSENSITIVE:Lorg/apache/commons/io/IOCase;\n+    #9 = Utf8               INSENSITIVE\n+   #10 = Fieldref           #1.#11        // org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n+   #11 = NameAndType        #12:#6        // SYSTEM:Lorg/apache/commons/io/IOCase;\n+   #12 = Utf8               SYSTEM\n+   #13 = Fieldref           #1.#14        // org/apache/commons/io/IOCase.$VALUES:[Lorg/apache/commons/io/IOCase;\n+   #14 = NameAndType        #15:#16       // $VALUES:[Lorg/apache/commons/io/IOCase;\n+   #15 = Utf8               $VALUES\n+   #16 = Utf8               [Lorg/apache/commons/io/IOCase;\n+   #17 = Methodref          #18.#19       // \"[Lorg/apache/commons/io/IOCase;\".clone:()Ljava/lang/Object;\n+   #18 = Class              #16           // \"[Lorg/apache/commons/io/IOCase;\"\n+   #19 = NameAndType        #20:#21       // clone:()Ljava/lang/Object;\n+   #20 = Utf8               clone\n+   #21 = Utf8               ()Ljava/lang/Object;\n+   #22 = Methodref          #23.#24       // java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+   #23 = Class              #25           // java/lang/Enum\n+   #24 = NameAndType        #26:#27       // valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+   #25 = Utf8               java/lang/Enum\n+   #26 = Utf8               valueOf\n+   #27 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+   #28 = Methodref          #1.#29        // org/apache/commons/io/IOCase.isCaseSensitive:()Z\n+   #29 = NameAndType        #30:#31       // isCaseSensitive:()Z\n+   #30 = Utf8               isCaseSensitive\n+   #31 = Utf8               ()Z\n+   #32 = Methodref          #1.#33        // org/apache/commons/io/IOCase.values:()[Lorg/apache/commons/io/IOCase;\n+   #33 = NameAndType        #34:#35       // values:()[Lorg/apache/commons/io/IOCase;\n+   #34 = Utf8               values\n+   #35 = Utf8               ()[Lorg/apache/commons/io/IOCase;\n+   #36 = Methodref          #1.#37        // org/apache/commons/io/IOCase.getName:()Ljava/lang/String;\n+   #37 = NameAndType        #38:#39       // getName:()Ljava/lang/String;\n+   #38 = Utf8               getName\n+   #39 = Utf8               ()Ljava/lang/String;\n+   #40 = Methodref          #41.#42       // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #41 = Class              #43           // java/lang/String\n+   #42 = NameAndType        #44:#45       // equals:(Ljava/lang/Object;)Z\n+   #43 = Utf8               java/lang/String\n+   #44 = Utf8               equals\n+   #45 = Utf8               (Ljava/lang/Object;)Z\n+   #46 = Class              #47           // java/lang/IllegalArgumentException\n+   #47 = Utf8               java/lang/IllegalArgumentException\n+   #48 = Class              #49           // java/lang/StringBuilder\n+   #49 = Utf8               java/lang/StringBuilder\n+   #50 = Methodref          #48.#51       // java/lang/StringBuilder.\"<init>\":()V\n+   #51 = NameAndType        #52:#53       // \"<init>\":()V\n+   #52 = Utf8               <init>\n+   #53 = Utf8               ()V\n+   #54 = String             #55           // Invalid IOCase name:\n+   #55 = Utf8               Invalid IOCase name:\n+   #56 = Methodref          #48.#57       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #57 = NameAndType        #58:#59       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #58 = Utf8               append\n+   #59 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #60 = Methodref          #48.#61       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #61 = NameAndType        #62:#39       // toString:()Ljava/lang/String;\n+   #62 = Utf8               toString\n+   #63 = Methodref          #46.#64       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #64 = NameAndType        #52:#65       // \"<init>\":(Ljava/lang/String;)V\n+   #65 = Utf8               (Ljava/lang/String;)V\n+   #66 = Methodref          #23.#67       // java/lang/Enum.\"<init>\":(Ljava/lang/String;I)V\n+   #67 = NameAndType        #52:#68       // \"<init>\":(Ljava/lang/String;I)V\n+   #68 = Utf8               (Ljava/lang/String;I)V\n+   #69 = Fieldref           #1.#70        // org/apache/commons/io/IOCase.name:Ljava/lang/String;\n+   #70 = NameAndType        #71:#72       // name:Ljava/lang/String;\n+   #71 = Utf8               name\n+   #72 = Utf8               Ljava/lang/String;\n+   #73 = Fieldref           #1.#74        // org/apache/commons/io/IOCase.sensitive:Z\n+   #74 = NameAndType        #75:#76       // sensitive:Z\n+   #75 = Utf8               sensitive\n+   #76 = Utf8               Z\n+   #77 = Methodref          #1.#78        // org/apache/commons/io/IOCase.forName:(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;\n+   #78 = NameAndType        #79:#80       // forName:(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;\n+   #79 = Utf8               forName\n+   #80 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/io/IOCase;\n+   #81 = String             #82           // str1\n+   #82 = Utf8               str1\n+   #83 = Methodref          #84.#85       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #84 = Class              #86           // java/util/Objects\n+   #85 = NameAndType        #87:#88       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #86 = Utf8               java/util/Objects\n+   #87 = Utf8               requireNonNull\n+   #88 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #89 = String             #90           // str2\n+   #90 = Utf8               str2\n+   #91 = Methodref          #41.#92       // java/lang/String.compareTo:(Ljava/lang/String;)I\n+   #92 = NameAndType        #93:#94       // compareTo:(Ljava/lang/String;)I\n+   #93 = Utf8               compareTo\n+   #94 = Utf8               (Ljava/lang/String;)I\n+   #95 = Methodref          #41.#96       // java/lang/String.compareToIgnoreCase:(Ljava/lang/String;)I\n+   #96 = NameAndType        #97:#94       // compareToIgnoreCase:(Ljava/lang/String;)I\n+   #97 = Utf8               compareToIgnoreCase\n+   #98 = Methodref          #41.#99       // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+   #99 = NameAndType        #100:#101     // equalsIgnoreCase:(Ljava/lang/String;)Z\n+  #100 = Utf8               equalsIgnoreCase\n+  #101 = Utf8               (Ljava/lang/String;)Z\n+  #102 = Methodref          #41.#103      // java/lang/String.length:()I\n+  #103 = NameAndType        #104:#105     // length:()I\n+  #104 = Utf8               length\n+  #105 = Utf8               ()I\n+  #106 = Methodref          #41.#107      // java/lang/String.regionMatches:(ZILjava/lang/String;II)Z\n+  #107 = NameAndType        #108:#109     // regionMatches:(ZILjava/lang/String;II)Z\n+  #108 = Utf8               regionMatches\n+  #109 = Utf8               (ZILjava/lang/String;II)Z\n+  #110 = Methodref          #1.#111       // org/apache/commons/io/IOCase.checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n+  #111 = NameAndType        #112:#113     // checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n+  #112 = Utf8               checkRegionMatches\n+  #113 = Utf8               (Ljava/lang/String;ILjava/lang/String;)Z\n+  #114 = String             #5            // SENSITIVE\n+  #115 = String             #116          // Sensitive\n+  #116 = Utf8               Sensitive\n+  #117 = Methodref          #1.#118       // org/apache/commons/io/IOCase.\"<init>\":(Ljava/lang/String;ILjava/lang/String;Z)V\n+  #118 = NameAndType        #52:#119      // \"<init>\":(Ljava/lang/String;ILjava/lang/String;Z)V\n+  #119 = Utf8               (Ljava/lang/String;ILjava/lang/String;Z)V\n+  #120 = String             #9            // INSENSITIVE\n+  #121 = String             #122          // Insensitive\n+  #122 = Utf8               Insensitive\n+  #123 = String             #12           // SYSTEM\n+  #124 = String             #125          // System\n+  #125 = Utf8               System\n+  #126 = Methodref          #127.#128     // org/apache/commons/io/FilenameUtils.isSystemWindows:()Z\n+  #127 = Class              #129          // org/apache/commons/io/FilenameUtils\n+  #128 = NameAndType        #130:#31      // isSystemWindows:()Z\n+  #129 = Utf8               org/apache/commons/io/FilenameUtils\n+  #130 = Utf8               isSystemWindows\n+  #131 = Methodref          #1.#132       // org/apache/commons/io/IOCase.$values:()[Lorg/apache/commons/io/IOCase;\n+  #132 = NameAndType        #133:#35      // $values:()[Lorg/apache/commons/io/IOCase;\n+  #133 = Utf8               $values\n+  #134 = Utf8               serialVersionUID\n+  #135 = Utf8               J\n+  #136 = Utf8               ConstantValue\n+  #137 = Long               -6343169151696340687l\n+  #139 = Utf8               Code\n+  #140 = Utf8               LineNumberTable\n+  #141 = Utf8               (Lorg/apache/commons/io/IOCase;)Z\n+  #142 = Utf8               StackMapTable\n+  #143 = Utf8               Signature\n+  #144 = Utf8               (Ljava/lang/String;Z)V\n+  #145 = Utf8               readResolve\n+  #146 = Utf8               checkCompareTo\n+  #147 = Utf8               (Ljava/lang/String;Ljava/lang/String;)I\n+  #148 = Utf8               checkEquals\n+  #149 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n+  #150 = Utf8               checkStartsWith\n+  #151 = Utf8               checkEndsWith\n+  #152 = Utf8               checkIndexOf\n+  #153 = Utf8               (Ljava/lang/String;ILjava/lang/String;)I\n+  #154 = Utf8               <clinit>\n+  #155 = Utf8               Ljava/lang/Enum<Lorg/apache/commons/io/IOCase;>;\n+  #156 = Utf8               SourceFile\n+  #157 = Utf8               IOCase.java\n {\n   public static final org.apache.commons.io.IOCase SENSITIVE;\n     descriptor: Lorg/apache/commons/io/IOCase;\n     flags: (0x4019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_ENUM\n \n   public static final org.apache.commons.io.IOCase INSENSITIVE;\n     descriptor: Lorg/apache/commons/io/IOCase;\n@@ -193,43 +195,43 @@\n     flags: (0x101a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC\n \n   public static org.apache.commons.io.IOCase[] values();\n     descriptor: ()[Lorg/apache/commons/io/IOCase;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: getstatic     #1                  // Field $VALUES:[Lorg/apache/commons/io/IOCase;\n-         3: invokevirtual #2                  // Method \"[Lorg/apache/commons/io/IOCase;\".clone:()Ljava/lang/Object;\n-         6: checkcast     #3                  // class \"[Lorg/apache/commons/io/IOCase;\"\n+         0: getstatic     #13                 // Field $VALUES:[Lorg/apache/commons/io/IOCase;\n+         3: invokevirtual #17                 // Method \"[Lorg/apache/commons/io/IOCase;\".clone:()Ljava/lang/Object;\n+         6: checkcast     #18                 // class \"[Lorg/apache/commons/io/IOCase;\"\n          9: areturn\n       LineNumberTable:\n         line 39: 0\n \n   public static org.apache.commons.io.IOCase valueOf(java.lang.String);\n     descriptor: (Ljava/lang/String;)Lorg/apache/commons/io/IOCase;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: ldc           #4                  // class org/apache/commons/io/IOCase\n+         0: ldc           #1                  // class org/apache/commons/io/IOCase\n          2: aload_0\n-         3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-         6: checkcast     #4                  // class org/apache/commons/io/IOCase\n+         3: invokestatic  #22                 // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+         6: checkcast     #1                  // class org/apache/commons/io/IOCase\n          9: areturn\n       LineNumberTable:\n         line 39: 0\n \n   public static boolean isCaseSensitive(org.apache.commons.io.IOCase);\n     descriptor: (Lorg/apache/commons/io/IOCase;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: ifnull        15\n          4: aload_0\n-         5: invokevirtual #6                  // Method isCaseSensitive:()Z\n+         5: invokevirtual #28                 // Method isCaseSensitive:()Z\n          8: ifne          15\n         11: iconst_1\n         12: goto          16\n         15: iconst_0\n         16: ireturn\n       LineNumberTable:\n         line 75: 0\n@@ -239,48 +241,48 @@\n           stack = [ int ]\n \n   public static org.apache.commons.io.IOCase forName(java.lang.String);\n     descriptor: (Ljava/lang/String;)Lorg/apache/commons/io/IOCase;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=5, args_size=1\n-         0: invokestatic  #7                  // Method values:()[Lorg/apache/commons/io/IOCase;\n+         0: invokestatic  #32                 // Method values:()[Lorg/apache/commons/io/IOCase;\n          3: astore_1\n          4: aload_1\n          5: arraylength\n          6: istore_2\n          7: iconst_0\n          8: istore_3\n          9: iload_3\n         10: iload_2\n         11: if_icmpge     40\n         14: aload_1\n         15: iload_3\n         16: aaload\n         17: astore        4\n         19: aload         4\n-        21: invokevirtual #8                  // Method getName:()Ljava/lang/String;\n+        21: invokevirtual #36                 // Method getName:()Ljava/lang/String;\n         24: aload_0\n-        25: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        25: invokevirtual #40                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         28: ifeq          34\n         31: aload         4\n         33: areturn\n         34: iinc          3, 1\n         37: goto          9\n-        40: new           #10                 // class java/lang/IllegalArgumentException\n+        40: new           #46                 // class java/lang/IllegalArgumentException\n         43: dup\n-        44: new           #11                 // class java/lang/StringBuilder\n+        44: new           #48                 // class java/lang/StringBuilder\n         47: dup\n-        48: invokespecial #12                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        51: ldc           #13                 // String Invalid IOCase name:\n-        53: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        48: invokespecial #50                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        51: ldc           #54                 // String Invalid IOCase name:\n+        53: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         56: aload_0\n-        57: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        60: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        63: invokespecial #16                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        57: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        60: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        63: invokespecial #63                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         66: athrow\n       LineNumberTable:\n         line 95: 0\n         line 96: 19\n         line 97: 31\n         line 95: 34\n         line 100: 40\n@@ -296,86 +298,86 @@\n     descriptor: (Ljava/lang/String;ILjava/lang/String;Z)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=5, args_size=5\n          0: aload_0\n          1: aload_1\n          2: iload_2\n-         3: invokespecial #17                 // Method java/lang/Enum.\"<init>\":(Ljava/lang/String;I)V\n+         3: invokespecial #66                 // Method java/lang/Enum.\"<init>\":(Ljava/lang/String;I)V\n          6: aload_0\n          7: aload_3\n-         8: putfield      #18                 // Field name:Ljava/lang/String;\n+         8: putfield      #69                 // Field name:Ljava/lang/String;\n         11: aload_0\n         12: iload         4\n-        14: putfield      #19                 // Field sensitive:Z\n+        14: putfield      #73                 // Field sensitive:Z\n         17: return\n       LineNumberTable:\n         line 109: 0\n         line 110: 6\n         line 111: 11\n         line 112: 17\n-    Signature: #70                          // (Ljava/lang/String;Z)V\n+    Signature: #144                         // (Ljava/lang/String;Z)V\n \n   private java.lang.Object readResolve();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field name:Ljava/lang/String;\n-         4: invokestatic  #20                 // Method forName:(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;\n+         1: getfield      #69                 // Field name:Ljava/lang/String;\n+         4: invokestatic  #77                 // Method forName:(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;\n          7: areturn\n       LineNumberTable:\n         line 121: 0\n \n   public java.lang.String getName();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field name:Ljava/lang/String;\n+         1: getfield      #69                 // Field name:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 130: 0\n \n   public boolean isCaseSensitive();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #19                 // Field sensitive:Z\n+         1: getfield      #73                 // Field sensitive:Z\n          4: ireturn\n       LineNumberTable:\n         line 139: 0\n \n   public int checkCompareTo(java.lang.String, java.lang.String);\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_1\n-         1: ldc           #21                 // String str1\n-         3: invokestatic  #22                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #81                 // String str1\n+         3: invokestatic  #83                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: aload_2\n-         8: ldc           #23                 // String str2\n-        10: invokestatic  #22                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         8: ldc           #89                 // String str2\n+        10: invokestatic  #83                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n         13: pop\n         14: aload_0\n-        15: getfield      #19                 // Field sensitive:Z\n+        15: getfield      #73                 // Field sensitive:Z\n         18: ifeq          29\n         21: aload_1\n         22: aload_2\n-        23: invokevirtual #24                 // Method java/lang/String.compareTo:(Ljava/lang/String;)I\n+        23: invokevirtual #91                 // Method java/lang/String.compareTo:(Ljava/lang/String;)I\n         26: goto          34\n         29: aload_1\n         30: aload_2\n-        31: invokevirtual #25                 // Method java/lang/String.compareToIgnoreCase:(Ljava/lang/String;)I\n+        31: invokevirtual #95                 // Method java/lang/String.compareToIgnoreCase:(Ljava/lang/String;)I\n         34: ireturn\n       LineNumberTable:\n         line 155: 0\n         line 156: 7\n         line 157: 14\n       StackMapTable: number_of_entries = 2\n         frame_type = 29 /* same */\n@@ -384,31 +386,31 @@\n \n   public boolean checkEquals(java.lang.String, java.lang.String);\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_1\n-         1: ldc           #21                 // String str1\n-         3: invokestatic  #22                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #81                 // String str1\n+         3: invokestatic  #83                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: aload_2\n-         8: ldc           #23                 // String str2\n-        10: invokestatic  #22                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         8: ldc           #89                 // String str2\n+        10: invokestatic  #83                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n         13: pop\n         14: aload_0\n-        15: getfield      #19                 // Field sensitive:Z\n+        15: getfield      #73                 // Field sensitive:Z\n         18: ifeq          29\n         21: aload_1\n         22: aload_2\n-        23: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        23: invokevirtual #40                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         26: goto          34\n         29: aload_1\n         30: aload_2\n-        31: invokevirtual #26                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+        31: invokevirtual #98                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n         34: ireturn\n       LineNumberTable:\n         line 173: 0\n         line 174: 7\n         line 175: 14\n       StackMapTable: number_of_entries = 2\n         frame_type = 29 /* same */\n@@ -422,25 +424,25 @@\n       stack=6, locals=3, args_size=3\n          0: aload_1\n          1: ifnull        38\n          4: aload_2\n          5: ifnull        38\n          8: aload_1\n          9: aload_0\n-        10: getfield      #19                 // Field sensitive:Z\n+        10: getfield      #73                 // Field sensitive:Z\n         13: ifne          20\n         16: iconst_1\n         17: goto          21\n         20: iconst_0\n         21: iconst_0\n         22: aload_2\n         23: iconst_0\n         24: aload_2\n-        25: invokevirtual #27                 // Method java/lang/String.length:()I\n-        28: invokevirtual #28                 // Method java/lang/String.regionMatches:(ZILjava/lang/String;II)Z\n+        25: invokevirtual #102                // Method java/lang/String.length:()I\n+        28: invokevirtual #106                // Method java/lang/String.regionMatches:(ZILjava/lang/String;II)Z\n         31: ifeq          38\n         34: iconst_1\n         35: goto          39\n         38: iconst_0\n         39: ireturn\n       LineNumberTable:\n         line 190: 0\n@@ -463,31 +465,31 @@\n          0: aload_1\n          1: ifnull        8\n          4: aload_2\n          5: ifnonnull     10\n          8: iconst_0\n          9: ireturn\n         10: aload_2\n-        11: invokevirtual #27                 // Method java/lang/String.length:()I\n+        11: invokevirtual #102                // Method java/lang/String.length:()I\n         14: istore_3\n         15: aload_1\n         16: aload_0\n-        17: getfield      #19                 // Field sensitive:Z\n+        17: getfield      #73                 // Field sensitive:Z\n         20: ifne          27\n         23: iconst_1\n         24: goto          28\n         27: iconst_0\n         28: aload_1\n-        29: invokevirtual #27                 // Method java/lang/String.length:()I\n+        29: invokevirtual #102                // Method java/lang/String.length:()I\n         32: iload_3\n         33: isub\n         34: aload_2\n         35: iconst_0\n         36: iload_3\n-        37: invokevirtual #28                 // Method java/lang/String.regionMatches:(ZILjava/lang/String;II)Z\n+        37: invokevirtual #106                // Method java/lang/String.regionMatches:(ZILjava/lang/String;II)Z\n         40: ireturn\n       LineNumberTable:\n         line 205: 0\n         line 206: 8\n         line 208: 10\n         line 209: 15\n       StackMapTable: number_of_entries = 4\n@@ -504,32 +506,32 @@\n \n   public int checkIndexOf(java.lang.String, int, java.lang.String);\n     descriptor: (Ljava/lang/String;ILjava/lang/String;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=6, args_size=4\n          0: aload_1\n-         1: invokevirtual #27                 // Method java/lang/String.length:()I\n+         1: invokevirtual #102                // Method java/lang/String.length:()I\n          4: aload_3\n-         5: invokevirtual #27                 // Method java/lang/String.length:()I\n+         5: invokevirtual #102                // Method java/lang/String.length:()I\n          8: isub\n          9: istore        4\n         11: iload         4\n         13: iload_2\n         14: if_icmplt     47\n         17: iload_2\n         18: istore        5\n         20: iload         5\n         22: iload         4\n         24: if_icmpgt     47\n         27: aload_0\n         28: aload_1\n         29: iload         5\n         31: aload_3\n-        32: invokevirtual #29                 // Method checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n+        32: invokevirtual #110                // Method checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n         35: ifeq          41\n         38: iload         5\n         40: ireturn\n         41: iinc          5, 1\n         44: goto          20\n         47: iconst_m1\n         48: ireturn\n@@ -552,25 +554,25 @@\n   public boolean checkRegionMatches(java.lang.String, int, java.lang.String);\n     descriptor: (Ljava/lang/String;ILjava/lang/String;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=4, args_size=4\n          0: aload_1\n          1: aload_0\n-         2: getfield      #19                 // Field sensitive:Z\n+         2: getfield      #73                 // Field sensitive:Z\n          5: ifne          12\n          8: iconst_1\n          9: goto          13\n         12: iconst_0\n         13: iload_2\n         14: aload_3\n         15: iconst_0\n         16: aload_3\n-        17: invokevirtual #27                 // Method java/lang/String.length:()I\n-        20: invokevirtual #28                 // Method java/lang/String.regionMatches:(ZILjava/lang/String;II)Z\n+        17: invokevirtual #102                // Method java/lang/String.length:()I\n+        20: invokevirtual #106                // Method java/lang/String.regionMatches:(ZILjava/lang/String;II)Z\n         23: ireturn\n       LineNumberTable:\n         line 254: 0\n       StackMapTable: number_of_entries = 2\n         frame_type = 76 /* same_locals_1_stack_item */\n           stack = [ class java/lang/String ]\n         frame_type = 255 /* full_frame */\n@@ -580,68 +582,78 @@\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field name:Ljava/lang/String;\n+         1: getfield      #69                 // Field name:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 264: 0\n \n+  private static org.apache.commons.io.IOCase[] $values();\n+    descriptor: ()[Lorg/apache/commons/io/IOCase;\n+    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n+    Code:\n+      stack=4, locals=0, args_size=0\n+         0: iconst_3\n+         1: anewarray     #1                  // class org/apache/commons/io/IOCase\n+         4: dup\n+         5: iconst_0\n+         6: getstatic     #3                  // Field SENSITIVE:Lorg/apache/commons/io/IOCase;\n+         9: aastore\n+        10: dup\n+        11: iconst_1\n+        12: getstatic     #7                  // Field INSENSITIVE:Lorg/apache/commons/io/IOCase;\n+        15: aastore\n+        16: dup\n+        17: iconst_2\n+        18: getstatic     #10                 // Field SYSTEM:Lorg/apache/commons/io/IOCase;\n+        21: aastore\n+        22: areturn\n+      LineNumberTable:\n+        line 39: 0\n+\n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=6, locals=0, args_size=0\n-         0: new           #4                  // class org/apache/commons/io/IOCase\n+         0: new           #1                  // class org/apache/commons/io/IOCase\n          3: dup\n-         4: ldc           #30                 // String SENSITIVE\n+         4: ldc           #114                // String SENSITIVE\n          6: iconst_0\n-         7: ldc           #31                 // String Sensitive\n+         7: ldc           #115                // String Sensitive\n          9: iconst_1\n-        10: invokespecial #32                 // Method \"<init>\":(Ljava/lang/String;ILjava/lang/String;Z)V\n-        13: putstatic     #33                 // Field SENSITIVE:Lorg/apache/commons/io/IOCase;\n-        16: new           #4                  // class org/apache/commons/io/IOCase\n+        10: invokespecial #117                // Method \"<init>\":(Ljava/lang/String;ILjava/lang/String;Z)V\n+        13: putstatic     #3                  // Field SENSITIVE:Lorg/apache/commons/io/IOCase;\n+        16: new           #1                  // class org/apache/commons/io/IOCase\n         19: dup\n-        20: ldc           #34                 // String INSENSITIVE\n+        20: ldc           #120                // String INSENSITIVE\n         22: iconst_1\n-        23: ldc           #35                 // String Insensitive\n+        23: ldc           #121                // String Insensitive\n         25: iconst_0\n-        26: invokespecial #32                 // Method \"<init>\":(Ljava/lang/String;ILjava/lang/String;Z)V\n-        29: putstatic     #36                 // Field INSENSITIVE:Lorg/apache/commons/io/IOCase;\n-        32: new           #4                  // class org/apache/commons/io/IOCase\n+        26: invokespecial #117                // Method \"<init>\":(Ljava/lang/String;ILjava/lang/String;Z)V\n+        29: putstatic     #7                  // Field INSENSITIVE:Lorg/apache/commons/io/IOCase;\n+        32: new           #1                  // class org/apache/commons/io/IOCase\n         35: dup\n-        36: ldc           #37                 // String SYSTEM\n+        36: ldc           #123                // String SYSTEM\n         38: iconst_2\n-        39: ldc           #38                 // String System\n-        41: invokestatic  #39                 // Method org/apache/commons/io/FilenameUtils.isSystemWindows:()Z\n+        39: ldc           #124                // String System\n+        41: invokestatic  #126                // Method org/apache/commons/io/FilenameUtils.isSystemWindows:()Z\n         44: ifne          51\n         47: iconst_1\n         48: goto          52\n         51: iconst_0\n-        52: invokespecial #32                 // Method \"<init>\":(Ljava/lang/String;ILjava/lang/String;Z)V\n-        55: putstatic     #40                 // Field SYSTEM:Lorg/apache/commons/io/IOCase;\n-        58: iconst_3\n-        59: anewarray     #4                  // class org/apache/commons/io/IOCase\n-        62: dup\n-        63: iconst_0\n-        64: getstatic     #33                 // Field SENSITIVE:Lorg/apache/commons/io/IOCase;\n-        67: aastore\n-        68: dup\n-        69: iconst_1\n-        70: getstatic     #36                 // Field INSENSITIVE:Lorg/apache/commons/io/IOCase;\n-        73: aastore\n-        74: dup\n-        75: iconst_2\n-        76: getstatic     #40                 // Field SYSTEM:Lorg/apache/commons/io/IOCase;\n-        79: aastore\n-        80: putstatic     #1                  // Field $VALUES:[Lorg/apache/commons/io/IOCase;\n-        83: return\n+        52: invokespecial #117                // Method \"<init>\":(Ljava/lang/String;ILjava/lang/String;Z)V\n+        55: putstatic     #10                 // Field SYSTEM:Lorg/apache/commons/io/IOCase;\n+        58: invokestatic  #131                // Method $values:()[Lorg/apache/commons/io/IOCase;\n+        61: putstatic     #13                 // Field $VALUES:[Lorg/apache/commons/io/IOCase;\n+        64: return\n       LineNumberTable:\n         line 44: 0\n         line 49: 16\n         line 65: 32\n         line 39: 58\n       StackMapTable: number_of_entries = 2\n         frame_type = 255 /* full_frame */\n@@ -649,9 +661,9 @@\n           locals = []\n           stack = [ uninitialized 32, uninitialized 32, class java/lang/String, int, class java/lang/String ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = []\n           stack = [ uninitialized 32, uninitialized 32, class java/lang/String, int, class java/lang/String, int ]\n }\n-Signature: #90                          // Ljava/lang/Enum<Lorg/apache/commons/io/IOCase;>;\n+Signature: #155                         // Ljava/lang/Enum<Lorg/apache/commons/io/IOCase;>;\n SourceFile: \"IOCase.java\"\n"}]}
