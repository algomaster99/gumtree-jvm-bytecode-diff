{"diffoscope-json-version": 1, "source1": "first/CPConstant.class", "source2": "second/CPConstant.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -3,31 +3,21 @@\n \n import java.util.Objects;\n \n public abstract class CPConstant extends ConstantPoolEntry\n {\n     private final Object value;\n     \n-    public CPConstant(final byte tag, final Object value, final int globalIndex) {\n-        super(tag, globalIndex);\n-        this.value = Objects.requireNonNull(value, \"value\");\n+    public CPConstant(final byte b, final Object obj, final int n) {\n+        super(b, n);\n+        this.value = Objects.requireNonNull(obj, \"value\");\n     }\n     \n-    public boolean equals(final Object obj) {\n-        if (this == obj) {\n-            return true;\n-        }\n-        if (obj == null) {\n-            return false;\n-        }\n-        if (this.getClass() != obj.getClass()) {\n-            return false;\n-        }\n-        final CPConstant other = (CPConstant)obj;\n-        return Objects.equals(this.value, other.value);\n+    public boolean equals(final Object o) {\n+        return this == o || (o != null && this.getClass() == o.getClass() && Objects.equals(this.value, ((CPConstant)o).value));\n     }\n     \n     protected Object getValue() {\n         return this.value;\n     }\n     \n     public int hashCode() {\n"}]}
