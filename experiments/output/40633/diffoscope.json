{"diffoscope-json-version": 1, "source1": "first/LZMADecoder.class", "source2": "second/LZMADecoder.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,392 +1,393 @@\n-  SHA-256 checksum 1a84c9103306f5f3d46696f22689fcbf45b51d623a14eb544efc0910a15ff8ec\n+  SHA-256 checksum 2f4cc33b42a490f6653a6e04b9e144d11c5b0bf8fefb9c1b0469f0392369f43d\n   Compiled from \"LZMADecoder.java\"\n class org.apache.commons.compress.archivers.sevenz.LZMADecoder extends org.apache.commons.compress.archivers.sevenz.CoderBase\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n-  this_class: #41                         // org/apache/commons/compress/archivers/sevenz/LZMADecoder\n-  super_class: #42                        // org/apache/commons/compress/archivers/sevenz/CoderBase\n+  this_class: #1                          // org/apache/commons/compress/archivers/sevenz/LZMADecoder\n+  super_class: #3                         // org/apache/commons/compress/archivers/sevenz/CoderBase\n   interfaces: 0, fields: 0, methods: 8, attributes: 1\n Constant pool:\n-    #1 = Class              #98           // java/lang/Class\n-    #2 = Class              #99           // org/tukaani/xz/LZMA2Options\n-    #3 = Class              #100          // java/lang/Number\n-    #4 = Methodref          #42.#101      // org/apache/commons/compress/archivers/sevenz/CoderBase.\"<init>\":([Ljava/lang/Class;)V\n-    #5 = Fieldref           #102.#103     // org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n-    #6 = Class              #104          // java/io/IOException\n-    #7 = String             #105          // Missing LZMA properties\n-    #8 = Methodref          #6.#106       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-    #9 = String             #107          // LZMA properties too short\n-   #10 = Methodref          #41.#108      // org/apache/commons/compress/archivers/sevenz/LZMADecoder.getDictionarySize:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n-   #11 = Class              #109          // org/tukaani/xz/LZMAInputStream\n-   #12 = Integer            2147483632\n-   #13 = Class              #110          // java/lang/StringBuilder\n-   #14 = Methodref          #13.#111      // java/lang/StringBuilder.\"<init>\":()V\n-   #15 = String             #112          // Dictionary larger than 4GiB maximum size used in\n-   #16 = Methodref          #13.#113      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #17 = Methodref          #13.#114      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #18 = Methodref          #11.#115      // org/tukaani/xz/LZMAInputStream.getMemoryUsage:(IB)I\n-   #19 = Class              #116          // org/apache/commons/compress/MemoryLimitException\n-   #20 = Methodref          #19.#117      // org/apache/commons/compress/MemoryLimitException.\"<init>\":(JI)V\n-   #21 = Methodref          #11.#118      // org/tukaani/xz/LZMAInputStream.\"<init>\":(Ljava/io/InputStream;JBI)V\n-   #22 = Methodref          #11.#119      // org/tukaani/xz/LZMAInputStream.enableRelaxedEndCondition:()V\n-   #23 = Class              #120          // org/apache/commons/compress/utils/FlushShieldFilterOutputStream\n-   #24 = Class              #121          // org/tukaani/xz/LZMAOutputStream\n-   #25 = Methodref          #41.#122      // org/apache/commons/compress/archivers/sevenz/LZMADecoder.getOptions:(Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n-   #26 = Methodref          #24.#123      // org/tukaani/xz/LZMAOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/tukaani/xz/LZMA2Options;Z)V\n-   #27 = Methodref          #23.#124      // org/apache/commons/compress/utils/FlushShieldFilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #28 = Methodref          #2.#125       // org/tukaani/xz/LZMA2Options.getPb:()I\n-   #29 = Methodref          #2.#126       // org/tukaani/xz/LZMA2Options.getLp:()I\n-   #30 = Methodref          #2.#127       // org/tukaani/xz/LZMA2Options.getLc:()I\n-   #31 = Methodref          #2.#128       // org/tukaani/xz/LZMA2Options.getDictSize:()I\n-   #32 = Methodref          #129.#130     // org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n-   #33 = Methodref          #2.#111       // org/tukaani/xz/LZMA2Options.\"<init>\":()V\n-   #34 = Methodref          #2.#131       // org/tukaani/xz/LZMA2Options.setPb:(I)V\n-   #35 = Methodref          #2.#132       // org/tukaani/xz/LZMA2Options.setLcLp:(II)V\n-   #36 = Methodref          #2.#133       // org/tukaani/xz/LZMA2Options.setDictSize:(I)V\n-   #37 = Methodref          #129.#134     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n-   #38 = Methodref          #41.#135      // org/apache/commons/compress/archivers/sevenz/LZMADecoder.numberOptionOrDefault:(Ljava/lang/Object;)I\n-   #39 = Integer            8388608\n-   #40 = Methodref          #41.#136      // org/apache/commons/compress/archivers/sevenz/LZMADecoder.numberOptionOrDefault:(Ljava/lang/Object;I)I\n-   #41 = Class              #137          // org/apache/commons/compress/archivers/sevenz/LZMADecoder\n-   #42 = Class              #138          // org/apache/commons/compress/archivers/sevenz/CoderBase\n-   #43 = Utf8               <init>\n-   #44 = Utf8               ()V\n-   #45 = Utf8               Code\n-   #46 = Utf8               LineNumberTable\n-   #47 = Utf8               LocalVariableTable\n-   #48 = Utf8               this\n-   #49 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/LZMADecoder;\n-   #50 = Utf8               decode\n-   #51 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;JLorg/apache/commons/compress/archivers/sevenz/Coder;[BI)Ljava/io/InputStream;\n-   #52 = Utf8               archiveName\n-   #53 = Utf8               Ljava/lang/String;\n-   #54 = Utf8               in\n-   #55 = Utf8               Ljava/io/InputStream;\n-   #56 = Utf8               uncompressedLength\n-   #57 = Utf8               J\n-   #58 = Utf8               coder\n-   #59 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/Coder;\n-   #60 = Utf8               password\n-   #61 = Utf8               [B\n-   #62 = Utf8               maxMemoryLimitInKb\n-   #63 = Utf8               I\n-   #64 = Utf8               propsByte\n-   #65 = Utf8               B\n-   #66 = Utf8               dictSize\n-   #67 = Utf8               memoryUsageInKb\n-   #68 = Utf8               lzmaIn\n-   #69 = Utf8               Lorg/tukaani/xz/LZMAInputStream;\n-   #70 = Utf8               StackMapTable\n-   #71 = Utf8               Exceptions\n-   #72 = Utf8               encode\n-   #73 = Utf8               (Ljava/io/OutputStream;Ljava/lang/Object;)Ljava/io/OutputStream;\n-   #74 = Utf8               out\n-   #75 = Utf8               Ljava/io/OutputStream;\n-   #76 = Utf8               opts\n-   #77 = Utf8               Ljava/lang/Object;\n-   #78 = Utf8               getOptionsAsProperties\n-   #79 = Utf8               (Ljava/lang/Object;)[B\n-   #80 = Utf8               options\n-   #81 = Utf8               Lorg/tukaani/xz/LZMA2Options;\n-   #82 = Utf8               props\n-   #83 = Utf8               o\n-   #84 = Utf8               getOptionsFromCoder\n-   #85 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/Coder;Ljava/io/InputStream;)Ljava/lang/Object;\n-   #86 = Utf8               pb\n-   #87 = Utf8               lp\n-   #88 = Utf8               lc\n-   #89 = Utf8               getDictionarySize\n-   #90 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n-   #91 = Class              #139          // java/lang/IllegalArgumentException\n-   #92 = Utf8               getOptions\n-   #93 = Utf8               (Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n-   #94 = Utf8               numberOptionOrDefault\n-   #95 = Utf8               (Ljava/lang/Object;)I\n-   #96 = Utf8               SourceFile\n-   #97 = Utf8               LZMADecoder.java\n-   #98 = Utf8               java/lang/Class\n-   #99 = Utf8               org/tukaani/xz/LZMA2Options\n-  #100 = Utf8               java/lang/Number\n-  #101 = NameAndType        #43:#140      // \"<init>\":([Ljava/lang/Class;)V\n-  #102 = Class              #141          // org/apache/commons/compress/archivers/sevenz/Coder\n-  #103 = NameAndType        #142:#61      // properties:[B\n-  #104 = Utf8               java/io/IOException\n-  #105 = Utf8               Missing LZMA properties\n-  #106 = NameAndType        #43:#143      // \"<init>\":(Ljava/lang/String;)V\n-  #107 = Utf8               LZMA properties too short\n-  #108 = NameAndType        #89:#90       // getDictionarySize:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n-  #109 = Utf8               org/tukaani/xz/LZMAInputStream\n-  #110 = Utf8               java/lang/StringBuilder\n-  #111 = NameAndType        #43:#44       // \"<init>\":()V\n-  #112 = Utf8               Dictionary larger than 4GiB maximum size used in\n-  #113 = NameAndType        #144:#145     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #114 = NameAndType        #146:#147     // toString:()Ljava/lang/String;\n-  #115 = NameAndType        #148:#149     // getMemoryUsage:(IB)I\n-  #116 = Utf8               org/apache/commons/compress/MemoryLimitException\n-  #117 = NameAndType        #43:#150      // \"<init>\":(JI)V\n-  #118 = NameAndType        #43:#151      // \"<init>\":(Ljava/io/InputStream;JBI)V\n-  #119 = NameAndType        #152:#44      // enableRelaxedEndCondition:()V\n-  #120 = Utf8               org/apache/commons/compress/utils/FlushShieldFilterOutputStream\n-  #121 = Utf8               org/tukaani/xz/LZMAOutputStream\n-  #122 = NameAndType        #92:#93       // getOptions:(Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n-  #123 = NameAndType        #43:#153      // \"<init>\":(Ljava/io/OutputStream;Lorg/tukaani/xz/LZMA2Options;Z)V\n-  #124 = NameAndType        #43:#154      // \"<init>\":(Ljava/io/OutputStream;)V\n-  #125 = NameAndType        #155:#156     // getPb:()I\n-  #126 = NameAndType        #157:#156     // getLp:()I\n-  #127 = NameAndType        #158:#156     // getLc:()I\n-  #128 = NameAndType        #159:#156     // getDictSize:()I\n-  #129 = Class              #160          // org/apache/commons/compress/utils/ByteUtils\n-  #130 = NameAndType        #161:#162     // toLittleEndian:([BJII)V\n-  #131 = NameAndType        #163:#164     // setPb:(I)V\n-  #132 = NameAndType        #165:#166     // setLcLp:(II)V\n-  #133 = NameAndType        #167:#164     // setDictSize:(I)V\n-  #134 = NameAndType        #168:#169     // fromLittleEndian:([BII)J\n-  #135 = NameAndType        #94:#95       // numberOptionOrDefault:(Ljava/lang/Object;)I\n-  #136 = NameAndType        #94:#170      // numberOptionOrDefault:(Ljava/lang/Object;I)I\n-  #137 = Utf8               org/apache/commons/compress/archivers/sevenz/LZMADecoder\n-  #138 = Utf8               org/apache/commons/compress/archivers/sevenz/CoderBase\n-  #139 = Utf8               java/lang/IllegalArgumentException\n-  #140 = Utf8               ([Ljava/lang/Class;)V\n-  #141 = Utf8               org/apache/commons/compress/archivers/sevenz/Coder\n-  #142 = Utf8               properties\n-  #143 = Utf8               (Ljava/lang/String;)V\n-  #144 = Utf8               append\n-  #145 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #146 = Utf8               toString\n-  #147 = Utf8               ()Ljava/lang/String;\n-  #148 = Utf8               getMemoryUsage\n-  #149 = Utf8               (IB)I\n-  #150 = Utf8               (JI)V\n-  #151 = Utf8               (Ljava/io/InputStream;JBI)V\n-  #152 = Utf8               enableRelaxedEndCondition\n-  #153 = Utf8               (Ljava/io/OutputStream;Lorg/tukaani/xz/LZMA2Options;Z)V\n-  #154 = Utf8               (Ljava/io/OutputStream;)V\n-  #155 = Utf8               getPb\n-  #156 = Utf8               ()I\n-  #157 = Utf8               getLp\n-  #158 = Utf8               getLc\n-  #159 = Utf8               getDictSize\n-  #160 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #161 = Utf8               toLittleEndian\n-  #162 = Utf8               ([BJII)V\n-  #163 = Utf8               setPb\n-  #164 = Utf8               (I)V\n-  #165 = Utf8               setLcLp\n-  #166 = Utf8               (II)V\n-  #167 = Utf8               setDictSize\n-  #168 = Utf8               fromLittleEndian\n-  #169 = Utf8               ([BII)J\n-  #170 = Utf8               (Ljava/lang/Object;I)I\n+    #1 = Class              #2            // org/apache/commons/compress/archivers/sevenz/LZMADecoder\n+    #2 = Utf8               org/apache/commons/compress/archivers/sevenz/LZMADecoder\n+    #3 = Class              #4            // org/apache/commons/compress/archivers/sevenz/CoderBase\n+    #4 = Utf8               org/apache/commons/compress/archivers/sevenz/CoderBase\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Utf8               Code\n+    #8 = Class              #9            // java/lang/Class\n+    #9 = Utf8               java/lang/Class\n+   #10 = Class              #11           // org/tukaani/xz/LZMA2Options\n+   #11 = Utf8               org/tukaani/xz/LZMA2Options\n+   #12 = Class              #13           // java/lang/Number\n+   #13 = Utf8               java/lang/Number\n+   #14 = Methodref          #3.#15        // org/apache/commons/compress/archivers/sevenz/CoderBase.\"<init>\":([Ljava/lang/Class;)V\n+   #15 = NameAndType        #5:#16        // \"<init>\":([Ljava/lang/Class;)V\n+   #16 = Utf8               ([Ljava/lang/Class;)V\n+   #17 = Utf8               LineNumberTable\n+   #18 = Utf8               LocalVariableTable\n+   #19 = Utf8               this\n+   #20 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/LZMADecoder;\n+   #21 = Utf8               decode\n+   #22 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;JLorg/apache/commons/compress/archivers/sevenz/Coder;[BI)Ljava/io/InputStream;\n+   #23 = Utf8               Exceptions\n+   #24 = Class              #25           // java/io/IOException\n+   #25 = Utf8               java/io/IOException\n+   #26 = Fieldref           #27.#29       // org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n+   #27 = Class              #28           // org/apache/commons/compress/archivers/sevenz/Coder\n+   #28 = Utf8               org/apache/commons/compress/archivers/sevenz/Coder\n+   #29 = NameAndType        #30:#31       // properties:[B\n+   #30 = Utf8               properties\n+   #31 = Utf8               [B\n+   #32 = String             #33           // Missing LZMA properties\n+   #33 = Utf8               Missing LZMA properties\n+   #34 = Methodref          #24.#35       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #35 = NameAndType        #5:#36        // \"<init>\":(Ljava/lang/String;)V\n+   #36 = Utf8               (Ljava/lang/String;)V\n+   #37 = String             #38           // LZMA properties too short\n+   #38 = Utf8               LZMA properties too short\n+   #39 = Methodref          #1.#40        // org/apache/commons/compress/archivers/sevenz/LZMADecoder.getDictionarySize:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n+   #40 = NameAndType        #41:#42       // getDictionarySize:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n+   #41 = Utf8               getDictionarySize\n+   #42 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n+   #43 = Integer            2147483632\n+   #44 = Class              #45           // java/lang/StringBuilder\n+   #45 = Utf8               java/lang/StringBuilder\n+   #46 = String             #47           // Dictionary larger than 4GiB maximum size used in\n+   #47 = Utf8               Dictionary larger than 4GiB maximum size used in\n+   #48 = Methodref          #44.#35       // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+   #49 = Methodref          #44.#50       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #50 = NameAndType        #51:#52       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #51 = Utf8               append\n+   #52 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #53 = Methodref          #44.#54       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #54 = NameAndType        #55:#56       // toString:()Ljava/lang/String;\n+   #55 = Utf8               toString\n+   #56 = Utf8               ()Ljava/lang/String;\n+   #57 = Methodref          #58.#60       // org/tukaani/xz/LZMAInputStream.getMemoryUsage:(IB)I\n+   #58 = Class              #59           // org/tukaani/xz/LZMAInputStream\n+   #59 = Utf8               org/tukaani/xz/LZMAInputStream\n+   #60 = NameAndType        #61:#62       // getMemoryUsage:(IB)I\n+   #61 = Utf8               getMemoryUsage\n+   #62 = Utf8               (IB)I\n+   #63 = Class              #64           // org/apache/commons/compress/MemoryLimitException\n+   #64 = Utf8               org/apache/commons/compress/MemoryLimitException\n+   #65 = Methodref          #63.#66       // org/apache/commons/compress/MemoryLimitException.\"<init>\":(JI)V\n+   #66 = NameAndType        #5:#67        // \"<init>\":(JI)V\n+   #67 = Utf8               (JI)V\n+   #68 = Methodref          #58.#69       // org/tukaani/xz/LZMAInputStream.\"<init>\":(Ljava/io/InputStream;JBI)V\n+   #69 = NameAndType        #5:#70        // \"<init>\":(Ljava/io/InputStream;JBI)V\n+   #70 = Utf8               (Ljava/io/InputStream;JBI)V\n+   #71 = Methodref          #58.#72       // org/tukaani/xz/LZMAInputStream.enableRelaxedEndCondition:()V\n+   #72 = NameAndType        #73:#6        // enableRelaxedEndCondition:()V\n+   #73 = Utf8               enableRelaxedEndCondition\n+   #74 = Utf8               archiveName\n+   #75 = Utf8               Ljava/lang/String;\n+   #76 = Utf8               in\n+   #77 = Utf8               Ljava/io/InputStream;\n+   #78 = Utf8               uncompressedLength\n+   #79 = Utf8               J\n+   #80 = Utf8               coder\n+   #81 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/Coder;\n+   #82 = Utf8               password\n+   #83 = Utf8               maxMemoryLimitInKb\n+   #84 = Utf8               I\n+   #85 = Utf8               propsByte\n+   #86 = Utf8               B\n+   #87 = Utf8               dictSize\n+   #88 = Utf8               memoryUsageInKb\n+   #89 = Utf8               lzmaIn\n+   #90 = Utf8               Lorg/tukaani/xz/LZMAInputStream;\n+   #91 = Utf8               StackMapTable\n+   #92 = Utf8               encode\n+   #93 = Utf8               (Ljava/io/OutputStream;Ljava/lang/Object;)Ljava/io/OutputStream;\n+   #94 = Class              #95           // org/apache/commons/compress/utils/FlushShieldFilterOutputStream\n+   #95 = Utf8               org/apache/commons/compress/utils/FlushShieldFilterOutputStream\n+   #96 = Class              #97           // org/tukaani/xz/LZMAOutputStream\n+   #97 = Utf8               org/tukaani/xz/LZMAOutputStream\n+   #98 = Methodref          #1.#99        // org/apache/commons/compress/archivers/sevenz/LZMADecoder.getOptions:(Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n+   #99 = NameAndType        #100:#101     // getOptions:(Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n+  #100 = Utf8               getOptions\n+  #101 = Utf8               (Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n+  #102 = Methodref          #96.#103      // org/tukaani/xz/LZMAOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/tukaani/xz/LZMA2Options;Z)V\n+  #103 = NameAndType        #5:#104       // \"<init>\":(Ljava/io/OutputStream;Lorg/tukaani/xz/LZMA2Options;Z)V\n+  #104 = Utf8               (Ljava/io/OutputStream;Lorg/tukaani/xz/LZMA2Options;Z)V\n+  #105 = Methodref          #94.#106      // org/apache/commons/compress/utils/FlushShieldFilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #106 = NameAndType        #5:#107       // \"<init>\":(Ljava/io/OutputStream;)V\n+  #107 = Utf8               (Ljava/io/OutputStream;)V\n+  #108 = Utf8               out\n+  #109 = Utf8               Ljava/io/OutputStream;\n+  #110 = Utf8               opts\n+  #111 = Utf8               Ljava/lang/Object;\n+  #112 = Utf8               getOptionsAsProperties\n+  #113 = Utf8               (Ljava/lang/Object;)[B\n+  #114 = Methodref          #10.#115      // org/tukaani/xz/LZMA2Options.getPb:()I\n+  #115 = NameAndType        #116:#117     // getPb:()I\n+  #116 = Utf8               getPb\n+  #117 = Utf8               ()I\n+  #118 = Methodref          #10.#119      // org/tukaani/xz/LZMA2Options.getLp:()I\n+  #119 = NameAndType        #120:#117     // getLp:()I\n+  #120 = Utf8               getLp\n+  #121 = Methodref          #10.#122      // org/tukaani/xz/LZMA2Options.getLc:()I\n+  #122 = NameAndType        #123:#117     // getLc:()I\n+  #123 = Utf8               getLc\n+  #124 = Methodref          #10.#125      // org/tukaani/xz/LZMA2Options.getDictSize:()I\n+  #125 = NameAndType        #126:#117     // getDictSize:()I\n+  #126 = Utf8               getDictSize\n+  #127 = Methodref          #128.#130     // org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n+  #128 = Class              #129          // org/apache/commons/compress/utils/ByteUtils\n+  #129 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #130 = NameAndType        #131:#132     // toLittleEndian:([BJII)V\n+  #131 = Utf8               toLittleEndian\n+  #132 = Utf8               ([BJII)V\n+  #133 = Utf8               options\n+  #134 = Utf8               Lorg/tukaani/xz/LZMA2Options;\n+  #135 = Utf8               props\n+  #136 = Utf8               o\n+  #137 = Utf8               getOptionsFromCoder\n+  #138 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/Coder;Ljava/io/InputStream;)Ljava/lang/Object;\n+  #139 = Methodref          #10.#140      // org/tukaani/xz/LZMA2Options.\"<init>\":()V\n+  #140 = NameAndType        #5:#6         // \"<init>\":()V\n+  #141 = Methodref          #10.#142      // org/tukaani/xz/LZMA2Options.setPb:(I)V\n+  #142 = NameAndType        #143:#144     // setPb:(I)V\n+  #143 = Utf8               setPb\n+  #144 = Utf8               (I)V\n+  #145 = Methodref          #10.#146      // org/tukaani/xz/LZMA2Options.setLcLp:(II)V\n+  #146 = NameAndType        #147:#148     // setLcLp:(II)V\n+  #147 = Utf8               setLcLp\n+  #148 = Utf8               (II)V\n+  #149 = Methodref          #10.#150      // org/tukaani/xz/LZMA2Options.setDictSize:(I)V\n+  #150 = NameAndType        #151:#144     // setDictSize:(I)V\n+  #151 = Utf8               setDictSize\n+  #152 = Utf8               pb\n+  #153 = Utf8               lp\n+  #154 = Utf8               lc\n+  #155 = Class              #156          // java/lang/IllegalArgumentException\n+  #156 = Utf8               java/lang/IllegalArgumentException\n+  #157 = Methodref          #128.#158     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n+  #158 = NameAndType        #159:#160     // fromLittleEndian:([BII)J\n+  #159 = Utf8               fromLittleEndian\n+  #160 = Utf8               ([BII)J\n+  #161 = Methodref          #1.#162       // org/apache/commons/compress/archivers/sevenz/LZMADecoder.numberOptionOrDefault:(Ljava/lang/Object;)I\n+  #162 = NameAndType        #163:#164     // numberOptionOrDefault:(Ljava/lang/Object;)I\n+  #163 = Utf8               numberOptionOrDefault\n+  #164 = Utf8               (Ljava/lang/Object;)I\n+  #165 = Integer            8388608\n+  #166 = Methodref          #1.#167       // org/apache/commons/compress/archivers/sevenz/LZMADecoder.numberOptionOrDefault:(Ljava/lang/Object;I)I\n+  #167 = NameAndType        #163:#168     // numberOptionOrDefault:(Ljava/lang/Object;I)I\n+  #168 = Utf8               (Ljava/lang/Object;I)I\n+  #169 = Utf8               SourceFile\n+  #170 = Utf8               LZMADecoder.java\n {\n   org.apache.commons.compress.archivers.sevenz.LZMADecoder();\n     descriptor: ()V\n     flags: (0x0000)\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n          1: iconst_2\n-         2: anewarray     #1                  // class java/lang/Class\n+         2: anewarray     #8                  // class java/lang/Class\n          5: dup\n          6: iconst_0\n-         7: ldc           #2                  // class org/tukaani/xz/LZMA2Options\n+         7: ldc           #10                 // class org/tukaani/xz/LZMA2Options\n          9: aastore\n         10: dup\n         11: iconst_1\n-        12: ldc           #3                  // class java/lang/Number\n+        12: ldc           #12                 // class java/lang/Number\n         14: aastore\n-        15: invokespecial #4                  // Method org/apache/commons/compress/archivers/sevenz/CoderBase.\"<init>\":([Ljava/lang/Class;)V\n+        15: invokespecial #14                 // Method org/apache/commons/compress/archivers/sevenz/CoderBase.\"<init>\":([Ljava/lang/Class;)V\n         18: return\n       LineNumberTable:\n         line 33: 0\n         line 34: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0  this   Lorg/apache/commons/compress/archivers/sevenz/LZMADecoder;\n \n   java.io.InputStream decode(java.lang.String, java.io.InputStream, long, org.apache.commons.compress.archivers.sevenz.Coder, byte[], int) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/io/InputStream;JLorg/apache/commons/compress/archivers/sevenz/Coder;[BI)Ljava/io/InputStream;\n     flags: (0x0000)\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=7, locals=12, args_size=7\n          0: aload         5\n-         2: getfield      #5                  // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n+         2: getfield      #26                 // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n          5: ifnonnull     18\n-         8: new           #6                  // class java/io/IOException\n+         8: new           #24                 // class java/io/IOException\n         11: dup\n-        12: ldc           #7                  // String Missing LZMA properties\n-        14: invokespecial #8                  // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #32                 // String Missing LZMA properties\n+        14: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: aload         5\n-        20: getfield      #5                  // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n+        20: getfield      #26                 // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n         23: arraylength\n         24: iconst_1\n         25: if_icmpge     38\n-        28: new           #6                  // class java/io/IOException\n+        28: new           #24                 // class java/io/IOException\n         31: dup\n-        32: ldc           #9                  // String LZMA properties too short\n-        34: invokespecial #8                  // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        32: ldc           #37                 // String LZMA properties too short\n+        34: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         37: athrow\n         38: aload         5\n-        40: getfield      #5                  // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n+        40: getfield      #26                 // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n         43: iconst_0\n         44: baload\n         45: istore        8\n         47: aload_0\n         48: aload         5\n-        50: invokespecial #10                 // Method getDictionarySize:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n+        50: invokespecial #39                 // Method getDictionarySize:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n         53: istore        9\n         55: iload         9\n-        57: ldc           #12                 // int 2147483632\n-        59: if_icmple     89\n-        62: new           #6                  // class java/io/IOException\n+        57: ldc           #43                 // int 2147483632\n+        59: if_icmple     86\n+        62: new           #24                 // class java/io/IOException\n         65: dup\n-        66: new           #13                 // class java/lang/StringBuilder\n+        66: new           #44                 // class java/lang/StringBuilder\n         69: dup\n-        70: invokespecial #14                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        73: ldc           #15                 // String Dictionary larger than 4GiB maximum size used in\n-        75: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        78: aload_1\n-        79: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        82: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        85: invokespecial #8                  // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-        88: athrow\n-        89: iload         9\n-        91: iload         8\n-        93: invokestatic  #18                 // Method org/tukaani/xz/LZMAInputStream.getMemoryUsage:(IB)I\n-        96: istore        10\n-        98: iload         10\n-       100: iload         7\n-       102: if_icmple     118\n-       105: new           #19                 // class org/apache/commons/compress/MemoryLimitException\n-       108: dup\n-       109: iload         10\n-       111: i2l\n-       112: iload         7\n-       114: invokespecial #20                 // Method org/apache/commons/compress/MemoryLimitException.\"<init>\":(JI)V\n-       117: athrow\n-       118: new           #11                 // class org/tukaani/xz/LZMAInputStream\n-       121: dup\n-       122: aload_2\n-       123: lload_3\n-       124: iload         8\n-       126: iload         9\n-       128: invokespecial #21                 // Method org/tukaani/xz/LZMAInputStream.\"<init>\":(Ljava/io/InputStream;JBI)V\n-       131: astore        11\n-       133: aload         11\n-       135: invokevirtual #22                 // Method org/tukaani/xz/LZMAInputStream.enableRelaxedEndCondition:()V\n-       138: aload         11\n-       140: areturn\n+        70: ldc           #46                 // String Dictionary larger than 4GiB maximum size used in\n+        72: invokespecial #48                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        75: aload_1\n+        76: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        79: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        82: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        85: athrow\n+        86: iload         9\n+        88: iload         8\n+        90: invokestatic  #57                 // Method org/tukaani/xz/LZMAInputStream.getMemoryUsage:(IB)I\n+        93: istore        10\n+        95: iload         10\n+        97: iload         7\n+        99: if_icmple     115\n+       102: new           #63                 // class org/apache/commons/compress/MemoryLimitException\n+       105: dup\n+       106: iload         10\n+       108: i2l\n+       109: iload         7\n+       111: invokespecial #65                 // Method org/apache/commons/compress/MemoryLimitException.\"<init>\":(JI)V\n+       114: athrow\n+       115: new           #58                 // class org/tukaani/xz/LZMAInputStream\n+       118: dup\n+       119: aload_2\n+       120: lload_3\n+       121: iload         8\n+       123: iload         9\n+       125: invokespecial #68                 // Method org/tukaani/xz/LZMAInputStream.\"<init>\":(Ljava/io/InputStream;JBI)V\n+       128: astore        11\n+       130: aload         11\n+       132: invokevirtual #71                 // Method org/tukaani/xz/LZMAInputStream.enableRelaxedEndCondition:()V\n+       135: aload         11\n+       137: areturn\n       LineNumberTable:\n         line 39: 0\n         line 40: 8\n         line 42: 18\n         line 43: 28\n         line 45: 38\n         line 46: 47\n         line 47: 55\n         line 48: 62\n-        line 50: 89\n-        line 51: 98\n-        line 52: 105\n-        line 54: 118\n-        line 55: 133\n-        line 56: 138\n+        line 50: 86\n+        line 51: 95\n+        line 52: 102\n+        line 54: 115\n+        line 55: 130\n+        line 56: 135\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0     141     0  this   Lorg/apache/commons/compress/archivers/sevenz/LZMADecoder;\n-            0     141     1 archiveName   Ljava/lang/String;\n-            0     141     2    in   Ljava/io/InputStream;\n-            0     141     3 uncompressedLength   J\n-            0     141     5 coder   Lorg/apache/commons/compress/archivers/sevenz/Coder;\n-            0     141     6 password   [B\n-            0     141     7 maxMemoryLimitInKb   I\n-           47      94     8 propsByte   B\n-           55      86     9 dictSize   I\n-           98      43    10 memoryUsageInKb   I\n-          133       8    11 lzmaIn   Lorg/tukaani/xz/LZMAInputStream;\n+            0     138     0  this   Lorg/apache/commons/compress/archivers/sevenz/LZMADecoder;\n+            0     138     1 archiveName   Ljava/lang/String;\n+            0     138     2    in   Ljava/io/InputStream;\n+            0     138     3 uncompressedLength   J\n+            0     138     5 coder   Lorg/apache/commons/compress/archivers/sevenz/Coder;\n+            0     138     6 password   [B\n+            0     138     7 maxMemoryLimitInKb   I\n+           47      91     8 propsByte   B\n+           55      83     9 dictSize   I\n+           95      43    10 memoryUsageInKb   I\n+          130       8    11 lzmaIn   Lorg/tukaani/xz/LZMAInputStream;\n       StackMapTable: number_of_entries = 4\n         frame_type = 18 /* same */\n         frame_type = 19 /* same */\n         frame_type = 253 /* append */\n-          offset_delta = 50\n+          offset_delta = 47\n           locals = [ int, int ]\n         frame_type = 252 /* append */\n           offset_delta = 28\n           locals = [ int ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   java.io.OutputStream encode(java.io.OutputStream, java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;Ljava/lang/Object;)Ljava/io/OutputStream;\n     flags: (0x0000)\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=7, locals=3, args_size=3\n-         0: new           #23                 // class org/apache/commons/compress/utils/FlushShieldFilterOutputStream\n+         0: new           #94                 // class org/apache/commons/compress/utils/FlushShieldFilterOutputStream\n          3: dup\n-         4: new           #24                 // class org/tukaani/xz/LZMAOutputStream\n+         4: new           #96                 // class org/tukaani/xz/LZMAOutputStream\n          7: dup\n          8: aload_1\n          9: aload_0\n         10: aload_2\n-        11: invokespecial #25                 // Method getOptions:(Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n+        11: invokespecial #98                 // Method getOptions:(Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n         14: iconst_0\n-        15: invokespecial #26                 // Method org/tukaani/xz/LZMAOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/tukaani/xz/LZMA2Options;Z)V\n-        18: invokespecial #27                 // Method org/apache/commons/compress/utils/FlushShieldFilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+        15: invokespecial #102                // Method org/tukaani/xz/LZMAOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/tukaani/xz/LZMA2Options;Z)V\n+        18: invokespecial #105                // Method org/apache/commons/compress/utils/FlushShieldFilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n         21: areturn\n       LineNumberTable:\n         line 64: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0  this   Lorg/apache/commons/compress/archivers/sevenz/LZMADecoder;\n             0      22     1   out   Ljava/io/OutputStream;\n             0      22     2  opts   Ljava/lang/Object;\n-    Exceptions:\n-      throws java.io.IOException\n \n   byte[] getOptionsAsProperties(java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;)[B\n     flags: (0x0000)\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=6, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #25                 // Method getOptions:(Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n+         2: invokespecial #98                 // Method getOptions:(Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n          5: astore_2\n          6: aload_2\n-         7: invokevirtual #28                 // Method org/tukaani/xz/LZMA2Options.getPb:()I\n+         7: invokevirtual #114                // Method org/tukaani/xz/LZMA2Options.getPb:()I\n         10: iconst_5\n         11: imul\n         12: aload_2\n-        13: invokevirtual #29                 // Method org/tukaani/xz/LZMA2Options.getLp:()I\n+        13: invokevirtual #118                // Method org/tukaani/xz/LZMA2Options.getLp:()I\n         16: iadd\n         17: bipush        9\n         19: imul\n         20: aload_2\n-        21: invokevirtual #30                 // Method org/tukaani/xz/LZMA2Options.getLc:()I\n+        21: invokevirtual #121                // Method org/tukaani/xz/LZMA2Options.getLc:()I\n         24: iadd\n         25: i2b\n         26: istore_3\n         27: aload_2\n-        28: invokevirtual #31                 // Method org/tukaani/xz/LZMA2Options.getDictSize:()I\n+        28: invokevirtual #124                // Method org/tukaani/xz/LZMA2Options.getDictSize:()I\n         31: istore        4\n         33: iconst_5\n         34: newarray       byte\n         36: astore        5\n         38: aload         5\n         40: iconst_0\n         41: iload_3\n         42: bastore\n         43: aload         5\n         45: iload         4\n         47: i2l\n         48: iconst_1\n         49: iconst_4\n-        50: invokestatic  #32                 // Method org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n+        50: invokestatic  #127                // Method org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n         53: aload         5\n         55: areturn\n       LineNumberTable:\n         line 69: 0\n         line 70: 6\n         line 71: 27\n         line 72: 33\n@@ -397,42 +398,42 @@\n         Start  Length  Slot  Name   Signature\n             0      56     0  this   Lorg/apache/commons/compress/archivers/sevenz/LZMADecoder;\n             0      56     1  opts   Ljava/lang/Object;\n             6      50     2 options   Lorg/tukaani/xz/LZMA2Options;\n            27      29     3 props   B\n            33      23     4 dictSize   I\n            38      18     5     o   [B\n-    Exceptions:\n-      throws java.io.IOException\n \n   java.lang.Object getOptionsFromCoder(org.apache.commons.compress.archivers.sevenz.Coder, java.io.InputStream) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/archivers/sevenz/Coder;Ljava/io/InputStream;)Ljava/lang/Object;\n     flags: (0x0000)\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=9, args_size=3\n          0: aload_1\n-         1: getfield      #5                  // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n+         1: getfield      #26                 // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n          4: ifnonnull     17\n-         7: new           #6                  // class java/io/IOException\n+         7: new           #24                 // class java/io/IOException\n         10: dup\n-        11: ldc           #7                  // String Missing LZMA properties\n-        13: invokespecial #8                  // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #32                 // String Missing LZMA properties\n+        13: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_1\n-        18: getfield      #5                  // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n+        18: getfield      #26                 // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n         21: arraylength\n         22: iconst_1\n         23: if_icmpge     36\n-        26: new           #6                  // class java/io/IOException\n+        26: new           #24                 // class java/io/IOException\n         29: dup\n-        30: ldc           #9                  // String LZMA properties too short\n-        32: invokespecial #8                  // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        30: ldc           #37                 // String LZMA properties too short\n+        32: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         35: athrow\n         36: aload_1\n-        37: getfield      #5                  // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n+        37: getfield      #26                 // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n         40: iconst_0\n         41: baload\n         42: istore_3\n         43: iload_3\n         44: sipush        255\n         47: iand\n         48: istore        4\n@@ -454,30 +455,30 @@\n         74: istore        6\n         76: iload         4\n         78: iload         6\n         80: bipush        9\n         82: imul\n         83: isub\n         84: istore        7\n-        86: new           #2                  // class org/tukaani/xz/LZMA2Options\n+        86: new           #10                 // class org/tukaani/xz/LZMA2Options\n         89: dup\n-        90: invokespecial #33                 // Method org/tukaani/xz/LZMA2Options.\"<init>\":()V\n+        90: invokespecial #139                // Method org/tukaani/xz/LZMA2Options.\"<init>\":()V\n         93: astore        8\n         95: aload         8\n         97: iload         5\n-        99: invokevirtual #34                 // Method org/tukaani/xz/LZMA2Options.setPb:(I)V\n+        99: invokevirtual #141                // Method org/tukaani/xz/LZMA2Options.setPb:(I)V\n        102: aload         8\n        104: iload         7\n        106: iload         6\n-       108: invokevirtual #35                 // Method org/tukaani/xz/LZMA2Options.setLcLp:(II)V\n+       108: invokevirtual #145                // Method org/tukaani/xz/LZMA2Options.setLcLp:(II)V\n        111: aload         8\n        113: aload_0\n        114: aload_1\n-       115: invokespecial #10                 // Method getDictionarySize:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n-       118: invokevirtual #36                 // Method org/tukaani/xz/LZMA2Options.setDictSize:(I)V\n+       115: invokespecial #39                 // Method getDictionarySize:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n+       118: invokevirtual #149                // Method org/tukaani/xz/LZMA2Options.setDictSize:(I)V\n        121: aload         8\n        123: areturn\n       LineNumberTable:\n         line 80: 0\n         line 81: 7\n         line 83: 17\n         line 84: 26\n@@ -502,58 +503,58 @@\n            57      67     5    pb   I\n            76      48     6    lp   I\n            86      38     7    lc   I\n            95      29     8  opts   Lorg/tukaani/xz/LZMA2Options;\n       StackMapTable: number_of_entries = 2\n         frame_type = 17 /* same */\n         frame_type = 18 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   private int getDictionarySize(org.apache.commons.compress.archivers.sevenz.Coder) throws java.lang.IllegalArgumentException;\n     descriptor: (Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.lang.IllegalArgumentException\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n-         1: getfield      #5                  // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n+         1: getfield      #26                 // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n          4: iconst_1\n          5: iconst_4\n-         6: invokestatic  #37                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n+         6: invokestatic  #157                // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n          9: l2i\n         10: ireturn\n       LineNumberTable:\n         line 100: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/archivers/sevenz/LZMADecoder;\n             0      11     1 coder   Lorg/apache/commons/compress/archivers/sevenz/Coder;\n-    Exceptions:\n-      throws java.lang.IllegalArgumentException\n \n   private org.tukaani.xz.LZMA2Options getOptions(java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_1\n-         1: instanceof    #2                  // class org/tukaani/xz/LZMA2Options\n+         1: instanceof    #10                 // class org/tukaani/xz/LZMA2Options\n          4: ifeq          12\n          7: aload_1\n-         8: checkcast     #2                  // class org/tukaani/xz/LZMA2Options\n+         8: checkcast     #10                 // class org/tukaani/xz/LZMA2Options\n         11: areturn\n-        12: new           #2                  // class org/tukaani/xz/LZMA2Options\n+        12: new           #10                 // class org/tukaani/xz/LZMA2Options\n         15: dup\n-        16: invokespecial #33                 // Method org/tukaani/xz/LZMA2Options.\"<init>\":()V\n+        16: invokespecial #139                // Method org/tukaani/xz/LZMA2Options.\"<init>\":()V\n         19: astore_2\n         20: aload_2\n         21: aload_0\n         22: aload_1\n-        23: invokespecial #38                 // Method numberOptionOrDefault:(Ljava/lang/Object;)I\n-        26: invokevirtual #36                 // Method org/tukaani/xz/LZMA2Options.setDictSize:(I)V\n+        23: invokespecial #161                // Method numberOptionOrDefault:(Ljava/lang/Object;)I\n+        26: invokevirtual #149                // Method org/tukaani/xz/LZMA2Options.setDictSize:(I)V\n         29: aload_2\n         30: areturn\n       LineNumberTable:\n         line 104: 0\n         line 105: 7\n         line 107: 12\n         line 108: 20\n@@ -561,25 +562,23 @@\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      31     0  this   Lorg/apache/commons/compress/archivers/sevenz/LZMADecoder;\n             0      31     1  opts   Ljava/lang/Object;\n            20      11     2 options   Lorg/tukaani/xz/LZMA2Options;\n       StackMapTable: number_of_entries = 1\n         frame_type = 12 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   private int numberOptionOrDefault(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: ldc           #39                 // int 8388608\n-         3: invokestatic  #40                 // Method numberOptionOrDefault:(Ljava/lang/Object;I)I\n+         1: ldc           #165                // int 8388608\n+         3: invokestatic  #166                // Method numberOptionOrDefault:(Ljava/lang/Object;I)I\n          6: ireturn\n       LineNumberTable:\n         line 113: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/compress/archivers/sevenz/LZMADecoder;\n             0       7     1  opts   Ljava/lang/Object;\n"}]}
