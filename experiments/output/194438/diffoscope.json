{"diffoscope-json-version": 1, "source1": "first/LocaleUtils.class", "source2": "second/LocaleUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,355 +1,355 @@\n-  SHA-256 checksum eb6b7ff01e19fbb4c97603e18a8124e85ad493b028d4b543a35ffcf3efe65195\n+  SHA-256 checksum 9219a0a47eca0ddc8a13ed4b98267afba98ee7a306ea3c21169191c153b6a347\n   Compiled from \"LocaleUtils.java\"\n public class org.apache.commons.lang3.LocaleUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #58                         // org/apache/commons/lang3/LocaleUtils\n-  super_class: #59                        // java/lang/Object\n+  this_class: #17                         // org/apache/commons/lang3/LocaleUtils\n+  super_class: #186                       // java/lang/Object\n   interfaces: 0, fields: 2, methods: 15, attributes: 2\n Constant pool:\n-    #1 = Methodref          #60.#132      // org/apache/commons/lang3/LocaleUtils$SyncAvoid.access$000:()Ljava/util/List;\n-    #2 = Methodref          #60.#133      // org/apache/commons/lang3/LocaleUtils$SyncAvoid.access$100:()Ljava/util/Set;\n-    #3 = Methodref          #134.#135     // java/util/Collections.emptyList:()Ljava/util/List;\n-    #4 = Fieldref           #58.#136      // org/apache/commons/lang3/LocaleUtils.cCountriesByLanguage:Ljava/util/concurrent/ConcurrentMap;\n-    #5 = InterfaceMethodref #137.#138     // java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-    #6 = Class              #139          // java/util/List\n-    #7 = Class              #140          // java/util/ArrayList\n-    #8 = Methodref          #7.#141       // java/util/ArrayList.\"<init>\":()V\n-    #9 = Methodref          #58.#142      // org/apache/commons/lang3/LocaleUtils.availableLocaleList:()Ljava/util/List;\n-   #10 = InterfaceMethodref #6.#143       // java/util/List.iterator:()Ljava/util/Iterator;\n-   #11 = InterfaceMethodref #89.#144      // java/util/Iterator.hasNext:()Z\n-   #12 = InterfaceMethodref #89.#145      // java/util/Iterator.next:()Ljava/lang/Object;\n-   #13 = Class              #146          // java/util/Locale\n-   #14 = Methodref          #13.#147      // java/util/Locale.getLanguage:()Ljava/lang/String;\n-   #15 = Methodref          #116.#148     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #16 = Methodref          #13.#149      // java/util/Locale.getCountry:()Ljava/lang/String;\n-   #17 = Methodref          #116.#150     // java/lang/String.isEmpty:()Z\n-   #18 = Methodref          #13.#151      // java/util/Locale.getVariant:()Ljava/lang/String;\n-   #19 = InterfaceMethodref #6.#152       // java/util/List.add:(Ljava/lang/Object;)Z\n-   #20 = Methodref          #134.#153     // java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n-   #21 = InterfaceMethodref #137.#154     // java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #22 = InterfaceMethodref #6.#155       // java/util/List.contains:(Ljava/lang/Object;)Z\n-   #23 = Methodref          #31.#156      // org/apache/commons/lang3/StringUtils.isAllUpperCase:(Ljava/lang/CharSequence;)Z\n-   #24 = Methodref          #116.#157     // java/lang/String.length:()I\n-   #25 = Methodref          #31.#158      // org/apache/commons/lang3/StringUtils.isAllLowerCase:(Ljava/lang/CharSequence;)Z\n-   #26 = Methodref          #31.#159      // org/apache/commons/lang3/StringUtils.isNumeric:(Ljava/lang/CharSequence;)Z\n-   #27 = Fieldref           #58.#160      // org/apache/commons/lang3/LocaleUtils.cLanguagesByCountry:Ljava/util/concurrent/ConcurrentMap;\n-   #28 = Methodref          #58.#161      // org/apache/commons/lang3/LocaleUtils.localeLookupList:(Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List;\n-   #29 = Methodref          #7.#162       // java/util/ArrayList.\"<init>\":(I)V\n-   #30 = Methodref          #13.#163      // java/util/Locale.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n-   #31 = Class              #164          // org/apache/commons/lang3/StringUtils\n-   #32 = String             #165          //\n-   #33 = Methodref          #58.#166      // org/apache/commons/lang3/LocaleUtils.isISO639LanguageCode:(Ljava/lang/String;)Z\n-   #34 = Methodref          #13.#167      // java/util/Locale.\"<init>\":(Ljava/lang/String;)V\n-   #35 = String             #168          // _\n-   #36 = Methodref          #116.#169     // java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;\n-   #37 = Methodref          #58.#170      // org/apache/commons/lang3/LocaleUtils.isISO3166CountryCode:(Ljava/lang/String;)Z\n-   #38 = Methodref          #58.#171      // org/apache/commons/lang3/LocaleUtils.isNumericAreaCode:(Ljava/lang/String;)Z\n-   #39 = Methodref          #13.#172      // java/util/Locale.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-   #40 = Class              #173          // java/lang/IllegalArgumentException\n-   #41 = Class              #174          // java/lang/StringBuilder\n-   #42 = Methodref          #41.#141      // java/lang/StringBuilder.\"<init>\":()V\n-   #43 = String             #175          // Invalid locale format:\n-   #44 = Methodref          #41.#176      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #45 = Methodref          #41.#177      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #46 = Methodref          #40.#167      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #47 = Methodref          #13.#178      // java/util/Locale.getDefault:()Ljava/util/Locale;\n-   #48 = String             #179          // #\n-   #49 = Methodref          #116.#180     // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n-   #50 = Methodref          #116.#181     // java/lang/String.charAt:(I)C\n-   #51 = Methodref          #182.#183     // java/lang/Character.isUpperCase:(C)Z\n-   #52 = Methodref          #116.#184     // java/lang/String.substring:(II)Ljava/lang/String;\n-   #53 = Methodref          #116.#185     // java/lang/String.substring:(I)Ljava/lang/String;\n-   #54 = Methodref          #58.#186      // org/apache/commons/lang3/LocaleUtils.parseLocale:(Ljava/lang/String;)Ljava/util/Locale;\n-   #55 = Methodref          #59.#141      // java/lang/Object.\"<init>\":()V\n-   #56 = Class              #187          // java/util/concurrent/ConcurrentHashMap\n-   #57 = Methodref          #56.#141      // java/util/concurrent/ConcurrentHashMap.\"<init>\":()V\n-   #58 = Class              #188          // org/apache/commons/lang3/LocaleUtils\n-   #59 = Class              #189          // java/lang/Object\n-   #60 = Class              #190          // org/apache/commons/lang3/LocaleUtils$SyncAvoid\n-   #61 = Utf8               SyncAvoid\n-   #62 = Utf8               InnerClasses\n-   #63 = Utf8               cLanguagesByCountry\n-   #64 = Utf8               Ljava/util/concurrent/ConcurrentMap;\n-   #65 = Utf8               Signature\n-   #66 = Utf8               Ljava/util/concurrent/ConcurrentMap<Ljava/lang/String;Ljava/util/List<Ljava/util/Locale;>;>;\n-   #67 = Utf8               cCountriesByLanguage\n-   #68 = Utf8               availableLocaleList\n-   #69 = Utf8               ()Ljava/util/List;\n-   #70 = Utf8               Code\n-   #71 = Utf8               LineNumberTable\n-   #72 = Utf8               ()Ljava/util/List<Ljava/util/Locale;>;\n-   #73 = Utf8               availableLocaleSet\n-   #74 = Utf8               ()Ljava/util/Set;\n-   #75 = Utf8               ()Ljava/util/Set<Ljava/util/Locale;>;\n-   #76 = Utf8               countriesByLanguage\n-   #77 = Utf8               (Ljava/lang/String;)Ljava/util/List;\n-   #78 = Utf8               LocalVariableTable\n-   #79 = Utf8               locale\n-   #80 = Utf8               Ljava/util/Locale;\n-   #81 = Utf8               locales\n-   #82 = Utf8               Ljava/util/List;\n-   #83 = Utf8               languageCode\n-   #84 = Utf8               Ljava/lang/String;\n-   #85 = Utf8               countries\n-   #86 = Utf8               LocalVariableTypeTable\n-   #87 = Utf8               Ljava/util/List<Ljava/util/Locale;>;\n-   #88 = Utf8               StackMapTable\n-   #89 = Class              #191          // java/util/Iterator\n-   #90 = Utf8               (Ljava/lang/String;)Ljava/util/List<Ljava/util/Locale;>;\n-   #91 = Utf8               isAvailableLocale\n-   #92 = Utf8               (Ljava/util/Locale;)Z\n-   #93 = Utf8               isISO3166CountryCode\n-   #94 = Utf8               (Ljava/lang/String;)Z\n-   #95 = Utf8               str\n-   #96 = Utf8               isISO639LanguageCode\n-   #97 = Utf8               isNumericAreaCode\n-   #98 = Utf8               languagesByCountry\n-   #99 = Utf8               countryCode\n-  #100 = Utf8               langs\n-  #101 = Utf8               localeLookupList\n-  #102 = Utf8               (Ljava/util/Locale;)Ljava/util/List;\n-  #103 = Utf8               (Ljava/util/Locale;)Ljava/util/List<Ljava/util/Locale;>;\n-  #104 = Utf8               (Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List;\n-  #105 = Utf8               defaultLocale\n-  #106 = Utf8               list\n-  #107 = Utf8               (Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List<Ljava/util/Locale;>;\n-  #108 = Utf8               parseLocale\n-  #109 = Utf8               (Ljava/lang/String;)Ljava/util/Locale;\n-  #110 = Utf8               country\n-  #111 = Utf8               variant\n-  #112 = Utf8               segments\n-  #113 = Utf8               [Ljava/lang/String;\n-  #114 = Utf8               language\n-  #115 = Class              #113          // \"[Ljava/lang/String;\"\n-  #116 = Class              #192          // java/lang/String\n-  #117 = Utf8               toLocale\n-  #118 = Utf8               (Ljava/util/Locale;)Ljava/util/Locale;\n-  #119 = Utf8               ch1\n-  #120 = Utf8               C\n-  #121 = Utf8               ch2\n-  #122 = Utf8               len\n-  #123 = Utf8               I\n-  #124 = Utf8               ch0\n-  #125 = Utf8               <init>\n-  #126 = Utf8               ()V\n-  #127 = Utf8               this\n-  #128 = Utf8               Lorg/apache/commons/lang3/LocaleUtils;\n-  #129 = Utf8               <clinit>\n-  #130 = Utf8               SourceFile\n-  #131 = Utf8               LocaleUtils.java\n-  #132 = NameAndType        #193:#69      // access$000:()Ljava/util/List;\n-  #133 = NameAndType        #194:#74      // access$100:()Ljava/util/Set;\n-  #134 = Class              #195          // java/util/Collections\n-  #135 = NameAndType        #196:#69      // emptyList:()Ljava/util/List;\n-  #136 = NameAndType        #67:#64       // cCountriesByLanguage:Ljava/util/concurrent/ConcurrentMap;\n-  #137 = Class              #197          // java/util/concurrent/ConcurrentMap\n-  #138 = NameAndType        #198:#199     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #139 = Utf8               java/util/List\n-  #140 = Utf8               java/util/ArrayList\n-  #141 = NameAndType        #125:#126     // \"<init>\":()V\n-  #142 = NameAndType        #68:#69       // availableLocaleList:()Ljava/util/List;\n-  #143 = NameAndType        #200:#201     // iterator:()Ljava/util/Iterator;\n-  #144 = NameAndType        #202:#203     // hasNext:()Z\n-  #145 = NameAndType        #204:#205     // next:()Ljava/lang/Object;\n-  #146 = Utf8               java/util/Locale\n-  #147 = NameAndType        #206:#207     // getLanguage:()Ljava/lang/String;\n-  #148 = NameAndType        #208:#209     // equals:(Ljava/lang/Object;)Z\n-  #149 = NameAndType        #210:#207     // getCountry:()Ljava/lang/String;\n-  #150 = NameAndType        #211:#203     // isEmpty:()Z\n-  #151 = NameAndType        #212:#207     // getVariant:()Ljava/lang/String;\n-  #152 = NameAndType        #213:#209     // add:(Ljava/lang/Object;)Z\n-  #153 = NameAndType        #214:#215     // unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n-  #154 = NameAndType        #216:#217     // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #155 = NameAndType        #218:#209     // contains:(Ljava/lang/Object;)Z\n-  #156 = NameAndType        #219:#220     // isAllUpperCase:(Ljava/lang/CharSequence;)Z\n-  #157 = NameAndType        #221:#222     // length:()I\n-  #158 = NameAndType        #223:#220     // isAllLowerCase:(Ljava/lang/CharSequence;)Z\n-  #159 = NameAndType        #224:#220     // isNumeric:(Ljava/lang/CharSequence;)Z\n-  #160 = NameAndType        #63:#64       // cLanguagesByCountry:Ljava/util/concurrent/ConcurrentMap;\n-  #161 = NameAndType        #101:#104     // localeLookupList:(Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List;\n-  #162 = NameAndType        #125:#225     // \"<init>\":(I)V\n-  #163 = NameAndType        #125:#226     // \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n-  #164 = Utf8               org/apache/commons/lang3/StringUtils\n-  #165 = Utf8\n-  #166 = NameAndType        #96:#94       // isISO639LanguageCode:(Ljava/lang/String;)Z\n-  #167 = NameAndType        #125:#227     // \"<init>\":(Ljava/lang/String;)V\n-  #168 = Utf8               _\n-  #169 = NameAndType        #228:#229     // split:(Ljava/lang/String;I)[Ljava/lang/String;\n-  #170 = NameAndType        #93:#94       // isISO3166CountryCode:(Ljava/lang/String;)Z\n-  #171 = NameAndType        #97:#94       // isNumericAreaCode:(Ljava/lang/String;)Z\n-  #172 = NameAndType        #125:#230     // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #173 = Utf8               java/lang/IllegalArgumentException\n-  #174 = Utf8               java/lang/StringBuilder\n-  #175 = Utf8               Invalid locale format:\n-  #176 = NameAndType        #231:#232     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #177 = NameAndType        #233:#207     // toString:()Ljava/lang/String;\n-  #178 = NameAndType        #234:#235     // getDefault:()Ljava/util/Locale;\n-  #179 = Utf8               #\n-  #180 = NameAndType        #218:#220     // contains:(Ljava/lang/CharSequence;)Z\n-  #181 = NameAndType        #236:#237     // charAt:(I)C\n-  #182 = Class              #238          // java/lang/Character\n-  #183 = NameAndType        #239:#240     // isUpperCase:(C)Z\n-  #184 = NameAndType        #241:#242     // substring:(II)Ljava/lang/String;\n-  #185 = NameAndType        #241:#243     // substring:(I)Ljava/lang/String;\n-  #186 = NameAndType        #108:#109     // parseLocale:(Ljava/lang/String;)Ljava/util/Locale;\n-  #187 = Utf8               java/util/concurrent/ConcurrentHashMap\n-  #188 = Utf8               org/apache/commons/lang3/LocaleUtils\n-  #189 = Utf8               java/lang/Object\n-  #190 = Utf8               org/apache/commons/lang3/LocaleUtils$SyncAvoid\n-  #191 = Utf8               java/util/Iterator\n-  #192 = Utf8               java/lang/String\n-  #193 = Utf8               access$000\n-  #194 = Utf8               access$100\n-  #195 = Utf8               java/util/Collections\n-  #196 = Utf8               emptyList\n-  #197 = Utf8               java/util/concurrent/ConcurrentMap\n-  #198 = Utf8               get\n-  #199 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #200 = Utf8               iterator\n-  #201 = Utf8               ()Ljava/util/Iterator;\n-  #202 = Utf8               hasNext\n-  #203 = Utf8               ()Z\n-  #204 = Utf8               next\n-  #205 = Utf8               ()Ljava/lang/Object;\n-  #206 = Utf8               getLanguage\n-  #207 = Utf8               ()Ljava/lang/String;\n-  #208 = Utf8               equals\n-  #209 = Utf8               (Ljava/lang/Object;)Z\n-  #210 = Utf8               getCountry\n-  #211 = Utf8               isEmpty\n-  #212 = Utf8               getVariant\n-  #213 = Utf8               add\n-  #214 = Utf8               unmodifiableList\n-  #215 = Utf8               (Ljava/util/List;)Ljava/util/List;\n-  #216 = Utf8               putIfAbsent\n-  #217 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #218 = Utf8               contains\n-  #219 = Utf8               isAllUpperCase\n-  #220 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #221 = Utf8               length\n-  #222 = Utf8               ()I\n-  #223 = Utf8               isAllLowerCase\n-  #224 = Utf8               isNumeric\n-  #225 = Utf8               (I)V\n-  #226 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n-  #227 = Utf8               (Ljava/lang/String;)V\n-  #228 = Utf8               split\n-  #229 = Utf8               (Ljava/lang/String;I)[Ljava/lang/String;\n-  #230 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #231 = Utf8               append\n-  #232 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #233 = Utf8               toString\n-  #234 = Utf8               getDefault\n-  #235 = Utf8               ()Ljava/util/Locale;\n-  #236 = Utf8               charAt\n-  #237 = Utf8               (I)C\n-  #238 = Utf8               java/lang/Character\n-  #239 = Utf8               isUpperCase\n-  #240 = Utf8               (C)Z\n-  #241 = Utf8               substring\n-  #242 = Utf8               (II)Ljava/lang/String;\n-  #243 = Utf8               (I)Ljava/lang/String;\n+    #1 = Methodref          #2.#3         // org/apache/commons/lang3/LocaleUtils$SyncAvoid.access$000:()Ljava/util/List;\n+    #2 = Class              #4            // org/apache/commons/lang3/LocaleUtils$SyncAvoid\n+    #3 = NameAndType        #5:#6         // access$000:()Ljava/util/List;\n+    #4 = Utf8               org/apache/commons/lang3/LocaleUtils$SyncAvoid\n+    #5 = Utf8               access$000\n+    #6 = Utf8               ()Ljava/util/List;\n+    #7 = Methodref          #2.#8         // org/apache/commons/lang3/LocaleUtils$SyncAvoid.access$100:()Ljava/util/Set;\n+    #8 = NameAndType        #9:#10        // access$100:()Ljava/util/Set;\n+    #9 = Utf8               access$100\n+   #10 = Utf8               ()Ljava/util/Set;\n+   #11 = Methodref          #12.#13       // java/util/Collections.emptyList:()Ljava/util/List;\n+   #12 = Class              #14           // java/util/Collections\n+   #13 = NameAndType        #15:#6        // emptyList:()Ljava/util/List;\n+   #14 = Utf8               java/util/Collections\n+   #15 = Utf8               emptyList\n+   #16 = Fieldref           #17.#18       // org/apache/commons/lang3/LocaleUtils.cCountriesByLanguage:Ljava/util/concurrent/ConcurrentMap;\n+   #17 = Class              #19           // org/apache/commons/lang3/LocaleUtils\n+   #18 = NameAndType        #20:#21       // cCountriesByLanguage:Ljava/util/concurrent/ConcurrentMap;\n+   #19 = Utf8               org/apache/commons/lang3/LocaleUtils\n+   #20 = Utf8               cCountriesByLanguage\n+   #21 = Utf8               Ljava/util/concurrent/ConcurrentMap;\n+   #22 = InterfaceMethodref #23.#24       // java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #23 = Class              #25           // java/util/concurrent/ConcurrentMap\n+   #24 = NameAndType        #26:#27       // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #25 = Utf8               java/util/concurrent/ConcurrentMap\n+   #26 = Utf8               get\n+   #27 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #28 = Class              #29           // java/util/List\n+   #29 = Utf8               java/util/List\n+   #30 = Class              #31           // java/util/ArrayList\n+   #31 = Utf8               java/util/ArrayList\n+   #32 = Methodref          #30.#33       // java/util/ArrayList.\"<init>\":()V\n+   #33 = NameAndType        #34:#35       // \"<init>\":()V\n+   #34 = Utf8               <init>\n+   #35 = Utf8               ()V\n+   #36 = Methodref          #17.#37       // org/apache/commons/lang3/LocaleUtils.availableLocaleList:()Ljava/util/List;\n+   #37 = NameAndType        #38:#6        // availableLocaleList:()Ljava/util/List;\n+   #38 = Utf8               availableLocaleList\n+   #39 = InterfaceMethodref #28.#40       // java/util/List.iterator:()Ljava/util/Iterator;\n+   #40 = NameAndType        #41:#42       // iterator:()Ljava/util/Iterator;\n+   #41 = Utf8               iterator\n+   #42 = Utf8               ()Ljava/util/Iterator;\n+   #43 = InterfaceMethodref #44.#45       // java/util/Iterator.hasNext:()Z\n+   #44 = Class              #46           // java/util/Iterator\n+   #45 = NameAndType        #47:#48       // hasNext:()Z\n+   #46 = Utf8               java/util/Iterator\n+   #47 = Utf8               hasNext\n+   #48 = Utf8               ()Z\n+   #49 = InterfaceMethodref #44.#50       // java/util/Iterator.next:()Ljava/lang/Object;\n+   #50 = NameAndType        #51:#52       // next:()Ljava/lang/Object;\n+   #51 = Utf8               next\n+   #52 = Utf8               ()Ljava/lang/Object;\n+   #53 = Class              #54           // java/util/Locale\n+   #54 = Utf8               java/util/Locale\n+   #55 = Methodref          #53.#56       // java/util/Locale.getLanguage:()Ljava/lang/String;\n+   #56 = NameAndType        #57:#58       // getLanguage:()Ljava/lang/String;\n+   #57 = Utf8               getLanguage\n+   #58 = Utf8               ()Ljava/lang/String;\n+   #59 = Methodref          #60.#61       // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #60 = Class              #62           // java/lang/String\n+   #61 = NameAndType        #63:#64       // equals:(Ljava/lang/Object;)Z\n+   #62 = Utf8               java/lang/String\n+   #63 = Utf8               equals\n+   #64 = Utf8               (Ljava/lang/Object;)Z\n+   #65 = Methodref          #53.#66       // java/util/Locale.getCountry:()Ljava/lang/String;\n+   #66 = NameAndType        #67:#58       // getCountry:()Ljava/lang/String;\n+   #67 = Utf8               getCountry\n+   #68 = Methodref          #60.#69       // java/lang/String.isEmpty:()Z\n+   #69 = NameAndType        #70:#48       // isEmpty:()Z\n+   #70 = Utf8               isEmpty\n+   #71 = Methodref          #53.#72       // java/util/Locale.getVariant:()Ljava/lang/String;\n+   #72 = NameAndType        #73:#58       // getVariant:()Ljava/lang/String;\n+   #73 = Utf8               getVariant\n+   #74 = InterfaceMethodref #28.#75       // java/util/List.add:(Ljava/lang/Object;)Z\n+   #75 = NameAndType        #76:#64       // add:(Ljava/lang/Object;)Z\n+   #76 = Utf8               add\n+   #77 = Methodref          #12.#78       // java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n+   #78 = NameAndType        #79:#80       // unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n+   #79 = Utf8               unmodifiableList\n+   #80 = Utf8               (Ljava/util/List;)Ljava/util/List;\n+   #81 = InterfaceMethodref #23.#82       // java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #82 = NameAndType        #83:#84       // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #83 = Utf8               putIfAbsent\n+   #84 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #85 = InterfaceMethodref #28.#86       // java/util/List.contains:(Ljava/lang/Object;)Z\n+   #86 = NameAndType        #87:#64       // contains:(Ljava/lang/Object;)Z\n+   #87 = Utf8               contains\n+   #88 = Methodref          #89.#90       // org/apache/commons/lang3/StringUtils.isAllUpperCase:(Ljava/lang/CharSequence;)Z\n+   #89 = Class              #91           // org/apache/commons/lang3/StringUtils\n+   #90 = NameAndType        #92:#93       // isAllUpperCase:(Ljava/lang/CharSequence;)Z\n+   #91 = Utf8               org/apache/commons/lang3/StringUtils\n+   #92 = Utf8               isAllUpperCase\n+   #93 = Utf8               (Ljava/lang/CharSequence;)Z\n+   #94 = Methodref          #60.#95       // java/lang/String.length:()I\n+   #95 = NameAndType        #96:#97       // length:()I\n+   #96 = Utf8               length\n+   #97 = Utf8               ()I\n+   #98 = Methodref          #89.#99       // org/apache/commons/lang3/StringUtils.isAllLowerCase:(Ljava/lang/CharSequence;)Z\n+   #99 = NameAndType        #100:#93      // isAllLowerCase:(Ljava/lang/CharSequence;)Z\n+  #100 = Utf8               isAllLowerCase\n+  #101 = Methodref          #89.#102      // org/apache/commons/lang3/StringUtils.isNumeric:(Ljava/lang/CharSequence;)Z\n+  #102 = NameAndType        #103:#93      // isNumeric:(Ljava/lang/CharSequence;)Z\n+  #103 = Utf8               isNumeric\n+  #104 = Fieldref           #17.#105      // org/apache/commons/lang3/LocaleUtils.cLanguagesByCountry:Ljava/util/concurrent/ConcurrentMap;\n+  #105 = NameAndType        #106:#21      // cLanguagesByCountry:Ljava/util/concurrent/ConcurrentMap;\n+  #106 = Utf8               cLanguagesByCountry\n+  #107 = Methodref          #17.#108      // org/apache/commons/lang3/LocaleUtils.localeLookupList:(Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List;\n+  #108 = NameAndType        #109:#110     // localeLookupList:(Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List;\n+  #109 = Utf8               localeLookupList\n+  #110 = Utf8               (Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List;\n+  #111 = Methodref          #30.#112      // java/util/ArrayList.\"<init>\":(I)V\n+  #112 = NameAndType        #34:#113      // \"<init>\":(I)V\n+  #113 = Utf8               (I)V\n+  #114 = Methodref          #53.#115      // java/util/Locale.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+  #115 = NameAndType        #34:#116      // \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+  #116 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n+  #117 = String             #118          //\n+  #118 = Utf8\n+  #119 = Methodref          #17.#120      // org/apache/commons/lang3/LocaleUtils.isISO639LanguageCode:(Ljava/lang/String;)Z\n+  #120 = NameAndType        #121:#122     // isISO639LanguageCode:(Ljava/lang/String;)Z\n+  #121 = Utf8               isISO639LanguageCode\n+  #122 = Utf8               (Ljava/lang/String;)Z\n+  #123 = Methodref          #53.#124      // java/util/Locale.\"<init>\":(Ljava/lang/String;)V\n+  #124 = NameAndType        #34:#125      // \"<init>\":(Ljava/lang/String;)V\n+  #125 = Utf8               (Ljava/lang/String;)V\n+  #126 = String             #127          // _\n+  #127 = Utf8               _\n+  #128 = Methodref          #60.#129      // java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;\n+  #129 = NameAndType        #130:#131     // split:(Ljava/lang/String;I)[Ljava/lang/String;\n+  #130 = Utf8               split\n+  #131 = Utf8               (Ljava/lang/String;I)[Ljava/lang/String;\n+  #132 = Methodref          #17.#133      // org/apache/commons/lang3/LocaleUtils.isISO3166CountryCode:(Ljava/lang/String;)Z\n+  #133 = NameAndType        #134:#122     // isISO3166CountryCode:(Ljava/lang/String;)Z\n+  #134 = Utf8               isISO3166CountryCode\n+  #135 = Methodref          #17.#136      // org/apache/commons/lang3/LocaleUtils.isNumericAreaCode:(Ljava/lang/String;)Z\n+  #136 = NameAndType        #137:#122     // isNumericAreaCode:(Ljava/lang/String;)Z\n+  #137 = Utf8               isNumericAreaCode\n+  #138 = Methodref          #53.#139      // java/util/Locale.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #139 = NameAndType        #34:#140      // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #140 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #141 = Class              #142          // java/lang/IllegalArgumentException\n+  #142 = Utf8               java/lang/IllegalArgumentException\n+  #143 = Class              #144          // java/lang/StringBuilder\n+  #144 = Utf8               java/lang/StringBuilder\n+  #145 = Methodref          #143.#33      // java/lang/StringBuilder.\"<init>\":()V\n+  #146 = String             #147          // Invalid locale format:\n+  #147 = Utf8               Invalid locale format:\n+  #148 = Methodref          #143.#149     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #149 = NameAndType        #150:#151     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #150 = Utf8               append\n+  #151 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #152 = Methodref          #143.#153     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #153 = NameAndType        #154:#58      // toString:()Ljava/lang/String;\n+  #154 = Utf8               toString\n+  #155 = Methodref          #141.#124     // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #156 = Methodref          #53.#157      // java/util/Locale.getDefault:()Ljava/util/Locale;\n+  #157 = NameAndType        #158:#159     // getDefault:()Ljava/util/Locale;\n+  #158 = Utf8               getDefault\n+  #159 = Utf8               ()Ljava/util/Locale;\n+  #160 = String             #161          // #\n+  #161 = Utf8               #\n+  #162 = Methodref          #60.#163      // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+  #163 = NameAndType        #87:#93       // contains:(Ljava/lang/CharSequence;)Z\n+  #164 = Methodref          #60.#165      // java/lang/String.charAt:(I)C\n+  #165 = NameAndType        #166:#167     // charAt:(I)C\n+  #166 = Utf8               charAt\n+  #167 = Utf8               (I)C\n+  #168 = Methodref          #169.#170     // java/lang/Character.isUpperCase:(C)Z\n+  #169 = Class              #171          // java/lang/Character\n+  #170 = NameAndType        #172:#173     // isUpperCase:(C)Z\n+  #171 = Utf8               java/lang/Character\n+  #172 = Utf8               isUpperCase\n+  #173 = Utf8               (C)Z\n+  #174 = Methodref          #60.#175      // java/lang/String.substring:(II)Ljava/lang/String;\n+  #175 = NameAndType        #176:#177     // substring:(II)Ljava/lang/String;\n+  #176 = Utf8               substring\n+  #177 = Utf8               (II)Ljava/lang/String;\n+  #178 = Methodref          #60.#179      // java/lang/String.substring:(I)Ljava/lang/String;\n+  #179 = NameAndType        #176:#180     // substring:(I)Ljava/lang/String;\n+  #180 = Utf8               (I)Ljava/lang/String;\n+  #181 = Methodref          #17.#182      // org/apache/commons/lang3/LocaleUtils.parseLocale:(Ljava/lang/String;)Ljava/util/Locale;\n+  #182 = NameAndType        #183:#184     // parseLocale:(Ljava/lang/String;)Ljava/util/Locale;\n+  #183 = Utf8               parseLocale\n+  #184 = Utf8               (Ljava/lang/String;)Ljava/util/Locale;\n+  #185 = Methodref          #186.#33      // java/lang/Object.\"<init>\":()V\n+  #186 = Class              #187          // java/lang/Object\n+  #187 = Utf8               java/lang/Object\n+  #188 = Class              #189          // java/util/concurrent/ConcurrentHashMap\n+  #189 = Utf8               java/util/concurrent/ConcurrentHashMap\n+  #190 = Methodref          #188.#33      // java/util/concurrent/ConcurrentHashMap.\"<init>\":()V\n+  #191 = Utf8               Signature\n+  #192 = Utf8               Ljava/util/concurrent/ConcurrentMap<Ljava/lang/String;Ljava/util/List<Ljava/util/Locale;>;>;\n+  #193 = Utf8               Code\n+  #194 = Utf8               LineNumberTable\n+  #195 = Utf8               ()Ljava/util/List<Ljava/util/Locale;>;\n+  #196 = Utf8               availableLocaleSet\n+  #197 = Utf8               ()Ljava/util/Set<Ljava/util/Locale;>;\n+  #198 = Utf8               countriesByLanguage\n+  #199 = Utf8               (Ljava/lang/String;)Ljava/util/List;\n+  #200 = Utf8               LocalVariableTable\n+  #201 = Utf8               locale\n+  #202 = Utf8               Ljava/util/Locale;\n+  #203 = Utf8               locales\n+  #204 = Utf8               Ljava/util/List;\n+  #205 = Utf8               languageCode\n+  #206 = Utf8               Ljava/lang/String;\n+  #207 = Utf8               countries\n+  #208 = Utf8               LocalVariableTypeTable\n+  #209 = Utf8               Ljava/util/List<Ljava/util/Locale;>;\n+  #210 = Utf8               StackMapTable\n+  #211 = Utf8               (Ljava/lang/String;)Ljava/util/List<Ljava/util/Locale;>;\n+  #212 = Utf8               isAvailableLocale\n+  #213 = Utf8               (Ljava/util/Locale;)Z\n+  #214 = Utf8               str\n+  #215 = Utf8               languagesByCountry\n+  #216 = Utf8               countryCode\n+  #217 = Utf8               langs\n+  #218 = Utf8               (Ljava/util/Locale;)Ljava/util/List;\n+  #219 = Utf8               (Ljava/util/Locale;)Ljava/util/List<Ljava/util/Locale;>;\n+  #220 = Utf8               defaultLocale\n+  #221 = Utf8               list\n+  #222 = Utf8               (Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List<Ljava/util/Locale;>;\n+  #223 = Utf8               country\n+  #224 = Utf8               variant\n+  #225 = Utf8               segments\n+  #226 = Utf8               [Ljava/lang/String;\n+  #227 = Utf8               language\n+  #228 = Class              #226          // \"[Ljava/lang/String;\"\n+  #229 = Utf8               toLocale\n+  #230 = Utf8               (Ljava/util/Locale;)Ljava/util/Locale;\n+  #231 = Utf8               ch1\n+  #232 = Utf8               C\n+  #233 = Utf8               ch2\n+  #234 = Utf8               len\n+  #235 = Utf8               I\n+  #236 = Utf8               ch0\n+  #237 = Utf8               this\n+  #238 = Utf8               Lorg/apache/commons/lang3/LocaleUtils;\n+  #239 = Utf8               <clinit>\n+  #240 = Utf8               SourceFile\n+  #241 = Utf8               LocaleUtils.java\n+  #242 = Utf8               InnerClasses\n+  #243 = Utf8               SyncAvoid\n {\n   private static final java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>> cLanguagesByCountry;\n     descriptor: Ljava/util/concurrent/ConcurrentMap;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n-    Signature: #66                          // Ljava/util/concurrent/ConcurrentMap<Ljava/lang/String;Ljava/util/List<Ljava/util/Locale;>;>;\n+    Signature: #192                         // Ljava/util/concurrent/ConcurrentMap<Ljava/lang/String;Ljava/util/List<Ljava/util/Locale;>;>;\n \n   private static final java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>> cCountriesByLanguage;\n     descriptor: Ljava/util/concurrent/ConcurrentMap;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n-    Signature: #66                          // Ljava/util/concurrent/ConcurrentMap<Ljava/lang/String;Ljava/util/List<Ljava/util/Locale;>;>;\n+    Signature: #192                         // Ljava/util/concurrent/ConcurrentMap<Ljava/lang/String;Ljava/util/List<Ljava/util/Locale;>;>;\n \n   public static java.util.List<java.util.Locale> availableLocaleList();\n     descriptor: ()Ljava/util/List;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: invokestatic  #1                  // Method org/apache/commons/lang3/LocaleUtils$SyncAvoid.access$000:()Ljava/util/List;\n          3: areturn\n       LineNumberTable:\n         line 72: 0\n-    Signature: #72                          // ()Ljava/util/List<Ljava/util/Locale;>;\n+    Signature: #195                         // ()Ljava/util/List<Ljava/util/Locale;>;\n \n   public static java.util.Set<java.util.Locale> availableLocaleSet();\n     descriptor: ()Ljava/util/Set;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: invokestatic  #2                  // Method org/apache/commons/lang3/LocaleUtils$SyncAvoid.access$100:()Ljava/util/Set;\n+         0: invokestatic  #7                  // Method org/apache/commons/lang3/LocaleUtils$SyncAvoid.access$100:()Ljava/util/Set;\n          3: areturn\n       LineNumberTable:\n         line 85: 0\n-    Signature: #75                          // ()Ljava/util/Set<Ljava/util/Locale;>;\n+    Signature: #197                         // ()Ljava/util/Set<Ljava/util/Locale;>;\n \n   public static java.util.List<java.util.Locale> countriesByLanguage(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/util/List;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=5, args_size=1\n          0: aload_0\n          1: ifnonnull     8\n-         4: invokestatic  #3                  // Method java/util/Collections.emptyList:()Ljava/util/List;\n+         4: invokestatic  #11                 // Method java/util/Collections.emptyList:()Ljava/util/List;\n          7: areturn\n-         8: getstatic     #4                  // Field cCountriesByLanguage:Ljava/util/concurrent/ConcurrentMap;\n+         8: getstatic     #16                 // Field cCountriesByLanguage:Ljava/util/concurrent/ConcurrentMap;\n         11: aload_0\n-        12: invokeinterface #5,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-        17: checkcast     #6                  // class java/util/List\n+        12: invokeinterface #22,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+        17: checkcast     #28                 // class java/util/List\n         20: astore_1\n         21: aload_1\n         22: ifnonnull     139\n-        25: new           #7                  // class java/util/ArrayList\n+        25: new           #30                 // class java/util/ArrayList\n         28: dup\n-        29: invokespecial #8                  // Method java/util/ArrayList.\"<init>\":()V\n+        29: invokespecial #32                 // Method java/util/ArrayList.\"<init>\":()V\n         32: astore_1\n-        33: invokestatic  #9                  // Method availableLocaleList:()Ljava/util/List;\n+        33: invokestatic  #36                 // Method availableLocaleList:()Ljava/util/List;\n         36: astore_2\n         37: aload_2\n-        38: invokeinterface #10,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+        38: invokeinterface #39,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n         43: astore_3\n         44: aload_3\n-        45: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        45: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         50: ifeq          110\n         53: aload_3\n-        54: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        59: checkcast     #13                 // class java/util/Locale\n+        54: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        59: checkcast     #53                 // class java/util/Locale\n         62: astore        4\n         64: aload_0\n         65: aload         4\n-        67: invokevirtual #14                 // Method java/util/Locale.getLanguage:()Ljava/lang/String;\n-        70: invokevirtual #15                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        67: invokevirtual #55                 // Method java/util/Locale.getLanguage:()Ljava/lang/String;\n+        70: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         73: ifeq          107\n         76: aload         4\n-        78: invokevirtual #16                 // Method java/util/Locale.getCountry:()Ljava/lang/String;\n-        81: invokevirtual #17                 // Method java/lang/String.isEmpty:()Z\n+        78: invokevirtual #65                 // Method java/util/Locale.getCountry:()Ljava/lang/String;\n+        81: invokevirtual #68                 // Method java/lang/String.isEmpty:()Z\n         84: ifne          107\n         87: aload         4\n-        89: invokevirtual #18                 // Method java/util/Locale.getVariant:()Ljava/lang/String;\n-        92: invokevirtual #17                 // Method java/lang/String.isEmpty:()Z\n+        89: invokevirtual #71                 // Method java/util/Locale.getVariant:()Ljava/lang/String;\n+        92: invokevirtual #68                 // Method java/lang/String.isEmpty:()Z\n         95: ifeq          107\n         98: aload_1\n         99: aload         4\n-       101: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+       101: invokeinterface #74,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n        106: pop\n        107: goto          44\n        110: aload_1\n-       111: invokestatic  #20                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n+       111: invokestatic  #77                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n        114: astore_1\n-       115: getstatic     #4                  // Field cCountriesByLanguage:Ljava/util/concurrent/ConcurrentMap;\n+       115: getstatic     #16                 // Field cCountriesByLanguage:Ljava/util/concurrent/ConcurrentMap;\n        118: aload_0\n        119: aload_1\n-       120: invokeinterface #21,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+       120: invokeinterface #81,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n        125: pop\n-       126: getstatic     #4                  // Field cCountriesByLanguage:Ljava/util/concurrent/ConcurrentMap;\n+       126: getstatic     #16                 // Field cCountriesByLanguage:Ljava/util/concurrent/ConcurrentMap;\n        129: aload_0\n-       130: invokeinterface #5,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-       135: checkcast     #6                  // class java/util/List\n+       130: invokeinterface #22,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+       135: checkcast     #28                 // class java/util/List\n        138: astore_1\n        139: aload_1\n        140: areturn\n       LineNumberTable:\n         line 98: 0\n         line 99: 4\n         line 101: 8\n@@ -382,41 +382,41 @@\n           offset_delta = 35\n           locals = [ class java/util/List, class java/util/List, class java/util/Iterator ]\n         frame_type = 62 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 2\n         frame_type = 250 /* chop */\n           offset_delta = 28\n-    Signature: #90                          // (Ljava/lang/String;)Ljava/util/List<Ljava/util/Locale;>;\n+    Signature: #211                         // (Ljava/lang/String;)Ljava/util/List<Ljava/util/Locale;>;\n \n   public static boolean isAvailableLocale(java.util.Locale);\n     descriptor: (Ljava/util/Locale;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: invokestatic  #9                  // Method availableLocaleList:()Ljava/util/List;\n+         0: invokestatic  #36                 // Method availableLocaleList:()Ljava/util/List;\n          3: aload_0\n-         4: invokeinterface #22,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z\n+         4: invokeinterface #85,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z\n          9: ireturn\n       LineNumberTable:\n         line 126: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0 locale   Ljava/util/Locale;\n \n   private static boolean isISO3166CountryCode(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #23                 // Method org/apache/commons/lang3/StringUtils.isAllUpperCase:(Ljava/lang/CharSequence;)Z\n+         1: invokestatic  #88                 // Method org/apache/commons/lang3/StringUtils.isAllUpperCase:(Ljava/lang/CharSequence;)Z\n          4: ifeq          19\n          7: aload_0\n-         8: invokevirtual #24                 // Method java/lang/String.length:()I\n+         8: invokevirtual #94                 // Method java/lang/String.length:()I\n         11: iconst_2\n         12: if_icmpne     19\n         15: iconst_1\n         16: goto          20\n         19: iconst_0\n         20: ireturn\n       LineNumberTable:\n@@ -431,22 +431,22 @@\n \n   private static boolean isISO639LanguageCode(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #25                 // Method org/apache/commons/lang3/StringUtils.isAllLowerCase:(Ljava/lang/CharSequence;)Z\n+         1: invokestatic  #98                 // Method org/apache/commons/lang3/StringUtils.isAllLowerCase:(Ljava/lang/CharSequence;)Z\n          4: ifeq          27\n          7: aload_0\n-         8: invokevirtual #24                 // Method java/lang/String.length:()I\n+         8: invokevirtual #94                 // Method java/lang/String.length:()I\n         11: iconst_2\n         12: if_icmpeq     23\n         15: aload_0\n-        16: invokevirtual #24                 // Method java/lang/String.length:()I\n+        16: invokevirtual #94                 // Method java/lang/String.length:()I\n         19: iconst_3\n         20: if_icmpne     27\n         23: iconst_1\n         24: goto          28\n         27: iconst_0\n         28: ireturn\n       LineNumberTable:\n@@ -462,18 +462,18 @@\n \n   private static boolean isNumericAreaCode(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #26                 // Method org/apache/commons/lang3/StringUtils.isNumeric:(Ljava/lang/CharSequence;)Z\n+         1: invokestatic  #101                // Method org/apache/commons/lang3/StringUtils.isNumeric:(Ljava/lang/CharSequence;)Z\n          4: ifeq          19\n          7: aload_0\n-         8: invokevirtual #24                 // Method java/lang/String.length:()I\n+         8: invokevirtual #94                 // Method java/lang/String.length:()I\n         11: iconst_3\n         12: if_icmpne     19\n         15: iconst_1\n         16: goto          20\n         19: iconst_0\n         20: ireturn\n       LineNumberTable:\n@@ -489,65 +489,65 @@\n   public static java.util.List<java.util.Locale> languagesByCountry(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/util/List;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=5, args_size=1\n          0: aload_0\n          1: ifnonnull     8\n-         4: invokestatic  #3                  // Method java/util/Collections.emptyList:()Ljava/util/List;\n+         4: invokestatic  #11                 // Method java/util/Collections.emptyList:()Ljava/util/List;\n          7: areturn\n-         8: getstatic     #27                 // Field cLanguagesByCountry:Ljava/util/concurrent/ConcurrentMap;\n+         8: getstatic     #104                // Field cLanguagesByCountry:Ljava/util/concurrent/ConcurrentMap;\n         11: aload_0\n-        12: invokeinterface #5,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-        17: checkcast     #6                  // class java/util/List\n+        12: invokeinterface #22,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+        17: checkcast     #28                 // class java/util/List\n         20: astore_1\n         21: aload_1\n         22: ifnonnull     128\n-        25: new           #7                  // class java/util/ArrayList\n+        25: new           #30                 // class java/util/ArrayList\n         28: dup\n-        29: invokespecial #8                  // Method java/util/ArrayList.\"<init>\":()V\n+        29: invokespecial #32                 // Method java/util/ArrayList.\"<init>\":()V\n         32: astore_1\n-        33: invokestatic  #9                  // Method availableLocaleList:()Ljava/util/List;\n+        33: invokestatic  #36                 // Method availableLocaleList:()Ljava/util/List;\n         36: astore_2\n         37: aload_2\n-        38: invokeinterface #10,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+        38: invokeinterface #39,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n         43: astore_3\n         44: aload_3\n-        45: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        45: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         50: ifeq          99\n         53: aload_3\n-        54: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        59: checkcast     #13                 // class java/util/Locale\n+        54: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        59: checkcast     #53                 // class java/util/Locale\n         62: astore        4\n         64: aload_0\n         65: aload         4\n-        67: invokevirtual #16                 // Method java/util/Locale.getCountry:()Ljava/lang/String;\n-        70: invokevirtual #15                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        67: invokevirtual #65                 // Method java/util/Locale.getCountry:()Ljava/lang/String;\n+        70: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         73: ifeq          96\n         76: aload         4\n-        78: invokevirtual #18                 // Method java/util/Locale.getVariant:()Ljava/lang/String;\n-        81: invokevirtual #17                 // Method java/lang/String.isEmpty:()Z\n+        78: invokevirtual #71                 // Method java/util/Locale.getVariant:()Ljava/lang/String;\n+        81: invokevirtual #68                 // Method java/lang/String.isEmpty:()Z\n         84: ifeq          96\n         87: aload_1\n         88: aload         4\n-        90: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        90: invokeinterface #74,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         95: pop\n         96: goto          44\n         99: aload_1\n-       100: invokestatic  #20                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n+       100: invokestatic  #77                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n        103: astore_1\n-       104: getstatic     #27                 // Field cLanguagesByCountry:Ljava/util/concurrent/ConcurrentMap;\n+       104: getstatic     #104                // Field cLanguagesByCountry:Ljava/util/concurrent/ConcurrentMap;\n        107: aload_0\n        108: aload_1\n-       109: invokeinterface #21,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+       109: invokeinterface #81,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n        114: pop\n-       115: getstatic     #27                 // Field cLanguagesByCountry:Ljava/util/concurrent/ConcurrentMap;\n+       115: getstatic     #104                // Field cLanguagesByCountry:Ljava/util/concurrent/ConcurrentMap;\n        118: aload_0\n-       119: invokeinterface #5,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-       124: checkcast     #6                  // class java/util/List\n+       119: invokeinterface #22,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+       124: checkcast     #28                 // class java/util/List\n        127: astore_1\n        128: aload_1\n        129: areturn\n       LineNumberTable:\n         line 169: 0\n         line 170: 4\n         line 172: 8\n@@ -579,85 +579,85 @@\n           offset_delta = 35\n           locals = [ class java/util/List, class java/util/List, class java/util/Iterator ]\n         frame_type = 51 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 2\n         frame_type = 250 /* chop */\n           offset_delta = 28\n-    Signature: #90                          // (Ljava/lang/String;)Ljava/util/List<Ljava/util/Locale;>;\n+    Signature: #211                         // (Ljava/lang/String;)Ljava/util/List<Ljava/util/Locale;>;\n \n   public static java.util.List<java.util.Locale> localeLookupList(java.util.Locale);\n     descriptor: (Ljava/util/Locale;)Ljava/util/List;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: invokestatic  #28                 // Method localeLookupList:(Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List;\n+         2: invokestatic  #107                // Method localeLookupList:(Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List;\n          5: areturn\n       LineNumberTable:\n         line 202: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0 locale   Ljava/util/Locale;\n-    Signature: #103                         // (Ljava/util/Locale;)Ljava/util/List<Ljava/util/Locale;>;\n+    Signature: #219                         // (Ljava/util/Locale;)Ljava/util/List<Ljava/util/Locale;>;\n \n   public static java.util.List<java.util.Locale> localeLookupList(java.util.Locale, java.util.Locale);\n     descriptor: (Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=3, args_size=2\n-         0: new           #7                  // class java/util/ArrayList\n+         0: new           #30                 // class java/util/ArrayList\n          3: dup\n          4: iconst_4\n-         5: invokespecial #29                 // Method java/util/ArrayList.\"<init>\":(I)V\n+         5: invokespecial #111                // Method java/util/ArrayList.\"<init>\":(I)V\n          8: astore_2\n          9: aload_0\n         10: ifnull        101\n         13: aload_2\n         14: aload_0\n-        15: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        15: invokeinterface #74,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         20: pop\n         21: aload_0\n-        22: invokevirtual #18                 // Method java/util/Locale.getVariant:()Ljava/lang/String;\n-        25: invokevirtual #17                 // Method java/lang/String.isEmpty:()Z\n+        22: invokevirtual #71                 // Method java/util/Locale.getVariant:()Ljava/lang/String;\n+        25: invokevirtual #68                 // Method java/lang/String.isEmpty:()Z\n         28: ifne          53\n         31: aload_2\n-        32: new           #13                 // class java/util/Locale\n+        32: new           #53                 // class java/util/Locale\n         35: dup\n         36: aload_0\n-        37: invokevirtual #14                 // Method java/util/Locale.getLanguage:()Ljava/lang/String;\n+        37: invokevirtual #55                 // Method java/util/Locale.getLanguage:()Ljava/lang/String;\n         40: aload_0\n-        41: invokevirtual #16                 // Method java/util/Locale.getCountry:()Ljava/lang/String;\n-        44: invokespecial #30                 // Method java/util/Locale.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n-        47: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        41: invokevirtual #65                 // Method java/util/Locale.getCountry:()Ljava/lang/String;\n+        44: invokespecial #114                // Method java/util/Locale.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+        47: invokeinterface #74,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         52: pop\n         53: aload_0\n-        54: invokevirtual #16                 // Method java/util/Locale.getCountry:()Ljava/lang/String;\n-        57: invokevirtual #17                 // Method java/lang/String.isEmpty:()Z\n+        54: invokevirtual #65                 // Method java/util/Locale.getCountry:()Ljava/lang/String;\n+        57: invokevirtual #68                 // Method java/lang/String.isEmpty:()Z\n         60: ifne          83\n         63: aload_2\n-        64: new           #13                 // class java/util/Locale\n+        64: new           #53                 // class java/util/Locale\n         67: dup\n         68: aload_0\n-        69: invokevirtual #14                 // Method java/util/Locale.getLanguage:()Ljava/lang/String;\n-        72: ldc           #32                 // String\n-        74: invokespecial #30                 // Method java/util/Locale.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n-        77: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        69: invokevirtual #55                 // Method java/util/Locale.getLanguage:()Ljava/lang/String;\n+        72: ldc           #117                // String\n+        74: invokespecial #114                // Method java/util/Locale.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+        77: invokeinterface #74,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         82: pop\n         83: aload_2\n         84: aload_1\n-        85: invokeinterface #22,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z\n+        85: invokeinterface #85,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z\n         90: ifne          101\n         93: aload_2\n         94: aload_1\n-        95: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        95: invokeinterface #74,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n        100: pop\n        101: aload_2\n-       102: invokestatic  #20                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n+       102: invokestatic  #77                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n        105: areturn\n       LineNumberTable:\n         line 223: 0\n         line 224: 9\n         line 225: 13\n         line 226: 21\n         line 227: 31\n@@ -676,60 +676,60 @@\n             9      97     2  list   Ljava/util/List<Ljava/util/Locale;>;\n       StackMapTable: number_of_entries = 3\n         frame_type = 252 /* append */\n           offset_delta = 53\n           locals = [ class java/util/List ]\n         frame_type = 29 /* same */\n         frame_type = 17 /* same */\n-    Signature: #107                         // (Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List<Ljava/util/Locale;>;\n+    Signature: #222                         // (Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List<Ljava/util/Locale;>;\n \n   private static java.util.Locale parseLocale(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/util/Locale;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=5, locals=5, args_size=1\n          0: aload_0\n-         1: invokestatic  #33                 // Method isISO639LanguageCode:(Ljava/lang/String;)Z\n+         1: invokestatic  #119                // Method isISO639LanguageCode:(Ljava/lang/String;)Z\n          4: ifeq          16\n-         7: new           #13                 // class java/util/Locale\n+         7: new           #53                 // class java/util/Locale\n         10: dup\n         11: aload_0\n-        12: invokespecial #34                 // Method java/util/Locale.\"<init>\":(Ljava/lang/String;)V\n+        12: invokespecial #123                // Method java/util/Locale.\"<init>\":(Ljava/lang/String;)V\n         15: areturn\n         16: aload_0\n-        17: ldc           #35                 // String _\n+        17: ldc           #126                // String _\n         19: iconst_m1\n-        20: invokevirtual #36                 // Method java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;\n+        20: invokevirtual #128                // Method java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;\n         23: astore_1\n         24: aload_1\n         25: iconst_0\n         26: aaload\n         27: astore_2\n         28: aload_1\n         29: arraylength\n         30: iconst_2\n         31: if_icmpne     72\n         34: aload_1\n         35: iconst_1\n         36: aaload\n         37: astore_3\n         38: aload_2\n-        39: invokestatic  #33                 // Method isISO639LanguageCode:(Ljava/lang/String;)Z\n+        39: invokestatic  #119                // Method isISO639LanguageCode:(Ljava/lang/String;)Z\n         42: ifeq          52\n         45: aload_3\n-        46: invokestatic  #37                 // Method isISO3166CountryCode:(Ljava/lang/String;)Z\n+        46: invokestatic  #132                // Method isISO3166CountryCode:(Ljava/lang/String;)Z\n         49: ifne          59\n         52: aload_3\n-        53: invokestatic  #38                 // Method isNumericAreaCode:(Ljava/lang/String;)Z\n+        53: invokestatic  #135                // Method isNumericAreaCode:(Ljava/lang/String;)Z\n         56: ifeq          69\n-        59: new           #13                 // class java/util/Locale\n+        59: new           #53                 // class java/util/Locale\n         62: dup\n         63: aload_2\n         64: aload_3\n-        65: invokespecial #30                 // Method java/util/Locale.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+        65: invokespecial #114                // Method java/util/Locale.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n         68: areturn\n         69: goto          135\n         72: aload_1\n         73: arraylength\n         74: iconst_3\n         75: if_icmpne     135\n         78: aload_1\n@@ -737,46 +737,46 @@\n         80: aaload\n         81: astore_3\n         82: aload_1\n         83: iconst_2\n         84: aaload\n         85: astore        4\n         87: aload_2\n-        88: invokestatic  #33                 // Method isISO639LanguageCode:(Ljava/lang/String;)Z\n+        88: invokestatic  #119                // Method isISO639LanguageCode:(Ljava/lang/String;)Z\n         91: ifeq          135\n         94: aload_3\n-        95: invokevirtual #17                 // Method java/lang/String.isEmpty:()Z\n+        95: invokevirtual #68                 // Method java/lang/String.isEmpty:()Z\n         98: ifne          115\n        101: aload_3\n-       102: invokestatic  #37                 // Method isISO3166CountryCode:(Ljava/lang/String;)Z\n+       102: invokestatic  #132                // Method isISO3166CountryCode:(Ljava/lang/String;)Z\n        105: ifne          115\n        108: aload_3\n-       109: invokestatic  #38                 // Method isNumericAreaCode:(Ljava/lang/String;)Z\n+       109: invokestatic  #135                // Method isNumericAreaCode:(Ljava/lang/String;)Z\n        112: ifeq          135\n        115: aload         4\n-       117: invokevirtual #17                 // Method java/lang/String.isEmpty:()Z\n+       117: invokevirtual #68                 // Method java/lang/String.isEmpty:()Z\n        120: ifne          135\n-       123: new           #13                 // class java/util/Locale\n+       123: new           #53                 // class java/util/Locale\n        126: dup\n        127: aload_2\n        128: aload_3\n        129: aload         4\n-       131: invokespecial #39                 // Method java/util/Locale.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+       131: invokespecial #138                // Method java/util/Locale.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n        134: areturn\n-       135: new           #40                 // class java/lang/IllegalArgumentException\n+       135: new           #141                // class java/lang/IllegalArgumentException\n        138: dup\n-       139: new           #41                 // class java/lang/StringBuilder\n+       139: new           #143                // class java/lang/StringBuilder\n        142: dup\n-       143: invokespecial #42                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       146: ldc           #43                 // String Invalid locale format:\n-       148: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       143: invokespecial #145                // Method java/lang/StringBuilder.\"<init>\":()V\n+       146: ldc           #146                // String Invalid locale format:\n+       148: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        151: aload_0\n-       152: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       155: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       158: invokespecial #46                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       152: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       155: invokevirtual #152                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       158: invokespecial #155                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n        161: athrow\n       LineNumberTable:\n         line 247: 0\n         line 248: 7\n         line 251: 16\n         line 252: 24\n         line 253: 28\n@@ -820,15 +820,15 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: ifnull        8\n          4: aload_0\n          5: goto          11\n-         8: invokestatic  #47                 // Method java/util/Locale.getDefault:()Ljava/util/Locale;\n+         8: invokestatic  #156                // Method java/util/Locale.getDefault:()Ljava/util/Locale;\n         11: areturn\n       LineNumberTable:\n         line 279: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0 locale   Ljava/util/Locale;\n       StackMapTable: number_of_entries = 2\n@@ -842,162 +842,162 @@\n     Code:\n       stack=6, locals=5, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokevirtual #17                 // Method java/lang/String.isEmpty:()Z\n+         7: invokevirtual #68                 // Method java/lang/String.isEmpty:()Z\n         10: ifeq          25\n-        13: new           #13                 // class java/util/Locale\n+        13: new           #53                 // class java/util/Locale\n         16: dup\n-        17: ldc           #32                 // String\n-        19: ldc           #32                 // String\n-        21: invokespecial #30                 // Method java/util/Locale.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+        17: ldc           #117                // String\n+        19: ldc           #117                // String\n+        21: invokespecial #114                // Method java/util/Locale.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n         24: areturn\n         25: aload_0\n-        26: ldc           #48                 // String #\n-        28: invokevirtual #49                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+        26: ldc           #160                // String #\n+        28: invokevirtual #162                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n         31: ifeq          61\n-        34: new           #40                 // class java/lang/IllegalArgumentException\n+        34: new           #141                // class java/lang/IllegalArgumentException\n         37: dup\n-        38: new           #41                 // class java/lang/StringBuilder\n+        38: new           #143                // class java/lang/StringBuilder\n         41: dup\n-        42: invokespecial #42                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        45: ldc           #43                 // String Invalid locale format:\n-        47: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        42: invokespecial #145                // Method java/lang/StringBuilder.\"<init>\":()V\n+        45: ldc           #146                // String Invalid locale format:\n+        47: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         50: aload_0\n-        51: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        54: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        57: invokespecial #46                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        51: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        54: invokevirtual #152                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        57: invokespecial #155                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         60: athrow\n         61: aload_0\n-        62: invokevirtual #24                 // Method java/lang/String.length:()I\n+        62: invokevirtual #94                 // Method java/lang/String.length:()I\n         65: istore_1\n         66: iload_1\n         67: iconst_2\n         68: if_icmpge     98\n-        71: new           #40                 // class java/lang/IllegalArgumentException\n+        71: new           #141                // class java/lang/IllegalArgumentException\n         74: dup\n-        75: new           #41                 // class java/lang/StringBuilder\n+        75: new           #143                // class java/lang/StringBuilder\n         78: dup\n-        79: invokespecial #42                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        82: ldc           #43                 // String Invalid locale format:\n-        84: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        79: invokespecial #145                // Method java/lang/StringBuilder.\"<init>\":()V\n+        82: ldc           #146                // String Invalid locale format:\n+        84: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         87: aload_0\n-        88: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        91: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        94: invokespecial #46                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        88: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        91: invokevirtual #152                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        94: invokespecial #155                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         97: athrow\n         98: aload_0\n         99: iconst_0\n-       100: invokevirtual #50                 // Method java/lang/String.charAt:(I)C\n+       100: invokevirtual #164                // Method java/lang/String.charAt:(I)C\n        103: istore_2\n        104: iload_2\n        105: bipush        95\n        107: if_icmpne     308\n        110: iload_1\n        111: iconst_3\n        112: if_icmpge     142\n-       115: new           #40                 // class java/lang/IllegalArgumentException\n+       115: new           #141                // class java/lang/IllegalArgumentException\n        118: dup\n-       119: new           #41                 // class java/lang/StringBuilder\n+       119: new           #143                // class java/lang/StringBuilder\n        122: dup\n-       123: invokespecial #42                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       126: ldc           #43                 // String Invalid locale format:\n-       128: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       123: invokespecial #145                // Method java/lang/StringBuilder.\"<init>\":()V\n+       126: ldc           #146                // String Invalid locale format:\n+       128: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        131: aload_0\n-       132: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       135: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       138: invokespecial #46                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       132: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       135: invokevirtual #152                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       138: invokespecial #155                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n        141: athrow\n        142: aload_0\n        143: iconst_1\n-       144: invokevirtual #50                 // Method java/lang/String.charAt:(I)C\n+       144: invokevirtual #164                // Method java/lang/String.charAt:(I)C\n        147: istore_3\n        148: aload_0\n        149: iconst_2\n-       150: invokevirtual #50                 // Method java/lang/String.charAt:(I)C\n+       150: invokevirtual #164                // Method java/lang/String.charAt:(I)C\n        153: istore        4\n        155: iload_3\n-       156: invokestatic  #51                 // Method java/lang/Character.isUpperCase:(C)Z\n+       156: invokestatic  #168                // Method java/lang/Character.isUpperCase:(C)Z\n        159: ifeq          170\n        162: iload         4\n-       164: invokestatic  #51                 // Method java/lang/Character.isUpperCase:(C)Z\n+       164: invokestatic  #168                // Method java/lang/Character.isUpperCase:(C)Z\n        167: ifne          197\n-       170: new           #40                 // class java/lang/IllegalArgumentException\n+       170: new           #141                // class java/lang/IllegalArgumentException\n        173: dup\n-       174: new           #41                 // class java/lang/StringBuilder\n+       174: new           #143                // class java/lang/StringBuilder\n        177: dup\n-       178: invokespecial #42                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       181: ldc           #43                 // String Invalid locale format:\n-       183: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       178: invokespecial #145                // Method java/lang/StringBuilder.\"<init>\":()V\n+       181: ldc           #146                // String Invalid locale format:\n+       183: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        186: aload_0\n-       187: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       190: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       193: invokespecial #46                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       187: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       190: invokevirtual #152                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       193: invokespecial #155                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n        196: athrow\n        197: iload_1\n        198: iconst_3\n        199: if_icmpne     218\n-       202: new           #13                 // class java/util/Locale\n+       202: new           #53                 // class java/util/Locale\n        205: dup\n-       206: ldc           #32                 // String\n+       206: ldc           #117                // String\n        208: aload_0\n        209: iconst_1\n        210: iconst_3\n-       211: invokevirtual #52                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n-       214: invokespecial #30                 // Method java/util/Locale.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+       211: invokevirtual #174                // Method java/lang/String.substring:(II)Ljava/lang/String;\n+       214: invokespecial #114                // Method java/util/Locale.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n        217: areturn\n        218: iload_1\n        219: iconst_5\n        220: if_icmpge     250\n-       223: new           #40                 // class java/lang/IllegalArgumentException\n+       223: new           #141                // class java/lang/IllegalArgumentException\n        226: dup\n-       227: new           #41                 // class java/lang/StringBuilder\n+       227: new           #143                // class java/lang/StringBuilder\n        230: dup\n-       231: invokespecial #42                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       234: ldc           #43                 // String Invalid locale format:\n-       236: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       231: invokespecial #145                // Method java/lang/StringBuilder.\"<init>\":()V\n+       234: ldc           #146                // String Invalid locale format:\n+       236: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        239: aload_0\n-       240: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       243: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       246: invokespecial #46                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       240: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       243: invokevirtual #152                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       246: invokespecial #155                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n        249: athrow\n        250: aload_0\n        251: iconst_3\n-       252: invokevirtual #50                 // Method java/lang/String.charAt:(I)C\n+       252: invokevirtual #164                // Method java/lang/String.charAt:(I)C\n        255: bipush        95\n        257: if_icmpeq     287\n-       260: new           #40                 // class java/lang/IllegalArgumentException\n+       260: new           #141                // class java/lang/IllegalArgumentException\n        263: dup\n-       264: new           #41                 // class java/lang/StringBuilder\n+       264: new           #143                // class java/lang/StringBuilder\n        267: dup\n-       268: invokespecial #42                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       271: ldc           #43                 // String Invalid locale format:\n-       273: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       268: invokespecial #145                // Method java/lang/StringBuilder.\"<init>\":()V\n+       271: ldc           #146                // String Invalid locale format:\n+       273: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        276: aload_0\n-       277: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       280: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       283: invokespecial #46                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       277: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       280: invokevirtual #152                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       283: invokespecial #155                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n        286: athrow\n-       287: new           #13                 // class java/util/Locale\n+       287: new           #53                 // class java/util/Locale\n        290: dup\n-       291: ldc           #32                 // String\n+       291: ldc           #117                // String\n        293: aload_0\n        294: iconst_1\n        295: iconst_3\n-       296: invokevirtual #52                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+       296: invokevirtual #174                // Method java/lang/String.substring:(II)Ljava/lang/String;\n        299: aload_0\n        300: iconst_4\n-       301: invokevirtual #53                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n-       304: invokespecial #39                 // Method java/util/Locale.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+       301: invokevirtual #178                // Method java/lang/String.substring:(I)Ljava/lang/String;\n+       304: invokespecial #138                // Method java/util/Locale.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n        307: areturn\n        308: aload_0\n-       309: invokestatic  #54                 // Method parseLocale:(Ljava/lang/String;)Ljava/util/Locale;\n+       309: invokestatic  #181                // Method parseLocale:(Ljava/lang/String;)Ljava/util/Locale;\n        312: areturn\n       LineNumberTable:\n         line 313: 0\n         line 314: 4\n         line 316: 6\n         line 317: 13\n         line 319: 25\n@@ -1050,37 +1050,37 @@\n \n   public org.apache.commons.lang3.LocaleUtils();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #55                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #185                // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 358: 0\n         line 359: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/LocaleUtils;\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: new           #56                 // class java/util/concurrent/ConcurrentHashMap\n+         0: new           #188                // class java/util/concurrent/ConcurrentHashMap\n          3: dup\n-         4: invokespecial #57                 // Method java/util/concurrent/ConcurrentHashMap.\"<init>\":()V\n-         7: putstatic     #27                 // Field cLanguagesByCountry:Ljava/util/concurrent/ConcurrentMap;\n-        10: new           #56                 // class java/util/concurrent/ConcurrentHashMap\n+         4: invokespecial #190                // Method java/util/concurrent/ConcurrentHashMap.\"<init>\":()V\n+         7: putstatic     #104                // Field cLanguagesByCountry:Ljava/util/concurrent/ConcurrentMap;\n+        10: new           #188                // class java/util/concurrent/ConcurrentHashMap\n         13: dup\n-        14: invokespecial #57                 // Method java/util/concurrent/ConcurrentHashMap.\"<init>\":()V\n-        17: putstatic     #4                  // Field cCountriesByLanguage:Ljava/util/concurrent/ConcurrentMap;\n+        14: invokespecial #190                // Method java/util/concurrent/ConcurrentHashMap.\"<init>\":()V\n+        17: putstatic     #16                 // Field cCountriesByLanguage:Ljava/util/concurrent/ConcurrentMap;\n         20: return\n       LineNumberTable:\n         line 55: 0\n         line 59: 10\n }\n SourceFile: \"LocaleUtils.java\"\n InnerClasses:\n-  static #61= #60 of #58;                 // SyncAvoid=class org/apache/commons/lang3/LocaleUtils$SyncAvoid of class org/apache/commons/lang3/LocaleUtils\n+  static #243= #2 of #17;                 // SyncAvoid=class org/apache/commons/lang3/LocaleUtils$SyncAvoid of class org/apache/commons/lang3/LocaleUtils\n"}]}
