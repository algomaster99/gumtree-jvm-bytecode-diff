{"diffoscope-json-version": 1, "source1": "first/BeiderMorseEncoder.class", "source2": "second/BeiderMorseEncoder.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -8,49 +8,49 @@\n {\n     private PhoneticEngine engine;\n     \n     public BeiderMorseEncoder() {\n         this.engine = new PhoneticEngine(NameType.GENERIC, RuleType.APPROX, true);\n     }\n     \n-    public Object encode(final Object source) throws EncoderException {\n-        if (!(source instanceof String)) {\n+    public Object encode(final Object o) throws EncoderException {\n+        if (!(o instanceof String)) {\n             throw new EncoderException(\"BeiderMorseEncoder encode parameter is not of type String\");\n         }\n-        return this.encode((String)source);\n+        return this.encode((String)o);\n     }\n     \n-    public String encode(final String source) throws EncoderException {\n-        if (source == null) {\n+    public String encode(final String s) throws EncoderException {\n+        if (s == null) {\n             return null;\n         }\n-        return this.engine.encode(source);\n+        return this.engine.encode(s);\n     }\n     \n     public NameType getNameType() {\n         return this.engine.getNameType();\n     }\n     \n     public RuleType getRuleType() {\n         return this.engine.getRuleType();\n     }\n     \n     public boolean isConcat() {\n         return this.engine.isConcat();\n     }\n     \n-    public void setConcat(final boolean concat) {\n-        this.engine = new PhoneticEngine(this.engine.getNameType(), this.engine.getRuleType(), concat, this.engine.getMaxPhonemes());\n+    public void setConcat(final boolean b) {\n+        this.engine = new PhoneticEngine(this.engine.getNameType(), this.engine.getRuleType(), b, this.engine.getMaxPhonemes());\n     }\n     \n     public void setNameType(final NameType nameType) {\n         this.engine = new PhoneticEngine(nameType, this.engine.getRuleType(), this.engine.isConcat(), this.engine.getMaxPhonemes());\n     }\n     \n     public void setRuleType(final RuleType ruleType) {\n         this.engine = new PhoneticEngine(this.engine.getNameType(), ruleType, this.engine.isConcat(), this.engine.getMaxPhonemes());\n     }\n     \n-    public void setMaxPhonemes(final int maxPhonemes) {\n-        this.engine = new PhoneticEngine(this.engine.getNameType(), this.engine.getRuleType(), this.engine.isConcat(), maxPhonemes);\n+    public void setMaxPhonemes(final int n) {\n+        this.engine = new PhoneticEngine(this.engine.getNameType(), this.engine.getRuleType(), this.engine.isConcat(), n);\n     }\n }\n"}]}
