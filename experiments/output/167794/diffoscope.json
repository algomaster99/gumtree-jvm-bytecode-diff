{"diffoscope-json-version": 1, "source1": "first/RegexFileFilter.class", "source2": "second/RegexFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,31 +1,31 @@\n-  SHA-256 checksum 2e0f79b377a01f1d07bbde94556f7c1d16632c723fcf6d5ebc9509f395953a2d\n+  SHA-256 checksum ea6692217f1571453626067a50e71173e897011de91cad85c6e2af2b71e19f2e\n   Compiled from \"RegexFileFilter.java\"\n public class org.apache.commons.io.filefilter.RegexFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #12                         // org/apache/commons/io/filefilter/RegexFileFilter\n   super_class: #13                        // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 1, fields: 2, methods: 5, attributes: 1\n Constant pool:\n-   #1 = Methodref          #13.#49        // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-   #2 = Class              #50            // java/lang/IllegalArgumentException\n-   #3 = String             #51            // Pattern is missing\n-   #4 = Methodref          #2.#52         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #5 = Methodref          #8.#53         // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-   #6 = Fieldref           #12.#54        // org/apache/commons/io/filefilter/RegexFileFilter.pattern:Ljava/util/regex/Pattern;\n-   #7 = Methodref          #55.#56        // org/apache/commons/io/IOCase.isCaseSensitive:()Z\n-   #8 = Class              #57            // java/util/regex/Pattern\n-   #9 = Methodref          #8.#58         // java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n-  #10 = Methodref          #8.#59         // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #11 = Methodref          #60.#61        // java/util/regex/Matcher.matches:()Z\n-  #12 = Class              #62            // org/apache/commons/io/filefilter/RegexFileFilter\n-  #13 = Class              #63            // org/apache/commons/io/filefilter/AbstractFileFilter\n-  #14 = Class              #64            // java/io/Serializable\n+   #1 = Methodref          #13.#47        // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+   #2 = Class              #48            // java/lang/IllegalArgumentException\n+   #3 = String             #49            // Pattern is missing\n+   #4 = Methodref          #2.#50         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #5 = Methodref          #8.#51         // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+   #6 = Fieldref           #12.#52        // org/apache/commons/io/filefilter/RegexFileFilter.pattern:Ljava/util/regex/Pattern;\n+   #7 = Methodref          #37.#53        // org/apache/commons/io/IOCase.isCaseSensitive:()Z\n+   #8 = Class              #54            // java/util/regex/Pattern\n+   #9 = Methodref          #8.#55         // java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+  #10 = Methodref          #8.#56         // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #11 = Methodref          #57.#58        // java/util/regex/Matcher.matches:()Z\n+  #12 = Class              #59            // org/apache/commons/io/filefilter/RegexFileFilter\n+  #13 = Class              #60            // org/apache/commons/io/filefilter/AbstractFileFilter\n+  #14 = Class              #61            // java/io/Serializable\n   #15 = Utf8               serialVersionUID\n   #16 = Utf8               J\n   #17 = Utf8               ConstantValue\n   #18 = Long               4269646126155225062l\n   #20 = Utf8               pattern\n   #21 = Utf8               Ljava/util/regex/Pattern;\n   #22 = Utf8               <init>\n@@ -33,60 +33,57 @@\n   #24 = Utf8               Code\n   #25 = Utf8               LineNumberTable\n   #26 = Utf8               LocalVariableTable\n   #27 = Utf8               this\n   #28 = Utf8               Lorg/apache/commons/io/filefilter/RegexFileFilter;\n   #29 = Utf8               Ljava/lang/String;\n   #30 = Utf8               StackMapTable\n-  #31 = Class              #62            // org/apache/commons/io/filefilter/RegexFileFilter\n-  #32 = Class              #65            // java/lang/String\n-  #33 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-  #34 = Utf8               caseSensitivity\n-  #35 = Utf8               Lorg/apache/commons/io/IOCase;\n-  #36 = Utf8               flags\n-  #37 = Utf8               I\n-  #38 = Class              #66            // org/apache/commons/io/IOCase\n-  #39 = Utf8               (Ljava/lang/String;I)V\n-  #40 = Utf8               (Ljava/util/regex/Pattern;)V\n-  #41 = Class              #57            // java/util/regex/Pattern\n-  #42 = Utf8               accept\n-  #43 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n-  #44 = Utf8               dir\n-  #45 = Utf8               Ljava/io/File;\n-  #46 = Utf8               name\n-  #47 = Utf8               SourceFile\n-  #48 = Utf8               RegexFileFilter.java\n-  #49 = NameAndType        #22:#67        // \"<init>\":()V\n-  #50 = Utf8               java/lang/IllegalArgumentException\n-  #51 = Utf8               Pattern is missing\n-  #52 = NameAndType        #22:#23        // \"<init>\":(Ljava/lang/String;)V\n-  #53 = NameAndType        #68:#69        // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #54 = NameAndType        #20:#21        // pattern:Ljava/util/regex/Pattern;\n-  #55 = Class              #66            // org/apache/commons/io/IOCase\n-  #56 = NameAndType        #70:#71        // isCaseSensitive:()Z\n-  #57 = Utf8               java/util/regex/Pattern\n-  #58 = NameAndType        #68:#72        // compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n-  #59 = NameAndType        #73:#74        // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #60 = Class              #75            // java/util/regex/Matcher\n-  #61 = NameAndType        #76:#71        // matches:()Z\n-  #62 = Utf8               org/apache/commons/io/filefilter/RegexFileFilter\n-  #63 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-  #64 = Utf8               java/io/Serializable\n-  #65 = Utf8               java/lang/String\n-  #66 = Utf8               org/apache/commons/io/IOCase\n-  #67 = Utf8               ()V\n-  #68 = Utf8               compile\n-  #69 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #70 = Utf8               isCaseSensitive\n-  #71 = Utf8               ()Z\n-  #72 = Utf8               (Ljava/lang/String;I)Ljava/util/regex/Pattern;\n-  #73 = Utf8               matcher\n-  #74 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #75 = Utf8               java/util/regex/Matcher\n-  #76 = Utf8               matches\n+  #31 = Class              #62            // java/lang/String\n+  #32 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+  #33 = Utf8               caseSensitivity\n+  #34 = Utf8               Lorg/apache/commons/io/IOCase;\n+  #35 = Utf8               flags\n+  #36 = Utf8               I\n+  #37 = Class              #63            // org/apache/commons/io/IOCase\n+  #38 = Utf8               (Ljava/lang/String;I)V\n+  #39 = Utf8               (Ljava/util/regex/Pattern;)V\n+  #40 = Utf8               accept\n+  #41 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+  #42 = Utf8               dir\n+  #43 = Utf8               Ljava/io/File;\n+  #44 = Utf8               name\n+  #45 = Utf8               SourceFile\n+  #46 = Utf8               RegexFileFilter.java\n+  #47 = NameAndType        #22:#64        // \"<init>\":()V\n+  #48 = Utf8               java/lang/IllegalArgumentException\n+  #49 = Utf8               Pattern is missing\n+  #50 = NameAndType        #22:#23        // \"<init>\":(Ljava/lang/String;)V\n+  #51 = NameAndType        #65:#66        // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #52 = NameAndType        #20:#21        // pattern:Ljava/util/regex/Pattern;\n+  #53 = NameAndType        #67:#68        // isCaseSensitive:()Z\n+  #54 = Utf8               java/util/regex/Pattern\n+  #55 = NameAndType        #65:#69        // compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+  #56 = NameAndType        #70:#71        // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #57 = Class              #72            // java/util/regex/Matcher\n+  #58 = NameAndType        #73:#68        // matches:()Z\n+  #59 = Utf8               org/apache/commons/io/filefilter/RegexFileFilter\n+  #60 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+  #61 = Utf8               java/io/Serializable\n+  #62 = Utf8               java/lang/String\n+  #63 = Utf8               org/apache/commons/io/IOCase\n+  #64 = Utf8               ()V\n+  #65 = Utf8               compile\n+  #66 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #67 = Utf8               isCaseSensitive\n+  #68 = Utf8               ()Z\n+  #69 = Utf8               (Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+  #70 = Utf8               matcher\n+  #71 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #72 = Utf8               java/util/regex/Matcher\n+  #73 = Utf8               matches\n {\n   private static final long serialVersionUID = 4269646126155225062l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 4269646126155225062l\n \n   private final java.util.regex.Pattern pattern;\n"}]}
