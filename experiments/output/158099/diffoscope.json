{"diffoscope-json-version": 1, "source1": "first/MutableInt.class", "source2": "second/MutableInt.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,8 +1,8 @@\n-  SHA-256 checksum 3aa5a607cd03e959352cea232a5f326335143adf68e7599a4463b80b81ddbba0\n+  SHA-256 checksum 791cd21f10ab9faf6dd9d7cea9868cd8df90f4781eef11c690e457df39cdc7e4\n   Compiled from \"MutableInt.java\"\n public class org.apache.commons.lang3.mutable.MutableInt extends java.lang.Number implements java.lang.Comparable<org.apache.commons.lang3.mutable.MutableInt>, org.apache.commons.lang3.mutable.Mutable<java.lang.Number>\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/lang3/mutable/MutableInt\n   super_class: #3                         // java/lang/Number\n@@ -95,23 +95,23 @@\n    #86 = Utf8               toString\n    #87 = Utf8               ()Ljava/lang/String;\n    #88 = Methodref          #89.#91       // java/lang/String.valueOf:(I)Ljava/lang/String;\n    #89 = Class              #90           // java/lang/String\n    #90 = Utf8               java/lang/String\n    #91 = NameAndType        #46:#92       // valueOf:(I)Ljava/lang/String;\n    #92 = Utf8               (I)Ljava/lang/String;\n-   #93 = Utf8               ()Ljava/lang/Object;\n-   #94 = Methodref          #1.#95        // org/apache/commons/lang3/mutable/MutableInt.getValue:()Ljava/lang/Integer;\n-   #95 = NameAndType        #42:#43       // getValue:()Ljava/lang/Integer;\n+   #93 = Utf8               (Ljava/lang/Object;)I\n+   #94 = Methodref          #1.#95        // org/apache/commons/lang3/mutable/MutableInt.compareTo:(Lorg/apache/commons/lang3/mutable/MutableInt;)I\n+   #95 = NameAndType        #77:#78       // compareTo:(Lorg/apache/commons/lang3/mutable/MutableInt;)I\n    #96 = Utf8               (Ljava/lang/Object;)V\n    #97 = Methodref          #1.#98        // org/apache/commons/lang3/mutable/MutableInt.setValue:(Ljava/lang/Number;)V\n    #98 = NameAndType        #48:#28       // setValue:(Ljava/lang/Number;)V\n-   #99 = Utf8               (Ljava/lang/Object;)I\n-  #100 = Methodref          #1.#101       // org/apache/commons/lang3/mutable/MutableInt.compareTo:(Lorg/apache/commons/lang3/mutable/MutableInt;)I\n-  #101 = NameAndType        #77:#78       // compareTo:(Lorg/apache/commons/lang3/mutable/MutableInt;)I\n+   #99 = Utf8               ()Ljava/lang/Object;\n+  #100 = Methodref          #1.#101       // org/apache/commons/lang3/mutable/MutableInt.getValue:()Ljava/lang/Integer;\n+  #101 = NameAndType        #42:#43       // getValue:()Ljava/lang/Integer;\n   #102 = Utf8               SourceFile\n   #103 = Utf8               MutableInt.java\n   #104 = Utf8               Signature\n   #105 = Utf8               Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/mutable/MutableInt;>;Lorg/apache/commons/lang3/mutable/Mutable<Ljava/lang/Number;>;\n {\n   private static final long serialVersionUID = 512176391864l;\n     descriptor: J\n@@ -708,22 +708,24 @@\n          7: areturn\n       LineNumberTable:\n         line 379: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/lang3/mutable/MutableInt;\n \n-  public java.lang.Object getValue();\n-    descriptor: ()Ljava/lang/Object;\n+  public int compareTo(java.lang.Object);\n+    descriptor: (Ljava/lang/Object;)I\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n-      stack=1, locals=1, args_size=1\n+      stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #94                 // Method getValue:()Ljava/lang/Integer;\n-         4: areturn\n+         1: aload_1\n+         2: checkcast     #1                  // class org/apache/commons/lang3/mutable/MutableInt\n+         5: invokevirtual #94                 // Method compareTo:(Lorg/apache/commons/lang3/mutable/MutableInt;)I\n+         8: ireturn\n       LineNumberTable:\n         line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n \n   public void setValue(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)V\n@@ -736,24 +738,22 @@\n          5: invokevirtual #97                 // Method setValue:(Ljava/lang/Number;)V\n          8: return\n       LineNumberTable:\n         line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n \n-  public int compareTo(java.lang.Object);\n-    descriptor: (Ljava/lang/Object;)I\n+  public java.lang.Object getValue();\n+    descriptor: ()Ljava/lang/Object;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n-      stack=2, locals=2, args_size=2\n+      stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: aload_1\n-         2: checkcast     #1                  // class org/apache/commons/lang3/mutable/MutableInt\n-         5: invokevirtual #100                // Method compareTo:(Lorg/apache/commons/lang3/mutable/MutableInt;)I\n-         8: ireturn\n+         1: invokevirtual #100                // Method getValue:()Ljava/lang/Integer;\n+         4: areturn\n       LineNumberTable:\n         line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n }\n SourceFile: \"MutableInt.java\"\n Signature: #105                         // Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/mutable/MutableInt;>;Lorg/apache/commons/lang3/mutable/Mutable<Ljava/lang/Number;>;\n"}]}
