{"diffoscope-json-version": 1, "source1": "first/DoubleToDecimal.class", "source2": "second/DoubleToDecimal.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,279 +1,279 @@\n-  SHA-256 checksum b7cc2658ba8e19918a894454822706e7baa370ff670336844b5489fda6c1d1e5\n+  SHA-256 checksum 44a53b7daec1b0fd99355094196d3fbe3d522bbc398f6ce78c5ba00f7c5cc225\n   Compiled from \"DoubleToDecimal.java\"\n public final class com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #2                          // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal\n-  super_class: #71                        // java/lang/Object\n+  this_class: #3                          // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal\n+  super_class: #6                         // java/lang/Object\n   interfaces: 0, fields: 24, methods: 20, attributes: 1\n Constant pool:\n-    #1 = Class              #207          // java/lang/Double\n-    #2 = Class              #208          // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal\n-    #3 = Methodref          #71.#209      // java/lang/Object.\"<init>\":()V\n-    #4 = Fieldref           #2.#210       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.bytes:[B\n-    #5 = Methodref          #2.#209       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.\"<init>\":()V\n-    #6 = Methodref          #2.#211       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toDecimalString:(D)Ljava/lang/String;\n-    #7 = Methodref          #2.#212       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.appendDecimalTo:(DLjava/lang/Appendable;)Ljava/lang/Appendable;\n-    #8 = Methodref          #2.#213       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toDecimal:(D)I\n-    #9 = Methodref          #2.#214       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.charsToString:()Ljava/lang/String;\n-   #10 = String             #215          // 0.0\n-   #11 = String             #216          // -0.0\n-   #12 = String             #217          // Infinity\n-   #13 = String             #218          // -Infinity\n-   #14 = String             #219          // NaN\n-   #15 = Fieldref           #2.#220       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.index:I\n-   #16 = Class              #221          // java/lang/StringBuilder\n-   #17 = Methodref          #16.#222      // java/lang/StringBuilder.append:([C)Ljava/lang/StringBuilder;\n-   #18 = Class              #223          // java/lang/StringBuffer\n-   #19 = Methodref          #18.#224      // java/lang/StringBuffer.append:([C)Ljava/lang/StringBuffer;\n-   #20 = InterfaceMethodref #225.#226     // java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n-   #21 = InterfaceMethodref #225.#227     // java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-   #22 = Methodref          #1.#228       // java/lang/Double.doubleToRawLongBits:(D)J\n-   #23 = Long               4503599627370495l\n-   #25 = Methodref          #2.#229       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.append:(I)V\n-   #26 = Long               4503599627370496l\n-   #28 = Methodref          #2.#230       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toChars:(JI)I\n-   #29 = Methodref          #2.#231       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toDecimal:(IJI)I\n-   #30 = Long               3l\n-   #32 = Long               10l\n-   #34 = Long               2l\n-   #36 = Methodref          #232.#233     // com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10pow2:(I)I\n-   #37 = Methodref          #232.#234     // com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10threeQuartersPow2:(I)I\n-   #38 = Methodref          #232.#235     // com/fasterxml/jackson/core/io/schubfach/MathUtils.flog2pow10:(I)I\n-   #39 = Methodref          #232.#236     // com/fasterxml/jackson/core/io/schubfach/MathUtils.g1:(I)J\n-   #40 = Methodref          #232.#237     // com/fasterxml/jackson/core/io/schubfach/MathUtils.g0:(I)J\n-   #41 = Methodref          #2.#238       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.rop:(JJJ)J\n-   #42 = Long               100l\n-   #44 = Long               1844674407370955168l\n-   #46 = Methodref          #232.#239     // com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n-   #47 = Long               9223372036854775807l\n-   #49 = Class              #240          // java/lang/Long\n-   #50 = Methodref          #49.#241      // java/lang/Long.numberOfLeadingZeros:(J)I\n-   #51 = Methodref          #232.#242     // com/fasterxml/jackson/core/io/schubfach/MathUtils.pow10:(I)J\n-   #52 = Long               193428131138340668l\n-   #54 = Long               100000000l\n-   #56 = Long               1441151881l\n-   #58 = Integer            100000000\n-   #59 = Methodref          #2.#243       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toChars1:(IIII)I\n-   #60 = Methodref          #2.#244       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toChars2:(IIII)I\n-   #61 = Methodref          #2.#245       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toChars3:(IIII)I\n-   #62 = Methodref          #2.#246       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.appendDigit:(I)V\n-   #63 = Methodref          #2.#247       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.y:(I)I\n-   #64 = Integer            268435455\n-   #65 = Methodref          #2.#248       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.lowDigits:(I)V\n-   #66 = Methodref          #2.#249       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.append8Digits:(I)V\n-   #67 = Methodref          #2.#250       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.exponent:(I)V\n-   #68 = Methodref          #2.#251       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.removeTrailingZeroes:()V\n-   #69 = Class              #252          // java/lang/String\n-   #70 = Methodref          #69.#253      // java/lang/String.\"<init>\":([BIII)V\n-   #71 = Class              #254          // java/lang/Object\n-   #72 = Utf8               P\n-   #73 = Utf8               I\n-   #74 = Utf8               ConstantValue\n-   #75 = Integer            53\n-   #76 = Utf8               W\n-   #77 = Integer            11\n-   #78 = Utf8               Q_MIN\n-   #79 = Integer            -1074\n-   #80 = Utf8               Q_MAX\n-   #81 = Integer            971\n-   #82 = Utf8               E_MIN\n-   #83 = Integer            -323\n-   #84 = Utf8               E_MAX\n-   #85 = Integer            309\n-   #86 = Utf8               C_TINY\n-   #87 = Utf8               J\n-   #88 = Utf8               K_MIN\n-   #89 = Integer            -324\n-   #90 = Utf8               K_MAX\n-   #91 = Integer            292\n-   #92 = Utf8               H\n-   #93 = Integer            17\n-   #94 = Utf8               C_MIN\n-   #95 = Utf8               BQ_MASK\n-   #96 = Integer            2047\n-   #97 = Utf8               T_MASK\n-   #98 = Utf8               MASK_63\n-   #99 = Utf8               MASK_28\n-  #100 = Utf8               NON_SPECIAL\n-  #101 = Integer            0\n-  #102 = Utf8               PLUS_ZERO\n-  #103 = Integer            1\n-  #104 = Utf8               MINUS_ZERO\n-  #105 = Integer            2\n-  #106 = Utf8               PLUS_INF\n-  #107 = Integer            3\n-  #108 = Utf8               MINUS_INF\n-  #109 = Integer            4\n-  #110 = Utf8               NAN\n-  #111 = Integer            5\n-  #112 = Utf8               MAX_CHARS\n-  #113 = Integer            24\n-  #114 = Utf8               bytes\n-  #115 = Utf8               [B\n-  #116 = Utf8               index\n-  #117 = Utf8               <init>\n-  #118 = Utf8               ()V\n-  #119 = Utf8               Code\n-  #120 = Utf8               LineNumberTable\n-  #121 = Utf8               LocalVariableTable\n-  #122 = Utf8               this\n-  #123 = Utf8               Lcom/fasterxml/jackson/core/io/schubfach/DoubleToDecimal;\n-  #124 = Utf8               toString\n-  #125 = Utf8               (D)Ljava/lang/String;\n-  #126 = Utf8               v\n-  #127 = Utf8               D\n-  #128 = Utf8               appendTo\n-  #129 = Utf8               (DLjava/lang/Appendable;)Ljava/lang/Appendable;\n-  #130 = Utf8               app\n-  #131 = Utf8               Ljava/lang/Appendable;\n-  #132 = Utf8               Exceptions\n-  #133 = Class              #255          // java/io/IOException\n-  #134 = Utf8               toDecimalString\n-  #135 = Utf8               StackMapTable\n-  #136 = Utf8               appendDecimalTo\n-  #137 = Utf8               i\n-  #138 = Utf8               c\n-  #139 = Utf8               C\n-  #140 = Utf8               chars\n-  #141 = Utf8               [C\n-  #142 = Class              #141          // \"[C\"\n-  #143 = Utf8               toDecimal\n-  #144 = Utf8               (D)I\n-  #145 = Utf8               f\n-  #146 = Utf8               mq\n-  #147 = Utf8               bits\n-  #148 = Utf8               t\n-  #149 = Utf8               bq\n-  #150 = Utf8               (IJI)I\n-  #151 = Utf8               cbl\n-  #152 = Utf8               k\n-  #153 = Utf8               sp10\n-  #154 = Utf8               tp10\n-  #155 = Utf8               upin\n-  #156 = Utf8               Z\n-  #157 = Utf8               wpin\n-  #158 = Utf8               q\n-  #159 = Utf8               dk\n-  #160 = Utf8               out\n-  #161 = Utf8               cb\n-  #162 = Utf8               cbr\n-  #163 = Utf8               h\n-  #164 = Utf8               g1\n-  #165 = Utf8               g0\n-  #166 = Utf8               vb\n-  #167 = Utf8               vbl\n-  #168 = Utf8               vbr\n-  #169 = Utf8               s\n-  #170 = Utf8               uin\n-  #171 = Utf8               win\n-  #172 = Utf8               cmp\n-  #173 = Utf8               rop\n-  #174 = Utf8               (JJJ)J\n-  #175 = Utf8               cp\n-  #176 = Utf8               x1\n-  #177 = Utf8               y0\n-  #178 = Utf8               y1\n-  #179 = Utf8               z\n-  #180 = Utf8               vbp\n-  #181 = Utf8               toChars\n-  #182 = Utf8               (JI)I\n-  #183 = Utf8               e\n-  #184 = Utf8               len\n-  #185 = Utf8               hm\n-  #186 = Utf8               l\n-  #187 = Utf8               m\n-  #188 = Utf8               toChars1\n-  #189 = Utf8               (IIII)I\n-  #190 = Utf8               y\n-  #191 = Utf8               toChars2\n-  #192 = Utf8               toChars3\n-  #193 = Utf8               lowDigits\n-  #194 = Utf8               (I)V\n-  #195 = Utf8               append8Digits\n-  #196 = Utf8               removeTrailingZeroes\n-  #197 = Utf8               (I)I\n-  #198 = Utf8               a\n-  #199 = Utf8               exponent\n-  #200 = Utf8               d\n-  #201 = Utf8               append\n-  #202 = Utf8               appendDigit\n-  #203 = Utf8               charsToString\n-  #204 = Utf8               ()Ljava/lang/String;\n-  #205 = Utf8               SourceFile\n-  #206 = Utf8               DoubleToDecimal.java\n-  #207 = Utf8               java/lang/Double\n-  #208 = Utf8               com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal\n-  #209 = NameAndType        #117:#118     // \"<init>\":()V\n-  #210 = NameAndType        #114:#115     // bytes:[B\n-  #211 = NameAndType        #134:#125     // toDecimalString:(D)Ljava/lang/String;\n-  #212 = NameAndType        #136:#129     // appendDecimalTo:(DLjava/lang/Appendable;)Ljava/lang/Appendable;\n-  #213 = NameAndType        #143:#144     // toDecimal:(D)I\n-  #214 = NameAndType        #203:#204     // charsToString:()Ljava/lang/String;\n-  #215 = Utf8               0.0\n-  #216 = Utf8               -0.0\n-  #217 = Utf8               Infinity\n-  #218 = Utf8               -Infinity\n-  #219 = Utf8               NaN\n-  #220 = NameAndType        #116:#73      // index:I\n-  #221 = Utf8               java/lang/StringBuilder\n-  #222 = NameAndType        #201:#256     // append:([C)Ljava/lang/StringBuilder;\n-  #223 = Utf8               java/lang/StringBuffer\n-  #224 = NameAndType        #201:#257     // append:([C)Ljava/lang/StringBuffer;\n-  #225 = Class              #258          // java/lang/Appendable\n-  #226 = NameAndType        #201:#259     // append:(C)Ljava/lang/Appendable;\n-  #227 = NameAndType        #201:#260     // append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-  #228 = NameAndType        #261:#262     // doubleToRawLongBits:(D)J\n-  #229 = NameAndType        #201:#194     // append:(I)V\n-  #230 = NameAndType        #181:#182     // toChars:(JI)I\n-  #231 = NameAndType        #143:#150     // toDecimal:(IJI)I\n-  #232 = Class              #263          // com/fasterxml/jackson/core/io/schubfach/MathUtils\n-  #233 = NameAndType        #264:#197     // flog10pow2:(I)I\n-  #234 = NameAndType        #265:#197     // flog10threeQuartersPow2:(I)I\n-  #235 = NameAndType        #266:#197     // flog2pow10:(I)I\n-  #236 = NameAndType        #164:#267     // g1:(I)J\n-  #237 = NameAndType        #165:#267     // g0:(I)J\n-  #238 = NameAndType        #173:#174     // rop:(JJJ)J\n-  #239 = NameAndType        #268:#269     // multiplyHigh:(JJ)J\n-  #240 = Utf8               java/lang/Long\n-  #241 = NameAndType        #270:#271     // numberOfLeadingZeros:(J)I\n-  #242 = NameAndType        #272:#267     // pow10:(I)J\n-  #243 = NameAndType        #188:#189     // toChars1:(IIII)I\n-  #244 = NameAndType        #191:#189     // toChars2:(IIII)I\n-  #245 = NameAndType        #192:#189     // toChars3:(IIII)I\n-  #246 = NameAndType        #202:#194     // appendDigit:(I)V\n-  #247 = NameAndType        #190:#197     // y:(I)I\n-  #248 = NameAndType        #193:#194     // lowDigits:(I)V\n-  #249 = NameAndType        #195:#194     // append8Digits:(I)V\n-  #250 = NameAndType        #199:#194     // exponent:(I)V\n-  #251 = NameAndType        #196:#118     // removeTrailingZeroes:()V\n-  #252 = Utf8               java/lang/String\n-  #253 = NameAndType        #117:#273     // \"<init>\":([BIII)V\n-  #254 = Utf8               java/lang/Object\n-  #255 = Utf8               java/io/IOException\n-  #256 = Utf8               ([C)Ljava/lang/StringBuilder;\n-  #257 = Utf8               ([C)Ljava/lang/StringBuffer;\n-  #258 = Utf8               java/lang/Appendable\n-  #259 = Utf8               (C)Ljava/lang/Appendable;\n-  #260 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-  #261 = Utf8               doubleToRawLongBits\n-  #262 = Utf8               (D)J\n-  #263 = Utf8               com/fasterxml/jackson/core/io/schubfach/MathUtils\n-  #264 = Utf8               flog10pow2\n-  #265 = Utf8               flog10threeQuartersPow2\n-  #266 = Utf8               flog2pow10\n-  #267 = Utf8               (I)J\n-  #268 = Utf8               multiplyHigh\n-  #269 = Utf8               (JJ)J\n-  #270 = Utf8               numberOfLeadingZeros\n-  #271 = Utf8               (J)I\n-  #272 = Utf8               pow10\n-  #273 = Utf8               ([BIII)V\n+    #1 = Class              #2            // java/lang/Double\n+    #2 = Utf8               java/lang/Double\n+    #3 = Class              #4            // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal\n+    #4 = Utf8               com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal\n+    #5 = Methodref          #6.#7         // java/lang/Object.\"<init>\":()V\n+    #6 = Class              #8            // java/lang/Object\n+    #7 = NameAndType        #9:#10        // \"<init>\":()V\n+    #8 = Utf8               java/lang/Object\n+    #9 = Utf8               <init>\n+   #10 = Utf8               ()V\n+   #11 = Fieldref           #3.#12        // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.bytes:[B\n+   #12 = NameAndType        #13:#14       // bytes:[B\n+   #13 = Utf8               bytes\n+   #14 = Utf8               [B\n+   #15 = Methodref          #3.#7         // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.\"<init>\":()V\n+   #16 = Methodref          #3.#17        // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toDecimalString:(D)Ljava/lang/String;\n+   #17 = NameAndType        #18:#19       // toDecimalString:(D)Ljava/lang/String;\n+   #18 = Utf8               toDecimalString\n+   #19 = Utf8               (D)Ljava/lang/String;\n+   #20 = Methodref          #3.#21        // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.appendDecimalTo:(DLjava/lang/Appendable;)Ljava/lang/Appendable;\n+   #21 = NameAndType        #22:#23       // appendDecimalTo:(DLjava/lang/Appendable;)Ljava/lang/Appendable;\n+   #22 = Utf8               appendDecimalTo\n+   #23 = Utf8               (DLjava/lang/Appendable;)Ljava/lang/Appendable;\n+   #24 = Methodref          #3.#25        // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toDecimal:(D)I\n+   #25 = NameAndType        #26:#27       // toDecimal:(D)I\n+   #26 = Utf8               toDecimal\n+   #27 = Utf8               (D)I\n+   #28 = Methodref          #3.#29        // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.charsToString:()Ljava/lang/String;\n+   #29 = NameAndType        #30:#31       // charsToString:()Ljava/lang/String;\n+   #30 = Utf8               charsToString\n+   #31 = Utf8               ()Ljava/lang/String;\n+   #32 = String             #33           // 0.0\n+   #33 = Utf8               0.0\n+   #34 = String             #35           // -0.0\n+   #35 = Utf8               -0.0\n+   #36 = String             #37           // Infinity\n+   #37 = Utf8               Infinity\n+   #38 = String             #39           // -Infinity\n+   #39 = Utf8               -Infinity\n+   #40 = String             #41           // NaN\n+   #41 = Utf8               NaN\n+   #42 = Fieldref           #3.#43        // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.index:I\n+   #43 = NameAndType        #44:#45       // index:I\n+   #44 = Utf8               index\n+   #45 = Utf8               I\n+   #46 = Class              #47           // java/lang/StringBuilder\n+   #47 = Utf8               java/lang/StringBuilder\n+   #48 = Methodref          #46.#49       // java/lang/StringBuilder.append:([C)Ljava/lang/StringBuilder;\n+   #49 = NameAndType        #50:#51       // append:([C)Ljava/lang/StringBuilder;\n+   #50 = Utf8               append\n+   #51 = Utf8               ([C)Ljava/lang/StringBuilder;\n+   #52 = Class              #53           // java/lang/StringBuffer\n+   #53 = Utf8               java/lang/StringBuffer\n+   #54 = Methodref          #52.#55       // java/lang/StringBuffer.append:([C)Ljava/lang/StringBuffer;\n+   #55 = NameAndType        #50:#56       // append:([C)Ljava/lang/StringBuffer;\n+   #56 = Utf8               ([C)Ljava/lang/StringBuffer;\n+   #57 = InterfaceMethodref #58.#59       // java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+   #58 = Class              #60           // java/lang/Appendable\n+   #59 = NameAndType        #50:#61       // append:(C)Ljava/lang/Appendable;\n+   #60 = Utf8               java/lang/Appendable\n+   #61 = Utf8               (C)Ljava/lang/Appendable;\n+   #62 = InterfaceMethodref #58.#63       // java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+   #63 = NameAndType        #50:#64       // append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+   #64 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+   #65 = Methodref          #1.#66        // java/lang/Double.doubleToRawLongBits:(D)J\n+   #66 = NameAndType        #67:#68       // doubleToRawLongBits:(D)J\n+   #67 = Utf8               doubleToRawLongBits\n+   #68 = Utf8               (D)J\n+   #69 = Long               4503599627370495l\n+   #71 = Methodref          #3.#72        // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.append:(I)V\n+   #72 = NameAndType        #50:#73       // append:(I)V\n+   #73 = Utf8               (I)V\n+   #74 = Long               4503599627370496l\n+   #76 = Methodref          #3.#77        // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toChars:(JI)I\n+   #77 = NameAndType        #78:#79       // toChars:(JI)I\n+   #78 = Utf8               toChars\n+   #79 = Utf8               (JI)I\n+   #80 = Methodref          #3.#81        // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toDecimal:(IJI)I\n+   #81 = NameAndType        #26:#82       // toDecimal:(IJI)I\n+   #82 = Utf8               (IJI)I\n+   #83 = Long               3l\n+   #85 = Long               10l\n+   #87 = Long               2l\n+   #89 = Methodref          #90.#91       // com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10pow2:(I)I\n+   #90 = Class              #92           // com/fasterxml/jackson/core/io/schubfach/MathUtils\n+   #91 = NameAndType        #93:#94       // flog10pow2:(I)I\n+   #92 = Utf8               com/fasterxml/jackson/core/io/schubfach/MathUtils\n+   #93 = Utf8               flog10pow2\n+   #94 = Utf8               (I)I\n+   #95 = Methodref          #90.#96       // com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10threeQuartersPow2:(I)I\n+   #96 = NameAndType        #97:#94       // flog10threeQuartersPow2:(I)I\n+   #97 = Utf8               flog10threeQuartersPow2\n+   #98 = Methodref          #90.#99       // com/fasterxml/jackson/core/io/schubfach/MathUtils.flog2pow10:(I)I\n+   #99 = NameAndType        #100:#94      // flog2pow10:(I)I\n+  #100 = Utf8               flog2pow10\n+  #101 = Methodref          #90.#102      // com/fasterxml/jackson/core/io/schubfach/MathUtils.g1:(I)J\n+  #102 = NameAndType        #103:#104     // g1:(I)J\n+  #103 = Utf8               g1\n+  #104 = Utf8               (I)J\n+  #105 = Methodref          #90.#106      // com/fasterxml/jackson/core/io/schubfach/MathUtils.g0:(I)J\n+  #106 = NameAndType        #107:#104     // g0:(I)J\n+  #107 = Utf8               g0\n+  #108 = Methodref          #3.#109       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.rop:(JJJ)J\n+  #109 = NameAndType        #110:#111     // rop:(JJJ)J\n+  #110 = Utf8               rop\n+  #111 = Utf8               (JJJ)J\n+  #112 = Long               100l\n+  #114 = Long               1844674407370955168l\n+  #116 = Methodref          #90.#117      // com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n+  #117 = NameAndType        #118:#119     // multiplyHigh:(JJ)J\n+  #118 = Utf8               multiplyHigh\n+  #119 = Utf8               (JJ)J\n+  #120 = Long               9223372036854775807l\n+  #122 = Class              #123          // java/lang/Long\n+  #123 = Utf8               java/lang/Long\n+  #124 = Methodref          #122.#125     // java/lang/Long.numberOfLeadingZeros:(J)I\n+  #125 = NameAndType        #126:#127     // numberOfLeadingZeros:(J)I\n+  #126 = Utf8               numberOfLeadingZeros\n+  #127 = Utf8               (J)I\n+  #128 = Methodref          #90.#129      // com/fasterxml/jackson/core/io/schubfach/MathUtils.pow10:(I)J\n+  #129 = NameAndType        #130:#104     // pow10:(I)J\n+  #130 = Utf8               pow10\n+  #131 = Long               193428131138340668l\n+  #133 = Long               100000000l\n+  #135 = Long               1441151881l\n+  #137 = Integer            100000000\n+  #138 = Methodref          #3.#139       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toChars1:(IIII)I\n+  #139 = NameAndType        #140:#141     // toChars1:(IIII)I\n+  #140 = Utf8               toChars1\n+  #141 = Utf8               (IIII)I\n+  #142 = Methodref          #3.#143       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toChars2:(IIII)I\n+  #143 = NameAndType        #144:#141     // toChars2:(IIII)I\n+  #144 = Utf8               toChars2\n+  #145 = Methodref          #3.#146       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toChars3:(IIII)I\n+  #146 = NameAndType        #147:#141     // toChars3:(IIII)I\n+  #147 = Utf8               toChars3\n+  #148 = Methodref          #3.#149       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.appendDigit:(I)V\n+  #149 = NameAndType        #150:#73      // appendDigit:(I)V\n+  #150 = Utf8               appendDigit\n+  #151 = Methodref          #3.#152       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.y:(I)I\n+  #152 = NameAndType        #153:#94      // y:(I)I\n+  #153 = Utf8               y\n+  #154 = Integer            268435455\n+  #155 = Methodref          #3.#156       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.lowDigits:(I)V\n+  #156 = NameAndType        #157:#73      // lowDigits:(I)V\n+  #157 = Utf8               lowDigits\n+  #158 = Methodref          #3.#159       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.append8Digits:(I)V\n+  #159 = NameAndType        #160:#73      // append8Digits:(I)V\n+  #160 = Utf8               append8Digits\n+  #161 = Methodref          #3.#162       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.exponent:(I)V\n+  #162 = NameAndType        #163:#73      // exponent:(I)V\n+  #163 = Utf8               exponent\n+  #164 = Methodref          #3.#165       // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.removeTrailingZeroes:()V\n+  #165 = NameAndType        #166:#10      // removeTrailingZeroes:()V\n+  #166 = Utf8               removeTrailingZeroes\n+  #167 = Class              #168          // java/lang/String\n+  #168 = Utf8               java/lang/String\n+  #169 = Methodref          #167.#170     // java/lang/String.\"<init>\":([BIII)V\n+  #170 = NameAndType        #9:#171       // \"<init>\":([BIII)V\n+  #171 = Utf8               ([BIII)V\n+  #172 = Utf8               P\n+  #173 = Utf8               ConstantValue\n+  #174 = Integer            53\n+  #175 = Utf8               W\n+  #176 = Integer            11\n+  #177 = Utf8               Q_MIN\n+  #178 = Integer            -1074\n+  #179 = Utf8               Q_MAX\n+  #180 = Integer            971\n+  #181 = Utf8               E_MIN\n+  #182 = Integer            -323\n+  #183 = Utf8               E_MAX\n+  #184 = Integer            309\n+  #185 = Utf8               C_TINY\n+  #186 = Utf8               J\n+  #187 = Utf8               K_MIN\n+  #188 = Integer            -324\n+  #189 = Utf8               K_MAX\n+  #190 = Integer            292\n+  #191 = Utf8               H\n+  #192 = Integer            17\n+  #193 = Utf8               C_MIN\n+  #194 = Utf8               BQ_MASK\n+  #195 = Integer            2047\n+  #196 = Utf8               T_MASK\n+  #197 = Utf8               MASK_63\n+  #198 = Utf8               MASK_28\n+  #199 = Utf8               NON_SPECIAL\n+  #200 = Integer            0\n+  #201 = Utf8               PLUS_ZERO\n+  #202 = Integer            1\n+  #203 = Utf8               MINUS_ZERO\n+  #204 = Integer            2\n+  #205 = Utf8               PLUS_INF\n+  #206 = Integer            3\n+  #207 = Utf8               MINUS_INF\n+  #208 = Integer            4\n+  #209 = Utf8               NAN\n+  #210 = Integer            5\n+  #211 = Utf8               MAX_CHARS\n+  #212 = Integer            24\n+  #213 = Utf8               Code\n+  #214 = Utf8               LineNumberTable\n+  #215 = Utf8               LocalVariableTable\n+  #216 = Utf8               this\n+  #217 = Utf8               Lcom/fasterxml/jackson/core/io/schubfach/DoubleToDecimal;\n+  #218 = Utf8               toString\n+  #219 = Utf8               v\n+  #220 = Utf8               D\n+  #221 = Utf8               appendTo\n+  #222 = Utf8               app\n+  #223 = Utf8               Ljava/lang/Appendable;\n+  #224 = Utf8               Exceptions\n+  #225 = Class              #226          // java/io/IOException\n+  #226 = Utf8               java/io/IOException\n+  #227 = Utf8               StackMapTable\n+  #228 = Utf8               i\n+  #229 = Utf8               c\n+  #230 = Utf8               C\n+  #231 = Utf8               chars\n+  #232 = Utf8               [C\n+  #233 = Class              #232          // \"[C\"\n+  #234 = Utf8               f\n+  #235 = Utf8               mq\n+  #236 = Utf8               bits\n+  #237 = Utf8               t\n+  #238 = Utf8               bq\n+  #239 = Utf8               cbl\n+  #240 = Utf8               k\n+  #241 = Utf8               sp10\n+  #242 = Utf8               tp10\n+  #243 = Utf8               upin\n+  #244 = Utf8               Z\n+  #245 = Utf8               wpin\n+  #246 = Utf8               q\n+  #247 = Utf8               dk\n+  #248 = Utf8               out\n+  #249 = Utf8               cb\n+  #250 = Utf8               cbr\n+  #251 = Utf8               h\n+  #252 = Utf8               vb\n+  #253 = Utf8               vbl\n+  #254 = Utf8               vbr\n+  #255 = Utf8               s\n+  #256 = Utf8               uin\n+  #257 = Utf8               win\n+  #258 = Utf8               cmp\n+  #259 = Utf8               cp\n+  #260 = Utf8               x1\n+  #261 = Utf8               y0\n+  #262 = Utf8               y1\n+  #263 = Utf8               z\n+  #264 = Utf8               vbp\n+  #265 = Utf8               e\n+  #266 = Utf8               len\n+  #267 = Utf8               hm\n+  #268 = Utf8               l\n+  #269 = Utf8               m\n+  #270 = Utf8               a\n+  #271 = Utf8               d\n+  #272 = Utf8               SourceFile\n+  #273 = Utf8               DoubleToDecimal.java\n {\n   static final int P = 53;\n     descriptor: I\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n     ConstantValue: int 53\n \n   private static final int W = 11;\n@@ -391,56 +391,56 @@\n \n   private com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #3                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #5                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: bipush        24\n          7: newarray       byte\n-         9: putfield      #4                  // Field bytes:[B\n+         9: putfield      #11                 // Field bytes:[B\n         12: return\n       LineNumberTable:\n         line 117: 0\n         line 112: 4\n         line 118: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lcom/fasterxml/jackson/core/io/schubfach/DoubleToDecimal;\n \n   public static java.lang.String toString(double);\n     descriptor: (D)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=1\n-         0: new           #2                  // class com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal\n+         0: new           #3                  // class com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal\n          3: dup\n-         4: invokespecial #5                  // Method \"<init>\":()V\n+         4: invokespecial #15                 // Method \"<init>\":()V\n          7: dload_0\n-         8: invokespecial #6                  // Method toDecimalString:(D)Ljava/lang/String;\n+         8: invokespecial #16                 // Method toDecimalString:(D)Ljava/lang/String;\n         11: areturn\n       LineNumberTable:\n         line 129: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0     v   D\n \n   public static java.lang.Appendable appendTo(double, java.lang.Appendable) throws java.io.IOException;\n     descriptor: (DLjava/lang/Appendable;)Ljava/lang/Appendable;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=2\n-         0: new           #2                  // class com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal\n+         0: new           #3                  // class com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal\n          3: dup\n-         4: invokespecial #5                  // Method \"<init>\":()V\n+         4: invokespecial #15                 // Method \"<init>\":()V\n          7: dload_0\n          8: aload_2\n-         9: invokespecial #7                  // Method appendDecimalTo:(DLjava/lang/Appendable;)Ljava/lang/Appendable;\n+         9: invokespecial #20                 // Method appendDecimalTo:(DLjava/lang/Appendable;)Ljava/lang/Appendable;\n         12: areturn\n       LineNumberTable:\n         line 145: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0     v   D\n             0      13     2   app   Ljava/lang/Appendable;\n@@ -450,35 +450,35 @@\n   private java.lang.String toDecimalString(double);\n     descriptor: (D)Ljava/lang/String;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: dload_1\n-         2: invokespecial #8                  // Method toDecimal:(D)I\n+         2: invokespecial #24                 // Method toDecimal:(D)I\n          5: tableswitch   { // 0 to 4\n                        0: 40\n                        1: 45\n                        2: 48\n                        3: 51\n                        4: 54\n                  default: 57\n             }\n         40: aload_0\n-        41: invokespecial #9                  // Method charsToString:()Ljava/lang/String;\n+        41: invokespecial #28                 // Method charsToString:()Ljava/lang/String;\n         44: areturn\n-        45: ldc           #10                 // String 0.0\n+        45: ldc           #32                 // String 0.0\n         47: areturn\n-        48: ldc           #11                 // String -0.0\n+        48: ldc           #34                 // String -0.0\n         50: areturn\n-        51: ldc           #12                 // String Infinity\n+        51: ldc           #36                 // String Infinity\n         53: areturn\n-        54: ldc           #13                 // String -Infinity\n+        54: ldc           #38                 // String -Infinity\n         56: areturn\n-        57: ldc           #14                 // String NaN\n+        57: ldc           #40                 // String NaN\n         59: areturn\n       LineNumberTable:\n         line 149: 0\n         line 150: 40\n         line 151: 45\n         line 152: 48\n         line 153: 51\n@@ -499,60 +499,60 @@\n   private java.lang.Appendable appendDecimalTo(double, java.lang.Appendable) throws java.io.IOException;\n     descriptor: (DLjava/lang/Appendable;)Ljava/lang/Appendable;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=9, args_size=3\n          0: aload_0\n          1: dload_1\n-         2: invokespecial #8                  // Method toDecimal:(D)I\n+         2: invokespecial #24                 // Method toDecimal:(D)I\n          5: tableswitch   { // 0 to 4\n                        0: 40\n                        1: 157\n                        2: 166\n                        3: 175\n                        4: 184\n                  default: 193\n             }\n         40: aload_0\n-        41: getfield      #15                 // Field index:I\n+        41: getfield      #42                 // Field index:I\n         44: iconst_1\n         45: iadd\n         46: newarray       char\n         48: astore        4\n         50: iconst_0\n         51: istore        5\n         53: iload         5\n         55: aload         4\n         57: arraylength\n         58: if_icmpge     80\n         61: aload         4\n         63: iload         5\n         65: aload_0\n-        66: getfield      #4                  // Field bytes:[B\n+        66: getfield      #11                 // Field bytes:[B\n         69: iload         5\n         71: baload\n         72: i2c\n         73: castore\n         74: iinc          5, 1\n         77: goto          53\n         80: aload_3\n-        81: instanceof    #16                 // class java/lang/StringBuilder\n+        81: instanceof    #46                 // class java/lang/StringBuilder\n         84: ifeq          97\n         87: aload_3\n-        88: checkcast     #16                 // class java/lang/StringBuilder\n+        88: checkcast     #46                 // class java/lang/StringBuilder\n         91: aload         4\n-        93: invokevirtual #17                 // Method java/lang/StringBuilder.append:([C)Ljava/lang/StringBuilder;\n+        93: invokevirtual #48                 // Method java/lang/StringBuilder.append:([C)Ljava/lang/StringBuilder;\n         96: areturn\n         97: aload_3\n-        98: instanceof    #18                 // class java/lang/StringBuffer\n+        98: instanceof    #52                 // class java/lang/StringBuffer\n        101: ifeq          114\n        104: aload_3\n-       105: checkcast     #18                 // class java/lang/StringBuffer\n+       105: checkcast     #52                 // class java/lang/StringBuffer\n        108: aload         4\n-       110: invokevirtual #19                 // Method java/lang/StringBuffer.append:([C)Ljava/lang/StringBuffer;\n+       110: invokevirtual #54                 // Method java/lang/StringBuffer.append:([C)Ljava/lang/StringBuffer;\n        113: areturn\n        114: aload         4\n        116: astore        5\n        118: aload         5\n        120: arraylength\n        121: istore        6\n        123: iconst_0\n@@ -562,39 +562,39 @@\n        130: if_icmpge     155\n        133: aload         5\n        135: iload         7\n        137: caload\n        138: istore        8\n        140: aload_3\n        141: iload         8\n-       143: invokeinterface #20,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+       143: invokeinterface #57,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n        148: pop\n        149: iinc          7, 1\n        152: goto          126\n        155: aload_3\n        156: areturn\n        157: aload_3\n-       158: ldc           #10                 // String 0.0\n-       160: invokeinterface #21,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+       158: ldc           #32                 // String 0.0\n+       160: invokeinterface #62,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n        165: areturn\n        166: aload_3\n-       167: ldc           #11                 // String -0.0\n-       169: invokeinterface #21,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+       167: ldc           #34                 // String -0.0\n+       169: invokeinterface #62,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n        174: areturn\n        175: aload_3\n-       176: ldc           #12                 // String Infinity\n-       178: invokeinterface #21,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+       176: ldc           #36                 // String Infinity\n+       178: invokeinterface #62,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n        183: areturn\n        184: aload_3\n-       185: ldc           #13                 // String -Infinity\n-       187: invokeinterface #21,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+       185: ldc           #38                 // String -Infinity\n+       187: invokeinterface #62,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n        192: areturn\n        193: aload_3\n-       194: ldc           #14                 // String NaN\n-       196: invokeinterface #21,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+       194: ldc           #40                 // String NaN\n+       196: invokeinterface #62,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n        201: areturn\n       LineNumberTable:\n         line 161: 0\n         line 163: 40\n         line 164: 50\n         line 165: 61\n         line 164: 74\n@@ -644,47 +644,47 @@\n \n   private int toDecimal(double);\n     descriptor: (D)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=6, locals=13, args_size=2\n          0: dload_1\n-         1: invokestatic  #22                 // Method java/lang/Double.doubleToRawLongBits:(D)J\n+         1: invokestatic  #65                 // Method java/lang/Double.doubleToRawLongBits:(D)J\n          4: lstore_3\n          5: lload_3\n-         6: ldc2_w        #23                 // long 4503599627370495l\n+         6: ldc2_w        #69                 // long 4503599627370495l\n          9: land\n         10: lstore        5\n         12: lload_3\n         13: bipush        52\n         15: lushr\n         16: l2i\n         17: sipush        2047\n         20: iand\n         21: istore        7\n         23: iload         7\n         25: sipush        2047\n         28: if_icmpge     189\n         31: aload_0\n         32: iconst_m1\n-        33: putfield      #15                 // Field index:I\n+        33: putfield      #42                 // Field index:I\n         36: lload_3\n         37: lconst_0\n         38: lcmp\n         39: ifge          48\n         42: aload_0\n         43: bipush        45\n-        45: invokespecial #25                 // Method append:(I)V\n+        45: invokespecial #71                 // Method append:(I)V\n         48: iload         7\n         50: ifeq          133\n         53: sipush        1075\n         56: iload         7\n         58: isub\n         59: istore        8\n-        61: ldc2_w        #26                 // long 4503599627370496l\n+        61: ldc2_w        #74                 // long 4503599627370496l\n         64: lload         5\n         66: lor\n         67: lstore        9\n         69: iconst_0\n         70: iload         8\n         72: if_icmpge     79\n         75: iconst_1\n@@ -707,44 +707,44 @@\n        107: lshl\n        108: lload         9\n        110: lcmp\n        111: ifne          122\n        114: aload_0\n        115: lload         11\n        117: iconst_0\n-       118: invokespecial #28                 // Method toChars:(JI)I\n+       118: invokespecial #76                 // Method toChars:(JI)I\n        121: ireturn\n        122: aload_0\n        123: iload         8\n        125: ineg\n        126: lload         9\n        128: iconst_0\n-       129: invokespecial #29                 // Method toDecimal:(IJI)I\n+       129: invokespecial #80                 // Method toDecimal:(IJI)I\n        132: ireturn\n        133: lload         5\n        135: lconst_0\n        136: lcmp\n        137: ifeq          177\n        140: lload         5\n-       142: ldc2_w        #30                 // long 3l\n+       142: ldc2_w        #83                 // long 3l\n        145: lcmp\n        146: ifge          166\n        149: aload_0\n        150: sipush        -1074\n-       153: ldc2_w        #32                 // long 10l\n+       153: ldc2_w        #85                 // long 10l\n        156: lload         5\n        158: lmul\n        159: iconst_m1\n-       160: invokespecial #29                 // Method toDecimal:(IJI)I\n+       160: invokespecial #80                 // Method toDecimal:(IJI)I\n        163: goto          176\n        166: aload_0\n        167: sipush        -1074\n        170: lload         5\n        172: iconst_0\n-       173: invokespecial #29                 // Method toDecimal:(IJI)I\n+       173: invokespecial #80                 // Method toDecimal:(IJI)I\n        176: ireturn\n        177: lload_3\n        178: lconst_0\n        179: lcmp\n        180: ifne          187\n        183: iconst_1\n        184: goto          188\n@@ -841,98 +841,98 @@\n          3: iand\n          4: istore        5\n          6: lload_2\n          7: iconst_2\n          8: lshl\n          9: lstore        6\n         11: lload         6\n-        13: ldc2_w        #34                 // long 2l\n+        13: ldc2_w        #87                 // long 2l\n         16: ladd\n         17: lstore        8\n         19: lload_2\n-        20: ldc2_w        #26                 // long 4503599627370496l\n+        20: ldc2_w        #74                 // long 4503599627370496l\n         23: lcmp\n         24: ifeq          31\n         27: iconst_1\n         28: goto          32\n         31: iconst_0\n         32: iload_1\n         33: sipush        -1074\n         36: if_icmpne     43\n         39: iconst_1\n         40: goto          44\n         43: iconst_0\n         44: ior\n         45: ifeq          65\n         48: lload         6\n-        50: ldc2_w        #34                 // long 2l\n+        50: ldc2_w        #87                 // long 2l\n         53: lsub\n         54: lstore        10\n         56: iload_1\n-        57: invokestatic  #36                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10pow2:(I)I\n+        57: invokestatic  #89                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10pow2:(I)I\n         60: istore        12\n         62: goto          77\n         65: lload         6\n         67: lconst_1\n         68: lsub\n         69: lstore        10\n         71: iload_1\n-        72: invokestatic  #37                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10threeQuartersPow2:(I)I\n+        72: invokestatic  #95                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10threeQuartersPow2:(I)I\n         75: istore        12\n         77: iload_1\n         78: iload         12\n         80: ineg\n-        81: invokestatic  #38                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog2pow10:(I)I\n+        81: invokestatic  #98                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog2pow10:(I)I\n         84: iadd\n         85: iconst_2\n         86: iadd\n         87: istore        13\n         89: iload         12\n-        91: invokestatic  #39                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.g1:(I)J\n+        91: invokestatic  #101                // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.g1:(I)J\n         94: lstore        14\n         96: iload         12\n-        98: invokestatic  #40                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.g0:(I)J\n+        98: invokestatic  #105                // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.g0:(I)J\n        101: lstore        16\n        103: lload         14\n        105: lload         16\n        107: lload         6\n        109: iload         13\n        111: lshl\n-       112: invokestatic  #41                 // Method rop:(JJJ)J\n+       112: invokestatic  #108                // Method rop:(JJJ)J\n        115: lstore        18\n        117: lload         14\n        119: lload         16\n        121: lload         10\n        123: iload         13\n        125: lshl\n-       126: invokestatic  #41                 // Method rop:(JJJ)J\n+       126: invokestatic  #108                // Method rop:(JJJ)J\n        129: lstore        20\n        131: lload         14\n        133: lload         16\n        135: lload         8\n        137: iload         13\n        139: lshl\n-       140: invokestatic  #41                 // Method rop:(JJJ)J\n+       140: invokestatic  #108                // Method rop:(JJJ)J\n        143: lstore        22\n        145: lload         18\n        147: iconst_2\n        148: lshr\n        149: lstore        24\n        151: lload         24\n-       153: ldc2_w        #42                 // long 100l\n+       153: ldc2_w        #112                // long 100l\n        156: lcmp\n        157: iflt          250\n-       160: ldc2_w        #32                 // long 10l\n+       160: ldc2_w        #85                 // long 10l\n        163: lload         24\n-       165: ldc2_w        #44                 // long 1844674407370955168l\n-       168: invokestatic  #46                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n+       165: ldc2_w        #114                // long 1844674407370955168l\n+       168: invokestatic  #116                // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n        171: lmul\n        172: lstore        26\n        174: lload         26\n-       176: ldc2_w        #32                 // long 10l\n+       176: ldc2_w        #85                 // long 10l\n        179: ladd\n        180: lstore        28\n        182: lload         20\n        184: iload         5\n        186: i2l\n        187: ladd\n        188: lload         26\n@@ -963,15 +963,15 @@\n        231: aload_0\n        232: iload         30\n        234: ifeq          242\n        237: lload         26\n        239: goto          244\n        242: lload         28\n        244: iload         12\n-       246: invokespecial #28                 // Method toChars:(JI)I\n+       246: invokespecial #76                 // Method toChars:(JI)I\n        249: ireturn\n        250: lload         24\n        252: lconst_1\n        253: ladd\n        254: lstore        26\n        256: lload         20\n        258: iload         5\n@@ -1007,15 +1007,15 @@\n        308: ifeq          316\n        311: lload         24\n        313: goto          318\n        316: lload         26\n        318: iload         12\n        320: iload         4\n        322: iadd\n-       323: invokespecial #28                 // Method toChars:(JI)I\n+       323: invokespecial #76                 // Method toChars:(JI)I\n        326: ireturn\n        327: lload         18\n        329: lload         24\n        331: lload         26\n        333: ladd\n        334: iconst_1\n        335: lshl\n@@ -1038,15 +1038,15 @@\n        360: ifne          368\n        363: lload         24\n        365: goto          370\n        368: lload         26\n        370: iload         12\n        372: iload         4\n        374: iadd\n-       375: invokespecial #28                 // Method toChars:(JI)I\n+       375: invokespecial #76                 // Method toChars:(JI)I\n        378: ireturn\n       LineNumberTable:\n         line 256: 0\n         line 257: 6\n         line 258: 11\n         line 266: 19\n         line 268: 48\n@@ -1174,23 +1174,23 @@\n   private static long rop(long, long, long);\n     descriptor: (JJJ)J\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=6, locals=16, args_size=3\n          0: lload_2\n          1: lload         4\n-         3: invokestatic  #46                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n+         3: invokestatic  #116                // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n          6: lstore        6\n          8: lload_0\n          9: lload         4\n         11: lmul\n         12: lstore        8\n         14: lload_0\n         15: lload         4\n-        17: invokestatic  #46                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n+        17: invokestatic  #116                // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n         20: lstore        10\n         22: lload         8\n         24: iconst_1\n         25: lushr\n         26: lload         6\n         28: ladd\n         29: lstore        12\n@@ -1198,17 +1198,17 @@\n         33: lload         12\n         35: bipush        63\n         37: lushr\n         38: ladd\n         39: lstore        14\n         41: lload         14\n         43: lload         12\n-        45: ldc2_w        #47                 // long 9223372036854775807l\n+        45: ldc2_w        #120                // long 9223372036854775807l\n         48: land\n-        49: ldc2_w        #47                 // long 9223372036854775807l\n+        49: ldc2_w        #120                // long 9223372036854775807l\n         52: ladd\n         53: bipush        63\n         55: lushr\n         56: lor\n         57: lreturn\n       LineNumberTable:\n         line 333: 0\n@@ -1231,57 +1231,57 @@\n   private int toChars(long, int);\n     descriptor: (JI)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=6, locals=10, args_size=3\n          0: bipush        64\n          2: lload_1\n-         3: invokestatic  #50                 // Method java/lang/Long.numberOfLeadingZeros:(J)I\n+         3: invokestatic  #124                // Method java/lang/Long.numberOfLeadingZeros:(J)I\n          6: isub\n-         7: invokestatic  #36                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10pow2:(I)I\n+         7: invokestatic  #89                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10pow2:(I)I\n         10: istore        4\n         12: lload_1\n         13: iload         4\n-        15: invokestatic  #51                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.pow10:(I)J\n+        15: invokestatic  #128                // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.pow10:(I)J\n         18: lcmp\n         19: iflt          25\n         22: iinc          4, 1\n         25: lload_1\n         26: bipush        17\n         28: iload         4\n         30: isub\n-        31: invokestatic  #51                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.pow10:(I)J\n+        31: invokestatic  #128                // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.pow10:(I)J\n         34: lmul\n         35: lstore_1\n         36: iload_3\n         37: iload         4\n         39: iadd\n         40: istore_3\n         41: lload_1\n-        42: ldc2_w        #52                 // long 193428131138340668l\n-        45: invokestatic  #46                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n+        42: ldc2_w        #131                // long 193428131138340668l\n+        45: invokestatic  #116                // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n         48: bipush        20\n         50: lushr\n         51: lstore        5\n         53: lload_1\n-        54: ldc2_w        #54                 // long 100000000l\n+        54: ldc2_w        #133                // long 100000000l\n         57: lload         5\n         59: lmul\n         60: lsub\n         61: l2i\n         62: istore        7\n         64: lload         5\n-        66: ldc2_w        #56                 // long 1441151881l\n+        66: ldc2_w        #135                // long 1441151881l\n         69: lmul\n         70: bipush        57\n         72: lushr\n         73: l2i\n         74: istore        8\n         76: lload         5\n-        78: ldc           #58                 // int 100000000\n+        78: ldc           #137                // int 100000000\n         80: iload         8\n         82: imul\n         83: i2l\n         84: lsub\n         85: l2i\n         86: istore        9\n         88: iconst_0\n@@ -1291,34 +1291,34 @@\n         94: bipush        7\n         96: if_icmpgt     111\n         99: aload_0\n        100: iload         8\n        102: iload         9\n        104: iload         7\n        106: iload_3\n-       107: invokespecial #59                 // Method toChars1:(IIII)I\n+       107: invokespecial #138                // Method toChars1:(IIII)I\n        110: ireturn\n        111: bipush        -3\n        113: iload_3\n        114: if_icmpge     133\n        117: iload_3\n        118: ifgt          133\n        121: aload_0\n        122: iload         8\n        124: iload         9\n        126: iload         7\n        128: iload_3\n-       129: invokespecial #60                 // Method toChars2:(IIII)I\n+       129: invokespecial #142                // Method toChars2:(IIII)I\n        132: ireturn\n        133: aload_0\n        134: iload         8\n        136: iload         9\n        138: iload         7\n        140: iload_3\n-       141: invokespecial #61                 // Method toChars3:(IIII)I\n+       141: invokespecial #145                // Method toChars3:(IIII)I\n        144: ireturn\n       LineNumberTable:\n         line 351: 0\n         line 352: 12\n         line 353: 22\n         line 362: 25\n         line 363: 36\n@@ -1354,63 +1354,63 @@\n   private int toChars1(int, int, int, int);\n     descriptor: (IIII)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=8, args_size=5\n          0: aload_0\n          1: iload_1\n-         2: invokespecial #62                 // Method appendDigit:(I)V\n+         2: invokespecial #148                // Method appendDigit:(I)V\n          5: aload_0\n          6: iload_2\n-         7: invokespecial #63                 // Method y:(I)I\n+         7: invokespecial #151                // Method y:(I)I\n         10: istore        5\n         12: iconst_1\n         13: istore        7\n         15: iload         7\n         17: iload         4\n         19: if_icmpge     51\n         22: bipush        10\n         24: iload         5\n         26: imul\n         27: istore        6\n         29: aload_0\n         30: iload         6\n         32: bipush        28\n         34: iushr\n-        35: invokespecial #62                 // Method appendDigit:(I)V\n+        35: invokespecial #148                // Method appendDigit:(I)V\n         38: iload         6\n-        40: ldc           #64                 // int 268435455\n+        40: ldc           #154                // int 268435455\n         42: iand\n         43: istore        5\n         45: iinc          7, 1\n         48: goto          15\n         51: aload_0\n         52: bipush        46\n-        54: invokespecial #25                 // Method append:(I)V\n+        54: invokespecial #71                 // Method append:(I)V\n         57: iload         7\n         59: bipush        8\n         61: if_icmpgt     93\n         64: bipush        10\n         66: iload         5\n         68: imul\n         69: istore        6\n         71: aload_0\n         72: iload         6\n         74: bipush        28\n         76: iushr\n-        77: invokespecial #62                 // Method appendDigit:(I)V\n+        77: invokespecial #148                // Method appendDigit:(I)V\n         80: iload         6\n-        82: ldc           #64                 // int 268435455\n+        82: ldc           #154                // int 268435455\n         84: iand\n         85: istore        5\n         87: iinc          7, 1\n         90: goto          57\n         93: aload_0\n         94: iload_3\n-        95: invokespecial #65                 // Method lowDigits:(I)V\n+        95: invokespecial #155                // Method lowDigits:(I)V\n         98: iconst_0\n         99: ireturn\n       LineNumberTable:\n         line 399: 0\n         line 400: 5\n         line 402: 12\n         line 403: 15\n@@ -1448,34 +1448,34 @@\n   private int toChars2(int, int, int, int);\n     descriptor: (IIII)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=5, args_size=5\n          0: aload_0\n          1: iconst_0\n-         2: invokespecial #62                 // Method appendDigit:(I)V\n+         2: invokespecial #148                // Method appendDigit:(I)V\n          5: aload_0\n          6: bipush        46\n-         8: invokespecial #25                 // Method append:(I)V\n+         8: invokespecial #71                 // Method append:(I)V\n         11: iload         4\n         13: ifge          27\n         16: aload_0\n         17: iconst_0\n-        18: invokespecial #62                 // Method appendDigit:(I)V\n+        18: invokespecial #148                // Method appendDigit:(I)V\n         21: iinc          4, 1\n         24: goto          11\n         27: aload_0\n         28: iload_1\n-        29: invokespecial #62                 // Method appendDigit:(I)V\n+        29: invokespecial #148                // Method appendDigit:(I)V\n         32: aload_0\n         33: iload_2\n-        34: invokespecial #66                 // Method append8Digits:(I)V\n+        34: invokespecial #158                // Method append8Digits:(I)V\n         37: aload_0\n         38: iload_3\n-        39: invokespecial #65                 // Method lowDigits:(I)V\n+        39: invokespecial #155                // Method lowDigits:(I)V\n         42: iconst_0\n         43: ireturn\n       LineNumberTable:\n         line 420: 0\n         line 421: 5\n         line 422: 11\n         line 423: 16\n@@ -1498,29 +1498,29 @@\n   private int toChars3(int, int, int, int);\n     descriptor: (IIII)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=5, args_size=5\n          0: aload_0\n          1: iload_1\n-         2: invokespecial #62                 // Method appendDigit:(I)V\n+         2: invokespecial #148                // Method appendDigit:(I)V\n          5: aload_0\n          6: bipush        46\n-         8: invokespecial #25                 // Method append:(I)V\n+         8: invokespecial #71                 // Method append:(I)V\n         11: aload_0\n         12: iload_2\n-        13: invokespecial #66                 // Method append8Digits:(I)V\n+        13: invokespecial #158                // Method append8Digits:(I)V\n         16: aload_0\n         17: iload_3\n-        18: invokespecial #65                 // Method lowDigits:(I)V\n+        18: invokespecial #155                // Method lowDigits:(I)V\n         21: aload_0\n         22: iload         4\n         24: iconst_1\n         25: isub\n-        26: invokespecial #67                 // Method exponent:(I)V\n+        26: invokespecial #161                // Method exponent:(I)V\n         29: iconst_0\n         30: ireturn\n       LineNumberTable:\n         line 433: 0\n         line 434: 5\n         line 435: 11\n         line 436: 16\n@@ -1539,17 +1539,17 @@\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: iload_1\n          1: ifeq          9\n          4: aload_0\n          5: iload_1\n-         6: invokespecial #66                 // Method append8Digits:(I)V\n+         6: invokespecial #158                // Method append8Digits:(I)V\n          9: aload_0\n-        10: invokespecial #68                 // Method removeTrailingZeroes:()V\n+        10: invokespecial #164                // Method removeTrailingZeroes:()V\n         13: return\n       LineNumberTable:\n         line 442: 0\n         line 443: 4\n         line 445: 9\n         line 446: 13\n       LocalVariableTable:\n@@ -1562,32 +1562,32 @@\n   private void append8Digits(int);\n     descriptor: (I)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=5, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokespecial #63                 // Method y:(I)I\n+         2: invokespecial #151                // Method y:(I)I\n          5: istore_2\n          6: iconst_0\n          7: istore_3\n          8: iload_3\n          9: bipush        8\n         11: if_icmpge     41\n         14: bipush        10\n         16: iload_2\n         17: imul\n         18: istore        4\n         20: aload_0\n         21: iload         4\n         23: bipush        28\n         25: iushr\n-        26: invokespecial #62                 // Method appendDigit:(I)V\n+        26: invokespecial #148                // Method appendDigit:(I)V\n         29: iload         4\n-        31: ldc           #64                 // int 268435455\n+        31: ldc           #154                // int 268435455\n         33: iand\n         34: istore_2\n         35: iinc          3, 1\n         38: goto          8\n         41: return\n       LineNumberTable:\n         line 453: 0\n@@ -1613,40 +1613,40 @@\n \n   private void removeTrailingZeroes();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field bytes:[B\n+         1: getfield      #11                 // Field bytes:[B\n          4: aload_0\n-         5: getfield      #15                 // Field index:I\n+         5: getfield      #42                 // Field index:I\n          8: baload\n          9: bipush        48\n         11: if_icmpne     27\n         14: aload_0\n         15: dup\n-        16: getfield      #15                 // Field index:I\n+        16: getfield      #42                 // Field index:I\n         19: iconst_1\n         20: isub\n-        21: putfield      #15                 // Field index:I\n+        21: putfield      #42                 // Field index:I\n         24: goto          0\n         27: aload_0\n-        28: getfield      #4                  // Field bytes:[B\n+        28: getfield      #11                 // Field bytes:[B\n         31: aload_0\n-        32: getfield      #15                 // Field index:I\n+        32: getfield      #42                 // Field index:I\n         35: baload\n         36: bipush        46\n         38: if_icmpne     51\n         41: aload_0\n         42: dup\n-        43: getfield      #15                 // Field index:I\n+        43: getfield      #42                 // Field index:I\n         46: iconst_1\n         47: iadd\n-        48: putfield      #15                 // Field index:I\n+        48: putfield      #42                 // Field index:I\n         51: return\n       LineNumberTable:\n         line 462: 0\n         line 463: 14\n         line 466: 27\n         line 467: 41\n         line 469: 51\n@@ -1665,16 +1665,16 @@\n       stack=4, locals=2, args_size=2\n          0: iload_1\n          1: iconst_1\n          2: iadd\n          3: i2l\n          4: bipush        28\n          6: lshl\n-         7: ldc2_w        #52                 // long 193428131138340668l\n-        10: invokestatic  #46                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n+         7: ldc2_w        #131                // long 193428131138340668l\n+        10: invokestatic  #116                // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n         13: bipush        20\n         15: lushr\n         16: l2i\n         17: iconst_1\n         18: isub\n         19: ireturn\n       LineNumberTable:\n@@ -1687,64 +1687,64 @@\n   private void exponent(int);\n     descriptor: (I)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_0\n          1: bipush        69\n-         3: invokespecial #25                 // Method append:(I)V\n+         3: invokespecial #71                 // Method append:(I)V\n          6: iload_1\n          7: ifge          19\n         10: aload_0\n         11: bipush        45\n-        13: invokespecial #25                 // Method append:(I)V\n+        13: invokespecial #71                 // Method append:(I)V\n         16: iload_1\n         17: ineg\n         18: istore_1\n         19: iload_1\n         20: bipush        10\n         22: if_icmpge     31\n         25: aload_0\n         26: iload_1\n-        27: invokespecial #62                 // Method appendDigit:(I)V\n+        27: invokespecial #148                // Method appendDigit:(I)V\n         30: return\n         31: iload_1\n         32: bipush        100\n         34: if_icmplt     58\n         37: iload_1\n         38: sipush        1311\n         41: imul\n         42: bipush        17\n         44: iushr\n         45: istore_2\n         46: aload_0\n         47: iload_2\n-        48: invokespecial #62                 // Method appendDigit:(I)V\n+        48: invokespecial #148                // Method appendDigit:(I)V\n         51: iload_1\n         52: bipush        100\n         54: iload_2\n         55: imul\n         56: isub\n         57: istore_1\n         58: iload_1\n         59: bipush        103\n         61: imul\n         62: bipush        10\n         64: iushr\n         65: istore_2\n         66: aload_0\n         67: iload_2\n-        68: invokespecial #62                 // Method appendDigit:(I)V\n+        68: invokespecial #148                // Method appendDigit:(I)V\n         71: aload_0\n         72: iload_1\n         73: bipush        10\n         75: iload_2\n         76: imul\n         77: isub\n-        78: invokespecial #62                 // Method appendDigit:(I)V\n+        78: invokespecial #148                // Method appendDigit:(I)V\n         81: return\n       LineNumberTable:\n         line 486: 0\n         line 487: 6\n         line 488: 10\n         line 489: 16\n         line 491: 19\n@@ -1771,22 +1771,22 @@\n \n   private void append(int);\n     descriptor: (I)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #4                  // Field bytes:[B\n+         1: getfield      #11                 // Field bytes:[B\n          4: aload_0\n          5: dup\n-         6: getfield      #15                 // Field index:I\n+         6: getfield      #42                 // Field index:I\n          9: iconst_1\n         10: iadd\n         11: dup_x1\n-        12: putfield      #15                 // Field index:I\n+        12: putfield      #42                 // Field index:I\n         15: iload_1\n         16: i2b\n         17: bastore\n         18: return\n       LineNumberTable:\n         line 515: 0\n         line 516: 18\n@@ -1797,22 +1797,22 @@\n \n   private void appendDigit(int);\n     descriptor: (I)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #4                  // Field bytes:[B\n+         1: getfield      #11                 // Field bytes:[B\n          4: aload_0\n          5: dup\n-         6: getfield      #15                 // Field index:I\n+         6: getfield      #42                 // Field index:I\n          9: iconst_1\n         10: iadd\n         11: dup_x1\n-        12: putfield      #15                 // Field index:I\n+        12: putfield      #42                 // Field index:I\n         15: bipush        48\n         17: iload_1\n         18: iadd\n         19: i2b\n         20: bastore\n         21: return\n       LineNumberTable:\n@@ -1824,25 +1824,25 @@\n             0      22     1     d   I\n \n   private java.lang.String charsToString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=7, locals=1, args_size=1\n-         0: new           #69                 // class java/lang/String\n+         0: new           #167                // class java/lang/String\n          3: dup\n          4: aload_0\n-         5: getfield      #4                  // Field bytes:[B\n+         5: getfield      #11                 // Field bytes:[B\n          8: iconst_0\n          9: iconst_0\n         10: aload_0\n-        11: getfield      #15                 // Field index:I\n+        11: getfield      #42                 // Field index:I\n         14: iconst_1\n         15: iadd\n-        16: invokespecial #70                 // Method java/lang/String.\"<init>\":([BIII)V\n+        16: invokespecial #169                // Method java/lang/String.\"<init>\":([BIII)V\n         19: areturn\n       LineNumberTable:\n         line 525: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      20     0  this   Lcom/fasterxml/jackson/core/io/schubfach/DoubleToDecimal;\n }\n"}]}
