{"diffoscope-json-version": 1, "source1": "first/JsonFactory.class", "source2": "second/JsonFactory.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,11 +1,10 @@\n \n package com.fasterxml.jackson.core;\n \n-import com.fasterxml.jackson.core.util.DefaultPrettyPrinter;\n import com.fasterxml.jackson.core.io.ContentReference;\n import com.fasterxml.jackson.core.util.BufferRecyclers;\n import com.fasterxml.jackson.core.util.BufferRecycler;\n import java.io.OutputStreamWriter;\n import com.fasterxml.jackson.core.io.UTF8Writer;\n import com.fasterxml.jackson.core.json.UTF8JsonGenerator;\n import com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;\n@@ -26,14 +25,15 @@\n import java.io.File;\n import com.fasterxml.jackson.core.io.SerializedString;\n import com.fasterxml.jackson.core.json.PackageVersion;\n import com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper;\n import java.io.IOException;\n import com.fasterxml.jackson.core.format.MatchStrength;\n import com.fasterxml.jackson.core.format.InputAccessor;\n+import com.fasterxml.jackson.core.util.DefaultPrettyPrinter;\n import com.fasterxml.jackson.core.io.OutputDecorator;\n import com.fasterxml.jackson.core.io.InputDecorator;\n import com.fasterxml.jackson.core.io.CharacterEscapes;\n import com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;\n import com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;\n import java.io.Serializable;\n \n@@ -55,14 +55,21 @@\n     protected CharacterEscapes _characterEscapes;\n     protected InputDecorator _inputDecorator;\n     protected OutputDecorator _outputDecorator;\n     protected SerializableString _rootValueSeparator;\n     protected int _maximumNonEscapedChar;\n     protected final char _quoteChar;\n     \n+    static {\n+        DEFAULT_FACTORY_FEATURE_FLAGS = JsonFactory.Feature.collectDefaults();\n+        DEFAULT_PARSER_FEATURE_FLAGS = JsonParser.Feature.collectDefaults();\n+        DEFAULT_GENERATOR_FEATURE_FLAGS = JsonGenerator.Feature.collectDefaults();\n+        DEFAULT_ROOT_VALUE_SEPARATOR = (SerializableString)DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;\n+    }\n+    \n     public JsonFactory() {\n         this((ObjectCodec)null);\n     }\n     \n     public JsonFactory(final ObjectCodec oc) {\n         this._rootCharSymbols = CharsToNameCanonicalizer.createRoot();\n         this._byteSymbolCanonicalizer = ByteQuadsCanonicalizer.createRoot();\n@@ -675,15 +682,8 @@\n             throw new UnsupportedOperationException(String.format(msg, this.getFormatName()));\n         }\n     }\n     \n     private final boolean _isJSONFactory() {\n         return this.getFormatName() == \"JSON\";\n     }\n-    \n-    static {\n-        DEFAULT_FACTORY_FEATURE_FLAGS = JsonFactory.Feature.collectDefaults();\n-        DEFAULT_PARSER_FEATURE_FLAGS = JsonParser.Feature.collectDefaults();\n-        DEFAULT_GENERATOR_FEATURE_FLAGS = JsonGenerator.Feature.collectDefaults();\n-        DEFAULT_ROOT_VALUE_SEPARATOR = (SerializableString)DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;\n-    }\n }\n"}]}
