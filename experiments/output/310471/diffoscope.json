{"diffoscope-json-version": 1, "source1": "first/UnrecognizedExtraField.class", "source2": "second/UnrecognizedExtraField.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,84 +1,84 @@\n-  SHA-256 checksum dafda74accc002f3323b5741fcbfd33d8dc047d0a3ddfc004846c4294ec68f74\n+  SHA-256 checksum ae6eb78ab7b8d3180566b0b1b762f164c89c8851c1562923be96cda73f1d1900\n   Compiled from \"UnrecognizedExtraField.java\"\n public class org.apache.commons.compress.archivers.zip.UnrecognizedExtraField implements org.apache.commons.compress.archivers.zip.ZipExtraField\n   minor version: 0\n   major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #13                         // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n-  super_class: #14                        // java/lang/Object\n+  this_class: #8                          // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n+  super_class: #2                         // java/lang/Object\n   interfaces: 1, fields: 3, methods: 11, attributes: 1\n Constant pool:\n-   #1 = Methodref          #14.#44        // java/lang/Object.\"<init>\":()V\n-   #2 = Fieldref           #13.#45        // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.headerId:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #3 = Methodref          #46.#47        // org/apache/commons/compress/archivers/zip/ZipUtil.copy:([B)[B\n-   #4 = Fieldref           #13.#48        // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.localData:[B\n-   #5 = Class              #49            // org/apache/commons/compress/archivers/zip/ZipShort\n-   #6 = Methodref          #5.#50         // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-   #7 = Fieldref           #13.#51        // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.centralData:[B\n-   #8 = Methodref          #13.#52        // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #9 = Methodref          #13.#53        // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.getLocalFileDataData:()[B\n-  #10 = Methodref          #54.#55        // java/util/Arrays.copyOfRange:([BII)[B\n-  #11 = Methodref          #13.#56        // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setLocalFileDataData:([B)V\n-  #12 = Methodref          #13.#57        // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setCentralDirectoryData:([B)V\n-  #13 = Class              #58            // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n-  #14 = Class              #59            // java/lang/Object\n-  #15 = Class              #60            // org/apache/commons/compress/archivers/zip/ZipExtraField\n-  #16 = Utf8               headerId\n-  #17 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #18 = Utf8               localData\n-  #19 = Utf8               [B\n-  #20 = Utf8               centralData\n-  #21 = Utf8               <init>\n-  #22 = Utf8               ()V\n-  #23 = Utf8               Code\n-  #24 = Utf8               LineNumberTable\n-  #25 = Utf8               setHeaderId\n-  #26 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-  #27 = Utf8               getHeaderId\n-  #28 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #29 = Utf8               setLocalFileDataData\n-  #30 = Utf8               ([B)V\n-  #31 = Utf8               getLocalFileDataLength\n-  #32 = Utf8               StackMapTable\n-  #33 = Utf8               getLocalFileDataData\n-  #34 = Utf8               ()[B\n-  #35 = Utf8               setCentralDirectoryData\n-  #36 = Utf8               getCentralDirectoryLength\n-  #37 = Utf8               getCentralDirectoryData\n-  #38 = Utf8               parseFromLocalFileData\n-  #39 = Utf8               ([BII)V\n-  #40 = Utf8               parseFromCentralDirectoryData\n-  #41 = Class              #19            // \"[B\"\n-  #42 = Utf8               SourceFile\n-  #43 = Utf8               UnrecognizedExtraField.java\n-  #44 = NameAndType        #21:#22        // \"<init>\":()V\n-  #45 = NameAndType        #16:#17        // headerId:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #46 = Class              #61            // org/apache/commons/compress/archivers/zip/ZipUtil\n-  #47 = NameAndType        #62:#63        // copy:([B)[B\n-  #48 = NameAndType        #18:#19        // localData:[B\n-  #49 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-  #50 = NameAndType        #21:#64        // \"<init>\":(I)V\n-  #51 = NameAndType        #20:#19        // centralData:[B\n-  #52 = NameAndType        #31:#28        // getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #53 = NameAndType        #33:#34        // getLocalFileDataData:()[B\n-  #54 = Class              #65            // java/util/Arrays\n-  #55 = NameAndType        #66:#67        // copyOfRange:([BII)[B\n-  #56 = NameAndType        #29:#30        // setLocalFileDataData:([B)V\n-  #57 = NameAndType        #35:#30        // setCentralDirectoryData:([B)V\n-  #58 = Utf8               org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n-  #59 = Utf8               java/lang/Object\n-  #60 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n-  #61 = Utf8               org/apache/commons/compress/archivers/zip/ZipUtil\n-  #62 = Utf8               copy\n-  #63 = Utf8               ([B)[B\n-  #64 = Utf8               (I)V\n-  #65 = Utf8               java/util/Arrays\n-  #66 = Utf8               copyOfRange\n-  #67 = Utf8               ([BII)[B\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Fieldref           #8.#9          // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.headerId:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #8 = Class              #10            // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n+   #9 = NameAndType        #11:#12        // headerId:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #10 = Utf8               org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n+  #11 = Utf8               headerId\n+  #12 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #13 = Methodref          #14.#15        // org/apache/commons/compress/archivers/zip/ZipUtil.copy:([B)[B\n+  #14 = Class              #16            // org/apache/commons/compress/archivers/zip/ZipUtil\n+  #15 = NameAndType        #17:#18        // copy:([B)[B\n+  #16 = Utf8               org/apache/commons/compress/archivers/zip/ZipUtil\n+  #17 = Utf8               copy\n+  #18 = Utf8               ([B)[B\n+  #19 = Fieldref           #8.#20         // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.localData:[B\n+  #20 = NameAndType        #21:#22        // localData:[B\n+  #21 = Utf8               localData\n+  #22 = Utf8               [B\n+  #23 = Class              #24            // org/apache/commons/compress/archivers/zip/ZipShort\n+  #24 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+  #25 = Methodref          #23.#26        // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+  #26 = NameAndType        #5:#27         // \"<init>\":(I)V\n+  #27 = Utf8               (I)V\n+  #28 = Fieldref           #8.#29         // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.centralData:[B\n+  #29 = NameAndType        #30:#22        // centralData:[B\n+  #30 = Utf8               centralData\n+  #31 = Methodref          #8.#32         // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #32 = NameAndType        #33:#34        // getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #33 = Utf8               getLocalFileDataLength\n+  #34 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #35 = Methodref          #8.#36         // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.getLocalFileDataData:()[B\n+  #36 = NameAndType        #37:#38        // getLocalFileDataData:()[B\n+  #37 = Utf8               getLocalFileDataData\n+  #38 = Utf8               ()[B\n+  #39 = Methodref          #40.#41        // java/util/Arrays.copyOfRange:([BII)[B\n+  #40 = Class              #42            // java/util/Arrays\n+  #41 = NameAndType        #43:#44        // copyOfRange:([BII)[B\n+  #42 = Utf8               java/util/Arrays\n+  #43 = Utf8               copyOfRange\n+  #44 = Utf8               ([BII)[B\n+  #45 = Methodref          #8.#46         // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setLocalFileDataData:([B)V\n+  #46 = NameAndType        #47:#48        // setLocalFileDataData:([B)V\n+  #47 = Utf8               setLocalFileDataData\n+  #48 = Utf8               ([B)V\n+  #49 = Methodref          #8.#50         // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setCentralDirectoryData:([B)V\n+  #50 = NameAndType        #51:#48        // setCentralDirectoryData:([B)V\n+  #51 = Utf8               setCentralDirectoryData\n+  #52 = Class              #53            // org/apache/commons/compress/archivers/zip/ZipExtraField\n+  #53 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n+  #54 = Utf8               Code\n+  #55 = Utf8               LineNumberTable\n+  #56 = Utf8               setHeaderId\n+  #57 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+  #58 = Utf8               getHeaderId\n+  #59 = Utf8               StackMapTable\n+  #60 = Utf8               getCentralDirectoryLength\n+  #61 = Utf8               getCentralDirectoryData\n+  #62 = Utf8               parseFromLocalFileData\n+  #63 = Utf8               ([BII)V\n+  #64 = Utf8               parseFromCentralDirectoryData\n+  #65 = Class              #22            // \"[B\"\n+  #66 = Utf8               SourceFile\n+  #67 = Utf8               UnrecognizedExtraField.java\n {\n   private org.apache.commons.compress.archivers.zip.ZipShort headerId;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0002) ACC_PRIVATE\n \n   private byte[] localData;\n     descriptor: [B\n@@ -102,61 +102,61 @@\n   public void setHeaderId(org.apache.commons.compress.archivers.zip.ZipShort);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #2                  // Field headerId:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+         2: putfield      #7                  // Field headerId:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n          5: return\n       LineNumberTable:\n         line 43: 0\n         line 44: 5\n \n   public org.apache.commons.compress.archivers.zip.ZipShort getHeaderId();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field headerId:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+         1: getfield      #7                  // Field headerId:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n          4: areturn\n       LineNumberTable:\n         line 52: 0\n \n   public void setLocalFileDataData(byte[]);\n     descriptor: ([B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #3                  // Method org/apache/commons/compress/archivers/zip/ZipUtil.copy:([B)[B\n-         5: putfield      #4                  // Field localData:[B\n+         2: invokestatic  #13                 // Method org/apache/commons/compress/archivers/zip/ZipUtil.copy:([B)[B\n+         5: putfield      #19                 // Field localData:[B\n          8: return\n       LineNumberTable:\n         line 67: 0\n         line 68: 8\n \n   public org.apache.commons.compress.archivers.zip.ZipShort getLocalFileDataLength();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: new           #5                  // class org/apache/commons/compress/archivers/zip/ZipShort\n+         0: new           #23                 // class org/apache/commons/compress/archivers/zip/ZipShort\n          3: dup\n          4: aload_0\n-         5: getfield      #4                  // Field localData:[B\n+         5: getfield      #19                 // Field localData:[B\n          8: ifnull        19\n         11: aload_0\n-        12: getfield      #4                  // Field localData:[B\n+        12: getfield      #19                 // Field localData:[B\n         15: arraylength\n         16: goto          20\n         19: iconst_0\n-        20: invokespecial #6                  // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+        20: invokespecial #25                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n         23: areturn\n       LineNumberTable:\n         line 76: 0\n       StackMapTable: number_of_entries = 2\n         frame_type = 255 /* full_frame */\n           offset_delta = 19\n           locals = [ class org/apache/commons/compress/archivers/zip/UnrecognizedExtraField ]\n@@ -168,73 +168,73 @@\n \n   public byte[] getLocalFileDataData();\n     descriptor: ()[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field localData:[B\n-         4: invokestatic  #3                  // Method org/apache/commons/compress/archivers/zip/ZipUtil.copy:([B)[B\n+         1: getfield      #19                 // Field localData:[B\n+         4: invokestatic  #13                 // Method org/apache/commons/compress/archivers/zip/ZipUtil.copy:([B)[B\n          7: areturn\n       LineNumberTable:\n         line 85: 0\n \n   public void setCentralDirectoryData(byte[]);\n     descriptor: ([B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #3                  // Method org/apache/commons/compress/archivers/zip/ZipUtil.copy:([B)[B\n-         5: putfield      #7                  // Field centralData:[B\n+         2: invokestatic  #13                 // Method org/apache/commons/compress/archivers/zip/ZipUtil.copy:([B)[B\n+         5: putfield      #28                 // Field centralData:[B\n          8: return\n       LineNumberTable:\n         line 99: 0\n         line 100: 8\n \n   public org.apache.commons.compress.archivers.zip.ZipShort getCentralDirectoryLength();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field centralData:[B\n+         1: getfield      #28                 // Field centralData:[B\n          4: ifnull        20\n-         7: new           #5                  // class org/apache/commons/compress/archivers/zip/ZipShort\n+         7: new           #23                 // class org/apache/commons/compress/archivers/zip/ZipShort\n         10: dup\n         11: aload_0\n-        12: getfield      #7                  // Field centralData:[B\n+        12: getfield      #28                 // Field centralData:[B\n         15: arraylength\n-        16: invokespecial #6                  // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+        16: invokespecial #25                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n         19: areturn\n         20: aload_0\n-        21: invokevirtual #8                  // Method getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+        21: invokevirtual #31                 // Method getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n         24: areturn\n       LineNumberTable:\n         line 109: 0\n         line 110: 7\n         line 112: 20\n       StackMapTable: number_of_entries = 1\n         frame_type = 20 /* same */\n \n   public byte[] getCentralDirectoryData();\n     descriptor: ()[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field centralData:[B\n+         1: getfield      #28                 // Field centralData:[B\n          4: ifnull        15\n          7: aload_0\n-         8: getfield      #7                  // Field centralData:[B\n-        11: invokestatic  #3                  // Method org/apache/commons/compress/archivers/zip/ZipUtil.copy:([B)[B\n+         8: getfield      #28                 // Field centralData:[B\n+        11: invokestatic  #13                 // Method org/apache/commons/compress/archivers/zip/ZipUtil.copy:([B)[B\n         14: areturn\n         15: aload_0\n-        16: invokevirtual #9                  // Method getLocalFileDataData:()[B\n+        16: invokevirtual #35                 // Method getLocalFileDataData:()[B\n         19: areturn\n       LineNumberTable:\n         line 121: 0\n         line 122: 7\n         line 124: 15\n       StackMapTable: number_of_entries = 1\n         frame_type = 15 /* same */\n@@ -246,16 +246,16 @@\n       stack=5, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_2\n          4: iload_3\n          5: iadd\n-         6: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([BII)[B\n-         9: invokevirtual #11                 // Method setLocalFileDataData:([B)V\n+         6: invokestatic  #39                 // Method java/util/Arrays.copyOfRange:([BII)[B\n+         9: invokevirtual #45                 // Method setLocalFileDataData:([B)V\n         12: return\n       LineNumberTable:\n         line 135: 0\n         line 136: 12\n \n   public void parseFromCentralDirectoryData(byte[], int, int);\n     descriptor: ([BII)V\n@@ -263,25 +263,25 @@\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_1\n          1: iload_2\n          2: iload_2\n          3: iload_3\n          4: iadd\n-         5: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([BII)[B\n+         5: invokestatic  #39                 // Method java/util/Arrays.copyOfRange:([BII)[B\n          8: astore        4\n         10: aload_0\n         11: aload         4\n-        13: invokevirtual #12                 // Method setCentralDirectoryData:([B)V\n+        13: invokevirtual #49                 // Method setCentralDirectoryData:([B)V\n         16: aload_0\n-        17: getfield      #4                  // Field localData:[B\n+        17: getfield      #19                 // Field localData:[B\n         20: ifnonnull     29\n         23: aload_0\n         24: aload         4\n-        26: invokevirtual #11                 // Method setLocalFileDataData:([B)V\n+        26: invokevirtual #45                 // Method setLocalFileDataData:([B)V\n         29: return\n       LineNumberTable:\n         line 147: 0\n         line 148: 10\n         line 149: 16\n         line 150: 23\n         line 152: 29\n"}]}
