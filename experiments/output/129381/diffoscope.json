{"diffoscope-json-version": 1, "source1": "first/FileExistsException.class", "source2": "second/FileExistsException.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,56 +1,56 @@\n-  SHA-256 checksum 01326d50cec78224527573d85094fbe21bbf8bfd15bb077fe1eb50b986a58db5\n+  SHA-256 checksum 48a6bffa852a9dbc144e22dba82b40332d20d2b6fd985792a140689c66f4dc07\n   Compiled from \"FileExistsException.java\"\n public class org.apache.commons.io.FileExistsException extends java.io.IOException\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #28                         // org/apache/commons/io/FileExistsException\n-  super_class: #2                         // java/io/IOException\n+  this_class: #1                          // org/apache/commons/io/FileExistsException\n+  super_class: #3                         // java/io/IOException\n   interfaces: 0, fields: 1, methods: 3, attributes: 1\n Constant pool:\n-   #1 = Methodref          #2.#3          // java/io/IOException.\"<init>\":()V\n-   #2 = Class              #4             // java/io/IOException\n-   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #1 = Class              #2             // org/apache/commons/io/FileExistsException\n+   #2 = Utf8               org/apache/commons/io/FileExistsException\n+   #3 = Class              #4             // java/io/IOException\n    #4 = Utf8               java/io/IOException\n-   #5 = Utf8               <init>\n-   #6 = Utf8               ()V\n-   #7 = Class              #8             // java/lang/StringBuilder\n-   #8 = Utf8               java/lang/StringBuilder\n-   #9 = Methodref          #7.#3          // java/lang/StringBuilder.\"<init>\":()V\n-  #10 = String             #11            // File\n-  #11 = Utf8               File\n-  #12 = Methodref          #7.#13         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #13 = NameAndType        #14:#15        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #14 = Utf8               append\n-  #15 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #16 = Methodref          #7.#17         // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #17 = NameAndType        #14:#18        // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #18 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #19 = String             #20            //  exists\n-  #20 = Utf8                exists\n-  #21 = Methodref          #7.#22         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #22 = NameAndType        #23:#24        // toString:()Ljava/lang/String;\n-  #23 = Utf8               toString\n-  #24 = Utf8               ()Ljava/lang/String;\n-  #25 = Methodref          #2.#26         // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-  #26 = NameAndType        #5:#27         // \"<init>\":(Ljava/lang/String;)V\n-  #27 = Utf8               (Ljava/lang/String;)V\n-  #28 = Class              #29            // org/apache/commons/io/FileExistsException\n-  #29 = Utf8               org/apache/commons/io/FileExistsException\n-  #30 = Utf8               serialVersionUID\n-  #31 = Utf8               J\n-  #32 = Utf8               ConstantValue\n-  #33 = Long               1l\n-  #35 = Utf8               Code\n-  #36 = Utf8               LineNumberTable\n-  #37 = Utf8               LocalVariableTable\n-  #38 = Utf8               this\n-  #39 = Utf8               Lorg/apache/commons/io/FileExistsException;\n-  #40 = Utf8               (Ljava/io/File;)V\n+   #5 = Utf8               serialVersionUID\n+   #6 = Utf8               J\n+   #7 = Utf8               ConstantValue\n+   #8 = Long               1l\n+  #10 = Utf8               <init>\n+  #11 = Utf8               ()V\n+  #12 = Utf8               Code\n+  #13 = Methodref          #3.#14         // java/io/IOException.\"<init>\":()V\n+  #14 = NameAndType        #10:#11        // \"<init>\":()V\n+  #15 = Utf8               LineNumberTable\n+  #16 = Utf8               LocalVariableTable\n+  #17 = Utf8               this\n+  #18 = Utf8               Lorg/apache/commons/io/FileExistsException;\n+  #19 = Utf8               (Ljava/io/File;)V\n+  #20 = Class              #21            // java/lang/StringBuilder\n+  #21 = Utf8               java/lang/StringBuilder\n+  #22 = String             #23            // File\n+  #23 = Utf8               File\n+  #24 = Methodref          #20.#25        // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #25 = NameAndType        #10:#26        // \"<init>\":(Ljava/lang/String;)V\n+  #26 = Utf8               (Ljava/lang/String;)V\n+  #27 = Methodref          #20.#28        // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #28 = NameAndType        #29:#30        // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #29 = Utf8               append\n+  #30 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #31 = String             #32            //  exists\n+  #32 = Utf8                exists\n+  #33 = Methodref          #20.#34        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #34 = NameAndType        #29:#35        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #35 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #36 = Methodref          #20.#37        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #37 = NameAndType        #38:#39        // toString:()Ljava/lang/String;\n+  #38 = Utf8               toString\n+  #39 = Utf8               ()Ljava/lang/String;\n+  #40 = Methodref          #3.#25         // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n   #41 = Utf8               file\n   #42 = Utf8               Ljava/io/File;\n   #43 = Utf8               message\n   #44 = Utf8               Ljava/lang/String;\n   #45 = Utf8               SourceFile\n   #46 = Utf8               FileExistsException.java\n {\n@@ -61,57 +61,56 @@\n \n   public org.apache.commons.io.FileExistsException();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method java/io/IOException.\"<init>\":()V\n+         1: invokespecial #13                 // Method java/io/IOException.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 37: 0\n         line 38: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/FileExistsException;\n \n   public org.apache.commons.io.FileExistsException(java.io.File);\n     descriptor: (Ljava/io/File;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=3, locals=2, args_size=2\n+      stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: new           #7                  // class java/lang/StringBuilder\n+         1: new           #20                 // class java/lang/StringBuilder\n          4: dup\n-         5: invokespecial #9                  // Method java/lang/StringBuilder.\"<init>\":()V\n-         8: ldc           #10                 // String File\n-        10: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        13: aload_1\n-        14: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        17: ldc           #19                 // String  exists\n-        19: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        22: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        25: invokespecial #25                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-        28: return\n+         5: ldc           #22                 // String File\n+         7: invokespecial #24                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        10: aload_1\n+        11: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        14: ldc           #31                 // String  exists\n+        16: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        19: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        22: invokespecial #40                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        25: return\n       LineNumberTable:\n         line 46: 0\n-        line 47: 28\n+        line 47: 25\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      29     0  this   Lorg/apache/commons/io/FileExistsException;\n-            0      29     1  file   Ljava/io/File;\n+            0      26     0  this   Lorg/apache/commons/io/FileExistsException;\n+            0      26     1  file   Ljava/io/File;\n \n   public org.apache.commons.io.FileExistsException(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #25                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+         2: invokespecial #40                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n          5: return\n       LineNumberTable:\n         line 55: 0\n         line 56: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/FileExistsException;\n"}]}
