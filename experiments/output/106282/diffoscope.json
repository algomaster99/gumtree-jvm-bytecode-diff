{"diffoscope-json-version": 1, "source1": "first/FileAlterationMonitor.class", "source2": "second/FileAlterationMonitor.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,15 +1,14 @@\n \n package org.apache.commons.io.monitor;\n \n import java.util.Iterator;\n import org.apache.commons.io.ThreadUtils;\n import java.time.Duration;\n import java.util.function.Predicate;\n-import java.util.Objects;\n import java.util.function.Consumer;\n import java.util.stream.Stream;\n import java.util.Collections;\n import java.util.Optional;\n import java.util.Collection;\n import java.util.concurrent.CopyOnWriteArrayList;\n import java.util.concurrent.ThreadFactory;\n@@ -20,14 +19,18 @@\n     private static final FileAlterationObserver[] EMPTY_ARRAY;\n     private final long intervalMillis;\n     private final List<FileAlterationObserver> observers;\n     private Thread thread;\n     private ThreadFactory threadFactory;\n     private volatile boolean running;\n     \n+    static {\n+        EMPTY_ARRAY = new FileAlterationObserver[0];\n+    }\n+    \n     public FileAlterationMonitor() {\n         this(10000L);\n     }\n     \n     public FileAlterationMonitor(final long intervalMillis) {\n         this.observers = new CopyOnWriteArrayList<FileAlterationObserver>();\n         this.intervalMillis = intervalMillis;\n@@ -56,17 +59,15 @@\n     \n     public Iterable<FileAlterationObserver> getObservers() {\n         return this.observers;\n     }\n     \n     public void removeObserver(final FileAlterationObserver observer) {\n         if (observer != null) {\n-            final List<FileAlterationObserver> observers = this.observers;\n-            Objects.requireNonNull(observer);\n-            observers.removeIf(observer::equals);\n+            this.observers.removeIf(observer::equals);\n         }\n     }\n     \n     @Override\n     public void run() {\n         while (this.running) {\n             this.observers.forEach(FileAlterationObserver::checkAndNotify);\n@@ -117,12 +118,8 @@\n         catch (final InterruptedException e) {\n             Thread.currentThread().interrupt();\n         }\n         for (final FileAlterationObserver observer : this.observers) {\n             observer.destroy();\n         }\n     }\n-    \n-    static {\n-        EMPTY_ARRAY = new FileAlterationObserver[0];\n-    }\n }\n"}]}
