{"diffoscope-json-version": 1, "source1": "first/Blake3$ChunkState.class", "source2": "second/Blake3$ChunkState.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -26,28 +26,28 @@\n     private int startFlag() {\n         return (this.blocksCompressed == 0) ? 1 : 0;\n     }\n     \n     private void update(final byte[] input, int offset, int length) {\n         while (length > 0) {\n             if (this.blockLength == 64) {\n-                final int[] blockWords = Blake3.access$800(this.block, 16);\n-                this.chainingValue = Arrays.copyOf(Blake3.access$600(this.chainingValue, blockWords, 64, this.chunkCounter, this.flags | this.startFlag()), 8);\n+                final int[] blockWords = Blake3.access$2(this.block, 16);\n+                this.chainingValue = Arrays.copyOf(Blake3.access$0(this.chainingValue, blockWords, 64, this.chunkCounter, this.flags | this.startFlag()), 8);\n                 ++this.blocksCompressed;\n                 this.blockLength = 0;\n                 Arrays.fill(this.block, (byte)0);\n             }\n             final int want = 64 - this.blockLength;\n             final int take = Math.min(want, length);\n             System.arraycopy(input, offset, this.block, this.blockLength, take);\n             this.blockLength += take;\n             offset += take;\n             length -= take;\n         }\n     }\n     \n     private Blake3.Output output() {\n-        final int[] blockWords = Blake3.access$800(this.block, 16);\n+        final int[] blockWords = Blake3.access$2(this.block, 16);\n         final int outputFlags = this.flags | this.startFlag() | 0x2;\n-        return new Blake3.Output(this.chainingValue, blockWords, this.chunkCounter, this.blockLength, outputFlags, (Blake3.Blake3$1)null);\n+        return new Blake3.Output(this.chainingValue, blockWords, this.chunkCounter, this.blockLength, outputFlags, (Blake3.Output)null);\n     }\n }\n"}]}
