{"diffoscope-json-version": 1, "source1": "first/Caverphone1.class", "source2": "second/Caverphone1.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -3,71 +3,14 @@\n \n import java.util.Locale;\n \n public class Caverphone1 extends AbstractCaverphone\n {\n     private static final String SIX_1 = \"111111\";\n     \n-    public String encode(final String source) {\n-        String txt = source;\n-        if (txt == null || txt.isEmpty()) {\n+    public String encode(final String s) {\n+        if (s == null || s.isEmpty()) {\n             return \"111111\";\n         }\n-        txt = txt.toLowerCase(Locale.ENGLISH);\n-        txt = txt.replaceAll(\"[^a-z]\", \"\");\n-        txt = txt.replaceAll(\"^cough\", \"cou2f\");\n-        txt = txt.replaceAll(\"^rough\", \"rou2f\");\n-        txt = txt.replaceAll(\"^tough\", \"tou2f\");\n-        txt = txt.replaceAll(\"^enough\", \"enou2f\");\n-        txt = txt.replaceAll(\"^gn\", \"2n\");\n-        txt = txt.replaceAll(\"mb$\", \"m2\");\n-        txt = txt.replace(\"cq\", \"2q\");\n-        txt = txt.replace(\"ci\", \"si\");\n-        txt = txt.replace(\"ce\", \"se\");\n-        txt = txt.replace(\"cy\", \"sy\");\n-        txt = txt.replace(\"tch\", \"2ch\");\n-        txt = txt.replace(\"c\", \"k\");\n-        txt = txt.replace(\"q\", \"k\");\n-        txt = txt.replace(\"x\", \"k\");\n-        txt = txt.replace(\"v\", \"f\");\n-        txt = txt.replace(\"dg\", \"2g\");\n-        txt = txt.replace(\"tio\", \"sio\");\n-        txt = txt.replace(\"tia\", \"sia\");\n-        txt = txt.replace(\"d\", \"t\");\n-        txt = txt.replace(\"ph\", \"fh\");\n-        txt = txt.replace(\"b\", \"p\");\n-        txt = txt.replace(\"sh\", \"s2\");\n-        txt = txt.replace(\"z\", \"s\");\n-        txt = txt.replaceAll(\"^[aeiou]\", \"A\");\n-        txt = txt.replaceAll(\"[aeiou]\", \"3\");\n-        txt = txt.replace(\"3gh3\", \"3kh3\");\n-        txt = txt.replace(\"gh\", \"22\");\n-        txt = txt.replace(\"g\", \"k\");\n-        txt = txt.replaceAll(\"s+\", \"S\");\n-        txt = txt.replaceAll(\"t+\", \"T\");\n-        txt = txt.replaceAll(\"p+\", \"P\");\n-        txt = txt.replaceAll(\"k+\", \"K\");\n-        txt = txt.replaceAll(\"f+\", \"F\");\n-        txt = txt.replaceAll(\"m+\", \"M\");\n-        txt = txt.replaceAll(\"n+\", \"N\");\n-        txt = txt.replace(\"w3\", \"W3\");\n-        txt = txt.replace(\"wy\", \"Wy\");\n-        txt = txt.replace(\"wh3\", \"Wh3\");\n-        txt = txt.replace(\"why\", \"Why\");\n-        txt = txt.replace(\"w\", \"2\");\n-        txt = txt.replaceAll(\"^h\", \"A\");\n-        txt = txt.replace(\"h\", \"2\");\n-        txt = txt.replace(\"r3\", \"R3\");\n-        txt = txt.replace(\"ry\", \"Ry\");\n-        txt = txt.replace(\"r\", \"2\");\n-        txt = txt.replace(\"l3\", \"L3\");\n-        txt = txt.replace(\"ly\", \"Ly\");\n-        txt = txt.replace(\"l\", \"2\");\n-        txt = txt.replace(\"j\", \"y\");\n-        txt = txt.replace(\"y3\", \"Y3\");\n-        txt = txt.replace(\"y\", \"2\");\n-        txt = txt.replace(\"2\", \"\");\n-        txt = txt.replace(\"3\", \"\");\n-        txt += \"111111\";\n-        return txt.substring(0, \"111111\".length());\n+        return (s.toLowerCase(Locale.ENGLISH).replaceAll(\"[^a-z]\", \"\").replaceAll(\"^cough\", \"cou2f\").replaceAll(\"^rough\", \"rou2f\").replaceAll(\"^tough\", \"tou2f\").replaceAll(\"^enough\", \"enou2f\").replaceAll(\"^gn\", \"2n\").replaceAll(\"mb$\", \"m2\").replace(\"cq\", \"2q\").replace(\"ci\", \"si\").replace(\"ce\", \"se\").replace(\"cy\", \"sy\").replace(\"tch\", \"2ch\").replace(\"c\", \"k\").replace(\"q\", \"k\").replace(\"x\", \"k\").replace(\"v\", \"f\").replace(\"dg\", \"2g\").replace(\"tio\", \"sio\").replace(\"tia\", \"sia\").replace(\"d\", \"t\").replace(\"ph\", \"fh\").replace(\"b\", \"p\").replace(\"sh\", \"s2\").replace(\"z\", \"s\").replaceAll(\"^[aeiou]\", \"A\").replaceAll(\"[aeiou]\", \"3\").replace(\"3gh3\", \"3kh3\").replace(\"gh\", \"22\").replace(\"g\", \"k\").replaceAll(\"s+\", \"S\").replaceAll(\"t+\", \"T\").replaceAll(\"p+\", \"P\").replaceAll(\"k+\", \"K\").replaceAll(\"f+\", \"F\").replaceAll(\"m+\", \"M\").replaceAll(\"n+\", \"N\").replace(\"w3\", \"W3\").replace(\"wy\", \"Wy\").replace(\"wh3\", \"Wh3\").replace(\"why\", \"Why\").replace(\"w\", \"2\").replaceAll(\"^h\", \"A\").replace(\"h\", \"2\").replace(\"r3\", \"R3\").replace(\"ry\", \"Ry\").replace(\"r\", \"2\").replace(\"l3\", \"L3\").replace(\"ly\", \"Ly\").replace(\"l\", \"2\").replace(\"j\", \"y\").replace(\"y3\", \"Y3\").replace(\"y\", \"2\").replace(\"2\", \"\").replace((CharSequence)\"3\", (CharSequence)\"\") + \"111111\").substring(0, \"111111\".length());\n     }\n }\n"}]}
