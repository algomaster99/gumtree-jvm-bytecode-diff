{"diffoscope-json-version": 1, "source1": "first/FailableBiConsumer.class", "source2": "second/FailableBiConsumer.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -2,23 +2,23 @@\n package org.apache.commons.lang3.function;\n \n import java.util.Objects;\n \n @FunctionalInterface\n public interface FailableBiConsumer<T, U, E extends Throwable>\n {\n-    public static final FailableBiConsumer NOP = (t, u) -> {};\n+    public static final FailableBiConsumer NOP = (p0, p1) -> {};\n     \n     default <T, U, E extends Throwable> FailableBiConsumer<T, U, E> nop() {\n         return FailableBiConsumer.NOP;\n     }\n     \n     void accept(final T p0, final U p1) throws E, Throwable;\n     \n-    default FailableBiConsumer<T, U, E> andThen(final FailableBiConsumer<? super T, ? super U, E> after) {\n-        Objects.requireNonNull(after);\n-        return (t, u) -> {\n-            this.accept(t, u);\n-            after.accept(t, u);\n+    default FailableBiConsumer<T, U, E> andThen(final FailableBiConsumer<? super T, ? super U, E> obj) {\n+        Objects.requireNonNull(obj);\n+        return (o, o2) -> {\n+            this.accept(o, o2);\n+            failableBiConsumer.accept(o, o2);\n         };\n     }\n }\n"}]}
