{"diffoscope-json-version": 1, "source1": "first/EmptyFileFilter.class", "source2": "second/EmptyFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,41 +1,41 @@\n-  SHA-256 checksum a1d139bf788ccc1f732ed4950879c1bd1d825171f0aef88f0843ef3425b605dd\n+  SHA-256 checksum a43e18e6930c007fb3dbcd86b483e5fed55eabdfeb5d7075b1a0073ee47aed39\n   Compiled from \"EmptyFileFilter.java\"\n public class org.apache.commons.io.filefilter.EmptyFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #18                         // org/apache/commons/io/filefilter/EmptyFileFilter\n   super_class: #23                        // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 1, fields: 3, methods: 4, attributes: 1\n Constant pool:\n-    #1 = Methodref          #23.#68       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-    #2 = Methodref          #69.#70       // java/io/File.isDirectory:()Z\n-    #3 = Methodref          #69.#71       // java/io/File.listFiles:()[Ljava/io/File;\n-    #4 = Methodref          #72.#73       // org/apache/commons/io/IOUtils.length:([Ljava/lang/Object;)I\n-    #5 = Methodref          #69.#74       // java/io/File.length:()J\n-    #6 = Class              #75           // java/nio/file/LinkOption\n-    #7 = Methodref          #76.#77       // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-    #8 = Methodref          #76.#78       // java/nio/file/Files.list:(Ljava/nio/file/Path;)Ljava/util/stream/Stream;\n-    #9 = InterfaceMethodref #79.#80       // java/util/stream/Stream.findFirst:()Ljava/util/Optional;\n-   #10 = Methodref          #81.#82       // java/util/Optional.isPresent:()Z\n-   #11 = Methodref          #18.#83       // org/apache/commons/io/filefilter/EmptyFileFilter.toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-   #12 = InterfaceMethodref #79.#84       // java/util/stream/Stream.close:()V\n-   #13 = Class              #85           // java/lang/Throwable\n-   #14 = Methodref          #13.#86       // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-   #15 = Methodref          #76.#87       // java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n-   #16 = Class              #88           // java/io/IOException\n-   #17 = Methodref          #18.#89       // org/apache/commons/io/filefilter/EmptyFileFilter.handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-   #18 = Class              #90           // org/apache/commons/io/filefilter/EmptyFileFilter\n-   #19 = Methodref          #18.#68       // org/apache/commons/io/filefilter/EmptyFileFilter.\"<init>\":()V\n-   #20 = Fieldref           #18.#91       // org/apache/commons/io/filefilter/EmptyFileFilter.EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #21 = InterfaceMethodref #92.#93       // org/apache/commons/io/filefilter/IOFileFilter.negate:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #22 = Fieldref           #18.#94       // org/apache/commons/io/filefilter/EmptyFileFilter.NOT_EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #23 = Class              #95           // org/apache/commons/io/filefilter/AbstractFileFilter\n-   #24 = Class              #96           // java/io/Serializable\n+    #1 = Methodref          #23.#65       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+    #2 = Methodref          #66.#67       // java/io/File.isDirectory:()Z\n+    #3 = Methodref          #66.#68       // java/io/File.listFiles:()[Ljava/io/File;\n+    #4 = Methodref          #69.#70       // org/apache/commons/io/IOUtils.length:([Ljava/lang/Object;)I\n+    #5 = Methodref          #66.#71       // java/io/File.length:()J\n+    #6 = Class              #72           // java/nio/file/LinkOption\n+    #7 = Methodref          #73.#74       // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+    #8 = Methodref          #73.#75       // java/nio/file/Files.list:(Ljava/nio/file/Path;)Ljava/util/stream/Stream;\n+    #9 = InterfaceMethodref #58.#76       // java/util/stream/Stream.findFirst:()Ljava/util/Optional;\n+   #10 = Methodref          #77.#78       // java/util/Optional.isPresent:()Z\n+   #11 = Methodref          #18.#79       // org/apache/commons/io/filefilter/EmptyFileFilter.toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+   #12 = InterfaceMethodref #58.#80       // java/util/stream/Stream.close:()V\n+   #13 = Class              #81           // java/lang/Throwable\n+   #14 = Methodref          #13.#82       // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+   #15 = Methodref          #73.#83       // java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+   #16 = Class              #84           // java/io/IOException\n+   #17 = Methodref          #18.#85       // org/apache/commons/io/filefilter/EmptyFileFilter.handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+   #18 = Class              #86           // org/apache/commons/io/filefilter/EmptyFileFilter\n+   #19 = Methodref          #18.#65       // org/apache/commons/io/filefilter/EmptyFileFilter.\"<init>\":()V\n+   #20 = Fieldref           #18.#87       // org/apache/commons/io/filefilter/EmptyFileFilter.EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #21 = InterfaceMethodref #88.#89       // org/apache/commons/io/filefilter/IOFileFilter.negate:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #22 = Fieldref           #18.#90       // org/apache/commons/io/filefilter/EmptyFileFilter.NOT_EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #23 = Class              #91           // org/apache/commons/io/filefilter/AbstractFileFilter\n+   #24 = Class              #92           // java/io/Serializable\n    #25 = Utf8               EMPTY\n    #26 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n    #27 = Utf8               NOT_EMPTY\n    #28 = Utf8               serialVersionUID\n    #29 = Utf8               J\n    #30 = Utf8               ConstantValue\n    #31 = Long               3631422087512832211l\n@@ -60,86 +60,82 @@\n    #51 = Utf8               e\n    #52 = Utf8               Ljava/io/IOException;\n    #53 = Utf8               Ljava/nio/file/Path;\n    #54 = Utf8               attributes\n    #55 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n    #56 = Utf8               LocalVariableTypeTable\n    #57 = Utf8               Ljava/util/stream/Stream<Ljava/nio/file/Path;>;\n-   #58 = Class              #97           // java/util/stream/Stream\n-   #59 = Class              #85           // java/lang/Throwable\n-   #60 = Class              #90           // org/apache/commons/io/filefilter/EmptyFileFilter\n-   #61 = Class              #98           // java/nio/file/Path\n-   #62 = Class              #99           // java/nio/file/attribute/BasicFileAttributes\n-   #63 = Class              #100          // java/nio/file/FileVisitResult\n-   #64 = Class              #88           // java/io/IOException\n-   #65 = Utf8               <clinit>\n-   #66 = Utf8               SourceFile\n-   #67 = Utf8               EmptyFileFilter.java\n-   #68 = NameAndType        #33:#34       // \"<init>\":()V\n-   #69 = Class              #101          // java/io/File\n-   #70 = NameAndType        #102:#103     // isDirectory:()Z\n-   #71 = NameAndType        #104:#105     // listFiles:()[Ljava/io/File;\n-   #72 = Class              #106          // org/apache/commons/io/IOUtils\n-   #73 = NameAndType        #107:#108     // length:([Ljava/lang/Object;)I\n-   #74 = NameAndType        #107:#109     // length:()J\n-   #75 = Utf8               java/nio/file/LinkOption\n-   #76 = Class              #110          // java/nio/file/Files\n-   #77 = NameAndType        #102:#111     // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #78 = NameAndType        #112:#113     // list:(Ljava/nio/file/Path;)Ljava/util/stream/Stream;\n-   #79 = Class              #97           // java/util/stream/Stream\n-   #80 = NameAndType        #114:#115     // findFirst:()Ljava/util/Optional;\n-   #81 = Class              #116          // java/util/Optional\n-   #82 = NameAndType        #117:#103     // isPresent:()Z\n-   #83 = NameAndType        #118:#119     // toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-   #84 = NameAndType        #120:#34      // close:()V\n-   #85 = Utf8               java/lang/Throwable\n-   #86 = NameAndType        #121:#122     // addSuppressed:(Ljava/lang/Throwable;)V\n-   #87 = NameAndType        #123:#124     // size:(Ljava/nio/file/Path;)J\n-   #88 = Utf8               java/io/IOException\n-   #89 = NameAndType        #125:#126     // handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-   #90 = Utf8               org/apache/commons/io/filefilter/EmptyFileFilter\n-   #91 = NameAndType        #25:#26       // EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #92 = Class              #127          // org/apache/commons/io/filefilter/IOFileFilter\n-   #93 = NameAndType        #128:#129     // negate:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #94 = NameAndType        #27:#26       // NOT_EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #95 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-   #96 = Utf8               java/io/Serializable\n-   #97 = Utf8               java/util/stream/Stream\n-   #98 = Utf8               java/nio/file/Path\n-   #99 = Utf8               java/nio/file/attribute/BasicFileAttributes\n-  #100 = Utf8               java/nio/file/FileVisitResult\n-  #101 = Utf8               java/io/File\n-  #102 = Utf8               isDirectory\n-  #103 = Utf8               ()Z\n-  #104 = Utf8               listFiles\n-  #105 = Utf8               ()[Ljava/io/File;\n-  #106 = Utf8               org/apache/commons/io/IOUtils\n-  #107 = Utf8               length\n-  #108 = Utf8               ([Ljava/lang/Object;)I\n-  #109 = Utf8               ()J\n-  #110 = Utf8               java/nio/file/Files\n-  #111 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #112 = Utf8               list\n-  #113 = Utf8               (Ljava/nio/file/Path;)Ljava/util/stream/Stream;\n-  #114 = Utf8               findFirst\n-  #115 = Utf8               ()Ljava/util/Optional;\n-  #116 = Utf8               java/util/Optional\n-  #117 = Utf8               isPresent\n-  #118 = Utf8               toFileVisitResult\n-  #119 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-  #120 = Utf8               close\n-  #121 = Utf8               addSuppressed\n-  #122 = Utf8               (Ljava/lang/Throwable;)V\n-  #123 = Utf8               size\n-  #124 = Utf8               (Ljava/nio/file/Path;)J\n-  #125 = Utf8               handle\n-  #126 = Utf8               (Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-  #127 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n-  #128 = Utf8               negate\n-  #129 = Utf8               ()Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #58 = Class              #93           // java/util/stream/Stream\n+   #59 = Class              #94           // java/nio/file/FileVisitResult\n+   #60 = Class              #95           // java/nio/file/Path\n+   #61 = Class              #96           // java/nio/file/attribute/BasicFileAttributes\n+   #62 = Utf8               <clinit>\n+   #63 = Utf8               SourceFile\n+   #64 = Utf8               EmptyFileFilter.java\n+   #65 = NameAndType        #33:#34       // \"<init>\":()V\n+   #66 = Class              #97           // java/io/File\n+   #67 = NameAndType        #98:#99       // isDirectory:()Z\n+   #68 = NameAndType        #100:#101     // listFiles:()[Ljava/io/File;\n+   #69 = Class              #102          // org/apache/commons/io/IOUtils\n+   #70 = NameAndType        #103:#104     // length:([Ljava/lang/Object;)I\n+   #71 = NameAndType        #103:#105     // length:()J\n+   #72 = Utf8               java/nio/file/LinkOption\n+   #73 = Class              #106          // java/nio/file/Files\n+   #74 = NameAndType        #98:#107      // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #75 = NameAndType        #108:#109     // list:(Ljava/nio/file/Path;)Ljava/util/stream/Stream;\n+   #76 = NameAndType        #110:#111     // findFirst:()Ljava/util/Optional;\n+   #77 = Class              #112          // java/util/Optional\n+   #78 = NameAndType        #113:#99      // isPresent:()Z\n+   #79 = NameAndType        #114:#115     // toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+   #80 = NameAndType        #116:#34      // close:()V\n+   #81 = Utf8               java/lang/Throwable\n+   #82 = NameAndType        #117:#118     // addSuppressed:(Ljava/lang/Throwable;)V\n+   #83 = NameAndType        #119:#120     // size:(Ljava/nio/file/Path;)J\n+   #84 = Utf8               java/io/IOException\n+   #85 = NameAndType        #121:#122     // handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+   #86 = Utf8               org/apache/commons/io/filefilter/EmptyFileFilter\n+   #87 = NameAndType        #25:#26       // EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #88 = Class              #123          // org/apache/commons/io/filefilter/IOFileFilter\n+   #89 = NameAndType        #124:#125     // negate:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #90 = NameAndType        #27:#26       // NOT_EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #91 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+   #92 = Utf8               java/io/Serializable\n+   #93 = Utf8               java/util/stream/Stream\n+   #94 = Utf8               java/nio/file/FileVisitResult\n+   #95 = Utf8               java/nio/file/Path\n+   #96 = Utf8               java/nio/file/attribute/BasicFileAttributes\n+   #97 = Utf8               java/io/File\n+   #98 = Utf8               isDirectory\n+   #99 = Utf8               ()Z\n+  #100 = Utf8               listFiles\n+  #101 = Utf8               ()[Ljava/io/File;\n+  #102 = Utf8               org/apache/commons/io/IOUtils\n+  #103 = Utf8               length\n+  #104 = Utf8               ([Ljava/lang/Object;)I\n+  #105 = Utf8               ()J\n+  #106 = Utf8               java/nio/file/Files\n+  #107 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #108 = Utf8               list\n+  #109 = Utf8               (Ljava/nio/file/Path;)Ljava/util/stream/Stream;\n+  #110 = Utf8               findFirst\n+  #111 = Utf8               ()Ljava/util/Optional;\n+  #112 = Utf8               java/util/Optional\n+  #113 = Utf8               isPresent\n+  #114 = Utf8               toFileVisitResult\n+  #115 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #116 = Utf8               close\n+  #117 = Utf8               addSuppressed\n+  #118 = Utf8               (Ljava/lang/Throwable;)V\n+  #119 = Utf8               size\n+  #120 = Utf8               (Ljava/nio/file/Path;)J\n+  #121 = Utf8               handle\n+  #122 = Utf8               (Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+  #123 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n+  #124 = Utf8               negate\n+  #125 = Utf8               ()Lorg/apache/commons/io/filefilter/IOFileFilter;\n {\n   public static final org.apache.commons.io.filefilter.IOFileFilter EMPTY;\n     descriptor: Lorg/apache/commons/io/filefilter/IOFileFilter;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public static final org.apache.commons.io.filefilter.IOFileFilter NOT_EMPTY;\n     descriptor: Lorg/apache/commons/io/filefilter/IOFileFilter;\n@@ -214,147 +210,113 @@\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n \n   public java.nio.file.FileVisitResult accept(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes);\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=4, locals=9, args_size=3\n+      stack=4, locals=6, args_size=3\n          0: aload_1\n          1: iconst_0\n          2: anewarray     #6                  // class java/nio/file/LinkOption\n          5: invokestatic  #7                  // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-         8: ifeq          131\n+         8: ifeq          79\n         11: aload_1\n         12: invokestatic  #8                  // Method java/nio/file/Files.list:(Ljava/nio/file/Path;)Ljava/util/stream/Stream;\n         15: astore_3\n-        16: aconst_null\n-        17: astore        4\n-        19: aload_3\n-        20: invokeinterface #9,  1            // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;\n-        25: invokevirtual #10                 // Method java/util/Optional.isPresent:()Z\n-        28: ifne          35\n-        31: iconst_1\n-        32: goto          36\n-        35: iconst_0\n-        36: aload_1\n-        37: invokestatic  #11                 // Method toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-        40: astore        5\n-        42: aload_3\n-        43: ifnull        78\n-        46: aload         4\n-        48: ifnull        72\n-        51: aload_3\n-        52: invokeinterface #12,  1           // InterfaceMethod java/util/stream/Stream.close:()V\n-        57: goto          78\n-        60: astore        6\n-        62: aload         4\n-        64: aload         6\n-        66: invokevirtual #14                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-        69: goto          78\n-        72: aload_3\n-        73: invokeinterface #12,  1           // InterfaceMethod java/util/stream/Stream.close:()V\n-        78: aload         5\n-        80: areturn\n-        81: astore        5\n-        83: aload         5\n-        85: astore        4\n-        87: aload         5\n-        89: athrow\n-        90: astore        7\n-        92: aload_3\n-        93: ifnull        128\n-        96: aload         4\n-        98: ifnull        122\n-       101: aload_3\n-       102: invokeinterface #12,  1           // InterfaceMethod java/util/stream/Stream.close:()V\n-       107: goto          128\n-       110: astore        8\n-       112: aload         4\n-       114: aload         8\n-       116: invokevirtual #14                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       119: goto          128\n-       122: aload_3\n-       123: invokeinterface #12,  1           // InterfaceMethod java/util/stream/Stream.close:()V\n-       128: aload         7\n-       130: athrow\n-       131: aload_1\n-       132: invokestatic  #15                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n-       135: lconst_0\n-       136: lcmp\n-       137: ifne          144\n-       140: iconst_1\n-       141: goto          145\n-       144: iconst_0\n-       145: aload_1\n-       146: invokestatic  #11                 // Method toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-       149: areturn\n-       150: astore_3\n-       151: aload_0\n-       152: aload_3\n-       153: invokevirtual #17                 // Method handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-       156: areturn\n+        16: aload_3\n+        17: invokeinterface #9,  1            // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;\n+        22: invokevirtual #10                 // Method java/util/Optional.isPresent:()Z\n+        25: ifne          32\n+        28: iconst_1\n+        29: goto          33\n+        32: iconst_0\n+        33: aload_1\n+        34: invokestatic  #11                 // Method toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+        37: astore        4\n+        39: aload_3\n+        40: ifnull        49\n+        43: aload_3\n+        44: invokeinterface #12,  1           // InterfaceMethod java/util/stream/Stream.close:()V\n+        49: aload         4\n+        51: areturn\n+        52: astore        4\n+        54: aload_3\n+        55: ifnull        76\n+        58: aload_3\n+        59: invokeinterface #12,  1           // InterfaceMethod java/util/stream/Stream.close:()V\n+        64: goto          76\n+        67: astore        5\n+        69: aload         4\n+        71: aload         5\n+        73: invokevirtual #14                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        76: aload         4\n+        78: athrow\n+        79: aload_1\n+        80: invokestatic  #15                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+        83: lconst_0\n+        84: lcmp\n+        85: ifne          92\n+        88: iconst_1\n+        89: goto          93\n+        92: iconst_0\n+        93: aload_1\n+        94: invokestatic  #11                 // Method toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+        97: areturn\n+        98: astore_3\n+        99: aload_0\n+       100: aload_3\n+       101: invokevirtual #17                 // Method handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+       104: areturn\n       Exception table:\n          from    to  target type\n-            51    57    60   Class java/lang/Throwable\n-            19    42    81   Class java/lang/Throwable\n-            19    42    90   any\n-           101   107   110   Class java/lang/Throwable\n-            81    92    90   any\n-             0    78   150   Class java/io/IOException\n-            81   149   150   Class java/io/IOException\n+            16    39    52   Class java/lang/Throwable\n+            58    64    67   Class java/lang/Throwable\n+             0    49    98   Class java/io/IOException\n+            52    97    98   Class java/io/IOException\n       LineNumberTable:\n         line 121: 0\n         line 122: 11\n-        line 123: 19\n-        line 124: 42\n-        line 123: 78\n-        line 122: 81\n-        line 124: 90\n-        line 126: 131\n-        line 127: 150\n-        line 128: 151\n+        line 123: 16\n+        line 124: 39\n+        line 123: 49\n+        line 122: 52\n+        line 126: 79\n+        line 127: 98\n+        line 128: 99\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           16     115     3 stream   Ljava/util/stream/Stream;\n-          151       6     3     e   Ljava/io/IOException;\n-            0     157     0  this   Lorg/apache/commons/io/filefilter/EmptyFileFilter;\n-            0     157     1  file   Ljava/nio/file/Path;\n-            0     157     2 attributes   Ljava/nio/file/attribute/BasicFileAttributes;\n+           16      63     3 stream   Ljava/util/stream/Stream;\n+           99       6     3     e   Ljava/io/IOException;\n+            0     105     0  this   Lorg/apache/commons/io/filefilter/EmptyFileFilter;\n+            0     105     1  file   Ljava/nio/file/Path;\n+            0     105     2 attributes   Ljava/nio/file/attribute/BasicFileAttributes;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n-           16     115     3 stream   Ljava/util/stream/Stream<Ljava/nio/file/Path;>;\n-      StackMapTable: number_of_entries = 14\n-        frame_type = 253 /* append */\n-          offset_delta = 35\n-          locals = [ class java/util/stream/Stream, class java/lang/Throwable ]\n+           16      63     3 stream   Ljava/util/stream/Stream<Ljava/nio/file/Path;>;\n+      StackMapTable: number_of_entries = 10\n+        frame_type = 252 /* append */\n+          offset_delta = 32\n+          locals = [ class java/util/stream/Stream ]\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-        frame_type = 255 /* full_frame */\n-          offset_delta = 23\n-          locals = [ class org/apache/commons/io/filefilter/EmptyFileFilter, class java/nio/file/Path, class java/nio/file/attribute/BasicFileAttributes, class java/util/stream/Stream, class java/lang/Throwable, class java/nio/file/FileVisitResult ]\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 11 /* same */\n-        frame_type = 5 /* same */\n+        frame_type = 252 /* append */\n+          offset_delta = 15\n+          locals = [ class java/nio/file/FileVisitResult ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 2\n-          locals = [ class org/apache/commons/io/filefilter/EmptyFileFilter, class java/nio/file/Path, class java/nio/file/attribute/BasicFileAttributes, class java/util/stream/Stream, class java/lang/Throwable ]\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 72 /* same_locals_1_stack_item */\n+          locals = [ class org/apache/commons/io/filefilter/EmptyFileFilter, class java/nio/file/Path, class java/nio/file/attribute/BasicFileAttributes, class java/util/stream/Stream ]\n           stack = [ class java/lang/Throwable ]\n         frame_type = 255 /* full_frame */\n-          offset_delta = 19\n-          locals = [ class org/apache/commons/io/filefilter/EmptyFileFilter, class java/nio/file/Path, class java/nio/file/attribute/BasicFileAttributes, class java/util/stream/Stream, class java/lang/Throwable, top, top, class java/lang/Throwable ]\n+          offset_delta = 14\n+          locals = [ class org/apache/commons/io/filefilter/EmptyFileFilter, class java/nio/file/Path, class java/nio/file/attribute/BasicFileAttributes, class java/util/stream/Stream, class java/lang/Throwable ]\n           stack = [ class java/lang/Throwable ]\n-        frame_type = 11 /* same */\n-        frame_type = 5 /* same */\n-        frame_type = 255 /* full_frame */\n+        frame_type = 8 /* same */\n+        frame_type = 249 /* chop */\n           offset_delta = 2\n-          locals = [ class org/apache/commons/io/filefilter/EmptyFileFilter, class java/nio/file/Path, class java/nio/file/attribute/BasicFileAttributes ]\n-          stack = []\n         frame_type = 12 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n         frame_type = 68 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n \n   static {};\n"}]}
