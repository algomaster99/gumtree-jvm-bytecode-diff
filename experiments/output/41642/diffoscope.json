{"diffoscope-json-version": 1, "source1": "first/SegmentHeader.class", "source2": "second/SegmentHeader.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -38,19 +38,23 @@\n     private boolean have_field_flags_hi;\n     private boolean have_method_flags_hi;\n     private boolean have_code_flags_hi;\n     private int ic_count;\n     private int class_count;\n     private final SegmentHeader.Counter majverCounter;\n     \n+    static {\n+        magic = new int[] { 202, 254, 208, 13 };\n+    }\n+    \n     public SegmentHeader() {\n         super(1, (SegmentHeader)null);\n         this.band_headers = new IntList();\n         this.have_all_code_flags = true;\n-        this.majverCounter = new SegmentHeader.Counter((SegmentHeader.SegmentHeader$1)null);\n+        this.majverCounter = new SegmentHeader.Counter((SegmentHeader.Counter)null);\n     }\n     \n     public void addMajorVersion(final int major) {\n         this.majverCounter.add(major);\n     }\n     \n     public void appendBandCodingSpecifier(final int specifier) {\n@@ -249,15 +253,14 @@\n         if ((this.archive_options & 0x1) > 0) {\n             out.write(this.encodeScalar(this.band_headers.size(), Codec.UNSIGNED5));\n             out.write(this.encodeScalar(this.attribute_definition_count, Codec.UNSIGNED5));\n         }\n     }\n     \n     private void writeClassCounts(final OutputStream out) throws IOException, Pack200Exception {\n-        final int default_class_minver = 0;\n         final int default_class_majver = this.majverCounter.getMostCommon();\n         out.write(this.encodeScalar(this.ic_count, Codec.UNSIGNED5));\n         out.write(this.encodeScalar(0, Codec.UNSIGNED5));\n         out.write(this.encodeScalar(default_class_majver, Codec.UNSIGNED5));\n         out.write(this.encodeScalar(this.class_count, Codec.UNSIGNED5));\n     }\n     \n@@ -273,12 +276,8 @@\n         out.write(this.encodeScalar(this.cp_Class_count, Codec.UNSIGNED5));\n         out.write(this.encodeScalar(this.cp_Signature_count, Codec.UNSIGNED5));\n         out.write(this.encodeScalar(this.cp_Descr_count, Codec.UNSIGNED5));\n         out.write(this.encodeScalar(this.cp_Field_count, Codec.UNSIGNED5));\n         out.write(this.encodeScalar(this.cp_Method_count, Codec.UNSIGNED5));\n         out.write(this.encodeScalar(this.cp_Imethod_count, Codec.UNSIGNED5));\n     }\n-    \n-    static {\n-        magic = new int[] { 202, 254, 208, 13 };\n-    }\n }\n"}]}
