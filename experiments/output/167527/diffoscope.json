{"diffoscope-json-version": 1, "source1": "first/ByteOrderMark.class", "source2": "second/ByteOrderMark.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,62 +1,62 @@\n-  SHA-256 checksum d815e75a7be595485b689a19bf50f16f2d56d36e4878054f93dace6c18211d91\n+  SHA-256 checksum ef0db9fe11540c25672092b2d9ae394d4d1444fe272ecd4fa7c6ddaefab9c1b3\n   Compiled from \"ByteOrderMark.java\"\n public class org.apache.commons.io.ByteOrderMark implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #14                         // org/apache/commons/io/ByteOrderMark\n   super_class: #44                        // java/lang/Object\n   interfaces: 1, fields: 9, methods: 9, attributes: 1\n Constant pool:\n-    #1 = Methodref          #44.#102      // java/lang/Object.\"<init>\":()V\n+    #1 = Methodref          #44.#100      // java/lang/Object.\"<init>\":()V\n     #2 = String             #60           // charsetName\n-    #3 = Methodref          #103.#104     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+    #3 = Methodref          #101.#102     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n     #4 = String             #62           // bytes\n-    #5 = Methodref          #105.#106     // java/lang/String.isEmpty:()Z\n-    #6 = Class              #107          // java/lang/IllegalArgumentException\n-    #7 = String             #108          // No charsetName specified\n-    #8 = Methodref          #6.#109       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #9 = String             #110          // No bytes specified\n-   #10 = Fieldref           #14.#111      // org/apache/commons/io/ByteOrderMark.charsetName:Ljava/lang/String;\n-   #11 = Methodref          #112.#113     // \"[I\".clone:()Ljava/lang/Object;\n+    #5 = Methodref          #71.#103      // java/lang/String.isEmpty:()Z\n+    #6 = Class              #104          // java/lang/IllegalArgumentException\n+    #7 = String             #105          // No charsetName specified\n+    #8 = Methodref          #6.#106       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+    #9 = String             #107          // No bytes specified\n+   #10 = Fieldref           #14.#108      // org/apache/commons/io/ByteOrderMark.charsetName:Ljava/lang/String;\n+   #11 = Methodref          #109.#110     // \"[I\".clone:()Ljava/lang/Object;\n    #12 = Class              #63           // \"[I\"\n-   #13 = Fieldref           #14.#114      // org/apache/commons/io/ByteOrderMark.bytes:[I\n-   #14 = Class              #115          // org/apache/commons/io/ByteOrderMark\n-   #15 = Methodref          #14.#116      // org/apache/commons/io/ByteOrderMark.length:()I\n-   #16 = Methodref          #14.#117      // org/apache/commons/io/ByteOrderMark.get:(I)I\n-   #17 = Methodref          #118.#119     // org/apache/commons/io/IOUtils.byteArray:(I)[B\n-   #18 = Methodref          #44.#120      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #19 = Methodref          #44.#121      // java/lang/Object.hashCode:()I\n-   #20 = Class              #122          // java/lang/StringBuilder\n-   #21 = Methodref          #20.#102      // java/lang/StringBuilder.\"<init>\":()V\n-   #22 = Methodref          #123.#124     // java/lang/Class.getSimpleName:()Ljava/lang/String;\n-   #23 = Methodref          #20.#125      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #24 = Methodref          #20.#126      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-   #25 = String             #127          // :\n-   #26 = String             #128          // ,\n-   #27 = String             #129          // 0x\n-   #28 = Methodref          #130.#131     // java/lang/Integer.toHexString:(I)Ljava/lang/String;\n-   #29 = Fieldref           #132.#133     // java/util/Locale.ROOT:Ljava/util/Locale;\n-   #30 = Methodref          #105.#134     // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-   #31 = Methodref          #20.#135      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #32 = Fieldref           #136.#137     // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-   #33 = Methodref          #138.#139     // java/nio/charset/Charset.name:()Ljava/lang/String;\n-   #34 = Methodref          #14.#140      // org/apache/commons/io/ByteOrderMark.\"<init>\":(Ljava/lang/String;[I)V\n-   #35 = Fieldref           #14.#141      // org/apache/commons/io/ByteOrderMark.UTF_8:Lorg/apache/commons/io/ByteOrderMark;\n-   #36 = Fieldref           #136.#142     // java/nio/charset/StandardCharsets.UTF_16BE:Ljava/nio/charset/Charset;\n-   #37 = Fieldref           #14.#143      // org/apache/commons/io/ByteOrderMark.UTF_16BE:Lorg/apache/commons/io/ByteOrderMark;\n-   #38 = Fieldref           #136.#144     // java/nio/charset/StandardCharsets.UTF_16LE:Ljava/nio/charset/Charset;\n-   #39 = Fieldref           #14.#145      // org/apache/commons/io/ByteOrderMark.UTF_16LE:Lorg/apache/commons/io/ByteOrderMark;\n-   #40 = String             #146          // UTF-32BE\n-   #41 = Fieldref           #14.#147      // org/apache/commons/io/ByteOrderMark.UTF_32BE:Lorg/apache/commons/io/ByteOrderMark;\n-   #42 = String             #148          // UTF-32LE\n-   #43 = Fieldref           #14.#149      // org/apache/commons/io/ByteOrderMark.UTF_32LE:Lorg/apache/commons/io/ByteOrderMark;\n-   #44 = Class              #150          // java/lang/Object\n-   #45 = Class              #151          // java/io/Serializable\n+   #13 = Fieldref           #14.#111      // org/apache/commons/io/ByteOrderMark.bytes:[I\n+   #14 = Class              #112          // org/apache/commons/io/ByteOrderMark\n+   #15 = Methodref          #14.#113      // org/apache/commons/io/ByteOrderMark.length:()I\n+   #16 = Methodref          #14.#114      // org/apache/commons/io/ByteOrderMark.get:(I)I\n+   #17 = Methodref          #115.#116     // org/apache/commons/io/IOUtils.byteArray:(I)[B\n+   #18 = Methodref          #44.#117      // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #19 = Methodref          #44.#118      // java/lang/Object.hashCode:()I\n+   #20 = Class              #119          // java/lang/StringBuilder\n+   #21 = Methodref          #20.#100      // java/lang/StringBuilder.\"<init>\":()V\n+   #22 = Methodref          #120.#121     // java/lang/Class.getSimpleName:()Ljava/lang/String;\n+   #23 = Methodref          #20.#122      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #24 = Methodref          #20.#123      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+   #25 = String             #124          // :\n+   #26 = String             #125          // ,\n+   #27 = String             #126          // 0x\n+   #28 = Methodref          #127.#128     // java/lang/Integer.toHexString:(I)Ljava/lang/String;\n+   #29 = Fieldref           #129.#130     // java/util/Locale.ROOT:Ljava/util/Locale;\n+   #30 = Methodref          #71.#131      // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+   #31 = Methodref          #20.#132      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #32 = Fieldref           #133.#134     // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+   #33 = Methodref          #135.#136     // java/nio/charset/Charset.name:()Ljava/lang/String;\n+   #34 = Methodref          #14.#137      // org/apache/commons/io/ByteOrderMark.\"<init>\":(Ljava/lang/String;[I)V\n+   #35 = Fieldref           #14.#138      // org/apache/commons/io/ByteOrderMark.UTF_8:Lorg/apache/commons/io/ByteOrderMark;\n+   #36 = Fieldref           #133.#139     // java/nio/charset/StandardCharsets.UTF_16BE:Ljava/nio/charset/Charset;\n+   #37 = Fieldref           #14.#140      // org/apache/commons/io/ByteOrderMark.UTF_16BE:Lorg/apache/commons/io/ByteOrderMark;\n+   #38 = Fieldref           #133.#141     // java/nio/charset/StandardCharsets.UTF_16LE:Ljava/nio/charset/Charset;\n+   #39 = Fieldref           #14.#142      // org/apache/commons/io/ByteOrderMark.UTF_16LE:Lorg/apache/commons/io/ByteOrderMark;\n+   #40 = String             #143          // UTF-32BE\n+   #41 = Fieldref           #14.#144      // org/apache/commons/io/ByteOrderMark.UTF_32BE:Lorg/apache/commons/io/ByteOrderMark;\n+   #42 = String             #145          // UTF-32LE\n+   #43 = Fieldref           #14.#146      // org/apache/commons/io/ByteOrderMark.UTF_32LE:Lorg/apache/commons/io/ByteOrderMark;\n+   #44 = Class              #147          // java/lang/Object\n+   #45 = Class              #148          // java/io/Serializable\n    #46 = Utf8               serialVersionUID\n    #47 = Utf8               J\n    #48 = Utf8               ConstantValue\n    #49 = Long               1l\n    #51 = Utf8               UTF_8\n    #52 = Utf8               Lorg/apache/commons/io/ByteOrderMark;\n    #53 = Utf8               UTF_16BE\n@@ -73,126 +73,123 @@\n    #64 = Utf8               <init>\n    #65 = Utf8               (Ljava/lang/String;[I)V\n    #66 = Utf8               Code\n    #67 = Utf8               LineNumberTable\n    #68 = Utf8               LocalVariableTable\n    #69 = Utf8               this\n    #70 = Utf8               StackMapTable\n-   #71 = Class              #115          // org/apache/commons/io/ByteOrderMark\n-   #72 = Class              #152          // java/lang/String\n-   #73 = Utf8               equals\n-   #74 = Utf8               (Ljava/lang/Object;)Z\n-   #75 = Utf8               i\n-   #76 = Utf8               I\n-   #77 = Utf8               obj\n-   #78 = Utf8               Ljava/lang/Object;\n-   #79 = Utf8               bom\n-   #80 = Utf8               get\n-   #81 = Utf8               (I)I\n-   #82 = Utf8               pos\n-   #83 = Utf8               getBytes\n-   #84 = Utf8               ()[B\n-   #85 = Utf8               copy\n-   #86 = Utf8               [B\n-   #87 = Class              #86           // \"[B\"\n-   #88 = Utf8               getCharsetName\n-   #89 = Utf8               ()Ljava/lang/String;\n-   #90 = Utf8               hashCode\n-   #91 = Utf8               ()I\n-   #92 = Utf8               b\n-   #93 = Utf8               length\n-   #94 = Utf8               toString\n-   #95 = Utf8               builder\n-   #96 = Utf8               Ljava/lang/StringBuilder;\n-   #97 = Class              #122          // java/lang/StringBuilder\n-   #98 = Utf8               <clinit>\n-   #99 = Utf8               ()V\n-  #100 = Utf8               SourceFile\n-  #101 = Utf8               ByteOrderMark.java\n-  #102 = NameAndType        #64:#99       // \"<init>\":()V\n-  #103 = Class              #153          // java/util/Objects\n-  #104 = NameAndType        #154:#155     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #105 = Class              #152          // java/lang/String\n-  #106 = NameAndType        #156:#157     // isEmpty:()Z\n-  #107 = Utf8               java/lang/IllegalArgumentException\n-  #108 = Utf8               No charsetName specified\n-  #109 = NameAndType        #64:#158      // \"<init>\":(Ljava/lang/String;)V\n-  #110 = Utf8               No bytes specified\n-  #111 = NameAndType        #60:#61       // charsetName:Ljava/lang/String;\n-  #112 = Class              #63           // \"[I\"\n-  #113 = NameAndType        #159:#160     // clone:()Ljava/lang/Object;\n-  #114 = NameAndType        #62:#63       // bytes:[I\n-  #115 = Utf8               org/apache/commons/io/ByteOrderMark\n-  #116 = NameAndType        #93:#91       // length:()I\n-  #117 = NameAndType        #80:#81       // get:(I)I\n-  #118 = Class              #161          // org/apache/commons/io/IOUtils\n-  #119 = NameAndType        #162:#163     // byteArray:(I)[B\n-  #120 = NameAndType        #164:#165     // getClass:()Ljava/lang/Class;\n-  #121 = NameAndType        #90:#91       // hashCode:()I\n-  #122 = Utf8               java/lang/StringBuilder\n-  #123 = Class              #166          // java/lang/Class\n-  #124 = NameAndType        #167:#89      // getSimpleName:()Ljava/lang/String;\n-  #125 = NameAndType        #168:#169     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #126 = NameAndType        #168:#170     // append:(C)Ljava/lang/StringBuilder;\n-  #127 = Utf8               :\n-  #128 = Utf8               ,\n-  #129 = Utf8               0x\n-  #130 = Class              #171          // java/lang/Integer\n-  #131 = NameAndType        #172:#173     // toHexString:(I)Ljava/lang/String;\n-  #132 = Class              #174          // java/util/Locale\n-  #133 = NameAndType        #175:#176     // ROOT:Ljava/util/Locale;\n-  #134 = NameAndType        #177:#178     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #135 = NameAndType        #94:#89       // toString:()Ljava/lang/String;\n-  #136 = Class              #179          // java/nio/charset/StandardCharsets\n-  #137 = NameAndType        #51:#180      // UTF_8:Ljava/nio/charset/Charset;\n-  #138 = Class              #181          // java/nio/charset/Charset\n-  #139 = NameAndType        #182:#89      // name:()Ljava/lang/String;\n-  #140 = NameAndType        #64:#65       // \"<init>\":(Ljava/lang/String;[I)V\n-  #141 = NameAndType        #51:#52       // UTF_8:Lorg/apache/commons/io/ByteOrderMark;\n-  #142 = NameAndType        #53:#180      // UTF_16BE:Ljava/nio/charset/Charset;\n-  #143 = NameAndType        #53:#52       // UTF_16BE:Lorg/apache/commons/io/ByteOrderMark;\n-  #144 = NameAndType        #54:#180      // UTF_16LE:Ljava/nio/charset/Charset;\n-  #145 = NameAndType        #54:#52       // UTF_16LE:Lorg/apache/commons/io/ByteOrderMark;\n-  #146 = Utf8               UTF-32BE\n-  #147 = NameAndType        #55:#52       // UTF_32BE:Lorg/apache/commons/io/ByteOrderMark;\n-  #148 = Utf8               UTF-32LE\n-  #149 = NameAndType        #56:#52       // UTF_32LE:Lorg/apache/commons/io/ByteOrderMark;\n-  #150 = Utf8               java/lang/Object\n-  #151 = Utf8               java/io/Serializable\n-  #152 = Utf8               java/lang/String\n-  #153 = Utf8               java/util/Objects\n-  #154 = Utf8               requireNonNull\n-  #155 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #156 = Utf8               isEmpty\n-  #157 = Utf8               ()Z\n-  #158 = Utf8               (Ljava/lang/String;)V\n-  #159 = Utf8               clone\n-  #160 = Utf8               ()Ljava/lang/Object;\n-  #161 = Utf8               org/apache/commons/io/IOUtils\n-  #162 = Utf8               byteArray\n-  #163 = Utf8               (I)[B\n-  #164 = Utf8               getClass\n-  #165 = Utf8               ()Ljava/lang/Class;\n-  #166 = Utf8               java/lang/Class\n-  #167 = Utf8               getSimpleName\n-  #168 = Utf8               append\n-  #169 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #170 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #171 = Utf8               java/lang/Integer\n-  #172 = Utf8               toHexString\n-  #173 = Utf8               (I)Ljava/lang/String;\n-  #174 = Utf8               java/util/Locale\n-  #175 = Utf8               ROOT\n-  #176 = Utf8               Ljava/util/Locale;\n-  #177 = Utf8               toUpperCase\n-  #178 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n-  #179 = Utf8               java/nio/charset/StandardCharsets\n-  #180 = Utf8               Ljava/nio/charset/Charset;\n-  #181 = Utf8               java/nio/charset/Charset\n-  #182 = Utf8               name\n+   #71 = Class              #149          // java/lang/String\n+   #72 = Utf8               equals\n+   #73 = Utf8               (Ljava/lang/Object;)Z\n+   #74 = Utf8               i\n+   #75 = Utf8               I\n+   #76 = Utf8               obj\n+   #77 = Utf8               Ljava/lang/Object;\n+   #78 = Utf8               bom\n+   #79 = Utf8               get\n+   #80 = Utf8               (I)I\n+   #81 = Utf8               pos\n+   #82 = Utf8               getBytes\n+   #83 = Utf8               ()[B\n+   #84 = Utf8               copy\n+   #85 = Utf8               [B\n+   #86 = Class              #85           // \"[B\"\n+   #87 = Utf8               getCharsetName\n+   #88 = Utf8               ()Ljava/lang/String;\n+   #89 = Utf8               hashCode\n+   #90 = Utf8               ()I\n+   #91 = Utf8               b\n+   #92 = Utf8               length\n+   #93 = Utf8               toString\n+   #94 = Utf8               builder\n+   #95 = Utf8               Ljava/lang/StringBuilder;\n+   #96 = Utf8               <clinit>\n+   #97 = Utf8               ()V\n+   #98 = Utf8               SourceFile\n+   #99 = Utf8               ByteOrderMark.java\n+  #100 = NameAndType        #64:#97       // \"<init>\":()V\n+  #101 = Class              #150          // java/util/Objects\n+  #102 = NameAndType        #151:#152     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #103 = NameAndType        #153:#154     // isEmpty:()Z\n+  #104 = Utf8               java/lang/IllegalArgumentException\n+  #105 = Utf8               No charsetName specified\n+  #106 = NameAndType        #64:#155      // \"<init>\":(Ljava/lang/String;)V\n+  #107 = Utf8               No bytes specified\n+  #108 = NameAndType        #60:#61       // charsetName:Ljava/lang/String;\n+  #109 = Class              #63           // \"[I\"\n+  #110 = NameAndType        #156:#157     // clone:()Ljava/lang/Object;\n+  #111 = NameAndType        #62:#63       // bytes:[I\n+  #112 = Utf8               org/apache/commons/io/ByteOrderMark\n+  #113 = NameAndType        #92:#90       // length:()I\n+  #114 = NameAndType        #79:#80       // get:(I)I\n+  #115 = Class              #158          // org/apache/commons/io/IOUtils\n+  #116 = NameAndType        #159:#160     // byteArray:(I)[B\n+  #117 = NameAndType        #161:#162     // getClass:()Ljava/lang/Class;\n+  #118 = NameAndType        #89:#90       // hashCode:()I\n+  #119 = Utf8               java/lang/StringBuilder\n+  #120 = Class              #163          // java/lang/Class\n+  #121 = NameAndType        #164:#88      // getSimpleName:()Ljava/lang/String;\n+  #122 = NameAndType        #165:#166     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #123 = NameAndType        #165:#167     // append:(C)Ljava/lang/StringBuilder;\n+  #124 = Utf8               :\n+  #125 = Utf8               ,\n+  #126 = Utf8               0x\n+  #127 = Class              #168          // java/lang/Integer\n+  #128 = NameAndType        #169:#170     // toHexString:(I)Ljava/lang/String;\n+  #129 = Class              #171          // java/util/Locale\n+  #130 = NameAndType        #172:#173     // ROOT:Ljava/util/Locale;\n+  #131 = NameAndType        #174:#175     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #132 = NameAndType        #93:#88       // toString:()Ljava/lang/String;\n+  #133 = Class              #176          // java/nio/charset/StandardCharsets\n+  #134 = NameAndType        #51:#177      // UTF_8:Ljava/nio/charset/Charset;\n+  #135 = Class              #178          // java/nio/charset/Charset\n+  #136 = NameAndType        #179:#88      // name:()Ljava/lang/String;\n+  #137 = NameAndType        #64:#65       // \"<init>\":(Ljava/lang/String;[I)V\n+  #138 = NameAndType        #51:#52       // UTF_8:Lorg/apache/commons/io/ByteOrderMark;\n+  #139 = NameAndType        #53:#177      // UTF_16BE:Ljava/nio/charset/Charset;\n+  #140 = NameAndType        #53:#52       // UTF_16BE:Lorg/apache/commons/io/ByteOrderMark;\n+  #141 = NameAndType        #54:#177      // UTF_16LE:Ljava/nio/charset/Charset;\n+  #142 = NameAndType        #54:#52       // UTF_16LE:Lorg/apache/commons/io/ByteOrderMark;\n+  #143 = Utf8               UTF-32BE\n+  #144 = NameAndType        #55:#52       // UTF_32BE:Lorg/apache/commons/io/ByteOrderMark;\n+  #145 = Utf8               UTF-32LE\n+  #146 = NameAndType        #56:#52       // UTF_32LE:Lorg/apache/commons/io/ByteOrderMark;\n+  #147 = Utf8               java/lang/Object\n+  #148 = Utf8               java/io/Serializable\n+  #149 = Utf8               java/lang/String\n+  #150 = Utf8               java/util/Objects\n+  #151 = Utf8               requireNonNull\n+  #152 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #153 = Utf8               isEmpty\n+  #154 = Utf8               ()Z\n+  #155 = Utf8               (Ljava/lang/String;)V\n+  #156 = Utf8               clone\n+  #157 = Utf8               ()Ljava/lang/Object;\n+  #158 = Utf8               org/apache/commons/io/IOUtils\n+  #159 = Utf8               byteArray\n+  #160 = Utf8               (I)[B\n+  #161 = Utf8               getClass\n+  #162 = Utf8               ()Ljava/lang/Class;\n+  #163 = Utf8               java/lang/Class\n+  #164 = Utf8               getSimpleName\n+  #165 = Utf8               append\n+  #166 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #167 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #168 = Utf8               java/lang/Integer\n+  #169 = Utf8               toHexString\n+  #170 = Utf8               (I)Ljava/lang/String;\n+  #171 = Utf8               java/util/Locale\n+  #172 = Utf8               ROOT\n+  #173 = Utf8               Ljava/util/Locale;\n+  #174 = Utf8               toUpperCase\n+  #175 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+  #176 = Utf8               java/nio/charset/StandardCharsets\n+  #177 = Utf8               Ljava/nio/charset/Charset;\n+  #178 = Utf8               java/nio/charset/Charset\n+  #179 = Utf8               name\n {\n   private static final long serialVersionUID = 1l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 1l\n \n   public static final org.apache.commons.io.ByteOrderMark UTF_8;\n"}]}
