{"diffoscope-json-version": 1, "source1": "first/FingerClient.class", "source2": "second/FingerClient.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -21,40 +21,42 @@\n     public FingerClient() {\n         this.buffer = new char[1024];\n         this.setDefaultPort(79);\n     }\n     \n     public String query(final boolean longOutput, final String username) throws IOException {\n         final StringBuilder result = new StringBuilder(this.buffer.length);\n-        final BufferedReader input = new BufferedReader(new InputStreamReader(this.getInputStream(longOutput, username), this.getCharset()));\n         Throwable t = null;\n         try {\n-            while (true) {\n-                final int read = input.read(this.buffer, 0, this.buffer.length);\n-                if (read <= 0) {\n-                    break;\n+            final BufferedReader input = new BufferedReader(new InputStreamReader(this.getInputStream(longOutput, username), this.getCharset()));\n+            try {\n+                while (true) {\n+                    final int read = input.read(this.buffer, 0, this.buffer.length);\n+                    if (read <= 0) {\n+                        break;\n+                    }\n+                    result.append(this.buffer, 0, read);\n                 }\n-                result.append(this.buffer, 0, read);\n             }\n-        }\n-        catch (final Throwable t2) {\n-            t = t2;\n-            throw t2;\n-        }\n-        finally {\n-            if (t != null) {\n-                try {\n+            finally {\n+                if (input != null) {\n                     input.close();\n                 }\n-                catch (final Throwable exception) {\n-                    t.addSuppressed(exception);\n-                }\n+            }\n+        }\n+        finally {\n+            if (t == null) {\n+                final Throwable exception;\n+                t = exception;\n             }\n             else {\n-                input.close();\n+                final Throwable exception;\n+                if (t != exception) {\n+                    t.addSuppressed(exception);\n+                }\n             }\n         }\n         return result.toString();\n     }\n     \n     public String query(final boolean longOutput) throws IOException {\n         return this.query(longOutput, \"\");\n"}]}
