{"diffoscope-json-version": 1, "source1": "first/FileBasedScatterGatherBackingStore.class", "source2": "second/FileBasedScatterGatherBackingStore.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,38 +1,38 @@\n-  SHA-256 checksum 09cb20c9c7c1994beb6f18494f9d180c5adfb19f4d318aa002e36897512026fd\n+  SHA-256 checksum a85033bbb7a288f2d55d88d0a6fb6a720c363d6416fae5e9075d4c2911bcd5f5\n   Compiled from \"FileBasedScatterGatherBackingStore.java\"\n public class org.apache.commons.compress.parallel.FileBasedScatterGatherBackingStore implements org.apache.commons.compress.parallel.ScatterGatherBackingStore\n   minor version: 0\n-  major version: 51\n+  major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #19                         // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n   super_class: #20                        // java/lang/Object\n   interfaces: 1, fields: 3, methods: 5, attributes: 1\n Constant pool:\n-   #1 = Methodref          #20.#59        // java/lang/Object.\"<init>\":()V\n-   #2 = Fieldref           #19.#60        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.target:Ljava/io/File;\n-   #3 = Methodref          #61.#62        // java/io/File.toPath:()Ljava/nio/file/Path;\n-   #4 = Class              #63            // java/nio/file/OpenOption\n-   #5 = Methodref          #64.#65        // java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n-   #6 = Fieldref           #19.#66        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.os:Ljava/io/OutputStream;\n-   #7 = Class              #67            // java/io/FileNotFoundException\n-   #8 = Class              #68            // java/io/IOException\n-   #9 = Class              #69            // java/lang/RuntimeException\n-  #10 = Methodref          #9.#70         // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n-  #11 = Methodref          #64.#71        // java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-  #12 = Fieldref           #19.#72        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.closed:Z\n-  #13 = Methodref          #73.#74        // java/io/OutputStream.close:()V\n-  #14 = Methodref          #73.#75        // java/io/OutputStream.write:([BII)V\n-  #15 = Methodref          #19.#76        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.closeForWriting:()V\n-  #16 = Methodref          #61.#77        // java/io/File.exists:()Z\n-  #17 = Methodref          #61.#78        // java/io/File.delete:()Z\n-  #18 = Methodref          #61.#79        // java/io/File.deleteOnExit:()V\n-  #19 = Class              #80            // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n-  #20 = Class              #81            // java/lang/Object\n-  #21 = Class              #82            // org/apache/commons/compress/parallel/ScatterGatherBackingStore\n+   #1 = Methodref          #20.#56        // java/lang/Object.\"<init>\":()V\n+   #2 = Fieldref           #19.#57        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.target:Ljava/io/File;\n+   #3 = Methodref          #39.#58        // java/io/File.toPath:()Ljava/nio/file/Path;\n+   #4 = Class              #59            // java/nio/file/OpenOption\n+   #5 = Methodref          #60.#61        // java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+   #6 = Fieldref           #19.#62        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.os:Ljava/io/OutputStream;\n+   #7 = Class              #63            // java/io/FileNotFoundException\n+   #8 = Class              #64            // java/io/IOException\n+   #9 = Class              #65            // java/lang/RuntimeException\n+  #10 = Methodref          #9.#66         // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+  #11 = Methodref          #60.#67        // java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+  #12 = Fieldref           #19.#68        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.closed:Z\n+  #13 = Methodref          #69.#70        // java/io/OutputStream.close:()V\n+  #14 = Methodref          #69.#71        // java/io/OutputStream.write:([BII)V\n+  #15 = Methodref          #19.#72        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.closeForWriting:()V\n+  #16 = Methodref          #39.#73        // java/io/File.exists:()Z\n+  #17 = Methodref          #39.#74        // java/io/File.delete:()Z\n+  #18 = Methodref          #39.#75        // java/io/File.deleteOnExit:()V\n+  #19 = Class              #76            // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n+  #20 = Class              #77            // java/lang/Object\n+  #21 = Class              #78            // org/apache/commons/compress/parallel/ScatterGatherBackingStore\n   #22 = Utf8               target\n   #23 = Utf8               Ljava/io/File;\n   #24 = Utf8               os\n   #25 = Utf8               Ljava/io/OutputStream;\n   #26 = Utf8               closed\n   #27 = Utf8               Z\n   #28 = Utf8               <init>\n@@ -42,74 +42,70 @@\n   #32 = Utf8               LocalVariableTable\n   #33 = Utf8               ex\n   #34 = Utf8               Ljava/io/FileNotFoundException;\n   #35 = Utf8               Ljava/io/IOException;\n   #36 = Utf8               this\n   #37 = Utf8               Lorg/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore;\n   #38 = Utf8               StackMapTable\n-  #39 = Class              #80            // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n-  #40 = Class              #83            // java/io/File\n-  #41 = Class              #67            // java/io/FileNotFoundException\n-  #42 = Class              #68            // java/io/IOException\n-  #43 = Utf8               Exceptions\n-  #44 = Utf8               getInputStream\n-  #45 = Utf8               ()Ljava/io/InputStream;\n-  #46 = Utf8               closeForWriting\n-  #47 = Utf8               ()V\n-  #48 = Utf8               writeOut\n-  #49 = Utf8               ([BII)V\n-  #50 = Utf8               data\n-  #51 = Utf8               [B\n-  #52 = Utf8               offset\n-  #53 = Utf8               I\n-  #54 = Utf8               length\n-  #55 = Utf8               close\n-  #56 = Class              #84            // java/lang/Throwable\n-  #57 = Utf8               SourceFile\n-  #58 = Utf8               FileBasedScatterGatherBackingStore.java\n-  #59 = NameAndType        #28:#47        // \"<init>\":()V\n-  #60 = NameAndType        #22:#23        // target:Ljava/io/File;\n-  #61 = Class              #83            // java/io/File\n-  #62 = NameAndType        #85:#86        // toPath:()Ljava/nio/file/Path;\n-  #63 = Utf8               java/nio/file/OpenOption\n-  #64 = Class              #87            // java/nio/file/Files\n-  #65 = NameAndType        #88:#89        // newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n-  #66 = NameAndType        #24:#25        // os:Ljava/io/OutputStream;\n-  #67 = Utf8               java/io/FileNotFoundException\n-  #68 = Utf8               java/io/IOException\n-  #69 = Utf8               java/lang/RuntimeException\n-  #70 = NameAndType        #28:#90        // \"<init>\":(Ljava/lang/Throwable;)V\n-  #71 = NameAndType        #91:#92        // newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-  #72 = NameAndType        #26:#27        // closed:Z\n-  #73 = Class              #93            // java/io/OutputStream\n-  #74 = NameAndType        #55:#47        // close:()V\n-  #75 = NameAndType        #94:#49        // write:([BII)V\n-  #76 = NameAndType        #46:#47        // closeForWriting:()V\n-  #77 = NameAndType        #95:#96        // exists:()Z\n-  #78 = NameAndType        #97:#96        // delete:()Z\n-  #79 = NameAndType        #98:#47        // deleteOnExit:()V\n-  #80 = Utf8               org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n-  #81 = Utf8               java/lang/Object\n-  #82 = Utf8               org/apache/commons/compress/parallel/ScatterGatherBackingStore\n-  #83 = Utf8               java/io/File\n-  #84 = Utf8               java/lang/Throwable\n-  #85 = Utf8               toPath\n-  #86 = Utf8               ()Ljava/nio/file/Path;\n-  #87 = Utf8               java/nio/file/Files\n-  #88 = Utf8               newOutputStream\n-  #89 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n-  #90 = Utf8               (Ljava/lang/Throwable;)V\n-  #91 = Utf8               newInputStream\n-  #92 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-  #93 = Utf8               java/io/OutputStream\n-  #94 = Utf8               write\n-  #95 = Utf8               exists\n-  #96 = Utf8               ()Z\n-  #97 = Utf8               delete\n-  #98 = Utf8               deleteOnExit\n+  #39 = Class              #79            // java/io/File\n+  #40 = Utf8               Exceptions\n+  #41 = Utf8               getInputStream\n+  #42 = Utf8               ()Ljava/io/InputStream;\n+  #43 = Utf8               closeForWriting\n+  #44 = Utf8               ()V\n+  #45 = Utf8               writeOut\n+  #46 = Utf8               ([BII)V\n+  #47 = Utf8               data\n+  #48 = Utf8               [B\n+  #49 = Utf8               offset\n+  #50 = Utf8               I\n+  #51 = Utf8               length\n+  #52 = Utf8               close\n+  #53 = Class              #80            // java/lang/Throwable\n+  #54 = Utf8               SourceFile\n+  #55 = Utf8               FileBasedScatterGatherBackingStore.java\n+  #56 = NameAndType        #28:#44        // \"<init>\":()V\n+  #57 = NameAndType        #22:#23        // target:Ljava/io/File;\n+  #58 = NameAndType        #81:#82        // toPath:()Ljava/nio/file/Path;\n+  #59 = Utf8               java/nio/file/OpenOption\n+  #60 = Class              #83            // java/nio/file/Files\n+  #61 = NameAndType        #84:#85        // newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+  #62 = NameAndType        #24:#25        // os:Ljava/io/OutputStream;\n+  #63 = Utf8               java/io/FileNotFoundException\n+  #64 = Utf8               java/io/IOException\n+  #65 = Utf8               java/lang/RuntimeException\n+  #66 = NameAndType        #28:#86        // \"<init>\":(Ljava/lang/Throwable;)V\n+  #67 = NameAndType        #87:#88        // newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+  #68 = NameAndType        #26:#27        // closed:Z\n+  #69 = Class              #89            // java/io/OutputStream\n+  #70 = NameAndType        #52:#44        // close:()V\n+  #71 = NameAndType        #90:#46        // write:([BII)V\n+  #72 = NameAndType        #43:#44        // closeForWriting:()V\n+  #73 = NameAndType        #91:#92        // exists:()Z\n+  #74 = NameAndType        #93:#92        // delete:()Z\n+  #75 = NameAndType        #94:#44        // deleteOnExit:()V\n+  #76 = Utf8               org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n+  #77 = Utf8               java/lang/Object\n+  #78 = Utf8               org/apache/commons/compress/parallel/ScatterGatherBackingStore\n+  #79 = Utf8               java/io/File\n+  #80 = Utf8               java/lang/Throwable\n+  #81 = Utf8               toPath\n+  #82 = Utf8               ()Ljava/nio/file/Path;\n+  #83 = Utf8               java/nio/file/Files\n+  #84 = Utf8               newOutputStream\n+  #85 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+  #86 = Utf8               (Ljava/lang/Throwable;)V\n+  #87 = Utf8               newInputStream\n+  #88 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+  #89 = Utf8               java/io/OutputStream\n+  #90 = Utf8               write\n+  #91 = Utf8               exists\n+  #92 = Utf8               ()Z\n+  #93 = Utf8               delete\n+  #94 = Utf8               deleteOnExit\n {\n   private final java.io.File target;\n     descriptor: Ljava/io/File;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final java.io.OutputStream os;\n     descriptor: Ljava/io/OutputStream;\n"}]}
