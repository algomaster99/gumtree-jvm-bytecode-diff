{"diffoscope-json-version": 1, "source1": "first/FieldInstruction.class", "source2": "second/FieldInstruction.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -5,31 +5,31 @@\n import org.apache.bcel.classfile.ConstantPool;\n \n public abstract class FieldInstruction extends FieldOrMethod\n {\n     FieldInstruction() {\n     }\n     \n-    protected FieldInstruction(final short opcode, final int index) {\n-        super(opcode, index);\n+    protected FieldInstruction(final short n, final int n2) {\n+        super(n, n2);\n     }\n     \n-    public String toString(final ConstantPool cp) {\n-        return Const.getOpcodeName((int)super.getOpcode()) + \" \" + cp.constantToString(super.getIndex(), (byte)9);\n+    public String toString(final ConstantPool constantPool) {\n+        return Const.getOpcodeName((int)super.getOpcode()) + \" \" + constantPool.constantToString(super.getIndex(), (byte)9);\n     }\n     \n-    protected int getFieldSize(final ConstantPoolGen cpg) {\n-        return Type.size(Type.getTypeSize(this.getSignature(cpg)));\n+    protected int getFieldSize(final ConstantPoolGen constantPoolGen) {\n+        return Type.size(Type.getTypeSize(this.getSignature(constantPoolGen)));\n     }\n     \n-    public Type getType(final ConstantPoolGen cpg) {\n-        return this.getFieldType(cpg);\n+    public Type getType(final ConstantPoolGen constantPoolGen) {\n+        return this.getFieldType(constantPoolGen);\n     }\n     \n-    public Type getFieldType(final ConstantPoolGen cpg) {\n-        return Type.getType(this.getSignature(cpg));\n+    public Type getFieldType(final ConstantPoolGen constantPoolGen) {\n+        return Type.getType(this.getSignature(constantPoolGen));\n     }\n     \n-    public String getFieldName(final ConstantPoolGen cpg) {\n-        return this.getName(cpg);\n+    public String getFieldName(final ConstantPoolGen constantPoolGen) {\n+        return this.getName(constantPoolGen);\n     }\n }\n"}]}
