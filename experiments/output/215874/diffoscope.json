{"diffoscope-json-version": 1, "source1": "first/EnclosingMethod.class", "source2": "second/EnclosingMethod.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -6,36 +6,36 @@\n import java.io.DataInput;\n \n public class EnclosingMethod extends Attribute\n {\n     private int classIndex;\n     private int methodIndex;\n     \n-    EnclosingMethod(final int nameIndex, final int len, final DataInput input, final ConstantPool cpool) throws IOException {\n-        this(nameIndex, len, input.readUnsignedShort(), input.readUnsignedShort(), cpool);\n+    EnclosingMethod(final int n, final int n2, final DataInput dataInput, final ConstantPool constantPool) throws IOException {\n+        this(n, n2, dataInput.readUnsignedShort(), dataInput.readUnsignedShort(), constantPool);\n     }\n     \n-    private EnclosingMethod(final int nameIndex, final int len, final int classIdx, final int methodIdx, final ConstantPool cpool) {\n-        super((byte)18, nameIndex, len, cpool);\n-        this.classIndex = classIdx;\n-        this.methodIndex = methodIdx;\n+    private EnclosingMethod(final int n, final int n2, final int classIndex, final int methodIndex, final ConstantPool constantPool) {\n+        super((byte)18, n, n2, constantPool);\n+        this.classIndex = classIndex;\n+        this.methodIndex = methodIndex;\n     }\n     \n-    public void accept(final Visitor v) {\n-        v.visitEnclosingMethod(this);\n+    public void accept(final Visitor visitor) {\n+        visitor.visitEnclosingMethod(this);\n     }\n     \n-    public Attribute copy(final ConstantPool constant_pool) {\n+    public Attribute copy(final ConstantPool constantPool) {\n         return (Attribute)this.clone();\n     }\n     \n-    public final void dump(final DataOutputStream file) throws IOException {\n-        super.dump(file);\n-        file.writeShort(this.classIndex);\n-        file.writeShort(this.methodIndex);\n+    public final void dump(final DataOutputStream dataOutputStream) throws IOException {\n+        super.dump(dataOutputStream);\n+        dataOutputStream.writeShort(this.classIndex);\n+        dataOutputStream.writeShort(this.methodIndex);\n     }\n     \n     public final ConstantClass getEnclosingClass() {\n         return (ConstantClass)super.getConstantPool().getConstant(this.classIndex, (byte)7, (Class)ConstantClass.class);\n     }\n     \n     public final int getEnclosingClassIndex() {\n@@ -49,15 +49,15 @@\n         return (ConstantNameAndType)super.getConstantPool().getConstant(this.methodIndex, (byte)12, (Class)ConstantNameAndType.class);\n     }\n     \n     public final int getEnclosingMethodIndex() {\n         return this.methodIndex;\n     }\n     \n-    public final void setEnclosingClassIndex(final int idx) {\n-        this.classIndex = idx;\n+    public final void setEnclosingClassIndex(final int classIndex) {\n+        this.classIndex = classIndex;\n     }\n     \n-    public final void setEnclosingMethodIndex(final int idx) {\n-        this.methodIndex = idx;\n+    public final void setEnclosingMethodIndex(final int methodIndex) {\n+        this.methodIndex = methodIndex;\n     }\n }\n"}]}
