{"diffoscope-json-version": 1, "source1": "first/SuppressWarningsCheck.class", "source2": "second/SuppressWarningsCheck.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,11 +1,10 @@\n \n package com.puppycrawl.tools.checkstyle.checks.annotation;\n \n-import java.util.regex.Matcher;\n import com.puppycrawl.tools.checkstyle.utils.AnnotationUtil;\n import java.util.Objects;\n import com.puppycrawl.tools.checkstyle.api.DetailAST;\n import com.puppycrawl.tools.checkstyle.utils.CommonUtil;\n import java.util.regex.Pattern;\n import com.puppycrawl.tools.checkstyle.StatelessCheck;\n import com.puppycrawl.tools.checkstyle.api.AbstractCheck;\n@@ -18,102 +17,92 @@\n     private static final String FQ_SUPPRESS_WARNINGS = \"java.lang.SuppressWarnings\";\n     private Pattern format;\n     \n     public SuppressWarningsCheck() {\n         this.format = Pattern.compile(\"^\\\\s*+$\");\n     }\n     \n-    public final void setFormat(final Pattern pattern) {\n-        this.format = pattern;\n+    public final void setFormat(final Pattern format) {\n+        this.format = format;\n     }\n     \n     public final int[] getDefaultTokens() {\n         return this.getAcceptableTokens();\n     }\n     \n     public final int[] getAcceptableTokens() {\n         return new int[] { 14, 15, 154, 157, 161, 155, 21, 10, 9, 8, 203, 199 };\n     }\n     \n     public int[] getRequiredTokens() {\n         return CommonUtil.EMPTY_INT_ARRAY;\n     }\n     \n-    public void visitToken(final DetailAST ast) {\n-        final DetailAST annotation = getSuppressWarnings(ast);\n-        if (annotation != null) {\n-            final DetailAST warningHolder = findWarningsHolder(annotation);\n-            final DetailAST token = warningHolder.findFirstToken(160);\n-            final DetailAST parent = (DetailAST)Objects.requireNonNullElse(token, warningHolder);\n-            DetailAST warning = parent.findFirstToken(28);\n-            if (warning == null) {\n-                this.logMatch(warningHolder, \"\");\n+    public void visitToken(final DetailAST detailAST) {\n+        final DetailAST suppressWarnings = getSuppressWarnings(detailAST);\n+        if (suppressWarnings != null) {\n+            final DetailAST warningsHolder = findWarningsHolder(suppressWarnings);\n+            DetailAST detailAST2 = ((DetailAST)Objects.requireNonNullElse(warningsHolder.findFirstToken(160), warningsHolder)).findFirstToken(28);\n+            if (detailAST2 == null) {\n+                this.logMatch(warningsHolder, \"\");\n             }\n             else {\n-                while (warning != null) {\n-                    if (warning.getType() == 28) {\n-                        final DetailAST fChild = warning.getFirstChild();\n-                        switch (fChild.getType()) {\n+                while (detailAST2 != null) {\n+                    if (detailAST2.getType() == 28) {\n+                        final DetailAST firstChild = detailAST2.getFirstChild();\n+                        switch (firstChild.getType()) {\n                             case 139: {\n-                                final String warningText = removeQuotes(warning.getFirstChild().getText());\n-                                this.logMatch(warning, warningText);\n+                                this.logMatch(detailAST2, removeQuotes(detailAST2.getFirstChild().getText()));\n                                 break;\n                             }\n                             case 109: {\n-                                this.walkConditional(fChild);\n+                                this.walkConditional(firstChild);\n                                 break;\n                             }\n                         }\n                     }\n-                    warning = warning.getNextSibling();\n+                    detailAST2 = detailAST2.getNextSibling();\n                 }\n             }\n         }\n     }\n     \n-    private static DetailAST getSuppressWarnings(final DetailAST ast) {\n-        DetailAST annotation = AnnotationUtil.getAnnotation(ast, \"SuppressWarnings\");\n-        if (annotation == null) {\n-            annotation = AnnotationUtil.getAnnotation(ast, \"java.lang.SuppressWarnings\");\n+    private static DetailAST getSuppressWarnings(final DetailAST detailAST) {\n+        DetailAST detailAST2 = AnnotationUtil.getAnnotation(detailAST, \"SuppressWarnings\");\n+        if (detailAST2 == null) {\n+            detailAST2 = AnnotationUtil.getAnnotation(detailAST, \"java.lang.SuppressWarnings\");\n         }\n-        return annotation;\n+        return detailAST2;\n     }\n     \n-    private void logMatch(final DetailAST ast, final String warningText) {\n-        final Matcher matcher = this.format.matcher(warningText);\n-        if (matcher.matches()) {\n-            this.log(ast, \"suppressed.warning.not.allowed\", new Object[] { warningText });\n+    private void logMatch(final DetailAST detailAST, final String input) {\n+        if (this.format.matcher(input).matches()) {\n+            this.log(detailAST, \"suppressed.warning.not.allowed\", new Object[] { input });\n         }\n     }\n     \n-    private static DetailAST findWarningsHolder(final DetailAST annotation) {\n-        final DetailAST annValuePair = annotation.findFirstToken(160);\n-        final DetailAST annArrayInitParent = (DetailAST)Objects.requireNonNullElse(annValuePair, annotation);\n-        final DetailAST annArrayInit = annArrayInitParent.findFirstToken(162);\n-        return Objects.requireNonNullElse(annArrayInit, annotation);\n+    private static DetailAST findWarningsHolder(final DetailAST detailAST) {\n+        return Objects.requireNonNullElse(((DetailAST)Objects.requireNonNullElse(detailAST.findFirstToken(160), detailAST)).findFirstToken(162), detailAST);\n     }\n     \n-    private static String removeQuotes(final String warning) {\n-        return warning.substring(1, warning.length() - 1);\n+    private static String removeQuotes(final String s) {\n+        return s.substring(1, s.length() - 1);\n     }\n     \n-    private void walkConditional(final DetailAST cond) {\n-        if (cond.getType() == 109) {\n-            this.walkConditional(getCondLeft(cond));\n-            this.walkConditional(getCondRight(cond));\n+    private void walkConditional(final DetailAST detailAST) {\n+        if (detailAST.getType() == 109) {\n+            this.walkConditional(getCondLeft(detailAST));\n+            this.walkConditional(getCondRight(detailAST));\n         }\n         else {\n-            final String warningText = removeQuotes(cond.getText());\n-            this.logMatch(cond, warningText);\n+            this.logMatch(detailAST, removeQuotes(detailAST.getText()));\n         }\n     }\n     \n-    private static DetailAST getCondLeft(final DetailAST cond) {\n-        final DetailAST colon = cond.findFirstToken(82);\n-        return colon.getPreviousSibling();\n+    private static DetailAST getCondLeft(final DetailAST detailAST) {\n+        return detailAST.findFirstToken(82).getPreviousSibling();\n     }\n     \n-    private static DetailAST getCondRight(final DetailAST cond) {\n-        final DetailAST colon = cond.findFirstToken(82);\n-        return colon.getNextSibling();\n+    private static DetailAST getCondRight(final DetailAST detailAST) {\n+        return detailAST.findFirstToken(82).getNextSibling();\n     }\n }\n"}]}
