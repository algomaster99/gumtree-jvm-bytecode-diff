{"diffoscope-json-version": 1, "source1": "first/Base64.class", "source2": "second/Base64.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,290 +1,290 @@\n-  SHA-256 checksum 4ee4deed721b80673b6cab0c1b1dac123c48957e03e84c10329b11dcca3568a6\n+  SHA-256 checksum de3726138a91e9b450106787913ea9efd42ecc4e0eb7b6f3d7c9695a9839ac09\n   Compiled from \"Base64.java\"\n public class org.apache.commons.codec.binary.Base64 extends org.apache.commons.codec.binary.BaseNCodec\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #6                          // org/apache/commons/codec/binary/Base64\n-  super_class: #2                         // org/apache/commons/codec/binary/BaseNCodec\n+  this_class: #2                          // org/apache/commons/codec/binary/Base64\n+  super_class: #7                         // org/apache/commons/codec/binary/BaseNCodec\n   interfaces: 0, fields: 13, methods: 28, attributes: 2\n Constant pool:\n-    #1 = Methodref          #6.#177       // org/apache/commons/codec/binary/Base64.\"<init>\":(I)V\n-    #2 = Class              #178          // org/apache/commons/codec/binary/BaseNCodec\n-    #3 = Fieldref           #6.#179       // org/apache/commons/codec/binary/Base64.CHUNK_SEPARATOR:[B\n-    #4 = Methodref          #6.#180       // org/apache/commons/codec/binary/Base64.\"<init>\":(I[BZ)V\n-    #5 = Methodref          #6.#181       // org/apache/commons/codec/binary/Base64.\"<init>\":(I[B)V\n-    #6 = Class              #182          // org/apache/commons/codec/binary/Base64\n-    #7 = Methodref          #2.#183       // org/apache/commons/codec/binary/BaseNCodec.\"<init>\":(IIII)V\n-    #8 = Fieldref           #6.#184       // org/apache/commons/codec/binary/Base64.DECODE_TABLE:[B\n-    #9 = Fieldref           #6.#185       // org/apache/commons/codec/binary/Base64.decodeTable:[B\n-   #10 = Methodref          #6.#186       // org/apache/commons/codec/binary/Base64.containsAlphabetOrPad:([B)Z\n-   #11 = Methodref          #187.#188     // org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;\n-   #12 = Class              #189          // java/lang/IllegalArgumentException\n-   #13 = Class              #190          // java/lang/StringBuilder\n-   #14 = Methodref          #13.#191      // java/lang/StringBuilder.\"<init>\":()V\n-   #15 = String             #192          // lineSeparator must not contain base64 characters: [\n-   #16 = Methodref          #13.#193      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #17 = String             #194          // ]\n-   #18 = Methodref          #13.#195      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #19 = Methodref          #12.#196      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #20 = Fieldref           #6.#197       // org/apache/commons/codec/binary/Base64.encodeSize:I\n-   #21 = Fieldref           #6.#198       // org/apache/commons/codec/binary/Base64.lineSeparator:[B\n-   #22 = Methodref          #199.#200     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #23 = Fieldref           #6.#201       // org/apache/commons/codec/binary/Base64.decodeSize:I\n-   #24 = Fieldref           #6.#202       // org/apache/commons/codec/binary/Base64.URL_SAFE_ENCODE_TABLE:[B\n-   #25 = Fieldref           #6.#203       // org/apache/commons/codec/binary/Base64.STANDARD_ENCODE_TABLE:[B\n-   #26 = Fieldref           #6.#204       // org/apache/commons/codec/binary/Base64.encodeTable:[B\n-   #27 = Fieldref           #110.#205     // org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n-   #28 = Fieldref           #110.#206     // org/apache/commons/codec/binary/BaseNCodec$Context.modulus:I\n-   #29 = Fieldref           #6.#207       // org/apache/commons/codec/binary/Base64.lineLength:I\n-   #30 = Methodref          #6.#208       // org/apache/commons/codec/binary/Base64.ensureBufferSize:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n-   #31 = Fieldref           #110.#209     // org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n-   #32 = Fieldref           #110.#210     // org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n-   #33 = Fieldref           #6.#211       // org/apache/commons/codec/binary/Base64.pad:B\n-   #34 = Class              #212          // java/lang/IllegalStateException\n-   #35 = String             #213          // Impossible modulus\n-   #36 = Methodref          #13.#214      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #37 = Methodref          #34.#196      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #38 = Fieldref           #110.#215     // org/apache/commons/codec/binary/BaseNCodec$Context.currentLinePos:I\n-   #39 = Methodref          #6.#216       // org/apache/commons/codec/binary/Base64.validateCharacter:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)J\n-   #40 = Methodref          #6.#217       // org/apache/commons/codec/binary/Base64.isBase64:([B)Z\n-   #41 = Methodref          #187.#218     // org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n-   #42 = Methodref          #6.#219       // org/apache/commons/codec/binary/Base64.isBase64:(B)Z\n-   #43 = Methodref          #6.#220       // org/apache/commons/codec/binary/Base64.isWhiteSpace:(B)Z\n-   #44 = Methodref          #6.#221       // org/apache/commons/codec/binary/Base64.encodeBase64:([BZ)[B\n-   #45 = Methodref          #187.#222     // org/apache/commons/codec/binary/StringUtils.newStringUsAscii:([B)Ljava/lang/String;\n-   #46 = Methodref          #6.#223       // org/apache/commons/codec/binary/Base64.encodeBase64:([BZZ)[B\n-   #47 = Class              #224          // java/lang/Integer\n-   #48 = Integer            2147483647\n-   #49 = Methodref          #6.#225       // org/apache/commons/codec/binary/Base64.encodeBase64:([BZZI)[B\n-   #50 = Methodref          #6.#226       // org/apache/commons/codec/binary/Base64.\"<init>\":(Z)V\n-   #51 = Methodref          #6.#227       // org/apache/commons/codec/binary/Base64.getEncodedLength:([B)J\n-   #52 = String             #228          // Input array too big, the output array would be bigger (\n-   #53 = Methodref          #13.#229      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-   #54 = String             #230          // ) than the specified maximum size of\n-   #55 = Methodref          #6.#231       // org/apache/commons/codec/binary/Base64.encode:([B)[B\n-   #56 = Methodref          #6.#191       // org/apache/commons/codec/binary/Base64.\"<init>\":()V\n-   #57 = Methodref          #6.#232       // org/apache/commons/codec/binary/Base64.decode:(Ljava/lang/String;)[B\n-   #58 = Methodref          #6.#233       // org/apache/commons/codec/binary/Base64.decode:([B)[B\n-   #59 = Class              #234          // java/math/BigInteger\n-   #60 = Methodref          #6.#235       // org/apache/commons/codec/binary/Base64.decodeBase64:([B)[B\n-   #61 = Methodref          #59.#181      // java/math/BigInteger.\"<init>\":(I[B)V\n-   #62 = Class              #236          // java/lang/NullPointerException\n-   #63 = String             #237          // encodeInteger called with null parameter\n-   #64 = Methodref          #62.#196      // java/lang/NullPointerException.\"<init>\":(Ljava/lang/String;)V\n-   #65 = Methodref          #6.#238       // org/apache/commons/codec/binary/Base64.toIntegerBytes:(Ljava/math/BigInteger;)[B\n-   #66 = Methodref          #59.#239      // java/math/BigInteger.bitLength:()I\n-   #67 = Methodref          #59.#240      // java/math/BigInteger.toByteArray:()[B\n-   #68 = String             #241          // Last encoded character (before the paddings if any) is a valid base 64 alphabet but not a possible value\n-   #69 = Utf8               BITS_PER_ENCODED_BYTE\n-   #70 = Utf8               I\n-   #71 = Utf8               ConstantValue\n-   #72 = Integer            6\n-   #73 = Utf8               BYTES_PER_UNENCODED_BLOCK\n-   #74 = Integer            3\n-   #75 = Utf8               BYTES_PER_ENCODED_BLOCK\n-   #76 = Integer            4\n-   #77 = Utf8               CHUNK_SEPARATOR\n-   #78 = Utf8               [B\n-   #79 = Utf8               STANDARD_ENCODE_TABLE\n-   #80 = Utf8               URL_SAFE_ENCODE_TABLE\n-   #81 = Utf8               DECODE_TABLE\n-   #82 = Utf8               MASK_6BITS\n-   #83 = Integer            63\n+    #1 = Methodref          #2.#3         // org/apache/commons/codec/binary/Base64.\"<init>\":(I)V\n+    #2 = Class              #4            // org/apache/commons/codec/binary/Base64\n+    #3 = NameAndType        #5:#6         // \"<init>\":(I)V\n+    #4 = Utf8               org/apache/commons/codec/binary/Base64\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (I)V\n+    #7 = Class              #8            // org/apache/commons/codec/binary/BaseNCodec\n+    #8 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n+    #9 = Fieldref           #2.#10        // org/apache/commons/codec/binary/Base64.CHUNK_SEPARATOR:[B\n+   #10 = NameAndType        #11:#12       // CHUNK_SEPARATOR:[B\n+   #11 = Utf8               CHUNK_SEPARATOR\n+   #12 = Utf8               [B\n+   #13 = Methodref          #2.#14        // org/apache/commons/codec/binary/Base64.\"<init>\":(I[BZ)V\n+   #14 = NameAndType        #5:#15        // \"<init>\":(I[BZ)V\n+   #15 = Utf8               (I[BZ)V\n+   #16 = Methodref          #2.#17        // org/apache/commons/codec/binary/Base64.\"<init>\":(I[B)V\n+   #17 = NameAndType        #5:#18        // \"<init>\":(I[B)V\n+   #18 = Utf8               (I[B)V\n+   #19 = Methodref          #7.#20        // org/apache/commons/codec/binary/BaseNCodec.\"<init>\":(IIII)V\n+   #20 = NameAndType        #5:#21        // \"<init>\":(IIII)V\n+   #21 = Utf8               (IIII)V\n+   #22 = Fieldref           #2.#23        // org/apache/commons/codec/binary/Base64.DECODE_TABLE:[B\n+   #23 = NameAndType        #24:#12       // DECODE_TABLE:[B\n+   #24 = Utf8               DECODE_TABLE\n+   #25 = Fieldref           #2.#26        // org/apache/commons/codec/binary/Base64.decodeTable:[B\n+   #26 = NameAndType        #27:#12       // decodeTable:[B\n+   #27 = Utf8               decodeTable\n+   #28 = Methodref          #2.#29        // org/apache/commons/codec/binary/Base64.containsAlphabetOrPad:([B)Z\n+   #29 = NameAndType        #30:#31       // containsAlphabetOrPad:([B)Z\n+   #30 = Utf8               containsAlphabetOrPad\n+   #31 = Utf8               ([B)Z\n+   #32 = Methodref          #33.#34       // org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;\n+   #33 = Class              #35           // org/apache/commons/codec/binary/StringUtils\n+   #34 = NameAndType        #36:#37       // newStringUtf8:([B)Ljava/lang/String;\n+   #35 = Utf8               org/apache/commons/codec/binary/StringUtils\n+   #36 = Utf8               newStringUtf8\n+   #37 = Utf8               ([B)Ljava/lang/String;\n+   #38 = Class              #39           // java/lang/IllegalArgumentException\n+   #39 = Utf8               java/lang/IllegalArgumentException\n+   #40 = Class              #41           // java/lang/StringBuilder\n+   #41 = Utf8               java/lang/StringBuilder\n+   #42 = Methodref          #40.#43       // java/lang/StringBuilder.\"<init>\":()V\n+   #43 = NameAndType        #5:#44        // \"<init>\":()V\n+   #44 = Utf8               ()V\n+   #45 = String             #46           // lineSeparator must not contain base64 characters: [\n+   #46 = Utf8               lineSeparator must not contain base64 characters: [\n+   #47 = Methodref          #40.#48       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #48 = NameAndType        #49:#50       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #49 = Utf8               append\n+   #50 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #51 = String             #52           // ]\n+   #52 = Utf8               ]\n+   #53 = Methodref          #40.#54       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #54 = NameAndType        #55:#56       // toString:()Ljava/lang/String;\n+   #55 = Utf8               toString\n+   #56 = Utf8               ()Ljava/lang/String;\n+   #57 = Methodref          #38.#58       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #58 = NameAndType        #5:#59        // \"<init>\":(Ljava/lang/String;)V\n+   #59 = Utf8               (Ljava/lang/String;)V\n+   #60 = Fieldref           #2.#61        // org/apache/commons/codec/binary/Base64.encodeSize:I\n+   #61 = NameAndType        #62:#63       // encodeSize:I\n+   #62 = Utf8               encodeSize\n+   #63 = Utf8               I\n+   #64 = Fieldref           #2.#65        // org/apache/commons/codec/binary/Base64.lineSeparator:[B\n+   #65 = NameAndType        #66:#12       // lineSeparator:[B\n+   #66 = Utf8               lineSeparator\n+   #67 = Methodref          #68.#69       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #68 = Class              #70           // java/lang/System\n+   #69 = NameAndType        #71:#72       // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #70 = Utf8               java/lang/System\n+   #71 = Utf8               arraycopy\n+   #72 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #73 = Fieldref           #2.#74        // org/apache/commons/codec/binary/Base64.decodeSize:I\n+   #74 = NameAndType        #75:#63       // decodeSize:I\n+   #75 = Utf8               decodeSize\n+   #76 = Fieldref           #2.#77        // org/apache/commons/codec/binary/Base64.URL_SAFE_ENCODE_TABLE:[B\n+   #77 = NameAndType        #78:#12       // URL_SAFE_ENCODE_TABLE:[B\n+   #78 = Utf8               URL_SAFE_ENCODE_TABLE\n+   #79 = Fieldref           #2.#80        // org/apache/commons/codec/binary/Base64.STANDARD_ENCODE_TABLE:[B\n+   #80 = NameAndType        #81:#12       // STANDARD_ENCODE_TABLE:[B\n+   #81 = Utf8               STANDARD_ENCODE_TABLE\n+   #82 = Fieldref           #2.#83        // org/apache/commons/codec/binary/Base64.encodeTable:[B\n+   #83 = NameAndType        #84:#12       // encodeTable:[B\n    #84 = Utf8               encodeTable\n-   #85 = Utf8               decodeTable\n-   #86 = Utf8               lineSeparator\n-   #87 = Utf8               decodeSize\n-   #88 = Utf8               encodeSize\n-   #89 = Utf8               <init>\n-   #90 = Utf8               ()V\n-   #91 = Utf8               Code\n-   #92 = Utf8               LineNumberTable\n-   #93 = Utf8               LocalVariableTable\n-   #94 = Utf8               this\n-   #95 = Utf8               Lorg/apache/commons/codec/binary/Base64;\n-   #96 = Utf8               (Z)V\n-   #97 = Utf8               urlSafe\n-   #98 = Utf8               Z\n-   #99 = Utf8               (I)V\n-  #100 = Utf8               lineLength\n-  #101 = Utf8               (I[B)V\n-  #102 = Utf8               (I[BZ)V\n-  #103 = Utf8               sep\n-  #104 = Utf8               Ljava/lang/String;\n-  #105 = Utf8               StackMapTable\n-  #106 = Class              #78           // \"[B\"\n-  #107 = Utf8               isUrlSafe\n-  #108 = Utf8               ()Z\n-  #109 = Utf8               encode\n-  #110 = Class              #242          // org/apache/commons/codec/binary/BaseNCodec$Context\n-  #111 = Utf8               Context\n-  #112 = Utf8               InnerClasses\n-  #113 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #114 = Utf8               buffer\n-  #115 = Utf8               savedPos\n-  #116 = Utf8               b\n-  #117 = Utf8               i\n-  #118 = Utf8               in\n-  #119 = Utf8               inPos\n-  #120 = Utf8               inAvail\n-  #121 = Utf8               context\n-  #122 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-  #123 = Utf8               decode\n-  #124 = Utf8               result\n-  #125 = Utf8               B\n-  #126 = Utf8               isArrayByteBase64\n-  #127 = Utf8               ([B)Z\n-  #128 = Utf8               arrayOctet\n-  #129 = Utf8               Deprecated\n-  #130 = Utf8               RuntimeVisibleAnnotations\n-  #131 = Utf8               Ljava/lang/Deprecated;\n-  #132 = Utf8               isBase64\n-  #133 = Utf8               (B)Z\n-  #134 = Utf8               octet\n-  #135 = Utf8               (Ljava/lang/String;)Z\n-  #136 = Utf8               base64\n-  #137 = Utf8               encodeBase64\n-  #138 = Utf8               ([B)[B\n-  #139 = Utf8               binaryData\n-  #140 = Utf8               encodeBase64String\n-  #141 = Utf8               ([B)Ljava/lang/String;\n-  #142 = Utf8               encodeBase64URLSafe\n-  #143 = Utf8               encodeBase64URLSafeString\n-  #144 = Utf8               encodeBase64Chunked\n-  #145 = Utf8               ([BZ)[B\n-  #146 = Utf8               isChunked\n-  #147 = Utf8               ([BZZ)[B\n-  #148 = Utf8               ([BZZI)[B\n-  #149 = Utf8               maxResultSize\n-  #150 = Utf8               b64\n-  #151 = Utf8               len\n-  #152 = Utf8               J\n-  #153 = Utf8               decodeBase64\n-  #154 = Utf8               (Ljava/lang/String;)[B\n-  #155 = Utf8               base64String\n-  #156 = Utf8               base64Data\n-  #157 = Utf8               decodeInteger\n-  #158 = Utf8               ([B)Ljava/math/BigInteger;\n-  #159 = Utf8               pArray\n-  #160 = Utf8               encodeInteger\n-  #161 = Utf8               (Ljava/math/BigInteger;)[B\n-  #162 = Utf8               bigInt\n-  #163 = Utf8               Ljava/math/BigInteger;\n-  #164 = Utf8               toIntegerBytes\n-  #165 = Utf8               bitlen\n-  #166 = Utf8               bigBytes\n-  #167 = Utf8               startSrc\n-  #168 = Utf8               startDst\n-  #169 = Utf8               resizedBytes\n-  #170 = Utf8               isInAlphabet\n-  #171 = Utf8               validateCharacter\n-  #172 = Utf8               (ILorg/apache/commons/codec/binary/BaseNCodec$Context;)J\n-  #173 = Utf8               numBitsToDrop\n-  #174 = Utf8               <clinit>\n-  #175 = Utf8               SourceFile\n-  #176 = Utf8               Base64.java\n-  #177 = NameAndType        #89:#99       // \"<init>\":(I)V\n-  #178 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n-  #179 = NameAndType        #77:#78       // CHUNK_SEPARATOR:[B\n-  #180 = NameAndType        #89:#102      // \"<init>\":(I[BZ)V\n-  #181 = NameAndType        #89:#101      // \"<init>\":(I[B)V\n-  #182 = Utf8               org/apache/commons/codec/binary/Base64\n-  #183 = NameAndType        #89:#243      // \"<init>\":(IIII)V\n-  #184 = NameAndType        #81:#78       // DECODE_TABLE:[B\n-  #185 = NameAndType        #85:#78       // decodeTable:[B\n-  #186 = NameAndType        #244:#127     // containsAlphabetOrPad:([B)Z\n-  #187 = Class              #245          // org/apache/commons/codec/binary/StringUtils\n-  #188 = NameAndType        #246:#141     // newStringUtf8:([B)Ljava/lang/String;\n-  #189 = Utf8               java/lang/IllegalArgumentException\n-  #190 = Utf8               java/lang/StringBuilder\n-  #191 = NameAndType        #89:#90       // \"<init>\":()V\n-  #192 = Utf8               lineSeparator must not contain base64 characters: [\n-  #193 = NameAndType        #247:#248     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #194 = Utf8               ]\n-  #195 = NameAndType        #249:#250     // toString:()Ljava/lang/String;\n-  #196 = NameAndType        #89:#251      // \"<init>\":(Ljava/lang/String;)V\n-  #197 = NameAndType        #88:#70       // encodeSize:I\n-  #198 = NameAndType        #86:#78       // lineSeparator:[B\n-  #199 = Class              #252          // java/lang/System\n-  #200 = NameAndType        #253:#254     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #201 = NameAndType        #87:#70       // decodeSize:I\n-  #202 = NameAndType        #80:#78       // URL_SAFE_ENCODE_TABLE:[B\n-  #203 = NameAndType        #79:#78       // STANDARD_ENCODE_TABLE:[B\n-  #204 = NameAndType        #84:#78       // encodeTable:[B\n-  #205 = NameAndType        #255:#98      // eof:Z\n-  #206 = NameAndType        #256:#70      // modulus:I\n-  #207 = NameAndType        #100:#70      // lineLength:I\n-  #208 = NameAndType        #257:#258     // ensureBufferSize:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n-  #209 = NameAndType        #259:#70      // pos:I\n-  #210 = NameAndType        #260:#70      // ibitWorkArea:I\n-  #211 = NameAndType        #261:#125     // pad:B\n-  #212 = Utf8               java/lang/IllegalStateException\n-  #213 = Utf8               Impossible modulus\n-  #214 = NameAndType        #247:#262     // append:(I)Ljava/lang/StringBuilder;\n-  #215 = NameAndType        #263:#70      // currentLinePos:I\n-  #216 = NameAndType        #171:#172     // validateCharacter:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)J\n-  #217 = NameAndType        #132:#127     // isBase64:([B)Z\n-  #218 = NameAndType        #264:#154     // getBytesUtf8:(Ljava/lang/String;)[B\n-  #219 = NameAndType        #132:#133     // isBase64:(B)Z\n-  #220 = NameAndType        #265:#133     // isWhiteSpace:(B)Z\n-  #221 = NameAndType        #137:#145     // encodeBase64:([BZ)[B\n-  #222 = NameAndType        #266:#141     // newStringUsAscii:([B)Ljava/lang/String;\n-  #223 = NameAndType        #137:#147     // encodeBase64:([BZZ)[B\n-  #224 = Utf8               java/lang/Integer\n-  #225 = NameAndType        #137:#148     // encodeBase64:([BZZI)[B\n-  #226 = NameAndType        #89:#96       // \"<init>\":(Z)V\n-  #227 = NameAndType        #267:#268     // getEncodedLength:([B)J\n-  #228 = Utf8               Input array too big, the output array would be bigger (\n-  #229 = NameAndType        #247:#269     // append:(J)Ljava/lang/StringBuilder;\n-  #230 = Utf8               ) than the specified maximum size of\n-  #231 = NameAndType        #109:#138     // encode:([B)[B\n-  #232 = NameAndType        #123:#154     // decode:(Ljava/lang/String;)[B\n-  #233 = NameAndType        #123:#138     // decode:([B)[B\n-  #234 = Utf8               java/math/BigInteger\n-  #235 = NameAndType        #153:#138     // decodeBase64:([B)[B\n-  #236 = Utf8               java/lang/NullPointerException\n-  #237 = Utf8               encodeInteger called with null parameter\n-  #238 = NameAndType        #164:#161     // toIntegerBytes:(Ljava/math/BigInteger;)[B\n-  #239 = NameAndType        #270:#271     // bitLength:()I\n-  #240 = NameAndType        #272:#273     // toByteArray:()[B\n-  #241 = Utf8               Last encoded character (before the paddings if any) is a valid base 64 alphabet but not a possible value\n-  #242 = Utf8               org/apache/commons/codec/binary/BaseNCodec$Context\n-  #243 = Utf8               (IIII)V\n-  #244 = Utf8               containsAlphabetOrPad\n-  #245 = Utf8               org/apache/commons/codec/binary/StringUtils\n-  #246 = Utf8               newStringUtf8\n-  #247 = Utf8               append\n-  #248 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #249 = Utf8               toString\n-  #250 = Utf8               ()Ljava/lang/String;\n-  #251 = Utf8               (Ljava/lang/String;)V\n-  #252 = Utf8               java/lang/System\n-  #253 = Utf8               arraycopy\n-  #254 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #255 = Utf8               eof\n-  #256 = Utf8               modulus\n-  #257 = Utf8               ensureBufferSize\n-  #258 = Utf8               (ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n-  #259 = Utf8               pos\n-  #260 = Utf8               ibitWorkArea\n-  #261 = Utf8               pad\n-  #262 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #263 = Utf8               currentLinePos\n-  #264 = Utf8               getBytesUtf8\n-  #265 = Utf8               isWhiteSpace\n-  #266 = Utf8               newStringUsAscii\n-  #267 = Utf8               getEncodedLength\n-  #268 = Utf8               ([B)J\n-  #269 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #270 = Utf8               bitLength\n-  #271 = Utf8               ()I\n-  #272 = Utf8               toByteArray\n-  #273 = Utf8               ()[B\n+   #85 = Fieldref           #86.#87       // org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n+   #86 = Class              #88           // org/apache/commons/codec/binary/BaseNCodec$Context\n+   #87 = NameAndType        #89:#90       // eof:Z\n+   #88 = Utf8               org/apache/commons/codec/binary/BaseNCodec$Context\n+   #89 = Utf8               eof\n+   #90 = Utf8               Z\n+   #91 = Fieldref           #86.#92       // org/apache/commons/codec/binary/BaseNCodec$Context.modulus:I\n+   #92 = NameAndType        #93:#63       // modulus:I\n+   #93 = Utf8               modulus\n+   #94 = Fieldref           #2.#95        // org/apache/commons/codec/binary/Base64.lineLength:I\n+   #95 = NameAndType        #96:#63       // lineLength:I\n+   #96 = Utf8               lineLength\n+   #97 = Methodref          #2.#98        // org/apache/commons/codec/binary/Base64.ensureBufferSize:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+   #98 = NameAndType        #99:#100      // ensureBufferSize:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+   #99 = Utf8               ensureBufferSize\n+  #100 = Utf8               (ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+  #101 = Fieldref           #86.#102      // org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+  #102 = NameAndType        #103:#63      // pos:I\n+  #103 = Utf8               pos\n+  #104 = Fieldref           #86.#105      // org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+  #105 = NameAndType        #106:#63      // ibitWorkArea:I\n+  #106 = Utf8               ibitWorkArea\n+  #107 = Fieldref           #2.#108       // org/apache/commons/codec/binary/Base64.pad:B\n+  #108 = NameAndType        #109:#110     // pad:B\n+  #109 = Utf8               pad\n+  #110 = Utf8               B\n+  #111 = Class              #112          // java/lang/IllegalStateException\n+  #112 = Utf8               java/lang/IllegalStateException\n+  #113 = String             #114          // Impossible modulus\n+  #114 = Utf8               Impossible modulus\n+  #115 = Methodref          #40.#116      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #116 = NameAndType        #49:#117      // append:(I)Ljava/lang/StringBuilder;\n+  #117 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #118 = Methodref          #111.#58      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+  #119 = Fieldref           #86.#120      // org/apache/commons/codec/binary/BaseNCodec$Context.currentLinePos:I\n+  #120 = NameAndType        #121:#63      // currentLinePos:I\n+  #121 = Utf8               currentLinePos\n+  #122 = Methodref          #2.#123       // org/apache/commons/codec/binary/Base64.validateCharacter:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)J\n+  #123 = NameAndType        #124:#125     // validateCharacter:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)J\n+  #124 = Utf8               validateCharacter\n+  #125 = Utf8               (ILorg/apache/commons/codec/binary/BaseNCodec$Context;)J\n+  #126 = Methodref          #2.#127       // org/apache/commons/codec/binary/Base64.isBase64:([B)Z\n+  #127 = NameAndType        #128:#31      // isBase64:([B)Z\n+  #128 = Utf8               isBase64\n+  #129 = Methodref          #33.#130      // org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n+  #130 = NameAndType        #131:#132     // getBytesUtf8:(Ljava/lang/String;)[B\n+  #131 = Utf8               getBytesUtf8\n+  #132 = Utf8               (Ljava/lang/String;)[B\n+  #133 = Methodref          #2.#134       // org/apache/commons/codec/binary/Base64.isBase64:(B)Z\n+  #134 = NameAndType        #128:#135     // isBase64:(B)Z\n+  #135 = Utf8               (B)Z\n+  #136 = Methodref          #2.#137       // org/apache/commons/codec/binary/Base64.isWhiteSpace:(B)Z\n+  #137 = NameAndType        #138:#135     // isWhiteSpace:(B)Z\n+  #138 = Utf8               isWhiteSpace\n+  #139 = Methodref          #2.#140       // org/apache/commons/codec/binary/Base64.encodeBase64:([BZ)[B\n+  #140 = NameAndType        #141:#142     // encodeBase64:([BZ)[B\n+  #141 = Utf8               encodeBase64\n+  #142 = Utf8               ([BZ)[B\n+  #143 = Methodref          #33.#144      // org/apache/commons/codec/binary/StringUtils.newStringUsAscii:([B)Ljava/lang/String;\n+  #144 = NameAndType        #145:#37      // newStringUsAscii:([B)Ljava/lang/String;\n+  #145 = Utf8               newStringUsAscii\n+  #146 = Methodref          #2.#147       // org/apache/commons/codec/binary/Base64.encodeBase64:([BZZ)[B\n+  #147 = NameAndType        #141:#148     // encodeBase64:([BZZ)[B\n+  #148 = Utf8               ([BZZ)[B\n+  #149 = Class              #150          // java/lang/Integer\n+  #150 = Utf8               java/lang/Integer\n+  #151 = Integer            2147483647\n+  #152 = Methodref          #2.#153       // org/apache/commons/codec/binary/Base64.encodeBase64:([BZZI)[B\n+  #153 = NameAndType        #141:#154     // encodeBase64:([BZZI)[B\n+  #154 = Utf8               ([BZZI)[B\n+  #155 = Methodref          #2.#156       // org/apache/commons/codec/binary/Base64.\"<init>\":(Z)V\n+  #156 = NameAndType        #5:#157       // \"<init>\":(Z)V\n+  #157 = Utf8               (Z)V\n+  #158 = Methodref          #2.#159       // org/apache/commons/codec/binary/Base64.getEncodedLength:([B)J\n+  #159 = NameAndType        #160:#161     // getEncodedLength:([B)J\n+  #160 = Utf8               getEncodedLength\n+  #161 = Utf8               ([B)J\n+  #162 = String             #163          // Input array too big, the output array would be bigger (\n+  #163 = Utf8               Input array too big, the output array would be bigger (\n+  #164 = Methodref          #40.#165      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+  #165 = NameAndType        #49:#166      // append:(J)Ljava/lang/StringBuilder;\n+  #166 = Utf8               (J)Ljava/lang/StringBuilder;\n+  #167 = String             #168          // ) than the specified maximum size of\n+  #168 = Utf8               ) than the specified maximum size of\n+  #169 = Methodref          #2.#170       // org/apache/commons/codec/binary/Base64.encode:([B)[B\n+  #170 = NameAndType        #171:#172     // encode:([B)[B\n+  #171 = Utf8               encode\n+  #172 = Utf8               ([B)[B\n+  #173 = Methodref          #2.#43        // org/apache/commons/codec/binary/Base64.\"<init>\":()V\n+  #174 = Methodref          #2.#175       // org/apache/commons/codec/binary/Base64.decode:(Ljava/lang/String;)[B\n+  #175 = NameAndType        #176:#132     // decode:(Ljava/lang/String;)[B\n+  #176 = Utf8               decode\n+  #177 = Methodref          #2.#178       // org/apache/commons/codec/binary/Base64.decode:([B)[B\n+  #178 = NameAndType        #176:#172     // decode:([B)[B\n+  #179 = Class              #180          // java/math/BigInteger\n+  #180 = Utf8               java/math/BigInteger\n+  #181 = Methodref          #2.#182       // org/apache/commons/codec/binary/Base64.decodeBase64:([B)[B\n+  #182 = NameAndType        #183:#172     // decodeBase64:([B)[B\n+  #183 = Utf8               decodeBase64\n+  #184 = Methodref          #179.#17      // java/math/BigInteger.\"<init>\":(I[B)V\n+  #185 = Class              #186          // java/lang/NullPointerException\n+  #186 = Utf8               java/lang/NullPointerException\n+  #187 = String             #188          // encodeInteger called with null parameter\n+  #188 = Utf8               encodeInteger called with null parameter\n+  #189 = Methodref          #185.#58      // java/lang/NullPointerException.\"<init>\":(Ljava/lang/String;)V\n+  #190 = Methodref          #2.#191       // org/apache/commons/codec/binary/Base64.toIntegerBytes:(Ljava/math/BigInteger;)[B\n+  #191 = NameAndType        #192:#193     // toIntegerBytes:(Ljava/math/BigInteger;)[B\n+  #192 = Utf8               toIntegerBytes\n+  #193 = Utf8               (Ljava/math/BigInteger;)[B\n+  #194 = Methodref          #179.#195     // java/math/BigInteger.bitLength:()I\n+  #195 = NameAndType        #196:#197     // bitLength:()I\n+  #196 = Utf8               bitLength\n+  #197 = Utf8               ()I\n+  #198 = Methodref          #179.#199     // java/math/BigInteger.toByteArray:()[B\n+  #199 = NameAndType        #200:#201     // toByteArray:()[B\n+  #200 = Utf8               toByteArray\n+  #201 = Utf8               ()[B\n+  #202 = String             #203          // Last encoded character (before the paddings if any) is a valid base 64 alphabet but not a possible value\n+  #203 = Utf8               Last encoded character (before the paddings if any) is a valid base 64 alphabet but not a possible value\n+  #204 = Utf8               BITS_PER_ENCODED_BYTE\n+  #205 = Utf8               ConstantValue\n+  #206 = Integer            6\n+  #207 = Utf8               BYTES_PER_UNENCODED_BLOCK\n+  #208 = Integer            3\n+  #209 = Utf8               BYTES_PER_ENCODED_BLOCK\n+  #210 = Integer            4\n+  #211 = Utf8               MASK_6BITS\n+  #212 = Integer            63\n+  #213 = Utf8               Code\n+  #214 = Utf8               LineNumberTable\n+  #215 = Utf8               LocalVariableTable\n+  #216 = Utf8               this\n+  #217 = Utf8               Lorg/apache/commons/codec/binary/Base64;\n+  #218 = Utf8               urlSafe\n+  #219 = Utf8               sep\n+  #220 = Utf8               Ljava/lang/String;\n+  #221 = Utf8               StackMapTable\n+  #222 = Class              #12           // \"[B\"\n+  #223 = Utf8               isUrlSafe\n+  #224 = Utf8               ()Z\n+  #225 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+  #226 = Utf8               buffer\n+  #227 = Utf8               savedPos\n+  #228 = Utf8               b\n+  #229 = Utf8               i\n+  #230 = Utf8               in\n+  #231 = Utf8               inPos\n+  #232 = Utf8               inAvail\n+  #233 = Utf8               context\n+  #234 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+  #235 = Utf8               result\n+  #236 = Utf8               isArrayByteBase64\n+  #237 = Utf8               arrayOctet\n+  #238 = Utf8               Deprecated\n+  #239 = Utf8               RuntimeVisibleAnnotations\n+  #240 = Utf8               Ljava/lang/Deprecated;\n+  #241 = Utf8               octet\n+  #242 = Utf8               (Ljava/lang/String;)Z\n+  #243 = Utf8               base64\n+  #244 = Utf8               binaryData\n+  #245 = Utf8               encodeBase64String\n+  #246 = Utf8               encodeBase64URLSafe\n+  #247 = Utf8               encodeBase64URLSafeString\n+  #248 = Utf8               encodeBase64Chunked\n+  #249 = Utf8               isChunked\n+  #250 = Utf8               maxResultSize\n+  #251 = Utf8               b64\n+  #252 = Utf8               len\n+  #253 = Utf8               J\n+  #254 = Utf8               base64String\n+  #255 = Utf8               base64Data\n+  #256 = Utf8               decodeInteger\n+  #257 = Utf8               ([B)Ljava/math/BigInteger;\n+  #258 = Utf8               pArray\n+  #259 = Utf8               encodeInteger\n+  #260 = Utf8               bigInt\n+  #261 = Utf8               Ljava/math/BigInteger;\n+  #262 = Utf8               bitlen\n+  #263 = Utf8               bigBytes\n+  #264 = Utf8               startSrc\n+  #265 = Utf8               startDst\n+  #266 = Utf8               resizedBytes\n+  #267 = Utf8               isInAlphabet\n+  #268 = Utf8               numBitsToDrop\n+  #269 = Utf8               <clinit>\n+  #270 = Utf8               SourceFile\n+  #271 = Utf8               Base64.java\n+  #272 = Utf8               InnerClasses\n+  #273 = Utf8               Context\n {\n   private static final int BITS_PER_ENCODED_BYTE = 6;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 6\n \n   private static final int BYTES_PER_UNENCODED_BLOCK = 3;\n@@ -357,17 +357,17 @@\n   public org.apache.commons.codec.binary.Base64(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: bipush        76\n-         3: getstatic     #3                  // Field CHUNK_SEPARATOR:[B\n+         3: getstatic     #9                  // Field CHUNK_SEPARATOR:[B\n          6: iload_1\n-         7: invokespecial #4                  // Method \"<init>\":(I[BZ)V\n+         7: invokespecial #13                 // Method \"<init>\":(I[BZ)V\n         10: return\n       LineNumberTable:\n         line 193: 0\n         line 194: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/codec/binary/Base64;\n@@ -376,16 +376,16 @@\n   public org.apache.commons.codec.binary.Base64(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: getstatic     #3                  // Field CHUNK_SEPARATOR:[B\n-         5: invokespecial #5                  // Method \"<init>\":(I[B)V\n+         2: getstatic     #9                  // Field CHUNK_SEPARATOR:[B\n+         5: invokespecial #16                 // Method \"<init>\":(I[B)V\n          8: return\n       LineNumberTable:\n         line 216: 0\n         line 217: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/codec/binary/Base64;\n@@ -396,15 +396,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: iload_1\n          2: aload_2\n          3: iconst_0\n-         4: invokespecial #4                  // Method \"<init>\":(I[BZ)V\n+         4: invokespecial #13                 // Method \"<init>\":(I[BZ)V\n          7: return\n       LineNumberTable:\n         line 243: 0\n         line 244: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/codec/binary/Base64;\n@@ -422,89 +422,89 @@\n          3: iload_1\n          4: aload_2\n          5: ifnonnull     12\n          8: iconst_0\n          9: goto          14\n         12: aload_2\n         13: arraylength\n-        14: invokespecial #7                  // Method org/apache/commons/codec/binary/BaseNCodec.\"<init>\":(IIII)V\n+        14: invokespecial #19                 // Method org/apache/commons/codec/binary/BaseNCodec.\"<init>\":(IIII)V\n         17: aload_0\n-        18: getstatic     #8                  // Field DECODE_TABLE:[B\n-        21: putfield      #9                  // Field decodeTable:[B\n+        18: getstatic     #22                 // Field DECODE_TABLE:[B\n+        21: putfield      #25                 // Field decodeTable:[B\n         24: aload_2\n         25: ifnull        123\n         28: aload_0\n         29: aload_2\n-        30: invokevirtual #10                 // Method containsAlphabetOrPad:([B)Z\n+        30: invokevirtual #28                 // Method containsAlphabetOrPad:([B)Z\n         33: ifeq          75\n         36: aload_2\n-        37: invokestatic  #11                 // Method org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;\n+        37: invokestatic  #32                 // Method org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;\n         40: astore        4\n-        42: new           #12                 // class java/lang/IllegalArgumentException\n+        42: new           #38                 // class java/lang/IllegalArgumentException\n         45: dup\n-        46: new           #13                 // class java/lang/StringBuilder\n+        46: new           #40                 // class java/lang/StringBuilder\n         49: dup\n-        50: invokespecial #14                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        53: ldc           #15                 // String lineSeparator must not contain base64 characters: [\n-        55: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        50: invokespecial #42                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        53: ldc           #45                 // String lineSeparator must not contain base64 characters: [\n+        55: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         58: aload         4\n-        60: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        63: ldc           #17                 // String ]\n-        65: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        68: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        71: invokespecial #19                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        60: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        63: ldc           #51                 // String ]\n+        65: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        68: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        71: invokespecial #57                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         74: athrow\n         75: iload_1\n         76: ifle          110\n         79: aload_0\n         80: iconst_4\n         81: aload_2\n         82: arraylength\n         83: iadd\n-        84: putfield      #20                 // Field encodeSize:I\n+        84: putfield      #60                 // Field encodeSize:I\n         87: aload_0\n         88: aload_2\n         89: arraylength\n         90: newarray       byte\n-        92: putfield      #21                 // Field lineSeparator:[B\n+        92: putfield      #64                 // Field lineSeparator:[B\n         95: aload_2\n         96: iconst_0\n         97: aload_0\n-        98: getfield      #21                 // Field lineSeparator:[B\n+        98: getfield      #64                 // Field lineSeparator:[B\n        101: iconst_0\n        102: aload_2\n        103: arraylength\n-       104: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       104: invokestatic  #67                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        107: goto          133\n        110: aload_0\n        111: iconst_4\n-       112: putfield      #20                 // Field encodeSize:I\n+       112: putfield      #60                 // Field encodeSize:I\n        115: aload_0\n        116: aconst_null\n-       117: putfield      #21                 // Field lineSeparator:[B\n+       117: putfield      #64                 // Field lineSeparator:[B\n        120: goto          133\n        123: aload_0\n        124: iconst_4\n-       125: putfield      #20                 // Field encodeSize:I\n+       125: putfield      #60                 // Field encodeSize:I\n        128: aload_0\n        129: aconst_null\n-       130: putfield      #21                 // Field lineSeparator:[B\n+       130: putfield      #64                 // Field lineSeparator:[B\n        133: aload_0\n        134: aload_0\n-       135: getfield      #20                 // Field encodeSize:I\n+       135: getfield      #60                 // Field encodeSize:I\n        138: iconst_1\n        139: isub\n-       140: putfield      #23                 // Field decodeSize:I\n+       140: putfield      #73                 // Field decodeSize:I\n        143: aload_0\n        144: iload_3\n        145: ifeq          154\n-       148: getstatic     #24                 // Field URL_SAFE_ENCODE_TABLE:[B\n+       148: getstatic     #76                 // Field URL_SAFE_ENCODE_TABLE:[B\n        151: goto          157\n-       154: getstatic     #25                 // Field STANDARD_ENCODE_TABLE:[B\n-       157: putfield      #26                 // Field encodeTable:[B\n+       154: getstatic     #79                 // Field STANDARD_ENCODE_TABLE:[B\n+       157: putfield      #82                 // Field encodeTable:[B\n        160: return\n       LineNumberTable:\n         line 274: 0\n         line 276: 4\n         line 274: 14\n         line 144: 17\n         line 279: 24\n@@ -554,16 +554,16 @@\n \n   public boolean isUrlSafe();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #26                 // Field encodeTable:[B\n-         4: getstatic     #24                 // Field URL_SAFE_ENCODE_TABLE:[B\n+         1: getfield      #82                 // Field encodeTable:[B\n+         4: getstatic     #76                 // Field URL_SAFE_ENCODE_TABLE:[B\n          7: if_acmpne     14\n         10: iconst_1\n         11: goto          15\n         14: iconst_0\n         15: ireturn\n       LineNumberTable:\n         line 307: 0\n@@ -577,372 +577,372 @@\n \n   void encode(byte[], int, int, org.apache.commons.codec.binary.BaseNCodec$Context);\n     descriptor: ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n     flags: (0x0000)\n     Code:\n       stack=5, locals=8, args_size=5\n          0: aload         4\n-         2: getfield      #27                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n+         2: getfield      #85                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n          5: ifeq          9\n          8: return\n          9: iload_3\n         10: ifge          427\n         13: aload         4\n         15: iconst_1\n-        16: putfield      #27                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n+        16: putfield      #85                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n         19: iconst_0\n         20: aload         4\n-        22: getfield      #28                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.modulus:I\n+        22: getfield      #91                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.modulus:I\n         25: if_icmpne     36\n         28: aload_0\n-        29: getfield      #29                 // Field lineLength:I\n+        29: getfield      #94                 // Field lineLength:I\n         32: ifne          36\n         35: return\n         36: aload_0\n         37: aload_0\n-        38: getfield      #20                 // Field encodeSize:I\n+        38: getfield      #60                 // Field encodeSize:I\n         41: aload         4\n-        43: invokevirtual #30                 // Method ensureBufferSize:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+        43: invokevirtual #97                 // Method ensureBufferSize:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n         46: astore        5\n         48: aload         4\n-        50: getfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+        50: getfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n         53: istore        6\n         55: aload         4\n-        57: getfield      #28                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.modulus:I\n+        57: getfield      #91                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.modulus:I\n         60: tableswitch   { // 0 to 2\n                        0: 88\n                        1: 91\n                        2: 202\n                  default: 325\n             }\n         88: goto          356\n         91: aload         5\n         93: aload         4\n         95: dup\n-        96: getfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+        96: getfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n         99: dup_x1\n        100: iconst_1\n        101: iadd\n-       102: putfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       102: putfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        105: aload_0\n-       106: getfield      #26                 // Field encodeTable:[B\n+       106: getfield      #82                 // Field encodeTable:[B\n        109: aload         4\n-       111: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+       111: getfield      #104                // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n        114: iconst_2\n        115: ishr\n        116: bipush        63\n        118: iand\n        119: baload\n        120: bastore\n        121: aload         5\n        123: aload         4\n        125: dup\n-       126: getfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       126: getfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        129: dup_x1\n        130: iconst_1\n        131: iadd\n-       132: putfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       132: putfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        135: aload_0\n-       136: getfield      #26                 // Field encodeTable:[B\n+       136: getfield      #82                 // Field encodeTable:[B\n        139: aload         4\n-       141: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+       141: getfield      #104                // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n        144: iconst_4\n        145: ishl\n        146: bipush        63\n        148: iand\n        149: baload\n        150: bastore\n        151: aload_0\n-       152: getfield      #26                 // Field encodeTable:[B\n-       155: getstatic     #25                 // Field STANDARD_ENCODE_TABLE:[B\n+       152: getfield      #82                 // Field encodeTable:[B\n+       155: getstatic     #79                 // Field STANDARD_ENCODE_TABLE:[B\n        158: if_acmpne     356\n        161: aload         5\n        163: aload         4\n        165: dup\n-       166: getfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       166: getfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        169: dup_x1\n        170: iconst_1\n        171: iadd\n-       172: putfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       172: putfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        175: aload_0\n-       176: getfield      #33                 // Field pad:B\n+       176: getfield      #107                // Field pad:B\n        179: bastore\n        180: aload         5\n        182: aload         4\n        184: dup\n-       185: getfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       185: getfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        188: dup_x1\n        189: iconst_1\n        190: iadd\n-       191: putfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       191: putfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        194: aload_0\n-       195: getfield      #33                 // Field pad:B\n+       195: getfield      #107                // Field pad:B\n        198: bastore\n        199: goto          356\n        202: aload         5\n        204: aload         4\n        206: dup\n-       207: getfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       207: getfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        210: dup_x1\n        211: iconst_1\n        212: iadd\n-       213: putfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       213: putfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        216: aload_0\n-       217: getfield      #26                 // Field encodeTable:[B\n+       217: getfield      #82                 // Field encodeTable:[B\n        220: aload         4\n-       222: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+       222: getfield      #104                // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n        225: bipush        10\n        227: ishr\n        228: bipush        63\n        230: iand\n        231: baload\n        232: bastore\n        233: aload         5\n        235: aload         4\n        237: dup\n-       238: getfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       238: getfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        241: dup_x1\n        242: iconst_1\n        243: iadd\n-       244: putfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       244: putfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        247: aload_0\n-       248: getfield      #26                 // Field encodeTable:[B\n+       248: getfield      #82                 // Field encodeTable:[B\n        251: aload         4\n-       253: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+       253: getfield      #104                // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n        256: iconst_4\n        257: ishr\n        258: bipush        63\n        260: iand\n        261: baload\n        262: bastore\n        263: aload         5\n        265: aload         4\n        267: dup\n-       268: getfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       268: getfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        271: dup_x1\n        272: iconst_1\n        273: iadd\n-       274: putfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       274: putfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        277: aload_0\n-       278: getfield      #26                 // Field encodeTable:[B\n+       278: getfield      #82                 // Field encodeTable:[B\n        281: aload         4\n-       283: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+       283: getfield      #104                // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n        286: iconst_2\n        287: ishl\n        288: bipush        63\n        290: iand\n        291: baload\n        292: bastore\n        293: aload_0\n-       294: getfield      #26                 // Field encodeTable:[B\n-       297: getstatic     #25                 // Field STANDARD_ENCODE_TABLE:[B\n+       294: getfield      #82                 // Field encodeTable:[B\n+       297: getstatic     #79                 // Field STANDARD_ENCODE_TABLE:[B\n        300: if_acmpne     356\n        303: aload         5\n        305: aload         4\n        307: dup\n-       308: getfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       308: getfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        311: dup_x1\n        312: iconst_1\n        313: iadd\n-       314: putfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       314: putfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        317: aload_0\n-       318: getfield      #33                 // Field pad:B\n+       318: getfield      #107                // Field pad:B\n        321: bastore\n        322: goto          356\n-       325: new           #34                 // class java/lang/IllegalStateException\n+       325: new           #111                // class java/lang/IllegalStateException\n        328: dup\n-       329: new           #13                 // class java/lang/StringBuilder\n+       329: new           #40                 // class java/lang/StringBuilder\n        332: dup\n-       333: invokespecial #14                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       336: ldc           #35                 // String Impossible modulus\n-       338: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       333: invokespecial #42                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       336: ldc           #113                // String Impossible modulus\n+       338: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        341: aload         4\n-       343: getfield      #28                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.modulus:I\n-       346: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       349: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       352: invokespecial #37                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+       343: getfield      #91                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.modulus:I\n+       346: invokevirtual #115                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       349: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       352: invokespecial #118                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n        355: athrow\n        356: aload         4\n        358: dup\n-       359: getfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.currentLinePos:I\n+       359: getfield      #119                // Field org/apache/commons/codec/binary/BaseNCodec$Context.currentLinePos:I\n        362: aload         4\n-       364: getfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       364: getfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        367: iload         6\n        369: isub\n        370: iadd\n-       371: putfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.currentLinePos:I\n+       371: putfield      #119                // Field org/apache/commons/codec/binary/BaseNCodec$Context.currentLinePos:I\n        374: aload_0\n-       375: getfield      #29                 // Field lineLength:I\n+       375: getfield      #94                 // Field lineLength:I\n        378: ifle          424\n        381: aload         4\n-       383: getfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.currentLinePos:I\n+       383: getfield      #119                // Field org/apache/commons/codec/binary/BaseNCodec$Context.currentLinePos:I\n        386: ifle          424\n        389: aload_0\n-       390: getfield      #21                 // Field lineSeparator:[B\n+       390: getfield      #64                 // Field lineSeparator:[B\n        393: iconst_0\n        394: aload         5\n        396: aload         4\n-       398: getfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       398: getfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        401: aload_0\n-       402: getfield      #21                 // Field lineSeparator:[B\n+       402: getfield      #64                 // Field lineSeparator:[B\n        405: arraylength\n-       406: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       406: invokestatic  #67                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        409: aload         4\n        411: dup\n-       412: getfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       412: getfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        415: aload_0\n-       416: getfield      #21                 // Field lineSeparator:[B\n+       416: getfield      #64                 // Field lineSeparator:[B\n        419: arraylength\n        420: iadd\n-       421: putfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       421: putfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        424: goto          704\n        427: iconst_0\n        428: istore        5\n        430: iload         5\n        432: iload_3\n        433: if_icmpge     704\n        436: aload_0\n        437: aload_0\n-       438: getfield      #20                 // Field encodeSize:I\n+       438: getfield      #60                 // Field encodeSize:I\n        441: aload         4\n-       443: invokevirtual #30                 // Method ensureBufferSize:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+       443: invokevirtual #97                 // Method ensureBufferSize:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n        446: astore        6\n        448: aload         4\n        450: aload         4\n-       452: getfield      #28                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.modulus:I\n+       452: getfield      #91                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.modulus:I\n        455: iconst_1\n        456: iadd\n        457: iconst_3\n        458: irem\n-       459: putfield      #28                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.modulus:I\n+       459: putfield      #91                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.modulus:I\n        462: aload_1\n        463: iload_2\n        464: iinc          2, 1\n        467: baload\n        468: istore        7\n        470: iload         7\n        472: ifge          481\n        475: iinc_w        7, 256\n        481: aload         4\n        483: aload         4\n-       485: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+       485: getfield      #104                // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n        488: bipush        8\n        490: ishl\n        491: iload         7\n        493: iadd\n-       494: putfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+       494: putfield      #104                // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n        497: iconst_0\n        498: aload         4\n-       500: getfield      #28                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.modulus:I\n+       500: getfield      #91                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.modulus:I\n        503: if_icmpne     698\n        506: aload         6\n        508: aload         4\n        510: dup\n-       511: getfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       511: getfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        514: dup_x1\n        515: iconst_1\n        516: iadd\n-       517: putfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       517: putfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        520: aload_0\n-       521: getfield      #26                 // Field encodeTable:[B\n+       521: getfield      #82                 // Field encodeTable:[B\n        524: aload         4\n-       526: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+       526: getfield      #104                // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n        529: bipush        18\n        531: ishr\n        532: bipush        63\n        534: iand\n        535: baload\n        536: bastore\n        537: aload         6\n        539: aload         4\n        541: dup\n-       542: getfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       542: getfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        545: dup_x1\n        546: iconst_1\n        547: iadd\n-       548: putfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       548: putfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        551: aload_0\n-       552: getfield      #26                 // Field encodeTable:[B\n+       552: getfield      #82                 // Field encodeTable:[B\n        555: aload         4\n-       557: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+       557: getfield      #104                // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n        560: bipush        12\n        562: ishr\n        563: bipush        63\n        565: iand\n        566: baload\n        567: bastore\n        568: aload         6\n        570: aload         4\n        572: dup\n-       573: getfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       573: getfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        576: dup_x1\n        577: iconst_1\n        578: iadd\n-       579: putfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       579: putfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        582: aload_0\n-       583: getfield      #26                 // Field encodeTable:[B\n+       583: getfield      #82                 // Field encodeTable:[B\n        586: aload         4\n-       588: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+       588: getfield      #104                // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n        591: bipush        6\n        593: ishr\n        594: bipush        63\n        596: iand\n        597: baload\n        598: bastore\n        599: aload         6\n        601: aload         4\n        603: dup\n-       604: getfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       604: getfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        607: dup_x1\n        608: iconst_1\n        609: iadd\n-       610: putfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       610: putfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        613: aload_0\n-       614: getfield      #26                 // Field encodeTable:[B\n+       614: getfield      #82                 // Field encodeTable:[B\n        617: aload         4\n-       619: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+       619: getfield      #104                // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n        622: bipush        63\n        624: iand\n        625: baload\n        626: bastore\n        627: aload         4\n        629: dup\n-       630: getfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.currentLinePos:I\n+       630: getfield      #119                // Field org/apache/commons/codec/binary/BaseNCodec$Context.currentLinePos:I\n        633: iconst_4\n        634: iadd\n-       635: putfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.currentLinePos:I\n+       635: putfield      #119                // Field org/apache/commons/codec/binary/BaseNCodec$Context.currentLinePos:I\n        638: aload_0\n-       639: getfield      #29                 // Field lineLength:I\n+       639: getfield      #94                 // Field lineLength:I\n        642: ifle          698\n        645: aload_0\n-       646: getfield      #29                 // Field lineLength:I\n+       646: getfield      #94                 // Field lineLength:I\n        649: aload         4\n-       651: getfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.currentLinePos:I\n+       651: getfield      #119                // Field org/apache/commons/codec/binary/BaseNCodec$Context.currentLinePos:I\n        654: if_icmpgt     698\n        657: aload_0\n-       658: getfield      #21                 // Field lineSeparator:[B\n+       658: getfield      #64                 // Field lineSeparator:[B\n        661: iconst_0\n        662: aload         6\n        664: aload         4\n-       666: getfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       666: getfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        669: aload_0\n-       670: getfield      #21                 // Field lineSeparator:[B\n+       670: getfield      #64                 // Field lineSeparator:[B\n        673: arraylength\n-       674: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       674: invokestatic  #67                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        677: aload         4\n        679: dup\n-       680: getfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       680: getfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        683: aload_0\n-       684: getfield      #21                 // Field lineSeparator:[B\n+       684: getfield      #64                 // Field lineSeparator:[B\n        687: arraylength\n        688: iadd\n-       689: putfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       689: putfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        692: aload         4\n        694: iconst_0\n-       695: putfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.currentLinePos:I\n+       695: putfield      #119                // Field org/apache/commons/codec/binary/BaseNCodec$Context.currentLinePos:I\n        698: iinc          5, 1\n        701: goto          430\n        704: return\n       LineNumberTable:\n         line 333: 0\n         line 334: 8\n         line 338: 9\n@@ -1028,226 +1028,226 @@\n \n   void decode(byte[], int, int, org.apache.commons.codec.binary.BaseNCodec$Context);\n     descriptor: ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n     flags: (0x0000)\n     Code:\n       stack=5, locals=9, args_size=5\n          0: aload         4\n-         2: getfield      #27                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n+         2: getfield      #85                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n          5: ifeq          9\n          8: return\n          9: iload_3\n         10: ifge          19\n         13: aload         4\n         15: iconst_1\n-        16: putfield      #27                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n+        16: putfield      #85                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n         19: iconst_0\n         20: istore        5\n         22: iload         5\n         24: iload_3\n         25: if_icmpge     218\n         28: aload_0\n         29: aload_0\n-        30: getfield      #23                 // Field decodeSize:I\n+        30: getfield      #73                 // Field decodeSize:I\n         33: aload         4\n-        35: invokevirtual #30                 // Method ensureBufferSize:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+        35: invokevirtual #97                 // Method ensureBufferSize:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n         38: astore        6\n         40: aload_1\n         41: iload_2\n         42: iinc          2, 1\n         45: baload\n         46: istore        7\n         48: iload         7\n         50: aload_0\n-        51: getfield      #33                 // Field pad:B\n+        51: getfield      #107                // Field pad:B\n         54: if_icmpne     66\n         57: aload         4\n         59: iconst_1\n-        60: putfield      #27                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n+        60: putfield      #85                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n         63: goto          218\n         66: iload         7\n         68: iflt          212\n         71: iload         7\n-        73: getstatic     #8                  // Field DECODE_TABLE:[B\n+        73: getstatic     #22                 // Field DECODE_TABLE:[B\n         76: arraylength\n         77: if_icmpge     212\n-        80: getstatic     #8                  // Field DECODE_TABLE:[B\n+        80: getstatic     #22                 // Field DECODE_TABLE:[B\n         83: iload         7\n         85: baload\n         86: istore        8\n         88: iload         8\n         90: iflt          212\n         93: aload         4\n         95: aload         4\n-        97: getfield      #28                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.modulus:I\n+        97: getfield      #91                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.modulus:I\n        100: iconst_1\n        101: iadd\n        102: iconst_4\n        103: irem\n-       104: putfield      #28                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.modulus:I\n+       104: putfield      #91                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.modulus:I\n        107: aload         4\n        109: aload         4\n-       111: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+       111: getfield      #104                // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n        114: bipush        6\n        116: ishl\n        117: iload         8\n        119: iadd\n-       120: putfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+       120: putfield      #104                // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n        123: aload         4\n-       125: getfield      #28                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.modulus:I\n+       125: getfield      #91                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.modulus:I\n        128: ifne          212\n        131: aload         6\n        133: aload         4\n        135: dup\n-       136: getfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       136: getfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        139: dup_x1\n        140: iconst_1\n        141: iadd\n-       142: putfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       142: putfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        145: aload         4\n-       147: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+       147: getfield      #104                // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n        150: bipush        16\n        152: ishr\n        153: sipush        255\n        156: iand\n        157: i2b\n        158: bastore\n        159: aload         6\n        161: aload         4\n        163: dup\n-       164: getfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       164: getfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        167: dup_x1\n        168: iconst_1\n        169: iadd\n-       170: putfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       170: putfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        173: aload         4\n-       175: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+       175: getfield      #104                // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n        178: bipush        8\n        180: ishr\n        181: sipush        255\n        184: iand\n        185: i2b\n        186: bastore\n        187: aload         6\n        189: aload         4\n        191: dup\n-       192: getfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       192: getfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        195: dup_x1\n        196: iconst_1\n        197: iadd\n-       198: putfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       198: putfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        201: aload         4\n-       203: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+       203: getfield      #104                // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n        206: sipush        255\n        209: iand\n        210: i2b\n        211: bastore\n        212: iinc          5, 1\n        215: goto          22\n        218: aload         4\n-       220: getfield      #27                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n+       220: getfield      #85                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n        223: ifeq          434\n        226: aload         4\n-       228: getfield      #28                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.modulus:I\n+       228: getfield      #91                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.modulus:I\n        231: ifeq          434\n        234: aload_0\n        235: aload_0\n-       236: getfield      #23                 // Field decodeSize:I\n+       236: getfield      #73                 // Field decodeSize:I\n        239: aload         4\n-       241: invokevirtual #30                 // Method ensureBufferSize:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+       241: invokevirtual #97                 // Method ensureBufferSize:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n        244: astore        5\n        246: aload         4\n-       248: getfield      #28                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.modulus:I\n+       248: getfield      #91                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.modulus:I\n        251: tableswitch   { // 1 to 3\n                        1: 276\n                        2: 279\n                        3: 327\n                  default: 403\n             }\n        276: goto          434\n        279: aload_0\n        280: iconst_4\n        281: aload         4\n-       283: invokespecial #39                 // Method validateCharacter:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)J\n+       283: invokespecial #122                // Method validateCharacter:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)J\n        286: pop2\n        287: aload         4\n        289: aload         4\n-       291: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+       291: getfield      #104                // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n        294: iconst_4\n        295: ishr\n-       296: putfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+       296: putfield      #104                // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n        299: aload         5\n        301: aload         4\n        303: dup\n-       304: getfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       304: getfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        307: dup_x1\n        308: iconst_1\n        309: iadd\n-       310: putfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       310: putfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        313: aload         4\n-       315: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+       315: getfield      #104                // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n        318: sipush        255\n        321: iand\n        322: i2b\n        323: bastore\n        324: goto          434\n        327: aload_0\n        328: iconst_2\n        329: aload         4\n-       331: invokespecial #39                 // Method validateCharacter:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)J\n+       331: invokespecial #122                // Method validateCharacter:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)J\n        334: pop2\n        335: aload         4\n        337: aload         4\n-       339: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+       339: getfield      #104                // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n        342: iconst_2\n        343: ishr\n-       344: putfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+       344: putfield      #104                // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n        347: aload         5\n        349: aload         4\n        351: dup\n-       352: getfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       352: getfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        355: dup_x1\n        356: iconst_1\n        357: iadd\n-       358: putfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       358: putfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        361: aload         4\n-       363: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+       363: getfield      #104                // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n        366: bipush        8\n        368: ishr\n        369: sipush        255\n        372: iand\n        373: i2b\n        374: bastore\n        375: aload         5\n        377: aload         4\n        379: dup\n-       380: getfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       380: getfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        383: dup_x1\n        384: iconst_1\n        385: iadd\n-       386: putfield      #31                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       386: putfield      #101                // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        389: aload         4\n-       391: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+       391: getfield      #104                // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n        394: sipush        255\n        397: iand\n        398: i2b\n        399: bastore\n        400: goto          434\n-       403: new           #34                 // class java/lang/IllegalStateException\n+       403: new           #111                // class java/lang/IllegalStateException\n        406: dup\n-       407: new           #13                 // class java/lang/StringBuilder\n+       407: new           #40                 // class java/lang/StringBuilder\n        410: dup\n-       411: invokespecial #14                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       414: ldc           #35                 // String Impossible modulus\n-       416: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       411: invokespecial #42                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       414: ldc           #113                // String Impossible modulus\n+       416: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        419: aload         4\n-       421: getfield      #28                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.modulus:I\n-       424: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       427: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       430: invokespecial #37                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+       421: getfield      #91                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.modulus:I\n+       424: invokevirtual #115                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       427: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       430: invokespecial #118                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n        433: athrow\n        434: return\n       LineNumberTable:\n         line 430: 0\n         line 431: 8\n         line 433: 9\n         line 434: 13\n@@ -1319,41 +1319,41 @@\n \n   public static boolean isArrayByteBase64(byte[]);\n     descriptor: ([B)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #40                 // Method isBase64:([B)Z\n+         1: invokestatic  #126                // Method isBase64:([B)Z\n          4: ireturn\n       LineNumberTable:\n         line 500: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0 arrayOctet   [B\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #131()\n+      0: #240()\n         java.lang.Deprecated\n \n   public static boolean isBase64(byte);\n     descriptor: (B)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: iload_0\n          1: bipush        61\n          3: if_icmpeq     27\n          6: iload_0\n          7: iflt          31\n         10: iload_0\n-        11: getstatic     #8                  // Field DECODE_TABLE:[B\n+        11: getstatic     #22                 // Field DECODE_TABLE:[B\n         14: arraylength\n         15: if_icmpge     31\n-        18: getstatic     #8                  // Field DECODE_TABLE:[B\n+        18: getstatic     #22                 // Field DECODE_TABLE:[B\n         21: iload_0\n         22: baload\n         23: iconst_m1\n         24: if_icmpeq     31\n         27: iconst_1\n         28: goto          32\n         31: iconst_0\n@@ -1371,16 +1371,16 @@\n \n   public static boolean isBase64(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #41                 // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n-         4: invokestatic  #40                 // Method isBase64:([B)Z\n+         1: invokestatic  #129                // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n+         4: invokestatic  #126                // Method isBase64:([B)Z\n          7: ireturn\n       LineNumberTable:\n         line 526: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 base64   Ljava/lang/String;\n \n@@ -1394,20 +1394,20 @@\n          2: iload_1\n          3: aload_0\n          4: arraylength\n          5: if_icmpge     34\n          8: aload_0\n          9: iload_1\n         10: baload\n-        11: invokestatic  #42                 // Method isBase64:(B)Z\n+        11: invokestatic  #133                // Method isBase64:(B)Z\n         14: ifne          28\n         17: aload_0\n         18: iload_1\n         19: baload\n-        20: invokestatic  #43                 // Method isWhiteSpace:(B)Z\n+        20: invokestatic  #136                // Method isWhiteSpace:(B)Z\n         23: ifne          28\n         26: iconst_0\n         27: ireturn\n         28: iinc          1, 1\n         31: goto          2\n         34: iconst_1\n         35: ireturn\n@@ -1432,31 +1432,31 @@\n   public static byte[] encodeBase64(byte[]);\n     descriptor: ([B)[B\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: invokestatic  #44                 // Method encodeBase64:([BZ)[B\n+         2: invokestatic  #139                // Method encodeBase64:([BZ)[B\n          5: areturn\n       LineNumberTable:\n         line 556: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0 binaryData   [B\n \n   public static java.lang.String encodeBase64String(byte[]);\n     descriptor: ([B)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: invokestatic  #44                 // Method encodeBase64:([BZ)[B\n-         5: invokestatic  #45                 // Method org/apache/commons/codec/binary/StringUtils.newStringUsAscii:([B)Ljava/lang/String;\n+         2: invokestatic  #139                // Method encodeBase64:([BZ)[B\n+         5: invokestatic  #143                // Method org/apache/commons/codec/binary/StringUtils.newStringUsAscii:([B)Ljava/lang/String;\n          8: areturn\n       LineNumberTable:\n         line 571: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0 binaryData   [B\n \n@@ -1464,15 +1464,15 @@\n     descriptor: ([B)[B\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n          2: iconst_1\n-         3: invokestatic  #46                 // Method encodeBase64:([BZZ)[B\n+         3: invokestatic  #146                // Method encodeBase64:([BZZ)[B\n          6: areturn\n       LineNumberTable:\n         line 584: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 binaryData   [B\n \n@@ -1480,31 +1480,31 @@\n     descriptor: ([B)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n          2: iconst_1\n-         3: invokestatic  #46                 // Method encodeBase64:([BZZ)[B\n-         6: invokestatic  #45                 // Method org/apache/commons/codec/binary/StringUtils.newStringUsAscii:([B)Ljava/lang/String;\n+         3: invokestatic  #146                // Method encodeBase64:([BZZ)[B\n+         6: invokestatic  #143                // Method org/apache/commons/codec/binary/StringUtils.newStringUsAscii:([B)Ljava/lang/String;\n          9: areturn\n       LineNumberTable:\n         line 597: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0 binaryData   [B\n \n   public static byte[] encodeBase64Chunked(byte[]);\n     descriptor: ([B)[B\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokestatic  #44                 // Method encodeBase64:([BZ)[B\n+         2: invokestatic  #139                // Method encodeBase64:([BZ)[B\n          5: areturn\n       LineNumberTable:\n         line 608: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0 binaryData   [B\n \n@@ -1512,15 +1512,15 @@\n     descriptor: ([BZ)[B\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: iconst_0\n-         3: invokestatic  #46                 // Method encodeBase64:([BZZ)[B\n+         3: invokestatic  #146                // Method encodeBase64:([BZZ)[B\n          6: areturn\n       LineNumberTable:\n         line 623: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 binaryData   [B\n             0       7     1 isChunked   Z\n@@ -1529,16 +1529,16 @@\n     descriptor: ([BZZ)[B\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: iload_1\n          2: iload_2\n-         3: ldc           #48                 // int 2147483647\n-         5: invokestatic  #49                 // Method encodeBase64:([BZZI)[B\n+         3: ldc           #151                // int 2147483647\n+         5: invokestatic  #152                // Method encodeBase64:([BZZI)[B\n          8: areturn\n       LineNumberTable:\n         line 642: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0 binaryData   [B\n             0       9     1 isChunked   Z\n@@ -1554,54 +1554,54 @@\n          4: aload_0\n          5: arraylength\n          6: ifne          11\n          9: aload_0\n         10: areturn\n         11: iload_1\n         12: ifeq          26\n-        15: new           #6                  // class org/apache/commons/codec/binary/Base64\n+        15: new           #2                  // class org/apache/commons/codec/binary/Base64\n         18: dup\n         19: iload_2\n-        20: invokespecial #50                 // Method \"<init>\":(Z)V\n+        20: invokespecial #155                // Method \"<init>\":(Z)V\n         23: goto          38\n-        26: new           #6                  // class org/apache/commons/codec/binary/Base64\n+        26: new           #2                  // class org/apache/commons/codec/binary/Base64\n         29: dup\n         30: iconst_0\n-        31: getstatic     #3                  // Field CHUNK_SEPARATOR:[B\n+        31: getstatic     #9                  // Field CHUNK_SEPARATOR:[B\n         34: iload_2\n-        35: invokespecial #4                  // Method \"<init>\":(I[BZ)V\n+        35: invokespecial #13                 // Method \"<init>\":(I[BZ)V\n         38: astore        4\n         40: aload         4\n         42: aload_0\n-        43: invokevirtual #51                 // Method getEncodedLength:([B)J\n+        43: invokevirtual #158                // Method getEncodedLength:([B)J\n         46: lstore        5\n         48: lload         5\n         50: iload_3\n         51: i2l\n         52: lcmp\n         53: ifle          93\n-        56: new           #12                 // class java/lang/IllegalArgumentException\n+        56: new           #38                 // class java/lang/IllegalArgumentException\n         59: dup\n-        60: new           #13                 // class java/lang/StringBuilder\n+        60: new           #40                 // class java/lang/StringBuilder\n         63: dup\n-        64: invokespecial #14                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        67: ldc           #52                 // String Input array too big, the output array would be bigger (\n-        69: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        64: invokespecial #42                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        67: ldc           #162                // String Input array too big, the output array would be bigger (\n+        69: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         72: lload         5\n-        74: invokevirtual #53                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-        77: ldc           #54                 // String ) than the specified maximum size of\n-        79: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        74: invokevirtual #164                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        77: ldc           #167                // String ) than the specified maximum size of\n+        79: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         82: iload_3\n-        83: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        86: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        89: invokespecial #19                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        83: invokevirtual #115                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        86: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        89: invokespecial #57                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         92: athrow\n         93: aload         4\n         95: aload_0\n-        96: invokevirtual #55                 // Method encode:([B)[B\n+        96: invokevirtual #169                // Method encode:([B)[B\n         99: areturn\n       LineNumberTable:\n         line 664: 0\n         line 665: 9\n         line 670: 11\n         line 671: 40\n         line 672: 48\n@@ -1626,77 +1626,77 @@\n           locals = [ class org/apache/commons/codec/binary/Base64, long ]\n \n   public static byte[] decodeBase64(java.lang.String);\n     descriptor: (Ljava/lang/String;)[B\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: new           #6                  // class org/apache/commons/codec/binary/Base64\n+         0: new           #2                  // class org/apache/commons/codec/binary/Base64\n          3: dup\n-         4: invokespecial #56                 // Method \"<init>\":()V\n+         4: invokespecial #173                // Method \"<init>\":()V\n          7: aload_0\n-         8: invokevirtual #57                 // Method decode:(Ljava/lang/String;)[B\n+         8: invokevirtual #174                // Method decode:(Ljava/lang/String;)[B\n         11: areturn\n       LineNumberTable:\n         line 694: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0 base64String   Ljava/lang/String;\n \n   public static byte[] decodeBase64(byte[]);\n     descriptor: ([B)[B\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: new           #6                  // class org/apache/commons/codec/binary/Base64\n+         0: new           #2                  // class org/apache/commons/codec/binary/Base64\n          3: dup\n-         4: invokespecial #56                 // Method \"<init>\":()V\n+         4: invokespecial #173                // Method \"<init>\":()V\n          7: aload_0\n-         8: invokevirtual #58                 // Method decode:([B)[B\n+         8: invokevirtual #177                // Method decode:([B)[B\n         11: areturn\n       LineNumberTable:\n         line 708: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0 base64Data   [B\n \n   public static java.math.BigInteger decodeInteger(byte[]);\n     descriptor: ([B)Ljava/math/BigInteger;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=1, args_size=1\n-         0: new           #59                 // class java/math/BigInteger\n+         0: new           #179                // class java/math/BigInteger\n          3: dup\n          4: iconst_1\n          5: aload_0\n-         6: invokestatic  #60                 // Method decodeBase64:([B)[B\n-         9: invokespecial #61                 // Method java/math/BigInteger.\"<init>\":(I[B)V\n+         6: invokestatic  #181                // Method decodeBase64:([B)[B\n+         9: invokespecial #184                // Method java/math/BigInteger.\"<init>\":(I[B)V\n         12: areturn\n       LineNumberTable:\n         line 723: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0 pArray   [B\n \n   public static byte[] encodeInteger(java.math.BigInteger);\n     descriptor: (Ljava/math/BigInteger;)[B\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: ifnonnull     14\n-         4: new           #62                 // class java/lang/NullPointerException\n+         4: new           #185                // class java/lang/NullPointerException\n          7: dup\n-         8: ldc           #63                 // String encodeInteger called with null parameter\n-        10: invokespecial #64                 // Method java/lang/NullPointerException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #187                // String encodeInteger called with null parameter\n+        10: invokespecial #189                // Method java/lang/NullPointerException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_0\n-        15: invokestatic  #65                 // Method toIntegerBytes:(Ljava/math/BigInteger;)[B\n+        15: invokestatic  #190                // Method toIntegerBytes:(Ljava/math/BigInteger;)[B\n         18: iconst_0\n-        19: invokestatic  #44                 // Method encodeBase64:([BZ)[B\n+        19: invokestatic  #139                // Method encodeBase64:([BZ)[B\n         22: areturn\n       LineNumberTable:\n         line 737: 0\n         line 738: 4\n         line 740: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1706,34 +1706,34 @@\n \n   static byte[] toIntegerBytes(java.math.BigInteger);\n     descriptor: (Ljava/math/BigInteger;)[B\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=5, locals=7, args_size=1\n          0: aload_0\n-         1: invokevirtual #66                 // Method java/math/BigInteger.bitLength:()I\n+         1: invokevirtual #194                // Method java/math/BigInteger.bitLength:()I\n          4: istore_1\n          5: iload_1\n          6: bipush        7\n          8: iadd\n          9: iconst_3\n         10: ishr\n         11: iconst_3\n         12: ishl\n         13: istore_1\n         14: aload_0\n-        15: invokevirtual #67                 // Method java/math/BigInteger.toByteArray:()[B\n+        15: invokevirtual #198                // Method java/math/BigInteger.toByteArray:()[B\n         18: astore_2\n         19: aload_0\n-        20: invokevirtual #66                 // Method java/math/BigInteger.bitLength:()I\n+        20: invokevirtual #194                // Method java/math/BigInteger.bitLength:()I\n         23: bipush        8\n         25: irem\n         26: ifeq          47\n         29: aload_0\n-        30: invokevirtual #66                 // Method java/math/BigInteger.bitLength:()I\n+        30: invokevirtual #194                // Method java/math/BigInteger.bitLength:()I\n         33: bipush        8\n         35: idiv\n         36: iconst_1\n         37: iadd\n         38: iload_1\n         39: bipush        8\n         41: idiv\n@@ -1742,15 +1742,15 @@\n         46: areturn\n         47: iconst_0\n         48: istore_3\n         49: aload_2\n         50: arraylength\n         51: istore        4\n         53: aload_0\n-        54: invokevirtual #66                 // Method java/math/BigInteger.bitLength:()I\n+        54: invokevirtual #194                // Method java/math/BigInteger.bitLength:()I\n         57: bipush        8\n         59: irem\n         60: ifne          68\n         63: iconst_1\n         64: istore_3\n         65: iinc          4, -1\n         68: iload_1\n@@ -1765,15 +1765,15 @@\n         81: newarray       byte\n         83: astore        6\n         85: aload_2\n         86: iload_3\n         87: aload         6\n         89: iload         5\n         91: iload         4\n-        93: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        93: invokestatic  #67                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         96: aload         6\n         98: areturn\n       LineNumberTable:\n         line 751: 0\n         line 753: 5\n         line 754: 14\n         line 756: 19\n@@ -1809,19 +1809,19 @@\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: iload_1\n          1: iflt          27\n          4: iload_1\n          5: aload_0\n-         6: getfield      #9                  // Field decodeTable:[B\n+         6: getfield      #25                 // Field decodeTable:[B\n          9: arraylength\n         10: if_icmpge     27\n         13: aload_0\n-        14: getfield      #9                  // Field decodeTable:[B\n+        14: getfield      #25                 // Field decodeTable:[B\n         17: iload_1\n         18: baload\n         19: iconst_m1\n         20: if_icmpeq     27\n         23: iconst_1\n         24: goto          28\n         27: iconst_0\n@@ -1839,25 +1839,25 @@\n \n   private long validateCharacter(int, org.apache.commons.codec.binary.BaseNCodec$Context);\n     descriptor: (ILorg/apache/commons/codec/binary/BaseNCodec$Context;)J\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_2\n-         1: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+         1: getfield      #104                // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n          4: iload_1\n          5: iand\n          6: ifeq          19\n-         9: new           #12                 // class java/lang/IllegalArgumentException\n+         9: new           #38                 // class java/lang/IllegalArgumentException\n         12: dup\n-        13: ldc           #68                 // String Last encoded character (before the paddings if any) is a valid base 64 alphabet but not a possible value\n-        15: invokespecial #19                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        13: ldc           #202                // String Last encoded character (before the paddings if any) is a valid base 64 alphabet but not a possible value\n+        15: invokespecial #57                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         18: athrow\n         19: aload_2\n-        20: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+        20: getfield      #104                // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n         23: iload_1\n         24: ishr\n         25: i2l\n         26: lreturn\n       LineNumberTable:\n         line 797: 0\n         line 798: 9\n@@ -1881,15 +1881,15 @@\n          4: iconst_0\n          5: bipush        13\n          7: bastore\n          8: dup\n          9: iconst_1\n         10: bipush        10\n         12: bastore\n-        13: putstatic     #3                  // Field CHUNK_SEPARATOR:[B\n+        13: putstatic     #9                  // Field CHUNK_SEPARATOR:[B\n         16: bipush        64\n         18: newarray       byte\n         20: dup\n         21: iconst_0\n         22: bipush        65\n         24: bastore\n         25: dup\n@@ -2140,15 +2140,15 @@\n        387: bipush        62\n        389: bipush        43\n        391: bastore\n        392: dup\n        393: bipush        63\n        395: bipush        47\n        397: bastore\n-       398: putstatic     #25                 // Field STANDARD_ENCODE_TABLE:[B\n+       398: putstatic     #79                 // Field STANDARD_ENCODE_TABLE:[B\n        401: bipush        64\n        403: newarray       byte\n        405: dup\n        406: iconst_0\n        407: bipush        65\n        409: bastore\n        410: dup\n@@ -2399,15 +2399,15 @@\n        772: bipush        62\n        774: bipush        45\n        776: bastore\n        777: dup\n        778: bipush        63\n        780: bipush        95\n        782: bastore\n-       783: putstatic     #24                 // Field URL_SAFE_ENCODE_TABLE:[B\n+       783: putstatic     #76                 // Field URL_SAFE_ENCODE_TABLE:[B\n        786: bipush        123\n        788: newarray       byte\n        790: dup\n        791: iconst_0\n        792: iconst_m1\n        793: bastore\n        794: dup\n@@ -2894,18 +2894,18 @@\n       1448: bipush        121\n       1450: bipush        50\n       1452: bastore\n       1453: dup\n       1454: bipush        122\n       1456: bipush        51\n       1458: bastore\n-      1459: putstatic     #8                  // Field DECODE_TABLE:[B\n+      1459: putstatic     #22                 // Field DECODE_TABLE:[B\n       1462: return\n       LineNumberTable:\n         line 73: 0\n         line 82: 16\n         line 95: 401\n         line 114: 786\n }\n SourceFile: \"Base64.java\"\n InnerClasses:\n-  static #111= #110 of #2;                // Context=class org/apache/commons/codec/binary/BaseNCodec$Context of class org/apache/commons/codec/binary/BaseNCodec\n+  static #273= #86 of #7;                 // Context=class org/apache/commons/codec/binary/BaseNCodec$Context of class org/apache/commons/codec/binary/BaseNCodec\n"}]}
