{"diffoscope-json-version": 1, "source1": "first/NewAttributeBands$AttributeLayoutElement.class", "source2": "second/NewAttributeBands$AttributeLayoutElement.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,43 +1,43 @@\n-  SHA-256 checksum 0bfabf8d3bc2f25845ead78813c2686c04319a90896b6c403eb51ed5f635ec90\n+  SHA-256 checksum 9c035fa638f148eae0ea00b16d2872f418d78934fbeed3400ffa08ef79d2c5cc\n   Compiled from \"NewAttributeBands.java\"\n interface org.apache.commons.compress.harmony.unpack200.NewAttributeBands$AttributeLayoutElement\n   minor version: 0\n   major version: 52\n   flags: (0x0600) ACC_INTERFACE, ACC_ABSTRACT\n   this_class: #1                          // org/apache/commons/compress/harmony/unpack200/NewAttributeBands$AttributeLayoutElement\n-  super_class: #2                         // java/lang/Object\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 2, attributes: 2\n Constant pool:\n-   #1 = Class              #13            // org/apache/commons/compress/harmony/unpack200/NewAttributeBands$AttributeLayoutElement\n-   #2 = Class              #16            // java/lang/Object\n-   #3 = Utf8               addToAttribute\n-   #4 = Utf8               (ILorg/apache/commons/compress/harmony/unpack200/bytecode/NewAttribute;)V\n-   #5 = Utf8               readBands\n-   #6 = Utf8               (Ljava/io/InputStream;I)V\n-   #7 = Utf8               Exceptions\n-   #8 = Class              #17            // java/io/IOException\n-   #9 = Class              #18            // org/apache/commons/compress/harmony/pack200/Pack200Exception\n-  #10 = Utf8               SourceFile\n-  #11 = Utf8               NewAttributeBands.java\n-  #12 = Class              #19            // org/apache/commons/compress/harmony/unpack200/NewAttributeBands\n-  #13 = Utf8               org/apache/commons/compress/harmony/unpack200/NewAttributeBands$AttributeLayoutElement\n-  #14 = Utf8               AttributeLayoutElement\n-  #15 = Utf8               InnerClasses\n-  #16 = Utf8               java/lang/Object\n-  #17 = Utf8               java/io/IOException\n-  #18 = Utf8               org/apache/commons/compress/harmony/pack200/Pack200Exception\n-  #19 = Utf8               org/apache/commons/compress/harmony/unpack200/NewAttributeBands\n+   #1 = Class              #2             // org/apache/commons/compress/harmony/unpack200/NewAttributeBands$AttributeLayoutElement\n+   #2 = Utf8               org/apache/commons/compress/harmony/unpack200/NewAttributeBands$AttributeLayoutElement\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               addToAttribute\n+   #6 = Utf8               (ILorg/apache/commons/compress/harmony/unpack200/bytecode/NewAttribute;)V\n+   #7 = Utf8               readBands\n+   #8 = Utf8               (Ljava/io/InputStream;I)V\n+   #9 = Utf8               Exceptions\n+  #10 = Class              #11            // java/io/IOException\n+  #11 = Utf8               java/io/IOException\n+  #12 = Class              #13            // org/apache/commons/compress/harmony/pack200/Pack200Exception\n+  #13 = Utf8               org/apache/commons/compress/harmony/pack200/Pack200Exception\n+  #14 = Utf8               SourceFile\n+  #15 = Utf8               NewAttributeBands.java\n+  #16 = Utf8               InnerClasses\n+  #17 = Class              #18            // org/apache/commons/compress/harmony/unpack200/NewAttributeBands\n+  #18 = Utf8               org/apache/commons/compress/harmony/unpack200/NewAttributeBands\n+  #19 = Utf8               AttributeLayoutElement\n {\n   public abstract void addToAttribute(int, org.apache.commons.compress.harmony.unpack200.bytecode.NewAttribute);\n     descriptor: (ILorg/apache/commons/compress/harmony/unpack200/bytecode/NewAttribute;)V\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n \n   public abstract void readBands(java.io.InputStream, int) throws java.io.IOException, org.apache.commons.compress.harmony.pack200.Pack200Exception;\n     descriptor: (Ljava/io/InputStream;I)V\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.io.IOException, org.apache.commons.compress.harmony.pack200.Pack200Exception\n }\n SourceFile: \"NewAttributeBands.java\"\n InnerClasses:\n-  private static #14= #1 of #12;          // AttributeLayoutElement=class org/apache/commons/compress/harmony/unpack200/NewAttributeBands$AttributeLayoutElement of class org/apache/commons/compress/harmony/unpack200/NewAttributeBands\n+  private static #19= #1 of #17;          // AttributeLayoutElement=class org/apache/commons/compress/harmony/unpack200/NewAttributeBands$AttributeLayoutElement of class org/apache/commons/compress/harmony/unpack200/NewAttributeBands\n"}]}
