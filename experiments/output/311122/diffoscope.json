{"diffoscope-json-version": 1, "source1": "first/Coders$BCJDecoder.class", "source2": "second/Coders$BCJDecoder.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,136 +1,136 @@\n-  SHA-256 checksum c843a4015769e6e1296c4198482911a77d356b3f77492fe47e928f221e78b436\n+  SHA-256 checksum fefa02015da7727a733343c2dd300bd0aff576dcf1f357e095b3e4a51bff63dd\n   Compiled from \"Coders.java\"\n class org.apache.commons.compress.archivers.sevenz.Coders$BCJDecoder extends org.apache.commons.compress.archivers.sevenz.CoderBase\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n-  this_class: #19                         // org/apache/commons/compress/archivers/sevenz/Coders$BCJDecoder\n-  super_class: #20                        // org/apache/commons/compress/archivers/sevenz/CoderBase\n+  this_class: #10                         // org/apache/commons/compress/archivers/sevenz/Coders$BCJDecoder\n+  super_class: #4                         // org/apache/commons/compress/archivers/sevenz/CoderBase\n   interfaces: 0, fields: 1, methods: 3, attributes: 2\n Constant pool:\n-   #1 = Class              #35            // java/lang/Class\n-   #2 = Methodref          #20.#36        // org/apache/commons/compress/archivers/sevenz/CoderBase.\"<init>\":([Ljava/lang/Class;)V\n-   #3 = Fieldref           #19.#37        // org/apache/commons/compress/archivers/sevenz/Coders$BCJDecoder.opts:Lorg/tukaani/xz/FilterOptions;\n-   #4 = Methodref          #38.#39        // org/tukaani/xz/FilterOptions.getInputStream:(Ljava/io/InputStream;)Ljava/io/InputStream;\n-   #5 = Class              #40            // java/lang/AssertionError\n-   #6 = Class              #41            // java/io/IOException\n-   #7 = Class              #42            // java/lang/StringBuilder\n-   #8 = Methodref          #7.#43         // java/lang/StringBuilder.\"<init>\":()V\n-   #9 = String             #44            // BCJ filter used in\n-  #10 = Methodref          #7.#45         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #11 = String             #46            //  needs XZ for Java > 1.4 - see https://commons.apache.org/proper/commons-compress/limitations.html#7Z\n-  #12 = Methodref          #7.#47         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #13 = Methodref          #6.#48         // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #14 = Class              #49            // org/apache/commons/compress/utils/FlushShieldFilterOutputStream\n-  #15 = Class              #50            // org/tukaani/xz/FinishableWrapperOutputStream\n-  #16 = Methodref          #15.#51        // org/tukaani/xz/FinishableWrapperOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-  #17 = Methodref          #38.#52        // org/tukaani/xz/FilterOptions.getOutputStream:(Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;\n-  #18 = Methodref          #14.#51        // org/apache/commons/compress/utils/FlushShieldFilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-  #19 = Class              #54            // org/apache/commons/compress/archivers/sevenz/Coders$BCJDecoder\n-  #20 = Class              #57            // org/apache/commons/compress/archivers/sevenz/CoderBase\n-  #21 = Utf8               opts\n-  #22 = Utf8               Lorg/tukaani/xz/FilterOptions;\n-  #23 = Utf8               <init>\n-  #24 = Utf8               (Lorg/tukaani/xz/FilterOptions;)V\n-  #25 = Utf8               Code\n-  #26 = Utf8               LineNumberTable\n-  #27 = Utf8               decode\n-  #28 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;JLorg/apache/commons/compress/archivers/sevenz/Coder;[BI)Ljava/io/InputStream;\n-  #29 = Utf8               StackMapTable\n-  #30 = Utf8               Exceptions\n-  #31 = Utf8               encode\n-  #32 = Utf8               (Ljava/io/OutputStream;Ljava/lang/Object;)Ljava/io/OutputStream;\n-  #33 = Utf8               SourceFile\n-  #34 = Utf8               Coders.java\n-  #35 = Utf8               java/lang/Class\n-  #36 = NameAndType        #23:#58        // \"<init>\":([Ljava/lang/Class;)V\n-  #37 = NameAndType        #21:#22        // opts:Lorg/tukaani/xz/FilterOptions;\n-  #38 = Class              #59            // org/tukaani/xz/FilterOptions\n-  #39 = NameAndType        #60:#61        // getInputStream:(Ljava/io/InputStream;)Ljava/io/InputStream;\n-  #40 = Utf8               java/lang/AssertionError\n-  #41 = Utf8               java/io/IOException\n-  #42 = Utf8               java/lang/StringBuilder\n-  #43 = NameAndType        #23:#62        // \"<init>\":()V\n-  #44 = Utf8               BCJ filter used in\n-  #45 = NameAndType        #63:#64        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #46 = Utf8                needs XZ for Java > 1.4 - see https://commons.apache.org/proper/commons-compress/limitations.html#7Z\n-  #47 = NameAndType        #65:#66        // toString:()Ljava/lang/String;\n-  #48 = NameAndType        #23:#67        // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #49 = Utf8               org/apache/commons/compress/utils/FlushShieldFilterOutputStream\n-  #50 = Utf8               org/tukaani/xz/FinishableWrapperOutputStream\n-  #51 = NameAndType        #23:#68        // \"<init>\":(Ljava/io/OutputStream;)V\n-  #52 = NameAndType        #69:#70        // getOutputStream:(Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;\n-  #53 = Class              #71            // org/apache/commons/compress/archivers/sevenz/Coders\n-  #54 = Utf8               org/apache/commons/compress/archivers/sevenz/Coders$BCJDecoder\n-  #55 = Utf8               BCJDecoder\n-  #56 = Utf8               InnerClasses\n-  #57 = Utf8               org/apache/commons/compress/archivers/sevenz/CoderBase\n-  #58 = Utf8               ([Ljava/lang/Class;)V\n-  #59 = Utf8               org/tukaani/xz/FilterOptions\n-  #60 = Utf8               getInputStream\n-  #61 = Utf8               (Ljava/io/InputStream;)Ljava/io/InputStream;\n-  #62 = Utf8               ()V\n-  #63 = Utf8               append\n-  #64 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #65 = Utf8               toString\n-  #66 = Utf8               ()Ljava/lang/String;\n-  #67 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #68 = Utf8               (Ljava/io/OutputStream;)V\n-  #69 = Utf8               getOutputStream\n-  #70 = Utf8               (Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;\n-  #71 = Utf8               org/apache/commons/compress/archivers/sevenz/Coders\n+   #1 = Class              #2             // java/lang/Class\n+   #2 = Utf8               java/lang/Class\n+   #3 = Methodref          #4.#5          // org/apache/commons/compress/archivers/sevenz/CoderBase.\"<init>\":([Ljava/lang/Class;)V\n+   #4 = Class              #6             // org/apache/commons/compress/archivers/sevenz/CoderBase\n+   #5 = NameAndType        #7:#8          // \"<init>\":([Ljava/lang/Class;)V\n+   #6 = Utf8               org/apache/commons/compress/archivers/sevenz/CoderBase\n+   #7 = Utf8               <init>\n+   #8 = Utf8               ([Ljava/lang/Class;)V\n+   #9 = Fieldref           #10.#11        // org/apache/commons/compress/archivers/sevenz/Coders$BCJDecoder.opts:Lorg/tukaani/xz/FilterOptions;\n+  #10 = Class              #12            // org/apache/commons/compress/archivers/sevenz/Coders$BCJDecoder\n+  #11 = NameAndType        #13:#14        // opts:Lorg/tukaani/xz/FilterOptions;\n+  #12 = Utf8               org/apache/commons/compress/archivers/sevenz/Coders$BCJDecoder\n+  #13 = Utf8               opts\n+  #14 = Utf8               Lorg/tukaani/xz/FilterOptions;\n+  #15 = Methodref          #16.#17        // org/tukaani/xz/FilterOptions.getInputStream:(Ljava/io/InputStream;)Ljava/io/InputStream;\n+  #16 = Class              #18            // org/tukaani/xz/FilterOptions\n+  #17 = NameAndType        #19:#20        // getInputStream:(Ljava/io/InputStream;)Ljava/io/InputStream;\n+  #18 = Utf8               org/tukaani/xz/FilterOptions\n+  #19 = Utf8               getInputStream\n+  #20 = Utf8               (Ljava/io/InputStream;)Ljava/io/InputStream;\n+  #21 = Class              #22            // java/lang/AssertionError\n+  #22 = Utf8               java/lang/AssertionError\n+  #23 = Class              #24            // java/io/IOException\n+  #24 = Utf8               java/io/IOException\n+  #25 = Class              #26            // java/lang/StringBuilder\n+  #26 = Utf8               java/lang/StringBuilder\n+  #27 = Methodref          #25.#28        // java/lang/StringBuilder.\"<init>\":()V\n+  #28 = NameAndType        #7:#29         // \"<init>\":()V\n+  #29 = Utf8               ()V\n+  #30 = String             #31            // BCJ filter used in\n+  #31 = Utf8               BCJ filter used in\n+  #32 = Methodref          #25.#33        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #33 = NameAndType        #34:#35        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #34 = Utf8               append\n+  #35 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #36 = String             #37            //  needs XZ for Java > 1.4 - see https://commons.apache.org/proper/commons-compress/limitations.html#7Z\n+  #37 = Utf8                needs XZ for Java > 1.4 - see https://commons.apache.org/proper/commons-compress/limitations.html#7Z\n+  #38 = Methodref          #25.#39        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #39 = NameAndType        #40:#41        // toString:()Ljava/lang/String;\n+  #40 = Utf8               toString\n+  #41 = Utf8               ()Ljava/lang/String;\n+  #42 = Methodref          #23.#43        // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #43 = NameAndType        #7:#44         // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #44 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #45 = Class              #46            // org/apache/commons/compress/utils/FlushShieldFilterOutputStream\n+  #46 = Utf8               org/apache/commons/compress/utils/FlushShieldFilterOutputStream\n+  #47 = Class              #48            // org/tukaani/xz/FinishableWrapperOutputStream\n+  #48 = Utf8               org/tukaani/xz/FinishableWrapperOutputStream\n+  #49 = Methodref          #47.#50        // org/tukaani/xz/FinishableWrapperOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #50 = NameAndType        #7:#51         // \"<init>\":(Ljava/io/OutputStream;)V\n+  #51 = Utf8               (Ljava/io/OutputStream;)V\n+  #52 = Methodref          #16.#53        // org/tukaani/xz/FilterOptions.getOutputStream:(Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;\n+  #53 = NameAndType        #54:#55        // getOutputStream:(Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;\n+  #54 = Utf8               getOutputStream\n+  #55 = Utf8               (Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;\n+  #56 = Methodref          #45.#50        // org/apache/commons/compress/utils/FlushShieldFilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #57 = Utf8               (Lorg/tukaani/xz/FilterOptions;)V\n+  #58 = Utf8               Code\n+  #59 = Utf8               LineNumberTable\n+  #60 = Utf8               decode\n+  #61 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;JLorg/apache/commons/compress/archivers/sevenz/Coder;[BI)Ljava/io/InputStream;\n+  #62 = Utf8               StackMapTable\n+  #63 = Utf8               Exceptions\n+  #64 = Utf8               encode\n+  #65 = Utf8               (Ljava/io/OutputStream;Ljava/lang/Object;)Ljava/io/OutputStream;\n+  #66 = Utf8               SourceFile\n+  #67 = Utf8               Coders.java\n+  #68 = Utf8               InnerClasses\n+  #69 = Class              #70            // org/apache/commons/compress/archivers/sevenz/Coders\n+  #70 = Utf8               org/apache/commons/compress/archivers/sevenz/Coders\n+  #71 = Utf8               BCJDecoder\n {\n   private final org.tukaani.xz.FilterOptions opts;\n     descriptor: Lorg/tukaani/xz/FilterOptions;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   org.apache.commons.compress.archivers.sevenz.Coders$BCJDecoder(org.tukaani.xz.FilterOptions);\n     descriptor: (Lorg/tukaani/xz/FilterOptions;)V\n     flags: (0x0000)\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iconst_0\n          2: anewarray     #1                  // class java/lang/Class\n-         5: invokespecial #2                  // Method org/apache/commons/compress/archivers/sevenz/CoderBase.\"<init>\":([Ljava/lang/Class;)V\n+         5: invokespecial #3                  // Method org/apache/commons/compress/archivers/sevenz/CoderBase.\"<init>\":([Ljava/lang/Class;)V\n          8: aload_0\n          9: aload_1\n-        10: putfield      #3                  // Field opts:Lorg/tukaani/xz/FilterOptions;\n+        10: putfield      #9                  // Field opts:Lorg/tukaani/xz/FilterOptions;\n         13: return\n       LineNumberTable:\n         line 107: 0\n         line 108: 8\n         line 109: 13\n \n   java.io.InputStream decode(java.lang.String, java.io.InputStream, long, org.apache.commons.compress.archivers.sevenz.Coder, byte[], int) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/io/InputStream;JLorg/apache/commons/compress/archivers/sevenz/Coder;[BI)Ljava/io/InputStream;\n     flags: (0x0000)\n     Code:\n       stack=4, locals=9, args_size=7\n          0: aload_0\n-         1: getfield      #3                  // Field opts:Lorg/tukaani/xz/FilterOptions;\n+         1: getfield      #9                  // Field opts:Lorg/tukaani/xz/FilterOptions;\n          4: aload_2\n-         5: invokevirtual #4                  // Method org/tukaani/xz/FilterOptions.getInputStream:(Ljava/io/InputStream;)Ljava/io/InputStream;\n+         5: invokevirtual #15                 // Method org/tukaani/xz/FilterOptions.getInputStream:(Ljava/io/InputStream;)Ljava/io/InputStream;\n          8: areturn\n          9: astore        8\n-        11: new           #6                  // class java/io/IOException\n+        11: new           #23                 // class java/io/IOException\n         14: dup\n-        15: new           #7                  // class java/lang/StringBuilder\n+        15: new           #25                 // class java/lang/StringBuilder\n         18: dup\n-        19: invokespecial #8                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        22: ldc           #9                  // String BCJ filter used in\n-        24: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        19: invokespecial #27                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        22: ldc           #30                 // String BCJ filter used in\n+        24: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         27: aload_1\n-        28: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        31: ldc           #11                 // String  needs XZ for Java > 1.4 - see https://commons.apache.org/proper/commons-compress/limitations.html#7Z\n-        33: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        36: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        28: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        31: ldc           #36                 // String  needs XZ for Java > 1.4 - see https://commons.apache.org/proper/commons-compress/limitations.html#7Z\n+        33: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        36: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         39: aload         8\n-        41: invokespecial #13                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        41: invokespecial #42                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         44: athrow\n       Exception table:\n          from    to  target type\n              0     8     9   Class java/lang/AssertionError\n       LineNumberTable:\n         line 115: 0\n         line 116: 9\n@@ -142,24 +142,24 @@\n       throws java.io.IOException\n \n   java.io.OutputStream encode(java.io.OutputStream, java.lang.Object);\n     descriptor: (Ljava/io/OutputStream;Ljava/lang/Object;)Ljava/io/OutputStream;\n     flags: (0x0000)\n     Code:\n       stack=6, locals=3, args_size=3\n-         0: new           #14                 // class org/apache/commons/compress/utils/FlushShieldFilterOutputStream\n+         0: new           #45                 // class org/apache/commons/compress/utils/FlushShieldFilterOutputStream\n          3: dup\n          4: aload_0\n-         5: getfield      #3                  // Field opts:Lorg/tukaani/xz/FilterOptions;\n-         8: new           #15                 // class org/tukaani/xz/FinishableWrapperOutputStream\n+         5: getfield      #9                  // Field opts:Lorg/tukaani/xz/FilterOptions;\n+         8: new           #47                 // class org/tukaani/xz/FinishableWrapperOutputStream\n         11: dup\n         12: aload_1\n-        13: invokespecial #16                 // Method org/tukaani/xz/FinishableWrapperOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-        16: invokevirtual #17                 // Method org/tukaani/xz/FilterOptions.getOutputStream:(Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;\n-        19: invokespecial #18                 // Method org/apache/commons/compress/utils/FlushShieldFilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+        13: invokespecial #49                 // Method org/tukaani/xz/FinishableWrapperOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+        16: invokevirtual #52                 // Method org/tukaani/xz/FilterOptions.getOutputStream:(Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;\n+        19: invokespecial #56                 // Method org/apache/commons/compress/utils/FlushShieldFilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n         22: areturn\n       LineNumberTable:\n         line 127: 0\n }\n SourceFile: \"Coders.java\"\n InnerClasses:\n-  static #55= #19 of #53;                 // BCJDecoder=class org/apache/commons/compress/archivers/sevenz/Coders$BCJDecoder of class org/apache/commons/compress/archivers/sevenz/Coders\n+  static #71= #10 of #69;                 // BCJDecoder=class org/apache/commons/compress/archivers/sevenz/Coders$BCJDecoder of class org/apache/commons/compress/archivers/sevenz/Coders\n"}]}
