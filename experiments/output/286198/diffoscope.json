{"diffoscope-json-version": 1, "source1": "first/HuffmanDecoder$UncompressedState.class", "source2": "second/HuffmanDecoder$UncompressedState.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,127 +1,126 @@\n-  SHA-256 checksum 8cece25403f01344cafee1e054177be3838a35199f43b0a2317a5ac5cf8ff44c\n+  SHA-256 checksum 57cf9b54f386c57cfe1eaf29ab2cfc3ba3fd38fe62964ee1bbf92e928a1c85ab\n   Compiled from \"HuffmanDecoder.java\"\n class org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$UncompressedState extends org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$DecoderState\n   minor version: 0\n   major version: 51\n   flags: (0x0020) ACC_SUPER\n   this_class: #24                         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$UncompressedState\n   super_class: #25                        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState\n   interfaces: 0, fields: 3, methods: 6, attributes: 2\n Constant pool:\n     #1 = Methodref          #24.#51       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$UncompressedState.\"<init>\":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;J)V\n     #2 = Fieldref           #24.#52       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$UncompressedState.this$0:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n     #3 = Methodref          #25.#53       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState.\"<init>\":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;)V\n     #4 = Fieldref           #24.#54       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$UncompressedState.blockLength:J\n     #5 = Fieldref           #24.#55       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$UncompressedState.read:J\n-    #6 = Fieldref           #56.#57       // org/apache/commons/compress/compressors/deflate64/HuffmanState.STORED:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n-    #7 = Fieldref           #56.#58       // org/apache/commons/compress/compressors/deflate64/HuffmanState.INITIAL:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n-    #8 = Methodref          #59.#60       // java/lang/Math.min:(JJ)J\n-    #9 = Methodref          #61.#62       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$400:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/utils/BitInputStream;\n-   #10 = Methodref          #63.#64       // org/apache/commons/compress/utils/BitInputStream.bitsCached:()I\n-   #11 = Class              #65           // java/lang/Byte\n-   #12 = Methodref          #61.#66       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$500:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;I)J\n-   #13 = Methodref          #61.#67       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$600:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n-   #14 = Methodref          #68.#69       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.add:(B)B\n-   #15 = Methodref          #61.#70       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$700:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Ljava/io/InputStream;\n-   #16 = Methodref          #71.#72       // java/io/InputStream.read:([BII)I\n-   #17 = Class              #73           // java/io/EOFException\n-   #18 = String             #74           // Truncated Deflate64 Stream\n-   #19 = Methodref          #17.#75       // java/io/EOFException.\"<init>\":(Ljava/lang/String;)V\n-   #20 = Methodref          #68.#76       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.add:([BII)V\n-   #21 = Methodref          #63.#77       // org/apache/commons/compress/utils/BitInputStream.bitsAvailable:()J\n+    #6 = Fieldref           #38.#56       // org/apache/commons/compress/compressors/deflate64/HuffmanState.STORED:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n+    #7 = Fieldref           #38.#57       // org/apache/commons/compress/compressors/deflate64/HuffmanState.INITIAL:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n+    #8 = Methodref          #58.#59       // java/lang/Math.min:(JJ)J\n+    #9 = Methodref          #60.#61       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$400:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/utils/BitInputStream;\n+   #10 = Methodref          #62.#63       // org/apache/commons/compress/utils/BitInputStream.bitsCached:()I\n+   #11 = Class              #64           // java/lang/Byte\n+   #12 = Methodref          #60.#65       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$500:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;I)J\n+   #13 = Methodref          #60.#66       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$600:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n+   #14 = Methodref          #67.#68       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.add:(B)B\n+   #15 = Methodref          #60.#69       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$700:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Ljava/io/InputStream;\n+   #16 = Methodref          #70.#71       // java/io/InputStream.read:([BII)I\n+   #17 = Class              #72           // java/io/EOFException\n+   #18 = String             #73           // Truncated Deflate64 Stream\n+   #19 = Methodref          #17.#74       // java/io/EOFException.\"<init>\":(Ljava/lang/String;)V\n+   #20 = Methodref          #67.#75       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.add:([BII)V\n+   #21 = Methodref          #62.#76       // org/apache/commons/compress/utils/BitInputStream.bitsAvailable:()J\n    #22 = Long               8l\n-   #24 = Class              #78           // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$UncompressedState\n-   #25 = Class              #80           // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState\n+   #24 = Class              #77           // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$UncompressedState\n+   #25 = Class              #79           // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState\n    #26 = Utf8               blockLength\n    #27 = Utf8               J\n    #28 = Utf8               read\n    #29 = Utf8               this$0\n    #30 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n    #31 = Utf8               <init>\n    #32 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;J)V\n    #33 = Utf8               Code\n    #34 = Utf8               LineNumberTable\n    #35 = Utf8               state\n    #36 = Utf8               ()Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n    #37 = Utf8               StackMapTable\n-   #38 = Class              #82           // org/apache/commons/compress/compressors/deflate64/HuffmanState\n+   #38 = Class              #81           // org/apache/commons/compress/compressors/deflate64/HuffmanState\n    #39 = Utf8               ([BII)I\n    #40 = Utf8               Exceptions\n-   #41 = Class              #83           // java/io/IOException\n+   #41 = Class              #82           // java/io/IOException\n    #42 = Utf8               hasData\n    #43 = Utf8               ()Z\n    #44 = Utf8               available\n    #45 = Utf8               ()I\n-   #46 = Class              #84           // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n+   #46 = Class              #83           // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n    #47 = Utf8               InnerClasses\n    #48 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;JLorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;)V\n    #49 = Utf8               SourceFile\n    #50 = Utf8               HuffmanDecoder.java\n    #51 = NameAndType        #31:#32       // \"<init>\":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;J)V\n    #52 = NameAndType        #29:#30       // this$0:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n-   #53 = NameAndType        #31:#85       // \"<init>\":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;)V\n+   #53 = NameAndType        #31:#84       // \"<init>\":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;)V\n    #54 = NameAndType        #26:#27       // blockLength:J\n    #55 = NameAndType        #28:#27       // read:J\n-   #56 = Class              #82           // org/apache/commons/compress/compressors/deflate64/HuffmanState\n-   #57 = NameAndType        #86:#87       // STORED:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n-   #58 = NameAndType        #88:#87       // INITIAL:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n-   #59 = Class              #89           // java/lang/Math\n-   #60 = NameAndType        #90:#91       // min:(JJ)J\n-   #61 = Class              #92           // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-   #62 = NameAndType        #93:#94       // access$400:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/utils/BitInputStream;\n-   #63 = Class              #95           // org/apache/commons/compress/utils/BitInputStream\n-   #64 = NameAndType        #96:#45       // bitsCached:()I\n-   #65 = Utf8               java/lang/Byte\n-   #66 = NameAndType        #97:#98       // access$500:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;I)J\n-   #67 = NameAndType        #99:#101      // access$600:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n-   #68 = Class              #102          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory\n-   #69 = NameAndType        #103:#104     // add:(B)B\n-   #70 = NameAndType        #105:#106     // access$700:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Ljava/io/InputStream;\n-   #71 = Class              #107          // java/io/InputStream\n-   #72 = NameAndType        #28:#39       // read:([BII)I\n-   #73 = Utf8               java/io/EOFException\n-   #74 = Utf8               Truncated Deflate64 Stream\n-   #75 = NameAndType        #31:#108      // \"<init>\":(Ljava/lang/String;)V\n-   #76 = NameAndType        #103:#109     // add:([BII)V\n-   #77 = NameAndType        #110:#111     // bitsAvailable:()J\n-   #78 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$UncompressedState\n-   #79 = Utf8               UncompressedState\n-   #80 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState\n-   #81 = Utf8               DecoderState\n-   #82 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanState\n-   #83 = Utf8               java/io/IOException\n-   #84 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n-   #85 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;)V\n-   #86 = Utf8               STORED\n-   #87 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n-   #88 = Utf8               INITIAL\n-   #89 = Utf8               java/lang/Math\n-   #90 = Utf8               min\n-   #91 = Utf8               (JJ)J\n-   #92 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-   #93 = Utf8               access$400\n-   #94 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/utils/BitInputStream;\n-   #95 = Utf8               org/apache/commons/compress/utils/BitInputStream\n-   #96 = Utf8               bitsCached\n-   #97 = Utf8               access$500\n-   #98 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;I)J\n-   #99 = Utf8               access$600\n-  #100 = Utf8               DecodingMemory\n-  #101 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n-  #102 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory\n-  #103 = Utf8               add\n-  #104 = Utf8               (B)B\n-  #105 = Utf8               access$700\n-  #106 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Ljava/io/InputStream;\n-  #107 = Utf8               java/io/InputStream\n-  #108 = Utf8               (Ljava/lang/String;)V\n-  #109 = Utf8               ([BII)V\n-  #110 = Utf8               bitsAvailable\n-  #111 = Utf8               ()J\n+   #56 = NameAndType        #85:#86       // STORED:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n+   #57 = NameAndType        #87:#86       // INITIAL:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n+   #58 = Class              #88           // java/lang/Math\n+   #59 = NameAndType        #89:#90       // min:(JJ)J\n+   #60 = Class              #91           // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+   #61 = NameAndType        #92:#93       // access$400:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/utils/BitInputStream;\n+   #62 = Class              #94           // org/apache/commons/compress/utils/BitInputStream\n+   #63 = NameAndType        #95:#45       // bitsCached:()I\n+   #64 = Utf8               java/lang/Byte\n+   #65 = NameAndType        #96:#97       // access$500:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;I)J\n+   #66 = NameAndType        #98:#100      // access$600:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n+   #67 = Class              #101          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory\n+   #68 = NameAndType        #102:#103     // add:(B)B\n+   #69 = NameAndType        #104:#105     // access$700:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Ljava/io/InputStream;\n+   #70 = Class              #106          // java/io/InputStream\n+   #71 = NameAndType        #28:#39       // read:([BII)I\n+   #72 = Utf8               java/io/EOFException\n+   #73 = Utf8               Truncated Deflate64 Stream\n+   #74 = NameAndType        #31:#107      // \"<init>\":(Ljava/lang/String;)V\n+   #75 = NameAndType        #102:#108     // add:([BII)V\n+   #76 = NameAndType        #109:#110     // bitsAvailable:()J\n+   #77 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$UncompressedState\n+   #78 = Utf8               UncompressedState\n+   #79 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState\n+   #80 = Utf8               DecoderState\n+   #81 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanState\n+   #82 = Utf8               java/io/IOException\n+   #83 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n+   #84 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;)V\n+   #85 = Utf8               STORED\n+   #86 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n+   #87 = Utf8               INITIAL\n+   #88 = Utf8               java/lang/Math\n+   #89 = Utf8               min\n+   #90 = Utf8               (JJ)J\n+   #91 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+   #92 = Utf8               access$400\n+   #93 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/utils/BitInputStream;\n+   #94 = Utf8               org/apache/commons/compress/utils/BitInputStream\n+   #95 = Utf8               bitsCached\n+   #96 = Utf8               access$500\n+   #97 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;I)J\n+   #98 = Utf8               access$600\n+   #99 = Utf8               DecodingMemory\n+  #100 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n+  #101 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory\n+  #102 = Utf8               add\n+  #103 = Utf8               (B)B\n+  #104 = Utf8               access$700\n+  #105 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Ljava/io/InputStream;\n+  #106 = Utf8               java/io/InputStream\n+  #107 = Utf8               (Ljava/lang/String;)V\n+  #108 = Utf8               ([BII)V\n+  #109 = Utf8               bitsAvailable\n+  #110 = Utf8               ()J\n {\n   private final long blockLength;\n     descriptor: J\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private long read;\n     descriptor: J\n@@ -350,10 +349,10 @@\n          6: return\n       LineNumberTable:\n         line 195: 0\n }\n SourceFile: \"HuffmanDecoder.java\"\n InnerClasses:\n   static #46;                             // class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n-  private #79= #24 of #61;                // UncompressedState=class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$UncompressedState of class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-  private static abstract #81= #25 of #61; // DecoderState=class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState of class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-  private static #100= #68 of #61;        // DecodingMemory=class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory of class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+  private #78= #24 of #60;                // UncompressedState=class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$UncompressedState of class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+  private static abstract #80= #25 of #60; // DecoderState=class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState of class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+  private static #99= #67 of #60;         // DecodingMemory=class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory of class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n"}]}
