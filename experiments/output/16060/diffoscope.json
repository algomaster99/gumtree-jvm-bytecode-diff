{"diffoscope-json-version": 1, "source1": "first/SimplifyBooleanExpressionCheck.class", "source2": "second/SimplifyBooleanExpressionCheck.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,82 +1,82 @@\n-  SHA-256 checksum 9b341bc34bab359633f98d4a0d6f8eb486bbec9352d615a420aecc5410738638\n+  SHA-256 checksum e8384f1705b1c2b03ab32e315575f032b640abdad38b0cc1c57beeef4acb0ec9\n   Compiled from \"SimplifyBooleanExpressionCheck.java\"\n public class com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanExpressionCheck extends com.puppycrawl.tools.checkstyle.api.AbstractCheck\n   minor version: 0\n   major version: 55\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #6                          // com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanExpressionCheck\n-  super_class: #13                        // com/puppycrawl/tools/checkstyle/api/AbstractCheck\n+  this_class: #8                          // com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanExpressionCheck\n+  super_class: #2                         // com/puppycrawl/tools/checkstyle/api/AbstractCheck\n   interfaces: 0, fields: 1, methods: 5, attributes: 2\n Constant pool:\n-   #1 = Methodref          #13.#40        // com/puppycrawl/tools/checkstyle/api/AbstractCheck.\"<init>\":()V\n-   #2 = Methodref          #6.#41         // com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanExpressionCheck.getRequiredTokens:()[I\n-   #3 = Class              #42            // com/puppycrawl/tools/checkstyle/api/TokenTypes\n-   #4 = InterfaceMethodref #35.#43        // com/puppycrawl/tools/checkstyle/api/DetailAST.getParent:()Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n-   #5 = InterfaceMethodref #35.#44        // com/puppycrawl/tools/checkstyle/api/DetailAST.getType:()I\n-   #6 = Class              #45            // com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanExpressionCheck\n-   #7 = String             #46            // simplify.expression\n-   #8 = Class              #47            // java/lang/Object\n-   #9 = Methodref          #6.#48         // com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanExpressionCheck.log:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n-  #10 = InterfaceMethodref #35.#49        // com/puppycrawl/tools/checkstyle/api/DetailAST.getNextSibling:()Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n-  #11 = InterfaceMethodref #35.#50        // com/puppycrawl/tools/checkstyle/api/DetailAST.getFirstChild:()Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n-  #12 = Methodref          #51.#52        // com/puppycrawl/tools/checkstyle/utils/TokenUtil.isBooleanLiteralType:(I)Z\n-  #13 = Class              #53            // com/puppycrawl/tools/checkstyle/api/AbstractCheck\n-  #14 = Utf8               MSG_KEY\n-  #15 = Utf8               Ljava/lang/String;\n-  #16 = Utf8               ConstantValue\n-  #17 = Utf8               <init>\n-  #18 = Utf8               ()V\n-  #19 = Utf8               Code\n-  #20 = Utf8               LineNumberTable\n-  #21 = Utf8               LocalVariableTable\n-  #22 = Utf8               this\n-  #23 = Utf8               Lcom/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanExpressionCheck;\n-  #24 = Utf8               getDefaultTokens\n-  #25 = Utf8               ()[I\n-  #26 = Utf8               getAcceptableTokens\n-  #27 = Utf8               getRequiredTokens\n-  #28 = Utf8               visitToken\n-  #29 = Utf8               (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n-  #30 = Utf8               nextSibling\n-  #31 = Utf8               Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n-  #32 = Utf8               ast\n-  #33 = Utf8               parent\n-  #34 = Utf8               StackMapTable\n-  #35 = Class              #54            // com/puppycrawl/tools/checkstyle/api/DetailAST\n-  #36 = Utf8               SourceFile\n-  #37 = Utf8               SimplifyBooleanExpressionCheck.java\n-  #38 = Utf8               RuntimeVisibleAnnotations\n-  #39 = Utf8               Lcom/puppycrawl/tools/checkstyle/StatelessCheck;\n-  #40 = NameAndType        #17:#18        // \"<init>\":()V\n-  #41 = NameAndType        #27:#25        // getRequiredTokens:()[I\n-  #42 = Utf8               com/puppycrawl/tools/checkstyle/api/TokenTypes\n-  #43 = NameAndType        #55:#56        // getParent:()Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n-  #44 = NameAndType        #57:#58        // getType:()I\n-  #45 = Utf8               com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanExpressionCheck\n-  #46 = Utf8               simplify.expression\n-  #47 = Utf8               java/lang/Object\n-  #48 = NameAndType        #59:#60        // log:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n-  #49 = NameAndType        #61:#56        // getNextSibling:()Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n-  #50 = NameAndType        #62:#56        // getFirstChild:()Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n-  #51 = Class              #63            // com/puppycrawl/tools/checkstyle/utils/TokenUtil\n-  #52 = NameAndType        #64:#65        // isBooleanLiteralType:(I)Z\n-  #53 = Utf8               com/puppycrawl/tools/checkstyle/api/AbstractCheck\n-  #54 = Utf8               com/puppycrawl/tools/checkstyle/api/DetailAST\n-  #55 = Utf8               getParent\n-  #56 = Utf8               ()Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n-  #57 = Utf8               getType\n-  #58 = Utf8               ()I\n-  #59 = Utf8               log\n-  #60 = Utf8               (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n-  #61 = Utf8               getNextSibling\n-  #62 = Utf8               getFirstChild\n-  #63 = Utf8               com/puppycrawl/tools/checkstyle/utils/TokenUtil\n-  #64 = Utf8               isBooleanLiteralType\n-  #65 = Utf8               (I)Z\n+   #1 = Methodref          #2.#3          // com/puppycrawl/tools/checkstyle/api/AbstractCheck.\"<init>\":()V\n+   #2 = Class              #4             // com/puppycrawl/tools/checkstyle/api/AbstractCheck\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               com/puppycrawl/tools/checkstyle/api/AbstractCheck\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Methodref          #8.#9          // com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanExpressionCheck.getRequiredTokens:()[I\n+   #8 = Class              #10            // com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanExpressionCheck\n+   #9 = NameAndType        #11:#12        // getRequiredTokens:()[I\n+  #10 = Utf8               com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanExpressionCheck\n+  #11 = Utf8               getRequiredTokens\n+  #12 = Utf8               ()[I\n+  #13 = Class              #14            // com/puppycrawl/tools/checkstyle/api/TokenTypes\n+  #14 = Utf8               com/puppycrawl/tools/checkstyle/api/TokenTypes\n+  #15 = InterfaceMethodref #16.#17        // com/puppycrawl/tools/checkstyle/api/DetailAST.getParent:()Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+  #16 = Class              #18            // com/puppycrawl/tools/checkstyle/api/DetailAST\n+  #17 = NameAndType        #19:#20        // getParent:()Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+  #18 = Utf8               com/puppycrawl/tools/checkstyle/api/DetailAST\n+  #19 = Utf8               getParent\n+  #20 = Utf8               ()Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+  #21 = InterfaceMethodref #16.#22        // com/puppycrawl/tools/checkstyle/api/DetailAST.getType:()I\n+  #22 = NameAndType        #23:#24        // getType:()I\n+  #23 = Utf8               getType\n+  #24 = Utf8               ()I\n+  #25 = String             #26            // simplify.expression\n+  #26 = Utf8               simplify.expression\n+  #27 = Class              #28            // java/lang/Object\n+  #28 = Utf8               java/lang/Object\n+  #29 = Methodref          #8.#30         // com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanExpressionCheck.log:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n+  #30 = NameAndType        #31:#32        // log:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n+  #31 = Utf8               log\n+  #32 = Utf8               (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n+  #33 = InterfaceMethodref #16.#34        // com/puppycrawl/tools/checkstyle/api/DetailAST.getNextSibling:()Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+  #34 = NameAndType        #35:#20        // getNextSibling:()Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+  #35 = Utf8               getNextSibling\n+  #36 = InterfaceMethodref #16.#37        // com/puppycrawl/tools/checkstyle/api/DetailAST.getFirstChild:()Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+  #37 = NameAndType        #38:#20        // getFirstChild:()Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+  #38 = Utf8               getFirstChild\n+  #39 = Methodref          #40.#41        // com/puppycrawl/tools/checkstyle/utils/TokenUtil.isBooleanLiteralType:(I)Z\n+  #40 = Class              #42            // com/puppycrawl/tools/checkstyle/utils/TokenUtil\n+  #41 = NameAndType        #43:#44        // isBooleanLiteralType:(I)Z\n+  #42 = Utf8               com/puppycrawl/tools/checkstyle/utils/TokenUtil\n+  #43 = Utf8               isBooleanLiteralType\n+  #44 = Utf8               (I)Z\n+  #45 = Utf8               MSG_KEY\n+  #46 = Utf8               Ljava/lang/String;\n+  #47 = Utf8               ConstantValue\n+  #48 = Utf8               Code\n+  #49 = Utf8               LineNumberTable\n+  #50 = Utf8               LocalVariableTable\n+  #51 = Utf8               this\n+  #52 = Utf8               Lcom/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanExpressionCheck;\n+  #53 = Utf8               getDefaultTokens\n+  #54 = Utf8               getAcceptableTokens\n+  #55 = Utf8               visitToken\n+  #56 = Utf8               (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n+  #57 = Utf8               nextSibling\n+  #58 = Utf8               Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+  #59 = Utf8               ast\n+  #60 = Utf8               parent\n+  #61 = Utf8               StackMapTable\n+  #62 = Utf8               SourceFile\n+  #63 = Utf8               SimplifyBooleanExpressionCheck.java\n+  #64 = Utf8               RuntimeVisibleAnnotations\n+  #65 = Utf8               Lcom/puppycrawl/tools/checkstyle/StatelessCheck;\n {\n   public static final java.lang.String MSG_KEY = \"simplify.expression\";\n     descriptor: Ljava/lang/String;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: String simplify.expression\n \n   public com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanExpressionCheck();\n@@ -95,29 +95,29 @@\n \n   public int[] getDefaultTokens();\n     descriptor: ()[I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #2                  // Method getRequiredTokens:()[I\n+         1: invokevirtual #7                  // Method getRequiredTokens:()[I\n          4: areturn\n       LineNumberTable:\n         line 97: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lcom/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanExpressionCheck;\n \n   public int[] getAcceptableTokens();\n     descriptor: ()[I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #2                  // Method getRequiredTokens:()[I\n+         1: invokevirtual #7                  // Method getRequiredTokens:()[I\n          4: areturn\n       LineNumberTable:\n         line 102: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lcom/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanExpressionCheck;\n \n@@ -145,58 +145,58 @@\n \n   public void visitToken(com.puppycrawl.tools.checkstyle.api.DetailAST);\n     descriptor: (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=2\n          0: aload_1\n-         1: invokeinterface #4,  1            // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getParent:()Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+         1: invokeinterface #15,  1           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getParent:()Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n          6: astore_2\n          7: aload_2\n-         8: invokeinterface #5,  1            // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getType:()I\n+         8: invokeinterface #21,  1           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getType:()I\n         13: lookupswitch  { // 6\n                      109: 86\n                      110: 72\n                      111: 72\n                      115: 72\n                      116: 72\n                      132: 72\n                  default: 154\n             }\n         72: aload_0\n         73: aload_2\n-        74: ldc           #7                  // String simplify.expression\n+        74: ldc           #25                 // String simplify.expression\n         76: iconst_0\n-        77: anewarray     #8                  // class java/lang/Object\n-        80: invokevirtual #9                  // Method log:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n+        77: anewarray     #27                 // class java/lang/Object\n+        80: invokevirtual #29                 // Method log:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n         83: goto          154\n         86: aload_1\n-        87: invokeinterface #10,  1           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getNextSibling:()Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+        87: invokeinterface #33,  1           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getNextSibling:()Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n         92: astore_3\n         93: aload_2\n-        94: invokeinterface #11,  1           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getFirstChild:()Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n-        99: invokeinterface #5,  1            // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getType:()I\n-       104: invokestatic  #12                 // Method com/puppycrawl/tools/checkstyle/utils/TokenUtil.isBooleanLiteralType:(I)Z\n+        94: invokeinterface #36,  1           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getFirstChild:()Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+        99: invokeinterface #21,  1           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getType:()I\n+       104: invokestatic  #39                 // Method com/puppycrawl/tools/checkstyle/utils/TokenUtil.isBooleanLiteralType:(I)Z\n        107: ifne          140\n        110: aload_3\n        111: ifnull        154\n        114: aload_3\n-       115: invokeinterface #10,  1           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getNextSibling:()Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+       115: invokeinterface #33,  1           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getNextSibling:()Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n        120: ifnull        154\n        123: aload_3\n-       124: invokeinterface #10,  1           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getNextSibling:()Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n-       129: invokeinterface #5,  1            // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getType:()I\n-       134: invokestatic  #12                 // Method com/puppycrawl/tools/checkstyle/utils/TokenUtil.isBooleanLiteralType:(I)Z\n+       124: invokeinterface #33,  1           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getNextSibling:()Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+       129: invokeinterface #21,  1           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getType:()I\n+       134: invokestatic  #39                 // Method com/puppycrawl/tools/checkstyle/utils/TokenUtil.isBooleanLiteralType:(I)Z\n        137: ifeq          154\n        140: aload_0\n        141: aload_2\n-       142: ldc           #7                  // String simplify.expression\n+       142: ldc           #25                 // String simplify.expression\n        144: iconst_0\n-       145: anewarray     #8                  // class java/lang/Object\n-       148: invokevirtual #9                  // Method log:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n+       145: anewarray     #27                 // class java/lang/Object\n+       148: invokevirtual #29                 // Method log:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n        151: goto          154\n        154: return\n       LineNumberTable:\n         line 112: 0\n         line 113: 7\n         line 119: 72\n         line 120: 83\n@@ -222,9 +222,9 @@\n           offset_delta = 53\n           locals = [ class com/puppycrawl/tools/checkstyle/api/DetailAST ]\n         frame_type = 250 /* chop */\n           offset_delta = 13\n }\n SourceFile: \"SimplifyBooleanExpressionCheck.java\"\n RuntimeVisibleAnnotations:\n-  0: #39()\n+  0: #65()\n     com.puppycrawl.tools.checkstyle.StatelessCheck\n"}]}
