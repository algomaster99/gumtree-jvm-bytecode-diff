{"diffoscope-json-version": 1, "source1": "first/Base64Variant.class", "source2": "second/Base64Variant.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,379 +1,379 @@\n-  SHA-256 checksum 220bf5b0830090bf36cfbe5c3f3cae31caf38fa5576fd475ce7835a7c2f49dea\n+  SHA-256 checksum 6e01d26da2c61b87fbcee1d487b34bc4ccc506af99d37fda32fb92e47ac9d22e\n   Compiled from \"Base64Variant.java\"\n public final class com.fasterxml.jackson.core.Base64Variant implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #20                         // com/fasterxml/jackson/core/Base64Variant\n-  super_class: #77                        // java/lang/Object\n+  this_class: #8                          // com/fasterxml/jackson/core/Base64Variant\n+  super_class: #2                         // java/lang/Object\n   interfaces: 1, fields: 13, methods: 45, attributes: 2\n Constant pool:\n-    #1 = Methodref          #77.#240      // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #20.#241      // com/fasterxml/jackson/core/Base64Variant._asciiToBase64:[I\n-    #3 = Fieldref           #20.#242      // com/fasterxml/jackson/core/Base64Variant._base64ToAsciiC:[C\n-    #4 = Fieldref           #20.#243      // com/fasterxml/jackson/core/Base64Variant._base64ToAsciiB:[B\n-    #5 = Fieldref           #20.#244      // com/fasterxml/jackson/core/Base64Variant._name:Ljava/lang/String;\n-    #6 = Fieldref           #20.#245      // com/fasterxml/jackson/core/Base64Variant._writePadding:Z\n-    #7 = Fieldref           #20.#246      // com/fasterxml/jackson/core/Base64Variant._paddingChar:C\n-    #8 = Fieldref           #20.#247      // com/fasterxml/jackson/core/Base64Variant._maxLineLength:I\n-    #9 = Methodref          #131.#248     // java/lang/String.length:()I\n-   #10 = Class              #249          // java/lang/IllegalArgumentException\n-   #11 = Class              #250          // java/lang/StringBuilder\n-   #12 = Methodref          #11.#240      // java/lang/StringBuilder.\"<init>\":()V\n-   #13 = String             #251          // Base64Alphabet length must be exactly 64 (was\n-   #14 = Methodref          #11.#252      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #15 = Methodref          #11.#253      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #16 = String             #254          // )\n-   #17 = Methodref          #11.#255      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #18 = Methodref          #10.#256      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #19 = Methodref          #131.#257     // java/lang/String.getChars:(II[CI)V\n-   #20 = Class              #258          // com/fasterxml/jackson/core/Base64Variant\n-   #21 = Methodref          #259.#260     // java/util/Arrays.fill:([II)V\n-   #22 = Fieldref           #83.#261      // com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_REQUIRED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n-   #23 = Fieldref           #83.#262      // com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_FORBIDDEN:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n-   #24 = Fieldref           #20.#263      // com/fasterxml/jackson/core/Base64Variant._paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n-   #25 = Methodref          #20.#264      // com/fasterxml/jackson/core/Base64Variant.\"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCI)V\n-   #26 = Methodref          #20.#265      // com/fasterxml/jackson/core/Base64Variant.\"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCLcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;I)V\n-   #27 = Methodref          #266.#267     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #28 = Fieldref           #83.#268      // com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_ALLOWED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n-   #29 = Methodref          #20.#269      // com/fasterxml/jackson/core/Base64Variant.withReadPadding:(Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;\n-   #30 = Methodref          #20.#270      // com/fasterxml/jackson/core/Base64Variant.\"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)V\n-   #31 = Methodref          #271.#272     // com/fasterxml/jackson/core/Base64Variants.valueOf:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/Base64Variant;\n-   #32 = Methodref          #11.#273      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-   #33 = Methodref          #20.#274      // com/fasterxml/jackson/core/Base64Variant.usesPadding:()Z\n-   #34 = Methodref          #20.#275      // com/fasterxml/jackson/core/Base64Variant.encode:([BZ)Ljava/lang/String;\n-   #35 = Methodref          #11.#276      // java/lang/StringBuilder.\"<init>\":(I)V\n-   #36 = Methodref          #20.#277      // com/fasterxml/jackson/core/Base64Variant.getMaxLineLength:()I\n-   #37 = Methodref          #20.#278      // com/fasterxml/jackson/core/Base64Variant.encodeBase64Chunk:(Ljava/lang/StringBuilder;I)V\n-   #38 = Methodref          #20.#279      // com/fasterxml/jackson/core/Base64Variant.encodeBase64Partial:(Ljava/lang/StringBuilder;II)V\n-   #39 = Class              #280          // com/fasterxml/jackson/core/util/ByteArrayBuilder\n-   #40 = Methodref          #39.#240      // com/fasterxml/jackson/core/util/ByteArrayBuilder.\"<init>\":()V\n-   #41 = Methodref          #20.#281      // com/fasterxml/jackson/core/Base64Variant.decode:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V\n-   #42 = Methodref          #39.#282      // com/fasterxml/jackson/core/util/ByteArrayBuilder.toByteArray:()[B\n-   #43 = Methodref          #131.#283     // java/lang/String.charAt:(I)C\n-   #44 = Methodref          #20.#284      // com/fasterxml/jackson/core/Base64Variant.decodeBase64Char:(C)I\n-   #45 = Methodref          #20.#285      // com/fasterxml/jackson/core/Base64Variant._reportInvalidBase64:(CILjava/lang/String;)V\n-   #46 = Methodref          #20.#286      // com/fasterxml/jackson/core/Base64Variant._reportBase64EOF:()V\n-   #47 = Methodref          #20.#287      // com/fasterxml/jackson/core/Base64Variant.requiresPaddingOnRead:()Z\n-   #48 = Methodref          #39.#288      // com/fasterxml/jackson/core/util/ByteArrayBuilder.append:(I)V\n-   #49 = Methodref          #20.#289      // com/fasterxml/jackson/core/Base64Variant.acceptsPaddingOnRead:()Z\n-   #50 = Methodref          #20.#290      // com/fasterxml/jackson/core/Base64Variant._reportBase64UnexpectedPadding:()V\n-   #51 = Methodref          #20.#291      // com/fasterxml/jackson/core/Base64Variant.usesPaddingChar:(C)Z\n-   #52 = String             #292          // expected padding character \\'\n-   #53 = Methodref          #20.#293      // com/fasterxml/jackson/core/Base64Variant.getPaddingChar:()C\n-   #54 = String             #294          // \\'\n-   #55 = Methodref          #39.#295      // com/fasterxml/jackson/core/util/ByteArrayBuilder.appendTwoBytes:(I)V\n-   #56 = Methodref          #39.#296      // com/fasterxml/jackson/core/util/ByteArrayBuilder.appendThreeBytes:(I)V\n-   #57 = Methodref          #77.#297      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #58 = Methodref          #131.#298     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #59 = Methodref          #131.#299     // java/lang/String.hashCode:()I\n-   #60 = String             #300          // Illegal white space character (code 0x\n-   #61 = Methodref          #301.#302     // java/lang/Integer.toHexString:(I)Ljava/lang/String;\n-   #62 = String             #303          // ) as character #\n-   #63 = String             #304          //  of 4-char base64 unit: can only used between units\n-   #64 = String             #305          // Unexpected padding character (\\'\n-   #65 = String             #306          // \\') as character #\n-   #66 = String             #307          //  of 4-char base64 unit: padding only legal as 3rd or 4th character\n-   #67 = Methodref          #308.#309     // java/lang/Character.isDefined:(C)Z\n-   #68 = Methodref          #308.#310     // java/lang/Character.isISOControl:(C)Z\n-   #69 = String             #311          // Illegal character (code 0x\n-   #70 = String             #312          // ) in base64 content\n-   #71 = String             #313          // Illegal character \\'\n-   #72 = String             #314          // \\' (code 0x\n-   #73 = String             #315          // :\n-   #74 = Methodref          #20.#316      // com/fasterxml/jackson/core/Base64Variant.missingPaddingMessage:()Ljava/lang/String;\n-   #75 = Methodref          #20.#317      // com/fasterxml/jackson/core/Base64Variant.unexpectedPaddingMessage:()Ljava/lang/String;\n-   #76 = String             #318          // Unexpected end of base64-encoded String: base64 variant \\'%s\\' expects no padding at the end while decoding. This Base64Variant might have been incorrectly configured\n-   #77 = Class              #319          // java/lang/Object\n-   #78 = Methodref          #20.#320      // com/fasterxml/jackson/core/Base64Variant.getName:()Ljava/lang/String;\n-   #79 = Methodref          #131.#321     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #80 = String             #322          // Unexpected end of base64-encoded String: base64 variant \\'%s\\' expects padding (one or more \\'%c\\' characters) at the end. This Base64Variant might have been incorrectly configured\n-   #81 = Methodref          #308.#323     // java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-   #82 = Class              #324          // java/io/Serializable\n-   #83 = Class              #325          // com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour\n-   #84 = Utf8               PaddingReadBehaviour\n-   #85 = Utf8               InnerClasses\n-   #86 = Utf8               INT_SPACE\n-   #87 = Utf8               I\n-   #88 = Utf8               ConstantValue\n-   #89 = Integer            32\n-   #90 = Utf8               serialVersionUID\n-   #91 = Utf8               J\n-   #92 = Long               1l\n-   #94 = Utf8               PADDING_CHAR_NONE\n-   #95 = Utf8               C\n-   #96 = Integer            0\n-   #97 = Utf8               BASE64_VALUE_INVALID\n-   #98 = Integer            -1\n-   #99 = Utf8               BASE64_VALUE_PADDING\n-  #100 = Integer            -2\n-  #101 = Utf8               _asciiToBase64\n-  #102 = Utf8               [I\n-  #103 = Utf8               _base64ToAsciiC\n-  #104 = Utf8               [C\n-  #105 = Utf8               _base64ToAsciiB\n-  #106 = Utf8               [B\n-  #107 = Utf8               _name\n-  #108 = Utf8               Ljava/lang/String;\n-  #109 = Utf8               _paddingChar\n-  #110 = Utf8               _maxLineLength\n-  #111 = Utf8               _writePadding\n-  #112 = Utf8               Z\n-  #113 = Utf8               _paddingReadBehaviour\n-  #114 = Utf8               Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n-  #115 = Utf8               <init>\n-  #116 = Utf8               (Ljava/lang/String;Ljava/lang/String;ZCI)V\n-  #117 = Utf8               Code\n-  #118 = Utf8               LineNumberTable\n-  #119 = Utf8               LocalVariableTable\n-  #120 = Utf8               alpha\n-  #121 = Utf8               i\n-  #122 = Utf8               this\n-  #123 = Utf8               Lcom/fasterxml/jackson/core/Base64Variant;\n-  #124 = Utf8               name\n-  #125 = Utf8               base64Alphabet\n-  #126 = Utf8               writePadding\n-  #127 = Utf8               paddingChar\n-  #128 = Utf8               maxLineLength\n-  #129 = Utf8               alphaLen\n-  #130 = Utf8               StackMapTable\n-  #131 = Class              #326          // java/lang/String\n-  #132 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;I)V\n-  #133 = Utf8               base\n-  #134 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCI)V\n-  #135 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCLcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;I)V\n-  #136 = Utf8               paddingReadBehaviour\n-  #137 = Utf8               srcB\n-  #138 = Utf8               srcC\n-  #139 = Utf8               srcV\n-  #140 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)V\n-  #141 = Utf8               withPaddingAllowed\n-  #142 = Utf8               ()Lcom/fasterxml/jackson/core/Base64Variant;\n-  #143 = Utf8               withPaddingRequired\n-  #144 = Utf8               withPaddingForbidden\n-  #145 = Utf8               withReadPadding\n-  #146 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;\n-  #147 = Utf8               readPadding\n-  #148 = Utf8               withWritePadding\n-  #149 = Utf8               (Z)Lcom/fasterxml/jackson/core/Base64Variant;\n-  #150 = Utf8               readResolve\n-  #151 = Utf8               ()Ljava/lang/Object;\n-  #152 = Utf8               getName\n-  #153 = Utf8               ()Ljava/lang/String;\n-  #154 = Utf8               usesPadding\n-  #155 = Utf8               ()Z\n-  #156 = Utf8               requiresPaddingOnRead\n-  #157 = Utf8               acceptsPaddingOnRead\n-  #158 = Utf8               usesPaddingChar\n-  #159 = Utf8               (C)Z\n-  #160 = Utf8               c\n-  #161 = Utf8               (I)Z\n-  #162 = Utf8               ch\n-  #163 = Utf8               ()Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n-  #164 = Utf8               getPaddingChar\n-  #165 = Utf8               ()C\n-  #166 = Utf8               getPaddingByte\n-  #167 = Utf8               ()B\n-  #168 = Utf8               getMaxLineLength\n-  #169 = Utf8               ()I\n-  #170 = Utf8               decodeBase64Char\n-  #171 = Utf8               (C)I\n-  #172 = Utf8               (I)I\n-  #173 = Utf8               decodeBase64Byte\n-  #174 = Utf8               (B)I\n-  #175 = Utf8               b\n-  #176 = Utf8               B\n-  #177 = Utf8               encodeBase64BitsAsChar\n-  #178 = Utf8               (I)C\n-  #179 = Utf8               value\n-  #180 = Utf8               encodeBase64Chunk\n-  #181 = Utf8               (I[CI)I\n-  #182 = Utf8               b24\n-  #183 = Utf8               buffer\n-  #184 = Utf8               outPtr\n-  #185 = Utf8               (Ljava/lang/StringBuilder;I)V\n-  #186 = Utf8               sb\n-  #187 = Utf8               Ljava/lang/StringBuilder;\n-  #188 = Utf8               encodeBase64Partial\n-  #189 = Utf8               (II[CI)I\n-  #190 = Utf8               bits\n-  #191 = Utf8               outputBytes\n-  #192 = Class              #104          // \"[C\"\n-  #193 = Utf8               (Ljava/lang/StringBuilder;II)V\n-  #194 = Utf8               encodeBase64BitsAsByte\n-  #195 = Utf8               (I)B\n-  #196 = Utf8               (I[BI)I\n-  #197 = Utf8               (II[BI)I\n-  #198 = Utf8               pb\n-  #199 = Class              #106          // \"[B\"\n-  #200 = Utf8               encode\n-  #201 = Utf8               ([B)Ljava/lang/String;\n-  #202 = Utf8               input\n-  #203 = Utf8               ([BZ)Ljava/lang/String;\n-  #204 = Utf8               addQuotes\n-  #205 = Utf8               inputEnd\n-  #206 = Utf8               chunksBeforeLF\n-  #207 = Utf8               inputPtr\n-  #208 = Utf8               safeInputEnd\n-  #209 = Utf8               inputLeft\n-  #210 = Utf8               ([BZLjava/lang/String;)Ljava/lang/String;\n-  #211 = Utf8               linefeed\n-  #212 = Utf8               decode\n-  #213 = Utf8               (Ljava/lang/String;)[B\n-  #214 = Utf8               Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n-  #215 = Utf8               Exceptions\n-  #216 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V\n-  #217 = Utf8               decodedData\n-  #218 = Utf8               str\n-  #219 = Utf8               builder\n-  #220 = Utf8               ptr\n-  #221 = Utf8               len\n-  #222 = Utf8               toString\n-  #223 = Utf8               equals\n-  #224 = Utf8               (Ljava/lang/Object;)Z\n-  #225 = Utf8               o\n-  #226 = Utf8               Ljava/lang/Object;\n-  #227 = Utf8               other\n-  #228 = Utf8               hashCode\n-  #229 = Utf8               _reportInvalidBase64\n-  #230 = Utf8               (CILjava/lang/String;)V\n-  #231 = Utf8               bindex\n-  #232 = Utf8               msg\n-  #233 = Utf8               _reportBase64EOF\n-  #234 = Utf8               ()V\n-  #235 = Utf8               _reportBase64UnexpectedPadding\n-  #236 = Utf8               unexpectedPaddingMessage\n-  #237 = Utf8               missingPaddingMessage\n-  #238 = Utf8               SourceFile\n-  #239 = Utf8               Base64Variant.java\n-  #240 = NameAndType        #115:#234     // \"<init>\":()V\n-  #241 = NameAndType        #101:#102     // _asciiToBase64:[I\n-  #242 = NameAndType        #103:#104     // _base64ToAsciiC:[C\n-  #243 = NameAndType        #105:#106     // _base64ToAsciiB:[B\n-  #244 = NameAndType        #107:#108     // _name:Ljava/lang/String;\n-  #245 = NameAndType        #111:#112     // _writePadding:Z\n-  #246 = NameAndType        #109:#95      // _paddingChar:C\n-  #247 = NameAndType        #110:#87      // _maxLineLength:I\n-  #248 = NameAndType        #327:#169     // length:()I\n-  #249 = Utf8               java/lang/IllegalArgumentException\n-  #250 = Utf8               java/lang/StringBuilder\n-  #251 = Utf8               Base64Alphabet length must be exactly 64 (was\n-  #252 = NameAndType        #328:#329     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #253 = NameAndType        #328:#330     // append:(I)Ljava/lang/StringBuilder;\n-  #254 = Utf8               )\n-  #255 = NameAndType        #222:#153     // toString:()Ljava/lang/String;\n-  #256 = NameAndType        #115:#331     // \"<init>\":(Ljava/lang/String;)V\n-  #257 = NameAndType        #332:#333     // getChars:(II[CI)V\n-  #258 = Utf8               com/fasterxml/jackson/core/Base64Variant\n-  #259 = Class              #334          // java/util/Arrays\n-  #260 = NameAndType        #335:#336     // fill:([II)V\n-  #261 = NameAndType        #337:#114     // PADDING_REQUIRED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n-  #262 = NameAndType        #338:#114     // PADDING_FORBIDDEN:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n-  #263 = NameAndType        #113:#114     // _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n-  #264 = NameAndType        #115:#134     // \"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCI)V\n-  #265 = NameAndType        #115:#135     // \"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCLcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;I)V\n-  #266 = Class              #339          // java/lang/System\n-  #267 = NameAndType        #340:#341     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #268 = NameAndType        #342:#114     // PADDING_ALLOWED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n-  #269 = NameAndType        #145:#146     // withReadPadding:(Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;\n-  #270 = NameAndType        #115:#140     // \"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)V\n-  #271 = Class              #343          // com/fasterxml/jackson/core/Base64Variants\n-  #272 = NameAndType        #344:#345     // valueOf:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/Base64Variant;\n-  #273 = NameAndType        #328:#346     // append:(C)Ljava/lang/StringBuilder;\n-  #274 = NameAndType        #154:#155     // usesPadding:()Z\n-  #275 = NameAndType        #200:#203     // encode:([BZ)Ljava/lang/String;\n-  #276 = NameAndType        #115:#347     // \"<init>\":(I)V\n-  #277 = NameAndType        #168:#169     // getMaxLineLength:()I\n-  #278 = NameAndType        #180:#185     // encodeBase64Chunk:(Ljava/lang/StringBuilder;I)V\n-  #279 = NameAndType        #188:#193     // encodeBase64Partial:(Ljava/lang/StringBuilder;II)V\n-  #280 = Utf8               com/fasterxml/jackson/core/util/ByteArrayBuilder\n-  #281 = NameAndType        #212:#216     // decode:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V\n-  #282 = NameAndType        #348:#349     // toByteArray:()[B\n-  #283 = NameAndType        #350:#178     // charAt:(I)C\n-  #284 = NameAndType        #170:#171     // decodeBase64Char:(C)I\n-  #285 = NameAndType        #229:#230     // _reportInvalidBase64:(CILjava/lang/String;)V\n-  #286 = NameAndType        #233:#234     // _reportBase64EOF:()V\n-  #287 = NameAndType        #156:#155     // requiresPaddingOnRead:()Z\n-  #288 = NameAndType        #328:#347     // append:(I)V\n-  #289 = NameAndType        #157:#155     // acceptsPaddingOnRead:()Z\n-  #290 = NameAndType        #235:#234     // _reportBase64UnexpectedPadding:()V\n-  #291 = NameAndType        #158:#159     // usesPaddingChar:(C)Z\n-  #292 = Utf8               expected padding character \\'\n-  #293 = NameAndType        #164:#165     // getPaddingChar:()C\n-  #294 = Utf8               \\'\n-  #295 = NameAndType        #351:#347     // appendTwoBytes:(I)V\n-  #296 = NameAndType        #352:#347     // appendThreeBytes:(I)V\n-  #297 = NameAndType        #353:#354     // getClass:()Ljava/lang/Class;\n-  #298 = NameAndType        #223:#224     // equals:(Ljava/lang/Object;)Z\n-  #299 = NameAndType        #228:#169     // hashCode:()I\n-  #300 = Utf8               Illegal white space character (code 0x\n-  #301 = Class              #355          // java/lang/Integer\n-  #302 = NameAndType        #356:#357     // toHexString:(I)Ljava/lang/String;\n-  #303 = Utf8               ) as character #\n-  #304 = Utf8                of 4-char base64 unit: can only used between units\n-  #305 = Utf8               Unexpected padding character (\\'\n-  #306 = Utf8               \\') as character #\n-  #307 = Utf8                of 4-char base64 unit: padding only legal as 3rd or 4th character\n-  #308 = Class              #358          // java/lang/Character\n-  #309 = NameAndType        #359:#159     // isDefined:(C)Z\n-  #310 = NameAndType        #360:#159     // isISOControl:(C)Z\n-  #311 = Utf8               Illegal character (code 0x\n-  #312 = Utf8               ) in base64 content\n-  #313 = Utf8               Illegal character \\'\n-  #314 = Utf8               \\' (code 0x\n-  #315 = Utf8               :\n-  #316 = NameAndType        #237:#153     // missingPaddingMessage:()Ljava/lang/String;\n-  #317 = NameAndType        #236:#153     // unexpectedPaddingMessage:()Ljava/lang/String;\n-  #318 = Utf8               Unexpected end of base64-encoded String: base64 variant \\'%s\\' expects no padding at the end while decoding. This Base64Variant might have been incorrectly configured\n-  #319 = Utf8               java/lang/Object\n-  #320 = NameAndType        #152:#153     // getName:()Ljava/lang/String;\n-  #321 = NameAndType        #361:#362     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #322 = Utf8               Unexpected end of base64-encoded String: base64 variant \\'%s\\' expects padding (one or more \\'%c\\' characters) at the end. This Base64Variant might have been incorrectly configured\n-  #323 = NameAndType        #344:#363     // valueOf:(C)Ljava/lang/Character;\n-  #324 = Utf8               java/io/Serializable\n-  #325 = Utf8               com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour\n-  #326 = Utf8               java/lang/String\n-  #327 = Utf8               length\n-  #328 = Utf8               append\n-  #329 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #330 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #331 = Utf8               (Ljava/lang/String;)V\n-  #332 = Utf8               getChars\n-  #333 = Utf8               (II[CI)V\n-  #334 = Utf8               java/util/Arrays\n-  #335 = Utf8               fill\n-  #336 = Utf8               ([II)V\n-  #337 = Utf8               PADDING_REQUIRED\n-  #338 = Utf8               PADDING_FORBIDDEN\n-  #339 = Utf8               java/lang/System\n-  #340 = Utf8               arraycopy\n-  #341 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #342 = Utf8               PADDING_ALLOWED\n-  #343 = Utf8               com/fasterxml/jackson/core/Base64Variants\n-  #344 = Utf8               valueOf\n-  #345 = Utf8               (Ljava/lang/String;)Lcom/fasterxml/jackson/core/Base64Variant;\n-  #346 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #347 = Utf8               (I)V\n-  #348 = Utf8               toByteArray\n-  #349 = Utf8               ()[B\n-  #350 = Utf8               charAt\n-  #351 = Utf8               appendTwoBytes\n-  #352 = Utf8               appendThreeBytes\n-  #353 = Utf8               getClass\n-  #354 = Utf8               ()Ljava/lang/Class;\n-  #355 = Utf8               java/lang/Integer\n-  #356 = Utf8               toHexString\n-  #357 = Utf8               (I)Ljava/lang/String;\n-  #358 = Utf8               java/lang/Character\n-  #359 = Utf8               isDefined\n-  #360 = Utf8               isISOControl\n-  #361 = Utf8               format\n-  #362 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #363 = Utf8               (C)Ljava/lang/Character;\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Fieldref           #8.#9         // com/fasterxml/jackson/core/Base64Variant._asciiToBase64:[I\n+    #8 = Class              #10           // com/fasterxml/jackson/core/Base64Variant\n+    #9 = NameAndType        #11:#12       // _asciiToBase64:[I\n+   #10 = Utf8               com/fasterxml/jackson/core/Base64Variant\n+   #11 = Utf8               _asciiToBase64\n+   #12 = Utf8               [I\n+   #13 = Fieldref           #8.#14        // com/fasterxml/jackson/core/Base64Variant._base64ToAsciiC:[C\n+   #14 = NameAndType        #15:#16       // _base64ToAsciiC:[C\n+   #15 = Utf8               _base64ToAsciiC\n+   #16 = Utf8               [C\n+   #17 = Fieldref           #8.#18        // com/fasterxml/jackson/core/Base64Variant._base64ToAsciiB:[B\n+   #18 = NameAndType        #19:#20       // _base64ToAsciiB:[B\n+   #19 = Utf8               _base64ToAsciiB\n+   #20 = Utf8               [B\n+   #21 = Fieldref           #8.#22        // com/fasterxml/jackson/core/Base64Variant._name:Ljava/lang/String;\n+   #22 = NameAndType        #23:#24       // _name:Ljava/lang/String;\n+   #23 = Utf8               _name\n+   #24 = Utf8               Ljava/lang/String;\n+   #25 = Fieldref           #8.#26        // com/fasterxml/jackson/core/Base64Variant._writePadding:Z\n+   #26 = NameAndType        #27:#28       // _writePadding:Z\n+   #27 = Utf8               _writePadding\n+   #28 = Utf8               Z\n+   #29 = Fieldref           #8.#30        // com/fasterxml/jackson/core/Base64Variant._paddingChar:C\n+   #30 = NameAndType        #31:#32       // _paddingChar:C\n+   #31 = Utf8               _paddingChar\n+   #32 = Utf8               C\n+   #33 = Fieldref           #8.#34        // com/fasterxml/jackson/core/Base64Variant._maxLineLength:I\n+   #34 = NameAndType        #35:#36       // _maxLineLength:I\n+   #35 = Utf8               _maxLineLength\n+   #36 = Utf8               I\n+   #37 = Methodref          #38.#39       // java/lang/String.length:()I\n+   #38 = Class              #40           // java/lang/String\n+   #39 = NameAndType        #41:#42       // length:()I\n+   #40 = Utf8               java/lang/String\n+   #41 = Utf8               length\n+   #42 = Utf8               ()I\n+   #43 = Class              #44           // java/lang/IllegalArgumentException\n+   #44 = Utf8               java/lang/IllegalArgumentException\n+   #45 = Class              #46           // java/lang/StringBuilder\n+   #46 = Utf8               java/lang/StringBuilder\n+   #47 = Methodref          #45.#3        // java/lang/StringBuilder.\"<init>\":()V\n+   #48 = String             #49           // Base64Alphabet length must be exactly 64 (was\n+   #49 = Utf8               Base64Alphabet length must be exactly 64 (was\n+   #50 = Methodref          #45.#51       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #51 = NameAndType        #52:#53       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #52 = Utf8               append\n+   #53 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #54 = Methodref          #45.#55       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #55 = NameAndType        #52:#56       // append:(I)Ljava/lang/StringBuilder;\n+   #56 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #57 = String             #58           // )\n+   #58 = Utf8               )\n+   #59 = Methodref          #45.#60       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #60 = NameAndType        #61:#62       // toString:()Ljava/lang/String;\n+   #61 = Utf8               toString\n+   #62 = Utf8               ()Ljava/lang/String;\n+   #63 = Methodref          #43.#64       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #64 = NameAndType        #5:#65        // \"<init>\":(Ljava/lang/String;)V\n+   #65 = Utf8               (Ljava/lang/String;)V\n+   #66 = Methodref          #38.#67       // java/lang/String.getChars:(II[CI)V\n+   #67 = NameAndType        #68:#69       // getChars:(II[CI)V\n+   #68 = Utf8               getChars\n+   #69 = Utf8               (II[CI)V\n+   #70 = Methodref          #71.#72       // java/util/Arrays.fill:([II)V\n+   #71 = Class              #73           // java/util/Arrays\n+   #72 = NameAndType        #74:#75       // fill:([II)V\n+   #73 = Utf8               java/util/Arrays\n+   #74 = Utf8               fill\n+   #75 = Utf8               ([II)V\n+   #76 = Fieldref           #77.#78       // com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_REQUIRED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+   #77 = Class              #79           // com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour\n+   #78 = NameAndType        #80:#81       // PADDING_REQUIRED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+   #79 = Utf8               com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour\n+   #80 = Utf8               PADDING_REQUIRED\n+   #81 = Utf8               Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+   #82 = Fieldref           #77.#83       // com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_FORBIDDEN:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+   #83 = NameAndType        #84:#81       // PADDING_FORBIDDEN:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+   #84 = Utf8               PADDING_FORBIDDEN\n+   #85 = Fieldref           #8.#86        // com/fasterxml/jackson/core/Base64Variant._paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+   #86 = NameAndType        #87:#81       // _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+   #87 = Utf8               _paddingReadBehaviour\n+   #88 = Methodref          #8.#89        // com/fasterxml/jackson/core/Base64Variant.\"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCI)V\n+   #89 = NameAndType        #5:#90        // \"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCI)V\n+   #90 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCI)V\n+   #91 = Methodref          #8.#92        // com/fasterxml/jackson/core/Base64Variant.\"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCLcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;I)V\n+   #92 = NameAndType        #5:#93        // \"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCLcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;I)V\n+   #93 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCLcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;I)V\n+   #94 = Methodref          #95.#96       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #95 = Class              #97           // java/lang/System\n+   #96 = NameAndType        #98:#99       // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #97 = Utf8               java/lang/System\n+   #98 = Utf8               arraycopy\n+   #99 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #100 = Fieldref           #77.#101      // com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_ALLOWED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+  #101 = NameAndType        #102:#81      // PADDING_ALLOWED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+  #102 = Utf8               PADDING_ALLOWED\n+  #103 = Methodref          #8.#104       // com/fasterxml/jackson/core/Base64Variant.withReadPadding:(Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;\n+  #104 = NameAndType        #105:#106     // withReadPadding:(Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;\n+  #105 = Utf8               withReadPadding\n+  #106 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;\n+  #107 = Methodref          #8.#108       // com/fasterxml/jackson/core/Base64Variant.\"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)V\n+  #108 = NameAndType        #5:#109       // \"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)V\n+  #109 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)V\n+  #110 = Methodref          #111.#112     // com/fasterxml/jackson/core/Base64Variants.valueOf:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/Base64Variant;\n+  #111 = Class              #113          // com/fasterxml/jackson/core/Base64Variants\n+  #112 = NameAndType        #114:#115     // valueOf:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/Base64Variant;\n+  #113 = Utf8               com/fasterxml/jackson/core/Base64Variants\n+  #114 = Utf8               valueOf\n+  #115 = Utf8               (Ljava/lang/String;)Lcom/fasterxml/jackson/core/Base64Variant;\n+  #116 = Methodref          #45.#117      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+  #117 = NameAndType        #52:#118      // append:(C)Ljava/lang/StringBuilder;\n+  #118 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #119 = Methodref          #8.#120       // com/fasterxml/jackson/core/Base64Variant.usesPadding:()Z\n+  #120 = NameAndType        #121:#122     // usesPadding:()Z\n+  #121 = Utf8               usesPadding\n+  #122 = Utf8               ()Z\n+  #123 = Methodref          #8.#124       // com/fasterxml/jackson/core/Base64Variant.encode:([BZ)Ljava/lang/String;\n+  #124 = NameAndType        #125:#126     // encode:([BZ)Ljava/lang/String;\n+  #125 = Utf8               encode\n+  #126 = Utf8               ([BZ)Ljava/lang/String;\n+  #127 = Methodref          #45.#128      // java/lang/StringBuilder.\"<init>\":(I)V\n+  #128 = NameAndType        #5:#129       // \"<init>\":(I)V\n+  #129 = Utf8               (I)V\n+  #130 = Methodref          #8.#131       // com/fasterxml/jackson/core/Base64Variant.getMaxLineLength:()I\n+  #131 = NameAndType        #132:#42      // getMaxLineLength:()I\n+  #132 = Utf8               getMaxLineLength\n+  #133 = Methodref          #8.#134       // com/fasterxml/jackson/core/Base64Variant.encodeBase64Chunk:(Ljava/lang/StringBuilder;I)V\n+  #134 = NameAndType        #135:#136     // encodeBase64Chunk:(Ljava/lang/StringBuilder;I)V\n+  #135 = Utf8               encodeBase64Chunk\n+  #136 = Utf8               (Ljava/lang/StringBuilder;I)V\n+  #137 = Methodref          #8.#138       // com/fasterxml/jackson/core/Base64Variant.encodeBase64Partial:(Ljava/lang/StringBuilder;II)V\n+  #138 = NameAndType        #139:#140     // encodeBase64Partial:(Ljava/lang/StringBuilder;II)V\n+  #139 = Utf8               encodeBase64Partial\n+  #140 = Utf8               (Ljava/lang/StringBuilder;II)V\n+  #141 = Class              #142          // com/fasterxml/jackson/core/util/ByteArrayBuilder\n+  #142 = Utf8               com/fasterxml/jackson/core/util/ByteArrayBuilder\n+  #143 = Methodref          #141.#3       // com/fasterxml/jackson/core/util/ByteArrayBuilder.\"<init>\":()V\n+  #144 = Methodref          #8.#145       // com/fasterxml/jackson/core/Base64Variant.decode:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V\n+  #145 = NameAndType        #146:#147     // decode:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V\n+  #146 = Utf8               decode\n+  #147 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V\n+  #148 = Methodref          #141.#149     // com/fasterxml/jackson/core/util/ByteArrayBuilder.toByteArray:()[B\n+  #149 = NameAndType        #150:#151     // toByteArray:()[B\n+  #150 = Utf8               toByteArray\n+  #151 = Utf8               ()[B\n+  #152 = Methodref          #38.#153      // java/lang/String.charAt:(I)C\n+  #153 = NameAndType        #154:#155     // charAt:(I)C\n+  #154 = Utf8               charAt\n+  #155 = Utf8               (I)C\n+  #156 = Methodref          #8.#157       // com/fasterxml/jackson/core/Base64Variant.decodeBase64Char:(C)I\n+  #157 = NameAndType        #158:#159     // decodeBase64Char:(C)I\n+  #158 = Utf8               decodeBase64Char\n+  #159 = Utf8               (C)I\n+  #160 = Methodref          #8.#161       // com/fasterxml/jackson/core/Base64Variant._reportInvalidBase64:(CILjava/lang/String;)V\n+  #161 = NameAndType        #162:#163     // _reportInvalidBase64:(CILjava/lang/String;)V\n+  #162 = Utf8               _reportInvalidBase64\n+  #163 = Utf8               (CILjava/lang/String;)V\n+  #164 = Methodref          #8.#165       // com/fasterxml/jackson/core/Base64Variant._reportBase64EOF:()V\n+  #165 = NameAndType        #166:#6       // _reportBase64EOF:()V\n+  #166 = Utf8               _reportBase64EOF\n+  #167 = Methodref          #8.#168       // com/fasterxml/jackson/core/Base64Variant.requiresPaddingOnRead:()Z\n+  #168 = NameAndType        #169:#122     // requiresPaddingOnRead:()Z\n+  #169 = Utf8               requiresPaddingOnRead\n+  #170 = Methodref          #141.#171     // com/fasterxml/jackson/core/util/ByteArrayBuilder.append:(I)V\n+  #171 = NameAndType        #52:#129      // append:(I)V\n+  #172 = Methodref          #8.#173       // com/fasterxml/jackson/core/Base64Variant.acceptsPaddingOnRead:()Z\n+  #173 = NameAndType        #174:#122     // acceptsPaddingOnRead:()Z\n+  #174 = Utf8               acceptsPaddingOnRead\n+  #175 = Methodref          #8.#176       // com/fasterxml/jackson/core/Base64Variant._reportBase64UnexpectedPadding:()V\n+  #176 = NameAndType        #177:#6       // _reportBase64UnexpectedPadding:()V\n+  #177 = Utf8               _reportBase64UnexpectedPadding\n+  #178 = Methodref          #8.#179       // com/fasterxml/jackson/core/Base64Variant.usesPaddingChar:(C)Z\n+  #179 = NameAndType        #180:#181     // usesPaddingChar:(C)Z\n+  #180 = Utf8               usesPaddingChar\n+  #181 = Utf8               (C)Z\n+  #182 = String             #183          // expected padding character \\'\n+  #183 = Utf8               expected padding character \\'\n+  #184 = Methodref          #8.#185       // com/fasterxml/jackson/core/Base64Variant.getPaddingChar:()C\n+  #185 = NameAndType        #186:#187     // getPaddingChar:()C\n+  #186 = Utf8               getPaddingChar\n+  #187 = Utf8               ()C\n+  #188 = String             #189          // \\'\n+  #189 = Utf8               \\'\n+  #190 = Methodref          #141.#191     // com/fasterxml/jackson/core/util/ByteArrayBuilder.appendTwoBytes:(I)V\n+  #191 = NameAndType        #192:#129     // appendTwoBytes:(I)V\n+  #192 = Utf8               appendTwoBytes\n+  #193 = Methodref          #141.#194     // com/fasterxml/jackson/core/util/ByteArrayBuilder.appendThreeBytes:(I)V\n+  #194 = NameAndType        #195:#129     // appendThreeBytes:(I)V\n+  #195 = Utf8               appendThreeBytes\n+  #196 = Methodref          #2.#197       // java/lang/Object.getClass:()Ljava/lang/Class;\n+  #197 = NameAndType        #198:#199     // getClass:()Ljava/lang/Class;\n+  #198 = Utf8               getClass\n+  #199 = Utf8               ()Ljava/lang/Class;\n+  #200 = Methodref          #38.#201      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+  #201 = NameAndType        #202:#203     // equals:(Ljava/lang/Object;)Z\n+  #202 = Utf8               equals\n+  #203 = Utf8               (Ljava/lang/Object;)Z\n+  #204 = Methodref          #38.#205      // java/lang/String.hashCode:()I\n+  #205 = NameAndType        #206:#42      // hashCode:()I\n+  #206 = Utf8               hashCode\n+  #207 = String             #208          // Illegal white space character (code 0x\n+  #208 = Utf8               Illegal white space character (code 0x\n+  #209 = Methodref          #210.#211     // java/lang/Integer.toHexString:(I)Ljava/lang/String;\n+  #210 = Class              #212          // java/lang/Integer\n+  #211 = NameAndType        #213:#214     // toHexString:(I)Ljava/lang/String;\n+  #212 = Utf8               java/lang/Integer\n+  #213 = Utf8               toHexString\n+  #214 = Utf8               (I)Ljava/lang/String;\n+  #215 = String             #216          // ) as character #\n+  #216 = Utf8               ) as character #\n+  #217 = String             #218          //  of 4-char base64 unit: can only used between units\n+  #218 = Utf8                of 4-char base64 unit: can only used between units\n+  #219 = String             #220          // Unexpected padding character (\\'\n+  #220 = Utf8               Unexpected padding character (\\'\n+  #221 = String             #222          // \\') as character #\n+  #222 = Utf8               \\') as character #\n+  #223 = String             #224          //  of 4-char base64 unit: padding only legal as 3rd or 4th character\n+  #224 = Utf8                of 4-char base64 unit: padding only legal as 3rd or 4th character\n+  #225 = Methodref          #226.#227     // java/lang/Character.isDefined:(C)Z\n+  #226 = Class              #228          // java/lang/Character\n+  #227 = NameAndType        #229:#181     // isDefined:(C)Z\n+  #228 = Utf8               java/lang/Character\n+  #229 = Utf8               isDefined\n+  #230 = Methodref          #226.#231     // java/lang/Character.isISOControl:(C)Z\n+  #231 = NameAndType        #232:#181     // isISOControl:(C)Z\n+  #232 = Utf8               isISOControl\n+  #233 = String             #234          // Illegal character (code 0x\n+  #234 = Utf8               Illegal character (code 0x\n+  #235 = String             #236          // ) in base64 content\n+  #236 = Utf8               ) in base64 content\n+  #237 = String             #238          // Illegal character \\'\n+  #238 = Utf8               Illegal character \\'\n+  #239 = String             #240          // \\' (code 0x\n+  #240 = Utf8               \\' (code 0x\n+  #241 = String             #242          // :\n+  #242 = Utf8               :\n+  #243 = Methodref          #8.#244       // com/fasterxml/jackson/core/Base64Variant.missingPaddingMessage:()Ljava/lang/String;\n+  #244 = NameAndType        #245:#62      // missingPaddingMessage:()Ljava/lang/String;\n+  #245 = Utf8               missingPaddingMessage\n+  #246 = Methodref          #8.#247       // com/fasterxml/jackson/core/Base64Variant.unexpectedPaddingMessage:()Ljava/lang/String;\n+  #247 = NameAndType        #248:#62      // unexpectedPaddingMessage:()Ljava/lang/String;\n+  #248 = Utf8               unexpectedPaddingMessage\n+  #249 = String             #250          // Unexpected end of base64-encoded String: base64 variant \\'%s\\' expects no padding at the end while decoding. This Base64Variant might have been incorrectly configured\n+  #250 = Utf8               Unexpected end of base64-encoded String: base64 variant \\'%s\\' expects no padding at the end while decoding. This Base64Variant might have been incorrectly configured\n+  #251 = Methodref          #8.#252       // com/fasterxml/jackson/core/Base64Variant.getName:()Ljava/lang/String;\n+  #252 = NameAndType        #253:#62      // getName:()Ljava/lang/String;\n+  #253 = Utf8               getName\n+  #254 = Methodref          #38.#255      // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #255 = NameAndType        #256:#257     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #256 = Utf8               format\n+  #257 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #258 = String             #259          // Unexpected end of base64-encoded String: base64 variant \\'%s\\' expects padding (one or more \\'%c\\' characters) at the end. This Base64Variant might have been incorrectly configured\n+  #259 = Utf8               Unexpected end of base64-encoded String: base64 variant \\'%s\\' expects padding (one or more \\'%c\\' characters) at the end. This Base64Variant might have been incorrectly configured\n+  #260 = Methodref          #226.#261     // java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+  #261 = NameAndType        #114:#262     // valueOf:(C)Ljava/lang/Character;\n+  #262 = Utf8               (C)Ljava/lang/Character;\n+  #263 = Class              #264          // java/io/Serializable\n+  #264 = Utf8               java/io/Serializable\n+  #265 = Utf8               INT_SPACE\n+  #266 = Utf8               ConstantValue\n+  #267 = Integer            32\n+  #268 = Utf8               serialVersionUID\n+  #269 = Utf8               J\n+  #270 = Long               1l\n+  #272 = Utf8               PADDING_CHAR_NONE\n+  #273 = Integer            0\n+  #274 = Utf8               BASE64_VALUE_INVALID\n+  #275 = Integer            -1\n+  #276 = Utf8               BASE64_VALUE_PADDING\n+  #277 = Integer            -2\n+  #278 = Utf8               (Ljava/lang/String;Ljava/lang/String;ZCI)V\n+  #279 = Utf8               Code\n+  #280 = Utf8               LineNumberTable\n+  #281 = Utf8               LocalVariableTable\n+  #282 = Utf8               alpha\n+  #283 = Utf8               i\n+  #284 = Utf8               this\n+  #285 = Utf8               Lcom/fasterxml/jackson/core/Base64Variant;\n+  #286 = Utf8               name\n+  #287 = Utf8               base64Alphabet\n+  #288 = Utf8               writePadding\n+  #289 = Utf8               paddingChar\n+  #290 = Utf8               maxLineLength\n+  #291 = Utf8               alphaLen\n+  #292 = Utf8               StackMapTable\n+  #293 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;I)V\n+  #294 = Utf8               base\n+  #295 = Utf8               paddingReadBehaviour\n+  #296 = Utf8               srcB\n+  #297 = Utf8               srcC\n+  #298 = Utf8               srcV\n+  #299 = Utf8               withPaddingAllowed\n+  #300 = Utf8               ()Lcom/fasterxml/jackson/core/Base64Variant;\n+  #301 = Utf8               withPaddingRequired\n+  #302 = Utf8               withPaddingForbidden\n+  #303 = Utf8               readPadding\n+  #304 = Utf8               withWritePadding\n+  #305 = Utf8               (Z)Lcom/fasterxml/jackson/core/Base64Variant;\n+  #306 = Utf8               readResolve\n+  #307 = Utf8               ()Ljava/lang/Object;\n+  #308 = Utf8               c\n+  #309 = Utf8               (I)Z\n+  #310 = Utf8               ch\n+  #311 = Utf8               ()Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+  #312 = Utf8               getPaddingByte\n+  #313 = Utf8               ()B\n+  #314 = Utf8               (I)I\n+  #315 = Utf8               decodeBase64Byte\n+  #316 = Utf8               (B)I\n+  #317 = Utf8               b\n+  #318 = Utf8               B\n+  #319 = Utf8               encodeBase64BitsAsChar\n+  #320 = Utf8               value\n+  #321 = Utf8               (I[CI)I\n+  #322 = Utf8               b24\n+  #323 = Utf8               buffer\n+  #324 = Utf8               outPtr\n+  #325 = Utf8               sb\n+  #326 = Utf8               Ljava/lang/StringBuilder;\n+  #327 = Utf8               (II[CI)I\n+  #328 = Utf8               bits\n+  #329 = Utf8               outputBytes\n+  #330 = Class              #16           // \"[C\"\n+  #331 = Utf8               encodeBase64BitsAsByte\n+  #332 = Utf8               (I)B\n+  #333 = Utf8               (I[BI)I\n+  #334 = Utf8               (II[BI)I\n+  #335 = Utf8               pb\n+  #336 = Class              #20           // \"[B\"\n+  #337 = Utf8               ([B)Ljava/lang/String;\n+  #338 = Utf8               input\n+  #339 = Utf8               addQuotes\n+  #340 = Utf8               inputEnd\n+  #341 = Utf8               chunksBeforeLF\n+  #342 = Utf8               inputPtr\n+  #343 = Utf8               safeInputEnd\n+  #344 = Utf8               inputLeft\n+  #345 = Utf8               ([BZLjava/lang/String;)Ljava/lang/String;\n+  #346 = Utf8               linefeed\n+  #347 = Utf8               (Ljava/lang/String;)[B\n+  #348 = Utf8               Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n+  #349 = Utf8               Exceptions\n+  #350 = Utf8               decodedData\n+  #351 = Utf8               str\n+  #352 = Utf8               builder\n+  #353 = Utf8               ptr\n+  #354 = Utf8               len\n+  #355 = Utf8               o\n+  #356 = Utf8               Ljava/lang/Object;\n+  #357 = Utf8               other\n+  #358 = Utf8               bindex\n+  #359 = Utf8               msg\n+  #360 = Utf8               SourceFile\n+  #361 = Utf8               Base64Variant.java\n+  #362 = Utf8               InnerClasses\n+  #363 = Utf8               PaddingReadBehaviour\n {\n   private static final int INT_SPACE = 32;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 32\n \n   private static final long serialVersionUID = 1l;\n@@ -434,103 +434,103 @@\n     Code:\n       stack=5, locals=9, args_size=6\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: sipush        128\n          8: newarray       int\n-        10: putfield      #2                  // Field _asciiToBase64:[I\n+        10: putfield      #7                  // Field _asciiToBase64:[I\n         13: aload_0\n         14: bipush        64\n         16: newarray       char\n-        18: putfield      #3                  // Field _base64ToAsciiC:[C\n+        18: putfield      #13                 // Field _base64ToAsciiC:[C\n         21: aload_0\n         22: bipush        64\n         24: newarray       byte\n-        26: putfield      #4                  // Field _base64ToAsciiB:[B\n+        26: putfield      #17                 // Field _base64ToAsciiB:[B\n         29: aload_0\n         30: aload_1\n-        31: putfield      #5                  // Field _name:Ljava/lang/String;\n+        31: putfield      #21                 // Field _name:Ljava/lang/String;\n         34: aload_0\n         35: iload_3\n-        36: putfield      #6                  // Field _writePadding:Z\n+        36: putfield      #25                 // Field _writePadding:Z\n         39: aload_0\n         40: iload         4\n-        42: putfield      #7                  // Field _paddingChar:C\n+        42: putfield      #29                 // Field _paddingChar:C\n         45: aload_0\n         46: iload         5\n-        48: putfield      #8                  // Field _maxLineLength:I\n+        48: putfield      #33                 // Field _maxLineLength:I\n         51: aload_2\n-        52: invokevirtual #9                  // Method java/lang/String.length:()I\n+        52: invokevirtual #37                 // Method java/lang/String.length:()I\n         55: istore        6\n         57: iload         6\n         59: bipush        64\n         61: if_icmpeq     97\n-        64: new           #10                 // class java/lang/IllegalArgumentException\n+        64: new           #43                 // class java/lang/IllegalArgumentException\n         67: dup\n-        68: new           #11                 // class java/lang/StringBuilder\n+        68: new           #45                 // class java/lang/StringBuilder\n         71: dup\n-        72: invokespecial #12                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        75: ldc           #13                 // String Base64Alphabet length must be exactly 64 (was\n-        77: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        72: invokespecial #47                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        75: ldc           #48                 // String Base64Alphabet length must be exactly 64 (was\n+        77: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         80: iload         6\n-        82: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        85: ldc           #16                 // String )\n-        87: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        90: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        93: invokespecial #18                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        82: invokevirtual #54                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        85: ldc           #57                 // String )\n+        87: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        90: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        93: invokespecial #63                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         96: athrow\n         97: aload_2\n         98: iconst_0\n         99: iload         6\n        101: aload_0\n-       102: getfield      #3                  // Field _base64ToAsciiC:[C\n+       102: getfield      #13                 // Field _base64ToAsciiC:[C\n        105: iconst_0\n-       106: invokevirtual #19                 // Method java/lang/String.getChars:(II[CI)V\n+       106: invokevirtual #66                 // Method java/lang/String.getChars:(II[CI)V\n        109: aload_0\n-       110: getfield      #2                  // Field _asciiToBase64:[I\n+       110: getfield      #7                  // Field _asciiToBase64:[I\n        113: iconst_m1\n-       114: invokestatic  #21                 // Method java/util/Arrays.fill:([II)V\n+       114: invokestatic  #70                 // Method java/util/Arrays.fill:([II)V\n        117: iconst_0\n        118: istore        7\n        120: iload         7\n        122: iload         6\n        124: if_icmpge     161\n        127: aload_0\n-       128: getfield      #3                  // Field _base64ToAsciiC:[C\n+       128: getfield      #13                 // Field _base64ToAsciiC:[C\n        131: iload         7\n        133: caload\n        134: istore        8\n        136: aload_0\n-       137: getfield      #4                  // Field _base64ToAsciiB:[B\n+       137: getfield      #17                 // Field _base64ToAsciiB:[B\n        140: iload         7\n        142: iload         8\n        144: i2b\n        145: bastore\n        146: aload_0\n-       147: getfield      #2                  // Field _asciiToBase64:[I\n+       147: getfield      #7                  // Field _asciiToBase64:[I\n        150: iload         8\n        152: iload         7\n        154: iastore\n        155: iinc          7, 1\n        158: goto          120\n        161: iload_3\n        162: ifeq          174\n        165: aload_0\n-       166: getfield      #2                  // Field _asciiToBase64:[I\n+       166: getfield      #7                  // Field _asciiToBase64:[I\n        169: iload         4\n        171: bipush        -2\n        173: iastore\n        174: aload_0\n        175: iload_3\n        176: ifeq          185\n-       179: getstatic     #22                 // Field com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_REQUIRED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+       179: getstatic     #76                 // Field com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_REQUIRED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n        182: goto          188\n-       185: getstatic     #23                 // Field com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_FORBIDDEN:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n-       188: putfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+       185: getstatic     #82                 // Field com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_FORBIDDEN:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+       188: putfield      #85                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n        191: return\n       LineNumberTable:\n         line 148: 0\n         line 82: 4\n         line 88: 13\n         line 94: 21\n         line 149: 29\n@@ -587,19 +587,19 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: aload_1\n-         4: getfield      #6                  // Field _writePadding:Z\n+         4: getfield      #25                 // Field _writePadding:Z\n          7: aload_1\n-         8: getfield      #7                  // Field _paddingChar:C\n+         8: getfield      #29                 // Field _paddingChar:C\n         11: iload_3\n-        12: invokespecial #25                 // Method \"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCI)V\n+        12: invokespecial #88                 // Method \"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCI)V\n         15: return\n       LineNumberTable:\n         line 196: 0\n         line 197: 15\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0  this   Lcom/fasterxml/jackson/core/Base64Variant;\n@@ -614,17 +614,17 @@\n       stack=7, locals=6, args_size=6\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iload_3\n          4: iload         4\n          6: aload_1\n-         7: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+         7: getfield      #85                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n         10: iload         5\n-        12: invokespecial #26                 // Method \"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCLcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;I)V\n+        12: invokespecial #91                 // Method \"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCLcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;I)V\n         15: return\n       LineNumberTable:\n         line 214: 0\n         line 215: 15\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0  this   Lcom/fasterxml/jackson/core/Base64Variant;\n@@ -640,71 +640,71 @@\n     Code:\n       stack=5, locals=10, args_size=7\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: sipush        128\n          8: newarray       int\n-        10: putfield      #2                  // Field _asciiToBase64:[I\n+        10: putfield      #7                  // Field _asciiToBase64:[I\n         13: aload_0\n         14: bipush        64\n         16: newarray       char\n-        18: putfield      #3                  // Field _base64ToAsciiC:[C\n+        18: putfield      #13                 // Field _base64ToAsciiC:[C\n         21: aload_0\n         22: bipush        64\n         24: newarray       byte\n-        26: putfield      #4                  // Field _base64ToAsciiB:[B\n+        26: putfield      #17                 // Field _base64ToAsciiB:[B\n         29: aload_0\n         30: aload_2\n-        31: putfield      #5                  // Field _name:Ljava/lang/String;\n+        31: putfield      #21                 // Field _name:Ljava/lang/String;\n         34: aload_1\n-        35: getfield      #4                  // Field _base64ToAsciiB:[B\n+        35: getfield      #17                 // Field _base64ToAsciiB:[B\n         38: astore        7\n         40: aload         7\n         42: iconst_0\n         43: aload_0\n-        44: getfield      #4                  // Field _base64ToAsciiB:[B\n+        44: getfield      #17                 // Field _base64ToAsciiB:[B\n         47: iconst_0\n         48: aload         7\n         50: arraylength\n-        51: invokestatic  #27                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        51: invokestatic  #94                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         54: aload_1\n-        55: getfield      #3                  // Field _base64ToAsciiC:[C\n+        55: getfield      #13                 // Field _base64ToAsciiC:[C\n         58: astore        8\n         60: aload         8\n         62: iconst_0\n         63: aload_0\n-        64: getfield      #3                  // Field _base64ToAsciiC:[C\n+        64: getfield      #13                 // Field _base64ToAsciiC:[C\n         67: iconst_0\n         68: aload         8\n         70: arraylength\n-        71: invokestatic  #27                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        71: invokestatic  #94                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         74: aload_1\n-        75: getfield      #2                  // Field _asciiToBase64:[I\n+        75: getfield      #7                  // Field _asciiToBase64:[I\n         78: astore        9\n         80: aload         9\n         82: iconst_0\n         83: aload_0\n-        84: getfield      #2                  // Field _asciiToBase64:[I\n+        84: getfield      #7                  // Field _asciiToBase64:[I\n         87: iconst_0\n         88: aload         9\n         90: arraylength\n-        91: invokestatic  #27                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        91: invokestatic  #94                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         94: aload_0\n         95: iload_3\n-        96: putfield      #6                  // Field _writePadding:Z\n+        96: putfield      #25                 // Field _writePadding:Z\n         99: aload_0\n        100: iload         4\n-       102: putfield      #7                  // Field _paddingChar:C\n+       102: putfield      #29                 // Field _paddingChar:C\n        105: aload_0\n        106: iload         6\n-       108: putfield      #8                  // Field _maxLineLength:I\n+       108: putfield      #33                 // Field _maxLineLength:I\n        111: aload_0\n        112: aload         5\n-       114: putfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+       114: putfield      #85                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n        117: return\n       LineNumberTable:\n         line 219: 0\n         line 82: 4\n         line 88: 13\n         line 94: 21\n         line 220: 29\n@@ -736,23 +736,23 @@\n     descriptor: (Lcom/fasterxml/jackson/core/Base64Variant;Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=7, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_1\n-         3: getfield      #5                  // Field _name:Ljava/lang/String;\n+         3: getfield      #21                 // Field _name:Ljava/lang/String;\n          6: aload_1\n-         7: getfield      #6                  // Field _writePadding:Z\n+         7: getfield      #25                 // Field _writePadding:Z\n         10: aload_1\n-        11: getfield      #7                  // Field _paddingChar:C\n+        11: getfield      #29                 // Field _paddingChar:C\n         14: aload_2\n         15: aload_1\n-        16: getfield      #8                  // Field _maxLineLength:I\n-        19: invokespecial #26                 // Method \"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCLcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;I)V\n+        16: getfield      #33                 // Field _maxLineLength:I\n+        19: invokespecial #91                 // Method \"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCLcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;I)V\n         22: return\n       LineNumberTable:\n         line 235: 0\n         line 236: 22\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      23     0  this   Lcom/fasterxml/jackson/core/Base64Variant;\n@@ -761,69 +761,69 @@\n \n   public com.fasterxml.jackson.core.Base64Variant withPaddingAllowed();\n     descriptor: ()Lcom/fasterxml/jackson/core/Base64Variant;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #28                 // Field com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_ALLOWED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n-         4: invokevirtual #29                 // Method withReadPadding:(Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;\n+         1: getstatic     #100                // Field com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_ALLOWED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+         4: invokevirtual #103                // Method withReadPadding:(Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;\n          7: areturn\n       LineNumberTable:\n         line 244: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lcom/fasterxml/jackson/core/Base64Variant;\n \n   public com.fasterxml.jackson.core.Base64Variant withPaddingRequired();\n     descriptor: ()Lcom/fasterxml/jackson/core/Base64Variant;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #22                 // Field com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_REQUIRED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n-         4: invokevirtual #29                 // Method withReadPadding:(Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;\n+         1: getstatic     #76                 // Field com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_REQUIRED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+         4: invokevirtual #103                // Method withReadPadding:(Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;\n          7: areturn\n       LineNumberTable:\n         line 252: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lcom/fasterxml/jackson/core/Base64Variant;\n \n   public com.fasterxml.jackson.core.Base64Variant withPaddingForbidden();\n     descriptor: ()Lcom/fasterxml/jackson/core/Base64Variant;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #23                 // Field com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_FORBIDDEN:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n-         4: invokevirtual #29                 // Method withReadPadding:(Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;\n+         1: getstatic     #82                 // Field com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_FORBIDDEN:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+         4: invokevirtual #103                // Method withReadPadding:(Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;\n          7: areturn\n       LineNumberTable:\n         line 260: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lcom/fasterxml/jackson/core/Base64Variant;\n \n   public com.fasterxml.jackson.core.Base64Variant withReadPadding(com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour);\n     descriptor: (Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+         2: getfield      #85                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n          5: if_acmpne     12\n          8: aload_0\n          9: goto          21\n-        12: new           #20                 // class com/fasterxml/jackson/core/Base64Variant\n+        12: new           #8                  // class com/fasterxml/jackson/core/Base64Variant\n         15: dup\n         16: aload_0\n         17: aload_1\n-        18: invokespecial #30                 // Method \"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)V\n+        18: invokespecial #107                // Method \"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)V\n         21: areturn\n       LineNumberTable:\n         line 272: 0\n         line 273: 12\n         line 272: 21\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -837,29 +837,29 @@\n   public com.fasterxml.jackson.core.Base64Variant withWritePadding(boolean);\n     descriptor: (Z)Lcom/fasterxml/jackson/core/Base64Variant;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=2, args_size=2\n          0: iload_1\n          1: aload_0\n-         2: getfield      #6                  // Field _writePadding:Z\n+         2: getfield      #25                 // Field _writePadding:Z\n          5: if_icmpne     12\n          8: aload_0\n          9: goto          33\n-        12: new           #20                 // class com/fasterxml/jackson/core/Base64Variant\n+        12: new           #8                  // class com/fasterxml/jackson/core/Base64Variant\n         15: dup\n         16: aload_0\n         17: aload_0\n-        18: getfield      #5                  // Field _name:Ljava/lang/String;\n+        18: getfield      #21                 // Field _name:Ljava/lang/String;\n         21: iload_1\n         22: aload_0\n-        23: getfield      #7                  // Field _paddingChar:C\n+        23: getfield      #29                 // Field _paddingChar:C\n         26: aload_0\n-        27: getfield      #8                  // Field _maxLineLength:I\n-        30: invokespecial #25                 // Method \"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCI)V\n+        27: getfield      #33                 // Field _maxLineLength:I\n+        30: invokespecial #88                 // Method \"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCI)V\n         33: areturn\n       LineNumberTable:\n         line 284: 0\n         line 285: 12\n         line 284: 33\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -872,56 +872,56 @@\n \n   protected java.lang.Object readResolve();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=8, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field _name:Ljava/lang/String;\n-         4: invokestatic  #31                 // Method com/fasterxml/jackson/core/Base64Variants.valueOf:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/Base64Variant;\n+         1: getfield      #21                 // Field _name:Ljava/lang/String;\n+         4: invokestatic  #110                // Method com/fasterxml/jackson/core/Base64Variants.valueOf:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/Base64Variant;\n          7: astore_1\n          8: aload_0\n-         9: getfield      #6                  // Field _writePadding:Z\n+         9: getfield      #25                 // Field _writePadding:Z\n         12: aload_1\n-        13: getfield      #6                  // Field _writePadding:Z\n+        13: getfield      #25                 // Field _writePadding:Z\n         16: if_icmpne     63\n         19: aload_0\n-        20: getfield      #7                  // Field _paddingChar:C\n+        20: getfield      #29                 // Field _paddingChar:C\n         23: aload_1\n-        24: getfield      #7                  // Field _paddingChar:C\n+        24: getfield      #29                 // Field _paddingChar:C\n         27: if_icmpne     63\n         30: aload_0\n-        31: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+        31: getfield      #85                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n         34: aload_1\n-        35: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+        35: getfield      #85                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n         38: if_acmpne     63\n         41: aload_0\n-        42: getfield      #8                  // Field _maxLineLength:I\n+        42: getfield      #33                 // Field _maxLineLength:I\n         45: aload_1\n-        46: getfield      #8                  // Field _maxLineLength:I\n+        46: getfield      #33                 // Field _maxLineLength:I\n         49: if_icmpne     63\n         52: aload_0\n-        53: getfield      #6                  // Field _writePadding:Z\n+        53: getfield      #25                 // Field _writePadding:Z\n         56: aload_1\n-        57: getfield      #6                  // Field _writePadding:Z\n+        57: getfield      #25                 // Field _writePadding:Z\n         60: if_icmpeq     92\n-        63: new           #20                 // class com/fasterxml/jackson/core/Base64Variant\n+        63: new           #8                  // class com/fasterxml/jackson/core/Base64Variant\n         66: dup\n         67: aload_1\n         68: aload_0\n-        69: getfield      #5                  // Field _name:Ljava/lang/String;\n+        69: getfield      #21                 // Field _name:Ljava/lang/String;\n         72: aload_0\n-        73: getfield      #6                  // Field _writePadding:Z\n+        73: getfield      #25                 // Field _writePadding:Z\n         76: aload_0\n-        77: getfield      #7                  // Field _paddingChar:C\n+        77: getfield      #29                 // Field _paddingChar:C\n         80: aload_0\n-        81: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+        81: getfield      #85                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n         84: aload_0\n-        85: getfield      #8                  // Field _maxLineLength:I\n-        88: invokespecial #26                 // Method \"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCLcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;I)V\n+        85: getfield      #33                 // Field _maxLineLength:I\n+        88: invokespecial #91                 // Method \"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCLcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;I)V\n         91: areturn\n         92: aload_1\n         93: areturn\n       LineNumberTable:\n         line 299: 0\n         line 300: 8\n         line 306: 63\n@@ -938,44 +938,44 @@\n \n   public java.lang.String getName();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field _name:Ljava/lang/String;\n+         1: getfield      #21                 // Field _name:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 318: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lcom/fasterxml/jackson/core/Base64Variant;\n \n   public boolean usesPadding();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field _writePadding:Z\n+         1: getfield      #25                 // Field _writePadding:Z\n          4: ireturn\n       LineNumberTable:\n         line 324: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lcom/fasterxml/jackson/core/Base64Variant;\n \n   public boolean requiresPaddingOnRead();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n-         4: getstatic     #22                 // Field com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_REQUIRED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+         1: getfield      #85                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+         4: getstatic     #76                 // Field com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_REQUIRED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n          7: if_acmpne     14\n         10: iconst_1\n         11: goto          15\n         14: iconst_0\n         15: ireturn\n       LineNumberTable:\n         line 332: 0\n@@ -989,16 +989,16 @@\n \n   public boolean acceptsPaddingOnRead();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n-         4: getstatic     #23                 // Field com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_FORBIDDEN:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+         1: getfield      #85                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+         4: getstatic     #82                 // Field com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_FORBIDDEN:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n          7: if_acmpeq     14\n         10: iconst_1\n         11: goto          15\n         14: iconst_0\n         15: ireturn\n       LineNumberTable:\n         line 341: 0\n@@ -1013,15 +1013,15 @@\n   public boolean usesPaddingChar(char);\n     descriptor: (C)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: iload_1\n          1: aload_0\n-         2: getfield      #7                  // Field _paddingChar:C\n+         2: getfield      #29                 // Field _paddingChar:C\n          5: if_icmpne     12\n          8: iconst_1\n          9: goto          13\n         12: iconst_0\n         13: ireturn\n       LineNumberTable:\n         line 344: 0\n@@ -1037,15 +1037,15 @@\n   public boolean usesPaddingChar(int);\n     descriptor: (I)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: iload_1\n          1: aload_0\n-         2: getfield      #7                  // Field _paddingChar:C\n+         2: getfield      #29                 // Field _paddingChar:C\n          5: if_icmpne     12\n          8: iconst_1\n          9: goto          13\n         12: iconst_0\n         13: ireturn\n       LineNumberTable:\n         line 345: 0\n@@ -1060,58 +1060,58 @@\n \n   public com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour paddingReadBehaviour();\n     descriptor: ()Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+         1: getfield      #85                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n          4: areturn\n       LineNumberTable:\n         line 353: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lcom/fasterxml/jackson/core/Base64Variant;\n \n   public char getPaddingChar();\n     descriptor: ()C\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field _paddingChar:C\n+         1: getfield      #29                 // Field _paddingChar:C\n          4: ireturn\n       LineNumberTable:\n         line 355: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lcom/fasterxml/jackson/core/Base64Variant;\n \n   public byte getPaddingByte();\n     descriptor: ()B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field _paddingChar:C\n+         1: getfield      #29                 // Field _paddingChar:C\n          4: i2b\n          5: ireturn\n       LineNumberTable:\n         line 356: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lcom/fasterxml/jackson/core/Base64Variant;\n \n   public int getMaxLineLength();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field _maxLineLength:I\n+         1: getfield      #33                 // Field _maxLineLength:I\n          4: ireturn\n       LineNumberTable:\n         line 358: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lcom/fasterxml/jackson/core/Base64Variant;\n \n@@ -1122,15 +1122,15 @@\n       stack=2, locals=3, args_size=2\n          0: iload_1\n          1: istore_2\n          2: iload_2\n          3: bipush        127\n          5: if_icmpgt     17\n          8: aload_0\n-         9: getfield      #2                  // Field _asciiToBase64:[I\n+         9: getfield      #7                  // Field _asciiToBase64:[I\n         12: iload_2\n         13: iaload\n         14: goto          18\n         17: iconst_m1\n         18: ireturn\n       LineNumberTable:\n         line 373: 0\n@@ -1152,15 +1152,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: iload_1\n          1: bipush        127\n          3: if_icmpgt     15\n          6: aload_0\n-         7: getfield      #2                  // Field _asciiToBase64:[I\n+         7: getfield      #7                  // Field _asciiToBase64:[I\n         10: iload_1\n         11: iaload\n         12: goto          16\n         15: iconst_m1\n         16: ireturn\n       LineNumberTable:\n         line 379: 0\n@@ -1181,15 +1181,15 @@\n          0: iload_1\n          1: istore_2\n          2: iload_2\n          3: ifge          8\n          6: iconst_m1\n          7: ireturn\n          8: aload_0\n-         9: getfield      #2                  // Field _asciiToBase64:[I\n+         9: getfield      #7                  // Field _asciiToBase64:[I\n         12: iload_2\n         13: iaload\n         14: ireturn\n       LineNumberTable:\n         line 384: 0\n         line 386: 2\n         line 387: 6\n@@ -1206,15 +1206,15 @@\n \n   public char encodeBase64BitsAsChar(int);\n     descriptor: (I)C\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #3                  // Field _base64ToAsciiC:[C\n+         1: getfield      #13                 // Field _base64ToAsciiC:[C\n          4: iload_1\n          5: caload\n          6: ireturn\n       LineNumberTable:\n         line 402: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1226,51 +1226,51 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=4, args_size=4\n          0: aload_2\n          1: iload_3\n          2: iinc          3, 1\n          5: aload_0\n-         6: getfield      #3                  // Field _base64ToAsciiC:[C\n+         6: getfield      #13                 // Field _base64ToAsciiC:[C\n          9: iload_1\n         10: bipush        18\n         12: ishr\n         13: bipush        63\n         15: iand\n         16: caload\n         17: castore\n         18: aload_2\n         19: iload_3\n         20: iinc          3, 1\n         23: aload_0\n-        24: getfield      #3                  // Field _base64ToAsciiC:[C\n+        24: getfield      #13                 // Field _base64ToAsciiC:[C\n         27: iload_1\n         28: bipush        12\n         30: ishr\n         31: bipush        63\n         33: iand\n         34: caload\n         35: castore\n         36: aload_2\n         37: iload_3\n         38: iinc          3, 1\n         41: aload_0\n-        42: getfield      #3                  // Field _base64ToAsciiC:[C\n+        42: getfield      #13                 // Field _base64ToAsciiC:[C\n         45: iload_1\n         46: bipush        6\n         48: ishr\n         49: bipush        63\n         51: iand\n         52: caload\n         53: castore\n         54: aload_2\n         55: iload_3\n         56: iinc          3, 1\n         59: aload_0\n-        60: getfield      #3                  // Field _base64ToAsciiC:[C\n+        60: getfield      #13                 // Field _base64ToAsciiC:[C\n         63: iload_1\n         64: bipush        63\n         66: iand\n         67: caload\n         68: castore\n         69: iload_3\n         70: ireturn\n@@ -1290,53 +1290,53 @@\n   public void encodeBase64Chunk(java.lang.StringBuilder, int);\n     descriptor: (Ljava/lang/StringBuilder;I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_1\n          1: aload_0\n-         2: getfield      #3                  // Field _base64ToAsciiC:[C\n+         2: getfield      #13                 // Field _base64ToAsciiC:[C\n          5: iload_2\n          6: bipush        18\n          8: ishr\n          9: bipush        63\n         11: iand\n         12: caload\n-        13: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        13: invokevirtual #116                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         16: pop\n         17: aload_1\n         18: aload_0\n-        19: getfield      #3                  // Field _base64ToAsciiC:[C\n+        19: getfield      #13                 // Field _base64ToAsciiC:[C\n         22: iload_2\n         23: bipush        12\n         25: ishr\n         26: bipush        63\n         28: iand\n         29: caload\n-        30: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        30: invokevirtual #116                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         33: pop\n         34: aload_1\n         35: aload_0\n-        36: getfield      #3                  // Field _base64ToAsciiC:[C\n+        36: getfield      #13                 // Field _base64ToAsciiC:[C\n         39: iload_2\n         40: bipush        6\n         42: ishr\n         43: bipush        63\n         45: iand\n         46: caload\n-        47: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        47: invokevirtual #116                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         50: pop\n         51: aload_1\n         52: aload_0\n-        53: getfield      #3                  // Field _base64ToAsciiC:[C\n+        53: getfield      #13                 // Field _base64ToAsciiC:[C\n         56: iload_2\n         57: bipush        63\n         59: iand\n         60: caload\n-        61: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        61: invokevirtual #116                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         64: pop\n         65: return\n       LineNumberTable:\n         line 428: 0\n         line 429: 17\n         line 430: 34\n         line 431: 51\n@@ -1352,70 +1352,70 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=5, args_size=5\n          0: aload_3\n          1: iload         4\n          3: iinc          4, 1\n          6: aload_0\n-         7: getfield      #3                  // Field _base64ToAsciiC:[C\n+         7: getfield      #13                 // Field _base64ToAsciiC:[C\n         10: iload_1\n         11: bipush        18\n         13: ishr\n         14: bipush        63\n         16: iand\n         17: caload\n         18: castore\n         19: aload_3\n         20: iload         4\n         22: iinc          4, 1\n         25: aload_0\n-        26: getfield      #3                  // Field _base64ToAsciiC:[C\n+        26: getfield      #13                 // Field _base64ToAsciiC:[C\n         29: iload_1\n         30: bipush        12\n         32: ishr\n         33: bipush        63\n         35: iand\n         36: caload\n         37: castore\n         38: aload_0\n-        39: invokevirtual #33                 // Method usesPadding:()Z\n+        39: invokevirtual #119                // Method usesPadding:()Z\n         42: ifeq          90\n         45: aload_3\n         46: iload         4\n         48: iinc          4, 1\n         51: iload_2\n         52: iconst_2\n         53: if_icmpne     71\n         56: aload_0\n-        57: getfield      #3                  // Field _base64ToAsciiC:[C\n+        57: getfield      #13                 // Field _base64ToAsciiC:[C\n         60: iload_1\n         61: bipush        6\n         63: ishr\n         64: bipush        63\n         66: iand\n         67: caload\n         68: goto          75\n         71: aload_0\n-        72: getfield      #7                  // Field _paddingChar:C\n+        72: getfield      #29                 // Field _paddingChar:C\n         75: castore\n         76: aload_3\n         77: iload         4\n         79: iinc          4, 1\n         82: aload_0\n-        83: getfield      #7                  // Field _paddingChar:C\n+        83: getfield      #29                 // Field _paddingChar:C\n         86: castore\n         87: goto          114\n         90: iload_2\n         91: iconst_2\n         92: if_icmpne     114\n         95: aload_3\n         96: iload         4\n         98: iinc          4, 1\n        101: aload_0\n-       102: getfield      #3                  // Field _base64ToAsciiC:[C\n+       102: getfield      #13                 // Field _base64ToAsciiC:[C\n        105: iload_1\n        106: bipush        6\n        108: ishr\n        109: bipush        63\n        111: iand\n        112: caload\n        113: castore\n@@ -1453,73 +1453,73 @@\n   public void encodeBase64Partial(java.lang.StringBuilder, int, int);\n     descriptor: (Ljava/lang/StringBuilder;II)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_1\n          1: aload_0\n-         2: getfield      #3                  // Field _base64ToAsciiC:[C\n+         2: getfield      #13                 // Field _base64ToAsciiC:[C\n          5: iload_2\n          6: bipush        18\n          8: ishr\n          9: bipush        63\n         11: iand\n         12: caload\n-        13: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        13: invokevirtual #116                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         16: pop\n         17: aload_1\n         18: aload_0\n-        19: getfield      #3                  // Field _base64ToAsciiC:[C\n+        19: getfield      #13                 // Field _base64ToAsciiC:[C\n         22: iload_2\n         23: bipush        12\n         25: ishr\n         26: bipush        63\n         28: iand\n         29: caload\n-        30: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        30: invokevirtual #116                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         33: pop\n         34: aload_0\n-        35: invokevirtual #33                 // Method usesPadding:()Z\n+        35: invokevirtual #119                // Method usesPadding:()Z\n         38: ifeq          82\n         41: aload_1\n         42: iload_3\n         43: iconst_2\n         44: if_icmpne     62\n         47: aload_0\n-        48: getfield      #3                  // Field _base64ToAsciiC:[C\n+        48: getfield      #13                 // Field _base64ToAsciiC:[C\n         51: iload_2\n         52: bipush        6\n         54: ishr\n         55: bipush        63\n         57: iand\n         58: caload\n         59: goto          66\n         62: aload_0\n-        63: getfield      #7                  // Field _paddingChar:C\n-        66: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        63: getfield      #29                 // Field _paddingChar:C\n+        66: invokevirtual #116                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         69: pop\n         70: aload_1\n         71: aload_0\n-        72: getfield      #7                  // Field _paddingChar:C\n-        75: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        72: getfield      #29                 // Field _paddingChar:C\n+        75: invokevirtual #116                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         78: pop\n         79: goto          104\n         82: iload_3\n         83: iconst_2\n         84: if_icmpne     104\n         87: aload_1\n         88: aload_0\n-        89: getfield      #3                  // Field _base64ToAsciiC:[C\n+        89: getfield      #13                 // Field _base64ToAsciiC:[C\n         92: iload_2\n         93: bipush        6\n         95: ishr\n         96: bipush        63\n         98: iand\n         99: caload\n-       100: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       100: invokevirtual #116                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n        103: pop\n        104: return\n       LineNumberTable:\n         line 465: 0\n         line 466: 17\n         line 467: 34\n         line 468: 41\n@@ -1547,15 +1547,15 @@\n \n   public byte encodeBase64BitsAsByte(int);\n     descriptor: (I)B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #4                  // Field _base64ToAsciiB:[B\n+         1: getfield      #17                 // Field _base64ToAsciiB:[B\n          4: iload_1\n          5: baload\n          6: ireturn\n       LineNumberTable:\n         line 481: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1567,51 +1567,51 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=4, args_size=4\n          0: aload_2\n          1: iload_3\n          2: iinc          3, 1\n          5: aload_0\n-         6: getfield      #4                  // Field _base64ToAsciiB:[B\n+         6: getfield      #17                 // Field _base64ToAsciiB:[B\n          9: iload_1\n         10: bipush        18\n         12: ishr\n         13: bipush        63\n         15: iand\n         16: baload\n         17: bastore\n         18: aload_2\n         19: iload_3\n         20: iinc          3, 1\n         23: aload_0\n-        24: getfield      #4                  // Field _base64ToAsciiB:[B\n+        24: getfield      #17                 // Field _base64ToAsciiB:[B\n         27: iload_1\n         28: bipush        12\n         30: ishr\n         31: bipush        63\n         33: iand\n         34: baload\n         35: bastore\n         36: aload_2\n         37: iload_3\n         38: iinc          3, 1\n         41: aload_0\n-        42: getfield      #4                  // Field _base64ToAsciiB:[B\n+        42: getfield      #17                 // Field _base64ToAsciiB:[B\n         45: iload_1\n         46: bipush        6\n         48: ishr\n         49: bipush        63\n         51: iand\n         52: baload\n         53: bastore\n         54: aload_2\n         55: iload_3\n         56: iinc          3, 1\n         59: aload_0\n-        60: getfield      #4                  // Field _base64ToAsciiB:[B\n+        60: getfield      #17                 // Field _base64ToAsciiB:[B\n         63: iload_1\n         64: bipush        63\n         66: iand\n         67: baload\n         68: bastore\n         69: iload_3\n         70: ireturn\n@@ -1633,49 +1633,49 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=6, args_size=5\n          0: aload_3\n          1: iload         4\n          3: iinc          4, 1\n          6: aload_0\n-         7: getfield      #4                  // Field _base64ToAsciiB:[B\n+         7: getfield      #17                 // Field _base64ToAsciiB:[B\n         10: iload_1\n         11: bipush        18\n         13: ishr\n         14: bipush        63\n         16: iand\n         17: baload\n         18: bastore\n         19: aload_3\n         20: iload         4\n         22: iinc          4, 1\n         25: aload_0\n-        26: getfield      #4                  // Field _base64ToAsciiB:[B\n+        26: getfield      #17                 // Field _base64ToAsciiB:[B\n         29: iload_1\n         30: bipush        12\n         32: ishr\n         33: bipush        63\n         35: iand\n         36: baload\n         37: bastore\n         38: aload_0\n-        39: invokevirtual #33                 // Method usesPadding:()Z\n+        39: invokevirtual #119                // Method usesPadding:()Z\n         42: ifeq          93\n         45: aload_0\n-        46: getfield      #7                  // Field _paddingChar:C\n+        46: getfield      #29                 // Field _paddingChar:C\n         49: i2b\n         50: istore        5\n         52: aload_3\n         53: iload         4\n         55: iinc          4, 1\n         58: iload_2\n         59: iconst_2\n         60: if_icmpne     78\n         63: aload_0\n-        64: getfield      #4                  // Field _base64ToAsciiB:[B\n+        64: getfield      #17                 // Field _base64ToAsciiB:[B\n         67: iload_1\n         68: bipush        6\n         70: ishr\n         71: bipush        63\n         73: iand\n         74: baload\n         75: goto          80\n@@ -1690,15 +1690,15 @@\n         93: iload_2\n         94: iconst_2\n         95: if_icmpne     117\n         98: aload_3\n         99: iload         4\n        101: iinc          4, 1\n        104: aload_0\n-       105: getfield      #4                  // Field _base64ToAsciiB:[B\n+       105: getfield      #17                 // Field _base64ToAsciiB:[B\n        108: iload_1\n        109: bipush        6\n        111: ishr\n        112: bipush        63\n        114: iand\n        115: baload\n        116: bastore\n@@ -1741,15 +1741,15 @@\n     descriptor: ([B)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n-         3: invokevirtual #34                 // Method encode:([BZ)Ljava/lang/String;\n+         3: invokevirtual #123                // Method encode:([BZ)Ljava/lang/String;\n          6: areturn\n       LineNumberTable:\n         line 550: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lcom/fasterxml/jackson/core/Base64Variant;\n             0       7     1 input   [B\n@@ -1758,35 +1758,35 @@\n     descriptor: ([BZ)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=10, args_size=3\n          0: aload_1\n          1: arraylength\n          2: istore_3\n-         3: new           #11                 // class java/lang/StringBuilder\n+         3: new           #45                 // class java/lang/StringBuilder\n          6: dup\n          7: iload_3\n          8: iload_3\n          9: iconst_2\n         10: ishr\n         11: iadd\n         12: iload_3\n         13: iconst_3\n         14: ishr\n         15: iadd\n-        16: invokespecial #35                 // Method java/lang/StringBuilder.\"<init>\":(I)V\n+        16: invokespecial #127                // Method java/lang/StringBuilder.\"<init>\":(I)V\n         19: astore        4\n         21: iload_2\n         22: ifeq          33\n         25: aload         4\n         27: bipush        34\n-        29: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        29: invokevirtual #116                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         32: pop\n         33: aload_0\n-        34: invokevirtual #36                 // Method getMaxLineLength:()I\n+        34: invokevirtual #130                // Method getMaxLineLength:()I\n         37: iconst_2\n         38: ishr\n         39: istore        5\n         41: iconst_0\n         42: istore        6\n         44: iload_3\n         45: iconst_3\n@@ -1821,28 +1821,28 @@\n         96: sipush        255\n         99: iand\n        100: ior\n        101: istore        8\n        103: aload_0\n        104: aload         4\n        106: iload         8\n-       108: invokevirtual #37                 // Method encodeBase64Chunk:(Ljava/lang/StringBuilder;I)V\n+       108: invokevirtual #133                // Method encodeBase64Chunk:(Ljava/lang/StringBuilder;I)V\n        111: iinc          5, -1\n        114: iload         5\n        116: ifgt          143\n        119: aload         4\n        121: bipush        92\n-       123: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       123: invokevirtual #116                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n        126: pop\n        127: aload         4\n        129: bipush        110\n-       131: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       131: invokevirtual #116                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n        134: pop\n        135: aload_0\n-       136: invokevirtual #36                 // Method getMaxLineLength:()I\n+       136: invokevirtual #130                // Method getMaxLineLength:()I\n        139: iconst_2\n        140: ishr\n        141: istore        5\n        143: goto          49\n        146: iload_3\n        147: iload         6\n        149: isub\n@@ -1870,23 +1870,23 @@\n        190: ishl\n        191: ior\n        192: istore        9\n        194: aload_0\n        195: aload         4\n        197: iload         9\n        199: iload         8\n-       201: invokevirtual #38                 // Method encodeBase64Partial:(Ljava/lang/StringBuilder;II)V\n+       201: invokevirtual #137                // Method encodeBase64Partial:(Ljava/lang/StringBuilder;II)V\n        204: iload_2\n        205: ifeq          216\n        208: aload         4\n        210: bipush        34\n-       212: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       212: invokevirtual #116                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n        215: pop\n        216: aload         4\n-       218: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       218: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        221: areturn\n       LineNumberTable:\n         line 567: 0\n         line 568: 3\n         line 569: 21\n         line 570: 25\n         line 573: 33\n@@ -1945,35 +1945,35 @@\n     descriptor: ([BZLjava/lang/String;)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=11, args_size=4\n          0: aload_1\n          1: arraylength\n          2: istore        4\n-         4: new           #11                 // class java/lang/StringBuilder\n+         4: new           #45                 // class java/lang/StringBuilder\n          7: dup\n          8: iload         4\n         10: iload         4\n         12: iconst_2\n         13: ishr\n         14: iadd\n         15: iload         4\n         17: iconst_3\n         18: ishr\n         19: iadd\n-        20: invokespecial #35                 // Method java/lang/StringBuilder.\"<init>\":(I)V\n+        20: invokespecial #127                // Method java/lang/StringBuilder.\"<init>\":(I)V\n         23: astore        5\n         25: iload_2\n         26: ifeq          37\n         29: aload         5\n         31: bipush        34\n-        33: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        33: invokevirtual #116                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         36: pop\n         37: aload_0\n-        38: invokevirtual #36                 // Method getMaxLineLength:()I\n+        38: invokevirtual #130                // Method getMaxLineLength:()I\n         41: iconst_2\n         42: ishr\n         43: istore        6\n         45: iconst_0\n         46: istore        7\n         48: iload         4\n         50: iconst_3\n@@ -2008,24 +2008,24 @@\n        101: sipush        255\n        104: iand\n        105: ior\n        106: istore        9\n        108: aload_0\n        109: aload         5\n        111: iload         9\n-       113: invokevirtual #37                 // Method encodeBase64Chunk:(Ljava/lang/StringBuilder;I)V\n+       113: invokevirtual #133                // Method encodeBase64Chunk:(Ljava/lang/StringBuilder;I)V\n        116: iinc          6, -1\n        119: iload         6\n        121: ifgt          139\n        124: aload         5\n        126: aload_3\n-       127: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       127: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        130: pop\n        131: aload_0\n-       132: invokevirtual #36                 // Method getMaxLineLength:()I\n+       132: invokevirtual #130                // Method getMaxLineLength:()I\n        135: iconst_2\n        136: ishr\n        137: istore        6\n        139: goto          54\n        142: iload         4\n        144: iload         7\n        146: isub\n@@ -2053,23 +2053,23 @@\n        187: ishl\n        188: ior\n        189: istore        10\n        191: aload_0\n        192: aload         5\n        194: iload         10\n        196: iload         9\n-       198: invokevirtual #38                 // Method encodeBase64Partial:(Ljava/lang/StringBuilder;II)V\n+       198: invokevirtual #137                // Method encodeBase64Partial:(Ljava/lang/StringBuilder;II)V\n        201: iload_2\n        202: ifeq          213\n        205: aload         5\n        207: bipush        34\n-       209: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       209: invokevirtual #116                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n        212: pop\n        213: aload         5\n-       215: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       215: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        218: areturn\n       LineNumberTable:\n         line 624: 0\n         line 625: 4\n         line 626: 25\n         line 627: 29\n         line 630: 37\n@@ -2125,24 +2125,24 @@\n         frame_type = 11 /* same */\n \n   public byte[] decode(java.lang.String) throws java.lang.IllegalArgumentException;\n     descriptor: (Ljava/lang/String;)[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n-         0: new           #39                 // class com/fasterxml/jackson/core/util/ByteArrayBuilder\n+         0: new           #141                // class com/fasterxml/jackson/core/util/ByteArrayBuilder\n          3: dup\n-         4: invokespecial #40                 // Method com/fasterxml/jackson/core/util/ByteArrayBuilder.\"<init>\":()V\n+         4: invokespecial #143                // Method com/fasterxml/jackson/core/util/ByteArrayBuilder.\"<init>\":()V\n          7: astore_2\n          8: aload_0\n          9: aload_1\n         10: aload_2\n-        11: invokevirtual #41                 // Method decode:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V\n+        11: invokevirtual #144                // Method decode:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V\n         14: aload_2\n-        15: invokevirtual #42                 // Method com/fasterxml/jackson/core/util/ByteArrayBuilder.toByteArray:()[B\n+        15: invokevirtual #148                // Method com/fasterxml/jackson/core/util/ByteArrayBuilder.toByteArray:()[B\n         18: areturn\n       LineNumberTable:\n         line 675: 0\n         line 676: 8\n         line 677: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2156,208 +2156,208 @@\n     descriptor: (Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=8, args_size=3\n          0: iconst_0\n          1: istore_3\n          2: aload_1\n-         3: invokevirtual #9                  // Method java/lang/String.length:()I\n+         3: invokevirtual #37                 // Method java/lang/String.length:()I\n          6: istore        4\n          8: iload_3\n          9: iload         4\n         11: if_icmplt     17\n         14: goto          394\n         17: aload_1\n         18: iload_3\n         19: iinc          3, 1\n-        22: invokevirtual #43                 // Method java/lang/String.charAt:(I)C\n+        22: invokevirtual #152                // Method java/lang/String.charAt:(I)C\n         25: istore        5\n         27: iload         5\n         29: bipush        32\n         31: if_icmple     8\n         34: aload_0\n         35: iload         5\n-        37: invokevirtual #44                 // Method decodeBase64Char:(C)I\n+        37: invokevirtual #156                // Method decodeBase64Char:(C)I\n         40: istore        6\n         42: iload         6\n         44: ifge          55\n         47: aload_0\n         48: iload         5\n         50: iconst_0\n         51: aconst_null\n-        52: invokevirtual #45                 // Method _reportInvalidBase64:(CILjava/lang/String;)V\n+        52: invokevirtual #160                // Method _reportInvalidBase64:(CILjava/lang/String;)V\n         55: iload         6\n         57: istore        7\n         59: iload_3\n         60: iload         4\n         62: if_icmplt     69\n         65: aload_0\n-        66: invokevirtual #46                 // Method _reportBase64EOF:()V\n+        66: invokevirtual #164                // Method _reportBase64EOF:()V\n         69: aload_1\n         70: iload_3\n         71: iinc          3, 1\n-        74: invokevirtual #43                 // Method java/lang/String.charAt:(I)C\n+        74: invokevirtual #152                // Method java/lang/String.charAt:(I)C\n         77: istore        5\n         79: aload_0\n         80: iload         5\n-        82: invokevirtual #44                 // Method decodeBase64Char:(C)I\n+        82: invokevirtual #156                // Method decodeBase64Char:(C)I\n         85: istore        6\n         87: iload         6\n         89: ifge          100\n         92: aload_0\n         93: iload         5\n         95: iconst_1\n         96: aconst_null\n-        97: invokevirtual #45                 // Method _reportInvalidBase64:(CILjava/lang/String;)V\n+        97: invokevirtual #160                // Method _reportInvalidBase64:(CILjava/lang/String;)V\n        100: iload         7\n        102: bipush        6\n        104: ishl\n        105: iload         6\n        107: ior\n        108: istore        7\n        110: iload_3\n        111: iload         4\n        113: if_icmplt     142\n        116: aload_0\n-       117: invokevirtual #47                 // Method requiresPaddingOnRead:()Z\n+       117: invokevirtual #167                // Method requiresPaddingOnRead:()Z\n        120: ifne          138\n        123: iload         7\n        125: iconst_4\n        126: ishr\n        127: istore        7\n        129: aload_2\n        130: iload         7\n-       132: invokevirtual #48                 // Method com/fasterxml/jackson/core/util/ByteArrayBuilder.append:(I)V\n+       132: invokevirtual #170                // Method com/fasterxml/jackson/core/util/ByteArrayBuilder.append:(I)V\n        135: goto          394\n        138: aload_0\n-       139: invokevirtual #46                 // Method _reportBase64EOF:()V\n+       139: invokevirtual #164                // Method _reportBase64EOF:()V\n        142: aload_1\n        143: iload_3\n        144: iinc          3, 1\n-       147: invokevirtual #43                 // Method java/lang/String.charAt:(I)C\n+       147: invokevirtual #152                // Method java/lang/String.charAt:(I)C\n        150: istore        5\n        152: aload_0\n        153: iload         5\n-       155: invokevirtual #44                 // Method decodeBase64Char:(C)I\n+       155: invokevirtual #156                // Method decodeBase64Char:(C)I\n        158: istore        6\n        160: iload         6\n        162: ifge          269\n        165: iload         6\n        167: bipush        -2\n        169: if_icmpeq     180\n        172: aload_0\n        173: iload         5\n        175: iconst_2\n        176: aconst_null\n-       177: invokevirtual #45                 // Method _reportInvalidBase64:(CILjava/lang/String;)V\n+       177: invokevirtual #160                // Method _reportInvalidBase64:(CILjava/lang/String;)V\n        180: aload_0\n-       181: invokevirtual #49                 // Method acceptsPaddingOnRead:()Z\n+       181: invokevirtual #172                // Method acceptsPaddingOnRead:()Z\n        184: ifne          191\n        187: aload_0\n-       188: invokevirtual #50                 // Method _reportBase64UnexpectedPadding:()V\n+       188: invokevirtual #175                // Method _reportBase64UnexpectedPadding:()V\n        191: iload_3\n        192: iload         4\n        194: if_icmplt     201\n        197: aload_0\n-       198: invokevirtual #46                 // Method _reportBase64EOF:()V\n+       198: invokevirtual #164                // Method _reportBase64EOF:()V\n        201: aload_1\n        202: iload_3\n        203: iinc          3, 1\n-       206: invokevirtual #43                 // Method java/lang/String.charAt:(I)C\n+       206: invokevirtual #152                // Method java/lang/String.charAt:(I)C\n        209: istore        5\n        211: aload_0\n        212: iload         5\n-       214: invokevirtual #51                 // Method usesPaddingChar:(C)Z\n+       214: invokevirtual #178                // Method usesPaddingChar:(C)Z\n        217: ifne          254\n        220: aload_0\n        221: iload         5\n        223: iconst_3\n-       224: new           #11                 // class java/lang/StringBuilder\n+       224: new           #45                 // class java/lang/StringBuilder\n        227: dup\n-       228: invokespecial #12                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       231: ldc           #52                 // String expected padding character \\'\n-       233: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       228: invokespecial #47                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       231: ldc           #182                // String expected padding character \\'\n+       233: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        236: aload_0\n-       237: invokevirtual #53                 // Method getPaddingChar:()C\n-       240: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       243: ldc           #54                 // String \\'\n-       245: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       248: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       251: invokevirtual #45                 // Method _reportInvalidBase64:(CILjava/lang/String;)V\n+       237: invokevirtual #184                // Method getPaddingChar:()C\n+       240: invokevirtual #116                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       243: ldc           #188                // String \\'\n+       245: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       248: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       251: invokevirtual #160                // Method _reportInvalidBase64:(CILjava/lang/String;)V\n        254: iload         7\n        256: iconst_4\n        257: ishr\n        258: istore        7\n        260: aload_2\n        261: iload         7\n-       263: invokevirtual #48                 // Method com/fasterxml/jackson/core/util/ByteArrayBuilder.append:(I)V\n+       263: invokevirtual #170                // Method com/fasterxml/jackson/core/util/ByteArrayBuilder.append:(I)V\n        266: goto          8\n        269: iload         7\n        271: bipush        6\n        273: ishl\n        274: iload         6\n        276: ior\n        277: istore        7\n        279: iload_3\n        280: iload         4\n        282: if_icmplt     311\n        285: aload_0\n-       286: invokevirtual #47                 // Method requiresPaddingOnRead:()Z\n+       286: invokevirtual #167                // Method requiresPaddingOnRead:()Z\n        289: ifne          307\n        292: iload         7\n        294: iconst_2\n        295: ishr\n        296: istore        7\n        298: aload_2\n        299: iload         7\n-       301: invokevirtual #55                 // Method com/fasterxml/jackson/core/util/ByteArrayBuilder.appendTwoBytes:(I)V\n+       301: invokevirtual #190                // Method com/fasterxml/jackson/core/util/ByteArrayBuilder.appendTwoBytes:(I)V\n        304: goto          394\n        307: aload_0\n-       308: invokevirtual #46                 // Method _reportBase64EOF:()V\n+       308: invokevirtual #164                // Method _reportBase64EOF:()V\n        311: aload_1\n        312: iload_3\n        313: iinc          3, 1\n-       316: invokevirtual #43                 // Method java/lang/String.charAt:(I)C\n+       316: invokevirtual #152                // Method java/lang/String.charAt:(I)C\n        319: istore        5\n        321: aload_0\n        322: iload         5\n-       324: invokevirtual #44                 // Method decodeBase64Char:(C)I\n+       324: invokevirtual #156                // Method decodeBase64Char:(C)I\n        327: istore        6\n        329: iload         6\n        331: ifge          375\n        334: iload         6\n        336: bipush        -2\n        338: if_icmpeq     349\n        341: aload_0\n        342: iload         5\n        344: iconst_3\n        345: aconst_null\n-       346: invokevirtual #45                 // Method _reportInvalidBase64:(CILjava/lang/String;)V\n+       346: invokevirtual #160                // Method _reportInvalidBase64:(CILjava/lang/String;)V\n        349: aload_0\n-       350: invokevirtual #49                 // Method acceptsPaddingOnRead:()Z\n+       350: invokevirtual #172                // Method acceptsPaddingOnRead:()Z\n        353: ifne          360\n        356: aload_0\n-       357: invokevirtual #50                 // Method _reportBase64UnexpectedPadding:()V\n+       357: invokevirtual #175                // Method _reportBase64UnexpectedPadding:()V\n        360: iload         7\n        362: iconst_2\n        363: ishr\n        364: istore        7\n        366: aload_2\n        367: iload         7\n-       369: invokevirtual #55                 // Method com/fasterxml/jackson/core/util/ByteArrayBuilder.appendTwoBytes:(I)V\n+       369: invokevirtual #190                // Method com/fasterxml/jackson/core/util/ByteArrayBuilder.appendTwoBytes:(I)V\n        372: goto          391\n        375: iload         7\n        377: bipush        6\n        379: ishl\n        380: iload         6\n        382: ior\n        383: istore        7\n        385: aload_2\n        386: iload         7\n-       388: invokevirtual #56                 // Method com/fasterxml/jackson/core/util/ByteArrayBuilder.appendThreeBytes:(I)V\n+       388: invokevirtual #193                // Method com/fasterxml/jackson/core/util/ByteArrayBuilder.appendThreeBytes:(I)V\n        391: goto          8\n        394: return\n       LineNumberTable:\n         line 698: 0\n         line 699: 2\n         line 706: 8\n         line 707: 14\n@@ -2457,15 +2457,15 @@\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field _name:Ljava/lang/String;\n+         1: getfield      #21                 // Field _name:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 798: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lcom/fasterxml/jackson/core/Base64Variant;\n \n@@ -2478,48 +2478,48 @@\n          1: aload_0\n          2: if_acmpne     7\n          5: iconst_1\n          6: ireturn\n          7: aload_1\n          8: ifnull        22\n         11: aload_1\n-        12: invokevirtual #57                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        12: invokevirtual #196                // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         15: aload_0\n-        16: invokevirtual #57                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        16: invokevirtual #196                // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         19: if_acmpeq     24\n         22: iconst_0\n         23: ireturn\n         24: aload_1\n-        25: checkcast     #20                 // class com/fasterxml/jackson/core/Base64Variant\n+        25: checkcast     #8                  // class com/fasterxml/jackson/core/Base64Variant\n         28: astore_2\n         29: aload_2\n-        30: getfield      #7                  // Field _paddingChar:C\n+        30: getfield      #29                 // Field _paddingChar:C\n         33: aload_0\n-        34: getfield      #7                  // Field _paddingChar:C\n+        34: getfield      #29                 // Field _paddingChar:C\n         37: if_icmpne     91\n         40: aload_2\n-        41: getfield      #8                  // Field _maxLineLength:I\n+        41: getfield      #33                 // Field _maxLineLength:I\n         44: aload_0\n-        45: getfield      #8                  // Field _maxLineLength:I\n+        45: getfield      #33                 // Field _maxLineLength:I\n         48: if_icmpne     91\n         51: aload_2\n-        52: getfield      #6                  // Field _writePadding:Z\n+        52: getfield      #25                 // Field _writePadding:Z\n         55: aload_0\n-        56: getfield      #6                  // Field _writePadding:Z\n+        56: getfield      #25                 // Field _writePadding:Z\n         59: if_icmpne     91\n         62: aload_2\n-        63: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+        63: getfield      #85                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n         66: aload_0\n-        67: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+        67: getfield      #85                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n         70: if_acmpne     91\n         73: aload_0\n-        74: getfield      #5                  // Field _name:Ljava/lang/String;\n+        74: getfield      #21                 // Field _name:Ljava/lang/String;\n         77: aload_2\n-        78: getfield      #5                  // Field _name:Ljava/lang/String;\n-        81: invokevirtual #58                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        78: getfield      #21                 // Field _name:Ljava/lang/String;\n+        81: invokevirtual #200                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         84: ifeq          91\n         87: iconst_1\n         88: goto          92\n         91: iconst_0\n         92: ireturn\n       LineNumberTable:\n         line 804: 0\n@@ -2545,16 +2545,16 @@\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field _name:Ljava/lang/String;\n-         4: invokevirtual #59                 // Method java/lang/String.hashCode:()I\n+         1: getfield      #21                 // Field _name:Ljava/lang/String;\n+         4: invokevirtual #204                // Method java/lang/String.hashCode:()I\n          7: ireturn\n       LineNumberTable:\n         line 818: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lcom/fasterxml/jackson/core/Base64Variant;\n \n@@ -2562,108 +2562,108 @@\n     descriptor: (CILjava/lang/String;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=5, args_size=4\n          0: iload_1\n          1: bipush        32\n          3: if_icmpgt     49\n-         6: new           #11                 // class java/lang/StringBuilder\n+         6: new           #45                 // class java/lang/StringBuilder\n          9: dup\n-        10: invokespecial #12                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        13: ldc           #60                 // String Illegal white space character (code 0x\n-        15: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        10: invokespecial #47                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        13: ldc           #207                // String Illegal white space character (code 0x\n+        15: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         18: iload_1\n-        19: invokestatic  #61                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;\n-        22: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        25: ldc           #62                 // String ) as character #\n-        27: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        19: invokestatic  #209                // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;\n+        22: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        25: ldc           #215                // String ) as character #\n+        27: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         30: iload_2\n         31: iconst_1\n         32: iadd\n-        33: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        36: ldc           #63                 // String  of 4-char base64 unit: can only used between units\n-        38: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        41: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        33: invokevirtual #54                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        36: ldc           #217                // String  of 4-char base64 unit: can only used between units\n+        38: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        41: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         44: astore        4\n         46: goto          184\n         49: aload_0\n         50: iload_1\n-        51: invokevirtual #51                 // Method usesPaddingChar:(C)Z\n+        51: invokevirtual #178                // Method usesPaddingChar:(C)Z\n         54: ifeq          100\n-        57: new           #11                 // class java/lang/StringBuilder\n+        57: new           #45                 // class java/lang/StringBuilder\n         60: dup\n-        61: invokespecial #12                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        64: ldc           #64                 // String Unexpected padding character (\\'\n-        66: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        61: invokespecial #47                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        64: ldc           #219                // String Unexpected padding character (\\'\n+        66: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         69: aload_0\n-        70: invokevirtual #53                 // Method getPaddingChar:()C\n-        73: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-        76: ldc           #65                 // String \\') as character #\n-        78: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        70: invokevirtual #184                // Method getPaddingChar:()C\n+        73: invokevirtual #116                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        76: ldc           #221                // String \\') as character #\n+        78: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         81: iload_2\n         82: iconst_1\n         83: iadd\n-        84: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        87: ldc           #66                 // String  of 4-char base64 unit: padding only legal as 3rd or 4th character\n-        89: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        92: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        84: invokevirtual #54                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        87: ldc           #223                // String  of 4-char base64 unit: padding only legal as 3rd or 4th character\n+        89: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        92: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         95: astore        4\n         97: goto          184\n        100: iload_1\n-       101: invokestatic  #67                 // Method java/lang/Character.isDefined:(C)Z\n+       101: invokestatic  #225                // Method java/lang/Character.isDefined:(C)Z\n        104: ifeq          114\n        107: iload_1\n-       108: invokestatic  #68                 // Method java/lang/Character.isISOControl:(C)Z\n+       108: invokestatic  #230                // Method java/lang/Character.isISOControl:(C)Z\n        111: ifeq          146\n-       114: new           #11                 // class java/lang/StringBuilder\n+       114: new           #45                 // class java/lang/StringBuilder\n        117: dup\n-       118: invokespecial #12                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       121: ldc           #69                 // String Illegal character (code 0x\n-       123: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       118: invokespecial #47                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       121: ldc           #233                // String Illegal character (code 0x\n+       123: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        126: iload_1\n-       127: invokestatic  #61                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;\n-       130: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       133: ldc           #70                 // String ) in base64 content\n-       135: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       138: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       127: invokestatic  #209                // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;\n+       130: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       133: ldc           #235                // String ) in base64 content\n+       135: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       138: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        141: astore        4\n        143: goto          184\n-       146: new           #11                 // class java/lang/StringBuilder\n+       146: new           #45                 // class java/lang/StringBuilder\n        149: dup\n-       150: invokespecial #12                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       153: ldc           #71                 // String Illegal character \\'\n-       155: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       150: invokespecial #47                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       153: ldc           #237                // String Illegal character \\'\n+       155: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        158: iload_1\n-       159: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       162: ldc           #72                 // String \\' (code 0x\n-       164: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       159: invokevirtual #116                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       162: ldc           #239                // String \\' (code 0x\n+       164: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        167: iload_1\n-       168: invokestatic  #61                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;\n-       171: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       174: ldc           #70                 // String ) in base64 content\n-       176: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       179: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       168: invokestatic  #209                // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;\n+       171: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       174: ldc           #235                // String ) in base64 content\n+       176: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       179: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        182: astore        4\n        184: aload_3\n        185: ifnull        214\n-       188: new           #11                 // class java/lang/StringBuilder\n+       188: new           #45                 // class java/lang/StringBuilder\n        191: dup\n-       192: invokespecial #12                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       192: invokespecial #47                 // Method java/lang/StringBuilder.\"<init>\":()V\n        195: aload         4\n-       197: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       200: ldc           #73                 // String :\n-       202: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       197: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       200: ldc           #241                // String :\n+       202: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        205: aload_3\n-       206: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       209: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       206: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       209: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        212: astore        4\n-       214: new           #10                 // class java/lang/IllegalArgumentException\n+       214: new           #43                 // class java/lang/IllegalArgumentException\n        217: dup\n        218: aload         4\n-       220: invokespecial #18                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       220: invokespecial #63                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n        223: athrow\n       LineNumberTable:\n         line 837: 0\n         line 838: 6\n         line 839: 49\n         line 840: 57\n         line 841: 100\n@@ -2695,95 +2695,95 @@\n       throws java.lang.IllegalArgumentException\n \n   protected void _reportBase64EOF() throws java.lang.IllegalArgumentException;\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: new           #10                 // class java/lang/IllegalArgumentException\n+         0: new           #43                 // class java/lang/IllegalArgumentException\n          3: dup\n          4: aload_0\n-         5: invokevirtual #74                 // Method missingPaddingMessage:()Ljava/lang/String;\n-         8: invokespecial #18                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         5: invokevirtual #243                // Method missingPaddingMessage:()Ljava/lang/String;\n+         8: invokespecial #63                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         11: athrow\n       LineNumberTable:\n         line 854: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lcom/fasterxml/jackson/core/Base64Variant;\n     Exceptions:\n       throws java.lang.IllegalArgumentException\n \n   protected void _reportBase64UnexpectedPadding() throws java.lang.IllegalArgumentException;\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: new           #10                 // class java/lang/IllegalArgumentException\n+         0: new           #43                 // class java/lang/IllegalArgumentException\n          3: dup\n          4: aload_0\n-         5: invokevirtual #75                 // Method unexpectedPaddingMessage:()Ljava/lang/String;\n-         8: invokespecial #18                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         5: invokevirtual #246                // Method unexpectedPaddingMessage:()Ljava/lang/String;\n+         8: invokespecial #63                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         11: athrow\n       LineNumberTable:\n         line 858: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lcom/fasterxml/jackson/core/Base64Variant;\n     Exceptions:\n       throws java.lang.IllegalArgumentException\n \n   protected java.lang.String unexpectedPaddingMessage();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=5, locals=1, args_size=1\n-         0: ldc           #76                 // String Unexpected end of base64-encoded String: base64 variant \\'%s\\' expects no padding at the end while decoding. This Base64Variant might have been incorrectly configured\n+         0: ldc           #249                // String Unexpected end of base64-encoded String: base64 variant \\'%s\\' expects no padding at the end while decoding. This Base64Variant might have been incorrectly configured\n          2: iconst_1\n-         3: anewarray     #77                 // class java/lang/Object\n+         3: anewarray     #2                  // class java/lang/Object\n          6: dup\n          7: iconst_0\n          8: aload_0\n-         9: invokevirtual #78                 // Method getName:()Ljava/lang/String;\n+         9: invokevirtual #251                // Method getName:()Ljava/lang/String;\n         12: aastore\n-        13: invokestatic  #79                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        13: invokestatic  #254                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n         16: areturn\n       LineNumberTable:\n         line 870: 0\n         line 871: 9\n         line 870: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lcom/fasterxml/jackson/core/Base64Variant;\n \n   public java.lang.String missingPaddingMessage();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n-         0: ldc           #80                 // String Unexpected end of base64-encoded String: base64 variant \\'%s\\' expects padding (one or more \\'%c\\' characters) at the end. This Base64Variant might have been incorrectly configured\n-         2: iconst_2\n-         3: anewarray     #77                 // class java/lang/Object\n-         6: dup\n-         7: iconst_0\n-         8: aload_0\n-         9: invokevirtual #78                 // Method getName:()Ljava/lang/String;\n-        12: aastore\n-        13: dup\n-        14: iconst_1\n-        15: aload_0\n-        16: invokevirtual #53                 // Method getPaddingChar:()C\n-        19: invokestatic  #81                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-        22: aastore\n-        23: invokestatic  #79                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        26: areturn\n+         0: ldc_w         #258                // String Unexpected end of base64-encoded String: base64 variant \\'%s\\' expects padding (one or more \\'%c\\' characters) at the end. This Base64Variant might have been incorrectly configured\n+         3: iconst_2\n+         4: anewarray     #2                  // class java/lang/Object\n+         7: dup\n+         8: iconst_0\n+         9: aload_0\n+        10: invokevirtual #251                // Method getName:()Ljava/lang/String;\n+        13: aastore\n+        14: dup\n+        15: iconst_1\n+        16: aload_0\n+        17: invokevirtual #184                // Method getPaddingChar:()C\n+        20: invokestatic  #260                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+        23: aastore\n+        24: invokestatic  #254                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        27: areturn\n       LineNumberTable:\n         line 883: 0\n-        line 884: 9\n-        line 883: 23\n+        line 884: 10\n+        line 883: 24\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      27     0  this   Lcom/fasterxml/jackson/core/Base64Variant;\n+            0      28     0  this   Lcom/fasterxml/jackson/core/Base64Variant;\n }\n SourceFile: \"Base64Variant.java\"\n InnerClasses:\n-  public static final #84= #83 of #20;    // PaddingReadBehaviour=class com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour of class com/fasterxml/jackson/core/Base64Variant\n+  public static final #363= #77 of #8;    // PaddingReadBehaviour=class com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour of class com/fasterxml/jackson/core/Base64Variant\n"}]}
