{"diffoscope-json-version": 1, "source1": "first/ArchiveStreamFactory.class", "source2": "second/ArchiveStreamFactory.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,397 +1,397 @@\n-  SHA-256 checksum fa7816b82067cb4f54b25b704793d509a47f4e3109b42dc17d59d1df8a426a02\n+  SHA-256 checksum fd4b8bc5223ed3231df65a995b23ca410d6b842ad74e1ad3b8588e08fe872f8b\n   Compiled from \"ArchiveStreamFactory.java\"\n public class org.apache.commons.compress.archivers.ArchiveStreamFactory implements org.apache.commons.compress.archivers.ArchiveStreamProvider\n   minor version: 0\n   major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #34                         // org/apache/commons/compress/archivers/ArchiveStreamFactory\n-  super_class: #125                       // java/lang/Object\n+  this_class: #2                          // org/apache/commons/compress/archivers/ArchiveStreamFactory\n+  super_class: #86                        // java/lang/Object\n   interfaces: 1, fields: 16, methods: 23, attributes: 3\n Constant pool:\n-    #1 = Methodref          #34.#206      // org/apache/commons/compress/archivers/ArchiveStreamFactory.findArchiveStreamProviders:()Ljava/util/ArrayList;\n-    #2 = Fieldref           #34.#207      // org/apache/commons/compress/archivers/ArchiveStreamFactory.SINGLETON:Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n-    #3 = Methodref          #34.#208      // org/apache/commons/compress/archivers/ArchiveStreamFactory.serviceLoaderIterator:()Ljava/util/Iterator;\n-    #4 = Methodref          #209.#210     // org/apache/commons/compress/utils/Lists.newArrayList:(Ljava/util/Iterator;)Ljava/util/ArrayList;\n-    #5 = InterfaceMethodref #211.#212     // java/util/Set.iterator:()Ljava/util/Iterator;\n-    #6 = InterfaceMethodref #161.#213     // java/util/Iterator.hasNext:()Z\n-    #7 = InterfaceMethodref #161.#214     // java/util/Iterator.next:()Ljava/lang/Object;\n-    #8 = Class              #215          // java/lang/String\n-    #9 = Methodref          #34.#216      // org/apache/commons/compress/archivers/ArchiveStreamFactory.toKey:(Ljava/lang/String;)Ljava/lang/String;\n-   #10 = Methodref          #217.#218     // java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #11 = Class              #219          // org/apache/commons/compress/utils/ServiceLoaderIterator\n-   #12 = Class              #220          // org/apache/commons/compress/archivers/ArchiveStreamProvider\n-   #13 = Methodref          #11.#221      // org/apache/commons/compress/utils/ServiceLoaderIterator.\"<init>\":(Ljava/lang/Class;)V\n-   #14 = Fieldref           #222.#223     // java/util/Locale.ROOT:Ljava/util/Locale;\n-   #15 = Methodref          #8.#224       // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-   #16 = Class              #225          // org/apache/commons/compress/archivers/ArchiveStreamFactory$1\n-   #17 = Methodref          #16.#226      // org/apache/commons/compress/archivers/ArchiveStreamFactory$1.\"<init>\":()V\n-   #18 = Methodref          #227.#228     // java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n-   #19 = Class              #229          // java/util/SortedMap\n-   #20 = Class              #230          // org/apache/commons/compress/archivers/ArchiveStreamFactory$2\n-   #21 = Methodref          #20.#226      // org/apache/commons/compress/archivers/ArchiveStreamFactory$2.\"<init>\":()V\n-   #22 = Methodref          #34.#231      // org/apache/commons/compress/archivers/ArchiveStreamFactory.\"<init>\":(Ljava/lang/String;)V\n-   #23 = Methodref          #125.#226     // java/lang/Object.\"<init>\":()V\n-   #24 = Fieldref           #34.#232      // org/apache/commons/compress/archivers/ArchiveStreamFactory.encoding:Ljava/lang/String;\n-   #25 = Fieldref           #34.#233      // org/apache/commons/compress/archivers/ArchiveStreamFactory.entryEncoding:Ljava/lang/String;\n-   #26 = Class              #234          // java/lang/IllegalStateException\n-   #27 = String             #235          // Cannot overide encoding set by the constructor\n-   #28 = Methodref          #26.#231      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #29 = Methodref          #34.#236      // org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n-   #30 = Class              #237          // java/lang/IllegalArgumentException\n-   #31 = String             #238          // Archivername must not be null.\n-   #32 = Methodref          #30.#231      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #33 = String             #239          // InputStream must not be null.\n-   #34 = Class              #240          // org/apache/commons/compress/archivers/ArchiveStreamFactory\n-   #35 = String             #241          // ar\n-   #36 = Methodref          #8.#242       // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-   #37 = Class              #243          // org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n-   #38 = Methodref          #37.#244      // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #39 = String             #245          // arj\n-   #40 = Class              #246          // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream\n-   #41 = Methodref          #40.#247      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #42 = Methodref          #40.#244      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #43 = String             #248          // zip\n-   #44 = Class              #249          // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n-   #45 = Methodref          #44.#247      // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #46 = Methodref          #44.#244      // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #47 = String             #250          // tar\n-   #48 = Class              #251          // org/apache/commons/compress/archivers/tar/TarArchiveInputStream\n-   #49 = Methodref          #48.#247      // org/apache/commons/compress/archivers/tar/TarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #50 = Methodref          #48.#244      // org/apache/commons/compress/archivers/tar/TarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #51 = String             #252          // jar\n-   #52 = Class              #253          // org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n-   #53 = Methodref          #52.#247      // org/apache/commons/compress/archivers/jar/JarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #54 = Methodref          #52.#244      // org/apache/commons/compress/archivers/jar/JarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #55 = String             #254          // cpio\n-   #56 = Class              #255          // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream\n-   #57 = Methodref          #56.#247      // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #58 = Methodref          #56.#244      // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #59 = String             #256          // dump\n-   #60 = Class              #257          // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n-   #61 = Methodref          #60.#247      // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #62 = Methodref          #60.#244      // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #63 = String             #258          // 7z\n-   #64 = Class              #259          // org/apache/commons/compress/archivers/StreamingNotSupportedException\n-   #65 = Methodref          #64.#231      // org/apache/commons/compress/archivers/StreamingNotSupportedException.\"<init>\":(Ljava/lang/String;)V\n-   #66 = Methodref          #34.#260      // org/apache/commons/compress/archivers/ArchiveStreamFactory.getArchiveInputStreamProviders:()Ljava/util/SortedMap;\n-   #67 = InterfaceMethodref #19.#261      // java/util/SortedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #68 = InterfaceMethodref #12.#236      // org/apache/commons/compress/archivers/ArchiveStreamProvider.createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n-   #69 = Class              #262          // org/apache/commons/compress/archivers/ArchiveException\n-   #70 = InvokeDynamic      #0:#266       // #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-   #71 = Methodref          #69.#231      // org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;)V\n-   #72 = Methodref          #34.#267      // org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n-   #73 = String             #268          // OutputStream must not be null.\n-   #74 = Class              #269          // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n-   #75 = Methodref          #74.#270      // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #76 = Class              #271          // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n-   #77 = Methodref          #76.#270      // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #78 = Methodref          #76.#272      // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.setEncoding:(Ljava/lang/String;)V\n-   #79 = Class              #273          // org/apache/commons/compress/archivers/tar/TarArchiveOutputStream\n-   #80 = Methodref          #79.#274      // org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-   #81 = Methodref          #79.#270      // org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #82 = Class              #275          // org/apache/commons/compress/archivers/jar/JarArchiveOutputStream\n-   #83 = Methodref          #82.#274      // org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-   #84 = Methodref          #82.#270      // org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #85 = Class              #276          // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n-   #86 = Methodref          #85.#274      // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-   #87 = Methodref          #85.#270      // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #88 = Methodref          #34.#277      // org/apache/commons/compress/archivers/ArchiveStreamFactory.getArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n-   #89 = InterfaceMethodref #12.#267      // org/apache/commons/compress/archivers/ArchiveStreamProvider.createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n-   #90 = Methodref          #34.#278      // org/apache/commons/compress/archivers/ArchiveStreamFactory.detect:(Ljava/io/InputStream;)Ljava/lang/String;\n-   #91 = Methodref          #34.#279      // org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n-   #92 = String             #280          // Stream must not be null.\n-   #93 = Methodref          #191.#281     // java/io/InputStream.markSupported:()Z\n-   #94 = String             #282          // Mark is not supported.\n-   #95 = Methodref          #191.#283     // java/io/InputStream.mark:(I)V\n-   #96 = Methodref          #284.#285     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n-   #97 = Methodref          #191.#286     // java/io/InputStream.reset:()V\n-   #98 = Class              #287          // java/io/IOException\n-   #99 = String             #288          // IOException while reading signature.\n-  #100 = Methodref          #69.#289      // org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n-  #101 = Methodref          #44.#290      // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches:([BI)Z\n-  #102 = Methodref          #52.#290      // org/apache/commons/compress/archivers/jar/JarArchiveInputStream.matches:([BI)Z\n-  #103 = Methodref          #37.#290      // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.matches:([BI)Z\n-  #104 = Methodref          #56.#290      // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.matches:([BI)Z\n-  #105 = Methodref          #40.#290      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.matches:([BI)Z\n-  #106 = Methodref          #291.#290     // org/apache/commons/compress/archivers/sevenz/SevenZFile.matches:([BI)Z\n-  #107 = String             #292          // IOException while reading dump signature\n-  #108 = Methodref          #60.#290      // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.matches:([BI)Z\n-  #109 = String             #293          // IOException while reading tar signature\n-  #110 = Methodref          #48.#290      // org/apache/commons/compress/archivers/tar/TarArchiveInputStream.matches:([BI)Z\n-  #111 = Class              #294          // java/io/ByteArrayInputStream\n-  #112 = Methodref          #111.#295     // java/io/ByteArrayInputStream.\"<init>\":([B)V\n-  #113 = Methodref          #48.#296      // org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry:()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n-  #114 = Methodref          #297.#298     // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isCheckSumOK:()Z\n-  #115 = Methodref          #284.#299     // org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n-  #116 = Class              #300          // java/lang/Exception\n-  #117 = String             #301          // No Archiver found for the stream signature\n-  #118 = Fieldref           #34.#302      // org/apache/commons/compress/archivers/ArchiveStreamFactory.archiveInputStreamProviders:Ljava/util/SortedMap;\n-  #119 = Methodref          #34.#303      // org/apache/commons/compress/archivers/ArchiveStreamFactory.findAvailableArchiveInputStreamProviders:()Ljava/util/SortedMap;\n-  #120 = Methodref          #304.#305     // java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n-  #121 = Fieldref           #34.#306      // org/apache/commons/compress/archivers/ArchiveStreamFactory.archiveOutputStreamProviders:Ljava/util/SortedMap;\n-  #122 = Methodref          #34.#307      // org/apache/commons/compress/archivers/ArchiveStreamFactory.findAvailableArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n-  #123 = Methodref          #308.#309     // org/apache/commons/compress/utils/Sets.newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n-  #124 = Methodref          #34.#226      // org/apache/commons/compress/archivers/ArchiveStreamFactory.\"<init>\":()V\n-  #125 = Class              #310          // java/lang/Object\n-  #126 = Utf8               InnerClasses\n-  #127 = Utf8               TAR_HEADER_SIZE\n-  #128 = Utf8               I\n-  #129 = Utf8               ConstantValue\n-  #130 = Integer            512\n-  #131 = Utf8               DUMP_SIGNATURE_SIZE\n-  #132 = Integer            32\n-  #133 = Utf8               SIGNATURE_SIZE\n-  #134 = Integer            12\n-  #135 = Utf8               SINGLETON\n-  #136 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n-  #137 = Utf8               AR\n-  #138 = Utf8               Ljava/lang/String;\n-  #139 = Utf8               ARJ\n-  #140 = Utf8               CPIO\n-  #141 = Utf8               DUMP\n-  #142 = Utf8               JAR\n-  #143 = Utf8               TAR\n-  #144 = Utf8               ZIP\n-  #145 = Utf8               SEVEN_Z\n-  #146 = Utf8               encoding\n-  #147 = Utf8               entryEncoding\n-  #148 = Utf8               archiveInputStreamProviders\n-  #149 = Utf8               Ljava/util/SortedMap;\n-  #150 = Utf8               Signature\n-  #151 = Utf8               Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n-  #152 = Utf8               archiveOutputStreamProviders\n-  #153 = Utf8               findArchiveStreamProviders\n-  #154 = Utf8               ()Ljava/util/ArrayList;\n-  #155 = Utf8               Code\n-  #156 = Utf8               LineNumberTable\n-  #157 = Utf8               ()Ljava/util/ArrayList<Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n-  #158 = Utf8               putAll\n-  #159 = Utf8               (Ljava/util/Set;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap;)V\n-  #160 = Utf8               StackMapTable\n-  #161 = Class              #311          // java/util/Iterator\n-  #162 = Utf8               (Ljava/util/Set<Ljava/lang/String;>;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;)V\n-  #163 = Utf8               serviceLoaderIterator\n-  #164 = Utf8               ()Ljava/util/Iterator;\n-  #165 = Utf8               ()Ljava/util/Iterator<Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n-  #166 = Utf8               toKey\n-  #167 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #168 = Utf8               findAvailableArchiveInputStreamProviders\n-  #169 = Utf8               ()Ljava/util/SortedMap;\n-  #170 = Utf8               ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n-  #171 = Utf8               findAvailableArchiveOutputStreamProviders\n-  #172 = Utf8               <init>\n-  #173 = Utf8               ()V\n-  #174 = Utf8               (Ljava/lang/String;)V\n-  #175 = Utf8               getEntryEncoding\n-  #176 = Utf8               ()Ljava/lang/String;\n-  #177 = Utf8               setEntryEncoding\n-  #178 = Utf8               Deprecated\n-  #179 = Utf8               RuntimeVisibleAnnotations\n-  #180 = Utf8               Ljava/lang/Deprecated;\n-  #181 = Utf8               createArchiveInputStream\n-  #182 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n-  #183 = Utf8               Exceptions\n-  #184 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n-  #185 = Utf8               createArchiveOutputStream\n-  #186 = Utf8               (Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n-  #187 = Utf8               (Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n-  #188 = Utf8               (Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n-  #189 = Utf8               detect\n-  #190 = Utf8               (Ljava/io/InputStream;)Ljava/lang/String;\n-  #191 = Class              #312          // java/io/InputStream\n-  #192 = Class              #313          // \"[B\"\n-  #193 = Class              #314          // java/lang/Throwable\n-  #194 = Utf8               getArchiveInputStreamProviders\n-  #195 = Utf8               getArchiveOutputStreamProviders\n-  #196 = Utf8               getInputStreamArchiveNames\n-  #197 = Utf8               ()Ljava/util/Set;\n-  #198 = Utf8               ()Ljava/util/Set<Ljava/lang/String;>;\n-  #199 = Utf8               getOutputStreamArchiveNames\n-  #200 = Utf8               access$000\n-  #201 = Utf8               ()Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n-  #202 = Utf8               access$100\n-  #203 = Utf8               <clinit>\n-  #204 = Utf8               SourceFile\n-  #205 = Utf8               ArchiveStreamFactory.java\n-  #206 = NameAndType        #153:#154     // findArchiveStreamProviders:()Ljava/util/ArrayList;\n-  #207 = NameAndType        #135:#136     // SINGLETON:Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n-  #208 = NameAndType        #163:#164     // serviceLoaderIterator:()Ljava/util/Iterator;\n-  #209 = Class              #315          // org/apache/commons/compress/utils/Lists\n-  #210 = NameAndType        #316:#317     // newArrayList:(Ljava/util/Iterator;)Ljava/util/ArrayList;\n-  #211 = Class              #318          // java/util/Set\n-  #212 = NameAndType        #319:#164     // iterator:()Ljava/util/Iterator;\n-  #213 = NameAndType        #320:#321     // hasNext:()Z\n-  #214 = NameAndType        #322:#323     // next:()Ljava/lang/Object;\n-  #215 = Utf8               java/lang/String\n-  #216 = NameAndType        #166:#167     // toKey:(Ljava/lang/String;)Ljava/lang/String;\n-  #217 = Class              #324          // java/util/TreeMap\n-  #218 = NameAndType        #325:#326     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #219 = Utf8               org/apache/commons/compress/utils/ServiceLoaderIterator\n-  #220 = Utf8               org/apache/commons/compress/archivers/ArchiveStreamProvider\n-  #221 = NameAndType        #172:#327     // \"<init>\":(Ljava/lang/Class;)V\n-  #222 = Class              #328          // java/util/Locale\n-  #223 = NameAndType        #329:#330     // ROOT:Ljava/util/Locale;\n-  #224 = NameAndType        #331:#332     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #225 = Utf8               org/apache/commons/compress/archivers/ArchiveStreamFactory$1\n-  #226 = NameAndType        #172:#173     // \"<init>\":()V\n-  #227 = Class              #333          // java/security/AccessController\n-  #228 = NameAndType        #334:#335     // doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n-  #229 = Utf8               java/util/SortedMap\n-  #230 = Utf8               org/apache/commons/compress/archivers/ArchiveStreamFactory$2\n-  #231 = NameAndType        #172:#174     // \"<init>\":(Ljava/lang/String;)V\n-  #232 = NameAndType        #146:#138     // encoding:Ljava/lang/String;\n-  #233 = NameAndType        #147:#138     // entryEncoding:Ljava/lang/String;\n-  #234 = Utf8               java/lang/IllegalStateException\n-  #235 = Utf8               Cannot overide encoding set by the constructor\n-  #236 = NameAndType        #181:#184     // createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n-  #237 = Utf8               java/lang/IllegalArgumentException\n-  #238 = Utf8               Archivername must not be null.\n-  #239 = Utf8               InputStream must not be null.\n-  #240 = Utf8               org/apache/commons/compress/archivers/ArchiveStreamFactory\n-  #241 = Utf8               ar\n-  #242 = NameAndType        #336:#337     // equalsIgnoreCase:(Ljava/lang/String;)Z\n-  #243 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n-  #244 = NameAndType        #172:#338     // \"<init>\":(Ljava/io/InputStream;)V\n-  #245 = Utf8               arj\n-  #246 = Utf8               org/apache/commons/compress/archivers/arj/ArjArchiveInputStream\n-  #247 = NameAndType        #172:#339     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-  #248 = Utf8               zip\n-  #249 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n-  #250 = Utf8               tar\n-  #251 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveInputStream\n-  #252 = Utf8               jar\n-  #253 = Utf8               org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n-  #254 = Utf8               cpio\n-  #255 = Utf8               org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream\n-  #256 = Utf8               dump\n-  #257 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n-  #258 = Utf8               7z\n-  #259 = Utf8               org/apache/commons/compress/archivers/StreamingNotSupportedException\n-  #260 = NameAndType        #194:#169     // getArchiveInputStreamProviders:()Ljava/util/SortedMap;\n-  #261 = NameAndType        #340:#341     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #262 = Utf8               org/apache/commons/compress/archivers/ArchiveException\n-  #263 = Utf8               BootstrapMethods\n-  #264 = MethodHandle       6:#342        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #265 = String             #343          // Archiver: \\u0001 not found.\n-  #266 = NameAndType        #344:#167     // makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-  #267 = NameAndType        #185:#187     // createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n-  #268 = Utf8               OutputStream must not be null.\n-  #269 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n-  #270 = NameAndType        #172:#345     // \"<init>\":(Ljava/io/OutputStream;)V\n-  #271 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n-  #272 = NameAndType        #346:#174     // setEncoding:(Ljava/lang/String;)V\n-  #273 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveOutputStream\n-  #274 = NameAndType        #172:#347     // \"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-  #275 = Utf8               org/apache/commons/compress/archivers/jar/JarArchiveOutputStream\n-  #276 = Utf8               org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n-  #277 = NameAndType        #195:#169     // getArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n-  #278 = NameAndType        #189:#190     // detect:(Ljava/io/InputStream;)Ljava/lang/String;\n-  #279 = NameAndType        #181:#182     // createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n-  #280 = Utf8               Stream must not be null.\n-  #281 = NameAndType        #348:#321     // markSupported:()Z\n-  #282 = Utf8               Mark is not supported.\n-  #283 = NameAndType        #349:#350     // mark:(I)V\n-  #284 = Class              #351          // org/apache/commons/compress/utils/IOUtils\n-  #285 = NameAndType        #352:#353     // readFully:(Ljava/io/InputStream;[B)I\n-  #286 = NameAndType        #354:#173     // reset:()V\n-  #287 = Utf8               java/io/IOException\n-  #288 = Utf8               IOException while reading signature.\n-  #289 = NameAndType        #172:#355     // \"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n-  #290 = NameAndType        #356:#357     // matches:([BI)Z\n-  #291 = Class              #358          // org/apache/commons/compress/archivers/sevenz/SevenZFile\n-  #292 = Utf8               IOException while reading dump signature\n-  #293 = Utf8               IOException while reading tar signature\n-  #294 = Utf8               java/io/ByteArrayInputStream\n-  #295 = NameAndType        #172:#359     // \"<init>\":([B)V\n-  #296 = NameAndType        #360:#361     // getNextTarEntry:()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n-  #297 = Class              #362          // org/apache/commons/compress/archivers/tar/TarArchiveEntry\n-  #298 = NameAndType        #363:#321     // isCheckSumOK:()Z\n-  #299 = NameAndType        #364:#365     // closeQuietly:(Ljava/io/Closeable;)V\n-  #300 = Utf8               java/lang/Exception\n-  #301 = Utf8               No Archiver found for the stream signature\n-  #302 = NameAndType        #148:#149     // archiveInputStreamProviders:Ljava/util/SortedMap;\n-  #303 = NameAndType        #168:#169     // findAvailableArchiveInputStreamProviders:()Ljava/util/SortedMap;\n-  #304 = Class              #366          // java/util/Collections\n-  #305 = NameAndType        #367:#368     // unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n-  #306 = NameAndType        #152:#149     // archiveOutputStreamProviders:Ljava/util/SortedMap;\n-  #307 = NameAndType        #171:#169     // findAvailableArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n-  #308 = Class              #369          // org/apache/commons/compress/utils/Sets\n-  #309 = NameAndType        #370:#371     // newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n-  #310 = Utf8               java/lang/Object\n-  #311 = Utf8               java/util/Iterator\n-  #312 = Utf8               java/io/InputStream\n-  #313 = Utf8               [B\n-  #314 = Utf8               java/lang/Throwable\n-  #315 = Utf8               org/apache/commons/compress/utils/Lists\n-  #316 = Utf8               newArrayList\n-  #317 = Utf8               (Ljava/util/Iterator;)Ljava/util/ArrayList;\n-  #318 = Utf8               java/util/Set\n-  #319 = Utf8               iterator\n-  #320 = Utf8               hasNext\n-  #321 = Utf8               ()Z\n-  #322 = Utf8               next\n-  #323 = Utf8               ()Ljava/lang/Object;\n-  #324 = Utf8               java/util/TreeMap\n-  #325 = Utf8               put\n-  #326 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #327 = Utf8               (Ljava/lang/Class;)V\n-  #328 = Utf8               java/util/Locale\n-  #329 = Utf8               ROOT\n-  #330 = Utf8               Ljava/util/Locale;\n-  #331 = Utf8               toUpperCase\n-  #332 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n-  #333 = Utf8               java/security/AccessController\n-  #334 = Utf8               doPrivileged\n-  #335 = Utf8               (Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n-  #336 = Utf8               equalsIgnoreCase\n-  #337 = Utf8               (Ljava/lang/String;)Z\n-  #338 = Utf8               (Ljava/io/InputStream;)V\n-  #339 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n-  #340 = Utf8               get\n-  #341 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #342 = Methodref          #372.#373     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #343 = Utf8               Archiver: \\u0001 not found.\n-  #344 = Utf8               makeConcatWithConstants\n-  #345 = Utf8               (Ljava/io/OutputStream;)V\n-  #346 = Utf8               setEncoding\n-  #347 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)V\n-  #348 = Utf8               markSupported\n-  #349 = Utf8               mark\n-  #350 = Utf8               (I)V\n-  #351 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #352 = Utf8               readFully\n-  #353 = Utf8               (Ljava/io/InputStream;[B)I\n-  #354 = Utf8               reset\n-  #355 = Utf8               (Ljava/lang/String;Ljava/lang/Exception;)V\n-  #356 = Utf8               matches\n-  #357 = Utf8               ([BI)Z\n-  #358 = Utf8               org/apache/commons/compress/archivers/sevenz/SevenZFile\n-  #359 = Utf8               ([B)V\n-  #360 = Utf8               getNextTarEntry\n-  #361 = Utf8               ()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n-  #362 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveEntry\n-  #363 = Utf8               isCheckSumOK\n-  #364 = Utf8               closeQuietly\n-  #365 = Utf8               (Ljava/io/Closeable;)V\n-  #366 = Utf8               java/util/Collections\n-  #367 = Utf8               unmodifiableSortedMap\n-  #368 = Utf8               (Ljava/util/SortedMap;)Ljava/util/SortedMap;\n-  #369 = Utf8               org/apache/commons/compress/utils/Sets\n-  #370 = Utf8               newHashSet\n-  #371 = Utf8               ([Ljava/lang/Object;)Ljava/util/HashSet;\n-  #372 = Class              #374          // java/lang/invoke/StringConcatFactory\n-  #373 = NameAndType        #344:#377     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #374 = Utf8               java/lang/invoke/StringConcatFactory\n-  #375 = Class              #379          // java/lang/invoke/MethodHandles$Lookup\n-  #376 = Utf8               Lookup\n-  #377 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #378 = Class              #380          // java/lang/invoke/MethodHandles\n-  #379 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #380 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Methodref          #2.#3         // org/apache/commons/compress/archivers/ArchiveStreamFactory.findArchiveStreamProviders:()Ljava/util/ArrayList;\n+    #2 = Class              #4            // org/apache/commons/compress/archivers/ArchiveStreamFactory\n+    #3 = NameAndType        #5:#6         // findArchiveStreamProviders:()Ljava/util/ArrayList;\n+    #4 = Utf8               org/apache/commons/compress/archivers/ArchiveStreamFactory\n+    #5 = Utf8               findArchiveStreamProviders\n+    #6 = Utf8               ()Ljava/util/ArrayList;\n+    #7 = Fieldref           #2.#8         // org/apache/commons/compress/archivers/ArchiveStreamFactory.SINGLETON:Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n+    #8 = NameAndType        #9:#10        // SINGLETON:Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n+    #9 = Utf8               SINGLETON\n+   #10 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n+   #11 = Methodref          #2.#12        // org/apache/commons/compress/archivers/ArchiveStreamFactory.serviceLoaderIterator:()Ljava/util/Iterator;\n+   #12 = NameAndType        #13:#14       // serviceLoaderIterator:()Ljava/util/Iterator;\n+   #13 = Utf8               serviceLoaderIterator\n+   #14 = Utf8               ()Ljava/util/Iterator;\n+   #15 = Methodref          #16.#17       // org/apache/commons/compress/utils/Lists.newArrayList:(Ljava/util/Iterator;)Ljava/util/ArrayList;\n+   #16 = Class              #18           // org/apache/commons/compress/utils/Lists\n+   #17 = NameAndType        #19:#20       // newArrayList:(Ljava/util/Iterator;)Ljava/util/ArrayList;\n+   #18 = Utf8               org/apache/commons/compress/utils/Lists\n+   #19 = Utf8               newArrayList\n+   #20 = Utf8               (Ljava/util/Iterator;)Ljava/util/ArrayList;\n+   #21 = InterfaceMethodref #22.#23       // java/util/Set.iterator:()Ljava/util/Iterator;\n+   #22 = Class              #24           // java/util/Set\n+   #23 = NameAndType        #25:#14       // iterator:()Ljava/util/Iterator;\n+   #24 = Utf8               java/util/Set\n+   #25 = Utf8               iterator\n+   #26 = InterfaceMethodref #27.#28       // java/util/Iterator.hasNext:()Z\n+   #27 = Class              #29           // java/util/Iterator\n+   #28 = NameAndType        #30:#31       // hasNext:()Z\n+   #29 = Utf8               java/util/Iterator\n+   #30 = Utf8               hasNext\n+   #31 = Utf8               ()Z\n+   #32 = InterfaceMethodref #27.#33       // java/util/Iterator.next:()Ljava/lang/Object;\n+   #33 = NameAndType        #34:#35       // next:()Ljava/lang/Object;\n+   #34 = Utf8               next\n+   #35 = Utf8               ()Ljava/lang/Object;\n+   #36 = Class              #37           // java/lang/String\n+   #37 = Utf8               java/lang/String\n+   #38 = Methodref          #2.#39        // org/apache/commons/compress/archivers/ArchiveStreamFactory.toKey:(Ljava/lang/String;)Ljava/lang/String;\n+   #39 = NameAndType        #40:#41       // toKey:(Ljava/lang/String;)Ljava/lang/String;\n+   #40 = Utf8               toKey\n+   #41 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+   #42 = Methodref          #43.#44       // java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #43 = Class              #45           // java/util/TreeMap\n+   #44 = NameAndType        #46:#47       // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #45 = Utf8               java/util/TreeMap\n+   #46 = Utf8               put\n+   #47 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #48 = Class              #49           // org/apache/commons/compress/utils/ServiceLoaderIterator\n+   #49 = Utf8               org/apache/commons/compress/utils/ServiceLoaderIterator\n+   #50 = Class              #51           // org/apache/commons/compress/archivers/ArchiveStreamProvider\n+   #51 = Utf8               org/apache/commons/compress/archivers/ArchiveStreamProvider\n+   #52 = Methodref          #48.#53       // org/apache/commons/compress/utils/ServiceLoaderIterator.\"<init>\":(Ljava/lang/Class;)V\n+   #53 = NameAndType        #54:#55       // \"<init>\":(Ljava/lang/Class;)V\n+   #54 = Utf8               <init>\n+   #55 = Utf8               (Ljava/lang/Class;)V\n+   #56 = Fieldref           #57.#58       // java/util/Locale.ROOT:Ljava/util/Locale;\n+   #57 = Class              #59           // java/util/Locale\n+   #58 = NameAndType        #60:#61       // ROOT:Ljava/util/Locale;\n+   #59 = Utf8               java/util/Locale\n+   #60 = Utf8               ROOT\n+   #61 = Utf8               Ljava/util/Locale;\n+   #62 = Methodref          #36.#63       // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+   #63 = NameAndType        #64:#65       // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+   #64 = Utf8               toUpperCase\n+   #65 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+   #66 = Class              #67           // org/apache/commons/compress/archivers/ArchiveStreamFactory$1\n+   #67 = Utf8               org/apache/commons/compress/archivers/ArchiveStreamFactory$1\n+   #68 = Methodref          #66.#69       // org/apache/commons/compress/archivers/ArchiveStreamFactory$1.\"<init>\":()V\n+   #69 = NameAndType        #54:#70       // \"<init>\":()V\n+   #70 = Utf8               ()V\n+   #71 = Methodref          #72.#73       // java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n+   #72 = Class              #74           // java/security/AccessController\n+   #73 = NameAndType        #75:#76       // doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n+   #74 = Utf8               java/security/AccessController\n+   #75 = Utf8               doPrivileged\n+   #76 = Utf8               (Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n+   #77 = Class              #78           // java/util/SortedMap\n+   #78 = Utf8               java/util/SortedMap\n+   #79 = Class              #80           // org/apache/commons/compress/archivers/ArchiveStreamFactory$2\n+   #80 = Utf8               org/apache/commons/compress/archivers/ArchiveStreamFactory$2\n+   #81 = Methodref          #79.#69       // org/apache/commons/compress/archivers/ArchiveStreamFactory$2.\"<init>\":()V\n+   #82 = Methodref          #2.#83        // org/apache/commons/compress/archivers/ArchiveStreamFactory.\"<init>\":(Ljava/lang/String;)V\n+   #83 = NameAndType        #54:#84       // \"<init>\":(Ljava/lang/String;)V\n+   #84 = Utf8               (Ljava/lang/String;)V\n+   #85 = Methodref          #86.#69       // java/lang/Object.\"<init>\":()V\n+   #86 = Class              #87           // java/lang/Object\n+   #87 = Utf8               java/lang/Object\n+   #88 = Fieldref           #2.#89        // org/apache/commons/compress/archivers/ArchiveStreamFactory.encoding:Ljava/lang/String;\n+   #89 = NameAndType        #90:#91       // encoding:Ljava/lang/String;\n+   #90 = Utf8               encoding\n+   #91 = Utf8               Ljava/lang/String;\n+   #92 = Fieldref           #2.#93        // org/apache/commons/compress/archivers/ArchiveStreamFactory.entryEncoding:Ljava/lang/String;\n+   #93 = NameAndType        #94:#91       // entryEncoding:Ljava/lang/String;\n+   #94 = Utf8               entryEncoding\n+   #95 = Class              #96           // java/lang/IllegalStateException\n+   #96 = Utf8               java/lang/IllegalStateException\n+   #97 = String             #98           // Cannot overide encoding set by the constructor\n+   #98 = Utf8               Cannot overide encoding set by the constructor\n+   #99 = Methodref          #95.#83       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+  #100 = Methodref          #2.#101       // org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+  #101 = NameAndType        #102:#103     // createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+  #102 = Utf8               createArchiveInputStream\n+  #103 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+  #104 = Class              #105          // java/lang/IllegalArgumentException\n+  #105 = Utf8               java/lang/IllegalArgumentException\n+  #106 = String             #107          // Archivername must not be null.\n+  #107 = Utf8               Archivername must not be null.\n+  #108 = Methodref          #104.#83      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #109 = String             #110          // InputStream must not be null.\n+  #110 = Utf8               InputStream must not be null.\n+  #111 = String             #112          // ar\n+  #112 = Utf8               ar\n+  #113 = Methodref          #36.#114      // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+  #114 = NameAndType        #115:#116     // equalsIgnoreCase:(Ljava/lang/String;)Z\n+  #115 = Utf8               equalsIgnoreCase\n+  #116 = Utf8               (Ljava/lang/String;)Z\n+  #117 = Class              #118          // org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n+  #118 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n+  #119 = Methodref          #117.#120     // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #120 = NameAndType        #54:#121      // \"<init>\":(Ljava/io/InputStream;)V\n+  #121 = Utf8               (Ljava/io/InputStream;)V\n+  #122 = String             #123          // arj\n+  #123 = Utf8               arj\n+  #124 = Class              #125          // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream\n+  #125 = Utf8               org/apache/commons/compress/archivers/arj/ArjArchiveInputStream\n+  #126 = Methodref          #124.#127     // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #127 = NameAndType        #54:#128      // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #128 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n+  #129 = Methodref          #124.#120     // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #130 = String             #131          // zip\n+  #131 = Utf8               zip\n+  #132 = Class              #133          // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+  #133 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+  #134 = Methodref          #132.#127     // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #135 = Methodref          #132.#120     // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #136 = String             #137          // tar\n+  #137 = Utf8               tar\n+  #138 = Class              #139          // org/apache/commons/compress/archivers/tar/TarArchiveInputStream\n+  #139 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveInputStream\n+  #140 = Methodref          #138.#127     // org/apache/commons/compress/archivers/tar/TarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #141 = Methodref          #138.#120     // org/apache/commons/compress/archivers/tar/TarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #142 = String             #143          // jar\n+  #143 = Utf8               jar\n+  #144 = Class              #145          // org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n+  #145 = Utf8               org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n+  #146 = Methodref          #144.#127     // org/apache/commons/compress/archivers/jar/JarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #147 = Methodref          #144.#120     // org/apache/commons/compress/archivers/jar/JarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #148 = String             #149          // cpio\n+  #149 = Utf8               cpio\n+  #150 = Class              #151          // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream\n+  #151 = Utf8               org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream\n+  #152 = Methodref          #150.#127     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #153 = Methodref          #150.#120     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #154 = String             #155          // dump\n+  #155 = Utf8               dump\n+  #156 = Class              #157          // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n+  #157 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n+  #158 = Methodref          #156.#127     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #159 = Methodref          #156.#120     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #160 = String             #161          // 7z\n+  #161 = Utf8               7z\n+  #162 = Class              #163          // org/apache/commons/compress/archivers/StreamingNotSupportedException\n+  #163 = Utf8               org/apache/commons/compress/archivers/StreamingNotSupportedException\n+  #164 = Methodref          #162.#83      // org/apache/commons/compress/archivers/StreamingNotSupportedException.\"<init>\":(Ljava/lang/String;)V\n+  #165 = Methodref          #2.#166       // org/apache/commons/compress/archivers/ArchiveStreamFactory.getArchiveInputStreamProviders:()Ljava/util/SortedMap;\n+  #166 = NameAndType        #167:#168     // getArchiveInputStreamProviders:()Ljava/util/SortedMap;\n+  #167 = Utf8               getArchiveInputStreamProviders\n+  #168 = Utf8               ()Ljava/util/SortedMap;\n+  #169 = InterfaceMethodref #77.#170      // java/util/SortedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #170 = NameAndType        #171:#172     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #171 = Utf8               get\n+  #172 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #173 = InterfaceMethodref #50.#101      // org/apache/commons/compress/archivers/ArchiveStreamProvider.createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+  #174 = Class              #175          // org/apache/commons/compress/archivers/ArchiveException\n+  #175 = Utf8               org/apache/commons/compress/archivers/ArchiveException\n+  #176 = InvokeDynamic      #0:#177       // #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+  #177 = NameAndType        #178:#41      // makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+  #178 = Utf8               makeConcatWithConstants\n+  #179 = Methodref          #174.#83      // org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;)V\n+  #180 = Methodref          #2.#181       // org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n+  #181 = NameAndType        #182:#183     // createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n+  #182 = Utf8               createArchiveOutputStream\n+  #183 = Utf8               (Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n+  #184 = String             #185          // OutputStream must not be null.\n+  #185 = Utf8               OutputStream must not be null.\n+  #186 = Class              #187          // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n+  #187 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n+  #188 = Methodref          #186.#189     // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #189 = NameAndType        #54:#190      // \"<init>\":(Ljava/io/OutputStream;)V\n+  #190 = Utf8               (Ljava/io/OutputStream;)V\n+  #191 = Class              #192          // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n+  #192 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n+  #193 = Methodref          #191.#189     // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #194 = Methodref          #191.#195     // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.setEncoding:(Ljava/lang/String;)V\n+  #195 = NameAndType        #196:#84      // setEncoding:(Ljava/lang/String;)V\n+  #196 = Utf8               setEncoding\n+  #197 = Class              #198          // org/apache/commons/compress/archivers/tar/TarArchiveOutputStream\n+  #198 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveOutputStream\n+  #199 = Methodref          #197.#200     // org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+  #200 = NameAndType        #54:#201      // \"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+  #201 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)V\n+  #202 = Methodref          #197.#189     // org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #203 = Class              #204          // org/apache/commons/compress/archivers/jar/JarArchiveOutputStream\n+  #204 = Utf8               org/apache/commons/compress/archivers/jar/JarArchiveOutputStream\n+  #205 = Methodref          #203.#200     // org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+  #206 = Methodref          #203.#189     // org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #207 = Class              #208          // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n+  #208 = Utf8               org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n+  #209 = Methodref          #207.#200     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+  #210 = Methodref          #207.#189     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #211 = Methodref          #2.#212       // org/apache/commons/compress/archivers/ArchiveStreamFactory.getArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n+  #212 = NameAndType        #213:#168     // getArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n+  #213 = Utf8               getArchiveOutputStreamProviders\n+  #214 = InterfaceMethodref #50.#181      // org/apache/commons/compress/archivers/ArchiveStreamProvider.createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n+  #215 = Methodref          #2.#216       // org/apache/commons/compress/archivers/ArchiveStreamFactory.detect:(Ljava/io/InputStream;)Ljava/lang/String;\n+  #216 = NameAndType        #217:#218     // detect:(Ljava/io/InputStream;)Ljava/lang/String;\n+  #217 = Utf8               detect\n+  #218 = Utf8               (Ljava/io/InputStream;)Ljava/lang/String;\n+  #219 = Methodref          #2.#220       // org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+  #220 = NameAndType        #102:#221     // createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+  #221 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+  #222 = String             #223          // Stream must not be null.\n+  #223 = Utf8               Stream must not be null.\n+  #224 = Methodref          #225.#226     // java/io/InputStream.markSupported:()Z\n+  #225 = Class              #227          // java/io/InputStream\n+  #226 = NameAndType        #228:#31      // markSupported:()Z\n+  #227 = Utf8               java/io/InputStream\n+  #228 = Utf8               markSupported\n+  #229 = String             #230          // Mark is not supported.\n+  #230 = Utf8               Mark is not supported.\n+  #231 = Methodref          #225.#232     // java/io/InputStream.mark:(I)V\n+  #232 = NameAndType        #233:#234     // mark:(I)V\n+  #233 = Utf8               mark\n+  #234 = Utf8               (I)V\n+  #235 = Methodref          #236.#237     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+  #236 = Class              #238          // org/apache/commons/compress/utils/IOUtils\n+  #237 = NameAndType        #239:#240     // readFully:(Ljava/io/InputStream;[B)I\n+  #238 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #239 = Utf8               readFully\n+  #240 = Utf8               (Ljava/io/InputStream;[B)I\n+  #241 = Methodref          #225.#242     // java/io/InputStream.reset:()V\n+  #242 = NameAndType        #243:#70      // reset:()V\n+  #243 = Utf8               reset\n+  #244 = Class              #245          // java/io/IOException\n+  #245 = Utf8               java/io/IOException\n+  #246 = String             #247          // IOException while reading signature.\n+  #247 = Utf8               IOException while reading signature.\n+  #248 = Methodref          #174.#249     // org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n+  #249 = NameAndType        #54:#250      // \"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n+  #250 = Utf8               (Ljava/lang/String;Ljava/lang/Exception;)V\n+  #251 = Methodref          #132.#252     // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches:([BI)Z\n+  #252 = NameAndType        #253:#254     // matches:([BI)Z\n+  #253 = Utf8               matches\n+  #254 = Utf8               ([BI)Z\n+  #255 = Methodref          #144.#252     // org/apache/commons/compress/archivers/jar/JarArchiveInputStream.matches:([BI)Z\n+  #256 = Methodref          #117.#252     // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.matches:([BI)Z\n+  #257 = Methodref          #150.#252     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.matches:([BI)Z\n+  #258 = Methodref          #124.#252     // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.matches:([BI)Z\n+  #259 = Methodref          #260.#252     // org/apache/commons/compress/archivers/sevenz/SevenZFile.matches:([BI)Z\n+  #260 = Class              #261          // org/apache/commons/compress/archivers/sevenz/SevenZFile\n+  #261 = Utf8               org/apache/commons/compress/archivers/sevenz/SevenZFile\n+  #262 = String             #263          // IOException while reading dump signature\n+  #263 = Utf8               IOException while reading dump signature\n+  #264 = Methodref          #156.#252     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.matches:([BI)Z\n+  #265 = String             #266          // IOException while reading tar signature\n+  #266 = Utf8               IOException while reading tar signature\n+  #267 = Methodref          #138.#252     // org/apache/commons/compress/archivers/tar/TarArchiveInputStream.matches:([BI)Z\n+  #268 = Class              #269          // java/io/ByteArrayInputStream\n+  #269 = Utf8               java/io/ByteArrayInputStream\n+  #270 = Methodref          #268.#271     // java/io/ByteArrayInputStream.\"<init>\":([B)V\n+  #271 = NameAndType        #54:#272      // \"<init>\":([B)V\n+  #272 = Utf8               ([B)V\n+  #273 = Methodref          #138.#274     // org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry:()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n+  #274 = NameAndType        #275:#276     // getNextTarEntry:()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n+  #275 = Utf8               getNextTarEntry\n+  #276 = Utf8               ()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n+  #277 = Methodref          #278.#279     // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isCheckSumOK:()Z\n+  #278 = Class              #280          // org/apache/commons/compress/archivers/tar/TarArchiveEntry\n+  #279 = NameAndType        #281:#31      // isCheckSumOK:()Z\n+  #280 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveEntry\n+  #281 = Utf8               isCheckSumOK\n+  #282 = Methodref          #236.#283     // org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n+  #283 = NameAndType        #284:#285     // closeQuietly:(Ljava/io/Closeable;)V\n+  #284 = Utf8               closeQuietly\n+  #285 = Utf8               (Ljava/io/Closeable;)V\n+  #286 = Class              #287          // java/lang/Exception\n+  #287 = Utf8               java/lang/Exception\n+  #288 = String             #289          // No Archiver found for the stream signature\n+  #289 = Utf8               No Archiver found for the stream signature\n+  #290 = Fieldref           #2.#291       // org/apache/commons/compress/archivers/ArchiveStreamFactory.archiveInputStreamProviders:Ljava/util/SortedMap;\n+  #291 = NameAndType        #292:#293     // archiveInputStreamProviders:Ljava/util/SortedMap;\n+  #292 = Utf8               archiveInputStreamProviders\n+  #293 = Utf8               Ljava/util/SortedMap;\n+  #294 = Methodref          #2.#295       // org/apache/commons/compress/archivers/ArchiveStreamFactory.findAvailableArchiveInputStreamProviders:()Ljava/util/SortedMap;\n+  #295 = NameAndType        #296:#168     // findAvailableArchiveInputStreamProviders:()Ljava/util/SortedMap;\n+  #296 = Utf8               findAvailableArchiveInputStreamProviders\n+  #297 = Methodref          #298.#299     // java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n+  #298 = Class              #300          // java/util/Collections\n+  #299 = NameAndType        #301:#302     // unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n+  #300 = Utf8               java/util/Collections\n+  #301 = Utf8               unmodifiableSortedMap\n+  #302 = Utf8               (Ljava/util/SortedMap;)Ljava/util/SortedMap;\n+  #303 = Fieldref           #2.#304       // org/apache/commons/compress/archivers/ArchiveStreamFactory.archiveOutputStreamProviders:Ljava/util/SortedMap;\n+  #304 = NameAndType        #305:#293     // archiveOutputStreamProviders:Ljava/util/SortedMap;\n+  #305 = Utf8               archiveOutputStreamProviders\n+  #306 = Methodref          #2.#307       // org/apache/commons/compress/archivers/ArchiveStreamFactory.findAvailableArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n+  #307 = NameAndType        #308:#168     // findAvailableArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n+  #308 = Utf8               findAvailableArchiveOutputStreamProviders\n+  #309 = Methodref          #310.#311     // org/apache/commons/compress/utils/Sets.newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n+  #310 = Class              #312          // org/apache/commons/compress/utils/Sets\n+  #311 = NameAndType        #313:#314     // newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n+  #312 = Utf8               org/apache/commons/compress/utils/Sets\n+  #313 = Utf8               newHashSet\n+  #314 = Utf8               ([Ljava/lang/Object;)Ljava/util/HashSet;\n+  #315 = Methodref          #2.#69        // org/apache/commons/compress/archivers/ArchiveStreamFactory.\"<init>\":()V\n+  #316 = Utf8               TAR_HEADER_SIZE\n+  #317 = Utf8               I\n+  #318 = Utf8               ConstantValue\n+  #319 = Integer            512\n+  #320 = Utf8               DUMP_SIGNATURE_SIZE\n+  #321 = Integer            32\n+  #322 = Utf8               SIGNATURE_SIZE\n+  #323 = Integer            12\n+  #324 = Utf8               AR\n+  #325 = Utf8               ARJ\n+  #326 = Utf8               CPIO\n+  #327 = Utf8               DUMP\n+  #328 = Utf8               JAR\n+  #329 = Utf8               TAR\n+  #330 = Utf8               ZIP\n+  #331 = Utf8               SEVEN_Z\n+  #332 = Utf8               Signature\n+  #333 = Utf8               Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+  #334 = Utf8               Code\n+  #335 = Utf8               LineNumberTable\n+  #336 = Utf8               ()Ljava/util/ArrayList<Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+  #337 = Utf8               putAll\n+  #338 = Utf8               (Ljava/util/Set;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap;)V\n+  #339 = Utf8               StackMapTable\n+  #340 = Utf8               (Ljava/util/Set<Ljava/lang/String;>;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;)V\n+  #341 = Utf8               ()Ljava/util/Iterator<Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+  #342 = Utf8               ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+  #343 = Utf8               getEntryEncoding\n+  #344 = Utf8               ()Ljava/lang/String;\n+  #345 = Utf8               setEntryEncoding\n+  #346 = Utf8               Deprecated\n+  #347 = Utf8               RuntimeVisibleAnnotations\n+  #348 = Utf8               Ljava/lang/Deprecated;\n+  #349 = Utf8               Exceptions\n+  #350 = Utf8               (Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n+  #351 = Utf8               (Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+  #352 = Class              #353          // \"[B\"\n+  #353 = Utf8               [B\n+  #354 = Class              #355          // java/lang/Throwable\n+  #355 = Utf8               java/lang/Throwable\n+  #356 = Utf8               getInputStreamArchiveNames\n+  #357 = Utf8               ()Ljava/util/Set;\n+  #358 = Utf8               ()Ljava/util/Set<Ljava/lang/String;>;\n+  #359 = Utf8               getOutputStreamArchiveNames\n+  #360 = Utf8               access$000\n+  #361 = Utf8               ()Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n+  #362 = Utf8               access$100\n+  #363 = Utf8               <clinit>\n+  #364 = Utf8               SourceFile\n+  #365 = Utf8               ArchiveStreamFactory.java\n+  #366 = Utf8               BootstrapMethods\n+  #367 = MethodHandle       6:#368        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #368 = Methodref          #369.#370     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #369 = Class              #371          // java/lang/invoke/StringConcatFactory\n+  #370 = NameAndType        #178:#372     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #371 = Utf8               java/lang/invoke/StringConcatFactory\n+  #372 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #373 = String             #374          // Archiver: \\u0001 not found.\n+  #374 = Utf8               Archiver: \\u0001 not found.\n+  #375 = Utf8               InnerClasses\n+  #376 = Class              #377          // java/lang/invoke/MethodHandles$Lookup\n+  #377 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #378 = Class              #379          // java/lang/invoke/MethodHandles\n+  #379 = Utf8               java/lang/invoke/MethodHandles\n+  #380 = Utf8               Lookup\n {\n   private static final int TAR_HEADER_SIZE = 512;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 512\n \n   private static final int DUMP_SIGNATURE_SIZE = 32;\n@@ -455,374 +455,374 @@\n   private volatile java.lang.String entryEncoding;\n     descriptor: Ljava/lang/String;\n     flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE\n \n   private java.util.SortedMap<java.lang.String, org.apache.commons.compress.archivers.ArchiveStreamProvider> archiveInputStreamProviders;\n     descriptor: Ljava/util/SortedMap;\n     flags: (0x0002) ACC_PRIVATE\n-    Signature: #151                         // Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+    Signature: #333                         // Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n \n   private java.util.SortedMap<java.lang.String, org.apache.commons.compress.archivers.ArchiveStreamProvider> archiveOutputStreamProviders;\n     descriptor: Ljava/util/SortedMap;\n     flags: (0x0002) ACC_PRIVATE\n-    Signature: #151                         // Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+    Signature: #333                         // Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n \n   private static java.util.ArrayList<org.apache.commons.compress.archivers.ArchiveStreamProvider> findArchiveStreamProviders();\n     descriptor: ()Ljava/util/ArrayList;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: invokestatic  #3                  // Method serviceLoaderIterator:()Ljava/util/Iterator;\n-         3: invokestatic  #4                  // Method org/apache/commons/compress/utils/Lists.newArrayList:(Ljava/util/Iterator;)Ljava/util/ArrayList;\n+         0: invokestatic  #11                 // Method serviceLoaderIterator:()Ljava/util/Iterator;\n+         3: invokestatic  #15                 // Method org/apache/commons/compress/utils/Lists.newArrayList:(Ljava/util/Iterator;)Ljava/util/ArrayList;\n          6: areturn\n       LineNumberTable:\n         line 164: 0\n-    Signature: #157                         // ()Ljava/util/ArrayList<Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+    Signature: #336                         // ()Ljava/util/ArrayList<Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n \n   static void putAll(java.util.Set<java.lang.String>, org.apache.commons.compress.archivers.ArchiveStreamProvider, java.util.TreeMap<java.lang.String, org.apache.commons.compress.archivers.ArchiveStreamProvider>);\n     descriptor: (Ljava/util/Set;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap;)V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=3, locals=5, args_size=3\n          0: aload_0\n-         1: invokeinterface #5,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;\n+         1: invokeinterface #21,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;\n          6: astore_3\n          7: aload_3\n-         8: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z\n+         8: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         13: ifeq          41\n         16: aload_3\n-        17: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        22: checkcast     #8                  // class java/lang/String\n+        17: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        22: checkcast     #36                 // class java/lang/String\n         25: astore        4\n         27: aload_2\n         28: aload         4\n-        30: invokestatic  #9                  // Method toKey:(Ljava/lang/String;)Ljava/lang/String;\n+        30: invokestatic  #38                 // Method toKey:(Ljava/lang/String;)Ljava/lang/String;\n         33: aload_1\n-        34: invokevirtual #10                 // Method java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+        34: invokevirtual #42                 // Method java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n         37: pop\n         38: goto          7\n         41: return\n       LineNumberTable:\n         line 169: 0\n         line 170: 27\n         line 171: 38\n         line 172: 41\n       StackMapTable: number_of_entries = 2\n         frame_type = 252 /* append */\n           offset_delta = 7\n           locals = [ class java/util/Iterator ]\n         frame_type = 250 /* chop */\n           offset_delta = 33\n-    Signature: #162                         // (Ljava/util/Set<Ljava/lang/String;>;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;)V\n+    Signature: #340                         // (Ljava/util/Set<Ljava/lang/String;>;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;)V\n \n   private static java.util.Iterator<org.apache.commons.compress.archivers.ArchiveStreamProvider> serviceLoaderIterator();\n     descriptor: ()Ljava/util/Iterator;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=0, args_size=0\n-         0: new           #11                 // class org/apache/commons/compress/utils/ServiceLoaderIterator\n+         0: new           #48                 // class org/apache/commons/compress/utils/ServiceLoaderIterator\n          3: dup\n-         4: ldc           #12                 // class org/apache/commons/compress/archivers/ArchiveStreamProvider\n-         6: invokespecial #13                 // Method org/apache/commons/compress/utils/ServiceLoaderIterator.\"<init>\":(Ljava/lang/Class;)V\n+         4: ldc           #50                 // class org/apache/commons/compress/archivers/ArchiveStreamProvider\n+         6: invokespecial #52                 // Method org/apache/commons/compress/utils/ServiceLoaderIterator.\"<init>\":(Ljava/lang/Class;)V\n          9: areturn\n       LineNumberTable:\n         line 175: 0\n-    Signature: #165                         // ()Ljava/util/Iterator<Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+    Signature: #341                         // ()Ljava/util/Iterator<Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n \n   private static java.lang.String toKey(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #14                 // Field java/util/Locale.ROOT:Ljava/util/Locale;\n-         4: invokevirtual #15                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+         1: getstatic     #56                 // Field java/util/Locale.ROOT:Ljava/util/Locale;\n+         4: invokevirtual #62                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 179: 0\n \n   public static java.util.SortedMap<java.lang.String, org.apache.commons.compress.archivers.ArchiveStreamProvider> findAvailableArchiveInputStreamProviders();\n     descriptor: ()Ljava/util/SortedMap;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: new           #16                 // class org/apache/commons/compress/archivers/ArchiveStreamFactory$1\n+         0: new           #66                 // class org/apache/commons/compress/archivers/ArchiveStreamFactory$1\n          3: dup\n-         4: invokespecial #17                 // Method org/apache/commons/compress/archivers/ArchiveStreamFactory$1.\"<init>\":()V\n-         7: invokestatic  #18                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n-        10: checkcast     #19                 // class java/util/SortedMap\n+         4: invokespecial #68                 // Method org/apache/commons/compress/archivers/ArchiveStreamFactory$1.\"<init>\":()V\n+         7: invokestatic  #71                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n+        10: checkcast     #77                 // class java/util/SortedMap\n         13: areturn\n       LineNumberTable:\n         line 210: 0\n-    Signature: #170                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+    Signature: #342                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n \n   public static java.util.SortedMap<java.lang.String, org.apache.commons.compress.archivers.ArchiveStreamProvider> findAvailableArchiveOutputStreamProviders();\n     descriptor: ()Ljava/util/SortedMap;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: new           #20                 // class org/apache/commons/compress/archivers/ArchiveStreamFactory$2\n+         0: new           #79                 // class org/apache/commons/compress/archivers/ArchiveStreamFactory$2\n          3: dup\n-         4: invokespecial #21                 // Method org/apache/commons/compress/archivers/ArchiveStreamFactory$2.\"<init>\":()V\n-         7: invokestatic  #18                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n-        10: checkcast     #19                 // class java/util/SortedMap\n+         4: invokespecial #81                 // Method org/apache/commons/compress/archivers/ArchiveStreamFactory$2.\"<init>\":()V\n+         7: invokestatic  #71                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n+        10: checkcast     #77                 // class java/util/SortedMap\n         13: areturn\n       LineNumberTable:\n         line 251: 0\n-    Signature: #170                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+    Signature: #342                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n \n   public org.apache.commons.compress.archivers.ArchiveStreamFactory();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aconst_null\n-         2: invokespecial #22                 // Method \"<init>\":(Ljava/lang/String;)V\n+         2: invokespecial #82                 // Method \"<init>\":(Ljava/lang/String;)V\n          5: return\n       LineNumberTable:\n         line 268: 0\n         line 269: 5\n \n   public org.apache.commons.compress.archivers.ArchiveStreamFactory(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #23                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #85                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #24                 // Field encoding:Ljava/lang/String;\n+         6: putfield      #88                 // Field encoding:Ljava/lang/String;\n          9: aload_0\n         10: aload_1\n-        11: putfield      #25                 // Field entryEncoding:Ljava/lang/String;\n+        11: putfield      #92                 // Field entryEncoding:Ljava/lang/String;\n         14: return\n       LineNumberTable:\n         line 279: 0\n         line 280: 4\n         line 282: 9\n         line 283: 14\n \n   public java.lang.String getEntryEncoding();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #25                 // Field entryEncoding:Ljava/lang/String;\n+         1: getfield      #92                 // Field entryEncoding:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 293: 0\n \n   public void setEntryEncoding(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #24                 // Field encoding:Ljava/lang/String;\n+         1: getfield      #88                 // Field encoding:Ljava/lang/String;\n          4: ifnull        17\n-         7: new           #26                 // class java/lang/IllegalStateException\n+         7: new           #95                 // class java/lang/IllegalStateException\n         10: dup\n-        11: ldc           #27                 // String Cannot overide encoding set by the constructor\n-        13: invokespecial #28                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #97                 // String Cannot overide encoding set by the constructor\n+        13: invokespecial #99                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n         18: aload_1\n-        19: putfield      #25                 // Field entryEncoding:Ljava/lang/String;\n+        19: putfield      #92                 // Field entryEncoding:Ljava/lang/String;\n         22: return\n       LineNumberTable:\n         line 308: 0\n         line 309: 7\n         line 311: 17\n         line 312: 22\n       StackMapTable: number_of_entries = 1\n         frame_type = 17 /* same */\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #180()\n+      0: #348()\n         java.lang.Deprecated\n \n   public org.apache.commons.compress.archivers.ArchiveInputStream createArchiveInputStream(java.lang.String, java.io.InputStream) throws org.apache.commons.compress.archivers.ArchiveException;\n     descriptor: (Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: aload_0\n-         4: getfield      #25                 // Field entryEncoding:Ljava/lang/String;\n-         7: invokevirtual #29                 // Method createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+         4: getfield      #92                 // Field entryEncoding:Ljava/lang/String;\n+         7: invokevirtual #100                // Method createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n         10: areturn\n       LineNumberTable:\n         line 328: 0\n     Exceptions:\n       throws org.apache.commons.compress.archivers.ArchiveException\n \n   public org.apache.commons.compress.archivers.ArchiveInputStream createArchiveInputStream(java.lang.String, java.io.InputStream, java.lang.String) throws org.apache.commons.compress.archivers.ArchiveException;\n     descriptor: (Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_1\n          1: ifnonnull     14\n-         4: new           #30                 // class java/lang/IllegalArgumentException\n+         4: new           #104                // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #31                 // String Archivername must not be null.\n-        10: invokespecial #32                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #106                // String Archivername must not be null.\n+        10: invokespecial #108                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_2\n         15: ifnonnull     28\n-        18: new           #30                 // class java/lang/IllegalArgumentException\n+        18: new           #104                // class java/lang/IllegalArgumentException\n         21: dup\n-        22: ldc           #33                 // String InputStream must not be null.\n-        24: invokespecial #32                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        22: ldc           #109                // String InputStream must not be null.\n+        24: invokespecial #108                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         27: athrow\n-        28: ldc           #35                 // String ar\n+        28: ldc           #111                // String ar\n         30: aload_1\n-        31: invokevirtual #36                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+        31: invokevirtual #113                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n         34: ifeq          46\n-        37: new           #37                 // class org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n+        37: new           #117                // class org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n         40: dup\n         41: aload_2\n-        42: invokespecial #38                 // Method org/apache/commons/compress/archivers/ar/ArArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+        42: invokespecial #119                // Method org/apache/commons/compress/archivers/ar/ArArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n         45: areturn\n-        46: ldc           #39                 // String arj\n+        46: ldc           #122                // String arj\n         48: aload_1\n-        49: invokevirtual #36                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+        49: invokevirtual #113                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n         52: ifeq          78\n         55: aload_3\n         56: ifnull        69\n-        59: new           #40                 // class org/apache/commons/compress/archivers/arj/ArjArchiveInputStream\n+        59: new           #124                // class org/apache/commons/compress/archivers/arj/ArjArchiveInputStream\n         62: dup\n         63: aload_2\n         64: aload_3\n-        65: invokespecial #41                 // Method org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+        65: invokespecial #126                // Method org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n         68: areturn\n-        69: new           #40                 // class org/apache/commons/compress/archivers/arj/ArjArchiveInputStream\n+        69: new           #124                // class org/apache/commons/compress/archivers/arj/ArjArchiveInputStream\n         72: dup\n         73: aload_2\n-        74: invokespecial #42                 // Method org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+        74: invokespecial #129                // Method org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n         77: areturn\n-        78: ldc           #43                 // String zip\n+        78: ldc           #130                // String zip\n         80: aload_1\n-        81: invokevirtual #36                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+        81: invokevirtual #113                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n         84: ifeq          110\n         87: aload_3\n         88: ifnull        101\n-        91: new           #44                 // class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+        91: new           #132                // class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n         94: dup\n         95: aload_2\n         96: aload_3\n-        97: invokespecial #45                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+        97: invokespecial #134                // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n        100: areturn\n-       101: new           #44                 // class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+       101: new           #132                // class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n        104: dup\n        105: aload_2\n-       106: invokespecial #46                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+       106: invokespecial #135                // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n        109: areturn\n-       110: ldc           #47                 // String tar\n+       110: ldc           #136                // String tar\n        112: aload_1\n-       113: invokevirtual #36                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       113: invokevirtual #113                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n        116: ifeq          142\n        119: aload_3\n        120: ifnull        133\n-       123: new           #48                 // class org/apache/commons/compress/archivers/tar/TarArchiveInputStream\n+       123: new           #138                // class org/apache/commons/compress/archivers/tar/TarArchiveInputStream\n        126: dup\n        127: aload_2\n        128: aload_3\n-       129: invokespecial #49                 // Method org/apache/commons/compress/archivers/tar/TarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+       129: invokespecial #140                // Method org/apache/commons/compress/archivers/tar/TarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n        132: areturn\n-       133: new           #48                 // class org/apache/commons/compress/archivers/tar/TarArchiveInputStream\n+       133: new           #138                // class org/apache/commons/compress/archivers/tar/TarArchiveInputStream\n        136: dup\n        137: aload_2\n-       138: invokespecial #50                 // Method org/apache/commons/compress/archivers/tar/TarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+       138: invokespecial #141                // Method org/apache/commons/compress/archivers/tar/TarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n        141: areturn\n-       142: ldc           #51                 // String jar\n+       142: ldc           #142                // String jar\n        144: aload_1\n-       145: invokevirtual #36                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       145: invokevirtual #113                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n        148: ifeq          174\n        151: aload_3\n        152: ifnull        165\n-       155: new           #52                 // class org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n+       155: new           #144                // class org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n        158: dup\n        159: aload_2\n        160: aload_3\n-       161: invokespecial #53                 // Method org/apache/commons/compress/archivers/jar/JarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+       161: invokespecial #146                // Method org/apache/commons/compress/archivers/jar/JarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n        164: areturn\n-       165: new           #52                 // class org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n+       165: new           #144                // class org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n        168: dup\n        169: aload_2\n-       170: invokespecial #54                 // Method org/apache/commons/compress/archivers/jar/JarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+       170: invokespecial #147                // Method org/apache/commons/compress/archivers/jar/JarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n        173: areturn\n-       174: ldc           #55                 // String cpio\n+       174: ldc           #148                // String cpio\n        176: aload_1\n-       177: invokevirtual #36                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       177: invokevirtual #113                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n        180: ifeq          206\n        183: aload_3\n        184: ifnull        197\n-       187: new           #56                 // class org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream\n+       187: new           #150                // class org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream\n        190: dup\n        191: aload_2\n        192: aload_3\n-       193: invokespecial #57                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+       193: invokespecial #152                // Method org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n        196: areturn\n-       197: new           #56                 // class org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream\n+       197: new           #150                // class org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream\n        200: dup\n        201: aload_2\n-       202: invokespecial #58                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+       202: invokespecial #153                // Method org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n        205: areturn\n-       206: ldc           #59                 // String dump\n+       206: ldc           #154                // String dump\n        208: aload_1\n-       209: invokevirtual #36                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       209: invokevirtual #113                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n        212: ifeq          238\n        215: aload_3\n        216: ifnull        229\n-       219: new           #60                 // class org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n+       219: new           #156                // class org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n        222: dup\n        223: aload_2\n        224: aload_3\n-       225: invokespecial #61                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+       225: invokespecial #158                // Method org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n        228: areturn\n-       229: new           #60                 // class org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n+       229: new           #156                // class org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n        232: dup\n        233: aload_2\n-       234: invokespecial #62                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+       234: invokespecial #159                // Method org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n        237: areturn\n-       238: ldc           #63                 // String 7z\n+       238: ldc           #160                // String 7z\n        240: aload_1\n-       241: invokevirtual #36                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       241: invokevirtual #113                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n        244: ifeq          257\n-       247: new           #64                 // class org/apache/commons/compress/archivers/StreamingNotSupportedException\n+       247: new           #162                // class org/apache/commons/compress/archivers/StreamingNotSupportedException\n        250: dup\n-       251: ldc           #63                 // String 7z\n-       253: invokespecial #65                 // Method org/apache/commons/compress/archivers/StreamingNotSupportedException.\"<init>\":(Ljava/lang/String;)V\n+       251: ldc           #160                // String 7z\n+       253: invokespecial #164                // Method org/apache/commons/compress/archivers/StreamingNotSupportedException.\"<init>\":(Ljava/lang/String;)V\n        256: athrow\n        257: aload_0\n-       258: invokevirtual #66                 // Method getArchiveInputStreamProviders:()Ljava/util/SortedMap;\n+       258: invokevirtual #165                // Method getArchiveInputStreamProviders:()Ljava/util/SortedMap;\n        261: aload_1\n-       262: invokestatic  #9                  // Method toKey:(Ljava/lang/String;)Ljava/lang/String;\n-       265: invokeinterface #67,  2           // InterfaceMethod java/util/SortedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-       270: checkcast     #12                 // class org/apache/commons/compress/archivers/ArchiveStreamProvider\n+       262: invokestatic  #38                 // Method toKey:(Ljava/lang/String;)Ljava/lang/String;\n+       265: invokeinterface #169,  2          // InterfaceMethod java/util/SortedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+       270: checkcast     #50                 // class org/apache/commons/compress/archivers/ArchiveStreamProvider\n        273: astore        4\n        275: aload         4\n        277: ifnull        291\n        280: aload         4\n        282: aload_1\n        283: aload_2\n        284: aload_3\n-       285: invokeinterface #68,  4           // InterfaceMethod org/apache/commons/compress/archivers/ArchiveStreamProvider.createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+       285: invokeinterface #173,  4          // InterfaceMethod org/apache/commons/compress/archivers/ArchiveStreamProvider.createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n        290: areturn\n-       291: new           #69                 // class org/apache/commons/compress/archivers/ArchiveException\n+       291: new           #174                // class org/apache/commons/compress/archivers/ArchiveException\n        294: dup\n        295: aload_1\n-       296: invokedynamic #70,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-       301: invokespecial #71                 // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;)V\n+       296: invokedynamic #176,  0            // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+       301: invokespecial #179                // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;)V\n        304: athrow\n       LineNumberTable:\n         line 335: 0\n         line 336: 4\n         line 339: 14\n         line 340: 18\n         line 343: 28\n@@ -885,146 +885,146 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: aload_0\n-         4: getfield      #25                 // Field entryEncoding:Ljava/lang/String;\n-         7: invokevirtual #72                 // Method createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n+         4: getfield      #92                 // Field entryEncoding:Ljava/lang/String;\n+         7: invokevirtual #180                // Method createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n         10: areturn\n       LineNumberTable:\n         line 408: 0\n     Exceptions:\n       throws org.apache.commons.compress.archivers.ArchiveException\n \n   public org.apache.commons.compress.archivers.ArchiveOutputStream createArchiveOutputStream(java.lang.String, java.io.OutputStream, java.lang.String) throws org.apache.commons.compress.archivers.ArchiveException;\n     descriptor: (Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_1\n          1: ifnonnull     14\n-         4: new           #30                 // class java/lang/IllegalArgumentException\n+         4: new           #104                // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #31                 // String Archivername must not be null.\n-        10: invokespecial #32                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #106                // String Archivername must not be null.\n+        10: invokespecial #108                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_2\n         15: ifnonnull     28\n-        18: new           #30                 // class java/lang/IllegalArgumentException\n+        18: new           #104                // class java/lang/IllegalArgumentException\n         21: dup\n-        22: ldc           #73                 // String OutputStream must not be null.\n-        24: invokespecial #32                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        22: ldc           #184                // String OutputStream must not be null.\n+        24: invokespecial #108                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         27: athrow\n-        28: ldc           #35                 // String ar\n+        28: ldc           #111                // String ar\n         30: aload_1\n-        31: invokevirtual #36                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+        31: invokevirtual #113                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n         34: ifeq          46\n-        37: new           #74                 // class org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n+        37: new           #186                // class org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n         40: dup\n         41: aload_2\n-        42: invokespecial #75                 // Method org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+        42: invokespecial #188                // Method org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n         45: areturn\n-        46: ldc           #43                 // String zip\n+        46: ldc           #130                // String zip\n         48: aload_1\n-        49: invokevirtual #36                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+        49: invokevirtual #113                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n         52: ifeq          78\n-        55: new           #76                 // class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n+        55: new           #191                // class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n         58: dup\n         59: aload_2\n-        60: invokespecial #77                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+        60: invokespecial #193                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n         63: astore        4\n         65: aload_3\n         66: ifnull        75\n         69: aload         4\n         71: aload_3\n-        72: invokevirtual #78                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.setEncoding:(Ljava/lang/String;)V\n+        72: invokevirtual #194                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.setEncoding:(Ljava/lang/String;)V\n         75: aload         4\n         77: areturn\n-        78: ldc           #47                 // String tar\n+        78: ldc           #136                // String tar\n         80: aload_1\n-        81: invokevirtual #36                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+        81: invokevirtual #113                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n         84: ifeq          110\n         87: aload_3\n         88: ifnull        101\n-        91: new           #79                 // class org/apache/commons/compress/archivers/tar/TarArchiveOutputStream\n+        91: new           #197                // class org/apache/commons/compress/archivers/tar/TarArchiveOutputStream\n         94: dup\n         95: aload_2\n         96: aload_3\n-        97: invokespecial #80                 // Method org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+        97: invokespecial #199                // Method org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n        100: areturn\n-       101: new           #79                 // class org/apache/commons/compress/archivers/tar/TarArchiveOutputStream\n+       101: new           #197                // class org/apache/commons/compress/archivers/tar/TarArchiveOutputStream\n        104: dup\n        105: aload_2\n-       106: invokespecial #81                 // Method org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+       106: invokespecial #202                // Method org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n        109: areturn\n-       110: ldc           #51                 // String jar\n+       110: ldc           #142                // String jar\n        112: aload_1\n-       113: invokevirtual #36                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       113: invokevirtual #113                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n        116: ifeq          142\n        119: aload_3\n        120: ifnull        133\n-       123: new           #82                 // class org/apache/commons/compress/archivers/jar/JarArchiveOutputStream\n+       123: new           #203                // class org/apache/commons/compress/archivers/jar/JarArchiveOutputStream\n        126: dup\n        127: aload_2\n        128: aload_3\n-       129: invokespecial #83                 // Method org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+       129: invokespecial #205                // Method org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n        132: areturn\n-       133: new           #82                 // class org/apache/commons/compress/archivers/jar/JarArchiveOutputStream\n+       133: new           #203                // class org/apache/commons/compress/archivers/jar/JarArchiveOutputStream\n        136: dup\n        137: aload_2\n-       138: invokespecial #84                 // Method org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+       138: invokespecial #206                // Method org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n        141: areturn\n-       142: ldc           #55                 // String cpio\n+       142: ldc           #148                // String cpio\n        144: aload_1\n-       145: invokevirtual #36                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       145: invokevirtual #113                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n        148: ifeq          174\n        151: aload_3\n        152: ifnull        165\n-       155: new           #85                 // class org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n+       155: new           #207                // class org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n        158: dup\n        159: aload_2\n        160: aload_3\n-       161: invokespecial #86                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+       161: invokespecial #209                // Method org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n        164: areturn\n-       165: new           #85                 // class org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n+       165: new           #207                // class org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n        168: dup\n        169: aload_2\n-       170: invokespecial #87                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+       170: invokespecial #210                // Method org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n        173: areturn\n-       174: ldc           #63                 // String 7z\n+       174: ldc           #160                // String 7z\n        176: aload_1\n-       177: invokevirtual #36                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       177: invokevirtual #113                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n        180: ifeq          193\n-       183: new           #64                 // class org/apache/commons/compress/archivers/StreamingNotSupportedException\n+       183: new           #162                // class org/apache/commons/compress/archivers/StreamingNotSupportedException\n        186: dup\n-       187: ldc           #63                 // String 7z\n-       189: invokespecial #65                 // Method org/apache/commons/compress/archivers/StreamingNotSupportedException.\"<init>\":(Ljava/lang/String;)V\n+       187: ldc           #160                // String 7z\n+       189: invokespecial #164                // Method org/apache/commons/compress/archivers/StreamingNotSupportedException.\"<init>\":(Ljava/lang/String;)V\n        192: athrow\n        193: aload_0\n-       194: invokevirtual #88                 // Method getArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n+       194: invokevirtual #211                // Method getArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n        197: aload_1\n-       198: invokestatic  #9                  // Method toKey:(Ljava/lang/String;)Ljava/lang/String;\n-       201: invokeinterface #67,  2           // InterfaceMethod java/util/SortedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-       206: checkcast     #12                 // class org/apache/commons/compress/archivers/ArchiveStreamProvider\n+       198: invokestatic  #38                 // Method toKey:(Ljava/lang/String;)Ljava/lang/String;\n+       201: invokeinterface #169,  2          // InterfaceMethod java/util/SortedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+       206: checkcast     #50                 // class org/apache/commons/compress/archivers/ArchiveStreamProvider\n        209: astore        4\n        211: aload         4\n        213: ifnull        227\n        216: aload         4\n        218: aload_1\n        219: aload_2\n        220: aload_3\n-       221: invokeinterface #89,  4           // InterfaceMethod org/apache/commons/compress/archivers/ArchiveStreamProvider.createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n+       221: invokeinterface #214,  4          // InterfaceMethod org/apache/commons/compress/archivers/ArchiveStreamProvider.createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n        226: areturn\n-       227: new           #69                 // class org/apache/commons/compress/archivers/ArchiveException\n+       227: new           #174                // class org/apache/commons/compress/archivers/ArchiveException\n        230: dup\n        231: aload_1\n-       232: invokedynamic #70,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-       237: invokespecial #71                 // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;)V\n+       232: invokedynamic #176,  0            // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+       237: invokespecial #179                // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;)V\n        240: athrow\n       LineNumberTable:\n         line 415: 0\n         line 416: 4\n         line 418: 14\n         line 419: 18\n         line 422: 28\n@@ -1077,205 +1077,205 @@\n   public org.apache.commons.compress.archivers.ArchiveInputStream createArchiveInputStream(java.io.InputStream) throws org.apache.commons.compress.archivers.ArchiveException;\n     descriptor: (Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #90                 // Method detect:(Ljava/io/InputStream;)Ljava/lang/String;\n+         2: invokestatic  #215                // Method detect:(Ljava/io/InputStream;)Ljava/lang/String;\n          5: aload_1\n-         6: invokevirtual #91                 // Method createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+         6: invokevirtual #219                // Method createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n          9: areturn\n       LineNumberTable:\n         line 476: 0\n     Exceptions:\n       throws org.apache.commons.compress.archivers.ArchiveException\n \n   public static java.lang.String detect(java.io.InputStream) throws org.apache.commons.compress.archivers.ArchiveException;\n     descriptor: (Ljava/io/InputStream;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=8, args_size=1\n          0: aload_0\n          1: ifnonnull     14\n-         4: new           #30                 // class java/lang/IllegalArgumentException\n+         4: new           #104                // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #92                 // String Stream must not be null.\n-        10: invokespecial #32                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #222                // String Stream must not be null.\n+        10: invokespecial #108                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_0\n-        15: invokevirtual #93                 // Method java/io/InputStream.markSupported:()Z\n+        15: invokevirtual #224                // Method java/io/InputStream.markSupported:()Z\n         18: ifne          31\n-        21: new           #30                 // class java/lang/IllegalArgumentException\n+        21: new           #104                // class java/lang/IllegalArgumentException\n         24: dup\n-        25: ldc           #94                 // String Mark is not supported.\n-        27: invokespecial #32                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        25: ldc           #229                // String Mark is not supported.\n+        27: invokespecial #108                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         30: athrow\n         31: bipush        12\n         33: newarray       byte\n         35: astore_1\n         36: aload_0\n         37: aload_1\n         38: arraylength\n-        39: invokevirtual #95                 // Method java/io/InputStream.mark:(I)V\n+        39: invokevirtual #231                // Method java/io/InputStream.mark:(I)V\n         42: iconst_m1\n         43: istore_2\n         44: aload_0\n         45: aload_1\n-        46: invokestatic  #96                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+        46: invokestatic  #235                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n         49: istore_2\n         50: aload_0\n-        51: invokevirtual #97                 // Method java/io/InputStream.reset:()V\n+        51: invokevirtual #241                // Method java/io/InputStream.reset:()V\n         54: goto          69\n         57: astore_3\n-        58: new           #69                 // class org/apache/commons/compress/archivers/ArchiveException\n+        58: new           #174                // class org/apache/commons/compress/archivers/ArchiveException\n         61: dup\n-        62: ldc           #99                 // String IOException while reading signature.\n+        62: ldc           #246                // String IOException while reading signature.\n         64: aload_3\n-        65: invokespecial #100                // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n+        65: invokespecial #248                // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n         68: athrow\n         69: aload_1\n         70: iload_2\n-        71: invokestatic  #101                // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches:([BI)Z\n+        71: invokestatic  #251                // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches:([BI)Z\n         74: ifeq          80\n-        77: ldc           #43                 // String zip\n+        77: ldc           #130                // String zip\n         79: areturn\n         80: aload_1\n         81: iload_2\n-        82: invokestatic  #102                // Method org/apache/commons/compress/archivers/jar/JarArchiveInputStream.matches:([BI)Z\n+        82: invokestatic  #255                // Method org/apache/commons/compress/archivers/jar/JarArchiveInputStream.matches:([BI)Z\n         85: ifeq          91\n-        88: ldc           #51                 // String jar\n+        88: ldc           #142                // String jar\n         90: areturn\n         91: aload_1\n         92: iload_2\n-        93: invokestatic  #103                // Method org/apache/commons/compress/archivers/ar/ArArchiveInputStream.matches:([BI)Z\n+        93: invokestatic  #256                // Method org/apache/commons/compress/archivers/ar/ArArchiveInputStream.matches:([BI)Z\n         96: ifeq          102\n-        99: ldc           #35                 // String ar\n+        99: ldc           #111                // String ar\n        101: areturn\n        102: aload_1\n        103: iload_2\n-       104: invokestatic  #104                // Method org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.matches:([BI)Z\n+       104: invokestatic  #257                // Method org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.matches:([BI)Z\n        107: ifeq          113\n-       110: ldc           #55                 // String cpio\n+       110: ldc           #148                // String cpio\n        112: areturn\n        113: aload_1\n        114: iload_2\n-       115: invokestatic  #105                // Method org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.matches:([BI)Z\n+       115: invokestatic  #258                // Method org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.matches:([BI)Z\n        118: ifeq          124\n-       121: ldc           #39                 // String arj\n+       121: ldc           #122                // String arj\n        123: areturn\n        124: aload_1\n        125: iload_2\n-       126: invokestatic  #106                // Method org/apache/commons/compress/archivers/sevenz/SevenZFile.matches:([BI)Z\n+       126: invokestatic  #259                // Method org/apache/commons/compress/archivers/sevenz/SevenZFile.matches:([BI)Z\n        129: ifeq          135\n-       132: ldc           #63                 // String 7z\n+       132: ldc           #160                // String 7z\n        134: areturn\n        135: bipush        32\n        137: newarray       byte\n        139: astore_3\n        140: aload_0\n        141: aload_3\n        142: arraylength\n-       143: invokevirtual #95                 // Method java/io/InputStream.mark:(I)V\n+       143: invokevirtual #231                // Method java/io/InputStream.mark:(I)V\n        146: aload_0\n        147: aload_3\n-       148: invokestatic  #96                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+       148: invokestatic  #235                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n        151: istore_2\n        152: aload_0\n-       153: invokevirtual #97                 // Method java/io/InputStream.reset:()V\n-       156: goto          173\n+       153: invokevirtual #241                // Method java/io/InputStream.reset:()V\n+       156: goto          174\n        159: astore        4\n-       161: new           #69                 // class org/apache/commons/compress/archivers/ArchiveException\n+       161: new           #174                // class org/apache/commons/compress/archivers/ArchiveException\n        164: dup\n-       165: ldc           #107                // String IOException while reading dump signature\n-       167: aload         4\n-       169: invokespecial #100                // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n-       172: athrow\n-       173: aload_3\n-       174: iload_2\n-       175: invokestatic  #108                // Method org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.matches:([BI)Z\n-       178: ifeq          184\n-       181: ldc           #59                 // String dump\n-       183: areturn\n-       184: sipush        512\n-       187: newarray       byte\n-       189: astore        4\n-       191: aload_0\n-       192: aload         4\n-       194: arraylength\n-       195: invokevirtual #95                 // Method java/io/InputStream.mark:(I)V\n-       198: aload_0\n-       199: aload         4\n-       201: invokestatic  #96                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n-       204: istore_2\n-       205: aload_0\n-       206: invokevirtual #97                 // Method java/io/InputStream.reset:()V\n-       209: goto          226\n-       212: astore        5\n-       214: new           #69                 // class org/apache/commons/compress/archivers/ArchiveException\n-       217: dup\n-       218: ldc           #109                // String IOException while reading tar signature\n-       220: aload         5\n-       222: invokespecial #100                // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n-       225: athrow\n-       226: aload         4\n-       228: iload_2\n-       229: invokestatic  #110                // Method org/apache/commons/compress/archivers/tar/TarArchiveInputStream.matches:([BI)Z\n-       232: ifeq          238\n-       235: ldc           #47                 // String tar\n-       237: areturn\n-       238: iload_2\n-       239: sipush        512\n-       242: if_icmplt     317\n-       245: aconst_null\n-       246: astore        5\n-       248: new           #48                 // class org/apache/commons/compress/archivers/tar/TarArchiveInputStream\n-       251: dup\n-       252: new           #111                // class java/io/ByteArrayInputStream\n-       255: dup\n-       256: aload         4\n-       258: invokespecial #112                // Method java/io/ByteArrayInputStream.\"<init>\":([B)V\n-       261: invokespecial #50                 // Method org/apache/commons/compress/archivers/tar/TarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-       264: astore        5\n-       266: aload         5\n-       268: invokevirtual #113                // Method org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry:()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n-       271: invokevirtual #114                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isCheckSumOK:()Z\n-       274: ifeq          289\n-       277: ldc           #47                 // String tar\n-       279: astore        6\n-       281: aload         5\n-       283: invokestatic  #115                // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n-       286: aload         6\n-       288: areturn\n-       289: aload         5\n-       291: invokestatic  #115                // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n-       294: goto          317\n-       297: astore        6\n-       299: aload         5\n-       301: invokestatic  #115                // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n-       304: goto          317\n-       307: astore        7\n-       309: aload         5\n-       311: invokestatic  #115                // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n-       314: aload         7\n-       316: athrow\n-       317: new           #69                 // class org/apache/commons/compress/archivers/ArchiveException\n-       320: dup\n-       321: ldc           #117                // String No Archiver found for the stream signature\n-       323: invokespecial #71                 // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;)V\n-       326: athrow\n+       165: ldc_w         #262                // String IOException while reading dump signature\n+       168: aload         4\n+       170: invokespecial #248                // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n+       173: athrow\n+       174: aload_3\n+       175: iload_2\n+       176: invokestatic  #264                // Method org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.matches:([BI)Z\n+       179: ifeq          185\n+       182: ldc           #154                // String dump\n+       184: areturn\n+       185: sipush        512\n+       188: newarray       byte\n+       190: astore        4\n+       192: aload_0\n+       193: aload         4\n+       195: arraylength\n+       196: invokevirtual #231                // Method java/io/InputStream.mark:(I)V\n+       199: aload_0\n+       200: aload         4\n+       202: invokestatic  #235                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+       205: istore_2\n+       206: aload_0\n+       207: invokevirtual #241                // Method java/io/InputStream.reset:()V\n+       210: goto          228\n+       213: astore        5\n+       215: new           #174                // class org/apache/commons/compress/archivers/ArchiveException\n+       218: dup\n+       219: ldc_w         #265                // String IOException while reading tar signature\n+       222: aload         5\n+       224: invokespecial #248                // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n+       227: athrow\n+       228: aload         4\n+       230: iload_2\n+       231: invokestatic  #267                // Method org/apache/commons/compress/archivers/tar/TarArchiveInputStream.matches:([BI)Z\n+       234: ifeq          240\n+       237: ldc           #136                // String tar\n+       239: areturn\n+       240: iload_2\n+       241: sipush        512\n+       244: if_icmplt     319\n+       247: aconst_null\n+       248: astore        5\n+       250: new           #138                // class org/apache/commons/compress/archivers/tar/TarArchiveInputStream\n+       253: dup\n+       254: new           #268                // class java/io/ByteArrayInputStream\n+       257: dup\n+       258: aload         4\n+       260: invokespecial #270                // Method java/io/ByteArrayInputStream.\"<init>\":([B)V\n+       263: invokespecial #141                // Method org/apache/commons/compress/archivers/tar/TarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+       266: astore        5\n+       268: aload         5\n+       270: invokevirtual #273                // Method org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry:()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n+       273: invokevirtual #277                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isCheckSumOK:()Z\n+       276: ifeq          291\n+       279: ldc           #136                // String tar\n+       281: astore        6\n+       283: aload         5\n+       285: invokestatic  #282                // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n+       288: aload         6\n+       290: areturn\n+       291: aload         5\n+       293: invokestatic  #282                // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n+       296: goto          319\n+       299: astore        6\n+       301: aload         5\n+       303: invokestatic  #282                // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n+       306: goto          319\n+       309: astore        7\n+       311: aload         5\n+       313: invokestatic  #282                // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n+       316: aload         7\n+       318: athrow\n+       319: new           #174                // class org/apache/commons/compress/archivers/ArchiveException\n+       322: dup\n+       323: ldc_w         #288                // String No Archiver found for the stream signature\n+       326: invokespecial #179                // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;)V\n+       329: athrow\n       Exception table:\n          from    to  target type\n             44    54    57   Class java/io/IOException\n            146   156   159   Class java/io/IOException\n-           198   209   212   Class java/io/IOException\n-           248   281   297   Class java/lang/Exception\n-           248   281   307   any\n-           297   299   307   any\n-           307   309   307   any\n+           199   210   213   Class java/io/IOException\n+           250   283   299   Class java/lang/Exception\n+           250   283   309   any\n+           299   301   309   any\n+           309   311   309   any\n       LineNumberTable:\n         line 487: 0\n         line 488: 4\n         line 491: 14\n         line 492: 21\n         line 495: 31\n         line 496: 36\n@@ -1300,40 +1300,40 @@\n         line 520: 135\n         line 521: 140\n         line 523: 146\n         line 524: 152\n         line 527: 156\n         line 525: 159\n         line 526: 161\n-        line 528: 173\n-        line 529: 181\n-        line 533: 184\n-        line 534: 191\n-        line 536: 198\n-        line 537: 205\n-        line 540: 209\n-        line 538: 212\n-        line 539: 214\n-        line 541: 226\n-        line 542: 235\n-        line 546: 238\n-        line 547: 245\n-        line 549: 248\n-        line 551: 266\n-        line 552: 277\n-        line 560: 281\n-        line 552: 286\n-        line 560: 289\n-        line 561: 294\n-        line 554: 297\n-        line 560: 299\n-        line 561: 304\n-        line 560: 307\n-        line 561: 314\n-        line 563: 317\n+        line 528: 174\n+        line 529: 182\n+        line 533: 185\n+        line 534: 192\n+        line 536: 199\n+        line 537: 206\n+        line 540: 210\n+        line 538: 213\n+        line 539: 215\n+        line 541: 228\n+        line 542: 237\n+        line 546: 240\n+        line 547: 247\n+        line 549: 250\n+        line 551: 268\n+        line 552: 279\n+        line 560: 283\n+        line 552: 288\n+        line 560: 291\n+        line 561: 296\n+        line 554: 299\n+        line 560: 301\n+        line 561: 306\n+        line 560: 309\n+        line 561: 316\n+        line 563: 319\n       StackMapTable: number_of_entries = 20\n         frame_type = 14 /* same */\n         frame_type = 16 /* same */\n         frame_type = 255 /* full_frame */\n           offset_delta = 25\n           locals = [ class java/io/InputStream, class \"[B\", int ]\n           stack = [ class java/io/IOException ]\n@@ -1344,21 +1344,21 @@\n         frame_type = 10 /* same */\n         frame_type = 10 /* same */\n         frame_type = 10 /* same */\n         frame_type = 255 /* full_frame */\n           offset_delta = 23\n           locals = [ class java/io/InputStream, class \"[B\", int, class \"[B\" ]\n           stack = [ class java/io/IOException ]\n-        frame_type = 13 /* same */\n+        frame_type = 14 /* same */\n         frame_type = 10 /* same */\n         frame_type = 255 /* full_frame */\n           offset_delta = 27\n           locals = [ class java/io/InputStream, class \"[B\", int, class \"[B\", class \"[B\" ]\n           stack = [ class java/io/IOException ]\n-        frame_type = 13 /* same */\n+        frame_type = 14 /* same */\n         frame_type = 11 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 50\n           locals = [ class org/apache/commons/compress/archivers/tar/TarArchiveInputStream ]\n         frame_type = 71 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Exception ]\n         frame_type = 73 /* same_locals_1_stack_item */\n@@ -1370,144 +1370,144 @@\n \n   public java.util.SortedMap<java.lang.String, org.apache.commons.compress.archivers.ArchiveStreamProvider> getArchiveInputStreamProviders();\n     descriptor: ()Ljava/util/SortedMap;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #118                // Field archiveInputStreamProviders:Ljava/util/SortedMap;\n+         1: getfield      #290                // Field archiveInputStreamProviders:Ljava/util/SortedMap;\n          4: ifnonnull     17\n          7: aload_0\n-         8: invokestatic  #119                // Method findAvailableArchiveInputStreamProviders:()Ljava/util/SortedMap;\n-        11: invokestatic  #120                // Method java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n-        14: putfield      #118                // Field archiveInputStreamProviders:Ljava/util/SortedMap;\n+         8: invokestatic  #294                // Method findAvailableArchiveInputStreamProviders:()Ljava/util/SortedMap;\n+        11: invokestatic  #297                // Method java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n+        14: putfield      #290                // Field archiveInputStreamProviders:Ljava/util/SortedMap;\n         17: aload_0\n-        18: getfield      #118                // Field archiveInputStreamProviders:Ljava/util/SortedMap;\n+        18: getfield      #290                // Field archiveInputStreamProviders:Ljava/util/SortedMap;\n         21: areturn\n       LineNumberTable:\n         line 567: 0\n         line 568: 7\n         line 569: 8\n         line 571: 17\n       StackMapTable: number_of_entries = 1\n         frame_type = 17 /* same */\n-    Signature: #170                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+    Signature: #342                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n \n   public java.util.SortedMap<java.lang.String, org.apache.commons.compress.archivers.ArchiveStreamProvider> getArchiveOutputStreamProviders();\n     descriptor: ()Ljava/util/SortedMap;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #121                // Field archiveOutputStreamProviders:Ljava/util/SortedMap;\n+         1: getfield      #303                // Field archiveOutputStreamProviders:Ljava/util/SortedMap;\n          4: ifnonnull     17\n          7: aload_0\n-         8: invokestatic  #122                // Method findAvailableArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n-        11: invokestatic  #120                // Method java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n-        14: putfield      #121                // Field archiveOutputStreamProviders:Ljava/util/SortedMap;\n+         8: invokestatic  #306                // Method findAvailableArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n+        11: invokestatic  #297                // Method java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n+        14: putfield      #303                // Field archiveOutputStreamProviders:Ljava/util/SortedMap;\n         17: aload_0\n-        18: getfield      #121                // Field archiveOutputStreamProviders:Ljava/util/SortedMap;\n+        18: getfield      #303                // Field archiveOutputStreamProviders:Ljava/util/SortedMap;\n         21: areturn\n       LineNumberTable:\n         line 575: 0\n         line 576: 7\n         line 577: 8\n         line 579: 17\n       StackMapTable: number_of_entries = 1\n         frame_type = 17 /* same */\n-    Signature: #170                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+    Signature: #342                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n \n   public java.util.Set<java.lang.String> getInputStreamArchiveNames();\n     descriptor: ()Ljava/util/Set;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: bipush        8\n-         2: anewarray     #8                  // class java/lang/String\n+         2: anewarray     #36                 // class java/lang/String\n          5: dup\n          6: iconst_0\n-         7: ldc           #35                 // String ar\n+         7: ldc           #111                // String ar\n          9: aastore\n         10: dup\n         11: iconst_1\n-        12: ldc           #39                 // String arj\n+        12: ldc           #122                // String arj\n         14: aastore\n         15: dup\n         16: iconst_2\n-        17: ldc           #43                 // String zip\n+        17: ldc           #130                // String zip\n         19: aastore\n         20: dup\n         21: iconst_3\n-        22: ldc           #47                 // String tar\n+        22: ldc           #136                // String tar\n         24: aastore\n         25: dup\n         26: iconst_4\n-        27: ldc           #51                 // String jar\n+        27: ldc           #142                // String jar\n         29: aastore\n         30: dup\n         31: iconst_5\n-        32: ldc           #55                 // String cpio\n+        32: ldc           #148                // String cpio\n         34: aastore\n         35: dup\n         36: bipush        6\n-        38: ldc           #59                 // String dump\n+        38: ldc           #154                // String dump\n         40: aastore\n         41: dup\n         42: bipush        7\n-        44: ldc           #63                 // String 7z\n+        44: ldc           #160                // String 7z\n         46: aastore\n-        47: invokestatic  #123                // Method org/apache/commons/compress/utils/Sets.newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n+        47: invokestatic  #309                // Method org/apache/commons/compress/utils/Sets.newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n         50: areturn\n       LineNumberTable:\n         line 584: 0\n-    Signature: #198                         // ()Ljava/util/Set<Ljava/lang/String;>;\n+    Signature: #358                         // ()Ljava/util/Set<Ljava/lang/String;>;\n \n   public java.util.Set<java.lang.String> getOutputStreamArchiveNames();\n     descriptor: ()Ljava/util/Set;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: bipush        6\n-         2: anewarray     #8                  // class java/lang/String\n+         2: anewarray     #36                 // class java/lang/String\n          5: dup\n          6: iconst_0\n-         7: ldc           #35                 // String ar\n+         7: ldc           #111                // String ar\n          9: aastore\n         10: dup\n         11: iconst_1\n-        12: ldc           #43                 // String zip\n+        12: ldc           #130                // String zip\n         14: aastore\n         15: dup\n         16: iconst_2\n-        17: ldc           #47                 // String tar\n+        17: ldc           #136                // String tar\n         19: aastore\n         20: dup\n         21: iconst_3\n-        22: ldc           #51                 // String jar\n+        22: ldc           #142                // String jar\n         24: aastore\n         25: dup\n         26: iconst_4\n-        27: ldc           #55                 // String cpio\n+        27: ldc           #148                // String cpio\n         29: aastore\n         30: dup\n         31: iconst_5\n-        32: ldc           #63                 // String 7z\n+        32: ldc           #160                // String 7z\n         34: aastore\n-        35: invokestatic  #123                // Method org/apache/commons/compress/utils/Sets.newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n+        35: invokestatic  #309                // Method org/apache/commons/compress/utils/Sets.newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n         38: areturn\n       LineNumberTable:\n         line 589: 0\n-    Signature: #198                         // ()Ljava/util/Set<Ljava/lang/String;>;\n+    Signature: #358                         // ()Ljava/util/Set<Ljava/lang/String;>;\n \n   static org.apache.commons.compress.archivers.ArchiveStreamFactory access$000();\n     descriptor: ()Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: getstatic     #2                  // Field SINGLETON:Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n+         0: getstatic     #7                  // Field SINGLETON:Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n          3: areturn\n       LineNumberTable:\n         line 89: 0\n \n   static java.util.ArrayList access$100();\n     descriptor: ()Ljava/util/ArrayList;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n@@ -1519,24 +1519,24 @@\n         line 89: 0\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: new           #34                 // class org/apache/commons/compress/archivers/ArchiveStreamFactory\n+         0: new           #2                  // class org/apache/commons/compress/archivers/ArchiveStreamFactory\n          3: dup\n-         4: invokespecial #124                // Method \"<init>\":()V\n-         7: putstatic     #2                  // Field SINGLETON:Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n+         4: invokespecial #315                // Method \"<init>\":()V\n+         7: putstatic     #7                  // Field SINGLETON:Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n         10: return\n       LineNumberTable:\n         line 97: 0\n }\n SourceFile: \"ArchiveStreamFactory.java\"\n-InnerClasses:\n-  #20;                                    // class org/apache/commons/compress/archivers/ArchiveStreamFactory$2\n-  #16;                                    // class org/apache/commons/compress/archivers/ArchiveStreamFactory$1\n-  public static final #376= #375 of #378; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #264 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  0: #367 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #265 Archiver: \\u0001 not found.\n+      #373 Archiver: \\u0001 not found.\n+InnerClasses:\n+  #66;                                    // class org/apache/commons/compress/archivers/ArchiveStreamFactory$1\n+  #79;                                    // class org/apache/commons/compress/archivers/ArchiveStreamFactory$2\n+  public static final #380= #376 of #378; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
