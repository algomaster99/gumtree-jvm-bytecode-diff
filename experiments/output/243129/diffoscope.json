{"diffoscope-json-version": 1, "source1": "first/Unknown.class", "source2": "second/Unknown.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -29,20 +29,20 @@\n     }\n     \n     public void accept(final Visitor v) {\n         v.visitUnknown(this);\n     }\n     \n     public Attribute copy(final ConstantPool constantPool) {\n-        final Unknown c = (Unknown)this.clone();\n+        final Unknown unknown = (Unknown)this.clone();\n         if (this.bytes != null) {\n-            c.bytes = this.bytes.clone();\n+            unknown.bytes = this.bytes.clone();\n         }\n-        c.setConstantPool(constantPool);\n-        return c;\n+        unknown.setConstantPool(constantPool);\n+        return unknown;\n     }\n     \n     public void dump(final DataOutputStream file) throws IOException {\n         super.dump(file);\n         if (super.getLength() > 0) {\n             file.write(this.bytes, 0, super.getLength());\n         }\n@@ -60,19 +60,17 @@\n         this.bytes = bytes;\n     }\n     \n     public String toString() {\n         if (super.getLength() == 0 || this.bytes == null) {\n             return \"(Unknown attribute \" + this.name + \")\";\n         }\n-        final int limit = 10;\n-        String hex;\n+        String str;\n         if (super.getLength() > 10) {\n-            final byte[] tmp = Arrays.copyOf(this.bytes, 10);\n-            hex = Utility.toHexString(tmp) + \"... (truncated)\";\n+            str = Utility.toHexString(Arrays.copyOf(this.bytes, 10)) + \"... (truncated)\";\n         }\n         else {\n-            hex = Utility.toHexString(this.bytes);\n+            str = Utility.toHexString(this.bytes);\n         }\n-        return \"(Unknown attribute \" + this.name + \": \" + hex + \")\";\n+        return \"(Unknown attribute \" + this.name + \": \" + str + \")\";\n     }\n }\n"}]}
