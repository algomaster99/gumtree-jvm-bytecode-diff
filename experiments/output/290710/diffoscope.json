{"diffoscope-json-version": 1, "source1": "first/ChunkedWriter.class", "source2": "second/ChunkedWriter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,66 +1,64 @@\n-  SHA-256 checksum 78d7ea9ff45c36f45ae9eac7d1bfa222bfa14a0fa80b10b14232fc598f5ba8df\n+  SHA-256 checksum afdf6608f97358a6707bd458d3dabd07e17ba929eb2ce17bceb307c1d72d8be4\n   Compiled from \"ChunkedWriter.java\"\n public class org.apache.commons.io.output.ChunkedWriter extends java.io.FilterWriter\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #5                          // org/apache/commons/io/output/ChunkedWriter\n   super_class: #10                        // java/io/FilterWriter\n   interfaces: 0, fields: 2, methods: 3, attributes: 1\n Constant pool:\n-   #1 = Methodref          #10.#30        // java/io/FilterWriter.\"<init>\":(Ljava/io/Writer;)V\n-   #2 = Class              #31            // java/lang/IllegalArgumentException\n-   #3 = Methodref          #2.#32         // java/lang/IllegalArgumentException.\"<init>\":()V\n-   #4 = Fieldref           #5.#33         // org/apache/commons/io/output/ChunkedWriter.chunkSize:I\n-   #5 = Class              #34            // org/apache/commons/io/output/ChunkedWriter\n-   #6 = Methodref          #5.#35         // org/apache/commons/io/output/ChunkedWriter.\"<init>\":(Ljava/io/Writer;I)V\n-   #7 = Methodref          #36.#37        // java/lang/Math.min:(II)I\n-   #8 = Fieldref           #5.#38         // org/apache/commons/io/output/ChunkedWriter.out:Ljava/io/Writer;\n-   #9 = Methodref          #39.#40        // java/io/Writer.write:([CII)V\n-  #10 = Class              #41            // java/io/FilterWriter\n+   #1 = Methodref          #10.#29        // java/io/FilterWriter.\"<init>\":(Ljava/io/Writer;)V\n+   #2 = Class              #30            // java/lang/IllegalArgumentException\n+   #3 = Methodref          #2.#31         // java/lang/IllegalArgumentException.\"<init>\":()V\n+   #4 = Fieldref           #5.#32         // org/apache/commons/io/output/ChunkedWriter.chunkSize:I\n+   #5 = Class              #33            // org/apache/commons/io/output/ChunkedWriter\n+   #6 = Methodref          #5.#34         // org/apache/commons/io/output/ChunkedWriter.\"<init>\":(Ljava/io/Writer;I)V\n+   #7 = Methodref          #35.#36        // java/lang/Math.min:(II)I\n+   #8 = Fieldref           #5.#37         // org/apache/commons/io/output/ChunkedWriter.out:Ljava/io/Writer;\n+   #9 = Methodref          #21.#38        // java/io/Writer.write:([CII)V\n+  #10 = Class              #39            // java/io/FilterWriter\n   #11 = Utf8               DEFAULT_CHUNK_SIZE\n   #12 = Utf8               I\n   #13 = Utf8               ConstantValue\n   #14 = Integer            4096\n   #15 = Utf8               chunkSize\n   #16 = Utf8               <init>\n   #17 = Utf8               (Ljava/io/Writer;I)V\n   #18 = Utf8               Code\n   #19 = Utf8               LineNumberTable\n   #20 = Utf8               StackMapTable\n-  #21 = Class              #34            // org/apache/commons/io/output/ChunkedWriter\n-  #22 = Class              #42            // java/io/Writer\n-  #23 = Utf8               (Ljava/io/Writer;)V\n-  #24 = Utf8               write\n-  #25 = Utf8               ([CII)V\n-  #26 = Utf8               Exceptions\n-  #27 = Class              #43            // java/io/IOException\n-  #28 = Utf8               SourceFile\n-  #29 = Utf8               ChunkedWriter.java\n-  #30 = NameAndType        #16:#23        // \"<init>\":(Ljava/io/Writer;)V\n-  #31 = Utf8               java/lang/IllegalArgumentException\n-  #32 = NameAndType        #16:#44        // \"<init>\":()V\n-  #33 = NameAndType        #15:#12        // chunkSize:I\n-  #34 = Utf8               org/apache/commons/io/output/ChunkedWriter\n-  #35 = NameAndType        #16:#17        // \"<init>\":(Ljava/io/Writer;I)V\n-  #36 = Class              #45            // java/lang/Math\n-  #37 = NameAndType        #46:#47        // min:(II)I\n-  #38 = NameAndType        #48:#49        // out:Ljava/io/Writer;\n-  #39 = Class              #42            // java/io/Writer\n-  #40 = NameAndType        #24:#25        // write:([CII)V\n-  #41 = Utf8               java/io/FilterWriter\n-  #42 = Utf8               java/io/Writer\n-  #43 = Utf8               java/io/IOException\n-  #44 = Utf8               ()V\n-  #45 = Utf8               java/lang/Math\n-  #46 = Utf8               min\n-  #47 = Utf8               (II)I\n-  #48 = Utf8               out\n-  #49 = Utf8               Ljava/io/Writer;\n+  #21 = Class              #40            // java/io/Writer\n+  #22 = Utf8               (Ljava/io/Writer;)V\n+  #23 = Utf8               write\n+  #24 = Utf8               ([CII)V\n+  #25 = Utf8               Exceptions\n+  #26 = Class              #41            // java/io/IOException\n+  #27 = Utf8               SourceFile\n+  #28 = Utf8               ChunkedWriter.java\n+  #29 = NameAndType        #16:#22        // \"<init>\":(Ljava/io/Writer;)V\n+  #30 = Utf8               java/lang/IllegalArgumentException\n+  #31 = NameAndType        #16:#42        // \"<init>\":()V\n+  #32 = NameAndType        #15:#12        // chunkSize:I\n+  #33 = Utf8               org/apache/commons/io/output/ChunkedWriter\n+  #34 = NameAndType        #16:#17        // \"<init>\":(Ljava/io/Writer;I)V\n+  #35 = Class              #43            // java/lang/Math\n+  #36 = NameAndType        #44:#45        // min:(II)I\n+  #37 = NameAndType        #46:#47        // out:Ljava/io/Writer;\n+  #38 = NameAndType        #23:#24        // write:([CII)V\n+  #39 = Utf8               java/io/FilterWriter\n+  #40 = Utf8               java/io/Writer\n+  #41 = Utf8               java/io/IOException\n+  #42 = Utf8               ()V\n+  #43 = Utf8               java/lang/Math\n+  #44 = Utf8               min\n+  #45 = Utf8               (II)I\n+  #46 = Utf8               out\n+  #47 = Utf8               Ljava/io/Writer;\n {\n   private static final int DEFAULT_CHUNK_SIZE = 4096;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 4096\n \n   private final int chunkSize;\n"}]}
