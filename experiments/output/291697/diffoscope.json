{"diffoscope-json-version": 1, "source1": "first/StopWatch.class", "source2": "second/StopWatch.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,8 +1,8 @@\n-  SHA-256 checksum 7d8f0abca85d0a13dea8c1c04e3cc999dfe3cdba8f379b551a7e9de1c6d2dc34\n+  SHA-256 checksum e70bb6a19d00fb412200558e61e3ae36490b456a8953d515f8073554360b2479\n   Compiled from \"StopWatch.java\"\n public class org.apache.commons.lang3.time.StopWatch\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/lang3/time/StopWatch\n   super_class: #55                        // java/lang/Object\n@@ -49,28 +49,28 @@\n    #40 = String             #150          // Stopwatch already started.\n    #41 = Methodref          #130.#151     // java/lang/System.currentTimeMillis:()J\n    #42 = String             #152          // Stopwatch must be running to suspend.\n    #43 = Class              #153          // org/apache/commons/lang3/StringUtils\n    #44 = String             #154          //\n    #45 = Methodref          #155.#156     // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n    #46 = Methodref          #1.#157       // org/apache/commons/lang3/time/StopWatch.formatSplitTime:()Ljava/lang/String;\n-   #47 = Methodref          #158.#159     // java/lang/String.isEmpty:()Z\n-   #48 = Class              #160          // java/lang/StringBuilder\n+   #47 = Methodref          #107.#158     // java/lang/String.isEmpty:()Z\n+   #48 = Class              #159          // java/lang/StringBuilder\n    #49 = Methodref          #48.#113      // java/lang/StringBuilder.\"<init>\":()V\n-   #50 = Methodref          #48.#161      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #51 = String             #162          //\n-   #52 = Methodref          #48.#163      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #53 = Methodref          #1.#164       // org/apache/commons/lang3/time/StopWatch.formatTime:()Ljava/lang/String;\n-   #54 = String             #165          // Stopwatch has not been split.\n-   #55 = Class              #166          // java/lang/Object\n-   #56 = Class              #167          // org/apache/commons/lang3/time/StopWatch$1\n+   #50 = Methodref          #48.#160      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #51 = String             #161          //\n+   #52 = Methodref          #48.#162      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #53 = Methodref          #1.#163       // org/apache/commons/lang3/time/StopWatch.formatTime:()Ljava/lang/String;\n+   #54 = String             #164          // Stopwatch has not been split.\n+   #55 = Class              #165          // java/lang/Object\n+   #56 = Class              #166          // org/apache/commons/lang3/time/StopWatch$1\n    #57 = Utf8               InnerClasses\n-   #58 = Class              #168          // org/apache/commons/lang3/time/StopWatch$State\n+   #58 = Class              #167          // org/apache/commons/lang3/time/StopWatch$State\n    #59 = Utf8               State\n-   #60 = Class              #169          // org/apache/commons/lang3/time/StopWatch$SplitState\n+   #60 = Class              #168          // org/apache/commons/lang3/time/StopWatch$SplitState\n    #61 = Utf8               SplitState\n    #62 = Utf8               NANO_2_MILLIS\n    #63 = Utf8               J\n    #64 = Utf8               ConstantValue\n    #65 = Utf8               message\n    #66 = Utf8               Ljava/lang/String;\n    #67 = Utf8               runningState\n@@ -109,100 +109,99 @@\n   #100 = Utf8               reset\n   #101 = Utf8               resume\n   #102 = Utf8               split\n   #103 = Utf8               start\n   #104 = Utf8               stop\n   #105 = Utf8               suspend\n   #106 = Utf8               toSplitString\n-  #107 = Class              #170          // java/lang/String\n+  #107 = Class              #169          // java/lang/String\n   #108 = Utf8               toString\n   #109 = Utf8               unsplit\n   #110 = Utf8               SourceFile\n   #111 = Utf8               StopWatch.java\n   #112 = Utf8               org/apache/commons/lang3/time/StopWatch\n   #113 = NameAndType        #80:#81       // \"<init>\":()V\n   #114 = NameAndType        #103:#81      // start:()V\n   #115 = NameAndType        #80:#82       // \"<init>\":(Ljava/lang/String;)V\n-  #116 = NameAndType        #171:#68      // UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+  #116 = NameAndType        #170:#68      // UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n   #117 = NameAndType        #67:#68       // runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-  #118 = NameAndType        #172:#70      // UNSPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+  #118 = NameAndType        #171:#70      // UNSPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n   #119 = NameAndType        #69:#70       // splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n   #120 = NameAndType        #65:#66       // message:Ljava/lang/String;\n   #121 = NameAndType        #91:#88       // getSplitTime:()J\n-  #122 = Class              #173          // org/apache/commons/lang3/time/DurationFormatUtils\n-  #123 = NameAndType        #174:#175     // formatDurationHMS:(J)Ljava/lang/String;\n+  #122 = Class              #172          // org/apache/commons/lang3/time/DurationFormatUtils\n+  #123 = NameAndType        #173:#174     // formatDurationHMS:(J)Ljava/lang/String;\n   #124 = NameAndType        #94:#88       // getTime:()J\n-  #125 = NameAndType        #176:#68      // STOPPED:Lorg/apache/commons/lang3/time/StopWatch$State;\n-  #126 = NameAndType        #177:#68      // SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+  #125 = NameAndType        #175:#68      // STOPPED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+  #126 = NameAndType        #176:#68      // SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;\n   #127 = NameAndType        #74:#63       // stopTimeNanos:J\n   #128 = NameAndType        #71:#63       // startTimeNanos:J\n-  #129 = NameAndType        #178:#68      // RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n-  #130 = Class              #179          // java/lang/System\n-  #131 = NameAndType        #180:#88      // nanoTime:()J\n+  #129 = NameAndType        #177:#68      // RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n+  #130 = Class              #178          // java/lang/System\n+  #131 = NameAndType        #179:#88      // nanoTime:()J\n   #132 = Utf8               java/lang/IllegalStateException\n   #133 = Utf8               Illegal running state has occurred.\n-  #134 = NameAndType        #181:#70      // SPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+  #134 = NameAndType        #180:#70      // SPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n   #135 = Utf8               Stopwatch must be split to get the split time.\n   #136 = NameAndType        #90:#88       // getSplitNanoTime:()J\n   #137 = Utf8               Stopwatch has not been started\n   #138 = NameAndType        #72:#63       // startTimeMillis:J\n   #139 = NameAndType        #73:#63       // stopTimeMillis:J\n   #140 = NameAndType        #87:#88       // getNanoTime:()J\n-  #141 = Class              #182          // java/util/concurrent/TimeUnit\n-  #142 = NameAndType        #183:#184     // NANOSECONDS:Ljava/util/concurrent/TimeUnit;\n-  #143 = NameAndType        #185:#186     // convert:(JLjava/util/concurrent/TimeUnit;)J\n+  #141 = Class              #181          // java/util/concurrent/TimeUnit\n+  #142 = NameAndType        #182:#183     // NANOSECONDS:Ljava/util/concurrent/TimeUnit;\n+  #143 = NameAndType        #184:#185     // convert:(JLjava/util/concurrent/TimeUnit;)J\n   #144 = NameAndType        #96:#97       // isStarted:()Z\n   #145 = NameAndType        #98:#97       // isStopped:()Z\n   #146 = NameAndType        #99:#97       // isSuspended:()Z\n   #147 = Utf8               Stopwatch must be suspended to resume.\n   #148 = Utf8               Stopwatch is not running.\n   #149 = Utf8               Stopwatch must be reset before being restarted.\n   #150 = Utf8               Stopwatch already started.\n-  #151 = NameAndType        #187:#88      // currentTimeMillis:()J\n+  #151 = NameAndType        #186:#88      // currentTimeMillis:()J\n   #152 = Utf8               Stopwatch must be running to suspend.\n   #153 = Utf8               org/apache/commons/lang3/StringUtils\n   #154 = Utf8\n-  #155 = Class              #188          // java/util/Objects\n-  #156 = NameAndType        #108:#189     // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+  #155 = Class              #187          // java/util/Objects\n+  #156 = NameAndType        #108:#188     // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n   #157 = NameAndType        #83:#84       // formatSplitTime:()Ljava/lang/String;\n-  #158 = Class              #170          // java/lang/String\n-  #159 = NameAndType        #190:#97      // isEmpty:()Z\n-  #160 = Utf8               java/lang/StringBuilder\n-  #161 = NameAndType        #191:#192     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #162 = Utf8\n-  #163 = NameAndType        #108:#84      // toString:()Ljava/lang/String;\n-  #164 = NameAndType        #85:#84       // formatTime:()Ljava/lang/String;\n-  #165 = Utf8               Stopwatch has not been split.\n-  #166 = Utf8               java/lang/Object\n-  #167 = Utf8               org/apache/commons/lang3/time/StopWatch$1\n-  #168 = Utf8               org/apache/commons/lang3/time/StopWatch$State\n-  #169 = Utf8               org/apache/commons/lang3/time/StopWatch$SplitState\n-  #170 = Utf8               java/lang/String\n-  #171 = Utf8               UNSTARTED\n-  #172 = Utf8               UNSPLIT\n-  #173 = Utf8               org/apache/commons/lang3/time/DurationFormatUtils\n-  #174 = Utf8               formatDurationHMS\n-  #175 = Utf8               (J)Ljava/lang/String;\n-  #176 = Utf8               STOPPED\n-  #177 = Utf8               SUSPENDED\n-  #178 = Utf8               RUNNING\n-  #179 = Utf8               java/lang/System\n-  #180 = Utf8               nanoTime\n-  #181 = Utf8               SPLIT\n-  #182 = Utf8               java/util/concurrent/TimeUnit\n-  #183 = Utf8               NANOSECONDS\n-  #184 = Utf8               Ljava/util/concurrent/TimeUnit;\n-  #185 = Utf8               convert\n-  #186 = Utf8               (JLjava/util/concurrent/TimeUnit;)J\n-  #187 = Utf8               currentTimeMillis\n-  #188 = Utf8               java/util/Objects\n-  #189 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-  #190 = Utf8               isEmpty\n-  #191 = Utf8               append\n-  #192 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #158 = NameAndType        #189:#97      // isEmpty:()Z\n+  #159 = Utf8               java/lang/StringBuilder\n+  #160 = NameAndType        #190:#191     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #161 = Utf8\n+  #162 = NameAndType        #108:#84      // toString:()Ljava/lang/String;\n+  #163 = NameAndType        #85:#84       // formatTime:()Ljava/lang/String;\n+  #164 = Utf8               Stopwatch has not been split.\n+  #165 = Utf8               java/lang/Object\n+  #166 = Utf8               org/apache/commons/lang3/time/StopWatch$1\n+  #167 = Utf8               org/apache/commons/lang3/time/StopWatch$State\n+  #168 = Utf8               org/apache/commons/lang3/time/StopWatch$SplitState\n+  #169 = Utf8               java/lang/String\n+  #170 = Utf8               UNSTARTED\n+  #171 = Utf8               UNSPLIT\n+  #172 = Utf8               org/apache/commons/lang3/time/DurationFormatUtils\n+  #173 = Utf8               formatDurationHMS\n+  #174 = Utf8               (J)Ljava/lang/String;\n+  #175 = Utf8               STOPPED\n+  #176 = Utf8               SUSPENDED\n+  #177 = Utf8               RUNNING\n+  #178 = Utf8               java/lang/System\n+  #179 = Utf8               nanoTime\n+  #180 = Utf8               SPLIT\n+  #181 = Utf8               java/util/concurrent/TimeUnit\n+  #182 = Utf8               NANOSECONDS\n+  #183 = Utf8               Ljava/util/concurrent/TimeUnit;\n+  #184 = Utf8               convert\n+  #185 = Utf8               (JLjava/util/concurrent/TimeUnit;)J\n+  #186 = Utf8               currentTimeMillis\n+  #187 = Utf8               java/util/Objects\n+  #188 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+  #189 = Utf8               isEmpty\n+  #190 = Utf8               append\n+  #191 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n {\n   private static final long NANO_2_MILLIS = 1000000l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 1000000l\n \n   private final java.lang.String message;\n"}]}
