{"diffoscope-json-version": 1, "source1": "first/OrFileFilter.class", "source2": "second/OrFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,62 +1,62 @@\n-  SHA-256 checksum c0ce070a093e530380d961b7ba0766017f6ea2f686ddb38be421210efc90d813\n+  SHA-256 checksum cdfc3ec737d5d567bbee343a9d044883f547f016bebb20aa8a0dcdd2f4e1df5d\n   Compiled from \"OrFileFilter.java\"\n public class org.apache.commons.io.filefilter.OrFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements org.apache.commons.io.filefilter.ConditionalFileFilter,java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #42                         // org/apache/commons/io/filefilter/OrFileFilter\n   super_class: #43                        // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 2, fields: 2, methods: 15, attributes: 1\n Constant pool:\n-    #1 = Methodref          #42.#109      // org/apache/commons/io/filefilter/OrFileFilter.\"<init>\":(I)V\n-    #2 = Methodref          #43.#110      // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+    #1 = Methodref          #42.#108      // org/apache/commons/io/filefilter/OrFileFilter.\"<init>\":(I)V\n+    #2 = Methodref          #43.#109      // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n     #3 = String             #63           // initialList\n-    #4 = Methodref          #111.#112     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-    #5 = Class              #113          // java/util/List\n-    #6 = Fieldref           #42.#114      // org/apache/commons/io/filefilter/OrFileFilter.fileFilters:Ljava/util/List;\n-    #7 = Class              #115          // java/util/ArrayList\n-    #8 = Methodref          #7.#109       // java/util/ArrayList.\"<init>\":(I)V\n-    #9 = Methodref          #42.#116      // org/apache/commons/io/filefilter/OrFileFilter.\"<init>\":(Ljava/util/ArrayList;)V\n+    #4 = Methodref          #110.#111     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+    #5 = Class              #112          // java/util/List\n+    #6 = Fieldref           #42.#113      // org/apache/commons/io/filefilter/OrFileFilter.fileFilters:Ljava/util/List;\n+    #7 = Class              #114          // java/util/ArrayList\n+    #8 = Methodref          #7.#108       // java/util/ArrayList.\"<init>\":(I)V\n+    #9 = Methodref          #42.#115      // org/apache/commons/io/filefilter/OrFileFilter.\"<init>\":(Ljava/util/ArrayList;)V\n    #10 = String             #51           // fileFilters\n    #11 = Class              #72           // \"[Lorg/apache/commons/io/filefilter/IOFileFilter;\"\n-   #12 = Methodref          #42.#117      // org/apache/commons/io/filefilter/OrFileFilter.addFileFilter:([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #13 = Methodref          #42.#118      // org/apache/commons/io/filefilter/OrFileFilter.addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #14 = Class              #119          // java/util/Collection\n-   #15 = Methodref          #7.#120       // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n-   #16 = InterfaceMethodref #5.#121       // java/util/List.iterator:()Ljava/util/Iterator;\n-   #17 = InterfaceMethodref #122.#123     // java/util/Iterator.hasNext:()Z\n-   #18 = InterfaceMethodref #122.#124     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #19 = Class              #125          // org/apache/commons/io/filefilter/IOFileFilter\n-   #20 = InterfaceMethodref #19.#126      // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n-   #21 = InterfaceMethodref #19.#127      // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n-   #22 = InterfaceMethodref #19.#128      // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #23 = Fieldref           #129.#130     // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-   #24 = Fieldref           #129.#131     // java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n+   #12 = Methodref          #42.#116      // org/apache/commons/io/filefilter/OrFileFilter.addFileFilter:([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #13 = Methodref          #42.#117      // org/apache/commons/io/filefilter/OrFileFilter.addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #14 = Class              #118          // java/util/Collection\n+   #15 = Methodref          #7.#119       // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n+   #16 = InterfaceMethodref #5.#120       // java/util/List.iterator:()Ljava/util/Iterator;\n+   #17 = InterfaceMethodref #85.#121      // java/util/Iterator.hasNext:()Z\n+   #18 = InterfaceMethodref #85.#122      // java/util/Iterator.next:()Ljava/lang/Object;\n+   #19 = Class              #123          // org/apache/commons/io/filefilter/IOFileFilter\n+   #20 = InterfaceMethodref #19.#124      // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n+   #21 = InterfaceMethodref #19.#125      // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n+   #22 = InterfaceMethodref #19.#126      // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #23 = Fieldref           #127.#128     // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+   #24 = Fieldref           #127.#129     // java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n    #25 = String             #81           // fileFilter\n-   #26 = InterfaceMethodref #5.#132       // java/util/List.add:(Ljava/lang/Object;)Z\n-   #27 = Methodref          #133.#134     // java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n-   #28 = InterfaceMethodref #5.#135       // java/util/List.remove:(Ljava/lang/Object;)Z\n-   #29 = InterfaceMethodref #5.#136       // java/util/List.clear:()V\n-   #30 = InterfaceMethodref #5.#137       // java/util/List.addAll:(Ljava/util/Collection;)Z\n-   #31 = Class              #138          // java/lang/StringBuilder\n-   #32 = Methodref          #31.#110      // java/lang/StringBuilder.\"<init>\":()V\n-   #33 = Methodref          #43.#139      // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n-   #34 = Methodref          #31.#140      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #35 = String             #141          // (\n-   #36 = InterfaceMethodref #5.#142       // java/util/List.size:()I\n-   #37 = String             #143          // ,\n-   #38 = InterfaceMethodref #5.#144       // java/util/List.get:(I)Ljava/lang/Object;\n-   #39 = Methodref          #31.#145      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #40 = String             #146          // )\n-   #41 = Methodref          #31.#139      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #42 = Class              #147          // org/apache/commons/io/filefilter/OrFileFilter\n-   #43 = Class              #148          // org/apache/commons/io/filefilter/AbstractFileFilter\n-   #44 = Class              #149          // org/apache/commons/io/filefilter/ConditionalFileFilter\n-   #45 = Class              #150          // java/io/Serializable\n+   #26 = InterfaceMethodref #5.#130       // java/util/List.add:(Ljava/lang/Object;)Z\n+   #27 = Methodref          #131.#132     // java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n+   #28 = InterfaceMethodref #5.#133       // java/util/List.remove:(Ljava/lang/Object;)Z\n+   #29 = InterfaceMethodref #5.#134       // java/util/List.clear:()V\n+   #30 = InterfaceMethodref #5.#135       // java/util/List.addAll:(Ljava/util/Collection;)Z\n+   #31 = Class              #136          // java/lang/StringBuilder\n+   #32 = Methodref          #31.#109      // java/lang/StringBuilder.\"<init>\":()V\n+   #33 = Methodref          #43.#137      // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n+   #34 = Methodref          #31.#138      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #35 = String             #139          // (\n+   #36 = InterfaceMethodref #5.#140       // java/util/List.size:()I\n+   #37 = String             #141          // ,\n+   #38 = InterfaceMethodref #5.#142       // java/util/List.get:(I)Ljava/lang/Object;\n+   #39 = Methodref          #31.#143      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #40 = String             #144          // )\n+   #41 = Methodref          #31.#137      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #42 = Class              #145          // org/apache/commons/io/filefilter/OrFileFilter\n+   #43 = Class              #146          // org/apache/commons/io/filefilter/AbstractFileFilter\n+   #44 = Class              #147          // org/apache/commons/io/filefilter/ConditionalFileFilter\n+   #45 = Class              #148          // java/io/Serializable\n    #46 = Utf8               serialVersionUID\n    #47 = Utf8               J\n    #48 = Utf8               ConstantValue\n    #49 = Long               5767770777065432721l\n    #51 = Utf8               fileFilters\n    #52 = Utf8               Ljava/util/List;\n    #53 = Utf8               Signature\n@@ -87,15 +87,15 @@\n    #78 = Utf8               (Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n    #79 = Utf8               accept\n    #80 = Utf8               (Ljava/io/File;)Z\n    #81 = Utf8               fileFilter\n    #82 = Utf8               file\n    #83 = Utf8               Ljava/io/File;\n    #84 = Utf8               StackMapTable\n-   #85 = Class              #151          // java/util/Iterator\n+   #85 = Class              #149          // java/util/Iterator\n    #86 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n    #87 = Utf8               name\n    #88 = Utf8               Ljava/lang/String;\n    #89 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n    #90 = Utf8               Ljava/nio/file/Path;\n    #91 = Utf8               attributes\n    #92 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n@@ -108,90 +108,88 @@\n    #99 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)Z\n   #100 = Utf8               setFileFilters\n   #101 = Utf8               toString\n   #102 = Utf8               ()Ljava/lang/String;\n   #103 = Utf8               i\n   #104 = Utf8               buffer\n   #105 = Utf8               Ljava/lang/StringBuilder;\n-  #106 = Class              #138          // java/lang/StringBuilder\n-  #107 = Utf8               SourceFile\n-  #108 = Utf8               OrFileFilter.java\n-  #109 = NameAndType        #55:#68       // \"<init>\":(I)V\n-  #110 = NameAndType        #55:#56       // \"<init>\":()V\n-  #111 = Class              #152          // java/util/Objects\n-  #112 = NameAndType        #153:#154     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #113 = Utf8               java/util/List\n-  #114 = NameAndType        #51:#52       // fileFilters:Ljava/util/List;\n-  #115 = Utf8               java/util/ArrayList\n-  #116 = NameAndType        #55:#62       // \"<init>\":(Ljava/util/ArrayList;)V\n-  #117 = NameAndType        #93:#71       // addFileFilter:([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-  #118 = NameAndType        #93:#94       // addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-  #119 = Utf8               java/util/Collection\n-  #120 = NameAndType        #55:#155      // \"<init>\":(Ljava/util/Collection;)V\n-  #121 = NameAndType        #156:#157     // iterator:()Ljava/util/Iterator;\n-  #122 = Class              #151          // java/util/Iterator\n-  #123 = NameAndType        #158:#159     // hasNext:()Z\n-  #124 = NameAndType        #160:#161     // next:()Ljava/lang/Object;\n-  #125 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n-  #126 = NameAndType        #79:#80       // accept:(Ljava/io/File;)Z\n-  #127 = NameAndType        #79:#86       // accept:(Ljava/io/File;Ljava/lang/String;)Z\n-  #128 = NameAndType        #79:#89       // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #129 = Class              #162          // java/nio/file/FileVisitResult\n-  #130 = NameAndType        #163:#164     // CONTINUE:Ljava/nio/file/FileVisitResult;\n-  #131 = NameAndType        #165:#164     // TERMINATE:Ljava/nio/file/FileVisitResult;\n-  #132 = NameAndType        #166:#167     // add:(Ljava/lang/Object;)Z\n-  #133 = Class              #168          // java/util/Collections\n-  #134 = NameAndType        #169:#170     // unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n-  #135 = NameAndType        #171:#167     // remove:(Ljava/lang/Object;)Z\n-  #136 = NameAndType        #172:#56      // clear:()V\n-  #137 = NameAndType        #173:#174     // addAll:(Ljava/util/Collection;)Z\n-  #138 = Utf8               java/lang/StringBuilder\n-  #139 = NameAndType        #101:#102     // toString:()Ljava/lang/String;\n-  #140 = NameAndType        #175:#176     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #141 = Utf8               (\n-  #142 = NameAndType        #177:#178     // size:()I\n-  #143 = Utf8               ,\n-  #144 = NameAndType        #179:#180     // get:(I)Ljava/lang/Object;\n-  #145 = NameAndType        #175:#181     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #146 = Utf8               )\n-  #147 = Utf8               org/apache/commons/io/filefilter/OrFileFilter\n-  #148 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-  #149 = Utf8               org/apache/commons/io/filefilter/ConditionalFileFilter\n-  #150 = Utf8               java/io/Serializable\n-  #151 = Utf8               java/util/Iterator\n-  #152 = Utf8               java/util/Objects\n-  #153 = Utf8               requireNonNull\n-  #154 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #155 = Utf8               (Ljava/util/Collection;)V\n-  #156 = Utf8               iterator\n-  #157 = Utf8               ()Ljava/util/Iterator;\n-  #158 = Utf8               hasNext\n-  #159 = Utf8               ()Z\n-  #160 = Utf8               next\n-  #161 = Utf8               ()Ljava/lang/Object;\n-  #162 = Utf8               java/nio/file/FileVisitResult\n-  #163 = Utf8               CONTINUE\n-  #164 = Utf8               Ljava/nio/file/FileVisitResult;\n-  #165 = Utf8               TERMINATE\n-  #166 = Utf8               add\n-  #167 = Utf8               (Ljava/lang/Object;)Z\n-  #168 = Utf8               java/util/Collections\n-  #169 = Utf8               unmodifiableList\n-  #170 = Utf8               (Ljava/util/List;)Ljava/util/List;\n-  #171 = Utf8               remove\n-  #172 = Utf8               clear\n-  #173 = Utf8               addAll\n-  #174 = Utf8               (Ljava/util/Collection;)Z\n-  #175 = Utf8               append\n-  #176 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #177 = Utf8               size\n-  #178 = Utf8               ()I\n-  #179 = Utf8               get\n-  #180 = Utf8               (I)Ljava/lang/Object;\n-  #181 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #106 = Utf8               SourceFile\n+  #107 = Utf8               OrFileFilter.java\n+  #108 = NameAndType        #55:#68       // \"<init>\":(I)V\n+  #109 = NameAndType        #55:#56       // \"<init>\":()V\n+  #110 = Class              #150          // java/util/Objects\n+  #111 = NameAndType        #151:#152     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #112 = Utf8               java/util/List\n+  #113 = NameAndType        #51:#52       // fileFilters:Ljava/util/List;\n+  #114 = Utf8               java/util/ArrayList\n+  #115 = NameAndType        #55:#62       // \"<init>\":(Ljava/util/ArrayList;)V\n+  #116 = NameAndType        #93:#71       // addFileFilter:([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #117 = NameAndType        #93:#94       // addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #118 = Utf8               java/util/Collection\n+  #119 = NameAndType        #55:#153      // \"<init>\":(Ljava/util/Collection;)V\n+  #120 = NameAndType        #154:#155     // iterator:()Ljava/util/Iterator;\n+  #121 = NameAndType        #156:#157     // hasNext:()Z\n+  #122 = NameAndType        #158:#159     // next:()Ljava/lang/Object;\n+  #123 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n+  #124 = NameAndType        #79:#80       // accept:(Ljava/io/File;)Z\n+  #125 = NameAndType        #79:#86       // accept:(Ljava/io/File;Ljava/lang/String;)Z\n+  #126 = NameAndType        #79:#89       // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #127 = Class              #160          // java/nio/file/FileVisitResult\n+  #128 = NameAndType        #161:#162     // CONTINUE:Ljava/nio/file/FileVisitResult;\n+  #129 = NameAndType        #163:#162     // TERMINATE:Ljava/nio/file/FileVisitResult;\n+  #130 = NameAndType        #164:#165     // add:(Ljava/lang/Object;)Z\n+  #131 = Class              #166          // java/util/Collections\n+  #132 = NameAndType        #167:#168     // unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n+  #133 = NameAndType        #169:#165     // remove:(Ljava/lang/Object;)Z\n+  #134 = NameAndType        #170:#56      // clear:()V\n+  #135 = NameAndType        #171:#172     // addAll:(Ljava/util/Collection;)Z\n+  #136 = Utf8               java/lang/StringBuilder\n+  #137 = NameAndType        #101:#102     // toString:()Ljava/lang/String;\n+  #138 = NameAndType        #173:#174     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #139 = Utf8               (\n+  #140 = NameAndType        #175:#176     // size:()I\n+  #141 = Utf8               ,\n+  #142 = NameAndType        #177:#178     // get:(I)Ljava/lang/Object;\n+  #143 = NameAndType        #173:#179     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #144 = Utf8               )\n+  #145 = Utf8               org/apache/commons/io/filefilter/OrFileFilter\n+  #146 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+  #147 = Utf8               org/apache/commons/io/filefilter/ConditionalFileFilter\n+  #148 = Utf8               java/io/Serializable\n+  #149 = Utf8               java/util/Iterator\n+  #150 = Utf8               java/util/Objects\n+  #151 = Utf8               requireNonNull\n+  #152 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #153 = Utf8               (Ljava/util/Collection;)V\n+  #154 = Utf8               iterator\n+  #155 = Utf8               ()Ljava/util/Iterator;\n+  #156 = Utf8               hasNext\n+  #157 = Utf8               ()Z\n+  #158 = Utf8               next\n+  #159 = Utf8               ()Ljava/lang/Object;\n+  #160 = Utf8               java/nio/file/FileVisitResult\n+  #161 = Utf8               CONTINUE\n+  #162 = Utf8               Ljava/nio/file/FileVisitResult;\n+  #163 = Utf8               TERMINATE\n+  #164 = Utf8               add\n+  #165 = Utf8               (Ljava/lang/Object;)Z\n+  #166 = Utf8               java/util/Collections\n+  #167 = Utf8               unmodifiableList\n+  #168 = Utf8               (Ljava/util/List;)Ljava/util/List;\n+  #169 = Utf8               remove\n+  #170 = Utf8               clear\n+  #171 = Utf8               addAll\n+  #172 = Utf8               (Ljava/util/Collection;)Z\n+  #173 = Utf8               append\n+  #174 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #175 = Utf8               size\n+  #176 = Utf8               ()I\n+  #177 = Utf8               get\n+  #178 = Utf8               (I)Ljava/lang/Object;\n+  #179 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n {\n   private static final long serialVersionUID = 5767770777065432721l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 5767770777065432721l\n \n   private final java.util.List<org.apache.commons.io.filefilter.IOFileFilter> fileFilters;\n@@ -483,24 +481,25 @@\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: getfield      #6                  // Field fileFilters:Ljava/util/List;\n          4: aload_1\n          5: ldc           #25                 // String fileFilter\n          7: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        10: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n-        15: pop\n-        16: return\n+        10: checkcast     #19                 // class org/apache/commons/io/filefilter/IOFileFilter\n+        13: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        18: pop\n+        19: return\n       LineNumberTable:\n         line 149: 0\n-        line 150: 16\n+        line 150: 19\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      17     0  this   Lorg/apache/commons/io/filefilter/OrFileFilter;\n-            0      17     1 fileFilter   Lorg/apache/commons/io/filefilter/IOFileFilter;\n+            0      20     0  this   Lorg/apache/commons/io/filefilter/OrFileFilter;\n+            0      20     1 fileFilter   Lorg/apache/commons/io/filefilter/IOFileFilter;\n \n   public void addFileFilter(org.apache.commons.io.filefilter.IOFileFilter...);\n     descriptor: ([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=2, locals=6, args_size=2\n          0: aload_1\n"}]}
