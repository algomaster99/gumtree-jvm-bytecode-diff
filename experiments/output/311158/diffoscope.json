{"diffoscope-json-version": 1, "source1": "first/AsiExtraField.class", "source2": "second/AsiExtraField.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,231 +1,231 @@\n-  SHA-256 checksum 43b984756210bb683aab750f74288880af5988f323a6303736f73674125bdcc1\n+  SHA-256 checksum d9dbc6dae30e6054b443baf233c7707b1f38306cc6d6b61a817ad05532e1dbde\n   Compiled from \"AsiExtraField.java\"\n public class org.apache.commons.compress.archivers.zip.AsiExtraField implements org.apache.commons.compress.archivers.zip.ZipExtraField,org.apache.commons.compress.archivers.zip.UnixStat,java.lang.Cloneable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #33                         // org/apache/commons/compress/archivers/zip/AsiExtraField\n-  super_class: #63                        // java/lang/Object\n+  this_class: #12                         // org/apache/commons/compress/archivers/zip/AsiExtraField\n+  super_class: #4                         // java/lang/Object\n   interfaces: 3, fields: 8, methods: 22, attributes: 1\n Constant pool:\n-    #1 = Class              #121          // org/apache/commons/compress/archivers/zip/ZipConstants\n-    #2 = Methodref          #63.#122      // java/lang/Object.\"<init>\":()V\n-    #3 = String             #123          //\n-    #4 = Fieldref           #33.#124      // org/apache/commons/compress/archivers/zip/AsiExtraField.link:Ljava/lang/String;\n-    #5 = Class              #125          // java/util/zip/CRC32\n-    #6 = Methodref          #5.#122       // java/util/zip/CRC32.\"<init>\":()V\n-    #7 = Fieldref           #33.#126      // org/apache/commons/compress/archivers/zip/AsiExtraField.crc:Ljava/util/zip/CRC32;\n-    #8 = Fieldref           #33.#127      // org/apache/commons/compress/archivers/zip/AsiExtraField.HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-    #9 = Class              #128          // org/apache/commons/compress/archivers/zip/ZipShort\n-   #10 = Methodref          #33.#129      // org/apache/commons/compress/archivers/zip/AsiExtraField.getLinkedFile:()Ljava/lang/String;\n-   #11 = Methodref          #130.#131     // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-   #12 = Methodref          #50.#132      // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-   #13 = Methodref          #9.#133       // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-   #14 = Methodref          #33.#134      // org/apache/commons/compress/archivers/zip/AsiExtraField.getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #15 = Methodref          #9.#135       // org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I\n-   #16 = Methodref          #33.#136      // org/apache/commons/compress/archivers/zip/AsiExtraField.getMode:()I\n-   #17 = Methodref          #9.#137       // org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B\n-   #18 = Methodref          #138.#139     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #19 = Methodref          #140.#141     // org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B\n-   #20 = Methodref          #33.#142      // org/apache/commons/compress/archivers/zip/AsiExtraField.getUserId:()I\n-   #21 = Methodref          #33.#143      // org/apache/commons/compress/archivers/zip/AsiExtraField.getGroupId:()I\n-   #22 = Methodref          #5.#144       // java/util/zip/CRC32.reset:()V\n-   #23 = Methodref          #5.#145       // java/util/zip/CRC32.update:([B)V\n-   #24 = Methodref          #5.#146       // java/util/zip/CRC32.getValue:()J\n-   #25 = Methodref          #33.#147      // org/apache/commons/compress/archivers/zip/AsiExtraField.getLocalFileDataData:()[B\n-   #26 = Fieldref           #33.#148      // org/apache/commons/compress/archivers/zip/AsiExtraField.uid:I\n-   #27 = Fieldref           #33.#149      // org/apache/commons/compress/archivers/zip/AsiExtraField.gid:I\n-   #28 = Fieldref           #33.#150      // org/apache/commons/compress/archivers/zip/AsiExtraField.mode:I\n-   #29 = Methodref          #33.#151      // org/apache/commons/compress/archivers/zip/AsiExtraField.getMode:(I)I\n-   #30 = Methodref          #50.#152      // java/lang/String.isEmpty:()Z\n-   #31 = Fieldref           #33.#153      // org/apache/commons/compress/archivers/zip/AsiExtraField.dirFlag:Z\n-   #32 = Methodref          #33.#154      // org/apache/commons/compress/archivers/zip/AsiExtraField.isLink:()Z\n-   #33 = Class              #155          // org/apache/commons/compress/archivers/zip/AsiExtraField\n-   #34 = Class              #156          // java/util/zip/ZipException\n-   #35 = Class              #157          // java/lang/StringBuilder\n-   #36 = Methodref          #35.#122      // java/lang/StringBuilder.\"<init>\":()V\n-   #37 = String             #158          // The length is too short, only\n-   #38 = Methodref          #35.#159      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #39 = Methodref          #35.#160      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #40 = String             #161          //  bytes, expected at least\n-   #41 = Methodref          #35.#162      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #42 = Methodref          #34.#163      // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-   #43 = Methodref          #140.#164     // org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n-   #44 = String             #165          // Bad CRC checksum, expected\n-   #45 = Methodref          #166.#167     // java/lang/Long.toHexString:(J)Ljava/lang/String;\n-   #46 = String             #168          //  instead of\n-   #47 = Methodref          #9.#169       // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-   #48 = String             #170          // Bad symbolic link name length\n-   #49 = String             #171          //  in ASI extra field\n-   #50 = Class              #172          // java/lang/String\n-   #51 = Methodref          #50.#173      // java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n-   #52 = Class              #174          // org/apache/commons/compress/archivers/zip/UnixStat\n-   #53 = Methodref          #33.#175      // org/apache/commons/compress/archivers/zip/AsiExtraField.setDirectory:(Z)V\n-   #54 = Methodref          #33.#176      // org/apache/commons/compress/archivers/zip/AsiExtraField.setMode:(I)V\n-   #55 = Methodref          #33.#177      // org/apache/commons/compress/archivers/zip/AsiExtraField.parseFromLocalFileData:([BII)V\n-   #56 = Integer            32768\n-   #57 = Integer            40960\n-   #58 = Methodref          #33.#178      // org/apache/commons/compress/archivers/zip/AsiExtraField.isDirectory:()Z\n-   #59 = Methodref          #63.#179      // java/lang/Object.clone:()Ljava/lang/Object;\n-   #60 = Class              #180          // java/lang/CloneNotSupportedException\n-   #61 = Class              #181          // java/lang/IllegalStateException\n-   #62 = Methodref          #61.#182      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/Throwable;)V\n-   #63 = Class              #183          // java/lang/Object\n-   #64 = Class              #184          // org/apache/commons/compress/archivers/zip/ZipExtraField\n-   #65 = Class              #185          // java/lang/Cloneable\n-   #66 = Utf8               HEADER_ID\n-   #67 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #68 = Utf8               MIN_SIZE\n-   #69 = Utf8               I\n-   #70 = Utf8               ConstantValue\n-   #71 = Integer            14\n-   #72 = Utf8               mode\n-   #73 = Utf8               uid\n-   #74 = Utf8               gid\n-   #75 = Utf8               link\n-   #76 = Utf8               Ljava/lang/String;\n-   #77 = Utf8               dirFlag\n-   #78 = Utf8               Z\n-   #79 = Utf8               crc\n-   #80 = Utf8               Ljava/util/zip/CRC32;\n-   #81 = Utf8               <init>\n-   #82 = Utf8               ()V\n-   #83 = Utf8               Code\n-   #84 = Utf8               LineNumberTable\n-   #85 = Utf8               getHeaderId\n-   #86 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #87 = Utf8               getLocalFileDataLength\n-   #88 = Utf8               getCentralDirectoryLength\n-   #89 = Utf8               getLocalFileDataData\n-   #90 = Utf8               ()[B\n-   #91 = Utf8               getCentralDirectoryData\n-   #92 = Utf8               setUserId\n-   #93 = Utf8               (I)V\n-   #94 = Utf8               getUserId\n-   #95 = Utf8               ()I\n-   #96 = Utf8               setGroupId\n-   #97 = Utf8               getGroupId\n-   #98 = Utf8               setLinkedFile\n-   #99 = Utf8               (Ljava/lang/String;)V\n-  #100 = Utf8               getLinkedFile\n-  #101 = Utf8               ()Ljava/lang/String;\n-  #102 = Utf8               isLink\n-  #103 = Utf8               ()Z\n-  #104 = Utf8               StackMapTable\n-  #105 = Utf8               setMode\n-  #106 = Utf8               getMode\n-  #107 = Utf8               setDirectory\n-  #108 = Utf8               (Z)V\n-  #109 = Utf8               isDirectory\n-  #110 = Utf8               parseFromLocalFileData\n-  #111 = Utf8               ([BII)V\n-  #112 = Class              #186          // \"[B\"\n-  #113 = Utf8               Exceptions\n-  #114 = Utf8               parseFromCentralDirectoryData\n-  #115 = Utf8               (I)I\n-  #116 = Utf8               clone\n-  #117 = Utf8               ()Ljava/lang/Object;\n-  #118 = Utf8               <clinit>\n-  #119 = Utf8               SourceFile\n-  #120 = Utf8               AsiExtraField.java\n-  #121 = Utf8               org/apache/commons/compress/archivers/zip/ZipConstants\n-  #122 = NameAndType        #81:#82       // \"<init>\":()V\n-  #123 = Utf8\n-  #124 = NameAndType        #75:#76       // link:Ljava/lang/String;\n-  #125 = Utf8               java/util/zip/CRC32\n-  #126 = NameAndType        #79:#80       // crc:Ljava/util/zip/CRC32;\n-  #127 = NameAndType        #66:#67       // HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #128 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-  #129 = NameAndType        #100:#101     // getLinkedFile:()Ljava/lang/String;\n-  #130 = Class              #187          // java/nio/charset/Charset\n-  #131 = NameAndType        #188:#189     // defaultCharset:()Ljava/nio/charset/Charset;\n-  #132 = NameAndType        #190:#191     // getBytes:(Ljava/nio/charset/Charset;)[B\n-  #133 = NameAndType        #81:#93       // \"<init>\":(I)V\n-  #134 = NameAndType        #87:#86       // getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #135 = NameAndType        #192:#95      // getValue:()I\n-  #136 = NameAndType        #106:#95      // getMode:()I\n-  #137 = NameAndType        #190:#193     // getBytes:(I)[B\n-  #138 = Class              #194          // java/lang/System\n-  #139 = NameAndType        #195:#196     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #140 = Class              #197          // org/apache/commons/compress/archivers/zip/ZipLong\n-  #141 = NameAndType        #190:#198     // getBytes:(J)[B\n-  #142 = NameAndType        #94:#95       // getUserId:()I\n-  #143 = NameAndType        #97:#95       // getGroupId:()I\n-  #144 = NameAndType        #199:#82      // reset:()V\n-  #145 = NameAndType        #200:#201     // update:([B)V\n-  #146 = NameAndType        #192:#202     // getValue:()J\n-  #147 = NameAndType        #89:#90       // getLocalFileDataData:()[B\n-  #148 = NameAndType        #73:#69       // uid:I\n-  #149 = NameAndType        #74:#69       // gid:I\n-  #150 = NameAndType        #72:#69       // mode:I\n-  #151 = NameAndType        #106:#115     // getMode:(I)I\n-  #152 = NameAndType        #203:#103     // isEmpty:()Z\n-  #153 = NameAndType        #77:#78       // dirFlag:Z\n-  #154 = NameAndType        #102:#103     // isLink:()Z\n-  #155 = Utf8               org/apache/commons/compress/archivers/zip/AsiExtraField\n-  #156 = Utf8               java/util/zip/ZipException\n-  #157 = Utf8               java/lang/StringBuilder\n-  #158 = Utf8               The length is too short, only\n-  #159 = NameAndType        #204:#205     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #160 = NameAndType        #204:#206     // append:(I)Ljava/lang/StringBuilder;\n-  #161 = Utf8                bytes, expected at least\n-  #162 = NameAndType        #207:#101     // toString:()Ljava/lang/String;\n-  #163 = NameAndType        #81:#99       // \"<init>\":(Ljava/lang/String;)V\n-  #164 = NameAndType        #192:#208     // getValue:([BI)J\n-  #165 = Utf8               Bad CRC checksum, expected\n-  #166 = Class              #209          // java/lang/Long\n-  #167 = NameAndType        #210:#211     // toHexString:(J)Ljava/lang/String;\n-  #168 = Utf8                instead of\n-  #169 = NameAndType        #192:#212     // getValue:([BI)I\n-  #170 = Utf8               Bad symbolic link name length\n-  #171 = Utf8                in ASI extra field\n-  #172 = Utf8               java/lang/String\n-  #173 = NameAndType        #81:#213      // \"<init>\":([BLjava/nio/charset/Charset;)V\n-  #174 = Utf8               org/apache/commons/compress/archivers/zip/UnixStat\n-  #175 = NameAndType        #107:#108     // setDirectory:(Z)V\n-  #176 = NameAndType        #105:#93      // setMode:(I)V\n-  #177 = NameAndType        #110:#111     // parseFromLocalFileData:([BII)V\n-  #178 = NameAndType        #109:#103     // isDirectory:()Z\n-  #179 = NameAndType        #116:#117     // clone:()Ljava/lang/Object;\n-  #180 = Utf8               java/lang/CloneNotSupportedException\n-  #181 = Utf8               java/lang/IllegalStateException\n-  #182 = NameAndType        #81:#214      // \"<init>\":(Ljava/lang/Throwable;)V\n-  #183 = Utf8               java/lang/Object\n-  #184 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n-  #185 = Utf8               java/lang/Cloneable\n-  #186 = Utf8               [B\n-  #187 = Utf8               java/nio/charset/Charset\n-  #188 = Utf8               defaultCharset\n-  #189 = Utf8               ()Ljava/nio/charset/Charset;\n-  #190 = Utf8               getBytes\n-  #191 = Utf8               (Ljava/nio/charset/Charset;)[B\n-  #192 = Utf8               getValue\n-  #193 = Utf8               (I)[B\n-  #194 = Utf8               java/lang/System\n-  #195 = Utf8               arraycopy\n-  #196 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #197 = Utf8               org/apache/commons/compress/archivers/zip/ZipLong\n-  #198 = Utf8               (J)[B\n-  #199 = Utf8               reset\n-  #200 = Utf8               update\n-  #201 = Utf8               ([B)V\n-  #202 = Utf8               ()J\n-  #203 = Utf8               isEmpty\n-  #204 = Utf8               append\n-  #205 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #206 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #207 = Utf8               toString\n-  #208 = Utf8               ([BI)J\n-  #209 = Utf8               java/lang/Long\n-  #210 = Utf8               toHexString\n-  #211 = Utf8               (J)Ljava/lang/String;\n-  #212 = Utf8               ([BI)I\n-  #213 = Utf8               ([BLjava/nio/charset/Charset;)V\n-  #214 = Utf8               (Ljava/lang/Throwable;)V\n+    #1 = Class              #2            // org/apache/commons/compress/archivers/zip/ZipConstants\n+    #2 = Utf8               org/apache/commons/compress/archivers/zip/ZipConstants\n+    #3 = Methodref          #4.#5         // java/lang/Object.\"<init>\":()V\n+    #4 = Class              #6            // java/lang/Object\n+    #5 = NameAndType        #7:#8         // \"<init>\":()V\n+    #6 = Utf8               java/lang/Object\n+    #7 = Utf8               <init>\n+    #8 = Utf8               ()V\n+    #9 = String             #10           //\n+   #10 = Utf8\n+   #11 = Fieldref           #12.#13       // org/apache/commons/compress/archivers/zip/AsiExtraField.link:Ljava/lang/String;\n+   #12 = Class              #14           // org/apache/commons/compress/archivers/zip/AsiExtraField\n+   #13 = NameAndType        #15:#16       // link:Ljava/lang/String;\n+   #14 = Utf8               org/apache/commons/compress/archivers/zip/AsiExtraField\n+   #15 = Utf8               link\n+   #16 = Utf8               Ljava/lang/String;\n+   #17 = Class              #18           // java/util/zip/CRC32\n+   #18 = Utf8               java/util/zip/CRC32\n+   #19 = Methodref          #17.#5        // java/util/zip/CRC32.\"<init>\":()V\n+   #20 = Fieldref           #12.#21       // org/apache/commons/compress/archivers/zip/AsiExtraField.crc:Ljava/util/zip/CRC32;\n+   #21 = NameAndType        #22:#23       // crc:Ljava/util/zip/CRC32;\n+   #22 = Utf8               crc\n+   #23 = Utf8               Ljava/util/zip/CRC32;\n+   #24 = Fieldref           #12.#25       // org/apache/commons/compress/archivers/zip/AsiExtraField.HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #25 = NameAndType        #26:#27       // HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #26 = Utf8               HEADER_ID\n+   #27 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #28 = Class              #29           // org/apache/commons/compress/archivers/zip/ZipShort\n+   #29 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+   #30 = Methodref          #12.#31       // org/apache/commons/compress/archivers/zip/AsiExtraField.getLinkedFile:()Ljava/lang/String;\n+   #31 = NameAndType        #32:#33       // getLinkedFile:()Ljava/lang/String;\n+   #32 = Utf8               getLinkedFile\n+   #33 = Utf8               ()Ljava/lang/String;\n+   #34 = Methodref          #35.#36       // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+   #35 = Class              #37           // java/nio/charset/Charset\n+   #36 = NameAndType        #38:#39       // defaultCharset:()Ljava/nio/charset/Charset;\n+   #37 = Utf8               java/nio/charset/Charset\n+   #38 = Utf8               defaultCharset\n+   #39 = Utf8               ()Ljava/nio/charset/Charset;\n+   #40 = Methodref          #41.#42       // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+   #41 = Class              #43           // java/lang/String\n+   #42 = NameAndType        #44:#45       // getBytes:(Ljava/nio/charset/Charset;)[B\n+   #43 = Utf8               java/lang/String\n+   #44 = Utf8               getBytes\n+   #45 = Utf8               (Ljava/nio/charset/Charset;)[B\n+   #46 = Methodref          #28.#47       // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+   #47 = NameAndType        #7:#48        // \"<init>\":(I)V\n+   #48 = Utf8               (I)V\n+   #49 = Methodref          #12.#50       // org/apache/commons/compress/archivers/zip/AsiExtraField.getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #50 = NameAndType        #51:#52       // getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #51 = Utf8               getLocalFileDataLength\n+   #52 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #53 = Methodref          #28.#54       // org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I\n+   #54 = NameAndType        #55:#56       // getValue:()I\n+   #55 = Utf8               getValue\n+   #56 = Utf8               ()I\n+   #57 = Methodref          #12.#58       // org/apache/commons/compress/archivers/zip/AsiExtraField.getMode:()I\n+   #58 = NameAndType        #59:#56       // getMode:()I\n+   #59 = Utf8               getMode\n+   #60 = Methodref          #28.#61       // org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B\n+   #61 = NameAndType        #44:#62       // getBytes:(I)[B\n+   #62 = Utf8               (I)[B\n+   #63 = Methodref          #64.#65       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #64 = Class              #66           // java/lang/System\n+   #65 = NameAndType        #67:#68       // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #66 = Utf8               java/lang/System\n+   #67 = Utf8               arraycopy\n+   #68 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #69 = Methodref          #70.#71       // org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B\n+   #70 = Class              #72           // org/apache/commons/compress/archivers/zip/ZipLong\n+   #71 = NameAndType        #44:#73       // getBytes:(J)[B\n+   #72 = Utf8               org/apache/commons/compress/archivers/zip/ZipLong\n+   #73 = Utf8               (J)[B\n+   #74 = Methodref          #12.#75       // org/apache/commons/compress/archivers/zip/AsiExtraField.getUserId:()I\n+   #75 = NameAndType        #76:#56       // getUserId:()I\n+   #76 = Utf8               getUserId\n+   #77 = Methodref          #12.#78       // org/apache/commons/compress/archivers/zip/AsiExtraField.getGroupId:()I\n+   #78 = NameAndType        #79:#56       // getGroupId:()I\n+   #79 = Utf8               getGroupId\n+   #80 = Methodref          #17.#81       // java/util/zip/CRC32.reset:()V\n+   #81 = NameAndType        #82:#8        // reset:()V\n+   #82 = Utf8               reset\n+   #83 = Methodref          #17.#84       // java/util/zip/CRC32.update:([B)V\n+   #84 = NameAndType        #85:#86       // update:([B)V\n+   #85 = Utf8               update\n+   #86 = Utf8               ([B)V\n+   #87 = Methodref          #17.#88       // java/util/zip/CRC32.getValue:()J\n+   #88 = NameAndType        #55:#89       // getValue:()J\n+   #89 = Utf8               ()J\n+   #90 = Methodref          #12.#91       // org/apache/commons/compress/archivers/zip/AsiExtraField.getLocalFileDataData:()[B\n+   #91 = NameAndType        #92:#93       // getLocalFileDataData:()[B\n+   #92 = Utf8               getLocalFileDataData\n+   #93 = Utf8               ()[B\n+   #94 = Fieldref           #12.#95       // org/apache/commons/compress/archivers/zip/AsiExtraField.uid:I\n+   #95 = NameAndType        #96:#97       // uid:I\n+   #96 = Utf8               uid\n+   #97 = Utf8               I\n+   #98 = Fieldref           #12.#99       // org/apache/commons/compress/archivers/zip/AsiExtraField.gid:I\n+   #99 = NameAndType        #100:#97      // gid:I\n+  #100 = Utf8               gid\n+  #101 = Fieldref           #12.#102      // org/apache/commons/compress/archivers/zip/AsiExtraField.mode:I\n+  #102 = NameAndType        #103:#97      // mode:I\n+  #103 = Utf8               mode\n+  #104 = Methodref          #12.#105      // org/apache/commons/compress/archivers/zip/AsiExtraField.getMode:(I)I\n+  #105 = NameAndType        #59:#106      // getMode:(I)I\n+  #106 = Utf8               (I)I\n+  #107 = Methodref          #41.#108      // java/lang/String.isEmpty:()Z\n+  #108 = NameAndType        #109:#110     // isEmpty:()Z\n+  #109 = Utf8               isEmpty\n+  #110 = Utf8               ()Z\n+  #111 = Fieldref           #12.#112      // org/apache/commons/compress/archivers/zip/AsiExtraField.dirFlag:Z\n+  #112 = NameAndType        #113:#114     // dirFlag:Z\n+  #113 = Utf8               dirFlag\n+  #114 = Utf8               Z\n+  #115 = Methodref          #12.#116      // org/apache/commons/compress/archivers/zip/AsiExtraField.isLink:()Z\n+  #116 = NameAndType        #117:#110     // isLink:()Z\n+  #117 = Utf8               isLink\n+  #118 = Class              #119          // java/util/zip/ZipException\n+  #119 = Utf8               java/util/zip/ZipException\n+  #120 = Class              #121          // java/lang/StringBuilder\n+  #121 = Utf8               java/lang/StringBuilder\n+  #122 = Methodref          #120.#5       // java/lang/StringBuilder.\"<init>\":()V\n+  #123 = String             #124          // The length is too short, only\n+  #124 = Utf8               The length is too short, only\n+  #125 = Methodref          #120.#126     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #126 = NameAndType        #127:#128     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #127 = Utf8               append\n+  #128 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #129 = Methodref          #120.#130     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #130 = NameAndType        #127:#131     // append:(I)Ljava/lang/StringBuilder;\n+  #131 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #132 = String             #133          //  bytes, expected at least\n+  #133 = Utf8                bytes, expected at least\n+  #134 = Methodref          #120.#135     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #135 = NameAndType        #136:#33      // toString:()Ljava/lang/String;\n+  #136 = Utf8               toString\n+  #137 = Methodref          #118.#138     // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+  #138 = NameAndType        #7:#139       // \"<init>\":(Ljava/lang/String;)V\n+  #139 = Utf8               (Ljava/lang/String;)V\n+  #140 = Methodref          #70.#141      // org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n+  #141 = NameAndType        #55:#142      // getValue:([BI)J\n+  #142 = Utf8               ([BI)J\n+  #143 = String             #144          // Bad CRC checksum, expected\n+  #144 = Utf8               Bad CRC checksum, expected\n+  #145 = Methodref          #146.#147     // java/lang/Long.toHexString:(J)Ljava/lang/String;\n+  #146 = Class              #148          // java/lang/Long\n+  #147 = NameAndType        #149:#150     // toHexString:(J)Ljava/lang/String;\n+  #148 = Utf8               java/lang/Long\n+  #149 = Utf8               toHexString\n+  #150 = Utf8               (J)Ljava/lang/String;\n+  #151 = String             #152          //  instead of\n+  #152 = Utf8                instead of\n+  #153 = Methodref          #28.#154      // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+  #154 = NameAndType        #55:#155      // getValue:([BI)I\n+  #155 = Utf8               ([BI)I\n+  #156 = String             #157          // Bad symbolic link name length\n+  #157 = Utf8               Bad symbolic link name length\n+  #158 = String             #159          //  in ASI extra field\n+  #159 = Utf8                in ASI extra field\n+  #160 = Methodref          #41.#161      // java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n+  #161 = NameAndType        #7:#162       // \"<init>\":([BLjava/nio/charset/Charset;)V\n+  #162 = Utf8               ([BLjava/nio/charset/Charset;)V\n+  #163 = Class              #164          // org/apache/commons/compress/archivers/zip/UnixStat\n+  #164 = Utf8               org/apache/commons/compress/archivers/zip/UnixStat\n+  #165 = Methodref          #12.#166      // org/apache/commons/compress/archivers/zip/AsiExtraField.setDirectory:(Z)V\n+  #166 = NameAndType        #167:#168     // setDirectory:(Z)V\n+  #167 = Utf8               setDirectory\n+  #168 = Utf8               (Z)V\n+  #169 = Methodref          #12.#170      // org/apache/commons/compress/archivers/zip/AsiExtraField.setMode:(I)V\n+  #170 = NameAndType        #171:#48      // setMode:(I)V\n+  #171 = Utf8               setMode\n+  #172 = Methodref          #12.#173      // org/apache/commons/compress/archivers/zip/AsiExtraField.parseFromLocalFileData:([BII)V\n+  #173 = NameAndType        #174:#175     // parseFromLocalFileData:([BII)V\n+  #174 = Utf8               parseFromLocalFileData\n+  #175 = Utf8               ([BII)V\n+  #176 = Integer            32768\n+  #177 = Integer            40960\n+  #178 = Methodref          #12.#179      // org/apache/commons/compress/archivers/zip/AsiExtraField.isDirectory:()Z\n+  #179 = NameAndType        #180:#110     // isDirectory:()Z\n+  #180 = Utf8               isDirectory\n+  #181 = Methodref          #4.#182       // java/lang/Object.clone:()Ljava/lang/Object;\n+  #182 = NameAndType        #183:#184     // clone:()Ljava/lang/Object;\n+  #183 = Utf8               clone\n+  #184 = Utf8               ()Ljava/lang/Object;\n+  #185 = Class              #186          // java/lang/CloneNotSupportedException\n+  #186 = Utf8               java/lang/CloneNotSupportedException\n+  #187 = Class              #188          // java/lang/IllegalStateException\n+  #188 = Utf8               java/lang/IllegalStateException\n+  #189 = Methodref          #187.#190     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/Throwable;)V\n+  #190 = NameAndType        #7:#191       // \"<init>\":(Ljava/lang/Throwable;)V\n+  #191 = Utf8               (Ljava/lang/Throwable;)V\n+  #192 = Class              #193          // org/apache/commons/compress/archivers/zip/ZipExtraField\n+  #193 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n+  #194 = Class              #195          // java/lang/Cloneable\n+  #195 = Utf8               java/lang/Cloneable\n+  #196 = Utf8               MIN_SIZE\n+  #197 = Utf8               ConstantValue\n+  #198 = Integer            14\n+  #199 = Utf8               Code\n+  #200 = Utf8               LineNumberTable\n+  #201 = Utf8               getHeaderId\n+  #202 = Utf8               getCentralDirectoryLength\n+  #203 = Utf8               getCentralDirectoryData\n+  #204 = Utf8               setUserId\n+  #205 = Utf8               setGroupId\n+  #206 = Utf8               setLinkedFile\n+  #207 = Utf8               StackMapTable\n+  #208 = Class              #209          // \"[B\"\n+  #209 = Utf8               [B\n+  #210 = Utf8               Exceptions\n+  #211 = Utf8               parseFromCentralDirectoryData\n+  #212 = Utf8               <clinit>\n+  #213 = Utf8               SourceFile\n+  #214 = Utf8               AsiExtraField.java\n {\n   private static final org.apache.commons.compress.archivers.zip.ZipShort HEADER_ID;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final int MIN_SIZE = 14;\n     descriptor: I\n@@ -258,160 +258,160 @@\n \n   public org.apache.commons.compress.archivers.zip.AsiExtraField();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #2                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #3                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: ldc           #3                  // String\n-         7: putfield      #4                  // Field link:Ljava/lang/String;\n+         5: ldc           #9                  // String\n+         7: putfield      #11                 // Field link:Ljava/lang/String;\n         10: aload_0\n-        11: new           #5                  // class java/util/zip/CRC32\n+        11: new           #17                 // class java/util/zip/CRC32\n         14: dup\n-        15: invokespecial #6                  // Method java/util/zip/CRC32.\"<init>\":()V\n-        18: putfield      #7                  // Field crc:Ljava/util/zip/CRC32;\n+        15: invokespecial #19                 // Method java/util/zip/CRC32.\"<init>\":()V\n+        18: putfield      #20                 // Field crc:Ljava/util/zip/CRC32;\n         21: return\n       LineNumberTable:\n         line 89: 0\n         line 77: 4\n         line 86: 10\n         line 90: 21\n \n   public org.apache.commons.compress.archivers.zip.ZipShort getHeaderId();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n-         0: getstatic     #8                  // Field HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+         0: getstatic     #24                 // Field HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n          3: areturn\n       LineNumberTable:\n         line 98: 0\n \n   public org.apache.commons.compress.archivers.zip.ZipShort getLocalFileDataLength();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n-         0: new           #9                  // class org/apache/commons/compress/archivers/zip/ZipShort\n+         0: new           #28                 // class org/apache/commons/compress/archivers/zip/ZipShort\n          3: dup\n          4: bipush        14\n          6: aload_0\n-         7: invokevirtual #10                 // Method getLinkedFile:()Ljava/lang/String;\n-        10: invokestatic  #11                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-        13: invokevirtual #12                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+         7: invokevirtual #30                 // Method getLinkedFile:()Ljava/lang/String;\n+        10: invokestatic  #34                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+        13: invokevirtual #40                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n         16: arraylength\n         17: iadd\n-        18: invokespecial #13                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+        18: invokespecial #46                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n         21: areturn\n       LineNumberTable:\n         line 109: 0\n         line 114: 7\n         line 109: 21\n \n   public org.apache.commons.compress.archivers.zip.ZipShort getCentralDirectoryLength();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #14                 // Method getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+         1: invokevirtual #49                 // Method getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n          4: areturn\n       LineNumberTable:\n         line 125: 0\n \n   public byte[] getLocalFileDataData();\n     descriptor: ()[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=6, args_size=1\n          0: aload_0\n-         1: invokevirtual #14                 // Method getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-         4: invokevirtual #15                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I\n+         1: invokevirtual #49                 // Method getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+         4: invokevirtual #53                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I\n          7: iconst_4\n          8: isub\n          9: newarray       byte\n         11: astore_1\n         12: aload_0\n-        13: invokevirtual #16                 // Method getMode:()I\n-        16: invokestatic  #17                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B\n+        13: invokevirtual #57                 // Method getMode:()I\n+        16: invokestatic  #60                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B\n         19: iconst_0\n         20: aload_1\n         21: iconst_0\n         22: iconst_2\n-        23: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        23: invokestatic  #63                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         26: aload_0\n-        27: invokevirtual #10                 // Method getLinkedFile:()Ljava/lang/String;\n-        30: invokestatic  #11                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-        33: invokevirtual #12                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+        27: invokevirtual #30                 // Method getLinkedFile:()Ljava/lang/String;\n+        30: invokestatic  #34                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+        33: invokevirtual #40                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n         36: astore_2\n         37: aload_2\n         38: arraylength\n         39: i2l\n-        40: invokestatic  #19                 // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B\n+        40: invokestatic  #69                 // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B\n         43: iconst_0\n         44: aload_1\n         45: iconst_2\n         46: iconst_4\n-        47: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        47: invokestatic  #63                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         50: aload_0\n-        51: invokevirtual #20                 // Method getUserId:()I\n-        54: invokestatic  #17                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B\n+        51: invokevirtual #74                 // Method getUserId:()I\n+        54: invokestatic  #60                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B\n         57: iconst_0\n         58: aload_1\n         59: bipush        6\n         61: iconst_2\n-        62: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        62: invokestatic  #63                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         65: aload_0\n-        66: invokevirtual #21                 // Method getGroupId:()I\n-        69: invokestatic  #17                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B\n+        66: invokevirtual #77                 // Method getGroupId:()I\n+        69: invokestatic  #60                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B\n         72: iconst_0\n         73: aload_1\n         74: bipush        8\n         76: iconst_2\n-        77: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        77: invokestatic  #63                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         80: aload_2\n         81: iconst_0\n         82: aload_1\n         83: bipush        10\n         85: aload_2\n         86: arraylength\n-        87: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        87: invokestatic  #63                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         90: aload_0\n-        91: getfield      #7                  // Field crc:Ljava/util/zip/CRC32;\n-        94: invokevirtual #22                 // Method java/util/zip/CRC32.reset:()V\n+        91: getfield      #20                 // Field crc:Ljava/util/zip/CRC32;\n+        94: invokevirtual #80                 // Method java/util/zip/CRC32.reset:()V\n         97: aload_0\n-        98: getfield      #7                  // Field crc:Ljava/util/zip/CRC32;\n+        98: getfield      #20                 // Field crc:Ljava/util/zip/CRC32;\n        101: aload_1\n-       102: invokevirtual #23                 // Method java/util/zip/CRC32.update:([B)V\n+       102: invokevirtual #83                 // Method java/util/zip/CRC32.update:([B)V\n        105: aload_0\n-       106: getfield      #7                  // Field crc:Ljava/util/zip/CRC32;\n-       109: invokevirtual #24                 // Method java/util/zip/CRC32.getValue:()J\n+       106: getfield      #20                 // Field crc:Ljava/util/zip/CRC32;\n+       109: invokevirtual #87                 // Method java/util/zip/CRC32.getValue:()J\n        112: lstore_3\n        113: aload_1\n        114: arraylength\n        115: iconst_4\n        116: iadd\n        117: newarray       byte\n        119: astore        5\n        121: lload_3\n-       122: invokestatic  #19                 // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B\n+       122: invokestatic  #69                 // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B\n        125: iconst_0\n        126: aload         5\n        128: iconst_0\n        129: iconst_4\n-       130: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       130: invokestatic  #63                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        133: aload_1\n        134: iconst_0\n        135: aload         5\n        137: iconst_4\n        138: aload_1\n        139: arraylength\n-       140: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       140: invokestatic  #63                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        143: aload         5\n        145: areturn\n       LineNumberTable:\n         line 136: 0\n         line 137: 12\n         line 139: 26\n         line 141: 37\n@@ -428,106 +428,106 @@\n \n   public byte[] getCentralDirectoryData();\n     descriptor: ()[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #25                 // Method getLocalFileDataData:()[B\n+         1: invokevirtual #90                 // Method getLocalFileDataData:()[B\n          4: areturn\n       LineNumberTable:\n         line 165: 0\n \n   public void setUserId(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #26                 // Field uid:I\n+         2: putfield      #94                 // Field uid:I\n          5: return\n       LineNumberTable:\n         line 173: 0\n         line 174: 5\n \n   public int getUserId();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #26                 // Field uid:I\n+         1: getfield      #94                 // Field uid:I\n          4: ireturn\n       LineNumberTable:\n         line 181: 0\n \n   public void setGroupId(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #27                 // Field gid:I\n+         2: putfield      #98                 // Field gid:I\n          5: return\n       LineNumberTable:\n         line 189: 0\n         line 190: 5\n \n   public int getGroupId();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #27                 // Field gid:I\n+         1: getfield      #98                 // Field gid:I\n          4: ireturn\n       LineNumberTable:\n         line 197: 0\n \n   public void setLinkedFile(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #4                  // Field link:Ljava/lang/String;\n+         2: putfield      #11                 // Field link:Ljava/lang/String;\n          5: aload_0\n          6: aload_0\n          7: aload_0\n-         8: getfield      #28                 // Field mode:I\n-        11: invokevirtual #29                 // Method getMode:(I)I\n-        14: putfield      #28                 // Field mode:I\n+         8: getfield      #101                // Field mode:I\n+        11: invokevirtual #104                // Method getMode:(I)I\n+        14: putfield      #101                // Field mode:I\n         17: return\n       LineNumberTable:\n         line 207: 0\n         line 208: 5\n         line 209: 17\n \n   public java.lang.String getLinkedFile();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field link:Ljava/lang/String;\n+         1: getfield      #11                 // Field link:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 218: 0\n \n   public boolean isLink();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #10                 // Method getLinkedFile:()Ljava/lang/String;\n-         4: invokevirtual #30                 // Method java/lang/String.isEmpty:()Z\n+         1: invokevirtual #30                 // Method getLinkedFile:()Ljava/lang/String;\n+         4: invokevirtual #107                // Method java/lang/String.isEmpty:()Z\n          7: ifne          14\n         10: iconst_1\n         11: goto          15\n         14: iconst_0\n         15: ireturn\n       LineNumberTable:\n         line 226: 0\n@@ -540,62 +540,62 @@\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_0\n          2: iload_1\n-         3: invokevirtual #29                 // Method getMode:(I)I\n-         6: putfield      #28                 // Field mode:I\n+         3: invokevirtual #104                // Method getMode:(I)I\n+         6: putfield      #101                // Field mode:I\n          9: return\n       LineNumberTable:\n         line 234: 0\n         line 235: 9\n \n   public int getMode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #28                 // Field mode:I\n+         1: getfield      #101                // Field mode:I\n          4: ireturn\n       LineNumberTable:\n         line 242: 0\n \n   public void setDirectory(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #31                 // Field dirFlag:Z\n+         2: putfield      #111                // Field dirFlag:Z\n          5: aload_0\n          6: aload_0\n          7: aload_0\n-         8: getfield      #28                 // Field mode:I\n-        11: invokevirtual #29                 // Method getMode:(I)I\n-        14: putfield      #28                 // Field mode:I\n+         8: getfield      #101                // Field mode:I\n+        11: invokevirtual #104                // Method getMode:(I)I\n+        14: putfield      #101                // Field mode:I\n         17: return\n       LineNumberTable:\n         line 250: 0\n         line 251: 5\n         line 252: 17\n \n   public boolean isDirectory();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #31                 // Field dirFlag:Z\n+         1: getfield      #111                // Field dirFlag:Z\n          4: ifeq          18\n          7: aload_0\n-         8: invokevirtual #32                 // Method isLink:()Z\n+         8: invokevirtual #115                // Method isLink:()Z\n         11: ifne          18\n         14: iconst_1\n         15: goto          19\n         18: iconst_0\n         19: ireturn\n       LineNumberTable:\n         line 259: 0\n@@ -608,33 +608,33 @@\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=12, args_size=4\n          0: iload_3\n          1: bipush        14\n          3: if_icmpge     43\n-         6: new           #34                 // class java/util/zip/ZipException\n+         6: new           #118                // class java/util/zip/ZipException\n          9: dup\n-        10: new           #35                 // class java/lang/StringBuilder\n+        10: new           #120                // class java/lang/StringBuilder\n         13: dup\n-        14: invokespecial #36                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        17: ldc           #37                 // String The length is too short, only\n-        19: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        14: invokespecial #122                // Method java/lang/StringBuilder.\"<init>\":()V\n+        17: ldc           #123                // String The length is too short, only\n+        19: invokevirtual #125                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         22: iload_3\n-        23: invokevirtual #39                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        26: ldc           #40                 // String  bytes, expected at least\n-        28: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        23: invokevirtual #129                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        26: ldc           #132                // String  bytes, expected at least\n+        28: invokevirtual #125                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         31: bipush        14\n-        33: invokevirtual #39                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        36: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        39: invokespecial #42                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+        33: invokevirtual #129                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        36: invokevirtual #134                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        39: invokespecial #137                // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n         42: athrow\n         43: aload_1\n         44: iload_2\n-        45: invokestatic  #43                 // Method org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n+        45: invokestatic  #140                // Method org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n         48: lstore        4\n         50: iload_3\n         51: iconst_4\n         52: isub\n         53: newarray       byte\n         55: astore        6\n         57: aload_1\n@@ -642,123 +642,123 @@\n         59: iconst_4\n         60: iadd\n         61: aload         6\n         63: iconst_0\n         64: iload_3\n         65: iconst_4\n         66: isub\n-        67: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        67: invokestatic  #63                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         70: aload_0\n-        71: getfield      #7                  // Field crc:Ljava/util/zip/CRC32;\n-        74: invokevirtual #22                 // Method java/util/zip/CRC32.reset:()V\n+        71: getfield      #20                 // Field crc:Ljava/util/zip/CRC32;\n+        74: invokevirtual #80                 // Method java/util/zip/CRC32.reset:()V\n         77: aload_0\n-        78: getfield      #7                  // Field crc:Ljava/util/zip/CRC32;\n+        78: getfield      #20                 // Field crc:Ljava/util/zip/CRC32;\n         81: aload         6\n-        83: invokevirtual #23                 // Method java/util/zip/CRC32.update:([B)V\n+        83: invokevirtual #83                 // Method java/util/zip/CRC32.update:([B)V\n         86: aload_0\n-        87: getfield      #7                  // Field crc:Ljava/util/zip/CRC32;\n-        90: invokevirtual #24                 // Method java/util/zip/CRC32.getValue:()J\n+        87: getfield      #20                 // Field crc:Ljava/util/zip/CRC32;\n+        90: invokevirtual #87                 // Method java/util/zip/CRC32.getValue:()J\n         93: lstore        7\n         95: lload         4\n         97: lload         7\n         99: lcmp\n        100: ifeq          147\n-       103: new           #34                 // class java/util/zip/ZipException\n+       103: new           #118                // class java/util/zip/ZipException\n        106: dup\n-       107: new           #35                 // class java/lang/StringBuilder\n+       107: new           #120                // class java/lang/StringBuilder\n        110: dup\n-       111: invokespecial #36                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       114: ldc           #44                 // String Bad CRC checksum, expected\n-       116: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       111: invokespecial #122                // Method java/lang/StringBuilder.\"<init>\":()V\n+       114: ldc           #143                // String Bad CRC checksum, expected\n+       116: invokevirtual #125                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        119: lload         4\n-       121: invokestatic  #45                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;\n-       124: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       127: ldc           #46                 // String  instead of\n-       129: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       121: invokestatic  #145                // Method java/lang/Long.toHexString:(J)Ljava/lang/String;\n+       124: invokevirtual #125                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       127: ldc           #151                // String  instead of\n+       129: invokevirtual #125                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        132: lload         7\n-       134: invokestatic  #45                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;\n-       137: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       140: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       143: invokespecial #42                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+       134: invokestatic  #145                // Method java/lang/Long.toHexString:(J)Ljava/lang/String;\n+       137: invokevirtual #125                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       140: invokevirtual #134                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       143: invokespecial #137                // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n        146: athrow\n        147: aload         6\n        149: iconst_0\n-       150: invokestatic  #47                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+       150: invokestatic  #153                // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n        153: istore        9\n        155: aload         6\n        157: iconst_2\n-       158: invokestatic  #43                 // Method org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n+       158: invokestatic  #140                // Method org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n        161: l2i\n        162: istore        10\n        164: iload         10\n        166: iflt          180\n        169: iload         10\n        171: aload         6\n        173: arraylength\n        174: bipush        10\n        176: isub\n        177: if_icmple     213\n-       180: new           #34                 // class java/util/zip/ZipException\n+       180: new           #118                // class java/util/zip/ZipException\n        183: dup\n-       184: new           #35                 // class java/lang/StringBuilder\n+       184: new           #120                // class java/lang/StringBuilder\n        187: dup\n-       188: invokespecial #36                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       191: ldc           #48                 // String Bad symbolic link name length\n-       193: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       188: invokespecial #122                // Method java/lang/StringBuilder.\"<init>\":()V\n+       191: ldc           #156                // String Bad symbolic link name length\n+       193: invokevirtual #125                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        196: iload         10\n-       198: invokevirtual #39                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       201: ldc           #49                 // String  in ASI extra field\n-       203: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       206: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       209: invokespecial #42                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+       198: invokevirtual #129                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       201: ldc           #158                // String  in ASI extra field\n+       203: invokevirtual #125                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       206: invokevirtual #134                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       209: invokespecial #137                // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n        212: athrow\n        213: aload_0\n        214: aload         6\n        216: bipush        6\n-       218: invokestatic  #47                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-       221: putfield      #26                 // Field uid:I\n+       218: invokestatic  #153                // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+       221: putfield      #94                 // Field uid:I\n        224: aload_0\n        225: aload         6\n        227: bipush        8\n-       229: invokestatic  #47                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-       232: putfield      #27                 // Field gid:I\n+       229: invokestatic  #153                // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+       232: putfield      #98                 // Field gid:I\n        235: iload         10\n        237: ifne          249\n        240: aload_0\n-       241: ldc           #3                  // String\n-       243: putfield      #4                  // Field link:Ljava/lang/String;\n+       241: ldc           #9                  // String\n+       243: putfield      #11                 // Field link:Ljava/lang/String;\n        246: goto          283\n        249: iload         10\n        251: newarray       byte\n        253: astore        11\n        255: aload         6\n        257: bipush        10\n        259: aload         11\n        261: iconst_0\n        262: iload         10\n-       264: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       264: invokestatic  #63                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        267: aload_0\n-       268: new           #50                 // class java/lang/String\n+       268: new           #41                 // class java/lang/String\n        271: dup\n        272: aload         11\n-       274: invokestatic  #11                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-       277: invokespecial #51                 // Method java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n-       280: putfield      #4                  // Field link:Ljava/lang/String;\n+       274: invokestatic  #34                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+       277: invokespecial #160                // Method java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n+       280: putfield      #11                 // Field link:Ljava/lang/String;\n        283: aload_0\n        284: iload         9\n        286: sipush        16384\n        289: iand\n        290: ifeq          297\n        293: iconst_1\n        294: goto          298\n        297: iconst_0\n-       298: invokevirtual #53                 // Method setDirectory:(Z)V\n+       298: invokevirtual #165                // Method setDirectory:(Z)V\n        301: aload_0\n        302: iload         9\n-       304: invokevirtual #54                 // Method setMode:(I)V\n+       304: invokevirtual #169                // Method setMode:(I)V\n        307: return\n       LineNumberTable:\n         line 272: 0\n         line 273: 6\n         line 277: 43\n         line 278: 50\n         line 279: 57\n@@ -808,37 +808,37 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokevirtual #55                 // Method parseFromLocalFileData:([BII)V\n+         4: invokevirtual #172                // Method parseFromLocalFileData:([BII)V\n          7: return\n       LineNumberTable:\n         line 319: 0\n         line 320: 7\n     Exceptions:\n       throws java.util.zip.ZipException\n \n   protected int getMode(int);\n     descriptor: (I)I\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=2\n-         0: ldc           #56                 // int 32768\n+         0: ldc           #176                // int 32768\n          2: istore_2\n          3: aload_0\n-         4: invokevirtual #32                 // Method isLink:()Z\n+         4: invokevirtual #115                // Method isLink:()Z\n          7: ifeq          16\n-        10: ldc           #57                 // int 40960\n+        10: ldc           #177                // int 40960\n         12: istore_2\n         13: goto          27\n         16: aload_0\n-        17: invokevirtual #58                 // Method isDirectory:()Z\n+        17: invokevirtual #178                // Method isDirectory:()Z\n         20: ifeq          27\n         23: sipush        16384\n         26: istore_2\n         27: iload_2\n         28: iload_1\n         29: sipush        4095\n         32: iand\n@@ -859,29 +859,29 @@\n \n   public java.lang.Object clone();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #59                 // Method java/lang/Object.clone:()Ljava/lang/Object;\n-         4: checkcast     #33                 // class org/apache/commons/compress/archivers/zip/AsiExtraField\n+         1: invokespecial #181                // Method java/lang/Object.clone:()Ljava/lang/Object;\n+         4: checkcast     #12                 // class org/apache/commons/compress/archivers/zip/AsiExtraField\n          7: astore_1\n          8: aload_1\n-         9: new           #5                  // class java/util/zip/CRC32\n+         9: new           #17                 // class java/util/zip/CRC32\n         12: dup\n-        13: invokespecial #6                  // Method java/util/zip/CRC32.\"<init>\":()V\n-        16: putfield      #7                  // Field crc:Ljava/util/zip/CRC32;\n+        13: invokespecial #19                 // Method java/util/zip/CRC32.\"<init>\":()V\n+        16: putfield      #20                 // Field crc:Ljava/util/zip/CRC32;\n         19: aload_1\n         20: areturn\n         21: astore_1\n-        22: new           #61                 // class java/lang/IllegalStateException\n+        22: new           #187                // class java/lang/IllegalStateException\n         25: dup\n         26: aload_1\n-        27: invokespecial #62                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/Throwable;)V\n+        27: invokespecial #189                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/Throwable;)V\n         30: athrow\n       Exception table:\n          from    to  target type\n              0    20    21   Class java/lang/CloneNotSupportedException\n       LineNumberTable:\n         line 340: 0\n         line 341: 8\n@@ -893,17 +893,17 @@\n           stack = [ class java/lang/CloneNotSupportedException ]\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=3, locals=0, args_size=0\n-         0: new           #9                  // class org/apache/commons/compress/archivers/zip/ZipShort\n+         0: new           #28                 // class org/apache/commons/compress/archivers/zip/ZipShort\n          3: dup\n          4: sipush        30062\n-         7: invokespecial #13                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-        10: putstatic     #8                  // Field HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+         7: invokespecial #46                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+        10: putstatic     #24                 // Field HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n         13: return\n       LineNumberTable:\n         line 58: 0\n }\n SourceFile: \"AsiExtraField.java\"\n"}]}
