{"diffoscope-json-version": 1, "source1": "first/DateUtils.class", "source2": "second/DateUtils.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -22,14 +22,18 @@\n     public static final int RANGE_WEEK_SUNDAY = 1;\n     public static final int RANGE_WEEK_MONDAY = 2;\n     public static final int RANGE_WEEK_RELATIVE = 3;\n     public static final int RANGE_WEEK_CENTER = 4;\n     public static final int RANGE_MONTH_SUNDAY = 5;\n     public static final int RANGE_MONTH_MONDAY = 6;\n     \n+    static {\n+        fields = new int[][] { { 14 }, { 13 }, { 12 }, { 11, 10 }, { 5, 5, 9 }, { 2, 1001 }, { 1 }, new int[1] };\n+    }\n+    \n     public static boolean isSameDay(final Date date1, final Date date2) {\n         if (date1 == null || date2 == null) {\n             throw nullDateIllegalArgumentException();\n         }\n         final Calendar cal1 = Calendar.getInstance();\n         cal1.setTime(date1);\n         final Calendar cal2 = Calendar.getInstance();\n@@ -316,17 +320,20 @@\n             time -= minutes * 60000L;\n         }\n         if (date.getTime() != time) {\n             date.setTime(time);\n             val.setTime(date);\n         }\n         boolean roundUp = false;\n-        for (final int[] array : DateUtils.fields) {\n-            final int[] aField = array;\n-            for (final int element : array) {\n+        int[][] fields;\n+        for (int length = (fields = DateUtils.fields).length, i = 0; i < length; ++i) {\n+            final int[] aField = fields[i];\n+            int[] array;\n+            for (int length2 = (array = aField).length, j = 0; j < length2; ++j) {\n+                final int element = array[j];\n                 if (element == field) {\n                     if (modType == DateUtils.ModifyType.CEILING || (modType == DateUtils.ModifyType.ROUND && roundUp)) {\n                         if (field == 1001) {\n                             if (val.get(5) == 1) {\n                                 val.add(5, 15);\n                             }\n                             else {\n@@ -402,15 +409,15 @@\n         if (focus == null) {\n             throw nullDateIllegalArgumentException();\n         }\n         Calendar start = null;\n         Calendar end = null;\n         int startCutoff = 1;\n         int endCutoff = 7;\n-        Label_0231: {\n+        Label_0230: {\n             switch (rangeStyle) {\n                 case 5:\n                 case 6: {\n                     start = truncate(focus, 2);\n                     end = (Calendar)start.clone();\n                     end.add(2, 1);\n                     end.add(5, -1);\n@@ -425,33 +432,33 @@\n                 case 2:\n                 case 3:\n                 case 4: {\n                     start = truncate(focus, 5);\n                     end = truncate(focus, 5);\n                     switch (rangeStyle) {\n                         case 1: {\n-                            break Label_0231;\n+                            break Label_0230;\n                         }\n                         case 2: {\n                             startCutoff = 2;\n                             endCutoff = 1;\n-                            break Label_0231;\n+                            break Label_0230;\n                         }\n                         case 3: {\n                             startCutoff = focus.get(7);\n                             endCutoff = startCutoff - 1;\n-                            break Label_0231;\n+                            break Label_0230;\n                         }\n                         case 4: {\n                             startCutoff = focus.get(7) - 3;\n                             endCutoff = focus.get(7) + 3;\n-                            break Label_0231;\n+                            break Label_0230;\n                         }\n                         default: {\n-                            break Label_0231;\n+                            break Label_0230;\n                         }\n                     }\n                     break;\n                 }\n                 default: {\n                     throw new IllegalArgumentException(\"The range style \" + rangeStyle + \" is not valid.\");\n                 }\n@@ -600,12 +607,8 @@\n         final Date truncatedDate2 = truncate(date2, field);\n         return truncatedDate1.compareTo(truncatedDate2);\n     }\n     \n     private static void validateDateNotNull(final Date date) {\n         Validate.notNull((Object)date, \"The date must not be null\", new Object[0]);\n     }\n-    \n-    static {\n-        fields = new int[][] { { 14 }, { 13 }, { 12 }, { 11, 10 }, { 5, 5, 9 }, { 2, 1001 }, { 1 }, { 0 } };\n-    }\n }\n"}]}
