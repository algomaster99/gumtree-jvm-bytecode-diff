{"diffoscope-json-version": 1, "source1": "first/KeyManagerUtils.class", "source2": "second/KeyManagerUtils.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -13,14 +13,18 @@\n import javax.net.ssl.KeyManager;\n import java.security.KeyStore;\n \n public final class KeyManagerUtils\n {\n     private static final String DEFAULT_STORE_TYPE;\n     \n+    static {\n+        DEFAULT_STORE_TYPE = KeyStore.getDefaultType();\n+    }\n+    \n     private KeyManagerUtils() {\n     }\n     \n     public static KeyManager createClientKeyManager(final KeyStore ks, final String keyAlias, final String keyPass) throws GeneralSecurityException {\n         final KeyManagerUtils.ClientKeyStore cks = new KeyManagerUtils.ClientKeyStore(ks, (keyAlias != null) ? keyAlias : findAlias(ks), keyPass);\n         return (KeyManager)new KeyManagerUtils.X509KeyManager(cks);\n     }\n@@ -44,25 +48,22 @@\n         try {\n             stream = new FileInputStream(storePath);\n             ks.load(stream, storePass.toCharArray());\n         }\n         finally {\n             Util.closeQuietly((Closeable)stream);\n         }\n+        Util.closeQuietly((Closeable)stream);\n         return ks;\n     }\n     \n     private static String findAlias(final KeyStore ks) throws KeyStoreException {\n         final Enumeration<String> e = ks.aliases();\n         while (e.hasMoreElements()) {\n             final String entry = (String)e.nextElement();\n             if (ks.isKeyEntry(entry)) {\n                 return entry;\n             }\n         }\n         throw new KeyStoreException(\"Cannot find a private key entry\");\n     }\n-    \n-    static {\n-        DEFAULT_STORE_TYPE = KeyStore.getDefaultType();\n-    }\n }\n"}]}
