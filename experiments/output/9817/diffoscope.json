{"diffoscope-json-version": 1, "source1": "first/MagicNumberFileFilter.class", "source2": "second/MagicNumberFileFilter.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -55,60 +55,45 @@\n         }\n         this.magicNumbers = magicNumber.getBytes(Charset.defaultCharset());\n         this.byteOffset = offset;\n     }\n     \n     public boolean accept(final File file) {\n         if (file != null && file.isFile() && file.canRead()) {\n-            try {\n-                final RandomAccessFile randomAccessFile = RandomAccessFileMode.READ_ONLY.create(file);\n-                Throwable x0 = null;\n-                try {\n-                    final byte[] fileBytes = IOUtils.byteArray(this.magicNumbers.length);\n-                    randomAccessFile.seek(this.byteOffset);\n-                    final int read = randomAccessFile.read(fileBytes);\n-                    return read == this.magicNumbers.length && Arrays.equals(this.magicNumbers, fileBytes);\n-                }\n-                catch (final Throwable t) {\n-                    x0 = t;\n-                    throw t;\n-                }\n-                finally {\n+            try (final RandomAccessFile randomAccessFile = RandomAccessFileMode.READ_ONLY.create(file)) {\n+                final byte[] fileBytes = IOUtils.byteArray(this.magicNumbers.length);\n+                randomAccessFile.seek(this.byteOffset);\n+                final int read = randomAccessFile.read(fileBytes);\n+                if (read != this.magicNumbers.length) {\n+                    final boolean b = false;\n                     if (randomAccessFile != null) {\n-                        $closeResource(x0, randomAccessFile);\n+                        randomAccessFile.close();\n                     }\n+                    return b;\n                 }\n+                return Arrays.equals(this.magicNumbers, fileBytes);\n             }\n             catch (final IOException ex) {}\n         }\n         return false;\n     }\n     \n     public FileVisitResult accept(final Path file, final BasicFileAttributes attributes) {\n         if (file != null && Files.isRegularFile(file, new LinkOption[0]) && Files.isReadable(file)) {\n-            try {\n-                final FileChannel fileChannel = FileChannel.open(file, new OpenOption[0]);\n-                Throwable x0 = null;\n-                try {\n-                    final ByteBuffer byteBuffer = ByteBuffer.allocate(this.magicNumbers.length);\n-                    final int read = fileChannel.read(byteBuffer);\n-                    if (read != this.magicNumbers.length) {\n-                        return FileVisitResult.TERMINATE;\n-                    }\n-                    return this.toFileVisitResult(Arrays.equals(this.magicNumbers, byteBuffer.array()));\n-                }\n-                catch (final Throwable t) {\n-                    x0 = t;\n-                    throw t;\n-                }\n-                finally {\n+            try (final FileChannel fileChannel = FileChannel.open(file, new OpenOption[0])) {\n+                final ByteBuffer byteBuffer = ByteBuffer.allocate(this.magicNumbers.length);\n+                final int read = fileChannel.read(byteBuffer);\n+                if (read != this.magicNumbers.length) {\n+                    final FileVisitResult terminate = FileVisitResult.TERMINATE;\n                     if (fileChannel != null) {\n-                        $closeResource(x0, fileChannel);\n+                        fileChannel.close();\n                     }\n+                    return terminate;\n                 }\n+                return this.toFileVisitResult(Arrays.equals(this.magicNumbers, byteBuffer.array()));\n             }\n             catch (final IOException ex) {}\n         }\n         return FileVisitResult.TERMINATE;\n     }\n     \n     public String toString() {\n@@ -116,22 +101,8 @@\n         builder.append(\"(\");\n         builder.append(new String(this.magicNumbers, Charset.defaultCharset()));\n         builder.append(\",\");\n         builder.append(this.byteOffset);\n         builder.append(\")\");\n         return builder.toString();\n     }\n-    \n-    private static /* synthetic */ void $closeResource(final Throwable x0, final AutoCloseable x1) {\n-        if (x0 != null) {\n-            try {\n-                x1.close();\n-            }\n-            catch (final Throwable exception) {\n-                x0.addSuppressed(exception);\n-            }\n-        }\n-        else {\n-            x1.close();\n-        }\n-    }\n }\n"}]}
