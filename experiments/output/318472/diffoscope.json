{"diffoscope-json-version": 1, "source1": "first/DateUtils.class", "source2": "second/DateUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,381 +1,381 @@\n-  SHA-256 checksum 2e7aba302d3ee81d51f47277dc4965d38415d7696703e7d9c9dd0384212eafc3\n+  SHA-256 checksum a7f1c9aaaa3b85aa5335b28426a6b7899fe0b7ea84494aaedb48c2965a976b9c\n   Compiled from \"DateUtils.java\"\n public class org.apache.commons.lang3.time.DateUtils\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/lang3/time/DateUtils\n-  super_class: #97                        // java/lang/Object\n+  super_class: #4                         // java/lang/Object\n   interfaces: 0, fields: 12, methods: 61, attributes: 2\n Constant pool:\n-    #1 = Class              #211          // org/apache/commons/lang3/time/DateUtils\n-    #2 = Methodref          #97.#212      // java/lang/Object.\"<init>\":()V\n-    #3 = Class              #213          // java/lang/IllegalArgumentException\n-    #4 = String             #214          // The date must not be null\n-    #5 = Methodref          #3.#215       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #6 = Methodref          #9.#216       // java/util/Calendar.getInstance:()Ljava/util/Calendar;\n-    #7 = Methodref          #9.#217       // java/util/Calendar.setTime:(Ljava/util/Date;)V\n-    #8 = Methodref          #1.#218       // org/apache/commons/lang3/time/DateUtils.isSameDay:(Ljava/util/Calendar;Ljava/util/Calendar;)Z\n-    #9 = Class              #219          // java/util/Calendar\n-   #10 = Methodref          #9.#220       // java/util/Calendar.get:(I)I\n-   #11 = Methodref          #47.#221      // java/util/Date.getTime:()J\n-   #12 = Methodref          #9.#222       // java/util/Calendar.getTime:()Ljava/util/Date;\n-   #13 = Methodref          #97.#223      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #14 = Methodref          #1.#224       // org/apache/commons/lang3/time/DateUtils.parseDate:(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;)Ljava/util/Date;\n-   #15 = Methodref          #1.#225       // org/apache/commons/lang3/time/DateUtils.parseDateWithLeniency:(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;Z)Ljava/util/Date;\n-   #16 = Methodref          #1.#226       // org/apache/commons/lang3/time/DateUtils.parseDateStrictly:(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;)Ljava/util/Date;\n-   #17 = String             #227          // Date and Patterns must not be null\n-   #18 = Methodref          #148.#228     // java/util/TimeZone.getDefault:()Ljava/util/TimeZone;\n-   #19 = Methodref          #149.#229     // java/util/Locale.getDefault:()Ljava/util/Locale;\n-   #20 = Class              #230          // java/text/ParsePosition\n-   #21 = Methodref          #20.#231      // java/text/ParsePosition.\"<init>\":(I)V\n-   #22 = Methodref          #9.#232       // java/util/Calendar.getInstance:(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;\n-   #23 = Methodref          #9.#233       // java/util/Calendar.setLenient:(Z)V\n-   #24 = Class              #234          // org/apache/commons/lang3/time/FastDateParser\n-   #25 = Methodref          #24.#235      // org/apache/commons/lang3/time/FastDateParser.\"<init>\":(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V\n-   #26 = Methodref          #9.#236       // java/util/Calendar.clear:()V\n-   #27 = Methodref          #24.#237      // org/apache/commons/lang3/time/FastDateParser.parse:(Ljava/lang/String;Ljava/text/ParsePosition;Ljava/util/Calendar;)Z\n-   #28 = Methodref          #20.#238      // java/text/ParsePosition.getIndex:()I\n-   #29 = Methodref          #150.#239     // java/lang/String.length:()I\n-   #30 = Methodref          #20.#240      // java/text/ParsePosition.setIndex:(I)V\n-   #31 = Class              #241          // java/text/ParseException\n-   #32 = Class              #242          // java/lang/StringBuilder\n-   #33 = Methodref          #32.#212      // java/lang/StringBuilder.\"<init>\":()V\n-   #34 = String             #243          // Unable to parse the date:\n-   #35 = Methodref          #32.#244      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #36 = Methodref          #32.#245      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #37 = Methodref          #31.#246      // java/text/ParseException.\"<init>\":(Ljava/lang/String;I)V\n-   #38 = Methodref          #1.#247       // org/apache/commons/lang3/time/DateUtils.add:(Ljava/util/Date;II)Ljava/util/Date;\n-   #39 = Methodref          #1.#248       // org/apache/commons/lang3/time/DateUtils.validateDateNotNull:(Ljava/util/Date;)V\n-   #40 = Methodref          #9.#249       // java/util/Calendar.add:(II)V\n-   #41 = Methodref          #1.#250       // org/apache/commons/lang3/time/DateUtils.set:(Ljava/util/Date;II)Ljava/util/Date;\n-   #42 = Methodref          #9.#251       // java/util/Calendar.set:(II)V\n-   #43 = Methodref          #9.#252       // java/util/Calendar.getInstance:(Ljava/util/TimeZone;)Ljava/util/Calendar;\n-   #44 = Fieldref           #102.#253     // org/apache/commons/lang3/time/DateUtils$ModifyType.ROUND:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n-   #45 = Methodref          #1.#254       // org/apache/commons/lang3/time/DateUtils.modify:(Ljava/util/Calendar;ILorg/apache/commons/lang3/time/DateUtils$ModifyType;)V\n-   #46 = Methodref          #9.#255       // java/util/Calendar.clone:()Ljava/lang/Object;\n-   #47 = Class              #256          // java/util/Date\n-   #48 = Methodref          #1.#257       // org/apache/commons/lang3/time/DateUtils.round:(Ljava/util/Date;I)Ljava/util/Date;\n-   #49 = Methodref          #1.#258       // org/apache/commons/lang3/time/DateUtils.round:(Ljava/util/Calendar;I)Ljava/util/Calendar;\n-   #50 = Class              #259          // java/lang/ClassCastException\n-   #51 = String             #260          // Could not round\n-   #52 = Methodref          #32.#261      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #53 = Methodref          #50.#215      // java/lang/ClassCastException.\"<init>\":(Ljava/lang/String;)V\n-   #54 = Fieldref           #102.#262     // org/apache/commons/lang3/time/DateUtils$ModifyType.TRUNCATE:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n-   #55 = Methodref          #1.#263       // org/apache/commons/lang3/time/DateUtils.truncate:(Ljava/util/Date;I)Ljava/util/Date;\n-   #56 = Methodref          #1.#264       // org/apache/commons/lang3/time/DateUtils.truncate:(Ljava/util/Calendar;I)Ljava/util/Calendar;\n-   #57 = String             #265          // Could not truncate\n-   #58 = Fieldref           #102.#266     // org/apache/commons/lang3/time/DateUtils$ModifyType.CEILING:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n-   #59 = Methodref          #1.#267       // org/apache/commons/lang3/time/DateUtils.ceiling:(Ljava/util/Date;I)Ljava/util/Date;\n-   #60 = Methodref          #1.#268       // org/apache/commons/lang3/time/DateUtils.ceiling:(Ljava/util/Calendar;I)Ljava/util/Calendar;\n-   #61 = String             #269          // Could not find ceiling of for type:\n-   #62 = Integer            280000000\n-   #63 = Class              #270          // java/lang/ArithmeticException\n-   #64 = String             #271          // Calendar value too large for accurate calculations\n-   #65 = Methodref          #63.#215      // java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n-   #66 = Long               1000l\n-   #68 = Long               60000l\n-   #70 = Methodref          #47.#272      // java/util/Date.setTime:(J)V\n-   #71 = Fieldref           #1.#273       // org/apache/commons/lang3/time/DateUtils.fields:[[I\n-   #72 = Methodref          #9.#274       // java/util/Calendar.getActualMinimum:(I)I\n-   #73 = Methodref          #9.#275       // java/util/Calendar.getActualMaximum:(I)I\n-   #74 = String             #276          // The field\n-   #75 = Methodref          #32.#277      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #76 = String             #278          //  is not supported\n-   #77 = Methodref          #1.#279       // org/apache/commons/lang3/time/DateUtils.iterator:(Ljava/util/Calendar;I)Ljava/util/Iterator;\n-   #78 = String             #280          // The range style\n-   #79 = String             #281          //  is not valid.\n-   #80 = Class              #282          // org/apache/commons/lang3/time/DateUtils$DateIterator\n-   #81 = Methodref          #80.#283      // org/apache/commons/lang3/time/DateUtils$DateIterator.\"<init>\":(Ljava/util/Calendar;Ljava/util/Calendar;)V\n-   #82 = Methodref          #1.#284       // org/apache/commons/lang3/time/DateUtils.iterator:(Ljava/util/Date;I)Ljava/util/Iterator;\n-   #83 = String             #285          // Could not iterate based on\n-   #84 = Fieldref           #286.#287     // java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;\n-   #85 = Methodref          #1.#288       // org/apache/commons/lang3/time/DateUtils.getFragment:(Ljava/util/Date;ILjava/util/concurrent/TimeUnit;)J\n-   #86 = Fieldref           #286.#289     // java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;\n-   #87 = Fieldref           #286.#290     // java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;\n-   #88 = Fieldref           #286.#291     // java/util/concurrent/TimeUnit.HOURS:Ljava/util/concurrent/TimeUnit;\n-   #89 = Fieldref           #286.#292     // java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;\n-   #90 = Methodref          #1.#293       // org/apache/commons/lang3/time/DateUtils.getFragment:(Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J\n-   #91 = Methodref          #286.#294     // java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J\n-   #92 = String             #295          // The fragment\n-   #93 = Methodref          #1.#296       // org/apache/commons/lang3/time/DateUtils.truncatedCompareTo:(Ljava/util/Calendar;Ljava/util/Calendar;I)I\n-   #94 = Methodref          #1.#297       // org/apache/commons/lang3/time/DateUtils.truncatedCompareTo:(Ljava/util/Date;Ljava/util/Date;I)I\n-   #95 = Methodref          #9.#298       // java/util/Calendar.compareTo:(Ljava/util/Calendar;)I\n-   #96 = Methodref          #47.#299      // java/util/Date.compareTo:(Ljava/util/Date;)I\n-   #97 = Class              #300          // java/lang/Object\n-   #98 = Methodref          #301.#302     // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-   #99 = Class              #303          // \"[I\"\n-  #100 = Utf8               DateIterator\n-  #101 = Utf8               InnerClasses\n-  #102 = Class              #304          // org/apache/commons/lang3/time/DateUtils$ModifyType\n-  #103 = Utf8               ModifyType\n-  #104 = Utf8               MILLIS_PER_SECOND\n-  #105 = Utf8               J\n-  #106 = Utf8               ConstantValue\n-  #107 = Utf8               MILLIS_PER_MINUTE\n-  #108 = Utf8               MILLIS_PER_HOUR\n-  #109 = Long               3600000l\n-  #111 = Utf8               MILLIS_PER_DAY\n-  #112 = Long               86400000l\n-  #114 = Utf8               SEMI_MONTH\n-  #115 = Utf8               I\n-  #116 = Integer            1001\n-  #117 = Utf8               fields\n-  #118 = Utf8               [[I\n-  #119 = Utf8               RANGE_WEEK_SUNDAY\n-  #120 = Integer            1\n-  #121 = Utf8               RANGE_WEEK_MONDAY\n-  #122 = Integer            2\n-  #123 = Utf8               RANGE_WEEK_RELATIVE\n-  #124 = Integer            3\n-  #125 = Utf8               RANGE_WEEK_CENTER\n-  #126 = Integer            4\n-  #127 = Utf8               RANGE_MONTH_SUNDAY\n-  #128 = Integer            5\n-  #129 = Utf8               RANGE_MONTH_MONDAY\n-  #130 = Integer            6\n-  #131 = Utf8               <init>\n-  #132 = Utf8               ()V\n-  #133 = Utf8               Code\n-  #134 = Utf8               LineNumberTable\n-  #135 = Utf8               isSameDay\n-  #136 = Utf8               (Ljava/util/Date;Ljava/util/Date;)Z\n-  #137 = Utf8               StackMapTable\n-  #138 = Utf8               (Ljava/util/Calendar;Ljava/util/Calendar;)Z\n-  #139 = Utf8               isSameInstant\n-  #140 = Utf8               isSameLocalTime\n-  #141 = Utf8               parseDate\n-  #142 = Utf8               (Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Date;\n-  #143 = Utf8               Exceptions\n-  #144 = Utf8               (Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;)Ljava/util/Date;\n-  #145 = Utf8               parseDateStrictly\n-  #146 = Utf8               parseDateWithLeniency\n-  #147 = Utf8               (Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;Z)Ljava/util/Date;\n-  #148 = Class              #305          // java/util/TimeZone\n-  #149 = Class              #306          // java/util/Locale\n-  #150 = Class              #307          // java/lang/String\n-  #151 = Class              #308          // \"[Ljava/lang/String;\"\n-  #152 = Utf8               addYears\n-  #153 = Utf8               (Ljava/util/Date;I)Ljava/util/Date;\n-  #154 = Utf8               addMonths\n-  #155 = Utf8               addWeeks\n-  #156 = Utf8               addDays\n-  #157 = Utf8               addHours\n-  #158 = Utf8               addMinutes\n-  #159 = Utf8               addSeconds\n-  #160 = Utf8               addMilliseconds\n-  #161 = Utf8               add\n-  #162 = Utf8               (Ljava/util/Date;II)Ljava/util/Date;\n-  #163 = Utf8               setYears\n-  #164 = Utf8               setMonths\n-  #165 = Utf8               setDays\n-  #166 = Utf8               setHours\n-  #167 = Utf8               setMinutes\n-  #168 = Utf8               setSeconds\n-  #169 = Utf8               setMilliseconds\n-  #170 = Utf8               set\n-  #171 = Utf8               toCalendar\n-  #172 = Utf8               (Ljava/util/Date;)Ljava/util/Calendar;\n-  #173 = Utf8               (Ljava/util/Date;Ljava/util/TimeZone;)Ljava/util/Calendar;\n-  #174 = Utf8               round\n-  #175 = Utf8               (Ljava/util/Calendar;I)Ljava/util/Calendar;\n-  #176 = Utf8               (Ljava/lang/Object;I)Ljava/util/Date;\n+    #1 = Class              #2            // org/apache/commons/lang3/time/DateUtils\n+    #2 = Utf8               org/apache/commons/lang3/time/DateUtils\n+    #3 = Methodref          #4.#5         // java/lang/Object.\"<init>\":()V\n+    #4 = Class              #6            // java/lang/Object\n+    #5 = NameAndType        #7:#8         // \"<init>\":()V\n+    #6 = Utf8               java/lang/Object\n+    #7 = Utf8               <init>\n+    #8 = Utf8               ()V\n+    #9 = Class              #10           // java/lang/IllegalArgumentException\n+   #10 = Utf8               java/lang/IllegalArgumentException\n+   #11 = String             #12           // The date must not be null\n+   #12 = Utf8               The date must not be null\n+   #13 = Methodref          #9.#14        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #14 = NameAndType        #7:#15        // \"<init>\":(Ljava/lang/String;)V\n+   #15 = Utf8               (Ljava/lang/String;)V\n+   #16 = Methodref          #17.#18       // java/util/Calendar.getInstance:()Ljava/util/Calendar;\n+   #17 = Class              #19           // java/util/Calendar\n+   #18 = NameAndType        #20:#21       // getInstance:()Ljava/util/Calendar;\n+   #19 = Utf8               java/util/Calendar\n+   #20 = Utf8               getInstance\n+   #21 = Utf8               ()Ljava/util/Calendar;\n+   #22 = Methodref          #17.#23       // java/util/Calendar.setTime:(Ljava/util/Date;)V\n+   #23 = NameAndType        #24:#25       // setTime:(Ljava/util/Date;)V\n+   #24 = Utf8               setTime\n+   #25 = Utf8               (Ljava/util/Date;)V\n+   #26 = Methodref          #1.#27        // org/apache/commons/lang3/time/DateUtils.isSameDay:(Ljava/util/Calendar;Ljava/util/Calendar;)Z\n+   #27 = NameAndType        #28:#29       // isSameDay:(Ljava/util/Calendar;Ljava/util/Calendar;)Z\n+   #28 = Utf8               isSameDay\n+   #29 = Utf8               (Ljava/util/Calendar;Ljava/util/Calendar;)Z\n+   #30 = Methodref          #17.#31       // java/util/Calendar.get:(I)I\n+   #31 = NameAndType        #32:#33       // get:(I)I\n+   #32 = Utf8               get\n+   #33 = Utf8               (I)I\n+   #34 = Methodref          #35.#36       // java/util/Date.getTime:()J\n+   #35 = Class              #37           // java/util/Date\n+   #36 = NameAndType        #38:#39       // getTime:()J\n+   #37 = Utf8               java/util/Date\n+   #38 = Utf8               getTime\n+   #39 = Utf8               ()J\n+   #40 = Methodref          #17.#41       // java/util/Calendar.getTime:()Ljava/util/Date;\n+   #41 = NameAndType        #38:#42       // getTime:()Ljava/util/Date;\n+   #42 = Utf8               ()Ljava/util/Date;\n+   #43 = Methodref          #4.#44        // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #44 = NameAndType        #45:#46       // getClass:()Ljava/lang/Class;\n+   #45 = Utf8               getClass\n+   #46 = Utf8               ()Ljava/lang/Class;\n+   #47 = Methodref          #1.#48        // org/apache/commons/lang3/time/DateUtils.parseDate:(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;)Ljava/util/Date;\n+   #48 = NameAndType        #49:#50       // parseDate:(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;)Ljava/util/Date;\n+   #49 = Utf8               parseDate\n+   #50 = Utf8               (Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;)Ljava/util/Date;\n+   #51 = Methodref          #1.#52        // org/apache/commons/lang3/time/DateUtils.parseDateWithLeniency:(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;Z)Ljava/util/Date;\n+   #52 = NameAndType        #53:#54       // parseDateWithLeniency:(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;Z)Ljava/util/Date;\n+   #53 = Utf8               parseDateWithLeniency\n+   #54 = Utf8               (Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;Z)Ljava/util/Date;\n+   #55 = Methodref          #1.#56        // org/apache/commons/lang3/time/DateUtils.parseDateStrictly:(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;)Ljava/util/Date;\n+   #56 = NameAndType        #57:#50       // parseDateStrictly:(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;)Ljava/util/Date;\n+   #57 = Utf8               parseDateStrictly\n+   #58 = String             #59           // Date and Patterns must not be null\n+   #59 = Utf8               Date and Patterns must not be null\n+   #60 = Methodref          #61.#62       // java/util/TimeZone.getDefault:()Ljava/util/TimeZone;\n+   #61 = Class              #63           // java/util/TimeZone\n+   #62 = NameAndType        #64:#65       // getDefault:()Ljava/util/TimeZone;\n+   #63 = Utf8               java/util/TimeZone\n+   #64 = Utf8               getDefault\n+   #65 = Utf8               ()Ljava/util/TimeZone;\n+   #66 = Methodref          #67.#68       // java/util/Locale.getDefault:()Ljava/util/Locale;\n+   #67 = Class              #69           // java/util/Locale\n+   #68 = NameAndType        #64:#70       // getDefault:()Ljava/util/Locale;\n+   #69 = Utf8               java/util/Locale\n+   #70 = Utf8               ()Ljava/util/Locale;\n+   #71 = Class              #72           // java/text/ParsePosition\n+   #72 = Utf8               java/text/ParsePosition\n+   #73 = Methodref          #71.#74       // java/text/ParsePosition.\"<init>\":(I)V\n+   #74 = NameAndType        #7:#75        // \"<init>\":(I)V\n+   #75 = Utf8               (I)V\n+   #76 = Methodref          #17.#77       // java/util/Calendar.getInstance:(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;\n+   #77 = NameAndType        #20:#78       // getInstance:(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;\n+   #78 = Utf8               (Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;\n+   #79 = Methodref          #17.#80       // java/util/Calendar.setLenient:(Z)V\n+   #80 = NameAndType        #81:#82       // setLenient:(Z)V\n+   #81 = Utf8               setLenient\n+   #82 = Utf8               (Z)V\n+   #83 = Class              #84           // org/apache/commons/lang3/time/FastDateParser\n+   #84 = Utf8               org/apache/commons/lang3/time/FastDateParser\n+   #85 = Methodref          #83.#86       // org/apache/commons/lang3/time/FastDateParser.\"<init>\":(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V\n+   #86 = NameAndType        #7:#87        // \"<init>\":(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V\n+   #87 = Utf8               (Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V\n+   #88 = Methodref          #17.#89       // java/util/Calendar.clear:()V\n+   #89 = NameAndType        #90:#8        // clear:()V\n+   #90 = Utf8               clear\n+   #91 = Methodref          #83.#92       // org/apache/commons/lang3/time/FastDateParser.parse:(Ljava/lang/String;Ljava/text/ParsePosition;Ljava/util/Calendar;)Z\n+   #92 = NameAndType        #93:#94       // parse:(Ljava/lang/String;Ljava/text/ParsePosition;Ljava/util/Calendar;)Z\n+   #93 = Utf8               parse\n+   #94 = Utf8               (Ljava/lang/String;Ljava/text/ParsePosition;Ljava/util/Calendar;)Z\n+   #95 = Methodref          #71.#96       // java/text/ParsePosition.getIndex:()I\n+   #96 = NameAndType        #97:#98       // getIndex:()I\n+   #97 = Utf8               getIndex\n+   #98 = Utf8               ()I\n+   #99 = Methodref          #100.#101     // java/lang/String.length:()I\n+  #100 = Class              #102          // java/lang/String\n+  #101 = NameAndType        #103:#98      // length:()I\n+  #102 = Utf8               java/lang/String\n+  #103 = Utf8               length\n+  #104 = Methodref          #71.#105      // java/text/ParsePosition.setIndex:(I)V\n+  #105 = NameAndType        #106:#75      // setIndex:(I)V\n+  #106 = Utf8               setIndex\n+  #107 = Class              #108          // java/text/ParseException\n+  #108 = Utf8               java/text/ParseException\n+  #109 = Class              #110          // java/lang/StringBuilder\n+  #110 = Utf8               java/lang/StringBuilder\n+  #111 = Methodref          #109.#5       // java/lang/StringBuilder.\"<init>\":()V\n+  #112 = String             #113          // Unable to parse the date:\n+  #113 = Utf8               Unable to parse the date:\n+  #114 = Methodref          #109.#115     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #115 = NameAndType        #116:#117     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #116 = Utf8               append\n+  #117 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #118 = Methodref          #109.#119     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #119 = NameAndType        #120:#121     // toString:()Ljava/lang/String;\n+  #120 = Utf8               toString\n+  #121 = Utf8               ()Ljava/lang/String;\n+  #122 = Methodref          #107.#123     // java/text/ParseException.\"<init>\":(Ljava/lang/String;I)V\n+  #123 = NameAndType        #7:#124       // \"<init>\":(Ljava/lang/String;I)V\n+  #124 = Utf8               (Ljava/lang/String;I)V\n+  #125 = Methodref          #1.#126       // org/apache/commons/lang3/time/DateUtils.add:(Ljava/util/Date;II)Ljava/util/Date;\n+  #126 = NameAndType        #127:#128     // add:(Ljava/util/Date;II)Ljava/util/Date;\n+  #127 = Utf8               add\n+  #128 = Utf8               (Ljava/util/Date;II)Ljava/util/Date;\n+  #129 = Methodref          #1.#130       // org/apache/commons/lang3/time/DateUtils.validateDateNotNull:(Ljava/util/Date;)V\n+  #130 = NameAndType        #131:#25      // validateDateNotNull:(Ljava/util/Date;)V\n+  #131 = Utf8               validateDateNotNull\n+  #132 = Methodref          #17.#133      // java/util/Calendar.add:(II)V\n+  #133 = NameAndType        #127:#134     // add:(II)V\n+  #134 = Utf8               (II)V\n+  #135 = Methodref          #1.#136       // org/apache/commons/lang3/time/DateUtils.set:(Ljava/util/Date;II)Ljava/util/Date;\n+  #136 = NameAndType        #137:#128     // set:(Ljava/util/Date;II)Ljava/util/Date;\n+  #137 = Utf8               set\n+  #138 = Methodref          #17.#139      // java/util/Calendar.set:(II)V\n+  #139 = NameAndType        #137:#134     // set:(II)V\n+  #140 = Methodref          #17.#141      // java/util/Calendar.getInstance:(Ljava/util/TimeZone;)Ljava/util/Calendar;\n+  #141 = NameAndType        #20:#142      // getInstance:(Ljava/util/TimeZone;)Ljava/util/Calendar;\n+  #142 = Utf8               (Ljava/util/TimeZone;)Ljava/util/Calendar;\n+  #143 = Fieldref           #144.#145     // org/apache/commons/lang3/time/DateUtils$ModifyType.ROUND:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n+  #144 = Class              #146          // org/apache/commons/lang3/time/DateUtils$ModifyType\n+  #145 = NameAndType        #147:#148     // ROUND:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n+  #146 = Utf8               org/apache/commons/lang3/time/DateUtils$ModifyType\n+  #147 = Utf8               ROUND\n+  #148 = Utf8               Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n+  #149 = Methodref          #1.#150       // org/apache/commons/lang3/time/DateUtils.modify:(Ljava/util/Calendar;ILorg/apache/commons/lang3/time/DateUtils$ModifyType;)V\n+  #150 = NameAndType        #151:#152     // modify:(Ljava/util/Calendar;ILorg/apache/commons/lang3/time/DateUtils$ModifyType;)V\n+  #151 = Utf8               modify\n+  #152 = Utf8               (Ljava/util/Calendar;ILorg/apache/commons/lang3/time/DateUtils$ModifyType;)V\n+  #153 = Methodref          #17.#154      // java/util/Calendar.clone:()Ljava/lang/Object;\n+  #154 = NameAndType        #155:#156     // clone:()Ljava/lang/Object;\n+  #155 = Utf8               clone\n+  #156 = Utf8               ()Ljava/lang/Object;\n+  #157 = Methodref          #1.#158       // org/apache/commons/lang3/time/DateUtils.round:(Ljava/util/Date;I)Ljava/util/Date;\n+  #158 = NameAndType        #159:#160     // round:(Ljava/util/Date;I)Ljava/util/Date;\n+  #159 = Utf8               round\n+  #160 = Utf8               (Ljava/util/Date;I)Ljava/util/Date;\n+  #161 = Methodref          #1.#162       // org/apache/commons/lang3/time/DateUtils.round:(Ljava/util/Calendar;I)Ljava/util/Calendar;\n+  #162 = NameAndType        #159:#163     // round:(Ljava/util/Calendar;I)Ljava/util/Calendar;\n+  #163 = Utf8               (Ljava/util/Calendar;I)Ljava/util/Calendar;\n+  #164 = Class              #165          // java/lang/ClassCastException\n+  #165 = Utf8               java/lang/ClassCastException\n+  #166 = String             #167          // Could not round\n+  #167 = Utf8               Could not round\n+  #168 = Methodref          #109.#169     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #169 = NameAndType        #116:#170     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #170 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #171 = Methodref          #164.#14      // java/lang/ClassCastException.\"<init>\":(Ljava/lang/String;)V\n+  #172 = Fieldref           #144.#173     // org/apache/commons/lang3/time/DateUtils$ModifyType.TRUNCATE:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n+  #173 = NameAndType        #174:#148     // TRUNCATE:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n+  #174 = Utf8               TRUNCATE\n+  #175 = Methodref          #1.#176       // org/apache/commons/lang3/time/DateUtils.truncate:(Ljava/util/Date;I)Ljava/util/Date;\n+  #176 = NameAndType        #177:#160     // truncate:(Ljava/util/Date;I)Ljava/util/Date;\n   #177 = Utf8               truncate\n-  #178 = Utf8               ceiling\n-  #179 = Utf8               modify\n-  #180 = Utf8               (Ljava/util/Calendar;ILorg/apache/commons/lang3/time/DateUtils$ModifyType;)V\n-  #181 = Class              #118          // \"[[I\"\n-  #182 = Utf8               iterator\n-  #183 = Utf8               (Ljava/util/Date;I)Ljava/util/Iterator;\n-  #184 = Utf8               Signature\n-  #185 = Utf8               (Ljava/util/Date;I)Ljava/util/Iterator<Ljava/util/Calendar;>;\n-  #186 = Utf8               (Ljava/util/Calendar;I)Ljava/util/Iterator;\n-  #187 = Utf8               (Ljava/util/Calendar;I)Ljava/util/Iterator<Ljava/util/Calendar;>;\n-  #188 = Utf8               (Ljava/lang/Object;I)Ljava/util/Iterator;\n-  #189 = Utf8               (Ljava/lang/Object;I)Ljava/util/Iterator<*>;\n-  #190 = Utf8               getFragmentInMilliseconds\n-  #191 = Utf8               (Ljava/util/Date;I)J\n-  #192 = Utf8               getFragmentInSeconds\n-  #193 = Utf8               getFragmentInMinutes\n-  #194 = Utf8               getFragmentInHours\n-  #195 = Utf8               getFragmentInDays\n-  #196 = Utf8               (Ljava/util/Calendar;I)J\n-  #197 = Utf8               getFragment\n-  #198 = Utf8               (Ljava/util/Date;ILjava/util/concurrent/TimeUnit;)J\n-  #199 = Utf8               (Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J\n-  #200 = Utf8               truncatedEquals\n-  #201 = Utf8               (Ljava/util/Calendar;Ljava/util/Calendar;I)Z\n-  #202 = Utf8               (Ljava/util/Date;Ljava/util/Date;I)Z\n-  #203 = Utf8               truncatedCompareTo\n-  #204 = Utf8               (Ljava/util/Calendar;Ljava/util/Calendar;I)I\n-  #205 = Utf8               (Ljava/util/Date;Ljava/util/Date;I)I\n-  #206 = Utf8               validateDateNotNull\n-  #207 = Utf8               (Ljava/util/Date;)V\n-  #208 = Utf8               <clinit>\n-  #209 = Utf8               SourceFile\n-  #210 = Utf8               DateUtils.java\n-  #211 = Utf8               org/apache/commons/lang3/time/DateUtils\n-  #212 = NameAndType        #131:#132     // \"<init>\":()V\n-  #213 = Utf8               java/lang/IllegalArgumentException\n-  #214 = Utf8               The date must not be null\n-  #215 = NameAndType        #131:#309     // \"<init>\":(Ljava/lang/String;)V\n-  #216 = NameAndType        #310:#311     // getInstance:()Ljava/util/Calendar;\n-  #217 = NameAndType        #312:#207     // setTime:(Ljava/util/Date;)V\n-  #218 = NameAndType        #135:#138     // isSameDay:(Ljava/util/Calendar;Ljava/util/Calendar;)Z\n-  #219 = Utf8               java/util/Calendar\n-  #220 = NameAndType        #313:#314     // get:(I)I\n-  #221 = NameAndType        #315:#316     // getTime:()J\n-  #222 = NameAndType        #315:#317     // getTime:()Ljava/util/Date;\n-  #223 = NameAndType        #318:#319     // getClass:()Ljava/lang/Class;\n-  #224 = NameAndType        #141:#144     // parseDate:(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;)Ljava/util/Date;\n-  #225 = NameAndType        #146:#147     // parseDateWithLeniency:(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;Z)Ljava/util/Date;\n-  #226 = NameAndType        #145:#144     // parseDateStrictly:(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;)Ljava/util/Date;\n-  #227 = Utf8               Date and Patterns must not be null\n-  #228 = NameAndType        #320:#321     // getDefault:()Ljava/util/TimeZone;\n-  #229 = NameAndType        #320:#322     // getDefault:()Ljava/util/Locale;\n-  #230 = Utf8               java/text/ParsePosition\n-  #231 = NameAndType        #131:#323     // \"<init>\":(I)V\n-  #232 = NameAndType        #310:#324     // getInstance:(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;\n-  #233 = NameAndType        #325:#326     // setLenient:(Z)V\n-  #234 = Utf8               org/apache/commons/lang3/time/FastDateParser\n-  #235 = NameAndType        #131:#327     // \"<init>\":(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V\n-  #236 = NameAndType        #328:#132     // clear:()V\n-  #237 = NameAndType        #329:#330     // parse:(Ljava/lang/String;Ljava/text/ParsePosition;Ljava/util/Calendar;)Z\n-  #238 = NameAndType        #331:#332     // getIndex:()I\n-  #239 = NameAndType        #333:#332     // length:()I\n-  #240 = NameAndType        #334:#323     // setIndex:(I)V\n-  #241 = Utf8               java/text/ParseException\n-  #242 = Utf8               java/lang/StringBuilder\n-  #243 = Utf8               Unable to parse the date:\n-  #244 = NameAndType        #335:#336     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #245 = NameAndType        #337:#338     // toString:()Ljava/lang/String;\n-  #246 = NameAndType        #131:#339     // \"<init>\":(Ljava/lang/String;I)V\n-  #247 = NameAndType        #161:#162     // add:(Ljava/util/Date;II)Ljava/util/Date;\n-  #248 = NameAndType        #206:#207     // validateDateNotNull:(Ljava/util/Date;)V\n-  #249 = NameAndType        #161:#340     // add:(II)V\n-  #250 = NameAndType        #170:#162     // set:(Ljava/util/Date;II)Ljava/util/Date;\n-  #251 = NameAndType        #170:#340     // set:(II)V\n-  #252 = NameAndType        #310:#341     // getInstance:(Ljava/util/TimeZone;)Ljava/util/Calendar;\n-  #253 = NameAndType        #342:#343     // ROUND:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n-  #254 = NameAndType        #179:#180     // modify:(Ljava/util/Calendar;ILorg/apache/commons/lang3/time/DateUtils$ModifyType;)V\n-  #255 = NameAndType        #344:#345     // clone:()Ljava/lang/Object;\n-  #256 = Utf8               java/util/Date\n-  #257 = NameAndType        #174:#153     // round:(Ljava/util/Date;I)Ljava/util/Date;\n-  #258 = NameAndType        #174:#175     // round:(Ljava/util/Calendar;I)Ljava/util/Calendar;\n-  #259 = Utf8               java/lang/ClassCastException\n-  #260 = Utf8               Could not round\n-  #261 = NameAndType        #335:#346     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #262 = NameAndType        #347:#343     // TRUNCATE:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n-  #263 = NameAndType        #177:#153     // truncate:(Ljava/util/Date;I)Ljava/util/Date;\n-  #264 = NameAndType        #177:#175     // truncate:(Ljava/util/Calendar;I)Ljava/util/Calendar;\n-  #265 = Utf8               Could not truncate\n-  #266 = NameAndType        #348:#343     // CEILING:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n-  #267 = NameAndType        #178:#153     // ceiling:(Ljava/util/Date;I)Ljava/util/Date;\n-  #268 = NameAndType        #178:#175     // ceiling:(Ljava/util/Calendar;I)Ljava/util/Calendar;\n-  #269 = Utf8               Could not find ceiling of for type:\n-  #270 = Utf8               java/lang/ArithmeticException\n-  #271 = Utf8               Calendar value too large for accurate calculations\n-  #272 = NameAndType        #312:#349     // setTime:(J)V\n-  #273 = NameAndType        #117:#118     // fields:[[I\n-  #274 = NameAndType        #350:#314     // getActualMinimum:(I)I\n-  #275 = NameAndType        #351:#314     // getActualMaximum:(I)I\n-  #276 = Utf8               The field\n-  #277 = NameAndType        #335:#352     // append:(I)Ljava/lang/StringBuilder;\n-  #278 = Utf8                is not supported\n-  #279 = NameAndType        #182:#186     // iterator:(Ljava/util/Calendar;I)Ljava/util/Iterator;\n-  #280 = Utf8               The range style\n-  #281 = Utf8                is not valid.\n-  #282 = Utf8               org/apache/commons/lang3/time/DateUtils$DateIterator\n-  #283 = NameAndType        #131:#353     // \"<init>\":(Ljava/util/Calendar;Ljava/util/Calendar;)V\n-  #284 = NameAndType        #182:#183     // iterator:(Ljava/util/Date;I)Ljava/util/Iterator;\n-  #285 = Utf8               Could not iterate based on\n-  #286 = Class              #354          // java/util/concurrent/TimeUnit\n-  #287 = NameAndType        #355:#356     // MILLISECONDS:Ljava/util/concurrent/TimeUnit;\n-  #288 = NameAndType        #197:#198     // getFragment:(Ljava/util/Date;ILjava/util/concurrent/TimeUnit;)J\n-  #289 = NameAndType        #357:#356     // SECONDS:Ljava/util/concurrent/TimeUnit;\n-  #290 = NameAndType        #358:#356     // MINUTES:Ljava/util/concurrent/TimeUnit;\n-  #291 = NameAndType        #359:#356     // HOURS:Ljava/util/concurrent/TimeUnit;\n-  #292 = NameAndType        #360:#356     // DAYS:Ljava/util/concurrent/TimeUnit;\n-  #293 = NameAndType        #197:#199     // getFragment:(Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J\n-  #294 = NameAndType        #361:#362     // convert:(JLjava/util/concurrent/TimeUnit;)J\n-  #295 = Utf8               The fragment\n-  #296 = NameAndType        #203:#204     // truncatedCompareTo:(Ljava/util/Calendar;Ljava/util/Calendar;I)I\n-  #297 = NameAndType        #203:#205     // truncatedCompareTo:(Ljava/util/Date;Ljava/util/Date;I)I\n-  #298 = NameAndType        #363:#364     // compareTo:(Ljava/util/Calendar;)I\n-  #299 = NameAndType        #363:#365     // compareTo:(Ljava/util/Date;)I\n-  #300 = Utf8               java/lang/Object\n-  #301 = Class              #366          // org/apache/commons/lang3/Validate\n-  #302 = NameAndType        #367:#368     // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-  #303 = Utf8               [I\n-  #304 = Utf8               org/apache/commons/lang3/time/DateUtils$ModifyType\n-  #305 = Utf8               java/util/TimeZone\n-  #306 = Utf8               java/util/Locale\n-  #307 = Utf8               java/lang/String\n-  #308 = Utf8               [Ljava/lang/String;\n-  #309 = Utf8               (Ljava/lang/String;)V\n-  #310 = Utf8               getInstance\n-  #311 = Utf8               ()Ljava/util/Calendar;\n-  #312 = Utf8               setTime\n-  #313 = Utf8               get\n-  #314 = Utf8               (I)I\n-  #315 = Utf8               getTime\n-  #316 = Utf8               ()J\n-  #317 = Utf8               ()Ljava/util/Date;\n-  #318 = Utf8               getClass\n-  #319 = Utf8               ()Ljava/lang/Class;\n-  #320 = Utf8               getDefault\n-  #321 = Utf8               ()Ljava/util/TimeZone;\n-  #322 = Utf8               ()Ljava/util/Locale;\n-  #323 = Utf8               (I)V\n-  #324 = Utf8               (Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;\n-  #325 = Utf8               setLenient\n-  #326 = Utf8               (Z)V\n-  #327 = Utf8               (Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V\n-  #328 = Utf8               clear\n-  #329 = Utf8               parse\n-  #330 = Utf8               (Ljava/lang/String;Ljava/text/ParsePosition;Ljava/util/Calendar;)Z\n-  #331 = Utf8               getIndex\n-  #332 = Utf8               ()I\n-  #333 = Utf8               length\n-  #334 = Utf8               setIndex\n-  #335 = Utf8               append\n-  #336 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #337 = Utf8               toString\n-  #338 = Utf8               ()Ljava/lang/String;\n-  #339 = Utf8               (Ljava/lang/String;I)V\n-  #340 = Utf8               (II)V\n-  #341 = Utf8               (Ljava/util/TimeZone;)Ljava/util/Calendar;\n-  #342 = Utf8               ROUND\n-  #343 = Utf8               Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n-  #344 = Utf8               clone\n-  #345 = Utf8               ()Ljava/lang/Object;\n-  #346 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #347 = Utf8               TRUNCATE\n-  #348 = Utf8               CEILING\n-  #349 = Utf8               (J)V\n-  #350 = Utf8               getActualMinimum\n-  #351 = Utf8               getActualMaximum\n-  #352 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #353 = Utf8               (Ljava/util/Calendar;Ljava/util/Calendar;)V\n-  #354 = Utf8               java/util/concurrent/TimeUnit\n-  #355 = Utf8               MILLISECONDS\n-  #356 = Utf8               Ljava/util/concurrent/TimeUnit;\n-  #357 = Utf8               SECONDS\n-  #358 = Utf8               MINUTES\n-  #359 = Utf8               HOURS\n-  #360 = Utf8               DAYS\n-  #361 = Utf8               convert\n-  #362 = Utf8               (JLjava/util/concurrent/TimeUnit;)J\n-  #363 = Utf8               compareTo\n-  #364 = Utf8               (Ljava/util/Calendar;)I\n-  #365 = Utf8               (Ljava/util/Date;)I\n-  #366 = Utf8               org/apache/commons/lang3/Validate\n-  #367 = Utf8               isTrue\n-  #368 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #178 = Methodref          #1.#179       // org/apache/commons/lang3/time/DateUtils.truncate:(Ljava/util/Calendar;I)Ljava/util/Calendar;\n+  #179 = NameAndType        #177:#163     // truncate:(Ljava/util/Calendar;I)Ljava/util/Calendar;\n+  #180 = String             #181          // Could not truncate\n+  #181 = Utf8               Could not truncate\n+  #182 = Fieldref           #144.#183     // org/apache/commons/lang3/time/DateUtils$ModifyType.CEILING:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n+  #183 = NameAndType        #184:#148     // CEILING:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n+  #184 = Utf8               CEILING\n+  #185 = Methodref          #1.#186       // org/apache/commons/lang3/time/DateUtils.ceiling:(Ljava/util/Date;I)Ljava/util/Date;\n+  #186 = NameAndType        #187:#160     // ceiling:(Ljava/util/Date;I)Ljava/util/Date;\n+  #187 = Utf8               ceiling\n+  #188 = Methodref          #1.#189       // org/apache/commons/lang3/time/DateUtils.ceiling:(Ljava/util/Calendar;I)Ljava/util/Calendar;\n+  #189 = NameAndType        #187:#163     // ceiling:(Ljava/util/Calendar;I)Ljava/util/Calendar;\n+  #190 = String             #191          // Could not find ceiling of for type:\n+  #191 = Utf8               Could not find ceiling of for type:\n+  #192 = Integer            280000000\n+  #193 = Class              #194          // java/lang/ArithmeticException\n+  #194 = Utf8               java/lang/ArithmeticException\n+  #195 = String             #196          // Calendar value too large for accurate calculations\n+  #196 = Utf8               Calendar value too large for accurate calculations\n+  #197 = Methodref          #193.#14      // java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+  #198 = Long               1000l\n+  #200 = Long               60000l\n+  #202 = Methodref          #35.#203      // java/util/Date.setTime:(J)V\n+  #203 = NameAndType        #24:#204      // setTime:(J)V\n+  #204 = Utf8               (J)V\n+  #205 = Fieldref           #1.#206       // org/apache/commons/lang3/time/DateUtils.fields:[[I\n+  #206 = NameAndType        #207:#208     // fields:[[I\n+  #207 = Utf8               fields\n+  #208 = Utf8               [[I\n+  #209 = Methodref          #17.#210      // java/util/Calendar.getActualMinimum:(I)I\n+  #210 = NameAndType        #211:#33      // getActualMinimum:(I)I\n+  #211 = Utf8               getActualMinimum\n+  #212 = Methodref          #17.#213      // java/util/Calendar.getActualMaximum:(I)I\n+  #213 = NameAndType        #214:#33      // getActualMaximum:(I)I\n+  #214 = Utf8               getActualMaximum\n+  #215 = String             #216          // The field\n+  #216 = Utf8               The field\n+  #217 = Methodref          #109.#218     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #218 = NameAndType        #116:#219     // append:(I)Ljava/lang/StringBuilder;\n+  #219 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #220 = String             #221          //  is not supported\n+  #221 = Utf8                is not supported\n+  #222 = Methodref          #1.#223       // org/apache/commons/lang3/time/DateUtils.iterator:(Ljava/util/Calendar;I)Ljava/util/Iterator;\n+  #223 = NameAndType        #224:#225     // iterator:(Ljava/util/Calendar;I)Ljava/util/Iterator;\n+  #224 = Utf8               iterator\n+  #225 = Utf8               (Ljava/util/Calendar;I)Ljava/util/Iterator;\n+  #226 = String             #227          // The range style\n+  #227 = Utf8               The range style\n+  #228 = String             #229          //  is not valid.\n+  #229 = Utf8                is not valid.\n+  #230 = Class              #231          // org/apache/commons/lang3/time/DateUtils$DateIterator\n+  #231 = Utf8               org/apache/commons/lang3/time/DateUtils$DateIterator\n+  #232 = Methodref          #230.#233     // org/apache/commons/lang3/time/DateUtils$DateIterator.\"<init>\":(Ljava/util/Calendar;Ljava/util/Calendar;)V\n+  #233 = NameAndType        #7:#234       // \"<init>\":(Ljava/util/Calendar;Ljava/util/Calendar;)V\n+  #234 = Utf8               (Ljava/util/Calendar;Ljava/util/Calendar;)V\n+  #235 = Methodref          #1.#236       // org/apache/commons/lang3/time/DateUtils.iterator:(Ljava/util/Date;I)Ljava/util/Iterator;\n+  #236 = NameAndType        #224:#237     // iterator:(Ljava/util/Date;I)Ljava/util/Iterator;\n+  #237 = Utf8               (Ljava/util/Date;I)Ljava/util/Iterator;\n+  #238 = String             #239          // Could not iterate based on\n+  #239 = Utf8               Could not iterate based on\n+  #240 = Fieldref           #241.#242     // java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;\n+  #241 = Class              #243          // java/util/concurrent/TimeUnit\n+  #242 = NameAndType        #244:#245     // MILLISECONDS:Ljava/util/concurrent/TimeUnit;\n+  #243 = Utf8               java/util/concurrent/TimeUnit\n+  #244 = Utf8               MILLISECONDS\n+  #245 = Utf8               Ljava/util/concurrent/TimeUnit;\n+  #246 = Methodref          #1.#247       // org/apache/commons/lang3/time/DateUtils.getFragment:(Ljava/util/Date;ILjava/util/concurrent/TimeUnit;)J\n+  #247 = NameAndType        #248:#249     // getFragment:(Ljava/util/Date;ILjava/util/concurrent/TimeUnit;)J\n+  #248 = Utf8               getFragment\n+  #249 = Utf8               (Ljava/util/Date;ILjava/util/concurrent/TimeUnit;)J\n+  #250 = Fieldref           #241.#251     // java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;\n+  #251 = NameAndType        #252:#245     // SECONDS:Ljava/util/concurrent/TimeUnit;\n+  #252 = Utf8               SECONDS\n+  #253 = Fieldref           #241.#254     // java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;\n+  #254 = NameAndType        #255:#245     // MINUTES:Ljava/util/concurrent/TimeUnit;\n+  #255 = Utf8               MINUTES\n+  #256 = Fieldref           #241.#257     // java/util/concurrent/TimeUnit.HOURS:Ljava/util/concurrent/TimeUnit;\n+  #257 = NameAndType        #258:#245     // HOURS:Ljava/util/concurrent/TimeUnit;\n+  #258 = Utf8               HOURS\n+  #259 = Fieldref           #241.#260     // java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;\n+  #260 = NameAndType        #261:#245     // DAYS:Ljava/util/concurrent/TimeUnit;\n+  #261 = Utf8               DAYS\n+  #262 = Methodref          #1.#263       // org/apache/commons/lang3/time/DateUtils.getFragment:(Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J\n+  #263 = NameAndType        #248:#264     // getFragment:(Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J\n+  #264 = Utf8               (Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J\n+  #265 = Methodref          #241.#266     // java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J\n+  #266 = NameAndType        #267:#268     // convert:(JLjava/util/concurrent/TimeUnit;)J\n+  #267 = Utf8               convert\n+  #268 = Utf8               (JLjava/util/concurrent/TimeUnit;)J\n+  #269 = String             #270          // The fragment\n+  #270 = Utf8               The fragment\n+  #271 = Methodref          #1.#272       // org/apache/commons/lang3/time/DateUtils.truncatedCompareTo:(Ljava/util/Calendar;Ljava/util/Calendar;I)I\n+  #272 = NameAndType        #273:#274     // truncatedCompareTo:(Ljava/util/Calendar;Ljava/util/Calendar;I)I\n+  #273 = Utf8               truncatedCompareTo\n+  #274 = Utf8               (Ljava/util/Calendar;Ljava/util/Calendar;I)I\n+  #275 = Methodref          #1.#276       // org/apache/commons/lang3/time/DateUtils.truncatedCompareTo:(Ljava/util/Date;Ljava/util/Date;I)I\n+  #276 = NameAndType        #273:#277     // truncatedCompareTo:(Ljava/util/Date;Ljava/util/Date;I)I\n+  #277 = Utf8               (Ljava/util/Date;Ljava/util/Date;I)I\n+  #278 = Methodref          #17.#279      // java/util/Calendar.compareTo:(Ljava/util/Calendar;)I\n+  #279 = NameAndType        #280:#281     // compareTo:(Ljava/util/Calendar;)I\n+  #280 = Utf8               compareTo\n+  #281 = Utf8               (Ljava/util/Calendar;)I\n+  #282 = Methodref          #35.#283      // java/util/Date.compareTo:(Ljava/util/Date;)I\n+  #283 = NameAndType        #280:#284     // compareTo:(Ljava/util/Date;)I\n+  #284 = Utf8               (Ljava/util/Date;)I\n+  #285 = Methodref          #286.#287     // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #286 = Class              #288          // org/apache/commons/lang3/Validate\n+  #287 = NameAndType        #289:#290     // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #288 = Utf8               org/apache/commons/lang3/Validate\n+  #289 = Utf8               isTrue\n+  #290 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #291 = Class              #292          // \"[I\"\n+  #292 = Utf8               [I\n+  #293 = Utf8               MILLIS_PER_SECOND\n+  #294 = Utf8               J\n+  #295 = Utf8               ConstantValue\n+  #296 = Utf8               MILLIS_PER_MINUTE\n+  #297 = Utf8               MILLIS_PER_HOUR\n+  #298 = Long               3600000l\n+  #300 = Utf8               MILLIS_PER_DAY\n+  #301 = Long               86400000l\n+  #303 = Utf8               SEMI_MONTH\n+  #304 = Utf8               I\n+  #305 = Integer            1001\n+  #306 = Utf8               RANGE_WEEK_SUNDAY\n+  #307 = Integer            1\n+  #308 = Utf8               RANGE_WEEK_MONDAY\n+  #309 = Integer            2\n+  #310 = Utf8               RANGE_WEEK_RELATIVE\n+  #311 = Integer            3\n+  #312 = Utf8               RANGE_WEEK_CENTER\n+  #313 = Integer            4\n+  #314 = Utf8               RANGE_MONTH_SUNDAY\n+  #315 = Integer            5\n+  #316 = Utf8               RANGE_MONTH_MONDAY\n+  #317 = Integer            6\n+  #318 = Utf8               Code\n+  #319 = Utf8               LineNumberTable\n+  #320 = Utf8               (Ljava/util/Date;Ljava/util/Date;)Z\n+  #321 = Utf8               StackMapTable\n+  #322 = Utf8               isSameInstant\n+  #323 = Utf8               isSameLocalTime\n+  #324 = Utf8               (Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Date;\n+  #325 = Utf8               Exceptions\n+  #326 = Class              #327          // \"[Ljava/lang/String;\"\n+  #327 = Utf8               [Ljava/lang/String;\n+  #328 = Utf8               addYears\n+  #329 = Utf8               addMonths\n+  #330 = Utf8               addWeeks\n+  #331 = Utf8               addDays\n+  #332 = Utf8               addHours\n+  #333 = Utf8               addMinutes\n+  #334 = Utf8               addSeconds\n+  #335 = Utf8               addMilliseconds\n+  #336 = Utf8               setYears\n+  #337 = Utf8               setMonths\n+  #338 = Utf8               setDays\n+  #339 = Utf8               setHours\n+  #340 = Utf8               setMinutes\n+  #341 = Utf8               setSeconds\n+  #342 = Utf8               setMilliseconds\n+  #343 = Utf8               toCalendar\n+  #344 = Utf8               (Ljava/util/Date;)Ljava/util/Calendar;\n+  #345 = Utf8               (Ljava/util/Date;Ljava/util/TimeZone;)Ljava/util/Calendar;\n+  #346 = Utf8               (Ljava/lang/Object;I)Ljava/util/Date;\n+  #347 = Class              #208          // \"[[I\"\n+  #348 = Utf8               Signature\n+  #349 = Utf8               (Ljava/util/Date;I)Ljava/util/Iterator<Ljava/util/Calendar;>;\n+  #350 = Utf8               (Ljava/util/Calendar;I)Ljava/util/Iterator<Ljava/util/Calendar;>;\n+  #351 = Utf8               (Ljava/lang/Object;I)Ljava/util/Iterator;\n+  #352 = Utf8               (Ljava/lang/Object;I)Ljava/util/Iterator<*>;\n+  #353 = Utf8               getFragmentInMilliseconds\n+  #354 = Utf8               (Ljava/util/Date;I)J\n+  #355 = Utf8               getFragmentInSeconds\n+  #356 = Utf8               getFragmentInMinutes\n+  #357 = Utf8               getFragmentInHours\n+  #358 = Utf8               getFragmentInDays\n+  #359 = Utf8               (Ljava/util/Calendar;I)J\n+  #360 = Utf8               truncatedEquals\n+  #361 = Utf8               (Ljava/util/Calendar;Ljava/util/Calendar;I)Z\n+  #362 = Utf8               (Ljava/util/Date;Ljava/util/Date;I)Z\n+  #363 = Utf8               <clinit>\n+  #364 = Utf8               SourceFile\n+  #365 = Utf8               DateUtils.java\n+  #366 = Utf8               InnerClasses\n+  #367 = Utf8               ModifyType\n+  #368 = Utf8               DateIterator\n {\n   public static final long MILLIS_PER_SECOND = 1000l;\n     descriptor: J\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 1000l\n \n   public static final long MILLIS_PER_MINUTE = 60000l;\n@@ -434,47 +434,47 @@\n \n   public org.apache.commons.lang3.time.DateUtils();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #2                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #3                  // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 149: 0\n         line 150: 4\n \n   public static boolean isSameDay(java.util.Date, java.util.Date);\n     descriptor: (Ljava/util/Date;Ljava/util/Date;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=4, args_size=2\n          0: aload_0\n          1: ifnull        8\n          4: aload_1\n          5: ifnonnull     18\n-         8: new           #3                  // class java/lang/IllegalArgumentException\n+         8: new           #9                  // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #4                  // String The date must not be null\n-        14: invokespecial #5                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #11                 // String The date must not be null\n+        14: invokespecial #13                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n-        18: invokestatic  #6                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;\n+        18: invokestatic  #16                 // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;\n         21: astore_2\n         22: aload_2\n         23: aload_0\n-        24: invokevirtual #7                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V\n-        27: invokestatic  #6                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;\n+        24: invokevirtual #22                 // Method java/util/Calendar.setTime:(Ljava/util/Date;)V\n+        27: invokestatic  #16                 // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;\n         30: astore_3\n         31: aload_3\n         32: aload_1\n-        33: invokevirtual #7                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V\n+        33: invokevirtual #22                 // Method java/util/Calendar.setTime:(Ljava/util/Date;)V\n         36: aload_2\n         37: aload_3\n-        38: invokestatic  #8                  // Method isSameDay:(Ljava/util/Calendar;Ljava/util/Calendar;)Z\n+        38: invokestatic  #26                 // Method isSameDay:(Ljava/util/Calendar;Ljava/util/Calendar;)Z\n         41: ireturn\n       LineNumberTable:\n         line 167: 0\n         line 168: 8\n         line 170: 18\n         line 171: 22\n         line 172: 27\n@@ -489,39 +489,39 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: ifnull        8\n          4: aload_1\n          5: ifnonnull     18\n-         8: new           #3                  // class java/lang/IllegalArgumentException\n+         8: new           #9                  // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #4                  // String The date must not be null\n-        14: invokespecial #5                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #11                 // String The date must not be null\n+        14: invokespecial #13                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: aload_0\n         19: iconst_0\n-        20: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+        20: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n         23: aload_1\n         24: iconst_0\n-        25: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+        25: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n         28: if_icmpne     63\n         31: aload_0\n         32: iconst_1\n-        33: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+        33: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n         36: aload_1\n         37: iconst_1\n-        38: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+        38: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n         41: if_icmpne     63\n         44: aload_0\n         45: bipush        6\n-        47: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+        47: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n         50: aload_1\n         51: bipush        6\n-        53: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+        53: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n         56: if_icmpne     63\n         59: iconst_1\n         60: goto          64\n         63: iconst_0\n         64: ireturn\n       LineNumberTable:\n         line 191: 0\n@@ -542,23 +542,23 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: ifnull        8\n          4: aload_1\n          5: ifnonnull     18\n-         8: new           #3                  // class java/lang/IllegalArgumentException\n+         8: new           #9                  // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #4                  // String The date must not be null\n-        14: invokespecial #5                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #11                 // String The date must not be null\n+        14: invokespecial #13                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: aload_0\n-        19: invokevirtual #11                 // Method java/util/Date.getTime:()J\n+        19: invokevirtual #34                 // Method java/util/Date.getTime:()J\n         22: aload_1\n-        23: invokevirtual #11                 // Method java/util/Date.getTime:()J\n+        23: invokevirtual #34                 // Method java/util/Date.getTime:()J\n         26: lcmp\n         27: ifne          34\n         30: iconst_1\n         31: goto          35\n         34: iconst_0\n         35: ireturn\n       LineNumberTable:\n@@ -577,25 +577,25 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: ifnull        8\n          4: aload_1\n          5: ifnonnull     18\n-         8: new           #3                  // class java/lang/IllegalArgumentException\n+         8: new           #9                  // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #4                  // String The date must not be null\n-        14: invokespecial #5                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #11                 // String The date must not be null\n+        14: invokespecial #13                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: aload_0\n-        19: invokevirtual #12                 // Method java/util/Calendar.getTime:()Ljava/util/Date;\n-        22: invokevirtual #11                 // Method java/util/Date.getTime:()J\n+        19: invokevirtual #40                 // Method java/util/Calendar.getTime:()Ljava/util/Date;\n+        22: invokevirtual #34                 // Method java/util/Date.getTime:()J\n         25: aload_1\n-        26: invokevirtual #12                 // Method java/util/Calendar.getTime:()Ljava/util/Date;\n-        29: invokevirtual #11                 // Method java/util/Date.getTime:()J\n+        26: invokevirtual #40                 // Method java/util/Calendar.getTime:()Ljava/util/Date;\n+        29: invokevirtual #34                 // Method java/util/Date.getTime:()J\n         32: lcmp\n         33: ifne          40\n         36: iconst_1\n         37: goto          41\n         40: iconst_0\n         41: ireturn\n       LineNumberTable:\n@@ -614,72 +614,72 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: ifnull        8\n          4: aload_1\n          5: ifnonnull     18\n-         8: new           #3                  // class java/lang/IllegalArgumentException\n+         8: new           #9                  // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #4                  // String The date must not be null\n-        14: invokespecial #5                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #11                 // String The date must not be null\n+        14: invokespecial #13                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: aload_0\n         19: bipush        14\n-        21: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+        21: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n         24: aload_1\n         25: bipush        14\n-        27: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+        27: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n         30: if_icmpne     134\n         33: aload_0\n         34: bipush        13\n-        36: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+        36: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n         39: aload_1\n         40: bipush        13\n-        42: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+        42: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n         45: if_icmpne     134\n         48: aload_0\n         49: bipush        12\n-        51: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+        51: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n         54: aload_1\n         55: bipush        12\n-        57: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+        57: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n         60: if_icmpne     134\n         63: aload_0\n         64: bipush        11\n-        66: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+        66: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n         69: aload_1\n         70: bipush        11\n-        72: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+        72: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n         75: if_icmpne     134\n         78: aload_0\n         79: bipush        6\n-        81: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+        81: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n         84: aload_1\n         85: bipush        6\n-        87: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+        87: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n         90: if_icmpne     134\n         93: aload_0\n         94: iconst_1\n-        95: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+        95: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n         98: aload_1\n         99: iconst_1\n-       100: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+       100: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n        103: if_icmpne     134\n        106: aload_0\n        107: iconst_0\n-       108: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+       108: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n        111: aload_1\n        112: iconst_0\n-       113: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+       113: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n        116: if_icmpne     134\n        119: aload_0\n-       120: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+       120: invokevirtual #43                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n        123: aload_1\n-       124: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+       124: invokevirtual #43                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n        127: if_acmpne     134\n        130: iconst_1\n        131: goto          135\n        134: iconst_0\n        135: ireturn\n       LineNumberTable:\n         line 250: 0\n@@ -705,15 +705,15 @@\n     descriptor: (Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Date;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aconst_null\n          2: aload_1\n-         3: invokestatic  #14                 // Method parseDate:(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;)Ljava/util/Date;\n+         3: invokestatic  #47                 // Method parseDate:(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;)Ljava/util/Date;\n          6: areturn\n       LineNumberTable:\n         line 279: 0\n     Exceptions:\n       throws java.text.ParseException\n \n   public static java.util.Date parseDate(java.lang.String, java.util.Locale, java.lang.String...) throws java.text.ParseException;\n@@ -721,30 +721,30 @@\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iconst_1\n-         4: invokestatic  #15                 // Method parseDateWithLeniency:(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;Z)Ljava/util/Date;\n+         4: invokestatic  #51                 // Method parseDateWithLeniency:(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;Z)Ljava/util/Date;\n          7: areturn\n       LineNumberTable:\n         line 302: 0\n     Exceptions:\n       throws java.text.ParseException\n \n   public static java.util.Date parseDateStrictly(java.lang.String, java.lang.String...) throws java.text.ParseException;\n     descriptor: (Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Date;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aconst_null\n          2: aload_1\n-         3: invokestatic  #16                 // Method parseDateStrictly:(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;)Ljava/util/Date;\n+         3: invokestatic  #55                 // Method parseDateStrictly:(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;)Ljava/util/Date;\n          6: areturn\n       LineNumberTable:\n         line 322: 0\n     Exceptions:\n       throws java.text.ParseException\n \n   public static java.util.Date parseDateStrictly(java.lang.String, java.util.Locale, java.lang.String...) throws java.text.ParseException;\n@@ -752,15 +752,15 @@\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iconst_0\n-         4: invokestatic  #15                 // Method parseDateWithLeniency:(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;Z)Ljava/util/Date;\n+         4: invokestatic  #51                 // Method parseDateWithLeniency:(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;Z)Ljava/util/Date;\n          7: areturn\n       LineNumberTable:\n         line 344: 0\n     Exceptions:\n       throws java.text.ParseException\n \n   private static java.util.Date parseDateWithLeniency(java.lang.String, java.util.Locale, java.lang.String[], boolean) throws java.text.ParseException;\n@@ -768,95 +768,95 @@\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=5, locals=14, args_size=4\n          0: aload_0\n          1: ifnull        8\n          4: aload_2\n          5: ifnonnull     18\n-         8: new           #3                  // class java/lang/IllegalArgumentException\n+         8: new           #9                  // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #17                 // String Date and Patterns must not be null\n-        14: invokespecial #5                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #58                 // String Date and Patterns must not be null\n+        14: invokespecial #13                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n-        18: invokestatic  #18                 // Method java/util/TimeZone.getDefault:()Ljava/util/TimeZone;\n+        18: invokestatic  #60                 // Method java/util/TimeZone.getDefault:()Ljava/util/TimeZone;\n         21: astore        4\n         23: aload_1\n         24: ifnonnull     33\n-        27: invokestatic  #19                 // Method java/util/Locale.getDefault:()Ljava/util/Locale;\n+        27: invokestatic  #66                 // Method java/util/Locale.getDefault:()Ljava/util/Locale;\n         30: goto          34\n         33: aload_1\n         34: astore        5\n-        36: new           #20                 // class java/text/ParsePosition\n+        36: new           #71                 // class java/text/ParsePosition\n         39: dup\n         40: iconst_0\n-        41: invokespecial #21                 // Method java/text/ParsePosition.\"<init>\":(I)V\n+        41: invokespecial #73                 // Method java/text/ParsePosition.\"<init>\":(I)V\n         44: astore        6\n         46: aload         4\n         48: aload         5\n-        50: invokestatic  #22                 // Method java/util/Calendar.getInstance:(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;\n+        50: invokestatic  #76                 // Method java/util/Calendar.getInstance:(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;\n         53: astore        7\n         55: aload         7\n         57: iload_3\n-        58: invokevirtual #23                 // Method java/util/Calendar.setLenient:(Z)V\n+        58: invokevirtual #79                 // Method java/util/Calendar.setLenient:(Z)V\n         61: aload_2\n         62: astore        8\n         64: aload         8\n         66: arraylength\n         67: istore        9\n         69: iconst_0\n         70: istore        10\n         72: iload         10\n         74: iload         9\n         76: if_icmpge     154\n         79: aload         8\n         81: iload         10\n         83: aaload\n         84: astore        11\n-        86: new           #24                 // class org/apache/commons/lang3/time/FastDateParser\n+        86: new           #83                 // class org/apache/commons/lang3/time/FastDateParser\n         89: dup\n         90: aload         11\n         92: aload         4\n         94: aload         5\n-        96: invokespecial #25                 // Method org/apache/commons/lang3/time/FastDateParser.\"<init>\":(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V\n+        96: invokespecial #85                 // Method org/apache/commons/lang3/time/FastDateParser.\"<init>\":(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V\n         99: astore        12\n        101: aload         7\n-       103: invokevirtual #26                 // Method java/util/Calendar.clear:()V\n+       103: invokevirtual #88                 // Method java/util/Calendar.clear:()V\n        106: aload         12\n        108: aload_0\n        109: aload         6\n        111: aload         7\n-       113: invokevirtual #27                 // Method org/apache/commons/lang3/time/FastDateParser.parse:(Ljava/lang/String;Ljava/text/ParsePosition;Ljava/util/Calendar;)Z\n+       113: invokevirtual #91                 // Method org/apache/commons/lang3/time/FastDateParser.parse:(Ljava/lang/String;Ljava/text/ParsePosition;Ljava/util/Calendar;)Z\n        116: ifeq          137\n        119: aload         6\n-       121: invokevirtual #28                 // Method java/text/ParsePosition.getIndex:()I\n+       121: invokevirtual #95                 // Method java/text/ParsePosition.getIndex:()I\n        124: aload_0\n-       125: invokevirtual #29                 // Method java/lang/String.length:()I\n+       125: invokevirtual #99                 // Method java/lang/String.length:()I\n        128: if_icmpne     137\n        131: aload         7\n-       133: invokevirtual #12                 // Method java/util/Calendar.getTime:()Ljava/util/Date;\n+       133: invokevirtual #40                 // Method java/util/Calendar.getTime:()Ljava/util/Date;\n        136: areturn\n        137: goto          142\n        140: astore        13\n        142: aload         6\n        144: iconst_0\n-       145: invokevirtual #30                 // Method java/text/ParsePosition.setIndex:(I)V\n+       145: invokevirtual #104                // Method java/text/ParsePosition.setIndex:(I)V\n        148: iinc          10, 1\n        151: goto          72\n-       154: new           #31                 // class java/text/ParseException\n+       154: new           #107                // class java/text/ParseException\n        157: dup\n-       158: new           #32                 // class java/lang/StringBuilder\n+       158: new           #109                // class java/lang/StringBuilder\n        161: dup\n-       162: invokespecial #33                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       165: ldc           #34                 // String Unable to parse the date:\n-       167: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       162: invokespecial #111                // Method java/lang/StringBuilder.\"<init>\":()V\n+       165: ldc           #112                // String Unable to parse the date:\n+       167: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        170: aload_0\n-       171: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       174: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       171: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       174: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        177: iconst_m1\n-       178: invokespecial #37                 // Method java/text/ParseException.\"<init>\":(Ljava/lang/String;I)V\n+       178: invokespecial #122                // Method java/text/ParseException.\"<init>\":(Ljava/lang/String;I)V\n        181: athrow\n       Exception table:\n          from    to  target type\n            106   136   140   Class java/lang/IllegalArgumentException\n       LineNumberTable:\n         line 366: 0\n         line 367: 8\n@@ -904,128 +904,128 @@\n     descriptor: (Ljava/util/Date;I)Ljava/util/Date;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iconst_1\n          2: iload_1\n-         3: invokestatic  #38                 // Method add:(Ljava/util/Date;II)Ljava/util/Date;\n+         3: invokestatic  #125                // Method add:(Ljava/util/Date;II)Ljava/util/Date;\n          6: areturn\n       LineNumberTable:\n         line 402: 0\n \n   public static java.util.Date addMonths(java.util.Date, int);\n     descriptor: (Ljava/util/Date;I)Ljava/util/Date;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iconst_2\n          2: iload_1\n-         3: invokestatic  #38                 // Method add:(Ljava/util/Date;II)Ljava/util/Date;\n+         3: invokestatic  #125                // Method add:(Ljava/util/Date;II)Ljava/util/Date;\n          6: areturn\n       LineNumberTable:\n         line 416: 0\n \n   public static java.util.Date addWeeks(java.util.Date, int);\n     descriptor: (Ljava/util/Date;I)Ljava/util/Date;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iconst_3\n          2: iload_1\n-         3: invokestatic  #38                 // Method add:(Ljava/util/Date;II)Ljava/util/Date;\n+         3: invokestatic  #125                // Method add:(Ljava/util/Date;II)Ljava/util/Date;\n          6: areturn\n       LineNumberTable:\n         line 430: 0\n \n   public static java.util.Date addDays(java.util.Date, int);\n     descriptor: (Ljava/util/Date;I)Ljava/util/Date;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iconst_5\n          2: iload_1\n-         3: invokestatic  #38                 // Method add:(Ljava/util/Date;II)Ljava/util/Date;\n+         3: invokestatic  #125                // Method add:(Ljava/util/Date;II)Ljava/util/Date;\n          6: areturn\n       LineNumberTable:\n         line 444: 0\n \n   public static java.util.Date addHours(java.util.Date, int);\n     descriptor: (Ljava/util/Date;I)Ljava/util/Date;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: bipush        11\n          3: iload_1\n-         4: invokestatic  #38                 // Method add:(Ljava/util/Date;II)Ljava/util/Date;\n+         4: invokestatic  #125                // Method add:(Ljava/util/Date;II)Ljava/util/Date;\n          7: areturn\n       LineNumberTable:\n         line 458: 0\n \n   public static java.util.Date addMinutes(java.util.Date, int);\n     descriptor: (Ljava/util/Date;I)Ljava/util/Date;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: bipush        12\n          3: iload_1\n-         4: invokestatic  #38                 // Method add:(Ljava/util/Date;II)Ljava/util/Date;\n+         4: invokestatic  #125                // Method add:(Ljava/util/Date;II)Ljava/util/Date;\n          7: areturn\n       LineNumberTable:\n         line 472: 0\n \n   public static java.util.Date addSeconds(java.util.Date, int);\n     descriptor: (Ljava/util/Date;I)Ljava/util/Date;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: bipush        13\n          3: iload_1\n-         4: invokestatic  #38                 // Method add:(Ljava/util/Date;II)Ljava/util/Date;\n+         4: invokestatic  #125                // Method add:(Ljava/util/Date;II)Ljava/util/Date;\n          7: areturn\n       LineNumberTable:\n         line 486: 0\n \n   public static java.util.Date addMilliseconds(java.util.Date, int);\n     descriptor: (Ljava/util/Date;I)Ljava/util/Date;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: bipush        14\n          3: iload_1\n-         4: invokestatic  #38                 // Method add:(Ljava/util/Date;II)Ljava/util/Date;\n+         4: invokestatic  #125                // Method add:(Ljava/util/Date;II)Ljava/util/Date;\n          7: areturn\n       LineNumberTable:\n         line 500: 0\n \n   private static java.util.Date add(java.util.Date, int, int);\n     descriptor: (Ljava/util/Date;II)Ljava/util/Date;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_0\n-         1: invokestatic  #39                 // Method validateDateNotNull:(Ljava/util/Date;)V\n-         4: invokestatic  #6                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;\n+         1: invokestatic  #129                // Method validateDateNotNull:(Ljava/util/Date;)V\n+         4: invokestatic  #16                 // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;\n          7: astore_3\n          8: aload_3\n          9: aload_0\n-        10: invokevirtual #7                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V\n+        10: invokevirtual #22                 // Method java/util/Calendar.setTime:(Ljava/util/Date;)V\n         13: aload_3\n         14: iload_1\n         15: iload_2\n-        16: invokevirtual #40                 // Method java/util/Calendar.add:(II)V\n+        16: invokevirtual #132                // Method java/util/Calendar.add:(II)V\n         19: aload_3\n-        20: invokevirtual #12                 // Method java/util/Calendar.getTime:()Ljava/util/Date;\n+        20: invokevirtual #40                 // Method java/util/Calendar.getTime:()Ljava/util/Date;\n         23: areturn\n       LineNumberTable:\n         line 515: 0\n         line 516: 4\n         line 517: 8\n         line 518: 13\n         line 519: 19\n@@ -1034,180 +1034,180 @@\n     descriptor: (Ljava/util/Date;I)Ljava/util/Date;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iconst_1\n          2: iload_1\n-         3: invokestatic  #41                 // Method set:(Ljava/util/Date;II)Ljava/util/Date;\n+         3: invokestatic  #135                // Method set:(Ljava/util/Date;II)Ljava/util/Date;\n          6: areturn\n       LineNumberTable:\n         line 534: 0\n \n   public static java.util.Date setMonths(java.util.Date, int);\n     descriptor: (Ljava/util/Date;I)Ljava/util/Date;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iconst_2\n          2: iload_1\n-         3: invokestatic  #41                 // Method set:(Ljava/util/Date;II)Ljava/util/Date;\n+         3: invokestatic  #135                // Method set:(Ljava/util/Date;II)Ljava/util/Date;\n          6: areturn\n       LineNumberTable:\n         line 549: 0\n \n   public static java.util.Date setDays(java.util.Date, int);\n     descriptor: (Ljava/util/Date;I)Ljava/util/Date;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iconst_5\n          2: iload_1\n-         3: invokestatic  #41                 // Method set:(Ljava/util/Date;II)Ljava/util/Date;\n+         3: invokestatic  #135                // Method set:(Ljava/util/Date;II)Ljava/util/Date;\n          6: areturn\n       LineNumberTable:\n         line 564: 0\n \n   public static java.util.Date setHours(java.util.Date, int);\n     descriptor: (Ljava/util/Date;I)Ljava/util/Date;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: bipush        11\n          3: iload_1\n-         4: invokestatic  #41                 // Method set:(Ljava/util/Date;II)Ljava/util/Date;\n+         4: invokestatic  #135                // Method set:(Ljava/util/Date;II)Ljava/util/Date;\n          7: areturn\n       LineNumberTable:\n         line 580: 0\n \n   public static java.util.Date setMinutes(java.util.Date, int);\n     descriptor: (Ljava/util/Date;I)Ljava/util/Date;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: bipush        12\n          3: iload_1\n-         4: invokestatic  #41                 // Method set:(Ljava/util/Date;II)Ljava/util/Date;\n+         4: invokestatic  #135                // Method set:(Ljava/util/Date;II)Ljava/util/Date;\n          7: areturn\n       LineNumberTable:\n         line 595: 0\n \n   public static java.util.Date setSeconds(java.util.Date, int);\n     descriptor: (Ljava/util/Date;I)Ljava/util/Date;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: bipush        13\n          3: iload_1\n-         4: invokestatic  #41                 // Method set:(Ljava/util/Date;II)Ljava/util/Date;\n+         4: invokestatic  #135                // Method set:(Ljava/util/Date;II)Ljava/util/Date;\n          7: areturn\n       LineNumberTable:\n         line 610: 0\n \n   public static java.util.Date setMilliseconds(java.util.Date, int);\n     descriptor: (Ljava/util/Date;I)Ljava/util/Date;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: bipush        14\n          3: iload_1\n-         4: invokestatic  #41                 // Method set:(Ljava/util/Date;II)Ljava/util/Date;\n+         4: invokestatic  #135                // Method set:(Ljava/util/Date;II)Ljava/util/Date;\n          7: areturn\n       LineNumberTable:\n         line 625: 0\n \n   private static java.util.Date set(java.util.Date, int, int);\n     descriptor: (Ljava/util/Date;II)Ljava/util/Date;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_0\n-         1: invokestatic  #39                 // Method validateDateNotNull:(Ljava/util/Date;)V\n-         4: invokestatic  #6                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;\n+         1: invokestatic  #129                // Method validateDateNotNull:(Ljava/util/Date;)V\n+         4: invokestatic  #16                 // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;\n          7: astore_3\n          8: aload_3\n          9: iconst_0\n-        10: invokevirtual #23                 // Method java/util/Calendar.setLenient:(Z)V\n+        10: invokevirtual #79                 // Method java/util/Calendar.setLenient:(Z)V\n         13: aload_3\n         14: aload_0\n-        15: invokevirtual #7                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V\n+        15: invokevirtual #22                 // Method java/util/Calendar.setTime:(Ljava/util/Date;)V\n         18: aload_3\n         19: iload_1\n         20: iload_2\n-        21: invokevirtual #42                 // Method java/util/Calendar.set:(II)V\n+        21: invokevirtual #138                // Method java/util/Calendar.set:(II)V\n         24: aload_3\n-        25: invokevirtual #12                 // Method java/util/Calendar.getTime:()Ljava/util/Date;\n+        25: invokevirtual #40                 // Method java/util/Calendar.getTime:()Ljava/util/Date;\n         28: areturn\n       LineNumberTable:\n         line 642: 0\n         line 644: 4\n         line 645: 8\n         line 646: 13\n         line 647: 18\n         line 648: 24\n \n   public static java.util.Calendar toCalendar(java.util.Date);\n     descriptor: (Ljava/util/Date;)Ljava/util/Calendar;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=1\n-         0: invokestatic  #6                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;\n+         0: invokestatic  #16                 // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;\n          3: astore_1\n          4: aload_1\n          5: aload_0\n-         6: invokevirtual #7                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V\n+         6: invokevirtual #22                 // Method java/util/Calendar.setTime:(Ljava/util/Date;)V\n          9: aload_1\n         10: areturn\n       LineNumberTable:\n         line 661: 0\n         line 662: 4\n         line 663: 9\n \n   public static java.util.Calendar toCalendar(java.util.Date, java.util.TimeZone);\n     descriptor: (Ljava/util/Date;Ljava/util/TimeZone;)Ljava/util/Calendar;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_1\n-         1: invokestatic  #43                 // Method java/util/Calendar.getInstance:(Ljava/util/TimeZone;)Ljava/util/Calendar;\n+         1: invokestatic  #140                // Method java/util/Calendar.getInstance:(Ljava/util/TimeZone;)Ljava/util/Calendar;\n          4: astore_2\n          5: aload_2\n          6: aload_0\n-         7: invokevirtual #7                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V\n+         7: invokevirtual #22                 // Method java/util/Calendar.setTime:(Ljava/util/Date;)V\n         10: aload_2\n         11: areturn\n       LineNumberTable:\n         line 675: 0\n         line 676: 5\n         line 677: 10\n \n   public static java.util.Date round(java.util.Date, int);\n     descriptor: (Ljava/util/Date;I)Ljava/util/Date;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: invokestatic  #39                 // Method validateDateNotNull:(Ljava/util/Date;)V\n-         4: invokestatic  #6                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;\n+         1: invokestatic  #129                // Method validateDateNotNull:(Ljava/util/Date;)V\n+         4: invokestatic  #16                 // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;\n          7: astore_2\n          8: aload_2\n          9: aload_0\n-        10: invokevirtual #7                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V\n+        10: invokevirtual #22                 // Method java/util/Calendar.setTime:(Ljava/util/Date;)V\n         13: aload_2\n         14: iload_1\n-        15: getstatic     #44                 // Field org/apache/commons/lang3/time/DateUtils$ModifyType.ROUND:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n-        18: invokestatic  #45                 // Method modify:(Ljava/util/Calendar;ILorg/apache/commons/lang3/time/DateUtils$ModifyType;)V\n+        15: getstatic     #143                // Field org/apache/commons/lang3/time/DateUtils$ModifyType.ROUND:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n+        18: invokestatic  #149                // Method modify:(Ljava/util/Calendar;ILorg/apache/commons/lang3/time/DateUtils$ModifyType;)V\n         21: aload_2\n-        22: invokevirtual #12                 // Method java/util/Calendar.getTime:()Ljava/util/Date;\n+        22: invokevirtual #40                 // Method java/util/Calendar.getTime:()Ljava/util/Date;\n         25: areturn\n       LineNumberTable:\n         line 708: 0\n         line 709: 4\n         line 710: 8\n         line 711: 13\n         line 712: 21\n@@ -1215,27 +1215,27 @@\n   public static java.util.Calendar round(java.util.Calendar, int);\n     descriptor: (Ljava/util/Calendar;I)Ljava/util/Calendar;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: ifnonnull     14\n-         4: new           #3                  // class java/lang/IllegalArgumentException\n+         4: new           #9                  // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #4                  // String The date must not be null\n-        10: invokespecial #5                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #11                 // String The date must not be null\n+        10: invokespecial #13                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_0\n-        15: invokevirtual #46                 // Method java/util/Calendar.clone:()Ljava/lang/Object;\n-        18: checkcast     #9                  // class java/util/Calendar\n+        15: invokevirtual #153                // Method java/util/Calendar.clone:()Ljava/lang/Object;\n+        18: checkcast     #17                 // class java/util/Calendar\n         21: astore_2\n         22: aload_2\n         23: iload_1\n-        24: getstatic     #44                 // Field org/apache/commons/lang3/time/DateUtils$ModifyType.ROUND:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n-        27: invokestatic  #45                 // Method modify:(Ljava/util/Calendar;ILorg/apache/commons/lang3/time/DateUtils$ModifyType;)V\n+        24: getstatic     #143                // Field org/apache/commons/lang3/time/DateUtils$ModifyType.ROUND:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n+        27: invokestatic  #149                // Method modify:(Ljava/util/Calendar;ILorg/apache/commons/lang3/time/DateUtils$ModifyType;)V\n         30: aload_2\n         31: areturn\n       LineNumberTable:\n         line 743: 0\n         line 744: 4\n         line 746: 14\n         line 747: 22\n@@ -1246,47 +1246,47 @@\n   public static java.util.Date round(java.lang.Object, int);\n     descriptor: (Ljava/lang/Object;I)Ljava/util/Date;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: ifnonnull     14\n-         4: new           #3                  // class java/lang/IllegalArgumentException\n+         4: new           #9                  // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #4                  // String The date must not be null\n-        10: invokespecial #5                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #11                 // String The date must not be null\n+        10: invokespecial #13                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_0\n-        15: instanceof    #47                 // class java/util/Date\n+        15: instanceof    #35                 // class java/util/Date\n         18: ifeq          30\n         21: aload_0\n-        22: checkcast     #47                 // class java/util/Date\n+        22: checkcast     #35                 // class java/util/Date\n         25: iload_1\n-        26: invokestatic  #48                 // Method round:(Ljava/util/Date;I)Ljava/util/Date;\n+        26: invokestatic  #157                // Method round:(Ljava/util/Date;I)Ljava/util/Date;\n         29: areturn\n         30: aload_0\n-        31: instanceof    #9                  // class java/util/Calendar\n+        31: instanceof    #17                 // class java/util/Calendar\n         34: ifeq          49\n         37: aload_0\n-        38: checkcast     #9                  // class java/util/Calendar\n+        38: checkcast     #17                 // class java/util/Calendar\n         41: iload_1\n-        42: invokestatic  #49                 // Method round:(Ljava/util/Calendar;I)Ljava/util/Calendar;\n-        45: invokevirtual #12                 // Method java/util/Calendar.getTime:()Ljava/util/Date;\n+        42: invokestatic  #161                // Method round:(Ljava/util/Calendar;I)Ljava/util/Calendar;\n+        45: invokevirtual #40                 // Method java/util/Calendar.getTime:()Ljava/util/Date;\n         48: areturn\n-        49: new           #50                 // class java/lang/ClassCastException\n+        49: new           #164                // class java/lang/ClassCastException\n         52: dup\n-        53: new           #32                 // class java/lang/StringBuilder\n+        53: new           #109                // class java/lang/StringBuilder\n         56: dup\n-        57: invokespecial #33                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        60: ldc           #51                 // String Could not round\n-        62: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        57: invokespecial #111                // Method java/lang/StringBuilder.\"<init>\":()V\n+        60: ldc           #166                // String Could not round\n+        62: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         65: aload_0\n-        66: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        69: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        72: invokespecial #53                 // Method java/lang/ClassCastException.\"<init>\":(Ljava/lang/String;)V\n+        66: invokevirtual #168                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        69: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        72: invokespecial #171                // Method java/lang/ClassCastException.\"<init>\":(Ljava/lang/String;)V\n         75: athrow\n       LineNumberTable:\n         line 780: 0\n         line 781: 4\n         line 783: 14\n         line 784: 21\n         line 785: 30\n@@ -1299,26 +1299,26 @@\n \n   public static java.util.Date truncate(java.util.Date, int);\n     descriptor: (Ljava/util/Date;I)Ljava/util/Date;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: invokestatic  #39                 // Method validateDateNotNull:(Ljava/util/Date;)V\n-         4: invokestatic  #6                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;\n+         1: invokestatic  #129                // Method validateDateNotNull:(Ljava/util/Date;)V\n+         4: invokestatic  #16                 // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;\n          7: astore_2\n          8: aload_2\n          9: aload_0\n-        10: invokevirtual #7                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V\n+        10: invokevirtual #22                 // Method java/util/Calendar.setTime:(Ljava/util/Date;)V\n         13: aload_2\n         14: iload_1\n-        15: getstatic     #54                 // Field org/apache/commons/lang3/time/DateUtils$ModifyType.TRUNCATE:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n-        18: invokestatic  #45                 // Method modify:(Ljava/util/Calendar;ILorg/apache/commons/lang3/time/DateUtils$ModifyType;)V\n+        15: getstatic     #172                // Field org/apache/commons/lang3/time/DateUtils$ModifyType.TRUNCATE:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n+        18: invokestatic  #149                // Method modify:(Ljava/util/Calendar;ILorg/apache/commons/lang3/time/DateUtils$ModifyType;)V\n         21: aload_2\n-        22: invokevirtual #12                 // Method java/util/Calendar.getTime:()Ljava/util/Date;\n+        22: invokevirtual #40                 // Method java/util/Calendar.getTime:()Ljava/util/Date;\n         25: areturn\n       LineNumberTable:\n         line 809: 0\n         line 810: 4\n         line 811: 8\n         line 812: 13\n         line 813: 21\n@@ -1326,27 +1326,27 @@\n   public static java.util.Calendar truncate(java.util.Calendar, int);\n     descriptor: (Ljava/util/Calendar;I)Ljava/util/Calendar;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: ifnonnull     14\n-         4: new           #3                  // class java/lang/IllegalArgumentException\n+         4: new           #9                  // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #4                  // String The date must not be null\n-        10: invokespecial #5                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #11                 // String The date must not be null\n+        10: invokespecial #13                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_0\n-        15: invokevirtual #46                 // Method java/util/Calendar.clone:()Ljava/lang/Object;\n-        18: checkcast     #9                  // class java/util/Calendar\n+        15: invokevirtual #153                // Method java/util/Calendar.clone:()Ljava/lang/Object;\n+        18: checkcast     #17                 // class java/util/Calendar\n         21: astore_2\n         22: aload_2\n         23: iload_1\n-        24: getstatic     #54                 // Field org/apache/commons/lang3/time/DateUtils$ModifyType.TRUNCATE:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n-        27: invokestatic  #45                 // Method modify:(Ljava/util/Calendar;ILorg/apache/commons/lang3/time/DateUtils$ModifyType;)V\n+        24: getstatic     #172                // Field org/apache/commons/lang3/time/DateUtils$ModifyType.TRUNCATE:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n+        27: invokestatic  #149                // Method modify:(Ljava/util/Calendar;ILorg/apache/commons/lang3/time/DateUtils$ModifyType;)V\n         30: aload_2\n         31: areturn\n       LineNumberTable:\n         line 832: 0\n         line 833: 4\n         line 835: 14\n         line 836: 22\n@@ -1357,47 +1357,47 @@\n   public static java.util.Date truncate(java.lang.Object, int);\n     descriptor: (Ljava/lang/Object;I)Ljava/util/Date;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: ifnonnull     14\n-         4: new           #3                  // class java/lang/IllegalArgumentException\n+         4: new           #9                  // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #4                  // String The date must not be null\n-        10: invokespecial #5                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #11                 // String The date must not be null\n+        10: invokespecial #13                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_0\n-        15: instanceof    #47                 // class java/util/Date\n+        15: instanceof    #35                 // class java/util/Date\n         18: ifeq          30\n         21: aload_0\n-        22: checkcast     #47                 // class java/util/Date\n+        22: checkcast     #35                 // class java/util/Date\n         25: iload_1\n-        26: invokestatic  #55                 // Method truncate:(Ljava/util/Date;I)Ljava/util/Date;\n+        26: invokestatic  #175                // Method truncate:(Ljava/util/Date;I)Ljava/util/Date;\n         29: areturn\n         30: aload_0\n-        31: instanceof    #9                  // class java/util/Calendar\n+        31: instanceof    #17                 // class java/util/Calendar\n         34: ifeq          49\n         37: aload_0\n-        38: checkcast     #9                  // class java/util/Calendar\n+        38: checkcast     #17                 // class java/util/Calendar\n         41: iload_1\n-        42: invokestatic  #56                 // Method truncate:(Ljava/util/Calendar;I)Ljava/util/Calendar;\n-        45: invokevirtual #12                 // Method java/util/Calendar.getTime:()Ljava/util/Date;\n+        42: invokestatic  #178                // Method truncate:(Ljava/util/Calendar;I)Ljava/util/Calendar;\n+        45: invokevirtual #40                 // Method java/util/Calendar.getTime:()Ljava/util/Date;\n         48: areturn\n-        49: new           #50                 // class java/lang/ClassCastException\n+        49: new           #164                // class java/lang/ClassCastException\n         52: dup\n-        53: new           #32                 // class java/lang/StringBuilder\n+        53: new           #109                // class java/lang/StringBuilder\n         56: dup\n-        57: invokespecial #33                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        60: ldc           #57                 // String Could not truncate\n-        62: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        57: invokespecial #111                // Method java/lang/StringBuilder.\"<init>\":()V\n+        60: ldc           #180                // String Could not truncate\n+        62: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         65: aload_0\n-        66: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        69: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        72: invokespecial #53                 // Method java/lang/ClassCastException.\"<init>\":(Ljava/lang/String;)V\n+        66: invokevirtual #168                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        69: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        72: invokespecial #171                // Method java/lang/ClassCastException.\"<init>\":(Ljava/lang/String;)V\n         75: athrow\n       LineNumberTable:\n         line 857: 0\n         line 858: 4\n         line 860: 14\n         line 861: 21\n         line 862: 30\n@@ -1410,26 +1410,26 @@\n \n   public static java.util.Date ceiling(java.util.Date, int);\n     descriptor: (Ljava/util/Date;I)Ljava/util/Date;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: invokestatic  #39                 // Method validateDateNotNull:(Ljava/util/Date;)V\n-         4: invokestatic  #6                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;\n+         1: invokestatic  #129                // Method validateDateNotNull:(Ljava/util/Date;)V\n+         4: invokestatic  #16                 // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;\n          7: astore_2\n          8: aload_2\n          9: aload_0\n-        10: invokevirtual #7                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V\n+        10: invokevirtual #22                 // Method java/util/Calendar.setTime:(Ljava/util/Date;)V\n         13: aload_2\n         14: iload_1\n-        15: getstatic     #58                 // Field org/apache/commons/lang3/time/DateUtils$ModifyType.CEILING:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n-        18: invokestatic  #45                 // Method modify:(Ljava/util/Calendar;ILorg/apache/commons/lang3/time/DateUtils$ModifyType;)V\n+        15: getstatic     #182                // Field org/apache/commons/lang3/time/DateUtils$ModifyType.CEILING:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n+        18: invokestatic  #149                // Method modify:(Ljava/util/Calendar;ILorg/apache/commons/lang3/time/DateUtils$ModifyType;)V\n         21: aload_2\n-        22: invokevirtual #12                 // Method java/util/Calendar.getTime:()Ljava/util/Date;\n+        22: invokevirtual #40                 // Method java/util/Calendar.getTime:()Ljava/util/Date;\n         25: areturn\n       LineNumberTable:\n         line 887: 0\n         line 888: 4\n         line 889: 8\n         line 890: 13\n         line 891: 21\n@@ -1437,27 +1437,27 @@\n   public static java.util.Calendar ceiling(java.util.Calendar, int);\n     descriptor: (Ljava/util/Calendar;I)Ljava/util/Calendar;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: ifnonnull     14\n-         4: new           #3                  // class java/lang/IllegalArgumentException\n+         4: new           #9                  // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #4                  // String The date must not be null\n-        10: invokespecial #5                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #11                 // String The date must not be null\n+        10: invokespecial #13                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_0\n-        15: invokevirtual #46                 // Method java/util/Calendar.clone:()Ljava/lang/Object;\n-        18: checkcast     #9                  // class java/util/Calendar\n+        15: invokevirtual #153                // Method java/util/Calendar.clone:()Ljava/lang/Object;\n+        18: checkcast     #17                 // class java/util/Calendar\n         21: astore_2\n         22: aload_2\n         23: iload_1\n-        24: getstatic     #58                 // Field org/apache/commons/lang3/time/DateUtils$ModifyType.CEILING:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n-        27: invokestatic  #45                 // Method modify:(Ljava/util/Calendar;ILorg/apache/commons/lang3/time/DateUtils$ModifyType;)V\n+        24: getstatic     #182                // Field org/apache/commons/lang3/time/DateUtils$ModifyType.CEILING:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n+        27: invokestatic  #149                // Method modify:(Ljava/util/Calendar;ILorg/apache/commons/lang3/time/DateUtils$ModifyType;)V\n         30: aload_2\n         31: areturn\n       LineNumberTable:\n         line 911: 0\n         line 912: 4\n         line 914: 14\n         line 915: 22\n@@ -1468,48 +1468,48 @@\n   public static java.util.Date ceiling(java.lang.Object, int);\n     descriptor: (Ljava/lang/Object;I)Ljava/util/Date;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: ifnonnull     14\n-         4: new           #3                  // class java/lang/IllegalArgumentException\n+         4: new           #9                  // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #4                  // String The date must not be null\n-        10: invokespecial #5                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #11                 // String The date must not be null\n+        10: invokespecial #13                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_0\n-        15: instanceof    #47                 // class java/util/Date\n+        15: instanceof    #35                 // class java/util/Date\n         18: ifeq          30\n         21: aload_0\n-        22: checkcast     #47                 // class java/util/Date\n+        22: checkcast     #35                 // class java/util/Date\n         25: iload_1\n-        26: invokestatic  #59                 // Method ceiling:(Ljava/util/Date;I)Ljava/util/Date;\n+        26: invokestatic  #185                // Method ceiling:(Ljava/util/Date;I)Ljava/util/Date;\n         29: areturn\n         30: aload_0\n-        31: instanceof    #9                  // class java/util/Calendar\n+        31: instanceof    #17                 // class java/util/Calendar\n         34: ifeq          49\n         37: aload_0\n-        38: checkcast     #9                  // class java/util/Calendar\n+        38: checkcast     #17                 // class java/util/Calendar\n         41: iload_1\n-        42: invokestatic  #60                 // Method ceiling:(Ljava/util/Calendar;I)Ljava/util/Calendar;\n-        45: invokevirtual #12                 // Method java/util/Calendar.getTime:()Ljava/util/Date;\n+        42: invokestatic  #188                // Method ceiling:(Ljava/util/Calendar;I)Ljava/util/Calendar;\n+        45: invokevirtual #40                 // Method java/util/Calendar.getTime:()Ljava/util/Date;\n         48: areturn\n-        49: new           #50                 // class java/lang/ClassCastException\n+        49: new           #164                // class java/lang/ClassCastException\n         52: dup\n-        53: new           #32                 // class java/lang/StringBuilder\n+        53: new           #109                // class java/lang/StringBuilder\n         56: dup\n-        57: invokespecial #33                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        60: ldc           #61                 // String Could not find ceiling of for type:\n-        62: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        57: invokespecial #111                // Method java/lang/StringBuilder.\"<init>\":()V\n+        60: ldc           #190                // String Could not find ceiling of for type:\n+        62: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         65: aload_0\n-        66: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-        69: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        72: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        75: invokespecial #53                 // Method java/lang/ClassCastException.\"<init>\":(Ljava/lang/String;)V\n+        66: invokevirtual #43                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        69: invokevirtual #168                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        72: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        75: invokespecial #171                // Method java/lang/ClassCastException.\"<init>\":(Ljava/lang/String;)V\n         78: athrow\n       LineNumberTable:\n         line 937: 0\n         line 938: 4\n         line 940: 14\n         line 941: 21\n         line 942: 30\n@@ -1523,39 +1523,39 @@\n   private static void modify(java.util.Calendar, int, org.apache.commons.lang3.time.DateUtils$ModifyType);\n     descriptor: (Ljava/util/Calendar;ILorg/apache/commons/lang3/time/DateUtils$ModifyType;)V\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=6, locals=19, args_size=3\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n-         5: ldc           #62                 // int 280000000\n+         2: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n+         5: ldc           #192                // int 280000000\n          7: if_icmple     20\n-        10: new           #63                 // class java/lang/ArithmeticException\n+        10: new           #193                // class java/lang/ArithmeticException\n         13: dup\n-        14: ldc           #64                 // String Calendar value too large for accurate calculations\n-        16: invokespecial #65                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        14: ldc           #195                // String Calendar value too large for accurate calculations\n+        16: invokespecial #197                // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         19: athrow\n         20: iload_1\n         21: bipush        14\n         23: if_icmpne     27\n         26: return\n         27: aload_0\n-        28: invokevirtual #12                 // Method java/util/Calendar.getTime:()Ljava/util/Date;\n+        28: invokevirtual #40                 // Method java/util/Calendar.getTime:()Ljava/util/Date;\n         31: astore_3\n         32: aload_3\n-        33: invokevirtual #11                 // Method java/util/Date.getTime:()J\n+        33: invokevirtual #34                 // Method java/util/Date.getTime:()J\n         36: lstore        4\n         38: iconst_0\n         39: istore        6\n         41: aload_0\n         42: bipush        14\n-        44: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+        44: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n         47: istore        7\n-        49: getstatic     #54                 // Field org/apache/commons/lang3/time/DateUtils$ModifyType.TRUNCATE:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n+        49: getstatic     #172                // Field org/apache/commons/lang3/time/DateUtils$ModifyType.TRUNCATE:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n         52: aload_2\n         53: if_acmpeq     64\n         56: iload         7\n         58: sipush        500\n         61: if_icmpge     72\n         64: lload         4\n         66: iload         7\n@@ -1565,69 +1565,69 @@\n         72: iload_1\n         73: bipush        13\n         75: if_icmpne     81\n         78: iconst_1\n         79: istore        6\n         81: aload_0\n         82: bipush        13\n-        84: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+        84: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n         87: istore        8\n         89: iload         6\n         91: ifne          120\n-        94: getstatic     #54                 // Field org/apache/commons/lang3/time/DateUtils$ModifyType.TRUNCATE:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n+        94: getstatic     #172                // Field org/apache/commons/lang3/time/DateUtils$ModifyType.TRUNCATE:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n         97: aload_2\n         98: if_acmpeq     108\n        101: iload         8\n        103: bipush        30\n        105: if_icmpge     120\n        108: lload         4\n        110: iload         8\n        112: i2l\n-       113: ldc2_w        #66                 // long 1000l\n+       113: ldc2_w        #198                // long 1000l\n        116: lmul\n        117: lsub\n        118: lstore        4\n        120: iload_1\n        121: bipush        12\n        123: if_icmpne     129\n        126: iconst_1\n        127: istore        6\n        129: aload_0\n        130: bipush        12\n-       132: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+       132: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n        135: istore        9\n        137: iload         6\n        139: ifne          168\n-       142: getstatic     #54                 // Field org/apache/commons/lang3/time/DateUtils$ModifyType.TRUNCATE:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n+       142: getstatic     #172                // Field org/apache/commons/lang3/time/DateUtils$ModifyType.TRUNCATE:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n        145: aload_2\n        146: if_acmpeq     156\n        149: iload         9\n        151: bipush        30\n        153: if_icmpge     168\n        156: lload         4\n        158: iload         9\n        160: i2l\n-       161: ldc2_w        #68                 // long 60000l\n+       161: ldc2_w        #200                // long 60000l\n        164: lmul\n        165: lsub\n        166: lstore        4\n        168: aload_3\n-       169: invokevirtual #11                 // Method java/util/Date.getTime:()J\n+       169: invokevirtual #34                 // Method java/util/Date.getTime:()J\n        172: lload         4\n        174: lcmp\n        175: ifeq          189\n        178: aload_3\n        179: lload         4\n-       181: invokevirtual #70                 // Method java/util/Date.setTime:(J)V\n+       181: invokevirtual #202                // Method java/util/Date.setTime:(J)V\n        184: aload_0\n        185: aload_3\n-       186: invokevirtual #7                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V\n+       186: invokevirtual #22                 // Method java/util/Calendar.setTime:(Ljava/util/Date;)V\n        189: iconst_0\n        190: istore        10\n-       192: getstatic     #71                 // Field fields:[[I\n+       192: getstatic     #205                // Field fields:[[I\n        195: astore        11\n        197: aload         11\n        199: arraylength\n        200: istore        12\n        202: iconst_0\n        203: istore        13\n        205: iload         13\n@@ -1651,70 +1651,70 @@\n        240: iload         17\n        242: iaload\n        243: istore        18\n        245: iload         18\n        247: iload_1\n        248: if_icmpne     365\n        251: aload_2\n-       252: getstatic     #58                 // Field org/apache/commons/lang3/time/DateUtils$ModifyType.CEILING:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n+       252: getstatic     #182                // Field org/apache/commons/lang3/time/DateUtils$ModifyType.CEILING:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n        255: if_acmpeq     270\n        258: aload_2\n-       259: getstatic     #44                 // Field org/apache/commons/lang3/time/DateUtils$ModifyType.ROUND:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n+       259: getstatic     #143                // Field org/apache/commons/lang3/time/DateUtils$ModifyType.ROUND:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;\n        262: if_acmpne     364\n        265: iload         10\n        267: ifeq          364\n        270: iload_1\n        271: sipush        1001\n        274: if_icmpne     312\n        277: aload_0\n        278: iconst_5\n-       279: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+       279: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n        282: iconst_1\n        283: if_icmpne     296\n        286: aload_0\n        287: iconst_5\n        288: bipush        15\n-       290: invokevirtual #40                 // Method java/util/Calendar.add:(II)V\n+       290: invokevirtual #132                // Method java/util/Calendar.add:(II)V\n        293: goto          364\n        296: aload_0\n        297: iconst_5\n        298: bipush        -15\n-       300: invokevirtual #40                 // Method java/util/Calendar.add:(II)V\n+       300: invokevirtual #132                // Method java/util/Calendar.add:(II)V\n        303: aload_0\n        304: iconst_2\n        305: iconst_1\n-       306: invokevirtual #40                 // Method java/util/Calendar.add:(II)V\n+       306: invokevirtual #132                // Method java/util/Calendar.add:(II)V\n        309: goto          364\n        312: iload_1\n        313: bipush        9\n        315: if_icmpne     355\n        318: aload_0\n        319: bipush        11\n-       321: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+       321: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n        324: ifne          338\n        327: aload_0\n        328: bipush        11\n        330: bipush        12\n-       332: invokevirtual #40                 // Method java/util/Calendar.add:(II)V\n+       332: invokevirtual #132                // Method java/util/Calendar.add:(II)V\n        335: goto          364\n        338: aload_0\n        339: bipush        11\n        341: bipush        -12\n-       343: invokevirtual #40                 // Method java/util/Calendar.add:(II)V\n+       343: invokevirtual #132                // Method java/util/Calendar.add:(II)V\n        346: aload_0\n        347: iconst_5\n        348: iconst_1\n-       349: invokevirtual #40                 // Method java/util/Calendar.add:(II)V\n+       349: invokevirtual #132                // Method java/util/Calendar.add:(II)V\n        352: goto          364\n        355: aload_0\n        356: aload         14\n        358: iconst_0\n        359: iaload\n        360: iconst_1\n-       361: invokevirtual #40                 // Method java/util/Calendar.add:(II)V\n+       361: invokevirtual #132                // Method java/util/Calendar.add:(II)V\n        364: return\n        365: iinc          17, 1\n        368: goto          231\n        371: iconst_0\n        372: istore        15\n        374: iconst_0\n        375: istore        16\n@@ -1727,15 +1727,15 @@\n        404: aload         14\n        406: iconst_0\n        407: iaload\n        408: iconst_5\n        409: if_icmpne     498\n        412: aload_0\n        413: iconst_5\n-       414: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+       414: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n        417: iconst_1\n        418: isub\n        419: istore        15\n        421: iload         15\n        423: bipush        15\n        425: if_icmplt     431\n        428: iinc          15, -15\n@@ -1752,15 +1752,15 @@\n        451: aload         14\n        453: iconst_0\n        454: iaload\n        455: bipush        11\n        457: if_icmpne     498\n        460: aload_0\n        461: bipush        11\n-       463: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+       463: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n        466: istore        15\n        468: iload         15\n        470: bipush        12\n        472: if_icmplt     478\n        475: iinc          15, -12\n        478: iload         15\n        480: bipush        6\n@@ -1774,27 +1774,27 @@\n        495: goto          498\n        498: iload         16\n        500: ifne          555\n        503: aload_0\n        504: aload         14\n        506: iconst_0\n        507: iaload\n-       508: invokevirtual #72                 // Method java/util/Calendar.getActualMinimum:(I)I\n+       508: invokevirtual #209                // Method java/util/Calendar.getActualMinimum:(I)I\n        511: istore        17\n        513: aload_0\n        514: aload         14\n        516: iconst_0\n        517: iaload\n-       518: invokevirtual #73                 // Method java/util/Calendar.getActualMaximum:(I)I\n+       518: invokevirtual #212                // Method java/util/Calendar.getActualMaximum:(I)I\n        521: istore        18\n        523: aload_0\n        524: aload         14\n        526: iconst_0\n        527: iaload\n-       528: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+       528: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n        531: iload         17\n        533: isub\n        534: istore        15\n        536: iload         15\n        538: iload         18\n        540: iload         17\n        542: isub\n@@ -1811,33 +1811,33 @@\n        561: aload         14\n        563: iconst_0\n        564: iaload\n        565: aload_0\n        566: aload         14\n        568: iconst_0\n        569: iaload\n-       570: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+       570: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n        573: iload         15\n        575: isub\n-       576: invokevirtual #42                 // Method java/util/Calendar.set:(II)V\n+       576: invokevirtual #138                // Method java/util/Calendar.set:(II)V\n        579: iinc          13, 1\n        582: goto          205\n-       585: new           #3                  // class java/lang/IllegalArgumentException\n+       585: new           #9                  // class java/lang/IllegalArgumentException\n        588: dup\n-       589: new           #32                 // class java/lang/StringBuilder\n+       589: new           #109                // class java/lang/StringBuilder\n        592: dup\n-       593: invokespecial #33                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       596: ldc           #74                 // String The field\n-       598: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       593: invokespecial #111                // Method java/lang/StringBuilder.\"<init>\":()V\n+       596: ldc           #215                // String The field\n+       598: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        601: iload_1\n-       602: invokevirtual #75                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       605: ldc           #76                 // String  is not supported\n-       607: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       610: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       613: invokespecial #5                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       602: invokevirtual #217                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       605: ldc           #220                // String  is not supported\n+       607: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       610: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       613: invokespecial #13                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n        616: athrow\n       LineNumberTable:\n         line 959: 0\n         line 960: 10\n         line 963: 20\n         line 964: 26\n         line 973: 27\n@@ -1967,42 +1967,42 @@\n \n   public static java.util.Iterator<java.util.Calendar> iterator(java.util.Date, int);\n     descriptor: (Ljava/util/Date;I)Ljava/util/Iterator;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n-         1: invokestatic  #39                 // Method validateDateNotNull:(Ljava/util/Date;)V\n-         4: invokestatic  #6                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;\n+         1: invokestatic  #129                // Method validateDateNotNull:(Ljava/util/Date;)V\n+         4: invokestatic  #16                 // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;\n          7: astore_2\n          8: aload_2\n          9: aload_0\n-        10: invokevirtual #7                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V\n+        10: invokevirtual #22                 // Method java/util/Calendar.setTime:(Ljava/util/Date;)V\n         13: aload_2\n         14: iload_1\n-        15: invokestatic  #77                 // Method iterator:(Ljava/util/Calendar;I)Ljava/util/Iterator;\n+        15: invokestatic  #222                // Method iterator:(Ljava/util/Calendar;I)Ljava/util/Iterator;\n         18: areturn\n       LineNumberTable:\n         line 1124: 0\n         line 1125: 4\n         line 1126: 8\n         line 1127: 13\n-    Signature: #185                         // (Ljava/util/Date;I)Ljava/util/Iterator<Ljava/util/Calendar;>;\n+    Signature: #349                         // (Ljava/util/Date;I)Ljava/util/Iterator<Ljava/util/Calendar;>;\n \n   public static java.util.Iterator<java.util.Calendar> iterator(java.util.Calendar, int);\n     descriptor: (Ljava/util/Calendar;I)Ljava/util/Iterator;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=6, args_size=2\n          0: aload_0\n          1: ifnonnull     14\n-         4: new           #3                  // class java/lang/IllegalArgumentException\n+         4: new           #9                  // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #4                  // String The date must not be null\n-        10: invokespecial #5                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #11                 // String The date must not be null\n+        10: invokespecial #13                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aconst_null\n         15: astore_2\n         16: aconst_null\n         17: astore_3\n         18: iconst_1\n         19: istore        4\n@@ -2016,43 +2016,43 @@\n                        4: 105\n                        5: 64\n                        6: 64\n                  default: 203\n             }\n         64: aload_0\n         65: iconst_2\n-        66: invokestatic  #56                 // Method truncate:(Ljava/util/Calendar;I)Ljava/util/Calendar;\n+        66: invokestatic  #178                // Method truncate:(Ljava/util/Calendar;I)Ljava/util/Calendar;\n         69: astore_2\n         70: aload_2\n-        71: invokevirtual #46                 // Method java/util/Calendar.clone:()Ljava/lang/Object;\n-        74: checkcast     #9                  // class java/util/Calendar\n+        71: invokevirtual #153                // Method java/util/Calendar.clone:()Ljava/lang/Object;\n+        74: checkcast     #17                 // class java/util/Calendar\n         77: astore_3\n         78: aload_3\n         79: iconst_2\n         80: iconst_1\n-        81: invokevirtual #40                 // Method java/util/Calendar.add:(II)V\n+        81: invokevirtual #132                // Method java/util/Calendar.add:(II)V\n         84: aload_3\n         85: iconst_5\n         86: iconst_m1\n-        87: invokevirtual #40                 // Method java/util/Calendar.add:(II)V\n+        87: invokevirtual #132                // Method java/util/Calendar.add:(II)V\n         90: iload_1\n         91: bipush        6\n         93: if_icmpne     235\n         96: iconst_2\n         97: istore        4\n         99: iconst_1\n        100: istore        5\n        102: goto          235\n        105: aload_0\n        106: iconst_5\n-       107: invokestatic  #56                 // Method truncate:(Ljava/util/Calendar;I)Ljava/util/Calendar;\n+       107: invokestatic  #178                // Method truncate:(Ljava/util/Calendar;I)Ljava/util/Calendar;\n        110: astore_2\n        111: aload_0\n        112: iconst_5\n-       113: invokestatic  #56                 // Method truncate:(Ljava/util/Calendar;I)Ljava/util/Calendar;\n+       113: invokestatic  #178                // Method truncate:(Ljava/util/Calendar;I)Ljava/util/Calendar;\n        116: astore_3\n        117: iload_1\n        118: tableswitch   { // 1 to 4\n                        1: 148\n                        2: 151\n                        3: 160\n                        4: 177\n@@ -2062,48 +2062,48 @@\n        151: iconst_2\n        152: istore        4\n        154: iconst_1\n        155: istore        5\n        157: goto          235\n        160: aload_0\n        161: bipush        7\n-       163: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+       163: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n        166: istore        4\n        168: iload         4\n        170: iconst_1\n        171: isub\n        172: istore        5\n        174: goto          235\n        177: aload_0\n        178: bipush        7\n-       180: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+       180: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n        183: iconst_3\n        184: isub\n        185: istore        4\n        187: aload_0\n        188: bipush        7\n-       190: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+       190: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n        193: iconst_3\n        194: iadd\n        195: istore        5\n        197: goto          235\n        200: goto          235\n-       203: new           #3                  // class java/lang/IllegalArgumentException\n+       203: new           #9                  // class java/lang/IllegalArgumentException\n        206: dup\n-       207: new           #32                 // class java/lang/StringBuilder\n+       207: new           #109                // class java/lang/StringBuilder\n        210: dup\n-       211: invokespecial #33                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       214: ldc           #78                 // String The range style\n-       216: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       211: invokespecial #111                // Method java/lang/StringBuilder.\"<init>\":()V\n+       214: ldc           #226                // String The range style\n+       216: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        219: iload_1\n-       220: invokevirtual #75                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       223: ldc           #79                 // String  is not valid.\n-       225: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       228: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       231: invokespecial #5                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       220: invokevirtual #217                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       223: ldc           #228                // String  is not valid.\n+       225: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       228: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       231: invokespecial #13                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n        234: athrow\n        235: iload         4\n        237: iconst_1\n        238: if_icmpge     244\n        241: iinc          4, 7\n        244: iload         4\n        246: bipush        7\n@@ -2115,37 +2115,37 @@\n        260: iinc          5, 7\n        263: iload         5\n        265: bipush        7\n        267: if_icmple     273\n        270: iinc          5, -7\n        273: aload_2\n        274: bipush        7\n-       276: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+       276: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n        279: iload         4\n        281: if_icmpeq     293\n        284: aload_2\n        285: iconst_5\n        286: iconst_m1\n-       287: invokevirtual #40                 // Method java/util/Calendar.add:(II)V\n+       287: invokevirtual #132                // Method java/util/Calendar.add:(II)V\n        290: goto          273\n        293: aload_3\n        294: bipush        7\n-       296: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+       296: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n        299: iload         5\n        301: if_icmpeq     313\n        304: aload_3\n        305: iconst_5\n        306: iconst_1\n-       307: invokevirtual #40                 // Method java/util/Calendar.add:(II)V\n+       307: invokevirtual #132                // Method java/util/Calendar.add:(II)V\n        310: goto          293\n-       313: new           #80                 // class org/apache/commons/lang3/time/DateUtils$DateIterator\n+       313: new           #230                // class org/apache/commons/lang3/time/DateUtils$DateIterator\n        316: dup\n        317: aload_2\n        318: aload_3\n-       319: invokespecial #81                 // Method org/apache/commons/lang3/time/DateUtils$DateIterator.\"<init>\":(Ljava/util/Calendar;Ljava/util/Calendar;)V\n+       319: invokespecial #232                // Method org/apache/commons/lang3/time/DateUtils$DateIterator.\"<init>\":(Ljava/util/Calendar;Ljava/util/Calendar;)V\n        322: areturn\n       LineNumberTable:\n         line 1155: 0\n         line 1156: 4\n         line 1158: 14\n         line 1159: 16\n         line 1160: 18\n@@ -2202,239 +2202,239 @@\n         frame_type = 31 /* same */\n         frame_type = 8 /* same */\n         frame_type = 9 /* same */\n         frame_type = 8 /* same */\n         frame_type = 9 /* same */\n         frame_type = 19 /* same */\n         frame_type = 19 /* same */\n-    Signature: #187                         // (Ljava/util/Calendar;I)Ljava/util/Iterator<Ljava/util/Calendar;>;\n+    Signature: #350                         // (Ljava/util/Calendar;I)Ljava/util/Iterator<Ljava/util/Calendar;>;\n \n   public static java.util.Iterator<?> iterator(java.lang.Object, int);\n     descriptor: (Ljava/lang/Object;I)Ljava/util/Iterator;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: ifnonnull     14\n-         4: new           #3                  // class java/lang/IllegalArgumentException\n+         4: new           #9                  // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #4                  // String The date must not be null\n-        10: invokespecial #5                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #11                 // String The date must not be null\n+        10: invokespecial #13                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_0\n-        15: instanceof    #47                 // class java/util/Date\n+        15: instanceof    #35                 // class java/util/Date\n         18: ifeq          30\n         21: aload_0\n-        22: checkcast     #47                 // class java/util/Date\n+        22: checkcast     #35                 // class java/util/Date\n         25: iload_1\n-        26: invokestatic  #82                 // Method iterator:(Ljava/util/Date;I)Ljava/util/Iterator;\n+        26: invokestatic  #235                // Method iterator:(Ljava/util/Date;I)Ljava/util/Iterator;\n         29: areturn\n         30: aload_0\n-        31: instanceof    #9                  // class java/util/Calendar\n+        31: instanceof    #17                 // class java/util/Calendar\n         34: ifeq          46\n         37: aload_0\n-        38: checkcast     #9                  // class java/util/Calendar\n+        38: checkcast     #17                 // class java/util/Calendar\n         41: iload_1\n-        42: invokestatic  #77                 // Method iterator:(Ljava/util/Calendar;I)Ljava/util/Iterator;\n+        42: invokestatic  #222                // Method iterator:(Ljava/util/Calendar;I)Ljava/util/Iterator;\n         45: areturn\n-        46: new           #50                 // class java/lang/ClassCastException\n+        46: new           #164                // class java/lang/ClassCastException\n         49: dup\n-        50: new           #32                 // class java/lang/StringBuilder\n+        50: new           #109                // class java/lang/StringBuilder\n         53: dup\n-        54: invokespecial #33                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        57: ldc           #83                 // String Could not iterate based on\n-        59: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        54: invokespecial #111                // Method java/lang/StringBuilder.\"<init>\":()V\n+        57: ldc           #238                // String Could not iterate based on\n+        59: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         62: aload_0\n-        63: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        66: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        69: invokespecial #53                 // Method java/lang/ClassCastException.\"<init>\":(Ljava/lang/String;)V\n+        63: invokevirtual #168                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        66: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        69: invokespecial #171                // Method java/lang/ClassCastException.\"<init>\":(Ljava/lang/String;)V\n         72: athrow\n       LineNumberTable:\n         line 1245: 0\n         line 1246: 4\n         line 1248: 14\n         line 1249: 21\n         line 1250: 30\n         line 1251: 37\n         line 1253: 46\n       StackMapTable: number_of_entries = 3\n         frame_type = 14 /* same */\n         frame_type = 15 /* same */\n         frame_type = 15 /* same */\n-    Signature: #189                         // (Ljava/lang/Object;I)Ljava/util/Iterator<*>;\n+    Signature: #352                         // (Ljava/lang/Object;I)Ljava/util/Iterator<*>;\n \n   public static long getFragmentInMilliseconds(java.util.Date, int);\n     descriptor: (Ljava/util/Date;I)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: getstatic     #84                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;\n-         5: invokestatic  #85                 // Method getFragment:(Ljava/util/Date;ILjava/util/concurrent/TimeUnit;)J\n+         2: getstatic     #240                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;\n+         5: invokestatic  #246                // Method getFragment:(Ljava/util/Date;ILjava/util/concurrent/TimeUnit;)J\n          8: lreturn\n       LineNumberTable:\n         line 1289: 0\n \n   public static long getFragmentInSeconds(java.util.Date, int);\n     descriptor: (Ljava/util/Date;I)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: getstatic     #86                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;\n-         5: invokestatic  #85                 // Method getFragment:(Ljava/util/Date;ILjava/util/concurrent/TimeUnit;)J\n+         2: getstatic     #250                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;\n+         5: invokestatic  #246                // Method getFragment:(Ljava/util/Date;ILjava/util/concurrent/TimeUnit;)J\n          8: lreturn\n       LineNumberTable:\n         line 1327: 0\n \n   public static long getFragmentInMinutes(java.util.Date, int);\n     descriptor: (Ljava/util/Date;I)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: getstatic     #87                 // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;\n-         5: invokestatic  #85                 // Method getFragment:(Ljava/util/Date;ILjava/util/concurrent/TimeUnit;)J\n+         2: getstatic     #253                // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;\n+         5: invokestatic  #246                // Method getFragment:(Ljava/util/Date;ILjava/util/concurrent/TimeUnit;)J\n          8: lreturn\n       LineNumberTable:\n         line 1365: 0\n \n   public static long getFragmentInHours(java.util.Date, int);\n     descriptor: (Ljava/util/Date;I)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: getstatic     #88                 // Field java/util/concurrent/TimeUnit.HOURS:Ljava/util/concurrent/TimeUnit;\n-         5: invokestatic  #85                 // Method getFragment:(Ljava/util/Date;ILjava/util/concurrent/TimeUnit;)J\n+         2: getstatic     #256                // Field java/util/concurrent/TimeUnit.HOURS:Ljava/util/concurrent/TimeUnit;\n+         5: invokestatic  #246                // Method getFragment:(Ljava/util/Date;ILjava/util/concurrent/TimeUnit;)J\n          8: lreturn\n       LineNumberTable:\n         line 1403: 0\n \n   public static long getFragmentInDays(java.util.Date, int);\n     descriptor: (Ljava/util/Date;I)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: getstatic     #89                 // Field java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;\n-         5: invokestatic  #85                 // Method getFragment:(Ljava/util/Date;ILjava/util/concurrent/TimeUnit;)J\n+         2: getstatic     #259                // Field java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;\n+         5: invokestatic  #246                // Method getFragment:(Ljava/util/Date;ILjava/util/concurrent/TimeUnit;)J\n          8: lreturn\n       LineNumberTable:\n         line 1441: 0\n \n   public static long getFragmentInMilliseconds(java.util.Calendar, int);\n     descriptor: (Ljava/util/Calendar;I)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: getstatic     #84                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;\n-         5: invokestatic  #90                 // Method getFragment:(Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J\n+         2: getstatic     #240                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;\n+         5: invokestatic  #262                // Method getFragment:(Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J\n          8: lreturn\n       LineNumberTable:\n         line 1479: 0\n \n   public static long getFragmentInSeconds(java.util.Calendar, int);\n     descriptor: (Ljava/util/Calendar;I)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: getstatic     #86                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;\n-         5: invokestatic  #90                 // Method getFragment:(Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J\n+         2: getstatic     #250                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;\n+         5: invokestatic  #262                // Method getFragment:(Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J\n          8: lreturn\n       LineNumberTable:\n         line 1516: 0\n \n   public static long getFragmentInMinutes(java.util.Calendar, int);\n     descriptor: (Ljava/util/Calendar;I)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: getstatic     #87                 // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;\n-         5: invokestatic  #90                 // Method getFragment:(Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J\n+         2: getstatic     #253                // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;\n+         5: invokestatic  #262                // Method getFragment:(Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J\n          8: lreturn\n       LineNumberTable:\n         line 1554: 0\n \n   public static long getFragmentInHours(java.util.Calendar, int);\n     descriptor: (Ljava/util/Calendar;I)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: getstatic     #88                 // Field java/util/concurrent/TimeUnit.HOURS:Ljava/util/concurrent/TimeUnit;\n-         5: invokestatic  #90                 // Method getFragment:(Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J\n+         2: getstatic     #256                // Field java/util/concurrent/TimeUnit.HOURS:Ljava/util/concurrent/TimeUnit;\n+         5: invokestatic  #262                // Method getFragment:(Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J\n          8: lreturn\n       LineNumberTable:\n         line 1592: 0\n \n   public static long getFragmentInDays(java.util.Calendar, int);\n     descriptor: (Ljava/util/Calendar;I)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: getstatic     #89                 // Field java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;\n-         5: invokestatic  #90                 // Method getFragment:(Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J\n+         2: getstatic     #259                // Field java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;\n+         5: invokestatic  #262                // Method getFragment:(Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J\n          8: lreturn\n       LineNumberTable:\n         line 1632: 0\n \n   private static long getFragment(java.util.Date, int, java.util.concurrent.TimeUnit);\n     descriptor: (Ljava/util/Date;ILjava/util/concurrent/TimeUnit;)J\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_0\n-         1: invokestatic  #39                 // Method validateDateNotNull:(Ljava/util/Date;)V\n-         4: invokestatic  #6                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;\n+         1: invokestatic  #129                // Method validateDateNotNull:(Ljava/util/Date;)V\n+         4: invokestatic  #16                 // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;\n          7: astore_3\n          8: aload_3\n          9: aload_0\n-        10: invokevirtual #7                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V\n+        10: invokevirtual #22                 // Method java/util/Calendar.setTime:(Ljava/util/Date;)V\n         13: aload_3\n         14: iload_1\n         15: aload_2\n-        16: invokestatic  #90                 // Method getFragment:(Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J\n+        16: invokestatic  #262                // Method getFragment:(Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J\n         19: lreturn\n       LineNumberTable:\n         line 1647: 0\n         line 1648: 4\n         line 1649: 8\n         line 1650: 13\n \n   private static long getFragment(java.util.Calendar, int, java.util.concurrent.TimeUnit);\n     descriptor: (Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=6, locals=6, args_size=3\n          0: aload_0\n          1: ifnonnull     14\n-         4: new           #3                  // class java/lang/IllegalArgumentException\n+         4: new           #9                  // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #4                  // String The date must not be null\n-        10: invokespecial #5                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #11                 // String The date must not be null\n+        10: invokespecial #13                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: lconst_0\n         15: lstore_3\n         16: aload_2\n-        17: getstatic     #89                 // Field java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;\n+        17: getstatic     #259                // Field java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;\n         20: if_acmpne     27\n         23: iconst_0\n         24: goto          28\n         27: iconst_1\n         28: istore        5\n         30: iload_1\n         31: lookupswitch  { // 2\n@@ -2442,33 +2442,33 @@\n                        2: 79\n                  default: 101\n             }\n         56: lload_3\n         57: aload_2\n         58: aload_0\n         59: bipush        6\n-        61: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+        61: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n         64: iload         5\n         66: isub\n         67: i2l\n-        68: getstatic     #89                 // Field java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;\n-        71: invokevirtual #91                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J\n+        68: getstatic     #259                // Field java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;\n+        71: invokevirtual #265                // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J\n         74: ladd\n         75: lstore_3\n         76: goto          101\n         79: lload_3\n         80: aload_2\n         81: aload_0\n         82: iconst_5\n-        83: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+        83: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n         86: iload         5\n         88: isub\n         89: i2l\n-        90: getstatic     #89                 // Field java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;\n-        93: invokevirtual #91                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J\n+        90: getstatic     #259                // Field java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;\n+        93: invokevirtual #265                // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J\n         96: ladd\n         97: lstore_3\n         98: goto          101\n        101: iload_1\n        102: tableswitch   { // 1 to 14\n                        1: 172\n                        2: 172\n@@ -2486,68 +2486,68 @@\n                       14: 243\n                  default: 246\n             }\n        172: lload_3\n        173: aload_2\n        174: aload_0\n        175: bipush        11\n-       177: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+       177: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n        180: i2l\n-       181: getstatic     #88                 // Field java/util/concurrent/TimeUnit.HOURS:Ljava/util/concurrent/TimeUnit;\n-       184: invokevirtual #91                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J\n+       181: getstatic     #256                // Field java/util/concurrent/TimeUnit.HOURS:Ljava/util/concurrent/TimeUnit;\n+       184: invokevirtual #265                // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J\n        187: ladd\n        188: lstore_3\n        189: lload_3\n        190: aload_2\n        191: aload_0\n        192: bipush        12\n-       194: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+       194: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n        197: i2l\n-       198: getstatic     #87                 // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;\n-       201: invokevirtual #91                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J\n+       198: getstatic     #253                // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;\n+       201: invokevirtual #265                // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J\n        204: ladd\n        205: lstore_3\n        206: lload_3\n        207: aload_2\n        208: aload_0\n        209: bipush        13\n-       211: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+       211: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n        214: i2l\n-       215: getstatic     #86                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;\n-       218: invokevirtual #91                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J\n+       215: getstatic     #250                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;\n+       218: invokevirtual #265                // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J\n        221: ladd\n        222: lstore_3\n        223: lload_3\n        224: aload_2\n        225: aload_0\n        226: bipush        14\n-       228: invokevirtual #10                 // Method java/util/Calendar.get:(I)I\n+       228: invokevirtual #30                 // Method java/util/Calendar.get:(I)I\n        231: i2l\n-       232: getstatic     #84                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;\n-       235: invokevirtual #91                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J\n+       232: getstatic     #240                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;\n+       235: invokevirtual #265                // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J\n        238: ladd\n        239: lstore_3\n-       240: goto          278\n-       243: goto          278\n-       246: new           #3                  // class java/lang/IllegalArgumentException\n+       240: goto          279\n+       243: goto          279\n+       246: new           #9                  // class java/lang/IllegalArgumentException\n        249: dup\n-       250: new           #32                 // class java/lang/StringBuilder\n+       250: new           #109                // class java/lang/StringBuilder\n        253: dup\n-       254: invokespecial #33                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       257: ldc           #92                 // String The fragment\n-       259: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       262: iload_1\n-       263: invokevirtual #75                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       266: ldc           #76                 // String  is not supported\n-       268: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       271: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       274: invokespecial #5                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-       277: athrow\n-       278: lload_3\n-       279: lreturn\n+       254: invokespecial #111                // Method java/lang/StringBuilder.\"<init>\":()V\n+       257: ldc_w         #269                // String The fragment\n+       260: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       263: iload_1\n+       264: invokevirtual #217                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       267: ldc           #220                // String  is not supported\n+       269: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       272: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       275: invokespecial #13                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       278: athrow\n+       279: lload_3\n+       280: lreturn\n       LineNumberTable:\n         line 1665: 0\n         line 1666: 4\n         line 1669: 14\n         line 1671: 16\n         line 1674: 30\n         line 1676: 56\n@@ -2558,15 +2558,15 @@\n         line 1693: 172\n         line 1696: 189\n         line 1699: 206\n         line 1702: 223\n         line 1703: 240\n         line 1704: 243\n         line 1705: 246\n-        line 1707: 278\n+        line 1707: 279\n       StackMapTable: number_of_entries = 13\n         frame_type = 14 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 12\n           locals = [ long ]\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n@@ -2578,25 +2578,25 @@\n         frame_type = 251 /* same_frame_extended */\n           offset_delta = 70\n         frame_type = 16 /* same */\n         frame_type = 16 /* same */\n         frame_type = 16 /* same */\n         frame_type = 19 /* same */\n         frame_type = 2 /* same */\n-        frame_type = 31 /* same */\n+        frame_type = 32 /* same */\n \n   public static boolean truncatedEquals(java.util.Calendar, java.util.Calendar, int);\n     descriptor: (Ljava/util/Calendar;Ljava/util/Calendar;I)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: iload_2\n-         3: invokestatic  #93                 // Method truncatedCompareTo:(Ljava/util/Calendar;Ljava/util/Calendar;I)I\n+         3: invokestatic  #271                // Method truncatedCompareTo:(Ljava/util/Calendar;Ljava/util/Calendar;I)I\n          6: ifne          13\n          9: iconst_1\n         10: goto          14\n         13: iconst_0\n         14: ireturn\n       LineNumberTable:\n         line 1724: 0\n@@ -2609,15 +2609,15 @@\n     descriptor: (Ljava/util/Date;Ljava/util/Date;I)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: iload_2\n-         3: invokestatic  #94                 // Method truncatedCompareTo:(Ljava/util/Date;Ljava/util/Date;I)I\n+         3: invokestatic  #275                // Method truncatedCompareTo:(Ljava/util/Date;Ljava/util/Date;I)I\n          6: ifne          13\n          9: iconst_1\n         10: goto          14\n         13: iconst_0\n         14: ireturn\n       LineNumberTable:\n         line 1741: 0\n@@ -2629,45 +2629,45 @@\n   public static int truncatedCompareTo(java.util.Calendar, java.util.Calendar, int);\n     descriptor: (Ljava/util/Calendar;Ljava/util/Calendar;I)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=5, args_size=3\n          0: aload_0\n          1: iload_2\n-         2: invokestatic  #56                 // Method truncate:(Ljava/util/Calendar;I)Ljava/util/Calendar;\n+         2: invokestatic  #178                // Method truncate:(Ljava/util/Calendar;I)Ljava/util/Calendar;\n          5: astore_3\n          6: aload_1\n          7: iload_2\n-         8: invokestatic  #56                 // Method truncate:(Ljava/util/Calendar;I)Ljava/util/Calendar;\n+         8: invokestatic  #178                // Method truncate:(Ljava/util/Calendar;I)Ljava/util/Calendar;\n         11: astore        4\n         13: aload_3\n         14: aload         4\n-        16: invokevirtual #95                 // Method java/util/Calendar.compareTo:(Ljava/util/Calendar;)I\n+        16: invokevirtual #278                // Method java/util/Calendar.compareTo:(Ljava/util/Calendar;)I\n         19: ireturn\n       LineNumberTable:\n         line 1759: 0\n         line 1760: 6\n         line 1761: 13\n \n   public static int truncatedCompareTo(java.util.Date, java.util.Date, int);\n     descriptor: (Ljava/util/Date;Ljava/util/Date;I)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=5, args_size=3\n          0: aload_0\n          1: iload_2\n-         2: invokestatic  #55                 // Method truncate:(Ljava/util/Date;I)Ljava/util/Date;\n+         2: invokestatic  #175                // Method truncate:(Ljava/util/Date;I)Ljava/util/Date;\n          5: astore_3\n          6: aload_1\n          7: iload_2\n-         8: invokestatic  #55                 // Method truncate:(Ljava/util/Date;I)Ljava/util/Date;\n+         8: invokestatic  #175                // Method truncate:(Ljava/util/Date;I)Ljava/util/Date;\n         11: astore        4\n         13: aload_3\n         14: aload         4\n-        16: invokevirtual #96                 // Method java/util/Date.compareTo:(Ljava/util/Date;)I\n+        16: invokevirtual #282                // Method java/util/Date.compareTo:(Ljava/util/Date;)I\n         19: ireturn\n       LineNumberTable:\n         line 1779: 0\n         line 1780: 6\n         line 1781: 13\n \n   private static void validateDateNotNull(java.util.Date);\n@@ -2676,18 +2676,18 @@\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: ifnull        8\n          4: iconst_1\n          5: goto          9\n          8: iconst_0\n-         9: ldc           #4                  // String The date must not be null\n+         9: ldc           #11                 // String The date must not be null\n         11: iconst_0\n-        12: anewarray     #97                 // class java/lang/Object\n-        15: invokestatic  #98                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        12: anewarray     #4                  // class java/lang/Object\n+        15: invokestatic  #285                // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         18: return\n       LineNumberTable:\n         line 1785: 0\n         line 1786: 18\n       StackMapTable: number_of_entries = 2\n         frame_type = 8 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n@@ -2695,15 +2695,15 @@\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=7, locals=0, args_size=0\n          0: bipush        8\n-         2: anewarray     #99                 // class \"[I\"\n+         2: anewarray     #291                // class \"[I\"\n          5: dup\n          6: iconst_0\n          7: iconst_1\n          8: newarray       int\n         10: dup\n         11: iconst_0\n         12: bipush        14\n@@ -2784,16 +2784,16 @@\n        103: iconst_1\n        104: newarray       int\n        106: dup\n        107: iconst_0\n        108: iconst_0\n        109: iastore\n        110: aastore\n-       111: putstatic     #71                 // Field fields:[[I\n+       111: putstatic     #205                // Field fields:[[I\n        114: return\n       LineNumberTable:\n         line 83: 0\n }\n SourceFile: \"DateUtils.java\"\n InnerClasses:\n-  static #100= #80 of #1;                 // DateIterator=class org/apache/commons/lang3/time/DateUtils$DateIterator of class org/apache/commons/lang3/time/DateUtils\n-  private static final #103= #102 of #1;  // ModifyType=class org/apache/commons/lang3/time/DateUtils$ModifyType of class org/apache/commons/lang3/time/DateUtils\n+  private static final #367= #144 of #1;  // ModifyType=class org/apache/commons/lang3/time/DateUtils$ModifyType of class org/apache/commons/lang3/time/DateUtils\n+  static #368= #230 of #1;                // DateIterator=class org/apache/commons/lang3/time/DateUtils$DateIterator of class org/apache/commons/lang3/time/DateUtils\n"}]}
