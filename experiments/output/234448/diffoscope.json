{"diffoscope-json-version": 1, "source1": "first/SizeFileFilter.class", "source2": "second/SizeFileFilter.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -11,45 +11,44 @@\n \n public class SizeFileFilter extends AbstractFileFilter implements Serializable\n {\n     private static final long serialVersionUID = 7388077430788600069L;\n     private final boolean acceptLarger;\n     private final long size;\n     \n-    public SizeFileFilter(final long size) {\n-        this(size, true);\n+    public SizeFileFilter(final long n) {\n+        this(n, true);\n     }\n     \n     public SizeFileFilter(final long size, final boolean acceptLarger) {\n         if (size < 0L) {\n             throw new IllegalArgumentException(\"The size must be non-negative\");\n         }\n         this.size = size;\n         this.acceptLarger = acceptLarger;\n     }\n     \n     public boolean accept(final File file) {\n         return this.accept(file.length());\n     }\n     \n-    private boolean accept(final long length) {\n-        return this.acceptLarger != length < this.size;\n+    private boolean accept(final long n) {\n+        return this.acceptLarger != n < this.size;\n     }\n     \n-    public FileVisitResult accept(final Path file, final BasicFileAttributes attributes) {\n+    public FileVisitResult accept(final Path path, final BasicFileAttributes basicFileAttributes) {\n         try {\n-            return toFileVisitResult(this.accept(Files.size(file)), file);\n+            return toFileVisitResult(this.accept(Files.size(path)), path);\n         }\n-        catch (final IOException e) {\n-            return this.handle((Throwable)e);\n+        catch (final IOException ex) {\n+            return this.handle((Throwable)ex);\n         }\n     }\n     \n     public String toString() {\n-        final String condition = this.acceptLarger ? \">=\" : \"<\";\n-        return super.toString() + \"(\" + condition + this.size + \")\";\n+        return super.toString() + \"(\" + (this.acceptLarger ? \">=\" : \"<\") + this.size + \")\";\n     }\n     \n-    public FileVisitResult visitFile(final Path file, final BasicFileAttributes attrs) throws IOException {\n-        return toFileVisitResult(this.accept(Files.size(file)), file);\n+    public FileVisitResult visitFile(final Path path, final BasicFileAttributes basicFileAttributes) throws IOException {\n+        return toFileVisitResult(this.accept(Files.size(path)), path);\n     }\n }\n"}]}
