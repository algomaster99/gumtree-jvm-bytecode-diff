{"diffoscope-json-version": 1, "source1": "first/MurmurHash3.class", "source2": "second/MurmurHash3.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,217 +1,211 @@\n-  SHA-256 checksum 1e950d97b671b9ebc73ca08a12992965474057e1f94664a42801ea5f97809a6d\n+  SHA-256 checksum 3ae080612f1dba4e021882a78247c58598d41ae4760e5288443fca06d9d6a670\n   Compiled from \"MurmurHash3.java\"\n public final class org.apache.commons.codec.digest.MurmurHash3\n   minor version: 0\n   major version: 51\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #10                         // org/apache/commons/codec/digest/MurmurHash3\n-  super_class: #24                        // java/lang/Object\n+  this_class: #1                          // org/apache/commons/codec/digest/MurmurHash3\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 19, methods: 32, attributes: 2\n Constant pool:\n-    #1 = Class              #2            // java/lang/Long\n-    #2 = Utf8               java/lang/Long\n-    #3 = Class              #4            // java/lang/Byte\n-    #4 = Utf8               java/lang/Byte\n-    #5 = Class              #6            // java/lang/Integer\n-    #6 = Utf8               java/lang/Integer\n-    #7 = Class              #8            // java/lang/Short\n-    #8 = Utf8               java/lang/Short\n-    #9 = Methodref          #10.#11       // org/apache/commons/codec/digest/MurmurHash3.fmix32:(I)I\n-   #10 = Class              #12           // org/apache/commons/codec/digest/MurmurHash3\n-   #11 = NameAndType        #13:#14       // fmix32:(I)I\n-   #12 = Utf8               org/apache/commons/codec/digest/MurmurHash3\n-   #13 = Utf8               fmix32\n-   #14 = Utf8               (I)I\n-   #15 = Methodref          #10.#16       // org/apache/commons/codec/digest/MurmurHash3.getLittleEndianInt:([BI)I\n-   #16 = NameAndType        #17:#18       // getLittleEndianInt:([BI)I\n-   #17 = Utf8               getLittleEndianInt\n-   #18 = Utf8               ([BI)I\n-   #19 = Methodref          #10.#20       // org/apache/commons/codec/digest/MurmurHash3.mix32:(II)I\n-   #20 = NameAndType        #21:#22       // mix32:(II)I\n-   #21 = Utf8               mix32\n-   #22 = Utf8               (II)I\n-   #23 = Methodref          #24.#25       // java/lang/Object.\"<init>\":()V\n-   #24 = Class              #26           // java/lang/Object\n-   #25 = NameAndType        #27:#28       // \"<init>\":()V\n-   #26 = Utf8               java/lang/Object\n-   #27 = Utf8               <init>\n-   #28 = Utf8               ()V\n-   #29 = Integer            104729\n-   #30 = Methodref          #10.#31       // org/apache/commons/codec/digest/MurmurHash3.hash32:(JJI)I\n-   #31 = NameAndType        #32:#33       // hash32:(JJI)I\n-   #32 = Utf8               hash32\n-   #33 = Utf8               (JJI)I\n-   #34 = Methodref          #1.#35        // java/lang/Long.reverseBytes:(J)J\n-   #35 = NameAndType        #36:#37       // reverseBytes:(J)J\n-   #36 = Utf8               reverseBytes\n-   #37 = Utf8               (J)J\n-   #38 = Methodref          #10.#39       // org/apache/commons/codec/digest/MurmurHash3.hash32:(JI)I\n-   #39 = NameAndType        #32:#40       // hash32:(JI)I\n-   #40 = Utf8               (JI)I\n-   #41 = Methodref          #10.#42       // org/apache/commons/codec/digest/MurmurHash3.hash32:([BIII)I\n-   #42 = NameAndType        #32:#43       // hash32:([BIII)I\n-   #43 = Utf8               ([BIII)I\n-   #44 = Methodref          #45.#46       // org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n-   #45 = Class              #47           // org/apache/commons/codec/binary/StringUtils\n-   #46 = NameAndType        #48:#49       // getBytesUtf8:(Ljava/lang/String;)[B\n-   #47 = Utf8               org/apache/commons/codec/binary/StringUtils\n-   #48 = Utf8               getBytesUtf8\n-   #49 = Utf8               (Ljava/lang/String;)[B\n-   #50 = Methodref          #10.#51       // org/apache/commons/codec/digest/MurmurHash3.hash32:([BII)I\n-   #51 = NameAndType        #32:#52       // hash32:([BII)I\n-   #52 = Utf8               ([BII)I\n-   #53 = Integer            -862048943\n-   #54 = Methodref          #5.#55        // java/lang/Integer.rotateLeft:(II)I\n-   #55 = NameAndType        #56:#22       // rotateLeft:(II)I\n-   #56 = Utf8               rotateLeft\n-   #57 = Integer            461845907\n-   #58 = Methodref          #10.#59       // org/apache/commons/codec/digest/MurmurHash3.hash32x86:([BIII)I\n-   #59 = NameAndType        #60:#43       // hash32x86:([BIII)I\n-   #60 = Utf8               hash32x86\n-   #61 = Long               104729l\n-   #63 = Long               -8663945395140668459l\n-   #65 = Methodref          #1.#66        // java/lang/Long.rotateLeft:(JI)J\n-   #66 = NameAndType        #56:#67       // rotateLeft:(JI)J\n-   #67 = Utf8               (JI)J\n-   #68 = Long               5545529020109919103l\n-   #70 = Long               5l\n-   #72 = Long               1390208809l\n-   #74 = Long               8l\n-   #76 = Methodref          #10.#77       // org/apache/commons/codec/digest/MurmurHash3.fmix64:(J)J\n-   #77 = NameAndType        #78:#37       // fmix64:(J)J\n-   #78 = Utf8               fmix64\n-   #79 = Methodref          #5.#80        // java/lang/Integer.reverseBytes:(I)I\n-   #80 = NameAndType        #36:#14       // reverseBytes:(I)I\n-   #81 = Long               4294967295l\n-   #83 = Long               4l\n-   #85 = Long               255l\n-   #87 = Integer            65280\n-   #88 = Long               2l\n-   #90 = Methodref          #10.#91       // org/apache/commons/codec/digest/MurmurHash3.hash64:([BIII)J\n-   #91 = NameAndType        #92:#93       // hash64:([BIII)J\n-   #92 = Utf8               hash64\n-   #93 = Utf8               ([BIII)J\n-   #94 = Methodref          #10.#95       // org/apache/commons/codec/digest/MurmurHash3.getLittleEndianLong:([BI)J\n-   #95 = NameAndType        #96:#97       // getLittleEndianLong:([BI)J\n-   #96 = Utf8               getLittleEndianLong\n-   #97 = Utf8               ([BI)J\n-   #98 = Methodref          #10.#99       // org/apache/commons/codec/digest/MurmurHash3.hash128:([BIII)[J\n-   #99 = NameAndType        #100:#101     // hash128:([BIII)[J\n-  #100 = Utf8               hash128\n-  #101 = Utf8               ([BIII)[J\n-  #102 = Methodref          #10.#103      // org/apache/commons/codec/digest/MurmurHash3.hash128x64:([BIII)[J\n-  #103 = NameAndType        #104:#101     // hash128x64:([BIII)[J\n-  #104 = Utf8               hash128x64\n-  #105 = Methodref          #10.#106      // org/apache/commons/codec/digest/MurmurHash3.hash128x64:([BIIJ)[J\n-  #106 = NameAndType        #104:#107     // hash128x64:([BIIJ)[J\n-  #107 = Utf8               ([BIIJ)[J\n-  #108 = Long               944331445l\n-  #110 = Integer            -430675100\n-  #111 = Integer            -2048144789\n-  #112 = Integer            -1028477387\n-  #113 = Long               -49064778989728563l\n-  #115 = Long               -4265267296055464877l\n-  #117 = Utf8               NULL_HASHCODE\n-  #118 = Utf8               J\n-  #119 = Utf8               ConstantValue\n-  #120 = Long               2862933555777941757l\n-  #122 = Utf8               Deprecated\n-  #123 = Utf8               RuntimeVisibleAnnotations\n-  #124 = Utf8               Ljava/lang/Deprecated;\n-  #125 = Utf8               DEFAULT_SEED\n-  #126 = Utf8               I\n-  #127 = Utf8               LONG_BYTES\n-  #128 = Integer            8\n-  #129 = Utf8               INTEGER_BYTES\n-  #130 = Integer            4\n-  #131 = Utf8               SHORT_BYTES\n-  #132 = Integer            2\n-  #133 = Utf8               C1_32\n-  #134 = Utf8               C2_32\n-  #135 = Utf8               R1_32\n-  #136 = Integer            15\n-  #137 = Utf8               R2_32\n-  #138 = Integer            13\n-  #139 = Utf8               M_32\n-  #140 = Integer            5\n-  #141 = Utf8               N_32\n-  #142 = Utf8               C1\n-  #143 = Utf8               C2\n-  #144 = Utf8               R1\n-  #145 = Integer            31\n-  #146 = Utf8               R2\n-  #147 = Integer            27\n-  #148 = Utf8               R3\n-  #149 = Integer            33\n-  #150 = Utf8               M\n-  #151 = Utf8               N1\n-  #152 = Integer            1390208809\n-  #153 = Utf8               N2\n-  #154 = Integer            944331445\n-  #155 = Utf8               Code\n-  #156 = Utf8               LineNumberTable\n-  #157 = Utf8               LocalVariableTable\n-  #158 = Utf8               this\n-  #159 = Utf8               Lorg/apache/commons/codec/digest/MurmurHash3;\n-  #160 = Utf8               (JJ)I\n-  #161 = Utf8               data1\n-  #162 = Utf8               data2\n-  #163 = Utf8               seed\n-  #164 = Utf8               hash\n-  #165 = Utf8               r0\n-  #166 = Utf8               r1\n-  #167 = Utf8               (J)I\n-  #168 = Utf8               data\n-  #169 = Utf8               ([B)I\n-  #170 = Utf8               [B\n-  #171 = Utf8               (Ljava/lang/String;)I\n-  #172 = Utf8               Ljava/lang/String;\n-  #173 = Utf8               bytes\n-  #174 = Utf8               length\n-  #175 = Utf8               index\n-  #176 = Utf8               k\n-  #177 = Utf8               i\n-  #178 = Utf8               offset\n-  #179 = Utf8               nblocks\n-  #180 = Utf8               k1\n-  #181 = Utf8               StackMapTable\n-  #182 = Utf8               (I)J\n-  #183 = Utf8               (S)J\n-  #184 = Utf8               S\n-  #185 = Utf8               ([B)J\n-  #186 = Utf8               ([BII)J\n-  #187 = Utf8               ([B)[J\n-  #188 = Utf8               (Ljava/lang/String;)[J\n-  #189 = Utf8               k2\n-  #190 = Utf8               h1\n-  #191 = Utf8               h2\n-  #192 = Class              #170          // \"[B\"\n-  #193 = Utf8               access$000\n-  #194 = Utf8               x0\n-  #195 = Utf8               x1\n-  #196 = Utf8               access$100\n-  #197 = Utf8               access$200\n-  #198 = Utf8               SourceFile\n-  #199 = Utf8               MurmurHash3.java\n-  #200 = Utf8               InnerClasses\n-  #201 = Class              #202          // org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32\n-  #202 = Utf8               org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32\n-  #203 = Utf8               IncrementalHash32\n-  #204 = Class              #205          // org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32x86\n-  #205 = Utf8               org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32x86\n-  #206 = Utf8               IncrementalHash32x86\n+    #1 = Class              #2            // org/apache/commons/codec/digest/MurmurHash3\n+    #2 = Utf8               org/apache/commons/codec/digest/MurmurHash3\n+    #3 = Class              #4            // java/lang/Object\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               NULL_HASHCODE\n+    #6 = Utf8               J\n+    #7 = Utf8               ConstantValue\n+    #8 = Long               2862933555777941757l\n+   #10 = Utf8               Deprecated\n+   #11 = Utf8               RuntimeVisibleAnnotations\n+   #12 = Utf8               Ljava/lang/Deprecated;\n+   #13 = Utf8               DEFAULT_SEED\n+   #14 = Utf8               I\n+   #15 = Integer            104729\n+   #16 = Utf8               LONG_BYTES\n+   #17 = Integer            8\n+   #18 = Utf8               INTEGER_BYTES\n+   #19 = Integer            4\n+   #20 = Utf8               SHORT_BYTES\n+   #21 = Integer            2\n+   #22 = Utf8               C1_32\n+   #23 = Integer            -862048943\n+   #24 = Utf8               C2_32\n+   #25 = Integer            461845907\n+   #26 = Utf8               R1_32\n+   #27 = Integer            15\n+   #28 = Utf8               R2_32\n+   #29 = Integer            13\n+   #30 = Utf8               M_32\n+   #31 = Integer            5\n+   #32 = Utf8               N_32\n+   #33 = Integer            -430675100\n+   #34 = Utf8               C1\n+   #35 = Long               -8663945395140668459l\n+   #37 = Utf8               C2\n+   #38 = Long               5545529020109919103l\n+   #40 = Utf8               R1\n+   #41 = Integer            31\n+   #42 = Utf8               R2\n+   #43 = Integer            27\n+   #44 = Utf8               R3\n+   #45 = Integer            33\n+   #46 = Utf8               M\n+   #47 = Utf8               N1\n+   #48 = Integer            1390208809\n+   #49 = Utf8               N2\n+   #50 = Integer            944331445\n+   #51 = Utf8               <init>\n+   #52 = Utf8               ()V\n+   #53 = Utf8               Code\n+   #54 = Methodref          #3.#55        // java/lang/Object.\"<init>\":()V\n+   #55 = NameAndType        #51:#52       // \"<init>\":()V\n+   #56 = Utf8               LineNumberTable\n+   #57 = Utf8               LocalVariableTable\n+   #58 = Utf8               this\n+   #59 = Utf8               Lorg/apache/commons/codec/digest/MurmurHash3;\n+   #60 = Utf8               hash32\n+   #61 = Utf8               (JJ)I\n+   #62 = Methodref          #1.#63        // org/apache/commons/codec/digest/MurmurHash3.hash32:(JJI)I\n+   #63 = NameAndType        #60:#64       // hash32:(JJI)I\n+   #64 = Utf8               (JJI)I\n+   #65 = Utf8               data1\n+   #66 = Utf8               data2\n+   #67 = Methodref          #68.#70       // java/lang/Long.reverseBytes:(J)J\n+   #68 = Class              #69           // java/lang/Long\n+   #69 = Utf8               java/lang/Long\n+   #70 = NameAndType        #71:#72       // reverseBytes:(J)J\n+   #71 = Utf8               reverseBytes\n+   #72 = Utf8               (J)J\n+   #73 = Methodref          #1.#74        // org/apache/commons/codec/digest/MurmurHash3.mix32:(II)I\n+   #74 = NameAndType        #75:#76       // mix32:(II)I\n+   #75 = Utf8               mix32\n+   #76 = Utf8               (II)I\n+   #77 = Methodref          #1.#78        // org/apache/commons/codec/digest/MurmurHash3.fmix32:(I)I\n+   #78 = NameAndType        #79:#80       // fmix32:(I)I\n+   #79 = Utf8               fmix32\n+   #80 = Utf8               (I)I\n+   #81 = Utf8               seed\n+   #82 = Utf8               hash\n+   #83 = Utf8               r0\n+   #84 = Utf8               r1\n+   #85 = Utf8               (J)I\n+   #86 = Methodref          #1.#87        // org/apache/commons/codec/digest/MurmurHash3.hash32:(JI)I\n+   #87 = NameAndType        #60:#88       // hash32:(JI)I\n+   #88 = Utf8               (JI)I\n+   #89 = Utf8               data\n+   #90 = Utf8               ([B)I\n+   #91 = Methodref          #1.#92        // org/apache/commons/codec/digest/MurmurHash3.hash32:([BIII)I\n+   #92 = NameAndType        #60:#93       // hash32:([BIII)I\n+   #93 = Utf8               ([BIII)I\n+   #94 = Utf8               [B\n+   #95 = Utf8               (Ljava/lang/String;)I\n+   #96 = Methodref          #97.#99       // org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n+   #97 = Class              #98           // org/apache/commons/codec/binary/StringUtils\n+   #98 = Utf8               org/apache/commons/codec/binary/StringUtils\n+   #99 = NameAndType        #100:#101     // getBytesUtf8:(Ljava/lang/String;)[B\n+  #100 = Utf8               getBytesUtf8\n+  #101 = Utf8               (Ljava/lang/String;)[B\n+  #102 = Utf8               Ljava/lang/String;\n+  #103 = Utf8               bytes\n+  #104 = Utf8               ([BI)I\n+  #105 = Methodref          #1.#106       // org/apache/commons/codec/digest/MurmurHash3.hash32:([BII)I\n+  #106 = NameAndType        #60:#107      // hash32:([BII)I\n+  #107 = Utf8               ([BII)I\n+  #108 = Utf8               length\n+  #109 = Methodref          #1.#110       // org/apache/commons/codec/digest/MurmurHash3.getLittleEndianInt:([BI)I\n+  #110 = NameAndType        #111:#104     // getLittleEndianInt:([BI)I\n+  #111 = Utf8               getLittleEndianInt\n+  #112 = Methodref          #113.#115     // java/lang/Integer.rotateLeft:(II)I\n+  #113 = Class              #114          // java/lang/Integer\n+  #114 = Utf8               java/lang/Integer\n+  #115 = NameAndType        #116:#76      // rotateLeft:(II)I\n+  #116 = Utf8               rotateLeft\n+  #117 = Utf8               offset\n+  #118 = Utf8               nblocks\n+  #119 = Utf8               i\n+  #120 = Utf8               index\n+  #121 = Utf8               k\n+  #122 = Utf8               k1\n+  #123 = Utf8               StackMapTable\n+  #124 = Utf8               hash32x86\n+  #125 = Methodref          #1.#126       // org/apache/commons/codec/digest/MurmurHash3.hash32x86:([BIII)I\n+  #126 = NameAndType        #124:#93      // hash32x86:([BIII)I\n+  #127 = Utf8               hash64\n+  #128 = Long               104729l\n+  #130 = Methodref          #68.#131      // java/lang/Long.rotateLeft:(JI)J\n+  #131 = NameAndType        #116:#132     // rotateLeft:(JI)J\n+  #132 = Utf8               (JI)J\n+  #133 = Long               5l\n+  #135 = Long               1390208809l\n+  #137 = Long               8l\n+  #139 = Methodref          #1.#140       // org/apache/commons/codec/digest/MurmurHash3.fmix64:(J)J\n+  #140 = NameAndType        #141:#72      // fmix64:(J)J\n+  #141 = Utf8               fmix64\n+  #142 = Utf8               (I)J\n+  #143 = Methodref          #113.#144     // java/lang/Integer.reverseBytes:(I)I\n+  #144 = NameAndType        #71:#80       // reverseBytes:(I)I\n+  #145 = Long               4294967295l\n+  #147 = Long               4l\n+  #149 = Utf8               (S)J\n+  #150 = Long               255l\n+  #152 = Integer            65280\n+  #153 = Long               2l\n+  #155 = Utf8               S\n+  #156 = Utf8               ([B)J\n+  #157 = Methodref          #1.#158       // org/apache/commons/codec/digest/MurmurHash3.hash64:([BIII)J\n+  #158 = NameAndType        #127:#159     // hash64:([BIII)J\n+  #159 = Utf8               ([BIII)J\n+  #160 = Utf8               ([BII)J\n+  #161 = Methodref          #1.#162       // org/apache/commons/codec/digest/MurmurHash3.getLittleEndianLong:([BI)J\n+  #162 = NameAndType        #163:#164     // getLittleEndianLong:([BI)J\n+  #163 = Utf8               getLittleEndianLong\n+  #164 = Utf8               ([BI)J\n+  #165 = Class              #94           // \"[B\"\n+  #166 = Utf8               hash128\n+  #167 = Utf8               ([B)[J\n+  #168 = Methodref          #1.#169       // org/apache/commons/codec/digest/MurmurHash3.hash128:([BIII)[J\n+  #169 = NameAndType        #166:#170     // hash128:([BIII)[J\n+  #170 = Utf8               ([BIII)[J\n+  #171 = Utf8               hash128x64\n+  #172 = Methodref          #1.#173       // org/apache/commons/codec/digest/MurmurHash3.hash128x64:([BIII)[J\n+  #173 = NameAndType        #171:#170     // hash128x64:([BIII)[J\n+  #174 = Utf8               (Ljava/lang/String;)[J\n+  #175 = Methodref          #1.#176       // org/apache/commons/codec/digest/MurmurHash3.hash128x64:([BIIJ)[J\n+  #176 = NameAndType        #171:#177     // hash128x64:([BIIJ)[J\n+  #177 = Utf8               ([BIIJ)[J\n+  #178 = Long               944331445l\n+  #180 = Utf8               h1\n+  #181 = Utf8               h2\n+  #182 = Utf8               k2\n+  #183 = Integer            -2048144789\n+  #184 = Integer            -1028477387\n+  #185 = Long               -49064778989728563l\n+  #187 = Long               -4265267296055464877l\n+  #189 = Utf8               access$0\n+  #190 = Utf8               access$1\n+  #191 = Utf8               access$2\n+  #192 = Utf8               SourceFile\n+  #193 = Utf8               MurmurHash3.java\n+  #194 = Utf8               InnerClasses\n+  #195 = Class              #196          // org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32\n+  #196 = Utf8               org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32\n+  #197 = Utf8               IncrementalHash32\n+  #198 = Class              #199          // org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32x86\n+  #199 = Utf8               org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32x86\n+  #200 = Utf8               IncrementalHash32x86\n {\n   public static final long NULL_HASHCODE = 2862933555777941757l;\n     descriptor: J\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 2862933555777941757l\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #124()\n+      0: #12()\n         java.lang.Deprecated\n \n   public static final int DEFAULT_SEED = 104729;\n     descriptor: I\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 104729\n \n@@ -302,15 +296,15 @@\n \n   private org.apache.commons.codec.digest.MurmurHash3();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #23                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #54                 // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 105: 0\n         line 106: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/codec/digest/MurmurHash3;\n@@ -318,16 +312,16 @@\n   public static int hash32(long, long);\n     descriptor: (JJ)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=4, args_size=2\n          0: lload_0\n          1: lload_2\n-         2: ldc           #29                 // int 104729\n-         4: invokestatic  #30                 // Method hash32:(JJI)I\n+         2: ldc           #15                 // int 104729\n+         4: invokestatic  #62                 // Method hash32:(JJI)I\n          7: ireturn\n       LineNumberTable:\n         line 127: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 data1   J\n             0       8     2 data2   J\n@@ -336,49 +330,49 @@\n     descriptor: (JJI)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=10, args_size=3\n          0: iload         4\n          2: istore        5\n          4: lload_0\n-         5: invokestatic  #34                 // Method java/lang/Long.reverseBytes:(J)J\n+         5: invokestatic  #67                 // Method java/lang/Long.reverseBytes:(J)J\n          8: lstore        6\n         10: lload_2\n-        11: invokestatic  #34                 // Method java/lang/Long.reverseBytes:(J)J\n+        11: invokestatic  #67                 // Method java/lang/Long.reverseBytes:(J)J\n         14: lstore        8\n         16: lload         6\n         18: l2i\n         19: iload         5\n-        21: invokestatic  #19                 // Method mix32:(II)I\n+        21: invokestatic  #73                 // Method mix32:(II)I\n         24: istore        5\n         26: lload         6\n         28: bipush        32\n         30: lushr\n         31: l2i\n         32: iload         5\n-        34: invokestatic  #19                 // Method mix32:(II)I\n+        34: invokestatic  #73                 // Method mix32:(II)I\n         37: istore        5\n         39: lload         8\n         41: l2i\n         42: iload         5\n-        44: invokestatic  #19                 // Method mix32:(II)I\n+        44: invokestatic  #73                 // Method mix32:(II)I\n         47: istore        5\n         49: lload         8\n         51: bipush        32\n         53: lushr\n         54: l2i\n         55: iload         5\n-        57: invokestatic  #19                 // Method mix32:(II)I\n+        57: invokestatic  #73                 // Method mix32:(II)I\n         60: istore        5\n         62: iload         5\n         64: bipush        16\n         66: ixor\n         67: istore        5\n         69: iload         5\n-        71: invokestatic  #9                  // Method fmix32:(I)I\n+        71: invokestatic  #77                 // Method fmix32:(I)I\n         74: ireturn\n       LineNumberTable:\n         line 149: 0\n         line 150: 4\n         line 151: 10\n         line 153: 16\n         line 154: 26\n@@ -397,16 +391,16 @@\n \n   public static int hash32(long);\n     descriptor: (J)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: lload_0\n-         1: ldc           #29                 // int 104729\n-         3: invokestatic  #38                 // Method hash32:(JI)I\n+         1: ldc           #15                 // int 104729\n+         3: invokestatic  #86                 // Method hash32:(JI)I\n          6: ireturn\n       LineNumberTable:\n         line 179: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  data   J\n \n@@ -414,34 +408,34 @@\n     descriptor: (JI)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=6, args_size=2\n          0: iload_2\n          1: istore_3\n          2: lload_0\n-         3: invokestatic  #34                 // Method java/lang/Long.reverseBytes:(J)J\n+         3: invokestatic  #67                 // Method java/lang/Long.reverseBytes:(J)J\n          6: lstore        4\n          8: lload         4\n         10: l2i\n         11: iload_3\n-        12: invokestatic  #19                 // Method mix32:(II)I\n+        12: invokestatic  #73                 // Method mix32:(II)I\n         15: istore_3\n         16: lload         4\n         18: bipush        32\n         20: lushr\n         21: l2i\n         22: iload_3\n-        23: invokestatic  #19                 // Method mix32:(II)I\n+        23: invokestatic  #73                 // Method mix32:(II)I\n         26: istore_3\n         27: iload_3\n         28: bipush        8\n         30: ixor\n         31: istore_3\n         32: iload_3\n-        33: invokestatic  #9                  // Method fmix32:(I)I\n+        33: invokestatic  #77                 // Method fmix32:(I)I\n         36: ireturn\n       LineNumberTable:\n         line 199: 0\n         line 200: 2\n         line 202: 8\n         line 203: 16\n         line 205: 27\n@@ -452,136 +446,140 @@\n             0      37     2  seed   I\n             2      35     3  hash   I\n             8      29     4    r0   J\n \n   public static int hash32(byte[]);\n     descriptor: ([B)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Deprecated: true\n+    RuntimeVisibleAnnotations:\n+      0: #12()\n+        java.lang.Deprecated\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n          2: aload_0\n          3: arraylength\n-         4: ldc           #29                 // int 104729\n-         6: invokestatic  #41                 // Method hash32:([BIII)I\n+         4: ldc           #15                 // int 104729\n+         6: invokestatic  #91                 // Method hash32:([BIII)I\n          9: ireturn\n       LineNumberTable:\n         line 230: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  data   [B\n-    Deprecated: true\n-    RuntimeVisibleAnnotations:\n-      0: #124()\n-        java.lang.Deprecated\n \n   public static int hash32(java.lang.String);\n     descriptor: (Ljava/lang/String;)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Deprecated: true\n+    RuntimeVisibleAnnotations:\n+      0: #12()\n+        java.lang.Deprecated\n     Code:\n       stack=4, locals=2, args_size=1\n          0: aload_0\n-         1: invokestatic  #44                 // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n+         1: invokestatic  #96                 // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n          4: astore_1\n          5: aload_1\n          6: iconst_0\n          7: aload_1\n          8: arraylength\n-         9: ldc           #29                 // int 104729\n-        11: invokestatic  #41                 // Method hash32:([BIII)I\n+         9: ldc           #15                 // int 104729\n+        11: invokestatic  #91                 // Method hash32:([BIII)I\n         14: ireturn\n       LineNumberTable:\n         line 260: 0\n         line 261: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  data   Ljava/lang/String;\n             5      10     1 bytes   [B\n-    Deprecated: true\n-    RuntimeVisibleAnnotations:\n-      0: #124()\n-        java.lang.Deprecated\n \n   public static int hash32(byte[], int);\n     descriptor: ([BI)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Deprecated: true\n+    RuntimeVisibleAnnotations:\n+      0: #12()\n+        java.lang.Deprecated\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: ldc           #29                 // int 104729\n-         4: invokestatic  #50                 // Method hash32:([BII)I\n+         2: ldc           #15                 // int 104729\n+         4: invokestatic  #105                // Method hash32:([BII)I\n          7: ireturn\n       LineNumberTable:\n         line 286: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  data   [B\n             0       8     1 length   I\n-    Deprecated: true\n-    RuntimeVisibleAnnotations:\n-      0: #124()\n-        java.lang.Deprecated\n \n   public static int hash32(byte[], int, int);\n     descriptor: ([BII)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Deprecated: true\n+    RuntimeVisibleAnnotations:\n+      0: #12()\n+        java.lang.Deprecated\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: iconst_0\n          2: iload_1\n          3: iload_2\n-         4: invokestatic  #41                 // Method hash32:([BIII)I\n+         4: invokestatic  #91                 // Method hash32:([BIII)I\n          7: ireturn\n       LineNumberTable:\n         line 311: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  data   [B\n             0       8     1 length   I\n             0       8     2  seed   I\n-    Deprecated: true\n-    RuntimeVisibleAnnotations:\n-      0: #124()\n-        java.lang.Deprecated\n \n   public static int hash32(byte[], int, int, int);\n     descriptor: ([BIII)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Deprecated: true\n+    RuntimeVisibleAnnotations:\n+      0: #12()\n+        java.lang.Deprecated\n     Code:\n       stack=4, locals=9, args_size=4\n          0: iload_3\n          1: istore        4\n          3: iload_2\n          4: iconst_2\n          5: ishr\n          6: istore        5\n          8: iconst_0\n          9: istore        6\n-        11: iload         6\n-        13: iload         5\n-        15: if_icmpge     49\n-        18: iload_1\n-        19: iload         6\n-        21: iconst_2\n-        22: ishl\n-        23: iadd\n-        24: istore        7\n-        26: aload_0\n-        27: iload         7\n-        29: invokestatic  #15                 // Method getLittleEndianInt:([BI)I\n-        32: istore        8\n-        34: iload         8\n-        36: iload         4\n-        38: invokestatic  #19                 // Method mix32:(II)I\n-        41: istore        4\n-        43: iinc          6, 1\n-        46: goto          11\n+        11: goto          42\n+        14: iload_1\n+        15: iload         6\n+        17: iconst_2\n+        18: ishl\n+        19: iadd\n+        20: istore        7\n+        22: aload_0\n+        23: iload         7\n+        25: invokestatic  #109                // Method getLittleEndianInt:([BI)I\n+        28: istore        8\n+        30: iload         8\n+        32: iload         4\n+        34: invokestatic  #73                 // Method mix32:(II)I\n+        37: istore        4\n+        39: iinc          6, 1\n+        42: iload         6\n+        44: iload         5\n+        46: if_icmplt     14\n         49: iload_1\n         50: iload         5\n         52: iconst_2\n         53: ishl\n         54: iadd\n         55: istore        6\n         57: iconst_0\n@@ -620,97 +618,93 @@\n        120: iload         7\n        122: aload_0\n        123: iload         6\n        125: baload\n        126: ixor\n        127: istore        7\n        129: iload         7\n-       131: ldc           #53                 // int -862048943\n+       131: ldc           #23                 // int -862048943\n        133: imul\n        134: istore        7\n        136: iload         7\n        138: bipush        15\n-       140: invokestatic  #54                 // Method java/lang/Integer.rotateLeft:(II)I\n+       140: invokestatic  #112                // Method java/lang/Integer.rotateLeft:(II)I\n        143: istore        7\n        145: iload         7\n-       147: ldc           #57                 // int 461845907\n+       147: ldc           #25                 // int 461845907\n        149: imul\n        150: istore        7\n        152: iload         4\n        154: iload         7\n        156: ixor\n        157: istore        4\n        159: iload         4\n        161: iload_2\n        162: ixor\n        163: istore        4\n        165: iload         4\n-       167: invokestatic  #9                  // Method fmix32:(I)I\n+       167: invokestatic  #77                 // Method fmix32:(I)I\n        170: ireturn\n       LineNumberTable:\n         line 333: 0\n         line 334: 3\n         line 337: 8\n-        line 338: 18\n-        line 339: 26\n-        line 340: 34\n-        line 337: 43\n+        line 338: 14\n+        line 339: 22\n+        line 340: 30\n+        line 337: 39\n         line 347: 49\n         line 348: 57\n         line 349: 60\n         line 351: 92\n         line 353: 106\n         line 355: 120\n         line 358: 129\n         line 359: 136\n         line 360: 145\n         line 361: 152\n-        line 364: 159\n+        line 362: 159\n+        line 364: 161\n         line 365: 165\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           26      17     7 index   I\n-           34       9     8     k   I\n-           11      38     6     i   I\n             0     171     0  data   [B\n             0     171     1 offset   I\n             0     171     2 length   I\n             0     171     3  seed   I\n             3     168     4  hash   I\n             8     163     5 nblocks   I\n+           11      38     6     i   I\n+           22      17     7 index   I\n+           30       9     8     k   I\n            57     114     6 index   I\n            60     111     7    k1   I\n       StackMapTable: number_of_entries = 6\n         frame_type = 254 /* append */\n-          offset_delta = 11\n+          offset_delta = 14\n           locals = [ int, int, int ]\n-        frame_type = 250 /* chop */\n-          offset_delta = 37\n-        frame_type = 253 /* append */\n-          offset_delta = 42\n-          locals = [ int, int ]\n+        frame_type = 27 /* same */\n+        frame_type = 252 /* append */\n+          offset_delta = 49\n+          locals = [ int ]\n         frame_type = 13 /* same */\n         frame_type = 13 /* same */\n         frame_type = 38 /* same */\n-    Deprecated: true\n-    RuntimeVisibleAnnotations:\n-      0: #124()\n-        java.lang.Deprecated\n \n   public static int hash32x86(byte[]);\n     descriptor: ([B)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n          2: aload_0\n          3: arraylength\n          4: iconst_0\n-         5: invokestatic  #58                 // Method hash32x86:([BIII)I\n+         5: invokestatic  #125                // Method hash32x86:([BIII)I\n          8: ireturn\n       LineNumberTable:\n         line 384: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  data   [B\n \n@@ -723,33 +717,33 @@\n          1: istore        4\n          3: iload_2\n          4: iconst_2\n          5: ishr\n          6: istore        5\n          8: iconst_0\n          9: istore        6\n-        11: iload         6\n-        13: iload         5\n-        15: if_icmpge     49\n-        18: iload_1\n-        19: iload         6\n-        21: iconst_2\n-        22: ishl\n-        23: iadd\n-        24: istore        7\n-        26: aload_0\n-        27: iload         7\n-        29: invokestatic  #15                 // Method getLittleEndianInt:([BI)I\n-        32: istore        8\n-        34: iload         8\n-        36: iload         4\n-        38: invokestatic  #19                 // Method mix32:(II)I\n-        41: istore        4\n-        43: iinc          6, 1\n-        46: goto          11\n+        11: goto          42\n+        14: iload_1\n+        15: iload         6\n+        17: iconst_2\n+        18: ishl\n+        19: iadd\n+        20: istore        7\n+        22: aload_0\n+        23: iload         7\n+        25: invokestatic  #109                // Method getLittleEndianInt:([BI)I\n+        28: istore        8\n+        30: iload         8\n+        32: iload         4\n+        34: invokestatic  #73                 // Method mix32:(II)I\n+        37: istore        4\n+        39: iinc          6, 1\n+        42: iload         6\n+        44: iload         5\n+        46: if_icmplt     14\n         49: iload_1\n         50: iload         5\n         52: iconst_2\n         53: ishl\n         54: iadd\n         55: istore        6\n         57: iconst_0\n@@ -794,124 +788,128 @@\n        131: iload         6\n        133: baload\n        134: sipush        255\n        137: iand\n        138: ixor\n        139: istore        7\n        141: iload         7\n-       143: ldc           #53                 // int -862048943\n+       143: ldc           #23                 // int -862048943\n        145: imul\n        146: istore        7\n        148: iload         7\n        150: bipush        15\n-       152: invokestatic  #54                 // Method java/lang/Integer.rotateLeft:(II)I\n+       152: invokestatic  #112                // Method java/lang/Integer.rotateLeft:(II)I\n        155: istore        7\n        157: iload         7\n-       159: ldc           #57                 // int 461845907\n+       159: ldc           #25                 // int 461845907\n        161: imul\n        162: istore        7\n        164: iload         4\n        166: iload         7\n        168: ixor\n        169: istore        4\n        171: iload         4\n        173: iload_2\n        174: ixor\n        175: istore        4\n        177: iload         4\n-       179: invokestatic  #9                  // Method fmix32:(I)I\n+       179: invokestatic  #77                 // Method fmix32:(I)I\n        182: ireturn\n       LineNumberTable:\n         line 401: 0\n         line 402: 3\n         line 405: 8\n-        line 406: 18\n-        line 407: 26\n-        line 408: 34\n-        line 405: 43\n+        line 406: 14\n+        line 407: 22\n+        line 408: 30\n+        line 405: 39\n         line 412: 49\n         line 413: 57\n         line 414: 60\n         line 416: 92\n         line 418: 110\n         line 420: 128\n         line 423: 141\n         line 424: 148\n         line 425: 157\n         line 426: 164\n-        line 429: 171\n+        line 427: 171\n+        line 429: 173\n         line 430: 177\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           26      17     7 index   I\n-           34       9     8     k   I\n-           11      38     6     i   I\n             0     183     0  data   [B\n             0     183     1 offset   I\n             0     183     2 length   I\n             0     183     3  seed   I\n             3     180     4  hash   I\n             8     175     5 nblocks   I\n+           11      38     6     i   I\n+           22      17     7 index   I\n+           30       9     8     k   I\n            57     126     6 index   I\n            60     123     7    k1   I\n       StackMapTable: number_of_entries = 6\n         frame_type = 254 /* append */\n-          offset_delta = 11\n+          offset_delta = 14\n           locals = [ int, int, int ]\n-        frame_type = 250 /* chop */\n-          offset_delta = 37\n-        frame_type = 253 /* append */\n-          offset_delta = 42\n-          locals = [ int, int ]\n+        frame_type = 27 /* same */\n+        frame_type = 252 /* append */\n+          offset_delta = 49\n+          locals = [ int ]\n         frame_type = 17 /* same */\n         frame_type = 17 /* same */\n         frame_type = 42 /* same */\n \n   public static long hash64(long);\n     descriptor: (J)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Deprecated: true\n+    RuntimeVisibleAnnotations:\n+      0: #12()\n+        java.lang.Deprecated\n     Code:\n       stack=4, locals=7, args_size=1\n-         0: ldc2_w        #61                 // long 104729l\n+         0: ldc2_w        #128                // long 104729l\n          3: lstore_2\n          4: lload_0\n-         5: invokestatic  #34                 // Method java/lang/Long.reverseBytes:(J)J\n+         5: invokestatic  #67                 // Method java/lang/Long.reverseBytes:(J)J\n          8: lstore        4\n         10: bipush        8\n         12: istore        6\n         14: lload         4\n-        16: ldc2_w        #63                 // long -8663945395140668459l\n+        16: ldc2_w        #35                 // long -8663945395140668459l\n         19: lmul\n         20: lstore        4\n         22: lload         4\n         24: bipush        31\n-        26: invokestatic  #65                 // Method java/lang/Long.rotateLeft:(JI)J\n+        26: invokestatic  #130                // Method java/lang/Long.rotateLeft:(JI)J\n         29: lstore        4\n         31: lload         4\n-        33: ldc2_w        #68                 // long 5545529020109919103l\n+        33: ldc2_w        #38                 // long 5545529020109919103l\n         36: lmul\n         37: lstore        4\n         39: lload_2\n         40: lload         4\n         42: lxor\n         43: lstore_2\n         44: lload_2\n         45: bipush        27\n-        47: invokestatic  #65                 // Method java/lang/Long.rotateLeft:(JI)J\n-        50: ldc2_w        #70                 // long 5l\n+        47: invokestatic  #130                // Method java/lang/Long.rotateLeft:(JI)J\n+        50: ldc2_w        #133                // long 5l\n         53: lmul\n-        54: ldc2_w        #72                 // long 1390208809l\n+        54: ldc2_w        #135                // long 1390208809l\n         57: ladd\n         58: lstore_2\n         59: lload_2\n-        60: ldc2_w        #74                 // long 8l\n+        60: ldc2_w        #137                // long 8l\n         63: lxor\n         64: lstore_2\n         65: lload_2\n-        66: invokestatic  #76                 // Method fmix64:(J)J\n+        66: invokestatic  #139                // Method fmix64:(J)J\n         69: lstore_2\n         70: lload_2\n         71: lreturn\n       LineNumberTable:\n         line 464: 0\n         line 465: 4\n         line 466: 10\n@@ -925,56 +923,56 @@\n         line 476: 70\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      72     0  data   J\n             4      68     2  hash   J\n            10      62     4     k   J\n            14      58     6 length   I\n-    Deprecated: true\n-    RuntimeVisibleAnnotations:\n-      0: #124()\n-        java.lang.Deprecated\n \n   public static long hash64(int);\n     descriptor: (I)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Deprecated: true\n+    RuntimeVisibleAnnotations:\n+      0: #12()\n+        java.lang.Deprecated\n     Code:\n       stack=4, locals=6, args_size=1\n          0: iload_0\n-         1: invokestatic  #79                 // Method java/lang/Integer.reverseBytes:(I)I\n+         1: invokestatic  #143                // Method java/lang/Integer.reverseBytes:(I)I\n          4: i2l\n-         5: ldc2_w        #81                 // long 4294967295l\n+         5: ldc2_w        #145                // long 4294967295l\n          8: land\n          9: lstore_1\n         10: iconst_4\n         11: istore_3\n-        12: ldc2_w        #61                 // long 104729l\n+        12: ldc2_w        #128                // long 104729l\n         15: lstore        4\n         17: lload_1\n-        18: ldc2_w        #63                 // long -8663945395140668459l\n+        18: ldc2_w        #35                 // long -8663945395140668459l\n         21: lmul\n         22: lstore_1\n         23: lload_1\n         24: bipush        31\n-        26: invokestatic  #65                 // Method java/lang/Long.rotateLeft:(JI)J\n+        26: invokestatic  #130                // Method java/lang/Long.rotateLeft:(JI)J\n         29: lstore_1\n         30: lload_1\n-        31: ldc2_w        #68                 // long 5545529020109919103l\n+        31: ldc2_w        #38                 // long 5545529020109919103l\n         34: lmul\n         35: lstore_1\n         36: lload         4\n         38: lload_1\n         39: lxor\n         40: lstore        4\n         42: lload         4\n-        44: ldc2_w        #83                 // long 4l\n+        44: ldc2_w        #147                // long 4l\n         47: lxor\n         48: lstore        4\n         50: lload         4\n-        52: invokestatic  #76                 // Method fmix64:(J)J\n+        52: invokestatic  #139                // Method fmix64:(J)J\n         55: lstore        4\n         57: lload         4\n         59: lreturn\n       LineNumberTable:\n         line 510: 0\n         line 511: 10\n         line 512: 12\n@@ -987,70 +985,70 @@\n         line 520: 57\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      60     0  data   I\n            10      50     1    k1   J\n            12      48     3 length   I\n            17      43     4  hash   J\n-    Deprecated: true\n-    RuntimeVisibleAnnotations:\n-      0: #124()\n-        java.lang.Deprecated\n \n   public static long hash64(short);\n     descriptor: (S)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Deprecated: true\n+    RuntimeVisibleAnnotations:\n+      0: #12()\n+        java.lang.Deprecated\n     Code:\n       stack=6, locals=5, args_size=1\n-         0: ldc2_w        #61                 // long 104729l\n+         0: ldc2_w        #128                // long 104729l\n          3: lstore_1\n          4: lconst_0\n          5: lstore_3\n          6: lload_3\n          7: iload_0\n          8: i2l\n-         9: ldc2_w        #85                 // long 255l\n+         9: ldc2_w        #150                // long 255l\n         12: land\n         13: bipush        8\n         15: lshl\n         16: lxor\n         17: lstore_3\n         18: lload_3\n         19: iload_0\n-        20: ldc           #87                 // int 65280\n+        20: ldc           #152                // int 65280\n         22: iand\n         23: bipush        8\n         25: ishr\n         26: i2l\n-        27: ldc2_w        #85                 // long 255l\n+        27: ldc2_w        #150                // long 255l\n         30: land\n         31: lxor\n         32: lstore_3\n         33: lload_3\n-        34: ldc2_w        #63                 // long -8663945395140668459l\n+        34: ldc2_w        #35                 // long -8663945395140668459l\n         37: lmul\n         38: lstore_3\n         39: lload_3\n         40: bipush        31\n-        42: invokestatic  #65                 // Method java/lang/Long.rotateLeft:(JI)J\n+        42: invokestatic  #130                // Method java/lang/Long.rotateLeft:(JI)J\n         45: lstore_3\n         46: lload_3\n-        47: ldc2_w        #68                 // long 5545529020109919103l\n+        47: ldc2_w        #38                 // long 5545529020109919103l\n         50: lmul\n         51: lstore_3\n         52: lload_1\n         53: lload_3\n         54: lxor\n         55: lstore_1\n         56: lload_1\n-        57: ldc2_w        #88                 // long 2l\n+        57: ldc2_w        #153                // long 2l\n         60: lxor\n         61: lstore_1\n         62: lload_1\n-        63: invokestatic  #76                 // Method fmix64:(J)J\n+        63: invokestatic  #139                // Method fmix64:(J)J\n         66: lstore_1\n         67: lload_1\n         68: lreturn\n       LineNumberTable:\n         line 554: 0\n         line 555: 4\n         line 556: 6\n@@ -1063,117 +1061,117 @@\n         line 565: 62\n         line 566: 67\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      69     0  data   S\n             4      65     1  hash   J\n             6      63     3    k1   J\n-    Deprecated: true\n-    RuntimeVisibleAnnotations:\n-      0: #124()\n-        java.lang.Deprecated\n \n   public static long hash64(byte[]);\n     descriptor: ([B)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Deprecated: true\n+    RuntimeVisibleAnnotations:\n+      0: #12()\n+        java.lang.Deprecated\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n          2: aload_0\n          3: arraylength\n-         4: ldc           #29                 // int 104729\n-         6: invokestatic  #90                 // Method hash64:([BIII)J\n+         4: ldc           #15                 // int 104729\n+         6: invokestatic  #157                // Method hash64:([BIII)J\n          9: lreturn\n       LineNumberTable:\n         line 598: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  data   [B\n-    Deprecated: true\n-    RuntimeVisibleAnnotations:\n-      0: #124()\n-        java.lang.Deprecated\n \n   public static long hash64(byte[], int, int);\n     descriptor: ([BII)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Deprecated: true\n+    RuntimeVisibleAnnotations:\n+      0: #12()\n+        java.lang.Deprecated\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: iload_1\n          2: iload_2\n-         3: ldc           #29                 // int 104729\n-         5: invokestatic  #90                 // Method hash64:([BIII)J\n+         3: ldc           #15                 // int 104729\n+         5: invokestatic  #157                // Method hash64:([BIII)J\n          8: lreturn\n       LineNumberTable:\n         line 631: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  data   [B\n             0       9     1 offset   I\n             0       9     2 length   I\n-    Deprecated: true\n-    RuntimeVisibleAnnotations:\n-      0: #124()\n-        java.lang.Deprecated\n \n   public static long hash64(byte[], int, int, int);\n     descriptor: ([BIII)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Deprecated: true\n+    RuntimeVisibleAnnotations:\n+      0: #12()\n+        java.lang.Deprecated\n     Code:\n       stack=6, locals=11, args_size=4\n          0: iload_3\n          1: i2l\n          2: lstore        4\n          4: iload_2\n          5: iconst_3\n          6: ishr\n          7: istore        6\n          9: iconst_0\n         10: istore        7\n-        12: iload         7\n-        14: iload         6\n-        16: if_icmpge     90\n-        19: iload_1\n-        20: iload         7\n-        22: iconst_3\n-        23: ishl\n-        24: iadd\n-        25: istore        8\n-        27: aload_0\n-        28: iload         8\n-        30: invokestatic  #94                 // Method getLittleEndianLong:([BI)J\n-        33: lstore        9\n-        35: lload         9\n-        37: ldc2_w        #63                 // long -8663945395140668459l\n-        40: lmul\n-        41: lstore        9\n-        43: lload         9\n-        45: bipush        31\n-        47: invokestatic  #65                 // Method java/lang/Long.rotateLeft:(JI)J\n-        50: lstore        9\n-        52: lload         9\n-        54: ldc2_w        #68                 // long 5545529020109919103l\n-        57: lmul\n-        58: lstore        9\n-        60: lload         4\n-        62: lload         9\n-        64: lxor\n-        65: lstore        4\n-        67: lload         4\n-        69: bipush        27\n-        71: invokestatic  #65                 // Method java/lang/Long.rotateLeft:(JI)J\n-        74: ldc2_w        #70                 // long 5l\n-        77: lmul\n-        78: ldc2_w        #72                 // long 1390208809l\n-        81: ladd\n-        82: lstore        4\n-        84: iinc          7, 1\n-        87: goto          12\n+        12: goto          83\n+        15: iload_1\n+        16: iload         7\n+        18: iconst_3\n+        19: ishl\n+        20: iadd\n+        21: istore        8\n+        23: aload_0\n+        24: iload         8\n+        26: invokestatic  #161                // Method getLittleEndianLong:([BI)J\n+        29: lstore        9\n+        31: lload         9\n+        33: ldc2_w        #35                 // long -8663945395140668459l\n+        36: lmul\n+        37: lstore        9\n+        39: lload         9\n+        41: bipush        31\n+        43: invokestatic  #130                // Method java/lang/Long.rotateLeft:(JI)J\n+        46: lstore        9\n+        48: lload         9\n+        50: ldc2_w        #38                 // long 5545529020109919103l\n+        53: lmul\n+        54: lstore        9\n+        56: lload         4\n+        58: lload         9\n+        60: lxor\n+        61: lstore        4\n+        63: lload         4\n+        65: bipush        27\n+        67: invokestatic  #130                // Method java/lang/Long.rotateLeft:(JI)J\n+        70: ldc2_w        #133                // long 5l\n+        73: lmul\n+        74: ldc2_w        #135                // long 1390208809l\n+        77: ladd\n+        78: lstore        4\n+        80: iinc          7, 1\n+        83: iload         7\n+        85: iload         6\n+        87: if_icmplt     15\n         90: lconst_0\n         91: lstore        7\n         93: iload_1\n         94: iload         6\n         96: iconst_3\n         97: ishl\n         98: iadd\n@@ -1196,194 +1194,192 @@\n        148: lload         7\n        150: aload_0\n        151: iload         9\n        153: bipush        6\n        155: iadd\n        156: baload\n        157: i2l\n-       158: ldc2_w        #85                 // long 255l\n+       158: ldc2_w        #150                // long 255l\n        161: land\n        162: bipush        48\n        164: lshl\n        165: lxor\n        166: lstore        7\n        168: lload         7\n        170: aload_0\n        171: iload         9\n        173: iconst_5\n        174: iadd\n        175: baload\n        176: i2l\n-       177: ldc2_w        #85                 // long 255l\n+       177: ldc2_w        #150                // long 255l\n        180: land\n        181: bipush        40\n        183: lshl\n        184: lxor\n        185: lstore        7\n        187: lload         7\n        189: aload_0\n        190: iload         9\n        192: iconst_4\n        193: iadd\n        194: baload\n        195: i2l\n-       196: ldc2_w        #85                 // long 255l\n+       196: ldc2_w        #150                // long 255l\n        199: land\n        200: bipush        32\n        202: lshl\n        203: lxor\n        204: lstore        7\n        206: lload         7\n        208: aload_0\n        209: iload         9\n        211: iconst_3\n        212: iadd\n        213: baload\n        214: i2l\n-       215: ldc2_w        #85                 // long 255l\n+       215: ldc2_w        #150                // long 255l\n        218: land\n        219: bipush        24\n        221: lshl\n        222: lxor\n        223: lstore        7\n        225: lload         7\n        227: aload_0\n        228: iload         9\n        230: iconst_2\n        231: iadd\n        232: baload\n        233: i2l\n-       234: ldc2_w        #85                 // long 255l\n+       234: ldc2_w        #150                // long 255l\n        237: land\n        238: bipush        16\n        240: lshl\n        241: lxor\n        242: lstore        7\n        244: lload         7\n        246: aload_0\n        247: iload         9\n        249: iconst_1\n        250: iadd\n        251: baload\n        252: i2l\n-       253: ldc2_w        #85                 // long 255l\n+       253: ldc2_w        #150                // long 255l\n        256: land\n        257: bipush        8\n        259: lshl\n        260: lxor\n        261: lstore        7\n        263: lload         7\n        265: aload_0\n        266: iload         9\n        268: baload\n        269: i2l\n-       270: ldc2_w        #85                 // long 255l\n+       270: ldc2_w        #150                // long 255l\n        273: land\n        274: lxor\n        275: lstore        7\n        277: lload         7\n-       279: ldc2_w        #63                 // long -8663945395140668459l\n+       279: ldc2_w        #35                 // long -8663945395140668459l\n        282: lmul\n        283: lstore        7\n        285: lload         7\n        287: bipush        31\n-       289: invokestatic  #65                 // Method java/lang/Long.rotateLeft:(JI)J\n+       289: invokestatic  #130                // Method java/lang/Long.rotateLeft:(JI)J\n        292: lstore        7\n        294: lload         7\n-       296: ldc2_w        #68                 // long 5545529020109919103l\n+       296: ldc2_w        #38                 // long 5545529020109919103l\n        299: lmul\n        300: lstore        7\n        302: lload         4\n        304: lload         7\n        306: lxor\n        307: lstore        4\n        309: lload         4\n        311: iload_2\n        312: i2l\n        313: lxor\n        314: lstore        4\n        316: lload         4\n-       318: invokestatic  #76                 // Method fmix64:(J)J\n+       318: invokestatic  #139                // Method fmix64:(J)J\n        321: lstore        4\n        323: lload         4\n        325: lreturn\n       LineNumberTable:\n         line 667: 0\n         line 668: 4\n         line 671: 9\n-        line 672: 19\n-        line 673: 27\n-        line 676: 35\n-        line 677: 43\n-        line 678: 52\n-        line 679: 60\n-        line 680: 67\n-        line 671: 84\n+        line 672: 15\n+        line 673: 23\n+        line 676: 31\n+        line 677: 39\n+        line 678: 48\n+        line 679: 56\n+        line 680: 63\n+        line 671: 80\n         line 684: 90\n         line 685: 93\n         line 686: 101\n         line 688: 148\n         line 690: 168\n         line 692: 187\n         line 694: 206\n         line 696: 225\n         line 698: 244\n         line 700: 263\n         line 701: 277\n         line 702: 285\n         line 703: 294\n         line 704: 302\n-        line 708: 309\n+        line 705: 309\n+        line 708: 311\n         line 709: 316\n         line 711: 323\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           27      57     8 index   I\n-           35      49     9     k   J\n-           12      78     7     i   I\n             0     326     0  data   [B\n             0     326     1 offset   I\n             0     326     2 length   I\n             0     326     3  seed   I\n             4     322     4  hash   J\n             9     317     6 nblocks   I\n+           12      78     7     i   I\n+           23      57     8 index   I\n+           31      49     9     k   J\n            93     233     7    k1   J\n           101     225     9 index   I\n       StackMapTable: number_of_entries = 10\n         frame_type = 254 /* append */\n-          offset_delta = 12\n+          offset_delta = 15\n           locals = [ long, int, int ]\n-        frame_type = 250 /* chop */\n-          offset_delta = 77\n-        frame_type = 253 /* append */\n-          offset_delta = 57\n-          locals = [ long, int ]\n+        frame_type = 251 /* same_frame_extended */\n+          offset_delta = 67\n+        frame_type = 255 /* full_frame */\n+          offset_delta = 64\n+          locals = [ class \"[B\", int, int, int, long, int, long, int ]\n+          stack = []\n         frame_type = 19 /* same */\n         frame_type = 18 /* same */\n         frame_type = 18 /* same */\n         frame_type = 18 /* same */\n         frame_type = 18 /* same */\n         frame_type = 18 /* same */\n         frame_type = 45 /* same */\n-    Deprecated: true\n-    RuntimeVisibleAnnotations:\n-      0: #124()\n-        java.lang.Deprecated\n \n   public static long[] hash128(byte[]);\n     descriptor: ([B)[J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n          2: aload_0\n          3: arraylength\n-         4: ldc           #29                 // int 104729\n-         6: invokestatic  #98                 // Method hash128:([BIII)[J\n+         4: ldc           #15                 // int 104729\n+         6: invokestatic  #168                // Method hash128:([BIII)[J\n          9: areturn\n       LineNumberTable:\n         line 732: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  data   [B\n \n@@ -1393,86 +1389,86 @@\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n          2: aload_0\n          3: arraylength\n          4: iconst_0\n-         5: invokestatic  #102                // Method hash128x64:([BIII)[J\n+         5: invokestatic  #172                // Method hash128x64:([BIII)[J\n          8: areturn\n       LineNumberTable:\n         line 751: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  data   [B\n \n   public static long[] hash128(java.lang.String);\n     descriptor: (Ljava/lang/String;)[J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Deprecated: true\n+    RuntimeVisibleAnnotations:\n+      0: #12()\n+        java.lang.Deprecated\n     Code:\n       stack=4, locals=2, args_size=1\n          0: aload_0\n-         1: invokestatic  #44                 // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n+         1: invokestatic  #96                 // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n          4: astore_1\n          5: aload_1\n          6: iconst_0\n          7: aload_1\n          8: arraylength\n-         9: ldc           #29                 // int 104729\n-        11: invokestatic  #98                 // Method hash128:([BIII)[J\n+         9: ldc           #15                 // int 104729\n+        11: invokestatic  #168                // Method hash128:([BIII)[J\n         14: areturn\n       LineNumberTable:\n         line 780: 0\n         line 781: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  data   Ljava/lang/String;\n             5      10     1 bytes   [B\n-    Deprecated: true\n-    RuntimeVisibleAnnotations:\n-      0: #124()\n-        java.lang.Deprecated\n \n   public static long[] hash128(byte[], int, int, int);\n     descriptor: ([BIII)[J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Deprecated: true\n+    RuntimeVisibleAnnotations:\n+      0: #12()\n+        java.lang.Deprecated\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: iload_1\n          2: iload_2\n          3: iload_3\n-         4: invokestatic  #102                // Method hash128x64:([BIII)[J\n+         4: invokestatic  #172                // Method hash128x64:([BIII)[J\n          7: areturn\n       LineNumberTable:\n         line 805: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  data   [B\n             0       8     1 offset   I\n             0       8     2 length   I\n             0       8     3  seed   I\n-    Deprecated: true\n-    RuntimeVisibleAnnotations:\n-      0: #124()\n-        java.lang.Deprecated\n \n   public static long[] hash128x64(byte[], int, int, int);\n     descriptor: ([BIII)[J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=7, locals=4, args_size=4\n          0: aload_0\n          1: iload_1\n          2: iload_2\n          3: iload_3\n          4: i2l\n-         5: ldc2_w        #81                 // long 4294967295l\n+         5: ldc2_w        #145                // long 4294967295l\n          8: land\n-         9: invokestatic  #105                // Method hash128x64:([BIIJ)[J\n+         9: invokestatic  #175                // Method hash128x64:([BIIJ)[J\n         12: areturn\n       LineNumberTable:\n         line 823: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  data   [B\n             0      13     1 offset   I\n@@ -1490,95 +1486,95 @@\n          4: lstore        7\n          6: iload_2\n          7: iconst_4\n          8: ishr\n          9: istore        9\n         11: iconst_0\n         12: istore        10\n-        14: iload         10\n-        16: iload         9\n-        18: if_icmpge     174\n-        21: iload_1\n-        22: iload         10\n-        24: iconst_4\n-        25: ishl\n-        26: iadd\n-        27: istore        11\n-        29: aload_0\n-        30: iload         11\n-        32: invokestatic  #94                 // Method getLittleEndianLong:([BI)J\n-        35: lstore        12\n-        37: aload_0\n-        38: iload         11\n-        40: bipush        8\n-        42: iadd\n-        43: invokestatic  #94                 // Method getLittleEndianLong:([BI)J\n-        46: lstore        14\n-        48: lload         12\n-        50: ldc2_w        #63                 // long -8663945395140668459l\n-        53: lmul\n-        54: lstore        12\n-        56: lload         12\n-        58: bipush        31\n-        60: invokestatic  #65                 // Method java/lang/Long.rotateLeft:(JI)J\n-        63: lstore        12\n-        65: lload         12\n-        67: ldc2_w        #68                 // long 5545529020109919103l\n-        70: lmul\n-        71: lstore        12\n-        73: lload         5\n-        75: lload         12\n-        77: lxor\n-        78: lstore        5\n-        80: lload         5\n-        82: bipush        27\n-        84: invokestatic  #65                 // Method java/lang/Long.rotateLeft:(JI)J\n-        87: lstore        5\n-        89: lload         5\n-        91: lload         7\n-        93: ladd\n-        94: lstore        5\n-        96: lload         5\n-        98: ldc2_w        #70                 // long 5l\n-       101: lmul\n-       102: ldc2_w        #72                 // long 1390208809l\n-       105: ladd\n-       106: lstore        5\n-       108: lload         14\n-       110: ldc2_w        #68                 // long 5545529020109919103l\n-       113: lmul\n-       114: lstore        14\n-       116: lload         14\n-       118: bipush        33\n-       120: invokestatic  #65                 // Method java/lang/Long.rotateLeft:(JI)J\n-       123: lstore        14\n-       125: lload         14\n-       127: ldc2_w        #63                 // long -8663945395140668459l\n-       130: lmul\n-       131: lstore        14\n-       133: lload         7\n-       135: lload         14\n-       137: lxor\n-       138: lstore        7\n-       140: lload         7\n-       142: bipush        31\n-       144: invokestatic  #65                 // Method java/lang/Long.rotateLeft:(JI)J\n-       147: lstore        7\n-       149: lload         7\n-       151: lload         5\n-       153: ladd\n-       154: lstore        7\n-       156: lload         7\n-       158: ldc2_w        #70                 // long 5l\n-       161: lmul\n-       162: ldc2_w        #108                // long 944331445l\n-       165: ladd\n-       166: lstore        7\n-       168: iinc          10, 1\n-       171: goto          14\n+        14: goto          167\n+        17: iload_1\n+        18: iload         10\n+        20: iconst_4\n+        21: ishl\n+        22: iadd\n+        23: istore        11\n+        25: aload_0\n+        26: iload         11\n+        28: invokestatic  #161                // Method getLittleEndianLong:([BI)J\n+        31: lstore        12\n+        33: aload_0\n+        34: iload         11\n+        36: bipush        8\n+        38: iadd\n+        39: invokestatic  #161                // Method getLittleEndianLong:([BI)J\n+        42: lstore        14\n+        44: lload         12\n+        46: ldc2_w        #35                 // long -8663945395140668459l\n+        49: lmul\n+        50: lstore        12\n+        52: lload         12\n+        54: bipush        31\n+        56: invokestatic  #130                // Method java/lang/Long.rotateLeft:(JI)J\n+        59: lstore        12\n+        61: lload         12\n+        63: ldc2_w        #38                 // long 5545529020109919103l\n+        66: lmul\n+        67: lstore        12\n+        69: lload         5\n+        71: lload         12\n+        73: lxor\n+        74: lstore        5\n+        76: lload         5\n+        78: bipush        27\n+        80: invokestatic  #130                // Method java/lang/Long.rotateLeft:(JI)J\n+        83: lstore        5\n+        85: lload         5\n+        87: lload         7\n+        89: ladd\n+        90: lstore        5\n+        92: lload         5\n+        94: ldc2_w        #133                // long 5l\n+        97: lmul\n+        98: ldc2_w        #135                // long 1390208809l\n+       101: ladd\n+       102: lstore        5\n+       104: lload         14\n+       106: ldc2_w        #38                 // long 5545529020109919103l\n+       109: lmul\n+       110: lstore        14\n+       112: lload         14\n+       114: bipush        33\n+       116: invokestatic  #130                // Method java/lang/Long.rotateLeft:(JI)J\n+       119: lstore        14\n+       121: lload         14\n+       123: ldc2_w        #35                 // long -8663945395140668459l\n+       126: lmul\n+       127: lstore        14\n+       129: lload         7\n+       131: lload         14\n+       133: lxor\n+       134: lstore        7\n+       136: lload         7\n+       138: bipush        31\n+       140: invokestatic  #130                // Method java/lang/Long.rotateLeft:(JI)J\n+       143: lstore        7\n+       145: lload         7\n+       147: lload         5\n+       149: ladd\n+       150: lstore        7\n+       152: lload         7\n+       154: ldc2_w        #133                // long 5l\n+       157: lmul\n+       158: ldc2_w        #178                // long 944331445l\n+       161: ladd\n+       162: lstore        7\n+       164: iinc          10, 1\n+       167: iload         10\n+       169: iload         9\n+       171: if_icmplt     17\n        174: lconst_0\n        175: lstore        10\n        177: lconst_0\n        178: lstore        12\n        180: iload_1\n        181: iload         9\n        183: iconst_4\n@@ -1611,80 +1607,80 @@\n        268: lload         12\n        270: aload_0\n        271: iload         14\n        273: bipush        14\n        275: iadd\n        276: baload\n        277: i2l\n-       278: ldc2_w        #85                 // long 255l\n+       278: ldc2_w        #150                // long 255l\n        281: land\n        282: bipush        48\n        284: lshl\n        285: lxor\n        286: lstore        12\n        288: lload         12\n        290: aload_0\n        291: iload         14\n        293: bipush        13\n        295: iadd\n        296: baload\n        297: i2l\n-       298: ldc2_w        #85                 // long 255l\n+       298: ldc2_w        #150                // long 255l\n        301: land\n        302: bipush        40\n        304: lshl\n        305: lxor\n        306: lstore        12\n        308: lload         12\n        310: aload_0\n        311: iload         14\n        313: bipush        12\n        315: iadd\n        316: baload\n        317: i2l\n-       318: ldc2_w        #85                 // long 255l\n+       318: ldc2_w        #150                // long 255l\n        321: land\n        322: bipush        32\n        324: lshl\n        325: lxor\n        326: lstore        12\n        328: lload         12\n        330: aload_0\n        331: iload         14\n        333: bipush        11\n        335: iadd\n        336: baload\n        337: i2l\n-       338: ldc2_w        #85                 // long 255l\n+       338: ldc2_w        #150                // long 255l\n        341: land\n        342: bipush        24\n        344: lshl\n        345: lxor\n        346: lstore        12\n        348: lload         12\n        350: aload_0\n        351: iload         14\n        353: bipush        10\n        355: iadd\n        356: baload\n        357: i2l\n-       358: ldc2_w        #85                 // long 255l\n+       358: ldc2_w        #150                // long 255l\n        361: land\n        362: bipush        16\n        364: lshl\n        365: lxor\n        366: lstore        12\n        368: lload         12\n        370: aload_0\n        371: iload         14\n        373: bipush        9\n        375: iadd\n        376: baload\n        377: i2l\n-       378: ldc2_w        #85                 // long 255l\n+       378: ldc2_w        #150                // long 255l\n        381: land\n        382: bipush        8\n        384: lshl\n        385: lxor\n        386: lstore        12\n        388: lload         12\n        390: aload_0\n@@ -1694,115 +1690,115 @@\n        396: baload\n        397: sipush        255\n        400: iand\n        401: i2l\n        402: lxor\n        403: lstore        12\n        405: lload         12\n-       407: ldc2_w        #68                 // long 5545529020109919103l\n+       407: ldc2_w        #38                 // long 5545529020109919103l\n        410: lmul\n        411: lstore        12\n        413: lload         12\n        415: bipush        33\n-       417: invokestatic  #65                 // Method java/lang/Long.rotateLeft:(JI)J\n+       417: invokestatic  #130                // Method java/lang/Long.rotateLeft:(JI)J\n        420: lstore        12\n        422: lload         12\n-       424: ldc2_w        #63                 // long -8663945395140668459l\n+       424: ldc2_w        #35                 // long -8663945395140668459l\n        427: lmul\n        428: lstore        12\n        430: lload         7\n        432: lload         12\n        434: lxor\n        435: lstore        7\n        437: lload         10\n        439: aload_0\n        440: iload         14\n        442: bipush        7\n        444: iadd\n        445: baload\n        446: i2l\n-       447: ldc2_w        #85                 // long 255l\n+       447: ldc2_w        #150                // long 255l\n        450: land\n        451: bipush        56\n        453: lshl\n        454: lxor\n        455: lstore        10\n        457: lload         10\n        459: aload_0\n        460: iload         14\n        462: bipush        6\n        464: iadd\n        465: baload\n        466: i2l\n-       467: ldc2_w        #85                 // long 255l\n+       467: ldc2_w        #150                // long 255l\n        470: land\n        471: bipush        48\n        473: lshl\n        474: lxor\n        475: lstore        10\n        477: lload         10\n        479: aload_0\n        480: iload         14\n        482: iconst_5\n        483: iadd\n        484: baload\n        485: i2l\n-       486: ldc2_w        #85                 // long 255l\n+       486: ldc2_w        #150                // long 255l\n        489: land\n        490: bipush        40\n        492: lshl\n        493: lxor\n        494: lstore        10\n        496: lload         10\n        498: aload_0\n        499: iload         14\n        501: iconst_4\n        502: iadd\n        503: baload\n        504: i2l\n-       505: ldc2_w        #85                 // long 255l\n+       505: ldc2_w        #150                // long 255l\n        508: land\n        509: bipush        32\n        511: lshl\n        512: lxor\n        513: lstore        10\n        515: lload         10\n        517: aload_0\n        518: iload         14\n        520: iconst_3\n        521: iadd\n        522: baload\n        523: i2l\n-       524: ldc2_w        #85                 // long 255l\n+       524: ldc2_w        #150                // long 255l\n        527: land\n        528: bipush        24\n        530: lshl\n        531: lxor\n        532: lstore        10\n        534: lload         10\n        536: aload_0\n        537: iload         14\n        539: iconst_2\n        540: iadd\n        541: baload\n        542: i2l\n-       543: ldc2_w        #85                 // long 255l\n+       543: ldc2_w        #150                // long 255l\n        546: land\n        547: bipush        16\n        549: lshl\n        550: lxor\n        551: lstore        10\n        553: lload         10\n        555: aload_0\n        556: iload         14\n        558: iconst_1\n        559: iadd\n        560: baload\n        561: i2l\n-       562: ldc2_w        #85                 // long 255l\n+       562: ldc2_w        #150                // long 255l\n        565: land\n        566: bipush        8\n        568: lshl\n        569: lxor\n        570: lstore        10\n        572: lload         10\n        574: aload_0\n@@ -1810,23 +1806,23 @@\n        577: baload\n        578: sipush        255\n        581: iand\n        582: i2l\n        583: lxor\n        584: lstore        10\n        586: lload         10\n-       588: ldc2_w        #63                 // long -8663945395140668459l\n+       588: ldc2_w        #35                 // long -8663945395140668459l\n        591: lmul\n        592: lstore        10\n        594: lload         10\n        596: bipush        31\n-       598: invokestatic  #65                 // Method java/lang/Long.rotateLeft:(JI)J\n+       598: invokestatic  #130                // Method java/lang/Long.rotateLeft:(JI)J\n        601: lstore        10\n        603: lload         10\n-       605: ldc2_w        #68                 // long 5545529020109919103l\n+       605: ldc2_w        #38                 // long 5545529020109919103l\n        608: lmul\n        609: lstore        10\n        611: lload         5\n        613: lload         10\n        615: lxor\n        616: lstore        5\n        618: lload         5\n@@ -1844,18 +1840,18 @@\n        636: ladd\n        637: lstore        5\n        639: lload         7\n        641: lload         5\n        643: ladd\n        644: lstore        7\n        646: lload         5\n-       648: invokestatic  #76                 // Method fmix64:(J)J\n+       648: invokestatic  #139                // Method fmix64:(J)J\n        651: lstore        5\n        653: lload         7\n-       655: invokestatic  #76                 // Method fmix64:(J)J\n+       655: invokestatic  #139                // Method fmix64:(J)J\n        658: lstore        7\n        660: lload         5\n        662: lload         7\n        664: ladd\n        665: lstore        5\n        667: lload         7\n        669: lload         5\n@@ -1873,32 +1869,32 @@\n        686: lastore\n        687: areturn\n       LineNumberTable:\n         line 839: 0\n         line 840: 3\n         line 841: 6\n         line 844: 11\n-        line 845: 21\n-        line 846: 29\n-        line 847: 37\n-        line 850: 48\n-        line 851: 56\n-        line 852: 65\n-        line 853: 73\n-        line 854: 80\n-        line 855: 89\n-        line 856: 96\n-        line 859: 108\n-        line 860: 116\n-        line 861: 125\n-        line 862: 133\n-        line 863: 140\n-        line 864: 149\n-        line 865: 156\n-        line 844: 168\n+        line 845: 17\n+        line 846: 25\n+        line 847: 33\n+        line 850: 44\n+        line 851: 52\n+        line 852: 61\n+        line 853: 69\n+        line 854: 76\n+        line 855: 85\n+        line 856: 92\n+        line 859: 104\n+        line 860: 112\n+        line 861: 121\n+        line 862: 129\n+        line 863: 136\n+        line 864: 145\n+        line 865: 152\n+        line 844: 164\n         line 869: 174\n         line 870: 177\n         line 871: 180\n         line 872: 188\n         line 874: 268\n         line 876: 288\n         line 878: 308\n@@ -1918,49 +1914,51 @@\n         line 903: 534\n         line 905: 553\n         line 907: 572\n         line 908: 586\n         line 909: 594\n         line 910: 603\n         line 911: 611\n-        line 915: 618\n+        line 912: 618\n+        line 915: 620\n         line 916: 625\n         line 918: 632\n         line 919: 639\n         line 921: 646\n         line 922: 653\n         line 924: 660\n         line 925: 667\n         line 927: 674\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           29     139    11 index   I\n-           37     131    12    k1   J\n-           48     120    14    k2   J\n-           14     160    10     i   I\n             0     688     0  data   [B\n             0     688     1 offset   I\n             0     688     2 length   I\n             0     688     3  seed   J\n             3     685     5    h1   J\n             6     682     7    h2   J\n            11     677     9 nblocks   I\n+           14     160    10     i   I\n+           25     139    11 index   I\n+           33     131    12    k1   J\n+           44     120    14    k2   J\n           177     511    10    k1   J\n           180     508    12    k2   J\n           188     500    14 index   I\n       StackMapTable: number_of_entries = 18\n         frame_type = 255 /* full_frame */\n-          offset_delta = 14\n+          offset_delta = 17\n           locals = [ class \"[B\", int, int, long, long, long, int, int ]\n           stack = []\n-        frame_type = 250 /* chop */\n-          offset_delta = 159\n-        frame_type = 254 /* append */\n-          offset_delta = 93\n-          locals = [ long, long, int ]\n+        frame_type = 251 /* same_frame_extended */\n+          offset_delta = 149\n+        frame_type = 255 /* full_frame */\n+          offset_delta = 100\n+          locals = [ class \"[B\", int, int, long, long, long, int, long, long, int ]\n+          stack = []\n         frame_type = 19 /* same */\n         frame_type = 19 /* same */\n         frame_type = 19 /* same */\n         frame_type = 19 /* same */\n         frame_type = 19 /* same */\n         frame_type = 19 /* same */\n         frame_type = 48 /* same */\n@@ -1978,96 +1976,110 @@\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=6, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: baload\n          3: i2l\n-         4: ldc2_w        #85                 // long 255l\n+         4: ldc2_w        #150                // long 255l\n          7: land\n          8: aload_0\n          9: iload_1\n         10: iconst_1\n         11: iadd\n         12: baload\n         13: i2l\n-        14: ldc2_w        #85                 // long 255l\n+        14: ldc2_w        #150                // long 255l\n         17: land\n         18: bipush        8\n         20: lshl\n         21: lor\n         22: aload_0\n         23: iload_1\n         24: iconst_2\n         25: iadd\n         26: baload\n         27: i2l\n-        28: ldc2_w        #85                 // long 255l\n+        28: ldc2_w        #150                // long 255l\n         31: land\n         32: bipush        16\n         34: lshl\n         35: lor\n         36: aload_0\n         37: iload_1\n         38: iconst_3\n         39: iadd\n         40: baload\n         41: i2l\n-        42: ldc2_w        #85                 // long 255l\n+        42: ldc2_w        #150                // long 255l\n         45: land\n         46: bipush        24\n         48: lshl\n         49: lor\n         50: aload_0\n         51: iload_1\n         52: iconst_4\n         53: iadd\n         54: baload\n         55: i2l\n-        56: ldc2_w        #85                 // long 255l\n+        56: ldc2_w        #150                // long 255l\n         59: land\n         60: bipush        32\n         62: lshl\n         63: lor\n         64: aload_0\n         65: iload_1\n         66: iconst_5\n         67: iadd\n         68: baload\n         69: i2l\n-        70: ldc2_w        #85                 // long 255l\n+        70: ldc2_w        #150                // long 255l\n         73: land\n         74: bipush        40\n         76: lshl\n         77: lor\n         78: aload_0\n         79: iload_1\n         80: bipush        6\n         82: iadd\n         83: baload\n         84: i2l\n-        85: ldc2_w        #85                 // long 255l\n+        85: ldc2_w        #150                // long 255l\n         88: land\n         89: bipush        48\n         91: lshl\n         92: lor\n         93: aload_0\n         94: iload_1\n         95: bipush        7\n         97: iadd\n         98: baload\n         99: i2l\n-       100: ldc2_w        #85                 // long 255l\n+       100: ldc2_w        #150                // long 255l\n        103: land\n        104: bipush        56\n        106: lshl\n        107: lor\n        108: lreturn\n       LineNumberTable:\n         line 938: 0\n+        line 939: 8\n+        line 938: 21\n+        line 940: 22\n+        line 938: 35\n+        line 941: 36\n+        line 938: 49\n+        line 942: 50\n+        line 938: 63\n+        line 943: 64\n+        line 938: 77\n+        line 944: 78\n+        line 938: 92\n+        line 945: 93\n+        line 938: 107\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0     109     0  data   [B\n             0     109     1 index   I\n \n   private static int getLittleEndianInt(byte[], int);\n     descriptor: ([BI)I\n@@ -2108,46 +2120,52 @@\n         41: iand\n         42: bipush        24\n         44: ishl\n         45: ior\n         46: ireturn\n       LineNumberTable:\n         line 956: 0\n+        line 957: 7\n+        line 956: 19\n+        line 958: 20\n+        line 956: 32\n+        line 959: 33\n+        line 956: 45\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      47     0  data   [B\n             0      47     1 index   I\n \n   private static int mix32(int, int);\n     descriptor: (II)I\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: iload_0\n-         1: ldc           #53                 // int -862048943\n+         1: ldc           #23                 // int -862048943\n          3: imul\n          4: istore_0\n          5: iload_0\n          6: bipush        15\n-         8: invokestatic  #54                 // Method java/lang/Integer.rotateLeft:(II)I\n+         8: invokestatic  #112                // Method java/lang/Integer.rotateLeft:(II)I\n         11: istore_0\n         12: iload_0\n-        13: ldc           #57                 // int 461845907\n+        13: ldc           #25                 // int 461845907\n         15: imul\n         16: istore_0\n         17: iload_1\n         18: iload_0\n         19: ixor\n         20: istore_1\n         21: iload_1\n         22: bipush        13\n-        24: invokestatic  #54                 // Method java/lang/Integer.rotateLeft:(II)I\n+        24: invokestatic  #112                // Method java/lang/Integer.rotateLeft:(II)I\n         27: iconst_5\n         28: imul\n-        29: ldc           #110                // int -430675100\n+        29: ldc           #33                 // int -430675100\n         31: iadd\n         32: ireturn\n       LineNumberTable:\n         line 970: 0\n         line 971: 5\n         line 972: 12\n         line 973: 17\n@@ -2165,25 +2183,25 @@\n          0: iload_0\n          1: iload_0\n          2: bipush        16\n          4: iushr\n          5: ixor\n          6: istore_0\n          7: iload_0\n-         8: ldc           #111                // int -2048144789\n+         8: ldc           #183                // int -2048144789\n         10: imul\n         11: istore_0\n         12: iload_0\n         13: iload_0\n         14: bipush        13\n         16: iushr\n         17: ixor\n         18: istore_0\n         19: iload_0\n-        20: ldc           #112                // int -1028477387\n+        20: ldc           #184                // int -1028477387\n         22: imul\n         23: istore_0\n         24: iload_0\n         25: iload_0\n         26: bipush        16\n         28: iushr\n         29: ixor\n@@ -2209,25 +2227,25 @@\n          0: lload_0\n          1: lload_0\n          2: bipush        33\n          4: lushr\n          5: lxor\n          6: lstore_0\n          7: lload_0\n-         8: ldc2_w        #113                // long -49064778989728563l\n+         8: ldc2_w        #185                // long -49064778989728563l\n         11: lmul\n         12: lstore_0\n         13: lload_0\n         14: lload_0\n         15: bipush        33\n         17: lushr\n         18: lxor\n         19: lstore_0\n         20: lload_0\n-        21: ldc2_w        #115                // long -4265267296055464877l\n+        21: ldc2_w        #187                // long -4265267296055464877l\n         24: lmul\n         25: lstore_0\n         26: lload_0\n         27: lload_0\n         28: bipush        33\n         30: lushr\n         31: lxor\n@@ -2241,57 +2259,52 @@\n         line 1002: 20\n         line 1003: 26\n         line 1004: 33\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      35     0  hash   J\n \n-  static int access$000(int, int);\n+  static int access$0(int, int);\n     descriptor: (II)I\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: iload_0\n          1: iload_1\n-         2: invokestatic  #19                 // Method mix32:(II)I\n+         2: invokestatic  #73                 // Method mix32:(II)I\n          5: ireturn\n       LineNumberTable:\n-        line 61: 0\n+        line 969: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       6     0    x0   I\n-            0       6     1    x1   I\n \n-  static int access$100(byte[], int);\n+  static int access$1(byte[], int);\n     descriptor: ([BI)I\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #15                 // Method getLittleEndianInt:([BI)I\n+         2: invokestatic  #109                // Method getLittleEndianInt:([BI)I\n          5: ireturn\n       LineNumberTable:\n-        line 61: 0\n+        line 955: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       6     0    x0   [B\n-            0       6     1    x1   I\n \n-  static int access$200(int);\n+  static int access$2(int);\n     descriptor: (I)I\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: iload_0\n-         1: invokestatic  #9                  // Method fmix32:(I)I\n+         1: invokestatic  #77                 // Method fmix32:(I)I\n          4: ireturn\n       LineNumberTable:\n-        line 61: 0\n+        line 983: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0    x0   I\n }\n SourceFile: \"MurmurHash3.java\"\n InnerClasses:\n-  public static #203= #201 of #10;        // IncrementalHash32=class org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32 of class org/apache/commons/codec/digest/MurmurHash3\n-  public static #206= #204 of #10;        // IncrementalHash32x86=class org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32x86 of class org/apache/commons/codec/digest/MurmurHash3\n+  public static #197= #195 of #1;         // IncrementalHash32=class org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32 of class org/apache/commons/codec/digest/MurmurHash3\n+  public static #200= #198 of #1;         // IncrementalHash32x86=class org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32x86 of class org/apache/commons/codec/digest/MurmurHash3\n"}]}
