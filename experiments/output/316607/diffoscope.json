{"diffoscope-json-version": 1, "source1": "first/StopWatch.class", "source2": "second/StopWatch.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,206 +1,206 @@\n-  SHA-256 checksum 0bc152ac556f54b8856f3a64f7d254b0535f95f5be579c87971f202f1c406a98\n+  SHA-256 checksum c4f4f88d4d5c685f03995017793e1eb68404e73853041d2866e622ec2926fd88\n   Compiled from \"StopWatch.java\"\n public class org.apache.commons.lang3.time.StopWatch\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/lang3/time/StopWatch\n-  super_class: #56                        // java/lang/Object\n+  super_class: #14                        // java/lang/Object\n   interfaces: 0, fields: 7, methods: 25, attributes: 2\n Constant pool:\n-    #1 = Class              #111          // org/apache/commons/lang3/time/StopWatch\n-    #2 = Methodref          #1.#112       // org/apache/commons/lang3/time/StopWatch.\"<init>\":()V\n-    #3 = Methodref          #1.#113       // org/apache/commons/lang3/time/StopWatch.start:()V\n-    #4 = Methodref          #1.#114       // org/apache/commons/lang3/time/StopWatch.\"<init>\":(Ljava/lang/String;)V\n-    #5 = Methodref          #56.#112      // java/lang/Object.\"<init>\":()V\n-    #6 = Fieldref           #59.#115      // org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n-    #7 = Fieldref           #1.#116       // org/apache/commons/lang3/time/StopWatch.runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-    #8 = Fieldref           #61.#117      // org/apache/commons/lang3/time/StopWatch$SplitState.UNSPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n-    #9 = Fieldref           #1.#118       // org/apache/commons/lang3/time/StopWatch.splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n-   #10 = Fieldref           #1.#119       // org/apache/commons/lang3/time/StopWatch.message:Ljava/lang/String;\n-   #11 = Methodref          #1.#120       // org/apache/commons/lang3/time/StopWatch.getSplitTime:()J\n-   #12 = Methodref          #121.#122     // org/apache/commons/lang3/time/DurationFormatUtils.formatDurationHMS:(J)Ljava/lang/String;\n-   #13 = Methodref          #1.#123       // org/apache/commons/lang3/time/StopWatch.getTime:()J\n-   #14 = Fieldref           #59.#124      // org/apache/commons/lang3/time/StopWatch$State.STOPPED:Lorg/apache/commons/lang3/time/StopWatch$State;\n-   #15 = Fieldref           #59.#125      // org/apache/commons/lang3/time/StopWatch$State.SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;\n-   #16 = Fieldref           #1.#126       // org/apache/commons/lang3/time/StopWatch.stopTime:J\n-   #17 = Fieldref           #1.#127       // org/apache/commons/lang3/time/StopWatch.startTime:J\n-   #18 = Fieldref           #59.#128      // org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n-   #19 = Methodref          #129.#130     // java/lang/System.nanoTime:()J\n-   #20 = Class              #131          // java/lang/RuntimeException\n-   #21 = String             #132          // Illegal running state has occurred.\n-   #22 = Methodref          #20.#114      // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;)V\n-   #23 = Fieldref           #61.#133      // org/apache/commons/lang3/time/StopWatch$SplitState.SPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n-   #24 = Class              #134          // java/lang/IllegalStateException\n-   #25 = String             #135          // Stopwatch must be split to get the split time.\n-   #26 = Methodref          #24.#114      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #27 = Methodref          #1.#136       // org/apache/commons/lang3/time/StopWatch.getSplitNanoTime:()J\n-   #28 = Long               1000000l\n-   #30 = String             #137          // Stopwatch has not been started\n-   #31 = Fieldref           #1.#138       // org/apache/commons/lang3/time/StopWatch.startTimeMillis:J\n-   #32 = Methodref          #1.#139       // org/apache/commons/lang3/time/StopWatch.getNanoTime:()J\n-   #33 = Fieldref           #140.#141     // java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;\n-   #34 = Methodref          #140.#142     // java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J\n-   #35 = Methodref          #59.#143      // org/apache/commons/lang3/time/StopWatch$State.isStarted:()Z\n-   #36 = Methodref          #59.#144      // org/apache/commons/lang3/time/StopWatch$State.isStopped:()Z\n-   #37 = Methodref          #59.#145      // org/apache/commons/lang3/time/StopWatch$State.isSuspended:()Z\n-   #38 = String             #146          // Stopwatch must be suspended to resume.\n-   #39 = String             #147          // Stopwatch is not running.\n-   #40 = String             #148          // Stopwatch must be reset before being restarted.\n-   #41 = String             #149          // Stopwatch already started.\n-   #42 = Methodref          #129.#150     // java/lang/System.currentTimeMillis:()J\n-   #43 = String             #151          // Stopwatch must be running to suspend.\n-   #44 = Class              #152          // org/apache/commons/lang3/StringUtils\n-   #45 = String             #153          //\n-   #46 = Methodref          #154.#155     // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-   #47 = Methodref          #1.#156       // org/apache/commons/lang3/time/StopWatch.formatSplitTime:()Ljava/lang/String;\n-   #48 = Methodref          #106.#157     // java/lang/String.isEmpty:()Z\n-   #49 = Class              #158          // java/lang/StringBuilder\n-   #50 = Methodref          #49.#112      // java/lang/StringBuilder.\"<init>\":()V\n-   #51 = Methodref          #49.#159      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #52 = String             #160          //\n-   #53 = Methodref          #49.#161      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #54 = Methodref          #1.#162       // org/apache/commons/lang3/time/StopWatch.formatTime:()Ljava/lang/String;\n-   #55 = String             #163          // Stopwatch has not been split.\n-   #56 = Class              #164          // java/lang/Object\n-   #57 = Class              #165          // org/apache/commons/lang3/time/StopWatch$1\n-   #58 = Utf8               InnerClasses\n-   #59 = Class              #166          // org/apache/commons/lang3/time/StopWatch$State\n-   #60 = Utf8               State\n-   #61 = Class              #167          // org/apache/commons/lang3/time/StopWatch$SplitState\n-   #62 = Utf8               SplitState\n-   #63 = Utf8               NANO_2_MILLIS\n-   #64 = Utf8               J\n-   #65 = Utf8               ConstantValue\n-   #66 = Utf8               message\n-   #67 = Utf8               Ljava/lang/String;\n-   #68 = Utf8               runningState\n-   #69 = Utf8               Lorg/apache/commons/lang3/time/StopWatch$State;\n-   #70 = Utf8               splitState\n-   #71 = Utf8               Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n-   #72 = Utf8               startTime\n-   #73 = Utf8               startTimeMillis\n-   #74 = Utf8               stopTime\n-   #75 = Utf8               create\n-   #76 = Utf8               ()Lorg/apache/commons/lang3/time/StopWatch;\n-   #77 = Utf8               Code\n-   #78 = Utf8               LineNumberTable\n-   #79 = Utf8               createStarted\n-   #80 = Utf8               <init>\n-   #81 = Utf8               ()V\n-   #82 = Utf8               (Ljava/lang/String;)V\n-   #83 = Utf8               formatSplitTime\n-   #84 = Utf8               ()Ljava/lang/String;\n-   #85 = Utf8               formatTime\n-   #86 = Utf8               getMessage\n-   #87 = Utf8               getNanoTime\n-   #88 = Utf8               ()J\n-   #89 = Utf8               StackMapTable\n-   #90 = Utf8               getSplitNanoTime\n-   #91 = Utf8               getSplitTime\n-   #92 = Utf8               getStartTime\n-   #93 = Utf8               getTime\n-   #94 = Utf8               (Ljava/util/concurrent/TimeUnit;)J\n-   #95 = Utf8               isStarted\n-   #96 = Utf8               ()Z\n-   #97 = Utf8               isStopped\n-   #98 = Utf8               isSuspended\n-   #99 = Utf8               reset\n-  #100 = Utf8               resume\n-  #101 = Utf8               split\n-  #102 = Utf8               start\n-  #103 = Utf8               stop\n-  #104 = Utf8               suspend\n-  #105 = Utf8               toSplitString\n-  #106 = Class              #168          // java/lang/String\n-  #107 = Utf8               toString\n-  #108 = Utf8               unsplit\n-  #109 = Utf8               SourceFile\n-  #110 = Utf8               StopWatch.java\n-  #111 = Utf8               org/apache/commons/lang3/time/StopWatch\n-  #112 = NameAndType        #80:#81       // \"<init>\":()V\n-  #113 = NameAndType        #102:#81      // start:()V\n-  #114 = NameAndType        #80:#82       // \"<init>\":(Ljava/lang/String;)V\n-  #115 = NameAndType        #169:#69      // UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n-  #116 = NameAndType        #68:#69       // runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-  #117 = NameAndType        #170:#71      // UNSPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n-  #118 = NameAndType        #70:#71       // splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n-  #119 = NameAndType        #66:#67       // message:Ljava/lang/String;\n-  #120 = NameAndType        #91:#88       // getSplitTime:()J\n-  #121 = Class              #171          // org/apache/commons/lang3/time/DurationFormatUtils\n-  #122 = NameAndType        #172:#173     // formatDurationHMS:(J)Ljava/lang/String;\n-  #123 = NameAndType        #93:#88       // getTime:()J\n-  #124 = NameAndType        #174:#69      // STOPPED:Lorg/apache/commons/lang3/time/StopWatch$State;\n-  #125 = NameAndType        #175:#69      // SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;\n-  #126 = NameAndType        #74:#64       // stopTime:J\n-  #127 = NameAndType        #72:#64       // startTime:J\n-  #128 = NameAndType        #176:#69      // RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n-  #129 = Class              #177          // java/lang/System\n-  #130 = NameAndType        #178:#88      // nanoTime:()J\n-  #131 = Utf8               java/lang/RuntimeException\n-  #132 = Utf8               Illegal running state has occurred.\n-  #133 = NameAndType        #179:#71      // SPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n-  #134 = Utf8               java/lang/IllegalStateException\n-  #135 = Utf8               Stopwatch must be split to get the split time.\n-  #136 = NameAndType        #90:#88       // getSplitNanoTime:()J\n-  #137 = Utf8               Stopwatch has not been started\n-  #138 = NameAndType        #73:#64       // startTimeMillis:J\n-  #139 = NameAndType        #87:#88       // getNanoTime:()J\n-  #140 = Class              #180          // java/util/concurrent/TimeUnit\n-  #141 = NameAndType        #181:#182     // NANOSECONDS:Ljava/util/concurrent/TimeUnit;\n-  #142 = NameAndType        #183:#184     // convert:(JLjava/util/concurrent/TimeUnit;)J\n-  #143 = NameAndType        #95:#96       // isStarted:()Z\n-  #144 = NameAndType        #97:#96       // isStopped:()Z\n-  #145 = NameAndType        #98:#96       // isSuspended:()Z\n-  #146 = Utf8               Stopwatch must be suspended to resume.\n-  #147 = Utf8               Stopwatch is not running.\n-  #148 = Utf8               Stopwatch must be reset before being restarted.\n-  #149 = Utf8               Stopwatch already started.\n-  #150 = NameAndType        #185:#88      // currentTimeMillis:()J\n-  #151 = Utf8               Stopwatch must be running to suspend.\n-  #152 = Utf8               org/apache/commons/lang3/StringUtils\n-  #153 = Utf8\n-  #154 = Class              #186          // java/util/Objects\n-  #155 = NameAndType        #107:#187     // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-  #156 = NameAndType        #83:#84       // formatSplitTime:()Ljava/lang/String;\n-  #157 = NameAndType        #188:#96      // isEmpty:()Z\n-  #158 = Utf8               java/lang/StringBuilder\n-  #159 = NameAndType        #189:#190     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #160 = Utf8\n-  #161 = NameAndType        #107:#84      // toString:()Ljava/lang/String;\n-  #162 = NameAndType        #85:#84       // formatTime:()Ljava/lang/String;\n-  #163 = Utf8               Stopwatch has not been split.\n-  #164 = Utf8               java/lang/Object\n-  #165 = Utf8               org/apache/commons/lang3/time/StopWatch$1\n-  #166 = Utf8               org/apache/commons/lang3/time/StopWatch$State\n-  #167 = Utf8               org/apache/commons/lang3/time/StopWatch$SplitState\n-  #168 = Utf8               java/lang/String\n-  #169 = Utf8               UNSTARTED\n-  #170 = Utf8               UNSPLIT\n-  #171 = Utf8               org/apache/commons/lang3/time/DurationFormatUtils\n-  #172 = Utf8               formatDurationHMS\n-  #173 = Utf8               (J)Ljava/lang/String;\n-  #174 = Utf8               STOPPED\n-  #175 = Utf8               SUSPENDED\n-  #176 = Utf8               RUNNING\n-  #177 = Utf8               java/lang/System\n-  #178 = Utf8               nanoTime\n-  #179 = Utf8               SPLIT\n-  #180 = Utf8               java/util/concurrent/TimeUnit\n-  #181 = Utf8               NANOSECONDS\n-  #182 = Utf8               Ljava/util/concurrent/TimeUnit;\n-  #183 = Utf8               convert\n-  #184 = Utf8               (JLjava/util/concurrent/TimeUnit;)J\n-  #185 = Utf8               currentTimeMillis\n-  #186 = Utf8               java/util/Objects\n-  #187 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-  #188 = Utf8               isEmpty\n-  #189 = Utf8               append\n-  #190 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+    #1 = Class              #2            // org/apache/commons/lang3/time/StopWatch\n+    #2 = Utf8               org/apache/commons/lang3/time/StopWatch\n+    #3 = Methodref          #1.#4         // org/apache/commons/lang3/time/StopWatch.\"<init>\":()V\n+    #4 = NameAndType        #5:#6         // \"<init>\":()V\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Methodref          #1.#8         // org/apache/commons/lang3/time/StopWatch.start:()V\n+    #8 = NameAndType        #9:#6         // start:()V\n+    #9 = Utf8               start\n+   #10 = Methodref          #1.#11        // org/apache/commons/lang3/time/StopWatch.\"<init>\":(Ljava/lang/String;)V\n+   #11 = NameAndType        #5:#12        // \"<init>\":(Ljava/lang/String;)V\n+   #12 = Utf8               (Ljava/lang/String;)V\n+   #13 = Methodref          #14.#4        // java/lang/Object.\"<init>\":()V\n+   #14 = Class              #15           // java/lang/Object\n+   #15 = Utf8               java/lang/Object\n+   #16 = Fieldref           #17.#18       // org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+   #17 = Class              #19           // org/apache/commons/lang3/time/StopWatch$State\n+   #18 = NameAndType        #20:#21       // UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+   #19 = Utf8               org/apache/commons/lang3/time/StopWatch$State\n+   #20 = Utf8               UNSTARTED\n+   #21 = Utf8               Lorg/apache/commons/lang3/time/StopWatch$State;\n+   #22 = Fieldref           #1.#23        // org/apache/commons/lang3/time/StopWatch.runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+   #23 = NameAndType        #24:#21       // runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+   #24 = Utf8               runningState\n+   #25 = Fieldref           #26.#27       // org/apache/commons/lang3/time/StopWatch$SplitState.UNSPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+   #26 = Class              #28           // org/apache/commons/lang3/time/StopWatch$SplitState\n+   #27 = NameAndType        #29:#30       // UNSPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+   #28 = Utf8               org/apache/commons/lang3/time/StopWatch$SplitState\n+   #29 = Utf8               UNSPLIT\n+   #30 = Utf8               Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+   #31 = Fieldref           #1.#32        // org/apache/commons/lang3/time/StopWatch.splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+   #32 = NameAndType        #33:#30       // splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+   #33 = Utf8               splitState\n+   #34 = Fieldref           #1.#35        // org/apache/commons/lang3/time/StopWatch.message:Ljava/lang/String;\n+   #35 = NameAndType        #36:#37       // message:Ljava/lang/String;\n+   #36 = Utf8               message\n+   #37 = Utf8               Ljava/lang/String;\n+   #38 = Methodref          #1.#39        // org/apache/commons/lang3/time/StopWatch.getSplitTime:()J\n+   #39 = NameAndType        #40:#41       // getSplitTime:()J\n+   #40 = Utf8               getSplitTime\n+   #41 = Utf8               ()J\n+   #42 = Methodref          #43.#44       // org/apache/commons/lang3/time/DurationFormatUtils.formatDurationHMS:(J)Ljava/lang/String;\n+   #43 = Class              #45           // org/apache/commons/lang3/time/DurationFormatUtils\n+   #44 = NameAndType        #46:#47       // formatDurationHMS:(J)Ljava/lang/String;\n+   #45 = Utf8               org/apache/commons/lang3/time/DurationFormatUtils\n+   #46 = Utf8               formatDurationHMS\n+   #47 = Utf8               (J)Ljava/lang/String;\n+   #48 = Methodref          #1.#49        // org/apache/commons/lang3/time/StopWatch.getTime:()J\n+   #49 = NameAndType        #50:#41       // getTime:()J\n+   #50 = Utf8               getTime\n+   #51 = Fieldref           #17.#52       // org/apache/commons/lang3/time/StopWatch$State.STOPPED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+   #52 = NameAndType        #53:#21       // STOPPED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+   #53 = Utf8               STOPPED\n+   #54 = Fieldref           #17.#55       // org/apache/commons/lang3/time/StopWatch$State.SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+   #55 = NameAndType        #56:#21       // SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+   #56 = Utf8               SUSPENDED\n+   #57 = Fieldref           #1.#58        // org/apache/commons/lang3/time/StopWatch.stopTime:J\n+   #58 = NameAndType        #59:#60       // stopTime:J\n+   #59 = Utf8               stopTime\n+   #60 = Utf8               J\n+   #61 = Fieldref           #1.#62        // org/apache/commons/lang3/time/StopWatch.startTime:J\n+   #62 = NameAndType        #63:#60       // startTime:J\n+   #63 = Utf8               startTime\n+   #64 = Fieldref           #17.#65       // org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n+   #65 = NameAndType        #66:#21       // RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n+   #66 = Utf8               RUNNING\n+   #67 = Methodref          #68.#69       // java/lang/System.nanoTime:()J\n+   #68 = Class              #70           // java/lang/System\n+   #69 = NameAndType        #71:#41       // nanoTime:()J\n+   #70 = Utf8               java/lang/System\n+   #71 = Utf8               nanoTime\n+   #72 = Class              #73           // java/lang/RuntimeException\n+   #73 = Utf8               java/lang/RuntimeException\n+   #74 = String             #75           // Illegal running state has occurred.\n+   #75 = Utf8               Illegal running state has occurred.\n+   #76 = Methodref          #72.#11       // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;)V\n+   #77 = Fieldref           #26.#78       // org/apache/commons/lang3/time/StopWatch$SplitState.SPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+   #78 = NameAndType        #79:#30       // SPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+   #79 = Utf8               SPLIT\n+   #80 = Class              #81           // java/lang/IllegalStateException\n+   #81 = Utf8               java/lang/IllegalStateException\n+   #82 = String             #83           // Stopwatch must be split to get the split time.\n+   #83 = Utf8               Stopwatch must be split to get the split time.\n+   #84 = Methodref          #80.#11       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #85 = Methodref          #1.#86        // org/apache/commons/lang3/time/StopWatch.getSplitNanoTime:()J\n+   #86 = NameAndType        #87:#41       // getSplitNanoTime:()J\n+   #87 = Utf8               getSplitNanoTime\n+   #88 = Long               1000000l\n+   #90 = String             #91           // Stopwatch has not been started\n+   #91 = Utf8               Stopwatch has not been started\n+   #92 = Fieldref           #1.#93        // org/apache/commons/lang3/time/StopWatch.startTimeMillis:J\n+   #93 = NameAndType        #94:#60       // startTimeMillis:J\n+   #94 = Utf8               startTimeMillis\n+   #95 = Methodref          #1.#96        // org/apache/commons/lang3/time/StopWatch.getNanoTime:()J\n+   #96 = NameAndType        #97:#41       // getNanoTime:()J\n+   #97 = Utf8               getNanoTime\n+   #98 = Fieldref           #99.#100      // java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;\n+   #99 = Class              #101          // java/util/concurrent/TimeUnit\n+  #100 = NameAndType        #102:#103     // NANOSECONDS:Ljava/util/concurrent/TimeUnit;\n+  #101 = Utf8               java/util/concurrent/TimeUnit\n+  #102 = Utf8               NANOSECONDS\n+  #103 = Utf8               Ljava/util/concurrent/TimeUnit;\n+  #104 = Methodref          #99.#105      // java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J\n+  #105 = NameAndType        #106:#107     // convert:(JLjava/util/concurrent/TimeUnit;)J\n+  #106 = Utf8               convert\n+  #107 = Utf8               (JLjava/util/concurrent/TimeUnit;)J\n+  #108 = Methodref          #17.#109      // org/apache/commons/lang3/time/StopWatch$State.isStarted:()Z\n+  #109 = NameAndType        #110:#111     // isStarted:()Z\n+  #110 = Utf8               isStarted\n+  #111 = Utf8               ()Z\n+  #112 = Methodref          #17.#113      // org/apache/commons/lang3/time/StopWatch$State.isStopped:()Z\n+  #113 = NameAndType        #114:#111     // isStopped:()Z\n+  #114 = Utf8               isStopped\n+  #115 = Methodref          #17.#116      // org/apache/commons/lang3/time/StopWatch$State.isSuspended:()Z\n+  #116 = NameAndType        #117:#111     // isSuspended:()Z\n+  #117 = Utf8               isSuspended\n+  #118 = String             #119          // Stopwatch must be suspended to resume.\n+  #119 = Utf8               Stopwatch must be suspended to resume.\n+  #120 = String             #121          // Stopwatch is not running.\n+  #121 = Utf8               Stopwatch is not running.\n+  #122 = String             #123          // Stopwatch must be reset before being restarted.\n+  #123 = Utf8               Stopwatch must be reset before being restarted.\n+  #124 = String             #125          // Stopwatch already started.\n+  #125 = Utf8               Stopwatch already started.\n+  #126 = Methodref          #68.#127      // java/lang/System.currentTimeMillis:()J\n+  #127 = NameAndType        #128:#41      // currentTimeMillis:()J\n+  #128 = Utf8               currentTimeMillis\n+  #129 = String             #130          // Stopwatch must be running to suspend.\n+  #130 = Utf8               Stopwatch must be running to suspend.\n+  #131 = Class              #132          // org/apache/commons/lang3/StringUtils\n+  #132 = Utf8               org/apache/commons/lang3/StringUtils\n+  #133 = String             #134          //\n+  #134 = Utf8\n+  #135 = Methodref          #136.#137     // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+  #136 = Class              #138          // java/util/Objects\n+  #137 = NameAndType        #139:#140     // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+  #138 = Utf8               java/util/Objects\n+  #139 = Utf8               toString\n+  #140 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+  #141 = Methodref          #1.#142       // org/apache/commons/lang3/time/StopWatch.formatSplitTime:()Ljava/lang/String;\n+  #142 = NameAndType        #143:#144     // formatSplitTime:()Ljava/lang/String;\n+  #143 = Utf8               formatSplitTime\n+  #144 = Utf8               ()Ljava/lang/String;\n+  #145 = Methodref          #146.#147     // java/lang/String.isEmpty:()Z\n+  #146 = Class              #148          // java/lang/String\n+  #147 = NameAndType        #149:#111     // isEmpty:()Z\n+  #148 = Utf8               java/lang/String\n+  #149 = Utf8               isEmpty\n+  #150 = Class              #151          // java/lang/StringBuilder\n+  #151 = Utf8               java/lang/StringBuilder\n+  #152 = Methodref          #150.#4       // java/lang/StringBuilder.\"<init>\":()V\n+  #153 = Methodref          #150.#154     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #154 = NameAndType        #155:#156     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #155 = Utf8               append\n+  #156 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #157 = String             #158          //\n+  #158 = Utf8\n+  #159 = Methodref          #150.#160     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #160 = NameAndType        #139:#144     // toString:()Ljava/lang/String;\n+  #161 = Methodref          #1.#162       // org/apache/commons/lang3/time/StopWatch.formatTime:()Ljava/lang/String;\n+  #162 = NameAndType        #163:#144     // formatTime:()Ljava/lang/String;\n+  #163 = Utf8               formatTime\n+  #164 = String             #165          // Stopwatch has not been split.\n+  #165 = Utf8               Stopwatch has not been split.\n+  #166 = Utf8               NANO_2_MILLIS\n+  #167 = Utf8               ConstantValue\n+  #168 = Utf8               create\n+  #169 = Utf8               ()Lorg/apache/commons/lang3/time/StopWatch;\n+  #170 = Utf8               Code\n+  #171 = Utf8               LineNumberTable\n+  #172 = Utf8               createStarted\n+  #173 = Utf8               getMessage\n+  #174 = Utf8               StackMapTable\n+  #175 = Utf8               getStartTime\n+  #176 = Utf8               (Ljava/util/concurrent/TimeUnit;)J\n+  #177 = Utf8               reset\n+  #178 = Utf8               resume\n+  #179 = Utf8               split\n+  #180 = Utf8               stop\n+  #181 = Utf8               suspend\n+  #182 = Utf8               toSplitString\n+  #183 = Utf8               unsplit\n+  #184 = Utf8               SourceFile\n+  #185 = Utf8               StopWatch.java\n+  #186 = Utf8               InnerClasses\n+  #187 = Utf8               State\n+  #188 = Utf8               SplitState\n+  #189 = Class              #190          // org/apache/commons/lang3/time/StopWatch$1\n+  #190 = Utf8               org/apache/commons/lang3/time/StopWatch$1\n {\n   private static final long NANO_2_MILLIS = 1000000l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 1000000l\n \n   private final java.lang.String message;\n@@ -230,147 +230,147 @@\n   public static org.apache.commons.lang3.time.StopWatch create();\n     descriptor: ()Lorg/apache/commons/lang3/time/StopWatch;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n          0: new           #1                  // class org/apache/commons/lang3/time/StopWatch\n          3: dup\n-         4: invokespecial #2                  // Method \"<init>\":()V\n+         4: invokespecial #3                  // Method \"<init>\":()V\n          7: areturn\n       LineNumberTable:\n         line 174: 0\n \n   public static org.apache.commons.lang3.time.StopWatch createStarted();\n     descriptor: ()Lorg/apache/commons/lang3/time/StopWatch;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=0\n          0: new           #1                  // class org/apache/commons/lang3/time/StopWatch\n          3: dup\n-         4: invokespecial #2                  // Method \"<init>\":()V\n+         4: invokespecial #3                  // Method \"<init>\":()V\n          7: astore_0\n          8: aload_0\n-         9: invokevirtual #3                  // Method start:()V\n+         9: invokevirtual #7                  // Method start:()V\n         12: aload_0\n         13: areturn\n       LineNumberTable:\n         line 185: 0\n         line 186: 8\n         line 187: 12\n \n   public org.apache.commons.lang3.time.StopWatch();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aconst_null\n-         2: invokespecial #4                  // Method \"<init>\":(Ljava/lang/String;)V\n+         2: invokespecial #10                 // Method \"<init>\":(Ljava/lang/String;)V\n          5: return\n       LineNumberTable:\n         line 230: 0\n         line 231: 5\n \n   public org.apache.commons.lang3.time.StopWatch(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #5                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #13                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: getstatic     #6                  // Field org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n-         8: putfield      #7                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         5: getstatic     #16                 // Field org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         8: putfield      #22                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n         11: aload_0\n-        12: getstatic     #8                  // Field org/apache/commons/lang3/time/StopWatch$SplitState.UNSPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n-        15: putfield      #9                  // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+        12: getstatic     #25                 // Field org/apache/commons/lang3/time/StopWatch$SplitState.UNSPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+        15: putfield      #31                 // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n         18: aload_0\n         19: aload_1\n-        20: putfield      #10                 // Field message:Ljava/lang/String;\n+        20: putfield      #34                 // Field message:Ljava/lang/String;\n         23: return\n       LineNumberTable:\n         line 240: 0\n         line 200: 4\n         line 205: 11\n         line 241: 18\n         line 242: 23\n \n   public java.lang.String formatSplitTime();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #11                 // Method getSplitTime:()J\n-         4: invokestatic  #12                 // Method org/apache/commons/lang3/time/DurationFormatUtils.formatDurationHMS:(J)Ljava/lang/String;\n+         1: invokevirtual #38                 // Method getSplitTime:()J\n+         4: invokestatic  #42                 // Method org/apache/commons/lang3/time/DurationFormatUtils.formatDurationHMS:(J)Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 251: 0\n \n   public java.lang.String formatTime();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #13                 // Method getTime:()J\n-         4: invokestatic  #12                 // Method org/apache/commons/lang3/time/DurationFormatUtils.formatDurationHMS:(J)Ljava/lang/String;\n+         1: invokevirtual #48                 // Method getTime:()J\n+         4: invokestatic  #42                 // Method org/apache/commons/lang3/time/DurationFormatUtils.formatDurationHMS:(J)Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 261: 0\n \n   public java.lang.String getMessage();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field message:Ljava/lang/String;\n+         1: getfield      #34                 // Field message:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 271: 0\n \n   public long getNanoTime();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-         4: getstatic     #14                 // Field org/apache/commons/lang3/time/StopWatch$State.STOPPED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         1: getfield      #22                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         4: getstatic     #51                 // Field org/apache/commons/lang3/time/StopWatch$State.STOPPED:Lorg/apache/commons/lang3/time/StopWatch$State;\n          7: if_acmpeq     20\n         10: aload_0\n-        11: getfield      #7                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-        14: getstatic     #15                 // Field org/apache/commons/lang3/time/StopWatch$State.SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        11: getfield      #22                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        14: getstatic     #54                 // Field org/apache/commons/lang3/time/StopWatch$State.SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;\n         17: if_acmpne     30\n         20: aload_0\n-        21: getfield      #16                 // Field stopTime:J\n+        21: getfield      #57                 // Field stopTime:J\n         24: aload_0\n-        25: getfield      #17                 // Field startTime:J\n+        25: getfield      #61                 // Field startTime:J\n         28: lsub\n         29: lreturn\n         30: aload_0\n-        31: getfield      #7                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-        34: getstatic     #6                  // Field org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        31: getfield      #22                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        34: getstatic     #16                 // Field org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n         37: if_acmpne     42\n         40: lconst_0\n         41: lreturn\n         42: aload_0\n-        43: getfield      #7                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-        46: getstatic     #18                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        43: getfield      #22                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        46: getstatic     #64                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n         49: if_acmpne     61\n-        52: invokestatic  #19                 // Method java/lang/System.nanoTime:()J\n+        52: invokestatic  #67                 // Method java/lang/System.nanoTime:()J\n         55: aload_0\n-        56: getfield      #17                 // Field startTime:J\n+        56: getfield      #61                 // Field startTime:J\n         59: lsub\n         60: lreturn\n-        61: new           #20                 // class java/lang/RuntimeException\n+        61: new           #72                 // class java/lang/RuntimeException\n         64: dup\n-        65: ldc           #21                 // String Illegal running state has occurred.\n-        67: invokespecial #22                 // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;)V\n+        65: ldc           #74                 // String Illegal running state has occurred.\n+        67: invokespecial #76                 // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;)V\n         70: athrow\n       LineNumberTable:\n         line 288: 0\n         line 289: 20\n         line 290: 30\n         line 291: 40\n         line 292: 42\n@@ -384,26 +384,26 @@\n \n   public long getSplitNanoTime();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n-         4: getstatic     #23                 // Field org/apache/commons/lang3/time/StopWatch$SplitState.SPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+         1: getfield      #31                 // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+         4: getstatic     #77                 // Field org/apache/commons/lang3/time/StopWatch$SplitState.SPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n          7: if_acmpeq     20\n-        10: new           #24                 // class java/lang/IllegalStateException\n+        10: new           #80                 // class java/lang/IllegalStateException\n         13: dup\n-        14: ldc           #25                 // String Stopwatch must be split to get the split time.\n-        16: invokespecial #26                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        14: ldc           #82                 // String Stopwatch must be split to get the split time.\n+        16: invokespecial #84                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         19: athrow\n         20: aload_0\n-        21: getfield      #16                 // Field stopTime:J\n+        21: getfield      #57                 // Field stopTime:J\n         24: aload_0\n-        25: getfield      #17                 // Field startTime:J\n+        25: getfield      #61                 // Field startTime:J\n         28: lsub\n         29: lreturn\n       LineNumberTable:\n         line 314: 0\n         line 315: 10\n         line 317: 20\n       StackMapTable: number_of_entries = 1\n@@ -411,151 +411,151 @@\n \n   public long getSplitTime();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #27                 // Method getSplitNanoTime:()J\n-         4: ldc2_w        #28                 // long 1000000l\n+         1: invokevirtual #85                 // Method getSplitNanoTime:()J\n+         4: ldc2_w        #88                 // long 1000000l\n          7: ldiv\n          8: lreturn\n       LineNumberTable:\n         line 336: 0\n \n   public long getStartTime();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-         4: getstatic     #6                  // Field org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         1: getfield      #22                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         4: getstatic     #16                 // Field org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n          7: if_acmpne     20\n-        10: new           #24                 // class java/lang/IllegalStateException\n+        10: new           #80                 // class java/lang/IllegalStateException\n         13: dup\n-        14: ldc           #30                 // String Stopwatch has not been started\n-        16: invokespecial #26                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        14: ldc           #90                 // String Stopwatch has not been started\n+        16: invokespecial #84                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         19: athrow\n         20: aload_0\n-        21: getfield      #31                 // Field startTimeMillis:J\n+        21: getfield      #92                 // Field startTimeMillis:J\n         24: lreturn\n       LineNumberTable:\n         line 348: 0\n         line 349: 10\n         line 352: 20\n       StackMapTable: number_of_entries = 1\n         frame_type = 20 /* same */\n \n   public long getTime();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #32                 // Method getNanoTime:()J\n-         4: ldc2_w        #28                 // long 1000000l\n+         1: invokevirtual #95                 // Method getNanoTime:()J\n+         4: ldc2_w        #88                 // long 1000000l\n          7: ldiv\n          8: lreturn\n       LineNumberTable:\n         line 368: 0\n \n   public long getTime(java.util.concurrent.TimeUnit);\n     descriptor: (Ljava/util/concurrent/TimeUnit;)J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: invokevirtual #32                 // Method getNanoTime:()J\n-         5: getstatic     #33                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;\n-         8: invokevirtual #34                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J\n+         2: invokevirtual #95                 // Method getNanoTime:()J\n+         5: getstatic     #98                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;\n+         8: invokevirtual #104                // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J\n         11: lreturn\n       LineNumberTable:\n         line 388: 0\n \n   public boolean isStarted();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-         4: invokevirtual #35                 // Method org/apache/commons/lang3/time/StopWatch$State.isStarted:()Z\n+         1: getfield      #22                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         4: invokevirtual #108                // Method org/apache/commons/lang3/time/StopWatch$State.isStarted:()Z\n          7: ireturn\n       LineNumberTable:\n         line 400: 0\n \n   public boolean isStopped();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-         4: invokevirtual #36                 // Method org/apache/commons/lang3/time/StopWatch$State.isStopped:()Z\n+         1: getfield      #22                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         4: invokevirtual #112                // Method org/apache/commons/lang3/time/StopWatch$State.isStopped:()Z\n          7: ireturn\n       LineNumberTable:\n         line 413: 0\n \n   public boolean isSuspended();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-         4: invokevirtual #37                 // Method org/apache/commons/lang3/time/StopWatch$State.isSuspended:()Z\n+         1: getfield      #22                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         4: invokevirtual #115                // Method org/apache/commons/lang3/time/StopWatch$State.isSuspended:()Z\n          7: ireturn\n       LineNumberTable:\n         line 426: 0\n \n   public void reset();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #6                  // Field org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n-         4: putfield      #7                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         1: getstatic     #16                 // Field org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         4: putfield      #22                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n          7: aload_0\n-         8: getstatic     #8                  // Field org/apache/commons/lang3/time/StopWatch$SplitState.UNSPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n-        11: putfield      #9                  // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+         8: getstatic     #25                 // Field org/apache/commons/lang3/time/StopWatch$SplitState.UNSPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+        11: putfield      #31                 // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n         14: return\n       LineNumberTable:\n         line 439: 0\n         line 440: 7\n         line 441: 14\n \n   public void resume();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-         4: getstatic     #15                 // Field org/apache/commons/lang3/time/StopWatch$State.SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         1: getfield      #22                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         4: getstatic     #54                 // Field org/apache/commons/lang3/time/StopWatch$State.SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;\n          7: if_acmpeq     20\n-        10: new           #24                 // class java/lang/IllegalStateException\n+        10: new           #80                 // class java/lang/IllegalStateException\n         13: dup\n-        14: ldc           #38                 // String Stopwatch must be suspended to resume.\n-        16: invokespecial #26                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        14: ldc           #118                // String Stopwatch must be suspended to resume.\n+        16: invokespecial #84                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         19: athrow\n         20: aload_0\n         21: dup\n-        22: getfield      #17                 // Field startTime:J\n-        25: invokestatic  #19                 // Method java/lang/System.nanoTime:()J\n+        22: getfield      #61                 // Field startTime:J\n+        25: invokestatic  #67                 // Method java/lang/System.nanoTime:()J\n         28: aload_0\n-        29: getfield      #16                 // Field stopTime:J\n+        29: getfield      #57                 // Field stopTime:J\n         32: lsub\n         33: ladd\n-        34: putfield      #17                 // Field startTime:J\n+        34: putfield      #61                 // Field startTime:J\n         37: aload_0\n-        38: getstatic     #18                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n-        41: putfield      #7                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        38: getstatic     #64                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        41: putfield      #22                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n         44: return\n       LineNumberTable:\n         line 456: 0\n         line 457: 10\n         line 459: 20\n         line 460: 37\n         line 461: 44\n@@ -564,28 +564,28 @@\n \n   public void split();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-         4: getstatic     #18                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         1: getfield      #22                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         4: getstatic     #64                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n          7: if_acmpeq     20\n-        10: new           #24                 // class java/lang/IllegalStateException\n+        10: new           #80                 // class java/lang/IllegalStateException\n         13: dup\n-        14: ldc           #39                 // String Stopwatch is not running.\n-        16: invokespecial #26                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        14: ldc           #120                // String Stopwatch is not running.\n+        16: invokespecial #84                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         19: athrow\n         20: aload_0\n-        21: invokestatic  #19                 // Method java/lang/System.nanoTime:()J\n-        24: putfield      #16                 // Field stopTime:J\n+        21: invokestatic  #67                 // Method java/lang/System.nanoTime:()J\n+        24: putfield      #57                 // Field stopTime:J\n         27: aload_0\n-        28: getstatic     #23                 // Field org/apache/commons/lang3/time/StopWatch$SplitState.SPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n-        31: putfield      #9                  // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+        28: getstatic     #77                 // Field org/apache/commons/lang3/time/StopWatch$SplitState.SPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+        31: putfield      #31                 // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n         34: return\n       LineNumberTable:\n         line 477: 0\n         line 478: 10\n         line 480: 20\n         line 481: 27\n         line 482: 34\n@@ -594,40 +594,40 @@\n \n   public void start();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-         4: getstatic     #14                 // Field org/apache/commons/lang3/time/StopWatch$State.STOPPED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         1: getfield      #22                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         4: getstatic     #51                 // Field org/apache/commons/lang3/time/StopWatch$State.STOPPED:Lorg/apache/commons/lang3/time/StopWatch$State;\n          7: if_acmpne     20\n-        10: new           #24                 // class java/lang/IllegalStateException\n+        10: new           #80                 // class java/lang/IllegalStateException\n         13: dup\n-        14: ldc           #40                 // String Stopwatch must be reset before being restarted.\n-        16: invokespecial #26                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        14: ldc           #122                // String Stopwatch must be reset before being restarted.\n+        16: invokespecial #84                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         19: athrow\n         20: aload_0\n-        21: getfield      #7                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-        24: getstatic     #6                  // Field org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        21: getfield      #22                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        24: getstatic     #16                 // Field org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n         27: if_acmpeq     40\n-        30: new           #24                 // class java/lang/IllegalStateException\n+        30: new           #80                 // class java/lang/IllegalStateException\n         33: dup\n-        34: ldc           #41                 // String Stopwatch already started.\n-        36: invokespecial #26                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        34: ldc           #124                // String Stopwatch already started.\n+        36: invokespecial #84                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         39: athrow\n         40: aload_0\n-        41: invokestatic  #19                 // Method java/lang/System.nanoTime:()J\n-        44: putfield      #17                 // Field startTime:J\n+        41: invokestatic  #67                 // Method java/lang/System.nanoTime:()J\n+        44: putfield      #61                 // Field startTime:J\n         47: aload_0\n-        48: invokestatic  #42                 // Method java/lang/System.currentTimeMillis:()J\n-        51: putfield      #31                 // Field startTimeMillis:J\n+        48: invokestatic  #126                // Method java/lang/System.currentTimeMillis:()J\n+        51: putfield      #92                 // Field startTimeMillis:J\n         54: aload_0\n-        55: getstatic     #18                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n-        58: putfield      #7                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        55: getstatic     #64                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        58: putfield      #22                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n         61: return\n       LineNumberTable:\n         line 497: 0\n         line 498: 10\n         line 500: 20\n         line 501: 30\n         line 503: 40\n@@ -640,36 +640,36 @@\n \n   public void stop();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-         4: getstatic     #18                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         1: getfield      #22                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         4: getstatic     #64                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n          7: if_acmpeq     30\n         10: aload_0\n-        11: getfield      #7                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-        14: getstatic     #15                 // Field org/apache/commons/lang3/time/StopWatch$State.SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        11: getfield      #22                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        14: getstatic     #54                 // Field org/apache/commons/lang3/time/StopWatch$State.SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;\n         17: if_acmpeq     30\n-        20: new           #24                 // class java/lang/IllegalStateException\n+        20: new           #80                 // class java/lang/IllegalStateException\n         23: dup\n-        24: ldc           #39                 // String Stopwatch is not running.\n-        26: invokespecial #26                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        24: ldc           #120                // String Stopwatch is not running.\n+        26: invokespecial #84                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         29: athrow\n         30: aload_0\n-        31: getfield      #7                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-        34: getstatic     #18                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        31: getfield      #22                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        34: getstatic     #64                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n         37: if_acmpne     47\n         40: aload_0\n-        41: invokestatic  #19                 // Method java/lang/System.nanoTime:()J\n-        44: putfield      #16                 // Field stopTime:J\n+        41: invokestatic  #67                 // Method java/lang/System.nanoTime:()J\n+        44: putfield      #57                 // Field stopTime:J\n         47: aload_0\n-        48: getstatic     #14                 // Field org/apache/commons/lang3/time/StopWatch$State.STOPPED:Lorg/apache/commons/lang3/time/StopWatch$State;\n-        51: putfield      #7                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        48: getstatic     #51                 // Field org/apache/commons/lang3/time/StopWatch$State.STOPPED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        51: putfield      #22                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n         54: return\n       LineNumberTable:\n         line 521: 0\n         line 522: 20\n         line 524: 30\n         line 525: 40\n         line 527: 47\n@@ -680,28 +680,28 @@\n \n   public void suspend();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-         4: getstatic     #18                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         1: getfield      #22                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         4: getstatic     #64                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n          7: if_acmpeq     20\n-        10: new           #24                 // class java/lang/IllegalStateException\n+        10: new           #80                 // class java/lang/IllegalStateException\n         13: dup\n-        14: ldc           #43                 // String Stopwatch must be running to suspend.\n-        16: invokespecial #26                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        14: ldc           #129                // String Stopwatch must be running to suspend.\n+        16: invokespecial #84                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         19: athrow\n         20: aload_0\n-        21: invokestatic  #19                 // Method java/lang/System.nanoTime:()J\n-        24: putfield      #16                 // Field stopTime:J\n+        21: invokestatic  #67                 // Method java/lang/System.nanoTime:()J\n+        24: putfield      #57                 // Field stopTime:J\n         27: aload_0\n-        28: getstatic     #15                 // Field org/apache/commons/lang3/time/StopWatch$State.SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;\n-        31: putfield      #7                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        28: getstatic     #54                 // Field org/apache/commons/lang3/time/StopWatch$State.SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        31: putfield      #22                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n         34: return\n       LineNumberTable:\n         line 544: 0\n         line 545: 10\n         line 547: 20\n         line 548: 27\n         line 549: 34\n@@ -710,36 +710,36 @@\n \n   public java.lang.String toSplitString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field message:Ljava/lang/String;\n-         4: ldc           #45                 // String\n-         6: invokestatic  #46                 // Method java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+         1: getfield      #34                 // Field message:Ljava/lang/String;\n+         4: ldc           #133                // String\n+         6: invokestatic  #135                // Method java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n          9: astore_1\n         10: aload_0\n-        11: invokevirtual #47                 // Method formatSplitTime:()Ljava/lang/String;\n+        11: invokevirtual #141                // Method formatSplitTime:()Ljava/lang/String;\n         14: astore_2\n         15: aload_1\n-        16: invokevirtual #48                 // Method java/lang/String.isEmpty:()Z\n+        16: invokevirtual #145                // Method java/lang/String.isEmpty:()Z\n         19: ifeq          26\n         22: aload_2\n         23: goto          49\n-        26: new           #49                 // class java/lang/StringBuilder\n+        26: new           #150                // class java/lang/StringBuilder\n         29: dup\n-        30: invokespecial #50                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        30: invokespecial #152                // Method java/lang/StringBuilder.\"<init>\":()V\n         33: aload_1\n-        34: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        37: ldc           #52                 // String\n-        39: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        34: invokevirtual #153                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        37: ldc           #157                // String\n+        39: invokevirtual #153                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         42: aload_2\n-        43: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        46: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        43: invokevirtual #153                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        46: invokevirtual #159                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         49: areturn\n       LineNumberTable:\n         line 565: 0\n         line 566: 10\n         line 567: 15\n       StackMapTable: number_of_entries = 2\n         frame_type = 253 /* append */\n@@ -750,36 +750,36 @@\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field message:Ljava/lang/String;\n-         4: ldc           #45                 // String\n-         6: invokestatic  #46                 // Method java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+         1: getfield      #34                 // Field message:Ljava/lang/String;\n+         4: ldc           #133                // String\n+         6: invokestatic  #135                // Method java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n          9: astore_1\n         10: aload_0\n-        11: invokevirtual #54                 // Method formatTime:()Ljava/lang/String;\n+        11: invokevirtual #161                // Method formatTime:()Ljava/lang/String;\n         14: astore_2\n         15: aload_1\n-        16: invokevirtual #48                 // Method java/lang/String.isEmpty:()Z\n+        16: invokevirtual #145                // Method java/lang/String.isEmpty:()Z\n         19: ifeq          26\n         22: aload_2\n         23: goto          49\n-        26: new           #49                 // class java/lang/StringBuilder\n+        26: new           #150                // class java/lang/StringBuilder\n         29: dup\n-        30: invokespecial #50                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        30: invokespecial #152                // Method java/lang/StringBuilder.\"<init>\":()V\n         33: aload_1\n-        34: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        37: ldc           #52                 // String\n-        39: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        34: invokevirtual #153                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        37: ldc           #157                // String\n+        39: invokevirtual #153                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         42: aload_2\n-        43: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        46: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        43: invokevirtual #153                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        46: invokevirtual #159                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         49: areturn\n       LineNumberTable:\n         line 584: 0\n         line 585: 10\n         line 586: 15\n       StackMapTable: number_of_entries = 2\n         frame_type = 253 /* append */\n@@ -790,32 +790,32 @@\n \n   public void unsplit();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n-         4: getstatic     #23                 // Field org/apache/commons/lang3/time/StopWatch$SplitState.SPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+         1: getfield      #31                 // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+         4: getstatic     #77                 // Field org/apache/commons/lang3/time/StopWatch$SplitState.SPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n          7: if_acmpeq     20\n-        10: new           #24                 // class java/lang/IllegalStateException\n+        10: new           #80                 // class java/lang/IllegalStateException\n         13: dup\n-        14: ldc           #55                 // String Stopwatch has not been split.\n-        16: invokespecial #26                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        14: ldc           #164                // String Stopwatch has not been split.\n+        16: invokespecial #84                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         19: athrow\n         20: aload_0\n-        21: getstatic     #8                  // Field org/apache/commons/lang3/time/StopWatch$SplitState.UNSPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n-        24: putfield      #9                  // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+        21: getstatic     #25                 // Field org/apache/commons/lang3/time/StopWatch$SplitState.UNSPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+        24: putfield      #31                 // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n         27: return\n       LineNumberTable:\n         line 603: 0\n         line 604: 10\n         line 606: 20\n         line 607: 27\n       StackMapTable: number_of_entries = 1\n         frame_type = 20 /* same */\n }\n SourceFile: \"StopWatch.java\"\n InnerClasses:\n-  static #57;                             // class org/apache/commons/lang3/time/StopWatch$1\n-  private static abstract #60= #59 of #1; // State=class org/apache/commons/lang3/time/StopWatch$State of class org/apache/commons/lang3/time/StopWatch\n-  private static final #62= #61 of #1;    // SplitState=class org/apache/commons/lang3/time/StopWatch$SplitState of class org/apache/commons/lang3/time/StopWatch\n+  private static abstract #187= #17 of #1; // State=class org/apache/commons/lang3/time/StopWatch$State of class org/apache/commons/lang3/time/StopWatch\n+  private static final #188= #26 of #1;   // SplitState=class org/apache/commons/lang3/time/StopWatch$SplitState of class org/apache/commons/lang3/time/StopWatch\n+  static #189;                            // class org/apache/commons/lang3/time/StopWatch$1\n"}]}
