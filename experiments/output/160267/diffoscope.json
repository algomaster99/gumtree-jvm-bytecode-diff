{"diffoscope-json-version": 1, "source1": "first/ProxyWriter.class", "source2": "second/ProxyWriter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,8 +1,8 @@\n-  SHA-256 checksum 090dc654ef4236f44f2ccf41a26ed6b70f0e30bbd7d8c5228adcd9c763c6bbf4\n+  SHA-256 checksum 1bfb85b22b2e8958dbe6042f18ca434b27216421f997dd15fcc0c188c9bbefd2\n   Compiled from \"ProxyWriter.java\"\n public class org.apache.commons.io.output.ProxyWriter extends java.io.FilterWriter\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/io/output/ProxyWriter\n   super_class: #3                         // java/io/FilterWriter\n@@ -93,26 +93,26 @@\n    #83 = Methodref          #29.#84       // java/io/Writer.write:(Ljava/lang/String;II)V\n    #84 = NameAndType        #62:#82       // write:(Ljava/lang/String;II)V\n    #85 = Utf8               flush\n    #86 = Utf8               ()V\n    #87 = Methodref          #29.#88       // java/io/Writer.flush:()V\n    #88 = NameAndType        #85:#86       // flush:()V\n    #89 = Utf8               close\n-   #90 = NameAndType        #91:#92       // accept:(Lorg/apache/commons/io/output/ProxyWriter;)Lorg/apache/commons/io/function/IOConsumer;\n-   #91 = Utf8               accept\n-   #92 = Utf8               (Lorg/apache/commons/io/output/ProxyWriter;)Lorg/apache/commons/io/function/IOConsumer;\n-   #93 = InvokeDynamic      #0:#90        // #0:accept:(Lorg/apache/commons/io/output/ProxyWriter;)Lorg/apache/commons/io/function/IOConsumer;\n+   #90 = InvokeDynamic      #0:#91        // #0:accept:(Lorg/apache/commons/io/output/ProxyWriter;)Lorg/apache/commons/io/function/IOConsumer;\n+   #91 = NameAndType        #92:#93       // accept:(Lorg/apache/commons/io/output/ProxyWriter;)Lorg/apache/commons/io/function/IOConsumer;\n+   #92 = Utf8               accept\n+   #93 = Utf8               (Lorg/apache/commons/io/output/ProxyWriter;)Lorg/apache/commons/io/function/IOConsumer;\n    #94 = Methodref          #54.#95       // org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n    #95 = NameAndType        #89:#96       // close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n    #96 = Utf8               (Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n    #97 = Utf8               n\n-   #98 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-   #99 = Methodref          #1.#60        // org/apache/commons/io/output/ProxyWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-  #100 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-  #101 = Methodref          #1.#46        // org/apache/commons/io/output/ProxyWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+   #98 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+   #99 = Methodref          #1.#46        // org/apache/commons/io/output/ProxyWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+  #100 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+  #101 = Methodref          #1.#60        // org/apache/commons/io/output/ProxyWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n   #102 = Utf8               (C)Ljava/lang/Appendable;\n   #103 = Methodref          #1.#31        // org/apache/commons/io/output/ProxyWriter.append:(C)Ljava/io/Writer;\n   #104 = Utf8               SourceFile\n   #105 = Utf8               ProxyWriter.java\n   #106 = Utf8               BootstrapMethods\n   #107 = Methodref          #108.#110     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n   #108 = Class              #109          // java/lang/invoke/LambdaMetafactory\n@@ -569,15 +569,15 @@\n     Exceptions:\n       throws java.io.IOException\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #25                 // Field out:Ljava/io/Writer;\n          4: aload_0\n-         5: invokedynamic #93,  0             // InvokeDynamic #0:accept:(Lorg/apache/commons/io/output/ProxyWriter;)Lorg/apache/commons/io/function/IOConsumer;\n+         5: invokedynamic #90,  0             // InvokeDynamic #0:accept:(Lorg/apache/commons/io/output/ProxyWriter;)Lorg/apache/commons/io/function/IOConsumer;\n         10: invokestatic  #94                 // Method org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n         13: return\n       LineNumberTable:\n         line 208: 0\n         line 209: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -625,43 +625,43 @@\n       LineNumberTable:\n         line 260: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       2     0  this   Lorg/apache/commons/io/output/ProxyWriter;\n             0       2     1     e   Ljava/io/IOException;\n \n-  public java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException;\n-    descriptor: (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+  public java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException;\n+    descriptor: (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Exceptions:\n       throws java.io.IOException\n     Code:\n-      stack=2, locals=2, args_size=2\n+      stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #99                 // Method append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-         5: areturn\n+         2: iload_2\n+         3: iload_3\n+         4: invokevirtual #99                 // Method append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+         7: areturn\n       LineNumberTable:\n         line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n \n-  public java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException;\n-    descriptor: (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+  public java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException;\n+    descriptor: (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Exceptions:\n       throws java.io.IOException\n     Code:\n-      stack=4, locals=4, args_size=4\n+      stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: iload_2\n-         3: iload_3\n-         4: invokevirtual #101                // Method append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-         7: areturn\n+         2: invokevirtual #101                // Method append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+         5: areturn\n       LineNumberTable:\n         line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n \n   public java.lang.Appendable append(char) throws java.io.IOException;\n     descriptor: (C)Ljava/lang/Appendable;\n"}]}
