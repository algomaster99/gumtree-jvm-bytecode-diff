{"diffoscope-json-version": 1, "source1": "first/BaseNCodecOutputStream.class", "source2": "second/BaseNCodecOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,127 +1,127 @@\n-  SHA-256 checksum 4c9a1cce3d1f87409b2826ccc9ef670ebd14b1b98528171a232af774e61c2819\n+  SHA-256 checksum dca419164b95738c58751353bae61a13eaece8fe322ad9b91e83608c89542a19\n   Compiled from \"BaseNCodecOutputStream.java\"\n public class org.apache.commons.codec.binary.BaseNCodecOutputStream extends java.io.FilterOutputStream\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #26                         // org/apache/commons/codec/binary/BaseNCodecOutputStream\n-  super_class: #27                        // java/io/FilterOutputStream\n+  this_class: #10                         // org/apache/commons/codec/binary/BaseNCodecOutputStream\n+  super_class: #4                         // java/io/FilterOutputStream\n   interfaces: 0, fields: 4, methods: 8, attributes: 2\n Constant pool:\n-    #1 = Class              #72           // org/apache/commons/codec/binary/BaseNCodec\n-    #2 = Methodref          #27.#73       // java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-    #3 = Fieldref           #26.#74       // org/apache/commons/codec/binary/BaseNCodecOutputStream.singleByte:[B\n-    #4 = Class              #75           // org/apache/commons/codec/binary/BaseNCodec$Context\n-    #5 = Methodref          #4.#76        // org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n-    #6 = Fieldref           #26.#77       // org/apache/commons/codec/binary/BaseNCodecOutputStream.context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-    #7 = Fieldref           #26.#78       // org/apache/commons/codec/binary/BaseNCodecOutputStream.baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n-    #8 = Fieldref           #26.#79       // org/apache/commons/codec/binary/BaseNCodecOutputStream.doEncode:Z\n-    #9 = Methodref          #26.#80       // org/apache/commons/codec/binary/BaseNCodecOutputStream.eof:()V\n-   #10 = Methodref          #26.#81       // org/apache/commons/codec/binary/BaseNCodecOutputStream.flush:()V\n-   #11 = Fieldref           #26.#82       // org/apache/commons/codec/binary/BaseNCodecOutputStream.out:Ljava/io/OutputStream;\n-   #12 = Methodref          #83.#84       // java/io/OutputStream.close:()V\n-   #13 = Methodref          #1.#85        // org/apache/commons/codec/binary/BaseNCodec.encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-   #14 = Methodref          #1.#86        // org/apache/commons/codec/binary/BaseNCodec.decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-   #15 = Methodref          #26.#87       // org/apache/commons/codec/binary/BaseNCodecOutputStream.flush:(Z)V\n-   #16 = Methodref          #1.#88        // org/apache/commons/codec/binary/BaseNCodec.available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-   #17 = Methodref          #1.#89        // org/apache/commons/codec/binary/BaseNCodec.readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-   #18 = Methodref          #83.#90       // java/io/OutputStream.write:([BII)V\n-   #19 = Methodref          #83.#81       // java/io/OutputStream.flush:()V\n-   #20 = Methodref          #1.#91        // org/apache/commons/codec/binary/BaseNCodec.isStrictDecoding:()Z\n-   #21 = String             #65           // array\n-   #22 = Methodref          #92.#93       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #23 = Class              #94           // java/lang/IndexOutOfBoundsException\n-   #24 = Methodref          #23.#76       // java/lang/IndexOutOfBoundsException.\"<init>\":()V\n-   #25 = Methodref          #26.#90       // org/apache/commons/codec/binary/BaseNCodecOutputStream.write:([BII)V\n-   #26 = Class              #95           // org/apache/commons/codec/binary/BaseNCodecOutputStream\n-   #27 = Class              #96           // java/io/FilterOutputStream\n-   #28 = Utf8               doEncode\n-   #29 = Utf8               Z\n-   #30 = Utf8               baseNCodec\n-   #31 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec;\n-   #32 = Utf8               singleByte\n-   #33 = Utf8               [B\n-   #34 = Utf8               context\n-   #35 = Utf8               Context\n-   #36 = Utf8               InnerClasses\n-   #37 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-   #38 = Utf8               <init>\n-   #39 = Utf8               (Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n-   #40 = Utf8               Code\n-   #41 = Utf8               LineNumberTable\n-   #42 = Utf8               LocalVariableTable\n-   #43 = Utf8               this\n-   #44 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodecOutputStream;\n-   #45 = Utf8               output\n-   #46 = Utf8               Ljava/io/OutputStream;\n-   #47 = Utf8               basedCodec\n-   #48 = Utf8               close\n-   #49 = Utf8               ()V\n-   #50 = Utf8               Exceptions\n-   #51 = Class              #97           // java/io/IOException\n-   #52 = Utf8               eof\n-   #53 = Utf8               StackMapTable\n-   #54 = Utf8               flush\n-   #55 = Utf8               (Z)V\n-   #56 = Utf8               buf\n-   #57 = Utf8               c\n-   #58 = Utf8               I\n-   #59 = Utf8               propagate\n-   #60 = Utf8               avail\n-   #61 = Utf8               isStrictDecoding\n-   #62 = Utf8               ()Z\n-   #63 = Utf8               write\n-   #64 = Utf8               ([BII)V\n-   #65 = Utf8               array\n-   #66 = Utf8               offset\n-   #67 = Utf8               len\n-   #68 = Utf8               (I)V\n-   #69 = Utf8               i\n-   #70 = Utf8               SourceFile\n-   #71 = Utf8               BaseNCodecOutputStream.java\n-   #72 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n-   #73 = NameAndType        #38:#98       // \"<init>\":(Ljava/io/OutputStream;)V\n-   #74 = NameAndType        #32:#33       // singleByte:[B\n-   #75 = Utf8               org/apache/commons/codec/binary/BaseNCodec$Context\n-   #76 = NameAndType        #38:#49       // \"<init>\":()V\n-   #77 = NameAndType        #34:#37       // context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-   #78 = NameAndType        #30:#31       // baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n-   #79 = NameAndType        #28:#29       // doEncode:Z\n-   #80 = NameAndType        #52:#49       // eof:()V\n-   #81 = NameAndType        #54:#49       // flush:()V\n-   #82 = NameAndType        #99:#46       // out:Ljava/io/OutputStream;\n-   #83 = Class              #100          // java/io/OutputStream\n-   #84 = NameAndType        #48:#49       // close:()V\n-   #85 = NameAndType        #101:#102     // encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-   #86 = NameAndType        #103:#102     // decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-   #87 = NameAndType        #54:#55       // flush:(Z)V\n-   #88 = NameAndType        #104:#105     // available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-   #89 = NameAndType        #106:#107     // readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-   #90 = NameAndType        #63:#64       // write:([BII)V\n-   #91 = NameAndType        #61:#62       // isStrictDecoding:()Z\n-   #92 = Class              #108          // java/util/Objects\n-   #93 = NameAndType        #109:#110     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #94 = Utf8               java/lang/IndexOutOfBoundsException\n-   #95 = Utf8               org/apache/commons/codec/binary/BaseNCodecOutputStream\n-   #96 = Utf8               java/io/FilterOutputStream\n-   #97 = Utf8               java/io/IOException\n-   #98 = Utf8               (Ljava/io/OutputStream;)V\n-   #99 = Utf8               out\n-  #100 = Utf8               java/io/OutputStream\n-  #101 = Utf8               encode\n-  #102 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #103 = Utf8               decode\n-  #104 = Utf8               available\n-  #105 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-  #106 = Utf8               readResults\n-  #107 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-  #108 = Utf8               java/util/Objects\n-  #109 = Utf8               requireNonNull\n-  #110 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+    #1 = Class              #2            // org/apache/commons/codec/binary/BaseNCodec\n+    #2 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n+    #3 = Methodref          #4.#5         // java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+    #4 = Class              #6            // java/io/FilterOutputStream\n+    #5 = NameAndType        #7:#8         // \"<init>\":(Ljava/io/OutputStream;)V\n+    #6 = Utf8               java/io/FilterOutputStream\n+    #7 = Utf8               <init>\n+    #8 = Utf8               (Ljava/io/OutputStream;)V\n+    #9 = Fieldref           #10.#11       // org/apache/commons/codec/binary/BaseNCodecOutputStream.singleByte:[B\n+   #10 = Class              #12           // org/apache/commons/codec/binary/BaseNCodecOutputStream\n+   #11 = NameAndType        #13:#14       // singleByte:[B\n+   #12 = Utf8               org/apache/commons/codec/binary/BaseNCodecOutputStream\n+   #13 = Utf8               singleByte\n+   #14 = Utf8               [B\n+   #15 = Class              #16           // org/apache/commons/codec/binary/BaseNCodec$Context\n+   #16 = Utf8               org/apache/commons/codec/binary/BaseNCodec$Context\n+   #17 = Methodref          #15.#18       // org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n+   #18 = NameAndType        #7:#19        // \"<init>\":()V\n+   #19 = Utf8               ()V\n+   #20 = Fieldref           #10.#21       // org/apache/commons/codec/binary/BaseNCodecOutputStream.context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+   #21 = NameAndType        #22:#23       // context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+   #22 = Utf8               context\n+   #23 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+   #24 = Fieldref           #10.#25       // org/apache/commons/codec/binary/BaseNCodecOutputStream.baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+   #25 = NameAndType        #26:#27       // baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+   #26 = Utf8               baseNCodec\n+   #27 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec;\n+   #28 = Fieldref           #10.#29       // org/apache/commons/codec/binary/BaseNCodecOutputStream.doEncode:Z\n+   #29 = NameAndType        #30:#31       // doEncode:Z\n+   #30 = Utf8               doEncode\n+   #31 = Utf8               Z\n+   #32 = Methodref          #10.#33       // org/apache/commons/codec/binary/BaseNCodecOutputStream.eof:()V\n+   #33 = NameAndType        #34:#19       // eof:()V\n+   #34 = Utf8               eof\n+   #35 = Methodref          #10.#36       // org/apache/commons/codec/binary/BaseNCodecOutputStream.flush:()V\n+   #36 = NameAndType        #37:#19       // flush:()V\n+   #37 = Utf8               flush\n+   #38 = Fieldref           #10.#39       // org/apache/commons/codec/binary/BaseNCodecOutputStream.out:Ljava/io/OutputStream;\n+   #39 = NameAndType        #40:#41       // out:Ljava/io/OutputStream;\n+   #40 = Utf8               out\n+   #41 = Utf8               Ljava/io/OutputStream;\n+   #42 = Methodref          #43.#44       // java/io/OutputStream.close:()V\n+   #43 = Class              #45           // java/io/OutputStream\n+   #44 = NameAndType        #46:#19       // close:()V\n+   #45 = Utf8               java/io/OutputStream\n+   #46 = Utf8               close\n+   #47 = Methodref          #1.#48        // org/apache/commons/codec/binary/BaseNCodec.encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+   #48 = NameAndType        #49:#50       // encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+   #49 = Utf8               encode\n+   #50 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+   #51 = Methodref          #1.#52        // org/apache/commons/codec/binary/BaseNCodec.decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+   #52 = NameAndType        #53:#50       // decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+   #53 = Utf8               decode\n+   #54 = Methodref          #10.#55       // org/apache/commons/codec/binary/BaseNCodecOutputStream.flush:(Z)V\n+   #55 = NameAndType        #37:#56       // flush:(Z)V\n+   #56 = Utf8               (Z)V\n+   #57 = Methodref          #1.#58        // org/apache/commons/codec/binary/BaseNCodec.available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+   #58 = NameAndType        #59:#60       // available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+   #59 = Utf8               available\n+   #60 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+   #61 = Methodref          #1.#62        // org/apache/commons/codec/binary/BaseNCodec.readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+   #62 = NameAndType        #63:#64       // readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+   #63 = Utf8               readResults\n+   #64 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+   #65 = Methodref          #43.#66       // java/io/OutputStream.write:([BII)V\n+   #66 = NameAndType        #67:#68       // write:([BII)V\n+   #67 = Utf8               write\n+   #68 = Utf8               ([BII)V\n+   #69 = Methodref          #43.#36       // java/io/OutputStream.flush:()V\n+   #70 = Methodref          #1.#71        // org/apache/commons/codec/binary/BaseNCodec.isStrictDecoding:()Z\n+   #71 = NameAndType        #72:#73       // isStrictDecoding:()Z\n+   #72 = Utf8               isStrictDecoding\n+   #73 = Utf8               ()Z\n+   #74 = String             #75           // array\n+   #75 = Utf8               array\n+   #76 = Methodref          #77.#78       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #77 = Class              #79           // java/util/Objects\n+   #78 = NameAndType        #80:#81       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #79 = Utf8               java/util/Objects\n+   #80 = Utf8               requireNonNull\n+   #81 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #82 = Class              #83           // java/lang/IndexOutOfBoundsException\n+   #83 = Utf8               java/lang/IndexOutOfBoundsException\n+   #84 = Methodref          #82.#18       // java/lang/IndexOutOfBoundsException.\"<init>\":()V\n+   #85 = Methodref          #10.#66       // org/apache/commons/codec/binary/BaseNCodecOutputStream.write:([BII)V\n+   #86 = Utf8               (Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n+   #87 = Utf8               Code\n+   #88 = Utf8               LineNumberTable\n+   #89 = Utf8               LocalVariableTable\n+   #90 = Utf8               this\n+   #91 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodecOutputStream;\n+   #92 = Utf8               output\n+   #93 = Utf8               basedCodec\n+   #94 = Utf8               Exceptions\n+   #95 = Class              #96           // java/io/IOException\n+   #96 = Utf8               java/io/IOException\n+   #97 = Utf8               StackMapTable\n+   #98 = Utf8               buf\n+   #99 = Utf8               c\n+  #100 = Utf8               I\n+  #101 = Utf8               propagate\n+  #102 = Utf8               avail\n+  #103 = Utf8               offset\n+  #104 = Utf8               len\n+  #105 = Utf8               (I)V\n+  #106 = Utf8               i\n+  #107 = Utf8               SourceFile\n+  #108 = Utf8               BaseNCodecOutputStream.java\n+  #109 = Utf8               InnerClasses\n+  #110 = Utf8               Context\n {\n   private final boolean doEncode;\n     descriptor: Z\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final org.apache.commons.codec.binary.BaseNCodec baseNCodec;\n     descriptor: Lorg/apache/commons/codec/binary/BaseNCodec;\n@@ -138,30 +138,30 @@\n   public org.apache.commons.codec.binary.BaseNCodecOutputStream(java.io.OutputStream, org.apache.commons.codec.binary.BaseNCodec, boolean);\n     descriptor: (Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #2                  // Method java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+         2: invokespecial #3                  // Method java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n          5: aload_0\n          6: iconst_1\n          7: newarray       byte\n-         9: putfield      #3                  // Field singleByte:[B\n+         9: putfield      #9                  // Field singleByte:[B\n         12: aload_0\n-        13: new           #4                  // class org/apache/commons/codec/binary/BaseNCodec$Context\n+        13: new           #15                 // class org/apache/commons/codec/binary/BaseNCodec$Context\n         16: dup\n-        17: invokespecial #5                  // Method org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n-        20: putfield      #6                  // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+        17: invokespecial #17                 // Method org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n+        20: putfield      #20                 // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n         23: aload_0\n         24: aload_2\n-        25: putfield      #7                  // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+        25: putfield      #24                 // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n         28: aload_0\n         29: iload_3\n-        30: putfield      #8                  // Field doEncode:Z\n+        30: putfield      #28                 // Field doEncode:Z\n         33: return\n       LineNumberTable:\n         line 58: 0\n         line 46: 5\n         line 48: 12\n         line 59: 23\n         line 60: 28\n@@ -175,20 +175,20 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #9                  // Method eof:()V\n+         1: invokevirtual #32                 // Method eof:()V\n          4: aload_0\n-         5: invokevirtual #10                 // Method flush:()V\n+         5: invokevirtual #35                 // Method flush:()V\n          8: aload_0\n-         9: getfield      #11                 // Field out:Ljava/io/OutputStream;\n-        12: invokevirtual #12                 // Method java/io/OutputStream.close:()V\n+         9: getfield      #38                 // Field out:Ljava/io/OutputStream;\n+        12: invokevirtual #42                 // Method java/io/OutputStream.close:()V\n         15: return\n       LineNumberTable:\n         line 77: 0\n         line 78: 4\n         line 79: 8\n         line 80: 15\n       LocalVariableTable:\n@@ -199,35 +199,35 @@\n \n   public void eof() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field doEncode:Z\n+         1: getfield      #28                 // Field doEncode:Z\n          4: ifeq          27\n          7: aload_0\n-         8: getfield      #7                  // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+         8: getfield      #24                 // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n         11: aload_0\n-        12: getfield      #3                  // Field singleByte:[B\n+        12: getfield      #9                  // Field singleByte:[B\n         15: iconst_0\n         16: iconst_m1\n         17: aload_0\n-        18: getfield      #6                  // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-        21: invokevirtual #13                 // Method org/apache/commons/codec/binary/BaseNCodec.encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+        18: getfield      #20                 // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+        21: invokevirtual #47                 // Method org/apache/commons/codec/binary/BaseNCodec.encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n         24: goto          44\n         27: aload_0\n-        28: getfield      #7                  // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+        28: getfield      #24                 // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n         31: aload_0\n-        32: getfield      #3                  // Field singleByte:[B\n+        32: getfield      #9                  // Field singleByte:[B\n         35: iconst_0\n         36: iconst_m1\n         37: aload_0\n-        38: getfield      #6                  // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-        41: invokevirtual #14                 // Method org/apache/commons/codec/binary/BaseNCodec.decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+        38: getfield      #20                 // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+        41: invokevirtual #51                 // Method org/apache/commons/codec/binary/BaseNCodec.decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n         44: return\n       LineNumberTable:\n         line 91: 0\n         line 92: 7\n         line 94: 27\n         line 96: 44\n       LocalVariableTable:\n@@ -242,15 +242,15 @@\n   public void flush() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokespecial #15                 // Method flush:(Z)V\n+         2: invokespecial #54                 // Method flush:(Z)V\n          5: return\n       LineNumberTable:\n         line 106: 0\n         line 107: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/codec/binary/BaseNCodecOutputStream;\n@@ -259,46 +259,46 @@\n \n   private void flush(boolean) throws java.io.IOException;\n     descriptor: (Z)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=5, args_size=2\n          0: aload_0\n-         1: getfield      #7                  // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+         1: getfield      #24                 // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n          4: aload_0\n-         5: getfield      #6                  // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-         8: invokevirtual #16                 // Method org/apache/commons/codec/binary/BaseNCodec.available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+         5: getfield      #20                 // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+         8: invokevirtual #57                 // Method org/apache/commons/codec/binary/BaseNCodec.available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n         11: istore_2\n         12: iload_2\n         13: ifle          52\n         16: iload_2\n         17: newarray       byte\n         19: astore_3\n         20: aload_0\n-        21: getfield      #7                  // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+        21: getfield      #24                 // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n         24: aload_3\n         25: iconst_0\n         26: iload_2\n         27: aload_0\n-        28: getfield      #6                  // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-        31: invokevirtual #17                 // Method org/apache/commons/codec/binary/BaseNCodec.readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+        28: getfield      #20                 // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+        31: invokevirtual #61                 // Method org/apache/commons/codec/binary/BaseNCodec.readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n         34: istore        4\n         36: iload         4\n         38: ifle          52\n         41: aload_0\n-        42: getfield      #11                 // Field out:Ljava/io/OutputStream;\n+        42: getfield      #38                 // Field out:Ljava/io/OutputStream;\n         45: aload_3\n         46: iconst_0\n         47: iload         4\n-        49: invokevirtual #18                 // Method java/io/OutputStream.write:([BII)V\n+        49: invokevirtual #65                 // Method java/io/OutputStream.write:([BII)V\n         52: iload_1\n         53: ifeq          63\n         56: aload_0\n-        57: getfield      #11                 // Field out:Ljava/io/OutputStream;\n-        60: invokevirtual #19                 // Method java/io/OutputStream.flush:()V\n+        57: getfield      #38                 // Field out:Ljava/io/OutputStream;\n+        60: invokevirtual #69                 // Method java/io/OutputStream.flush:()V\n         63: return\n       LineNumberTable:\n         line 119: 0\n         line 120: 12\n         line 121: 16\n         line 122: 20\n         line 123: 36\n@@ -323,79 +323,79 @@\n \n   public boolean isStrictDecoding();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n-         4: invokevirtual #20                 // Method org/apache/commons/codec/binary/BaseNCodec.isStrictDecoding:()Z\n+         1: getfield      #24                 // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+         4: invokevirtual #70                 // Method org/apache/commons/codec/binary/BaseNCodec.isStrictDecoding:()Z\n          7: ireturn\n       LineNumberTable:\n         line 143: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/codec/binary/BaseNCodecOutputStream;\n \n   public void write(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=4, args_size=4\n          0: aload_1\n-         1: ldc           #21                 // String array\n-         3: invokestatic  #22                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #74                 // String array\n+         3: invokestatic  #76                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: iload_2\n          8: iflt          15\n         11: iload_3\n         12: ifge          23\n-        15: new           #23                 // class java/lang/IndexOutOfBoundsException\n+        15: new           #82                 // class java/lang/IndexOutOfBoundsException\n         18: dup\n-        19: invokespecial #24                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":()V\n+        19: invokespecial #84                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":()V\n         22: athrow\n         23: iload_2\n         24: aload_1\n         25: arraylength\n         26: if_icmpgt     37\n         29: iload_2\n         30: iload_3\n         31: iadd\n         32: aload_1\n         33: arraylength\n         34: if_icmple     45\n-        37: new           #23                 // class java/lang/IndexOutOfBoundsException\n+        37: new           #82                 // class java/lang/IndexOutOfBoundsException\n         40: dup\n-        41: invokespecial #24                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":()V\n+        41: invokespecial #84                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":()V\n         44: athrow\n         45: iload_3\n         46: ifle          92\n         49: aload_0\n-        50: getfield      #8                  // Field doEncode:Z\n+        50: getfield      #28                 // Field doEncode:Z\n         53: ifeq          73\n         56: aload_0\n-        57: getfield      #7                  // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+        57: getfield      #24                 // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n         60: aload_1\n         61: iload_2\n         62: iload_3\n         63: aload_0\n-        64: getfield      #6                  // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-        67: invokevirtual #13                 // Method org/apache/commons/codec/binary/BaseNCodec.encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+        64: getfield      #20                 // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+        67: invokevirtual #47                 // Method org/apache/commons/codec/binary/BaseNCodec.encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n         70: goto          87\n         73: aload_0\n-        74: getfield      #7                  // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+        74: getfield      #24                 // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n         77: aload_1\n         78: iload_2\n         79: iload_3\n         80: aload_0\n-        81: getfield      #6                  // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-        84: invokevirtual #14                 // Method org/apache/commons/codec/binary/BaseNCodec.decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+        81: getfield      #20                 // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+        84: invokevirtual #51                 // Method org/apache/commons/codec/binary/BaseNCodec.decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n         87: aload_0\n         88: iconst_0\n-        89: invokespecial #15                 // Method flush:(Z)V\n+        89: invokespecial #54                 // Method flush:(Z)V\n         92: return\n       LineNumberTable:\n         line 166: 0\n         line 167: 7\n         line 168: 15\n         line 169: 23\n         line 170: 37\n@@ -424,33 +424,33 @@\n \n   public void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #3                  // Field singleByte:[B\n+         1: getfield      #9                  // Field singleByte:[B\n          4: iconst_0\n          5: iload_1\n          6: i2b\n          7: bastore\n          8: aload_0\n          9: aload_0\n-        10: getfield      #3                  // Field singleByte:[B\n+        10: getfield      #9                  // Field singleByte:[B\n         13: iconst_0\n         14: iconst_1\n-        15: invokevirtual #25                 // Method write:([BII)V\n+        15: invokevirtual #85                 // Method write:([BII)V\n         18: return\n       LineNumberTable:\n         line 191: 0\n         line 192: 8\n         line 193: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0  this   Lorg/apache/commons/codec/binary/BaseNCodecOutputStream;\n             0      19     1     i   I\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"BaseNCodecOutputStream.java\"\n InnerClasses:\n-  static #35= #4 of #1;                   // Context=class org/apache/commons/codec/binary/BaseNCodec$Context of class org/apache/commons/codec/binary/BaseNCodec\n+  static #110= #15 of #1;                 // Context=class org/apache/commons/codec/binary/BaseNCodec$Context of class org/apache/commons/codec/binary/BaseNCodec\n"}]}
