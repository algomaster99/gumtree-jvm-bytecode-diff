{"diffoscope-json-version": 1, "source1": "first/BackgroundInitializer.class", "source2": "second/BackgroundInitializer.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,155 +1,155 @@\n-  SHA-256 checksum 13ecc31f9500b272d9acf4d4ea3cbf9a50d9faba66c47fa77d121c00c6fc676e\n+  SHA-256 checksum 1f0dac3acbd8168bb6d47b8e777ef91d97bbf9afee44fec5b0d0d7451d541151\n   Compiled from \"BackgroundInitializer.java\"\n public abstract class org.apache.commons.lang3.concurrent.BackgroundInitializer<T extends java.lang.Object> extends java.lang.Object implements org.apache.commons.lang3.concurrent.ConcurrentInitializer<T>\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #29                         // org/apache/commons/lang3/concurrent/BackgroundInitializer\n-  super_class: #30                        // java/lang/Object\n+  this_class: #2                          // org/apache/commons/lang3/concurrent/BackgroundInitializer\n+  super_class: #8                         // java/lang/Object\n   interfaces: 1, fields: 3, methods: 13, attributes: 3\n Constant pool:\n-    #1 = Methodref          #29.#73       // org/apache/commons/lang3/concurrent/BackgroundInitializer.\"<init>\":(Ljava/util/concurrent/ExecutorService;)V\n-    #2 = Methodref          #30.#74       // java/lang/Object.\"<init>\":()V\n-    #3 = Methodref          #29.#75       // org/apache/commons/lang3/concurrent/BackgroundInitializer.setExternalExecutor:(Ljava/util/concurrent/ExecutorService;)V\n-    #4 = Fieldref           #29.#76       // org/apache/commons/lang3/concurrent/BackgroundInitializer.externalExecutor:Ljava/util/concurrent/ExecutorService;\n-    #5 = Fieldref           #29.#77       // org/apache/commons/lang3/concurrent/BackgroundInitializer.future:Ljava/util/concurrent/Future;\n-    #6 = Methodref          #29.#78       // org/apache/commons/lang3/concurrent/BackgroundInitializer.isStarted:()Z\n-    #7 = Class              #79           // java/lang/IllegalStateException\n-    #8 = String             #80           // Cannot set ExecutorService after start()!\n-    #9 = Methodref          #7.#81        // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #10 = Methodref          #29.#82       // org/apache/commons/lang3/concurrent/BackgroundInitializer.getExternalExecutor:()Ljava/util/concurrent/ExecutorService;\n-   #11 = Fieldref           #29.#83       // org/apache/commons/lang3/concurrent/BackgroundInitializer.executor:Ljava/util/concurrent/ExecutorService;\n-   #12 = Methodref          #29.#84       // org/apache/commons/lang3/concurrent/BackgroundInitializer.createExecutor:()Ljava/util/concurrent/ExecutorService;\n-   #13 = Methodref          #29.#85       // org/apache/commons/lang3/concurrent/BackgroundInitializer.createTask:(Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable;\n-   #14 = InterfaceMethodref #53.#86       // java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n-   #15 = Methodref          #29.#87       // org/apache/commons/lang3/concurrent/BackgroundInitializer.getFuture:()Ljava/util/concurrent/Future;\n-   #16 = InterfaceMethodref #88.#89       // java/util/concurrent/Future.get:()Ljava/lang/Object;\n-   #17 = Class              #90           // java/util/concurrent/ExecutionException\n-   #18 = Methodref          #91.#92       // org/apache/commons/lang3/concurrent/ConcurrentUtils.handleCause:(Ljava/util/concurrent/ExecutionException;)V\n-   #19 = Class              #93           // java/lang/InterruptedException\n-   #20 = Methodref          #94.#95       // java/lang/Thread.currentThread:()Ljava/lang/Thread;\n-   #21 = Methodref          #94.#96       // java/lang/Thread.interrupt:()V\n-   #22 = Class              #97           // org/apache/commons/lang3/concurrent/ConcurrentException\n-   #23 = Methodref          #22.#98       // org/apache/commons/lang3/concurrent/ConcurrentException.\"<init>\":(Ljava/lang/Throwable;)V\n-   #24 = String             #99           // start() must be called first!\n-   #25 = Class              #100          // org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask\n-   #26 = Methodref          #25.#101      // org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask.\"<init>\":(Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;Ljava/util/concurrent/ExecutorService;)V\n-   #27 = Methodref          #29.#102      // org/apache/commons/lang3/concurrent/BackgroundInitializer.getTaskCount:()I\n-   #28 = Methodref          #103.#104     // java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;\n-   #29 = Class              #105          // org/apache/commons/lang3/concurrent/BackgroundInitializer\n-   #30 = Class              #106          // java/lang/Object\n-   #31 = Class              #107          // org/apache/commons/lang3/concurrent/ConcurrentInitializer\n-   #32 = Utf8               InitializationTask\n-   #33 = Utf8               InnerClasses\n-   #34 = Utf8               externalExecutor\n-   #35 = Utf8               Ljava/util/concurrent/ExecutorService;\n-   #36 = Utf8               executor\n-   #37 = Utf8               future\n-   #38 = Utf8               Ljava/util/concurrent/Future;\n-   #39 = Utf8               Signature\n-   #40 = Utf8               Ljava/util/concurrent/Future<TT;>;\n-   #41 = Utf8               <init>\n-   #42 = Utf8               ()V\n-   #43 = Utf8               Code\n-   #44 = Utf8               LineNumberTable\n-   #45 = Utf8               (Ljava/util/concurrent/ExecutorService;)V\n-   #46 = Utf8               getExternalExecutor\n-   #47 = Utf8               ()Ljava/util/concurrent/ExecutorService;\n-   #48 = Utf8               isStarted\n-   #49 = Utf8               ()Z\n-   #50 = Utf8               StackMapTable\n-   #51 = Utf8               setExternalExecutor\n-   #52 = Utf8               start\n-   #53 = Class              #108          // java/util/concurrent/ExecutorService\n-   #54 = Utf8               get\n-   #55 = Utf8               ()Ljava/lang/Object;\n-   #56 = Utf8               Exceptions\n-   #57 = Utf8               ()TT;\n-   #58 = Utf8               getFuture\n-   #59 = Utf8               ()Ljava/util/concurrent/Future;\n-   #60 = Utf8               ()Ljava/util/concurrent/Future<TT;>;\n-   #61 = Utf8               getActiveExecutor\n-   #62 = Utf8               getTaskCount\n-   #63 = Utf8               ()I\n-   #64 = Utf8               initialize\n-   #65 = Class              #109          // java/lang/Exception\n-   #66 = Utf8               createTask\n-   #67 = Utf8               (Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable;\n-   #68 = Utf8               (Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable<TT;>;\n-   #69 = Utf8               createExecutor\n-   #70 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;\n-   #71 = Utf8               SourceFile\n-   #72 = Utf8               BackgroundInitializer.java\n-   #73 = NameAndType        #41:#45       // \"<init>\":(Ljava/util/concurrent/ExecutorService;)V\n-   #74 = NameAndType        #41:#42       // \"<init>\":()V\n-   #75 = NameAndType        #51:#45       // setExternalExecutor:(Ljava/util/concurrent/ExecutorService;)V\n-   #76 = NameAndType        #34:#35       // externalExecutor:Ljava/util/concurrent/ExecutorService;\n-   #77 = NameAndType        #37:#38       // future:Ljava/util/concurrent/Future;\n-   #78 = NameAndType        #48:#49       // isStarted:()Z\n-   #79 = Utf8               java/lang/IllegalStateException\n-   #80 = Utf8               Cannot set ExecutorService after start()!\n-   #81 = NameAndType        #41:#110      // \"<init>\":(Ljava/lang/String;)V\n-   #82 = NameAndType        #46:#47       // getExternalExecutor:()Ljava/util/concurrent/ExecutorService;\n-   #83 = NameAndType        #36:#35       // executor:Ljava/util/concurrent/ExecutorService;\n-   #84 = NameAndType        #69:#47       // createExecutor:()Ljava/util/concurrent/ExecutorService;\n-   #85 = NameAndType        #66:#67       // createTask:(Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable;\n-   #86 = NameAndType        #111:#112     // submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n-   #87 = NameAndType        #58:#59       // getFuture:()Ljava/util/concurrent/Future;\n-   #88 = Class              #113          // java/util/concurrent/Future\n-   #89 = NameAndType        #54:#55       // get:()Ljava/lang/Object;\n-   #90 = Utf8               java/util/concurrent/ExecutionException\n-   #91 = Class              #114          // org/apache/commons/lang3/concurrent/ConcurrentUtils\n-   #92 = NameAndType        #115:#116     // handleCause:(Ljava/util/concurrent/ExecutionException;)V\n-   #93 = Utf8               java/lang/InterruptedException\n-   #94 = Class              #117          // java/lang/Thread\n-   #95 = NameAndType        #118:#119     // currentThread:()Ljava/lang/Thread;\n-   #96 = NameAndType        #120:#42      // interrupt:()V\n-   #97 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentException\n-   #98 = NameAndType        #41:#121      // \"<init>\":(Ljava/lang/Throwable;)V\n-   #99 = Utf8               start() must be called first!\n-  #100 = Utf8               org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask\n-  #101 = NameAndType        #41:#122      // \"<init>\":(Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;Ljava/util/concurrent/ExecutorService;)V\n-  #102 = NameAndType        #62:#63       // getTaskCount:()I\n-  #103 = Class              #123          // java/util/concurrent/Executors\n-  #104 = NameAndType        #124:#125     // newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;\n-  #105 = Utf8               org/apache/commons/lang3/concurrent/BackgroundInitializer\n-  #106 = Utf8               java/lang/Object\n-  #107 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentInitializer\n-  #108 = Utf8               java/util/concurrent/ExecutorService\n-  #109 = Utf8               java/lang/Exception\n-  #110 = Utf8               (Ljava/lang/String;)V\n-  #111 = Utf8               submit\n-  #112 = Utf8               (Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n-  #113 = Utf8               java/util/concurrent/Future\n-  #114 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentUtils\n-  #115 = Utf8               handleCause\n-  #116 = Utf8               (Ljava/util/concurrent/ExecutionException;)V\n-  #117 = Utf8               java/lang/Thread\n-  #118 = Utf8               currentThread\n-  #119 = Utf8               ()Ljava/lang/Thread;\n-  #120 = Utf8               interrupt\n-  #121 = Utf8               (Ljava/lang/Throwable;)V\n-  #122 = Utf8               (Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;Ljava/util/concurrent/ExecutorService;)V\n-  #123 = Utf8               java/util/concurrent/Executors\n-  #124 = Utf8               newFixedThreadPool\n-  #125 = Utf8               (I)Ljava/util/concurrent/ExecutorService;\n+    #1 = Methodref          #2.#3         // org/apache/commons/lang3/concurrent/BackgroundInitializer.\"<init>\":(Ljava/util/concurrent/ExecutorService;)V\n+    #2 = Class              #4            // org/apache/commons/lang3/concurrent/BackgroundInitializer\n+    #3 = NameAndType        #5:#6         // \"<init>\":(Ljava/util/concurrent/ExecutorService;)V\n+    #4 = Utf8               org/apache/commons/lang3/concurrent/BackgroundInitializer\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (Ljava/util/concurrent/ExecutorService;)V\n+    #7 = Methodref          #8.#9         // java/lang/Object.\"<init>\":()V\n+    #8 = Class              #10           // java/lang/Object\n+    #9 = NameAndType        #5:#11        // \"<init>\":()V\n+   #10 = Utf8               java/lang/Object\n+   #11 = Utf8               ()V\n+   #12 = Methodref          #2.#13        // org/apache/commons/lang3/concurrent/BackgroundInitializer.setExternalExecutor:(Ljava/util/concurrent/ExecutorService;)V\n+   #13 = NameAndType        #14:#6        // setExternalExecutor:(Ljava/util/concurrent/ExecutorService;)V\n+   #14 = Utf8               setExternalExecutor\n+   #15 = Fieldref           #2.#16        // org/apache/commons/lang3/concurrent/BackgroundInitializer.externalExecutor:Ljava/util/concurrent/ExecutorService;\n+   #16 = NameAndType        #17:#18       // externalExecutor:Ljava/util/concurrent/ExecutorService;\n+   #17 = Utf8               externalExecutor\n+   #18 = Utf8               Ljava/util/concurrent/ExecutorService;\n+   #19 = Fieldref           #2.#20        // org/apache/commons/lang3/concurrent/BackgroundInitializer.future:Ljava/util/concurrent/Future;\n+   #20 = NameAndType        #21:#22       // future:Ljava/util/concurrent/Future;\n+   #21 = Utf8               future\n+   #22 = Utf8               Ljava/util/concurrent/Future;\n+   #23 = Methodref          #2.#24        // org/apache/commons/lang3/concurrent/BackgroundInitializer.isStarted:()Z\n+   #24 = NameAndType        #25:#26       // isStarted:()Z\n+   #25 = Utf8               isStarted\n+   #26 = Utf8               ()Z\n+   #27 = Class              #28           // java/lang/IllegalStateException\n+   #28 = Utf8               java/lang/IllegalStateException\n+   #29 = String             #30           // Cannot set ExecutorService after start()!\n+   #30 = Utf8               Cannot set ExecutorService after start()!\n+   #31 = Methodref          #27.#32       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #32 = NameAndType        #5:#33        // \"<init>\":(Ljava/lang/String;)V\n+   #33 = Utf8               (Ljava/lang/String;)V\n+   #34 = Methodref          #2.#35        // org/apache/commons/lang3/concurrent/BackgroundInitializer.getExternalExecutor:()Ljava/util/concurrent/ExecutorService;\n+   #35 = NameAndType        #36:#37       // getExternalExecutor:()Ljava/util/concurrent/ExecutorService;\n+   #36 = Utf8               getExternalExecutor\n+   #37 = Utf8               ()Ljava/util/concurrent/ExecutorService;\n+   #38 = Fieldref           #2.#39        // org/apache/commons/lang3/concurrent/BackgroundInitializer.executor:Ljava/util/concurrent/ExecutorService;\n+   #39 = NameAndType        #40:#18       // executor:Ljava/util/concurrent/ExecutorService;\n+   #40 = Utf8               executor\n+   #41 = Methodref          #2.#42        // org/apache/commons/lang3/concurrent/BackgroundInitializer.createExecutor:()Ljava/util/concurrent/ExecutorService;\n+   #42 = NameAndType        #43:#37       // createExecutor:()Ljava/util/concurrent/ExecutorService;\n+   #43 = Utf8               createExecutor\n+   #44 = Methodref          #2.#45        // org/apache/commons/lang3/concurrent/BackgroundInitializer.createTask:(Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable;\n+   #45 = NameAndType        #46:#47       // createTask:(Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable;\n+   #46 = Utf8               createTask\n+   #47 = Utf8               (Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable;\n+   #48 = InterfaceMethodref #49.#50       // java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n+   #49 = Class              #51           // java/util/concurrent/ExecutorService\n+   #50 = NameAndType        #52:#53       // submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n+   #51 = Utf8               java/util/concurrent/ExecutorService\n+   #52 = Utf8               submit\n+   #53 = Utf8               (Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n+   #54 = Methodref          #2.#55        // org/apache/commons/lang3/concurrent/BackgroundInitializer.getFuture:()Ljava/util/concurrent/Future;\n+   #55 = NameAndType        #56:#57       // getFuture:()Ljava/util/concurrent/Future;\n+   #56 = Utf8               getFuture\n+   #57 = Utf8               ()Ljava/util/concurrent/Future;\n+   #58 = InterfaceMethodref #59.#60       // java/util/concurrent/Future.get:()Ljava/lang/Object;\n+   #59 = Class              #61           // java/util/concurrent/Future\n+   #60 = NameAndType        #62:#63       // get:()Ljava/lang/Object;\n+   #61 = Utf8               java/util/concurrent/Future\n+   #62 = Utf8               get\n+   #63 = Utf8               ()Ljava/lang/Object;\n+   #64 = Class              #65           // java/util/concurrent/ExecutionException\n+   #65 = Utf8               java/util/concurrent/ExecutionException\n+   #66 = Methodref          #67.#68       // org/apache/commons/lang3/concurrent/ConcurrentUtils.handleCause:(Ljava/util/concurrent/ExecutionException;)V\n+   #67 = Class              #69           // org/apache/commons/lang3/concurrent/ConcurrentUtils\n+   #68 = NameAndType        #70:#71       // handleCause:(Ljava/util/concurrent/ExecutionException;)V\n+   #69 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentUtils\n+   #70 = Utf8               handleCause\n+   #71 = Utf8               (Ljava/util/concurrent/ExecutionException;)V\n+   #72 = Class              #73           // java/lang/InterruptedException\n+   #73 = Utf8               java/lang/InterruptedException\n+   #74 = Methodref          #75.#76       // java/lang/Thread.currentThread:()Ljava/lang/Thread;\n+   #75 = Class              #77           // java/lang/Thread\n+   #76 = NameAndType        #78:#79       // currentThread:()Ljava/lang/Thread;\n+   #77 = Utf8               java/lang/Thread\n+   #78 = Utf8               currentThread\n+   #79 = Utf8               ()Ljava/lang/Thread;\n+   #80 = Methodref          #75.#81       // java/lang/Thread.interrupt:()V\n+   #81 = NameAndType        #82:#11       // interrupt:()V\n+   #82 = Utf8               interrupt\n+   #83 = Class              #84           // org/apache/commons/lang3/concurrent/ConcurrentException\n+   #84 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentException\n+   #85 = Methodref          #83.#86       // org/apache/commons/lang3/concurrent/ConcurrentException.\"<init>\":(Ljava/lang/Throwable;)V\n+   #86 = NameAndType        #5:#87        // \"<init>\":(Ljava/lang/Throwable;)V\n+   #87 = Utf8               (Ljava/lang/Throwable;)V\n+   #88 = String             #89           // start() must be called first!\n+   #89 = Utf8               start() must be called first!\n+   #90 = Class              #91           // org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask\n+   #91 = Utf8               org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask\n+   #92 = Methodref          #90.#93       // org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask.\"<init>\":(Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;Ljava/util/concurrent/ExecutorService;)V\n+   #93 = NameAndType        #5:#94        // \"<init>\":(Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;Ljava/util/concurrent/ExecutorService;)V\n+   #94 = Utf8               (Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;Ljava/util/concurrent/ExecutorService;)V\n+   #95 = Methodref          #2.#96        // org/apache/commons/lang3/concurrent/BackgroundInitializer.getTaskCount:()I\n+   #96 = NameAndType        #97:#98       // getTaskCount:()I\n+   #97 = Utf8               getTaskCount\n+   #98 = Utf8               ()I\n+   #99 = Methodref          #100.#101     // java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;\n+  #100 = Class              #102          // java/util/concurrent/Executors\n+  #101 = NameAndType        #103:#104     // newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;\n+  #102 = Utf8               java/util/concurrent/Executors\n+  #103 = Utf8               newFixedThreadPool\n+  #104 = Utf8               (I)Ljava/util/concurrent/ExecutorService;\n+  #105 = Class              #106          // org/apache/commons/lang3/concurrent/ConcurrentInitializer\n+  #106 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentInitializer\n+  #107 = Utf8               Signature\n+  #108 = Utf8               Ljava/util/concurrent/Future<TT;>;\n+  #109 = Utf8               Code\n+  #110 = Utf8               LineNumberTable\n+  #111 = Utf8               StackMapTable\n+  #112 = Utf8               start\n+  #113 = Utf8               Exceptions\n+  #114 = Utf8               ()TT;\n+  #115 = Utf8               ()Ljava/util/concurrent/Future<TT;>;\n+  #116 = Utf8               getActiveExecutor\n+  #117 = Utf8               initialize\n+  #118 = Class              #119          // java/lang/Exception\n+  #119 = Utf8               java/lang/Exception\n+  #120 = Utf8               (Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable<TT;>;\n+  #121 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;\n+  #122 = Utf8               SourceFile\n+  #123 = Utf8               BackgroundInitializer.java\n+  #124 = Utf8               InnerClasses\n+  #125 = Utf8               InitializationTask\n {\n   private java.util.concurrent.ExecutorService externalExecutor;\n     descriptor: Ljava/util/concurrent/ExecutorService;\n     flags: (0x0002) ACC_PRIVATE\n \n   private java.util.concurrent.ExecutorService executor;\n     descriptor: Ljava/util/concurrent/ExecutorService;\n     flags: (0x0002) ACC_PRIVATE\n \n   private java.util.concurrent.Future<T> future;\n     descriptor: Ljava/util/concurrent/Future;\n     flags: (0x0002) ACC_PRIVATE\n-    Signature: #40                          // Ljava/util/concurrent/Future<TT;>;\n+    Signature: #108                         // Ljava/util/concurrent/Future<TT;>;\n \n   protected org.apache.commons.lang3.concurrent.BackgroundInitializer();\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n@@ -162,42 +162,42 @@\n \n   protected org.apache.commons.lang3.concurrent.BackgroundInitializer(java.util.concurrent.ExecutorService);\n     descriptor: (Ljava/util/concurrent/ExecutorService;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #2                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #7                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: invokevirtual #3                  // Method setExternalExecutor:(Ljava/util/concurrent/ExecutorService;)V\n+         6: invokevirtual #12                 // Method setExternalExecutor:(Ljava/util/concurrent/ExecutorService;)V\n          9: return\n       LineNumberTable:\n         line 114: 0\n         line 115: 4\n         line 116: 9\n \n   public final synchronized java.util.concurrent.ExecutorService getExternalExecutor();\n     descriptor: ()Ljava/util/concurrent/ExecutorService;\n     flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SYNCHRONIZED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field externalExecutor:Ljava/util/concurrent/ExecutorService;\n+         1: getfield      #15                 // Field externalExecutor:Ljava/util/concurrent/ExecutorService;\n          4: areturn\n       LineNumberTable:\n         line 124: 0\n \n   public synchronized boolean isStarted();\n     descriptor: ()Z\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field future:Ljava/util/concurrent/Future;\n+         1: getfield      #19                 // Field future:Ljava/util/concurrent/Future;\n          4: ifnull        11\n          7: iconst_1\n          8: goto          12\n         11: iconst_0\n         12: ireturn\n       LineNumberTable:\n         line 135: 0\n@@ -208,24 +208,24 @@\n \n   public final synchronized void setExternalExecutor(java.util.concurrent.ExecutorService);\n     descriptor: (Ljava/util/concurrent/ExecutorService;)V\n     flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SYNCHRONIZED\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #6                  // Method isStarted:()Z\n+         1: invokevirtual #23                 // Method isStarted:()Z\n          4: ifeq          17\n-         7: new           #7                  // class java/lang/IllegalStateException\n+         7: new           #27                 // class java/lang/IllegalStateException\n         10: dup\n-        11: ldc           #8                  // String Cannot set ExecutorService after start()!\n-        13: invokespecial #9                  // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #29                 // String Cannot set ExecutorService after start()!\n+        13: invokespecial #31                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n         18: aload_1\n-        19: putfield      #4                  // Field externalExecutor:Ljava/util/concurrent/ExecutorService;\n+        19: putfield      #15                 // Field externalExecutor:Ljava/util/concurrent/ExecutorService;\n         22: return\n       LineNumberTable:\n         line 154: 0\n         line 155: 7\n         line 159: 17\n         line 160: 22\n       StackMapTable: number_of_entries = 1\n@@ -233,40 +233,40 @@\n \n   public synchronized boolean start();\n     descriptor: ()Z\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=4, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #6                  // Method isStarted:()Z\n+         1: invokevirtual #23                 // Method isStarted:()Z\n          4: ifne          57\n          7: aload_0\n          8: aload_0\n-         9: invokevirtual #10                 // Method getExternalExecutor:()Ljava/util/concurrent/ExecutorService;\n-        12: putfield      #11                 // Field executor:Ljava/util/concurrent/ExecutorService;\n+         9: invokevirtual #34                 // Method getExternalExecutor:()Ljava/util/concurrent/ExecutorService;\n+        12: putfield      #38                 // Field executor:Ljava/util/concurrent/ExecutorService;\n         15: aload_0\n-        16: getfield      #11                 // Field executor:Ljava/util/concurrent/ExecutorService;\n+        16: getfield      #38                 // Field executor:Ljava/util/concurrent/ExecutorService;\n         19: ifnonnull     35\n         22: aload_0\n         23: aload_0\n-        24: invokespecial #12                 // Method createExecutor:()Ljava/util/concurrent/ExecutorService;\n+        24: invokespecial #41                 // Method createExecutor:()Ljava/util/concurrent/ExecutorService;\n         27: dup\n         28: astore_1\n-        29: putfield      #11                 // Field executor:Ljava/util/concurrent/ExecutorService;\n+        29: putfield      #38                 // Field executor:Ljava/util/concurrent/ExecutorService;\n         32: goto          37\n         35: aconst_null\n         36: astore_1\n         37: aload_0\n         38: aload_0\n-        39: getfield      #11                 // Field executor:Ljava/util/concurrent/ExecutorService;\n+        39: getfield      #38                 // Field executor:Ljava/util/concurrent/ExecutorService;\n         42: aload_0\n         43: aload_1\n-        44: invokespecial #13                 // Method createTask:(Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable;\n-        47: invokeinterface #14,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n-        52: putfield      #5                  // Field future:Ljava/util/concurrent/Future;\n+        44: invokespecial #44                 // Method createTask:(Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable;\n+        47: invokeinterface #48,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n+        52: putfield      #19                 // Field future:Ljava/util/concurrent/Future;\n         55: iconst_1\n         56: ireturn\n         57: iconst_0\n         58: ireturn\n       LineNumberTable:\n         line 174: 0\n         line 179: 7\n@@ -286,29 +286,29 @@\n \n   public T get() throws org.apache.commons.lang3.concurrent.ConcurrentException;\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #15                 // Method getFuture:()Ljava/util/concurrent/Future;\n-         4: invokeinterface #16,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;\n+         1: invokevirtual #54                 // Method getFuture:()Ljava/util/concurrent/Future;\n+         4: invokeinterface #58,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;\n          9: areturn\n         10: astore_1\n         11: aload_1\n-        12: invokestatic  #18                 // Method org/apache/commons/lang3/concurrent/ConcurrentUtils.handleCause:(Ljava/util/concurrent/ExecutionException;)V\n+        12: invokestatic  #66                 // Method org/apache/commons/lang3/concurrent/ConcurrentUtils.handleCause:(Ljava/util/concurrent/ExecutionException;)V\n         15: aconst_null\n         16: areturn\n         17: astore_1\n-        18: invokestatic  #20                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;\n-        21: invokevirtual #21                 // Method java/lang/Thread.interrupt:()V\n-        24: new           #22                 // class org/apache/commons/lang3/concurrent/ConcurrentException\n+        18: invokestatic  #74                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;\n+        21: invokevirtual #80                 // Method java/lang/Thread.interrupt:()V\n+        24: new           #83                 // class org/apache/commons/lang3/concurrent/ConcurrentException\n         27: dup\n         28: aload_1\n-        29: invokespecial #23                 // Method org/apache/commons/lang3/concurrent/ConcurrentException.\"<init>\":(Ljava/lang/Throwable;)V\n+        29: invokespecial #85                 // Method org/apache/commons/lang3/concurrent/ConcurrentException.\"<init>\":(Ljava/lang/Throwable;)V\n         32: athrow\n       Exception table:\n          from    to  target type\n              0     9    10   Class java/util/concurrent/ExecutionException\n              0     9    17   Class java/lang/InterruptedException\n       LineNumberTable:\n         line 211: 0\n@@ -321,47 +321,47 @@\n       StackMapTable: number_of_entries = 2\n         frame_type = 74 /* same_locals_1_stack_item */\n           stack = [ class java/util/concurrent/ExecutionException ]\n         frame_type = 70 /* same_locals_1_stack_item */\n           stack = [ class java/lang/InterruptedException ]\n     Exceptions:\n       throws org.apache.commons.lang3.concurrent.ConcurrentException\n-    Signature: #57                          // ()TT;\n+    Signature: #114                         // ()TT;\n \n   public synchronized java.util.concurrent.Future<T> getFuture();\n     descriptor: ()Ljava/util/concurrent/Future;\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field future:Ljava/util/concurrent/Future;\n+         1: getfield      #19                 // Field future:Ljava/util/concurrent/Future;\n          4: ifnonnull     17\n-         7: new           #7                  // class java/lang/IllegalStateException\n+         7: new           #27                 // class java/lang/IllegalStateException\n         10: dup\n-        11: ldc           #24                 // String start() must be called first!\n-        13: invokespecial #9                  // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #88                 // String start() must be called first!\n+        13: invokespecial #31                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: getfield      #5                  // Field future:Ljava/util/concurrent/Future;\n+        18: getfield      #19                 // Field future:Ljava/util/concurrent/Future;\n         21: areturn\n       LineNumberTable:\n         line 231: 0\n         line 232: 7\n         line 235: 17\n       StackMapTable: number_of_entries = 1\n         frame_type = 17 /* same */\n-    Signature: #60                          // ()Ljava/util/concurrent/Future<TT;>;\n+    Signature: #115                         // ()Ljava/util/concurrent/Future<TT;>;\n \n   protected final synchronized java.util.concurrent.ExecutorService getActiveExecutor();\n     descriptor: ()Ljava/util/concurrent/ExecutorService;\n     flags: (0x0034) ACC_PROTECTED, ACC_FINAL, ACC_SYNCHRONIZED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field executor:Ljava/util/concurrent/ExecutorService;\n+         1: getfield      #38                 // Field executor:Ljava/util/concurrent/ExecutorService;\n          4: areturn\n       LineNumberTable:\n         line 248: 0\n \n   protected int getTaskCount();\n     descriptor: ()I\n     flags: (0x0004) ACC_PROTECTED\n@@ -373,40 +373,40 @@\n         line 263: 0\n \n   protected abstract T initialize() throws java.lang.Exception;\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0404) ACC_PROTECTED, ACC_ABSTRACT\n     Exceptions:\n       throws java.lang.Exception\n-    Signature: #57                          // ()TT;\n+    Signature: #114                         // ()TT;\n \n   private java.util.concurrent.Callable<T> createTask(java.util.concurrent.ExecutorService);\n     descriptor: (Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=2, args_size=2\n-         0: new           #25                 // class org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask\n+         0: new           #90                 // class org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask\n          3: dup\n          4: aload_0\n          5: aload_1\n-         6: invokespecial #26                 // Method org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask.\"<init>\":(Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;Ljava/util/concurrent/ExecutorService;)V\n+         6: invokespecial #92                 // Method org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask.\"<init>\":(Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;Ljava/util/concurrent/ExecutorService;)V\n          9: areturn\n       LineNumberTable:\n         line 290: 0\n-    Signature: #68                          // (Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable<TT;>;\n+    Signature: #120                         // (Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable<TT;>;\n \n   private java.util.concurrent.ExecutorService createExecutor();\n     descriptor: ()Ljava/util/concurrent/ExecutorService;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #27                 // Method getTaskCount:()I\n-         4: invokestatic  #28                 // Method java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;\n+         1: invokevirtual #95                 // Method getTaskCount:()I\n+         4: invokestatic  #99                 // Method java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;\n          7: areturn\n       LineNumberTable:\n         line 300: 0\n }\n-Signature: #70                          // <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;\n+Signature: #121                         // <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;\n SourceFile: \"BackgroundInitializer.java\"\n InnerClasses:\n-  private #32= #25 of #29;                // InitializationTask=class org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask of class org/apache/commons/lang3/concurrent/BackgroundInitializer\n+  private #125= #90 of #2;                // InitializationTask=class org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask of class org/apache/commons/lang3/concurrent/BackgroundInitializer\n"}]}
