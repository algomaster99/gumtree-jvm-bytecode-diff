{"diffoscope-json-version": 1, "source1": "first/FastDatePrinter$PaddedNumberField.class", "source2": "second/FastDatePrinter$PaddedNumberField.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -5,27 +5,27 @@\n import java.util.Calendar;\n \n private static class PaddedNumberField implements FastDatePrinter.NumberRule\n {\n     private final int mField;\n     private final int mSize;\n     \n-    PaddedNumberField(final int field, final int size) {\n-        if (size < 3) {\n+    PaddedNumberField(final int mField, final int mSize) {\n+        if (mSize < 3) {\n             throw new IllegalArgumentException();\n         }\n-        this.mField = field;\n-        this.mSize = size;\n+        this.mField = mField;\n+        this.mSize = mSize;\n     }\n     \n     public int estimateLength() {\n         return this.mSize;\n     }\n     \n-    public void appendTo(final Appendable buffer, final Calendar calendar) throws IOException {\n-        this.appendTo(buffer, calendar.get(this.mField));\n+    public void appendTo(final Appendable appendable, final Calendar calendar) throws IOException {\n+        this.appendTo(appendable, calendar.get(this.mField));\n     }\n     \n-    public final void appendTo(final Appendable buffer, final int value) throws IOException {\n-        FastDatePrinter.access$100(buffer, value, this.mSize);\n+    public final void appendTo(final Appendable appendable, final int n) throws IOException {\n+        FastDatePrinter.access$100(appendable, n, this.mSize);\n     }\n }\n"}]}
