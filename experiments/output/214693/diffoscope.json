{"diffoscope-json-version": 1, "source1": "first/PUSH.class", "source2": "second/PUSH.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,114 +1,114 @@\n \n package org.apache.bcel.generic;\n \n public final class PUSH implements CompoundInstruction, VariableLengthInstruction, InstructionConstants\n {\n     private Instruction instruction;\n     \n-    public PUSH(final ConstantPoolGen cp, final int value) {\n-        if (value >= -1 && value <= 5) {\n-            this.instruction = InstructionConst.getInstruction(3 + value);\n+    public PUSH(final ConstantPoolGen constantPoolGen, final int n) {\n+        if (n >= -1 && n <= 5) {\n+            this.instruction = InstructionConst.getInstruction(3 + n);\n         }\n-        else if (Instruction.isValidByte(value)) {\n-            this.instruction = (Instruction)new BIPUSH((byte)value);\n+        else if (Instruction.isValidByte(n)) {\n+            this.instruction = (Instruction)new BIPUSH((byte)n);\n         }\n-        else if (Instruction.isValidShort(value)) {\n-            this.instruction = (Instruction)new SIPUSH((short)value);\n+        else if (Instruction.isValidShort(n)) {\n+            this.instruction = (Instruction)new SIPUSH((short)n);\n         }\n         else {\n-            this.instruction = (Instruction)new LDC(cp.addInteger(value));\n+            this.instruction = (Instruction)new LDC(constantPoolGen.addInteger(n));\n         }\n     }\n     \n-    public PUSH(final ConstantPoolGen cp, final boolean value) {\n-        this.instruction = InstructionConst.getInstruction(3 + (value ? 1 : 0));\n+    public PUSH(final ConstantPoolGen constantPoolGen, final boolean b) {\n+        this.instruction = InstructionConst.getInstruction(3 + (b ? 1 : 0));\n     }\n     \n-    public PUSH(final ConstantPoolGen cp, final float value) {\n-        if (value == 0.0) {\n+    public PUSH(final ConstantPoolGen constantPoolGen, final float n) {\n+        if (n == 0.0) {\n             this.instruction = InstructionConst.FCONST_0;\n         }\n-        else if (value == 1.0) {\n+        else if (n == 1.0) {\n             this.instruction = InstructionConst.FCONST_1;\n         }\n-        else if (value == 2.0) {\n+        else if (n == 2.0) {\n             this.instruction = InstructionConst.FCONST_2;\n         }\n         else {\n-            this.instruction = (Instruction)new LDC(cp.addFloat(value));\n+            this.instruction = (Instruction)new LDC(constantPoolGen.addFloat(n));\n         }\n     }\n     \n-    public PUSH(final ConstantPoolGen cp, final long value) {\n-        if (value == 0L) {\n+    public PUSH(final ConstantPoolGen constantPoolGen, final long n) {\n+        if (n == 0L) {\n             this.instruction = InstructionConst.LCONST_0;\n         }\n-        else if (value == 1L) {\n+        else if (n == 1L) {\n             this.instruction = InstructionConst.LCONST_1;\n         }\n         else {\n-            this.instruction = (Instruction)new LDC2_W(cp.addLong(value));\n+            this.instruction = (Instruction)new LDC2_W(constantPoolGen.addLong(n));\n         }\n     }\n     \n-    public PUSH(final ConstantPoolGen cp, final double value) {\n-        if (value == 0.0) {\n+    public PUSH(final ConstantPoolGen constantPoolGen, final double n) {\n+        if (n == 0.0) {\n             this.instruction = InstructionConst.DCONST_0;\n         }\n-        else if (value == 1.0) {\n+        else if (n == 1.0) {\n             this.instruction = InstructionConst.DCONST_1;\n         }\n         else {\n-            this.instruction = (Instruction)new LDC2_W(cp.addDouble(value));\n+            this.instruction = (Instruction)new LDC2_W(constantPoolGen.addDouble(n));\n         }\n     }\n     \n-    public PUSH(final ConstantPoolGen cp, final String value) {\n-        if (value == null) {\n+    public PUSH(final ConstantPoolGen constantPoolGen, final String s) {\n+        if (s == null) {\n             this.instruction = InstructionConst.ACONST_NULL;\n         }\n         else {\n-            this.instruction = (Instruction)new LDC(cp.addString(value));\n+            this.instruction = (Instruction)new LDC(constantPoolGen.addString(s));\n         }\n     }\n     \n-    public PUSH(final ConstantPoolGen cp, final ObjectType value) {\n-        if (value == null) {\n+    public PUSH(final ConstantPoolGen constantPoolGen, final ObjectType objectType) {\n+        if (objectType == null) {\n             this.instruction = InstructionConst.ACONST_NULL;\n         }\n         else {\n-            this.instruction = (Instruction)new LDC(cp.addClass(value));\n+            this.instruction = (Instruction)new LDC(constantPoolGen.addClass(objectType));\n         }\n     }\n     \n-    public PUSH(final ConstantPoolGen cp, final Number value) {\n-        if (value instanceof Integer || value instanceof Short || value instanceof Byte) {\n-            this.instruction = new PUSH(cp, value.intValue()).instruction;\n+    public PUSH(final ConstantPoolGen constantPoolGen, final Number obj) {\n+        if (obj instanceof Integer || obj instanceof Short || obj instanceof Byte) {\n+            this.instruction = new PUSH(constantPoolGen, obj.intValue()).instruction;\n         }\n-        else if (value instanceof Double) {\n-            this.instruction = new PUSH(cp, value.doubleValue()).instruction;\n+        else if (obj instanceof Double) {\n+            this.instruction = new PUSH(constantPoolGen, obj.doubleValue()).instruction;\n         }\n-        else if (value instanceof Float) {\n-            this.instruction = new PUSH(cp, value.floatValue()).instruction;\n+        else if (obj instanceof Float) {\n+            this.instruction = new PUSH(constantPoolGen, obj.floatValue()).instruction;\n         }\n         else {\n-            if (!(value instanceof Long)) {\n-                throw new ClassGenException(\"What's this: \" + value);\n+            if (!(obj instanceof Long)) {\n+                throw new ClassGenException(\"What's this: \" + obj);\n             }\n-            this.instruction = new PUSH(cp, value.longValue()).instruction;\n+            this.instruction = new PUSH(constantPoolGen, obj.longValue()).instruction;\n         }\n     }\n     \n-    public PUSH(final ConstantPoolGen cp, final Character value) {\n-        this(cp, (int)value);\n+    public PUSH(final ConstantPoolGen constantPoolGen, final Character c) {\n+        this(constantPoolGen, (int)c);\n     }\n     \n-    public PUSH(final ConstantPoolGen cp, final Boolean value) {\n-        this(cp, (boolean)value);\n+    public PUSH(final ConstantPoolGen constantPoolGen, final Boolean b) {\n+        this(constantPoolGen, (boolean)b);\n     }\n     \n     public InstructionList getInstructionList() {\n         return new InstructionList(this.instruction);\n     }\n     \n     public Instruction getInstruction() {\n"}]}
