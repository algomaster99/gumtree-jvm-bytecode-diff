{"diffoscope-json-version": 1, "source1": "first/XmlStreamReader.class", "source2": "second/XmlStreamReader.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,150 +1,150 @@\n-  SHA-256 checksum 26f47da7f576b9d5f15743491b3d8cb45a88c2115e59148ff5e3d9cc3cee4bea\n+  SHA-256 checksum 48ae101e4f072210abead5a7a14c62e386633fa99c1600a0f83000d9110a632e\n   Compiled from \"XmlStreamReader.java\"\n public class org.apache.commons.io.input.XmlStreamReader extends java.io.Reader\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #89                         // org/apache/commons/io/input/XmlStreamReader\n   super_class: #133                       // java/io/Reader\n   interfaces: 0, fields: 21, methods: 24, attributes: 1\n Constant pool:\n-    #1 = String             #264          // ;\n-    #2 = Methodref          #17.#265      // java/lang/String.indexOf:(Ljava/lang/String;)I\n-    #3 = Methodref          #17.#266      // java/lang/String.substring:(I)Ljava/lang/String;\n-    #4 = Fieldref           #89.#267      // org/apache/commons/io/input/XmlStreamReader.CHARSET_PATTERN:Ljava/util/regex/Pattern;\n-    #5 = Methodref          #131.#268     // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-    #6 = Methodref          #269.#270     // java/util/regex/Matcher.find:()Z\n-    #7 = Methodref          #269.#271     // java/util/regex/Matcher.group:(I)Ljava/lang/String;\n-    #8 = Fieldref           #272.#273     // java/util/Locale.ROOT:Ljava/util/Locale;\n-    #9 = Methodref          #17.#274      // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-   #10 = Methodref          #17.#275      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #11 = Methodref          #17.#276      // java/lang/String.trim:()Ljava/lang/String;\n-   #12 = Methodref          #13.#277      // org/apache/commons/io/IOUtils.byteArray:()[B\n-   #13 = Class              #278          // org/apache/commons/io/IOUtils\n-   #14 = Methodref          #279.#280     // java/io/InputStream.mark:(I)V\n-   #15 = Methodref          #279.#281     // java/io/InputStream.read:([BII)I\n-   #16 = String             #282          //\n-   #17 = Class              #283          // java/lang/String\n-   #18 = Methodref          #17.#284      // java/lang/String.\"<init>\":([BIILjava/lang/String;)V\n-   #19 = Methodref          #17.#285      // java/lang/String.indexOf:(I)I\n-   #20 = Class              #286          // java/io/IOException\n-   #21 = String             #287          // Unexpected end of XML stream\n-   #22 = Methodref          #20.#288      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #23 = Class              #289          // java/lang/StringBuilder\n-   #24 = Methodref          #23.#290      // java/lang/StringBuilder.\"<init>\":()V\n-   #25 = String             #291          // XML prolog or ROOT element not found on first\n-   #26 = Methodref          #23.#292      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #27 = Methodref          #23.#293      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #28 = String             #294          //  bytes\n-   #29 = Methodref          #23.#295      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #30 = Methodref          #279.#296     // java/io/InputStream.reset:()V\n-   #31 = Class              #297          // java/io/BufferedReader\n-   #32 = Class              #298          // java/io/StringReader\n-   #33 = Methodref          #32.#288      // java/io/StringReader.\"<init>\":(Ljava/lang/String;)V\n-   #34 = Methodref          #31.#299      // java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n-   #35 = Class              #300          // java/lang/StringBuffer\n-   #36 = Methodref          #35.#290      // java/lang/StringBuffer.\"<init>\":()V\n-   #37 = Methodref          #31.#301      // java/io/BufferedReader.readLine:()Ljava/lang/String;\n-   #38 = Methodref          #35.#302      // java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n-   #39 = Fieldref           #89.#303      // org/apache/commons/io/input/XmlStreamReader.ENCODING_PATTERN:Ljava/util/regex/Pattern;\n-   #40 = Methodref          #17.#304      // java/lang/String.length:()I\n-   #41 = String             #305          // application/xml\n-   #42 = Methodref          #17.#306      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #43 = String             #307          // application/xml-dtd\n-   #44 = String             #308          // application/xml-external-parsed-entity\n-   #45 = String             #309          // application/\n-   #46 = Methodref          #17.#310      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-   #47 = String             #311          // +xml\n-   #48 = Methodref          #17.#312      // java/lang/String.endsWith:(Ljava/lang/String;)Z\n-   #49 = String             #313          // text/xml\n-   #50 = String             #314          // text/xml-external-parsed-entity\n-   #51 = String             #315          // text/\n-   #52 = Class              #316          // java/io/FileInputStream\n-   #53 = String             #206          // file\n-   #54 = Methodref          #317.#318     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #55 = Class              #319          // java/io/File\n-   #56 = Methodref          #52.#320      // java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n-   #57 = Methodref          #89.#321      // org/apache/commons/io/input/XmlStreamReader.\"<init>\":(Ljava/io/InputStream;)V\n-   #58 = Methodref          #89.#322      // org/apache/commons/io/input/XmlStreamReader.\"<init>\":(Ljava/io/InputStream;Z)V\n-   #59 = Methodref          #89.#323      // org/apache/commons/io/input/XmlStreamReader.\"<init>\":(Ljava/io/InputStream;ZLjava/lang/String;)V\n-   #60 = Methodref          #133.#290     // java/io/Reader.\"<init>\":()V\n-   #61 = String             #191          // inputStream\n-   #62 = Fieldref           #89.#324      // org/apache/commons/io/input/XmlStreamReader.defaultEncoding:Ljava/lang/String;\n-   #63 = Class              #325          // org/apache/commons/io/input/BOMInputStream\n-   #64 = Class              #326          // java/io/BufferedInputStream\n-   #65 = Methodref          #64.#327      // java/io/BufferedInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-   #66 = Fieldref           #89.#328      // org/apache/commons/io/input/XmlStreamReader.BOMS:[Lorg/apache/commons/io/ByteOrderMark;\n-   #67 = Methodref          #63.#329      // org/apache/commons/io/input/BOMInputStream.\"<init>\":(Ljava/io/InputStream;Z[Lorg/apache/commons/io/ByteOrderMark;)V\n-   #68 = Fieldref           #89.#330      // org/apache/commons/io/input/XmlStreamReader.XML_GUESS_BYTES:[Lorg/apache/commons/io/ByteOrderMark;\n-   #69 = Methodref          #89.#331      // org/apache/commons/io/input/XmlStreamReader.doRawStream:(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Z)Ljava/lang/String;\n-   #70 = Fieldref           #89.#332      // org/apache/commons/io/input/XmlStreamReader.encoding:Ljava/lang/String;\n-   #71 = Class              #333          // java/io/InputStreamReader\n-   #72 = Methodref          #71.#334      // java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #73 = Fieldref           #89.#335      // org/apache/commons/io/input/XmlStreamReader.reader:Ljava/io/Reader;\n-   #74 = Methodref          #89.#336      // org/apache/commons/io/input/XmlStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;Z)V\n-   #75 = Methodref          #89.#337      // org/apache/commons/io/input/XmlStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;ZLjava/lang/String;)V\n-   #76 = Methodref          #89.#338      // org/apache/commons/io/input/XmlStreamReader.processHttpStream:(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Ljava/lang/String;Z)Ljava/lang/String;\n-   #77 = String             #220          // url\n-   #78 = Class              #339          // java/net/URL\n-   #79 = Methodref          #78.#340      // java/net/URL.openConnection:()Ljava/net/URLConnection;\n-   #80 = Methodref          #89.#341      // org/apache/commons/io/input/XmlStreamReader.\"<init>\":(Ljava/net/URLConnection;Ljava/lang/String;)V\n-   #81 = String             #223          // conn\n-   #82 = Methodref          #342.#343     // java/net/URLConnection.getContentType:()Ljava/lang/String;\n-   #83 = Methodref          #342.#344     // java/net/URLConnection.getInputStream:()Ljava/io/InputStream;\n-   #84 = Class              #345          // java/net/HttpURLConnection\n-   #85 = Methodref          #89.#346      // org/apache/commons/io/input/XmlStreamReader.getContentTypeMime:(Ljava/lang/String;)Ljava/lang/String;\n-   #86 = Methodref          #89.#347      // org/apache/commons/io/input/XmlStreamReader.getContentTypeEncoding:(Ljava/lang/String;)Ljava/lang/String;\n-   #87 = Methodref          #89.#348      // org/apache/commons/io/input/XmlStreamReader.isAppXml:(Ljava/lang/String;)Z\n-   #88 = Methodref          #89.#349      // org/apache/commons/io/input/XmlStreamReader.isTextXml:(Ljava/lang/String;)Z\n-   #89 = Class              #350          // org/apache/commons/io/input/XmlStreamReader\n-   #90 = String             #351          // Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], Invalid MIME\n-   #91 = Class              #352          // java/lang/Object\n-   #92 = Methodref          #353.#354     // java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #93 = Class              #355          // org/apache/commons/io/input/XmlStreamReaderException\n-   #94 = Methodref          #93.#356      // org/apache/commons/io/input/XmlStreamReaderException.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-   #95 = Methodref          #89.#357      // org/apache/commons/io/input/XmlStreamReader.calculateRawEncoding:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-   #96 = String             #358          // US-ASCII\n-   #97 = String             #359          // UTF-16BE\n-   #98 = String             #360          // UTF-16LE\n-   #99 = String             #361          // Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], BOM must be NULL\n-  #100 = String             #362          // UTF-16\n-  #101 = String             #363          // Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], encoding mismatch\n-  #102 = String             #364          // UTF-32BE\n-  #103 = String             #365          // UTF-32LE\n-  #104 = String             #366          // UTF-32\n-  #105 = String             #367          // UTF-8\n-  #106 = String             #368          // Invalid encoding, BOM [{0}] XML guess [{1}] XML prolog [{2}] encoding mismatch\n-  #107 = Methodref          #93.#369      // org/apache/commons/io/input/XmlStreamReaderException.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #108 = String             #370          // Invalid encoding, BOM [{0}] XML guess [{1}] XML prolog [{2}] unknown BOM\n-  #109 = Methodref          #133.#371     // java/io/Reader.close:()V\n-  #110 = String             #372          // text/html\n-  #111 = Methodref          #93.#373      // org/apache/commons/io/input/XmlStreamReaderException.getBomEncoding:()Ljava/lang/String;\n-  #112 = Methodref          #93.#374      // org/apache/commons/io/input/XmlStreamReaderException.getXmlGuessEncoding:()Ljava/lang/String;\n-  #113 = Methodref          #93.#375      // org/apache/commons/io/input/XmlStreamReaderException.getXmlEncoding:()Ljava/lang/String;\n-  #114 = Methodref          #89.#376      // org/apache/commons/io/input/XmlStreamReader.calculateHttpEncoding:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;\n-  #115 = Methodref          #93.#377      // org/apache/commons/io/input/XmlStreamReaderException.getContentTypeEncoding:()Ljava/lang/String;\n-  #116 = Methodref          #63.#378      // org/apache/commons/io/input/BOMInputStream.getBOMCharsetName:()Ljava/lang/String;\n-  #117 = Methodref          #89.#379      // org/apache/commons/io/input/XmlStreamReader.getXmlProlog:(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;\n-  #118 = Methodref          #89.#380      // org/apache/commons/io/input/XmlStreamReader.doLenientDetection:(Ljava/lang/String;Lorg/apache/commons/io/input/XmlStreamReaderException;)Ljava/lang/String;\n-  #119 = Methodref          #133.#381     // java/io/Reader.read:([CII)I\n-  #120 = Class              #382          // org/apache/commons/io/ByteOrderMark\n-  #121 = Fieldref           #120.#383     // org/apache/commons/io/ByteOrderMark.UTF_8:Lorg/apache/commons/io/ByteOrderMark;\n-  #122 = Fieldref           #120.#384     // org/apache/commons/io/ByteOrderMark.UTF_16BE:Lorg/apache/commons/io/ByteOrderMark;\n-  #123 = Fieldref           #120.#385     // org/apache/commons/io/ByteOrderMark.UTF_16LE:Lorg/apache/commons/io/ByteOrderMark;\n-  #124 = Fieldref           #120.#386     // org/apache/commons/io/ByteOrderMark.UTF_32BE:Lorg/apache/commons/io/ByteOrderMark;\n-  #125 = Fieldref           #120.#387     // org/apache/commons/io/ByteOrderMark.UTF_32LE:Lorg/apache/commons/io/ByteOrderMark;\n-  #126 = Methodref          #120.#388     // org/apache/commons/io/ByteOrderMark.\"<init>\":(Ljava/lang/String;[I)V\n-  #127 = String             #389          // CP1047\n-  #128 = String             #390          // charset=[\\\"\\']?([.[^; \\\"\\']]*)[\\\"\\']?\n-  #129 = Methodref          #131.#391     // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #130 = String             #392          // <\\\\?xml.*encoding[\\\\s]*=[\\\\s]*((?:\\\".[^\\\"]*\\\")|(?:\\'.[^\\']*\\'))\n-  #131 = Class              #393          // java/util/regex/Pattern\n-  #132 = Methodref          #131.#394     // java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n-  #133 = Class              #395          // java/io/Reader\n+    #1 = String             #258          // ;\n+    #2 = Methodref          #17.#259      // java/lang/String.indexOf:(Ljava/lang/String;)I\n+    #3 = Methodref          #17.#260      // java/lang/String.substring:(I)Ljava/lang/String;\n+    #4 = Fieldref           #89.#261      // org/apache/commons/io/input/XmlStreamReader.CHARSET_PATTERN:Ljava/util/regex/Pattern;\n+    #5 = Methodref          #131.#262     // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+    #6 = Methodref          #172.#263     // java/util/regex/Matcher.find:()Z\n+    #7 = Methodref          #172.#264     // java/util/regex/Matcher.group:(I)Ljava/lang/String;\n+    #8 = Fieldref           #265.#266     // java/util/Locale.ROOT:Ljava/util/Locale;\n+    #9 = Methodref          #17.#267      // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+   #10 = Methodref          #17.#268      // java/lang/String.substring:(II)Ljava/lang/String;\n+   #11 = Methodref          #17.#269      // java/lang/String.trim:()Ljava/lang/String;\n+   #12 = Methodref          #13.#270      // org/apache/commons/io/IOUtils.byteArray:()[B\n+   #13 = Class              #271          // org/apache/commons/io/IOUtils\n+   #14 = Methodref          #193.#272     // java/io/InputStream.mark:(I)V\n+   #15 = Methodref          #193.#273     // java/io/InputStream.read:([BII)I\n+   #16 = String             #274          //\n+   #17 = Class              #275          // java/lang/String\n+   #18 = Methodref          #17.#276      // java/lang/String.\"<init>\":([BIILjava/lang/String;)V\n+   #19 = Methodref          #17.#277      // java/lang/String.indexOf:(I)I\n+   #20 = Class              #278          // java/io/IOException\n+   #21 = String             #279          // Unexpected end of XML stream\n+   #22 = Methodref          #20.#280      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #23 = Class              #281          // java/lang/StringBuilder\n+   #24 = Methodref          #23.#282      // java/lang/StringBuilder.\"<init>\":()V\n+   #25 = String             #283          // XML prolog or ROOT element not found on first\n+   #26 = Methodref          #23.#284      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #27 = Methodref          #23.#285      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #28 = String             #286          //  bytes\n+   #29 = Methodref          #23.#287      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #30 = Methodref          #193.#288     // java/io/InputStream.reset:()V\n+   #31 = Class              #289          // java/io/BufferedReader\n+   #32 = Class              #290          // java/io/StringReader\n+   #33 = Methodref          #32.#280      // java/io/StringReader.\"<init>\":(Ljava/lang/String;)V\n+   #34 = Methodref          #31.#291      // java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n+   #35 = Class              #292          // java/lang/StringBuffer\n+   #36 = Methodref          #35.#282      // java/lang/StringBuffer.\"<init>\":()V\n+   #37 = Methodref          #31.#293      // java/io/BufferedReader.readLine:()Ljava/lang/String;\n+   #38 = Methodref          #35.#294      // java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+   #39 = Fieldref           #89.#295      // org/apache/commons/io/input/XmlStreamReader.ENCODING_PATTERN:Ljava/util/regex/Pattern;\n+   #40 = Methodref          #17.#296      // java/lang/String.length:()I\n+   #41 = String             #297          // application/xml\n+   #42 = Methodref          #17.#298      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #43 = String             #299          // application/xml-dtd\n+   #44 = String             #300          // application/xml-external-parsed-entity\n+   #45 = String             #301          // application/\n+   #46 = Methodref          #17.#302      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+   #47 = String             #303          // +xml\n+   #48 = Methodref          #17.#304      // java/lang/String.endsWith:(Ljava/lang/String;)Z\n+   #49 = String             #305          // text/xml\n+   #50 = String             #306          // text/xml-external-parsed-entity\n+   #51 = String             #307          // text/\n+   #52 = Class              #308          // java/io/FileInputStream\n+   #53 = String             #203          // file\n+   #54 = Methodref          #309.#310     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #55 = Class              #311          // java/io/File\n+   #56 = Methodref          #52.#312      // java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n+   #57 = Methodref          #89.#313      // org/apache/commons/io/input/XmlStreamReader.\"<init>\":(Ljava/io/InputStream;)V\n+   #58 = Methodref          #89.#314      // org/apache/commons/io/input/XmlStreamReader.\"<init>\":(Ljava/io/InputStream;Z)V\n+   #59 = Methodref          #89.#315      // org/apache/commons/io/input/XmlStreamReader.\"<init>\":(Ljava/io/InputStream;ZLjava/lang/String;)V\n+   #60 = Methodref          #133.#282     // java/io/Reader.\"<init>\":()V\n+   #61 = String             #190          // inputStream\n+   #62 = Fieldref           #89.#316      // org/apache/commons/io/input/XmlStreamReader.defaultEncoding:Ljava/lang/String;\n+   #63 = Class              #317          // org/apache/commons/io/input/BOMInputStream\n+   #64 = Class              #318          // java/io/BufferedInputStream\n+   #65 = Methodref          #64.#319      // java/io/BufferedInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+   #66 = Fieldref           #89.#320      // org/apache/commons/io/input/XmlStreamReader.BOMS:[Lorg/apache/commons/io/ByteOrderMark;\n+   #67 = Methodref          #63.#321      // org/apache/commons/io/input/BOMInputStream.\"<init>\":(Ljava/io/InputStream;Z[Lorg/apache/commons/io/ByteOrderMark;)V\n+   #68 = Fieldref           #89.#322      // org/apache/commons/io/input/XmlStreamReader.XML_GUESS_BYTES:[Lorg/apache/commons/io/ByteOrderMark;\n+   #69 = Methodref          #89.#323      // org/apache/commons/io/input/XmlStreamReader.doRawStream:(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Z)Ljava/lang/String;\n+   #70 = Fieldref           #89.#324      // org/apache/commons/io/input/XmlStreamReader.encoding:Ljava/lang/String;\n+   #71 = Class              #325          // java/io/InputStreamReader\n+   #72 = Methodref          #71.#326      // java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+   #73 = Fieldref           #89.#327      // org/apache/commons/io/input/XmlStreamReader.reader:Ljava/io/Reader;\n+   #74 = Methodref          #89.#328      // org/apache/commons/io/input/XmlStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;Z)V\n+   #75 = Methodref          #89.#329      // org/apache/commons/io/input/XmlStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;ZLjava/lang/String;)V\n+   #76 = Methodref          #89.#330      // org/apache/commons/io/input/XmlStreamReader.processHttpStream:(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Ljava/lang/String;Z)Ljava/lang/String;\n+   #77 = String             #217          // url\n+   #78 = Class              #331          // java/net/URL\n+   #79 = Methodref          #78.#332      // java/net/URL.openConnection:()Ljava/net/URLConnection;\n+   #80 = Methodref          #89.#333      // org/apache/commons/io/input/XmlStreamReader.\"<init>\":(Ljava/net/URLConnection;Ljava/lang/String;)V\n+   #81 = String             #220          // conn\n+   #82 = Methodref          #223.#334     // java/net/URLConnection.getContentType:()Ljava/lang/String;\n+   #83 = Methodref          #223.#335     // java/net/URLConnection.getInputStream:()Ljava/io/InputStream;\n+   #84 = Class              #336          // java/net/HttpURLConnection\n+   #85 = Methodref          #89.#337      // org/apache/commons/io/input/XmlStreamReader.getContentTypeMime:(Ljava/lang/String;)Ljava/lang/String;\n+   #86 = Methodref          #89.#338      // org/apache/commons/io/input/XmlStreamReader.getContentTypeEncoding:(Ljava/lang/String;)Ljava/lang/String;\n+   #87 = Methodref          #89.#339      // org/apache/commons/io/input/XmlStreamReader.isAppXml:(Ljava/lang/String;)Z\n+   #88 = Methodref          #89.#340      // org/apache/commons/io/input/XmlStreamReader.isTextXml:(Ljava/lang/String;)Z\n+   #89 = Class              #341          // org/apache/commons/io/input/XmlStreamReader\n+   #90 = String             #342          // Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], Invalid MIME\n+   #91 = Class              #343          // java/lang/Object\n+   #92 = Methodref          #344.#345     // java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #93 = Class              #346          // org/apache/commons/io/input/XmlStreamReaderException\n+   #94 = Methodref          #93.#347      // org/apache/commons/io/input/XmlStreamReaderException.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+   #95 = Methodref          #89.#348      // org/apache/commons/io/input/XmlStreamReader.calculateRawEncoding:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+   #96 = String             #349          // US-ASCII\n+   #97 = String             #350          // UTF-16BE\n+   #98 = String             #351          // UTF-16LE\n+   #99 = String             #352          // Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], BOM must be NULL\n+  #100 = String             #353          // UTF-16\n+  #101 = String             #354          // Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], encoding mismatch\n+  #102 = String             #355          // UTF-32BE\n+  #103 = String             #356          // UTF-32LE\n+  #104 = String             #357          // UTF-32\n+  #105 = String             #358          // UTF-8\n+  #106 = String             #359          // Invalid encoding, BOM [{0}] XML guess [{1}] XML prolog [{2}] encoding mismatch\n+  #107 = Methodref          #93.#360      // org/apache/commons/io/input/XmlStreamReaderException.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #108 = String             #361          // Invalid encoding, BOM [{0}] XML guess [{1}] XML prolog [{2}] unknown BOM\n+  #109 = Methodref          #133.#362     // java/io/Reader.close:()V\n+  #110 = String             #363          // text/html\n+  #111 = Methodref          #93.#364      // org/apache/commons/io/input/XmlStreamReaderException.getBomEncoding:()Ljava/lang/String;\n+  #112 = Methodref          #93.#365      // org/apache/commons/io/input/XmlStreamReaderException.getXmlGuessEncoding:()Ljava/lang/String;\n+  #113 = Methodref          #93.#366      // org/apache/commons/io/input/XmlStreamReaderException.getXmlEncoding:()Ljava/lang/String;\n+  #114 = Methodref          #89.#367      // org/apache/commons/io/input/XmlStreamReader.calculateHttpEncoding:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;\n+  #115 = Methodref          #93.#368      // org/apache/commons/io/input/XmlStreamReaderException.getContentTypeEncoding:()Ljava/lang/String;\n+  #116 = Methodref          #63.#369      // org/apache/commons/io/input/BOMInputStream.getBOMCharsetName:()Ljava/lang/String;\n+  #117 = Methodref          #89.#370      // org/apache/commons/io/input/XmlStreamReader.getXmlProlog:(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;\n+  #118 = Methodref          #89.#371      // org/apache/commons/io/input/XmlStreamReader.doLenientDetection:(Ljava/lang/String;Lorg/apache/commons/io/input/XmlStreamReaderException;)Ljava/lang/String;\n+  #119 = Methodref          #133.#372     // java/io/Reader.read:([CII)I\n+  #120 = Class              #373          // org/apache/commons/io/ByteOrderMark\n+  #121 = Fieldref           #120.#374     // org/apache/commons/io/ByteOrderMark.UTF_8:Lorg/apache/commons/io/ByteOrderMark;\n+  #122 = Fieldref           #120.#375     // org/apache/commons/io/ByteOrderMark.UTF_16BE:Lorg/apache/commons/io/ByteOrderMark;\n+  #123 = Fieldref           #120.#376     // org/apache/commons/io/ByteOrderMark.UTF_16LE:Lorg/apache/commons/io/ByteOrderMark;\n+  #124 = Fieldref           #120.#377     // org/apache/commons/io/ByteOrderMark.UTF_32BE:Lorg/apache/commons/io/ByteOrderMark;\n+  #125 = Fieldref           #120.#378     // org/apache/commons/io/ByteOrderMark.UTF_32LE:Lorg/apache/commons/io/ByteOrderMark;\n+  #126 = Methodref          #120.#379     // org/apache/commons/io/ByteOrderMark.\"<init>\":(Ljava/lang/String;[I)V\n+  #127 = String             #380          // CP1047\n+  #128 = String             #381          // charset=[\\\"\\']?([.[^; \\\"\\']]*)[\\\"\\']?\n+  #129 = Methodref          #131.#382     // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #130 = String             #383          // <\\\\?xml.*encoding[\\\\s]*=[\\\\s]*((?:\\\".[^\\\"]*\\\")|(?:\\'.[^\\']*\\'))\n+  #131 = Class              #384          // java/util/regex/Pattern\n+  #132 = Methodref          #131.#385     // java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+  #133 = Class              #386          // java/io/Reader\n   #134 = Utf8               UTF_8\n   #135 = Utf8               Ljava/lang/String;\n   #136 = Utf8               ConstantValue\n   #137 = Utf8               US_ASCII\n   #138 = Utf8               UTF_16BE\n   #139 = Utf8               UTF_16LE\n   #140 = Utf8               UTF_32BE\n@@ -175,303 +175,294 @@\n   #165 = Utf8               postMime\n   #166 = Utf8               m\n   #167 = Utf8               Ljava/util/regex/Matcher;\n   #168 = Utf8               i\n   #169 = Utf8               I\n   #170 = Utf8               httpContentType\n   #171 = Utf8               StackMapTable\n-  #172 = Class              #283          // java/lang/String\n-  #173 = Class              #396          // java/util/regex/Matcher\n-  #174 = Utf8               getContentTypeMime\n-  #175 = Utf8               mime\n-  #176 = Utf8               getXmlProlog\n-  #177 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;\n-  #178 = Utf8               bReader\n-  #179 = Utf8               Ljava/io/BufferedReader;\n-  #180 = Utf8               prolog\n-  #181 = Utf8               Ljava/lang/StringBuffer;\n-  #182 = Utf8               line\n-  #183 = Utf8               bytes\n-  #184 = Utf8               [B\n-  #185 = Utf8               offset\n-  #186 = Utf8               max\n-  #187 = Utf8               c\n-  #188 = Utf8               firstGT\n-  #189 = Utf8               xmlProlog\n-  #190 = Utf8               bytesRead\n-  #191 = Utf8               inputStream\n-  #192 = Utf8               Ljava/io/InputStream;\n-  #193 = Utf8               guessedEnc\n-  #194 = Class              #397          // java/io/InputStream\n-  #195 = Class              #184          // \"[B\"\n-  #196 = Class              #297          // java/io/BufferedReader\n-  #197 = Class              #300          // java/lang/StringBuffer\n-  #198 = Utf8               Exceptions\n-  #199 = Utf8               isAppXml\n-  #200 = Utf8               (Ljava/lang/String;)Z\n-  #201 = Utf8               isTextXml\n-  #202 = Utf8               <init>\n-  #203 = Utf8               (Ljava/io/File;)V\n-  #204 = Utf8               this\n-  #205 = Utf8               Lorg/apache/commons/io/input/XmlStreamReader;\n-  #206 = Utf8               file\n-  #207 = Utf8               Ljava/io/File;\n-  #208 = Utf8               (Ljava/io/InputStream;)V\n-  #209 = Utf8               (Ljava/io/InputStream;Z)V\n-  #210 = Utf8               lenient\n-  #211 = Utf8               Z\n-  #212 = Utf8               (Ljava/io/InputStream;ZLjava/lang/String;)V\n-  #213 = Utf8               bom\n-  #214 = Utf8               Lorg/apache/commons/io/input/BOMInputStream;\n-  #215 = Utf8               pis\n-  #216 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n-  #217 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;Z)V\n-  #218 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;ZLjava/lang/String;)V\n-  #219 = Utf8               (Ljava/net/URL;)V\n-  #220 = Utf8               url\n-  #221 = Utf8               Ljava/net/URL;\n-  #222 = Utf8               (Ljava/net/URLConnection;Ljava/lang/String;)V\n-  #223 = Utf8               conn\n-  #224 = Utf8               Ljava/net/URLConnection;\n-  #225 = Utf8               contentType\n-  #226 = Class              #350          // org/apache/commons/io/input/XmlStreamReader\n-  #227 = Class              #398          // java/net/URLConnection\n-  #228 = Class              #325          // org/apache/commons/io/input/BOMInputStream\n-  #229 = Utf8               calculateHttpEncoding\n-  #230 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;\n-  #231 = Utf8               msg\n-  #232 = Utf8               bomEnc\n-  #233 = Utf8               xmlGuessEnc\n-  #234 = Utf8               xmlEnc\n-  #235 = Utf8               cTMime\n-  #236 = Utf8               cTEnc\n-  #237 = Utf8               appXml\n-  #238 = Utf8               textXml\n-  #239 = Utf8               calculateRawEncoding\n-  #240 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #241 = Utf8               close\n-  #242 = Utf8               ()V\n-  #243 = Utf8               doLenientDetection\n-  #244 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/input/XmlStreamReaderException;)Ljava/lang/String;\n-  #245 = Utf8               ex2\n-  #246 = Utf8               Lorg/apache/commons/io/input/XmlStreamReaderException;\n-  #247 = Utf8               ex\n-  #248 = Class              #355          // org/apache/commons/io/input/XmlStreamReaderException\n-  #249 = Utf8               doRawStream\n-  #250 = Utf8               (Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Z)Ljava/lang/String;\n-  #251 = Utf8               getDefaultEncoding\n-  #252 = Utf8               ()Ljava/lang/String;\n-  #253 = Utf8               getEncoding\n-  #254 = Utf8               processHttpStream\n-  #255 = Utf8               (Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Ljava/lang/String;Z)Ljava/lang/String;\n-  #256 = Utf8               read\n-  #257 = Utf8               ([CII)I\n-  #258 = Utf8               buf\n-  #259 = Utf8               [C\n-  #260 = Utf8               len\n-  #261 = Utf8               <clinit>\n-  #262 = Utf8               SourceFile\n-  #263 = Utf8               XmlStreamReader.java\n-  #264 = Utf8               ;\n-  #265 = NameAndType        #399:#400     // indexOf:(Ljava/lang/String;)I\n-  #266 = NameAndType        #401:#402     // substring:(I)Ljava/lang/String;\n-  #267 = NameAndType        #148:#149     // CHARSET_PATTERN:Ljava/util/regex/Pattern;\n-  #268 = NameAndType        #403:#404     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #269 = Class              #396          // java/util/regex/Matcher\n-  #270 = NameAndType        #405:#406     // find:()Z\n-  #271 = NameAndType        #407:#402     // group:(I)Ljava/lang/String;\n-  #272 = Class              #408          // java/util/Locale\n-  #273 = NameAndType        #409:#410     // ROOT:Ljava/util/Locale;\n-  #274 = NameAndType        #411:#412     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #275 = NameAndType        #401:#413     // substring:(II)Ljava/lang/String;\n-  #276 = NameAndType        #414:#252     // trim:()Ljava/lang/String;\n-  #277 = NameAndType        #415:#416     // byteArray:()[B\n-  #278 = Utf8               org/apache/commons/io/IOUtils\n-  #279 = Class              #397          // java/io/InputStream\n-  #280 = NameAndType        #417:#418     // mark:(I)V\n-  #281 = NameAndType        #256:#419     // read:([BII)I\n-  #282 = Utf8\n-  #283 = Utf8               java/lang/String\n-  #284 = NameAndType        #202:#420     // \"<init>\":([BIILjava/lang/String;)V\n-  #285 = NameAndType        #399:#421     // indexOf:(I)I\n-  #286 = Utf8               java/io/IOException\n-  #287 = Utf8               Unexpected end of XML stream\n-  #288 = NameAndType        #202:#422     // \"<init>\":(Ljava/lang/String;)V\n-  #289 = Utf8               java/lang/StringBuilder\n-  #290 = NameAndType        #202:#242     // \"<init>\":()V\n-  #291 = Utf8               XML prolog or ROOT element not found on first\n-  #292 = NameAndType        #423:#424     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #293 = NameAndType        #423:#425     // append:(I)Ljava/lang/StringBuilder;\n-  #294 = Utf8                bytes\n-  #295 = NameAndType        #426:#252     // toString:()Ljava/lang/String;\n-  #296 = NameAndType        #427:#242     // reset:()V\n-  #297 = Utf8               java/io/BufferedReader\n-  #298 = Utf8               java/io/StringReader\n-  #299 = NameAndType        #202:#428     // \"<init>\":(Ljava/io/Reader;)V\n-  #300 = Utf8               java/lang/StringBuffer\n-  #301 = NameAndType        #429:#252     // readLine:()Ljava/lang/String;\n-  #302 = NameAndType        #423:#430     // append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n-  #303 = NameAndType        #150:#149     // ENCODING_PATTERN:Ljava/util/regex/Pattern;\n-  #304 = NameAndType        #431:#432     // length:()I\n-  #305 = Utf8               application/xml\n-  #306 = NameAndType        #433:#434     // equals:(Ljava/lang/Object;)Z\n-  #307 = Utf8               application/xml-dtd\n-  #308 = Utf8               application/xml-external-parsed-entity\n-  #309 = Utf8               application/\n-  #310 = NameAndType        #435:#200     // startsWith:(Ljava/lang/String;)Z\n-  #311 = Utf8               +xml\n-  #312 = NameAndType        #436:#200     // endsWith:(Ljava/lang/String;)Z\n-  #313 = Utf8               text/xml\n-  #314 = Utf8               text/xml-external-parsed-entity\n-  #315 = Utf8               text/\n-  #316 = Utf8               java/io/FileInputStream\n-  #317 = Class              #437          // java/util/Objects\n-  #318 = NameAndType        #438:#439     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #319 = Utf8               java/io/File\n-  #320 = NameAndType        #202:#203     // \"<init>\":(Ljava/io/File;)V\n-  #321 = NameAndType        #202:#208     // \"<init>\":(Ljava/io/InputStream;)V\n-  #322 = NameAndType        #202:#209     // \"<init>\":(Ljava/io/InputStream;Z)V\n-  #323 = NameAndType        #202:#212     // \"<init>\":(Ljava/io/InputStream;ZLjava/lang/String;)V\n-  #324 = NameAndType        #159:#135     // defaultEncoding:Ljava/lang/String;\n-  #325 = Utf8               org/apache/commons/io/input/BOMInputStream\n-  #326 = Utf8               java/io/BufferedInputStream\n-  #327 = NameAndType        #202:#440     // \"<init>\":(Ljava/io/InputStream;I)V\n-  #328 = NameAndType        #145:#146     // BOMS:[Lorg/apache/commons/io/ByteOrderMark;\n-  #329 = NameAndType        #202:#441     // \"<init>\":(Ljava/io/InputStream;Z[Lorg/apache/commons/io/ByteOrderMark;)V\n-  #330 = NameAndType        #147:#146     // XML_GUESS_BYTES:[Lorg/apache/commons/io/ByteOrderMark;\n-  #331 = NameAndType        #249:#250     // doRawStream:(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Z)Ljava/lang/String;\n-  #332 = NameAndType        #158:#135     // encoding:Ljava/lang/String;\n-  #333 = Utf8               java/io/InputStreamReader\n-  #334 = NameAndType        #202:#216     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-  #335 = NameAndType        #156:#157     // reader:Ljava/io/Reader;\n-  #336 = NameAndType        #202:#217     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;Z)V\n-  #337 = NameAndType        #202:#218     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;ZLjava/lang/String;)V\n-  #338 = NameAndType        #254:#255     // processHttpStream:(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Ljava/lang/String;Z)Ljava/lang/String;\n-  #339 = Utf8               java/net/URL\n-  #340 = NameAndType        #442:#443     // openConnection:()Ljava/net/URLConnection;\n-  #341 = NameAndType        #202:#222     // \"<init>\":(Ljava/net/URLConnection;Ljava/lang/String;)V\n-  #342 = Class              #398          // java/net/URLConnection\n-  #343 = NameAndType        #444:#252     // getContentType:()Ljava/lang/String;\n-  #344 = NameAndType        #445:#446     // getInputStream:()Ljava/io/InputStream;\n-  #345 = Utf8               java/net/HttpURLConnection\n-  #346 = NameAndType        #174:#161     // getContentTypeMime:(Ljava/lang/String;)Ljava/lang/String;\n-  #347 = NameAndType        #160:#161     // getContentTypeEncoding:(Ljava/lang/String;)Ljava/lang/String;\n-  #348 = NameAndType        #199:#200     // isAppXml:(Ljava/lang/String;)Z\n-  #349 = NameAndType        #201:#200     // isTextXml:(Ljava/lang/String;)Z\n-  #350 = Utf8               org/apache/commons/io/input/XmlStreamReader\n-  #351 = Utf8               Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], Invalid MIME\n-  #352 = Utf8               java/lang/Object\n-  #353 = Class              #447          // java/text/MessageFormat\n-  #354 = NameAndType        #448:#449     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #355 = Utf8               org/apache/commons/io/input/XmlStreamReaderException\n-  #356 = NameAndType        #202:#450     // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #357 = NameAndType        #239:#240     // calculateRawEncoding:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #358 = Utf8               US-ASCII\n-  #359 = Utf8               UTF-16BE\n-  #360 = Utf8               UTF-16LE\n-  #361 = Utf8               Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], BOM must be NULL\n-  #362 = Utf8               UTF-16\n-  #363 = Utf8               Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], encoding mismatch\n-  #364 = Utf8               UTF-32BE\n-  #365 = Utf8               UTF-32LE\n-  #366 = Utf8               UTF-32\n-  #367 = Utf8               UTF-8\n-  #368 = Utf8               Invalid encoding, BOM [{0}] XML guess [{1}] XML prolog [{2}] encoding mismatch\n-  #369 = NameAndType        #202:#451     // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #370 = Utf8               Invalid encoding, BOM [{0}] XML guess [{1}] XML prolog [{2}] unknown BOM\n-  #371 = NameAndType        #241:#242     // close:()V\n-  #372 = Utf8               text/html\n-  #373 = NameAndType        #452:#252     // getBomEncoding:()Ljava/lang/String;\n-  #374 = NameAndType        #453:#252     // getXmlGuessEncoding:()Ljava/lang/String;\n-  #375 = NameAndType        #454:#252     // getXmlEncoding:()Ljava/lang/String;\n-  #376 = NameAndType        #229:#230     // calculateHttpEncoding:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;\n-  #377 = NameAndType        #160:#252     // getContentTypeEncoding:()Ljava/lang/String;\n-  #378 = NameAndType        #455:#252     // getBOMCharsetName:()Ljava/lang/String;\n-  #379 = NameAndType        #176:#177     // getXmlProlog:(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;\n-  #380 = NameAndType        #243:#244     // doLenientDetection:(Ljava/lang/String;Lorg/apache/commons/io/input/XmlStreamReaderException;)Ljava/lang/String;\n-  #381 = NameAndType        #256:#257     // read:([CII)I\n-  #382 = Utf8               org/apache/commons/io/ByteOrderMark\n-  #383 = NameAndType        #134:#456     // UTF_8:Lorg/apache/commons/io/ByteOrderMark;\n-  #384 = NameAndType        #138:#456     // UTF_16BE:Lorg/apache/commons/io/ByteOrderMark;\n-  #385 = NameAndType        #139:#456     // UTF_16LE:Lorg/apache/commons/io/ByteOrderMark;\n-  #386 = NameAndType        #140:#456     // UTF_32BE:Lorg/apache/commons/io/ByteOrderMark;\n-  #387 = NameAndType        #141:#456     // UTF_32LE:Lorg/apache/commons/io/ByteOrderMark;\n-  #388 = NameAndType        #202:#457     // \"<init>\":(Ljava/lang/String;[I)V\n-  #389 = Utf8               CP1047\n-  #390 = Utf8               charset=[\\\"\\']?([.[^; \\\"\\']]*)[\\\"\\']?\n-  #391 = NameAndType        #458:#459     // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #392 = Utf8               <\\\\?xml.*encoding[\\\\s]*=[\\\\s]*((?:\\\".[^\\\"]*\\\")|(?:\\'.[^\\']*\\'))\n-  #393 = Utf8               java/util/regex/Pattern\n-  #394 = NameAndType        #458:#460     // compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n-  #395 = Utf8               java/io/Reader\n-  #396 = Utf8               java/util/regex/Matcher\n-  #397 = Utf8               java/io/InputStream\n-  #398 = Utf8               java/net/URLConnection\n-  #399 = Utf8               indexOf\n-  #400 = Utf8               (Ljava/lang/String;)I\n-  #401 = Utf8               substring\n-  #402 = Utf8               (I)Ljava/lang/String;\n-  #403 = Utf8               matcher\n-  #404 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #405 = Utf8               find\n-  #406 = Utf8               ()Z\n-  #407 = Utf8               group\n-  #408 = Utf8               java/util/Locale\n-  #409 = Utf8               ROOT\n-  #410 = Utf8               Ljava/util/Locale;\n-  #411 = Utf8               toUpperCase\n-  #412 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n-  #413 = Utf8               (II)Ljava/lang/String;\n-  #414 = Utf8               trim\n-  #415 = Utf8               byteArray\n-  #416 = Utf8               ()[B\n-  #417 = Utf8               mark\n-  #418 = Utf8               (I)V\n-  #419 = Utf8               ([BII)I\n-  #420 = Utf8               ([BIILjava/lang/String;)V\n-  #421 = Utf8               (I)I\n-  #422 = Utf8               (Ljava/lang/String;)V\n-  #423 = Utf8               append\n-  #424 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #425 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #426 = Utf8               toString\n-  #427 = Utf8               reset\n-  #428 = Utf8               (Ljava/io/Reader;)V\n-  #429 = Utf8               readLine\n-  #430 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuffer;\n-  #431 = Utf8               length\n-  #432 = Utf8               ()I\n-  #433 = Utf8               equals\n-  #434 = Utf8               (Ljava/lang/Object;)Z\n-  #435 = Utf8               startsWith\n-  #436 = Utf8               endsWith\n-  #437 = Utf8               java/util/Objects\n-  #438 = Utf8               requireNonNull\n-  #439 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #440 = Utf8               (Ljava/io/InputStream;I)V\n-  #441 = Utf8               (Ljava/io/InputStream;Z[Lorg/apache/commons/io/ByteOrderMark;)V\n-  #442 = Utf8               openConnection\n-  #443 = Utf8               ()Ljava/net/URLConnection;\n-  #444 = Utf8               getContentType\n-  #445 = Utf8               getInputStream\n-  #446 = Utf8               ()Ljava/io/InputStream;\n-  #447 = Utf8               java/text/MessageFormat\n-  #448 = Utf8               format\n-  #449 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #450 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #451 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #452 = Utf8               getBomEncoding\n-  #453 = Utf8               getXmlGuessEncoding\n-  #454 = Utf8               getXmlEncoding\n-  #455 = Utf8               getBOMCharsetName\n-  #456 = Utf8               Lorg/apache/commons/io/ByteOrderMark;\n-  #457 = Utf8               (Ljava/lang/String;[I)V\n-  #458 = Utf8               compile\n-  #459 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #460 = Utf8               (Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+  #172 = Class              #387          // java/util/regex/Matcher\n+  #173 = Utf8               getContentTypeMime\n+  #174 = Utf8               mime\n+  #175 = Utf8               getXmlProlog\n+  #176 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;\n+  #177 = Utf8               bReader\n+  #178 = Utf8               Ljava/io/BufferedReader;\n+  #179 = Utf8               prolog\n+  #180 = Utf8               Ljava/lang/StringBuffer;\n+  #181 = Utf8               line\n+  #182 = Utf8               bytes\n+  #183 = Utf8               [B\n+  #184 = Utf8               offset\n+  #185 = Utf8               max\n+  #186 = Utf8               c\n+  #187 = Utf8               firstGT\n+  #188 = Utf8               xmlProlog\n+  #189 = Utf8               bytesRead\n+  #190 = Utf8               inputStream\n+  #191 = Utf8               Ljava/io/InputStream;\n+  #192 = Utf8               guessedEnc\n+  #193 = Class              #388          // java/io/InputStream\n+  #194 = Class              #183          // \"[B\"\n+  #195 = Utf8               Exceptions\n+  #196 = Utf8               isAppXml\n+  #197 = Utf8               (Ljava/lang/String;)Z\n+  #198 = Utf8               isTextXml\n+  #199 = Utf8               <init>\n+  #200 = Utf8               (Ljava/io/File;)V\n+  #201 = Utf8               this\n+  #202 = Utf8               Lorg/apache/commons/io/input/XmlStreamReader;\n+  #203 = Utf8               file\n+  #204 = Utf8               Ljava/io/File;\n+  #205 = Utf8               (Ljava/io/InputStream;)V\n+  #206 = Utf8               (Ljava/io/InputStream;Z)V\n+  #207 = Utf8               lenient\n+  #208 = Utf8               Z\n+  #209 = Utf8               (Ljava/io/InputStream;ZLjava/lang/String;)V\n+  #210 = Utf8               bom\n+  #211 = Utf8               Lorg/apache/commons/io/input/BOMInputStream;\n+  #212 = Utf8               pis\n+  #213 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n+  #214 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;Z)V\n+  #215 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;ZLjava/lang/String;)V\n+  #216 = Utf8               (Ljava/net/URL;)V\n+  #217 = Utf8               url\n+  #218 = Utf8               Ljava/net/URL;\n+  #219 = Utf8               (Ljava/net/URLConnection;Ljava/lang/String;)V\n+  #220 = Utf8               conn\n+  #221 = Utf8               Ljava/net/URLConnection;\n+  #222 = Utf8               contentType\n+  #223 = Class              #389          // java/net/URLConnection\n+  #224 = Utf8               calculateHttpEncoding\n+  #225 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;\n+  #226 = Utf8               msg\n+  #227 = Utf8               bomEnc\n+  #228 = Utf8               xmlGuessEnc\n+  #229 = Utf8               xmlEnc\n+  #230 = Utf8               cTMime\n+  #231 = Utf8               cTEnc\n+  #232 = Utf8               appXml\n+  #233 = Utf8               textXml\n+  #234 = Utf8               calculateRawEncoding\n+  #235 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #236 = Utf8               close\n+  #237 = Utf8               ()V\n+  #238 = Utf8               doLenientDetection\n+  #239 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/input/XmlStreamReaderException;)Ljava/lang/String;\n+  #240 = Utf8               ex2\n+  #241 = Utf8               Lorg/apache/commons/io/input/XmlStreamReaderException;\n+  #242 = Utf8               ex\n+  #243 = Utf8               doRawStream\n+  #244 = Utf8               (Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Z)Ljava/lang/String;\n+  #245 = Utf8               getDefaultEncoding\n+  #246 = Utf8               ()Ljava/lang/String;\n+  #247 = Utf8               getEncoding\n+  #248 = Utf8               processHttpStream\n+  #249 = Utf8               (Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Ljava/lang/String;Z)Ljava/lang/String;\n+  #250 = Utf8               read\n+  #251 = Utf8               ([CII)I\n+  #252 = Utf8               buf\n+  #253 = Utf8               [C\n+  #254 = Utf8               len\n+  #255 = Utf8               <clinit>\n+  #256 = Utf8               SourceFile\n+  #257 = Utf8               XmlStreamReader.java\n+  #258 = Utf8               ;\n+  #259 = NameAndType        #390:#391     // indexOf:(Ljava/lang/String;)I\n+  #260 = NameAndType        #392:#393     // substring:(I)Ljava/lang/String;\n+  #261 = NameAndType        #148:#149     // CHARSET_PATTERN:Ljava/util/regex/Pattern;\n+  #262 = NameAndType        #394:#395     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #263 = NameAndType        #396:#397     // find:()Z\n+  #264 = NameAndType        #398:#393     // group:(I)Ljava/lang/String;\n+  #265 = Class              #399          // java/util/Locale\n+  #266 = NameAndType        #400:#401     // ROOT:Ljava/util/Locale;\n+  #267 = NameAndType        #402:#403     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #268 = NameAndType        #392:#404     // substring:(II)Ljava/lang/String;\n+  #269 = NameAndType        #405:#246     // trim:()Ljava/lang/String;\n+  #270 = NameAndType        #406:#407     // byteArray:()[B\n+  #271 = Utf8               org/apache/commons/io/IOUtils\n+  #272 = NameAndType        #408:#409     // mark:(I)V\n+  #273 = NameAndType        #250:#410     // read:([BII)I\n+  #274 = Utf8\n+  #275 = Utf8               java/lang/String\n+  #276 = NameAndType        #199:#411     // \"<init>\":([BIILjava/lang/String;)V\n+  #277 = NameAndType        #390:#412     // indexOf:(I)I\n+  #278 = Utf8               java/io/IOException\n+  #279 = Utf8               Unexpected end of XML stream\n+  #280 = NameAndType        #199:#413     // \"<init>\":(Ljava/lang/String;)V\n+  #281 = Utf8               java/lang/StringBuilder\n+  #282 = NameAndType        #199:#237     // \"<init>\":()V\n+  #283 = Utf8               XML prolog or ROOT element not found on first\n+  #284 = NameAndType        #414:#415     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #285 = NameAndType        #414:#416     // append:(I)Ljava/lang/StringBuilder;\n+  #286 = Utf8                bytes\n+  #287 = NameAndType        #417:#246     // toString:()Ljava/lang/String;\n+  #288 = NameAndType        #418:#237     // reset:()V\n+  #289 = Utf8               java/io/BufferedReader\n+  #290 = Utf8               java/io/StringReader\n+  #291 = NameAndType        #199:#419     // \"<init>\":(Ljava/io/Reader;)V\n+  #292 = Utf8               java/lang/StringBuffer\n+  #293 = NameAndType        #420:#246     // readLine:()Ljava/lang/String;\n+  #294 = NameAndType        #414:#421     // append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+  #295 = NameAndType        #150:#149     // ENCODING_PATTERN:Ljava/util/regex/Pattern;\n+  #296 = NameAndType        #422:#423     // length:()I\n+  #297 = Utf8               application/xml\n+  #298 = NameAndType        #424:#425     // equals:(Ljava/lang/Object;)Z\n+  #299 = Utf8               application/xml-dtd\n+  #300 = Utf8               application/xml-external-parsed-entity\n+  #301 = Utf8               application/\n+  #302 = NameAndType        #426:#197     // startsWith:(Ljava/lang/String;)Z\n+  #303 = Utf8               +xml\n+  #304 = NameAndType        #427:#197     // endsWith:(Ljava/lang/String;)Z\n+  #305 = Utf8               text/xml\n+  #306 = Utf8               text/xml-external-parsed-entity\n+  #307 = Utf8               text/\n+  #308 = Utf8               java/io/FileInputStream\n+  #309 = Class              #428          // java/util/Objects\n+  #310 = NameAndType        #429:#430     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #311 = Utf8               java/io/File\n+  #312 = NameAndType        #199:#200     // \"<init>\":(Ljava/io/File;)V\n+  #313 = NameAndType        #199:#205     // \"<init>\":(Ljava/io/InputStream;)V\n+  #314 = NameAndType        #199:#206     // \"<init>\":(Ljava/io/InputStream;Z)V\n+  #315 = NameAndType        #199:#209     // \"<init>\":(Ljava/io/InputStream;ZLjava/lang/String;)V\n+  #316 = NameAndType        #159:#135     // defaultEncoding:Ljava/lang/String;\n+  #317 = Utf8               org/apache/commons/io/input/BOMInputStream\n+  #318 = Utf8               java/io/BufferedInputStream\n+  #319 = NameAndType        #199:#431     // \"<init>\":(Ljava/io/InputStream;I)V\n+  #320 = NameAndType        #145:#146     // BOMS:[Lorg/apache/commons/io/ByteOrderMark;\n+  #321 = NameAndType        #199:#432     // \"<init>\":(Ljava/io/InputStream;Z[Lorg/apache/commons/io/ByteOrderMark;)V\n+  #322 = NameAndType        #147:#146     // XML_GUESS_BYTES:[Lorg/apache/commons/io/ByteOrderMark;\n+  #323 = NameAndType        #243:#244     // doRawStream:(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Z)Ljava/lang/String;\n+  #324 = NameAndType        #158:#135     // encoding:Ljava/lang/String;\n+  #325 = Utf8               java/io/InputStreamReader\n+  #326 = NameAndType        #199:#213     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #327 = NameAndType        #156:#157     // reader:Ljava/io/Reader;\n+  #328 = NameAndType        #199:#214     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;Z)V\n+  #329 = NameAndType        #199:#215     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;ZLjava/lang/String;)V\n+  #330 = NameAndType        #248:#249     // processHttpStream:(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Ljava/lang/String;Z)Ljava/lang/String;\n+  #331 = Utf8               java/net/URL\n+  #332 = NameAndType        #433:#434     // openConnection:()Ljava/net/URLConnection;\n+  #333 = NameAndType        #199:#219     // \"<init>\":(Ljava/net/URLConnection;Ljava/lang/String;)V\n+  #334 = NameAndType        #435:#246     // getContentType:()Ljava/lang/String;\n+  #335 = NameAndType        #436:#437     // getInputStream:()Ljava/io/InputStream;\n+  #336 = Utf8               java/net/HttpURLConnection\n+  #337 = NameAndType        #173:#161     // getContentTypeMime:(Ljava/lang/String;)Ljava/lang/String;\n+  #338 = NameAndType        #160:#161     // getContentTypeEncoding:(Ljava/lang/String;)Ljava/lang/String;\n+  #339 = NameAndType        #196:#197     // isAppXml:(Ljava/lang/String;)Z\n+  #340 = NameAndType        #198:#197     // isTextXml:(Ljava/lang/String;)Z\n+  #341 = Utf8               org/apache/commons/io/input/XmlStreamReader\n+  #342 = Utf8               Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], Invalid MIME\n+  #343 = Utf8               java/lang/Object\n+  #344 = Class              #438          // java/text/MessageFormat\n+  #345 = NameAndType        #439:#440     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #346 = Utf8               org/apache/commons/io/input/XmlStreamReaderException\n+  #347 = NameAndType        #199:#441     // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #348 = NameAndType        #234:#235     // calculateRawEncoding:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #349 = Utf8               US-ASCII\n+  #350 = Utf8               UTF-16BE\n+  #351 = Utf8               UTF-16LE\n+  #352 = Utf8               Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], BOM must be NULL\n+  #353 = Utf8               UTF-16\n+  #354 = Utf8               Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], encoding mismatch\n+  #355 = Utf8               UTF-32BE\n+  #356 = Utf8               UTF-32LE\n+  #357 = Utf8               UTF-32\n+  #358 = Utf8               UTF-8\n+  #359 = Utf8               Invalid encoding, BOM [{0}] XML guess [{1}] XML prolog [{2}] encoding mismatch\n+  #360 = NameAndType        #199:#442     // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #361 = Utf8               Invalid encoding, BOM [{0}] XML guess [{1}] XML prolog [{2}] unknown BOM\n+  #362 = NameAndType        #236:#237     // close:()V\n+  #363 = Utf8               text/html\n+  #364 = NameAndType        #443:#246     // getBomEncoding:()Ljava/lang/String;\n+  #365 = NameAndType        #444:#246     // getXmlGuessEncoding:()Ljava/lang/String;\n+  #366 = NameAndType        #445:#246     // getXmlEncoding:()Ljava/lang/String;\n+  #367 = NameAndType        #224:#225     // calculateHttpEncoding:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;\n+  #368 = NameAndType        #160:#246     // getContentTypeEncoding:()Ljava/lang/String;\n+  #369 = NameAndType        #446:#246     // getBOMCharsetName:()Ljava/lang/String;\n+  #370 = NameAndType        #175:#176     // getXmlProlog:(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;\n+  #371 = NameAndType        #238:#239     // doLenientDetection:(Ljava/lang/String;Lorg/apache/commons/io/input/XmlStreamReaderException;)Ljava/lang/String;\n+  #372 = NameAndType        #250:#251     // read:([CII)I\n+  #373 = Utf8               org/apache/commons/io/ByteOrderMark\n+  #374 = NameAndType        #134:#447     // UTF_8:Lorg/apache/commons/io/ByteOrderMark;\n+  #375 = NameAndType        #138:#447     // UTF_16BE:Lorg/apache/commons/io/ByteOrderMark;\n+  #376 = NameAndType        #139:#447     // UTF_16LE:Lorg/apache/commons/io/ByteOrderMark;\n+  #377 = NameAndType        #140:#447     // UTF_32BE:Lorg/apache/commons/io/ByteOrderMark;\n+  #378 = NameAndType        #141:#447     // UTF_32LE:Lorg/apache/commons/io/ByteOrderMark;\n+  #379 = NameAndType        #199:#448     // \"<init>\":(Ljava/lang/String;[I)V\n+  #380 = Utf8               CP1047\n+  #381 = Utf8               charset=[\\\"\\']?([.[^; \\\"\\']]*)[\\\"\\']?\n+  #382 = NameAndType        #449:#450     // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #383 = Utf8               <\\\\?xml.*encoding[\\\\s]*=[\\\\s]*((?:\\\".[^\\\"]*\\\")|(?:\\'.[^\\']*\\'))\n+  #384 = Utf8               java/util/regex/Pattern\n+  #385 = NameAndType        #449:#451     // compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+  #386 = Utf8               java/io/Reader\n+  #387 = Utf8               java/util/regex/Matcher\n+  #388 = Utf8               java/io/InputStream\n+  #389 = Utf8               java/net/URLConnection\n+  #390 = Utf8               indexOf\n+  #391 = Utf8               (Ljava/lang/String;)I\n+  #392 = Utf8               substring\n+  #393 = Utf8               (I)Ljava/lang/String;\n+  #394 = Utf8               matcher\n+  #395 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #396 = Utf8               find\n+  #397 = Utf8               ()Z\n+  #398 = Utf8               group\n+  #399 = Utf8               java/util/Locale\n+  #400 = Utf8               ROOT\n+  #401 = Utf8               Ljava/util/Locale;\n+  #402 = Utf8               toUpperCase\n+  #403 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+  #404 = Utf8               (II)Ljava/lang/String;\n+  #405 = Utf8               trim\n+  #406 = Utf8               byteArray\n+  #407 = Utf8               ()[B\n+  #408 = Utf8               mark\n+  #409 = Utf8               (I)V\n+  #410 = Utf8               ([BII)I\n+  #411 = Utf8               ([BIILjava/lang/String;)V\n+  #412 = Utf8               (I)I\n+  #413 = Utf8               (Ljava/lang/String;)V\n+  #414 = Utf8               append\n+  #415 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #416 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #417 = Utf8               toString\n+  #418 = Utf8               reset\n+  #419 = Utf8               (Ljava/io/Reader;)V\n+  #420 = Utf8               readLine\n+  #421 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuffer;\n+  #422 = Utf8               length\n+  #423 = Utf8               ()I\n+  #424 = Utf8               equals\n+  #425 = Utf8               (Ljava/lang/Object;)Z\n+  #426 = Utf8               startsWith\n+  #427 = Utf8               endsWith\n+  #428 = Utf8               java/util/Objects\n+  #429 = Utf8               requireNonNull\n+  #430 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #431 = Utf8               (Ljava/io/InputStream;I)V\n+  #432 = Utf8               (Ljava/io/InputStream;Z[Lorg/apache/commons/io/ByteOrderMark;)V\n+  #433 = Utf8               openConnection\n+  #434 = Utf8               ()Ljava/net/URLConnection;\n+  #435 = Utf8               getContentType\n+  #436 = Utf8               getInputStream\n+  #437 = Utf8               ()Ljava/io/InputStream;\n+  #438 = Utf8               java/text/MessageFormat\n+  #439 = Utf8               format\n+  #440 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #441 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #442 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #443 = Utf8               getBomEncoding\n+  #444 = Utf8               getXmlGuessEncoding\n+  #445 = Utf8               getXmlEncoding\n+  #446 = Utf8               getBOMCharsetName\n+  #447 = Utf8               Lorg/apache/commons/io/ByteOrderMark;\n+  #448 = Utf8               (Ljava/lang/String;[I)V\n+  #449 = Utf8               compile\n+  #450 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #451 = Utf8               (Ljava/lang/String;I)Ljava/util/regex/Pattern;\n {\n   private static final java.lang.String UTF_8 = \"UTF-8\";\n     descriptor: Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: String UTF-8\n \n   private static final java.lang.String US_ASCII = \"US-ASCII\";\n"}]}
