{"diffoscope-json-version": 1, "source1": "first/FileExtensionConfigurationBuilderProvider.class", "source2": "second/FileExtensionConfigurationBuilderProvider.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,125 +1,121 @@\n-  SHA-256 checksum 61544c726a543f55434db9b7b59a49dea72fab4fa1b2d8eb2cf5b36853648d43\n+  SHA-256 checksum e9b8b6b3dc5b831e7368514dc688bd01426f50f0294d1e22f85eedf020bfedd4\n   Compiled from \"FileExtensionConfigurationBuilderProvider.java\"\n public class org.apache.commons.configuration2.builder.combined.FileExtensionConfigurationBuilderProvider extends org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #21                         // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider\n   super_class: #24                        // org/apache/commons/configuration2/builder/combined/BaseConfigurationBuilderProvider\n   interfaces: 0, fields: 3, methods: 6, attributes: 1\n Constant pool:\n-    #1 = Methodref          #24.#58       // org/apache/commons/configuration2/builder/combined/BaseConfigurationBuilderProvider.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V\n-    #2 = Class              #59           // java/lang/IllegalArgumentException\n-    #3 = String             #60           // Matching configuration class must not be null!\n-    #4 = Methodref          #2.#61        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #5 = String             #62           // File extension must not be null!\n-    #6 = Fieldref           #21.#63       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.matchingConfigurationClass:Ljava/lang/String;\n-    #7 = Fieldref           #21.#64       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.extension:Ljava/lang/String;\n-    #8 = Methodref          #21.#65       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.fetchCurrentFileName:(Ljava/util/Collection;)Ljava/lang/String;\n-    #9 = Methodref          #21.#66       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.extractExtension:(Ljava/lang/String;)Ljava/lang/String;\n-   #10 = Methodref          #21.#67       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.getExtension:()Ljava/lang/String;\n-   #11 = Methodref          #68.#69       // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-   #12 = Methodref          #21.#70       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.getMatchingConfigurationClass:()Ljava/lang/String;\n-   #13 = Methodref          #21.#71       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.getConfigurationClass:()Ljava/lang/String;\n-   #14 = InterfaceMethodref #72.#73       // java/util/Collection.iterator:()Ljava/util/Iterator;\n-   #15 = InterfaceMethodref #74.#75       // java/util/Iterator.hasNext:()Z\n-   #16 = InterfaceMethodref #74.#76       // java/util/Iterator.next:()Ljava/lang/Object;\n-   #17 = Class              #77           // org/apache/commons/configuration2/builder/BuilderParameters\n-   #18 = Class              #78           // org/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl\n-   #19 = Methodref          #18.#79       // org/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl.getFileHandler:()Lorg/apache/commons/configuration2/io/FileHandler;\n-   #20 = Methodref          #80.#81       // org/apache/commons/configuration2/io/FileHandler.getFileName:()Ljava/lang/String;\n-   #21 = Class              #82           // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider\n-   #22 = Methodref          #68.#83       // java/lang/String.lastIndexOf:(I)I\n-   #23 = Methodref          #68.#84       // java/lang/String.substring:(I)Ljava/lang/String;\n-   #24 = Class              #85           // org/apache/commons/configuration2/builder/combined/BaseConfigurationBuilderProvider\n+    #1 = Methodref          #24.#57       // org/apache/commons/configuration2/builder/combined/BaseConfigurationBuilderProvider.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V\n+    #2 = Class              #58           // java/lang/IllegalArgumentException\n+    #3 = String             #59           // Matching configuration class must not be null!\n+    #4 = Methodref          #2.#60        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+    #5 = String             #61           // File extension must not be null!\n+    #6 = Fieldref           #21.#62       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.matchingConfigurationClass:Ljava/lang/String;\n+    #7 = Fieldref           #21.#63       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.extension:Ljava/lang/String;\n+    #8 = Methodref          #21.#64       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.fetchCurrentFileName:(Ljava/util/Collection;)Ljava/lang/String;\n+    #9 = Methodref          #21.#65       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.extractExtension:(Ljava/lang/String;)Ljava/lang/String;\n+   #10 = Methodref          #21.#66       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.getExtension:()Ljava/lang/String;\n+   #11 = Methodref          #37.#67       // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+   #12 = Methodref          #21.#68       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.getMatchingConfigurationClass:()Ljava/lang/String;\n+   #13 = Methodref          #21.#69       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.getConfigurationClass:()Ljava/lang/String;\n+   #14 = InterfaceMethodref #38.#70       // java/util/Collection.iterator:()Ljava/util/Iterator;\n+   #15 = InterfaceMethodref #51.#71       // java/util/Iterator.hasNext:()Z\n+   #16 = InterfaceMethodref #51.#72       // java/util/Iterator.next:()Ljava/lang/Object;\n+   #17 = Class              #73           // org/apache/commons/configuration2/builder/BuilderParameters\n+   #18 = Class              #74           // org/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl\n+   #19 = Methodref          #18.#75       // org/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl.getFileHandler:()Lorg/apache/commons/configuration2/io/FileHandler;\n+   #20 = Methodref          #76.#77       // org/apache/commons/configuration2/io/FileHandler.getFileName:()Ljava/lang/String;\n+   #21 = Class              #78           // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider\n+   #22 = Methodref          #37.#79       // java/lang/String.lastIndexOf:(I)I\n+   #23 = Methodref          #37.#80       // java/lang/String.substring:(I)Ljava/lang/String;\n+   #24 = Class              #81           // org/apache/commons/configuration2/builder/combined/BaseConfigurationBuilderProvider\n    #25 = Utf8               EXT_SEPARATOR\n    #26 = Utf8               C\n    #27 = Utf8               ConstantValue\n    #28 = Integer            46\n    #29 = Utf8               matchingConfigurationClass\n    #30 = Utf8               Ljava/lang/String;\n    #31 = Utf8               extension\n    #32 = Utf8               <init>\n    #33 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V\n    #34 = Utf8               Code\n    #35 = Utf8               LineNumberTable\n    #36 = Utf8               StackMapTable\n-   #37 = Class              #82           // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider\n-   #38 = Class              #86           // java/lang/String\n-   #39 = Class              #87           // java/util/Collection\n-   #40 = Utf8               Signature\n-   #41 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection<Ljava/lang/String;>;)V\n-   #42 = Utf8               getMatchingConfigurationClass\n-   #43 = Utf8               ()Ljava/lang/String;\n-   #44 = Utf8               getExtension\n-   #45 = Utf8               determineConfigurationClass\n-   #46 = Utf8               (Lorg/apache/commons/configuration2/builder/combined/ConfigurationDeclaration;Ljava/util/Collection;)Ljava/lang/String;\n-   #47 = Utf8               Exceptions\n-   #48 = Class              #88           // org/apache/commons/configuration2/ex/ConfigurationException\n-   #49 = Utf8               (Lorg/apache/commons/configuration2/builder/combined/ConfigurationDeclaration;Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;)Ljava/lang/String;\n-   #50 = Utf8               fetchCurrentFileName\n-   #51 = Utf8               (Ljava/util/Collection;)Ljava/lang/String;\n-   #52 = Class              #89           // java/util/Iterator\n-   #53 = Utf8               (Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;)Ljava/lang/String;\n-   #54 = Utf8               extractExtension\n-   #55 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-   #56 = Utf8               SourceFile\n-   #57 = Utf8               FileExtensionConfigurationBuilderProvider.java\n-   #58 = NameAndType        #32:#90       // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V\n-   #59 = Utf8               java/lang/IllegalArgumentException\n-   #60 = Utf8               Matching configuration class must not be null!\n-   #61 = NameAndType        #32:#91       // \"<init>\":(Ljava/lang/String;)V\n-   #62 = Utf8               File extension must not be null!\n-   #63 = NameAndType        #29:#30       // matchingConfigurationClass:Ljava/lang/String;\n-   #64 = NameAndType        #31:#30       // extension:Ljava/lang/String;\n-   #65 = NameAndType        #50:#51       // fetchCurrentFileName:(Ljava/util/Collection;)Ljava/lang/String;\n-   #66 = NameAndType        #54:#55       // extractExtension:(Ljava/lang/String;)Ljava/lang/String;\n-   #67 = NameAndType        #44:#43       // getExtension:()Ljava/lang/String;\n-   #68 = Class              #86           // java/lang/String\n-   #69 = NameAndType        #92:#93       // equalsIgnoreCase:(Ljava/lang/String;)Z\n-   #70 = NameAndType        #42:#43       // getMatchingConfigurationClass:()Ljava/lang/String;\n-   #71 = NameAndType        #94:#43       // getConfigurationClass:()Ljava/lang/String;\n-   #72 = Class              #87           // java/util/Collection\n-   #73 = NameAndType        #95:#96       // iterator:()Ljava/util/Iterator;\n-   #74 = Class              #89           // java/util/Iterator\n-   #75 = NameAndType        #97:#98       // hasNext:()Z\n-   #76 = NameAndType        #99:#100      // next:()Ljava/lang/Object;\n-   #77 = Utf8               org/apache/commons/configuration2/builder/BuilderParameters\n-   #78 = Utf8               org/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl\n-   #79 = NameAndType        #101:#102     // getFileHandler:()Lorg/apache/commons/configuration2/io/FileHandler;\n-   #80 = Class              #103          // org/apache/commons/configuration2/io/FileHandler\n-   #81 = NameAndType        #104:#43      // getFileName:()Ljava/lang/String;\n-   #82 = Utf8               org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider\n-   #83 = NameAndType        #105:#106     // lastIndexOf:(I)I\n-   #84 = NameAndType        #107:#108     // substring:(I)Ljava/lang/String;\n-   #85 = Utf8               org/apache/commons/configuration2/builder/combined/BaseConfigurationBuilderProvider\n-   #86 = Utf8               java/lang/String\n-   #87 = Utf8               java/util/Collection\n-   #88 = Utf8               org/apache/commons/configuration2/ex/ConfigurationException\n-   #89 = Utf8               java/util/Iterator\n-   #90 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V\n-   #91 = Utf8               (Ljava/lang/String;)V\n-   #92 = Utf8               equalsIgnoreCase\n-   #93 = Utf8               (Ljava/lang/String;)Z\n-   #94 = Utf8               getConfigurationClass\n-   #95 = Utf8               iterator\n-   #96 = Utf8               ()Ljava/util/Iterator;\n-   #97 = Utf8               hasNext\n-   #98 = Utf8               ()Z\n-   #99 = Utf8               next\n-  #100 = Utf8               ()Ljava/lang/Object;\n-  #101 = Utf8               getFileHandler\n-  #102 = Utf8               ()Lorg/apache/commons/configuration2/io/FileHandler;\n-  #103 = Utf8               org/apache/commons/configuration2/io/FileHandler\n-  #104 = Utf8               getFileName\n-  #105 = Utf8               lastIndexOf\n-  #106 = Utf8               (I)I\n-  #107 = Utf8               substring\n-  #108 = Utf8               (I)Ljava/lang/String;\n+   #37 = Class              #82           // java/lang/String\n+   #38 = Class              #83           // java/util/Collection\n+   #39 = Utf8               Signature\n+   #40 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection<Ljava/lang/String;>;)V\n+   #41 = Utf8               getMatchingConfigurationClass\n+   #42 = Utf8               ()Ljava/lang/String;\n+   #43 = Utf8               getExtension\n+   #44 = Utf8               determineConfigurationClass\n+   #45 = Utf8               (Lorg/apache/commons/configuration2/builder/combined/ConfigurationDeclaration;Ljava/util/Collection;)Ljava/lang/String;\n+   #46 = Utf8               Exceptions\n+   #47 = Class              #84           // org/apache/commons/configuration2/ex/ConfigurationException\n+   #48 = Utf8               (Lorg/apache/commons/configuration2/builder/combined/ConfigurationDeclaration;Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;)Ljava/lang/String;\n+   #49 = Utf8               fetchCurrentFileName\n+   #50 = Utf8               (Ljava/util/Collection;)Ljava/lang/String;\n+   #51 = Class              #85           // java/util/Iterator\n+   #52 = Utf8               (Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;)Ljava/lang/String;\n+   #53 = Utf8               extractExtension\n+   #54 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+   #55 = Utf8               SourceFile\n+   #56 = Utf8               FileExtensionConfigurationBuilderProvider.java\n+   #57 = NameAndType        #32:#86       // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V\n+   #58 = Utf8               java/lang/IllegalArgumentException\n+   #59 = Utf8               Matching configuration class must not be null!\n+   #60 = NameAndType        #32:#87       // \"<init>\":(Ljava/lang/String;)V\n+   #61 = Utf8               File extension must not be null!\n+   #62 = NameAndType        #29:#30       // matchingConfigurationClass:Ljava/lang/String;\n+   #63 = NameAndType        #31:#30       // extension:Ljava/lang/String;\n+   #64 = NameAndType        #49:#50       // fetchCurrentFileName:(Ljava/util/Collection;)Ljava/lang/String;\n+   #65 = NameAndType        #53:#54       // extractExtension:(Ljava/lang/String;)Ljava/lang/String;\n+   #66 = NameAndType        #43:#42       // getExtension:()Ljava/lang/String;\n+   #67 = NameAndType        #88:#89       // equalsIgnoreCase:(Ljava/lang/String;)Z\n+   #68 = NameAndType        #41:#42       // getMatchingConfigurationClass:()Ljava/lang/String;\n+   #69 = NameAndType        #90:#42       // getConfigurationClass:()Ljava/lang/String;\n+   #70 = NameAndType        #91:#92       // iterator:()Ljava/util/Iterator;\n+   #71 = NameAndType        #93:#94       // hasNext:()Z\n+   #72 = NameAndType        #95:#96       // next:()Ljava/lang/Object;\n+   #73 = Utf8               org/apache/commons/configuration2/builder/BuilderParameters\n+   #74 = Utf8               org/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl\n+   #75 = NameAndType        #97:#98       // getFileHandler:()Lorg/apache/commons/configuration2/io/FileHandler;\n+   #76 = Class              #99           // org/apache/commons/configuration2/io/FileHandler\n+   #77 = NameAndType        #100:#42      // getFileName:()Ljava/lang/String;\n+   #78 = Utf8               org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider\n+   #79 = NameAndType        #101:#102     // lastIndexOf:(I)I\n+   #80 = NameAndType        #103:#104     // substring:(I)Ljava/lang/String;\n+   #81 = Utf8               org/apache/commons/configuration2/builder/combined/BaseConfigurationBuilderProvider\n+   #82 = Utf8               java/lang/String\n+   #83 = Utf8               java/util/Collection\n+   #84 = Utf8               org/apache/commons/configuration2/ex/ConfigurationException\n+   #85 = Utf8               java/util/Iterator\n+   #86 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V\n+   #87 = Utf8               (Ljava/lang/String;)V\n+   #88 = Utf8               equalsIgnoreCase\n+   #89 = Utf8               (Ljava/lang/String;)Z\n+   #90 = Utf8               getConfigurationClass\n+   #91 = Utf8               iterator\n+   #92 = Utf8               ()Ljava/util/Iterator;\n+   #93 = Utf8               hasNext\n+   #94 = Utf8               ()Z\n+   #95 = Utf8               next\n+   #96 = Utf8               ()Ljava/lang/Object;\n+   #97 = Utf8               getFileHandler\n+   #98 = Utf8               ()Lorg/apache/commons/configuration2/io/FileHandler;\n+   #99 = Utf8               org/apache/commons/configuration2/io/FileHandler\n+  #100 = Utf8               getFileName\n+  #101 = Utf8               lastIndexOf\n+  #102 = Utf8               (I)I\n+  #103 = Utf8               substring\n+  #104 = Utf8               (I)Ljava/lang/String;\n {\n   private static final char EXT_SEPARATOR = '.';\n     descriptor: C\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 46\n \n   private final java.lang.String matchingConfigurationClass;\n@@ -173,15 +169,15 @@\n         line 83: 50\n       StackMapTable: number_of_entries = 2\n         frame_type = 255 /* full_frame */\n           offset_delta = 24\n           locals = [ class org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/util/Collection ]\n           stack = []\n         frame_type = 14 /* same */\n-    Signature: #41                          // (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection<Ljava/lang/String;>;)V\n+    Signature: #40                          // (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection<Ljava/lang/String;>;)V\n \n   public java.lang.String getMatchingConfigurationClass();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -228,15 +224,15 @@\n         frame_type = 252 /* append */\n           offset_delta = 26\n           locals = [ class java/lang/String ]\n         frame_type = 67 /* same_locals_1_stack_item */\n           stack = [ class java/lang/String ]\n     Exceptions:\n       throws org.apache.commons.configuration2.ex.ConfigurationException\n-    Signature: #49                          // (Lorg/apache/commons/configuration2/builder/combined/ConfigurationDeclaration;Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;)Ljava/lang/String;\n+    Signature: #48                          // (Lorg/apache/commons/configuration2/builder/combined/ConfigurationDeclaration;Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;)Ljava/lang/String;\n \n   private static java.lang.String fetchCurrentFileName(java.util.Collection<org.apache.commons.configuration2.builder.BuilderParameters>);\n     descriptor: (Ljava/util/Collection;)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=1, locals=4, args_size=1\n          0: aload_0\n@@ -272,15 +268,15 @@\n       StackMapTable: number_of_entries = 3\n         frame_type = 252 /* append */\n           offset_delta = 7\n           locals = [ class java/util/Iterator ]\n         frame_type = 38 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 2\n-    Signature: #53                          // (Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;)Ljava/lang/String;\n+    Signature: #52                          // (Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;)Ljava/lang/String;\n \n   private static java.lang.String extractExtension(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n"}]}
