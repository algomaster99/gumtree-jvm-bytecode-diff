{"diffoscope-json-version": 1, "source1": "first/ArArchiveOutputStream.class", "source2": "second/ArArchiveOutputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -87,44 +87,44 @@\n         return bytes.length;\n     }\n     \n     private long writeEntryHeader(final ArArchiveEntry pEntry) throws IOException {\n         long offset = 0L;\n         boolean mustAppendName = false;\n         final String n = pEntry.getName();\n-        if (0 == this.longFileMode && n.length() > 16) {\n+        if (this.longFileMode == 0 && n.length() > 16) {\n             throw new IOException(\"filename too long, > 16 chars: \" + n);\n         }\n         if (1 == this.longFileMode && (n.length() > 16 || n.contains(\" \"))) {\n             mustAppendName = true;\n             offset += this.write(\"#1/\" + String.valueOf(n.length()));\n         }\n         else {\n             offset += this.write(n);\n         }\n         offset = this.fill(offset, 16L, ' ');\n-        final String m = \"\" + pEntry.getLastModified();\n+        final String m = new StringBuilder().append(pEntry.getLastModified()).toString();\n         if (m.length() > 12) {\n             throw new IOException(\"modified too long\");\n         }\n         offset += this.write(m);\n         offset = this.fill(offset, 28L, ' ');\n-        final String u = \"\" + pEntry.getUserId();\n+        final String u = new StringBuilder().append(pEntry.getUserId()).toString();\n         if (u.length() > 6) {\n             throw new IOException(\"userid too long\");\n         }\n         offset += this.write(u);\n         offset = this.fill(offset, 34L, ' ');\n-        final String g = \"\" + pEntry.getGroupId();\n+        final String g = new StringBuilder().append(pEntry.getGroupId()).toString();\n         if (g.length() > 6) {\n             throw new IOException(\"groupid too long\");\n         }\n         offset += this.write(g);\n         offset = this.fill(offset, 40L, ' ');\n-        final String fm = Integer.toString(pEntry.getMode(), 8);\n+        final String fm = new StringBuilder().append(Integer.toString(pEntry.getMode(), 8)).toString();\n         if (fm.length() > 8) {\n             throw new IOException(\"filemode too long\");\n         }\n         offset += this.write(fm);\n         offset = this.fill(offset, 48L, ' ');\n         final String s = String.valueOf(pEntry.getLength() + (long)(mustAppendName ? n.length() : 0));\n         if (s.length() > 10) {\n"}]}
