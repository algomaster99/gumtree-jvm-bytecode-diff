{"diffoscope-json-version": 1, "source1": "first/X0017_StrongEncryptionHeader.class", "source2": "second/X0017_StrongEncryptionHeader.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,167 +1,168 @@\n-  SHA-256 checksum 7e70c3f0cfb0117997b8365e08171219c34c264d5e6c1476aefb330806e57001\n+  SHA-256 checksum f198308b45f6196d276589ec4bb15b1b043dc406170cb08b5bac6cedefbbaece\n   Compiled from \"X0017_StrongEncryptionHeader.java\"\n public class org.apache.commons.compress.archivers.zip.X0017_StrongEncryptionHeader extends org.apache.commons.compress.archivers.zip.PKWareExtraHeader\n   minor version: 0\n-  major version: 51\n+  major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #34                         // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader\n-  super_class: #35                        // org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n-  interfaces: 0, fields: 13, methods: 8, attributes: 2\n+  this_class: #29                         // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader\n+  super_class: #30                        // org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n+  interfaces: 0, fields: 13, methods: 8, attributes: 3\n Constant pool:\n-    #1 = Class              #89           // org/apache/commons/compress/archivers/zip/ZipShort\n-    #2 = Methodref          #1.#90        // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-    #3 = Methodref          #35.#91       // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-    #4 = Fieldref           #34.#92       // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.rcount:J\n-    #5 = Fieldref           #34.#93       // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.hashAlg:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n-    #6 = Fieldref           #34.#94       // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.algId:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n-    #7 = Methodref          #1.#95        // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-    #8 = Fieldref           #34.#96       // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.format:I\n-    #9 = Methodref          #39.#97       // org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm.getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n-   #10 = Fieldref           #34.#98       // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.bitlen:I\n-   #11 = Fieldref           #34.#99       // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.flags:I\n-   #12 = Methodref          #100.#101     // org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n-   #13 = Methodref          #48.#102      // org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm.getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n-   #14 = Fieldref           #34.#103      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.hashSize:I\n-   #15 = Fieldref           #34.#104      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.ivData:[B\n-   #16 = Methodref          #105.#106     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #17 = Fieldref           #34.#107      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.erdData:[B\n-   #18 = Fieldref           #105.#108     // java/lang/System.out:Ljava/io/PrintStream;\n-   #19 = Class              #109          // java/lang/StringBuilder\n-   #20 = Methodref          #19.#110      // java/lang/StringBuilder.\"<init>\":()V\n-   #21 = String             #111          // rcount:\n-   #22 = Methodref          #19.#112      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #23 = Methodref          #19.#113      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-   #24 = Methodref          #19.#114      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #25 = Methodref          #115.#116     // java/io/PrintStream.println:(Ljava/lang/String;)V\n-   #26 = Fieldref           #34.#117      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.vData:[B\n-   #27 = Fieldref           #34.#118      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.vCRC32:[B\n-   #28 = Fieldref           #34.#119      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.recipientKeyHash:[B\n-   #29 = Fieldref           #34.#120      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.keyBlob:[B\n-   #30 = Methodref          #35.#121      // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.parseFromLocalFileData:([BII)V\n-   #31 = Methodref          #34.#122      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.parseFileFormat:([BII)V\n-   #32 = Methodref          #35.#123      // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.parseFromCentralDirectoryData:([BII)V\n-   #33 = Methodref          #34.#124      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.parseCentralDirectoryFormat:([BII)V\n-   #34 = Class              #125          // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader\n-   #35 = Class              #126          // org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n-   #36 = Utf8               format\n-   #37 = Utf8               I\n-   #38 = Utf8               algId\n-   #39 = Class              #127          // org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm\n-   #40 = Utf8               EncryptionAlgorithm\n-   #41 = Utf8               InnerClasses\n-   #42 = Utf8               Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n-   #43 = Utf8               bitlen\n-   #44 = Utf8               flags\n-   #45 = Utf8               rcount\n-   #46 = Utf8               J\n-   #47 = Utf8               hashAlg\n-   #48 = Class              #128          // org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm\n-   #49 = Utf8               HashAlgorithm\n-   #50 = Utf8               Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n-   #51 = Utf8               hashSize\n-   #52 = Utf8               ivData\n-   #53 = Utf8               [B\n-   #54 = Utf8               erdData\n-   #55 = Utf8               recipientKeyHash\n-   #56 = Utf8               keyBlob\n-   #57 = Utf8               vData\n-   #58 = Utf8               vCRC32\n-   #59 = Utf8               <init>\n-   #60 = Utf8               ()V\n-   #61 = Utf8               Code\n-   #62 = Utf8               LineNumberTable\n-   #63 = Utf8               LocalVariableTable\n-   #64 = Utf8               this\n-   #65 = Utf8               Lorg/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader;\n-   #66 = Utf8               getRecordCount\n-   #67 = Utf8               ()J\n-   #68 = Utf8               getHashAlgorithm\n-   #69 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n-   #70 = Utf8               getEncryptionAlgorithm\n-   #71 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n-   #72 = Utf8               parseCentralDirectoryFormat\n-   #73 = Utf8               ([BII)V\n-   #74 = Utf8               j\n-   #75 = Utf8               i\n-   #76 = Utf8               data\n-   #77 = Utf8               offset\n-   #78 = Utf8               length\n-   #79 = Utf8               StackMapTable\n-   #80 = Utf8               parseFileFormat\n-   #81 = Utf8               vSize\n-   #82 = Utf8               resize\n-   #83 = Utf8               ivSize\n-   #84 = Utf8               erdSize\n-   #85 = Utf8               parseFromLocalFileData\n-   #86 = Utf8               parseFromCentralDirectoryData\n-   #87 = Utf8               SourceFile\n-   #88 = Utf8               X0017_StrongEncryptionHeader.java\n-   #89 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-   #90 = NameAndType        #59:#129      // \"<init>\":(I)V\n-   #91 = NameAndType        #59:#130      // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-   #92 = NameAndType        #45:#46       // rcount:J\n-   #93 = NameAndType        #47:#50       // hashAlg:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n-   #94 = NameAndType        #38:#42       // algId:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n-   #95 = NameAndType        #131:#132     // getValue:([BI)I\n-   #96 = NameAndType        #36:#37       // format:I\n-   #97 = NameAndType        #133:#134     // getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n-   #98 = NameAndType        #43:#37       // bitlen:I\n-   #99 = NameAndType        #44:#37       // flags:I\n-  #100 = Class              #135          // org/apache/commons/compress/archivers/zip/ZipLong\n-  #101 = NameAndType        #131:#136     // getValue:([BI)J\n-  #102 = NameAndType        #133:#137     // getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n-  #103 = NameAndType        #51:#37       // hashSize:I\n-  #104 = NameAndType        #52:#53       // ivData:[B\n-  #105 = Class              #138          // java/lang/System\n-  #106 = NameAndType        #139:#140     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #107 = NameAndType        #54:#53       // erdData:[B\n-  #108 = NameAndType        #141:#142     // out:Ljava/io/PrintStream;\n-  #109 = Utf8               java/lang/StringBuilder\n-  #110 = NameAndType        #59:#60       // \"<init>\":()V\n-  #111 = Utf8               rcount:\n-  #112 = NameAndType        #143:#144     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #113 = NameAndType        #143:#145     // append:(J)Ljava/lang/StringBuilder;\n-  #114 = NameAndType        #146:#147     // toString:()Ljava/lang/String;\n-  #115 = Class              #148          // java/io/PrintStream\n-  #116 = NameAndType        #149:#150     // println:(Ljava/lang/String;)V\n-  #117 = NameAndType        #57:#53       // vData:[B\n-  #118 = NameAndType        #58:#53       // vCRC32:[B\n-  #119 = NameAndType        #55:#53       // recipientKeyHash:[B\n-  #120 = NameAndType        #56:#53       // keyBlob:[B\n-  #121 = NameAndType        #85:#73       // parseFromLocalFileData:([BII)V\n-  #122 = NameAndType        #80:#73       // parseFileFormat:([BII)V\n-  #123 = NameAndType        #86:#73       // parseFromCentralDirectoryData:([BII)V\n-  #124 = NameAndType        #72:#73       // parseCentralDirectoryFormat:([BII)V\n-  #125 = Utf8               org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader\n-  #126 = Utf8               org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n-  #127 = Utf8               org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm\n-  #128 = Utf8               org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm\n-  #129 = Utf8               (I)V\n-  #130 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-  #131 = Utf8               getValue\n-  #132 = Utf8               ([BI)I\n-  #133 = Utf8               getAlgorithmByCode\n-  #134 = Utf8               (I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n-  #135 = Utf8               org/apache/commons/compress/archivers/zip/ZipLong\n-  #136 = Utf8               ([BI)J\n-  #137 = Utf8               (I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n-  #138 = Utf8               java/lang/System\n-  #139 = Utf8               arraycopy\n-  #140 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #141 = Utf8               out\n-  #142 = Utf8               Ljava/io/PrintStream;\n-  #143 = Utf8               append\n-  #144 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #145 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #146 = Utf8               toString\n-  #147 = Utf8               ()Ljava/lang/String;\n-  #148 = Utf8               java/io/PrintStream\n-  #149 = Utf8               println\n-  #150 = Utf8               (Ljava/lang/String;)V\n+    #1 = Class              #84           // org/apache/commons/compress/archivers/zip/ZipShort\n+    #2 = Methodref          #1.#85        // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+    #3 = Methodref          #30.#86       // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+    #4 = Fieldref           #29.#87       // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.rcount:J\n+    #5 = Fieldref           #29.#88       // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.hashAlg:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n+    #6 = Fieldref           #29.#89       // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.algId:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n+    #7 = Methodref          #1.#90        // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+    #8 = Fieldref           #29.#91       // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.format:I\n+    #9 = Methodref          #34.#92       // org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm.getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n+   #10 = Fieldref           #29.#93       // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.bitlen:I\n+   #11 = Fieldref           #29.#94       // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.flags:I\n+   #12 = Methodref          #95.#96       // org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n+   #13 = Methodref          #43.#97       // org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm.getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n+   #14 = Fieldref           #29.#98       // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.hashSize:I\n+   #15 = Fieldref           #29.#99       // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.ivData:[B\n+   #16 = Methodref          #100.#101     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #17 = Fieldref           #29.#102      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.erdData:[B\n+   #18 = Fieldref           #100.#103     // java/lang/System.out:Ljava/io/PrintStream;\n+   #19 = InvokeDynamic      #0:#107       // #0:makeConcatWithConstants:(J)Ljava/lang/String;\n+   #20 = Methodref          #108.#109     // java/io/PrintStream.println:(Ljava/lang/String;)V\n+   #21 = Fieldref           #29.#110      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.vData:[B\n+   #22 = Fieldref           #29.#111      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.vCRC32:[B\n+   #23 = Fieldref           #29.#112      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.recipientKeyHash:[B\n+   #24 = Fieldref           #29.#113      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.keyBlob:[B\n+   #25 = Methodref          #30.#114      // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.parseFromLocalFileData:([BII)V\n+   #26 = Methodref          #29.#115      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.parseFileFormat:([BII)V\n+   #27 = Methodref          #30.#116      // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.parseFromCentralDirectoryData:([BII)V\n+   #28 = Methodref          #29.#117      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.parseCentralDirectoryFormat:([BII)V\n+   #29 = Class              #118          // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader\n+   #30 = Class              #119          // org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n+   #31 = Utf8               format\n+   #32 = Utf8               I\n+   #33 = Utf8               algId\n+   #34 = Class              #120          // org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm\n+   #35 = Utf8               EncryptionAlgorithm\n+   #36 = Utf8               InnerClasses\n+   #37 = Utf8               Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n+   #38 = Utf8               bitlen\n+   #39 = Utf8               flags\n+   #40 = Utf8               rcount\n+   #41 = Utf8               J\n+   #42 = Utf8               hashAlg\n+   #43 = Class              #121          // org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm\n+   #44 = Utf8               HashAlgorithm\n+   #45 = Utf8               Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n+   #46 = Utf8               hashSize\n+   #47 = Utf8               ivData\n+   #48 = Utf8               [B\n+   #49 = Utf8               erdData\n+   #50 = Utf8               recipientKeyHash\n+   #51 = Utf8               keyBlob\n+   #52 = Utf8               vData\n+   #53 = Utf8               vCRC32\n+   #54 = Utf8               <init>\n+   #55 = Utf8               ()V\n+   #56 = Utf8               Code\n+   #57 = Utf8               LineNumberTable\n+   #58 = Utf8               LocalVariableTable\n+   #59 = Utf8               this\n+   #60 = Utf8               Lorg/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader;\n+   #61 = Utf8               getRecordCount\n+   #62 = Utf8               ()J\n+   #63 = Utf8               getHashAlgorithm\n+   #64 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n+   #65 = Utf8               getEncryptionAlgorithm\n+   #66 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n+   #67 = Utf8               parseCentralDirectoryFormat\n+   #68 = Utf8               ([BII)V\n+   #69 = Utf8               j\n+   #70 = Utf8               i\n+   #71 = Utf8               data\n+   #72 = Utf8               offset\n+   #73 = Utf8               length\n+   #74 = Utf8               StackMapTable\n+   #75 = Utf8               parseFileFormat\n+   #76 = Utf8               vSize\n+   #77 = Utf8               resize\n+   #78 = Utf8               ivSize\n+   #79 = Utf8               erdSize\n+   #80 = Utf8               parseFromLocalFileData\n+   #81 = Utf8               parseFromCentralDirectoryData\n+   #82 = Utf8               SourceFile\n+   #83 = Utf8               X0017_StrongEncryptionHeader.java\n+   #84 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+   #85 = NameAndType        #54:#122      // \"<init>\":(I)V\n+   #86 = NameAndType        #54:#123      // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+   #87 = NameAndType        #40:#41       // rcount:J\n+   #88 = NameAndType        #42:#45       // hashAlg:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n+   #89 = NameAndType        #33:#37       // algId:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n+   #90 = NameAndType        #124:#125     // getValue:([BI)I\n+   #91 = NameAndType        #31:#32       // format:I\n+   #92 = NameAndType        #126:#127     // getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n+   #93 = NameAndType        #38:#32       // bitlen:I\n+   #94 = NameAndType        #39:#32       // flags:I\n+   #95 = Class              #128          // org/apache/commons/compress/archivers/zip/ZipLong\n+   #96 = NameAndType        #124:#129     // getValue:([BI)J\n+   #97 = NameAndType        #126:#130     // getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n+   #98 = NameAndType        #46:#32       // hashSize:I\n+   #99 = NameAndType        #47:#48       // ivData:[B\n+  #100 = Class              #131          // java/lang/System\n+  #101 = NameAndType        #132:#133     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #102 = NameAndType        #49:#48       // erdData:[B\n+  #103 = NameAndType        #134:#135     // out:Ljava/io/PrintStream;\n+  #104 = Utf8               BootstrapMethods\n+  #105 = MethodHandle       6:#136        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #106 = String             #137          // rcount: \\u0001\n+  #107 = NameAndType        #138:#139     // makeConcatWithConstants:(J)Ljava/lang/String;\n+  #108 = Class              #140          // java/io/PrintStream\n+  #109 = NameAndType        #141:#142     // println:(Ljava/lang/String;)V\n+  #110 = NameAndType        #52:#48       // vData:[B\n+  #111 = NameAndType        #53:#48       // vCRC32:[B\n+  #112 = NameAndType        #50:#48       // recipientKeyHash:[B\n+  #113 = NameAndType        #51:#48       // keyBlob:[B\n+  #114 = NameAndType        #80:#68       // parseFromLocalFileData:([BII)V\n+  #115 = NameAndType        #75:#68       // parseFileFormat:([BII)V\n+  #116 = NameAndType        #81:#68       // parseFromCentralDirectoryData:([BII)V\n+  #117 = NameAndType        #67:#68       // parseCentralDirectoryFormat:([BII)V\n+  #118 = Utf8               org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader\n+  #119 = Utf8               org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n+  #120 = Utf8               org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm\n+  #121 = Utf8               org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm\n+  #122 = Utf8               (I)V\n+  #123 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+  #124 = Utf8               getValue\n+  #125 = Utf8               ([BI)I\n+  #126 = Utf8               getAlgorithmByCode\n+  #127 = Utf8               (I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n+  #128 = Utf8               org/apache/commons/compress/archivers/zip/ZipLong\n+  #129 = Utf8               ([BI)J\n+  #130 = Utf8               (I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n+  #131 = Utf8               java/lang/System\n+  #132 = Utf8               arraycopy\n+  #133 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #134 = Utf8               out\n+  #135 = Utf8               Ljava/io/PrintStream;\n+  #136 = Methodref          #143.#144     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #137 = Utf8               rcount: \\u0001\n+  #138 = Utf8               makeConcatWithConstants\n+  #139 = Utf8               (J)Ljava/lang/String;\n+  #140 = Utf8               java/io/PrintStream\n+  #141 = Utf8               println\n+  #142 = Utf8               (Ljava/lang/String;)V\n+  #143 = Class              #145          // java/lang/invoke/StringConcatFactory\n+  #144 = NameAndType        #138:#148     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #145 = Utf8               java/lang/invoke/StringConcatFactory\n+  #146 = Class              #150          // java/lang/invoke/MethodHandles$Lookup\n+  #147 = Utf8               Lookup\n+  #148 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #149 = Class              #151          // java/lang/invoke/MethodHandles\n+  #150 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #151 = Utf8               java/lang/invoke/MethodHandles\n {\n   private int format;\n     descriptor: I\n     flags: (0x0002) ACC_PRIVATE\n \n   private org.apache.commons.compress.archivers.zip.PKWareExtraHeader$EncryptionAlgorithm algId;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n@@ -475,285 +476,279 @@\n        137: bipush        16\n        139: iadd\n        140: iload         5\n        142: iadd\n        143: invokestatic  #12                 // Method org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n        146: putfield      #4                  // Field rcount:J\n        149: getstatic     #18                 // Field java/lang/System.out:Ljava/io/PrintStream;\n-       152: new           #19                 // class java/lang/StringBuilder\n-       155: dup\n-       156: invokespecial #20                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       159: ldc           #21                 // String rcount:\n-       161: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       152: aload_0\n+       153: getfield      #4                  // Field rcount:J\n+       156: invokedynamic #19,  0             // InvokeDynamic #0:makeConcatWithConstants:(J)Ljava/lang/String;\n+       161: invokevirtual #20                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n        164: aload_0\n        165: getfield      #4                  // Field rcount:J\n-       168: invokevirtual #23                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-       171: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       174: invokevirtual #25                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n-       177: aload_0\n-       178: getfield      #4                  // Field rcount:J\n-       181: lconst_0\n-       182: lcmp\n-       183: ifne          270\n-       186: aload_1\n-       187: iload_2\n-       188: iload         4\n-       190: iadd\n-       191: bipush        20\n-       193: iadd\n-       194: iload         5\n-       196: iadd\n-       197: invokestatic  #7                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-       200: istore        6\n-       202: aload_0\n-       203: iload         6\n-       205: iconst_4\n-       206: isub\n-       207: newarray       byte\n-       209: putfield      #26                 // Field vData:[B\n-       212: aload_0\n-       213: iconst_4\n-       214: newarray       byte\n-       216: putfield      #27                 // Field vCRC32:[B\n-       219: aload_1\n-       220: iload_2\n-       221: iload         4\n-       223: iadd\n-       224: bipush        22\n-       226: iadd\n-       227: iload         5\n-       229: iadd\n-       230: aload_0\n-       231: getfield      #26                 // Field vData:[B\n-       234: iconst_0\n-       235: iload         6\n-       237: iconst_4\n-       238: isub\n-       239: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-       242: aload_1\n-       243: iload_2\n-       244: iload         4\n-       246: iadd\n-       247: bipush        22\n-       249: iadd\n-       250: iload         5\n-       252: iadd\n-       253: iload         6\n-       255: iadd\n-       256: iconst_4\n-       257: isub\n-       258: aload_0\n-       259: getfield      #27                 // Field vCRC32:[B\n-       262: iconst_0\n-       263: iconst_4\n-       264: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-       267: goto          492\n-       270: aload_0\n-       271: aload_1\n-       272: iload_2\n-       273: iload         4\n-       275: iadd\n-       276: bipush        20\n-       278: iadd\n-       279: iload         5\n-       281: iadd\n-       282: invokestatic  #7                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-       285: invokestatic  #13                 // Method org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm.getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n-       288: putfield      #5                  // Field hashAlg:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n-       291: aload_0\n-       292: aload_1\n-       293: iload_2\n-       294: iload         4\n-       296: iadd\n-       297: bipush        22\n-       299: iadd\n-       300: iload         5\n-       302: iadd\n-       303: invokestatic  #7                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-       306: putfield      #14                 // Field hashSize:I\n-       309: aload_1\n-       310: iload_2\n-       311: iload         4\n-       313: iadd\n-       314: bipush        24\n-       316: iadd\n-       317: iload         5\n-       319: iadd\n-       320: invokestatic  #7                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-       323: istore        6\n+       168: lconst_0\n+       169: lcmp\n+       170: ifne          257\n+       173: aload_1\n+       174: iload_2\n+       175: iload         4\n+       177: iadd\n+       178: bipush        20\n+       180: iadd\n+       181: iload         5\n+       183: iadd\n+       184: invokestatic  #7                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+       187: istore        6\n+       189: aload_0\n+       190: iload         6\n+       192: iconst_4\n+       193: isub\n+       194: newarray       byte\n+       196: putfield      #21                 // Field vData:[B\n+       199: aload_0\n+       200: iconst_4\n+       201: newarray       byte\n+       203: putfield      #22                 // Field vCRC32:[B\n+       206: aload_1\n+       207: iload_2\n+       208: iload         4\n+       210: iadd\n+       211: bipush        22\n+       213: iadd\n+       214: iload         5\n+       216: iadd\n+       217: aload_0\n+       218: getfield      #21                 // Field vData:[B\n+       221: iconst_0\n+       222: iload         6\n+       224: iconst_4\n+       225: isub\n+       226: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       229: aload_1\n+       230: iload_2\n+       231: iload         4\n+       233: iadd\n+       234: bipush        22\n+       236: iadd\n+       237: iload         5\n+       239: iadd\n+       240: iload         6\n+       242: iadd\n+       243: iconst_4\n+       244: isub\n+       245: aload_0\n+       246: getfield      #22                 // Field vCRC32:[B\n+       249: iconst_0\n+       250: iconst_4\n+       251: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       254: goto          479\n+       257: aload_0\n+       258: aload_1\n+       259: iload_2\n+       260: iload         4\n+       262: iadd\n+       263: bipush        20\n+       265: iadd\n+       266: iload         5\n+       268: iadd\n+       269: invokestatic  #7                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+       272: invokestatic  #13                 // Method org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm.getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n+       275: putfield      #5                  // Field hashAlg:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n+       278: aload_0\n+       279: aload_1\n+       280: iload_2\n+       281: iload         4\n+       283: iadd\n+       284: bipush        22\n+       286: iadd\n+       287: iload         5\n+       289: iadd\n+       290: invokestatic  #7                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+       293: putfield      #14                 // Field hashSize:I\n+       296: aload_1\n+       297: iload_2\n+       298: iload         4\n+       300: iadd\n+       301: bipush        24\n+       303: iadd\n+       304: iload         5\n+       306: iadd\n+       307: invokestatic  #7                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+       310: istore        6\n+       312: aload_0\n+       313: aload_0\n+       314: getfield      #14                 // Field hashSize:I\n+       317: newarray       byte\n+       319: putfield      #23                 // Field recipientKeyHash:[B\n+       322: aload_0\n+       323: iload         6\n        325: aload_0\n-       326: aload_0\n-       327: getfield      #14                 // Field hashSize:I\n+       326: getfield      #14                 // Field hashSize:I\n+       329: isub\n        330: newarray       byte\n-       332: putfield      #28                 // Field recipientKeyHash:[B\n-       335: aload_0\n-       336: iload         6\n-       338: aload_0\n-       339: getfield      #14                 // Field hashSize:I\n-       342: isub\n-       343: newarray       byte\n-       345: putfield      #29                 // Field keyBlob:[B\n-       348: aload_1\n-       349: iload_2\n-       350: iload         4\n-       352: iadd\n-       353: bipush        24\n-       355: iadd\n-       356: iload         5\n-       358: iadd\n-       359: aload_0\n-       360: getfield      #28                 // Field recipientKeyHash:[B\n-       363: iconst_0\n-       364: aload_0\n-       365: getfield      #14                 // Field hashSize:I\n-       368: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-       371: aload_1\n-       372: iload_2\n-       373: iload         4\n-       375: iadd\n-       376: bipush        24\n-       378: iadd\n-       379: iload         5\n-       381: iadd\n-       382: aload_0\n-       383: getfield      #14                 // Field hashSize:I\n-       386: iadd\n-       387: aload_0\n-       388: getfield      #29                 // Field keyBlob:[B\n-       391: iconst_0\n-       392: iload         6\n-       394: aload_0\n-       395: getfield      #14                 // Field hashSize:I\n-       398: isub\n-       399: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-       402: aload_1\n-       403: iload_2\n-       404: iload         4\n-       406: iadd\n-       407: bipush        26\n-       409: iadd\n-       410: iload         5\n-       412: iadd\n-       413: iload         6\n-       415: iadd\n-       416: invokestatic  #7                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-       419: istore        7\n-       421: aload_0\n-       422: iload         7\n-       424: iconst_4\n-       425: isub\n-       426: newarray       byte\n-       428: putfield      #26                 // Field vData:[B\n-       431: aload_0\n-       432: iconst_4\n-       433: newarray       byte\n-       435: putfield      #27                 // Field vCRC32:[B\n-       438: aload_1\n-       439: iload_2\n-       440: iload         4\n-       442: iadd\n-       443: bipush        22\n-       445: iadd\n-       446: iload         5\n-       448: iadd\n-       449: iload         6\n-       451: iadd\n-       452: aload_0\n-       453: getfield      #26                 // Field vData:[B\n-       456: iconst_0\n-       457: iload         7\n-       459: iconst_4\n-       460: isub\n-       461: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-       464: aload_1\n-       465: iload_2\n-       466: iload         4\n-       468: iadd\n-       469: bipush        22\n-       471: iadd\n-       472: iload         5\n-       474: iadd\n-       475: iload         6\n-       477: iadd\n-       478: iload         7\n-       480: iadd\n-       481: iconst_4\n-       482: isub\n-       483: aload_0\n-       484: getfield      #27                 // Field vCRC32:[B\n-       487: iconst_0\n-       488: iconst_4\n-       489: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-       492: return\n+       332: putfield      #24                 // Field keyBlob:[B\n+       335: aload_1\n+       336: iload_2\n+       337: iload         4\n+       339: iadd\n+       340: bipush        24\n+       342: iadd\n+       343: iload         5\n+       345: iadd\n+       346: aload_0\n+       347: getfield      #23                 // Field recipientKeyHash:[B\n+       350: iconst_0\n+       351: aload_0\n+       352: getfield      #14                 // Field hashSize:I\n+       355: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       358: aload_1\n+       359: iload_2\n+       360: iload         4\n+       362: iadd\n+       363: bipush        24\n+       365: iadd\n+       366: iload         5\n+       368: iadd\n+       369: aload_0\n+       370: getfield      #14                 // Field hashSize:I\n+       373: iadd\n+       374: aload_0\n+       375: getfield      #24                 // Field keyBlob:[B\n+       378: iconst_0\n+       379: iload         6\n+       381: aload_0\n+       382: getfield      #14                 // Field hashSize:I\n+       385: isub\n+       386: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       389: aload_1\n+       390: iload_2\n+       391: iload         4\n+       393: iadd\n+       394: bipush        26\n+       396: iadd\n+       397: iload         5\n+       399: iadd\n+       400: iload         6\n+       402: iadd\n+       403: invokestatic  #7                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+       406: istore        7\n+       408: aload_0\n+       409: iload         7\n+       411: iconst_4\n+       412: isub\n+       413: newarray       byte\n+       415: putfield      #21                 // Field vData:[B\n+       418: aload_0\n+       419: iconst_4\n+       420: newarray       byte\n+       422: putfield      #22                 // Field vCRC32:[B\n+       425: aload_1\n+       426: iload_2\n+       427: iload         4\n+       429: iadd\n+       430: bipush        22\n+       432: iadd\n+       433: iload         5\n+       435: iadd\n+       436: iload         6\n+       438: iadd\n+       439: aload_0\n+       440: getfield      #21                 // Field vData:[B\n+       443: iconst_0\n+       444: iload         7\n+       446: iconst_4\n+       447: isub\n+       448: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       451: aload_1\n+       452: iload_2\n+       453: iload         4\n+       455: iadd\n+       456: bipush        22\n+       458: iadd\n+       459: iload         5\n+       461: iadd\n+       462: iload         6\n+       464: iadd\n+       465: iload         7\n+       467: iadd\n+       468: iconst_4\n+       469: isub\n+       470: aload_0\n+       471: getfield      #22                 // Field vCRC32:[B\n+       474: iconst_0\n+       475: iconst_4\n+       476: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       479: return\n       LineNumberTable:\n         line 331: 0\n         line 332: 7\n         line 333: 15\n         line 335: 29\n         line 336: 44\n         line 337: 62\n         line 338: 77\n         line 340: 92\n         line 341: 105\n         line 342: 113\n         line 344: 131\n         line 345: 149\n-        line 346: 177\n-        line 347: 186\n-        line 348: 202\n-        line 349: 212\n-        line 350: 219\n-        line 351: 242\n-        line 352: 267\n-        line 353: 270\n-        line 354: 291\n-        line 355: 309\n-        line 356: 325\n-        line 357: 335\n-        line 358: 348\n-        line 359: 371\n-        line 361: 402\n-        line 362: 421\n-        line 363: 431\n-        line 364: 438\n-        line 365: 464\n-        line 369: 492\n+        line 346: 164\n+        line 347: 173\n+        line 348: 189\n+        line 349: 199\n+        line 350: 206\n+        line 351: 229\n+        line 352: 254\n+        line 353: 257\n+        line 354: 278\n+        line 355: 296\n+        line 356: 312\n+        line 357: 322\n+        line 358: 335\n+        line 359: 358\n+        line 361: 389\n+        line 362: 408\n+        line 363: 418\n+        line 364: 425\n+        line 365: 451\n+        line 369: 479\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-          202      65     6 vSize   I\n-          325     167     6 resize   I\n-          421      71     7 vSize   I\n-            0     493     0  this   Lorg/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader;\n-            0     493     1  data   [B\n-            0     493     2 offset   I\n-            0     493     3 length   I\n-            7     486     4 ivSize   I\n-          105     388     5 erdSize   I\n+          189      65     6 vSize   I\n+          312     167     6 resize   I\n+          408      71     7 vSize   I\n+            0     480     0  this   Lorg/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader;\n+            0     480     1  data   [B\n+            0     480     2 offset   I\n+            0     480     3 length   I\n+            7     473     4 ivSize   I\n+          105     375     5 erdSize   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 253 /* append */\n-          offset_delta = 270\n+          offset_delta = 257\n           locals = [ int, int ]\n         frame_type = 251 /* same_frame_extended */\n           offset_delta = 221\n \n   public void parseFromLocalFileData(byte[], int, int);\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokespecial #30                 // Method org/apache/commons/compress/archivers/zip/PKWareExtraHeader.parseFromLocalFileData:([BII)V\n+         4: invokespecial #25                 // Method org/apache/commons/compress/archivers/zip/PKWareExtraHeader.parseFromLocalFileData:([BII)V\n          7: aload_0\n          8: aload_1\n          9: iload_2\n         10: iload_3\n-        11: invokevirtual #31                 // Method parseFileFormat:([BII)V\n+        11: invokevirtual #26                 // Method parseFileFormat:([BII)V\n         14: return\n       LineNumberTable:\n         line 373: 0\n         line 374: 7\n         line 375: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -767,29 +762,34 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokespecial #32                 // Method org/apache/commons/compress/archivers/zip/PKWareExtraHeader.parseFromCentralDirectoryData:([BII)V\n+         4: invokespecial #27                 // Method org/apache/commons/compress/archivers/zip/PKWareExtraHeader.parseFromCentralDirectoryData:([BII)V\n          7: aload_0\n          8: aload_1\n          9: iload_2\n         10: iload_3\n-        11: invokevirtual #33                 // Method parseCentralDirectoryFormat:([BII)V\n+        11: invokevirtual #28                 // Method parseCentralDirectoryFormat:([BII)V\n         14: return\n       LineNumberTable:\n         line 379: 0\n         line 380: 7\n         line 381: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader;\n             0      15     1  data   [B\n             0      15     2 offset   I\n             0      15     3 length   I\n }\n SourceFile: \"X0017_StrongEncryptionHeader.java\"\n InnerClasses:\n-  public static final #40= #39 of #35;    // EncryptionAlgorithm=class org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm of class org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n-  public static final #49= #48 of #35;    // HashAlgorithm=class org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm of class org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n+  public static final #35= #34 of #30;    // EncryptionAlgorithm=class org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm of class org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n+  public static final #44= #43 of #30;    // HashAlgorithm=class org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm of class org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n+  public static final #147= #146 of #149; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+BootstrapMethods:\n+  0: #105 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #106 rcount: \\u0001\n"}]}
