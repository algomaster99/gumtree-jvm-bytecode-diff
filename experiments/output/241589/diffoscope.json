{"diffoscope-json-version": 1, "source1": "first/ModuleRequires.class", "source2": "second/ModuleRequires.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -7,43 +7,41 @@\n \n public final class ModuleRequires implements Cloneable, Node\n {\n     private final int requiresIndex;\n     private final int requiresFlags;\n     private final int requiresVersionIndex;\n     \n-    ModuleRequires(final DataInput file) throws IOException {\n-        this.requiresIndex = file.readUnsignedShort();\n-        this.requiresFlags = file.readUnsignedShort();\n-        this.requiresVersionIndex = file.readUnsignedShort();\n+    ModuleRequires(final DataInput dataInput) throws IOException {\n+        this.requiresIndex = dataInput.readUnsignedShort();\n+        this.requiresFlags = dataInput.readUnsignedShort();\n+        this.requiresVersionIndex = dataInput.readUnsignedShort();\n     }\n     \n-    public void accept(final Visitor v) {\n-        v.visitModuleRequires(this);\n+    public void accept(final Visitor visitor) {\n+        visitor.visitModuleRequires(this);\n     }\n     \n-    public void dump(final DataOutputStream file) throws IOException {\n-        file.writeShort(this.requiresIndex);\n-        file.writeShort(this.requiresFlags);\n-        file.writeShort(this.requiresVersionIndex);\n+    public void dump(final DataOutputStream dataOutputStream) throws IOException {\n+        dataOutputStream.writeShort(this.requiresIndex);\n+        dataOutputStream.writeShort(this.requiresFlags);\n+        dataOutputStream.writeShort(this.requiresVersionIndex);\n     }\n     \n     @Override\n     public String toString() {\n         return \"requires(\" + this.requiresIndex + \", \" + String.format(\"%04x\", Integer.valueOf(this.requiresFlags)) + \", \" + this.requiresVersionIndex + \")\";\n     }\n     \n-    public String toString(final ConstantPool constant_pool) {\n-        final StringBuilder buf = new StringBuilder();\n-        final String module_name = constant_pool.constantToString(this.requiresIndex, (byte)19);\n-        buf.append(Utility.compactClassName(module_name, false));\n-        buf.append(\", \").append(String.format(\"%04x\", Integer.valueOf(this.requiresFlags)));\n-        final String version = (this.requiresVersionIndex == 0) ? \"0\" : constant_pool.getConstantString(this.requiresVersionIndex, (byte)1);\n-        buf.append(\", \").append(version);\n-        return buf.toString();\n+    public String toString(final ConstantPool constantPool) {\n+        final StringBuilder sb = new StringBuilder();\n+        sb.append(Utility.compactClassName(constantPool.constantToString(this.requiresIndex, (byte)19), false));\n+        sb.append(\", \").append(String.format(\"%04x\", Integer.valueOf(this.requiresFlags)));\n+        sb.append(\", \").append((this.requiresVersionIndex == 0) ? \"0\" : constantPool.getConstantString(this.requiresVersionIndex, (byte)1));\n+        return sb.toString();\n     }\n     \n     public ModuleRequires copy() {\n         try {\n             return (ModuleRequires)this.clone();\n         }\n         catch (final CloneNotSupportedException ex) {\n"}]}
