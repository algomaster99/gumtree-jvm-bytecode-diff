{"diffoscope-json-version": 1, "source1": "first/ZipArchiveInputStream$CurrentEntry.class", "source2": "second/ZipArchiveInputStream$CurrentEntry.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,97 +1,97 @@\n-  SHA-256 checksum da2dc2bf5ddde25545a63c0f7952fd5d6dea969d28ed4a905eb31ac2e47fa8f4\n+  SHA-256 checksum cc4c361ea6d8b3396db0320f4919572c80e99bfab8893803c918129558fb0075\n   Compiled from \"ZipArchiveInputStream.java\"\n final class org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry\n   minor version: 0\n   major version: 53\n   flags: (0x0030) ACC_FINAL, ACC_SUPER\n-  this_class: #14                         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry\n-  super_class: #15                        // java/lang/Object\n+  this_class: #2                          // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry\n+  super_class: #34                        // java/lang/Object\n   interfaces: 0, fields: 7, methods: 16, attributes: 2\n Constant pool:\n-   #1 = Fieldref           #14.#66        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.bytesReadFromStream:J\n-   #2 = Fieldref           #14.#67        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.bytesRead:J\n-   #3 = Fieldref           #14.#68        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.crc:Ljava/util/zip/CRC32;\n-   #4 = Fieldref           #14.#69        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.usesZip64:Z\n-   #5 = Fieldref           #14.#70        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.in:Ljava/io/InputStream;\n-   #6 = Fieldref           #14.#71        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.hasDataDescriptor:Z\n-   #7 = Fieldref           #14.#72        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-   #8 = Methodref          #14.#73        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.\"<init>\":()V\n-   #9 = Methodref          #15.#73        // java/lang/Object.\"<init>\":()V\n-  #10 = Class              #74            // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #11 = Methodref          #10.#73        // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":()V\n-  #12 = Class              #75            // java/util/zip/CRC32\n-  #13 = Methodref          #12.#73        // java/util/zip/CRC32.\"<init>\":()V\n-  #14 = Class              #77            // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry\n-  #15 = Class              #78            // java/lang/Object\n-  #16 = Utf8               entry\n-  #17 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #18 = Utf8               hasDataDescriptor\n-  #19 = Utf8               Z\n-  #20 = Utf8               usesZip64\n-  #21 = Utf8               bytesRead\n-  #22 = Utf8               J\n-  #23 = Utf8               bytesReadFromStream\n-  #24 = Utf8               crc\n-  #25 = Utf8               Ljava/util/zip/CRC32;\n-  #26 = Utf8               in\n-  #27 = Utf8               Ljava/io/InputStream;\n-  #28 = Utf8               <init>\n-  #29 = Utf8               ()V\n-  #30 = Utf8               Code\n-  #31 = Utf8               LineNumberTable\n-  #32 = Utf8               LocalVariableTable\n-  #33 = Utf8               this\n-  #34 = Utf8               CurrentEntry\n-  #35 = Utf8               InnerClasses\n-  #36 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n-  #37 = Class              #79            // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1\n-  #38 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1;)V\n-  #39 = Utf8               x0\n-  #40 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1;\n-  #41 = Utf8               access$100\n-  #42 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #43 = Utf8               access$202\n-  #44 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;Z)Z\n-  #45 = Utf8               x1\n-  #46 = Utf8               access$200\n-  #47 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Z\n-  #48 = Utf8               access$302\n-  #49 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;Ljava/io/InputStream;)Ljava/io/InputStream;\n-  #50 = Utf8               access$402\n-  #51 = Utf8               access$300\n-  #52 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Ljava/io/InputStream;\n-  #53 = Utf8               access$500\n-  #54 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Ljava/util/zip/CRC32;\n-  #55 = Utf8               access$600\n-  #56 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)J\n-  #57 = Utf8               access$714\n-  #58 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)J\n-  #59 = Utf8               access$614\n-  #60 = Utf8               access$700\n-  #61 = Utf8               access$722\n-  #62 = Utf8               access$400\n-  #63 = Utf8               access$708\n-  #64 = Utf8               SourceFile\n-  #65 = Utf8               ZipArchiveInputStream.java\n-  #66 = NameAndType        #23:#22        // bytesReadFromStream:J\n-  #67 = NameAndType        #21:#22        // bytesRead:J\n-  #68 = NameAndType        #24:#25        // crc:Ljava/util/zip/CRC32;\n-  #69 = NameAndType        #20:#19        // usesZip64:Z\n-  #70 = NameAndType        #26:#27        // in:Ljava/io/InputStream;\n-  #71 = NameAndType        #18:#19        // hasDataDescriptor:Z\n-  #72 = NameAndType        #16:#17        // entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #73 = NameAndType        #28:#29        // \"<init>\":()V\n-  #74 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #75 = Utf8               java/util/zip/CRC32\n-  #76 = Class              #80            // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n-  #77 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry\n-  #78 = Utf8               java/lang/Object\n-  #79 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1\n-  #80 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+   #1 = Fieldref           #2.#3          // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.bytesReadFromStream:J\n+   #2 = Class              #4             // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry\n+   #3 = NameAndType        #5:#6          // bytesReadFromStream:J\n+   #4 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry\n+   #5 = Utf8               bytesReadFromStream\n+   #6 = Utf8               J\n+   #7 = Fieldref           #2.#8          // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.bytesRead:J\n+   #8 = NameAndType        #9:#6          // bytesRead:J\n+   #9 = Utf8               bytesRead\n+  #10 = Fieldref           #2.#11         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.crc:Ljava/util/zip/CRC32;\n+  #11 = NameAndType        #12:#13        // crc:Ljava/util/zip/CRC32;\n+  #12 = Utf8               crc\n+  #13 = Utf8               Ljava/util/zip/CRC32;\n+  #14 = Fieldref           #2.#15         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.usesZip64:Z\n+  #15 = NameAndType        #16:#17        // usesZip64:Z\n+  #16 = Utf8               usesZip64\n+  #17 = Utf8               Z\n+  #18 = Fieldref           #2.#19         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.in:Ljava/io/InputStream;\n+  #19 = NameAndType        #20:#21        // in:Ljava/io/InputStream;\n+  #20 = Utf8               in\n+  #21 = Utf8               Ljava/io/InputStream;\n+  #22 = Fieldref           #2.#23         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.hasDataDescriptor:Z\n+  #23 = NameAndType        #24:#17        // hasDataDescriptor:Z\n+  #24 = Utf8               hasDataDescriptor\n+  #25 = Fieldref           #2.#26         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #26 = NameAndType        #27:#28        // entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #27 = Utf8               entry\n+  #28 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #29 = Methodref          #2.#30         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.\"<init>\":()V\n+  #30 = NameAndType        #31:#32        // \"<init>\":()V\n+  #31 = Utf8               <init>\n+  #32 = Utf8               ()V\n+  #33 = Methodref          #34.#30        // java/lang/Object.\"<init>\":()V\n+  #34 = Class              #35            // java/lang/Object\n+  #35 = Utf8               java/lang/Object\n+  #36 = Class              #37            // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #37 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #38 = Methodref          #36.#30        // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":()V\n+  #39 = Class              #40            // java/util/zip/CRC32\n+  #40 = Utf8               java/util/zip/CRC32\n+  #41 = Methodref          #39.#30        // java/util/zip/CRC32.\"<init>\":()V\n+  #42 = Utf8               Code\n+  #43 = Utf8               LineNumberTable\n+  #44 = Utf8               LocalVariableTable\n+  #45 = Utf8               this\n+  #46 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n+  #47 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1;)V\n+  #48 = Utf8               x0\n+  #49 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1;\n+  #50 = Utf8               access$100\n+  #51 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #52 = Utf8               access$202\n+  #53 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;Z)Z\n+  #54 = Utf8               x1\n+  #55 = Utf8               access$200\n+  #56 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Z\n+  #57 = Utf8               access$302\n+  #58 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;Ljava/io/InputStream;)Ljava/io/InputStream;\n+  #59 = Utf8               access$402\n+  #60 = Utf8               access$300\n+  #61 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Ljava/io/InputStream;\n+  #62 = Utf8               access$500\n+  #63 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Ljava/util/zip/CRC32;\n+  #64 = Utf8               access$600\n+  #65 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)J\n+  #66 = Utf8               access$714\n+  #67 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)J\n+  #68 = Utf8               access$614\n+  #69 = Utf8               access$700\n+  #70 = Utf8               access$722\n+  #71 = Utf8               access$400\n+  #72 = Utf8               access$708\n+  #73 = Utf8               SourceFile\n+  #74 = Utf8               ZipArchiveInputStream.java\n+  #75 = Utf8               InnerClasses\n+  #76 = Class              #77            // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+  #77 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+  #78 = Utf8               CurrentEntry\n+  #79 = Class              #80            // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1\n+  #80 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1\n {\n   private final org.apache.commons.compress.archivers.zip.ZipArchiveEntry entry;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private boolean hasDataDescriptor;\n     descriptor: Z\n@@ -119,25 +119,25 @@\n \n   private org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #9                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #33                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: new           #10                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+         5: new           #36                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n          8: dup\n-         9: invokespecial #11                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":()V\n-        12: putfield      #7                  // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+         9: invokespecial #38                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":()V\n+        12: putfield      #25                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n         15: aload_0\n-        16: new           #12                 // class java/util/zip/CRC32\n+        16: new           #39                 // class java/util/zip/CRC32\n         19: dup\n-        20: invokespecial #13                 // Method java/util/zip/CRC32.\"<init>\":()V\n-        23: putfield      #3                  // Field crc:Ljava/util/zip/CRC32;\n+        20: invokespecial #41                 // Method java/util/zip/CRC32.\"<init>\":()V\n+        23: putfield      #10                 // Field crc:Ljava/util/zip/CRC32;\n         26: return\n       LineNumberTable:\n         line 1201: 0\n         line 1206: 4\n         line 1236: 15\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -145,30 +145,30 @@\n \n   org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$1);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1;)V\n     flags: (0x1000) ACC_SYNTHETIC\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #8                  // Method \"<init>\":()V\n+         1: invokespecial #29                 // Method \"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 1201: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n             0       5     1    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1;\n \n   static org.apache.commons.compress.archivers.zip.ZipArchiveEntry access$100(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+         1: getfield      #25                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n          4: areturn\n       LineNumberTable:\n         line 1201: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n \n@@ -176,30 +176,30 @@\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;Z)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: dup_x1\n-         3: putfield      #6                  // Field hasDataDescriptor:Z\n+         3: putfield      #22                 // Field hasDataDescriptor:Z\n          6: ireturn\n       LineNumberTable:\n         line 1201: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n             0       7     1    x1   Z\n \n   static boolean access$200(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field hasDataDescriptor:Z\n+         1: getfield      #22                 // Field hasDataDescriptor:Z\n          4: ireturn\n       LineNumberTable:\n         line 1201: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n \n@@ -207,15 +207,15 @@\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;Ljava/io/InputStream;)Ljava/io/InputStream;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: dup_x1\n-         3: putfield      #5                  // Field in:Ljava/io/InputStream;\n+         3: putfield      #18                 // Field in:Ljava/io/InputStream;\n          6: areturn\n       LineNumberTable:\n         line 1201: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n             0       7     1    x1   Ljava/io/InputStream;\n@@ -224,58 +224,58 @@\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;Z)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: dup_x1\n-         3: putfield      #4                  // Field usesZip64:Z\n+         3: putfield      #14                 // Field usesZip64:Z\n          6: ireturn\n       LineNumberTable:\n         line 1201: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n             0       7     1    x1   Z\n \n   static java.io.InputStream access$300(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Ljava/io/InputStream;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field in:Ljava/io/InputStream;\n+         1: getfield      #18                 // Field in:Ljava/io/InputStream;\n          4: areturn\n       LineNumberTable:\n         line 1201: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n \n   static java.util.zip.CRC32 access$500(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Ljava/util/zip/CRC32;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field crc:Ljava/util/zip/CRC32;\n+         1: getfield      #10                 // Field crc:Ljava/util/zip/CRC32;\n          4: areturn\n       LineNumberTable:\n         line 1201: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n \n   static long access$600(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field bytesRead:J\n+         1: getfield      #7                  // Field bytesRead:J\n          4: lreturn\n       LineNumberTable:\n         line 1201: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n \n@@ -302,19 +302,19 @@\n   static long access$614(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry, long);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field bytesRead:J\n+         2: getfield      #7                  // Field bytesRead:J\n          5: lload_1\n          6: ladd\n          7: dup2_x1\n-         8: putfield      #2                  // Field bytesRead:J\n+         8: putfield      #7                  // Field bytesRead:J\n         11: lreturn\n       LineNumberTable:\n         line 1201: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n             0      12     1    x1   J\n@@ -355,15 +355,15 @@\n \n   static boolean access$400(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field usesZip64:Z\n+         1: getfield      #14                 // Field usesZip64:Z\n          4: ireturn\n       LineNumberTable:\n         line 1201: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n \n@@ -384,9 +384,9 @@\n         line 1201: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n }\n SourceFile: \"ZipArchiveInputStream.java\"\n InnerClasses:\n-  private static final #34= #14 of #76;   // CurrentEntry=class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry of class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n-  static #37;                             // class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1\n+  private static final #78= #2 of #76;    // CurrentEntry=class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry of class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+  static #79;                             // class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1\n"}]}
