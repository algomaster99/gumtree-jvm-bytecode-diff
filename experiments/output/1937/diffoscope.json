{"diffoscope-json-version": 1, "source1": "first/ZipFile$Entry.class", "source2": "second/ZipFile$Entry.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,24 +1,24 @@\n-  SHA-256 checksum 1a2ba504a88701133920f565ecb27144efec788ffc26e826f464f6971acc79ea\n+  SHA-256 checksum dd12a72d7405bba1de2897bf51dbfe6b8e26003dbb9ab5e79e5fdf3e38b5ffd9\n   Compiled from \"ZipFile.java\"\n class org.apache.commons.compress.archivers.zip.ZipFile$Entry extends org.apache.commons.compress.archivers.zip.ZipArchiveEntry\n   minor version: 0\n-  major version: 51\n+  major version: 53\n   flags: (0x0020) ACC_SUPER\n   this_class: #5                          // org/apache/commons/compress/archivers/zip/ZipFile$Entry\n   super_class: #7                         // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n   interfaces: 0, fields: 0, methods: 3, attributes: 2\n Constant pool:\n-   #1 = Methodref          #7.#28         // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":()V\n-   #2 = Methodref          #7.#29         // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.hashCode:()I\n-   #3 = Methodref          #5.#30         // org/apache/commons/compress/archivers/zip/ZipFile$Entry.getLocalHeaderOffset:()J\n-   #4 = Methodref          #7.#31         // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.equals:(Ljava/lang/Object;)Z\n-   #5 = Class              #33            // org/apache/commons/compress/archivers/zip/ZipFile$Entry\n-   #6 = Methodref          #5.#34         // org/apache/commons/compress/archivers/zip/ZipFile$Entry.getDataOffset:()J\n-   #7 = Class              #35            // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+   #1 = Methodref          #7.#27         // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":()V\n+   #2 = Methodref          #7.#28         // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.hashCode:()I\n+   #3 = Methodref          #5.#29         // org/apache/commons/compress/archivers/zip/ZipFile$Entry.getLocalHeaderOffset:()J\n+   #4 = Methodref          #7.#30         // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.equals:(Ljava/lang/Object;)Z\n+   #5 = Class              #32            // org/apache/commons/compress/archivers/zip/ZipFile$Entry\n+   #6 = Methodref          #5.#33         // org/apache/commons/compress/archivers/zip/ZipFile$Entry.getDataOffset:()J\n+   #7 = Class              #34            // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n    #8 = Utf8               <init>\n    #9 = Utf8               ()V\n   #10 = Utf8               Code\n   #11 = Utf8               LineNumberTable\n   #12 = Utf8               LocalVariableTable\n   #13 = Utf8               this\n   #14 = Utf8               Entry\n@@ -28,29 +28,28 @@\n   #18 = Utf8               ()I\n   #19 = Utf8               equals\n   #20 = Utf8               (Ljava/lang/Object;)Z\n   #21 = Utf8               otherEntry\n   #22 = Utf8               other\n   #23 = Utf8               Ljava/lang/Object;\n   #24 = Utf8               StackMapTable\n-  #25 = Class              #33            // org/apache/commons/compress/archivers/zip/ZipFile$Entry\n-  #26 = Utf8               SourceFile\n-  #27 = Utf8               ZipFile.java\n-  #28 = NameAndType        #8:#9          // \"<init>\":()V\n-  #29 = NameAndType        #17:#18        // hashCode:()I\n-  #30 = NameAndType        #36:#37        // getLocalHeaderOffset:()J\n-  #31 = NameAndType        #19:#20        // equals:(Ljava/lang/Object;)Z\n-  #32 = Class              #38            // org/apache/commons/compress/archivers/zip/ZipFile\n-  #33 = Utf8               org/apache/commons/compress/archivers/zip/ZipFile$Entry\n-  #34 = NameAndType        #39:#37        // getDataOffset:()J\n-  #35 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #36 = Utf8               getLocalHeaderOffset\n-  #37 = Utf8               ()J\n-  #38 = Utf8               org/apache/commons/compress/archivers/zip/ZipFile\n-  #39 = Utf8               getDataOffset\n+  #25 = Utf8               SourceFile\n+  #26 = Utf8               ZipFile.java\n+  #27 = NameAndType        #8:#9          // \"<init>\":()V\n+  #28 = NameAndType        #17:#18        // hashCode:()I\n+  #29 = NameAndType        #35:#36        // getLocalHeaderOffset:()J\n+  #30 = NameAndType        #19:#20        // equals:(Ljava/lang/Object;)Z\n+  #31 = Class              #37            // org/apache/commons/compress/archivers/zip/ZipFile\n+  #32 = Utf8               org/apache/commons/compress/archivers/zip/ZipFile$Entry\n+  #33 = NameAndType        #38:#36        // getDataOffset:()J\n+  #34 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #35 = Utf8               getLocalHeaderOffset\n+  #36 = Utf8               ()J\n+  #37 = Utf8               org/apache/commons/compress/archivers/zip/ZipFile\n+  #38 = Utf8               getDataOffset\n {\n   org.apache.commons.compress.archivers.zip.ZipFile$Entry();\n     descriptor: ()V\n     flags: (0x0000)\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -142,8 +141,8 @@\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n         frame_type = 250 /* chop */\n           offset_delta = 0\n }\n SourceFile: \"ZipFile.java\"\n InnerClasses:\n-  private static #14= #5 of #32;          // Entry=class org/apache/commons/compress/archivers/zip/ZipFile$Entry of class org/apache/commons/compress/archivers/zip/ZipFile\n+  private static #14= #5 of #31;          // Entry=class org/apache/commons/compress/archivers/zip/ZipFile$Entry of class org/apache/commons/compress/archivers/zip/ZipFile\n"}]}
