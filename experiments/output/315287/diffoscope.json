{"diffoscope-json-version": 1, "source1": "first/Counters$BigIntegerCounter.class", "source2": "second/Counters$BigIntegerCounter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,128 +1,128 @@\n-  SHA-256 checksum b3b2f3a1c5a1748fa5361a3b9a194d723b0db0848c60c0b2eaa5b99631fe509a\n+  SHA-256 checksum 126b1619b722a11f166691c0b288110b1ad8f4a4d55a29cd7f6321a3e3910dcb\n   Compiled from \"Counters.java\"\n class org.apache.commons.io.file.Counters$BigIntegerCounter implements org.apache.commons.io.file.Counters$Counter\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n-  this_class: #16                         // org/apache/commons/io/file/Counters$BigIntegerCounter\n-  super_class: #12                        // java/lang/Object\n+  this_class: #2                          // org/apache/commons/io/file/Counters$BigIntegerCounter\n+  super_class: #8                         // java/lang/Object\n   interfaces: 1, fields: 1, methods: 10, attributes: 2\n Constant pool:\n-   #1 = Methodref          #16.#44        // org/apache/commons/io/file/Counters$BigIntegerCounter.\"<init>\":()V\n-   #2 = Methodref          #12.#44        // java/lang/Object.\"<init>\":()V\n-   #3 = Fieldref           #45.#46        // java/math/BigInteger.ZERO:Ljava/math/BigInteger;\n-   #4 = Fieldref           #16.#47        // org/apache/commons/io/file/Counters$BigIntegerCounter.value:Ljava/math/BigInteger;\n-   #5 = Methodref          #45.#48        // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n-   #6 = Methodref          #45.#49        // java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-   #7 = Class              #51            // org/apache/commons/io/file/Counters$Counter\n-   #8 = InterfaceMethodref #7.#53         // org/apache/commons/io/file/Counters$Counter.getBigInteger:()Ljava/math/BigInteger;\n-   #9 = Methodref          #54.#55        // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #10 = Methodref          #45.#56        // java/math/BigInteger.longValueExact:()J\n-  #11 = Methodref          #57.#58        // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n-  #12 = Class              #59            // java/lang/Object\n-  #13 = Methodref          #54.#60        // java/util/Objects.hash:([Ljava/lang/Object;)I\n-  #14 = Fieldref           #45.#61        // java/math/BigInteger.ONE:Ljava/math/BigInteger;\n-  #15 = Methodref          #45.#62        // java/math/BigInteger.toString:()Ljava/lang/String;\n-  #16 = Class              #63            // org/apache/commons/io/file/Counters$BigIntegerCounter\n-  #17 = Utf8               value\n-  #18 = Utf8               Ljava/math/BigInteger;\n-  #19 = Utf8               <init>\n-  #20 = Utf8               ()V\n-  #21 = Utf8               Code\n-  #22 = Utf8               LineNumberTable\n-  #23 = Utf8               add\n-  #24 = Utf8               (J)V\n-  #25 = Utf8               equals\n-  #26 = Utf8               (Ljava/lang/Object;)Z\n-  #27 = Utf8               StackMapTable\n-  #28 = Utf8               get\n-  #29 = Utf8               ()J\n-  #30 = Utf8               getBigInteger\n-  #31 = Utf8               ()Ljava/math/BigInteger;\n-  #32 = Utf8               getLong\n-  #33 = Utf8               ()Ljava/lang/Long;\n-  #34 = Utf8               hashCode\n-  #35 = Utf8               ()I\n-  #36 = Utf8               increment\n-  #37 = Utf8               toString\n-  #38 = Utf8               ()Ljava/lang/String;\n-  #39 = Class              #65            // org/apache/commons/io/file/Counters$1\n-  #40 = Utf8               InnerClasses\n-  #41 = Utf8               (Lorg/apache/commons/io/file/Counters$1;)V\n-  #42 = Utf8               SourceFile\n-  #43 = Utf8               Counters.java\n-  #44 = NameAndType        #19:#20        // \"<init>\":()V\n-  #45 = Class              #66            // java/math/BigInteger\n-  #46 = NameAndType        #67:#18        // ZERO:Ljava/math/BigInteger;\n-  #47 = NameAndType        #17:#18        // value:Ljava/math/BigInteger;\n-  #48 = NameAndType        #68:#69        // valueOf:(J)Ljava/math/BigInteger;\n-  #49 = NameAndType        #23:#70        // add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-  #50 = Class              #71            // org/apache/commons/io/file/Counters\n-  #51 = Utf8               org/apache/commons/io/file/Counters$Counter\n-  #52 = Utf8               Counter\n-  #53 = NameAndType        #30:#31        // getBigInteger:()Ljava/math/BigInteger;\n-  #54 = Class              #72            // java/util/Objects\n-  #55 = NameAndType        #25:#73        // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #56 = NameAndType        #74:#29        // longValueExact:()J\n-  #57 = Class              #75            // java/lang/Long\n-  #58 = NameAndType        #68:#76        // valueOf:(J)Ljava/lang/Long;\n-  #59 = Utf8               java/lang/Object\n-  #60 = NameAndType        #77:#78        // hash:([Ljava/lang/Object;)I\n-  #61 = NameAndType        #79:#18        // ONE:Ljava/math/BigInteger;\n-  #62 = NameAndType        #37:#38        // toString:()Ljava/lang/String;\n-  #63 = Utf8               org/apache/commons/io/file/Counters$BigIntegerCounter\n-  #64 = Utf8               BigIntegerCounter\n-  #65 = Utf8               org/apache/commons/io/file/Counters$1\n-  #66 = Utf8               java/math/BigInteger\n-  #67 = Utf8               ZERO\n-  #68 = Utf8               valueOf\n-  #69 = Utf8               (J)Ljava/math/BigInteger;\n-  #70 = Utf8               (Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-  #71 = Utf8               org/apache/commons/io/file/Counters\n-  #72 = Utf8               java/util/Objects\n-  #73 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #74 = Utf8               longValueExact\n-  #75 = Utf8               java/lang/Long\n-  #76 = Utf8               (J)Ljava/lang/Long;\n-  #77 = Utf8               hash\n-  #78 = Utf8               ([Ljava/lang/Object;)I\n-  #79 = Utf8               ONE\n+   #1 = Methodref          #2.#3          // org/apache/commons/io/file/Counters$BigIntegerCounter.\"<init>\":()V\n+   #2 = Class              #4             // org/apache/commons/io/file/Counters$BigIntegerCounter\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               org/apache/commons/io/file/Counters$BigIntegerCounter\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Methodref          #8.#3          // java/lang/Object.\"<init>\":()V\n+   #8 = Class              #9             // java/lang/Object\n+   #9 = Utf8               java/lang/Object\n+  #10 = Fieldref           #11.#12        // java/math/BigInteger.ZERO:Ljava/math/BigInteger;\n+  #11 = Class              #13            // java/math/BigInteger\n+  #12 = NameAndType        #14:#15        // ZERO:Ljava/math/BigInteger;\n+  #13 = Utf8               java/math/BigInteger\n+  #14 = Utf8               ZERO\n+  #15 = Utf8               Ljava/math/BigInteger;\n+  #16 = Fieldref           #2.#17         // org/apache/commons/io/file/Counters$BigIntegerCounter.value:Ljava/math/BigInteger;\n+  #17 = NameAndType        #18:#15        // value:Ljava/math/BigInteger;\n+  #18 = Utf8               value\n+  #19 = Methodref          #11.#20        // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+  #20 = NameAndType        #21:#22        // valueOf:(J)Ljava/math/BigInteger;\n+  #21 = Utf8               valueOf\n+  #22 = Utf8               (J)Ljava/math/BigInteger;\n+  #23 = Methodref          #11.#24        // java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #24 = NameAndType        #25:#26        // add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #25 = Utf8               add\n+  #26 = Utf8               (Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #27 = Class              #28            // org/apache/commons/io/file/Counters$Counter\n+  #28 = Utf8               org/apache/commons/io/file/Counters$Counter\n+  #29 = InterfaceMethodref #27.#30        // org/apache/commons/io/file/Counters$Counter.getBigInteger:()Ljava/math/BigInteger;\n+  #30 = NameAndType        #31:#32        // getBigInteger:()Ljava/math/BigInteger;\n+  #31 = Utf8               getBigInteger\n+  #32 = Utf8               ()Ljava/math/BigInteger;\n+  #33 = Methodref          #34.#35        // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #34 = Class              #36            // java/util/Objects\n+  #35 = NameAndType        #37:#38        // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #36 = Utf8               java/util/Objects\n+  #37 = Utf8               equals\n+  #38 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #39 = Methodref          #11.#40        // java/math/BigInteger.longValueExact:()J\n+  #40 = NameAndType        #41:#42        // longValueExact:()J\n+  #41 = Utf8               longValueExact\n+  #42 = Utf8               ()J\n+  #43 = Methodref          #44.#45        // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+  #44 = Class              #46            // java/lang/Long\n+  #45 = NameAndType        #21:#47        // valueOf:(J)Ljava/lang/Long;\n+  #46 = Utf8               java/lang/Long\n+  #47 = Utf8               (J)Ljava/lang/Long;\n+  #48 = Methodref          #34.#49        // java/util/Objects.hash:([Ljava/lang/Object;)I\n+  #49 = NameAndType        #50:#51        // hash:([Ljava/lang/Object;)I\n+  #50 = Utf8               hash\n+  #51 = Utf8               ([Ljava/lang/Object;)I\n+  #52 = Fieldref           #11.#53        // java/math/BigInteger.ONE:Ljava/math/BigInteger;\n+  #53 = NameAndType        #54:#15        // ONE:Ljava/math/BigInteger;\n+  #54 = Utf8               ONE\n+  #55 = Methodref          #11.#56        // java/math/BigInteger.toString:()Ljava/lang/String;\n+  #56 = NameAndType        #57:#58        // toString:()Ljava/lang/String;\n+  #57 = Utf8               toString\n+  #58 = Utf8               ()Ljava/lang/String;\n+  #59 = Utf8               Code\n+  #60 = Utf8               LineNumberTable\n+  #61 = Utf8               (J)V\n+  #62 = Utf8               (Ljava/lang/Object;)Z\n+  #63 = Utf8               StackMapTable\n+  #64 = Utf8               get\n+  #65 = Utf8               getLong\n+  #66 = Utf8               ()Ljava/lang/Long;\n+  #67 = Utf8               hashCode\n+  #68 = Utf8               ()I\n+  #69 = Utf8               increment\n+  #70 = Utf8               (Lorg/apache/commons/io/file/Counters$1;)V\n+  #71 = Utf8               SourceFile\n+  #72 = Utf8               Counters.java\n+  #73 = Utf8               InnerClasses\n+  #74 = Class              #75            // org/apache/commons/io/file/Counters\n+  #75 = Utf8               org/apache/commons/io/file/Counters\n+  #76 = Utf8               BigIntegerCounter\n+  #77 = Utf8               Counter\n+  #78 = Class              #79            // org/apache/commons/io/file/Counters$1\n+  #79 = Utf8               org/apache/commons/io/file/Counters$1\n {\n   private java.math.BigInteger value;\n     descriptor: Ljava/math/BigInteger;\n     flags: (0x0002) ACC_PRIVATE\n \n   private org.apache.commons.io.file.Counters$BigIntegerCounter();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #2                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #7                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: getstatic     #3                  // Field java/math/BigInteger.ZERO:Ljava/math/BigInteger;\n-         8: putfield      #4                  // Field value:Ljava/math/BigInteger;\n+         5: getstatic     #10                 // Field java/math/BigInteger.ZERO:Ljava/math/BigInteger;\n+         8: putfield      #16                 // Field value:Ljava/math/BigInteger;\n         11: return\n       LineNumberTable:\n         line 104: 0\n         line 106: 4\n \n   public void add(long);\n     descriptor: (J)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_0\n          1: aload_0\n-         2: getfield      #4                  // Field value:Ljava/math/BigInteger;\n+         2: getfield      #16                 // Field value:Ljava/math/BigInteger;\n          5: lload_1\n-         6: invokestatic  #5                  // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n-         9: invokevirtual #6                  // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-        12: putfield      #4                  // Field value:Ljava/math/BigInteger;\n+         6: invokestatic  #19                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+         9: invokevirtual #23                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+        12: putfield      #16                 // Field value:Ljava/math/BigInteger;\n         15: return\n       LineNumberTable:\n         line 110: 0\n         line 112: 15\n \n   public boolean equals(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)Z\n@@ -131,26 +131,26 @@\n       stack=2, locals=3, args_size=2\n          0: aload_0\n          1: aload_1\n          2: if_acmpne     7\n          5: iconst_1\n          6: ireturn\n          7: aload_1\n-         8: instanceof    #7                  // class org/apache/commons/io/file/Counters$Counter\n+         8: instanceof    #27                 // class org/apache/commons/io/file/Counters$Counter\n         11: ifne          16\n         14: iconst_0\n         15: ireturn\n         16: aload_1\n-        17: checkcast     #7                  // class org/apache/commons/io/file/Counters$Counter\n+        17: checkcast     #27                 // class org/apache/commons/io/file/Counters$Counter\n         20: astore_2\n         21: aload_0\n-        22: getfield      #4                  // Field value:Ljava/math/BigInteger;\n+        22: getfield      #16                 // Field value:Ljava/math/BigInteger;\n         25: aload_2\n-        26: invokeinterface #8,  1            // InterfaceMethod org/apache/commons/io/file/Counters$Counter.getBigInteger:()Ljava/math/BigInteger;\n-        31: invokestatic  #9                  // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+        26: invokeinterface #29,  1           // InterfaceMethod org/apache/commons/io/file/Counters$Counter.getBigInteger:()Ljava/math/BigInteger;\n+        31: invokestatic  #33                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n         34: ireturn\n       LineNumberTable:\n         line 116: 0\n         line 117: 5\n         line 119: 7\n         line 120: 14\n         line 122: 16\n@@ -161,85 +161,85 @@\n \n   public long get();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field value:Ljava/math/BigInteger;\n-         4: invokevirtual #10                 // Method java/math/BigInteger.longValueExact:()J\n+         1: getfield      #16                 // Field value:Ljava/math/BigInteger;\n+         4: invokevirtual #39                 // Method java/math/BigInteger.longValueExact:()J\n          7: lreturn\n       LineNumberTable:\n         line 128: 0\n \n   public java.math.BigInteger getBigInteger();\n     descriptor: ()Ljava/math/BigInteger;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field value:Ljava/math/BigInteger;\n+         1: getfield      #16                 // Field value:Ljava/math/BigInteger;\n          4: areturn\n       LineNumberTable:\n         line 133: 0\n \n   public java.lang.Long getLong();\n     descriptor: ()Ljava/lang/Long;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field value:Ljava/math/BigInteger;\n-         4: invokevirtual #10                 // Method java/math/BigInteger.longValueExact:()J\n-         7: invokestatic  #11                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+         1: getfield      #16                 // Field value:Ljava/math/BigInteger;\n+         4: invokevirtual #39                 // Method java/math/BigInteger.longValueExact:()J\n+         7: invokestatic  #43                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n         10: areturn\n       LineNumberTable:\n         line 138: 0\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: iconst_1\n-         1: anewarray     #12                 // class java/lang/Object\n+         1: anewarray     #8                  // class java/lang/Object\n          4: dup\n          5: iconst_0\n          6: aload_0\n-         7: getfield      #4                  // Field value:Ljava/math/BigInteger;\n+         7: getfield      #16                 // Field value:Ljava/math/BigInteger;\n         10: aastore\n-        11: invokestatic  #13                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I\n+        11: invokestatic  #48                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I\n         14: ireturn\n       LineNumberTable:\n         line 143: 0\n \n   public void increment();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: getfield      #4                  // Field value:Ljava/math/BigInteger;\n-         5: getstatic     #14                 // Field java/math/BigInteger.ONE:Ljava/math/BigInteger;\n-         8: invokevirtual #6                  // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-        11: putfield      #4                  // Field value:Ljava/math/BigInteger;\n+         2: getfield      #16                 // Field value:Ljava/math/BigInteger;\n+         5: getstatic     #52                 // Field java/math/BigInteger.ONE:Ljava/math/BigInteger;\n+         8: invokevirtual #23                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+        11: putfield      #16                 // Field value:Ljava/math/BigInteger;\n         14: return\n       LineNumberTable:\n         line 148: 0\n         line 149: 14\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field value:Ljava/math/BigInteger;\n-         4: invokevirtual #15                 // Method java/math/BigInteger.toString:()Ljava/lang/String;\n+         1: getfield      #16                 // Field value:Ljava/math/BigInteger;\n+         4: invokevirtual #55                 // Method java/math/BigInteger.toString:()Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 153: 0\n \n   org.apache.commons.io.file.Counters$BigIntegerCounter(org.apache.commons.io.file.Counters$1);\n     descriptor: (Lorg/apache/commons/io/file/Counters$1;)V\n     flags: (0x1000) ACC_SYNTHETIC\n@@ -249,10 +249,10 @@\n          1: invokespecial #1                  // Method \"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 104: 0\n }\n SourceFile: \"Counters.java\"\n InnerClasses:\n-  static #39;                             // class org/apache/commons/io/file/Counters$1\n-  public static #52= #7 of #50;           // Counter=class org/apache/commons/io/file/Counters$Counter of class org/apache/commons/io/file/Counters\n-  private static #64= #16 of #50;         // BigIntegerCounter=class org/apache/commons/io/file/Counters$BigIntegerCounter of class org/apache/commons/io/file/Counters\n+  private static #76= #2 of #74;          // BigIntegerCounter=class org/apache/commons/io/file/Counters$BigIntegerCounter of class org/apache/commons/io/file/Counters\n+  public static #77= #27 of #74;          // Counter=class org/apache/commons/io/file/Counters$Counter of class org/apache/commons/io/file/Counters\n+  static #78;                             // class org/apache/commons/io/file/Counters$1\n"}]}
