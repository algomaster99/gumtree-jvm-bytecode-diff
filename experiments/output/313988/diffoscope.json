{"diffoscope-json-version": 1, "source1": "first/AppendableWriter.class", "source2": "second/AppendableWriter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,138 +1,138 @@\n-  SHA-256 checksum f61ec1c4432ef65f785f7d39b0ba84fa7f157df716a7f180a39dca524f583b21\n+  SHA-256 checksum 5a0a1b34442b5280303414d16aab4fc7b443d800f6b5847ba29c6e9b1affbecc\n   Compiled from \"AppendableWriter.java\"\n public class org.apache.commons.io.output.AppendableWriter<T extends java.lang.Appendable> extends java.io.Writer\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #22                         // org/apache/commons/io/output/AppendableWriter\n-  super_class: #23                        // java/io/Writer\n+  this_class: #8                          // org/apache/commons/io/output/AppendableWriter\n+  super_class: #2                         // java/io/Writer\n   interfaces: 0, fields: 1, methods: 13, attributes: 2\n Constant pool:\n-   #1 = Methodref          #23.#56        // java/io/Writer.\"<init>\":()V\n-   #2 = Fieldref           #22.#57        // org/apache/commons/io/output/AppendableWriter.appendable:Ljava/lang/Appendable;\n-   #3 = InterfaceMethodref #58.#59        // java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n-   #4 = InterfaceMethodref #58.#60        // java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-   #5 = InterfaceMethodref #58.#61        // java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-   #6 = String             #62            // Character array is missing\n-   #7 = Methodref          #63.#64        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #8 = Class              #65            // java/lang/IndexOutOfBoundsException\n-   #9 = Class              #66            // java/lang/StringBuilder\n-  #10 = Methodref          #9.#56         // java/lang/StringBuilder.\"<init>\":()V\n-  #11 = String             #67            // Array Size=\n-  #12 = Methodref          #9.#68         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #13 = Methodref          #9.#69         // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-  #14 = String             #70            // , offset=\n-  #15 = String             #71            // , length=\n-  #16 = Methodref          #9.#72         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #17 = Methodref          #8.#73         // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n-  #18 = String             #74            // String is missing\n-  #19 = Methodref          #22.#75        // org/apache/commons/io/output/AppendableWriter.append:(C)Ljava/io/Writer;\n-  #20 = Methodref          #22.#76        // org/apache/commons/io/output/AppendableWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-  #21 = Methodref          #22.#77        // org/apache/commons/io/output/AppendableWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-  #22 = Class              #78            // org/apache/commons/io/output/AppendableWriter\n-  #23 = Class              #79            // java/io/Writer\n-  #24 = Utf8               appendable\n-  #25 = Utf8               Ljava/lang/Appendable;\n-  #26 = Utf8               Signature\n-  #27 = Utf8               TT;\n-  #28 = Utf8               <init>\n-  #29 = Utf8               (Ljava/lang/Appendable;)V\n-  #30 = Utf8               Code\n-  #31 = Utf8               LineNumberTable\n-  #32 = Utf8               (TT;)V\n-  #33 = Utf8               append\n-  #34 = Utf8               (C)Ljava/io/Writer;\n-  #35 = Utf8               Exceptions\n-  #36 = Class              #80            // java/io/IOException\n-  #37 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;\n-  #38 = Utf8               (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-  #39 = Utf8               close\n-  #40 = Utf8               ()V\n-  #41 = Utf8               flush\n-  #42 = Utf8               getAppendable\n-  #43 = Utf8               ()Ljava/lang/Appendable;\n-  #44 = Utf8               ()TT;\n-  #45 = Utf8               write\n-  #46 = Utf8               ([CII)V\n-  #47 = Utf8               StackMapTable\n-  #48 = Utf8               (I)V\n-  #49 = Utf8               (Ljava/lang/String;II)V\n-  #50 = Utf8               (C)Ljava/lang/Appendable;\n-  #51 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-  #52 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-  #53 = Utf8               <T::Ljava/lang/Appendable;>Ljava/io/Writer;\n-  #54 = Utf8               SourceFile\n-  #55 = Utf8               AppendableWriter.java\n-  #56 = NameAndType        #28:#40        // \"<init>\":()V\n-  #57 = NameAndType        #24:#25        // appendable:Ljava/lang/Appendable;\n-  #58 = Class              #81            // java/lang/Appendable\n-  #59 = NameAndType        #33:#50        // append:(C)Ljava/lang/Appendable;\n-  #60 = NameAndType        #33:#52        // append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-  #61 = NameAndType        #33:#51        // append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-  #62 = Utf8               Character array is missing\n-  #63 = Class              #82            // java/util/Objects\n-  #64 = NameAndType        #83:#84        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #65 = Utf8               java/lang/IndexOutOfBoundsException\n-  #66 = Utf8               java/lang/StringBuilder\n-  #67 = Utf8               Array Size=\n-  #68 = NameAndType        #33:#85        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #69 = NameAndType        #33:#86        // append:(I)Ljava/lang/StringBuilder;\n-  #70 = Utf8               , offset=\n-  #71 = Utf8               , length=\n-  #72 = NameAndType        #87:#88        // toString:()Ljava/lang/String;\n-  #73 = NameAndType        #28:#89        // \"<init>\":(Ljava/lang/String;)V\n-  #74 = Utf8               String is missing\n-  #75 = NameAndType        #33:#34        // append:(C)Ljava/io/Writer;\n-  #76 = NameAndType        #33:#38        // append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-  #77 = NameAndType        #33:#37        // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-  #78 = Utf8               org/apache/commons/io/output/AppendableWriter\n-  #79 = Utf8               java/io/Writer\n-  #80 = Utf8               java/io/IOException\n-  #81 = Utf8               java/lang/Appendable\n-  #82 = Utf8               java/util/Objects\n-  #83 = Utf8               requireNonNull\n-  #84 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #85 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #86 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #87 = Utf8               toString\n-  #88 = Utf8               ()Ljava/lang/String;\n-  #89 = Utf8               (Ljava/lang/String;)V\n+   #1 = Methodref          #2.#3          // java/io/Writer.\"<init>\":()V\n+   #2 = Class              #4             // java/io/Writer\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/io/Writer\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Fieldref           #8.#9          // org/apache/commons/io/output/AppendableWriter.appendable:Ljava/lang/Appendable;\n+   #8 = Class              #10            // org/apache/commons/io/output/AppendableWriter\n+   #9 = NameAndType        #11:#12        // appendable:Ljava/lang/Appendable;\n+  #10 = Utf8               org/apache/commons/io/output/AppendableWriter\n+  #11 = Utf8               appendable\n+  #12 = Utf8               Ljava/lang/Appendable;\n+  #13 = InterfaceMethodref #14.#15        // java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+  #14 = Class              #16            // java/lang/Appendable\n+  #15 = NameAndType        #17:#18        // append:(C)Ljava/lang/Appendable;\n+  #16 = Utf8               java/lang/Appendable\n+  #17 = Utf8               append\n+  #18 = Utf8               (C)Ljava/lang/Appendable;\n+  #19 = InterfaceMethodref #14.#20        // java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+  #20 = NameAndType        #17:#21        // append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+  #21 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+  #22 = InterfaceMethodref #14.#23        // java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+  #23 = NameAndType        #17:#24        // append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+  #24 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+  #25 = String             #26            // Character array is missing\n+  #26 = Utf8               Character array is missing\n+  #27 = Methodref          #28.#29        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #28 = Class              #30            // java/util/Objects\n+  #29 = NameAndType        #31:#32        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #30 = Utf8               java/util/Objects\n+  #31 = Utf8               requireNonNull\n+  #32 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #33 = Class              #34            // java/lang/IndexOutOfBoundsException\n+  #34 = Utf8               java/lang/IndexOutOfBoundsException\n+  #35 = Class              #36            // java/lang/StringBuilder\n+  #36 = Utf8               java/lang/StringBuilder\n+  #37 = Methodref          #35.#3         // java/lang/StringBuilder.\"<init>\":()V\n+  #38 = String             #39            // Array Size=\n+  #39 = Utf8               Array Size=\n+  #40 = Methodref          #35.#41        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #41 = NameAndType        #17:#42        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #42 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #43 = Methodref          #35.#44        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #44 = NameAndType        #17:#45        // append:(I)Ljava/lang/StringBuilder;\n+  #45 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #46 = String             #47            // , offset=\n+  #47 = Utf8               , offset=\n+  #48 = String             #49            // , length=\n+  #49 = Utf8               , length=\n+  #50 = Methodref          #35.#51        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #51 = NameAndType        #52:#53        // toString:()Ljava/lang/String;\n+  #52 = Utf8               toString\n+  #53 = Utf8               ()Ljava/lang/String;\n+  #54 = Methodref          #33.#55        // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+  #55 = NameAndType        #5:#56         // \"<init>\":(Ljava/lang/String;)V\n+  #56 = Utf8               (Ljava/lang/String;)V\n+  #57 = String             #58            // String is missing\n+  #58 = Utf8               String is missing\n+  #59 = Methodref          #8.#60         // org/apache/commons/io/output/AppendableWriter.append:(C)Ljava/io/Writer;\n+  #60 = NameAndType        #17:#61        // append:(C)Ljava/io/Writer;\n+  #61 = Utf8               (C)Ljava/io/Writer;\n+  #62 = Methodref          #8.#63         // org/apache/commons/io/output/AppendableWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+  #63 = NameAndType        #17:#64        // append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+  #64 = Utf8               (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+  #65 = Methodref          #8.#66         // org/apache/commons/io/output/AppendableWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+  #66 = NameAndType        #17:#67        // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+  #67 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;\n+  #68 = Utf8               Signature\n+  #69 = Utf8               TT;\n+  #70 = Utf8               (Ljava/lang/Appendable;)V\n+  #71 = Utf8               Code\n+  #72 = Utf8               LineNumberTable\n+  #73 = Utf8               (TT;)V\n+  #74 = Utf8               Exceptions\n+  #75 = Class              #76            // java/io/IOException\n+  #76 = Utf8               java/io/IOException\n+  #77 = Utf8               close\n+  #78 = Utf8               flush\n+  #79 = Utf8               getAppendable\n+  #80 = Utf8               ()Ljava/lang/Appendable;\n+  #81 = Utf8               ()TT;\n+  #82 = Utf8               write\n+  #83 = Utf8               ([CII)V\n+  #84 = Utf8               StackMapTable\n+  #85 = Utf8               (I)V\n+  #86 = Utf8               (Ljava/lang/String;II)V\n+  #87 = Utf8               <T::Ljava/lang/Appendable;>Ljava/io/Writer;\n+  #88 = Utf8               SourceFile\n+  #89 = Utf8               AppendableWriter.java\n {\n   private final T appendable;\n     descriptor: Ljava/lang/Appendable;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #27                          // TT;\n+    Signature: #69                          // TT;\n \n   public org.apache.commons.io.output.AppendableWriter(T);\n     descriptor: (Ljava/lang/Appendable;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/io/Writer.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #2                  // Field appendable:Ljava/lang/Appendable;\n+         6: putfield      #7                  // Field appendable:Ljava/lang/Appendable;\n          9: return\n       LineNumberTable:\n         line 45: 0\n         line 46: 4\n         line 47: 9\n-    Signature: #32                          // (TT;)V\n+    Signature: #73                          // (TT;)V\n \n   public java.io.Writer append(char) throws java.io.IOException;\n     descriptor: (C)Ljava/io/Writer;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #2                  // Field appendable:Ljava/lang/Appendable;\n+         1: getfield      #7                  // Field appendable:Ljava/lang/Appendable;\n          4: iload_1\n-         5: invokeinterface #3,  2            // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+         5: invokeinterface #13,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n         10: pop\n         11: aload_0\n         12: areturn\n       LineNumberTable:\n         line 58: 0\n         line 59: 11\n     Exceptions:\n@@ -140,17 +140,17 @@\n \n   public java.io.Writer append(java.lang.CharSequence) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;)Ljava/io/Writer;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #2                  // Field appendable:Ljava/lang/Appendable;\n+         1: getfield      #7                  // Field appendable:Ljava/lang/Appendable;\n          4: aload_1\n-         5: invokeinterface #4,  2            // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+         5: invokeinterface #19,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n         10: pop\n         11: aload_0\n         12: areturn\n       LineNumberTable:\n         line 71: 0\n         line 72: 11\n     Exceptions:\n@@ -158,19 +158,19 @@\n \n   public java.io.Writer append(java.lang.CharSequence, int, int) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #2                  // Field appendable:Ljava/lang/Appendable;\n+         1: getfield      #7                  // Field appendable:Ljava/lang/Appendable;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokeinterface #5,  4            // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+         7: invokeinterface #22,  4           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n         12: pop\n         13: aload_0\n         14: areturn\n       LineNumberTable:\n         line 86: 0\n         line 87: 13\n     Exceptions:\n@@ -200,71 +200,71 @@\n \n   public T getAppendable();\n     descriptor: ()Ljava/lang/Appendable;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field appendable:Ljava/lang/Appendable;\n+         1: getfield      #7                  // Field appendable:Ljava/lang/Appendable;\n          4: areturn\n       LineNumberTable:\n         line 116: 0\n-    Signature: #44                          // ()TT;\n+    Signature: #81                          // ()TT;\n \n   public void write(char[], int, int) throws java.io.IOException;\n     descriptor: ([CII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_1\n-         1: ldc           #6                  // String Character array is missing\n-         3: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #25                 // String Character array is missing\n+         3: invokestatic  #27                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: iload_3\n          8: iflt          19\n         11: iload_2\n         12: iload_3\n         13: iadd\n         14: aload_1\n         15: arraylength\n         16: if_icmple     65\n-        19: new           #8                  // class java/lang/IndexOutOfBoundsException\n+        19: new           #33                 // class java/lang/IndexOutOfBoundsException\n         22: dup\n-        23: new           #9                  // class java/lang/StringBuilder\n+        23: new           #35                 // class java/lang/StringBuilder\n         26: dup\n-        27: invokespecial #10                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        30: ldc           #11                 // String Array Size=\n-        32: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        27: invokespecial #37                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        30: ldc           #38                 // String Array Size=\n+        32: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         35: aload_1\n         36: arraylength\n-        37: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        40: ldc           #14                 // String , offset=\n-        42: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        37: invokevirtual #43                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        40: ldc           #46                 // String , offset=\n+        42: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         45: iload_2\n-        46: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        49: ldc           #15                 // String , length=\n-        51: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        46: invokevirtual #43                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        49: ldc           #48                 // String , length=\n+        51: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         54: iload_3\n-        55: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        58: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        61: invokespecial #17                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+        55: invokevirtual #43                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        58: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        61: invokespecial #54                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n         64: athrow\n         65: iconst_0\n         66: istore        4\n         68: iload         4\n         70: iload_3\n         71: if_icmpge     96\n         74: aload_0\n-        75: getfield      #2                  // Field appendable:Ljava/lang/Appendable;\n+        75: getfield      #7                  // Field appendable:Ljava/lang/Appendable;\n         78: aload_1\n         79: iload_2\n         80: iload         4\n         82: iadd\n         83: caload\n-        84: invokeinterface #3,  2            // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+        84: invokeinterface #13,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n         89: pop\n         90: iinc          4, 1\n         93: goto          68\n         96: return\n       LineNumberTable:\n         line 129: 0\n         line 130: 7\n@@ -286,43 +286,43 @@\n \n   public void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #2                  // Field appendable:Ljava/lang/Appendable;\n+         1: getfield      #7                  // Field appendable:Ljava/lang/Appendable;\n          4: iload_1\n          5: i2c\n-         6: invokeinterface #3,  2            // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+         6: invokeinterface #13,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n         11: pop\n         12: return\n       LineNumberTable:\n         line 147: 0\n         line 148: 12\n     Exceptions:\n       throws java.io.IOException\n \n   public void write(java.lang.String, int, int) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;II)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=4, args_size=4\n          0: aload_1\n-         1: ldc           #18                 // String String is missing\n-         3: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #57                 // String String is missing\n+         3: invokestatic  #27                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: aload_0\n-         8: getfield      #2                  // Field appendable:Ljava/lang/Appendable;\n+         8: getfield      #7                  // Field appendable:Ljava/lang/Appendable;\n         11: aload_1\n         12: iload_2\n         13: iload_2\n         14: iload_3\n         15: iadd\n-        16: invokeinterface #5,  4            // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+        16: invokeinterface #22,  4           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n         21: pop\n         22: return\n       LineNumberTable:\n         line 161: 0\n         line 162: 7\n         line 163: 22\n     Exceptions:\n@@ -331,15 +331,15 @@\n   public java.lang.Appendable append(char) throws java.io.IOException;\n     descriptor: (C)Ljava/lang/Appendable;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokevirtual #19                 // Method append:(C)Ljava/io/Writer;\n+         2: invokevirtual #59                 // Method append:(C)Ljava/io/Writer;\n          5: areturn\n       LineNumberTable:\n         line 36: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException;\n@@ -347,30 +347,30 @@\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokevirtual #20                 // Method append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+         4: invokevirtual #62                 // Method append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n          7: areturn\n       LineNumberTable:\n         line 36: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #21                 // Method append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+         2: invokevirtual #65                 // Method append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n          5: areturn\n       LineNumberTable:\n         line 36: 0\n     Exceptions:\n       throws java.io.IOException\n }\n-Signature: #53                          // <T::Ljava/lang/Appendable;>Ljava/io/Writer;\n+Signature: #87                          // <T::Ljava/lang/Appendable;>Ljava/io/Writer;\n SourceFile: \"AppendableWriter.java\"\n"}]}
