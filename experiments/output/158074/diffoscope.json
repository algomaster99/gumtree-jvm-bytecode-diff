{"diffoscope-json-version": 1, "source1": "first/AccumulatorPathVisitor.class", "source2": "second/AccumulatorPathVisitor.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,16 +1,16 @@\n-  SHA-256 checksum fd2923b3b9c2939e1ba9937c469154809b95674a048da7cb46cc3f0409c24e36\n+  SHA-256 checksum 06b3e5e160967480e2d17e5b6b98570a11f6cb42b2ea190257a355e6a5ac901b\n   Compiled from \"AccumulatorPathVisitor.java\"\n public class org.apache.commons.io.file.AccumulatorPathVisitor extends org.apache.commons.io.file.CountingPathVisitor\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/io/file/AccumulatorPathVisitor\n   super_class: #3                         // org/apache/commons/io/file/CountingPathVisitor\n-  interfaces: 0, fields: 2, methods: 12, attributes: 2\n+  interfaces: 0, fields: 2, methods: 10, attributes: 2\n Constant pool:\n     #1 = Class              #2            // org/apache/commons/io/file/AccumulatorPathVisitor\n     #2 = Utf8               org/apache/commons/io/file/AccumulatorPathVisitor\n     #3 = Class              #4            // org/apache/commons/io/file/CountingPathVisitor\n     #4 = Utf8               org/apache/commons/io/file/CountingPathVisitor\n     #5 = Utf8               dirList\n     #6 = Utf8               Ljava/util/List;\n@@ -126,25 +126,20 @@\n   #116 = NameAndType        #117:#44      // add:(Ljava/lang/Object;)Z\n   #117 = Utf8               add\n   #118 = Methodref          #3.#119       // org/apache/commons/io/file/CountingPathVisitor.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n   #119 = NameAndType        #94:#95       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n   #120 = Utf8               file\n   #121 = Utf8               attributes\n   #122 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n-  #123 = Utf8               ()Lorg/apache/commons/io/file/CountingPathVisitor;\n-  #124 = Methodref          #1.#125       // org/apache/commons/io/file/AccumulatorPathVisitor.withLongCounters:()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-  #125 = NameAndType        #25:#11       // withLongCounters:()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-  #126 = Methodref          #1.#127       // org/apache/commons/io/file/AccumulatorPathVisitor.withBigIntegerCounters:()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-  #127 = NameAndType        #10:#11       // withBigIntegerCounters:()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-  #128 = Utf8               SourceFile\n-  #129 = Utf8               AccumulatorPathVisitor.java\n-  #130 = Utf8               InnerClasses\n-  #131 = Class              #132          // org/apache/commons/io/file/Counters$PathCounters\n-  #132 = Utf8               org/apache/commons/io/file/Counters$PathCounters\n-  #133 = Utf8               PathCounters\n+  #123 = Utf8               SourceFile\n+  #124 = Utf8               AccumulatorPathVisitor.java\n+  #125 = Utf8               InnerClasses\n+  #126 = Class              #127          // org/apache/commons/io/file/Counters$PathCounters\n+  #127 = Utf8               org/apache/commons/io/file/Counters$PathCounters\n+  #128 = Utf8               PathCounters\n {\n   private final java.util.List<java.nio.file.Path> dirList;\n     descriptor: Ljava/util/List;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n     Signature: #8                           // Ljava/util/List<Ljava/nio/file/Path;>;\n \n   private final java.util.List<java.nio.file.Path> fileList;\n@@ -424,35 +419,11 @@\n             0      41     0  this   Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n             0      41     1  file   Ljava/nio/file/Path;\n             0      41     2 attributes   Ljava/nio/file/attribute/BasicFileAttributes;\n       StackMapTable: number_of_entries = 2\n         frame_type = 18 /* same */\n         frame_type = 67 /* same_locals_1_stack_item */\n           stack = [ class java/util/List ]\n-\n-  public static org.apache.commons.io.file.CountingPathVisitor withLongCounters();\n-    descriptor: ()Lorg/apache/commons/io/file/CountingPathVisitor;\n-    flags: (0x1049) ACC_PUBLIC, ACC_STATIC, ACC_BRIDGE, ACC_SYNTHETIC\n-    Code:\n-      stack=1, locals=0, args_size=0\n-         0: invokestatic  #124                // Method withLongCounters:()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-         3: areturn\n-      LineNumberTable:\n-        line 1: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-\n-  public static org.apache.commons.io.file.CountingPathVisitor withBigIntegerCounters();\n-    descriptor: ()Lorg/apache/commons/io/file/CountingPathVisitor;\n-    flags: (0x1049) ACC_PUBLIC, ACC_STATIC, ACC_BRIDGE, ACC_SYNTHETIC\n-    Code:\n-      stack=1, locals=0, args_size=0\n-         0: invokestatic  #126                // Method withBigIntegerCounters:()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-         3: areturn\n-      LineNumberTable:\n-        line 1: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n }\n SourceFile: \"AccumulatorPathVisitor.java\"\n InnerClasses:\n-  public static #133= #131 of #14;        // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n+  public static #128= #126 of #14;        // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n"}]}
