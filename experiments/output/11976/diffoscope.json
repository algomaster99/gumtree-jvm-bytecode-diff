{"diffoscope-json-version": 1, "source1": "first/CodeException.class", "source2": "second/CodeException.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,185 +1,185 @@\n-  SHA-256 checksum 61054828f4aca8c12c1994def94411819b0c790093fab4c1d1c5250aab1ab1a3\n+  SHA-256 checksum f974fb35b2bffd27a121f22fc9d6c99eef8ccb36ea5a5c548054d8891c71a9c4\n   Compiled from \"CodeException.java\"\n public final class org.apache.bcel.classfile.CodeException implements java.lang.Cloneable,org.apache.bcel.classfile.Node,org.apache.bcel.Constants\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #19                         // org/apache/bcel/classfile/CodeException\n-  super_class: #41                        // java/lang/Object\n+  this_class: #2                          // org/apache/bcel/classfile/CodeException\n+  super_class: #26                        // java/lang/Object\n   interfaces: 3, fields: 5, methods: 18, attributes: 1\n Constant pool:\n-    #1 = Methodref          #19.#103      // org/apache/bcel/classfile/CodeException.getStartPC:()I\n-    #2 = Methodref          #19.#104      // org/apache/bcel/classfile/CodeException.getEndPC:()I\n-    #3 = Methodref          #19.#105      // org/apache/bcel/classfile/CodeException.getHandlerPC:()I\n-    #4 = Methodref          #19.#106      // org/apache/bcel/classfile/CodeException.getCatchType:()I\n-    #5 = Methodref          #19.#107      // org/apache/bcel/classfile/CodeException.\"<init>\":(IIII)V\n-    #6 = InterfaceMethodref #108.#109     // java/io/DataInput.readUnsignedShort:()I\n-    #7 = Methodref          #41.#110      // java/lang/Object.\"<init>\":()V\n-    #8 = String             #47           // startPc\n-    #9 = Methodref          #111.#112     // org/apache/bcel/util/Args.requireU2:(ILjava/lang/String;)I\n-   #10 = Fieldref           #19.#113      // org/apache/bcel/classfile/CodeException.startPc:I\n-   #11 = String             #49           // endPc\n-   #12 = Fieldref           #19.#114      // org/apache/bcel/classfile/CodeException.endPc:I\n-   #13 = String             #50           // handlerPc\n-   #14 = Fieldref           #19.#115      // org/apache/bcel/classfile/CodeException.handlerPc:I\n-   #15 = String             #51           // catchType\n-   #16 = Fieldref           #19.#116      // org/apache/bcel/classfile/CodeException.catchType:I\n-   #17 = InterfaceMethodref #117.#118     // org/apache/bcel/classfile/Visitor.visitCodeException:(Lorg/apache/bcel/classfile/CodeException;)V\n-   #18 = Methodref          #41.#119      // java/lang/Object.clone:()Ljava/lang/Object;\n-   #19 = Class              #120          // org/apache/bcel/classfile/CodeException\n-   #20 = Class              #121          // java/lang/CloneNotSupportedException\n-   #21 = Methodref          #122.#123     // java/io/DataOutputStream.writeShort:(I)V\n-   #22 = Class              #124          // java/lang/StringBuilder\n-   #23 = Methodref          #22.#110      // java/lang/StringBuilder.\"<init>\":()V\n-   #24 = String             #125          // CodeException(startPc =\n-   #25 = Methodref          #22.#126      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #26 = Methodref          #22.#127      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #27 = String             #128          // , endPc =\n-   #28 = String             #129          // , handlerPc =\n-   #29 = String             #130          // , catchType =\n-   #30 = String             #131          // )\n-   #31 = Methodref          #22.#132      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #32 = Methodref          #19.#133      // org/apache/bcel/classfile/CodeException.toString:(Lorg/apache/bcel/classfile/ConstantPool;Z)Ljava/lang/String;\n-   #33 = String             #134          // <Any exception>(0)\n-   #34 = Class              #135          // org/apache/bcel/Const\n-   #35 = Methodref          #97.#136      // org/apache/bcel/classfile/ConstantPool.getConstantString:(IB)Ljava/lang/String;\n-   #36 = Methodref          #137.#138     // org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n-   #37 = String             #139          // (\n-   #38 = String             #140          //\n-   #39 = String             #141          // \\t\n-   #40 = Fieldref           #19.#142      // org/apache/bcel/classfile/CodeException.EMPTY_CODE_EXCEPTION_ARRAY:[Lorg/apache/bcel/classfile/CodeException;\n-   #41 = Class              #143          // java/lang/Object\n-   #42 = Class              #144          // java/lang/Cloneable\n-   #43 = Class              #145          // org/apache/bcel/classfile/Node\n-   #44 = Class              #146          // org/apache/bcel/Constants\n-   #45 = Utf8               EMPTY_CODE_EXCEPTION_ARRAY\n-   #46 = Utf8               [Lorg/apache/bcel/classfile/CodeException;\n-   #47 = Utf8               startPc\n-   #48 = Utf8               I\n-   #49 = Utf8               endPc\n-   #50 = Utf8               handlerPc\n-   #51 = Utf8               catchType\n-   #52 = Utf8               <init>\n-   #53 = Utf8               (Lorg/apache/bcel/classfile/CodeException;)V\n-   #54 = Utf8               Code\n-   #55 = Utf8               LineNumberTable\n-   #56 = Utf8               LocalVariableTable\n-   #57 = Utf8               this\n-   #58 = Utf8               Lorg/apache/bcel/classfile/CodeException;\n-   #59 = Utf8               c\n-   #60 = Utf8               MethodParameters\n-   #61 = Utf8               (Ljava/io/DataInput;)V\n-   #62 = Utf8               file\n-   #63 = Utf8               Ljava/io/DataInput;\n-   #64 = Utf8               Exceptions\n-   #65 = Class              #147          // java/io/IOException\n-   #66 = Utf8               (IIII)V\n-   #67 = Utf8               accept\n-   #68 = Utf8               (Lorg/apache/bcel/classfile/Visitor;)V\n-   #69 = Utf8               v\n-   #70 = Utf8               Lorg/apache/bcel/classfile/Visitor;\n-   #71 = Utf8               copy\n-   #72 = Utf8               ()Lorg/apache/bcel/classfile/CodeException;\n-   #73 = Utf8               StackMapTable\n-   #74 = Utf8               dump\n-   #75 = Utf8               (Ljava/io/DataOutputStream;)V\n-   #76 = Utf8               Ljava/io/DataOutputStream;\n-   #77 = Utf8               getCatchType\n-   #78 = Utf8               ()I\n-   #79 = Utf8               getEndPC\n-   #80 = Utf8               getHandlerPC\n-   #81 = Utf8               getStartPC\n-   #82 = Utf8               setCatchType\n-   #83 = Utf8               (I)V\n-   #84 = Utf8               setEndPC\n-   #85 = Utf8               setHandlerPC\n-   #86 = Utf8               setStartPC\n-   #87 = Utf8               toString\n-   #88 = Utf8               ()Ljava/lang/String;\n-   #89 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)Ljava/lang/String;\n-   #90 = Utf8               cp\n-   #91 = Utf8               Lorg/apache/bcel/classfile/ConstantPool;\n-   #92 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;Z)Ljava/lang/String;\n-   #93 = Utf8               str\n-   #94 = Utf8               Ljava/lang/String;\n-   #95 = Utf8               verbose\n-   #96 = Utf8               Z\n-   #97 = Class              #148          // org/apache/bcel/classfile/ConstantPool\n-   #98 = Class              #149          // java/lang/String\n-   #99 = Utf8               <clinit>\n-  #100 = Utf8               ()V\n-  #101 = Utf8               SourceFile\n-  #102 = Utf8               CodeException.java\n-  #103 = NameAndType        #81:#78       // getStartPC:()I\n-  #104 = NameAndType        #79:#78       // getEndPC:()I\n-  #105 = NameAndType        #80:#78       // getHandlerPC:()I\n-  #106 = NameAndType        #77:#78       // getCatchType:()I\n-  #107 = NameAndType        #52:#66       // \"<init>\":(IIII)V\n-  #108 = Class              #150          // java/io/DataInput\n-  #109 = NameAndType        #151:#78      // readUnsignedShort:()I\n-  #110 = NameAndType        #52:#100      // \"<init>\":()V\n-  #111 = Class              #152          // org/apache/bcel/util/Args\n-  #112 = NameAndType        #153:#154     // requireU2:(ILjava/lang/String;)I\n-  #113 = NameAndType        #47:#48       // startPc:I\n-  #114 = NameAndType        #49:#48       // endPc:I\n-  #115 = NameAndType        #50:#48       // handlerPc:I\n-  #116 = NameAndType        #51:#48       // catchType:I\n-  #117 = Class              #155          // org/apache/bcel/classfile/Visitor\n-  #118 = NameAndType        #156:#53      // visitCodeException:(Lorg/apache/bcel/classfile/CodeException;)V\n-  #119 = NameAndType        #157:#158     // clone:()Ljava/lang/Object;\n-  #120 = Utf8               org/apache/bcel/classfile/CodeException\n-  #121 = Utf8               java/lang/CloneNotSupportedException\n-  #122 = Class              #159          // java/io/DataOutputStream\n-  #123 = NameAndType        #160:#83      // writeShort:(I)V\n-  #124 = Utf8               java/lang/StringBuilder\n-  #125 = Utf8               CodeException(startPc =\n-  #126 = NameAndType        #161:#162     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #127 = NameAndType        #161:#163     // append:(I)Ljava/lang/StringBuilder;\n-  #128 = Utf8               , endPc =\n-  #129 = Utf8               , handlerPc =\n-  #130 = Utf8               , catchType =\n-  #131 = Utf8               )\n-  #132 = NameAndType        #87:#88       // toString:()Ljava/lang/String;\n-  #133 = NameAndType        #87:#92       // toString:(Lorg/apache/bcel/classfile/ConstantPool;Z)Ljava/lang/String;\n-  #134 = Utf8               <Any exception>(0)\n-  #135 = Utf8               org/apache/bcel/Const\n-  #136 = NameAndType        #164:#165     // getConstantString:(IB)Ljava/lang/String;\n-  #137 = Class              #166          // org/apache/bcel/classfile/Utility\n-  #138 = NameAndType        #167:#168     // compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n-  #139 = Utf8               (\n-  #140 = Utf8\n-  #141 = Utf8               \\t\n-  #142 = NameAndType        #45:#46       // EMPTY_CODE_EXCEPTION_ARRAY:[Lorg/apache/bcel/classfile/CodeException;\n-  #143 = Utf8               java/lang/Object\n-  #144 = Utf8               java/lang/Cloneable\n-  #145 = Utf8               org/apache/bcel/classfile/Node\n-  #146 = Utf8               org/apache/bcel/Constants\n-  #147 = Utf8               java/io/IOException\n-  #148 = Utf8               org/apache/bcel/classfile/ConstantPool\n-  #149 = Utf8               java/lang/String\n-  #150 = Utf8               java/io/DataInput\n-  #151 = Utf8               readUnsignedShort\n-  #152 = Utf8               org/apache/bcel/util/Args\n-  #153 = Utf8               requireU2\n-  #154 = Utf8               (ILjava/lang/String;)I\n-  #155 = Utf8               org/apache/bcel/classfile/Visitor\n-  #156 = Utf8               visitCodeException\n-  #157 = Utf8               clone\n-  #158 = Utf8               ()Ljava/lang/Object;\n-  #159 = Utf8               java/io/DataOutputStream\n-  #160 = Utf8               writeShort\n-  #161 = Utf8               append\n-  #162 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #163 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #164 = Utf8               getConstantString\n-  #165 = Utf8               (IB)Ljava/lang/String;\n-  #166 = Utf8               org/apache/bcel/classfile/Utility\n-  #167 = Utf8               compactClassName\n-  #168 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n+    #1 = Methodref          #2.#3         // org/apache/bcel/classfile/CodeException.getStartPC:()I\n+    #2 = Class              #4            // org/apache/bcel/classfile/CodeException\n+    #3 = NameAndType        #5:#6         // getStartPC:()I\n+    #4 = Utf8               org/apache/bcel/classfile/CodeException\n+    #5 = Utf8               getStartPC\n+    #6 = Utf8               ()I\n+    #7 = Methodref          #2.#8         // org/apache/bcel/classfile/CodeException.getEndPC:()I\n+    #8 = NameAndType        #9:#6         // getEndPC:()I\n+    #9 = Utf8               getEndPC\n+   #10 = Methodref          #2.#11        // org/apache/bcel/classfile/CodeException.getHandlerPC:()I\n+   #11 = NameAndType        #12:#6        // getHandlerPC:()I\n+   #12 = Utf8               getHandlerPC\n+   #13 = Methodref          #2.#14        // org/apache/bcel/classfile/CodeException.getCatchType:()I\n+   #14 = NameAndType        #15:#6        // getCatchType:()I\n+   #15 = Utf8               getCatchType\n+   #16 = Methodref          #2.#17        // org/apache/bcel/classfile/CodeException.\"<init>\":(IIII)V\n+   #17 = NameAndType        #18:#19       // \"<init>\":(IIII)V\n+   #18 = Utf8               <init>\n+   #19 = Utf8               (IIII)V\n+   #20 = InterfaceMethodref #21.#22       // java/io/DataInput.readUnsignedShort:()I\n+   #21 = Class              #23           // java/io/DataInput\n+   #22 = NameAndType        #24:#6        // readUnsignedShort:()I\n+   #23 = Utf8               java/io/DataInput\n+   #24 = Utf8               readUnsignedShort\n+   #25 = Methodref          #26.#27       // java/lang/Object.\"<init>\":()V\n+   #26 = Class              #28           // java/lang/Object\n+   #27 = NameAndType        #18:#29       // \"<init>\":()V\n+   #28 = Utf8               java/lang/Object\n+   #29 = Utf8               ()V\n+   #30 = String             #31           // startPc\n+   #31 = Utf8               startPc\n+   #32 = Methodref          #33.#34       // org/apache/bcel/util/Args.requireU2:(ILjava/lang/String;)I\n+   #33 = Class              #35           // org/apache/bcel/util/Args\n+   #34 = NameAndType        #36:#37       // requireU2:(ILjava/lang/String;)I\n+   #35 = Utf8               org/apache/bcel/util/Args\n+   #36 = Utf8               requireU2\n+   #37 = Utf8               (ILjava/lang/String;)I\n+   #38 = Fieldref           #2.#39        // org/apache/bcel/classfile/CodeException.startPc:I\n+   #39 = NameAndType        #31:#40       // startPc:I\n+   #40 = Utf8               I\n+   #41 = String             #42           // endPc\n+   #42 = Utf8               endPc\n+   #43 = Fieldref           #2.#44        // org/apache/bcel/classfile/CodeException.endPc:I\n+   #44 = NameAndType        #42:#40       // endPc:I\n+   #45 = String             #46           // handlerPc\n+   #46 = Utf8               handlerPc\n+   #47 = Fieldref           #2.#48        // org/apache/bcel/classfile/CodeException.handlerPc:I\n+   #48 = NameAndType        #46:#40       // handlerPc:I\n+   #49 = String             #50           // catchType\n+   #50 = Utf8               catchType\n+   #51 = Fieldref           #2.#52        // org/apache/bcel/classfile/CodeException.catchType:I\n+   #52 = NameAndType        #50:#40       // catchType:I\n+   #53 = InterfaceMethodref #54.#55       // org/apache/bcel/classfile/Visitor.visitCodeException:(Lorg/apache/bcel/classfile/CodeException;)V\n+   #54 = Class              #56           // org/apache/bcel/classfile/Visitor\n+   #55 = NameAndType        #57:#58       // visitCodeException:(Lorg/apache/bcel/classfile/CodeException;)V\n+   #56 = Utf8               org/apache/bcel/classfile/Visitor\n+   #57 = Utf8               visitCodeException\n+   #58 = Utf8               (Lorg/apache/bcel/classfile/CodeException;)V\n+   #59 = Methodref          #26.#60       // java/lang/Object.clone:()Ljava/lang/Object;\n+   #60 = NameAndType        #61:#62       // clone:()Ljava/lang/Object;\n+   #61 = Utf8               clone\n+   #62 = Utf8               ()Ljava/lang/Object;\n+   #63 = Class              #64           // java/lang/CloneNotSupportedException\n+   #64 = Utf8               java/lang/CloneNotSupportedException\n+   #65 = Methodref          #66.#67       // java/io/DataOutputStream.writeShort:(I)V\n+   #66 = Class              #68           // java/io/DataOutputStream\n+   #67 = NameAndType        #69:#70       // writeShort:(I)V\n+   #68 = Utf8               java/io/DataOutputStream\n+   #69 = Utf8               writeShort\n+   #70 = Utf8               (I)V\n+   #71 = Class              #72           // java/lang/StringBuilder\n+   #72 = Utf8               java/lang/StringBuilder\n+   #73 = Methodref          #71.#27       // java/lang/StringBuilder.\"<init>\":()V\n+   #74 = String             #75           // CodeException(startPc =\n+   #75 = Utf8               CodeException(startPc =\n+   #76 = Methodref          #71.#77       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #77 = NameAndType        #78:#79       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #78 = Utf8               append\n+   #79 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #80 = Methodref          #71.#81       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #81 = NameAndType        #78:#82       // append:(I)Ljava/lang/StringBuilder;\n+   #82 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #83 = String             #84           // , endPc =\n+   #84 = Utf8               , endPc =\n+   #85 = String             #86           // , handlerPc =\n+   #86 = Utf8               , handlerPc =\n+   #87 = String             #88           // , catchType =\n+   #88 = Utf8               , catchType =\n+   #89 = String             #90           // )\n+   #90 = Utf8               )\n+   #91 = Methodref          #71.#92       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #92 = NameAndType        #93:#94       // toString:()Ljava/lang/String;\n+   #93 = Utf8               toString\n+   #94 = Utf8               ()Ljava/lang/String;\n+   #95 = Methodref          #2.#96        // org/apache/bcel/classfile/CodeException.toString:(Lorg/apache/bcel/classfile/ConstantPool;Z)Ljava/lang/String;\n+   #96 = NameAndType        #93:#97       // toString:(Lorg/apache/bcel/classfile/ConstantPool;Z)Ljava/lang/String;\n+   #97 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;Z)Ljava/lang/String;\n+   #98 = String             #99           // <Any exception>(0)\n+   #99 = Utf8               <Any exception>(0)\n+  #100 = Class              #101          // org/apache/bcel/Const\n+  #101 = Utf8               org/apache/bcel/Const\n+  #102 = Methodref          #103.#104     // org/apache/bcel/classfile/ConstantPool.getConstantString:(IB)Ljava/lang/String;\n+  #103 = Class              #105          // org/apache/bcel/classfile/ConstantPool\n+  #104 = NameAndType        #106:#107     // getConstantString:(IB)Ljava/lang/String;\n+  #105 = Utf8               org/apache/bcel/classfile/ConstantPool\n+  #106 = Utf8               getConstantString\n+  #107 = Utf8               (IB)Ljava/lang/String;\n+  #108 = Methodref          #109.#110     // org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n+  #109 = Class              #111          // org/apache/bcel/classfile/Utility\n+  #110 = NameAndType        #112:#113     // compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n+  #111 = Utf8               org/apache/bcel/classfile/Utility\n+  #112 = Utf8               compactClassName\n+  #113 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n+  #114 = String             #115          // (\n+  #115 = Utf8               (\n+  #116 = String             #117          //\n+  #117 = Utf8\n+  #118 = String             #119          // \\t\n+  #119 = Utf8               \\t\n+  #120 = Fieldref           #2.#121       // org/apache/bcel/classfile/CodeException.EMPTY_CODE_EXCEPTION_ARRAY:[Lorg/apache/bcel/classfile/CodeException;\n+  #121 = NameAndType        #122:#123     // EMPTY_CODE_EXCEPTION_ARRAY:[Lorg/apache/bcel/classfile/CodeException;\n+  #122 = Utf8               EMPTY_CODE_EXCEPTION_ARRAY\n+  #123 = Utf8               [Lorg/apache/bcel/classfile/CodeException;\n+  #124 = Class              #125          // java/lang/Cloneable\n+  #125 = Utf8               java/lang/Cloneable\n+  #126 = Class              #127          // org/apache/bcel/classfile/Node\n+  #127 = Utf8               org/apache/bcel/classfile/Node\n+  #128 = Class              #129          // org/apache/bcel/Constants\n+  #129 = Utf8               org/apache/bcel/Constants\n+  #130 = Utf8               Code\n+  #131 = Utf8               LineNumberTable\n+  #132 = Utf8               LocalVariableTable\n+  #133 = Utf8               this\n+  #134 = Utf8               Lorg/apache/bcel/classfile/CodeException;\n+  #135 = Utf8               c\n+  #136 = Utf8               MethodParameters\n+  #137 = Utf8               (Ljava/io/DataInput;)V\n+  #138 = Utf8               file\n+  #139 = Utf8               Ljava/io/DataInput;\n+  #140 = Utf8               Exceptions\n+  #141 = Class              #142          // java/io/IOException\n+  #142 = Utf8               java/io/IOException\n+  #143 = Utf8               accept\n+  #144 = Utf8               (Lorg/apache/bcel/classfile/Visitor;)V\n+  #145 = Utf8               v\n+  #146 = Utf8               Lorg/apache/bcel/classfile/Visitor;\n+  #147 = Utf8               copy\n+  #148 = Utf8               ()Lorg/apache/bcel/classfile/CodeException;\n+  #149 = Utf8               StackMapTable\n+  #150 = Utf8               dump\n+  #151 = Utf8               (Ljava/io/DataOutputStream;)V\n+  #152 = Utf8               Ljava/io/DataOutputStream;\n+  #153 = Utf8               setCatchType\n+  #154 = Utf8               setEndPC\n+  #155 = Utf8               setHandlerPC\n+  #156 = Utf8               setStartPC\n+  #157 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)Ljava/lang/String;\n+  #158 = Utf8               cp\n+  #159 = Utf8               Lorg/apache/bcel/classfile/ConstantPool;\n+  #160 = Utf8               str\n+  #161 = Utf8               Ljava/lang/String;\n+  #162 = Utf8               verbose\n+  #163 = Utf8               Z\n+  #164 = Class              #165          // java/lang/String\n+  #165 = Utf8               java/lang/String\n+  #166 = Utf8               <clinit>\n+  #167 = Utf8               SourceFile\n+  #168 = Utf8               CodeException.java\n {\n   static final org.apache.bcel.classfile.CodeException[] EMPTY_CODE_EXCEPTION_ARRAY;\n     descriptor: [Lorg/apache/bcel/classfile/CodeException;\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n \n   private int startPc;\n     descriptor: I\n@@ -202,20 +202,20 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: invokevirtual #1                  // Method getStartPC:()I\n          5: aload_1\n-         6: invokevirtual #2                  // Method getEndPC:()I\n+         6: invokevirtual #7                  // Method getEndPC:()I\n          9: aload_1\n-        10: invokevirtual #3                  // Method getHandlerPC:()I\n+        10: invokevirtual #10                 // Method getHandlerPC:()I\n         13: aload_1\n-        14: invokevirtual #4                  // Method getCatchType:()I\n-        17: invokespecial #5                  // Method \"<init>\":(IIII)V\n+        14: invokevirtual #13                 // Method getCatchType:()I\n+        17: invokespecial #16                 // Method \"<init>\":(IIII)V\n         20: return\n       LineNumberTable:\n         line 82: 0\n         line 83: 20\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      21     0  this   Lorg/apache/bcel/classfile/CodeException;\n@@ -227,22 +227,22 @@\n   org.apache.bcel.classfile.CodeException(java.io.DataInput) throws java.io.IOException;\n     descriptor: (Ljava/io/DataInput;)V\n     flags: (0x0000)\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokeinterface #6,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n+         2: invokeinterface #20,  1           // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n          7: aload_1\n-         8: invokeinterface #6,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n+         8: invokeinterface #20,  1           // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n         13: aload_1\n-        14: invokeinterface #6,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n+        14: invokeinterface #20,  1           // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n         19: aload_1\n-        20: invokeinterface #6,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n-        25: invokespecial #5                  // Method \"<init>\":(IIII)V\n+        20: invokeinterface #20,  1           // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n+        25: invokespecial #16                 // Method \"<init>\":(IIII)V\n         28: return\n       LineNumberTable:\n         line 92: 0\n         line 93: 28\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      29     0  this   Lorg/apache/bcel/classfile/CodeException;\n@@ -255,35 +255,35 @@\n \n   public org.apache.bcel.classfile.CodeException(int, int, int, int);\n     descriptor: (IIII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=5, args_size=5\n          0: aload_0\n-         1: invokespecial #7                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #25                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iload_1\n-         6: ldc           #8                  // String startPc\n-         8: invokestatic  #9                  // Method org/apache/bcel/util/Args.requireU2:(ILjava/lang/String;)I\n-        11: putfield      #10                 // Field startPc:I\n+         6: ldc           #30                 // String startPc\n+         8: invokestatic  #32                 // Method org/apache/bcel/util/Args.requireU2:(ILjava/lang/String;)I\n+        11: putfield      #38                 // Field startPc:I\n         14: aload_0\n         15: iload_2\n-        16: ldc           #11                 // String endPc\n-        18: invokestatic  #9                  // Method org/apache/bcel/util/Args.requireU2:(ILjava/lang/String;)I\n-        21: putfield      #12                 // Field endPc:I\n+        16: ldc           #41                 // String endPc\n+        18: invokestatic  #32                 // Method org/apache/bcel/util/Args.requireU2:(ILjava/lang/String;)I\n+        21: putfield      #43                 // Field endPc:I\n         24: aload_0\n         25: iload_3\n-        26: ldc           #13                 // String handlerPc\n-        28: invokestatic  #9                  // Method org/apache/bcel/util/Args.requireU2:(ILjava/lang/String;)I\n-        31: putfield      #14                 // Field handlerPc:I\n+        26: ldc           #45                 // String handlerPc\n+        28: invokestatic  #32                 // Method org/apache/bcel/util/Args.requireU2:(ILjava/lang/String;)I\n+        31: putfield      #47                 // Field handlerPc:I\n         34: aload_0\n         35: iload         4\n-        37: ldc           #15                 // String catchType\n-        39: invokestatic  #9                  // Method org/apache/bcel/util/Args.requireU2:(ILjava/lang/String;)I\n-        42: putfield      #16                 // Field catchType:I\n+        37: ldc           #49                 // String catchType\n+        39: invokestatic  #32                 // Method org/apache/bcel/util/Args.requireU2:(ILjava/lang/String;)I\n+        42: putfield      #51                 // Field catchType:I\n         45: return\n       LineNumberTable:\n         line 104: 0\n         line 105: 4\n         line 106: 14\n         line 107: 24\n         line 108: 34\n@@ -305,15 +305,15 @@\n   public void accept(org.apache.bcel.classfile.Visitor);\n     descriptor: (Lorg/apache/bcel/classfile/Visitor;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: invokeinterface #17,  2           // InterfaceMethod org/apache/bcel/classfile/Visitor.visitCodeException:(Lorg/apache/bcel/classfile/CodeException;)V\n+         2: invokeinterface #53,  2           // InterfaceMethod org/apache/bcel/classfile/Visitor.visitCodeException:(Lorg/apache/bcel/classfile/CodeException;)V\n          7: return\n       LineNumberTable:\n         line 119: 0\n         line 120: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/bcel/classfile/CodeException;\n@@ -324,16 +324,16 @@\n \n   public org.apache.bcel.classfile.CodeException copy();\n     descriptor: ()Lorg/apache/bcel/classfile/CodeException;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #18                 // Method java/lang/Object.clone:()Ljava/lang/Object;\n-         4: checkcast     #19                 // class org/apache/bcel/classfile/CodeException\n+         1: invokevirtual #59                 // Method java/lang/Object.clone:()Ljava/lang/Object;\n+         4: checkcast     #2                  // class org/apache/bcel/classfile/CodeException\n          7: areturn\n          8: astore_1\n          9: aconst_null\n         10: areturn\n       Exception table:\n          from    to  target type\n              0     7     8   Class java/lang/CloneNotSupportedException\n@@ -351,28 +351,28 @@\n   public void dump(java.io.DataOutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/DataOutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: getfield      #10                 // Field startPc:I\n-         5: invokevirtual #21                 // Method java/io/DataOutputStream.writeShort:(I)V\n+         2: getfield      #38                 // Field startPc:I\n+         5: invokevirtual #65                 // Method java/io/DataOutputStream.writeShort:(I)V\n          8: aload_1\n          9: aload_0\n-        10: getfield      #12                 // Field endPc:I\n-        13: invokevirtual #21                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        10: getfield      #43                 // Field endPc:I\n+        13: invokevirtual #65                 // Method java/io/DataOutputStream.writeShort:(I)V\n         16: aload_1\n         17: aload_0\n-        18: getfield      #14                 // Field handlerPc:I\n-        21: invokevirtual #21                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        18: getfield      #47                 // Field handlerPc:I\n+        21: invokevirtual #65                 // Method java/io/DataOutputStream.writeShort:(I)V\n         24: aload_1\n         25: aload_0\n-        26: getfield      #16                 // Field catchType:I\n-        29: invokevirtual #21                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        26: getfield      #51                 // Field catchType:I\n+        29: invokevirtual #65                 // Method java/io/DataOutputStream.writeShort:(I)V\n         32: return\n       LineNumberTable:\n         line 141: 0\n         line 142: 8\n         line 143: 16\n         line 144: 24\n         line 145: 32\n@@ -388,72 +388,72 @@\n \n   public int getCatchType();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #16                 // Field catchType:I\n+         1: getfield      #51                 // Field catchType:I\n          4: ireturn\n       LineNumberTable:\n         line 151: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/bcel/classfile/CodeException;\n \n   public int getEndPC();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field endPc:I\n+         1: getfield      #43                 // Field endPc:I\n          4: ireturn\n       LineNumberTable:\n         line 158: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/bcel/classfile/CodeException;\n \n   public int getHandlerPC();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #14                 // Field handlerPc:I\n+         1: getfield      #47                 // Field handlerPc:I\n          4: ireturn\n       LineNumberTable:\n         line 165: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/bcel/classfile/CodeException;\n \n   public int getStartPC();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field startPc:I\n+         1: getfield      #38                 // Field startPc:I\n          4: ireturn\n       LineNumberTable:\n         line 172: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/bcel/classfile/CodeException;\n \n   public void setCatchType(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #16                 // Field catchType:I\n+         2: putfield      #51                 // Field catchType:I\n          5: return\n       LineNumberTable:\n         line 179: 0\n         line 180: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/bcel/classfile/CodeException;\n@@ -465,15 +465,15 @@\n   public void setEndPC(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #12                 // Field endPc:I\n+         2: putfield      #43                 // Field endPc:I\n          5: return\n       LineNumberTable:\n         line 186: 0\n         line 187: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/bcel/classfile/CodeException;\n@@ -485,15 +485,15 @@\n   public void setHandlerPC(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #14                 // Field handlerPc:I\n+         2: putfield      #47                 // Field handlerPc:I\n          5: return\n       LineNumberTable:\n         line 193: 0\n         line 194: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/bcel/classfile/CodeException;\n@@ -505,15 +505,15 @@\n   public void setStartPC(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #10                 // Field startPc:I\n+         2: putfield      #38                 // Field startPc:I\n          5: return\n       LineNumberTable:\n         line 200: 0\n         line 201: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/bcel/classfile/CodeException;\n@@ -523,40 +523,40 @@\n       startPc                        final\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: new           #22                 // class java/lang/StringBuilder\n+         0: new           #71                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #23                 // Method java/lang/StringBuilder.\"<init>\":()V\n-         7: ldc           #24                 // String CodeException(startPc =\n-         9: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+         4: invokespecial #73                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         7: ldc           #74                 // String CodeException(startPc =\n+         9: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         12: aload_0\n-        13: getfield      #10                 // Field startPc:I\n-        16: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        19: ldc           #27                 // String , endPc =\n-        21: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        13: getfield      #38                 // Field startPc:I\n+        16: invokevirtual #80                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        19: ldc           #83                 // String , endPc =\n+        21: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         24: aload_0\n-        25: getfield      #12                 // Field endPc:I\n-        28: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        31: ldc           #28                 // String , handlerPc =\n-        33: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        25: getfield      #43                 // Field endPc:I\n+        28: invokevirtual #80                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        31: ldc           #85                 // String , handlerPc =\n+        33: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         36: aload_0\n-        37: getfield      #14                 // Field handlerPc:I\n-        40: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        43: ldc           #29                 // String , catchType =\n-        45: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        37: getfield      #47                 // Field handlerPc:I\n+        40: invokevirtual #80                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        43: ldc           #87                 // String , catchType =\n+        45: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         48: aload_0\n-        49: getfield      #16                 // Field catchType:I\n-        52: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        55: ldc           #30                 // String )\n-        57: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        60: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        49: getfield      #51                 // Field catchType:I\n+        52: invokevirtual #80                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        55: ldc           #89                 // String )\n+        57: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        60: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         63: areturn\n       LineNumberTable:\n         line 208: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      64     0  this   Lorg/apache/bcel/classfile/CodeException;\n \n@@ -564,15 +564,15 @@\n     descriptor: (Lorg/apache/bcel/classfile/ConstantPool;)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_1\n-         3: invokevirtual #32                 // Method toString:(Lorg/apache/bcel/classfile/ConstantPool;Z)Ljava/lang/String;\n+         3: invokevirtual #95                 // Method toString:(Lorg/apache/bcel/classfile/ConstantPool;Z)Ljava/lang/String;\n          6: areturn\n       LineNumberTable:\n         line 212: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/bcel/classfile/CodeException;\n             0       7     1    cp   Lorg/apache/bcel/classfile/ConstantPool;\n@@ -582,69 +582,69 @@\n \n   public java.lang.String toString(org.apache.bcel.classfile.ConstantPool, boolean);\n     descriptor: (Lorg/apache/bcel/classfile/ConstantPool;Z)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=3\n          0: aload_0\n-         1: getfield      #16                 // Field catchType:I\n+         1: getfield      #51                 // Field catchType:I\n          4: ifne          13\n-         7: ldc           #33                 // String <Any exception>(0)\n+         7: ldc           #98                 // String <Any exception>(0)\n          9: astore_3\n         10: goto          80\n-        13: new           #22                 // class java/lang/StringBuilder\n+        13: new           #71                 // class java/lang/StringBuilder\n         16: dup\n-        17: invokespecial #23                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        17: invokespecial #73                 // Method java/lang/StringBuilder.\"<init>\":()V\n         20: aload_1\n         21: aload_0\n-        22: getfield      #16                 // Field catchType:I\n+        22: getfield      #51                 // Field catchType:I\n         25: bipush        7\n-        27: invokevirtual #35                 // Method org/apache/bcel/classfile/ConstantPool.getConstantString:(IB)Ljava/lang/String;\n+        27: invokevirtual #102                // Method org/apache/bcel/classfile/ConstantPool.getConstantString:(IB)Ljava/lang/String;\n         30: iconst_0\n-        31: invokestatic  #36                 // Method org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n-        34: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        31: invokestatic  #108                // Method org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n+        34: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         37: iload_2\n         38: ifeq          71\n-        41: new           #22                 // class java/lang/StringBuilder\n+        41: new           #71                 // class java/lang/StringBuilder\n         44: dup\n-        45: invokespecial #23                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        48: ldc           #37                 // String (\n-        50: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        45: invokespecial #73                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        48: ldc           #114                // String (\n+        50: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         53: aload_0\n-        54: getfield      #16                 // Field catchType:I\n-        57: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        60: ldc           #30                 // String )\n-        62: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        65: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        54: getfield      #51                 // Field catchType:I\n+        57: invokevirtual #80                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        60: ldc           #89                 // String )\n+        62: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        65: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         68: goto          73\n-        71: ldc           #38                 // String\n-        73: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        76: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        71: ldc           #116                // String\n+        73: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        76: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         79: astore_3\n-        80: new           #22                 // class java/lang/StringBuilder\n+        80: new           #71                 // class java/lang/StringBuilder\n         83: dup\n-        84: invokespecial #23                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        84: invokespecial #73                 // Method java/lang/StringBuilder.\"<init>\":()V\n         87: aload_0\n-        88: getfield      #10                 // Field startPc:I\n-        91: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        94: ldc           #39                 // String \\t\n-        96: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        88: getfield      #38                 // Field startPc:I\n+        91: invokevirtual #80                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        94: ldc           #118                // String \\t\n+        96: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         99: aload_0\n-       100: getfield      #12                 // Field endPc:I\n-       103: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       106: ldc           #39                 // String \\t\n-       108: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       100: getfield      #43                 // Field endPc:I\n+       103: invokevirtual #80                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       106: ldc           #118                // String \\t\n+       108: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        111: aload_0\n-       112: getfield      #14                 // Field handlerPc:I\n-       115: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       118: ldc           #39                 // String \\t\n-       120: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       112: getfield      #47                 // Field handlerPc:I\n+       115: invokevirtual #80                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       118: ldc           #118                // String \\t\n+       120: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        123: aload_3\n-       124: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       127: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       124: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       127: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        130: areturn\n       LineNumberTable:\n         line 222: 0\n         line 223: 7\n         line 225: 13\n         line 227: 80\n       LocalVariableTable:\n@@ -672,14 +672,14 @@\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: iconst_0\n-         1: anewarray     #19                 // class org/apache/bcel/classfile/CodeException\n-         4: putstatic     #40                 // Field EMPTY_CODE_EXCEPTION_ARRAY:[Lorg/apache/bcel/classfile/CodeException;\n+         1: anewarray     #2                  // class org/apache/bcel/classfile/CodeException\n+         4: putstatic     #120                // Field EMPTY_CODE_EXCEPTION_ARRAY:[Lorg/apache/bcel/classfile/CodeException;\n          7: return\n       LineNumberTable:\n         line 58: 0\n }\n SourceFile: \"CodeException.java\"\n"}]}
