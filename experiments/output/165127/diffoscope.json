{"diffoscope-json-version": 1, "source1": "first/SnappyCompressorInputStream.class", "source2": "second/SnappyCompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,64 +1,64 @@\n-  SHA-256 checksum 40618cb629e03cba4cfe7695a814ab7fc11068a47f70c3cf1eac025a96a9b777\n+  SHA-256 checksum 189d5d347b4ff1ef6312a0ccaab47bc597e4b74e10c9797b6d535969dbe992b1\n   Compiled from \"SnappyCompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream extends org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n   super_class: #44                        // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n   interfaces: 0, fields: 6, methods: 7, attributes: 2\n Constant pool:\n-    #1 = Class              #99           // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n+    #1 = Class              #98           // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n     #2 = Integer            32768\n-    #3 = Methodref          #1.#100       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-    #4 = Methodref          #44.#100      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-    #5 = Fieldref           #47.#101      // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State.NO_BLOCK:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State;\n-    #6 = Fieldref           #1.#102       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.state:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State;\n-    #7 = Methodref          #1.#103       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.readSize:()J\n-    #8 = Fieldref           #1.#104       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.size:I\n-    #9 = Fieldref           #1.#105       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.uncompressedBytesRemaining:I\n-   #10 = Fieldref           #1.#106       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.endReached:Z\n-   #11 = Fieldref           #45.#107      // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$1.$SwitchMap$org$apache$commons$compress$compressors$snappy$SnappyCompressorInputStream$State:[I\n-   #12 = Methodref          #47.#108      // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State.ordinal:()I\n-   #13 = Methodref          #1.#109       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.fill:()V\n-   #14 = Methodref          #1.#110       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.read:([BII)I\n-   #15 = Methodref          #1.#111       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.readLiteral:([BII)I\n-   #16 = Methodref          #1.#112       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.hasMoreDataInBlock:()Z\n-   #17 = Methodref          #1.#113       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.readBackReference:([BII)I\n-   #18 = Class              #114          // java/io/IOException\n-   #19 = Class              #115          // java/lang/StringBuilder\n-   #20 = Methodref          #19.#116      // java/lang/StringBuilder.\"<init>\":()V\n-   #21 = String             #117          // Unknown stream state\n-   #22 = Methodref          #19.#118      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #23 = Methodref          #19.#119      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #24 = Methodref          #19.#120      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #25 = Methodref          #18.#121      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #26 = Methodref          #1.#122       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.readOneByte:()I\n-   #27 = String             #123          // Premature end of stream reading block start\n-   #28 = Methodref          #1.#124       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.readLiteralLength:(I)I\n-   #29 = String             #125          // Illegal block with a negative literal size found\n-   #30 = Methodref          #1.#126       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.startLiteral:(J)V\n-   #31 = Fieldref           #47.#127      // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State.IN_LITERAL:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State;\n-   #32 = String             #128          // Premature end of stream reading back-reference length\n-   #33 = Methodref          #1.#129       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.startBackReference:(IJ)V\n-   #34 = Class              #130          // java/lang/IllegalArgumentException\n-   #35 = String             #131          // Illegal block with bad offset found\n-   #36 = Methodref          #18.#132      // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #37 = Fieldref           #47.#133      // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State.IN_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State;\n-   #38 = String             #134          // Illegal block with a negative match length found\n-   #39 = Fieldref           #1.#135       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-   #40 = Methodref          #136.#137     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+    #3 = Methodref          #1.#99        // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+    #4 = Methodref          #44.#99       // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+    #5 = Fieldref           #47.#100      // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State.NO_BLOCK:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State;\n+    #6 = Fieldref           #1.#101       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.state:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State;\n+    #7 = Methodref          #1.#102       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.readSize:()J\n+    #8 = Fieldref           #1.#103       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.size:I\n+    #9 = Fieldref           #1.#104       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.uncompressedBytesRemaining:I\n+   #10 = Fieldref           #1.#105       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.endReached:Z\n+   #11 = Fieldref           #45.#106      // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$1.$SwitchMap$org$apache$commons$compress$compressors$snappy$SnappyCompressorInputStream$State:[I\n+   #12 = Methodref          #47.#107      // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State.ordinal:()I\n+   #13 = Methodref          #1.#108       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.fill:()V\n+   #14 = Methodref          #1.#109       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.read:([BII)I\n+   #15 = Methodref          #1.#110       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.readLiteral:([BII)I\n+   #16 = Methodref          #1.#111       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.hasMoreDataInBlock:()Z\n+   #17 = Methodref          #1.#112       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.readBackReference:([BII)I\n+   #18 = Class              #113          // java/io/IOException\n+   #19 = Class              #114          // java/lang/StringBuilder\n+   #20 = Methodref          #19.#115      // java/lang/StringBuilder.\"<init>\":()V\n+   #21 = String             #116          // Unknown stream state\n+   #22 = Methodref          #19.#117      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #23 = Methodref          #19.#118      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #24 = Methodref          #19.#119      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #25 = Methodref          #18.#120      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #26 = Methodref          #1.#121       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.readOneByte:()I\n+   #27 = String             #122          // Premature end of stream reading block start\n+   #28 = Methodref          #1.#123       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.readLiteralLength:(I)I\n+   #29 = String             #124          // Illegal block with a negative literal size found\n+   #30 = Methodref          #1.#125       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.startLiteral:(J)V\n+   #31 = Fieldref           #47.#126      // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State.IN_LITERAL:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State;\n+   #32 = String             #127          // Premature end of stream reading back-reference length\n+   #33 = Methodref          #1.#128       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.startBackReference:(IJ)V\n+   #34 = Class              #129          // java/lang/IllegalArgumentException\n+   #35 = String             #130          // Illegal block with bad offset found\n+   #36 = Methodref          #18.#131      // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #37 = Fieldref           #47.#132      // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State.IN_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State;\n+   #38 = String             #133          // Illegal block with a negative match length found\n+   #39 = Fieldref           #1.#134       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #40 = Methodref          #135.#136     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n    #41 = Integer            2147483647\n-   #42 = String             #138          // Premature end of stream reading literal length\n-   #43 = String             #139          // Premature end of stream reading size\n-   #44 = Class              #140          // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n-   #45 = Class              #141          // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$1\n+   #42 = String             #137          // Premature end of stream reading literal length\n+   #43 = String             #138          // Premature end of stream reading size\n+   #44 = Class              #139          // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n+   #45 = Class              #140          // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$1\n    #46 = Utf8               InnerClasses\n-   #47 = Class              #142          // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State\n+   #47 = Class              #141          // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State\n    #48 = Utf8               State\n    #49 = Utf8               TAG_MASK\n    #50 = Utf8               I\n    #51 = Utf8               ConstantValue\n    #52 = Integer            3\n    #53 = Utf8               DEFAULT_BLOCK_SIZE\n    #54 = Utf8               size\n@@ -90,100 +90,99 @@\n    #80 = Utf8               StackMapTable\n    #81 = Utf8               fill\n    #82 = Utf8               ()V\n    #83 = Utf8               ex\n    #84 = Utf8               Ljava/lang/IllegalArgumentException;\n    #85 = Utf8               length\n    #86 = Utf8               offset\n-   #87 = Class              #130          // java/lang/IllegalArgumentException\n-   #88 = Utf8               readLiteralLength\n-   #89 = Utf8               (I)I\n-   #90 = Utf8               readSize\n-   #91 = Utf8               ()J\n-   #92 = Utf8               index\n-   #93 = Utf8               sz\n-   #94 = Utf8               J\n-   #95 = Utf8               getSize\n-   #96 = Utf8               ()I\n-   #97 = Utf8               SourceFile\n-   #98 = Utf8               SnappyCompressorInputStream.java\n-   #99 = Utf8               org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n-  #100 = NameAndType        #60:#70       // \"<init>\":(Ljava/io/InputStream;I)V\n-  #101 = NameAndType        #143:#57      // NO_BLOCK:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State;\n-  #102 = NameAndType        #56:#57       // state:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State;\n-  #103 = NameAndType        #90:#91       // readSize:()J\n-  #104 = NameAndType        #54:#50       // size:I\n-  #105 = NameAndType        #55:#50       // uncompressedBytesRemaining:I\n-  #106 = NameAndType        #58:#59       // endReached:Z\n-  #107 = NameAndType        #144:#145     // $SwitchMap$org$apache$commons$compress$compressors$snappy$SnappyCompressorInputStream$State:[I\n-  #108 = NameAndType        #146:#96      // ordinal:()I\n-  #109 = NameAndType        #81:#82       // fill:()V\n-  #110 = NameAndType        #72:#73       // read:([BII)I\n-  #111 = NameAndType        #147:#73      // readLiteral:([BII)I\n-  #112 = NameAndType        #148:#149     // hasMoreDataInBlock:()Z\n-  #113 = NameAndType        #150:#73      // readBackReference:([BII)I\n-  #114 = Utf8               java/io/IOException\n-  #115 = Utf8               java/lang/StringBuilder\n-  #116 = NameAndType        #60:#82       // \"<init>\":()V\n-  #117 = Utf8               Unknown stream state\n-  #118 = NameAndType        #151:#152     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #119 = NameAndType        #151:#153     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #120 = NameAndType        #154:#155     // toString:()Ljava/lang/String;\n-  #121 = NameAndType        #60:#156      // \"<init>\":(Ljava/lang/String;)V\n-  #122 = NameAndType        #157:#96      // readOneByte:()I\n-  #123 = Utf8               Premature end of stream reading block start\n-  #124 = NameAndType        #88:#89       // readLiteralLength:(I)I\n-  #125 = Utf8               Illegal block with a negative literal size found\n-  #126 = NameAndType        #158:#159     // startLiteral:(J)V\n-  #127 = NameAndType        #160:#57      // IN_LITERAL:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State;\n-  #128 = Utf8               Premature end of stream reading back-reference length\n-  #129 = NameAndType        #161:#162     // startBackReference:(IJ)V\n-  #130 = Utf8               java/lang/IllegalArgumentException\n-  #131 = Utf8               Illegal block with bad offset found\n-  #132 = NameAndType        #60:#163      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #133 = NameAndType        #164:#57      // IN_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State;\n-  #134 = Utf8               Illegal block with a negative match length found\n-  #135 = NameAndType        #165:#168     // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #136 = Class              #169          // org/apache/commons/compress/utils/ByteUtils\n-  #137 = NameAndType        #170:#171     // fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-  #138 = Utf8               Premature end of stream reading literal length\n-  #139 = Utf8               Premature end of stream reading size\n-  #140 = Utf8               org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n-  #141 = Utf8               org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$1\n-  #142 = Utf8               org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State\n-  #143 = Utf8               NO_BLOCK\n-  #144 = Utf8               $SwitchMap$org$apache$commons$compress$compressors$snappy$SnappyCompressorInputStream$State\n-  #145 = Utf8               [I\n-  #146 = Utf8               ordinal\n-  #147 = Utf8               readLiteral\n-  #148 = Utf8               hasMoreDataInBlock\n-  #149 = Utf8               ()Z\n-  #150 = Utf8               readBackReference\n-  #151 = Utf8               append\n-  #152 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #153 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #154 = Utf8               toString\n-  #155 = Utf8               ()Ljava/lang/String;\n-  #156 = Utf8               (Ljava/lang/String;)V\n-  #157 = Utf8               readOneByte\n-  #158 = Utf8               startLiteral\n-  #159 = Utf8               (J)V\n-  #160 = Utf8               IN_LITERAL\n-  #161 = Utf8               startBackReference\n-  #162 = Utf8               (IJ)V\n-  #163 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #164 = Utf8               IN_BACK_REFERENCE\n-  #165 = Utf8               supplier\n-  #166 = Class              #172          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-  #167 = Utf8               ByteSupplier\n-  #168 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #169 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #170 = Utf8               fromLittleEndian\n-  #171 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-  #172 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+   #87 = Utf8               readLiteralLength\n+   #88 = Utf8               (I)I\n+   #89 = Utf8               readSize\n+   #90 = Utf8               ()J\n+   #91 = Utf8               index\n+   #92 = Utf8               sz\n+   #93 = Utf8               J\n+   #94 = Utf8               getSize\n+   #95 = Utf8               ()I\n+   #96 = Utf8               SourceFile\n+   #97 = Utf8               SnappyCompressorInputStream.java\n+   #98 = Utf8               org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n+   #99 = NameAndType        #60:#70       // \"<init>\":(Ljava/io/InputStream;I)V\n+  #100 = NameAndType        #142:#57      // NO_BLOCK:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State;\n+  #101 = NameAndType        #56:#57       // state:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State;\n+  #102 = NameAndType        #89:#90       // readSize:()J\n+  #103 = NameAndType        #54:#50       // size:I\n+  #104 = NameAndType        #55:#50       // uncompressedBytesRemaining:I\n+  #105 = NameAndType        #58:#59       // endReached:Z\n+  #106 = NameAndType        #143:#144     // $SwitchMap$org$apache$commons$compress$compressors$snappy$SnappyCompressorInputStream$State:[I\n+  #107 = NameAndType        #145:#95      // ordinal:()I\n+  #108 = NameAndType        #81:#82       // fill:()V\n+  #109 = NameAndType        #72:#73       // read:([BII)I\n+  #110 = NameAndType        #146:#73      // readLiteral:([BII)I\n+  #111 = NameAndType        #147:#148     // hasMoreDataInBlock:()Z\n+  #112 = NameAndType        #149:#73      // readBackReference:([BII)I\n+  #113 = Utf8               java/io/IOException\n+  #114 = Utf8               java/lang/StringBuilder\n+  #115 = NameAndType        #60:#82       // \"<init>\":()V\n+  #116 = Utf8               Unknown stream state\n+  #117 = NameAndType        #150:#151     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #118 = NameAndType        #150:#152     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #119 = NameAndType        #153:#154     // toString:()Ljava/lang/String;\n+  #120 = NameAndType        #60:#155      // \"<init>\":(Ljava/lang/String;)V\n+  #121 = NameAndType        #156:#95      // readOneByte:()I\n+  #122 = Utf8               Premature end of stream reading block start\n+  #123 = NameAndType        #87:#88       // readLiteralLength:(I)I\n+  #124 = Utf8               Illegal block with a negative literal size found\n+  #125 = NameAndType        #157:#158     // startLiteral:(J)V\n+  #126 = NameAndType        #159:#57      // IN_LITERAL:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State;\n+  #127 = Utf8               Premature end of stream reading back-reference length\n+  #128 = NameAndType        #160:#161     // startBackReference:(IJ)V\n+  #129 = Utf8               java/lang/IllegalArgumentException\n+  #130 = Utf8               Illegal block with bad offset found\n+  #131 = NameAndType        #60:#162      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #132 = NameAndType        #163:#57      // IN_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State;\n+  #133 = Utf8               Illegal block with a negative match length found\n+  #134 = NameAndType        #164:#167     // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+  #135 = Class              #168          // org/apache/commons/compress/utils/ByteUtils\n+  #136 = NameAndType        #169:#170     // fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #137 = Utf8               Premature end of stream reading literal length\n+  #138 = Utf8               Premature end of stream reading size\n+  #139 = Utf8               org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n+  #140 = Utf8               org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$1\n+  #141 = Utf8               org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State\n+  #142 = Utf8               NO_BLOCK\n+  #143 = Utf8               $SwitchMap$org$apache$commons$compress$compressors$snappy$SnappyCompressorInputStream$State\n+  #144 = Utf8               [I\n+  #145 = Utf8               ordinal\n+  #146 = Utf8               readLiteral\n+  #147 = Utf8               hasMoreDataInBlock\n+  #148 = Utf8               ()Z\n+  #149 = Utf8               readBackReference\n+  #150 = Utf8               append\n+  #151 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #152 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #153 = Utf8               toString\n+  #154 = Utf8               ()Ljava/lang/String;\n+  #155 = Utf8               (Ljava/lang/String;)V\n+  #156 = Utf8               readOneByte\n+  #157 = Utf8               startLiteral\n+  #158 = Utf8               (J)V\n+  #159 = Utf8               IN_LITERAL\n+  #160 = Utf8               startBackReference\n+  #161 = Utf8               (IJ)V\n+  #162 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #163 = Utf8               IN_BACK_REFERENCE\n+  #164 = Utf8               supplier\n+  #165 = Class              #171          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #166 = Utf8               ByteSupplier\n+  #167 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+  #168 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #169 = Utf8               fromLittleEndian\n+  #170 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #171 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n {\n   private static final int TAG_MASK = 3;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 3\n \n   public static final int DEFAULT_BLOCK_SIZE = 32768;\n@@ -864,8 +863,8 @@\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n }\n SourceFile: \"SnappyCompressorInputStream.java\"\n InnerClasses:\n   static #45;                             // class org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$1\n   private static final #48= #47 of #1;    // State=class org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream$State of class org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n-  public static #167= #166 of #136;       // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n+  public static #166= #165 of #135;       // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n"}]}
