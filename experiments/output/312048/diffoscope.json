{"diffoscope-json-version": 1, "source1": "first/ZstdCompressorOutputStream.class", "source2": "second/ZstdCompressorOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,90 +1,90 @@\n-  SHA-256 checksum 73e5278421b769bf9c5f445b3214bfc53ad984470dce71594f5557f45b25187d\n+  SHA-256 checksum 4b954804fb696f03f82176017f38dfde4ddb31525902faf4da45a23d267a6e60\n   Compiled from \"ZstdCompressorOutputStream.java\"\n public class org.apache.commons.compress.compressors.zstandard.ZstdCompressorOutputStream extends org.apache.commons.compress.compressors.CompressorOutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #13                         // org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream\n-  super_class: #14                        // org/apache/commons/compress/compressors/CompressorOutputStream\n+  super_class: #2                         // org/apache/commons/compress/compressors/CompressorOutputStream\n   interfaces: 0, fields: 1, methods: 9, attributes: 1\n Constant pool:\n-   #1 = Methodref          #14.#36        // org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n-   #2 = Class              #37            // com/github/luben/zstd/ZstdOutputStream\n-   #3 = Methodref          #2.#38         // com/github/luben/zstd/ZstdOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #4 = Fieldref           #13.#39        // org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream.encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n-   #5 = Methodref          #2.#40         // com/github/luben/zstd/ZstdOutputStream.\"<init>\":(Ljava/io/OutputStream;I)V\n-   #6 = Methodref          #2.#41         // com/github/luben/zstd/ZstdOutputStream.setCloseFrameOnFlush:(Z)Lcom/github/luben/zstd/ZstdOutputStream;\n-   #7 = Methodref          #2.#42         // com/github/luben/zstd/ZstdOutputStream.setChecksum:(Z)Lcom/github/luben/zstd/ZstdOutputStream;\n-   #8 = Methodref          #2.#43         // com/github/luben/zstd/ZstdOutputStream.close:()V\n-   #9 = Methodref          #2.#44         // com/github/luben/zstd/ZstdOutputStream.flush:()V\n-  #10 = Methodref          #45.#46        // java/lang/Object.toString:()Ljava/lang/String;\n-  #11 = Methodref          #2.#47         // com/github/luben/zstd/ZstdOutputStream.write:([BII)V\n-  #12 = Methodref          #2.#48         // com/github/luben/zstd/ZstdOutputStream.write:(I)V\n-  #13 = Class              #49            // org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream\n-  #14 = Class              #50            // org/apache/commons/compress/compressors/CompressorOutputStream\n-  #15 = Utf8               encOS\n-  #16 = Utf8               Lcom/github/luben/zstd/ZstdOutputStream;\n-  #17 = Utf8               <init>\n-  #18 = Utf8               (Ljava/io/OutputStream;)V\n-  #19 = Utf8               Code\n-  #20 = Utf8               LineNumberTable\n-  #21 = Utf8               Exceptions\n-  #22 = Class              #51            // java/io/IOException\n-  #23 = Utf8               (Ljava/io/OutputStream;I)V\n-  #24 = Utf8               (Ljava/io/OutputStream;IZ)V\n-  #25 = Utf8               (Ljava/io/OutputStream;IZZ)V\n-  #26 = Utf8               close\n-  #27 = Utf8               ()V\n-  #28 = Utf8               flush\n-  #29 = Utf8               toString\n-  #30 = Utf8               ()Ljava/lang/String;\n-  #31 = Utf8               write\n-  #32 = Utf8               ([BII)V\n-  #33 = Utf8               (I)V\n-  #34 = Utf8               SourceFile\n-  #35 = Utf8               ZstdCompressorOutputStream.java\n-  #36 = NameAndType        #17:#27        // \"<init>\":()V\n-  #37 = Utf8               com/github/luben/zstd/ZstdOutputStream\n-  #38 = NameAndType        #17:#18        // \"<init>\":(Ljava/io/OutputStream;)V\n-  #39 = NameAndType        #15:#16        // encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n-  #40 = NameAndType        #17:#23        // \"<init>\":(Ljava/io/OutputStream;I)V\n-  #41 = NameAndType        #52:#53        // setCloseFrameOnFlush:(Z)Lcom/github/luben/zstd/ZstdOutputStream;\n-  #42 = NameAndType        #54:#53        // setChecksum:(Z)Lcom/github/luben/zstd/ZstdOutputStream;\n-  #43 = NameAndType        #26:#27        // close:()V\n-  #44 = NameAndType        #28:#27        // flush:()V\n-  #45 = Class              #55            // java/lang/Object\n-  #46 = NameAndType        #29:#30        // toString:()Ljava/lang/String;\n-  #47 = NameAndType        #31:#32        // write:([BII)V\n-  #48 = NameAndType        #31:#33        // write:(I)V\n-  #49 = Utf8               org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream\n-  #50 = Utf8               org/apache/commons/compress/compressors/CompressorOutputStream\n+   #1 = Methodref          #2.#3          // org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n+   #2 = Class              #4             // org/apache/commons/compress/compressors/CompressorOutputStream\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               org/apache/commons/compress/compressors/CompressorOutputStream\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Class              #8             // com/github/luben/zstd/ZstdOutputStream\n+   #8 = Utf8               com/github/luben/zstd/ZstdOutputStream\n+   #9 = Methodref          #7.#10         // com/github/luben/zstd/ZstdOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #10 = NameAndType        #5:#11         // \"<init>\":(Ljava/io/OutputStream;)V\n+  #11 = Utf8               (Ljava/io/OutputStream;)V\n+  #12 = Fieldref           #13.#14        // org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream.encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+  #13 = Class              #15            // org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream\n+  #14 = NameAndType        #16:#17        // encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+  #15 = Utf8               org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream\n+  #16 = Utf8               encOS\n+  #17 = Utf8               Lcom/github/luben/zstd/ZstdOutputStream;\n+  #18 = Methodref          #7.#19         // com/github/luben/zstd/ZstdOutputStream.\"<init>\":(Ljava/io/OutputStream;I)V\n+  #19 = NameAndType        #5:#20         // \"<init>\":(Ljava/io/OutputStream;I)V\n+  #20 = Utf8               (Ljava/io/OutputStream;I)V\n+  #21 = Methodref          #7.#22         // com/github/luben/zstd/ZstdOutputStream.setCloseFrameOnFlush:(Z)Lcom/github/luben/zstd/ZstdOutputStream;\n+  #22 = NameAndType        #23:#24        // setCloseFrameOnFlush:(Z)Lcom/github/luben/zstd/ZstdOutputStream;\n+  #23 = Utf8               setCloseFrameOnFlush\n+  #24 = Utf8               (Z)Lcom/github/luben/zstd/ZstdOutputStream;\n+  #25 = Methodref          #7.#26         // com/github/luben/zstd/ZstdOutputStream.setChecksum:(Z)Lcom/github/luben/zstd/ZstdOutputStream;\n+  #26 = NameAndType        #27:#24        // setChecksum:(Z)Lcom/github/luben/zstd/ZstdOutputStream;\n+  #27 = Utf8               setChecksum\n+  #28 = Methodref          #7.#29         // com/github/luben/zstd/ZstdOutputStream.close:()V\n+  #29 = NameAndType        #30:#6         // close:()V\n+  #30 = Utf8               close\n+  #31 = Methodref          #7.#32         // com/github/luben/zstd/ZstdOutputStream.flush:()V\n+  #32 = NameAndType        #33:#6         // flush:()V\n+  #33 = Utf8               flush\n+  #34 = Methodref          #35.#36        // java/lang/Object.toString:()Ljava/lang/String;\n+  #35 = Class              #37            // java/lang/Object\n+  #36 = NameAndType        #38:#39        // toString:()Ljava/lang/String;\n+  #37 = Utf8               java/lang/Object\n+  #38 = Utf8               toString\n+  #39 = Utf8               ()Ljava/lang/String;\n+  #40 = Methodref          #7.#41         // com/github/luben/zstd/ZstdOutputStream.write:([BII)V\n+  #41 = NameAndType        #42:#43        // write:([BII)V\n+  #42 = Utf8               write\n+  #43 = Utf8               ([BII)V\n+  #44 = Methodref          #7.#45         // com/github/luben/zstd/ZstdOutputStream.write:(I)V\n+  #45 = NameAndType        #42:#46        // write:(I)V\n+  #46 = Utf8               (I)V\n+  #47 = Utf8               Code\n+  #48 = Utf8               LineNumberTable\n+  #49 = Utf8               Exceptions\n+  #50 = Class              #51            // java/io/IOException\n   #51 = Utf8               java/io/IOException\n-  #52 = Utf8               setCloseFrameOnFlush\n-  #53 = Utf8               (Z)Lcom/github/luben/zstd/ZstdOutputStream;\n-  #54 = Utf8               setChecksum\n-  #55 = Utf8               java/lang/Object\n+  #52 = Utf8               (Ljava/io/OutputStream;IZ)V\n+  #53 = Utf8               (Ljava/io/OutputStream;IZZ)V\n+  #54 = Utf8               SourceFile\n+  #55 = Utf8               ZstdCompressorOutputStream.java\n {\n   private final com.github.luben.zstd.ZstdOutputStream encOS;\n     descriptor: Lcom/github/luben/zstd/ZstdOutputStream;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.compress.compressors.zstandard.ZstdCompressorOutputStream(java.io.OutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n          4: aload_0\n-         5: new           #2                  // class com/github/luben/zstd/ZstdOutputStream\n+         5: new           #7                  // class com/github/luben/zstd/ZstdOutputStream\n          8: dup\n          9: aload_1\n-        10: invokespecial #3                  // Method com/github/luben/zstd/ZstdOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-        13: putfield      #4                  // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+        10: invokespecial #9                  // Method com/github/luben/zstd/ZstdOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+        13: putfield      #12                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n         16: return\n       LineNumberTable:\n         line 44: 0\n         line 45: 4\n         line 46: 16\n     Exceptions:\n       throws java.io.IOException\n@@ -93,20 +93,20 @@\n     descriptor: (Ljava/io/OutputStream;I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n          1: invokespecial #1                  // Method org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n          4: aload_0\n-         5: new           #2                  // class com/github/luben/zstd/ZstdOutputStream\n+         5: new           #7                  // class com/github/luben/zstd/ZstdOutputStream\n          8: dup\n          9: aload_1\n         10: iload_2\n-        11: invokespecial #5                  // Method com/github/luben/zstd/ZstdOutputStream.\"<init>\":(Ljava/io/OutputStream;I)V\n-        14: putfield      #4                  // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+        11: invokespecial #18                 // Method com/github/luben/zstd/ZstdOutputStream.\"<init>\":(Ljava/io/OutputStream;I)V\n+        14: putfield      #12                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n         17: return\n       LineNumberTable:\n         line 56: 0\n         line 57: 4\n         line 58: 17\n     Exceptions:\n       throws java.io.IOException\n@@ -115,24 +115,24 @@\n     descriptor: (Ljava/io/OutputStream;IZ)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=4, args_size=4\n          0: aload_0\n          1: invokespecial #1                  // Method org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n          4: aload_0\n-         5: new           #2                  // class com/github/luben/zstd/ZstdOutputStream\n+         5: new           #7                  // class com/github/luben/zstd/ZstdOutputStream\n          8: dup\n          9: aload_1\n         10: iload_2\n-        11: invokespecial #5                  // Method com/github/luben/zstd/ZstdOutputStream.\"<init>\":(Ljava/io/OutputStream;I)V\n-        14: putfield      #4                  // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+        11: invokespecial #18                 // Method com/github/luben/zstd/ZstdOutputStream.\"<init>\":(Ljava/io/OutputStream;I)V\n+        14: putfield      #12                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n         17: aload_0\n-        18: getfield      #4                  // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+        18: getfield      #12                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n         21: iload_3\n-        22: invokevirtual #6                  // Method com/github/luben/zstd/ZstdOutputStream.setCloseFrameOnFlush:(Z)Lcom/github/luben/zstd/ZstdOutputStream;\n+        22: invokevirtual #21                 // Method com/github/luben/zstd/ZstdOutputStream.setCloseFrameOnFlush:(Z)Lcom/github/luben/zstd/ZstdOutputStream;\n         25: pop\n         26: return\n       LineNumberTable:\n         line 69: 0\n         line 70: 4\n         line 71: 17\n         line 72: 26\n@@ -143,29 +143,29 @@\n     descriptor: (Ljava/io/OutputStream;IZZ)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=5, args_size=5\n          0: aload_0\n          1: invokespecial #1                  // Method org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n          4: aload_0\n-         5: new           #2                  // class com/github/luben/zstd/ZstdOutputStream\n+         5: new           #7                  // class com/github/luben/zstd/ZstdOutputStream\n          8: dup\n          9: aload_1\n         10: iload_2\n-        11: invokespecial #5                  // Method com/github/luben/zstd/ZstdOutputStream.\"<init>\":(Ljava/io/OutputStream;I)V\n-        14: putfield      #4                  // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+        11: invokespecial #18                 // Method com/github/luben/zstd/ZstdOutputStream.\"<init>\":(Ljava/io/OutputStream;I)V\n+        14: putfield      #12                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n         17: aload_0\n-        18: getfield      #4                  // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+        18: getfield      #12                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n         21: iload_3\n-        22: invokevirtual #6                  // Method com/github/luben/zstd/ZstdOutputStream.setCloseFrameOnFlush:(Z)Lcom/github/luben/zstd/ZstdOutputStream;\n+        22: invokevirtual #21                 // Method com/github/luben/zstd/ZstdOutputStream.setCloseFrameOnFlush:(Z)Lcom/github/luben/zstd/ZstdOutputStream;\n         25: pop\n         26: aload_0\n-        27: getfield      #4                  // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+        27: getfield      #12                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n         30: iload         4\n-        32: invokevirtual #7                  // Method com/github/luben/zstd/ZstdOutputStream.setChecksum:(Z)Lcom/github/luben/zstd/ZstdOutputStream;\n+        32: invokevirtual #25                 // Method com/github/luben/zstd/ZstdOutputStream.setChecksum:(Z)Lcom/github/luben/zstd/ZstdOutputStream;\n         35: pop\n         36: return\n       LineNumberTable:\n         line 84: 0\n         line 85: 4\n         line 86: 17\n         line 87: 26\n@@ -175,77 +175,77 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n-         4: invokevirtual #8                  // Method com/github/luben/zstd/ZstdOutputStream.close:()V\n+         1: getfield      #12                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+         4: invokevirtual #28                 // Method com/github/luben/zstd/ZstdOutputStream.close:()V\n          7: return\n       LineNumberTable:\n         line 92: 0\n         line 93: 7\n     Exceptions:\n       throws java.io.IOException\n \n   public void flush() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n-         4: invokevirtual #9                  // Method com/github/luben/zstd/ZstdOutputStream.flush:()V\n+         1: getfield      #12                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+         4: invokevirtual #31                 // Method com/github/luben/zstd/ZstdOutputStream.flush:()V\n          7: return\n       LineNumberTable:\n         line 97: 0\n         line 98: 7\n     Exceptions:\n       throws java.io.IOException\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n-         4: invokevirtual #10                 // Method java/lang/Object.toString:()Ljava/lang/String;\n+         1: getfield      #12                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+         4: invokevirtual #34                 // Method java/lang/Object.toString:()Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 102: 0\n \n   public void write(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #4                  // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+         1: getfield      #12                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokevirtual #11                 // Method com/github/luben/zstd/ZstdOutputStream.write:([BII)V\n+         7: invokevirtual #40                 // Method com/github/luben/zstd/ZstdOutputStream.write:([BII)V\n         10: return\n       LineNumberTable:\n         line 107: 0\n         line 108: 10\n     Exceptions:\n       throws java.io.IOException\n \n   public void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #4                  // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+         1: getfield      #12                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n          4: iload_1\n-         5: invokevirtual #12                 // Method com/github/luben/zstd/ZstdOutputStream.write:(I)V\n+         5: invokevirtual #44                 // Method com/github/luben/zstd/ZstdOutputStream.write:(I)V\n          8: return\n       LineNumberTable:\n         line 112: 0\n         line 113: 8\n     Exceptions:\n       throws java.io.IOException\n }\n"}]}
