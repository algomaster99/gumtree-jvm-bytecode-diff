{"diffoscope-json-version": 1, "source1": "first/Violation.class", "source2": "second/Violation.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -18,51 +18,51 @@\n     private final String moduleId;\n     private final String key;\n     private final Object[] args;\n     private final String bundle;\n     private final Class<?> sourceClass;\n     private final String customMessage;\n     \n-    public Violation(final int lineNo, final int columnNo, final int columnCharIndex, final int tokenType, final String bundle, final String key, final Object[] args, final SeverityLevel severityLevel, final String moduleId, final Class<?> sourceClass, final String customMessage) {\n+    public Violation(final int lineNo, final int columnNo, final int columnCharIndex, final int tokenType, final String bundle, final String key, final Object[] original, final SeverityLevel severityLevel, final String moduleId, final Class<?> sourceClass, final String customMessage) {\n         this.lineNo = lineNo;\n         this.columnNo = columnNo;\n         this.columnCharIndex = columnCharIndex;\n         this.tokenType = tokenType;\n         this.key = key;\n-        if (args == null) {\n+        if (original == null) {\n             this.args = null;\n         }\n         else {\n-            this.args = Arrays.copyOf(args, args.length);\n+            this.args = Arrays.copyOf(original, original.length);\n         }\n         this.bundle = bundle;\n         this.severityLevel = severityLevel;\n         this.moduleId = moduleId;\n         this.sourceClass = sourceClass;\n         this.customMessage = customMessage;\n     }\n     \n-    public Violation(final int lineNo, final int columnNo, final int tokenType, final String bundle, final String key, final Object[] args, final SeverityLevel severityLevel, final String moduleId, final Class<?> sourceClass, final String customMessage) {\n-        this(lineNo, columnNo, columnNo, tokenType, bundle, key, args, severityLevel, moduleId, sourceClass, customMessage);\n+    public Violation(final int n, final int n2, final int n3, final String s, final String s2, final Object[] array, final SeverityLevel severityLevel, final String s3, final Class<?> clazz, final String s4) {\n+        this(n, n2, n2, n3, s, s2, array, severityLevel, s3, clazz, s4);\n     }\n     \n-    public Violation(final int lineNo, final int columnNo, final String bundle, final String key, final Object[] args, final SeverityLevel severityLevel, final String moduleId, final Class<?> sourceClass, final String customMessage) {\n-        this(lineNo, columnNo, 0, bundle, key, args, severityLevel, moduleId, sourceClass, customMessage);\n+    public Violation(final int n, final int n2, final String s, final String s2, final Object[] array, final SeverityLevel severityLevel, final String s3, final Class<?> clazz, final String s4) {\n+        this(n, n2, 0, s, s2, array, severityLevel, s3, clazz, s4);\n     }\n     \n-    public Violation(final int lineNo, final int columnNo, final String bundle, final String key, final Object[] args, final String moduleId, final Class<?> sourceClass, final String customMessage) {\n-        this(lineNo, columnNo, bundle, key, args, Violation.DEFAULT_SEVERITY, moduleId, sourceClass, customMessage);\n+    public Violation(final int n, final int n2, final String s, final String s2, final Object[] array, final String s3, final Class<?> clazz, final String s4) {\n+        this(n, n2, s, s2, array, Violation.DEFAULT_SEVERITY, s3, clazz, s4);\n     }\n     \n-    public Violation(final int lineNo, final String bundle, final String key, final Object[] args, final SeverityLevel severityLevel, final String moduleId, final Class<?> sourceClass, final String customMessage) {\n-        this(lineNo, 0, bundle, key, args, severityLevel, moduleId, sourceClass, customMessage);\n+    public Violation(final int n, final String s, final String s2, final Object[] array, final SeverityLevel severityLevel, final String s3, final Class<?> clazz, final String s4) {\n+        this(n, 0, s, s2, array, severityLevel, s3, clazz, s4);\n     }\n     \n-    public Violation(final int lineNo, final String bundle, final String key, final Object[] args, final String moduleId, final Class<?> sourceClass, final String customMessage) {\n-        this(lineNo, 0, bundle, key, args, Violation.DEFAULT_SEVERITY, moduleId, sourceClass, customMessage);\n+    public Violation(final int n, final String s, final String s2, final Object[] array, final String s3, final Class<?> clazz, final String s4) {\n+        this(n, 0, s, s2, array, Violation.DEFAULT_SEVERITY, s3, clazz, s4);\n     }\n     \n     public int getLineNo() {\n         return this.lineNo;\n     }\n     \n     public int getColumnNo() {\n@@ -90,77 +90,77 @@\n     }\n     \n     public String getSourceName() {\n         return this.sourceClass.getName();\n     }\n     \n     @Override\n-    public boolean equals(final Object object) {\n-        if (this == object) {\n+    public boolean equals(final Object o) {\n+        if (this == o) {\n             return true;\n         }\n-        if (object == null || this.getClass() != object.getClass()) {\n+        if (o == null || this.getClass() != o.getClass()) {\n             return false;\n         }\n-        final Violation violation = (Violation)object;\n+        final Violation violation = (Violation)o;\n         return Objects.equals(Integer.valueOf(this.lineNo), Integer.valueOf(violation.lineNo)) && Objects.equals(Integer.valueOf(this.columnNo), Integer.valueOf(violation.columnNo)) && Objects.equals(Integer.valueOf(this.columnCharIndex), Integer.valueOf(violation.columnCharIndex)) && Objects.equals(Integer.valueOf(this.tokenType), Integer.valueOf(violation.tokenType)) && Objects.equals(this.severityLevel, violation.severityLevel) && Objects.equals(this.moduleId, violation.moduleId) && Objects.equals(this.key, violation.key) && Objects.equals(this.bundle, violation.bundle) && Objects.equals(this.sourceClass, violation.sourceClass) && Objects.equals(this.customMessage, violation.customMessage) && Arrays.equals(this.args, violation.args);\n     }\n     \n     @Override\n     public int hashCode() {\n         return Objects.hash(Integer.valueOf(this.lineNo), Integer.valueOf(this.columnNo), Integer.valueOf(this.columnCharIndex), Integer.valueOf(this.tokenType), this.severityLevel, this.moduleId, this.key, this.bundle, this.sourceClass, this.customMessage, Integer.valueOf(Arrays.hashCode(this.args)));\n     }\n     \n     @Override\n-    public int compareTo(final Violation other) {\n-        int result;\n-        if (this.lineNo == other.lineNo) {\n-            if (this.columnNo == other.columnNo) {\n-                if (Objects.equals(this.moduleId, other.moduleId)) {\n-                    if (Objects.equals(this.sourceClass, other.sourceClass)) {\n-                        result = this.getViolation().compareTo(other.getViolation());\n+    public int compareTo(final Violation violation) {\n+        int n;\n+        if (this.lineNo == violation.lineNo) {\n+            if (this.columnNo == violation.columnNo) {\n+                if (Objects.equals(this.moduleId, violation.moduleId)) {\n+                    if (Objects.equals(this.sourceClass, violation.sourceClass)) {\n+                        n = this.getViolation().compareTo(violation.getViolation());\n                     }\n                     else if (this.sourceClass == null) {\n-                        result = -1;\n+                        n = -1;\n                     }\n-                    else if (other.sourceClass == null) {\n-                        result = 1;\n+                    else if (violation.sourceClass == null) {\n+                        n = 1;\n                     }\n                     else {\n-                        result = this.sourceClass.getName().compareTo(other.sourceClass.getName());\n+                        n = this.sourceClass.getName().compareTo(violation.sourceClass.getName());\n                     }\n                 }\n                 else if (this.moduleId == null) {\n-                    result = -1;\n+                    n = -1;\n                 }\n-                else if (other.moduleId == null) {\n-                    result = 1;\n+                else if (violation.moduleId == null) {\n+                    n = 1;\n                 }\n                 else {\n-                    result = this.moduleId.compareTo(other.moduleId);\n+                    n = this.moduleId.compareTo(violation.moduleId);\n                 }\n             }\n             else {\n-                result = Integer.compare(this.columnNo, other.columnNo);\n+                n = Integer.compare(this.columnNo, violation.columnNo);\n             }\n         }\n         else {\n-            result = Integer.compare(this.lineNo, other.lineNo);\n+            n = Integer.compare(this.lineNo, violation.lineNo);\n         }\n-        return result;\n+        return n;\n     }\n     \n     public String getViolation() {\n-        String violation;\n+        String s;\n         if (this.customMessage != null) {\n-            violation = new MessageFormat(this.customMessage, Locale.ROOT).format(this.args);\n+            s = new MessageFormat(this.customMessage, Locale.ROOT).format(this.args);\n         }\n         else {\n-            violation = new LocalizedMessage(this.bundle, (Class)this.sourceClass, this.key, this.args).getMessage();\n+            s = new LocalizedMessage(this.bundle, (Class)this.sourceClass, this.key, this.args).getMessage();\n         }\n-        return violation;\n+        return s;\n     }\n     \n     static {\n         DEFAULT_SEVERITY = SeverityLevel.ERROR;\n     }\n }\n"}]}
