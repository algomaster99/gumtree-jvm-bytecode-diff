{"diffoscope-json-version": 1, "source1": "first/MurmurHash2.class", "source2": "second/MurmurHash2.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,101 +1,101 @@\n-  SHA-256 checksum db023773e1ef51d3e5fbd4a4d5f4e5566ac8fa2ede46395366a33386215074a7\n+  SHA-256 checksum e1da87c6c84bdfb723326747320b494d29f2e9d784fb05d617efa37f2a831d6c\n   Compiled from \"MurmurHash2.java\"\n public final class org.apache.commons.codec.digest.MurmurHash2\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #3                          // org/apache/commons/codec/digest/MurmurHash2\n-  super_class: #22                        // java/lang/Object\n+  this_class: #8                          // org/apache/commons/codec/digest/MurmurHash2\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 4, methods: 11, attributes: 1\n Constant pool:\n-   #1 = Methodref          #22.#67        // java/lang/Object.\"<init>\":()V\n-   #2 = Methodref          #3.#68         // org/apache/commons/codec/digest/MurmurHash2.getLittleEndianInt:([BI)I\n-   #3 = Class              #69            // org/apache/commons/codec/digest/MurmurHash2\n-   #4 = Integer            1540483477\n-   #5 = Integer            -1756908916\n-   #6 = Methodref          #3.#70         // org/apache/commons/codec/digest/MurmurHash2.hash32:([BII)I\n-   #7 = Methodref          #71.#72        // org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n-   #8 = Methodref          #3.#73         // org/apache/commons/codec/digest/MurmurHash2.hash32:([BI)I\n-   #9 = Methodref          #74.#75        // java/lang/String.substring:(II)Ljava/lang/String;\n-  #10 = Methodref          #3.#76         // org/apache/commons/codec/digest/MurmurHash2.hash32:(Ljava/lang/String;)I\n-  #11 = Long               4294967295l\n-  #13 = Long               -4132994306676758123l\n-  #15 = Methodref          #3.#77         // org/apache/commons/codec/digest/MurmurHash2.getLittleEndianLong:([BI)J\n-  #16 = Long               255l\n-  #18 = Integer            -512093083\n-  #19 = Methodref          #3.#78         // org/apache/commons/codec/digest/MurmurHash2.hash64:([BII)J\n-  #20 = Methodref          #3.#79         // org/apache/commons/codec/digest/MurmurHash2.hash64:([BI)J\n-  #21 = Methodref          #3.#80         // org/apache/commons/codec/digest/MurmurHash2.hash64:(Ljava/lang/String;)J\n-  #22 = Class              #81            // java/lang/Object\n-  #23 = Utf8               M32\n-  #24 = Utf8               I\n-  #25 = Utf8               ConstantValue\n-  #26 = Utf8               R32\n-  #27 = Integer            24\n-  #28 = Utf8               M64\n-  #29 = Utf8               J\n-  #30 = Utf8               R64\n-  #31 = Integer            47\n-  #32 = Utf8               <init>\n-  #33 = Utf8               ()V\n-  #34 = Utf8               Code\n-  #35 = Utf8               LineNumberTable\n-  #36 = Utf8               LocalVariableTable\n-  #37 = Utf8               this\n-  #38 = Utf8               Lorg/apache/commons/codec/digest/MurmurHash2;\n-  #39 = Utf8               hash32\n-  #40 = Utf8               ([BII)I\n-  #41 = Utf8               index\n-  #42 = Utf8               k\n-  #43 = Utf8               i\n-  #44 = Utf8               data\n-  #45 = Utf8               [B\n-  #46 = Utf8               length\n-  #47 = Utf8               seed\n-  #48 = Utf8               h\n-  #49 = Utf8               nblocks\n-  #50 = Utf8               StackMapTable\n-  #51 = Utf8               ([BI)I\n-  #52 = Utf8               (Ljava/lang/String;)I\n-  #53 = Utf8               text\n-  #54 = Utf8               Ljava/lang/String;\n-  #55 = Utf8               bytes\n-  #56 = Utf8               (Ljava/lang/String;II)I\n-  #57 = Utf8               from\n-  #58 = Utf8               hash64\n-  #59 = Utf8               ([BII)J\n-  #60 = Utf8               ([BI)J\n-  #61 = Utf8               (Ljava/lang/String;)J\n-  #62 = Utf8               (Ljava/lang/String;II)J\n-  #63 = Utf8               getLittleEndianInt\n-  #64 = Utf8               getLittleEndianLong\n-  #65 = Utf8               SourceFile\n-  #66 = Utf8               MurmurHash2.java\n-  #67 = NameAndType        #32:#33        // \"<init>\":()V\n-  #68 = NameAndType        #63:#51        // getLittleEndianInt:([BI)I\n-  #69 = Utf8               org/apache/commons/codec/digest/MurmurHash2\n-  #70 = NameAndType        #39:#40        // hash32:([BII)I\n-  #71 = Class              #82            // org/apache/commons/codec/binary/StringUtils\n-  #72 = NameAndType        #83:#84        // getBytesUtf8:(Ljava/lang/String;)[B\n-  #73 = NameAndType        #39:#51        // hash32:([BI)I\n-  #74 = Class              #85            // java/lang/String\n-  #75 = NameAndType        #86:#87        // substring:(II)Ljava/lang/String;\n-  #76 = NameAndType        #39:#52        // hash32:(Ljava/lang/String;)I\n-  #77 = NameAndType        #64:#60        // getLittleEndianLong:([BI)J\n-  #78 = NameAndType        #58:#59        // hash64:([BII)J\n-  #79 = NameAndType        #58:#60        // hash64:([BI)J\n-  #80 = NameAndType        #58:#61        // hash64:(Ljava/lang/String;)J\n-  #81 = Utf8               java/lang/Object\n-  #82 = Utf8               org/apache/commons/codec/binary/StringUtils\n-  #83 = Utf8               getBytesUtf8\n-  #84 = Utf8               (Ljava/lang/String;)[B\n-  #85 = Utf8               java/lang/String\n-  #86 = Utf8               substring\n-  #87 = Utf8               (II)Ljava/lang/String;\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Methodref          #8.#9          // org/apache/commons/codec/digest/MurmurHash2.getLittleEndianInt:([BI)I\n+   #8 = Class              #10            // org/apache/commons/codec/digest/MurmurHash2\n+   #9 = NameAndType        #11:#12        // getLittleEndianInt:([BI)I\n+  #10 = Utf8               org/apache/commons/codec/digest/MurmurHash2\n+  #11 = Utf8               getLittleEndianInt\n+  #12 = Utf8               ([BI)I\n+  #13 = Integer            1540483477\n+  #14 = Integer            -1756908916\n+  #15 = Methodref          #8.#16         // org/apache/commons/codec/digest/MurmurHash2.hash32:([BII)I\n+  #16 = NameAndType        #17:#18        // hash32:([BII)I\n+  #17 = Utf8               hash32\n+  #18 = Utf8               ([BII)I\n+  #19 = Methodref          #20.#21        // org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n+  #20 = Class              #22            // org/apache/commons/codec/binary/StringUtils\n+  #21 = NameAndType        #23:#24        // getBytesUtf8:(Ljava/lang/String;)[B\n+  #22 = Utf8               org/apache/commons/codec/binary/StringUtils\n+  #23 = Utf8               getBytesUtf8\n+  #24 = Utf8               (Ljava/lang/String;)[B\n+  #25 = Methodref          #8.#26         // org/apache/commons/codec/digest/MurmurHash2.hash32:([BI)I\n+  #26 = NameAndType        #17:#12        // hash32:([BI)I\n+  #27 = Methodref          #28.#29        // java/lang/String.substring:(II)Ljava/lang/String;\n+  #28 = Class              #30            // java/lang/String\n+  #29 = NameAndType        #31:#32        // substring:(II)Ljava/lang/String;\n+  #30 = Utf8               java/lang/String\n+  #31 = Utf8               substring\n+  #32 = Utf8               (II)Ljava/lang/String;\n+  #33 = Methodref          #8.#34         // org/apache/commons/codec/digest/MurmurHash2.hash32:(Ljava/lang/String;)I\n+  #34 = NameAndType        #17:#35        // hash32:(Ljava/lang/String;)I\n+  #35 = Utf8               (Ljava/lang/String;)I\n+  #36 = Long               4294967295l\n+  #38 = Long               -4132994306676758123l\n+  #40 = Methodref          #8.#41         // org/apache/commons/codec/digest/MurmurHash2.getLittleEndianLong:([BI)J\n+  #41 = NameAndType        #42:#43        // getLittleEndianLong:([BI)J\n+  #42 = Utf8               getLittleEndianLong\n+  #43 = Utf8               ([BI)J\n+  #44 = Long               255l\n+  #46 = Integer            -512093083\n+  #47 = Methodref          #8.#48         // org/apache/commons/codec/digest/MurmurHash2.hash64:([BII)J\n+  #48 = NameAndType        #49:#50        // hash64:([BII)J\n+  #49 = Utf8               hash64\n+  #50 = Utf8               ([BII)J\n+  #51 = Methodref          #8.#52         // org/apache/commons/codec/digest/MurmurHash2.hash64:([BI)J\n+  #52 = NameAndType        #49:#43        // hash64:([BI)J\n+  #53 = Methodref          #8.#54         // org/apache/commons/codec/digest/MurmurHash2.hash64:(Ljava/lang/String;)J\n+  #54 = NameAndType        #49:#55        // hash64:(Ljava/lang/String;)J\n+  #55 = Utf8               (Ljava/lang/String;)J\n+  #56 = Utf8               M32\n+  #57 = Utf8               I\n+  #58 = Utf8               ConstantValue\n+  #59 = Utf8               R32\n+  #60 = Integer            24\n+  #61 = Utf8               M64\n+  #62 = Utf8               J\n+  #63 = Utf8               R64\n+  #64 = Integer            47\n+  #65 = Utf8               Code\n+  #66 = Utf8               LineNumberTable\n+  #67 = Utf8               LocalVariableTable\n+  #68 = Utf8               this\n+  #69 = Utf8               Lorg/apache/commons/codec/digest/MurmurHash2;\n+  #70 = Utf8               index\n+  #71 = Utf8               k\n+  #72 = Utf8               i\n+  #73 = Utf8               data\n+  #74 = Utf8               [B\n+  #75 = Utf8               length\n+  #76 = Utf8               seed\n+  #77 = Utf8               h\n+  #78 = Utf8               nblocks\n+  #79 = Utf8               StackMapTable\n+  #80 = Utf8               text\n+  #81 = Utf8               Ljava/lang/String;\n+  #82 = Utf8               bytes\n+  #83 = Utf8               (Ljava/lang/String;II)I\n+  #84 = Utf8               from\n+  #85 = Utf8               (Ljava/lang/String;II)J\n+  #86 = Utf8               SourceFile\n+  #87 = Utf8               MurmurHash2.java\n {\n   private static final int M32 = 1540483477;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 1540483477\n \n   private static final int R32 = 24;\n@@ -148,32 +148,32 @@\n         16: if_icmpge     73\n         19: iload         5\n         21: iconst_2\n         22: ishl\n         23: istore        6\n         25: aload_0\n         26: iload         6\n-        28: invokestatic  #2                  // Method getLittleEndianInt:([BI)I\n+        28: invokestatic  #7                  // Method getLittleEndianInt:([BI)I\n         31: istore        7\n         33: iload         7\n-        35: ldc           #4                  // int 1540483477\n+        35: ldc           #13                 // int 1540483477\n         37: imul\n         38: istore        7\n         40: iload         7\n         42: iload         7\n         44: bipush        24\n         46: iushr\n         47: ixor\n         48: istore        7\n         50: iload         7\n-        52: ldc           #4                  // int 1540483477\n+        52: ldc           #13                 // int 1540483477\n         54: imul\n         55: istore        7\n         57: iload_3\n-        58: ldc           #4                  // int 1540483477\n+        58: ldc           #13                 // int 1540483477\n         60: imul\n         61: istore_3\n         62: iload_3\n         63: iload         7\n         65: ixor\n         66: istore_3\n         67: iinc          5, 1\n@@ -220,25 +220,25 @@\n        142: iload         5\n        144: baload\n        145: sipush        255\n        148: iand\n        149: ixor\n        150: istore_3\n        151: iload_3\n-       152: ldc           #4                  // int 1540483477\n+       152: ldc           #13                 // int 1540483477\n        154: imul\n        155: istore_3\n        156: iload_3\n        157: iload_3\n        158: bipush        13\n        160: iushr\n        161: ixor\n        162: istore_3\n        163: iload_3\n-       164: ldc           #4                  // int 1540483477\n+       164: ldc           #13                 // int 1540483477\n        166: imul\n        167: istore_3\n        168: iload_3\n        169: iload_3\n        170: bipush        15\n        172: iushr\n        173: ixor\n@@ -294,36 +294,36 @@\n   public static int hash32(byte[], int);\n     descriptor: ([BI)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: ldc           #5                  // int -1756908916\n-         4: invokestatic  #6                  // Method hash32:([BII)I\n+         2: ldc           #14                 // int -1756908916\n+         4: invokestatic  #15                 // Method hash32:([BII)I\n          7: ireturn\n       LineNumberTable:\n         line 127: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  data   [B\n             0       8     1 length   I\n \n   public static int hash32(java.lang.String);\n     descriptor: (Ljava/lang/String;)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: invokestatic  #7                  // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n+         1: invokestatic  #19                 // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n          4: astore_1\n          5: aload_1\n          6: aload_1\n          7: arraylength\n-         8: invokestatic  #8                  // Method hash32:([BI)I\n+         8: invokestatic  #25                 // Method hash32:([BI)I\n         11: ireturn\n       LineNumberTable:\n         line 149: 0\n         line 150: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  text   Ljava/lang/String;\n@@ -335,16 +335,16 @@\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: iload_1\n          2: iload_1\n          3: iload_2\n          4: iadd\n-         5: invokevirtual #9                  // Method java/lang/String.substring:(II)Ljava/lang/String;\n-         8: invokestatic  #10                 // Method hash32:(Ljava/lang/String;)I\n+         5: invokevirtual #27                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+         8: invokestatic  #33                 // Method hash32:(Ljava/lang/String;)I\n         11: ireturn\n       LineNumberTable:\n         line 171: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  text   Ljava/lang/String;\n             0      12     1  from   I\n@@ -353,19 +353,19 @@\n   public static long hash64(byte[], int, int);\n     descriptor: ([BII)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=6, locals=10, args_size=3\n          0: iload_2\n          1: i2l\n-         2: ldc2_w        #11                 // long 4294967295l\n+         2: ldc2_w        #36                 // long 4294967295l\n          5: land\n          6: iload_1\n          7: i2l\n-         8: ldc2_w        #13                 // long -4132994306676758123l\n+         8: ldc2_w        #38                 // long -4132994306676758123l\n         11: lmul\n         12: lxor\n         13: lstore_3\n         14: iload_1\n         15: iconst_3\n         16: ishr\n         17: istore        5\n@@ -376,36 +376,36 @@\n         26: if_icmpge     86\n         29: iload         6\n         31: iconst_3\n         32: ishl\n         33: istore        7\n         35: aload_0\n         36: iload         7\n-        38: invokestatic  #15                 // Method getLittleEndianLong:([BI)J\n+        38: invokestatic  #40                 // Method getLittleEndianLong:([BI)J\n         41: lstore        8\n         43: lload         8\n-        45: ldc2_w        #13                 // long -4132994306676758123l\n+        45: ldc2_w        #38                 // long -4132994306676758123l\n         48: lmul\n         49: lstore        8\n         51: lload         8\n         53: lload         8\n         55: bipush        47\n         57: lushr\n         58: lxor\n         59: lstore        8\n         61: lload         8\n-        63: ldc2_w        #13                 // long -4132994306676758123l\n+        63: ldc2_w        #38                 // long -4132994306676758123l\n         66: lmul\n         67: lstore        8\n         69: lload_3\n         70: lload         8\n         72: lxor\n         73: lstore_3\n         74: lload_3\n-        75: ldc2_w        #13                 // long -4132994306676758123l\n+        75: ldc2_w        #38                 // long -4132994306676758123l\n         78: lmul\n         79: lstore_3\n         80: iinc          6, 1\n         83: goto          22\n         86: iload         5\n         88: iconst_3\n         89: ishl\n@@ -426,106 +426,106 @@\n        140: lload_3\n        141: aload_0\n        142: iload         6\n        144: bipush        6\n        146: iadd\n        147: baload\n        148: i2l\n-       149: ldc2_w        #16                 // long 255l\n+       149: ldc2_w        #44                 // long 255l\n        152: land\n        153: bipush        48\n        155: lshl\n        156: lxor\n        157: lstore_3\n        158: lload_3\n        159: aload_0\n        160: iload         6\n        162: iconst_5\n        163: iadd\n        164: baload\n        165: i2l\n-       166: ldc2_w        #16                 // long 255l\n+       166: ldc2_w        #44                 // long 255l\n        169: land\n        170: bipush        40\n        172: lshl\n        173: lxor\n        174: lstore_3\n        175: lload_3\n        176: aload_0\n        177: iload         6\n        179: iconst_4\n        180: iadd\n        181: baload\n        182: i2l\n-       183: ldc2_w        #16                 // long 255l\n+       183: ldc2_w        #44                 // long 255l\n        186: land\n        187: bipush        32\n        189: lshl\n        190: lxor\n        191: lstore_3\n        192: lload_3\n        193: aload_0\n        194: iload         6\n        196: iconst_3\n        197: iadd\n        198: baload\n        199: i2l\n-       200: ldc2_w        #16                 // long 255l\n+       200: ldc2_w        #44                 // long 255l\n        203: land\n        204: bipush        24\n        206: lshl\n        207: lxor\n        208: lstore_3\n        209: lload_3\n        210: aload_0\n        211: iload         6\n        213: iconst_2\n        214: iadd\n        215: baload\n        216: i2l\n-       217: ldc2_w        #16                 // long 255l\n+       217: ldc2_w        #44                 // long 255l\n        220: land\n        221: bipush        16\n        223: lshl\n        224: lxor\n        225: lstore_3\n        226: lload_3\n        227: aload_0\n        228: iload         6\n        230: iconst_1\n        231: iadd\n        232: baload\n        233: i2l\n-       234: ldc2_w        #16                 // long 255l\n+       234: ldc2_w        #44                 // long 255l\n        237: land\n        238: bipush        8\n        240: lshl\n        241: lxor\n        242: lstore_3\n        243: lload_3\n        244: aload_0\n        245: iload         6\n        247: baload\n        248: i2l\n-       249: ldc2_w        #16                 // long 255l\n+       249: ldc2_w        #44                 // long 255l\n        252: land\n        253: lxor\n        254: lstore_3\n        255: lload_3\n-       256: ldc2_w        #13                 // long -4132994306676758123l\n+       256: ldc2_w        #38                 // long -4132994306676758123l\n        259: lmul\n        260: lstore_3\n        261: lload_3\n        262: lload_3\n        263: bipush        47\n        265: lushr\n        266: lxor\n        267: lstore_3\n        268: lload_3\n-       269: ldc2_w        #13                 // long -4132994306676758123l\n+       269: ldc2_w        #38                 // long -4132994306676758123l\n        272: lmul\n        273: lstore_3\n        274: lload_3\n        275: lload_3\n        276: bipush        47\n        278: lushr\n        279: lxor\n@@ -589,36 +589,36 @@\n   public static long hash64(byte[], int);\n     descriptor: ([BI)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: ldc           #18                 // int -512093083\n-         4: invokestatic  #19                 // Method hash64:([BII)J\n+         2: ldc           #46                 // int -512093083\n+         4: invokestatic  #47                 // Method hash64:([BII)J\n          7: lreturn\n       LineNumberTable:\n         line 241: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  data   [B\n             0       8     1 length   I\n \n   public static long hash64(java.lang.String);\n     descriptor: (Ljava/lang/String;)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: invokestatic  #7                  // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n+         1: invokestatic  #19                 // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n          4: astore_1\n          5: aload_1\n          6: aload_1\n          7: arraylength\n-         8: invokestatic  #20                 // Method hash64:([BI)J\n+         8: invokestatic  #51                 // Method hash64:([BI)J\n         11: lreturn\n       LineNumberTable:\n         line 265: 0\n         line 266: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  text   Ljava/lang/String;\n@@ -630,16 +630,16 @@\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: iload_1\n          2: iload_1\n          3: iload_2\n          4: iadd\n-         5: invokevirtual #9                  // Method java/lang/String.substring:(II)Ljava/lang/String;\n-         8: invokestatic  #21                 // Method hash64:(Ljava/lang/String;)J\n+         5: invokevirtual #27                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+         8: invokestatic  #53                 // Method hash64:(Ljava/lang/String;)J\n         11: lreturn\n       LineNumberTable:\n         line 287: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  text   Ljava/lang/String;\n             0      12     1  from   I\n@@ -698,89 +698,89 @@\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=6, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: baload\n          3: i2l\n-         4: ldc2_w        #16                 // long 255l\n+         4: ldc2_w        #44                 // long 255l\n          7: land\n          8: aload_0\n          9: iload_1\n         10: iconst_1\n         11: iadd\n         12: baload\n         13: i2l\n-        14: ldc2_w        #16                 // long 255l\n+        14: ldc2_w        #44                 // long 255l\n         17: land\n         18: bipush        8\n         20: lshl\n         21: lor\n         22: aload_0\n         23: iload_1\n         24: iconst_2\n         25: iadd\n         26: baload\n         27: i2l\n-        28: ldc2_w        #16                 // long 255l\n+        28: ldc2_w        #44                 // long 255l\n         31: land\n         32: bipush        16\n         34: lshl\n         35: lor\n         36: aload_0\n         37: iload_1\n         38: iconst_3\n         39: iadd\n         40: baload\n         41: i2l\n-        42: ldc2_w        #16                 // long 255l\n+        42: ldc2_w        #44                 // long 255l\n         45: land\n         46: bipush        24\n         48: lshl\n         49: lor\n         50: aload_0\n         51: iload_1\n         52: iconst_4\n         53: iadd\n         54: baload\n         55: i2l\n-        56: ldc2_w        #16                 // long 255l\n+        56: ldc2_w        #44                 // long 255l\n         59: land\n         60: bipush        32\n         62: lshl\n         63: lor\n         64: aload_0\n         65: iload_1\n         66: iconst_5\n         67: iadd\n         68: baload\n         69: i2l\n-        70: ldc2_w        #16                 // long 255l\n+        70: ldc2_w        #44                 // long 255l\n         73: land\n         74: bipush        40\n         76: lshl\n         77: lor\n         78: aload_0\n         79: iload_1\n         80: bipush        6\n         82: iadd\n         83: baload\n         84: i2l\n-        85: ldc2_w        #16                 // long 255l\n+        85: ldc2_w        #44                 // long 255l\n         88: land\n         89: bipush        48\n         91: lshl\n         92: lor\n         93: aload_0\n         94: iload_1\n         95: bipush        7\n         97: iadd\n         98: baload\n         99: i2l\n-       100: ldc2_w        #16                 // long 255l\n+       100: ldc2_w        #44                 // long 255l\n        103: land\n        104: bipush        56\n        106: lshl\n        107: lor\n        108: lreturn\n       LineNumberTable:\n         line 312: 0\n"}]}
