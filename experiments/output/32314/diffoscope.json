{"diffoscope-json-version": 1, "source1": "first/FileAlterationMonitor.class", "source2": "second/FileAlterationMonitor.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,172 +1,172 @@\n-  SHA-256 checksum 1e7b0fbb7003a4ad82578d19347ba1fe94aa6d900cf778873c0c5d374e3f4e96\n+  SHA-256 checksum 2667e9dc68d1ea2184cad1893bac5bf1e671d22fe7994a6c2bb1d9be565b6c48\n   Compiled from \"FileAlterationMonitor.java\"\n public final class org.apache.commons.io.monitor.FileAlterationMonitor implements java.lang.Runnable\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #36                         // org/apache/commons/io/monitor/FileAlterationMonitor\n-  super_class: #37                        // java/lang/Object\n+  this_class: #4                          // org/apache/commons/io/monitor/FileAlterationMonitor\n+  super_class: #10                        // java/lang/Object\n   interfaces: 1, fields: 5, methods: 12, attributes: 1\n Constant pool:\n     #1 = Long               10000l\n-    #3 = Methodref          #36.#86       // org/apache/commons/io/monitor/FileAlterationMonitor.\"<init>\":(J)V\n-    #4 = Methodref          #37.#87       // java/lang/Object.\"<init>\":()V\n-    #5 = Class              #88           // java/util/concurrent/CopyOnWriteArrayList\n-    #6 = Methodref          #5.#87        // java/util/concurrent/CopyOnWriteArrayList.\"<init>\":()V\n-    #7 = Fieldref           #36.#89       // org/apache/commons/io/monitor/FileAlterationMonitor.observers:Ljava/util/List;\n-    #8 = Fieldref           #36.#90       // org/apache/commons/io/monitor/FileAlterationMonitor.thread:Ljava/lang/Thread;\n-    #9 = Fieldref           #36.#91       // org/apache/commons/io/monitor/FileAlterationMonitor.running:Z\n-   #10 = Fieldref           #36.#92       // org/apache/commons/io/monitor/FileAlterationMonitor.interval:J\n-   #11 = Methodref          #36.#93       // org/apache/commons/io/monitor/FileAlterationMonitor.addObserver:(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n-   #12 = Fieldref           #36.#94       // org/apache/commons/io/monitor/FileAlterationMonitor.threadFactory:Ljava/util/concurrent/ThreadFactory;\n-   #13 = InterfaceMethodref #95.#96       // java/util/List.add:(Ljava/lang/Object;)Z\n-   #14 = InterfaceMethodref #95.#97       // java/util/List.remove:(Ljava/lang/Object;)Z\n-   #15 = Class              #98           // java/lang/IllegalStateException\n-   #16 = String             #99           // Monitor is already running\n-   #17 = Methodref          #15.#100      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #18 = InterfaceMethodref #95.#101      // java/util/List.iterator:()Ljava/util/Iterator;\n-   #19 = InterfaceMethodref #76.#102      // java/util/Iterator.hasNext:()Z\n-   #20 = InterfaceMethodref #76.#103      // java/util/Iterator.next:()Ljava/lang/Object;\n-   #21 = Class              #104          // org/apache/commons/io/monitor/FileAlterationObserver\n-   #22 = Methodref          #21.#105      // org/apache/commons/io/monitor/FileAlterationObserver.initialize:()V\n-   #23 = InterfaceMethodref #106.#107     // java/util/concurrent/ThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;\n-   #24 = Class              #108          // java/lang/Thread\n-   #25 = Methodref          #24.#109      // java/lang/Thread.\"<init>\":(Ljava/lang/Runnable;)V\n-   #26 = Methodref          #24.#110      // java/lang/Thread.start:()V\n-   #27 = Methodref          #36.#111      // org/apache/commons/io/monitor/FileAlterationMonitor.stop:(J)V\n-   #28 = String             #112          // Monitor is not running\n-   #29 = Methodref          #24.#113      // java/lang/Thread.interrupt:()V\n-   #30 = Methodref          #24.#114      // java/lang/Thread.join:(J)V\n-   #31 = Class              #115          // java/lang/InterruptedException\n-   #32 = Methodref          #24.#116      // java/lang/Thread.currentThread:()Ljava/lang/Thread;\n-   #33 = Methodref          #21.#117      // org/apache/commons/io/monitor/FileAlterationObserver.destroy:()V\n-   #34 = Methodref          #21.#118      // org/apache/commons/io/monitor/FileAlterationObserver.checkAndNotify:()V\n-   #35 = Methodref          #24.#119      // java/lang/Thread.sleep:(J)V\n-   #36 = Class              #120          // org/apache/commons/io/monitor/FileAlterationMonitor\n-   #37 = Class              #121          // java/lang/Object\n-   #38 = Class              #122          // java/lang/Runnable\n-   #39 = Utf8               interval\n-   #40 = Utf8               J\n-   #41 = Utf8               observers\n-   #42 = Utf8               Ljava/util/List;\n-   #43 = Utf8               Signature\n-   #44 = Utf8               Ljava/util/List<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;\n-   #45 = Utf8               thread\n-   #46 = Utf8               Ljava/lang/Thread;\n-   #47 = Utf8               threadFactory\n-   #48 = Utf8               Ljava/util/concurrent/ThreadFactory;\n-   #49 = Utf8               running\n-   #50 = Utf8               Z\n-   #51 = Utf8               <init>\n-   #52 = Utf8               ()V\n-   #53 = Utf8               Code\n-   #54 = Utf8               LineNumberTable\n-   #55 = Utf8               LocalVariableTable\n-   #56 = Utf8               this\n-   #57 = Utf8               Lorg/apache/commons/io/monitor/FileAlterationMonitor;\n-   #58 = Utf8               (J)V\n-   #59 = Utf8               (J[Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n-   #60 = Utf8               observer\n-   #61 = Utf8               Lorg/apache/commons/io/monitor/FileAlterationObserver;\n-   #62 = Utf8               [Lorg/apache/commons/io/monitor/FileAlterationObserver;\n-   #63 = Utf8               StackMapTable\n-   #64 = Class              #62           // \"[Lorg/apache/commons/io/monitor/FileAlterationObserver;\"\n-   #65 = Utf8               getInterval\n-   #66 = Utf8               ()J\n-   #67 = Utf8               setThreadFactory\n-   #68 = Utf8               (Ljava/util/concurrent/ThreadFactory;)V\n-   #69 = Utf8               addObserver\n-   #70 = Utf8               (Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n-   #71 = Utf8               removeObserver\n-   #72 = Utf8               getObservers\n-   #73 = Utf8               ()Ljava/lang/Iterable;\n-   #74 = Utf8               ()Ljava/lang/Iterable<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;\n-   #75 = Utf8               start\n-   #76 = Class              #123          // java/util/Iterator\n-   #77 = Utf8               Exceptions\n-   #78 = Class              #124          // java/lang/Exception\n-   #79 = Utf8               stop\n-   #80 = Utf8               e\n-   #81 = Utf8               Ljava/lang/InterruptedException;\n-   #82 = Utf8               stopInterval\n-   #83 = Utf8               run\n-   #84 = Utf8               SourceFile\n-   #85 = Utf8               FileAlterationMonitor.java\n-   #86 = NameAndType        #51:#58       // \"<init>\":(J)V\n-   #87 = NameAndType        #51:#52       // \"<init>\":()V\n-   #88 = Utf8               java/util/concurrent/CopyOnWriteArrayList\n-   #89 = NameAndType        #41:#42       // observers:Ljava/util/List;\n-   #90 = NameAndType        #45:#46       // thread:Ljava/lang/Thread;\n-   #91 = NameAndType        #49:#50       // running:Z\n-   #92 = NameAndType        #39:#40       // interval:J\n-   #93 = NameAndType        #69:#70       // addObserver:(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n-   #94 = NameAndType        #47:#48       // threadFactory:Ljava/util/concurrent/ThreadFactory;\n-   #95 = Class              #125          // java/util/List\n-   #96 = NameAndType        #126:#127     // add:(Ljava/lang/Object;)Z\n-   #97 = NameAndType        #128:#127     // remove:(Ljava/lang/Object;)Z\n-   #98 = Utf8               java/lang/IllegalStateException\n-   #99 = Utf8               Monitor is already running\n-  #100 = NameAndType        #51:#129      // \"<init>\":(Ljava/lang/String;)V\n-  #101 = NameAndType        #130:#131     // iterator:()Ljava/util/Iterator;\n-  #102 = NameAndType        #132:#133     // hasNext:()Z\n-  #103 = NameAndType        #134:#135     // next:()Ljava/lang/Object;\n-  #104 = Utf8               org/apache/commons/io/monitor/FileAlterationObserver\n-  #105 = NameAndType        #136:#52      // initialize:()V\n-  #106 = Class              #137          // java/util/concurrent/ThreadFactory\n-  #107 = NameAndType        #138:#139     // newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;\n-  #108 = Utf8               java/lang/Thread\n-  #109 = NameAndType        #51:#140      // \"<init>\":(Ljava/lang/Runnable;)V\n-  #110 = NameAndType        #75:#52       // start:()V\n-  #111 = NameAndType        #79:#58       // stop:(J)V\n-  #112 = Utf8               Monitor is not running\n-  #113 = NameAndType        #141:#52      // interrupt:()V\n-  #114 = NameAndType        #142:#58      // join:(J)V\n-  #115 = Utf8               java/lang/InterruptedException\n-  #116 = NameAndType        #143:#144     // currentThread:()Ljava/lang/Thread;\n-  #117 = NameAndType        #145:#52      // destroy:()V\n-  #118 = NameAndType        #146:#52      // checkAndNotify:()V\n-  #119 = NameAndType        #147:#58      // sleep:(J)V\n-  #120 = Utf8               org/apache/commons/io/monitor/FileAlterationMonitor\n-  #121 = Utf8               java/lang/Object\n-  #122 = Utf8               java/lang/Runnable\n-  #123 = Utf8               java/util/Iterator\n-  #124 = Utf8               java/lang/Exception\n-  #125 = Utf8               java/util/List\n-  #126 = Utf8               add\n-  #127 = Utf8               (Ljava/lang/Object;)Z\n-  #128 = Utf8               remove\n-  #129 = Utf8               (Ljava/lang/String;)V\n-  #130 = Utf8               iterator\n-  #131 = Utf8               ()Ljava/util/Iterator;\n-  #132 = Utf8               hasNext\n-  #133 = Utf8               ()Z\n-  #134 = Utf8               next\n-  #135 = Utf8               ()Ljava/lang/Object;\n-  #136 = Utf8               initialize\n-  #137 = Utf8               java/util/concurrent/ThreadFactory\n-  #138 = Utf8               newThread\n-  #139 = Utf8               (Ljava/lang/Runnable;)Ljava/lang/Thread;\n-  #140 = Utf8               (Ljava/lang/Runnable;)V\n-  #141 = Utf8               interrupt\n-  #142 = Utf8               join\n-  #143 = Utf8               currentThread\n-  #144 = Utf8               ()Ljava/lang/Thread;\n-  #145 = Utf8               destroy\n-  #146 = Utf8               checkAndNotify\n-  #147 = Utf8               sleep\n+    #3 = Methodref          #4.#5         // org/apache/commons/io/monitor/FileAlterationMonitor.\"<init>\":(J)V\n+    #4 = Class              #6            // org/apache/commons/io/monitor/FileAlterationMonitor\n+    #5 = NameAndType        #7:#8         // \"<init>\":(J)V\n+    #6 = Utf8               org/apache/commons/io/monitor/FileAlterationMonitor\n+    #7 = Utf8               <init>\n+    #8 = Utf8               (J)V\n+    #9 = Methodref          #10.#11       // java/lang/Object.\"<init>\":()V\n+   #10 = Class              #12           // java/lang/Object\n+   #11 = NameAndType        #7:#13        // \"<init>\":()V\n+   #12 = Utf8               java/lang/Object\n+   #13 = Utf8               ()V\n+   #14 = Class              #15           // java/util/concurrent/CopyOnWriteArrayList\n+   #15 = Utf8               java/util/concurrent/CopyOnWriteArrayList\n+   #16 = Methodref          #14.#11       // java/util/concurrent/CopyOnWriteArrayList.\"<init>\":()V\n+   #17 = Fieldref           #4.#18        // org/apache/commons/io/monitor/FileAlterationMonitor.observers:Ljava/util/List;\n+   #18 = NameAndType        #19:#20       // observers:Ljava/util/List;\n+   #19 = Utf8               observers\n+   #20 = Utf8               Ljava/util/List;\n+   #21 = Fieldref           #4.#22        // org/apache/commons/io/monitor/FileAlterationMonitor.thread:Ljava/lang/Thread;\n+   #22 = NameAndType        #23:#24       // thread:Ljava/lang/Thread;\n+   #23 = Utf8               thread\n+   #24 = Utf8               Ljava/lang/Thread;\n+   #25 = Fieldref           #4.#26        // org/apache/commons/io/monitor/FileAlterationMonitor.running:Z\n+   #26 = NameAndType        #27:#28       // running:Z\n+   #27 = Utf8               running\n+   #28 = Utf8               Z\n+   #29 = Fieldref           #4.#30        // org/apache/commons/io/monitor/FileAlterationMonitor.interval:J\n+   #30 = NameAndType        #31:#32       // interval:J\n+   #31 = Utf8               interval\n+   #32 = Utf8               J\n+   #33 = Methodref          #4.#34        // org/apache/commons/io/monitor/FileAlterationMonitor.addObserver:(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n+   #34 = NameAndType        #35:#36       // addObserver:(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n+   #35 = Utf8               addObserver\n+   #36 = Utf8               (Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n+   #37 = Fieldref           #4.#38        // org/apache/commons/io/monitor/FileAlterationMonitor.threadFactory:Ljava/util/concurrent/ThreadFactory;\n+   #38 = NameAndType        #39:#40       // threadFactory:Ljava/util/concurrent/ThreadFactory;\n+   #39 = Utf8               threadFactory\n+   #40 = Utf8               Ljava/util/concurrent/ThreadFactory;\n+   #41 = InterfaceMethodref #42.#43       // java/util/List.add:(Ljava/lang/Object;)Z\n+   #42 = Class              #44           // java/util/List\n+   #43 = NameAndType        #45:#46       // add:(Ljava/lang/Object;)Z\n+   #44 = Utf8               java/util/List\n+   #45 = Utf8               add\n+   #46 = Utf8               (Ljava/lang/Object;)Z\n+   #47 = InterfaceMethodref #42.#48       // java/util/List.remove:(Ljava/lang/Object;)Z\n+   #48 = NameAndType        #49:#46       // remove:(Ljava/lang/Object;)Z\n+   #49 = Utf8               remove\n+   #50 = Class              #51           // java/lang/IllegalStateException\n+   #51 = Utf8               java/lang/IllegalStateException\n+   #52 = String             #53           // Monitor is already running\n+   #53 = Utf8               Monitor is already running\n+   #54 = Methodref          #50.#55       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #55 = NameAndType        #7:#56        // \"<init>\":(Ljava/lang/String;)V\n+   #56 = Utf8               (Ljava/lang/String;)V\n+   #57 = InterfaceMethodref #42.#58       // java/util/List.iterator:()Ljava/util/Iterator;\n+   #58 = NameAndType        #59:#60       // iterator:()Ljava/util/Iterator;\n+   #59 = Utf8               iterator\n+   #60 = Utf8               ()Ljava/util/Iterator;\n+   #61 = InterfaceMethodref #62.#63       // java/util/Iterator.hasNext:()Z\n+   #62 = Class              #64           // java/util/Iterator\n+   #63 = NameAndType        #65:#66       // hasNext:()Z\n+   #64 = Utf8               java/util/Iterator\n+   #65 = Utf8               hasNext\n+   #66 = Utf8               ()Z\n+   #67 = InterfaceMethodref #62.#68       // java/util/Iterator.next:()Ljava/lang/Object;\n+   #68 = NameAndType        #69:#70       // next:()Ljava/lang/Object;\n+   #69 = Utf8               next\n+   #70 = Utf8               ()Ljava/lang/Object;\n+   #71 = Class              #72           // org/apache/commons/io/monitor/FileAlterationObserver\n+   #72 = Utf8               org/apache/commons/io/monitor/FileAlterationObserver\n+   #73 = Methodref          #71.#74       // org/apache/commons/io/monitor/FileAlterationObserver.initialize:()V\n+   #74 = NameAndType        #75:#13       // initialize:()V\n+   #75 = Utf8               initialize\n+   #76 = InterfaceMethodref #77.#78       // java/util/concurrent/ThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;\n+   #77 = Class              #79           // java/util/concurrent/ThreadFactory\n+   #78 = NameAndType        #80:#81       // newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;\n+   #79 = Utf8               java/util/concurrent/ThreadFactory\n+   #80 = Utf8               newThread\n+   #81 = Utf8               (Ljava/lang/Runnable;)Ljava/lang/Thread;\n+   #82 = Class              #83           // java/lang/Thread\n+   #83 = Utf8               java/lang/Thread\n+   #84 = Methodref          #82.#85       // java/lang/Thread.\"<init>\":(Ljava/lang/Runnable;)V\n+   #85 = NameAndType        #7:#86        // \"<init>\":(Ljava/lang/Runnable;)V\n+   #86 = Utf8               (Ljava/lang/Runnable;)V\n+   #87 = Methodref          #82.#88       // java/lang/Thread.start:()V\n+   #88 = NameAndType        #89:#13       // start:()V\n+   #89 = Utf8               start\n+   #90 = Methodref          #4.#91        // org/apache/commons/io/monitor/FileAlterationMonitor.stop:(J)V\n+   #91 = NameAndType        #92:#8        // stop:(J)V\n+   #92 = Utf8               stop\n+   #93 = String             #94           // Monitor is not running\n+   #94 = Utf8               Monitor is not running\n+   #95 = Methodref          #82.#96       // java/lang/Thread.interrupt:()V\n+   #96 = NameAndType        #97:#13       // interrupt:()V\n+   #97 = Utf8               interrupt\n+   #98 = Methodref          #82.#99       // java/lang/Thread.join:(J)V\n+   #99 = NameAndType        #100:#8       // join:(J)V\n+  #100 = Utf8               join\n+  #101 = Class              #102          // java/lang/InterruptedException\n+  #102 = Utf8               java/lang/InterruptedException\n+  #103 = Methodref          #82.#104      // java/lang/Thread.currentThread:()Ljava/lang/Thread;\n+  #104 = NameAndType        #105:#106     // currentThread:()Ljava/lang/Thread;\n+  #105 = Utf8               currentThread\n+  #106 = Utf8               ()Ljava/lang/Thread;\n+  #107 = Methodref          #71.#108      // org/apache/commons/io/monitor/FileAlterationObserver.destroy:()V\n+  #108 = NameAndType        #109:#13      // destroy:()V\n+  #109 = Utf8               destroy\n+  #110 = Methodref          #71.#111      // org/apache/commons/io/monitor/FileAlterationObserver.checkAndNotify:()V\n+  #111 = NameAndType        #112:#13      // checkAndNotify:()V\n+  #112 = Utf8               checkAndNotify\n+  #113 = Methodref          #82.#114      // java/lang/Thread.sleep:(J)V\n+  #114 = NameAndType        #115:#8       // sleep:(J)V\n+  #115 = Utf8               sleep\n+  #116 = Class              #117          // java/lang/Runnable\n+  #117 = Utf8               java/lang/Runnable\n+  #118 = Utf8               Signature\n+  #119 = Utf8               Ljava/util/List<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;\n+  #120 = Utf8               Code\n+  #121 = Utf8               LineNumberTable\n+  #122 = Utf8               LocalVariableTable\n+  #123 = Utf8               this\n+  #124 = Utf8               Lorg/apache/commons/io/monitor/FileAlterationMonitor;\n+  #125 = Utf8               (J[Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n+  #126 = Utf8               observer\n+  #127 = Utf8               Lorg/apache/commons/io/monitor/FileAlterationObserver;\n+  #128 = Utf8               [Lorg/apache/commons/io/monitor/FileAlterationObserver;\n+  #129 = Utf8               StackMapTable\n+  #130 = Class              #128          // \"[Lorg/apache/commons/io/monitor/FileAlterationObserver;\"\n+  #131 = Utf8               getInterval\n+  #132 = Utf8               ()J\n+  #133 = Utf8               setThreadFactory\n+  #134 = Utf8               (Ljava/util/concurrent/ThreadFactory;)V\n+  #135 = Utf8               removeObserver\n+  #136 = Utf8               getObservers\n+  #137 = Utf8               ()Ljava/lang/Iterable;\n+  #138 = Utf8               ()Ljava/lang/Iterable<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;\n+  #139 = Utf8               Exceptions\n+  #140 = Class              #141          // java/lang/Exception\n+  #141 = Utf8               java/lang/Exception\n+  #142 = Utf8               e\n+  #143 = Utf8               Ljava/lang/InterruptedException;\n+  #144 = Utf8               stopInterval\n+  #145 = Utf8               run\n+  #146 = Utf8               SourceFile\n+  #147 = Utf8               FileAlterationMonitor.java\n {\n   private final long interval;\n     descriptor: J\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final java.util.List<org.apache.commons.io.monitor.FileAlterationObserver> observers;\n     descriptor: Ljava/util/List;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #44                          // Ljava/util/List<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;\n+    Signature: #119                         // Ljava/util/List<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;\n \n   private java.lang.Thread thread;\n     descriptor: Ljava/lang/Thread;\n     flags: (0x0002) ACC_PRIVATE\n \n   private java.util.concurrent.ThreadFactory threadFactory;\n     descriptor: Ljava/util/concurrent/ThreadFactory;\n@@ -194,29 +194,29 @@\n \n   public org.apache.commons.io.monitor.FileAlterationMonitor(long);\n     descriptor: (J)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: invokespecial #4                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #9                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: new           #5                  // class java/util/concurrent/CopyOnWriteArrayList\n+         5: new           #14                 // class java/util/concurrent/CopyOnWriteArrayList\n          8: dup\n-         9: invokespecial #6                  // Method java/util/concurrent/CopyOnWriteArrayList.\"<init>\":()V\n-        12: putfield      #7                  // Field observers:Ljava/util/List;\n+         9: invokespecial #16                 // Method java/util/concurrent/CopyOnWriteArrayList.\"<init>\":()V\n+        12: putfield      #17                 // Field observers:Ljava/util/List;\n         15: aload_0\n         16: aconst_null\n-        17: putfield      #8                  // Field thread:Ljava/lang/Thread;\n+        17: putfield      #21                 // Field thread:Ljava/lang/Thread;\n         20: aload_0\n         21: iconst_0\n-        22: putfield      #9                  // Field running:Z\n+        22: putfield      #25                 // Field running:Z\n         25: aload_0\n         26: lload_1\n-        27: putfield      #10                 // Field interval:J\n+        27: putfield      #29                 // Field interval:J\n         30: return\n       LineNumberTable:\n         line 51: 0\n         line 33: 4\n         line 34: 15\n         line 36: 20\n         line 52: 25\n@@ -248,15 +248,15 @@\n         24: if_icmpge     46\n         27: aload         4\n         29: iload         6\n         31: aaload\n         32: astore        7\n         34: aload_0\n         35: aload         7\n-        37: invokevirtual #11                 // Method addObserver:(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n+        37: invokevirtual #33                 // Method addObserver:(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n         40: iinc          6, 1\n         43: goto          20\n         46: return\n       LineNumberTable:\n         line 63: 0\n         line 64: 5\n         line 65: 9\n@@ -279,30 +279,30 @@\n \n   public long getInterval();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field interval:J\n+         1: getfield      #29                 // Field interval:J\n          4: lreturn\n       LineNumberTable:\n         line 77: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/monitor/FileAlterationMonitor;\n \n   public synchronized void setThreadFactory(java.util.concurrent.ThreadFactory);\n     descriptor: (Ljava/util/concurrent/ThreadFactory;)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #12                 // Field threadFactory:Ljava/util/concurrent/ThreadFactory;\n+         2: putfield      #37                 // Field threadFactory:Ljava/util/concurrent/ThreadFactory;\n          5: return\n       LineNumberTable:\n         line 86: 0\n         line 87: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/monitor/FileAlterationMonitor;\n@@ -312,17 +312,17 @@\n     descriptor: (Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: ifnull        15\n          4: aload_0\n-         5: getfield      #7                  // Field observers:Ljava/util/List;\n+         5: getfield      #17                 // Field observers:Ljava/util/List;\n          8: aload_1\n-         9: invokeinterface #13,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+         9: invokeinterface #41,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         14: pop\n         15: return\n       LineNumberTable:\n         line 95: 0\n         line 96: 4\n         line 98: 15\n       LocalVariableTable:\n@@ -336,17 +336,17 @@\n     descriptor: (Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: ifnull        20\n          4: aload_0\n-         5: getfield      #7                  // Field observers:Ljava/util/List;\n+         5: getfield      #17                 // Field observers:Ljava/util/List;\n          8: aload_1\n-         9: invokeinterface #14,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z\n+         9: invokeinterface #47,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z\n         14: ifeq          20\n         17: goto          4\n         20: return\n       LineNumberTable:\n         line 106: 0\n         line 107: 4\n         line 111: 20\n@@ -360,72 +360,72 @@\n \n   public java.lang.Iterable<org.apache.commons.io.monitor.FileAlterationObserver> getObservers();\n     descriptor: ()Ljava/lang/Iterable;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field observers:Ljava/util/List;\n+         1: getfield      #17                 // Field observers:Ljava/util/List;\n          4: areturn\n       LineNumberTable:\n         line 120: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/monitor/FileAlterationMonitor;\n-    Signature: #74                          // ()Ljava/lang/Iterable<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;\n+    Signature: #138                         // ()Ljava/lang/Iterable<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;\n \n   public synchronized void start() throws java.lang.Exception;\n     descriptor: ()V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=4, locals=3, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field running:Z\n+         1: getfield      #25                 // Field running:Z\n          4: ifeq          17\n-         7: new           #15                 // class java/lang/IllegalStateException\n+         7: new           #50                 // class java/lang/IllegalStateException\n         10: dup\n-        11: ldc           #16                 // String Monitor is already running\n-        13: invokespecial #17                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #52                 // String Monitor is already running\n+        13: invokespecial #54                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: getfield      #7                  // Field observers:Ljava/util/List;\n-        21: invokeinterface #18,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+        18: getfield      #17                 // Field observers:Ljava/util/List;\n+        21: invokeinterface #57,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n         26: astore_1\n         27: aload_1\n-        28: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        28: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         33: ifeq          53\n         36: aload_1\n-        37: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        42: checkcast     #21                 // class org/apache/commons/io/monitor/FileAlterationObserver\n+        37: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        42: checkcast     #71                 // class org/apache/commons/io/monitor/FileAlterationObserver\n         45: astore_2\n         46: aload_2\n-        47: invokevirtual #22                 // Method org/apache/commons/io/monitor/FileAlterationObserver.initialize:()V\n+        47: invokevirtual #73                 // Method org/apache/commons/io/monitor/FileAlterationObserver.initialize:()V\n         50: goto          27\n         53: aload_0\n         54: iconst_1\n-        55: putfield      #9                  // Field running:Z\n+        55: putfield      #25                 // Field running:Z\n         58: aload_0\n-        59: getfield      #12                 // Field threadFactory:Ljava/util/concurrent/ThreadFactory;\n+        59: getfield      #37                 // Field threadFactory:Ljava/util/concurrent/ThreadFactory;\n         62: ifnull        82\n         65: aload_0\n         66: aload_0\n-        67: getfield      #12                 // Field threadFactory:Ljava/util/concurrent/ThreadFactory;\n+        67: getfield      #37                 // Field threadFactory:Ljava/util/concurrent/ThreadFactory;\n         70: aload_0\n-        71: invokeinterface #23,  2           // InterfaceMethod java/util/concurrent/ThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;\n-        76: putfield      #8                  // Field thread:Ljava/lang/Thread;\n+        71: invokeinterface #76,  2           // InterfaceMethod java/util/concurrent/ThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;\n+        76: putfield      #21                 // Field thread:Ljava/lang/Thread;\n         79: goto          94\n         82: aload_0\n-        83: new           #24                 // class java/lang/Thread\n+        83: new           #82                 // class java/lang/Thread\n         86: dup\n         87: aload_0\n-        88: invokespecial #25                 // Method java/lang/Thread.\"<init>\":(Ljava/lang/Runnable;)V\n-        91: putfield      #8                  // Field thread:Ljava/lang/Thread;\n+        88: invokespecial #84                 // Method java/lang/Thread.\"<init>\":(Ljava/lang/Runnable;)V\n+        91: putfield      #21                 // Field thread:Ljava/lang/Thread;\n         94: aload_0\n-        95: getfield      #8                  // Field thread:Ljava/lang/Thread;\n-        98: invokevirtual #26                 // Method java/lang/Thread.start:()V\n+        95: getfield      #21                 // Field thread:Ljava/lang/Thread;\n+        98: invokevirtual #87                 // Method java/lang/Thread.start:()V\n        101: return\n       LineNumberTable:\n         line 129: 0\n         line 130: 7\n         line 132: 17\n         line 133: 46\n         line 134: 50\n@@ -454,16 +454,16 @@\n   public synchronized void stop() throws java.lang.Exception;\n     descriptor: ()V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: getfield      #10                 // Field interval:J\n-         5: invokevirtual #27                 // Method stop:(J)V\n+         2: getfield      #29                 // Field interval:J\n+         5: invokevirtual #90                 // Method stop:(J)V\n          8: return\n       LineNumberTable:\n         line 150: 0\n         line 151: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/monitor/FileAlterationMonitor;\n@@ -472,48 +472,48 @@\n \n   public synchronized void stop(long) throws java.lang.Exception;\n     descriptor: (J)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=3, locals=5, args_size=2\n          0: aload_0\n-         1: getfield      #9                  // Field running:Z\n+         1: getfield      #25                 // Field running:Z\n          4: ifne          17\n-         7: new           #15                 // class java/lang/IllegalStateException\n+         7: new           #50                 // class java/lang/IllegalStateException\n         10: dup\n-        11: ldc           #28                 // String Monitor is not running\n-        13: invokespecial #17                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #93                 // String Monitor is not running\n+        13: invokespecial #54                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n         18: iconst_0\n-        19: putfield      #9                  // Field running:Z\n+        19: putfield      #25                 // Field running:Z\n         22: aload_0\n-        23: getfield      #8                  // Field thread:Ljava/lang/Thread;\n-        26: invokevirtual #29                 // Method java/lang/Thread.interrupt:()V\n+        23: getfield      #21                 // Field thread:Ljava/lang/Thread;\n+        26: invokevirtual #95                 // Method java/lang/Thread.interrupt:()V\n         29: aload_0\n-        30: getfield      #8                  // Field thread:Ljava/lang/Thread;\n+        30: getfield      #21                 // Field thread:Ljava/lang/Thread;\n         33: lload_1\n-        34: invokevirtual #30                 // Method java/lang/Thread.join:(J)V\n+        34: invokevirtual #98                 // Method java/lang/Thread.join:(J)V\n         37: goto          47\n         40: astore_3\n-        41: invokestatic  #32                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;\n-        44: invokevirtual #29                 // Method java/lang/Thread.interrupt:()V\n+        41: invokestatic  #103                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;\n+        44: invokevirtual #95                 // Method java/lang/Thread.interrupt:()V\n         47: aload_0\n-        48: getfield      #7                  // Field observers:Ljava/util/List;\n-        51: invokeinterface #18,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+        48: getfield      #17                 // Field observers:Ljava/util/List;\n+        51: invokeinterface #57,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n         56: astore_3\n         57: aload_3\n-        58: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        58: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         63: ifeq          85\n         66: aload_3\n-        67: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        72: checkcast     #21                 // class org/apache/commons/io/monitor/FileAlterationObserver\n+        67: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        72: checkcast     #71                 // class org/apache/commons/io/monitor/FileAlterationObserver\n         75: astore        4\n         77: aload         4\n-        79: invokevirtual #33                 // Method org/apache/commons/io/monitor/FileAlterationObserver.destroy:()V\n+        79: invokevirtual #107                // Method org/apache/commons/io/monitor/FileAlterationObserver.destroy:()V\n         82: goto          57\n         85: return\n       Exception table:\n          from    to  target type\n             22    37    40   Class java/lang/InterruptedException\n       LineNumberTable:\n         line 162: 0\n@@ -549,37 +549,37 @@\n \n   public void run();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field running:Z\n+         1: getfield      #25                 // Field running:Z\n          4: ifeq          67\n          7: aload_0\n-         8: getfield      #7                  // Field observers:Ljava/util/List;\n-        11: invokeinterface #18,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+         8: getfield      #17                 // Field observers:Ljava/util/List;\n+        11: invokeinterface #57,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n         16: astore_1\n         17: aload_1\n-        18: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        18: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         23: ifeq          43\n         26: aload_1\n-        27: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        32: checkcast     #21                 // class org/apache/commons/io/monitor/FileAlterationObserver\n+        27: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        32: checkcast     #71                 // class org/apache/commons/io/monitor/FileAlterationObserver\n         35: astore_2\n         36: aload_2\n-        37: invokevirtual #34                 // Method org/apache/commons/io/monitor/FileAlterationObserver.checkAndNotify:()V\n+        37: invokevirtual #110                // Method org/apache/commons/io/monitor/FileAlterationObserver.checkAndNotify:()V\n         40: goto          17\n         43: aload_0\n-        44: getfield      #9                  // Field running:Z\n+        44: getfield      #25                 // Field running:Z\n         47: ifne          53\n         50: goto          67\n         53: aload_0\n-        54: getfield      #10                 // Field interval:J\n-        57: invokestatic  #35                 // Method java/lang/Thread.sleep:(J)V\n+        54: getfield      #29                 // Field interval:J\n+        57: invokestatic  #113                // Method java/lang/Thread.sleep:(J)V\n         60: goto          0\n         63: astore_1\n         64: goto          0\n         67: return\n       Exception table:\n          from    to  target type\n             53    60    63   Class java/lang/InterruptedException\n"}]}
