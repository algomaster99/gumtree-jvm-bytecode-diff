{"diffoscope-json-version": 1, "source1": "first/ModuleMainClass.class", "source2": "second/ModuleMainClass.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -25,17 +25,17 @@\n     }\n     \n     public void accept(final Visitor v) {\n         v.visitModuleMainClass(this);\n     }\n     \n     public Attribute copy(final ConstantPool constantPool) {\n-        final ModuleMainClass c = (ModuleMainClass)this.clone();\n-        c.setConstantPool(constantPool);\n-        return c;\n+        final ModuleMainClass moduleMainClass = (ModuleMainClass)this.clone();\n+        moduleMainClass.setConstantPool(constantPool);\n+        return moduleMainClass;\n     }\n     \n     public void dump(final DataOutputStream file) throws IOException {\n         super.dump(file);\n         file.writeShort(this.mainClassIndex);\n     }\n     \n@@ -44,14 +44,13 @@\n     }\n     \n     public void setHostClassIndex(final int mainClassIndex) {\n         this.mainClassIndex = mainClassIndex;\n     }\n     \n     public String toString() {\n-        final StringBuilder buf = new StringBuilder();\n-        buf.append(\"ModuleMainClass: \");\n-        final String className = super.getConstantPool().getConstantString(this.mainClassIndex, (byte)7);\n-        buf.append(Utility.compactClassName(className, false));\n-        return buf.toString();\n+        final StringBuilder sb = new StringBuilder();\n+        sb.append(\"ModuleMainClass: \");\n+        sb.append(Utility.compactClassName(super.getConstantPool().getConstantString(this.mainClassIndex, (byte)7), false));\n+        return sb.toString();\n     }\n }\n"}]}
