{"diffoscope-json-version": 1, "source1": "first/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel.class", "source2": "second/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,123 +1,123 @@\n-  SHA-256 checksum dcaf832fa25abdd1a764c85a6436abbfc1a8bdd09eec0695300af760d5232dbb\n+  SHA-256 checksum 559801176abab2e544eedac453b8a507922a9e9bd8457aec6b9f51ec11fa9135\n   Compiled from \"FixedLengthBlockOutputStream.java\"\n class org.apache.commons.compress.utils.FixedLengthBlockOutputStream$BufferAtATimeOutputChannel implements java.nio.channels.WritableByteChannel\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n-  this_class: #24                         // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel\n-  super_class: #25                        // java/lang/Object\n+  this_class: #2                          // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel\n+  super_class: #8                         // java/lang/Object\n   interfaces: 1, fields: 2, methods: 5, attributes: 2\n Constant pool:\n-    #1 = Methodref          #24.#63       // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel.\"<init>\":(Ljava/io/OutputStream;)V\n-    #2 = Methodref          #25.#64       // java/lang/Object.\"<init>\":()V\n-    #3 = Class              #65           // java/util/concurrent/atomic/AtomicBoolean\n-    #4 = Methodref          #3.#66        // java/util/concurrent/atomic/AtomicBoolean.\"<init>\":(Z)V\n-    #5 = Fieldref           #24.#67       // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel.closed:Ljava/util/concurrent/atomic/AtomicBoolean;\n-    #6 = Fieldref           #24.#68       // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel.out:Ljava/io/OutputStream;\n-    #7 = Methodref          #24.#69       // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel.isOpen:()Z\n-    #8 = Class              #70           // java/nio/channels/ClosedChannelException\n-    #9 = Methodref          #8.#64        // java/nio/channels/ClosedChannelException.\"<init>\":()V\n-   #10 = Methodref          #50.#71       // java/nio/ByteBuffer.hasArray:()Z\n-   #11 = Class              #72           // java/io/IOException\n-   #12 = String             #73           // Direct buffer somehow written to BufferAtATimeOutputChannel\n-   #13 = Methodref          #11.#74       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #14 = Methodref          #50.#75       // java/nio/ByteBuffer.position:()I\n-   #15 = Methodref          #50.#76       // java/nio/ByteBuffer.limit:()I\n-   #16 = Methodref          #50.#77       // java/nio/ByteBuffer.array:()[B\n-   #17 = Methodref          #50.#78       // java/nio/ByteBuffer.arrayOffset:()I\n-   #18 = Methodref          #79.#80       // java/io/OutputStream.write:([BII)V\n-   #19 = Methodref          #50.#81       // java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;\n-   #20 = Methodref          #24.#82       // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel.close:()V\n-   #21 = Methodref          #3.#83        // java/util/concurrent/atomic/AtomicBoolean.get:()Z\n-   #22 = Methodref          #3.#84        // java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z\n-   #23 = Methodref          #79.#82       // java/io/OutputStream.close:()V\n-   #24 = Class              #86           // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel\n-   #25 = Class              #87           // java/lang/Object\n-   #26 = Class              #88           // java/nio/channels/WritableByteChannel\n-   #27 = Utf8               out\n-   #28 = Utf8               Ljava/io/OutputStream;\n-   #29 = Utf8               closed\n-   #30 = Utf8               Ljava/util/concurrent/atomic/AtomicBoolean;\n-   #31 = Utf8               <init>\n-   #32 = Utf8               (Ljava/io/OutputStream;)V\n-   #33 = Utf8               Code\n-   #34 = Utf8               LineNumberTable\n-   #35 = Utf8               LocalVariableTable\n-   #36 = Utf8               this\n-   #37 = Utf8               BufferAtATimeOutputChannel\n-   #38 = Utf8               InnerClasses\n-   #39 = Utf8               Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel;\n-   #40 = Utf8               write\n-   #41 = Utf8               (Ljava/nio/ByteBuffer;)I\n-   #42 = Utf8               pos\n-   #43 = Utf8               I\n-   #44 = Utf8               len\n-   #45 = Utf8               e\n-   #46 = Utf8               Ljava/io/IOException;\n-   #47 = Utf8               buffer\n-   #48 = Utf8               Ljava/nio/ByteBuffer;\n-   #49 = Utf8               StackMapTable\n-   #50 = Class              #89           // java/nio/ByteBuffer\n-   #51 = Utf8               Exceptions\n-   #52 = Utf8               isOpen\n-   #53 = Utf8               ()Z\n-   #54 = Utf8               close\n-   #55 = Utf8               ()V\n-   #56 = Class              #90           // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$1\n-   #57 = Utf8               (Ljava/io/OutputStream;Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream$1;)V\n-   #58 = Utf8               x0\n-   #59 = Utf8               x1\n-   #60 = Utf8               Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream$1;\n-   #61 = Utf8               SourceFile\n-   #62 = Utf8               FixedLengthBlockOutputStream.java\n-   #63 = NameAndType        #31:#32       // \"<init>\":(Ljava/io/OutputStream;)V\n-   #64 = NameAndType        #31:#55       // \"<init>\":()V\n-   #65 = Utf8               java/util/concurrent/atomic/AtomicBoolean\n-   #66 = NameAndType        #31:#91       // \"<init>\":(Z)V\n-   #67 = NameAndType        #29:#30       // closed:Ljava/util/concurrent/atomic/AtomicBoolean;\n-   #68 = NameAndType        #27:#28       // out:Ljava/io/OutputStream;\n-   #69 = NameAndType        #52:#53       // isOpen:()Z\n-   #70 = Utf8               java/nio/channels/ClosedChannelException\n-   #71 = NameAndType        #92:#53       // hasArray:()Z\n-   #72 = Utf8               java/io/IOException\n-   #73 = Utf8               Direct buffer somehow written to BufferAtATimeOutputChannel\n-   #74 = NameAndType        #31:#93       // \"<init>\":(Ljava/lang/String;)V\n-   #75 = NameAndType        #94:#95       // position:()I\n-   #76 = NameAndType        #96:#95       // limit:()I\n-   #77 = NameAndType        #97:#98       // array:()[B\n-   #78 = NameAndType        #99:#95       // arrayOffset:()I\n-   #79 = Class              #100          // java/io/OutputStream\n-   #80 = NameAndType        #40:#101      // write:([BII)V\n-   #81 = NameAndType        #94:#102      // position:(I)Ljava/nio/Buffer;\n-   #82 = NameAndType        #54:#55       // close:()V\n-   #83 = NameAndType        #103:#53      // get:()Z\n-   #84 = NameAndType        #104:#105     // compareAndSet:(ZZ)Z\n-   #85 = Class              #106          // org/apache/commons/compress/utils/FixedLengthBlockOutputStream\n-   #86 = Utf8               org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel\n-   #87 = Utf8               java/lang/Object\n-   #88 = Utf8               java/nio/channels/WritableByteChannel\n-   #89 = Utf8               java/nio/ByteBuffer\n-   #90 = Utf8               org/apache/commons/compress/utils/FixedLengthBlockOutputStream$1\n-   #91 = Utf8               (Z)V\n-   #92 = Utf8               hasArray\n-   #93 = Utf8               (Ljava/lang/String;)V\n-   #94 = Utf8               position\n-   #95 = Utf8               ()I\n-   #96 = Utf8               limit\n-   #97 = Utf8               array\n-   #98 = Utf8               ()[B\n-   #99 = Utf8               arrayOffset\n-  #100 = Utf8               java/io/OutputStream\n-  #101 = Utf8               ([BII)V\n-  #102 = Utf8               (I)Ljava/nio/Buffer;\n-  #103 = Utf8               get\n-  #104 = Utf8               compareAndSet\n-  #105 = Utf8               (ZZ)Z\n-  #106 = Utf8               org/apache/commons/compress/utils/FixedLengthBlockOutputStream\n+    #1 = Methodref          #2.#3         // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel.\"<init>\":(Ljava/io/OutputStream;)V\n+    #2 = Class              #4            // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel\n+    #3 = NameAndType        #5:#6         // \"<init>\":(Ljava/io/OutputStream;)V\n+    #4 = Utf8               org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (Ljava/io/OutputStream;)V\n+    #7 = Methodref          #8.#9         // java/lang/Object.\"<init>\":()V\n+    #8 = Class              #10           // java/lang/Object\n+    #9 = NameAndType        #5:#11        // \"<init>\":()V\n+   #10 = Utf8               java/lang/Object\n+   #11 = Utf8               ()V\n+   #12 = Class              #13           // java/util/concurrent/atomic/AtomicBoolean\n+   #13 = Utf8               java/util/concurrent/atomic/AtomicBoolean\n+   #14 = Methodref          #12.#15       // java/util/concurrent/atomic/AtomicBoolean.\"<init>\":(Z)V\n+   #15 = NameAndType        #5:#16        // \"<init>\":(Z)V\n+   #16 = Utf8               (Z)V\n+   #17 = Fieldref           #2.#18        // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel.closed:Ljava/util/concurrent/atomic/AtomicBoolean;\n+   #18 = NameAndType        #19:#20       // closed:Ljava/util/concurrent/atomic/AtomicBoolean;\n+   #19 = Utf8               closed\n+   #20 = Utf8               Ljava/util/concurrent/atomic/AtomicBoolean;\n+   #21 = Fieldref           #2.#22        // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel.out:Ljava/io/OutputStream;\n+   #22 = NameAndType        #23:#24       // out:Ljava/io/OutputStream;\n+   #23 = Utf8               out\n+   #24 = Utf8               Ljava/io/OutputStream;\n+   #25 = Methodref          #2.#26        // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel.isOpen:()Z\n+   #26 = NameAndType        #27:#28       // isOpen:()Z\n+   #27 = Utf8               isOpen\n+   #28 = Utf8               ()Z\n+   #29 = Class              #30           // java/nio/channels/ClosedChannelException\n+   #30 = Utf8               java/nio/channels/ClosedChannelException\n+   #31 = Methodref          #29.#9        // java/nio/channels/ClosedChannelException.\"<init>\":()V\n+   #32 = Methodref          #33.#34       // java/nio/ByteBuffer.hasArray:()Z\n+   #33 = Class              #35           // java/nio/ByteBuffer\n+   #34 = NameAndType        #36:#28       // hasArray:()Z\n+   #35 = Utf8               java/nio/ByteBuffer\n+   #36 = Utf8               hasArray\n+   #37 = Class              #38           // java/io/IOException\n+   #38 = Utf8               java/io/IOException\n+   #39 = String             #40           // Direct buffer somehow written to BufferAtATimeOutputChannel\n+   #40 = Utf8               Direct buffer somehow written to BufferAtATimeOutputChannel\n+   #41 = Methodref          #37.#42       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #42 = NameAndType        #5:#43        // \"<init>\":(Ljava/lang/String;)V\n+   #43 = Utf8               (Ljava/lang/String;)V\n+   #44 = Methodref          #33.#45       // java/nio/ByteBuffer.position:()I\n+   #45 = NameAndType        #46:#47       // position:()I\n+   #46 = Utf8               position\n+   #47 = Utf8               ()I\n+   #48 = Methodref          #33.#49       // java/nio/ByteBuffer.limit:()I\n+   #49 = NameAndType        #50:#47       // limit:()I\n+   #50 = Utf8               limit\n+   #51 = Methodref          #33.#52       // java/nio/ByteBuffer.array:()[B\n+   #52 = NameAndType        #53:#54       // array:()[B\n+   #53 = Utf8               array\n+   #54 = Utf8               ()[B\n+   #55 = Methodref          #33.#56       // java/nio/ByteBuffer.arrayOffset:()I\n+   #56 = NameAndType        #57:#47       // arrayOffset:()I\n+   #57 = Utf8               arrayOffset\n+   #58 = Methodref          #59.#60       // java/io/OutputStream.write:([BII)V\n+   #59 = Class              #61           // java/io/OutputStream\n+   #60 = NameAndType        #62:#63       // write:([BII)V\n+   #61 = Utf8               java/io/OutputStream\n+   #62 = Utf8               write\n+   #63 = Utf8               ([BII)V\n+   #64 = Methodref          #33.#65       // java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;\n+   #65 = NameAndType        #46:#66       // position:(I)Ljava/nio/Buffer;\n+   #66 = Utf8               (I)Ljava/nio/Buffer;\n+   #67 = Methodref          #2.#68        // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel.close:()V\n+   #68 = NameAndType        #69:#11       // close:()V\n+   #69 = Utf8               close\n+   #70 = Methodref          #12.#71       // java/util/concurrent/atomic/AtomicBoolean.get:()Z\n+   #71 = NameAndType        #72:#28       // get:()Z\n+   #72 = Utf8               get\n+   #73 = Methodref          #12.#74       // java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z\n+   #74 = NameAndType        #75:#76       // compareAndSet:(ZZ)Z\n+   #75 = Utf8               compareAndSet\n+   #76 = Utf8               (ZZ)Z\n+   #77 = Methodref          #59.#68       // java/io/OutputStream.close:()V\n+   #78 = Class              #79           // java/nio/channels/WritableByteChannel\n+   #79 = Utf8               java/nio/channels/WritableByteChannel\n+   #80 = Utf8               Code\n+   #81 = Utf8               LineNumberTable\n+   #82 = Utf8               LocalVariableTable\n+   #83 = Utf8               this\n+   #84 = Utf8               Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel;\n+   #85 = Utf8               (Ljava/nio/ByteBuffer;)I\n+   #86 = Utf8               pos\n+   #87 = Utf8               I\n+   #88 = Utf8               len\n+   #89 = Utf8               e\n+   #90 = Utf8               Ljava/io/IOException;\n+   #91 = Utf8               buffer\n+   #92 = Utf8               Ljava/nio/ByteBuffer;\n+   #93 = Utf8               StackMapTable\n+   #94 = Utf8               Exceptions\n+   #95 = Utf8               (Ljava/io/OutputStream;Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream$1;)V\n+   #96 = Utf8               x0\n+   #97 = Utf8               x1\n+   #98 = Utf8               Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream$1;\n+   #99 = Utf8               SourceFile\n+  #100 = Utf8               FixedLengthBlockOutputStream.java\n+  #101 = Utf8               InnerClasses\n+  #102 = Class              #103          // org/apache/commons/compress/utils/FixedLengthBlockOutputStream\n+  #103 = Utf8               org/apache/commons/compress/utils/FixedLengthBlockOutputStream\n+  #104 = Utf8               BufferAtATimeOutputChannel\n+  #105 = Class              #106          // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$1\n+  #106 = Utf8               org/apache/commons/compress/utils/FixedLengthBlockOutputStream$1\n {\n   private final java.io.OutputStream out;\n     descriptor: Ljava/io/OutputStream;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final java.util.concurrent.atomic.AtomicBoolean closed;\n     descriptor: Ljava/util/concurrent/atomic/AtomicBoolean;\n@@ -125,24 +125,24 @@\n \n   private org.apache.commons.compress.utils.FixedLengthBlockOutputStream$BufferAtATimeOutputChannel(java.io.OutputStream);\n     descriptor: (Ljava/io/OutputStream;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #2                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #7                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: new           #3                  // class java/util/concurrent/atomic/AtomicBoolean\n+         5: new           #12                 // class java/util/concurrent/atomic/AtomicBoolean\n          8: dup\n          9: iconst_0\n-        10: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicBoolean.\"<init>\":(Z)V\n-        13: putfield      #5                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;\n+        10: invokespecial #14                 // Method java/util/concurrent/atomic/AtomicBoolean.\"<init>\":(Z)V\n+        13: putfield      #17                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;\n         16: aload_0\n         17: aload_1\n-        18: putfield      #6                  // Field out:Ljava/io/OutputStream;\n+        18: putfield      #21                 // Field out:Ljava/io/OutputStream;\n         21: return\n       LineNumberTable:\n         line 228: 0\n         line 226: 4\n         line 229: 16\n         line 230: 21\n       LocalVariableTable:\n@@ -152,56 +152,56 @@\n \n   public int write(java.nio.ByteBuffer) throws java.io.IOException;\n     descriptor: (Ljava/nio/ByteBuffer;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=2\n          0: aload_0\n-         1: invokevirtual #7                  // Method isOpen:()Z\n+         1: invokevirtual #25                 // Method isOpen:()Z\n          4: ifne          15\n-         7: new           #8                  // class java/nio/channels/ClosedChannelException\n+         7: new           #29                 // class java/nio/channels/ClosedChannelException\n         10: dup\n-        11: invokespecial #9                  // Method java/nio/channels/ClosedChannelException.\"<init>\":()V\n+        11: invokespecial #31                 // Method java/nio/channels/ClosedChannelException.\"<init>\":()V\n         14: athrow\n         15: aload_1\n-        16: invokevirtual #10                 // Method java/nio/ByteBuffer.hasArray:()Z\n+        16: invokevirtual #32                 // Method java/nio/ByteBuffer.hasArray:()Z\n         19: ifne          32\n-        22: new           #11                 // class java/io/IOException\n+        22: new           #37                 // class java/io/IOException\n         25: dup\n-        26: ldc           #12                 // String Direct buffer somehow written to BufferAtATimeOutputChannel\n-        28: invokespecial #13                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        26: ldc           #39                 // String Direct buffer somehow written to BufferAtATimeOutputChannel\n+        28: invokespecial #41                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         31: athrow\n         32: aload_1\n-        33: invokevirtual #14                 // Method java/nio/ByteBuffer.position:()I\n+        33: invokevirtual #44                 // Method java/nio/ByteBuffer.position:()I\n         36: istore_2\n         37: aload_1\n-        38: invokevirtual #15                 // Method java/nio/ByteBuffer.limit:()I\n+        38: invokevirtual #48                 // Method java/nio/ByteBuffer.limit:()I\n         41: iload_2\n         42: isub\n         43: istore_3\n         44: aload_0\n-        45: getfield      #6                  // Field out:Ljava/io/OutputStream;\n+        45: getfield      #21                 // Field out:Ljava/io/OutputStream;\n         48: aload_1\n-        49: invokevirtual #16                 // Method java/nio/ByteBuffer.array:()[B\n+        49: invokevirtual #51                 // Method java/nio/ByteBuffer.array:()[B\n         52: aload_1\n-        53: invokevirtual #17                 // Method java/nio/ByteBuffer.arrayOffset:()I\n+        53: invokevirtual #55                 // Method java/nio/ByteBuffer.arrayOffset:()I\n         56: iload_2\n         57: iadd\n         58: iload_3\n-        59: invokevirtual #18                 // Method java/io/OutputStream.write:([BII)V\n+        59: invokevirtual #58                 // Method java/io/OutputStream.write:([BII)V\n         62: aload_1\n         63: aload_1\n-        64: invokevirtual #15                 // Method java/nio/ByteBuffer.limit:()I\n-        67: invokevirtual #19                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;\n+        64: invokevirtual #48                 // Method java/nio/ByteBuffer.limit:()I\n+        67: invokevirtual #64                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;\n         70: pop\n         71: iload_3\n         72: ireturn\n         73: astore_2\n         74: aload_0\n-        75: invokevirtual #20                 // Method close:()V\n+        75: invokevirtual #67                 // Method close:()V\n         78: goto          82\n         81: astore_3\n         82: aload_2\n         83: athrow\n       Exception table:\n          from    to  target type\n             32    72    73   Class java/io/IOException\n@@ -243,16 +243,16 @@\n \n   public boolean isOpen();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;\n-         4: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z\n+         1: getfield      #17                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;\n+         4: invokevirtual #70                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z\n          7: ifne          14\n         10: iconst_1\n         11: goto          15\n         14: iconst_0\n         15: ireturn\n       LineNumberTable:\n         line 258: 0\n@@ -266,22 +266,22 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;\n+         1: getfield      #17                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;\n          4: iconst_0\n          5: iconst_1\n-         6: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z\n+         6: invokevirtual #73                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z\n          9: ifeq          19\n         12: aload_0\n-        13: getfield      #6                  // Field out:Ljava/io/OutputStream;\n-        16: invokevirtual #23                 // Method java/io/OutputStream.close:()V\n+        13: getfield      #21                 // Field out:Ljava/io/OutputStream;\n+        16: invokevirtual #77                 // Method java/io/OutputStream.close:()V\n         19: return\n       LineNumberTable:\n         line 263: 0\n         line 264: 12\n         line 266: 19\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -306,9 +306,9 @@\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel;\n             0       6     1    x0   Ljava/io/OutputStream;\n             0       6     2    x1   Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream$1;\n }\n SourceFile: \"FixedLengthBlockOutputStream.java\"\n InnerClasses:\n-  private static #37= #24 of #85;         // BufferAtATimeOutputChannel=class org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel of class org/apache/commons/compress/utils/FixedLengthBlockOutputStream\n-  static #56;                             // class org/apache/commons/compress/utils/FixedLengthBlockOutputStream$1\n+  private static #104= #2 of #102;        // BufferAtATimeOutputChannel=class org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel of class org/apache/commons/compress/utils/FixedLengthBlockOutputStream\n+  static #105;                            // class org/apache/commons/compress/utils/FixedLengthBlockOutputStream$1\n"}]}
