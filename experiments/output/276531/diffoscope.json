{"diffoscope-json-version": 1, "source1": "first/SuppressFilterElement.class", "source2": "second/SuppressFilterElement.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -16,123 +16,123 @@\n     private final String messagePattern;\n     private final String moduleId;\n     private final CsvFilterElement lineFilter;\n     private final String linesCsv;\n     private final CsvFilterElement columnFilter;\n     private final String columnsCsv;\n     \n-    public SuppressFilterElement(final String files, final String checks, final String message, final String modId, final String lines, final String columns) {\n-        this.filePattern = files;\n-        if (files == null) {\n+    public SuppressFilterElement(final String s, final String s2, final String s3, final String moduleId, final String linesCsv, final String columnsCsv) {\n+        this.filePattern = s;\n+        if (s == null) {\n             this.fileRegexp = null;\n         }\n         else {\n-            this.fileRegexp = Pattern.compile(files);\n+            this.fileRegexp = Pattern.compile(s);\n         }\n-        this.checkPattern = checks;\n-        if (checks == null) {\n+        this.checkPattern = s2;\n+        if (s2 == null) {\n             this.checkRegexp = null;\n         }\n         else {\n-            this.checkRegexp = Pattern.compile(checks);\n+            this.checkRegexp = Pattern.compile(s2);\n         }\n-        this.messagePattern = message;\n-        if (message == null) {\n+        this.messagePattern = s3;\n+        if (s3 == null) {\n             this.messageRegexp = null;\n         }\n         else {\n-            this.messageRegexp = Pattern.compile(message);\n+            this.messageRegexp = Pattern.compile(s3);\n         }\n-        this.moduleId = modId;\n-        this.linesCsv = lines;\n-        if (lines == null) {\n+        this.moduleId = moduleId;\n+        this.linesCsv = linesCsv;\n+        if (linesCsv == null) {\n             this.lineFilter = null;\n         }\n         else {\n-            this.lineFilter = new CsvFilterElement(lines);\n+            this.lineFilter = new CsvFilterElement(linesCsv);\n         }\n-        this.columnsCsv = columns;\n-        if (columns == null) {\n+        this.columnsCsv = columnsCsv;\n+        if (columnsCsv == null) {\n             this.columnFilter = null;\n         }\n         else {\n-            this.columnFilter = new CsvFilterElement(columns);\n+            this.columnFilter = new CsvFilterElement(columnsCsv);\n         }\n     }\n     \n-    public SuppressFilterElement(final Pattern files, final Pattern checks, final Pattern message, final String moduleId, final String lines, final String columns) {\n-        if (files == null) {\n+    public SuppressFilterElement(final Pattern fileRegexp, final Pattern checkRegexp, final Pattern messageRegexp, final String moduleId, final String linesCsv, final String columnsCsv) {\n+        if (fileRegexp == null) {\n             this.filePattern = null;\n             this.fileRegexp = null;\n         }\n         else {\n-            this.filePattern = files.pattern();\n-            this.fileRegexp = files;\n+            this.filePattern = fileRegexp.pattern();\n+            this.fileRegexp = fileRegexp;\n         }\n-        if (checks == null) {\n+        if (checkRegexp == null) {\n             this.checkPattern = null;\n             this.checkRegexp = null;\n         }\n         else {\n-            this.checkPattern = checks.pattern();\n-            this.checkRegexp = checks;\n+            this.checkPattern = checkRegexp.pattern();\n+            this.checkRegexp = checkRegexp;\n         }\n-        if (message == null) {\n+        if (messageRegexp == null) {\n             this.messagePattern = null;\n             this.messageRegexp = null;\n         }\n         else {\n-            this.messagePattern = message.pattern();\n-            this.messageRegexp = message;\n+            this.messagePattern = messageRegexp.pattern();\n+            this.messageRegexp = messageRegexp;\n         }\n         this.moduleId = moduleId;\n-        if (lines == null) {\n+        if (linesCsv == null) {\n             this.linesCsv = null;\n             this.lineFilter = null;\n         }\n         else {\n-            this.linesCsv = lines;\n-            this.lineFilter = new CsvFilterElement(lines);\n+            this.linesCsv = linesCsv;\n+            this.lineFilter = new CsvFilterElement(linesCsv);\n         }\n-        if (columns == null) {\n+        if (columnsCsv == null) {\n             this.columnsCsv = null;\n             this.columnFilter = null;\n         }\n         else {\n-            this.columnsCsv = columns;\n-            this.columnFilter = new CsvFilterElement(columns);\n+            this.columnsCsv = columnsCsv;\n+            this.columnFilter = new CsvFilterElement(columnsCsv);\n         }\n     }\n     \n-    public boolean accept(final AuditEvent event) {\n-        return !this.isFileNameAndModuleNameMatching(event) || !this.isMessageNameMatching(event) || !this.isLineAndColumnMatching(event);\n+    public boolean accept(final AuditEvent auditEvent) {\n+        return !this.isFileNameAndModuleNameMatching(auditEvent) || !this.isMessageNameMatching(auditEvent) || !this.isLineAndColumnMatching(auditEvent);\n     }\n     \n-    private boolean isFileNameAndModuleNameMatching(final AuditEvent event) {\n-        return event.getFileName() != null && (this.fileRegexp == null || this.fileRegexp.matcher(event.getFileName()).find()) && event.getViolation() != null && (this.moduleId == null || this.moduleId.equals(event.getModuleId())) && (this.checkRegexp == null || this.checkRegexp.matcher(event.getSourceName()).find());\n+    private boolean isFileNameAndModuleNameMatching(final AuditEvent auditEvent) {\n+        return auditEvent.getFileName() != null && (this.fileRegexp == null || this.fileRegexp.matcher(auditEvent.getFileName()).find()) && auditEvent.getViolation() != null && (this.moduleId == null || this.moduleId.equals(auditEvent.getModuleId())) && (this.checkRegexp == null || this.checkRegexp.matcher(auditEvent.getSourceName()).find());\n     }\n     \n-    private boolean isMessageNameMatching(final AuditEvent event) {\n-        return this.messageRegexp == null || this.messageRegexp.matcher(event.getMessage()).find();\n+    private boolean isMessageNameMatching(final AuditEvent auditEvent) {\n+        return this.messageRegexp == null || this.messageRegexp.matcher(auditEvent.getMessage()).find();\n     }\n     \n-    private boolean isLineAndColumnMatching(final AuditEvent event) {\n-        return (this.lineFilter == null && this.columnFilter == null) || (this.lineFilter != null && this.lineFilter.accept(event.getLine())) || (this.columnFilter != null && this.columnFilter.accept(event.getColumn()));\n+    private boolean isLineAndColumnMatching(final AuditEvent auditEvent) {\n+        return (this.lineFilter == null && this.columnFilter == null) || (this.lineFilter != null && this.lineFilter.accept(auditEvent.getLine())) || (this.columnFilter != null && this.columnFilter.accept(auditEvent.getColumn()));\n     }\n     \n     @Override\n     public int hashCode() {\n         return Objects.hash(this.filePattern, this.checkPattern, this.messagePattern, this.moduleId, this.linesCsv, this.columnsCsv);\n     }\n     \n     @Override\n-    public boolean equals(final Object other) {\n-        if (this == other) {\n+    public boolean equals(final Object o) {\n+        if (this == o) {\n             return true;\n         }\n-        if (other == null || this.getClass() != other.getClass()) {\n+        if (o == null || this.getClass() != o.getClass()) {\n             return false;\n         }\n-        final SuppressFilterElement suppressElement = (SuppressFilterElement)other;\n-        return Objects.equals(this.filePattern, suppressElement.filePattern) && Objects.equals(this.checkPattern, suppressElement.checkPattern) && Objects.equals(this.messagePattern, suppressElement.messagePattern) && Objects.equals(this.moduleId, suppressElement.moduleId) && Objects.equals(this.linesCsv, suppressElement.linesCsv) && Objects.equals(this.columnsCsv, suppressElement.columnsCsv);\n+        final SuppressFilterElement suppressFilterElement = (SuppressFilterElement)o;\n+        return Objects.equals(this.filePattern, suppressFilterElement.filePattern) && Objects.equals(this.checkPattern, suppressFilterElement.checkPattern) && Objects.equals(this.messagePattern, suppressFilterElement.messagePattern) && Objects.equals(this.moduleId, suppressFilterElement.moduleId) && Objects.equals(this.linesCsv, suppressFilterElement.linesCsv) && Objects.equals(this.columnsCsv, suppressFilterElement.columnsCsv);\n     }\n }\n"}]}
