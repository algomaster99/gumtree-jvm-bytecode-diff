{"diffoscope-json-version": 1, "source1": "first/ThresholdingOutputStream.class", "source2": "second/ThresholdingOutputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -11,17 +11,17 @@\n     private boolean thresholdExceeded;\n     \n     public ThresholdingOutputStream(final int threshold) {\n         this.threshold = threshold;\n     }\n     \n     @Override\n-    public void write(final int b) throws IOException {\n+    public void write(final int n) throws IOException {\n         this.checkThreshold(1);\n-        this.getStream().write(b);\n+        this.getStream().write(n);\n         ++this.written;\n     }\n     \n     @Override\n     public void write(final byte[] b) throws IOException {\n         this.checkThreshold(b.length);\n         this.getStream().write(b);\n@@ -57,27 +57,27 @@\n         return this.written;\n     }\n     \n     public boolean isThresholdExceeded() {\n         return this.written > this.threshold;\n     }\n     \n-    protected void checkThreshold(final int count) throws IOException {\n-        if (!this.thresholdExceeded && this.written + count > this.threshold) {\n+    protected void checkThreshold(final int n) throws IOException {\n+        if (!this.thresholdExceeded && this.written + n > this.threshold) {\n             this.thresholdExceeded = true;\n             this.thresholdReached();\n         }\n     }\n     \n     protected void resetByteCount() {\n         this.thresholdExceeded = false;\n         this.written = 0L;\n     }\n     \n-    protected void setByteCount(final long count) {\n-        this.written = count;\n+    protected void setByteCount(final long written) {\n+        this.written = written;\n     }\n     \n     protected abstract OutputStream getStream() throws IOException;\n     \n     protected abstract void thresholdReached() throws IOException;\n }\n"}]}
