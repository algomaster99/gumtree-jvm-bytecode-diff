{"diffoscope-json-version": 1, "source1": "first/LZMACompressorInputStream.class", "source2": "second/LZMACompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,84 +1,81 @@\n-  SHA-256 checksum 752a26121f9719fc04fd56dc32635314fa76e246f2b1fd93fce6cb180fd0f3f0\n+  SHA-256 checksum 5b543dc39a9d4802c4593f3ef2785abd888dc51929473bce3883dcb41b68c57b\n   Compiled from \"LZMACompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.lzma.LZMACompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #16                         // org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream\n   super_class: #17                        // org/apache/commons/compress/compressors/CompressorInputStream\n   interfaces: 0, fields: 1, methods: 8, attributes: 1\n Constant pool:\n-   #1 = Methodref          #17.#43        // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n-   #2 = Class              #44            // org/tukaani/xz/LZMAInputStream\n-   #3 = Methodref          #2.#45         // org/tukaani/xz/LZMAInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-   #4 = Fieldref           #16.#46        // org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.in:Ljava/io/InputStream;\n-   #5 = Class              #47            // org/tukaani/xz/MemoryLimitException\n-   #6 = Class              #48            // org/apache/commons/compress/MemoryLimitException\n-   #7 = Methodref          #5.#49         // org/tukaani/xz/MemoryLimitException.getMemoryNeeded:()I\n-   #8 = Methodref          #5.#50         // org/tukaani/xz/MemoryLimitException.getMemoryLimit:()I\n-   #9 = Methodref          #6.#51         // org/apache/commons/compress/MemoryLimitException.\"<init>\":(JILjava/lang/Exception;)V\n-  #10 = Methodref          #52.#53        // java/io/InputStream.read:()I\n-  #11 = Methodref          #16.#54        // org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.count:(I)V\n-  #12 = Methodref          #52.#55        // java/io/InputStream.read:([BII)I\n-  #13 = Methodref          #52.#56        // java/io/InputStream.skip:(J)J\n-  #14 = Methodref          #52.#57        // java/io/InputStream.available:()I\n-  #15 = Methodref          #52.#58        // java/io/InputStream.close:()V\n-  #16 = Class              #59            // org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream\n-  #17 = Class              #60            // org/apache/commons/compress/compressors/CompressorInputStream\n+   #1 = Methodref          #17.#41        // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+   #2 = Class              #42            // org/tukaani/xz/LZMAInputStream\n+   #3 = Methodref          #2.#43         // org/tukaani/xz/LZMAInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+   #4 = Fieldref           #16.#44        // org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.in:Ljava/io/InputStream;\n+   #5 = Class              #45            // org/tukaani/xz/MemoryLimitException\n+   #6 = Class              #46            // org/apache/commons/compress/MemoryLimitException\n+   #7 = Methodref          #5.#47         // org/tukaani/xz/MemoryLimitException.getMemoryNeeded:()I\n+   #8 = Methodref          #5.#48         // org/tukaani/xz/MemoryLimitException.getMemoryLimit:()I\n+   #9 = Methodref          #6.#49         // org/apache/commons/compress/MemoryLimitException.\"<init>\":(JILjava/lang/Exception;)V\n+  #10 = Methodref          #28.#50        // java/io/InputStream.read:()I\n+  #11 = Methodref          #16.#51        // org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.count:(I)V\n+  #12 = Methodref          #28.#52        // java/io/InputStream.read:([BII)I\n+  #13 = Methodref          #28.#53        // java/io/InputStream.skip:(J)J\n+  #14 = Methodref          #28.#54        // java/io/InputStream.available:()I\n+  #15 = Methodref          #28.#55        // java/io/InputStream.close:()V\n+  #16 = Class              #56            // org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream\n+  #17 = Class              #57            // org/apache/commons/compress/compressors/CompressorInputStream\n   #18 = Utf8               in\n   #19 = Utf8               Ljava/io/InputStream;\n   #20 = Utf8               <init>\n   #21 = Utf8               (Ljava/io/InputStream;)V\n   #22 = Utf8               Code\n   #23 = Utf8               LineNumberTable\n   #24 = Utf8               Exceptions\n-  #25 = Class              #61            // java/io/IOException\n+  #25 = Class              #58            // java/io/IOException\n   #26 = Utf8               (Ljava/io/InputStream;I)V\n   #27 = Utf8               StackMapTable\n-  #28 = Class              #59            // org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream\n-  #29 = Class              #62            // java/io/InputStream\n-  #30 = Class              #47            // org/tukaani/xz/MemoryLimitException\n-  #31 = Utf8               read\n-  #32 = Utf8               ()I\n-  #33 = Utf8               ([BII)I\n-  #34 = Utf8               skip\n-  #35 = Utf8               (J)J\n-  #36 = Utf8               available\n-  #37 = Utf8               close\n-  #38 = Utf8               ()V\n-  #39 = Utf8               matches\n-  #40 = Utf8               ([BI)Z\n-  #41 = Utf8               SourceFile\n-  #42 = Utf8               LZMACompressorInputStream.java\n-  #43 = NameAndType        #20:#38        // \"<init>\":()V\n-  #44 = Utf8               org/tukaani/xz/LZMAInputStream\n-  #45 = NameAndType        #20:#26        // \"<init>\":(Ljava/io/InputStream;I)V\n-  #46 = NameAndType        #18:#19        // in:Ljava/io/InputStream;\n-  #47 = Utf8               org/tukaani/xz/MemoryLimitException\n-  #48 = Utf8               org/apache/commons/compress/MemoryLimitException\n-  #49 = NameAndType        #63:#32        // getMemoryNeeded:()I\n-  #50 = NameAndType        #64:#32        // getMemoryLimit:()I\n-  #51 = NameAndType        #20:#65        // \"<init>\":(JILjava/lang/Exception;)V\n-  #52 = Class              #62            // java/io/InputStream\n-  #53 = NameAndType        #31:#32        // read:()I\n-  #54 = NameAndType        #66:#67        // count:(I)V\n-  #55 = NameAndType        #31:#33        // read:([BII)I\n-  #56 = NameAndType        #34:#35        // skip:(J)J\n-  #57 = NameAndType        #36:#32        // available:()I\n-  #58 = NameAndType        #37:#38        // close:()V\n-  #59 = Utf8               org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream\n-  #60 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n-  #61 = Utf8               java/io/IOException\n-  #62 = Utf8               java/io/InputStream\n-  #63 = Utf8               getMemoryNeeded\n-  #64 = Utf8               getMemoryLimit\n-  #65 = Utf8               (JILjava/lang/Exception;)V\n-  #66 = Utf8               count\n-  #67 = Utf8               (I)V\n+  #28 = Class              #59            // java/io/InputStream\n+  #29 = Utf8               read\n+  #30 = Utf8               ()I\n+  #31 = Utf8               ([BII)I\n+  #32 = Utf8               skip\n+  #33 = Utf8               (J)J\n+  #34 = Utf8               available\n+  #35 = Utf8               close\n+  #36 = Utf8               ()V\n+  #37 = Utf8               matches\n+  #38 = Utf8               ([BI)Z\n+  #39 = Utf8               SourceFile\n+  #40 = Utf8               LZMACompressorInputStream.java\n+  #41 = NameAndType        #20:#36        // \"<init>\":()V\n+  #42 = Utf8               org/tukaani/xz/LZMAInputStream\n+  #43 = NameAndType        #20:#26        // \"<init>\":(Ljava/io/InputStream;I)V\n+  #44 = NameAndType        #18:#19        // in:Ljava/io/InputStream;\n+  #45 = Utf8               org/tukaani/xz/MemoryLimitException\n+  #46 = Utf8               org/apache/commons/compress/MemoryLimitException\n+  #47 = NameAndType        #60:#30        // getMemoryNeeded:()I\n+  #48 = NameAndType        #61:#30        // getMemoryLimit:()I\n+  #49 = NameAndType        #20:#62        // \"<init>\":(JILjava/lang/Exception;)V\n+  #50 = NameAndType        #29:#30        // read:()I\n+  #51 = NameAndType        #63:#64        // count:(I)V\n+  #52 = NameAndType        #29:#31        // read:([BII)I\n+  #53 = NameAndType        #32:#33        // skip:(J)J\n+  #54 = NameAndType        #34:#30        // available:()I\n+  #55 = NameAndType        #35:#36        // close:()V\n+  #56 = Utf8               org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream\n+  #57 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n+  #58 = Utf8               java/io/IOException\n+  #59 = Utf8               java/io/InputStream\n+  #60 = Utf8               getMemoryNeeded\n+  #61 = Utf8               getMemoryLimit\n+  #62 = Utf8               (JILjava/lang/Exception;)V\n+  #63 = Utf8               count\n+  #64 = Utf8               (I)V\n {\n   private final java.io.InputStream in;\n     descriptor: Ljava/io/InputStream;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.compress.compressors.lzma.LZMACompressorInputStream(java.io.InputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;)V\n"}]}
