{"diffoscope-json-version": 1, "source1": "first/TokenStreamFactory.class", "source2": "second/TokenStreamFactory.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,46 +1,46 @@\n-  SHA-256 checksum fe567d4ef88607a31210021a8f9294bc2c0770ebfd9504819302842d473f1e5b\n+  SHA-256 checksum 4c4d36e94ab1df7f97feec5b491a6b27482cbe5fc2758db66118186afbc7c00f\n   Compiled from \"TokenStreamFactory.java\"\n public abstract class com.fasterxml.jackson.core.TokenStreamFactory implements com.fasterxml.jackson.core.Versioned,java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #27                         // com/fasterxml/jackson/core/TokenStreamFactory\n   super_class: #20                        // java/lang/Object\n   interfaces: 2, fields: 1, methods: 39, attributes: 2\n Constant pool:\n     #1 = Methodref          #20.#128      // java/lang/Object.\"<init>\":()V\n     #2 = Class              #129          // com/fasterxml/jackson/core/io/DataOutputAsStream\n     #3 = Methodref          #2.#130       // com/fasterxml/jackson/core/io/DataOutputAsStream.\"<init>\":(Ljava/io/DataOutput;)V\n     #4 = String             #131          // file\n     #5 = Methodref          #132.#133     // java/net/URL.getProtocol:()Ljava/lang/String;\n-    #6 = Methodref          #134.#135     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-    #7 = Methodref          #132.#136     // java/net/URL.getHost:()Ljava/lang/String;\n-    #8 = Methodref          #134.#137     // java/lang/String.length:()I\n-    #9 = Methodref          #132.#138     // java/net/URL.getPath:()Ljava/lang/String;\n-   #10 = Methodref          #134.#139     // java/lang/String.indexOf:(I)I\n-   #11 = Class              #140          // java/io/FileInputStream\n-   #12 = Methodref          #11.#141      // java/io/FileInputStream.\"<init>\":(Ljava/lang/String;)V\n-   #13 = Methodref          #132.#142     // java/net/URL.openStream:()Ljava/io/InputStream;\n-   #14 = Methodref          #11.#143      // java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n-   #15 = Class              #144          // java/io/FileOutputStream\n-   #16 = Methodref          #15.#143      // java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n-   #17 = String             #145          // Invalid `byte[]` argument: `null`\n-   #18 = Methodref          #27.#146      // com/fasterxml/jackson/core/TokenStreamFactory._reportRangeError:(Ljava/lang/String;)Ljava/lang/Object;\n-   #19 = String             #147          // Invalid \\'offset\\' (%d) and/or \\'len\\' (%d) arguments for `byte[]` of length %d\n-   #20 = Class              #148          // java/lang/Object\n-   #21 = Methodref          #149.#150     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #22 = Methodref          #134.#151     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #23 = String             #152          // Invalid `char[]` argument: `null`\n-   #24 = String             #153          // Invalid \\'offset\\' (%d) and/or \\'len\\' (%d) arguments for `char[]` of length %d\n-   #25 = Class              #154          // java/lang/IllegalArgumentException\n-   #26 = Methodref          #25.#141      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #27 = Class              #155          // com/fasterxml/jackson/core/TokenStreamFactory\n-   #28 = Class              #156          // com/fasterxml/jackson/core/Versioned\n-   #29 = Class              #157          // java/io/Serializable\n+    #6 = Methodref          #102.#134     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+    #7 = Methodref          #132.#135     // java/net/URL.getHost:()Ljava/lang/String;\n+    #8 = Methodref          #102.#136     // java/lang/String.length:()I\n+    #9 = Methodref          #132.#137     // java/net/URL.getPath:()Ljava/lang/String;\n+   #10 = Methodref          #102.#138     // java/lang/String.indexOf:(I)I\n+   #11 = Class              #139          // java/io/FileInputStream\n+   #12 = Methodref          #11.#140      // java/io/FileInputStream.\"<init>\":(Ljava/lang/String;)V\n+   #13 = Methodref          #132.#141     // java/net/URL.openStream:()Ljava/io/InputStream;\n+   #14 = Methodref          #11.#142      // java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n+   #15 = Class              #143          // java/io/FileOutputStream\n+   #16 = Methodref          #15.#142      // java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n+   #17 = String             #144          // Invalid `byte[]` argument: `null`\n+   #18 = Methodref          #27.#145      // com/fasterxml/jackson/core/TokenStreamFactory._reportRangeError:(Ljava/lang/String;)Ljava/lang/Object;\n+   #19 = String             #146          // Invalid \\'offset\\' (%d) and/or \\'len\\' (%d) arguments for `byte[]` of length %d\n+   #20 = Class              #147          // java/lang/Object\n+   #21 = Methodref          #148.#149     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+   #22 = Methodref          #102.#150     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #23 = String             #151          // Invalid `char[]` argument: `null`\n+   #24 = String             #152          // Invalid \\'offset\\' (%d) and/or \\'len\\' (%d) arguments for `char[]` of length %d\n+   #25 = Class              #153          // java/lang/IllegalArgumentException\n+   #26 = Methodref          #25.#140      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #27 = Class              #154          // com/fasterxml/jackson/core/TokenStreamFactory\n+   #28 = Class              #155          // com/fasterxml/jackson/core/Versioned\n+   #29 = Class              #156          // java/io/Serializable\n    #30 = Utf8               serialVersionUID\n    #31 = Utf8               J\n    #32 = Utf8               ConstantValue\n    #33 = Long               2l\n    #35 = Utf8               <init>\n    #36 = Utf8               ()V\n    #37 = Utf8               Code\n@@ -58,29 +58,29 @@\n    #49 = Utf8               ()Ljava/lang/Class<+Lcom/fasterxml/jackson/core/FormatFeature;>;\n    #50 = Utf8               getFormatWriteFeatureType\n    #51 = Utf8               canUseSchema\n    #52 = Utf8               (Lcom/fasterxml/jackson/core/FormatSchema;)Z\n    #53 = Utf8               getFormatName\n    #54 = Utf8               ()Ljava/lang/String;\n    #55 = Utf8               isEnabled\n-   #56 = Class              #159          // com/fasterxml/jackson/core/JsonParser$Feature\n+   #56 = Class              #158          // com/fasterxml/jackson/core/JsonParser$Feature\n    #57 = Utf8               Feature\n    #58 = Utf8               InnerClasses\n    #59 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser$Feature;)Z\n-   #60 = Class              #161          // com/fasterxml/jackson/core/JsonGenerator$Feature\n+   #60 = Class              #160          // com/fasterxml/jackson/core/JsonGenerator$Feature\n    #61 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n    #62 = Utf8               getParserFeatures\n    #63 = Utf8               ()I\n    #64 = Utf8               getGeneratorFeatures\n    #65 = Utf8               getFormatParserFeatures\n    #66 = Utf8               getFormatGeneratorFeatures\n    #67 = Utf8               createParser\n    #68 = Utf8               ([B)Lcom/fasterxml/jackson/core/JsonParser;\n    #69 = Utf8               Exceptions\n-   #70 = Class              #162          // java/io/IOException\n+   #70 = Class              #161          // java/io/IOException\n    #71 = Utf8               ([BII)Lcom/fasterxml/jackson/core/JsonParser;\n    #72 = Utf8               ([C)Lcom/fasterxml/jackson/core/JsonParser;\n    #73 = Utf8               ([CII)Lcom/fasterxml/jackson/core/JsonParser;\n    #74 = Utf8               (Ljava/io/DataInput;)Lcom/fasterxml/jackson/core/JsonParser;\n    #75 = Utf8               (Ljava/io/File;)Lcom/fasterxml/jackson/core/JsonParser;\n    #76 = Utf8               (Ljava/io/InputStream;)Lcom/fasterxml/jackson/core/JsonParser;\n    #77 = Utf8               (Ljava/io/Reader;)Lcom/fasterxml/jackson/core/JsonParser;\n@@ -104,15 +104,15 @@\n    #95 = Utf8               (Ljava/net/URL;)Ljava/io/InputStream;\n    #96 = Utf8               path\n    #97 = Utf8               Ljava/lang/String;\n    #98 = Utf8               host\n    #99 = Utf8               url\n   #100 = Utf8               Ljava/net/URL;\n   #101 = Utf8               StackMapTable\n-  #102 = Class              #163          // java/lang/String\n+  #102 = Class              #162          // java/lang/String\n   #103 = Utf8               _fileInputStream\n   #104 = Utf8               (Ljava/io/File;)Ljava/io/InputStream;\n   #105 = Utf8               f\n   #106 = Utf8               Ljava/io/File;\n   #107 = Utf8               _fileOutputStream\n   #108 = Utf8               (Ljava/io/File;)Ljava/io/OutputStream;\n   #109 = Utf8               _checkRangeBoundsForByteArray\n@@ -132,69 +132,68 @@\n   #123 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;\n   #124 = Utf8               msg\n   #125 = Utf8               <T:Ljava/lang/Object;>(Ljava/lang/String;)TT;\n   #126 = Utf8               SourceFile\n   #127 = Utf8               TokenStreamFactory.java\n   #128 = NameAndType        #35:#36       // \"<init>\":()V\n   #129 = Utf8               com/fasterxml/jackson/core/io/DataOutputAsStream\n-  #130 = NameAndType        #35:#164      // \"<init>\":(Ljava/io/DataOutput;)V\n+  #130 = NameAndType        #35:#163      // \"<init>\":(Ljava/io/DataOutput;)V\n   #131 = Utf8               file\n-  #132 = Class              #165          // java/net/URL\n-  #133 = NameAndType        #166:#54      // getProtocol:()Ljava/lang/String;\n-  #134 = Class              #163          // java/lang/String\n-  #135 = NameAndType        #167:#168     // equals:(Ljava/lang/Object;)Z\n-  #136 = NameAndType        #169:#54      // getHost:()Ljava/lang/String;\n-  #137 = NameAndType        #170:#63      // length:()I\n-  #138 = NameAndType        #171:#54      // getPath:()Ljava/lang/String;\n-  #139 = NameAndType        #172:#173     // indexOf:(I)I\n-  #140 = Utf8               java/io/FileInputStream\n-  #141 = NameAndType        #35:#174      // \"<init>\":(Ljava/lang/String;)V\n-  #142 = NameAndType        #175:#176     // openStream:()Ljava/io/InputStream;\n-  #143 = NameAndType        #35:#177      // \"<init>\":(Ljava/io/File;)V\n-  #144 = Utf8               java/io/FileOutputStream\n-  #145 = Utf8               Invalid `byte[]` argument: `null`\n-  #146 = NameAndType        #122:#123     // _reportRangeError:(Ljava/lang/String;)Ljava/lang/Object;\n-  #147 = Utf8               Invalid \\'offset\\' (%d) and/or \\'len\\' (%d) arguments for `byte[]` of length %d\n-  #148 = Utf8               java/lang/Object\n-  #149 = Class              #178          // java/lang/Integer\n-  #150 = NameAndType        #179:#180     // valueOf:(I)Ljava/lang/Integer;\n-  #151 = NameAndType        #181:#182     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #152 = Utf8               Invalid `char[]` argument: `null`\n-  #153 = Utf8               Invalid \\'offset\\' (%d) and/or \\'len\\' (%d) arguments for `char[]` of length %d\n-  #154 = Utf8               java/lang/IllegalArgumentException\n-  #155 = Utf8               com/fasterxml/jackson/core/TokenStreamFactory\n-  #156 = Utf8               com/fasterxml/jackson/core/Versioned\n-  #157 = Utf8               java/io/Serializable\n-  #158 = Class              #183          // com/fasterxml/jackson/core/JsonParser\n-  #159 = Utf8               com/fasterxml/jackson/core/JsonParser$Feature\n-  #160 = Class              #184          // com/fasterxml/jackson/core/JsonGenerator\n-  #161 = Utf8               com/fasterxml/jackson/core/JsonGenerator$Feature\n-  #162 = Utf8               java/io/IOException\n-  #163 = Utf8               java/lang/String\n-  #164 = Utf8               (Ljava/io/DataOutput;)V\n-  #165 = Utf8               java/net/URL\n-  #166 = Utf8               getProtocol\n-  #167 = Utf8               equals\n-  #168 = Utf8               (Ljava/lang/Object;)Z\n-  #169 = Utf8               getHost\n-  #170 = Utf8               length\n-  #171 = Utf8               getPath\n-  #172 = Utf8               indexOf\n-  #173 = Utf8               (I)I\n-  #174 = Utf8               (Ljava/lang/String;)V\n-  #175 = Utf8               openStream\n-  #176 = Utf8               ()Ljava/io/InputStream;\n-  #177 = Utf8               (Ljava/io/File;)V\n-  #178 = Utf8               java/lang/Integer\n-  #179 = Utf8               valueOf\n-  #180 = Utf8               (I)Ljava/lang/Integer;\n-  #181 = Utf8               format\n-  #182 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #183 = Utf8               com/fasterxml/jackson/core/JsonParser\n-  #184 = Utf8               com/fasterxml/jackson/core/JsonGenerator\n+  #132 = Class              #164          // java/net/URL\n+  #133 = NameAndType        #165:#54      // getProtocol:()Ljava/lang/String;\n+  #134 = NameAndType        #166:#167     // equals:(Ljava/lang/Object;)Z\n+  #135 = NameAndType        #168:#54      // getHost:()Ljava/lang/String;\n+  #136 = NameAndType        #169:#63      // length:()I\n+  #137 = NameAndType        #170:#54      // getPath:()Ljava/lang/String;\n+  #138 = NameAndType        #171:#172     // indexOf:(I)I\n+  #139 = Utf8               java/io/FileInputStream\n+  #140 = NameAndType        #35:#173      // \"<init>\":(Ljava/lang/String;)V\n+  #141 = NameAndType        #174:#175     // openStream:()Ljava/io/InputStream;\n+  #142 = NameAndType        #35:#176      // \"<init>\":(Ljava/io/File;)V\n+  #143 = Utf8               java/io/FileOutputStream\n+  #144 = Utf8               Invalid `byte[]` argument: `null`\n+  #145 = NameAndType        #122:#123     // _reportRangeError:(Ljava/lang/String;)Ljava/lang/Object;\n+  #146 = Utf8               Invalid \\'offset\\' (%d) and/or \\'len\\' (%d) arguments for `byte[]` of length %d\n+  #147 = Utf8               java/lang/Object\n+  #148 = Class              #177          // java/lang/Integer\n+  #149 = NameAndType        #178:#179     // valueOf:(I)Ljava/lang/Integer;\n+  #150 = NameAndType        #180:#181     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #151 = Utf8               Invalid `char[]` argument: `null`\n+  #152 = Utf8               Invalid \\'offset\\' (%d) and/or \\'len\\' (%d) arguments for `char[]` of length %d\n+  #153 = Utf8               java/lang/IllegalArgumentException\n+  #154 = Utf8               com/fasterxml/jackson/core/TokenStreamFactory\n+  #155 = Utf8               com/fasterxml/jackson/core/Versioned\n+  #156 = Utf8               java/io/Serializable\n+  #157 = Class              #182          // com/fasterxml/jackson/core/JsonParser\n+  #158 = Utf8               com/fasterxml/jackson/core/JsonParser$Feature\n+  #159 = Class              #183          // com/fasterxml/jackson/core/JsonGenerator\n+  #160 = Utf8               com/fasterxml/jackson/core/JsonGenerator$Feature\n+  #161 = Utf8               java/io/IOException\n+  #162 = Utf8               java/lang/String\n+  #163 = Utf8               (Ljava/io/DataOutput;)V\n+  #164 = Utf8               java/net/URL\n+  #165 = Utf8               getProtocol\n+  #166 = Utf8               equals\n+  #167 = Utf8               (Ljava/lang/Object;)Z\n+  #168 = Utf8               getHost\n+  #169 = Utf8               length\n+  #170 = Utf8               getPath\n+  #171 = Utf8               indexOf\n+  #172 = Utf8               (I)I\n+  #173 = Utf8               (Ljava/lang/String;)V\n+  #174 = Utf8               openStream\n+  #175 = Utf8               ()Ljava/io/InputStream;\n+  #176 = Utf8               (Ljava/io/File;)V\n+  #177 = Utf8               java/lang/Integer\n+  #178 = Utf8               valueOf\n+  #179 = Utf8               (I)Ljava/lang/Integer;\n+  #180 = Utf8               format\n+  #181 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #182 = Utf8               com/fasterxml/jackson/core/JsonParser\n+  #183 = Utf8               com/fasterxml/jackson/core/JsonGenerator\n {\n   private static final long serialVersionUID = 2l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 2l\n \n   public com.fasterxml.jackson.core.TokenStreamFactory();\n@@ -665,9 +664,9 @@\n             0       9     1   msg   Ljava/lang/String;\n     Exceptions:\n       throws java.lang.IllegalArgumentException\n     Signature: #125                         // <T:Ljava/lang/Object;>(Ljava/lang/String;)TT;\n }\n SourceFile: \"TokenStreamFactory.java\"\n InnerClasses:\n-  public static final #57= #56 of #158;   // Feature=class com/fasterxml/jackson/core/JsonParser$Feature of class com/fasterxml/jackson/core/JsonParser\n-  public static final #57= #60 of #160;   // Feature=class com/fasterxml/jackson/core/JsonGenerator$Feature of class com/fasterxml/jackson/core/JsonGenerator\n+  public static final #57= #56 of #157;   // Feature=class com/fasterxml/jackson/core/JsonParser$Feature of class com/fasterxml/jackson/core/JsonParser\n+  public static final #57= #60 of #159;   // Feature=class com/fasterxml/jackson/core/JsonGenerator$Feature of class com/fasterxml/jackson/core/JsonGenerator\n"}]}
