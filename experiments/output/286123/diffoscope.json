{"diffoscope-json-version": 1, "source1": "first/CpioArchiveOutputStream.class", "source2": "second/CpioArchiveOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,141 +1,141 @@\n-  SHA-256 checksum 47430db600fd47db8100fa8f4d915b7b866b58cc1f2c7f901b49ee89d716e0d2\n+  SHA-256 checksum fcaae2e8a38b5c7e607ca19776947117523e9459a4ad63c7a3123de7f14edc00\n   Compiled from \"CpioArchiveOutputStream.java\"\n public class org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream extends org.apache.commons.compress.archivers.ArchiveOutputStream implements org.apache.commons.compress.archivers.cpio.CpioConstants\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #132                        // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n   super_class: #133                       // org/apache/commons/compress/archivers/ArchiveOutputStream\n   interfaces: 1, fields: 12, methods: 20, attributes: 1\n Constant pool:\n-    #1 = Class              #199          // org/apache/commons/compress/archivers/cpio/CpioConstants\n-    #2 = Class              #200          // org/apache/commons/compress/utils/CharsetNames\n-    #3 = String             #201          // US-ASCII\n-    #4 = Methodref          #132.#202     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;SILjava/lang/String;)V\n-    #5 = Methodref          #133.#203     // org/apache/commons/compress/archivers/ArchiveOutputStream.\"<init>\":()V\n-    #6 = Fieldref           #132.#204     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.closed:Z\n-    #7 = Class              #205          // java/util/HashMap\n-    #8 = Methodref          #7.#203       // java/util/HashMap.\"<init>\":()V\n-    #9 = Fieldref           #132.#206     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.names:Ljava/util/HashMap;\n-   #10 = Fieldref           #132.#207     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.crc:J\n-   #11 = Fieldref           #132.#208     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.nextArtificalDeviceAndInode:J\n-   #12 = Fieldref           #132.#209     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.out:Ljava/io/OutputStream;\n-   #13 = Class              #210          // java/lang/IllegalArgumentException\n-   #14 = Class              #211          // java/lang/StringBuilder\n-   #15 = Methodref          #14.#203      // java/lang/StringBuilder.\"<init>\":()V\n-   #16 = String             #212          // Unknown format:\n-   #17 = Methodref          #14.#213      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #18 = Methodref          #14.#214      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #19 = Methodref          #14.#215      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #20 = Methodref          #13.#216      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #21 = Fieldref           #132.#217     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.entryFormat:S\n-   #22 = Fieldref           #132.#218     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.blockSize:I\n-   #23 = Fieldref           #132.#219     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.encoding:Ljava/lang/String;\n-   #24 = Methodref          #220.#221     // org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-   #25 = Fieldref           #132.#222     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-   #26 = Methodref          #132.#223     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;S)V\n-   #27 = Class              #224          // java/io/IOException\n-   #28 = String             #225          // Stream closed\n-   #29 = Methodref          #27.#216      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #30 = Fieldref           #132.#226     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.finished:Z\n-   #31 = String             #227          // Stream has already been finished\n-   #32 = Class              #228          // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry\n-   #33 = Methodref          #132.#229     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.ensureOpen:()V\n-   #34 = Fieldref           #132.#230     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n-   #35 = Methodref          #132.#231     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.closeArchiveEntry:()V\n-   #36 = Methodref          #32.#232      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getTime:()J\n+    #1 = Class              #196          // org/apache/commons/compress/archivers/cpio/CpioConstants\n+    #2 = Class              #197          // org/apache/commons/compress/utils/CharsetNames\n+    #3 = String             #198          // US-ASCII\n+    #4 = Methodref          #132.#199     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;SILjava/lang/String;)V\n+    #5 = Methodref          #133.#200     // org/apache/commons/compress/archivers/ArchiveOutputStream.\"<init>\":()V\n+    #6 = Fieldref           #132.#201     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.closed:Z\n+    #7 = Class              #202          // java/util/HashMap\n+    #8 = Methodref          #7.#200       // java/util/HashMap.\"<init>\":()V\n+    #9 = Fieldref           #132.#203     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.names:Ljava/util/HashMap;\n+   #10 = Fieldref           #132.#204     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.crc:J\n+   #11 = Fieldref           #132.#205     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.nextArtificalDeviceAndInode:J\n+   #12 = Fieldref           #132.#206     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.out:Ljava/io/OutputStream;\n+   #13 = Class              #207          // java/lang/IllegalArgumentException\n+   #14 = Class              #208          // java/lang/StringBuilder\n+   #15 = Methodref          #14.#200      // java/lang/StringBuilder.\"<init>\":()V\n+   #16 = String             #209          // Unknown format:\n+   #17 = Methodref          #14.#210      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #18 = Methodref          #14.#211      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #19 = Methodref          #14.#212      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #20 = Methodref          #13.#213      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #21 = Fieldref           #132.#214     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.entryFormat:S\n+   #22 = Fieldref           #132.#215     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.blockSize:I\n+   #23 = Fieldref           #132.#216     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.encoding:Ljava/lang/String;\n+   #24 = Methodref          #217.#218     // org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #25 = Fieldref           #132.#219     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #26 = Methodref          #132.#220     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;S)V\n+   #27 = Class              #221          // java/io/IOException\n+   #28 = String             #222          // Stream closed\n+   #29 = Methodref          #27.#213      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #30 = Fieldref           #132.#223     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.finished:Z\n+   #31 = String             #224          // Stream has already been finished\n+   #32 = Class              #225          // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry\n+   #33 = Methodref          #132.#226     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.ensureOpen:()V\n+   #34 = Fieldref           #132.#227     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+   #35 = Methodref          #132.#228     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.closeArchiveEntry:()V\n+   #36 = Methodref          #32.#229      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getTime:()J\n    #37 = Long               -1l\n-   #39 = Methodref          #233.#234     // java/lang/System.currentTimeMillis:()J\n+   #39 = Methodref          #230.#231     // java/lang/System.currentTimeMillis:()J\n    #40 = Long               1000l\n-   #42 = Methodref          #32.#235      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setTime:(J)V\n-   #43 = Methodref          #32.#236      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getFormat:()S\n-   #44 = String             #237          // Header format:\n-   #45 = String             #238          //  does not match existing format:\n-   #46 = Methodref          #32.#239      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getName:()Ljava/lang/String;\n-   #47 = Methodref          #7.#240       // java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #48 = String             #241          // duplicate entry:\n-   #49 = Methodref          #132.#242     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.writeHeader:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n-   #50 = Fieldref           #132.#243     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.written:J\n-   #51 = String             #244          // 070701\n-   #52 = Methodref          #245.#246     // org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n-   #53 = Methodref          #247.#248     // java/io/OutputStream.write:([B)V\n-   #54 = Methodref          #132.#249     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.count:(I)V\n-   #55 = Methodref          #132.#250     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.writeNewEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n-   #56 = String             #251          // 070702\n-   #57 = String             #252          // 070707\n-   #58 = Methodref          #132.#253     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.writeOldAsciiEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n+   #42 = Methodref          #32.#232      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setTime:(J)V\n+   #43 = Methodref          #32.#233      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getFormat:()S\n+   #44 = String             #234          // Header format:\n+   #45 = String             #235          //  does not match existing format:\n+   #46 = Methodref          #32.#236      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getName:()Ljava/lang/String;\n+   #47 = Methodref          #7.#237       // java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #48 = String             #238          // duplicate entry:\n+   #49 = Methodref          #132.#239     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.writeHeader:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n+   #50 = Fieldref           #132.#240     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.written:J\n+   #51 = String             #241          // 070701\n+   #52 = Methodref          #242.#243     // org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n+   #53 = Methodref          #164.#244     // java/io/OutputStream.write:([B)V\n+   #54 = Methodref          #132.#245     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.count:(I)V\n+   #55 = Methodref          #132.#246     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.writeNewEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n+   #56 = String             #247          // 070702\n+   #57 = String             #248          // 070707\n+   #58 = Methodref          #132.#249     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.writeOldAsciiEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n    #59 = Long               29127l\n-   #61 = Methodref          #132.#254     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.writeBinaryLong:(JIZ)V\n-   #62 = Methodref          #132.#255     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.writeOldBinaryEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V\n-   #63 = String             #256          // unknown format\n-   #64 = Methodref          #32.#257      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getInode:()J\n-   #65 = Methodref          #32.#258      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getDeviceMin:()J\n-   #66 = String             #259          // TRAILER!!!\n-   #67 = Methodref          #260.#261     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #61 = Methodref          #132.#250     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.writeBinaryLong:(JIZ)V\n+   #62 = Methodref          #132.#251     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.writeOldBinaryEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V\n+   #63 = String             #252          // unknown format\n+   #64 = Methodref          #32.#253      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getInode:()J\n+   #65 = Methodref          #32.#254      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getDeviceMin:()J\n+   #66 = String             #255          // TRAILER!!!\n+   #67 = Methodref          #165.#256     // java/lang/String.equals:(Ljava/lang/Object;)Z\n    #68 = Long               4294967296l\n-   #70 = Methodref          #262.#263     // java/lang/Math.max:(JJ)J\n-   #71 = Methodref          #132.#264     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.writeAsciiLong:(JII)V\n-   #72 = Methodref          #32.#265      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getMode:()J\n-   #73 = Methodref          #32.#266      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getUID:()J\n-   #74 = Methodref          #32.#267      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getGID:()J\n-   #75 = Methodref          #32.#268      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getNumberOfLinks:()J\n-   #76 = Methodref          #32.#269      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getSize:()J\n-   #77 = Methodref          #32.#270      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getDeviceMaj:()J\n-   #78 = Methodref          #32.#271      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getRemoteDeviceMaj:()J\n-   #79 = Methodref          #32.#272      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getRemoteDeviceMin:()J\n-   #80 = Methodref          #260.#273     // java/lang/String.length:()I\n-   #81 = Methodref          #32.#274      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getChksum:()J\n-   #82 = Methodref          #132.#275     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.writeCString:(Ljava/lang/String;)V\n-   #83 = Methodref          #32.#276      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getHeaderPadCount:()I\n-   #84 = Methodref          #132.#277     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.pad:(I)V\n-   #85 = Methodref          #32.#278      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getDevice:()J\n+   #70 = Methodref          #257.#258     // java/lang/Math.max:(JJ)J\n+   #71 = Methodref          #132.#259     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.writeAsciiLong:(JII)V\n+   #72 = Methodref          #32.#260      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getMode:()J\n+   #73 = Methodref          #32.#261      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getUID:()J\n+   #74 = Methodref          #32.#262      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getGID:()J\n+   #75 = Methodref          #32.#263      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getNumberOfLinks:()J\n+   #76 = Methodref          #32.#264      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getSize:()J\n+   #77 = Methodref          #32.#265      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getDeviceMaj:()J\n+   #78 = Methodref          #32.#266      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getRemoteDeviceMaj:()J\n+   #79 = Methodref          #32.#267      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getRemoteDeviceMin:()J\n+   #80 = Methodref          #165.#268     // java/lang/String.length:()I\n+   #81 = Methodref          #32.#269      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getChksum:()J\n+   #82 = Methodref          #132.#270     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.writeCString:(Ljava/lang/String;)V\n+   #83 = Methodref          #32.#271      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getHeaderPadCount:()I\n+   #84 = Methodref          #132.#272     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.pad:(I)V\n+   #85 = Methodref          #32.#273      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getDevice:()J\n    #86 = Long               262143l\n    #88 = Long               262144l\n-   #90 = Methodref          #32.#279      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getRemoteDevice:()J\n+   #90 = Methodref          #32.#274      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getRemoteDevice:()J\n    #91 = Long               65535l\n    #93 = Long               65536l\n-   #95 = String             #280          // Trying to close non-existent entry\n-   #96 = String             #281          // invalid entry size (expected\n-   #97 = Methodref          #14.#282      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-   #98 = String             #283          //  but got\n-   #99 = String             #284          //  bytes)\n-  #100 = Methodref          #32.#285      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getDataPadCount:()I\n-  #101 = String             #286          // CRC Error\n-  #102 = Class              #287          // java/lang/IndexOutOfBoundsException\n-  #103 = Methodref          #102.#203     // java/lang/IndexOutOfBoundsException.\"<init>\":()V\n-  #104 = String             #288          // no current CPIO entry\n-  #105 = String             #289          // attempt to write past end of STORED entry\n-  #106 = Methodref          #247.#290     // java/io/OutputStream.write:([BII)V\n+   #95 = String             #275          // Trying to close non-existent entry\n+   #96 = String             #276          // invalid entry size (expected\n+   #97 = Methodref          #14.#277      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+   #98 = String             #278          //  but got\n+   #99 = String             #279          //  bytes)\n+  #100 = Methodref          #32.#280      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getDataPadCount:()I\n+  #101 = String             #281          // CRC Error\n+  #102 = Class              #282          // java/lang/IndexOutOfBoundsException\n+  #103 = Methodref          #102.#200     // java/lang/IndexOutOfBoundsException.\"<init>\":()V\n+  #104 = String             #283          // no current CPIO entry\n+  #105 = String             #284          // attempt to write past end of STORED entry\n+  #106 = Methodref          #164.#285     // java/io/OutputStream.write:([BII)V\n   #107 = Long               4294967295l\n-  #109 = String             #291          // This archive has already been finished\n-  #110 = String             #292          // This archive contains unclosed entries.\n-  #111 = Methodref          #32.#293      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.\"<init>\":(S)V\n-  #112 = Methodref          #32.#294      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setName:(Ljava/lang/String;)V\n-  #113 = Methodref          #32.#295      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setNumberOfLinks:(J)V\n-  #114 = Methodref          #132.#296     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.getBytesWritten:()J\n-  #115 = Methodref          #132.#297     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.finish:()V\n-  #116 = Methodref          #247.#298     // java/io/OutputStream.close:()V\n-  #117 = Methodref          #299.#300     // org/apache/commons/compress/archivers/cpio/CpioUtil.long2byteArray:(JIZ)[B\n-  #118 = Methodref          #301.#302     // java/lang/Long.toHexString:(J)Ljava/lang/String;\n-  #119 = Methodref          #301.#303     // java/lang/Long.toOctalString:(J)Ljava/lang/String;\n-  #120 = Methodref          #301.#304     // java/lang/Long.toString:(J)Ljava/lang/String;\n-  #121 = Methodref          #14.#273      // java/lang/StringBuilder.length:()I\n-  #122 = String             #305          // 0\n-  #123 = Methodref          #14.#306      // java/lang/StringBuilder.insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;\n-  #124 = Methodref          #14.#307      // java/lang/StringBuilder.substring:(I)Ljava/lang/String;\n-  #125 = InterfaceMethodref #308.#309     // org/apache/commons/compress/archivers/zip/ZipEncoding.encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;\n-  #126 = Methodref          #310.#311     // java/nio/ByteBuffer.limit:()I\n-  #127 = Methodref          #310.#312     // java/nio/ByteBuffer.position:()I\n-  #128 = Methodref          #310.#313     // java/nio/ByteBuffer.array:()[B\n-  #129 = Methodref          #310.#314     // java/nio/ByteBuffer.arrayOffset:()I\n-  #130 = Methodref          #247.#315     // java/io/OutputStream.write:(I)V\n-  #131 = Methodref          #32.#316      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-  #132 = Class              #317          // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n-  #133 = Class              #318          // org/apache/commons/compress/archivers/ArchiveOutputStream\n+  #109 = String             #286          // This archive has already been finished\n+  #110 = String             #287          // This archive contains unclosed entries.\n+  #111 = Methodref          #32.#288      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.\"<init>\":(S)V\n+  #112 = Methodref          #32.#289      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setName:(Ljava/lang/String;)V\n+  #113 = Methodref          #32.#290      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setNumberOfLinks:(J)V\n+  #114 = Methodref          #132.#291     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.getBytesWritten:()J\n+  #115 = Methodref          #132.#292     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.finish:()V\n+  #116 = Methodref          #164.#293     // java/io/OutputStream.close:()V\n+  #117 = Methodref          #294.#295     // org/apache/commons/compress/archivers/cpio/CpioUtil.long2byteArray:(JIZ)[B\n+  #118 = Methodref          #296.#297     // java/lang/Long.toHexString:(J)Ljava/lang/String;\n+  #119 = Methodref          #296.#298     // java/lang/Long.toOctalString:(J)Ljava/lang/String;\n+  #120 = Methodref          #296.#299     // java/lang/Long.toString:(J)Ljava/lang/String;\n+  #121 = Methodref          #14.#268      // java/lang/StringBuilder.length:()I\n+  #122 = String             #300          // 0\n+  #123 = Methodref          #14.#301      // java/lang/StringBuilder.insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;\n+  #124 = Methodref          #14.#302      // java/lang/StringBuilder.substring:(I)Ljava/lang/String;\n+  #125 = InterfaceMethodref #303.#304     // org/apache/commons/compress/archivers/zip/ZipEncoding.encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;\n+  #126 = Methodref          #305.#306     // java/nio/ByteBuffer.limit:()I\n+  #127 = Methodref          #305.#307     // java/nio/ByteBuffer.position:()I\n+  #128 = Methodref          #305.#308     // java/nio/ByteBuffer.array:()[B\n+  #129 = Methodref          #305.#309     // java/nio/ByteBuffer.arrayOffset:()I\n+  #130 = Methodref          #164.#310     // java/io/OutputStream.write:(I)V\n+  #131 = Methodref          #32.#311      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+  #132 = Class              #312          // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n+  #133 = Class              #313          // org/apache/commons/compress/archivers/ArchiveOutputStream\n   #134 = Utf8               entry\n   #135 = Utf8               Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n   #136 = Utf8               closed\n   #137 = Utf8               Z\n   #138 = Utf8               finished\n   #139 = Utf8               entryFormat\n   #140 = Utf8               S\n@@ -158,243 +158,238 @@\n   #157 = Utf8               <init>\n   #158 = Utf8               (Ljava/io/OutputStream;S)V\n   #159 = Utf8               Code\n   #160 = Utf8               LineNumberTable\n   #161 = Utf8               (Ljava/io/OutputStream;SI)V\n   #162 = Utf8               (Ljava/io/OutputStream;SILjava/lang/String;)V\n   #163 = Utf8               StackMapTable\n-  #164 = Class              #317          // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n-  #165 = Class              #319          // java/io/OutputStream\n-  #166 = Class              #320          // java/lang/String\n-  #167 = Utf8               (Ljava/io/OutputStream;)V\n-  #168 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)V\n-  #169 = Utf8               ensureOpen\n-  #170 = Utf8               ()V\n-  #171 = Utf8               Exceptions\n-  #172 = Utf8               putArchiveEntry\n-  #173 = Utf8               (Lorg/apache/commons/compress/archivers/ArchiveEntry;)V\n-  #174 = Class              #228          // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry\n-  #175 = Utf8               writeHeader\n-  #176 = Utf8               (Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n-  #177 = Utf8               writeNewEntry\n-  #178 = Utf8               writeOldAsciiEntry\n-  #179 = Utf8               writeOldBinaryEntry\n-  #180 = Utf8               (Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V\n-  #181 = Utf8               closeArchiveEntry\n-  #182 = Utf8               write\n-  #183 = Utf8               ([BII)V\n-  #184 = Utf8               finish\n-  #185 = Utf8               close\n-  #186 = Utf8               pad\n-  #187 = Utf8               (I)V\n-  #188 = Utf8               writeBinaryLong\n-  #189 = Utf8               (JIZ)V\n-  #190 = Utf8               writeAsciiLong\n-  #191 = Utf8               (JII)V\n-  #192 = Class              #211          // java/lang/StringBuilder\n-  #193 = Utf8               writeCString\n-  #194 = Utf8               (Ljava/lang/String;)V\n-  #195 = Utf8               createArchiveEntry\n-  #196 = Utf8               (Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;\n-  #197 = Utf8               SourceFile\n-  #198 = Utf8               CpioArchiveOutputStream.java\n-  #199 = Utf8               org/apache/commons/compress/archivers/cpio/CpioConstants\n-  #200 = Utf8               org/apache/commons/compress/utils/CharsetNames\n-  #201 = Utf8               US-ASCII\n-  #202 = NameAndType        #157:#162     // \"<init>\":(Ljava/io/OutputStream;SILjava/lang/String;)V\n-  #203 = NameAndType        #157:#170     // \"<init>\":()V\n-  #204 = NameAndType        #136:#137     // closed:Z\n-  #205 = Utf8               java/util/HashMap\n-  #206 = NameAndType        #141:#142     // names:Ljava/util/HashMap;\n-  #207 = NameAndType        #145:#146     // crc:J\n-  #208 = NameAndType        #152:#146     // nextArtificalDeviceAndInode:J\n-  #209 = NameAndType        #148:#149     // out:Ljava/io/OutputStream;\n-  #210 = Utf8               java/lang/IllegalArgumentException\n-  #211 = Utf8               java/lang/StringBuilder\n-  #212 = Utf8               Unknown format:\n-  #213 = NameAndType        #321:#322     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #214 = NameAndType        #321:#323     // append:(I)Ljava/lang/StringBuilder;\n-  #215 = NameAndType        #324:#325     // toString:()Ljava/lang/String;\n-  #216 = NameAndType        #157:#194     // \"<init>\":(Ljava/lang/String;)V\n-  #217 = NameAndType        #139:#140     // entryFormat:S\n-  #218 = NameAndType        #150:#151     // blockSize:I\n-  #219 = NameAndType        #155:#156     // encoding:Ljava/lang/String;\n-  #220 = Class              #326          // org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n-  #221 = NameAndType        #327:#328     // getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #222 = NameAndType        #153:#154     // zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #223 = NameAndType        #157:#158     // \"<init>\":(Ljava/io/OutputStream;S)V\n-  #224 = Utf8               java/io/IOException\n-  #225 = Utf8               Stream closed\n-  #226 = NameAndType        #138:#137     // finished:Z\n-  #227 = Utf8               Stream has already been finished\n-  #228 = Utf8               org/apache/commons/compress/archivers/cpio/CpioArchiveEntry\n-  #229 = NameAndType        #169:#170     // ensureOpen:()V\n-  #230 = NameAndType        #134:#135     // entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n-  #231 = NameAndType        #181:#170     // closeArchiveEntry:()V\n-  #232 = NameAndType        #329:#330     // getTime:()J\n-  #233 = Class              #331          // java/lang/System\n-  #234 = NameAndType        #332:#330     // currentTimeMillis:()J\n-  #235 = NameAndType        #333:#334     // setTime:(J)V\n-  #236 = NameAndType        #335:#336     // getFormat:()S\n-  #237 = Utf8               Header format:\n-  #238 = Utf8                does not match existing format:\n-  #239 = NameAndType        #337:#325     // getName:()Ljava/lang/String;\n-  #240 = NameAndType        #338:#339     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #241 = Utf8               duplicate entry:\n-  #242 = NameAndType        #175:#176     // writeHeader:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n-  #243 = NameAndType        #147:#146     // written:J\n-  #244 = Utf8               070701\n-  #245 = Class              #340          // org/apache/commons/compress/utils/ArchiveUtils\n-  #246 = NameAndType        #341:#342     // toAsciiBytes:(Ljava/lang/String;)[B\n-  #247 = Class              #319          // java/io/OutputStream\n-  #248 = NameAndType        #182:#343     // write:([B)V\n-  #249 = NameAndType        #344:#187     // count:(I)V\n-  #250 = NameAndType        #177:#176     // writeNewEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n-  #251 = Utf8               070702\n-  #252 = Utf8               070707\n-  #253 = NameAndType        #178:#176     // writeOldAsciiEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n-  #254 = NameAndType        #188:#189     // writeBinaryLong:(JIZ)V\n-  #255 = NameAndType        #179:#180     // writeOldBinaryEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V\n-  #256 = Utf8               unknown format\n-  #257 = NameAndType        #345:#330     // getInode:()J\n-  #258 = NameAndType        #346:#330     // getDeviceMin:()J\n-  #259 = Utf8               TRAILER!!!\n-  #260 = Class              #320          // java/lang/String\n-  #261 = NameAndType        #347:#348     // equals:(Ljava/lang/Object;)Z\n-  #262 = Class              #349          // java/lang/Math\n-  #263 = NameAndType        #350:#351     // max:(JJ)J\n-  #264 = NameAndType        #190:#191     // writeAsciiLong:(JII)V\n-  #265 = NameAndType        #352:#330     // getMode:()J\n-  #266 = NameAndType        #353:#330     // getUID:()J\n-  #267 = NameAndType        #354:#330     // getGID:()J\n-  #268 = NameAndType        #355:#330     // getNumberOfLinks:()J\n-  #269 = NameAndType        #356:#330     // getSize:()J\n-  #270 = NameAndType        #357:#330     // getDeviceMaj:()J\n-  #271 = NameAndType        #358:#330     // getRemoteDeviceMaj:()J\n-  #272 = NameAndType        #359:#330     // getRemoteDeviceMin:()J\n-  #273 = NameAndType        #360:#361     // length:()I\n-  #274 = NameAndType        #362:#330     // getChksum:()J\n-  #275 = NameAndType        #193:#194     // writeCString:(Ljava/lang/String;)V\n-  #276 = NameAndType        #363:#361     // getHeaderPadCount:()I\n-  #277 = NameAndType        #186:#187     // pad:(I)V\n-  #278 = NameAndType        #364:#330     // getDevice:()J\n-  #279 = NameAndType        #365:#330     // getRemoteDevice:()J\n-  #280 = Utf8               Trying to close non-existent entry\n-  #281 = Utf8               invalid entry size (expected\n-  #282 = NameAndType        #321:#366     // append:(J)Ljava/lang/StringBuilder;\n-  #283 = Utf8                but got\n-  #284 = Utf8                bytes)\n-  #285 = NameAndType        #367:#361     // getDataPadCount:()I\n-  #286 = Utf8               CRC Error\n-  #287 = Utf8               java/lang/IndexOutOfBoundsException\n-  #288 = Utf8               no current CPIO entry\n-  #289 = Utf8               attempt to write past end of STORED entry\n-  #290 = NameAndType        #182:#183     // write:([BII)V\n-  #291 = Utf8               This archive has already been finished\n-  #292 = Utf8               This archive contains unclosed entries.\n-  #293 = NameAndType        #157:#368     // \"<init>\":(S)V\n-  #294 = NameAndType        #369:#194     // setName:(Ljava/lang/String;)V\n-  #295 = NameAndType        #370:#334     // setNumberOfLinks:(J)V\n-  #296 = NameAndType        #371:#330     // getBytesWritten:()J\n-  #297 = NameAndType        #184:#170     // finish:()V\n-  #298 = NameAndType        #185:#170     // close:()V\n-  #299 = Class              #372          // org/apache/commons/compress/archivers/cpio/CpioUtil\n-  #300 = NameAndType        #373:#374     // long2byteArray:(JIZ)[B\n-  #301 = Class              #375          // java/lang/Long\n-  #302 = NameAndType        #376:#377     // toHexString:(J)Ljava/lang/String;\n-  #303 = NameAndType        #378:#377     // toOctalString:(J)Ljava/lang/String;\n-  #304 = NameAndType        #324:#377     // toString:(J)Ljava/lang/String;\n-  #305 = Utf8               0\n-  #306 = NameAndType        #379:#380     // insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;\n-  #307 = NameAndType        #381:#382     // substring:(I)Ljava/lang/String;\n-  #308 = Class              #383          // org/apache/commons/compress/archivers/zip/ZipEncoding\n-  #309 = NameAndType        #384:#385     // encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;\n-  #310 = Class              #386          // java/nio/ByteBuffer\n-  #311 = NameAndType        #387:#361     // limit:()I\n-  #312 = NameAndType        #388:#361     // position:()I\n-  #313 = NameAndType        #389:#390     // array:()[B\n-  #314 = NameAndType        #391:#361     // arrayOffset:()I\n-  #315 = NameAndType        #182:#187     // write:(I)V\n-  #316 = NameAndType        #157:#392     // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-  #317 = Utf8               org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n-  #318 = Utf8               org/apache/commons/compress/archivers/ArchiveOutputStream\n-  #319 = Utf8               java/io/OutputStream\n-  #320 = Utf8               java/lang/String\n-  #321 = Utf8               append\n-  #322 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #323 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #324 = Utf8               toString\n-  #325 = Utf8               ()Ljava/lang/String;\n-  #326 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n-  #327 = Utf8               getZipEncoding\n-  #328 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #329 = Utf8               getTime\n-  #330 = Utf8               ()J\n-  #331 = Utf8               java/lang/System\n-  #332 = Utf8               currentTimeMillis\n-  #333 = Utf8               setTime\n-  #334 = Utf8               (J)V\n-  #335 = Utf8               getFormat\n-  #336 = Utf8               ()S\n-  #337 = Utf8               getName\n-  #338 = Utf8               put\n-  #339 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #340 = Utf8               org/apache/commons/compress/utils/ArchiveUtils\n-  #341 = Utf8               toAsciiBytes\n-  #342 = Utf8               (Ljava/lang/String;)[B\n-  #343 = Utf8               ([B)V\n-  #344 = Utf8               count\n-  #345 = Utf8               getInode\n-  #346 = Utf8               getDeviceMin\n-  #347 = Utf8               equals\n-  #348 = Utf8               (Ljava/lang/Object;)Z\n-  #349 = Utf8               java/lang/Math\n-  #350 = Utf8               max\n-  #351 = Utf8               (JJ)J\n-  #352 = Utf8               getMode\n-  #353 = Utf8               getUID\n-  #354 = Utf8               getGID\n-  #355 = Utf8               getNumberOfLinks\n-  #356 = Utf8               getSize\n-  #357 = Utf8               getDeviceMaj\n-  #358 = Utf8               getRemoteDeviceMaj\n-  #359 = Utf8               getRemoteDeviceMin\n-  #360 = Utf8               length\n-  #361 = Utf8               ()I\n-  #362 = Utf8               getChksum\n-  #363 = Utf8               getHeaderPadCount\n-  #364 = Utf8               getDevice\n-  #365 = Utf8               getRemoteDevice\n-  #366 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #367 = Utf8               getDataPadCount\n-  #368 = Utf8               (S)V\n-  #369 = Utf8               setName\n-  #370 = Utf8               setNumberOfLinks\n-  #371 = Utf8               getBytesWritten\n-  #372 = Utf8               org/apache/commons/compress/archivers/cpio/CpioUtil\n-  #373 = Utf8               long2byteArray\n-  #374 = Utf8               (JIZ)[B\n-  #375 = Utf8               java/lang/Long\n-  #376 = Utf8               toHexString\n-  #377 = Utf8               (J)Ljava/lang/String;\n-  #378 = Utf8               toOctalString\n-  #379 = Utf8               insert\n-  #380 = Utf8               (ILjava/lang/String;)Ljava/lang/StringBuilder;\n-  #381 = Utf8               substring\n-  #382 = Utf8               (I)Ljava/lang/String;\n-  #383 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncoding\n-  #384 = Utf8               encode\n-  #385 = Utf8               (Ljava/lang/String;)Ljava/nio/ByteBuffer;\n-  #386 = Utf8               java/nio/ByteBuffer\n-  #387 = Utf8               limit\n-  #388 = Utf8               position\n-  #389 = Utf8               array\n-  #390 = Utf8               ()[B\n-  #391 = Utf8               arrayOffset\n-  #392 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n+  #164 = Class              #314          // java/io/OutputStream\n+  #165 = Class              #315          // java/lang/String\n+  #166 = Utf8               (Ljava/io/OutputStream;)V\n+  #167 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)V\n+  #168 = Utf8               ensureOpen\n+  #169 = Utf8               ()V\n+  #170 = Utf8               Exceptions\n+  #171 = Utf8               putArchiveEntry\n+  #172 = Utf8               (Lorg/apache/commons/compress/archivers/ArchiveEntry;)V\n+  #173 = Utf8               writeHeader\n+  #174 = Utf8               (Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n+  #175 = Utf8               writeNewEntry\n+  #176 = Utf8               writeOldAsciiEntry\n+  #177 = Utf8               writeOldBinaryEntry\n+  #178 = Utf8               (Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V\n+  #179 = Utf8               closeArchiveEntry\n+  #180 = Utf8               write\n+  #181 = Utf8               ([BII)V\n+  #182 = Utf8               finish\n+  #183 = Utf8               close\n+  #184 = Utf8               pad\n+  #185 = Utf8               (I)V\n+  #186 = Utf8               writeBinaryLong\n+  #187 = Utf8               (JIZ)V\n+  #188 = Utf8               writeAsciiLong\n+  #189 = Utf8               (JII)V\n+  #190 = Utf8               writeCString\n+  #191 = Utf8               (Ljava/lang/String;)V\n+  #192 = Utf8               createArchiveEntry\n+  #193 = Utf8               (Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;\n+  #194 = Utf8               SourceFile\n+  #195 = Utf8               CpioArchiveOutputStream.java\n+  #196 = Utf8               org/apache/commons/compress/archivers/cpio/CpioConstants\n+  #197 = Utf8               org/apache/commons/compress/utils/CharsetNames\n+  #198 = Utf8               US-ASCII\n+  #199 = NameAndType        #157:#162     // \"<init>\":(Ljava/io/OutputStream;SILjava/lang/String;)V\n+  #200 = NameAndType        #157:#169     // \"<init>\":()V\n+  #201 = NameAndType        #136:#137     // closed:Z\n+  #202 = Utf8               java/util/HashMap\n+  #203 = NameAndType        #141:#142     // names:Ljava/util/HashMap;\n+  #204 = NameAndType        #145:#146     // crc:J\n+  #205 = NameAndType        #152:#146     // nextArtificalDeviceAndInode:J\n+  #206 = NameAndType        #148:#149     // out:Ljava/io/OutputStream;\n+  #207 = Utf8               java/lang/IllegalArgumentException\n+  #208 = Utf8               java/lang/StringBuilder\n+  #209 = Utf8               Unknown format:\n+  #210 = NameAndType        #316:#317     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #211 = NameAndType        #316:#318     // append:(I)Ljava/lang/StringBuilder;\n+  #212 = NameAndType        #319:#320     // toString:()Ljava/lang/String;\n+  #213 = NameAndType        #157:#191     // \"<init>\":(Ljava/lang/String;)V\n+  #214 = NameAndType        #139:#140     // entryFormat:S\n+  #215 = NameAndType        #150:#151     // blockSize:I\n+  #216 = NameAndType        #155:#156     // encoding:Ljava/lang/String;\n+  #217 = Class              #321          // org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n+  #218 = NameAndType        #322:#323     // getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+  #219 = NameAndType        #153:#154     // zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+  #220 = NameAndType        #157:#158     // \"<init>\":(Ljava/io/OutputStream;S)V\n+  #221 = Utf8               java/io/IOException\n+  #222 = Utf8               Stream closed\n+  #223 = NameAndType        #138:#137     // finished:Z\n+  #224 = Utf8               Stream has already been finished\n+  #225 = Utf8               org/apache/commons/compress/archivers/cpio/CpioArchiveEntry\n+  #226 = NameAndType        #168:#169     // ensureOpen:()V\n+  #227 = NameAndType        #134:#135     // entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+  #228 = NameAndType        #179:#169     // closeArchiveEntry:()V\n+  #229 = NameAndType        #324:#325     // getTime:()J\n+  #230 = Class              #326          // java/lang/System\n+  #231 = NameAndType        #327:#325     // currentTimeMillis:()J\n+  #232 = NameAndType        #328:#329     // setTime:(J)V\n+  #233 = NameAndType        #330:#331     // getFormat:()S\n+  #234 = Utf8               Header format:\n+  #235 = Utf8                does not match existing format:\n+  #236 = NameAndType        #332:#320     // getName:()Ljava/lang/String;\n+  #237 = NameAndType        #333:#334     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #238 = Utf8               duplicate entry:\n+  #239 = NameAndType        #173:#174     // writeHeader:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n+  #240 = NameAndType        #147:#146     // written:J\n+  #241 = Utf8               070701\n+  #242 = Class              #335          // org/apache/commons/compress/utils/ArchiveUtils\n+  #243 = NameAndType        #336:#337     // toAsciiBytes:(Ljava/lang/String;)[B\n+  #244 = NameAndType        #180:#338     // write:([B)V\n+  #245 = NameAndType        #339:#185     // count:(I)V\n+  #246 = NameAndType        #175:#174     // writeNewEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n+  #247 = Utf8               070702\n+  #248 = Utf8               070707\n+  #249 = NameAndType        #176:#174     // writeOldAsciiEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n+  #250 = NameAndType        #186:#187     // writeBinaryLong:(JIZ)V\n+  #251 = NameAndType        #177:#178     // writeOldBinaryEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V\n+  #252 = Utf8               unknown format\n+  #253 = NameAndType        #340:#325     // getInode:()J\n+  #254 = NameAndType        #341:#325     // getDeviceMin:()J\n+  #255 = Utf8               TRAILER!!!\n+  #256 = NameAndType        #342:#343     // equals:(Ljava/lang/Object;)Z\n+  #257 = Class              #344          // java/lang/Math\n+  #258 = NameAndType        #345:#346     // max:(JJ)J\n+  #259 = NameAndType        #188:#189     // writeAsciiLong:(JII)V\n+  #260 = NameAndType        #347:#325     // getMode:()J\n+  #261 = NameAndType        #348:#325     // getUID:()J\n+  #262 = NameAndType        #349:#325     // getGID:()J\n+  #263 = NameAndType        #350:#325     // getNumberOfLinks:()J\n+  #264 = NameAndType        #351:#325     // getSize:()J\n+  #265 = NameAndType        #352:#325     // getDeviceMaj:()J\n+  #266 = NameAndType        #353:#325     // getRemoteDeviceMaj:()J\n+  #267 = NameAndType        #354:#325     // getRemoteDeviceMin:()J\n+  #268 = NameAndType        #355:#356     // length:()I\n+  #269 = NameAndType        #357:#325     // getChksum:()J\n+  #270 = NameAndType        #190:#191     // writeCString:(Ljava/lang/String;)V\n+  #271 = NameAndType        #358:#356     // getHeaderPadCount:()I\n+  #272 = NameAndType        #184:#185     // pad:(I)V\n+  #273 = NameAndType        #359:#325     // getDevice:()J\n+  #274 = NameAndType        #360:#325     // getRemoteDevice:()J\n+  #275 = Utf8               Trying to close non-existent entry\n+  #276 = Utf8               invalid entry size (expected\n+  #277 = NameAndType        #316:#361     // append:(J)Ljava/lang/StringBuilder;\n+  #278 = Utf8                but got\n+  #279 = Utf8                bytes)\n+  #280 = NameAndType        #362:#356     // getDataPadCount:()I\n+  #281 = Utf8               CRC Error\n+  #282 = Utf8               java/lang/IndexOutOfBoundsException\n+  #283 = Utf8               no current CPIO entry\n+  #284 = Utf8               attempt to write past end of STORED entry\n+  #285 = NameAndType        #180:#181     // write:([BII)V\n+  #286 = Utf8               This archive has already been finished\n+  #287 = Utf8               This archive contains unclosed entries.\n+  #288 = NameAndType        #157:#363     // \"<init>\":(S)V\n+  #289 = NameAndType        #364:#191     // setName:(Ljava/lang/String;)V\n+  #290 = NameAndType        #365:#329     // setNumberOfLinks:(J)V\n+  #291 = NameAndType        #366:#325     // getBytesWritten:()J\n+  #292 = NameAndType        #182:#169     // finish:()V\n+  #293 = NameAndType        #183:#169     // close:()V\n+  #294 = Class              #367          // org/apache/commons/compress/archivers/cpio/CpioUtil\n+  #295 = NameAndType        #368:#369     // long2byteArray:(JIZ)[B\n+  #296 = Class              #370          // java/lang/Long\n+  #297 = NameAndType        #371:#372     // toHexString:(J)Ljava/lang/String;\n+  #298 = NameAndType        #373:#372     // toOctalString:(J)Ljava/lang/String;\n+  #299 = NameAndType        #319:#372     // toString:(J)Ljava/lang/String;\n+  #300 = Utf8               0\n+  #301 = NameAndType        #374:#375     // insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;\n+  #302 = NameAndType        #376:#377     // substring:(I)Ljava/lang/String;\n+  #303 = Class              #378          // org/apache/commons/compress/archivers/zip/ZipEncoding\n+  #304 = NameAndType        #379:#380     // encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;\n+  #305 = Class              #381          // java/nio/ByteBuffer\n+  #306 = NameAndType        #382:#356     // limit:()I\n+  #307 = NameAndType        #383:#356     // position:()I\n+  #308 = NameAndType        #384:#385     // array:()[B\n+  #309 = NameAndType        #386:#356     // arrayOffset:()I\n+  #310 = NameAndType        #180:#185     // write:(I)V\n+  #311 = NameAndType        #157:#387     // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+  #312 = Utf8               org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n+  #313 = Utf8               org/apache/commons/compress/archivers/ArchiveOutputStream\n+  #314 = Utf8               java/io/OutputStream\n+  #315 = Utf8               java/lang/String\n+  #316 = Utf8               append\n+  #317 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #318 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #319 = Utf8               toString\n+  #320 = Utf8               ()Ljava/lang/String;\n+  #321 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n+  #322 = Utf8               getZipEncoding\n+  #323 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+  #324 = Utf8               getTime\n+  #325 = Utf8               ()J\n+  #326 = Utf8               java/lang/System\n+  #327 = Utf8               currentTimeMillis\n+  #328 = Utf8               setTime\n+  #329 = Utf8               (J)V\n+  #330 = Utf8               getFormat\n+  #331 = Utf8               ()S\n+  #332 = Utf8               getName\n+  #333 = Utf8               put\n+  #334 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #335 = Utf8               org/apache/commons/compress/utils/ArchiveUtils\n+  #336 = Utf8               toAsciiBytes\n+  #337 = Utf8               (Ljava/lang/String;)[B\n+  #338 = Utf8               ([B)V\n+  #339 = Utf8               count\n+  #340 = Utf8               getInode\n+  #341 = Utf8               getDeviceMin\n+  #342 = Utf8               equals\n+  #343 = Utf8               (Ljava/lang/Object;)Z\n+  #344 = Utf8               java/lang/Math\n+  #345 = Utf8               max\n+  #346 = Utf8               (JJ)J\n+  #347 = Utf8               getMode\n+  #348 = Utf8               getUID\n+  #349 = Utf8               getGID\n+  #350 = Utf8               getNumberOfLinks\n+  #351 = Utf8               getSize\n+  #352 = Utf8               getDeviceMaj\n+  #353 = Utf8               getRemoteDeviceMaj\n+  #354 = Utf8               getRemoteDeviceMin\n+  #355 = Utf8               length\n+  #356 = Utf8               ()I\n+  #357 = Utf8               getChksum\n+  #358 = Utf8               getHeaderPadCount\n+  #359 = Utf8               getDevice\n+  #360 = Utf8               getRemoteDevice\n+  #361 = Utf8               (J)Ljava/lang/StringBuilder;\n+  #362 = Utf8               getDataPadCount\n+  #363 = Utf8               (S)V\n+  #364 = Utf8               setName\n+  #365 = Utf8               setNumberOfLinks\n+  #366 = Utf8               getBytesWritten\n+  #367 = Utf8               org/apache/commons/compress/archivers/cpio/CpioUtil\n+  #368 = Utf8               long2byteArray\n+  #369 = Utf8               (JIZ)[B\n+  #370 = Utf8               java/lang/Long\n+  #371 = Utf8               toHexString\n+  #372 = Utf8               (J)Ljava/lang/String;\n+  #373 = Utf8               toOctalString\n+  #374 = Utf8               insert\n+  #375 = Utf8               (ILjava/lang/String;)Ljava/lang/StringBuilder;\n+  #376 = Utf8               substring\n+  #377 = Utf8               (I)Ljava/lang/String;\n+  #378 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncoding\n+  #379 = Utf8               encode\n+  #380 = Utf8               (Ljava/lang/String;)Ljava/nio/ByteBuffer;\n+  #381 = Utf8               java/nio/ByteBuffer\n+  #382 = Utf8               limit\n+  #383 = Utf8               position\n+  #384 = Utf8               array\n+  #385 = Utf8               ()[B\n+  #386 = Utf8               arrayOffset\n+  #387 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n {\n   private org.apache.commons.compress.archivers.cpio.CpioArchiveEntry entry;\n     descriptor: Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n     flags: (0x0002) ACC_PRIVATE\n \n   private boolean closed;\n     descriptor: Z\n"}]}
