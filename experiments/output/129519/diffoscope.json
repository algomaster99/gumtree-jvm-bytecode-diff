{"diffoscope-json-version": 1, "source1": "first/BoundedInputStream.class", "source2": "second/BoundedInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,131 +1,129 @@\n-  SHA-256 checksum 6d45c2c40300ef7eb6199c9146b87f75b75495e13f71b4a2c6366a765fe4776e\n+  SHA-256 checksum bd277aa49f1bf96310234014b0ede985d30aba5233f824224d8055296128f988\n   Compiled from \"BoundedInputStream.java\"\n public class org.apache.commons.io.input.BoundedInputStream extends java.io.FilterInputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #6                          // org/apache/commons/io/input/BoundedInputStream\n-  super_class: #12                        // java/io/FilterInputStream\n+  this_class: #1                          // org/apache/commons/io/input/BoundedInputStream\n+  super_class: #3                         // java/io/FilterInputStream\n   interfaces: 0, fields: 4, methods: 18, attributes: 1\n Constant pool:\n-    #1 = Class              #2            // org/apache/commons/io/IOUtils\n-    #2 = Utf8               org/apache/commons/io/IOUtils\n-    #3 = Long               -1l\n-    #5 = Methodref          #6.#7         // org/apache/commons/io/input/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n-    #6 = Class              #8            // org/apache/commons/io/input/BoundedInputStream\n-    #7 = NameAndType        #9:#10        // \"<init>\":(Ljava/io/InputStream;J)V\n-    #8 = Utf8               org/apache/commons/io/input/BoundedInputStream\n-    #9 = Utf8               <init>\n-   #10 = Utf8               (Ljava/io/InputStream;J)V\n-   #11 = Methodref          #12.#13       // java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #12 = Class              #14           // java/io/FilterInputStream\n-   #13 = NameAndType        #9:#15        // \"<init>\":(Ljava/io/InputStream;)V\n-   #14 = Utf8               java/io/FilterInputStream\n-   #15 = Utf8               (Ljava/io/InputStream;)V\n-   #16 = Fieldref           #6.#17        // org/apache/commons/io/input/BoundedInputStream.mark:J\n-   #17 = NameAndType        #18:#19       // mark:J\n-   #18 = Utf8               mark\n-   #19 = Utf8               J\n-   #20 = Fieldref           #6.#21        // org/apache/commons/io/input/BoundedInputStream.propagateClose:Z\n-   #21 = NameAndType        #22:#23       // propagateClose:Z\n-   #22 = Utf8               propagateClose\n-   #23 = Utf8               Z\n-   #24 = Fieldref           #6.#25        // org/apache/commons/io/input/BoundedInputStream.maxCount:J\n-   #25 = NameAndType        #26:#19       // maxCount:J\n-   #26 = Utf8               maxCount\n-   #27 = Methodref          #6.#28        // org/apache/commons/io/input/BoundedInputStream.isMaxLength:()Z\n-   #28 = NameAndType        #29:#30       // isMaxLength:()Z\n-   #29 = Utf8               isMaxLength\n-   #30 = Utf8               ()Z\n-   #31 = Fieldref           #6.#32        // org/apache/commons/io/input/BoundedInputStream.count:J\n-   #32 = NameAndType        #33:#19       // count:J\n-   #33 = Utf8               count\n-   #34 = Methodref          #6.#35        // org/apache/commons/io/input/BoundedInputStream.onMaxLength:(JJ)V\n-   #35 = NameAndType        #36:#37       // onMaxLength:(JJ)V\n-   #36 = Utf8               onMaxLength\n-   #37 = Utf8               (JJ)V\n-   #38 = Fieldref           #6.#39        // org/apache/commons/io/input/BoundedInputStream.in:Ljava/io/InputStream;\n-   #39 = NameAndType        #40:#41       // in:Ljava/io/InputStream;\n-   #40 = Utf8               in\n-   #41 = Utf8               Ljava/io/InputStream;\n-   #42 = Methodref          #43.#44       // java/io/InputStream.available:()I\n-   #43 = Class              #45           // java/io/InputStream\n-   #44 = NameAndType        #46:#47       // available:()I\n-   #45 = Utf8               java/io/InputStream\n-   #46 = Utf8               available\n-   #47 = Utf8               ()I\n-   #48 = Methodref          #43.#49       // java/io/InputStream.close:()V\n-   #49 = NameAndType        #50:#51       // close:()V\n-   #50 = Utf8               close\n-   #51 = Utf8               ()V\n-   #52 = Methodref          #43.#53       // java/io/InputStream.mark:(I)V\n-   #53 = NameAndType        #18:#54       // mark:(I)V\n-   #54 = Utf8               (I)V\n-   #55 = Methodref          #43.#56       // java/io/InputStream.markSupported:()Z\n-   #56 = NameAndType        #57:#30       // markSupported:()Z\n-   #57 = Utf8               markSupported\n-   #58 = Methodref          #43.#59       // java/io/InputStream.read:()I\n-   #59 = NameAndType        #60:#47       // read:()I\n-   #60 = Utf8               read\n-   #61 = Methodref          #6.#62        // org/apache/commons/io/input/BoundedInputStream.read:([BII)I\n-   #62 = NameAndType        #60:#63       // read:([BII)I\n-   #63 = Utf8               ([BII)I\n-   #64 = Methodref          #65.#66       // java/lang/Math.min:(JJ)J\n-   #65 = Class              #67           // java/lang/Math\n-   #66 = NameAndType        #68:#69       // min:(JJ)J\n-   #67 = Utf8               java/lang/Math\n-   #68 = Utf8               min\n-   #69 = Utf8               (JJ)J\n-   #70 = Methodref          #43.#62       // java/io/InputStream.read:([BII)I\n-   #71 = Methodref          #43.#72       // java/io/InputStream.reset:()V\n-   #72 = NameAndType        #73:#51       // reset:()V\n-   #73 = Utf8               reset\n-   #74 = Methodref          #43.#75       // java/io/InputStream.skip:(J)J\n-   #75 = NameAndType        #76:#77       // skip:(J)J\n-   #76 = Utf8               skip\n-   #77 = Utf8               (J)J\n-   #78 = Methodref          #79.#80       // java/lang/Object.toString:()Ljava/lang/String;\n-   #79 = Class              #81           // java/lang/Object\n-   #80 = NameAndType        #82:#83       // toString:()Ljava/lang/String;\n-   #81 = Utf8               java/lang/Object\n-   #82 = Utf8               toString\n-   #83 = Utf8               ()Ljava/lang/String;\n-   #84 = Utf8               Code\n-   #85 = Utf8               LineNumberTable\n-   #86 = Utf8               LocalVariableTable\n-   #87 = Utf8               this\n-   #88 = Utf8               Lorg/apache/commons/io/input/BoundedInputStream;\n-   #89 = Utf8               inputStream\n-   #90 = Utf8               maxLength\n-   #91 = Utf8               StackMapTable\n-   #92 = Utf8               Exceptions\n-   #93 = Class              #94           // java/io/IOException\n-   #94 = Utf8               java/io/IOException\n-   #95 = Utf8               getCount\n-   #96 = Utf8               ()J\n-   #97 = Utf8               getMaxLength\n-   #98 = Utf8               isPropagateClose\n-   #99 = Utf8               readlimit\n-  #100 = Utf8               I\n-  #101 = Utf8               result\n-  #102 = Utf8               ([B)I\n-  #103 = Utf8               b\n-  #104 = Utf8               [B\n-  #105 = Utf8               off\n-  #106 = Utf8               len\n-  #107 = Utf8               maxRead\n-  #108 = Utf8               bytesRead\n-  #109 = Utf8               setPropagateClose\n-  #110 = Utf8               (Z)V\n-  #111 = Utf8               n\n-  #112 = Utf8               toSkip\n-  #113 = Utf8               skippedBytes\n-  #114 = Utf8               SourceFile\n-  #115 = Utf8               BoundedInputStream.java\n+    #1 = Class              #2            // org/apache/commons/io/input/BoundedInputStream\n+    #2 = Utf8               org/apache/commons/io/input/BoundedInputStream\n+    #3 = Class              #4            // java/io/FilterInputStream\n+    #4 = Utf8               java/io/FilterInputStream\n+    #5 = Utf8               maxCount\n+    #6 = Utf8               J\n+    #7 = Utf8               count\n+    #8 = Utf8               mark\n+    #9 = Utf8               propagateClose\n+   #10 = Utf8               Z\n+   #11 = Utf8               <init>\n+   #12 = Utf8               (Ljava/io/InputStream;)V\n+   #13 = Utf8               Code\n+   #14 = Long               -1l\n+   #16 = Methodref          #1.#17        // org/apache/commons/io/input/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n+   #17 = NameAndType        #11:#18       // \"<init>\":(Ljava/io/InputStream;J)V\n+   #18 = Utf8               (Ljava/io/InputStream;J)V\n+   #19 = Utf8               LineNumberTable\n+   #20 = Utf8               LocalVariableTable\n+   #21 = Utf8               this\n+   #22 = Utf8               Lorg/apache/commons/io/input/BoundedInputStream;\n+   #23 = Utf8               in\n+   #24 = Utf8               Ljava/io/InputStream;\n+   #25 = Methodref          #3.#26        // java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #26 = NameAndType        #11:#12       // \"<init>\":(Ljava/io/InputStream;)V\n+   #27 = Fieldref           #1.#28        // org/apache/commons/io/input/BoundedInputStream.mark:J\n+   #28 = NameAndType        #8:#6         // mark:J\n+   #29 = Fieldref           #1.#30        // org/apache/commons/io/input/BoundedInputStream.propagateClose:Z\n+   #30 = NameAndType        #9:#10        // propagateClose:Z\n+   #31 = Fieldref           #1.#32        // org/apache/commons/io/input/BoundedInputStream.maxCount:J\n+   #32 = NameAndType        #5:#6         // maxCount:J\n+   #33 = Utf8               inputStream\n+   #34 = Utf8               maxLength\n+   #35 = Utf8               available\n+   #36 = Utf8               ()I\n+   #37 = Utf8               Exceptions\n+   #38 = Class              #39           // java/io/IOException\n+   #39 = Utf8               java/io/IOException\n+   #40 = Methodref          #1.#41        // org/apache/commons/io/input/BoundedInputStream.isMaxLength:()Z\n+   #41 = NameAndType        #42:#43       // isMaxLength:()Z\n+   #42 = Utf8               isMaxLength\n+   #43 = Utf8               ()Z\n+   #44 = Fieldref           #1.#45        // org/apache/commons/io/input/BoundedInputStream.count:J\n+   #45 = NameAndType        #7:#6         // count:J\n+   #46 = Methodref          #1.#47        // org/apache/commons/io/input/BoundedInputStream.onMaxLength:(JJ)V\n+   #47 = NameAndType        #48:#49       // onMaxLength:(JJ)V\n+   #48 = Utf8               onMaxLength\n+   #49 = Utf8               (JJ)V\n+   #50 = Fieldref           #1.#51        // org/apache/commons/io/input/BoundedInputStream.in:Ljava/io/InputStream;\n+   #51 = NameAndType        #23:#24       // in:Ljava/io/InputStream;\n+   #52 = Methodref          #53.#55       // java/io/InputStream.available:()I\n+   #53 = Class              #54           // java/io/InputStream\n+   #54 = Utf8               java/io/InputStream\n+   #55 = NameAndType        #35:#36       // available:()I\n+   #56 = Utf8               StackMapTable\n+   #57 = Utf8               close\n+   #58 = Utf8               ()V\n+   #59 = Methodref          #53.#60       // java/io/InputStream.close:()V\n+   #60 = NameAndType        #57:#58       // close:()V\n+   #61 = Utf8               getCount\n+   #62 = Utf8               ()J\n+   #63 = Utf8               getMaxLength\n+   #64 = Utf8               isPropagateClose\n+   #65 = Utf8               (I)V\n+   #66 = Methodref          #53.#67       // java/io/InputStream.mark:(I)V\n+   #67 = NameAndType        #8:#65        // mark:(I)V\n+   #68 = Utf8               readlimit\n+   #69 = Utf8               I\n+   #70 = Utf8               markSupported\n+   #71 = Methodref          #53.#72       // java/io/InputStream.markSupported:()Z\n+   #72 = NameAndType        #70:#43       // markSupported:()Z\n+   #73 = Utf8               read\n+   #74 = Methodref          #53.#75       // java/io/InputStream.read:()I\n+   #75 = NameAndType        #73:#36       // read:()I\n+   #76 = Utf8               result\n+   #77 = Utf8               ([B)I\n+   #78 = Methodref          #1.#79        // org/apache/commons/io/input/BoundedInputStream.read:([BII)I\n+   #79 = NameAndType        #73:#80       // read:([BII)I\n+   #80 = Utf8               ([BII)I\n+   #81 = Utf8               b\n+   #82 = Utf8               [B\n+   #83 = Methodref          #84.#86       // java/lang/Math.min:(JJ)J\n+   #84 = Class              #85           // java/lang/Math\n+   #85 = Utf8               java/lang/Math\n+   #86 = NameAndType        #87:#88       // min:(JJ)J\n+   #87 = Utf8               min\n+   #88 = Utf8               (JJ)J\n+   #89 = Methodref          #53.#79       // java/io/InputStream.read:([BII)I\n+   #90 = Utf8               off\n+   #91 = Utf8               len\n+   #92 = Utf8               maxRead\n+   #93 = Utf8               bytesRead\n+   #94 = Utf8               reset\n+   #95 = Methodref          #53.#96       // java/io/InputStream.reset:()V\n+   #96 = NameAndType        #94:#58       // reset:()V\n+   #97 = Utf8               setPropagateClose\n+   #98 = Utf8               (Z)V\n+   #99 = Utf8               skip\n+  #100 = Utf8               (J)J\n+  #101 = Methodref          #53.#102      // java/io/InputStream.skip:(J)J\n+  #102 = NameAndType        #99:#100      // skip:(J)J\n+  #103 = Utf8               n\n+  #104 = Utf8               toSkip\n+  #105 = Utf8               skippedBytes\n+  #106 = Utf8               toString\n+  #107 = Utf8               ()Ljava/lang/String;\n+  #108 = Methodref          #109.#111     // java/lang/Object.toString:()Ljava/lang/String;\n+  #109 = Class              #110          // java/lang/Object\n+  #110 = Utf8               java/lang/Object\n+  #111 = NameAndType        #106:#107     // toString:()Ljava/lang/String;\n+  #112 = Utf8               SourceFile\n+  #113 = Utf8               BoundedInputStream.java\n {\n   private final long maxCount;\n     descriptor: J\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private long count;\n     descriptor: J\n@@ -142,16 +140,16 @@\n   public org.apache.commons.io.input.BoundedInputStream(java.io.InputStream);\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: ldc2_w        #3                  // long -1l\n-         5: invokespecial #5                  // Method \"<init>\":(Ljava/io/InputStream;J)V\n+         2: ldc2_w        #14                 // long -1l\n+         5: invokespecial #16                 // Method \"<init>\":(Ljava/io/InputStream;J)V\n          8: return\n       LineNumberTable:\n         line 56: 0\n         line 57: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/BoundedInputStream;\n@@ -160,24 +158,24 @@\n   public org.apache.commons.io.input.BoundedInputStream(java.io.InputStream, long);\n     descriptor: (Ljava/io/InputStream;J)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #11                 // Method java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+         2: invokespecial #25                 // Method java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n          5: aload_0\n-         6: ldc2_w        #3                  // long -1l\n-         9: putfield      #16                 // Field mark:J\n+         6: ldc2_w        #14                 // long -1l\n+         9: putfield      #27                 // Field mark:J\n         12: aload_0\n         13: iconst_1\n-        14: putfield      #20                 // Field propagateClose:Z\n+        14: putfield      #29                 // Field propagateClose:Z\n         17: aload_0\n         18: lload_2\n-        19: putfield      #24                 // Field maxCount:J\n+        19: putfield      #31                 // Field maxCount:J\n         22: return\n       LineNumberTable:\n         line 69: 0\n         line 44: 5\n         line 47: 12\n         line 70: 17\n         line 71: 22\n@@ -186,153 +184,151 @@\n             0      23     0  this   Lorg/apache/commons/io/input/BoundedInputStream;\n             0      23     1 inputStream   Ljava/io/InputStream;\n             0      23     2 maxLength   J\n \n   public int available() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #27                 // Method isMaxLength:()Z\n+         1: invokespecial #40                 // Method isMaxLength:()Z\n          4: ifeq          21\n          7: aload_0\n          8: aload_0\n-         9: getfield      #24                 // Field maxCount:J\n+         9: getfield      #31                 // Field maxCount:J\n         12: aload_0\n-        13: getfield      #31                 // Field count:J\n-        16: invokevirtual #34                 // Method onMaxLength:(JJ)V\n+        13: getfield      #44                 // Field count:J\n+        16: invokevirtual #46                 // Method onMaxLength:(JJ)V\n         19: iconst_0\n         20: ireturn\n         21: aload_0\n-        22: getfield      #38                 // Field in:Ljava/io/InputStream;\n-        25: invokevirtual #42                 // Method java/io/InputStream.available:()I\n+        22: getfield      #50                 // Field in:Ljava/io/InputStream;\n+        25: invokevirtual #52                 // Method java/io/InputStream.available:()I\n         28: ireturn\n       LineNumberTable:\n         line 78: 0\n         line 79: 7\n         line 80: 19\n         line 82: 21\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      29     0  this   Lorg/apache/commons/io/input/BoundedInputStream;\n       StackMapTable: number_of_entries = 1\n         frame_type = 21 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #20                 // Field propagateClose:Z\n+         1: getfield      #29                 // Field propagateClose:Z\n          4: ifeq          14\n          7: aload_0\n-         8: getfield      #38                 // Field in:Ljava/io/InputStream;\n-        11: invokevirtual #48                 // Method java/io/InputStream.close:()V\n+         8: getfield      #50                 // Field in:Ljava/io/InputStream;\n+        11: invokevirtual #59                 // Method java/io/InputStream.close:()V\n         14: return\n       LineNumberTable:\n         line 93: 0\n         line 94: 7\n         line 96: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/input/BoundedInputStream;\n       StackMapTable: number_of_entries = 1\n         frame_type = 14 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public long getCount();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #31                 // Field count:J\n+         1: getfield      #44                 // Field count:J\n          4: lreturn\n       LineNumberTable:\n         line 105: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/input/BoundedInputStream;\n \n   public long getMaxLength();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #24                 // Field maxCount:J\n+         1: getfield      #31                 // Field maxCount:J\n          4: lreturn\n       LineNumberTable:\n         line 115: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/input/BoundedInputStream;\n \n   private boolean isMaxLength();\n     descriptor: ()Z\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #24                 // Field maxCount:J\n+         1: getfield      #31                 // Field maxCount:J\n          4: lconst_0\n          5: lcmp\n-         6: iflt          25\n+         6: iflt          23\n          9: aload_0\n-        10: getfield      #31                 // Field count:J\n+        10: getfield      #44                 // Field count:J\n         13: aload_0\n-        14: getfield      #24                 // Field maxCount:J\n+        14: getfield      #31                 // Field maxCount:J\n         17: lcmp\n-        18: iflt          25\n+        18: iflt          23\n         21: iconst_1\n-        22: goto          26\n-        25: iconst_0\n-        26: ireturn\n+        22: ireturn\n+        23: iconst_0\n+        24: ireturn\n       LineNumberTable:\n         line 119: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      27     0  this   Lorg/apache/commons/io/input/BoundedInputStream;\n-      StackMapTable: number_of_entries = 2\n-        frame_type = 25 /* same */\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n+            0      25     0  this   Lorg/apache/commons/io/input/BoundedInputStream;\n+      StackMapTable: number_of_entries = 1\n+        frame_type = 23 /* same */\n \n   public boolean isPropagateClose();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #20                 // Field propagateClose:Z\n+         1: getfield      #29                 // Field propagateClose:Z\n          4: ireturn\n       LineNumberTable:\n         line 131: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/input/BoundedInputStream;\n \n   public synchronized void mark(int);\n     descriptor: (I)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #38                 // Field in:Ljava/io/InputStream;\n+         1: getfield      #50                 // Field in:Ljava/io/InputStream;\n          4: iload_1\n-         5: invokevirtual #52                 // Method java/io/InputStream.mark:(I)V\n+         5: invokevirtual #66                 // Method java/io/InputStream.mark:(I)V\n          8: aload_0\n          9: aload_0\n-        10: getfield      #31                 // Field count:J\n-        13: putfield      #16                 // Field mark:J\n+        10: getfield      #44                 // Field count:J\n+        13: putfield      #27                 // Field mark:J\n         16: return\n       LineNumberTable:\n         line 141: 0\n         line 142: 8\n         line 143: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -341,65 +337,67 @@\n \n   public boolean markSupported();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #38                 // Field in:Ljava/io/InputStream;\n-         4: invokevirtual #55                 // Method java/io/InputStream.markSupported:()Z\n+         1: getfield      #50                 // Field in:Ljava/io/InputStream;\n+         4: invokevirtual #71                 // Method java/io/InputStream.markSupported:()Z\n          7: ireturn\n       LineNumberTable:\n         line 152: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/input/BoundedInputStream;\n \n   protected void onMaxLength(long, long) throws java.io.IOException;\n     descriptor: (JJ)V\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=0, locals=5, args_size=3\n          0: return\n       LineNumberTable:\n         line 165: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/input/BoundedInputStream;\n             0       1     1 maxLength   J\n             0       1     3 count   J\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #27                 // Method isMaxLength:()Z\n+         1: invokespecial #40                 // Method isMaxLength:()Z\n          4: ifeq          21\n          7: aload_0\n          8: aload_0\n-         9: getfield      #24                 // Field maxCount:J\n+         9: getfield      #31                 // Field maxCount:J\n         12: aload_0\n-        13: getfield      #31                 // Field count:J\n-        16: invokevirtual #34                 // Method onMaxLength:(JJ)V\n+        13: getfield      #44                 // Field count:J\n+        16: invokevirtual #46                 // Method onMaxLength:(JJ)V\n         19: iconst_m1\n         20: ireturn\n         21: aload_0\n-        22: getfield      #38                 // Field in:Ljava/io/InputStream;\n-        25: invokevirtual #58                 // Method java/io/InputStream.read:()I\n+        22: getfield      #50                 // Field in:Ljava/io/InputStream;\n+        25: invokevirtual #74                 // Method java/io/InputStream.read:()I\n         28: istore_1\n         29: aload_0\n         30: dup\n-        31: getfield      #31                 // Field count:J\n+        31: getfield      #44                 // Field count:J\n         34: lconst_1\n         35: ladd\n-        36: putfield      #31                 // Field count:J\n+        36: putfield      #44                 // Field count:J\n         39: iload_1\n         40: ireturn\n       LineNumberTable:\n         line 177: 0\n         line 178: 7\n         line 179: 19\n         line 181: 21\n@@ -407,91 +405,91 @@\n         line 183: 39\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      41     0  this   Lorg/apache/commons/io/input/BoundedInputStream;\n            29      12     1 result   I\n       StackMapTable: number_of_entries = 1\n         frame_type = 21 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(byte[]) throws java.io.IOException;\n     descriptor: ([B)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #61                 // Method read:([BII)I\n+         5: invokevirtual #78                 // Method read:([BII)I\n          8: ireturn\n       LineNumberTable:\n         line 196: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/BoundedInputStream;\n             0       9     1     b   [B\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=6, locals=7, args_size=4\n          0: aload_0\n-         1: invokespecial #27                 // Method isMaxLength:()Z\n+         1: invokespecial #40                 // Method isMaxLength:()Z\n          4: ifeq          21\n          7: aload_0\n          8: aload_0\n-         9: getfield      #24                 // Field maxCount:J\n+         9: getfield      #31                 // Field maxCount:J\n         12: aload_0\n-        13: getfield      #31                 // Field count:J\n-        16: invokevirtual #34                 // Method onMaxLength:(JJ)V\n+        13: getfield      #44                 // Field count:J\n+        16: invokevirtual #46                 // Method onMaxLength:(JJ)V\n         19: iconst_m1\n         20: ireturn\n         21: aload_0\n-        22: getfield      #24                 // Field maxCount:J\n+        22: getfield      #31                 // Field maxCount:J\n         25: lconst_0\n         26: lcmp\n         27: iflt          47\n         30: iload_3\n         31: i2l\n         32: aload_0\n-        33: getfield      #24                 // Field maxCount:J\n+        33: getfield      #31                 // Field maxCount:J\n         36: aload_0\n-        37: getfield      #31                 // Field count:J\n+        37: getfield      #44                 // Field count:J\n         40: lsub\n-        41: invokestatic  #64                 // Method java/lang/Math.min:(JJ)J\n+        41: invokestatic  #83                 // Method java/lang/Math.min:(JJ)J\n         44: goto          49\n         47: iload_3\n         48: i2l\n         49: lstore        4\n         51: aload_0\n-        52: getfield      #38                 // Field in:Ljava/io/InputStream;\n+        52: getfield      #50                 // Field in:Ljava/io/InputStream;\n         55: aload_1\n         56: iload_2\n         57: lload         4\n         59: l2i\n-        60: invokevirtual #70                 // Method java/io/InputStream.read:([BII)I\n+        60: invokevirtual #89                 // Method java/io/InputStream.read:([BII)I\n         63: istore        6\n         65: iload         6\n         67: iconst_m1\n         68: if_icmpne     73\n         71: iconst_m1\n         72: ireturn\n         73: aload_0\n         74: dup\n-        75: getfield      #31                 // Field count:J\n+        75: getfield      #44                 // Field count:J\n         78: iload         6\n         80: i2l\n         81: ladd\n-        82: putfield      #31                 // Field count:J\n+        82: putfield      #44                 // Field count:J\n         85: iload         6\n         87: ireturn\n       LineNumberTable:\n         line 211: 0\n         line 212: 7\n         line 213: 19\n         line 215: 21\n@@ -512,88 +510,88 @@\n         frame_type = 21 /* same */\n         frame_type = 25 /* same */\n         frame_type = 65 /* same_locals_1_stack_item */\n           stack = [ long ]\n         frame_type = 253 /* append */\n           offset_delta = 23\n           locals = [ long, int ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public synchronized void reset() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #38                 // Field in:Ljava/io/InputStream;\n-         4: invokevirtual #71                 // Method java/io/InputStream.reset:()V\n+         1: getfield      #50                 // Field in:Ljava/io/InputStream;\n+         4: invokevirtual #95                 // Method java/io/InputStream.reset:()V\n          7: aload_0\n          8: aload_0\n-         9: getfield      #16                 // Field mark:J\n-        12: putfield      #31                 // Field count:J\n+         9: getfield      #27                 // Field mark:J\n+        12: putfield      #44                 // Field count:J\n         15: return\n       LineNumberTable:\n         line 233: 0\n         line 234: 7\n         line 235: 15\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0  this   Lorg/apache/commons/io/input/BoundedInputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void setPropagateClose(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #20                 // Field propagateClose:Z\n+         2: putfield      #29                 // Field propagateClose:Z\n          5: return\n       LineNumberTable:\n         line 247: 0\n         line 248: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/input/BoundedInputStream;\n             0       6     1 propagateClose   Z\n \n   public long skip(long) throws java.io.IOException;\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=6, locals=7, args_size=2\n          0: aload_0\n-         1: getfield      #24                 // Field maxCount:J\n+         1: getfield      #31                 // Field maxCount:J\n          4: lconst_0\n          5: lcmp\n          6: iflt          25\n          9: lload_1\n         10: aload_0\n-        11: getfield      #24                 // Field maxCount:J\n+        11: getfield      #31                 // Field maxCount:J\n         14: aload_0\n-        15: getfield      #31                 // Field count:J\n+        15: getfield      #44                 // Field count:J\n         18: lsub\n-        19: invokestatic  #64                 // Method java/lang/Math.min:(JJ)J\n+        19: invokestatic  #83                 // Method java/lang/Math.min:(JJ)J\n         22: goto          26\n         25: lload_1\n         26: lstore_3\n         27: aload_0\n-        28: getfield      #38                 // Field in:Ljava/io/InputStream;\n+        28: getfield      #50                 // Field in:Ljava/io/InputStream;\n         31: lload_3\n-        32: invokevirtual #74                 // Method java/io/InputStream.skip:(J)J\n+        32: invokevirtual #101                // Method java/io/InputStream.skip:(J)J\n         35: lstore        5\n         37: aload_0\n         38: dup\n-        39: getfield      #31                 // Field count:J\n+        39: getfield      #44                 // Field count:J\n         42: lload         5\n         44: ladd\n-        45: putfield      #31                 // Field count:J\n+        45: putfield      #44                 // Field count:J\n         48: lload         5\n         50: lreturn\n       LineNumberTable:\n         line 259: 0\n         line 260: 27\n         line 261: 37\n         line 262: 48\n@@ -603,25 +601,23 @@\n             0      51     1     n   J\n            27      24     3 toSkip   J\n            37      14     5 skippedBytes   J\n       StackMapTable: number_of_entries = 2\n         frame_type = 25 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ long ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #38                 // Field in:Ljava/io/InputStream;\n-         4: invokevirtual #78                 // Method java/lang/Object.toString:()Ljava/lang/String;\n+         1: getfield      #50                 // Field in:Ljava/io/InputStream;\n+         4: invokevirtual #108                // Method java/lang/Object.toString:()Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 272: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/input/BoundedInputStream;\n }\n"}]}
