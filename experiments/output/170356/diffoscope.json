{"diffoscope-json-version": 1, "source1": "first/Property.class", "source2": "second/Property.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,40 +1,40 @@\n-  SHA-256 checksum 94d6b07690d9c2b9183f9994036675aa6e505d801d6293a72b6f94bf90f5efcc\n+  SHA-256 checksum 23ad93f177bfde1f3f627aa95f6ec1f91fc61a5a355094f130e37a5bbc57cdf9\n   Compiled from \"Property.java\"\n public class org.json.Property\n   minor version: 0\n   major version: 50\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #22                         // org/json/Property\n   super_class: #23                        // java/lang/Object\n   interfaces: 0, fields: 0, methods: 3, attributes: 1\n Constant pool:\n-    #1 = Methodref          #23.#57       // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #58           // org/json/JSONObject\n-    #3 = Methodref          #2.#57        // org/json/JSONObject.\"<init>\":()V\n-    #4 = Methodref          #11.#59       // java/util/Properties.isEmpty:()Z\n-    #5 = Methodref          #11.#60       // java/util/Properties.propertyNames:()Ljava/util/Enumeration;\n-    #6 = InterfaceMethodref #61.#62       // java/util/Enumeration.hasMoreElements:()Z\n-    #7 = InterfaceMethodref #61.#63       // java/util/Enumeration.nextElement:()Ljava/lang/Object;\n-    #8 = Class              #64           // java/lang/String\n-    #9 = Methodref          #11.#65       // java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-   #10 = Methodref          #2.#66        // org/json/JSONObject.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n-   #11 = Class              #67           // java/util/Properties\n-   #12 = Methodref          #11.#57       // java/util/Properties.\"<init>\":()V\n-   #13 = Methodref          #2.#68        // org/json/JSONObject.keySet:()Ljava/util/Set;\n-   #14 = InterfaceMethodref #69.#70       // java/util/Set.iterator:()Ljava/util/Iterator;\n-   #15 = InterfaceMethodref #71.#72       // java/util/Iterator.hasNext:()Z\n-   #16 = InterfaceMethodref #71.#73       // java/util/Iterator.next:()Ljava/lang/Object;\n-   #17 = Methodref          #2.#74        // org/json/JSONObject.opt:(Ljava/lang/String;)Ljava/lang/Object;\n-   #18 = Fieldref           #2.#75        // org/json/JSONObject.NULL:Ljava/lang/Object;\n-   #19 = Methodref          #23.#76       // java/lang/Object.equals:(Ljava/lang/Object;)Z\n-   #20 = Methodref          #23.#77       // java/lang/Object.toString:()Ljava/lang/String;\n-   #21 = Methodref          #11.#78       // java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #22 = Class              #79           // org/json/Property\n-   #23 = Class              #80           // java/lang/Object\n+    #1 = Methodref          #23.#55       // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #56           // org/json/JSONObject\n+    #3 = Methodref          #2.#55        // org/json/JSONObject.\"<init>\":()V\n+    #4 = Methodref          #11.#57       // java/util/Properties.isEmpty:()Z\n+    #5 = Methodref          #11.#58       // java/util/Properties.propertyNames:()Ljava/util/Enumeration;\n+    #6 = InterfaceMethodref #44.#59       // java/util/Enumeration.hasMoreElements:()Z\n+    #7 = InterfaceMethodref #44.#60       // java/util/Enumeration.nextElement:()Ljava/lang/Object;\n+    #8 = Class              #61           // java/lang/String\n+    #9 = Methodref          #11.#62       // java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+   #10 = Methodref          #2.#63        // org/json/JSONObject.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n+   #11 = Class              #64           // java/util/Properties\n+   #12 = Methodref          #11.#55       // java/util/Properties.\"<init>\":()V\n+   #13 = Methodref          #2.#65        // org/json/JSONObject.keySet:()Ljava/util/Set;\n+   #14 = InterfaceMethodref #66.#67       // java/util/Set.iterator:()Ljava/util/Iterator;\n+   #15 = InterfaceMethodref #52.#68       // java/util/Iterator.hasNext:()Z\n+   #16 = InterfaceMethodref #52.#69       // java/util/Iterator.next:()Ljava/lang/Object;\n+   #17 = Methodref          #2.#70        // org/json/JSONObject.opt:(Ljava/lang/String;)Ljava/lang/Object;\n+   #18 = Fieldref           #2.#71        // org/json/JSONObject.NULL:Ljava/lang/Object;\n+   #19 = Methodref          #23.#72       // java/lang/Object.equals:(Ljava/lang/Object;)Z\n+   #20 = Methodref          #23.#73       // java/lang/Object.toString:()Ljava/lang/String;\n+   #21 = Methodref          #11.#74       // java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #22 = Class              #75           // org/json/Property\n+   #23 = Class              #76           // java/lang/Object\n    #24 = Utf8               <init>\n    #25 = Utf8               ()V\n    #26 = Utf8               Code\n    #27 = Utf8               LineNumberTable\n    #28 = Utf8               LocalVariableTable\n    #29 = Utf8               this\n    #30 = Utf8               Lorg/json/Property;\n@@ -47,80 +47,76 @@\n    #37 = Utf8               properties\n    #38 = Utf8               Ljava/util/Properties;\n    #39 = Utf8               jo\n    #40 = Utf8               Lorg/json/JSONObject;\n    #41 = Utf8               LocalVariableTypeTable\n    #42 = Utf8               Ljava/util/Enumeration<*>;\n    #43 = Utf8               StackMapTable\n-   #44 = Class              #58           // org/json/JSONObject\n-   #45 = Class              #81           // java/util/Enumeration\n-   #46 = Utf8               Exceptions\n-   #47 = Class              #82           // org/json/JSONException\n-   #48 = Utf8               toProperties\n-   #49 = Utf8               (Lorg/json/JSONObject;)Ljava/util/Properties;\n-   #50 = Utf8               value\n-   #51 = Utf8               Ljava/lang/Object;\n-   #52 = Utf8               key\n-   #53 = Class              #67           // java/util/Properties\n-   #54 = Class              #83           // java/util/Iterator\n-   #55 = Utf8               SourceFile\n-   #56 = Utf8               Property.java\n-   #57 = NameAndType        #24:#25       // \"<init>\":()V\n-   #58 = Utf8               org/json/JSONObject\n-   #59 = NameAndType        #84:#85       // isEmpty:()Z\n-   #60 = NameAndType        #86:#87       // propertyNames:()Ljava/util/Enumeration;\n-   #61 = Class              #81           // java/util/Enumeration\n-   #62 = NameAndType        #88:#85       // hasMoreElements:()Z\n-   #63 = NameAndType        #89:#90       // nextElement:()Ljava/lang/Object;\n-   #64 = Utf8               java/lang/String\n-   #65 = NameAndType        #91:#92       // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-   #66 = NameAndType        #93:#94       // put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n-   #67 = Utf8               java/util/Properties\n-   #68 = NameAndType        #95:#96       // keySet:()Ljava/util/Set;\n-   #69 = Class              #97           // java/util/Set\n-   #70 = NameAndType        #98:#99       // iterator:()Ljava/util/Iterator;\n-   #71 = Class              #83           // java/util/Iterator\n-   #72 = NameAndType        #100:#85      // hasNext:()Z\n-   #73 = NameAndType        #101:#90      // next:()Ljava/lang/Object;\n-   #74 = NameAndType        #102:#103     // opt:(Ljava/lang/String;)Ljava/lang/Object;\n-   #75 = NameAndType        #104:#51      // NULL:Ljava/lang/Object;\n-   #76 = NameAndType        #105:#106     // equals:(Ljava/lang/Object;)Z\n-   #77 = NameAndType        #107:#108     // toString:()Ljava/lang/String;\n-   #78 = NameAndType        #93:#109      // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #79 = Utf8               org/json/Property\n-   #80 = Utf8               java/lang/Object\n-   #81 = Utf8               java/util/Enumeration\n-   #82 = Utf8               org/json/JSONException\n-   #83 = Utf8               java/util/Iterator\n-   #84 = Utf8               isEmpty\n-   #85 = Utf8               ()Z\n-   #86 = Utf8               propertyNames\n-   #87 = Utf8               ()Ljava/util/Enumeration;\n-   #88 = Utf8               hasMoreElements\n-   #89 = Utf8               nextElement\n-   #90 = Utf8               ()Ljava/lang/Object;\n-   #91 = Utf8               getProperty\n-   #92 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-   #93 = Utf8               put\n-   #94 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n-   #95 = Utf8               keySet\n-   #96 = Utf8               ()Ljava/util/Set;\n-   #97 = Utf8               java/util/Set\n-   #98 = Utf8               iterator\n-   #99 = Utf8               ()Ljava/util/Iterator;\n-  #100 = Utf8               hasNext\n-  #101 = Utf8               next\n-  #102 = Utf8               opt\n-  #103 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;\n-  #104 = Utf8               NULL\n-  #105 = Utf8               equals\n-  #106 = Utf8               (Ljava/lang/Object;)Z\n-  #107 = Utf8               toString\n-  #108 = Utf8               ()Ljava/lang/String;\n-  #109 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #44 = Class              #77           // java/util/Enumeration\n+   #45 = Utf8               Exceptions\n+   #46 = Class              #78           // org/json/JSONException\n+   #47 = Utf8               toProperties\n+   #48 = Utf8               (Lorg/json/JSONObject;)Ljava/util/Properties;\n+   #49 = Utf8               value\n+   #50 = Utf8               Ljava/lang/Object;\n+   #51 = Utf8               key\n+   #52 = Class              #79           // java/util/Iterator\n+   #53 = Utf8               SourceFile\n+   #54 = Utf8               Property.java\n+   #55 = NameAndType        #24:#25       // \"<init>\":()V\n+   #56 = Utf8               org/json/JSONObject\n+   #57 = NameAndType        #80:#81       // isEmpty:()Z\n+   #58 = NameAndType        #82:#83       // propertyNames:()Ljava/util/Enumeration;\n+   #59 = NameAndType        #84:#81       // hasMoreElements:()Z\n+   #60 = NameAndType        #85:#86       // nextElement:()Ljava/lang/Object;\n+   #61 = Utf8               java/lang/String\n+   #62 = NameAndType        #87:#88       // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+   #63 = NameAndType        #89:#90       // put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n+   #64 = Utf8               java/util/Properties\n+   #65 = NameAndType        #91:#92       // keySet:()Ljava/util/Set;\n+   #66 = Class              #93           // java/util/Set\n+   #67 = NameAndType        #94:#95       // iterator:()Ljava/util/Iterator;\n+   #68 = NameAndType        #96:#81       // hasNext:()Z\n+   #69 = NameAndType        #97:#86       // next:()Ljava/lang/Object;\n+   #70 = NameAndType        #98:#99       // opt:(Ljava/lang/String;)Ljava/lang/Object;\n+   #71 = NameAndType        #100:#50      // NULL:Ljava/lang/Object;\n+   #72 = NameAndType        #101:#102     // equals:(Ljava/lang/Object;)Z\n+   #73 = NameAndType        #103:#104     // toString:()Ljava/lang/String;\n+   #74 = NameAndType        #89:#105      // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #75 = Utf8               org/json/Property\n+   #76 = Utf8               java/lang/Object\n+   #77 = Utf8               java/util/Enumeration\n+   #78 = Utf8               org/json/JSONException\n+   #79 = Utf8               java/util/Iterator\n+   #80 = Utf8               isEmpty\n+   #81 = Utf8               ()Z\n+   #82 = Utf8               propertyNames\n+   #83 = Utf8               ()Ljava/util/Enumeration;\n+   #84 = Utf8               hasMoreElements\n+   #85 = Utf8               nextElement\n+   #86 = Utf8               ()Ljava/lang/Object;\n+   #87 = Utf8               getProperty\n+   #88 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+   #89 = Utf8               put\n+   #90 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n+   #91 = Utf8               keySet\n+   #92 = Utf8               ()Ljava/util/Set;\n+   #93 = Utf8               java/util/Set\n+   #94 = Utf8               iterator\n+   #95 = Utf8               ()Ljava/util/Iterator;\n+   #96 = Utf8               hasNext\n+   #97 = Utf8               next\n+   #98 = Utf8               opt\n+   #99 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;\n+  #100 = Utf8               NULL\n+  #101 = Utf8               equals\n+  #102 = Utf8               (Ljava/lang/Object;)Z\n+  #103 = Utf8               toString\n+  #104 = Utf8               ()Ljava/lang/String;\n+  #105 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n {\n   public org.json.Property();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n"}]}
