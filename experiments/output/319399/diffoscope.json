{"diffoscope-json-version": 1, "source1": "first/DotTerminatedMessageReader.class", "source2": "second/DotTerminatedMessageReader.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,108 +1,108 @@\n-  SHA-256 checksum f740309c8375c18d405ea23c4d1cf9ca40898f22b8bd3db77da8af357a3d4f1a\n+  SHA-256 checksum 7fa2f48a6b874a51a63ec6fc39c92903536864f446f807cfc25b01f64642e3d0\n   Compiled from \"DotTerminatedMessageReader.java\"\n public final class org.apache.commons.net.io.DotTerminatedMessageReader extends java.io.BufferedReader\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #8                          // org/apache/commons/net/io/DotTerminatedMessageReader\n-  super_class: #20                        // java/io/BufferedReader\n+  super_class: #2                         // java/io/BufferedReader\n   interfaces: 0, fields: 6, methods: 6, attributes: 1\n Constant pool:\n-   #1 = Methodref          #20.#55        // java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n-   #2 = Fieldref           #8.#56         // org/apache/commons/net/io/DotTerminatedMessageReader.atBeginning:Z\n-   #3 = Fieldref           #8.#57         // org/apache/commons/net/io/DotTerminatedMessageReader.eof:Z\n-   #4 = Fieldref           #8.#58         // org/apache/commons/net/io/DotTerminatedMessageReader.lock:Ljava/lang/Object;\n-   #5 = Methodref          #8.#59         // org/apache/commons/net/io/DotTerminatedMessageReader.read:()I\n-   #6 = Class              #60            // org/apache/commons/net/util/NetConstants\n-   #7 = Methodref          #20.#59        // java/io/BufferedReader.read:()I\n-   #8 = Class              #61            // org/apache/commons/net/io/DotTerminatedMessageReader\n-   #9 = Methodref          #8.#62         // org/apache/commons/net/io/DotTerminatedMessageReader.mark:(I)V\n-  #10 = Methodref          #8.#63         // org/apache/commons/net/io/DotTerminatedMessageReader.reset:()V\n-  #11 = Fieldref           #8.#64         // org/apache/commons/net/io/DotTerminatedMessageReader.seenCR:Z\n-  #12 = Methodref          #8.#65         // org/apache/commons/net/io/DotTerminatedMessageReader.read:([CII)I\n-  #13 = Class              #66            // java/lang/StringBuilder\n-  #14 = Methodref          #13.#67        // java/lang/StringBuilder.\"<init>\":()V\n-  #15 = Methodref          #13.#68        // java/lang/StringBuilder.length:()I\n-  #16 = Methodref          #13.#69        // java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n-  #17 = Methodref          #13.#70        // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-  #18 = Methodref          #13.#71        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #19 = Methodref          #52.#72        // java/lang/String.isEmpty:()Z\n-  #20 = Class              #73            // java/io/BufferedReader\n-  #21 = Utf8               LF\n-  #22 = Utf8               C\n-  #23 = Utf8               ConstantValue\n-  #24 = Integer            10\n-  #25 = Utf8               CR\n-  #26 = Integer            13\n-  #27 = Utf8               DOT\n-  #28 = Utf8               I\n-  #29 = Integer            46\n-  #30 = Utf8               atBeginning\n-  #31 = Utf8               Z\n-  #32 = Utf8               eof\n-  #33 = Utf8               seenCR\n-  #34 = Utf8               <init>\n-  #35 = Utf8               (Ljava/io/Reader;)V\n-  #36 = Utf8               Code\n-  #37 = Utf8               LineNumberTable\n-  #38 = Utf8               close\n-  #39 = Utf8               ()V\n-  #40 = Utf8               StackMapTable\n-  #41 = Class              #74            // java/lang/Object\n-  #42 = Class              #75            // java/lang/Throwable\n-  #43 = Utf8               Exceptions\n-  #44 = Class              #76            // java/io/IOException\n-  #45 = Utf8               read\n-  #46 = Utf8               ()I\n-  #47 = Utf8               ([C)I\n-  #48 = Utf8               ([CII)I\n-  #49 = Class              #77            // \"[C\"\n-  #50 = Utf8               readLine\n-  #51 = Utf8               ()Ljava/lang/String;\n-  #52 = Class              #78            // java/lang/String\n-  #53 = Utf8               SourceFile\n-  #54 = Utf8               DotTerminatedMessageReader.java\n-  #55 = NameAndType        #34:#35        // \"<init>\":(Ljava/io/Reader;)V\n-  #56 = NameAndType        #30:#31        // atBeginning:Z\n-  #57 = NameAndType        #32:#31        // eof:Z\n-  #58 = NameAndType        #79:#80        // lock:Ljava/lang/Object;\n-  #59 = NameAndType        #45:#46        // read:()I\n-  #60 = Utf8               org/apache/commons/net/util/NetConstants\n-  #61 = Utf8               org/apache/commons/net/io/DotTerminatedMessageReader\n-  #62 = NameAndType        #81:#82        // mark:(I)V\n-  #63 = NameAndType        #83:#39        // reset:()V\n-  #64 = NameAndType        #33:#31        // seenCR:Z\n-  #65 = NameAndType        #45:#48        // read:([CII)I\n-  #66 = Utf8               java/lang/StringBuilder\n-  #67 = NameAndType        #34:#39        // \"<init>\":()V\n-  #68 = NameAndType        #84:#46        // length:()I\n-  #69 = NameAndType        #85:#86        // substring:(II)Ljava/lang/String;\n-  #70 = NameAndType        #87:#88        // append:(C)Ljava/lang/StringBuilder;\n-  #71 = NameAndType        #89:#51        // toString:()Ljava/lang/String;\n-  #72 = NameAndType        #90:#91        // isEmpty:()Z\n-  #73 = Utf8               java/io/BufferedReader\n-  #74 = Utf8               java/lang/Object\n-  #75 = Utf8               java/lang/Throwable\n-  #76 = Utf8               java/io/IOException\n-  #77 = Utf8               [C\n-  #78 = Utf8               java/lang/String\n-  #79 = Utf8               lock\n-  #80 = Utf8               Ljava/lang/Object;\n-  #81 = Utf8               mark\n-  #82 = Utf8               (I)V\n-  #83 = Utf8               reset\n-  #84 = Utf8               length\n-  #85 = Utf8               substring\n-  #86 = Utf8               (II)Ljava/lang/String;\n-  #87 = Utf8               append\n-  #88 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #89 = Utf8               toString\n-  #90 = Utf8               isEmpty\n-  #91 = Utf8               ()Z\n+   #1 = Methodref          #2.#3          // java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n+   #2 = Class              #4             // java/io/BufferedReader\n+   #3 = NameAndType        #5:#6          // \"<init>\":(Ljava/io/Reader;)V\n+   #4 = Utf8               java/io/BufferedReader\n+   #5 = Utf8               <init>\n+   #6 = Utf8               (Ljava/io/Reader;)V\n+   #7 = Fieldref           #8.#9          // org/apache/commons/net/io/DotTerminatedMessageReader.atBeginning:Z\n+   #8 = Class              #10            // org/apache/commons/net/io/DotTerminatedMessageReader\n+   #9 = NameAndType        #11:#12        // atBeginning:Z\n+  #10 = Utf8               org/apache/commons/net/io/DotTerminatedMessageReader\n+  #11 = Utf8               atBeginning\n+  #12 = Utf8               Z\n+  #13 = Fieldref           #8.#14         // org/apache/commons/net/io/DotTerminatedMessageReader.eof:Z\n+  #14 = NameAndType        #15:#12        // eof:Z\n+  #15 = Utf8               eof\n+  #16 = Fieldref           #8.#17         // org/apache/commons/net/io/DotTerminatedMessageReader.lock:Ljava/lang/Object;\n+  #17 = NameAndType        #18:#19        // lock:Ljava/lang/Object;\n+  #18 = Utf8               lock\n+  #19 = Utf8               Ljava/lang/Object;\n+  #20 = Methodref          #8.#21         // org/apache/commons/net/io/DotTerminatedMessageReader.read:()I\n+  #21 = NameAndType        #22:#23        // read:()I\n+  #22 = Utf8               read\n+  #23 = Utf8               ()I\n+  #24 = Class              #25            // org/apache/commons/net/util/NetConstants\n+  #25 = Utf8               org/apache/commons/net/util/NetConstants\n+  #26 = Methodref          #2.#21         // java/io/BufferedReader.read:()I\n+  #27 = Methodref          #8.#28         // org/apache/commons/net/io/DotTerminatedMessageReader.mark:(I)V\n+  #28 = NameAndType        #29:#30        // mark:(I)V\n+  #29 = Utf8               mark\n+  #30 = Utf8               (I)V\n+  #31 = Methodref          #8.#32         // org/apache/commons/net/io/DotTerminatedMessageReader.reset:()V\n+  #32 = NameAndType        #33:#34        // reset:()V\n+  #33 = Utf8               reset\n+  #34 = Utf8               ()V\n+  #35 = Fieldref           #8.#36         // org/apache/commons/net/io/DotTerminatedMessageReader.seenCR:Z\n+  #36 = NameAndType        #37:#12        // seenCR:Z\n+  #37 = Utf8               seenCR\n+  #38 = Methodref          #8.#39         // org/apache/commons/net/io/DotTerminatedMessageReader.read:([CII)I\n+  #39 = NameAndType        #22:#40        // read:([CII)I\n+  #40 = Utf8               ([CII)I\n+  #41 = Class              #42            // java/lang/StringBuilder\n+  #42 = Utf8               java/lang/StringBuilder\n+  #43 = Methodref          #41.#44        // java/lang/StringBuilder.\"<init>\":()V\n+  #44 = NameAndType        #5:#34         // \"<init>\":()V\n+  #45 = Methodref          #41.#46        // java/lang/StringBuilder.length:()I\n+  #46 = NameAndType        #47:#23        // length:()I\n+  #47 = Utf8               length\n+  #48 = Methodref          #41.#49        // java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n+  #49 = NameAndType        #50:#51        // substring:(II)Ljava/lang/String;\n+  #50 = Utf8               substring\n+  #51 = Utf8               (II)Ljava/lang/String;\n+  #52 = Methodref          #41.#53        // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+  #53 = NameAndType        #54:#55        // append:(C)Ljava/lang/StringBuilder;\n+  #54 = Utf8               append\n+  #55 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #56 = Methodref          #41.#57        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #57 = NameAndType        #58:#59        // toString:()Ljava/lang/String;\n+  #58 = Utf8               toString\n+  #59 = Utf8               ()Ljava/lang/String;\n+  #60 = Methodref          #61.#62        // java/lang/String.isEmpty:()Z\n+  #61 = Class              #63            // java/lang/String\n+  #62 = NameAndType        #64:#65        // isEmpty:()Z\n+  #63 = Utf8               java/lang/String\n+  #64 = Utf8               isEmpty\n+  #65 = Utf8               ()Z\n+  #66 = Utf8               LF\n+  #67 = Utf8               C\n+  #68 = Utf8               ConstantValue\n+  #69 = Integer            10\n+  #70 = Utf8               CR\n+  #71 = Integer            13\n+  #72 = Utf8               DOT\n+  #73 = Utf8               I\n+  #74 = Integer            46\n+  #75 = Utf8               Code\n+  #76 = Utf8               LineNumberTable\n+  #77 = Utf8               close\n+  #78 = Utf8               StackMapTable\n+  #79 = Class              #80            // java/lang/Object\n+  #80 = Utf8               java/lang/Object\n+  #81 = Class              #82            // java/lang/Throwable\n+  #82 = Utf8               java/lang/Throwable\n+  #83 = Utf8               Exceptions\n+  #84 = Class              #85            // java/io/IOException\n+  #85 = Utf8               java/io/IOException\n+  #86 = Utf8               ([C)I\n+  #87 = Class              #88            // \"[C\"\n+  #88 = Utf8               [C\n+  #89 = Utf8               readLine\n+  #90 = Utf8               SourceFile\n+  #91 = Utf8               DotTerminatedMessageReader.java\n {\n   private static final char LF = '\\n';\n     descriptor: C\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 10\n \n   private static final char CR = '\\r';\n@@ -133,49 +133,49 @@\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: invokespecial #1                  // Method java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n          5: aload_0\n          6: iconst_1\n-         7: putfield      #2                  // Field atBeginning:Z\n+         7: putfield      #7                  // Field atBeginning:Z\n         10: aload_0\n         11: iconst_0\n-        12: putfield      #3                  // Field eof:Z\n+        12: putfield      #13                 // Field eof:Z\n         15: return\n       LineNumberTable:\n         line 51: 0\n         line 53: 5\n         line 54: 10\n         line 55: 15\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field lock:Ljava/lang/Object;\n+         1: getfield      #16                 // Field lock:Ljava/lang/Object;\n          4: dup\n          5: astore_1\n          6: monitorenter\n          7: aload_0\n-         8: getfield      #3                  // Field eof:Z\n+         8: getfield      #13                 // Field eof:Z\n         11: ifne          25\n         14: aload_0\n-        15: invokevirtual #5                  // Method read:()I\n+        15: invokevirtual #20                 // Method read:()I\n         18: iconst_m1\n         19: if_icmpeq     25\n         22: goto          14\n         25: aload_0\n         26: iconst_1\n-        27: putfield      #3                  // Field eof:Z\n+        27: putfield      #13                 // Field eof:Z\n         30: aload_0\n         31: iconst_0\n-        32: putfield      #2                  // Field atBeginning:Z\n+        32: putfield      #7                  // Field atBeginning:Z\n         35: aload_1\n         36: monitorexit\n         37: goto          45\n         40: astore_2\n         41: aload_1\n         42: monitorexit\n         43: aload_2\n@@ -207,120 +207,120 @@\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=4, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field lock:Ljava/lang/Object;\n+         1: getfield      #16                 // Field lock:Ljava/lang/Object;\n          4: dup\n          5: astore_1\n          6: monitorenter\n          7: aload_0\n-         8: getfield      #3                  // Field eof:Z\n+         8: getfield      #13                 // Field eof:Z\n         11: ifeq          18\n         14: iconst_m1\n         15: aload_1\n         16: monitorexit\n         17: ireturn\n         18: aload_0\n-        19: invokespecial #7                  // Method java/io/BufferedReader.read:()I\n+        19: invokespecial #26                 // Method java/io/BufferedReader.read:()I\n         22: istore_2\n         23: iload_2\n         24: iconst_m1\n         25: if_icmpne     37\n         28: aload_0\n         29: iconst_1\n-        30: putfield      #3                  // Field eof:Z\n+        30: putfield      #13                 // Field eof:Z\n         33: iconst_m1\n         34: aload_1\n         35: monitorexit\n         36: ireturn\n         37: aload_0\n-        38: getfield      #2                  // Field atBeginning:Z\n+        38: getfield      #7                  // Field atBeginning:Z\n         41: ifeq          162\n         44: aload_0\n         45: iconst_0\n-        46: putfield      #2                  // Field atBeginning:Z\n+        46: putfield      #7                  // Field atBeginning:Z\n         49: iload_2\n         50: bipush        46\n         52: if_icmpne     162\n         55: aload_0\n         56: iconst_2\n-        57: invokevirtual #9                  // Method mark:(I)V\n+        57: invokevirtual #27                 // Method mark:(I)V\n         60: aload_0\n-        61: invokespecial #7                  // Method java/io/BufferedReader.read:()I\n+        61: invokespecial #26                 // Method java/io/BufferedReader.read:()I\n         64: istore_2\n         65: iload_2\n         66: lookupswitch  { // 3\n                       -1: 100\n                       13: 114\n                       46: 110\n                  default: 153\n             }\n        100: aload_0\n        101: iconst_1\n-       102: putfield      #3                  // Field eof:Z\n+       102: putfield      #13                 // Field eof:Z\n        105: bipush        46\n        107: aload_1\n        108: monitorexit\n        109: ireturn\n        110: iload_2\n        111: aload_1\n        112: monitorexit\n        113: ireturn\n        114: aload_0\n-       115: invokespecial #7                  // Method java/io/BufferedReader.read:()I\n+       115: invokespecial #26                 // Method java/io/BufferedReader.read:()I\n        118: istore_2\n        119: iload_2\n        120: iconst_m1\n        121: if_icmpne     133\n        124: aload_0\n-       125: invokevirtual #10                 // Method reset:()V\n+       125: invokevirtual #31                 // Method reset:()V\n        128: bipush        46\n        130: aload_1\n        131: monitorexit\n        132: ireturn\n        133: iload_2\n        134: bipush        10\n        136: if_icmpne     153\n        139: aload_0\n        140: iconst_1\n-       141: putfield      #2                  // Field atBeginning:Z\n+       141: putfield      #7                  // Field atBeginning:Z\n        144: aload_0\n        145: iconst_1\n-       146: putfield      #3                  // Field eof:Z\n+       146: putfield      #13                 // Field eof:Z\n        149: iconst_m1\n        150: aload_1\n        151: monitorexit\n        152: ireturn\n        153: aload_0\n-       154: invokevirtual #10                 // Method reset:()V\n+       154: invokevirtual #31                 // Method reset:()V\n        157: bipush        46\n        159: aload_1\n        160: monitorexit\n        161: ireturn\n        162: aload_0\n-       163: getfield      #11                 // Field seenCR:Z\n+       163: getfield      #35                 // Field seenCR:Z\n        166: ifeq          185\n        169: aload_0\n        170: iconst_0\n-       171: putfield      #11                 // Field seenCR:Z\n+       171: putfield      #35                 // Field seenCR:Z\n        174: iload_2\n        175: bipush        10\n        177: if_icmpne     185\n        180: aload_0\n        181: iconst_1\n-       182: putfield      #2                  // Field atBeginning:Z\n+       182: putfield      #7                  // Field atBeginning:Z\n        185: iload_2\n        186: bipush        13\n        188: if_icmpne     196\n        191: aload_0\n        192: iconst_1\n-       193: putfield      #11                 // Field seenCR:Z\n+       193: putfield      #35                 // Field seenCR:Z\n        196: iload_2\n        197: aload_1\n        198: monitorexit\n        199: ireturn\n        200: astore_3\n        201: aload_1\n        202: monitorexit\n@@ -400,15 +400,15 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #12                 // Method read:([CII)I\n+         5: invokevirtual #38                 // Method read:([CII)I\n          8: ireturn\n       LineNumberTable:\n         line 160: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int read(char[], int, int) throws java.io.IOException;\n@@ -418,20 +418,20 @@\n       stack=3, locals=8, args_size=4\n          0: iload_3\n          1: iconst_1\n          2: if_icmpge     7\n          5: iconst_0\n          6: ireturn\n          7: aload_0\n-         8: getfield      #4                  // Field lock:Ljava/lang/Object;\n+         8: getfield      #16                 // Field lock:Ljava/lang/Object;\n         11: dup\n         12: astore        5\n         14: monitorenter\n         15: aload_0\n-        16: invokevirtual #5                  // Method read:()I\n+        16: invokevirtual #20                 // Method read:()I\n         19: dup\n         20: istore        4\n         22: iconst_m1\n         23: if_icmpne     31\n         26: iconst_m1\n         27: aload         5\n         29: monitorexit\n@@ -444,15 +444,15 @@\n         39: iload         4\n         41: i2c\n         42: castore\n         43: iinc          3, -1\n         46: iload_3\n         47: ifle          61\n         50: aload_0\n-        51: invokevirtual #5                  // Method read:()I\n+        51: invokevirtual #20                 // Method read:()I\n         54: dup\n         55: istore        4\n         57: iconst_m1\n         58: if_icmpne     34\n         61: iload_2\n         62: iload         6\n         64: isub\n@@ -497,64 +497,64 @@\n       throws java.io.IOException\n \n   public java.lang.String readLine() throws java.io.IOException;\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=5, args_size=1\n-         0: new           #13                 // class java/lang/StringBuilder\n+         0: new           #41                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #14                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #43                 // Method java/lang/StringBuilder.\"<init>\":()V\n          7: astore_1\n          8: aload_0\n-         9: getfield      #4                  // Field lock:Ljava/lang/Object;\n+         9: getfield      #16                 // Field lock:Ljava/lang/Object;\n         12: dup\n         13: astore_3\n         14: monitorenter\n         15: aload_0\n-        16: invokevirtual #5                  // Method read:()I\n+        16: invokevirtual #20                 // Method read:()I\n         19: dup\n         20: istore_2\n         21: iconst_m1\n         22: if_icmpeq     62\n         25: iload_2\n         26: bipush        10\n         28: if_icmpne     52\n         31: aload_0\n-        32: getfield      #2                  // Field atBeginning:Z\n+        32: getfield      #7                  // Field atBeginning:Z\n         35: ifeq          52\n         38: aload_1\n         39: iconst_0\n         40: aload_1\n-        41: invokevirtual #15                 // Method java/lang/StringBuilder.length:()I\n+        41: invokevirtual #45                 // Method java/lang/StringBuilder.length:()I\n         44: iconst_1\n         45: isub\n-        46: invokevirtual #16                 // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n+        46: invokevirtual #48                 // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n         49: aload_3\n         50: monitorexit\n         51: areturn\n         52: aload_1\n         53: iload_2\n         54: i2c\n-        55: invokevirtual #17                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        55: invokevirtual #52                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         58: pop\n         59: goto          15\n         62: aload_3\n         63: monitorexit\n         64: goto          74\n         67: astore        4\n         69: aload_3\n         70: monitorexit\n         71: aload         4\n         73: athrow\n         74: aload_1\n-        75: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        75: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         78: astore_3\n         79: aload_3\n-        80: invokevirtual #19                 // Method java/lang/String.isEmpty:()Z\n+        80: invokevirtual #60                 // Method java/lang/String.isEmpty:()Z\n         83: ifeq          88\n         86: aconst_null\n         87: areturn\n         88: aload_3\n         89: areturn\n       Exception table:\n          from    to  target type\n"}]}
