{"diffoscope-json-version": 1, "source1": "first/AbstractByteArrayOutputStream.class", "source2": "second/AbstractByteArrayOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,241 +1,241 @@\n-  SHA-256 checksum a69f2e5c11fa8ae383c9f7c482e8745305f78fe6e35138dbaff6bd075431c20d\n+  SHA-256 checksum 6b1aa08f0e106db54263d4454b6d3ab6d16701029d52f534035c8b6e4745214e\n   Compiled from \"AbstractByteArrayOutputStream.java\"\n public abstract class org.apache.commons.io.output.AbstractByteArrayOutputStream extends java.io.OutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #38                         // org/apache/commons/io/output/AbstractByteArrayOutputStream\n-  super_class: #39                        // java/io/OutputStream\n+  this_class: #13                         // org/apache/commons/io/output/AbstractByteArrayOutputStream\n+  super_class: #4                         // java/io/OutputStream\n   interfaces: 0, fields: 7, methods: 21, attributes: 2\n Constant pool:\n-    #1 = Class              #129          // org/apache/commons/io/IOUtils\n-    #2 = Methodref          #39.#130      // java/io/OutputStream.\"<init>\":()V\n-    #3 = Class              #131          // java/util/ArrayList\n-    #4 = Methodref          #3.#130       // java/util/ArrayList.\"<init>\":()V\n-    #5 = Fieldref           #38.#132      // org/apache/commons/io/output/AbstractByteArrayOutputStream.buffers:Ljava/util/List;\n-    #6 = Fieldref           #38.#133      // org/apache/commons/io/output/AbstractByteArrayOutputStream.reuseBuffers:Z\n-    #7 = Fieldref           #38.#134      // org/apache/commons/io/output/AbstractByteArrayOutputStream.currentBufferIndex:I\n-    #8 = InterfaceMethodref #108.#135     // java/util/List.size:()I\n-    #9 = Fieldref           #38.#136      // org/apache/commons/io/output/AbstractByteArrayOutputStream.filledBufferSum:I\n-   #10 = Fieldref           #38.#137      // org/apache/commons/io/output/AbstractByteArrayOutputStream.currentBuffer:[B\n-   #11 = InterfaceMethodref #108.#138     // java/util/List.get:(I)Ljava/lang/Object;\n-   #12 = Class              #54           // \"[B\"\n-   #13 = Methodref          #139.#140     // java/lang/Math.max:(II)I\n-   #14 = Methodref          #1.#141       // org/apache/commons/io/IOUtils.byteArray:(I)[B\n-   #15 = InterfaceMethodref #108.#142     // java/util/List.add:(Ljava/lang/Object;)Z\n-   #16 = Fieldref           #38.#143      // org/apache/commons/io/output/AbstractByteArrayOutputStream.count:I\n-   #17 = Methodref          #139.#144     // java/lang/Math.min:(II)I\n-   #18 = Methodref          #145.#146     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #19 = Methodref          #38.#147      // org/apache/commons/io/output/AbstractByteArrayOutputStream.needNewBuffer:(I)V\n-   #20 = Methodref          #148.#149     // java/io/InputStream.read:([BII)I\n-   #21 = InterfaceMethodref #108.#150     // java/util/List.clear:()V\n-   #22 = InterfaceMethodref #108.#151     // java/util/List.iterator:()Ljava/util/Iterator;\n-   #23 = InterfaceMethodref #98.#152      // java/util/Iterator.hasNext:()Z\n-   #24 = InterfaceMethodref #98.#153      // java/util/Iterator.next:()Ljava/lang/Object;\n-   #25 = Methodref          #39.#154      // java/io/OutputStream.write:([BII)V\n-   #26 = Fieldref           #155.#156     // org/apache/commons/io/input/ClosedInputStream.CLOSED_INPUT_STREAM:Lorg/apache/commons/io/input/ClosedInputStream;\n-   #27 = Methodref          #3.#157       // java/util/ArrayList.\"<init>\":(I)V\n-   #28 = InterfaceMethodref #40.#158      // org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor.construct:([BII)Ljava/io/InputStream;\n-   #29 = Class              #159          // java/io/SequenceInputStream\n-   #30 = Methodref          #160.#161     // java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;\n-   #31 = Methodref          #29.#162      // java/io/SequenceInputStream.\"<init>\":(Ljava/util/Enumeration;)V\n-   #32 = Fieldref           #1.#163       // org/apache/commons/io/IOUtils.EMPTY_BYTE_ARRAY:[B\n-   #33 = Class              #164          // java/lang/String\n-   #34 = Methodref          #38.#165      // org/apache/commons/io/output/AbstractByteArrayOutputStream.toByteArray:()[B\n-   #35 = Methodref          #166.#167     // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-   #36 = Methodref          #33.#168      // java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n-   #37 = Methodref          #33.#169      // java/lang/String.\"<init>\":([BLjava/lang/String;)V\n-   #38 = Class              #170          // org/apache/commons/io/output/AbstractByteArrayOutputStream\n-   #39 = Class              #171          // java/io/OutputStream\n-   #40 = Class              #172          // org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor\n-   #41 = Utf8               InputStreamConstructor\n-   #42 = Utf8               InnerClasses\n-   #43 = Utf8               DEFAULT_SIZE\n-   #44 = Utf8               I\n-   #45 = Utf8               ConstantValue\n-   #46 = Integer            1024\n-   #47 = Utf8               buffers\n-   #48 = Utf8               Ljava/util/List;\n-   #49 = Utf8               Signature\n-   #50 = Utf8               Ljava/util/List<[B>;\n-   #51 = Utf8               currentBufferIndex\n-   #52 = Utf8               filledBufferSum\n-   #53 = Utf8               currentBuffer\n-   #54 = Utf8               [B\n-   #55 = Utf8               count\n-   #56 = Utf8               reuseBuffers\n-   #57 = Utf8               Z\n-   #58 = Utf8               <init>\n-   #59 = Utf8               ()V\n-   #60 = Utf8               Code\n-   #61 = Utf8               LineNumberTable\n-   #62 = Utf8               LocalVariableTable\n-   #63 = Utf8               this\n-   #64 = Utf8               Lorg/apache/commons/io/output/AbstractByteArrayOutputStream;\n-   #65 = Utf8               needNewBuffer\n-   #66 = Utf8               (I)V\n-   #67 = Utf8               newBufferSize\n-   #68 = Utf8               newcount\n-   #69 = Utf8               StackMapTable\n-   #70 = Utf8               write\n-   #71 = Utf8               ([BII)V\n-   #72 = Utf8               writeImpl\n-   #73 = Utf8               part\n-   #74 = Utf8               b\n-   #75 = Utf8               off\n-   #76 = Utf8               len\n-   #77 = Utf8               remaining\n-   #78 = Utf8               inBufferPos\n-   #79 = Utf8               (Ljava/io/InputStream;)I\n-   #80 = Utf8               Exceptions\n-   #81 = Class              #173          // java/io/IOException\n-   #82 = Utf8               in\n-   #83 = Utf8               Ljava/io/InputStream;\n-   #84 = Utf8               readCount\n-   #85 = Utf8               n\n-   #86 = Utf8               size\n-   #87 = Utf8               ()I\n-   #88 = Utf8               close\n-   #89 = Utf8               reset\n-   #90 = Utf8               resetImpl\n-   #91 = Utf8               writeTo\n-   #92 = Utf8               (Ljava/io/OutputStream;)V\n-   #93 = Utf8               writeToImpl\n-   #94 = Utf8               c\n-   #95 = Utf8               buf\n-   #96 = Utf8               out\n-   #97 = Utf8               Ljava/io/OutputStream;\n-   #98 = Class              #174          // java/util/Iterator\n-   #99 = Utf8               toInputStream\n-  #100 = Utf8               ()Ljava/io/InputStream;\n-  #101 = Utf8               (Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;)Ljava/io/InputStream;\n-  #102 = Utf8               isConstructor\n-  #103 = Utf8               Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;\n-  #104 = Utf8               list\n-  #105 = Utf8               LocalVariableTypeTable\n-  #106 = Utf8               Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor<TT;>;\n-  #107 = Utf8               Ljava/util/List<TT;>;\n-  #108 = Class              #175          // java/util/List\n-  #109 = Utf8               <T:Ljava/io/InputStream;>(Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor<TT;>;)Ljava/io/InputStream;\n-  #110 = Utf8               toByteArray\n-  #111 = Utf8               ()[B\n-  #112 = Utf8               toByteArrayImpl\n-  #113 = Utf8               newbuf\n-  #114 = Utf8               pos\n-  #115 = Utf8               toString\n-  #116 = Utf8               ()Ljava/lang/String;\n-  #117 = Utf8               Deprecated\n-  #118 = Utf8               RuntimeVisibleAnnotations\n-  #119 = Utf8               Ljava/lang/Deprecated;\n-  #120 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #121 = Utf8               enc\n-  #122 = Utf8               Ljava/lang/String;\n-  #123 = Class              #176          // java/io/UnsupportedEncodingException\n-  #124 = Utf8               (Ljava/nio/charset/Charset;)Ljava/lang/String;\n-  #125 = Utf8               charset\n-  #126 = Utf8               Ljava/nio/charset/Charset;\n-  #127 = Utf8               SourceFile\n-  #128 = Utf8               AbstractByteArrayOutputStream.java\n-  #129 = Utf8               org/apache/commons/io/IOUtils\n-  #130 = NameAndType        #58:#59       // \"<init>\":()V\n-  #131 = Utf8               java/util/ArrayList\n-  #132 = NameAndType        #47:#48       // buffers:Ljava/util/List;\n-  #133 = NameAndType        #56:#57       // reuseBuffers:Z\n-  #134 = NameAndType        #51:#44       // currentBufferIndex:I\n-  #135 = NameAndType        #86:#87       // size:()I\n-  #136 = NameAndType        #52:#44       // filledBufferSum:I\n-  #137 = NameAndType        #53:#54       // currentBuffer:[B\n-  #138 = NameAndType        #177:#178     // get:(I)Ljava/lang/Object;\n-  #139 = Class              #179          // java/lang/Math\n-  #140 = NameAndType        #180:#181     // max:(II)I\n-  #141 = NameAndType        #182:#183     // byteArray:(I)[B\n-  #142 = NameAndType        #184:#185     // add:(Ljava/lang/Object;)Z\n-  #143 = NameAndType        #55:#44       // count:I\n-  #144 = NameAndType        #186:#181     // min:(II)I\n-  #145 = Class              #187          // java/lang/System\n-  #146 = NameAndType        #188:#189     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #147 = NameAndType        #65:#66       // needNewBuffer:(I)V\n-  #148 = Class              #190          // java/io/InputStream\n-  #149 = NameAndType        #191:#192     // read:([BII)I\n-  #150 = NameAndType        #193:#59      // clear:()V\n-  #151 = NameAndType        #194:#195     // iterator:()Ljava/util/Iterator;\n-  #152 = NameAndType        #196:#197     // hasNext:()Z\n-  #153 = NameAndType        #198:#199     // next:()Ljava/lang/Object;\n-  #154 = NameAndType        #70:#71       // write:([BII)V\n-  #155 = Class              #200          // org/apache/commons/io/input/ClosedInputStream\n-  #156 = NameAndType        #201:#202     // CLOSED_INPUT_STREAM:Lorg/apache/commons/io/input/ClosedInputStream;\n-  #157 = NameAndType        #58:#66       // \"<init>\":(I)V\n-  #158 = NameAndType        #203:#204     // construct:([BII)Ljava/io/InputStream;\n-  #159 = Utf8               java/io/SequenceInputStream\n-  #160 = Class              #205          // java/util/Collections\n-  #161 = NameAndType        #206:#207     // enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;\n-  #162 = NameAndType        #58:#208      // \"<init>\":(Ljava/util/Enumeration;)V\n-  #163 = NameAndType        #209:#54      // EMPTY_BYTE_ARRAY:[B\n-  #164 = Utf8               java/lang/String\n-  #165 = NameAndType        #110:#111     // toByteArray:()[B\n-  #166 = Class              #210          // java/nio/charset/Charset\n-  #167 = NameAndType        #211:#212     // defaultCharset:()Ljava/nio/charset/Charset;\n-  #168 = NameAndType        #58:#213      // \"<init>\":([BLjava/nio/charset/Charset;)V\n-  #169 = NameAndType        #58:#214      // \"<init>\":([BLjava/lang/String;)V\n-  #170 = Utf8               org/apache/commons/io/output/AbstractByteArrayOutputStream\n-  #171 = Utf8               java/io/OutputStream\n-  #172 = Utf8               org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor\n-  #173 = Utf8               java/io/IOException\n-  #174 = Utf8               java/util/Iterator\n-  #175 = Utf8               java/util/List\n-  #176 = Utf8               java/io/UnsupportedEncodingException\n-  #177 = Utf8               get\n-  #178 = Utf8               (I)Ljava/lang/Object;\n-  #179 = Utf8               java/lang/Math\n-  #180 = Utf8               max\n-  #181 = Utf8               (II)I\n-  #182 = Utf8               byteArray\n-  #183 = Utf8               (I)[B\n-  #184 = Utf8               add\n-  #185 = Utf8               (Ljava/lang/Object;)Z\n-  #186 = Utf8               min\n-  #187 = Utf8               java/lang/System\n-  #188 = Utf8               arraycopy\n-  #189 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #190 = Utf8               java/io/InputStream\n-  #191 = Utf8               read\n-  #192 = Utf8               ([BII)I\n-  #193 = Utf8               clear\n-  #194 = Utf8               iterator\n-  #195 = Utf8               ()Ljava/util/Iterator;\n-  #196 = Utf8               hasNext\n-  #197 = Utf8               ()Z\n-  #198 = Utf8               next\n-  #199 = Utf8               ()Ljava/lang/Object;\n-  #200 = Utf8               org/apache/commons/io/input/ClosedInputStream\n-  #201 = Utf8               CLOSED_INPUT_STREAM\n-  #202 = Utf8               Lorg/apache/commons/io/input/ClosedInputStream;\n-  #203 = Utf8               construct\n-  #204 = Utf8               ([BII)Ljava/io/InputStream;\n-  #205 = Utf8               java/util/Collections\n-  #206 = Utf8               enumeration\n-  #207 = Utf8               (Ljava/util/Collection;)Ljava/util/Enumeration;\n-  #208 = Utf8               (Ljava/util/Enumeration;)V\n-  #209 = Utf8               EMPTY_BYTE_ARRAY\n-  #210 = Utf8               java/nio/charset/Charset\n-  #211 = Utf8               defaultCharset\n-  #212 = Utf8               ()Ljava/nio/charset/Charset;\n-  #213 = Utf8               ([BLjava/nio/charset/Charset;)V\n-  #214 = Utf8               ([BLjava/lang/String;)V\n+    #1 = Class              #2            // org/apache/commons/io/IOUtils\n+    #2 = Utf8               org/apache/commons/io/IOUtils\n+    #3 = Methodref          #4.#5         // java/io/OutputStream.\"<init>\":()V\n+    #4 = Class              #6            // java/io/OutputStream\n+    #5 = NameAndType        #7:#8         // \"<init>\":()V\n+    #6 = Utf8               java/io/OutputStream\n+    #7 = Utf8               <init>\n+    #8 = Utf8               ()V\n+    #9 = Class              #10           // java/util/ArrayList\n+   #10 = Utf8               java/util/ArrayList\n+   #11 = Methodref          #9.#5         // java/util/ArrayList.\"<init>\":()V\n+   #12 = Fieldref           #13.#14       // org/apache/commons/io/output/AbstractByteArrayOutputStream.buffers:Ljava/util/List;\n+   #13 = Class              #15           // org/apache/commons/io/output/AbstractByteArrayOutputStream\n+   #14 = NameAndType        #16:#17       // buffers:Ljava/util/List;\n+   #15 = Utf8               org/apache/commons/io/output/AbstractByteArrayOutputStream\n+   #16 = Utf8               buffers\n+   #17 = Utf8               Ljava/util/List;\n+   #18 = Fieldref           #13.#19       // org/apache/commons/io/output/AbstractByteArrayOutputStream.reuseBuffers:Z\n+   #19 = NameAndType        #20:#21       // reuseBuffers:Z\n+   #20 = Utf8               reuseBuffers\n+   #21 = Utf8               Z\n+   #22 = Fieldref           #13.#23       // org/apache/commons/io/output/AbstractByteArrayOutputStream.currentBufferIndex:I\n+   #23 = NameAndType        #24:#25       // currentBufferIndex:I\n+   #24 = Utf8               currentBufferIndex\n+   #25 = Utf8               I\n+   #26 = InterfaceMethodref #27.#28       // java/util/List.size:()I\n+   #27 = Class              #29           // java/util/List\n+   #28 = NameAndType        #30:#31       // size:()I\n+   #29 = Utf8               java/util/List\n+   #30 = Utf8               size\n+   #31 = Utf8               ()I\n+   #32 = Fieldref           #13.#33       // org/apache/commons/io/output/AbstractByteArrayOutputStream.filledBufferSum:I\n+   #33 = NameAndType        #34:#25       // filledBufferSum:I\n+   #34 = Utf8               filledBufferSum\n+   #35 = Fieldref           #13.#36       // org/apache/commons/io/output/AbstractByteArrayOutputStream.currentBuffer:[B\n+   #36 = NameAndType        #37:#38       // currentBuffer:[B\n+   #37 = Utf8               currentBuffer\n+   #38 = Utf8               [B\n+   #39 = InterfaceMethodref #27.#40       // java/util/List.get:(I)Ljava/lang/Object;\n+   #40 = NameAndType        #41:#42       // get:(I)Ljava/lang/Object;\n+   #41 = Utf8               get\n+   #42 = Utf8               (I)Ljava/lang/Object;\n+   #43 = Class              #38           // \"[B\"\n+   #44 = Methodref          #45.#46       // java/lang/Math.max:(II)I\n+   #45 = Class              #47           // java/lang/Math\n+   #46 = NameAndType        #48:#49       // max:(II)I\n+   #47 = Utf8               java/lang/Math\n+   #48 = Utf8               max\n+   #49 = Utf8               (II)I\n+   #50 = Methodref          #1.#51        // org/apache/commons/io/IOUtils.byteArray:(I)[B\n+   #51 = NameAndType        #52:#53       // byteArray:(I)[B\n+   #52 = Utf8               byteArray\n+   #53 = Utf8               (I)[B\n+   #54 = InterfaceMethodref #27.#55       // java/util/List.add:(Ljava/lang/Object;)Z\n+   #55 = NameAndType        #56:#57       // add:(Ljava/lang/Object;)Z\n+   #56 = Utf8               add\n+   #57 = Utf8               (Ljava/lang/Object;)Z\n+   #58 = Fieldref           #13.#59       // org/apache/commons/io/output/AbstractByteArrayOutputStream.count:I\n+   #59 = NameAndType        #60:#25       // count:I\n+   #60 = Utf8               count\n+   #61 = Methodref          #45.#62       // java/lang/Math.min:(II)I\n+   #62 = NameAndType        #63:#49       // min:(II)I\n+   #63 = Utf8               min\n+   #64 = Methodref          #65.#66       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #65 = Class              #67           // java/lang/System\n+   #66 = NameAndType        #68:#69       // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #67 = Utf8               java/lang/System\n+   #68 = Utf8               arraycopy\n+   #69 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #70 = Methodref          #13.#71       // org/apache/commons/io/output/AbstractByteArrayOutputStream.needNewBuffer:(I)V\n+   #71 = NameAndType        #72:#73       // needNewBuffer:(I)V\n+   #72 = Utf8               needNewBuffer\n+   #73 = Utf8               (I)V\n+   #74 = Methodref          #75.#76       // java/io/InputStream.read:([BII)I\n+   #75 = Class              #77           // java/io/InputStream\n+   #76 = NameAndType        #78:#79       // read:([BII)I\n+   #77 = Utf8               java/io/InputStream\n+   #78 = Utf8               read\n+   #79 = Utf8               ([BII)I\n+   #80 = InterfaceMethodref #27.#81       // java/util/List.clear:()V\n+   #81 = NameAndType        #82:#8        // clear:()V\n+   #82 = Utf8               clear\n+   #83 = InterfaceMethodref #27.#84       // java/util/List.iterator:()Ljava/util/Iterator;\n+   #84 = NameAndType        #85:#86       // iterator:()Ljava/util/Iterator;\n+   #85 = Utf8               iterator\n+   #86 = Utf8               ()Ljava/util/Iterator;\n+   #87 = InterfaceMethodref #88.#89       // java/util/Iterator.hasNext:()Z\n+   #88 = Class              #90           // java/util/Iterator\n+   #89 = NameAndType        #91:#92       // hasNext:()Z\n+   #90 = Utf8               java/util/Iterator\n+   #91 = Utf8               hasNext\n+   #92 = Utf8               ()Z\n+   #93 = InterfaceMethodref #88.#94       // java/util/Iterator.next:()Ljava/lang/Object;\n+   #94 = NameAndType        #95:#96       // next:()Ljava/lang/Object;\n+   #95 = Utf8               next\n+   #96 = Utf8               ()Ljava/lang/Object;\n+   #97 = Methodref          #4.#98        // java/io/OutputStream.write:([BII)V\n+   #98 = NameAndType        #99:#100      // write:([BII)V\n+   #99 = Utf8               write\n+  #100 = Utf8               ([BII)V\n+  #101 = Fieldref           #102.#103     // org/apache/commons/io/input/ClosedInputStream.CLOSED_INPUT_STREAM:Lorg/apache/commons/io/input/ClosedInputStream;\n+  #102 = Class              #104          // org/apache/commons/io/input/ClosedInputStream\n+  #103 = NameAndType        #105:#106     // CLOSED_INPUT_STREAM:Lorg/apache/commons/io/input/ClosedInputStream;\n+  #104 = Utf8               org/apache/commons/io/input/ClosedInputStream\n+  #105 = Utf8               CLOSED_INPUT_STREAM\n+  #106 = Utf8               Lorg/apache/commons/io/input/ClosedInputStream;\n+  #107 = Methodref          #9.#108       // java/util/ArrayList.\"<init>\":(I)V\n+  #108 = NameAndType        #7:#73        // \"<init>\":(I)V\n+  #109 = InterfaceMethodref #110.#111     // org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor.construct:([BII)Ljava/io/InputStream;\n+  #110 = Class              #112          // org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor\n+  #111 = NameAndType        #113:#114     // construct:([BII)Ljava/io/InputStream;\n+  #112 = Utf8               org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor\n+  #113 = Utf8               construct\n+  #114 = Utf8               ([BII)Ljava/io/InputStream;\n+  #115 = Class              #116          // java/io/SequenceInputStream\n+  #116 = Utf8               java/io/SequenceInputStream\n+  #117 = Methodref          #118.#119     // java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;\n+  #118 = Class              #120          // java/util/Collections\n+  #119 = NameAndType        #121:#122     // enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;\n+  #120 = Utf8               java/util/Collections\n+  #121 = Utf8               enumeration\n+  #122 = Utf8               (Ljava/util/Collection;)Ljava/util/Enumeration;\n+  #123 = Methodref          #115.#124     // java/io/SequenceInputStream.\"<init>\":(Ljava/util/Enumeration;)V\n+  #124 = NameAndType        #7:#125       // \"<init>\":(Ljava/util/Enumeration;)V\n+  #125 = Utf8               (Ljava/util/Enumeration;)V\n+  #126 = Fieldref           #1.#127       // org/apache/commons/io/IOUtils.EMPTY_BYTE_ARRAY:[B\n+  #127 = NameAndType        #128:#38      // EMPTY_BYTE_ARRAY:[B\n+  #128 = Utf8               EMPTY_BYTE_ARRAY\n+  #129 = Class              #130          // java/lang/String\n+  #130 = Utf8               java/lang/String\n+  #131 = Methodref          #13.#132      // org/apache/commons/io/output/AbstractByteArrayOutputStream.toByteArray:()[B\n+  #132 = NameAndType        #133:#134     // toByteArray:()[B\n+  #133 = Utf8               toByteArray\n+  #134 = Utf8               ()[B\n+  #135 = Methodref          #136.#137     // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+  #136 = Class              #138          // java/nio/charset/Charset\n+  #137 = NameAndType        #139:#140     // defaultCharset:()Ljava/nio/charset/Charset;\n+  #138 = Utf8               java/nio/charset/Charset\n+  #139 = Utf8               defaultCharset\n+  #140 = Utf8               ()Ljava/nio/charset/Charset;\n+  #141 = Methodref          #129.#142     // java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n+  #142 = NameAndType        #7:#143       // \"<init>\":([BLjava/nio/charset/Charset;)V\n+  #143 = Utf8               ([BLjava/nio/charset/Charset;)V\n+  #144 = Methodref          #129.#145     // java/lang/String.\"<init>\":([BLjava/lang/String;)V\n+  #145 = NameAndType        #7:#146       // \"<init>\":([BLjava/lang/String;)V\n+  #146 = Utf8               ([BLjava/lang/String;)V\n+  #147 = Utf8               DEFAULT_SIZE\n+  #148 = Utf8               ConstantValue\n+  #149 = Integer            1024\n+  #150 = Utf8               Signature\n+  #151 = Utf8               Ljava/util/List<[B>;\n+  #152 = Utf8               Code\n+  #153 = Utf8               LineNumberTable\n+  #154 = Utf8               LocalVariableTable\n+  #155 = Utf8               this\n+  #156 = Utf8               Lorg/apache/commons/io/output/AbstractByteArrayOutputStream;\n+  #157 = Utf8               newBufferSize\n+  #158 = Utf8               newcount\n+  #159 = Utf8               StackMapTable\n+  #160 = Utf8               writeImpl\n+  #161 = Utf8               part\n+  #162 = Utf8               b\n+  #163 = Utf8               off\n+  #164 = Utf8               len\n+  #165 = Utf8               remaining\n+  #166 = Utf8               inBufferPos\n+  #167 = Utf8               (Ljava/io/InputStream;)I\n+  #168 = Utf8               Exceptions\n+  #169 = Class              #170          // java/io/IOException\n+  #170 = Utf8               java/io/IOException\n+  #171 = Utf8               in\n+  #172 = Utf8               Ljava/io/InputStream;\n+  #173 = Utf8               readCount\n+  #174 = Utf8               n\n+  #175 = Utf8               close\n+  #176 = Utf8               reset\n+  #177 = Utf8               resetImpl\n+  #178 = Utf8               writeTo\n+  #179 = Utf8               (Ljava/io/OutputStream;)V\n+  #180 = Utf8               writeToImpl\n+  #181 = Utf8               c\n+  #182 = Utf8               buf\n+  #183 = Utf8               out\n+  #184 = Utf8               Ljava/io/OutputStream;\n+  #185 = Utf8               toInputStream\n+  #186 = Utf8               ()Ljava/io/InputStream;\n+  #187 = Utf8               (Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;)Ljava/io/InputStream;\n+  #188 = Utf8               isConstructor\n+  #189 = Utf8               Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;\n+  #190 = Utf8               list\n+  #191 = Utf8               LocalVariableTypeTable\n+  #192 = Utf8               Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor<TT;>;\n+  #193 = Utf8               Ljava/util/List<TT;>;\n+  #194 = Utf8               <T:Ljava/io/InputStream;>(Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor<TT;>;)Ljava/io/InputStream;\n+  #195 = Utf8               toByteArrayImpl\n+  #196 = Utf8               newbuf\n+  #197 = Utf8               pos\n+  #198 = Utf8               toString\n+  #199 = Utf8               ()Ljava/lang/String;\n+  #200 = Utf8               Deprecated\n+  #201 = Utf8               RuntimeVisibleAnnotations\n+  #202 = Utf8               Ljava/lang/Deprecated;\n+  #203 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #204 = Utf8               enc\n+  #205 = Utf8               Ljava/lang/String;\n+  #206 = Class              #207          // java/io/UnsupportedEncodingException\n+  #207 = Utf8               java/io/UnsupportedEncodingException\n+  #208 = Utf8               (Ljava/nio/charset/Charset;)Ljava/lang/String;\n+  #209 = Utf8               charset\n+  #210 = Utf8               Ljava/nio/charset/Charset;\n+  #211 = Utf8               SourceFile\n+  #212 = Utf8               AbstractByteArrayOutputStream.java\n+  #213 = Utf8               InnerClasses\n+  #214 = Utf8               InputStreamConstructor\n {\n   static final int DEFAULT_SIZE = 1024;\n     descriptor: I\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n     ConstantValue: int 1024\n \n   private final java.util.List<byte[]> buffers;\n     descriptor: Ljava/util/List;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #50                          // Ljava/util/List<[B>;\n+    Signature: #151                         // Ljava/util/List<[B>;\n \n   private int currentBufferIndex;\n     descriptor: I\n     flags: (0x0002) ACC_PRIVATE\n \n   private int filledBufferSum;\n     descriptor: I\n@@ -255,23 +255,23 @@\n \n   public org.apache.commons.io.output.AbstractByteArrayOutputStream();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #2                  // Method java/io/OutputStream.\"<init>\":()V\n+         1: invokespecial #3                  // Method java/io/OutputStream.\"<init>\":()V\n          4: aload_0\n-         5: new           #3                  // class java/util/ArrayList\n+         5: new           #9                  // class java/util/ArrayList\n          8: dup\n-         9: invokespecial #4                  // Method java/util/ArrayList.\"<init>\":()V\n-        12: putfield      #5                  // Field buffers:Ljava/util/List;\n+         9: invokespecial #11                 // Method java/util/ArrayList.\"<init>\":()V\n+        12: putfield      #12                 // Field buffers:Ljava/util/List;\n         15: aload_0\n         16: iconst_1\n-        17: putfield      #6                  // Field reuseBuffers:Z\n+        17: putfield      #18                 // Field reuseBuffers:Z\n         20: return\n       LineNumberTable:\n         line 60: 0\n         line 65: 4\n         line 75: 15\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -279,87 +279,87 @@\n \n   protected void needNewBuffer(int);\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #7                  // Field currentBufferIndex:I\n+         1: getfield      #22                 // Field currentBufferIndex:I\n          4: aload_0\n-         5: getfield      #5                  // Field buffers:Ljava/util/List;\n-         8: invokeinterface #8,  1            // InterfaceMethod java/util/List.size:()I\n+         5: getfield      #12                 // Field buffers:Ljava/util/List;\n+         8: invokeinterface #26,  1           // InterfaceMethod java/util/List.size:()I\n         13: iconst_1\n         14: isub\n         15: if_icmpge     65\n         18: aload_0\n         19: dup\n-        20: getfield      #9                  // Field filledBufferSum:I\n+        20: getfield      #32                 // Field filledBufferSum:I\n         23: aload_0\n-        24: getfield      #10                 // Field currentBuffer:[B\n+        24: getfield      #35                 // Field currentBuffer:[B\n         27: arraylength\n         28: iadd\n-        29: putfield      #9                  // Field filledBufferSum:I\n+        29: putfield      #32                 // Field filledBufferSum:I\n         32: aload_0\n         33: dup\n-        34: getfield      #7                  // Field currentBufferIndex:I\n+        34: getfield      #22                 // Field currentBufferIndex:I\n         37: iconst_1\n         38: iadd\n-        39: putfield      #7                  // Field currentBufferIndex:I\n+        39: putfield      #22                 // Field currentBufferIndex:I\n         42: aload_0\n         43: aload_0\n-        44: getfield      #5                  // Field buffers:Ljava/util/List;\n+        44: getfield      #12                 // Field buffers:Ljava/util/List;\n         47: aload_0\n-        48: getfield      #7                  // Field currentBufferIndex:I\n-        51: invokeinterface #11,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n-        56: checkcast     #12                 // class \"[B\"\n-        59: putfield      #10                 // Field currentBuffer:[B\n+        48: getfield      #22                 // Field currentBufferIndex:I\n+        51: invokeinterface #39,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n+        56: checkcast     #43                 // class \"[B\"\n+        59: putfield      #35                 // Field currentBuffer:[B\n         62: goto          145\n         65: aload_0\n-        66: getfield      #10                 // Field currentBuffer:[B\n+        66: getfield      #35                 // Field currentBuffer:[B\n         69: ifnonnull     82\n         72: iload_1\n         73: istore_2\n         74: aload_0\n         75: iconst_0\n-        76: putfield      #9                  // Field filledBufferSum:I\n+        76: putfield      #32                 // Field filledBufferSum:I\n         79: goto          113\n         82: aload_0\n-        83: getfield      #10                 // Field currentBuffer:[B\n+        83: getfield      #35                 // Field currentBuffer:[B\n         86: arraylength\n         87: iconst_1\n         88: ishl\n         89: iload_1\n         90: aload_0\n-        91: getfield      #9                  // Field filledBufferSum:I\n+        91: getfield      #32                 // Field filledBufferSum:I\n         94: isub\n-        95: invokestatic  #13                 // Method java/lang/Math.max:(II)I\n+        95: invokestatic  #44                 // Method java/lang/Math.max:(II)I\n         98: istore_2\n         99: aload_0\n        100: dup\n-       101: getfield      #9                  // Field filledBufferSum:I\n+       101: getfield      #32                 // Field filledBufferSum:I\n        104: aload_0\n-       105: getfield      #10                 // Field currentBuffer:[B\n+       105: getfield      #35                 // Field currentBuffer:[B\n        108: arraylength\n        109: iadd\n-       110: putfield      #9                  // Field filledBufferSum:I\n+       110: putfield      #32                 // Field filledBufferSum:I\n        113: aload_0\n        114: dup\n-       115: getfield      #7                  // Field currentBufferIndex:I\n+       115: getfield      #22                 // Field currentBufferIndex:I\n        118: iconst_1\n        119: iadd\n-       120: putfield      #7                  // Field currentBufferIndex:I\n+       120: putfield      #22                 // Field currentBufferIndex:I\n        123: aload_0\n        124: iload_2\n-       125: invokestatic  #14                 // Method org/apache/commons/io/IOUtils.byteArray:(I)[B\n-       128: putfield      #10                 // Field currentBuffer:[B\n+       125: invokestatic  #50                 // Method org/apache/commons/io/IOUtils.byteArray:(I)[B\n+       128: putfield      #35                 // Field currentBuffer:[B\n        131: aload_0\n-       132: getfield      #5                  // Field buffers:Ljava/util/List;\n+       132: getfield      #12                 // Field buffers:Ljava/util/List;\n        135: aload_0\n-       136: getfield      #10                 // Field currentBuffer:[B\n-       139: invokeinterface #15,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+       136: getfield      #35                 // Field currentBuffer:[B\n+       139: invokeinterface #54,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n        144: pop\n        145: return\n       LineNumberTable:\n         line 84: 0\n         line 86: 18\n         line 88: 32\n         line 89: 42\n@@ -394,62 +394,62 @@\n \n   protected void writeImpl(byte[], int, int);\n     descriptor: ([BII)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=5, locals=8, args_size=4\n          0: aload_0\n-         1: getfield      #16                 // Field count:I\n+         1: getfield      #58                 // Field count:I\n          4: iload_3\n          5: iadd\n          6: istore        4\n          8: iload_3\n          9: istore        5\n         11: aload_0\n-        12: getfield      #16                 // Field count:I\n+        12: getfield      #58                 // Field count:I\n         15: aload_0\n-        16: getfield      #9                  // Field filledBufferSum:I\n+        16: getfield      #32                 // Field filledBufferSum:I\n         19: isub\n         20: istore        6\n         22: iload         5\n         24: ifle          84\n         27: iload         5\n         29: aload_0\n-        30: getfield      #10                 // Field currentBuffer:[B\n+        30: getfield      #35                 // Field currentBuffer:[B\n         33: arraylength\n         34: iload         6\n         36: isub\n-        37: invokestatic  #17                 // Method java/lang/Math.min:(II)I\n+        37: invokestatic  #61                 // Method java/lang/Math.min:(II)I\n         40: istore        7\n         42: aload_1\n         43: iload_2\n         44: iload_3\n         45: iadd\n         46: iload         5\n         48: isub\n         49: aload_0\n-        50: getfield      #10                 // Field currentBuffer:[B\n+        50: getfield      #35                 // Field currentBuffer:[B\n         53: iload         6\n         55: iload         7\n-        57: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        57: invokestatic  #64                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         60: iload         5\n         62: iload         7\n         64: isub\n         65: istore        5\n         67: iload         5\n         69: ifle          81\n         72: aload_0\n         73: iload         4\n-        75: invokevirtual #19                 // Method needNewBuffer:(I)V\n+        75: invokevirtual #70                 // Method needNewBuffer:(I)V\n         78: iconst_0\n         79: istore        6\n         81: goto          22\n         84: aload_0\n         85: iload         4\n-        87: putfield      #16                 // Field count:I\n+        87: putfield      #58                 // Field count:I\n         90: return\n       LineNumberTable:\n         line 125: 0\n         line 126: 8\n         line 127: 11\n         line 128: 22\n         line 129: 27\n@@ -484,44 +484,44 @@\n \n   protected void writeImpl(int);\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #16                 // Field count:I\n+         1: getfield      #58                 // Field count:I\n          4: aload_0\n-         5: getfield      #9                  // Field filledBufferSum:I\n+         5: getfield      #32                 // Field filledBufferSum:I\n          8: isub\n          9: istore_2\n         10: iload_2\n         11: aload_0\n-        12: getfield      #10                 // Field currentBuffer:[B\n+        12: getfield      #35                 // Field currentBuffer:[B\n         15: arraylength\n         16: if_icmpne     31\n         19: aload_0\n         20: aload_0\n-        21: getfield      #16                 // Field count:I\n+        21: getfield      #58                 // Field count:I\n         24: iconst_1\n         25: iadd\n-        26: invokevirtual #19                 // Method needNewBuffer:(I)V\n+        26: invokevirtual #70                 // Method needNewBuffer:(I)V\n         29: iconst_0\n         30: istore_2\n         31: aload_0\n-        32: getfield      #10                 // Field currentBuffer:[B\n+        32: getfield      #35                 // Field currentBuffer:[B\n         35: iload_2\n         36: iload_1\n         37: i2b\n         38: bastore\n         39: aload_0\n         40: dup\n-        41: getfield      #16                 // Field count:I\n+        41: getfield      #58                 // Field count:I\n         44: iconst_1\n         45: iadd\n-        46: putfield      #16                 // Field count:I\n+        46: putfield      #58                 // Field count:I\n         49: return\n       LineNumberTable:\n         line 152: 0\n         line 153: 10\n         line 154: 19\n         line 155: 29\n         line 157: 31\n@@ -547,69 +547,69 @@\n     descriptor: (Ljava/io/InputStream;)I\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=5, locals=5, args_size=2\n          0: iconst_0\n          1: istore_2\n          2: aload_0\n-         3: getfield      #16                 // Field count:I\n+         3: getfield      #58                 // Field count:I\n          6: aload_0\n-         7: getfield      #9                  // Field filledBufferSum:I\n+         7: getfield      #32                 // Field filledBufferSum:I\n         10: isub\n         11: istore_3\n         12: aload_1\n         13: aload_0\n-        14: getfield      #10                 // Field currentBuffer:[B\n+        14: getfield      #35                 // Field currentBuffer:[B\n         17: iload_3\n         18: aload_0\n-        19: getfield      #10                 // Field currentBuffer:[B\n+        19: getfield      #35                 // Field currentBuffer:[B\n         22: arraylength\n         23: iload_3\n         24: isub\n-        25: invokevirtual #20                 // Method java/io/InputStream.read:([BII)I\n+        25: invokevirtual #74                 // Method java/io/InputStream.read:([BII)I\n         28: istore        4\n         30: iload         4\n         32: iconst_m1\n         33: if_icmpeq     98\n         36: iload_2\n         37: iload         4\n         39: iadd\n         40: istore_2\n         41: iload_3\n         42: iload         4\n         44: iadd\n         45: istore_3\n         46: aload_0\n         47: dup\n-        48: getfield      #16                 // Field count:I\n+        48: getfield      #58                 // Field count:I\n         51: iload         4\n         53: iadd\n-        54: putfield      #16                 // Field count:I\n+        54: putfield      #58                 // Field count:I\n         57: iload_3\n         58: aload_0\n-        59: getfield      #10                 // Field currentBuffer:[B\n+        59: getfield      #35                 // Field currentBuffer:[B\n         62: arraylength\n         63: if_icmpne     77\n         66: aload_0\n         67: aload_0\n-        68: getfield      #10                 // Field currentBuffer:[B\n+        68: getfield      #35                 // Field currentBuffer:[B\n         71: arraylength\n-        72: invokevirtual #19                 // Method needNewBuffer:(I)V\n+        72: invokevirtual #70                 // Method needNewBuffer:(I)V\n         75: iconst_0\n         76: istore_3\n         77: aload_1\n         78: aload_0\n-        79: getfield      #10                 // Field currentBuffer:[B\n+        79: getfield      #35                 // Field currentBuffer:[B\n         82: iload_3\n         83: aload_0\n-        84: getfield      #10                 // Field currentBuffer:[B\n+        84: getfield      #35                 // Field currentBuffer:[B\n         87: arraylength\n         88: iload_3\n         89: isub\n-        90: invokevirtual #20                 // Method java/io/InputStream.read:([BII)I\n+        90: invokevirtual #74                 // Method java/io/InputStream.read:([BII)I\n         93: istore        4\n         95: goto          30\n         98: iload_2\n         99: ireturn\n       LineNumberTable:\n         line 187: 0\n         line 188: 2\n@@ -664,52 +664,52 @@\n   protected void resetImpl();\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: putfield      #16                 // Field count:I\n+         2: putfield      #58                 // Field count:I\n          5: aload_0\n          6: iconst_0\n-         7: putfield      #9                  // Field filledBufferSum:I\n+         7: putfield      #32                 // Field filledBufferSum:I\n         10: aload_0\n         11: iconst_0\n-        12: putfield      #7                  // Field currentBufferIndex:I\n+        12: putfield      #22                 // Field currentBufferIndex:I\n         15: aload_0\n-        16: getfield      #6                  // Field reuseBuffers:Z\n+        16: getfield      #18                 // Field reuseBuffers:Z\n         19: ifeq          45\n         22: aload_0\n         23: aload_0\n-        24: getfield      #5                  // Field buffers:Ljava/util/List;\n+        24: getfield      #12                 // Field buffers:Ljava/util/List;\n         27: aload_0\n-        28: getfield      #7                  // Field currentBufferIndex:I\n-        31: invokeinterface #11,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n-        36: checkcast     #12                 // class \"[B\"\n-        39: putfield      #10                 // Field currentBuffer:[B\n+        28: getfield      #22                 // Field currentBufferIndex:I\n+        31: invokeinterface #39,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n+        36: checkcast     #43                 // class \"[B\"\n+        39: putfield      #35                 // Field currentBuffer:[B\n         42: goto          84\n         45: aload_0\n         46: aconst_null\n-        47: putfield      #10                 // Field currentBuffer:[B\n+        47: putfield      #35                 // Field currentBuffer:[B\n         50: aload_0\n-        51: getfield      #5                  // Field buffers:Ljava/util/List;\n+        51: getfield      #12                 // Field buffers:Ljava/util/List;\n         54: iconst_0\n-        55: invokeinterface #11,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n-        60: checkcast     #12                 // class \"[B\"\n+        55: invokeinterface #39,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n+        60: checkcast     #43                 // class \"[B\"\n         63: arraylength\n         64: istore_1\n         65: aload_0\n-        66: getfield      #5                  // Field buffers:Ljava/util/List;\n-        69: invokeinterface #21,  1           // InterfaceMethod java/util/List.clear:()V\n+        66: getfield      #12                 // Field buffers:Ljava/util/List;\n+        69: invokeinterface #80,  1           // InterfaceMethod java/util/List.clear:()V\n         74: aload_0\n         75: iload_1\n-        76: invokevirtual #19                 // Method needNewBuffer:(I)V\n+        76: invokevirtual #70                 // Method needNewBuffer:(I)V\n         79: aload_0\n         80: iconst_1\n-        81: putfield      #6                  // Field reuseBuffers:Z\n+        81: putfield      #18                 // Field reuseBuffers:Z\n         84: return\n       LineNumberTable:\n         line 232: 0\n         line 233: 5\n         line 234: 10\n         line 235: 15\n         line 236: 22\n@@ -735,37 +735,37 @@\n \n   protected void writeToImpl(java.io.OutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=4, locals=6, args_size=2\n          0: aload_0\n-         1: getfield      #16                 // Field count:I\n+         1: getfield      #58                 // Field count:I\n          4: istore_2\n          5: aload_0\n-         6: getfield      #5                  // Field buffers:Ljava/util/List;\n-         9: invokeinterface #22,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+         6: getfield      #12                 // Field buffers:Ljava/util/List;\n+         9: invokeinterface #83,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n         14: astore_3\n         15: aload_3\n-        16: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        16: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         21: ifeq          68\n         24: aload_3\n-        25: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        30: checkcast     #12                 // class \"[B\"\n+        25: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        30: checkcast     #43                 // class \"[B\"\n         33: astore        4\n         35: aload         4\n         37: arraylength\n         38: iload_2\n-        39: invokestatic  #17                 // Method java/lang/Math.min:(II)I\n+        39: invokestatic  #61                 // Method java/lang/Math.min:(II)I\n         42: istore        5\n         44: aload_1\n         45: aload         4\n         47: iconst_0\n         48: iload         5\n-        50: invokevirtual #25                 // Method java/io/OutputStream.write:([BII)V\n+        50: invokevirtual #97                 // Method java/io/OutputStream.write:([BII)V\n         53: iload_2\n         54: iload         5\n         56: isub\n         57: istore_2\n         58: iload_2\n         59: ifne          65\n         62: goto          68\n@@ -804,67 +804,67 @@\n \n   protected <T extends java.io.InputStream> java.io.InputStream toInputStream(org.apache.commons.io.output.AbstractByteArrayOutputStream$InputStreamConstructor<T>);\n     descriptor: (Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;)Ljava/io/InputStream;\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=5, locals=7, args_size=2\n          0: aload_0\n-         1: getfield      #16                 // Field count:I\n+         1: getfield      #58                 // Field count:I\n          4: istore_2\n          5: iload_2\n          6: ifne          13\n-         9: getstatic     #26                 // Field org/apache/commons/io/input/ClosedInputStream.CLOSED_INPUT_STREAM:Lorg/apache/commons/io/input/ClosedInputStream;\n+         9: getstatic     #101                // Field org/apache/commons/io/input/ClosedInputStream.CLOSED_INPUT_STREAM:Lorg/apache/commons/io/input/ClosedInputStream;\n         12: areturn\n-        13: new           #3                  // class java/util/ArrayList\n+        13: new           #9                  // class java/util/ArrayList\n         16: dup\n         17: aload_0\n-        18: getfield      #5                  // Field buffers:Ljava/util/List;\n-        21: invokeinterface #8,  1            // InterfaceMethod java/util/List.size:()I\n-        26: invokespecial #27                 // Method java/util/ArrayList.\"<init>\":(I)V\n+        18: getfield      #12                 // Field buffers:Ljava/util/List;\n+        21: invokeinterface #26,  1           // InterfaceMethod java/util/List.size:()I\n+        26: invokespecial #107                // Method java/util/ArrayList.\"<init>\":(I)V\n         29: astore_3\n         30: aload_0\n-        31: getfield      #5                  // Field buffers:Ljava/util/List;\n-        34: invokeinterface #22,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+        31: getfield      #12                 // Field buffers:Ljava/util/List;\n+        34: invokeinterface #83,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n         39: astore        4\n         41: aload         4\n-        43: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        43: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         48: ifeq          105\n         51: aload         4\n-        53: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        58: checkcast     #12                 // class \"[B\"\n+        53: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        58: checkcast     #43                 // class \"[B\"\n         61: astore        5\n         63: aload         5\n         65: arraylength\n         66: iload_2\n-        67: invokestatic  #17                 // Method java/lang/Math.min:(II)I\n+        67: invokestatic  #61                 // Method java/lang/Math.min:(II)I\n         70: istore        6\n         72: aload_3\n         73: aload_1\n         74: aload         5\n         76: iconst_0\n         77: iload         6\n-        79: invokeinterface #28,  4           // InterfaceMethod org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor.construct:([BII)Ljava/io/InputStream;\n-        84: invokeinterface #15,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        79: invokeinterface #109,  4          // InterfaceMethod org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor.construct:([BII)Ljava/io/InputStream;\n+        84: invokeinterface #54,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         89: pop\n         90: iload_2\n         91: iload         6\n         93: isub\n         94: istore_2\n         95: iload_2\n         96: ifne          102\n         99: goto          105\n        102: goto          41\n        105: aload_0\n        106: iconst_0\n-       107: putfield      #6                  // Field reuseBuffers:Z\n-       110: new           #29                 // class java/io/SequenceInputStream\n+       107: putfield      #18                 // Field reuseBuffers:Z\n+       110: new           #115                // class java/io/SequenceInputStream\n        113: dup\n        114: aload_3\n-       115: invokestatic  #30                 // Method java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;\n-       118: invokespecial #31                 // Method java/io/SequenceInputStream.\"<init>\":(Ljava/util/Enumeration;)V\n+       115: invokestatic  #117                // Method java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;\n+       118: invokespecial #123                // Method java/io/SequenceInputStream.\"<init>\":(Ljava/util/Enumeration;)V\n        121: areturn\n       LineNumberTable:\n         line 307: 0\n         line 308: 5\n         line 309: 9\n         line 311: 13\n         line 312: 30\n@@ -894,59 +894,59 @@\n           locals = [ int ]\n         frame_type = 253 /* append */\n           offset_delta = 27\n           locals = [ class java/util/List, class java/util/Iterator ]\n         frame_type = 60 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 2\n-    Signature: #109                         // <T:Ljava/io/InputStream;>(Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor<TT;>;)Ljava/io/InputStream;\n+    Signature: #194                         // <T:Ljava/io/InputStream;>(Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor<TT;>;)Ljava/io/InputStream;\n \n   public abstract byte[] toByteArray();\n     descriptor: ()[B\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n \n   protected byte[] toByteArrayImpl();\n     descriptor: ()[B\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=5, locals=7, args_size=1\n          0: aload_0\n-         1: getfield      #16                 // Field count:I\n+         1: getfield      #58                 // Field count:I\n          4: istore_1\n          5: iload_1\n          6: ifne          13\n-         9: getstatic     #32                 // Field org/apache/commons/io/IOUtils.EMPTY_BYTE_ARRAY:[B\n+         9: getstatic     #126                // Field org/apache/commons/io/IOUtils.EMPTY_BYTE_ARRAY:[B\n         12: areturn\n         13: iload_1\n-        14: invokestatic  #14                 // Method org/apache/commons/io/IOUtils.byteArray:(I)[B\n+        14: invokestatic  #50                 // Method org/apache/commons/io/IOUtils.byteArray:(I)[B\n         17: astore_2\n         18: iconst_0\n         19: istore_3\n         20: aload_0\n-        21: getfield      #5                  // Field buffers:Ljava/util/List;\n-        24: invokeinterface #22,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+        21: getfield      #12                 // Field buffers:Ljava/util/List;\n+        24: invokeinterface #83,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n         29: astore        4\n         31: aload         4\n-        33: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        33: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         38: ifeq          92\n         41: aload         4\n-        43: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        48: checkcast     #12                 // class \"[B\"\n+        43: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        48: checkcast     #43                 // class \"[B\"\n         51: astore        5\n         53: aload         5\n         55: arraylength\n         56: iload_1\n-        57: invokestatic  #17                 // Method java/lang/Math.min:(II)I\n+        57: invokestatic  #61                 // Method java/lang/Math.min:(II)I\n         60: istore        6\n         62: aload         5\n         64: iconst_0\n         65: aload_2\n         66: iload_3\n         67: iload         6\n-        69: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        69: invokestatic  #64                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         72: iload_3\n         73: iload         6\n         75: iadd\n         76: istore_3\n         77: iload_1\n         78: iload         6\n         80: isub\n@@ -992,42 +992,42 @@\n           offset_delta = 2\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n-         0: new           #33                 // class java/lang/String\n+         0: new           #129                // class java/lang/String\n          3: dup\n          4: aload_0\n-         5: invokevirtual #34                 // Method toByteArray:()[B\n-         8: invokestatic  #35                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-        11: invokespecial #36                 // Method java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n+         5: invokevirtual #131                // Method toByteArray:()[B\n+         8: invokestatic  #135                // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+        11: invokespecial #141                // Method java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n         14: areturn\n       LineNumberTable:\n         line 390: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/output/AbstractByteArrayOutputStream;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #119()\n+      0: #202()\n         java.lang.Deprecated\n \n   public java.lang.String toString(java.lang.String) throws java.io.UnsupportedEncodingException;\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n-         0: new           #33                 // class java/lang/String\n+         0: new           #129                // class java/lang/String\n          3: dup\n          4: aload_0\n-         5: invokevirtual #34                 // Method toByteArray:()[B\n+         5: invokevirtual #131                // Method toByteArray:()[B\n          8: aload_1\n-         9: invokespecial #37                 // Method java/lang/String.\"<init>\":([BLjava/lang/String;)V\n+         9: invokespecial #144                // Method java/lang/String.\"<init>\":([BLjava/lang/String;)V\n         12: areturn\n       LineNumberTable:\n         line 403: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/io/output/AbstractByteArrayOutputStream;\n             0      13     1   enc   Ljava/lang/String;\n@@ -1035,24 +1035,24 @@\n       throws java.io.UnsupportedEncodingException\n \n   public java.lang.String toString(java.nio.charset.Charset);\n     descriptor: (Ljava/nio/charset/Charset;)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n-         0: new           #33                 // class java/lang/String\n+         0: new           #129                // class java/lang/String\n          3: dup\n          4: aload_0\n-         5: invokevirtual #34                 // Method toByteArray:()[B\n+         5: invokevirtual #131                // Method toByteArray:()[B\n          8: aload_1\n-         9: invokespecial #36                 // Method java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n+         9: invokespecial #141                // Method java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n         12: areturn\n       LineNumberTable:\n         line 416: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/io/output/AbstractByteArrayOutputStream;\n             0      13     1 charset   Ljava/nio/charset/Charset;\n }\n SourceFile: \"AbstractByteArrayOutputStream.java\"\n InnerClasses:\n-  protected static #41= #40 of #38;       // InputStreamConstructor=class org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor of class org/apache/commons/io/output/AbstractByteArrayOutputStream\n+  protected static #214= #110 of #13;     // InputStreamConstructor=class org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor of class org/apache/commons/io/output/AbstractByteArrayOutputStream\n"}]}
