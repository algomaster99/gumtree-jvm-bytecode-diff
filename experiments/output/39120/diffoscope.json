{"diffoscope-json-version": 1, "source1": "first/ByteUtils.class", "source2": "second/ByteUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,132 +1,132 @@\n-  SHA-256 checksum 841b03e2125043d9ba78a87f2d9af9cabb1b455195cbb32fec5c50e698033dac\n+  SHA-256 checksum 677d905cad19dd0600ee0e5f2acce6aa9e63018b5ba21ca8490672afa891cb82\n   Compiled from \"ByteUtils.java\"\n public final class org.apache.commons.compress.utils.ByteUtils\n   minor version: 0\n   major version: 51\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #20                         // org/apache/commons/compress/utils/ByteUtils\n-  super_class: #21                        // java/lang/Object\n+  this_class: #1                          // org/apache/commons/compress/utils/ByteUtils\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 11, attributes: 2\n Constant pool:\n-    #1 = Methodref          #21.#76       // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #20.#77       // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n-    #3 = Methodref          #20.#78       // org/apache/commons/compress/utils/ByteUtils.checkReadLength:(I)V\n-    #4 = Long               255l\n-    #6 = Methodref          #79.#80       // java/io/InputStream.read:()I\n-    #7 = Long               -1l\n-    #9 = Class              #81           // java/io/IOException\n-   #10 = String             #82           // premature end of data\n-   #11 = Methodref          #9.#83        // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #12 = InterfaceMethodref #29.#84       // org/apache/commons/compress/utils/ByteUtils$ByteSupplier.getAsByte:()I\n-   #13 = InterfaceMethodref #85.#86       // java/io/DataInput.readUnsignedByte:()I\n-   #14 = Methodref          #87.#88       // java/io/OutputStream.write:(I)V\n-   #15 = InterfaceMethodref #27.#89       // org/apache/commons/compress/utils/ByteUtils$ByteConsumer.accept:(I)V\n-   #16 = InterfaceMethodref #90.#88       // java/io/DataOutput.write:(I)V\n-   #17 = Class              #91           // java/lang/IllegalArgumentException\n-   #18 = String             #92           // can\\'t read more than eight bytes into a long value\n-   #19 = Methodref          #17.#83       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #20 = Class              #93           // org/apache/commons/compress/utils/ByteUtils\n-   #21 = Class              #94           // java/lang/Object\n-   #22 = Class              #95           // org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer\n-   #23 = Utf8               OutputStreamByteConsumer\n-   #24 = Utf8               InnerClasses\n-   #25 = Class              #96           // org/apache/commons/compress/utils/ByteUtils$InputStreamByteSupplier\n-   #26 = Utf8               InputStreamByteSupplier\n-   #27 = Class              #97           // org/apache/commons/compress/utils/ByteUtils$ByteConsumer\n-   #28 = Utf8               ByteConsumer\n-   #29 = Class              #98           // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-   #30 = Utf8               ByteSupplier\n-   #31 = Utf8               <init>\n-   #32 = Utf8               ()V\n-   #33 = Utf8               Code\n-   #34 = Utf8               LineNumberTable\n-   #35 = Utf8               LocalVariableTable\n-   #36 = Utf8               this\n-   #37 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils;\n-   #38 = Utf8               fromLittleEndian\n-   #39 = Utf8               ([B)J\n-   #40 = Utf8               bytes\n-   #41 = Utf8               [B\n-   #42 = Utf8               ([BII)J\n-   #43 = Utf8               i\n-   #44 = Utf8               I\n-   #45 = Utf8               off\n-   #46 = Utf8               length\n-   #47 = Utf8               l\n-   #48 = Utf8               J\n-   #49 = Utf8               StackMapTable\n-   #50 = Utf8               (Ljava/io/InputStream;I)J\n-   #51 = Utf8               b\n-   #52 = Utf8               in\n-   #53 = Utf8               Ljava/io/InputStream;\n-   #54 = Utf8               Exceptions\n-   #55 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-   #56 = Utf8               supplier\n-   #57 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-   #58 = Utf8               (Ljava/io/DataInput;I)J\n-   #59 = Utf8               Ljava/io/DataInput;\n-   #60 = Utf8               toLittleEndian\n-   #61 = Utf8               ([BJII)V\n-   #62 = Utf8               value\n-   #63 = Utf8               num\n-   #64 = Utf8               (Ljava/io/OutputStream;JI)V\n-   #65 = Utf8               out\n-   #66 = Utf8               Ljava/io/OutputStream;\n-   #67 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n-   #68 = Utf8               consumer\n-   #69 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n-   #70 = Utf8               (Ljava/io/DataOutput;JI)V\n-   #71 = Utf8               Ljava/io/DataOutput;\n-   #72 = Utf8               checkReadLength\n-   #73 = Utf8               (I)V\n-   #74 = Utf8               SourceFile\n-   #75 = Utf8               ByteUtils.java\n-   #76 = NameAndType        #31:#32       // \"<init>\":()V\n-   #77 = NameAndType        #38:#42       // fromLittleEndian:([BII)J\n-   #78 = NameAndType        #72:#73       // checkReadLength:(I)V\n-   #79 = Class              #99           // java/io/InputStream\n-   #80 = NameAndType        #100:#101     // read:()I\n-   #81 = Utf8               java/io/IOException\n-   #82 = Utf8               premature end of data\n-   #83 = NameAndType        #31:#102      // \"<init>\":(Ljava/lang/String;)V\n-   #84 = NameAndType        #103:#101     // getAsByte:()I\n-   #85 = Class              #104          // java/io/DataInput\n-   #86 = NameAndType        #105:#101     // readUnsignedByte:()I\n-   #87 = Class              #106          // java/io/OutputStream\n-   #88 = NameAndType        #107:#73      // write:(I)V\n-   #89 = NameAndType        #108:#73      // accept:(I)V\n-   #90 = Class              #109          // java/io/DataOutput\n-   #91 = Utf8               java/lang/IllegalArgumentException\n-   #92 = Utf8               can\\'t read more than eight bytes into a long value\n-   #93 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-   #94 = Utf8               java/lang/Object\n-   #95 = Utf8               org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer\n-   #96 = Utf8               org/apache/commons/compress/utils/ByteUtils$InputStreamByteSupplier\n-   #97 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteConsumer\n-   #98 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-   #99 = Utf8               java/io/InputStream\n-  #100 = Utf8               read\n-  #101 = Utf8               ()I\n-  #102 = Utf8               (Ljava/lang/String;)V\n-  #103 = Utf8               getAsByte\n-  #104 = Utf8               java/io/DataInput\n-  #105 = Utf8               readUnsignedByte\n-  #106 = Utf8               java/io/OutputStream\n-  #107 = Utf8               write\n-  #108 = Utf8               accept\n-  #109 = Utf8               java/io/DataOutput\n+    #1 = Class              #2            // org/apache/commons/compress/utils/ByteUtils\n+    #2 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+    #3 = Class              #4            // java/lang/Object\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Utf8               Code\n+    #8 = Methodref          #3.#9         // java/lang/Object.\"<init>\":()V\n+    #9 = NameAndType        #5:#6         // \"<init>\":()V\n+   #10 = Utf8               LineNumberTable\n+   #11 = Utf8               LocalVariableTable\n+   #12 = Utf8               this\n+   #13 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils;\n+   #14 = Utf8               fromLittleEndian\n+   #15 = Utf8               ([B)J\n+   #16 = Methodref          #1.#17        // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n+   #17 = NameAndType        #14:#18       // fromLittleEndian:([BII)J\n+   #18 = Utf8               ([BII)J\n+   #19 = Utf8               bytes\n+   #20 = Utf8               [B\n+   #21 = Methodref          #1.#22        // org/apache/commons/compress/utils/ByteUtils.checkReadLength:(I)V\n+   #22 = NameAndType        #23:#24       // checkReadLength:(I)V\n+   #23 = Utf8               checkReadLength\n+   #24 = Utf8               (I)V\n+   #25 = Long               255l\n+   #27 = Utf8               off\n+   #28 = Utf8               I\n+   #29 = Utf8               length\n+   #30 = Utf8               l\n+   #31 = Utf8               J\n+   #32 = Utf8               i\n+   #33 = Utf8               StackMapTable\n+   #34 = Utf8               (Ljava/io/InputStream;I)J\n+   #35 = Utf8               Exceptions\n+   #36 = Class              #37           // java/io/IOException\n+   #37 = Utf8               java/io/IOException\n+   #38 = Methodref          #39.#41       // java/io/InputStream.read:()I\n+   #39 = Class              #40           // java/io/InputStream\n+   #40 = Utf8               java/io/InputStream\n+   #41 = NameAndType        #42:#43       // read:()I\n+   #42 = Utf8               read\n+   #43 = Utf8               ()I\n+   #44 = Long               -1l\n+   #46 = String             #47           // premature end of data\n+   #47 = Utf8               premature end of data\n+   #48 = Methodref          #36.#49       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #49 = NameAndType        #5:#50        // \"<init>\":(Ljava/lang/String;)V\n+   #50 = Utf8               (Ljava/lang/String;)V\n+   #51 = Utf8               in\n+   #52 = Utf8               Ljava/io/InputStream;\n+   #53 = Utf8               b\n+   #54 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+   #55 = InterfaceMethodref #56.#58       // org/apache/commons/compress/utils/ByteUtils$ByteSupplier.getAsByte:()I\n+   #56 = Class              #57           // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+   #57 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+   #58 = NameAndType        #59:#43       // getAsByte:()I\n+   #59 = Utf8               getAsByte\n+   #60 = Utf8               supplier\n+   #61 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #62 = Utf8               (Ljava/io/DataInput;I)J\n+   #63 = InterfaceMethodref #64.#66       // java/io/DataInput.readUnsignedByte:()I\n+   #64 = Class              #65           // java/io/DataInput\n+   #65 = Utf8               java/io/DataInput\n+   #66 = NameAndType        #67:#43       // readUnsignedByte:()I\n+   #67 = Utf8               readUnsignedByte\n+   #68 = Utf8               Ljava/io/DataInput;\n+   #69 = Utf8               toLittleEndian\n+   #70 = Utf8               ([BJII)V\n+   #71 = Utf8               value\n+   #72 = Utf8               num\n+   #73 = Utf8               (Ljava/io/OutputStream;JI)V\n+   #74 = Methodref          #75.#77       // java/io/OutputStream.write:(I)V\n+   #75 = Class              #76           // java/io/OutputStream\n+   #76 = Utf8               java/io/OutputStream\n+   #77 = NameAndType        #78:#24       // write:(I)V\n+   #78 = Utf8               write\n+   #79 = Utf8               out\n+   #80 = Utf8               Ljava/io/OutputStream;\n+   #81 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n+   #82 = InterfaceMethodref #83.#85       // org/apache/commons/compress/utils/ByteUtils$ByteConsumer.accept:(I)V\n+   #83 = Class              #84           // org/apache/commons/compress/utils/ByteUtils$ByteConsumer\n+   #84 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteConsumer\n+   #85 = NameAndType        #86:#24       // accept:(I)V\n+   #86 = Utf8               accept\n+   #87 = Utf8               consumer\n+   #88 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n+   #89 = Utf8               (Ljava/io/DataOutput;JI)V\n+   #90 = InterfaceMethodref #91.#77       // java/io/DataOutput.write:(I)V\n+   #91 = Class              #92           // java/io/DataOutput\n+   #92 = Utf8               java/io/DataOutput\n+   #93 = Utf8               Ljava/io/DataOutput;\n+   #94 = Class              #95           // java/lang/IllegalArgumentException\n+   #95 = Utf8               java/lang/IllegalArgumentException\n+   #96 = String             #97           // can\\'t read more than eight bytes into a long value\n+   #97 = Utf8               can\\'t read more than eight bytes into a long value\n+   #98 = Methodref          #94.#49       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #99 = Utf8               SourceFile\n+  #100 = Utf8               ByteUtils.java\n+  #101 = Utf8               InnerClasses\n+  #102 = Utf8               ByteConsumer\n+  #103 = Utf8               ByteSupplier\n+  #104 = Class              #105          // org/apache/commons/compress/utils/ByteUtils$InputStreamByteSupplier\n+  #105 = Utf8               org/apache/commons/compress/utils/ByteUtils$InputStreamByteSupplier\n+  #106 = Utf8               InputStreamByteSupplier\n+  #107 = Class              #108          // org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer\n+  #108 = Utf8               org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer\n+  #109 = Utf8               OutputStreamByteConsumer\n {\n   private org.apache.commons.compress.utils.ByteUtils();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #8                  // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 32: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/utils/ByteUtils;\n \n@@ -135,484 +135,478 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n          2: aload_0\n          3: arraylength\n-         4: invokestatic  #2                  // Method fromLittleEndian:([BII)J\n+         4: invokestatic  #16                 // Method fromLittleEndian:([BII)J\n          7: lreturn\n       LineNumberTable:\n         line 68: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 bytes   [B\n \n   public static long fromLittleEndian(byte[], int, int);\n     descriptor: ([BII)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=6, locals=6, args_size=3\n          0: iload_2\n-         1: invokestatic  #3                  // Method checkReadLength:(I)V\n+         1: invokestatic  #21                 // Method checkReadLength:(I)V\n          4: lconst_0\n          5: lstore_3\n          6: iconst_0\n          7: istore        5\n-         9: iload         5\n-        11: iload_2\n-        12: if_icmpge     41\n-        15: lload_3\n-        16: aload_0\n-        17: iload_1\n-        18: iload         5\n-        20: iadd\n-        21: baload\n-        22: i2l\n-        23: ldc2_w        #4                  // long 255l\n-        26: land\n-        27: bipush        8\n-        29: iload         5\n-        31: imul\n-        32: lshl\n-        33: lor\n-        34: lstore_3\n-        35: iinc          5, 1\n-        38: goto          9\n+         9: goto          35\n+        12: lload_3\n+        13: aload_0\n+        14: iload_1\n+        15: iload         5\n+        17: iadd\n+        18: baload\n+        19: i2l\n+        20: ldc2_w        #25                 // long 255l\n+        23: land\n+        24: bipush        8\n+        26: iload         5\n+        28: imul\n+        29: lshl\n+        30: lor\n+        31: lstore_3\n+        32: iinc          5, 1\n+        35: iload         5\n+        37: iload_2\n+        38: if_icmplt     12\n         41: lload_3\n         42: lreturn\n       LineNumberTable:\n         line 80: 0\n         line 81: 4\n         line 82: 6\n-        line 83: 15\n-        line 82: 35\n+        line 83: 12\n+        line 82: 32\n         line 85: 41\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            9      32     5     i   I\n             0      43     0 bytes   [B\n             0      43     1   off   I\n             0      43     2 length   I\n             6      37     3     l   J\n+            9      32     5     i   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 253 /* append */\n-          offset_delta = 9\n+          offset_delta = 12\n           locals = [ long, int ]\n-        frame_type = 250 /* chop */\n-          offset_delta = 31\n+        frame_type = 22 /* same */\n \n   public static long fromLittleEndian(java.io.InputStream, int) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;I)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=6, locals=7, args_size=2\n          0: iload_1\n-         1: invokestatic  #3                  // Method checkReadLength:(I)V\n+         1: invokestatic  #21                 // Method checkReadLength:(I)V\n          4: lconst_0\n          5: lstore_2\n          6: iconst_0\n          7: istore        4\n-         9: iload         4\n-        11: iload_1\n-        12: if_icmpge     58\n-        15: aload_0\n-        16: invokevirtual #6                  // Method java/io/InputStream.read:()I\n-        19: i2l\n-        20: lstore        5\n-        22: lload         5\n-        24: ldc2_w        #7                  // long -1l\n-        27: lcmp\n-        28: ifne          41\n-        31: new           #9                  // class java/io/IOException\n-        34: dup\n-        35: ldc           #10                 // String premature end of data\n-        37: invokespecial #11                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-        40: athrow\n-        41: lload_2\n-        42: lload         5\n-        44: iload         4\n-        46: bipush        8\n-        48: imul\n-        49: lshl\n-        50: lor\n-        51: lstore_2\n-        52: iinc          4, 1\n-        55: goto          9\n+         9: goto          52\n+        12: aload_0\n+        13: invokevirtual #38                 // Method java/io/InputStream.read:()I\n+        16: i2l\n+        17: lstore        5\n+        19: lload         5\n+        21: ldc2_w        #44                 // long -1l\n+        24: lcmp\n+        25: ifne          38\n+        28: new           #36                 // class java/io/IOException\n+        31: dup\n+        32: ldc           #46                 // String premature end of data\n+        34: invokespecial #48                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        37: athrow\n+        38: lload_2\n+        39: lload         5\n+        41: iload         4\n+        43: bipush        8\n+        45: imul\n+        46: lshl\n+        47: lor\n+        48: lstore_2\n+        49: iinc          4, 1\n+        52: iload         4\n+        54: iload_1\n+        55: if_icmplt     12\n         58: lload_2\n         59: lreturn\n       LineNumberTable:\n         line 99: 0\n         line 100: 4\n         line 101: 6\n-        line 102: 15\n-        line 103: 22\n-        line 104: 31\n-        line 106: 41\n-        line 101: 52\n+        line 102: 12\n+        line 103: 19\n+        line 104: 28\n+        line 106: 38\n+        line 101: 49\n         line 108: 58\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           22      30     5     b   J\n-            9      49     4     i   I\n             0      60     0    in   Ljava/io/InputStream;\n             0      60     1 length   I\n             6      54     2     l   J\n+            9      49     4     i   I\n+           19      30     5     b   J\n       StackMapTable: number_of_entries = 3\n         frame_type = 253 /* append */\n-          offset_delta = 9\n+          offset_delta = 12\n           locals = [ long, int ]\n         frame_type = 252 /* append */\n-          offset_delta = 31\n+          offset_delta = 25\n           locals = [ long ]\n-        frame_type = 249 /* chop */\n-          offset_delta = 16\n-    Exceptions:\n-      throws java.io.IOException\n+        frame_type = 250 /* chop */\n+          offset_delta = 13\n \n   public static long fromLittleEndian(org.apache.commons.compress.utils.ByteUtils$ByteSupplier, int) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=6, locals=7, args_size=2\n          0: iload_1\n-         1: invokestatic  #3                  // Method checkReadLength:(I)V\n+         1: invokestatic  #21                 // Method checkReadLength:(I)V\n          4: lconst_0\n          5: lstore_2\n          6: iconst_0\n          7: istore        4\n-         9: iload         4\n-        11: iload_1\n-        12: if_icmpge     60\n-        15: aload_0\n-        16: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/compress/utils/ByteUtils$ByteSupplier.getAsByte:()I\n-        21: i2l\n-        22: lstore        5\n-        24: lload         5\n-        26: ldc2_w        #7                  // long -1l\n-        29: lcmp\n-        30: ifne          43\n-        33: new           #9                  // class java/io/IOException\n-        36: dup\n-        37: ldc           #10                 // String premature end of data\n-        39: invokespecial #11                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-        42: athrow\n-        43: lload_2\n-        44: lload         5\n-        46: iload         4\n-        48: bipush        8\n-        50: imul\n-        51: lshl\n-        52: lor\n-        53: lstore_2\n-        54: iinc          4, 1\n-        57: goto          9\n+         9: goto          54\n+        12: aload_0\n+        13: invokeinterface #55,  1           // InterfaceMethod org/apache/commons/compress/utils/ByteUtils$ByteSupplier.getAsByte:()I\n+        18: i2l\n+        19: lstore        5\n+        21: lload         5\n+        23: ldc2_w        #44                 // long -1l\n+        26: lcmp\n+        27: ifne          40\n+        30: new           #36                 // class java/io/IOException\n+        33: dup\n+        34: ldc           #46                 // String premature end of data\n+        36: invokespecial #48                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        39: athrow\n+        40: lload_2\n+        41: lload         5\n+        43: iload         4\n+        45: bipush        8\n+        47: imul\n+        48: lshl\n+        49: lor\n+        50: lstore_2\n+        51: iinc          4, 1\n+        54: iload         4\n+        56: iload_1\n+        57: if_icmplt     12\n         60: lload_2\n         61: lreturn\n       LineNumberTable:\n         line 125: 0\n         line 126: 4\n         line 127: 6\n-        line 128: 15\n-        line 129: 24\n-        line 130: 33\n-        line 132: 43\n-        line 127: 54\n+        line 128: 12\n+        line 129: 21\n+        line 130: 30\n+        line 132: 40\n+        line 127: 51\n         line 134: 60\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           24      30     5     b   J\n-            9      51     4     i   I\n             0      62     0 supplier   Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n             0      62     1 length   I\n             6      56     2     l   J\n+            9      51     4     i   I\n+           21      30     5     b   J\n       StackMapTable: number_of_entries = 3\n         frame_type = 253 /* append */\n-          offset_delta = 9\n+          offset_delta = 12\n           locals = [ long, int ]\n         frame_type = 252 /* append */\n-          offset_delta = 33\n+          offset_delta = 27\n           locals = [ long ]\n-        frame_type = 249 /* chop */\n-          offset_delta = 16\n-    Exceptions:\n-      throws java.io.IOException\n+        frame_type = 250 /* chop */\n+          offset_delta = 13\n \n   public static long fromLittleEndian(java.io.DataInput, int) throws java.io.IOException;\n     descriptor: (Ljava/io/DataInput;I)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=6, locals=7, args_size=2\n          0: iload_1\n-         1: invokestatic  #3                  // Method checkReadLength:(I)V\n+         1: invokestatic  #21                 // Method checkReadLength:(I)V\n          4: lconst_0\n          5: lstore_2\n          6: iconst_0\n          7: istore        4\n-         9: iload         4\n-        11: iload_1\n-        12: if_icmpge     41\n-        15: aload_0\n-        16: invokeinterface #13,  1           // InterfaceMethod java/io/DataInput.readUnsignedByte:()I\n-        21: i2l\n-        22: lstore        5\n-        24: lload_2\n-        25: lload         5\n-        27: iload         4\n-        29: bipush        8\n-        31: imul\n-        32: lshl\n-        33: lor\n-        34: lstore_2\n-        35: iinc          4, 1\n-        38: goto          9\n+         9: goto          35\n+        12: aload_0\n+        13: invokeinterface #63,  1           // InterfaceMethod java/io/DataInput.readUnsignedByte:()I\n+        18: i2l\n+        19: lstore        5\n+        21: lload_2\n+        22: lload         5\n+        24: iload         4\n+        26: bipush        8\n+        28: imul\n+        29: lshl\n+        30: lor\n+        31: lstore_2\n+        32: iinc          4, 1\n+        35: iload         4\n+        37: iload_1\n+        38: if_icmplt     12\n         41: lload_2\n         42: lreturn\n       LineNumberTable:\n         line 148: 0\n         line 149: 4\n         line 150: 6\n-        line 151: 15\n-        line 152: 24\n-        line 150: 35\n+        line 151: 12\n+        line 152: 21\n+        line 150: 32\n         line 154: 41\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           24      11     5     b   J\n-            9      32     4     i   I\n             0      43     0    in   Ljava/io/DataInput;\n             0      43     1 length   I\n             6      37     2     l   J\n+            9      32     4     i   I\n+           21      11     5     b   J\n       StackMapTable: number_of_entries = 2\n         frame_type = 253 /* append */\n-          offset_delta = 9\n+          offset_delta = 12\n           locals = [ long, int ]\n-        frame_type = 250 /* chop */\n-          offset_delta = 31\n-    Exceptions:\n-      throws java.io.IOException\n+        frame_type = 22 /* same */\n \n   public static void toLittleEndian(byte[], long, int, int);\n     descriptor: ([BJII)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=6, locals=8, args_size=4\n          0: lload_1\n          1: lstore        5\n          3: iconst_0\n          4: istore        7\n-         6: iload         7\n-         8: iload         4\n-        10: if_icmpge     40\n-        13: aload_0\n-        14: iload_3\n-        15: iload         7\n-        17: iadd\n-        18: lload         5\n-        20: ldc2_w        #4                  // long 255l\n-        23: land\n-        24: l2i\n-        25: i2b\n-        26: bastore\n-        27: lload         5\n-        29: bipush        8\n-        31: lshr\n-        32: lstore        5\n-        34: iinc          7, 1\n-        37: goto          6\n+         6: goto          33\n+         9: aload_0\n+        10: iload_3\n+        11: iload         7\n+        13: iadd\n+        14: lload         5\n+        16: ldc2_w        #25                 // long 255l\n+        19: land\n+        20: l2i\n+        21: i2b\n+        22: bastore\n+        23: lload         5\n+        25: bipush        8\n+        27: lshr\n+        28: lstore        5\n+        30: iinc          7, 1\n+        33: iload         7\n+        35: iload         4\n+        37: if_icmplt     9\n         40: return\n       LineNumberTable:\n         line 166: 0\n         line 167: 3\n-        line 168: 13\n-        line 169: 27\n-        line 167: 34\n+        line 168: 9\n+        line 169: 23\n+        line 167: 30\n         line 171: 40\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            6      34     7     i   I\n             0      41     0     b   [B\n             0      41     1 value   J\n             0      41     3   off   I\n             0      41     4 length   I\n             3      38     5   num   J\n+            6      34     7     i   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 253 /* append */\n-          offset_delta = 6\n+          offset_delta = 9\n           locals = [ long, int ]\n-        frame_type = 250 /* chop */\n-          offset_delta = 33\n+        frame_type = 23 /* same */\n \n   public static void toLittleEndian(java.io.OutputStream, long, int) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;JI)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=7, args_size=3\n          0: lload_1\n          1: lstore        4\n          3: iconst_0\n          4: istore        6\n-         6: iload         6\n-         8: iload_3\n-         9: if_icmpge     36\n-        12: aload_0\n-        13: lload         4\n-        15: ldc2_w        #4                  // long 255l\n-        18: land\n-        19: l2i\n-        20: invokevirtual #14                 // Method java/io/OutputStream.write:(I)V\n-        23: lload         4\n-        25: bipush        8\n-        27: lshr\n-        28: lstore        4\n-        30: iinc          6, 1\n-        33: goto          6\n+         6: goto          30\n+         9: aload_0\n+        10: lload         4\n+        12: ldc2_w        #25                 // long 255l\n+        15: land\n+        16: l2i\n+        17: invokevirtual #74                 // Method java/io/OutputStream.write:(I)V\n+        20: lload         4\n+        22: bipush        8\n+        24: lshr\n+        25: lstore        4\n+        27: iinc          6, 1\n+        30: iload         6\n+        32: iload_3\n+        33: if_icmplt     9\n         36: return\n       LineNumberTable:\n         line 184: 0\n         line 185: 3\n-        line 186: 12\n-        line 187: 23\n-        line 185: 30\n+        line 186: 9\n+        line 187: 20\n+        line 185: 27\n         line 189: 36\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            6      30     6     i   I\n             0      37     0   out   Ljava/io/OutputStream;\n             0      37     1 value   J\n             0      37     3 length   I\n             3      34     4   num   J\n+            6      30     6     i   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 253 /* append */\n-          offset_delta = 6\n+          offset_delta = 9\n           locals = [ long, int ]\n-        frame_type = 250 /* chop */\n-          offset_delta = 29\n-    Exceptions:\n-      throws java.io.IOException\n+        frame_type = 20 /* same */\n \n   public static void toLittleEndian(org.apache.commons.compress.utils.ByteUtils$ByteConsumer, long, int) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=7, args_size=3\n          0: lload_1\n          1: lstore        4\n          3: iconst_0\n          4: istore        6\n-         6: iload         6\n-         8: iload_3\n-         9: if_icmpge     38\n-        12: aload_0\n-        13: lload         4\n-        15: ldc2_w        #4                  // long 255l\n-        18: land\n-        19: l2i\n-        20: invokeinterface #15,  2           // InterfaceMethod org/apache/commons/compress/utils/ByteUtils$ByteConsumer.accept:(I)V\n-        25: lload         4\n-        27: bipush        8\n-        29: lshr\n-        30: lstore        4\n-        32: iinc          6, 1\n-        35: goto          6\n+         6: goto          32\n+         9: aload_0\n+        10: lload         4\n+        12: ldc2_w        #25                 // long 255l\n+        15: land\n+        16: l2i\n+        17: invokeinterface #82,  2           // InterfaceMethod org/apache/commons/compress/utils/ByteUtils$ByteConsumer.accept:(I)V\n+        22: lload         4\n+        24: bipush        8\n+        26: lshr\n+        27: lstore        4\n+        29: iinc          6, 1\n+        32: iload         6\n+        34: iload_3\n+        35: if_icmplt     9\n         38: return\n       LineNumberTable:\n         line 201: 0\n         line 202: 3\n-        line 203: 12\n-        line 204: 25\n-        line 202: 32\n+        line 203: 9\n+        line 204: 22\n+        line 202: 29\n         line 206: 38\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            6      32     6     i   I\n             0      39     0 consumer   Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n             0      39     1 value   J\n             0      39     3 length   I\n             3      36     4   num   J\n+            6      32     6     i   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 253 /* append */\n-          offset_delta = 6\n+          offset_delta = 9\n           locals = [ long, int ]\n-        frame_type = 250 /* chop */\n-          offset_delta = 31\n-    Exceptions:\n-      throws java.io.IOException\n+        frame_type = 22 /* same */\n \n   public static void toLittleEndian(java.io.DataOutput, long, int) throws java.io.IOException;\n     descriptor: (Ljava/io/DataOutput;JI)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=7, args_size=3\n          0: lload_1\n          1: lstore        4\n          3: iconst_0\n          4: istore        6\n-         6: iload         6\n-         8: iload_3\n-         9: if_icmpge     38\n-        12: aload_0\n-        13: lload         4\n-        15: ldc2_w        #4                  // long 255l\n-        18: land\n-        19: l2i\n-        20: invokeinterface #16,  2           // InterfaceMethod java/io/DataOutput.write:(I)V\n-        25: lload         4\n-        27: bipush        8\n-        29: lshr\n-        30: lstore        4\n-        32: iinc          6, 1\n-        35: goto          6\n+         6: goto          32\n+         9: aload_0\n+        10: lload         4\n+        12: ldc2_w        #25                 // long 255l\n+        15: land\n+        16: l2i\n+        17: invokeinterface #90,  2           // InterfaceMethod java/io/DataOutput.write:(I)V\n+        22: lload         4\n+        24: bipush        8\n+        26: lshr\n+        27: lstore        4\n+        29: iinc          6, 1\n+        32: iload         6\n+        34: iload_3\n+        35: if_icmplt     9\n         38: return\n       LineNumberTable:\n         line 219: 0\n         line 220: 3\n-        line 221: 12\n-        line 222: 25\n-        line 220: 32\n+        line 221: 9\n+        line 222: 22\n+        line 220: 29\n         line 224: 38\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            6      32     6     i   I\n             0      39     0   out   Ljava/io/DataOutput;\n             0      39     1 value   J\n             0      39     3 length   I\n             3      36     4   num   J\n+            6      32     6     i   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 253 /* append */\n-          offset_delta = 6\n+          offset_delta = 9\n           locals = [ long, int ]\n-        frame_type = 250 /* chop */\n-          offset_delta = 31\n-    Exceptions:\n-      throws java.io.IOException\n+        frame_type = 22 /* same */\n \n   private static final void checkReadLength(int);\n     descriptor: (I)V\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     Code:\n       stack=3, locals=1, args_size=1\n          0: iload_0\n          1: bipush        8\n          3: if_icmple     16\n-         6: new           #17                 // class java/lang/IllegalArgumentException\n+         6: new           #94                 // class java/lang/IllegalArgumentException\n          9: dup\n-        10: ldc           #18                 // String can\\'t read more than eight bytes into a long value\n-        12: invokespecial #19                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        10: ldc           #96                 // String can\\'t read more than eight bytes into a long value\n+        12: invokespecial #98                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         15: athrow\n         16: return\n       LineNumberTable:\n         line 257: 0\n         line 258: 6\n         line 260: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0 length   I\n       StackMapTable: number_of_entries = 1\n         frame_type = 16 /* same */\n }\n SourceFile: \"ByteUtils.java\"\n InnerClasses:\n-  public static #23= #22 of #20;          // OutputStreamByteConsumer=class org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer of class org/apache/commons/compress/utils/ByteUtils\n-  public static #26= #25 of #20;          // InputStreamByteSupplier=class org/apache/commons/compress/utils/ByteUtils$InputStreamByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n-  public static #28= #27 of #20;          // ByteConsumer=class org/apache/commons/compress/utils/ByteUtils$ByteConsumer of class org/apache/commons/compress/utils/ByteUtils\n-  public static #30= #29 of #20;          // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n+  public static #102= #83 of #1;          // ByteConsumer=class org/apache/commons/compress/utils/ByteUtils$ByteConsumer of class org/apache/commons/compress/utils/ByteUtils\n+  public static #103= #56 of #1;          // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n+  public static #106= #104 of #1;         // InputStreamByteSupplier=class org/apache/commons/compress/utils/ByteUtils$InputStreamByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n+  public static #109= #107 of #1;         // OutputStreamByteConsumer=class org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer of class org/apache/commons/compress/utils/ByteUtils\n"}]}
