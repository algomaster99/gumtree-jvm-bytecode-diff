{"diffoscope-json-version": 1, "source1": "first/IOFileFilter.class", "source2": "second/IOFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,76 +1,76 @@\n-  SHA-256 checksum cc22712f926215dc4f7b402bf5c88fa955c95e8b488d73786830bdabce8be947\n+  SHA-256 checksum bf8e7fc15d44af815044d6c961b0500517d0ffa9348f6b1596ff18cc309b43f2\n   Compiled from \"IOFileFilter.java\"\n public interface org.apache.commons.io.filefilter.IOFileFilter extends java.io.FileFilter,java.io.FilenameFilter,org.apache.commons.io.file.PathFilter\n   minor version: 0\n   major version: 52\n   flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT\n-  this_class: #12                         // org/apache/commons/io/filefilter/IOFileFilter\n-  super_class: #13                        // java/lang/Object\n+  this_class: #8                          // org/apache/commons/io/filefilter/IOFileFilter\n+  super_class: #39                        // java/lang/Object\n   interfaces: 3, fields: 1, methods: 7, attributes: 1\n Constant pool:\n-   #1 = InterfaceMethodref #34.#35        // java/nio/file/Path.toFile:()Ljava/io/File;\n-   #2 = InterfaceMethodref #12.#36        // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n-   #3 = Methodref          #37.#38        // org/apache/commons/io/filefilter/AbstractFileFilter.toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-   #4 = Class              #39            // org/apache/commons/io/filefilter/AndFileFilter\n-   #5 = Methodref          #4.#40         // org/apache/commons/io/filefilter/AndFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #6 = Class              #41            // org/apache/commons/io/filefilter/NotFileFilter\n-   #7 = Methodref          #6.#42         // org/apache/commons/io/filefilter/NotFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #8 = Class              #43            // org/apache/commons/io/filefilter/OrFileFilter\n-   #9 = Methodref          #8.#40         // org/apache/commons/io/filefilter/OrFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-  #10 = Class              #44            // java/lang/String\n-  #11 = Fieldref           #12.#45        // org/apache/commons/io/filefilter/IOFileFilter.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-  #12 = Class              #46            // org/apache/commons/io/filefilter/IOFileFilter\n-  #13 = Class              #47            // java/lang/Object\n-  #14 = Class              #48            // java/io/FileFilter\n-  #15 = Class              #49            // java/io/FilenameFilter\n-  #16 = Class              #50            // org/apache/commons/io/file/PathFilter\n-  #17 = Utf8               EMPTY_STRING_ARRAY\n-  #18 = Utf8               [Ljava/lang/String;\n-  #19 = Utf8               accept\n-  #20 = Utf8               (Ljava/io/File;)Z\n-  #21 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n-  #22 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #23 = Utf8               Code\n-  #24 = Utf8               LineNumberTable\n-  #25 = Utf8               and\n-  #26 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #27 = Utf8               negate\n-  #28 = Utf8               ()Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #29 = Utf8               or\n-  #30 = Utf8               <clinit>\n-  #31 = Utf8               ()V\n-  #32 = Utf8               SourceFile\n-  #33 = Utf8               IOFileFilter.java\n-  #34 = Class              #51            // java/nio/file/Path\n-  #35 = NameAndType        #52:#53        // toFile:()Ljava/io/File;\n-  #36 = NameAndType        #19:#20        // accept:(Ljava/io/File;)Z\n-  #37 = Class              #54            // org/apache/commons/io/filefilter/AbstractFileFilter\n-  #38 = NameAndType        #55:#56        // toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-  #39 = Utf8               org/apache/commons/io/filefilter/AndFileFilter\n-  #40 = NameAndType        #57:#58        // \"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-  #41 = Utf8               org/apache/commons/io/filefilter/NotFileFilter\n-  #42 = NameAndType        #57:#59        // \"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-  #43 = Utf8               org/apache/commons/io/filefilter/OrFileFilter\n-  #44 = Utf8               java/lang/String\n-  #45 = NameAndType        #17:#18        // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-  #46 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n-  #47 = Utf8               java/lang/Object\n-  #48 = Utf8               java/io/FileFilter\n-  #49 = Utf8               java/io/FilenameFilter\n-  #50 = Utf8               org/apache/commons/io/file/PathFilter\n-  #51 = Utf8               java/nio/file/Path\n-  #52 = Utf8               toFile\n-  #53 = Utf8               ()Ljava/io/File;\n-  #54 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-  #55 = Utf8               toFileVisitResult\n-  #56 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-  #57 = Utf8               <init>\n-  #58 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-  #59 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #1 = InterfaceMethodref #2.#3          // java/nio/file/Path.toFile:()Ljava/io/File;\n+   #2 = Class              #4             // java/nio/file/Path\n+   #3 = NameAndType        #5:#6          // toFile:()Ljava/io/File;\n+   #4 = Utf8               java/nio/file/Path\n+   #5 = Utf8               toFile\n+   #6 = Utf8               ()Ljava/io/File;\n+   #7 = InterfaceMethodref #8.#9          // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n+   #8 = Class              #10            // org/apache/commons/io/filefilter/IOFileFilter\n+   #9 = NameAndType        #11:#12        // accept:(Ljava/io/File;)Z\n+  #10 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n+  #11 = Utf8               accept\n+  #12 = Utf8               (Ljava/io/File;)Z\n+  #13 = Methodref          #14.#15        // org/apache/commons/io/filefilter/AbstractFileFilter.toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #14 = Class              #16            // org/apache/commons/io/filefilter/AbstractFileFilter\n+  #15 = NameAndType        #17:#18        // toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #16 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+  #17 = Utf8               toFileVisitResult\n+  #18 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #19 = Class              #20            // org/apache/commons/io/filefilter/AndFileFilter\n+  #20 = Utf8               org/apache/commons/io/filefilter/AndFileFilter\n+  #21 = Methodref          #19.#22        // org/apache/commons/io/filefilter/AndFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #22 = NameAndType        #23:#24        // \"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #23 = Utf8               <init>\n+  #24 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #25 = Class              #26            // org/apache/commons/io/filefilter/NotFileFilter\n+  #26 = Utf8               org/apache/commons/io/filefilter/NotFileFilter\n+  #27 = Methodref          #25.#28        // org/apache/commons/io/filefilter/NotFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #28 = NameAndType        #23:#29        // \"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #29 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #30 = Class              #31            // org/apache/commons/io/filefilter/OrFileFilter\n+  #31 = Utf8               org/apache/commons/io/filefilter/OrFileFilter\n+  #32 = Methodref          #30.#22        // org/apache/commons/io/filefilter/OrFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #33 = Class              #34            // java/lang/String\n+  #34 = Utf8               java/lang/String\n+  #35 = Fieldref           #8.#36         // org/apache/commons/io/filefilter/IOFileFilter.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+  #36 = NameAndType        #37:#38        // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+  #37 = Utf8               EMPTY_STRING_ARRAY\n+  #38 = Utf8               [Ljava/lang/String;\n+  #39 = Class              #40            // java/lang/Object\n+  #40 = Utf8               java/lang/Object\n+  #41 = Class              #42            // java/io/FileFilter\n+  #42 = Utf8               java/io/FileFilter\n+  #43 = Class              #44            // java/io/FilenameFilter\n+  #44 = Utf8               java/io/FilenameFilter\n+  #45 = Class              #46            // org/apache/commons/io/file/PathFilter\n+  #46 = Utf8               org/apache/commons/io/file/PathFilter\n+  #47 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+  #48 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #49 = Utf8               Code\n+  #50 = Utf8               LineNumberTable\n+  #51 = Utf8               and\n+  #52 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #53 = Utf8               negate\n+  #54 = Utf8               ()Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #55 = Utf8               or\n+  #56 = Utf8               <clinit>\n+  #57 = Utf8               ()V\n+  #58 = Utf8               SourceFile\n+  #59 = Utf8               IOFileFilter.java\n {\n   public static final java.lang.String[] EMPTY_STRING_ARRAY;\n     descriptor: [Ljava/lang/String;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public abstract boolean accept(java.io.File);\n     descriptor: (Ljava/io/File;)Z\n@@ -84,68 +84,68 @@\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: invokeinterface #1,  1            // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;\n-         7: invokeinterface #2,  2            // InterfaceMethod accept:(Ljava/io/File;)Z\n+         7: invokeinterface #7,  2            // InterfaceMethod accept:(Ljava/io/File;)Z\n         12: aload_1\n-        13: invokestatic  #3                  // Method org/apache/commons/io/filefilter/AbstractFileFilter.toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+        13: invokestatic  #13                 // Method org/apache/commons/io/filefilter/AbstractFileFilter.toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n         16: areturn\n       LineNumberTable:\n         line 74: 0\n \n   public default org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter);\n     descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n-         0: new           #4                  // class org/apache/commons/io/filefilter/AndFileFilter\n+         0: new           #19                 // class org/apache/commons/io/filefilter/AndFileFilter\n          3: dup\n          4: aload_0\n          5: aload_1\n-         6: invokespecial #5                  // Method org/apache/commons/io/filefilter/AndFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+         6: invokespecial #21                 // Method org/apache/commons/io/filefilter/AndFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n          9: areturn\n       LineNumberTable:\n         line 85: 0\n \n   public default org.apache.commons.io.filefilter.IOFileFilter negate();\n     descriptor: ()Lorg/apache/commons/io/filefilter/IOFileFilter;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: new           #6                  // class org/apache/commons/io/filefilter/NotFileFilter\n+         0: new           #25                 // class org/apache/commons/io/filefilter/NotFileFilter\n          3: dup\n          4: aload_0\n-         5: invokespecial #7                  // Method org/apache/commons/io/filefilter/NotFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+         5: invokespecial #27                 // Method org/apache/commons/io/filefilter/NotFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n          8: areturn\n       LineNumberTable:\n         line 95: 0\n \n   public default org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter);\n     descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n-         0: new           #8                  // class org/apache/commons/io/filefilter/OrFileFilter\n+         0: new           #30                 // class org/apache/commons/io/filefilter/OrFileFilter\n          3: dup\n          4: aload_0\n          5: aload_1\n-         6: invokespecial #9                  // Method org/apache/commons/io/filefilter/OrFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+         6: invokespecial #32                 // Method org/apache/commons/io/filefilter/OrFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n          9: areturn\n       LineNumberTable:\n         line 106: 0\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: iconst_0\n-         1: anewarray     #10                 // class java/lang/String\n-         4: putstatic     #11                 // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+         1: anewarray     #33                 // class java/lang/String\n+         4: putstatic     #35                 // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;\n          7: return\n       LineNumberTable:\n         line 38: 0\n }\n SourceFile: \"IOFileFilter.java\"\n"}]}
