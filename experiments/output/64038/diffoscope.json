{"diffoscope-json-version": 1, "source1": "first/CharSequenceUtils.class", "source2": "second/CharSequenceUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,186 +1,185 @@\n-  SHA-256 checksum c7b871953f0f4908a33ff4bbcde348c9b14634a5f2880302b9c88a529fab7eaa\n+  SHA-256 checksum 29806f649854ccb740a73ec4904b6320ccb389763d32795b9ffb1aa9cabc8470\n   Compiled from \"CharSequenceUtils.java\"\n public class org.apache.commons.codec.binary.CharSequenceUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #7                          // org/apache/commons/codec/binary/CharSequenceUtils\n-  super_class: #8                         // java/lang/Object\n+  this_class: #1                          // org/apache/commons/codec/binary/CharSequenceUtils\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 2, attributes: 1\n Constant pool:\n-   #1 = Methodref          #8.#36         // java/lang/Object.\"<init>\":()V\n-   #2 = Class              #37            // java/lang/String\n-   #3 = Methodref          #2.#38         // java/lang/String.regionMatches:(ZILjava/lang/String;II)Z\n-   #4 = InterfaceMethodref #39.#40        // java/lang/CharSequence.charAt:(I)C\n-   #5 = Methodref          #41.#42        // java/lang/Character.toUpperCase:(C)C\n-   #6 = Methodref          #41.#43        // java/lang/Character.toLowerCase:(C)C\n-   #7 = Class              #44            // org/apache/commons/codec/binary/CharSequenceUtils\n-   #8 = Class              #45            // java/lang/Object\n-   #9 = Utf8               <init>\n-  #10 = Utf8               ()V\n-  #11 = Utf8               Code\n-  #12 = Utf8               LineNumberTable\n-  #13 = Utf8               LocalVariableTable\n-  #14 = Utf8               this\n-  #15 = Utf8               Lorg/apache/commons/codec/binary/CharSequenceUtils;\n-  #16 = Utf8               regionMatches\n-  #17 = Utf8               (Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z\n-  #18 = Utf8               c1\n-  #19 = Utf8               C\n-  #20 = Utf8               c2\n-  #21 = Utf8               cs\n-  #22 = Utf8               Ljava/lang/CharSequence;\n-  #23 = Utf8               ignoreCase\n-  #24 = Utf8               Z\n-  #25 = Utf8               thisStart\n-  #26 = Utf8               I\n-  #27 = Utf8               substring\n-  #28 = Utf8               start\n-  #29 = Utf8               length\n-  #30 = Utf8               index1\n-  #31 = Utf8               index2\n-  #32 = Utf8               tmpLen\n-  #33 = Utf8               StackMapTable\n-  #34 = Utf8               SourceFile\n-  #35 = Utf8               CharSequenceUtils.java\n-  #36 = NameAndType        #9:#10         // \"<init>\":()V\n-  #37 = Utf8               java/lang/String\n-  #38 = NameAndType        #16:#46        // regionMatches:(ZILjava/lang/String;II)Z\n-  #39 = Class              #47            // java/lang/CharSequence\n-  #40 = NameAndType        #48:#49        // charAt:(I)C\n-  #41 = Class              #50            // java/lang/Character\n-  #42 = NameAndType        #51:#52        // toUpperCase:(C)C\n-  #43 = NameAndType        #53:#52        // toLowerCase:(C)C\n-  #44 = Utf8               org/apache/commons/codec/binary/CharSequenceUtils\n-  #45 = Utf8               java/lang/Object\n-  #46 = Utf8               (ZILjava/lang/String;II)Z\n-  #47 = Utf8               java/lang/CharSequence\n-  #48 = Utf8               charAt\n-  #49 = Utf8               (I)C\n-  #50 = Utf8               java/lang/Character\n-  #51 = Utf8               toUpperCase\n-  #52 = Utf8               (C)C\n-  #53 = Utf8               toLowerCase\n+   #1 = Class              #2             // org/apache/commons/codec/binary/CharSequenceUtils\n+   #2 = Utf8               org/apache/commons/codec/binary/CharSequenceUtils\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Utf8               Code\n+   #8 = Methodref          #3.#9          // java/lang/Object.\"<init>\":()V\n+   #9 = NameAndType        #5:#6          // \"<init>\":()V\n+  #10 = Utf8               LineNumberTable\n+  #11 = Utf8               LocalVariableTable\n+  #12 = Utf8               this\n+  #13 = Utf8               Lorg/apache/commons/codec/binary/CharSequenceUtils;\n+  #14 = Utf8               regionMatches\n+  #15 = Utf8               (Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z\n+  #16 = Class              #17            // java/lang/String\n+  #17 = Utf8               java/lang/String\n+  #18 = Methodref          #16.#19        // java/lang/String.regionMatches:(ZILjava/lang/String;II)Z\n+  #19 = NameAndType        #14:#20        // regionMatches:(ZILjava/lang/String;II)Z\n+  #20 = Utf8               (ZILjava/lang/String;II)Z\n+  #21 = InterfaceMethodref #22.#24        // java/lang/CharSequence.charAt:(I)C\n+  #22 = Class              #23            // java/lang/CharSequence\n+  #23 = Utf8               java/lang/CharSequence\n+  #24 = NameAndType        #25:#26        // charAt:(I)C\n+  #25 = Utf8               charAt\n+  #26 = Utf8               (I)C\n+  #27 = Methodref          #28.#30        // java/lang/Character.toUpperCase:(C)C\n+  #28 = Class              #29            // java/lang/Character\n+  #29 = Utf8               java/lang/Character\n+  #30 = NameAndType        #31:#32        // toUpperCase:(C)C\n+  #31 = Utf8               toUpperCase\n+  #32 = Utf8               (C)C\n+  #33 = Methodref          #28.#34        // java/lang/Character.toLowerCase:(C)C\n+  #34 = NameAndType        #35:#32        // toLowerCase:(C)C\n+  #35 = Utf8               toLowerCase\n+  #36 = Utf8               cs\n+  #37 = Utf8               Ljava/lang/CharSequence;\n+  #38 = Utf8               ignoreCase\n+  #39 = Utf8               Z\n+  #40 = Utf8               thisStart\n+  #41 = Utf8               I\n+  #42 = Utf8               substring\n+  #43 = Utf8               start\n+  #44 = Utf8               length\n+  #45 = Utf8               index1\n+  #46 = Utf8               index2\n+  #47 = Utf8               tmpLen\n+  #48 = Utf8               c1\n+  #49 = Utf8               C\n+  #50 = Utf8               c2\n+  #51 = Utf8               StackMapTable\n+  #52 = Utf8               SourceFile\n+  #53 = Utf8               CharSequenceUtils.java\n {\n   public org.apache.commons.codec.binary.CharSequenceUtils();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #8                  // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 30: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/codec/binary/CharSequenceUtils;\n \n   static boolean regionMatches(java.lang.CharSequence, boolean, int, java.lang.CharSequence, int, int);\n     descriptor: (Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=6, locals=11, args_size=6\n          0: aload_0\n-         1: instanceof    #2                  // class java/lang/String\n+         1: instanceof    #16                 // class java/lang/String\n          4: ifeq          32\n          7: aload_3\n-         8: instanceof    #2                  // class java/lang/String\n+         8: instanceof    #16                 // class java/lang/String\n         11: ifeq          32\n         14: aload_0\n-        15: checkcast     #2                  // class java/lang/String\n+        15: checkcast     #16                 // class java/lang/String\n         18: iload_1\n         19: iload_2\n         20: aload_3\n-        21: checkcast     #2                  // class java/lang/String\n+        21: checkcast     #16                 // class java/lang/String\n         24: iload         4\n         26: iload         5\n-        28: invokevirtual #3                  // Method java/lang/String.regionMatches:(ZILjava/lang/String;II)Z\n+        28: invokevirtual #18                 // Method java/lang/String.regionMatches:(ZILjava/lang/String;II)Z\n         31: ireturn\n         32: iload_2\n         33: istore        6\n         35: iload         4\n         37: istore        7\n         39: iload         5\n         41: istore        8\n-        43: iload         8\n-        45: iinc          8, -1\n-        48: ifle          124\n-        51: aload_0\n-        52: iload         6\n-        54: iinc          6, 1\n-        57: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n-        62: istore        9\n-        64: aload_3\n-        65: iload         7\n-        67: iinc          7, 1\n-        70: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n-        75: istore        10\n-        77: iload         9\n-        79: iload         10\n-        81: if_icmpne     87\n-        84: goto          43\n-        87: iload_1\n-        88: ifne          93\n-        91: iconst_0\n-        92: ireturn\n-        93: iload         9\n-        95: invokestatic  #5                  // Method java/lang/Character.toUpperCase:(C)C\n-        98: iload         10\n-       100: invokestatic  #5                  // Method java/lang/Character.toUpperCase:(C)C\n-       103: if_icmpeq     121\n-       106: iload         9\n-       108: invokestatic  #6                  // Method java/lang/Character.toLowerCase:(C)C\n-       111: iload         10\n-       113: invokestatic  #6                  // Method java/lang/Character.toLowerCase:(C)C\n-       116: if_icmpeq     121\n-       119: iconst_0\n-       120: ireturn\n-       121: goto          43\n+        43: goto          116\n+        46: aload_0\n+        47: iload         6\n+        49: iinc          6, 1\n+        52: invokeinterface #21,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        57: istore        9\n+        59: aload_3\n+        60: iload         7\n+        62: iinc          7, 1\n+        65: invokeinterface #21,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        70: istore        10\n+        72: iload         9\n+        74: iload         10\n+        76: if_icmpne     82\n+        79: goto          116\n+        82: iload_1\n+        83: ifne          88\n+        86: iconst_0\n+        87: ireturn\n+        88: iload         9\n+        90: invokestatic  #27                 // Method java/lang/Character.toUpperCase:(C)C\n+        93: iload         10\n+        95: invokestatic  #27                 // Method java/lang/Character.toUpperCase:(C)C\n+        98: if_icmpeq     116\n+       101: iload         9\n+       103: invokestatic  #33                 // Method java/lang/Character.toLowerCase:(C)C\n+       106: iload         10\n+       108: invokestatic  #33                 // Method java/lang/Character.toLowerCase:(C)C\n+       111: if_icmpeq     116\n+       114: iconst_0\n+       115: ireturn\n+       116: iload         8\n+       118: iinc          8, -1\n+       121: ifgt          46\n        124: iconst_1\n        125: ireturn\n       LineNumberTable:\n         line 56: 0\n         line 57: 14\n         line 59: 32\n         line 60: 35\n         line 61: 39\n         line 63: 43\n-        line 64: 51\n-        line 65: 64\n-        line 67: 77\n-        line 68: 84\n-        line 71: 87\n-        line 72: 91\n-        line 76: 93\n-        line 77: 108\n-        line 78: 119\n-        line 80: 121\n+        line 64: 46\n+        line 65: 59\n+        line 67: 72\n+        line 68: 79\n+        line 71: 82\n+        line 72: 86\n+        line 76: 88\n+        line 77: 101\n+        line 78: 114\n+        line 63: 116\n         line 82: 124\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           64      57     9    c1   C\n-           77      44    10    c2   C\n             0     126     0    cs   Ljava/lang/CharSequence;\n             0     126     1 ignoreCase   Z\n             0     126     2 thisStart   I\n             0     126     3 substring   Ljava/lang/CharSequence;\n             0     126     4 start   I\n             0     126     5 length   I\n            35      91     6 index1   I\n            39      87     7 index2   I\n            43      83     8 tmpLen   I\n-      StackMapTable: number_of_entries = 6\n+           59      57     9    c1   C\n+           72      44    10    c2   C\n+      StackMapTable: number_of_entries = 5\n         frame_type = 32 /* same */\n         frame_type = 254 /* append */\n-          offset_delta = 10\n+          offset_delta = 13\n           locals = [ int, int, int ]\n         frame_type = 253 /* append */\n-          offset_delta = 43\n+          offset_delta = 35\n           locals = [ int, int ]\n         frame_type = 5 /* same */\n         frame_type = 249 /* chop */\n           offset_delta = 27\n-        frame_type = 2 /* same */\n }\n SourceFile: \"CharSequenceUtils.java\"\n"}]}
