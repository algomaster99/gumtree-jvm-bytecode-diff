{"diffoscope-json-version": 1, "source1": "first/CircularBuffer.class", "source2": "second/CircularBuffer.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,59 +1,59 @@\n-  SHA-256 checksum b5bca650860c3ac5a54150eb34d3801db9b25344b9fc3d05a3af1c4ceebd643c\n+  SHA-256 checksum a044c6510cfec90c3e89c6879f1001cf4d3453bb037bd67f513e7322b031594a\n   Compiled from \"CircularBuffer.java\"\n class org.apache.commons.compress.archivers.zip.CircularBuffer\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n-  this_class: #8                          // org/apache/commons/compress/archivers/zip/CircularBuffer\n-  super_class: #2                         // java/lang/Object\n+  this_class: #1                          // org/apache/commons/compress/archivers/zip/CircularBuffer\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 4, methods: 5, attributes: 1\n Constant pool:\n-   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n-   #2 = Class              #4             // java/lang/Object\n-   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #1 = Class              #2             // org/apache/commons/compress/archivers/zip/CircularBuffer\n+   #2 = Utf8               org/apache/commons/compress/archivers/zip/CircularBuffer\n+   #3 = Class              #4             // java/lang/Object\n    #4 = Utf8               java/lang/Object\n-   #5 = Utf8               <init>\n-   #6 = Utf8               ()V\n-   #7 = Fieldref           #8.#9          // org/apache/commons/compress/archivers/zip/CircularBuffer.size:I\n-   #8 = Class              #10            // org/apache/commons/compress/archivers/zip/CircularBuffer\n-   #9 = NameAndType        #11:#12        // size:I\n-  #10 = Utf8               org/apache/commons/compress/archivers/zip/CircularBuffer\n-  #11 = Utf8               size\n-  #12 = Utf8               I\n-  #13 = Fieldref           #8.#14         // org/apache/commons/compress/archivers/zip/CircularBuffer.buffer:[B\n-  #14 = NameAndType        #15:#16        // buffer:[B\n-  #15 = Utf8               buffer\n-  #16 = Utf8               [B\n-  #17 = Fieldref           #8.#18         // org/apache/commons/compress/archivers/zip/CircularBuffer.readIndex:I\n-  #18 = NameAndType        #19:#12        // readIndex:I\n-  #19 = Utf8               readIndex\n-  #20 = Fieldref           #8.#21         // org/apache/commons/compress/archivers/zip/CircularBuffer.writeIndex:I\n-  #21 = NameAndType        #22:#12        // writeIndex:I\n-  #22 = Utf8               writeIndex\n-  #23 = Methodref          #8.#24         // org/apache/commons/compress/archivers/zip/CircularBuffer.available:()Z\n-  #24 = NameAndType        #25:#26        // available:()Z\n+   #5 = Utf8               size\n+   #6 = Utf8               I\n+   #7 = Utf8               buffer\n+   #8 = Utf8               [B\n+   #9 = Utf8               readIndex\n+  #10 = Utf8               writeIndex\n+  #11 = Utf8               <init>\n+  #12 = Utf8               (I)V\n+  #13 = Utf8               Code\n+  #14 = Methodref          #3.#15         // java/lang/Object.\"<init>\":()V\n+  #15 = NameAndType        #11:#16        // \"<init>\":()V\n+  #16 = Utf8               ()V\n+  #17 = Fieldref           #1.#18         // org/apache/commons/compress/archivers/zip/CircularBuffer.size:I\n+  #18 = NameAndType        #5:#6          // size:I\n+  #19 = Fieldref           #1.#20         // org/apache/commons/compress/archivers/zip/CircularBuffer.buffer:[B\n+  #20 = NameAndType        #7:#8          // buffer:[B\n+  #21 = Utf8               LineNumberTable\n+  #22 = Utf8               LocalVariableTable\n+  #23 = Utf8               this\n+  #24 = Utf8               Lorg/apache/commons/compress/archivers/zip/CircularBuffer;\n   #25 = Utf8               available\n   #26 = Utf8               ()Z\n-  #27 = Utf8               (I)V\n-  #28 = Utf8               Code\n-  #29 = Utf8               LineNumberTable\n-  #30 = Utf8               LocalVariableTable\n-  #31 = Utf8               this\n-  #32 = Utf8               Lorg/apache/commons/compress/archivers/zip/CircularBuffer;\n-  #33 = Utf8               StackMapTable\n-  #34 = Utf8               copy\n-  #35 = Utf8               (II)V\n-  #36 = Utf8               i\n-  #37 = Utf8               distance\n-  #38 = Utf8               length\n-  #39 = Utf8               pos1\n-  #40 = Utf8               pos2\n-  #41 = Utf8               get\n-  #42 = Utf8               ()I\n+  #27 = Fieldref           #1.#28         // org/apache/commons/compress/archivers/zip/CircularBuffer.readIndex:I\n+  #28 = NameAndType        #9:#6          // readIndex:I\n+  #29 = Fieldref           #1.#30         // org/apache/commons/compress/archivers/zip/CircularBuffer.writeIndex:I\n+  #30 = NameAndType        #10:#6         // writeIndex:I\n+  #31 = Utf8               StackMapTable\n+  #32 = Utf8               copy\n+  #33 = Utf8               (II)V\n+  #34 = Utf8               distance\n+  #35 = Utf8               length\n+  #36 = Utf8               pos1\n+  #37 = Utf8               pos2\n+  #38 = Utf8               i\n+  #39 = Utf8               get\n+  #40 = Utf8               ()I\n+  #41 = Methodref          #1.#42         // org/apache/commons/compress/archivers/zip/CircularBuffer.available:()Z\n+  #42 = NameAndType        #25:#26        // available:()Z\n   #43 = Utf8               value\n   #44 = Utf8               put\n   #45 = Utf8               SourceFile\n   #46 = Utf8               CircularBuffer.java\n {\n   private final int size;\n     descriptor: I\n@@ -73,22 +73,22 @@\n \n   org.apache.commons.compress.archivers.zip.CircularBuffer(int);\n     descriptor: (I)V\n     flags: (0x0000)\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #14                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iload_1\n-         6: putfield      #7                  // Field size:I\n+         6: putfield      #17                 // Field size:I\n          9: aload_0\n         10: iload_1\n         11: newarray       byte\n-        13: putfield      #13                 // Field buffer:[B\n+        13: putfield      #19                 // Field buffer:[B\n         16: return\n       LineNumberTable:\n         line 41: 0\n         line 42: 4\n         line 43: 9\n         line 44: 16\n       LocalVariableTable:\n@@ -98,164 +98,161 @@\n \n   public boolean available();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #17                 // Field readIndex:I\n+         1: getfield      #27                 // Field readIndex:I\n          4: aload_0\n-         5: getfield      #20                 // Field writeIndex:I\n-         8: if_icmpeq     15\n+         5: getfield      #29                 // Field writeIndex:I\n+         8: if_icmpeq     13\n         11: iconst_1\n-        12: goto          16\n-        15: iconst_0\n-        16: ireturn\n+        12: ireturn\n+        13: iconst_0\n+        14: ireturn\n       LineNumberTable:\n         line 52: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      17     0  this   Lorg/apache/commons/compress/archivers/zip/CircularBuffer;\n-      StackMapTable: number_of_entries = 2\n-        frame_type = 15 /* same */\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n+            0      15     0  this   Lorg/apache/commons/compress/archivers/zip/CircularBuffer;\n+      StackMapTable: number_of_entries = 1\n+        frame_type = 13 /* same */\n \n   public void copy(int, int);\n     descriptor: (II)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=6, args_size=3\n          0: aload_0\n-         1: getfield      #20                 // Field writeIndex:I\n+         1: getfield      #29                 // Field writeIndex:I\n          4: iload_1\n          5: isub\n          6: istore_3\n          7: iload_3\n          8: iload_2\n          9: iadd\n         10: istore        4\n         12: iload_3\n         13: istore        5\n-        15: iload         5\n-        17: iload         4\n-        19: if_icmpge     69\n+        15: goto          62\n+        18: aload_0\n+        19: getfield      #19                 // Field buffer:[B\n         22: aload_0\n-        23: getfield      #13                 // Field buffer:[B\n+        23: getfield      #29                 // Field writeIndex:I\n         26: aload_0\n-        27: getfield      #20                 // Field writeIndex:I\n-        30: aload_0\n-        31: getfield      #13                 // Field buffer:[B\n-        34: iload         5\n-        36: aload_0\n-        37: getfield      #7                  // Field size:I\n-        40: iadd\n-        41: aload_0\n-        42: getfield      #7                  // Field size:I\n-        45: irem\n-        46: baload\n-        47: bastore\n-        48: aload_0\n-        49: aload_0\n-        50: getfield      #20                 // Field writeIndex:I\n-        53: iconst_1\n-        54: iadd\n-        55: aload_0\n-        56: getfield      #7                  // Field size:I\n-        59: irem\n-        60: putfield      #20                 // Field writeIndex:I\n-        63: iinc          5, 1\n-        66: goto          15\n+        27: getfield      #19                 // Field buffer:[B\n+        30: iload         5\n+        32: aload_0\n+        33: getfield      #17                 // Field size:I\n+        36: iadd\n+        37: aload_0\n+        38: getfield      #17                 // Field size:I\n+        41: irem\n+        42: baload\n+        43: bastore\n+        44: aload_0\n+        45: aload_0\n+        46: getfield      #29                 // Field writeIndex:I\n+        49: iconst_1\n+        50: iadd\n+        51: aload_0\n+        52: getfield      #17                 // Field size:I\n+        55: irem\n+        56: putfield      #29                 // Field writeIndex:I\n+        59: iinc          5, 1\n+        62: iload         5\n+        64: iload         4\n+        66: if_icmplt     18\n         69: return\n       LineNumberTable:\n         line 62: 0\n         line 63: 7\n         line 64: 12\n-        line 65: 22\n-        line 66: 48\n-        line 64: 63\n+        line 65: 18\n+        line 66: 44\n+        line 64: 59\n         line 68: 69\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           15      54     5     i   I\n             0      70     0  this   Lorg/apache/commons/compress/archivers/zip/CircularBuffer;\n             0      70     1 distance   I\n             0      70     2 length   I\n             7      63     3  pos1   I\n            12      58     4  pos2   I\n+           15      54     5     i   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 254 /* append */\n-          offset_delta = 15\n+          offset_delta = 18\n           locals = [ int, int, int ]\n-        frame_type = 250 /* chop */\n-          offset_delta = 53\n+        frame_type = 43 /* same */\n \n   public int get();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #23                 // Method available:()Z\n+         1: invokevirtual #41                 // Method available:()Z\n          4: ifeq          38\n          7: aload_0\n-         8: getfield      #13                 // Field buffer:[B\n+         8: getfield      #19                 // Field buffer:[B\n         11: aload_0\n-        12: getfield      #17                 // Field readIndex:I\n+        12: getfield      #27                 // Field readIndex:I\n         15: baload\n         16: istore_1\n         17: aload_0\n         18: aload_0\n-        19: getfield      #17                 // Field readIndex:I\n+        19: getfield      #27                 // Field readIndex:I\n         22: iconst_1\n         23: iadd\n         24: aload_0\n-        25: getfield      #7                  // Field size:I\n+        25: getfield      #17                 // Field size:I\n         28: irem\n-        29: putfield      #17                 // Field readIndex:I\n+        29: putfield      #27                 // Field readIndex:I\n         32: iload_1\n         33: sipush        255\n         36: iand\n         37: ireturn\n         38: iconst_m1\n         39: ireturn\n       LineNumberTable:\n         line 76: 0\n         line 77: 7\n         line 78: 17\n         line 79: 32\n         line 81: 38\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           17      21     1 value   I\n             0      40     0  this   Lorg/apache/commons/compress/archivers/zip/CircularBuffer;\n+           17      21     1 value   I\n       StackMapTable: number_of_entries = 1\n         frame_type = 38 /* same */\n \n   public void put(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #13                 // Field buffer:[B\n+         1: getfield      #19                 // Field buffer:[B\n          4: aload_0\n-         5: getfield      #20                 // Field writeIndex:I\n+         5: getfield      #29                 // Field writeIndex:I\n          8: iload_1\n          9: i2b\n         10: bastore\n         11: aload_0\n         12: aload_0\n-        13: getfield      #20                 // Field writeIndex:I\n+        13: getfield      #29                 // Field writeIndex:I\n         16: iconst_1\n         17: iadd\n         18: aload_0\n-        19: getfield      #7                  // Field size:I\n+        19: getfield      #17                 // Field size:I\n         22: irem\n-        23: putfield      #20                 // Field writeIndex:I\n+        23: putfield      #29                 // Field writeIndex:I\n         26: return\n       LineNumberTable:\n         line 90: 0\n         line 91: 11\n         line 92: 26\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n"}]}
