{"diffoscope-json-version": 1, "source1": "first/PercentCodec.class", "source2": "second/PercentCodec.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,180 +1,180 @@\n-  SHA-256 checksum 9d162a63db06bded734bda264bc1c8606360a282d138189474df7a6ecf5bb1b2\n+  SHA-256 checksum db3c5c77262e50cc2c28d76859b764347731ad016eaf7d0382a08d3eee3aa997\n   Compiled from \"PercentCodec.java\"\n public class org.apache.commons.codec.net.PercentCodec implements org.apache.commons.codec.BinaryEncoder,org.apache.commons.codec.BinaryDecoder\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #12                         // org/apache/commons/codec/net/PercentCodec\n-  super_class: #48                        // java/lang/Object\n+  this_class: #8                          // org/apache/commons/codec/net/PercentCodec\n+  super_class: #2                         // java/lang/Object\n   interfaces: 2, fields: 5, methods: 15, attributes: 1\n Constant pool:\n-    #1 = Methodref          #48.#91       // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #12.#92       // org/apache/commons/codec/net/PercentCodec.ESCAPE_CHAR:B\n-    #3 = Class              #93           // java/util/BitSet\n-    #4 = Methodref          #3.#91        // java/util/BitSet.\"<init>\":()V\n-    #5 = Fieldref           #12.#94       // org/apache/commons/codec/net/PercentCodec.alwaysEncodeChars:Ljava/util/BitSet;\n-    #6 = Class              #95           // java/lang/Integer\n-    #7 = Integer            2147483647\n-    #8 = Fieldref           #12.#96       // org/apache/commons/codec/net/PercentCodec.alwaysEncodeCharsMin:I\n-    #9 = Integer            -2147483648\n-   #10 = Fieldref           #12.#97       // org/apache/commons/codec/net/PercentCodec.alwaysEncodeCharsMax:I\n-   #11 = Fieldref           #12.#98       // org/apache/commons/codec/net/PercentCodec.plusForSpace:Z\n-   #12 = Class              #99           // org/apache/commons/codec/net/PercentCodec\n-   #13 = Methodref          #12.#100      // org/apache/commons/codec/net/PercentCodec.insertAlwaysEncodeChar:(B)V\n-   #14 = Methodref          #12.#101      // org/apache/commons/codec/net/PercentCodec.insertAlwaysEncodeChars:([B)V\n-   #15 = Methodref          #3.#102       // java/util/BitSet.set:(I)V\n-   #16 = Methodref          #12.#103      // org/apache/commons/codec/net/PercentCodec.expectedEncodingBytes:([B)I\n-   #17 = Methodref          #12.#104      // org/apache/commons/codec/net/PercentCodec.containsSpace:([B)Z\n-   #18 = Methodref          #12.#105      // org/apache/commons/codec/net/PercentCodec.doEncode:([BIZ)[B\n-   #19 = Methodref          #77.#106      // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n-   #20 = Methodref          #12.#107      // org/apache/commons/codec/net/PercentCodec.canEncode:(B)Z\n-   #21 = Methodref          #108.#109     // org/apache/commons/codec/net/Utils.hexDigit:(I)C\n-   #22 = Methodref          #77.#110      // java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n-   #23 = Methodref          #77.#111      // java/nio/ByteBuffer.array:()[B\n-   #24 = Methodref          #12.#112      // org/apache/commons/codec/net/PercentCodec.isAsciiChar:(B)Z\n-   #25 = Methodref          #12.#113      // org/apache/commons/codec/net/PercentCodec.inAlwaysEncodeCharsRange:(B)Z\n-   #26 = Methodref          #3.#114       // java/util/BitSet.get:(I)Z\n-   #27 = Methodref          #12.#115      // org/apache/commons/codec/net/PercentCodec.expectedDecodingBytes:([B)I\n-   #28 = Methodref          #108.#116     // org/apache/commons/codec/net/Utils.digit16:(B)I\n-   #29 = Class              #117          // java/lang/ArrayIndexOutOfBoundsException\n-   #30 = Class              #118          // org/apache/commons/codec/DecoderException\n-   #31 = String             #119          // Invalid percent decoding:\n-   #32 = Methodref          #30.#120      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #33 = Class              #121          // \"[B\"\n-   #34 = Methodref          #12.#122      // org/apache/commons/codec/net/PercentCodec.encode:([B)[B\n-   #35 = Class              #123          // org/apache/commons/codec/EncoderException\n-   #36 = Class              #124          // java/lang/StringBuilder\n-   #37 = Methodref          #36.#91       // java/lang/StringBuilder.\"<init>\":()V\n-   #38 = String             #125          // Objects of type\n-   #39 = Methodref          #36.#126      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #40 = Methodref          #48.#127      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #41 = Methodref          #128.#129     // java/lang/Class.getName:()Ljava/lang/String;\n-   #42 = String             #130          //  cannot be Percent encoded\n-   #43 = Methodref          #36.#131      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #44 = Methodref          #35.#132      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n-   #45 = Methodref          #12.#133      // org/apache/commons/codec/net/PercentCodec.decode:([B)[B\n-   #46 = String             #134          //  cannot be Percent decoded\n-   #47 = Methodref          #30.#132      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n-   #48 = Class              #135          // java/lang/Object\n-   #49 = Class              #136          // org/apache/commons/codec/BinaryEncoder\n-   #50 = Class              #137          // org/apache/commons/codec/BinaryDecoder\n-   #51 = Utf8               ESCAPE_CHAR\n-   #52 = Utf8               B\n-   #53 = Utf8               ConstantValue\n-   #54 = Integer            37\n-   #55 = Utf8               alwaysEncodeChars\n-   #56 = Utf8               Ljava/util/BitSet;\n-   #57 = Utf8               plusForSpace\n-   #58 = Utf8               Z\n-   #59 = Utf8               alwaysEncodeCharsMin\n-   #60 = Utf8               I\n-   #61 = Utf8               alwaysEncodeCharsMax\n-   #62 = Utf8               <init>\n-   #63 = Utf8               ()V\n-   #64 = Utf8               Code\n-   #65 = Utf8               LineNumberTable\n-   #66 = Utf8               ([BZ)V\n-   #67 = Utf8               insertAlwaysEncodeChars\n-   #68 = Utf8               ([B)V\n-   #69 = Utf8               StackMapTable\n-   #70 = Utf8               insertAlwaysEncodeChar\n-   #71 = Utf8               (B)V\n-   #72 = Utf8               encode\n-   #73 = Utf8               ([B)[B\n-   #74 = Utf8               Exceptions\n-   #75 = Utf8               doEncode\n-   #76 = Utf8               ([BIZ)[B\n-   #77 = Class              #138          // java/nio/ByteBuffer\n-   #78 = Utf8               expectedEncodingBytes\n-   #79 = Utf8               ([B)I\n-   #80 = Utf8               containsSpace\n-   #81 = Utf8               ([B)Z\n-   #82 = Utf8               canEncode\n-   #83 = Utf8               (B)Z\n-   #84 = Utf8               inAlwaysEncodeCharsRange\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Fieldref           #8.#9         // org/apache/commons/codec/net/PercentCodec.ESCAPE_CHAR:B\n+    #8 = Class              #10           // org/apache/commons/codec/net/PercentCodec\n+    #9 = NameAndType        #11:#12       // ESCAPE_CHAR:B\n+   #10 = Utf8               org/apache/commons/codec/net/PercentCodec\n+   #11 = Utf8               ESCAPE_CHAR\n+   #12 = Utf8               B\n+   #13 = Class              #14           // java/util/BitSet\n+   #14 = Utf8               java/util/BitSet\n+   #15 = Methodref          #13.#3        // java/util/BitSet.\"<init>\":()V\n+   #16 = Fieldref           #8.#17        // org/apache/commons/codec/net/PercentCodec.alwaysEncodeChars:Ljava/util/BitSet;\n+   #17 = NameAndType        #18:#19       // alwaysEncodeChars:Ljava/util/BitSet;\n+   #18 = Utf8               alwaysEncodeChars\n+   #19 = Utf8               Ljava/util/BitSet;\n+   #20 = Class              #21           // java/lang/Integer\n+   #21 = Utf8               java/lang/Integer\n+   #22 = Integer            2147483647\n+   #23 = Fieldref           #8.#24        // org/apache/commons/codec/net/PercentCodec.alwaysEncodeCharsMin:I\n+   #24 = NameAndType        #25:#26       // alwaysEncodeCharsMin:I\n+   #25 = Utf8               alwaysEncodeCharsMin\n+   #26 = Utf8               I\n+   #27 = Integer            -2147483648\n+   #28 = Fieldref           #8.#29        // org/apache/commons/codec/net/PercentCodec.alwaysEncodeCharsMax:I\n+   #29 = NameAndType        #30:#26       // alwaysEncodeCharsMax:I\n+   #30 = Utf8               alwaysEncodeCharsMax\n+   #31 = Fieldref           #8.#32        // org/apache/commons/codec/net/PercentCodec.plusForSpace:Z\n+   #32 = NameAndType        #33:#34       // plusForSpace:Z\n+   #33 = Utf8               plusForSpace\n+   #34 = Utf8               Z\n+   #35 = Methodref          #8.#36        // org/apache/commons/codec/net/PercentCodec.insertAlwaysEncodeChar:(B)V\n+   #36 = NameAndType        #37:#38       // insertAlwaysEncodeChar:(B)V\n+   #37 = Utf8               insertAlwaysEncodeChar\n+   #38 = Utf8               (B)V\n+   #39 = Methodref          #8.#40        // org/apache/commons/codec/net/PercentCodec.insertAlwaysEncodeChars:([B)V\n+   #40 = NameAndType        #41:#42       // insertAlwaysEncodeChars:([B)V\n+   #41 = Utf8               insertAlwaysEncodeChars\n+   #42 = Utf8               ([B)V\n+   #43 = Methodref          #13.#44       // java/util/BitSet.set:(I)V\n+   #44 = NameAndType        #45:#46       // set:(I)V\n+   #45 = Utf8               set\n+   #46 = Utf8               (I)V\n+   #47 = Methodref          #8.#48        // org/apache/commons/codec/net/PercentCodec.expectedEncodingBytes:([B)I\n+   #48 = NameAndType        #49:#50       // expectedEncodingBytes:([B)I\n+   #49 = Utf8               expectedEncodingBytes\n+   #50 = Utf8               ([B)I\n+   #51 = Methodref          #8.#52        // org/apache/commons/codec/net/PercentCodec.containsSpace:([B)Z\n+   #52 = NameAndType        #53:#54       // containsSpace:([B)Z\n+   #53 = Utf8               containsSpace\n+   #54 = Utf8               ([B)Z\n+   #55 = Methodref          #8.#56        // org/apache/commons/codec/net/PercentCodec.doEncode:([BIZ)[B\n+   #56 = NameAndType        #57:#58       // doEncode:([BIZ)[B\n+   #57 = Utf8               doEncode\n+   #58 = Utf8               ([BIZ)[B\n+   #59 = Methodref          #60.#61       // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n+   #60 = Class              #62           // java/nio/ByteBuffer\n+   #61 = NameAndType        #63:#64       // allocate:(I)Ljava/nio/ByteBuffer;\n+   #62 = Utf8               java/nio/ByteBuffer\n+   #63 = Utf8               allocate\n+   #64 = Utf8               (I)Ljava/nio/ByteBuffer;\n+   #65 = Methodref          #8.#66        // org/apache/commons/codec/net/PercentCodec.canEncode:(B)Z\n+   #66 = NameAndType        #67:#68       // canEncode:(B)Z\n+   #67 = Utf8               canEncode\n+   #68 = Utf8               (B)Z\n+   #69 = Methodref          #70.#71       // org/apache/commons/codec/net/Utils.hexDigit:(I)C\n+   #70 = Class              #72           // org/apache/commons/codec/net/Utils\n+   #71 = NameAndType        #73:#74       // hexDigit:(I)C\n+   #72 = Utf8               org/apache/commons/codec/net/Utils\n+   #73 = Utf8               hexDigit\n+   #74 = Utf8               (I)C\n+   #75 = Methodref          #60.#76       // java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n+   #76 = NameAndType        #77:#78       // put:(B)Ljava/nio/ByteBuffer;\n+   #77 = Utf8               put\n+   #78 = Utf8               (B)Ljava/nio/ByteBuffer;\n+   #79 = Methodref          #60.#80       // java/nio/ByteBuffer.array:()[B\n+   #80 = NameAndType        #81:#82       // array:()[B\n+   #81 = Utf8               array\n+   #82 = Utf8               ()[B\n+   #83 = Methodref          #8.#84        // org/apache/commons/codec/net/PercentCodec.isAsciiChar:(B)Z\n+   #84 = NameAndType        #85:#68       // isAsciiChar:(B)Z\n    #85 = Utf8               isAsciiChar\n-   #86 = Utf8               decode\n-   #87 = Utf8               expectedDecodingBytes\n-   #88 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-   #89 = Utf8               SourceFile\n-   #90 = Utf8               PercentCodec.java\n-   #91 = NameAndType        #62:#63       // \"<init>\":()V\n-   #92 = NameAndType        #51:#52       // ESCAPE_CHAR:B\n-   #93 = Utf8               java/util/BitSet\n-   #94 = NameAndType        #55:#56       // alwaysEncodeChars:Ljava/util/BitSet;\n-   #95 = Utf8               java/lang/Integer\n-   #96 = NameAndType        #59:#60       // alwaysEncodeCharsMin:I\n-   #97 = NameAndType        #61:#60       // alwaysEncodeCharsMax:I\n-   #98 = NameAndType        #57:#58       // plusForSpace:Z\n-   #99 = Utf8               org/apache/commons/codec/net/PercentCodec\n-  #100 = NameAndType        #70:#71       // insertAlwaysEncodeChar:(B)V\n-  #101 = NameAndType        #67:#68       // insertAlwaysEncodeChars:([B)V\n-  #102 = NameAndType        #139:#140     // set:(I)V\n-  #103 = NameAndType        #78:#79       // expectedEncodingBytes:([B)I\n-  #104 = NameAndType        #80:#81       // containsSpace:([B)Z\n-  #105 = NameAndType        #75:#76       // doEncode:([BIZ)[B\n-  #106 = NameAndType        #141:#142     // allocate:(I)Ljava/nio/ByteBuffer;\n-  #107 = NameAndType        #82:#83       // canEncode:(B)Z\n-  #108 = Class              #143          // org/apache/commons/codec/net/Utils\n-  #109 = NameAndType        #144:#145     // hexDigit:(I)C\n-  #110 = NameAndType        #146:#147     // put:(B)Ljava/nio/ByteBuffer;\n-  #111 = NameAndType        #148:#149     // array:()[B\n-  #112 = NameAndType        #85:#83       // isAsciiChar:(B)Z\n-  #113 = NameAndType        #84:#83       // inAlwaysEncodeCharsRange:(B)Z\n-  #114 = NameAndType        #150:#151     // get:(I)Z\n-  #115 = NameAndType        #87:#79       // expectedDecodingBytes:([B)I\n-  #116 = NameAndType        #152:#153     // digit16:(B)I\n-  #117 = Utf8               java/lang/ArrayIndexOutOfBoundsException\n-  #118 = Utf8               org/apache/commons/codec/DecoderException\n-  #119 = Utf8               Invalid percent decoding:\n-  #120 = NameAndType        #62:#154      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #121 = Utf8               [B\n-  #122 = NameAndType        #72:#73       // encode:([B)[B\n-  #123 = Utf8               org/apache/commons/codec/EncoderException\n-  #124 = Utf8               java/lang/StringBuilder\n-  #125 = Utf8               Objects of type\n-  #126 = NameAndType        #155:#156     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #127 = NameAndType        #157:#158     // getClass:()Ljava/lang/Class;\n-  #128 = Class              #159          // java/lang/Class\n-  #129 = NameAndType        #160:#161     // getName:()Ljava/lang/String;\n-  #130 = Utf8                cannot be Percent encoded\n-  #131 = NameAndType        #162:#161     // toString:()Ljava/lang/String;\n-  #132 = NameAndType        #62:#163      // \"<init>\":(Ljava/lang/String;)V\n-  #133 = NameAndType        #86:#73       // decode:([B)[B\n-  #134 = Utf8                cannot be Percent decoded\n-  #135 = Utf8               java/lang/Object\n-  #136 = Utf8               org/apache/commons/codec/BinaryEncoder\n-  #137 = Utf8               org/apache/commons/codec/BinaryDecoder\n-  #138 = Utf8               java/nio/ByteBuffer\n-  #139 = Utf8               set\n-  #140 = Utf8               (I)V\n-  #141 = Utf8               allocate\n-  #142 = Utf8               (I)Ljava/nio/ByteBuffer;\n-  #143 = Utf8               org/apache/commons/codec/net/Utils\n-  #144 = Utf8               hexDigit\n-  #145 = Utf8               (I)C\n-  #146 = Utf8               put\n-  #147 = Utf8               (B)Ljava/nio/ByteBuffer;\n-  #148 = Utf8               array\n-  #149 = Utf8               ()[B\n-  #150 = Utf8               get\n-  #151 = Utf8               (I)Z\n-  #152 = Utf8               digit16\n-  #153 = Utf8               (B)I\n-  #154 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #155 = Utf8               append\n-  #156 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #157 = Utf8               getClass\n-  #158 = Utf8               ()Ljava/lang/Class;\n-  #159 = Utf8               java/lang/Class\n-  #160 = Utf8               getName\n-  #161 = Utf8               ()Ljava/lang/String;\n-  #162 = Utf8               toString\n-  #163 = Utf8               (Ljava/lang/String;)V\n+   #86 = Methodref          #8.#87        // org/apache/commons/codec/net/PercentCodec.inAlwaysEncodeCharsRange:(B)Z\n+   #87 = NameAndType        #88:#68       // inAlwaysEncodeCharsRange:(B)Z\n+   #88 = Utf8               inAlwaysEncodeCharsRange\n+   #89 = Methodref          #13.#90       // java/util/BitSet.get:(I)Z\n+   #90 = NameAndType        #91:#92       // get:(I)Z\n+   #91 = Utf8               get\n+   #92 = Utf8               (I)Z\n+   #93 = Methodref          #8.#94        // org/apache/commons/codec/net/PercentCodec.expectedDecodingBytes:([B)I\n+   #94 = NameAndType        #95:#50       // expectedDecodingBytes:([B)I\n+   #95 = Utf8               expectedDecodingBytes\n+   #96 = Methodref          #70.#97       // org/apache/commons/codec/net/Utils.digit16:(B)I\n+   #97 = NameAndType        #98:#99       // digit16:(B)I\n+   #98 = Utf8               digit16\n+   #99 = Utf8               (B)I\n+  #100 = Class              #101          // java/lang/ArrayIndexOutOfBoundsException\n+  #101 = Utf8               java/lang/ArrayIndexOutOfBoundsException\n+  #102 = Class              #103          // org/apache/commons/codec/DecoderException\n+  #103 = Utf8               org/apache/commons/codec/DecoderException\n+  #104 = String             #105          // Invalid percent decoding:\n+  #105 = Utf8               Invalid percent decoding:\n+  #106 = Methodref          #102.#107     // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #107 = NameAndType        #5:#108       // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #108 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #109 = Class              #110          // \"[B\"\n+  #110 = Utf8               [B\n+  #111 = Methodref          #8.#112       // org/apache/commons/codec/net/PercentCodec.encode:([B)[B\n+  #112 = NameAndType        #113:#114     // encode:([B)[B\n+  #113 = Utf8               encode\n+  #114 = Utf8               ([B)[B\n+  #115 = Class              #116          // org/apache/commons/codec/EncoderException\n+  #116 = Utf8               org/apache/commons/codec/EncoderException\n+  #117 = Class              #118          // java/lang/StringBuilder\n+  #118 = Utf8               java/lang/StringBuilder\n+  #119 = Methodref          #117.#3       // java/lang/StringBuilder.\"<init>\":()V\n+  #120 = String             #121          // Objects of type\n+  #121 = Utf8               Objects of type\n+  #122 = Methodref          #117.#123     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #123 = NameAndType        #124:#125     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #124 = Utf8               append\n+  #125 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #126 = Methodref          #2.#127       // java/lang/Object.getClass:()Ljava/lang/Class;\n+  #127 = NameAndType        #128:#129     // getClass:()Ljava/lang/Class;\n+  #128 = Utf8               getClass\n+  #129 = Utf8               ()Ljava/lang/Class;\n+  #130 = Methodref          #131.#132     // java/lang/Class.getName:()Ljava/lang/String;\n+  #131 = Class              #133          // java/lang/Class\n+  #132 = NameAndType        #134:#135     // getName:()Ljava/lang/String;\n+  #133 = Utf8               java/lang/Class\n+  #134 = Utf8               getName\n+  #135 = Utf8               ()Ljava/lang/String;\n+  #136 = String             #137          //  cannot be Percent encoded\n+  #137 = Utf8                cannot be Percent encoded\n+  #138 = Methodref          #117.#139     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #139 = NameAndType        #140:#135     // toString:()Ljava/lang/String;\n+  #140 = Utf8               toString\n+  #141 = Methodref          #115.#142     // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+  #142 = NameAndType        #5:#143       // \"<init>\":(Ljava/lang/String;)V\n+  #143 = Utf8               (Ljava/lang/String;)V\n+  #144 = Methodref          #8.#145       // org/apache/commons/codec/net/PercentCodec.decode:([B)[B\n+  #145 = NameAndType        #146:#114     // decode:([B)[B\n+  #146 = Utf8               decode\n+  #147 = String             #148          //  cannot be Percent decoded\n+  #148 = Utf8                cannot be Percent decoded\n+  #149 = Methodref          #102.#142     // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n+  #150 = Class              #151          // org/apache/commons/codec/BinaryEncoder\n+  #151 = Utf8               org/apache/commons/codec/BinaryEncoder\n+  #152 = Class              #153          // org/apache/commons/codec/BinaryDecoder\n+  #153 = Utf8               org/apache/commons/codec/BinaryDecoder\n+  #154 = Utf8               ConstantValue\n+  #155 = Integer            37\n+  #156 = Utf8               Code\n+  #157 = Utf8               LineNumberTable\n+  #158 = Utf8               ([BZ)V\n+  #159 = Utf8               StackMapTable\n+  #160 = Utf8               Exceptions\n+  #161 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #162 = Utf8               SourceFile\n+  #163 = Utf8               PercentCodec.java\n {\n   private final byte ESCAPE_CHAR = 37;\n     descriptor: B\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n     ConstantValue: int 37\n \n   private final java.util.BitSet alwaysEncodeChars;\n@@ -198,32 +198,32 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: bipush        37\n-         7: putfield      #2                  // Field ESCAPE_CHAR:B\n+         7: putfield      #7                  // Field ESCAPE_CHAR:B\n         10: aload_0\n-        11: new           #3                  // class java/util/BitSet\n+        11: new           #13                 // class java/util/BitSet\n         14: dup\n-        15: invokespecial #4                  // Method java/util/BitSet.\"<init>\":()V\n-        18: putfield      #5                  // Field alwaysEncodeChars:Ljava/util/BitSet;\n+        15: invokespecial #15                 // Method java/util/BitSet.\"<init>\":()V\n+        18: putfield      #16                 // Field alwaysEncodeChars:Ljava/util/BitSet;\n         21: aload_0\n-        22: ldc           #7                  // int 2147483647\n-        24: putfield      #8                  // Field alwaysEncodeCharsMin:I\n+        22: ldc           #22                 // int 2147483647\n+        24: putfield      #23                 // Field alwaysEncodeCharsMin:I\n         27: aload_0\n-        28: ldc           #9                  // int -2147483648\n-        30: putfield      #10                 // Field alwaysEncodeCharsMax:I\n+        28: ldc           #27                 // int -2147483648\n+        30: putfield      #28                 // Field alwaysEncodeCharsMax:I\n         33: aload_0\n         34: iconst_0\n-        35: putfield      #11                 // Field plusForSpace:Z\n+        35: putfield      #31                 // Field plusForSpace:Z\n         38: aload_0\n         39: bipush        37\n-        41: invokespecial #13                 // Method insertAlwaysEncodeChar:(B)V\n+        41: invokespecial #35                 // Method insertAlwaysEncodeChar:(B)V\n         44: return\n       LineNumberTable:\n         line 67: 0\n         line 45: 4\n         line 50: 10\n         line 60: 21\n         line 68: 33\n@@ -235,32 +235,32 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: bipush        37\n-         7: putfield      #2                  // Field ESCAPE_CHAR:B\n+         7: putfield      #7                  // Field ESCAPE_CHAR:B\n         10: aload_0\n-        11: new           #3                  // class java/util/BitSet\n+        11: new           #13                 // class java/util/BitSet\n         14: dup\n-        15: invokespecial #4                  // Method java/util/BitSet.\"<init>\":()V\n-        18: putfield      #5                  // Field alwaysEncodeChars:Ljava/util/BitSet;\n+        15: invokespecial #15                 // Method java/util/BitSet.\"<init>\":()V\n+        18: putfield      #16                 // Field alwaysEncodeChars:Ljava/util/BitSet;\n         21: aload_0\n-        22: ldc           #7                  // int 2147483647\n-        24: putfield      #8                  // Field alwaysEncodeCharsMin:I\n+        22: ldc           #22                 // int 2147483647\n+        24: putfield      #23                 // Field alwaysEncodeCharsMin:I\n         27: aload_0\n-        28: ldc           #9                  // int -2147483648\n-        30: putfield      #10                 // Field alwaysEncodeCharsMax:I\n+        28: ldc           #27                 // int -2147483648\n+        30: putfield      #28                 // Field alwaysEncodeCharsMax:I\n         33: aload_0\n         34: iload_2\n-        35: putfield      #11                 // Field plusForSpace:Z\n+        35: putfield      #31                 // Field plusForSpace:Z\n         38: aload_0\n         39: aload_1\n-        40: invokespecial #14                 // Method insertAlwaysEncodeChars:([B)V\n+        40: invokespecial #39                 // Method insertAlwaysEncodeChars:([B)V\n         43: return\n       LineNumberTable:\n         line 80: 0\n         line 45: 4\n         line 50: 10\n         line 60: 21\n         line 81: 33\n@@ -286,20 +286,20 @@\n         15: if_icmpge     36\n         18: aload_2\n         19: iload         4\n         21: baload\n         22: istore        5\n         24: aload_0\n         25: iload         5\n-        27: invokespecial #13                 // Method insertAlwaysEncodeChar:(B)V\n+        27: invokespecial #35                 // Method insertAlwaysEncodeChar:(B)V\n         30: iinc          4, 1\n         33: goto          12\n         36: aload_0\n         37: bipush        37\n-        39: invokespecial #13                 // Method insertAlwaysEncodeChar:(B)V\n+        39: invokespecial #35                 // Method insertAlwaysEncodeChar:(B)V\n         42: return\n       LineNumberTable:\n         line 91: 0\n         line 92: 4\n         line 93: 24\n         line 92: 30\n         line 96: 36\n@@ -313,31 +313,31 @@\n \n   private void insertAlwaysEncodeChar(byte);\n     descriptor: (B)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #5                  // Field alwaysEncodeChars:Ljava/util/BitSet;\n+         1: getfield      #16                 // Field alwaysEncodeChars:Ljava/util/BitSet;\n          4: iload_1\n-         5: invokevirtual #15                 // Method java/util/BitSet.set:(I)V\n+         5: invokevirtual #43                 // Method java/util/BitSet.set:(I)V\n          8: iload_1\n          9: aload_0\n-        10: getfield      #8                  // Field alwaysEncodeCharsMin:I\n+        10: getfield      #23                 // Field alwaysEncodeCharsMin:I\n         13: if_icmpge     21\n         16: aload_0\n         17: iload_1\n-        18: putfield      #8                  // Field alwaysEncodeCharsMin:I\n+        18: putfield      #23                 // Field alwaysEncodeCharsMin:I\n         21: iload_1\n         22: aload_0\n-        23: getfield      #10                 // Field alwaysEncodeCharsMax:I\n+        23: getfield      #28                 // Field alwaysEncodeCharsMax:I\n         26: if_icmple     34\n         29: aload_0\n         30: iload_1\n-        31: putfield      #10                 // Field alwaysEncodeCharsMax:I\n+        31: putfield      #28                 // Field alwaysEncodeCharsMax:I\n         34: return\n       LineNumberTable:\n         line 106: 0\n         line 107: 8\n         line 108: 16\n         line 110: 21\n         line 111: 29\n@@ -353,38 +353,38 @@\n       stack=4, locals=4, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n          7: aload_1\n-         8: invokespecial #16                 // Method expectedEncodingBytes:([B)I\n+         8: invokespecial #47                 // Method expectedEncodingBytes:([B)I\n         11: istore_2\n         12: iload_2\n         13: aload_1\n         14: arraylength\n         15: if_icmpeq     22\n         18: iconst_1\n         19: goto          23\n         22: iconst_0\n         23: istore_3\n         24: iload_3\n         25: ifne          43\n         28: aload_0\n-        29: getfield      #11                 // Field plusForSpace:Z\n+        29: getfield      #31                 // Field plusForSpace:Z\n         32: ifeq          51\n         35: aload_0\n         36: aload_1\n-        37: invokespecial #17                 // Method containsSpace:([B)Z\n+        37: invokespecial #51                 // Method containsSpace:([B)Z\n         40: ifeq          51\n         43: aload_0\n         44: aload_1\n         45: iload_2\n         46: iload_3\n-        47: invokespecial #18                 // Method doEncode:([BIZ)[B\n+        47: invokespecial #55                 // Method doEncode:([BIZ)[B\n         50: areturn\n         51: aload_1\n         52: areturn\n       LineNumberTable:\n         line 121: 0\n         line 122: 4\n         line 125: 6\n@@ -408,15 +408,15 @@\n \n   private byte[] doEncode(byte[], int, boolean);\n     descriptor: ([BIZ)[B\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=12, args_size=4\n          0: iload_2\n-         1: invokestatic  #19                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n+         1: invokestatic  #59                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n          4: astore        4\n          6: aload_1\n          7: astore        5\n          9: aload         5\n         11: arraylength\n         12: istore        6\n         14: iconst_0\n@@ -428,67 +428,67 @@\n         26: iload         7\n         28: baload\n         29: istore        8\n         31: iload_3\n         32: ifeq          107\n         35: aload_0\n         36: iload         8\n-        38: invokespecial #20                 // Method canEncode:(B)Z\n+        38: invokespecial #65                 // Method canEncode:(B)Z\n         41: ifeq          107\n         44: iload         8\n         46: istore        9\n         48: iload         9\n         50: ifge          62\n         53: sipush        256\n         56: iload         9\n         58: iadd\n         59: i2b\n         60: istore        9\n         62: iload         9\n         64: iconst_4\n         65: ishr\n-        66: invokestatic  #21                 // Method org/apache/commons/codec/net/Utils.hexDigit:(I)C\n+        66: invokestatic  #69                 // Method org/apache/commons/codec/net/Utils.hexDigit:(I)C\n         69: istore        10\n         71: iload         9\n-        73: invokestatic  #21                 // Method org/apache/commons/codec/net/Utils.hexDigit:(I)C\n+        73: invokestatic  #69                 // Method org/apache/commons/codec/net/Utils.hexDigit:(I)C\n         76: istore        11\n         78: aload         4\n         80: bipush        37\n-        82: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n+        82: invokevirtual #75                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n         85: pop\n         86: aload         4\n         88: iload         10\n         90: i2b\n-        91: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n+        91: invokevirtual #75                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n         94: pop\n         95: aload         4\n         97: iload         11\n         99: i2b\n-       100: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n+       100: invokevirtual #75                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n        103: pop\n        104: goto          140\n        107: aload_0\n-       108: getfield      #11                 // Field plusForSpace:Z\n+       108: getfield      #31                 // Field plusForSpace:Z\n        111: ifeq          132\n        114: iload         8\n        116: bipush        32\n        118: if_icmpne     132\n        121: aload         4\n        123: bipush        43\n-       125: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n+       125: invokevirtual #75                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n        128: pop\n        129: goto          140\n        132: aload         4\n        134: iload         8\n-       136: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n+       136: invokevirtual #75                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n        139: pop\n        140: iinc          7, 1\n        143: goto          17\n        146: aload         4\n-       148: invokevirtual #23                 // Method java/nio/ByteBuffer.array:()[B\n+       148: invokevirtual #79                 // Method java/nio/ByteBuffer.array:()[B\n        151: areturn\n       LineNumberTable:\n         line 134: 0\n         line 135: 6\n         line 136: 31\n         line 137: 44\n         line 138: 48\n@@ -540,15 +540,15 @@\n         18: aload_3\n         19: iload         5\n         21: baload\n         22: istore        6\n         24: iload_2\n         25: aload_0\n         26: iload         6\n-        28: invokespecial #20                 // Method canEncode:(B)Z\n+        28: invokespecial #65                 // Method canEncode:(B)Z\n         31: ifeq          38\n         34: iconst_3\n         35: goto          39\n         38: iconst_1\n         39: iadd\n         40: istore_2\n         41: iinc          5, 1\n@@ -624,24 +624,24 @@\n   private boolean canEncode(byte);\n     descriptor: (B)Z\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokespecial #24                 // Method isAsciiChar:(B)Z\n+         2: invokespecial #83                 // Method isAsciiChar:(B)Z\n          5: ifeq          27\n          8: aload_0\n          9: iload_1\n-        10: invokespecial #25                 // Method inAlwaysEncodeCharsRange:(B)Z\n+        10: invokespecial #86                 // Method inAlwaysEncodeCharsRange:(B)Z\n         13: ifeq          31\n         16: aload_0\n-        17: getfield      #5                  // Field alwaysEncodeChars:Ljava/util/BitSet;\n+        17: getfield      #16                 // Field alwaysEncodeChars:Ljava/util/BitSet;\n         20: iload_1\n-        21: invokevirtual #26                 // Method java/util/BitSet.get:(I)Z\n+        21: invokevirtual #89                 // Method java/util/BitSet.get:(I)Z\n         24: ifeq          31\n         27: iconst_1\n         28: goto          32\n         31: iconst_0\n         32: ireturn\n       LineNumberTable:\n         line 175: 0\n@@ -654,19 +654,19 @@\n   private boolean inAlwaysEncodeCharsRange(byte);\n     descriptor: (B)Z\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: iload_1\n          1: aload_0\n-         2: getfield      #8                  // Field alwaysEncodeCharsMin:I\n+         2: getfield      #23                 // Field alwaysEncodeCharsMin:I\n          5: if_icmplt     20\n          8: iload_1\n          9: aload_0\n-        10: getfield      #10                 // Field alwaysEncodeCharsMax:I\n+        10: getfield      #28                 // Field alwaysEncodeCharsMax:I\n         13: if_icmpgt     20\n         16: iconst_1\n         17: goto          21\n         20: iconst_0\n         21: ireturn\n       LineNumberTable:\n         line 179: 0\n@@ -700,16 +700,16 @@\n       stack=4, locals=7, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n          7: aload_1\n-         8: invokespecial #27                 // Method expectedDecodingBytes:([B)I\n-        11: invokestatic  #19                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n+         8: invokespecial #93                 // Method expectedDecodingBytes:([B)I\n+        11: invokestatic  #59                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n         14: astore_2\n         15: iconst_0\n         16: istore_3\n         17: iload_3\n         18: aload_1\n         19: arraylength\n         20: if_icmpge     124\n@@ -720,58 +720,58 @@\n         28: iload         4\n         30: bipush        37\n         32: if_icmpne     87\n         35: aload_1\n         36: iinc          3, 1\n         39: iload_3\n         40: baload\n-        41: invokestatic  #28                 // Method org/apache/commons/codec/net/Utils.digit16:(B)I\n+        41: invokestatic  #96                 // Method org/apache/commons/codec/net/Utils.digit16:(B)I\n         44: istore        5\n         46: aload_1\n         47: iinc          3, 1\n         50: iload_3\n         51: baload\n-        52: invokestatic  #28                 // Method org/apache/commons/codec/net/Utils.digit16:(B)I\n+        52: invokestatic  #96                 // Method org/apache/commons/codec/net/Utils.digit16:(B)I\n         55: istore        6\n         57: aload_2\n         58: iload         5\n         60: iconst_4\n         61: ishl\n         62: iload         6\n         64: iadd\n         65: i2b\n-        66: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n+        66: invokevirtual #75                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n         69: pop\n         70: goto          118\n         73: astore        5\n-        75: new           #30                 // class org/apache/commons/codec/DecoderException\n+        75: new           #102                // class org/apache/commons/codec/DecoderException\n         78: dup\n-        79: ldc           #31                 // String Invalid percent decoding:\n+        79: ldc           #104                // String Invalid percent decoding:\n         81: aload         5\n-        83: invokespecial #32                 // Method org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        83: invokespecial #106                // Method org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         86: athrow\n         87: aload_0\n-        88: getfield      #11                 // Field plusForSpace:Z\n+        88: getfield      #31                 // Field plusForSpace:Z\n         91: ifeq          111\n         94: iload         4\n         96: bipush        43\n         98: if_icmpne     111\n        101: aload_2\n        102: bipush        32\n-       104: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n+       104: invokevirtual #75                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n        107: pop\n        108: goto          118\n        111: aload_2\n        112: iload         4\n-       114: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n+       114: invokevirtual #75                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n        117: pop\n        118: iinc          3, 1\n        121: goto          17\n        124: aload_2\n-       125: invokevirtual #23                 // Method java/nio/ByteBuffer.array:()[B\n+       125: invokevirtual #79                 // Method java/nio/ByteBuffer.array:()[B\n        128: areturn\n       Exception table:\n          from    to  target type\n             35    70    73   Class java/lang/ArrayIndexOutOfBoundsException\n       LineNumberTable:\n         line 192: 0\n         line 193: 4\n@@ -867,36 +867,36 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_1\n-         7: instanceof    #33                 // class \"[B\"\n+         7: instanceof    #109                // class \"[B\"\n         10: ifeq          22\n         13: aload_0\n         14: aload_1\n-        15: checkcast     #33                 // class \"[B\"\n-        18: invokevirtual #34                 // Method encode:([B)[B\n+        15: checkcast     #109                // class \"[B\"\n+        18: invokevirtual #111                // Method encode:([B)[B\n         21: areturn\n-        22: new           #35                 // class org/apache/commons/codec/EncoderException\n+        22: new           #115                // class org/apache/commons/codec/EncoderException\n         25: dup\n-        26: new           #36                 // class java/lang/StringBuilder\n+        26: new           #117                // class java/lang/StringBuilder\n         29: dup\n-        30: invokespecial #37                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        33: ldc           #38                 // String Objects of type\n-        35: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        30: invokespecial #119                // Method java/lang/StringBuilder.\"<init>\":()V\n+        33: ldc           #120                // String Objects of type\n+        35: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         38: aload_1\n-        39: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-        42: invokevirtual #41                 // Method java/lang/Class.getName:()Ljava/lang/String;\n-        45: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        48: ldc           #42                 // String  cannot be Percent encoded\n-        50: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        53: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        56: invokespecial #44                 // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+        39: invokevirtual #126                // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        42: invokevirtual #130                // Method java/lang/Class.getName:()Ljava/lang/String;\n+        45: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        48: ldc           #136                // String  cannot be Percent encoded\n+        50: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        53: invokevirtual #138                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        56: invokespecial #141                // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n         59: athrow\n       LineNumberTable:\n         line 237: 0\n         line 238: 4\n         line 239: 6\n         line 240: 13\n         line 242: 22\n@@ -912,36 +912,36 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_1\n-         7: instanceof    #33                 // class \"[B\"\n+         7: instanceof    #109                // class \"[B\"\n         10: ifeq          22\n         13: aload_0\n         14: aload_1\n-        15: checkcast     #33                 // class \"[B\"\n-        18: invokevirtual #45                 // Method decode:([B)[B\n+        15: checkcast     #109                // class \"[B\"\n+        18: invokevirtual #144                // Method decode:([B)[B\n         21: areturn\n-        22: new           #30                 // class org/apache/commons/codec/DecoderException\n+        22: new           #102                // class org/apache/commons/codec/DecoderException\n         25: dup\n-        26: new           #36                 // class java/lang/StringBuilder\n+        26: new           #117                // class java/lang/StringBuilder\n         29: dup\n-        30: invokespecial #37                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        33: ldc           #38                 // String Objects of type\n-        35: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        30: invokespecial #119                // Method java/lang/StringBuilder.\"<init>\":()V\n+        33: ldc           #120                // String Objects of type\n+        35: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         38: aload_1\n-        39: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-        42: invokevirtual #41                 // Method java/lang/Class.getName:()Ljava/lang/String;\n-        45: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        48: ldc           #46                 // String  cannot be Percent decoded\n-        50: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        53: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        56: invokespecial #47                 // Method org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n+        39: invokevirtual #126                // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        42: invokevirtual #130                // Method java/lang/Class.getName:()Ljava/lang/String;\n+        45: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        48: ldc           #147                // String  cannot be Percent decoded\n+        50: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        53: invokevirtual #138                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        56: invokespecial #149                // Method org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n         59: athrow\n       LineNumberTable:\n         line 255: 0\n         line 256: 4\n         line 257: 6\n         line 258: 13\n         line 260: 22\n"}]}
