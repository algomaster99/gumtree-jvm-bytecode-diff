{"diffoscope-json-version": 1, "source1": "first/NNTPClient.class", "source2": "second/NNTPClient.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -110,24 +110,33 @@\n             catch (final NumberFormatException ex) {}\n         }\n         return article;\n     }\n     \n     private NewsgroupInfo[] readNewsgroupListing() throws IOException {\n         final Vector<NewsgroupInfo> list = new Vector<NewsgroupInfo>(2048);\n-        try (final BufferedReader reader = (BufferedReader)new DotTerminatedMessageReader((Reader)this._reader_)) {\n+        final BufferedReader reader = (BufferedReader)new DotTerminatedMessageReader((Reader)this._reader_);\n+        Throwable x0 = null;\n+        try {\n             String line;\n             while ((line = reader.readLine()) != null) {\n                 final NewsgroupInfo tmp = parseNewsgroupListEntry(line);\n                 if (tmp == null) {\n                     throw new MalformedServerReplyException(line);\n                 }\n                 list.addElement(tmp);\n             }\n         }\n+        catch (final Throwable t) {\n+            x0 = t;\n+            throw t;\n+        }\n+        finally {\n+            $closeResource(x0, reader);\n+        }\n         final int size;\n         if ((size = list.size()) < 1) {\n             return new NewsgroupInfo[0];\n         }\n         final NewsgroupInfo[] info = new NewsgroupInfo[size];\n         list.copyInto(info);\n         return info;\n@@ -232,33 +241,61 @@\n         return this.selectNewsgroup(newsgroup, null);\n     }\n     \n     public String listHelp() throws IOException {\n         if (!NNTPReply.isInformational(this.help())) {\n             return null;\n         }\n-        try (final StringWriter help = new StringWriter();\n-             final BufferedReader reader = (BufferedReader)new DotTerminatedMessageReader((Reader)this._reader_)) {\n-            Util.copyReader((Reader)reader, (Writer)help);\n-            return help.toString();\n+        final StringWriter help = new StringWriter();\n+        Throwable x0 = null;\n+        try {\n+            final BufferedReader reader = (BufferedReader)new DotTerminatedMessageReader((Reader)this._reader_);\n+            Throwable x2 = null;\n+            try {\n+                Util.copyReader((Reader)reader, (Writer)help);\n+                return help.toString();\n+            }\n+            catch (final Throwable t) {\n+                x2 = t;\n+                throw t;\n+            }\n+            finally {\n+                $closeResource(x2, reader);\n+            }\n+        }\n+        catch (final Throwable t2) {\n+            x0 = t2;\n+            throw t2;\n+        }\n+        finally {\n+            $closeResource(x0, help);\n         }\n     }\n     \n     public String[] listOverviewFmt() throws IOException {\n         if (!NNTPReply.isPositiveCompletion(this.sendCommand(\"LIST\", \"OVERVIEW.FMT\"))) {\n             return null;\n         }\n-        try (final BufferedReader reader = (BufferedReader)new DotTerminatedMessageReader((Reader)this._reader_)) {\n+        final BufferedReader reader = (BufferedReader)new DotTerminatedMessageReader((Reader)this._reader_);\n+        Throwable x0 = null;\n+        try {\n             final ArrayList<String> list = new ArrayList<String>();\n             String line;\n             while ((line = reader.readLine()) != null) {\n                 list.add(line);\n             }\n             return list.toArray(new String[list.size()]);\n         }\n+        catch (final Throwable t) {\n+            x0 = t;\n+            throw t;\n+        }\n+        finally {\n+            $closeResource(x0, reader);\n+        }\n     }\n     \n     public boolean selectArticle(final String articleId, final ArticleInfo pointer) throws IOException {\n         if (articleId != null) {\n             if (!NNTPReply.isPositiveCompletion(this.stat(articleId))) {\n                 return false;\n             }\n@@ -377,20 +414,29 @@\n     }\n     \n     public String[] listNewNews(final NewGroupsOrNewsQuery query) throws IOException {\n         if (!NNTPReply.isPositiveCompletion(this.newnews(query.getNewsgroups(), query.getDate(), query.getTime(), query.isGMT(), query.getDistributions()))) {\n             return null;\n         }\n         final Vector<String> list = new Vector<String>();\n-        try (final BufferedReader reader = (BufferedReader)new DotTerminatedMessageReader((Reader)this._reader_)) {\n+        final BufferedReader reader = (BufferedReader)new DotTerminatedMessageReader((Reader)this._reader_);\n+        Throwable x0 = null;\n+        try {\n             String line;\n             while ((line = reader.readLine()) != null) {\n                 list.addElement(line);\n             }\n         }\n+        catch (final Throwable t) {\n+            x0 = t;\n+            throw t;\n+        }\n+        finally {\n+            $closeResource(x0, reader);\n+        }\n         final int size = list.size();\n         if (size < 1) {\n             return new String[0];\n         }\n         final String[] result = new String[size];\n         list.copyInto(result);\n         return result;\n@@ -612,8 +658,22 @@\n     \n     private void ai2ap(final ArticleInfo ai, final ArticlePointer ap) {\n         if (ap != null) {\n             ap.articleId = ai.articleId;\n             ap.articleNumber = (int)ai.articleNumber;\n         }\n     }\n+    \n+    private static /* synthetic */ void $closeResource(final Throwable x0, final AutoCloseable x1) {\n+        if (x0 != null) {\n+            try {\n+                x1.close();\n+            }\n+            catch (final Throwable exception) {\n+                x0.addSuppressed(exception);\n+            }\n+        }\n+        else {\n+            x1.close();\n+        }\n+    }\n }\n"}]}
