{"diffoscope-json-version": 1, "source1": "first/ParseTreeTableModel.class", "source2": "second/ParseTreeTableModel.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -15,89 +15,88 @@\n     \n     public ParseTreeTableModel(final DetailAST parseTree) {\n         this.listenerList = new EventListenerList();\n         this.pModel = new ParseTreeTablePresentation(parseTree);\n         this.setParseTree(parseTree);\n     }\n     \n-    protected final void setParseTree(final DetailAST parseTree) {\n-        this.pModel.setRoot(parseTree);\n-        final Object[] path = { this.pModel.getRoot() };\n-        this.fireTreeStructureChanged(this, path, null, (Object[])null);\n+    protected final void setParseTree(final DetailAST root) {\n+        this.pModel.setRoot(root);\n+        this.fireTreeStructureChanged(this, new Object[] { this.pModel.getRoot() }, null, (Object[])null);\n     }\n     \n-    protected void setParseMode(final MainFrameModel.ParseMode mode) {\n-        this.pModel.setParseMode(mode);\n+    protected void setParseMode(final MainFrameModel.ParseMode parseMode) {\n+        this.pModel.setParseMode(parseMode);\n     }\n     \n     public int getColumnCount() {\n         return this.pModel.getColumnCount();\n     }\n     \n-    public String getColumnName(final int column) {\n-        return this.pModel.getColumnName(column);\n+    public String getColumnName(final int n) {\n+        return this.pModel.getColumnName(n);\n     }\n     \n-    public Class<?> getColumnClass(final int column) {\n-        return this.pModel.getColumnClass(column);\n+    public Class<?> getColumnClass(final int n) {\n+        return this.pModel.getColumnClass(n);\n     }\n     \n-    public Object getValueAt(final Object node, final int column) {\n-        return this.pModel.getValueAt(node, column);\n+    public Object getValueAt(final Object o, final int n) {\n+        return this.pModel.getValueAt(o, n);\n     }\n     \n     @Override\n-    public Object getChild(final Object parent, final int index) {\n-        return this.pModel.getChild(parent, index);\n+    public Object getChild(final Object o, final int n) {\n+        return this.pModel.getChild(o, n);\n     }\n     \n     @Override\n-    public int getChildCount(final Object parent) {\n-        return this.pModel.getChildCount(parent);\n+    public int getChildCount(final Object o) {\n+        return this.pModel.getChildCount(o);\n     }\n     \n     @Override\n-    public void valueForPathChanged(final TreePath path, final Object newValue) {\n+    public void valueForPathChanged(final TreePath treePath, final Object o) {\n     }\n     \n     @Override\n     public Object getRoot() {\n         return this.pModel.getRoot();\n     }\n     \n     @Override\n-    public boolean isLeaf(final Object node) {\n-        return this.pModel.isLeaf(node);\n+    public boolean isLeaf(final Object o) {\n+        return this.pModel.isLeaf(o);\n     }\n     \n     @Override\n-    public int getIndexOfChild(final Object parent, final Object child) {\n-        return this.pModel.getIndexOfChild(parent, child);\n+    public int getIndexOfChild(final Object o, final Object o2) {\n+        return this.pModel.getIndexOfChild(o, o2);\n     }\n     \n     @Override\n-    public void addTreeModelListener(final TreeModelListener listener) {\n-        this.listenerList.add(TreeModelListener.class, listener);\n+    public void addTreeModelListener(final TreeModelListener l) {\n+        this.listenerList.add(TreeModelListener.class, l);\n     }\n     \n     @Override\n-    public void removeTreeModelListener(final TreeModelListener listener) {\n-        this.listenerList.remove(TreeModelListener.class, listener);\n+    public void removeTreeModelListener(final TreeModelListener l) {\n+        this.listenerList.remove(TreeModelListener.class, l);\n     }\n     \n     private void fireTreeStructureChanged(final Object source, final Object[] path, final int[] childIndices, final Object... children) {\n-        final Object[] listeners = this.listenerList.getListenerList();\n-        TreeModelEvent event = null;\n-        for (int i = listeners.length - 2; i >= 0; i -= 2) {\n-            if (listeners[i] == TreeModelListener.class) {\n-                if (event == null) {\n-                    event = new TreeModelEvent(source, path, childIndices, children);\n+        final Object[] listenerList = this.listenerList.getListenerList();\n+        TreeModelEvent treeModelEvent = null;\n+        for (int i = listenerList.length - 2; i >= 0; i -= 2) {\n+            if (listenerList[i] == TreeModelListener.class) {\n+                if (treeModelEvent == null) {\n+                    treeModelEvent = new TreeModelEvent(source, path, childIndices, children);\n                 }\n-                ((TreeModelListener)listeners[i + 1]).treeStructureChanged(event);\n+                ((TreeModelListener)listenerList[i + 1]).treeStructureChanged(treeModelEvent);\n             }\n         }\n     }\n     \n-    public boolean isCellEditable(final int column) {\n-        return this.pModel.isCellEditable(column);\n+    public boolean isCellEditable(final int n) {\n+        return this.pModel.isCellEditable(n);\n     }\n }\n"}]}
