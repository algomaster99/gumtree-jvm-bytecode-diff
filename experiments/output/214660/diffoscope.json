{"diffoscope-json-version": 1, "source1": "first/LDC2_W.class", "source2": "second/LDC2_W.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -6,48 +6,48 @@\n import org.apache.bcel.classfile.ConstantLong;\n \n public class LDC2_W extends CPInstruction implements PushInstruction\n {\n     LDC2_W() {\n     }\n     \n-    public LDC2_W(final int index) {\n-        super((short)20, index);\n+    public LDC2_W(final int n) {\n+        super((short)20, n);\n     }\n     \n-    public Type getType(final ConstantPoolGen cpg) {\n-        switch (cpg.getConstantPool().getConstant(super.getIndex()).getTag()) {\n+    public Type getType(final ConstantPoolGen constantPoolGen) {\n+        switch (constantPoolGen.getConstantPool().getConstant(super.getIndex()).getTag()) {\n             case 5: {\n                 return (Type)Type.LONG;\n             }\n             case 6: {\n                 return (Type)Type.DOUBLE;\n             }\n             default: {\n                 throw new RuntimeException(\"Unknown constant type \" + super.getOpcode());\n             }\n         }\n     }\n     \n-    public Number getValue(final ConstantPoolGen cpg) {\n-        final Constant c = cpg.getConstantPool().getConstant(super.getIndex());\n-        switch (c.getTag()) {\n+    public Number getValue(final ConstantPoolGen constantPoolGen) {\n+        final Constant constant = constantPoolGen.getConstantPool().getConstant(super.getIndex());\n+        switch (constant.getTag()) {\n             case 5: {\n-                return Long.valueOf(((ConstantLong)c).getBytes());\n+                return Long.valueOf(((ConstantLong)constant).getBytes());\n             }\n             case 6: {\n-                return new Double(((ConstantDouble)c).getBytes());\n+                return new Double(((ConstantDouble)constant).getBytes());\n             }\n             default: {\n                 throw new RuntimeException(\"Unknown or invalid constant type at \" + super.getIndex());\n             }\n         }\n     }\n     \n-    public void accept(final Visitor v) {\n-        v.visitStackProducer((StackProducer)this);\n-        v.visitPushInstruction((PushInstruction)this);\n-        v.visitTypedInstruction((TypedInstruction)this);\n-        v.visitCPInstruction((CPInstruction)this);\n-        v.visitLDC2_W(this);\n+    public void accept(final Visitor visitor) {\n+        visitor.visitStackProducer((StackProducer)this);\n+        visitor.visitPushInstruction((PushInstruction)this);\n+        visitor.visitTypedInstruction((TypedInstruction)this);\n+        visitor.visitCPInstruction((CPInstruction)this);\n+        visitor.visitLDC2_W(this);\n     }\n }\n"}]}
