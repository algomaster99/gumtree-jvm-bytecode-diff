{"diffoscope-json-version": 1, "source1": "first/SimpleElementValue.class", "source2": "second/SimpleElementValue.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -39,16 +39,15 @@\n         return this.index;\n     }\n     \n     public boolean getValueBoolean() {\n         if (super.getType() != 90) {\n             throw new IllegalStateException(\"Dont call getValueBoolean() on a non BOOLEAN ElementValue\");\n         }\n-        final ConstantInteger bo = (ConstantInteger)super.getConstantPool().getConstant(this.getIndex());\n-        return bo.getBytes() != 0;\n+        return ((ConstantInteger)super.getConstantPool().getConstant(this.getIndex())).getBytes() != 0;\n     }\n     \n     public byte getValueByte() {\n         if (super.getType() != 66) {\n             throw new IllegalStateException(\"Dont call getValueByte() on a non BYTE ElementValue\");\n         }\n         return (byte)super.getConstantPool().getConstantInteger(this.getIndex()).getBytes();\n@@ -61,100 +60,89 @@\n         return (char)super.getConstantPool().getConstantInteger(this.getIndex()).getBytes();\n     }\n     \n     public double getValueDouble() {\n         if (super.getType() != 68) {\n             throw new IllegalStateException(\"Dont call getValueDouble() on a non DOUBLE ElementValue\");\n         }\n-        final ConstantDouble d = (ConstantDouble)super.getConstantPool().getConstant(this.getIndex());\n-        return d.getBytes();\n+        return ((ConstantDouble)super.getConstantPool().getConstant(this.getIndex())).getBytes();\n     }\n     \n     public float getValueFloat() {\n         if (super.getType() != 70) {\n             throw new IllegalStateException(\"Dont call getValueFloat() on a non FLOAT ElementValue\");\n         }\n-        final ConstantFloat f = (ConstantFloat)super.getConstantPool().getConstant(this.getIndex());\n-        return f.getBytes();\n+        return ((ConstantFloat)super.getConstantPool().getConstant(this.getIndex())).getBytes();\n     }\n     \n     public int getValueInt() {\n         if (super.getType() != 73) {\n             throw new IllegalStateException(\"Dont call getValueInt() on a non INT ElementValue\");\n         }\n         return super.getConstantPool().getConstantInteger(this.getIndex()).getBytes();\n     }\n     \n     public long getValueLong() {\n         if (super.getType() != 74) {\n             throw new IllegalStateException(\"Dont call getValueLong() on a non LONG ElementValue\");\n         }\n-        final ConstantLong j = (ConstantLong)super.getConstantPool().getConstant(this.getIndex());\n-        return j.getBytes();\n+        return ((ConstantLong)super.getConstantPool().getConstant(this.getIndex())).getBytes();\n     }\n     \n     public short getValueShort() {\n         if (super.getType() != 83) {\n             throw new IllegalStateException(\"Dont call getValueShort() on a non SHORT ElementValue\");\n         }\n-        final ConstantInteger s = (ConstantInteger)super.getConstantPool().getConstant(this.getIndex());\n-        return (short)s.getBytes();\n+        return (short)((ConstantInteger)super.getConstantPool().getConstant(this.getIndex())).getBytes();\n     }\n     \n     public String getValueString() {\n         if (super.getType() != 115) {\n             throw new IllegalStateException(\"Dont call getValueString() on a non STRING ElementValue\");\n         }\n         return super.getConstantPool().getConstantUtf8(this.getIndex()).getBytes();\n     }\n     \n     public void setIndex(final int index) {\n         this.index = index;\n     }\n     \n     public String stringifyValue() {\n-        final ConstantPool cpool = super.getConstantPool();\n+        final ConstantPool constantPool = super.getConstantPool();\n         final int type = super.getType();\n         switch (type) {\n             case 73: {\n-                return Integer.toString(cpool.getConstantInteger(this.getIndex()).getBytes());\n+                return Integer.toString(constantPool.getConstantInteger(this.getIndex()).getBytes());\n             }\n             case 74: {\n-                final ConstantLong j = (ConstantLong)cpool.getConstant(this.getIndex(), (byte)5, (Class)ConstantLong.class);\n-                return Long.toString(j.getBytes());\n+                return Long.toString(((ConstantLong)constantPool.getConstant(this.getIndex(), (byte)5, (Class)ConstantLong.class)).getBytes());\n             }\n             case 68: {\n-                final ConstantDouble d = (ConstantDouble)cpool.getConstant(this.getIndex(), (byte)6, (Class)ConstantDouble.class);\n-                return Double.toString(d.getBytes());\n+                return Double.toString(((ConstantDouble)constantPool.getConstant(this.getIndex(), (byte)6, (Class)ConstantDouble.class)).getBytes());\n             }\n             case 70: {\n-                final ConstantFloat f = (ConstantFloat)cpool.getConstant(this.getIndex(), (byte)4, (Class)ConstantFloat.class);\n-                return Float.toString(f.getBytes());\n+                return Float.toString(((ConstantFloat)constantPool.getConstant(this.getIndex(), (byte)4, (Class)ConstantFloat.class)).getBytes());\n             }\n             case 83: {\n-                final ConstantInteger s = cpool.getConstantInteger(this.getIndex());\n-                return Integer.toString(s.getBytes());\n+                return Integer.toString(constantPool.getConstantInteger(this.getIndex()).getBytes());\n             }\n             case 66: {\n-                final ConstantInteger b = cpool.getConstantInteger(this.getIndex());\n-                return Integer.toString(b.getBytes());\n+                return Integer.toString(constantPool.getConstantInteger(this.getIndex()).getBytes());\n             }\n             case 67: {\n-                final ConstantInteger ch = cpool.getConstantInteger(this.getIndex());\n-                return String.valueOf((char)ch.getBytes());\n+                return String.valueOf((char)constantPool.getConstantInteger(this.getIndex()).getBytes());\n             }\n             case 90: {\n-                final ConstantInteger bo = cpool.getConstantInteger(this.getIndex());\n-                if (bo.getBytes() == 0) {\n+                if (constantPool.getConstantInteger(this.getIndex()).getBytes() == 0) {\n                     return \"false\";\n                 }\n                 return \"true\";\n             }\n             case 115: {\n-                return cpool.getConstantUtf8(this.getIndex()).getBytes();\n+                return constantPool.getConstantUtf8(this.getIndex()).getBytes();\n             }\n             default: {\n                 throw new IllegalStateException(\"SimpleElementValue class does not know how to stringify type \" + type);\n             }\n         }\n     }\n     \n"}]}
