{"diffoscope-json-version": 1, "source1": "first/ExceptionUtils.class", "source2": "second/ExceptionUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,124 +1,124 @@\n-  SHA-256 checksum 43790861790067fb3d34abbd6cb6cec59a4dd6d6c9678e30de8eb8bb1e81d0b2\n+  SHA-256 checksum ca028ce44d7a3d92fb9c16fa14da5476e2c37e540551f5f091b632bd720cdb01\n   Compiled from \"ExceptionUtils.java\"\n public class org.apache.commons.lang3.exception.ExceptionUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #44                         // org/apache/commons/lang3/exception/ExceptionUtils\n   super_class: #13                        // java/lang/Object\n   interfaces: 0, fields: 3, methods: 35, attributes: 1\n Constant pool:\n-    #1 = Methodref          #44.#253      // org/apache/commons/lang3/exception/ExceptionUtils.getCause:(Ljava/lang/Throwable;[Ljava/lang/String;)Ljava/lang/Throwable;\n-    #2 = Methodref          #10.#254      // java/lang/Throwable.getCause:()Ljava/lang/Throwable;\n-    #3 = Fieldref           #44.#255      // org/apache/commons/lang3/exception/ExceptionUtils.CAUSE_METHOD_NAMES:[Ljava/lang/String;\n-    #4 = Methodref          #44.#256      // org/apache/commons/lang3/exception/ExceptionUtils.getCauseUsingMethodName:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;\n-    #5 = Methodref          #13.#257      // java/lang/Object.getClass:()Ljava/lang/Class;\n-    #6 = Class              #258          // java/lang/Class\n-    #7 = Methodref          #6.#259       // java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n-    #8 = Class              #260          // java/lang/NoSuchMethodException\n-    #9 = Class              #261          // java/lang/SecurityException\n-   #10 = Class              #262          // java/lang/Throwable\n-   #11 = Methodref          #263.#264     // java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;\n-   #12 = Methodref          #6.#265       // java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z\n-   #13 = Class              #266          // java/lang/Object\n-   #14 = Methodref          #263.#267     // java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n-   #15 = Class              #268          // java/lang/IllegalAccessException\n-   #16 = Class              #269          // java/lang/IllegalArgumentException\n-   #17 = Class              #270          // java/lang/reflect/InvocationTargetException\n-   #18 = Methodref          #271.#272     // org/apache/commons/lang3/ArrayUtils.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n+    #1 = Methodref          #44.#249      // org/apache/commons/lang3/exception/ExceptionUtils.getCause:(Ljava/lang/Throwable;[Ljava/lang/String;)Ljava/lang/Throwable;\n+    #2 = Methodref          #10.#250      // java/lang/Throwable.getCause:()Ljava/lang/Throwable;\n+    #3 = Fieldref           #44.#251      // org/apache/commons/lang3/exception/ExceptionUtils.CAUSE_METHOD_NAMES:[Ljava/lang/String;\n+    #4 = Methodref          #44.#252      // org/apache/commons/lang3/exception/ExceptionUtils.getCauseUsingMethodName:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;\n+    #5 = Methodref          #13.#253      // java/lang/Object.getClass:()Ljava/lang/Class;\n+    #6 = Class              #254          // java/lang/Class\n+    #7 = Methodref          #6.#255       // java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n+    #8 = Class              #256          // java/lang/NoSuchMethodException\n+    #9 = Class              #257          // java/lang/SecurityException\n+   #10 = Class              #258          // java/lang/Throwable\n+   #11 = Methodref          #136.#259     // java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;\n+   #12 = Methodref          #6.#260       // java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z\n+   #13 = Class              #261          // java/lang/Object\n+   #14 = Methodref          #136.#262     // java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n+   #15 = Class              #263          // java/lang/IllegalAccessException\n+   #16 = Class              #264          // java/lang/IllegalArgumentException\n+   #17 = Class              #265          // java/lang/reflect/InvocationTargetException\n+   #18 = Methodref          #266.#267     // org/apache/commons/lang3/ArrayUtils.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n    #19 = Class              #113          // \"[Ljava/lang/String;\"\n-   #20 = Class              #273          // org/apache/commons/lang3/StringUtils\n-   #21 = String             #274          //\n-   #22 = Methodref          #275.#276     // org/apache/commons/lang3/ClassUtils.getShortClassName:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-   #23 = Methodref          #10.#277      // java/lang/Throwable.getMessage:()Ljava/lang/String;\n-   #24 = Class              #278          // java/lang/StringBuilder\n-   #25 = Methodref          #24.#279      // java/lang/StringBuilder.\"<init>\":()V\n-   #26 = Methodref          #24.#280      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #27 = String             #281          // :\n-   #28 = Methodref          #20.#282      // org/apache/commons/lang3/StringUtils.defaultString:(Ljava/lang/String;)Ljava/lang/String;\n-   #29 = Methodref          #24.#283      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #30 = Methodref          #44.#284      // org/apache/commons/lang3/exception/ExceptionUtils.getThrowableList:(Ljava/lang/Throwable;)Ljava/util/List;\n-   #31 = InterfaceMethodref #285.#286     // java/util/List.isEmpty:()Z\n-   #32 = InterfaceMethodref #285.#287     // java/util/List.size:()I\n-   #33 = InterfaceMethodref #285.#288     // java/util/List.get:(I)Ljava/lang/Object;\n-   #34 = Methodref          #44.#289      // org/apache/commons/lang3/exception/ExceptionUtils.getRootCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;\n-   #35 = Methodref          #44.#290      // org/apache/commons/lang3/exception/ExceptionUtils.getMessage:(Ljava/lang/Throwable;)Ljava/lang/String;\n-   #36 = Fieldref           #271.#291     // org/apache/commons/lang3/ArrayUtils.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-   #37 = Methodref          #44.#292      // org/apache/commons/lang3/exception/ExceptionUtils.getThrowables:(Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n-   #38 = Class              #293          // java/util/ArrayList\n-   #39 = Methodref          #38.#279      // java/util/ArrayList.\"<init>\":()V\n-   #40 = Methodref          #44.#294      // org/apache/commons/lang3/exception/ExceptionUtils.getStackFrameList:(Ljava/lang/Throwable;)Ljava/util/List;\n-   #41 = Methodref          #44.#295      // org/apache/commons/lang3/exception/ExceptionUtils.removeCommonFrames:(Ljava/util/List;Ljava/util/List;)V\n-   #42 = Methodref          #10.#283      // java/lang/Throwable.toString:()Ljava/lang/String;\n-   #43 = InterfaceMethodref #285.#296     // java/util/List.add:(Ljava/lang/Object;)Z\n-   #44 = Class              #297          // org/apache/commons/lang3/exception/ExceptionUtils\n-   #45 = String             #298          //  [wrapped]\n-   #46 = InterfaceMethodref #285.#299     // java/util/List.addAll:(Ljava/util/Collection;)Z\n-   #47 = InterfaceMethodref #285.#300     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-   #48 = Methodref          #44.#301      // org/apache/commons/lang3/exception/ExceptionUtils.getStackTrace:(Ljava/lang/Throwable;)Ljava/lang/String;\n-   #49 = Methodref          #302.#303     // java/lang/System.lineSeparator:()Ljava/lang/String;\n-   #50 = Class              #304          // java/util/StringTokenizer\n-   #51 = Methodref          #50.#305      // java/util/StringTokenizer.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n-   #52 = Methodref          #50.#306      // java/util/StringTokenizer.hasMoreTokens:()Z\n-   #53 = Methodref          #50.#307      // java/util/StringTokenizer.nextToken:()Ljava/lang/String;\n-   #54 = String             #168          // at\n-   #55 = Methodref          #86.#308      // java/lang/String.indexOf:(Ljava/lang/String;)I\n-   #56 = Methodref          #86.#309      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #57 = Methodref          #86.#310      // java/lang/String.trim:()Ljava/lang/String;\n-   #58 = Methodref          #86.#286      // java/lang/String.isEmpty:()Z\n-   #59 = Methodref          #44.#311      // org/apache/commons/lang3/exception/ExceptionUtils.getStackFrames:(Ljava/lang/String;)[Ljava/lang/String;\n-   #60 = Class              #312          // java/io/StringWriter\n-   #61 = Methodref          #60.#279      // java/io/StringWriter.\"<init>\":()V\n-   #62 = Class              #313          // java/io/PrintWriter\n-   #63 = Methodref          #62.#314      // java/io/PrintWriter.\"<init>\":(Ljava/io/Writer;Z)V\n-   #64 = Methodref          #10.#315      // java/lang/Throwable.printStackTrace:(Ljava/io/PrintWriter;)V\n-   #65 = Methodref          #60.#316      // java/io/StringWriter.getBuffer:()Ljava/lang/StringBuffer;\n-   #66 = Methodref          #317.#283     // java/lang/StringBuffer.toString:()Ljava/lang/String;\n-   #67 = InterfaceMethodref #285.#318     // java/util/List.contains:(Ljava/lang/Object;)Z\n-   #68 = Fieldref           #271.#319     // org/apache/commons/lang3/ArrayUtils.EMPTY_THROWABLE_ARRAY:[Ljava/lang/Throwable;\n-   #69 = Class              #160          // \"[Ljava/lang/Throwable;\"\n-   #70 = Class              #320          // java/lang/reflect/UndeclaredThrowableException\n-   #71 = Methodref          #6.#321       // java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n-   #72 = Methodref          #13.#322      // java/lang/Object.equals:(Ljava/lang/Object;)Z\n-   #73 = Methodref          #44.#323      // org/apache/commons/lang3/exception/ExceptionUtils.indexOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n-   #74 = Fieldref           #302.#324     // java/lang/System.err:Ljava/io/PrintStream;\n-   #75 = Methodref          #44.#325      // org/apache/commons/lang3/exception/ExceptionUtils.printRootCauseStackTrace:(Ljava/lang/Throwable;Ljava/io/PrintStream;)V\n-   #76 = String             #214          // printStream\n-   #77 = Methodref          #326.#327     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #78 = Methodref          #44.#328      // org/apache/commons/lang3/exception/ExceptionUtils.getRootCauseStackTrace:(Ljava/lang/Throwable;)[Ljava/lang/String;\n-   #79 = Methodref          #329.#330     // java/io/PrintStream.println:(Ljava/lang/String;)V\n-   #80 = Methodref          #329.#331     // java/io/PrintStream.flush:()V\n-   #81 = String             #218          // printWriter\n-   #82 = Methodref          #62.#330      // java/io/PrintWriter.println:(Ljava/lang/String;)V\n-   #83 = Methodref          #62.#331      // java/io/PrintWriter.flush:()V\n-   #84 = String             #332          // The List must not be null\n-   #85 = Methodref          #16.#333      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #86 = Class              #334          // java/lang/String\n-   #87 = Methodref          #86.#322      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #88 = InterfaceMethodref #285.#335     // java/util/List.remove:(I)Ljava/lang/Object;\n-   #89 = Methodref          #44.#336      // org/apache/commons/lang3/exception/ExceptionUtils.typeErasure:(Ljava/lang/Throwable;)Ljava/lang/Object;\n-   #90 = Methodref          #6.#337       // java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #91 = Methodref          #44.#338      // org/apache/commons/lang3/exception/ExceptionUtils.throwableOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n-   #92 = Class              #339          // java/lang/RuntimeException\n-   #93 = Class              #340          // java/lang/Error\n-   #94 = Methodref          #70.#341      // java/lang/reflect/UndeclaredThrowableException.\"<init>\":(Ljava/lang/Throwable;)V\n-   #95 = Methodref          #13.#279      // java/lang/Object.\"<init>\":()V\n+   #20 = Class              #268          // org/apache/commons/lang3/StringUtils\n+   #21 = String             #269          //\n+   #22 = Methodref          #270.#271     // org/apache/commons/lang3/ClassUtils.getShortClassName:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #23 = Methodref          #10.#272      // java/lang/Throwable.getMessage:()Ljava/lang/String;\n+   #24 = Class              #273          // java/lang/StringBuilder\n+   #25 = Methodref          #24.#274      // java/lang/StringBuilder.\"<init>\":()V\n+   #26 = Methodref          #24.#275      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #27 = String             #276          // :\n+   #28 = Methodref          #20.#277      // org/apache/commons/lang3/StringUtils.defaultString:(Ljava/lang/String;)Ljava/lang/String;\n+   #29 = Methodref          #24.#278      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #30 = Methodref          #44.#279      // org/apache/commons/lang3/exception/ExceptionUtils.getThrowableList:(Ljava/lang/Throwable;)Ljava/util/List;\n+   #31 = InterfaceMethodref #150.#280     // java/util/List.isEmpty:()Z\n+   #32 = InterfaceMethodref #150.#281     // java/util/List.size:()I\n+   #33 = InterfaceMethodref #150.#282     // java/util/List.get:(I)Ljava/lang/Object;\n+   #34 = Methodref          #44.#283      // org/apache/commons/lang3/exception/ExceptionUtils.getRootCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;\n+   #35 = Methodref          #44.#284      // org/apache/commons/lang3/exception/ExceptionUtils.getMessage:(Ljava/lang/Throwable;)Ljava/lang/String;\n+   #36 = Fieldref           #266.#285     // org/apache/commons/lang3/ArrayUtils.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+   #37 = Methodref          #44.#286      // org/apache/commons/lang3/exception/ExceptionUtils.getThrowables:(Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n+   #38 = Class              #287          // java/util/ArrayList\n+   #39 = Methodref          #38.#274      // java/util/ArrayList.\"<init>\":()V\n+   #40 = Methodref          #44.#288      // org/apache/commons/lang3/exception/ExceptionUtils.getStackFrameList:(Ljava/lang/Throwable;)Ljava/util/List;\n+   #41 = Methodref          #44.#289      // org/apache/commons/lang3/exception/ExceptionUtils.removeCommonFrames:(Ljava/util/List;Ljava/util/List;)V\n+   #42 = Methodref          #10.#278      // java/lang/Throwable.toString:()Ljava/lang/String;\n+   #43 = InterfaceMethodref #150.#290     // java/util/List.add:(Ljava/lang/Object;)Z\n+   #44 = Class              #291          // org/apache/commons/lang3/exception/ExceptionUtils\n+   #45 = String             #292          //  [wrapped]\n+   #46 = InterfaceMethodref #150.#293     // java/util/List.addAll:(Ljava/util/Collection;)Z\n+   #47 = InterfaceMethodref #150.#294     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+   #48 = Methodref          #44.#295      // org/apache/commons/lang3/exception/ExceptionUtils.getStackTrace:(Ljava/lang/Throwable;)Ljava/lang/String;\n+   #49 = Methodref          #296.#297     // java/lang/System.lineSeparator:()Ljava/lang/String;\n+   #50 = Class              #298          // java/util/StringTokenizer\n+   #51 = Methodref          #50.#299      // java/util/StringTokenizer.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+   #52 = Methodref          #50.#300      // java/util/StringTokenizer.hasMoreTokens:()Z\n+   #53 = Methodref          #50.#301      // java/util/StringTokenizer.nextToken:()Ljava/lang/String;\n+   #54 = String             #166          // at\n+   #55 = Methodref          #86.#302      // java/lang/String.indexOf:(Ljava/lang/String;)I\n+   #56 = Methodref          #86.#303      // java/lang/String.substring:(II)Ljava/lang/String;\n+   #57 = Methodref          #86.#304      // java/lang/String.trim:()Ljava/lang/String;\n+   #58 = Methodref          #86.#280      // java/lang/String.isEmpty:()Z\n+   #59 = Methodref          #44.#305      // org/apache/commons/lang3/exception/ExceptionUtils.getStackFrames:(Ljava/lang/String;)[Ljava/lang/String;\n+   #60 = Class              #306          // java/io/StringWriter\n+   #61 = Methodref          #60.#274      // java/io/StringWriter.\"<init>\":()V\n+   #62 = Class              #307          // java/io/PrintWriter\n+   #63 = Methodref          #62.#308      // java/io/PrintWriter.\"<init>\":(Ljava/io/Writer;Z)V\n+   #64 = Methodref          #10.#309      // java/lang/Throwable.printStackTrace:(Ljava/io/PrintWriter;)V\n+   #65 = Methodref          #60.#310      // java/io/StringWriter.getBuffer:()Ljava/lang/StringBuffer;\n+   #66 = Methodref          #311.#278     // java/lang/StringBuffer.toString:()Ljava/lang/String;\n+   #67 = InterfaceMethodref #150.#312     // java/util/List.contains:(Ljava/lang/Object;)Z\n+   #68 = Fieldref           #266.#313     // org/apache/commons/lang3/ArrayUtils.EMPTY_THROWABLE_ARRAY:[Ljava/lang/Throwable;\n+   #69 = Class              #158          // \"[Ljava/lang/Throwable;\"\n+   #70 = Class              #314          // java/lang/reflect/UndeclaredThrowableException\n+   #71 = Methodref          #6.#315       // java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n+   #72 = Methodref          #13.#316      // java/lang/Object.equals:(Ljava/lang/Object;)Z\n+   #73 = Methodref          #44.#317      // org/apache/commons/lang3/exception/ExceptionUtils.indexOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n+   #74 = Fieldref           #296.#318     // java/lang/System.err:Ljava/io/PrintStream;\n+   #75 = Methodref          #44.#319      // org/apache/commons/lang3/exception/ExceptionUtils.printRootCauseStackTrace:(Ljava/lang/Throwable;Ljava/io/PrintStream;)V\n+   #76 = String             #211          // printStream\n+   #77 = Methodref          #320.#321     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #78 = Methodref          #44.#322      // org/apache/commons/lang3/exception/ExceptionUtils.getRootCauseStackTrace:(Ljava/lang/Throwable;)[Ljava/lang/String;\n+   #79 = Methodref          #213.#323     // java/io/PrintStream.println:(Ljava/lang/String;)V\n+   #80 = Methodref          #213.#324     // java/io/PrintStream.flush:()V\n+   #81 = String             #215          // printWriter\n+   #82 = Methodref          #62.#323      // java/io/PrintWriter.println:(Ljava/lang/String;)V\n+   #83 = Methodref          #62.#324      // java/io/PrintWriter.flush:()V\n+   #84 = String             #325          // The List must not be null\n+   #85 = Methodref          #16.#326      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #86 = Class              #327          // java/lang/String\n+   #87 = Methodref          #86.#316      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #88 = InterfaceMethodref #150.#328     // java/util/List.remove:(I)Ljava/lang/Object;\n+   #89 = Methodref          #44.#329      // org/apache/commons/lang3/exception/ExceptionUtils.typeErasure:(Ljava/lang/Throwable;)Ljava/lang/Object;\n+   #90 = Methodref          #6.#330       // java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #91 = Methodref          #44.#331      // org/apache/commons/lang3/exception/ExceptionUtils.throwableOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n+   #92 = Class              #332          // java/lang/RuntimeException\n+   #93 = Class              #333          // java/lang/Error\n+   #94 = Methodref          #70.#334      // java/lang/reflect/UndeclaredThrowableException.\"<init>\":(Ljava/lang/Throwable;)V\n+   #95 = Methodref          #13.#274      // java/lang/Object.\"<init>\":()V\n    #96 = String             #116          // getCause\n-   #97 = String             #342          // getNextException\n-   #98 = String             #343          // getTargetException\n-   #99 = String             #344          // getException\n-  #100 = String             #345          // getSourceException\n-  #101 = String             #147          // getRootCause\n-  #102 = String             #346          // getCausedByException\n-  #103 = String             #347          // getNested\n-  #104 = String             #348          // getLinkedException\n-  #105 = String             #349          // getNestedException\n-  #106 = String             #350          // getLinkedCause\n-  #107 = String             #351          // getThrowable\n+   #97 = String             #335          // getNextException\n+   #98 = String             #336          // getTargetException\n+   #99 = String             #337          // getException\n+  #100 = String             #338          // getSourceException\n+  #101 = String             #145          // getRootCause\n+  #102 = String             #339          // getCausedByException\n+  #103 = String             #340          // getNested\n+  #104 = String             #341          // getLinkedException\n+  #105 = String             #342          // getNestedException\n+  #106 = String             #343          // getLinkedCause\n+  #107 = String             #344          // getThrowable\n   #108 = Utf8               NOT_FOUND\n   #109 = Utf8               I\n   #110 = Utf8               ConstantValue\n   #111 = Integer            -1\n   #112 = Utf8               CAUSE_METHOD_NAMES\n   #113 = Utf8               [Ljava/lang/String;\n   #114 = Utf8               WRAPPED_MARKER\n@@ -135,301 +135,294 @@\n   #125 = Utf8               Ljava/lang/Deprecated;\n   #126 = Utf8               (Ljava/lang/Throwable;[Ljava/lang/String;)Ljava/lang/Throwable;\n   #127 = Utf8               cause\n   #128 = Utf8               legacyCause\n   #129 = Utf8               methodName\n   #130 = Utf8               methodNames\n   #131 = Utf8               StackMapTable\n-  #132 = Class              #262          // java/lang/Throwable\n-  #133 = Utf8               getCauseUsingMethodName\n-  #134 = Utf8               (Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;\n-  #135 = Utf8               method\n-  #136 = Utf8               Ljava/lang/reflect/Method;\n-  #137 = Class              #334          // java/lang/String\n-  #138 = Class              #352          // java/lang/reflect/Method\n-  #139 = Class              #353          // java/lang/Exception\n-  #140 = Utf8               getDefaultCauseMethodNames\n-  #141 = Utf8               ()[Ljava/lang/String;\n-  #142 = Utf8               getMessage\n-  #143 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/String;\n-  #144 = Utf8               th\n-  #145 = Utf8               clsName\n-  #146 = Utf8               msg\n-  #147 = Utf8               getRootCause\n-  #148 = Utf8               list\n-  #149 = Utf8               Ljava/util/List;\n-  #150 = Utf8               LocalVariableTypeTable\n-  #151 = Utf8               Ljava/util/List<Ljava/lang/Throwable;>;\n-  #152 = Class              #354          // java/util/List\n-  #153 = Utf8               getRootCauseMessage\n-  #154 = Utf8               root\n-  #155 = Utf8               getRootCauseStackTrace\n-  #156 = Utf8               (Ljava/lang/Throwable;)[Ljava/lang/String;\n-  #157 = Utf8               trace\n-  #158 = Utf8               i\n-  #159 = Utf8               throwables\n-  #160 = Utf8               [Ljava/lang/Throwable;\n-  #161 = Utf8               count\n-  #162 = Utf8               frames\n-  #163 = Utf8               nextTrace\n-  #164 = Utf8               Ljava/util/List<Ljava/lang/String;>;\n-  #165 = Utf8               getStackFrameList\n-  #166 = Utf8               (Ljava/lang/Throwable;)Ljava/util/List;\n-  #167 = Utf8               token\n-  #168 = Utf8               at\n-  #169 = Utf8               t\n-  #170 = Utf8               stackTrace\n-  #171 = Utf8               linebreak\n-  #172 = Utf8               Ljava/util/StringTokenizer;\n-  #173 = Utf8               traceStarted\n-  #174 = Utf8               Z\n-  #175 = Class              #304          // java/util/StringTokenizer\n-  #176 = Utf8               Signature\n-  #177 = Utf8               (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/String;>;\n-  #178 = Utf8               getStackFrames\n-  #179 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;\n-  #180 = Utf8               getStackTrace\n-  #181 = Utf8               sw\n-  #182 = Utf8               Ljava/io/StringWriter;\n-  #183 = Utf8               pw\n-  #184 = Utf8               Ljava/io/PrintWriter;\n-  #185 = Utf8               getThrowableCount\n-  #186 = Utf8               (Ljava/lang/Throwable;)I\n-  #187 = Utf8               getThrowableList\n-  #188 = Utf8               (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/Throwable;>;\n-  #189 = Utf8               getThrowables\n-  #190 = Utf8               (Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n-  #191 = Utf8               hasCause\n-  #192 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;)Z\n-  #193 = Utf8               chain\n-  #194 = Utf8               type\n-  #195 = Utf8               Ljava/lang/Class;\n-  #196 = Utf8               Ljava/lang/Class<+Ljava/lang/Throwable;>;\n-  #197 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)Z\n-  #198 = Utf8               indexOf\n-  #199 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n-  #200 = Utf8               fromIndex\n-  #201 = Utf8               subclass\n-  #202 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;IZ)I\n-  #203 = Utf8               indexOfThrowable\n-  #204 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;)I\n-  #205 = Utf8               clazz\n-  #206 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)I\n-  #207 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;I)I\n-  #208 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;I)I\n-  #209 = Utf8               indexOfType\n-  #210 = Utf8               printRootCauseStackTrace\n-  #211 = Utf8               (Ljava/lang/Throwable;)V\n-  #212 = Utf8               (Ljava/lang/Throwable;Ljava/io/PrintStream;)V\n-  #213 = Utf8               element\n-  #214 = Utf8               printStream\n-  #215 = Utf8               Ljava/io/PrintStream;\n-  #216 = Class              #355          // java/io/PrintStream\n-  #217 = Utf8               (Ljava/lang/Throwable;Ljava/io/PrintWriter;)V\n-  #218 = Utf8               printWriter\n-  #219 = Class              #313          // java/io/PrintWriter\n-  #220 = Utf8               removeCommonFrames\n-  #221 = Utf8               (Ljava/util/List;Ljava/util/List;)V\n-  #222 = Utf8               causeFrame\n-  #223 = Utf8               wrapperFrame\n-  #224 = Utf8               causeFrames\n-  #225 = Utf8               wrapperFrames\n-  #226 = Utf8               causeFrameIndex\n-  #227 = Utf8               wrapperFrameIndex\n-  #228 = Utf8               (Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;)V\n-  #229 = Utf8               rethrow\n-  #230 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/Object;\n-  #231 = Utf8               <R:Ljava/lang/Object;>(Ljava/lang/Throwable;)TR;\n-  #232 = Utf8               throwableOf\n-  #233 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n-  #234 = Utf8               Ljava/lang/Class<TT;>;\n-  #235 = Utf8               <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;IZ)TT;\n-  #236 = Utf8               throwableOfThrowable\n-  #237 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;)Ljava/lang/Throwable;\n-  #238 = Utf8               <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;)TT;\n-  #239 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;I)Ljava/lang/Throwable;\n-  #240 = Utf8               <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;I)TT;\n-  #241 = Utf8               throwableOfType\n-  #242 = Utf8               typeErasure\n-  #243 = Utf8               Exceptions\n-  #244 = Utf8               <R:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;)TR;^TT;\n-  #245 = Utf8               wrapAndThrow\n-  #246 = Utf8               <init>\n-  #247 = Utf8               ()V\n-  #248 = Utf8               this\n-  #249 = Utf8               Lorg/apache/commons/lang3/exception/ExceptionUtils;\n-  #250 = Utf8               <clinit>\n-  #251 = Utf8               SourceFile\n-  #252 = Utf8               ExceptionUtils.java\n-  #253 = NameAndType        #116:#126     // getCause:(Ljava/lang/Throwable;[Ljava/lang/String;)Ljava/lang/Throwable;\n-  #254 = NameAndType        #116:#356     // getCause:()Ljava/lang/Throwable;\n-  #255 = NameAndType        #112:#113     // CAUSE_METHOD_NAMES:[Ljava/lang/String;\n-  #256 = NameAndType        #133:#134     // getCauseUsingMethodName:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;\n-  #257 = NameAndType        #357:#358     // getClass:()Ljava/lang/Class;\n-  #258 = Utf8               java/lang/Class\n-  #259 = NameAndType        #359:#360     // getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n-  #260 = Utf8               java/lang/NoSuchMethodException\n-  #261 = Utf8               java/lang/SecurityException\n-  #262 = Utf8               java/lang/Throwable\n-  #263 = Class              #352          // java/lang/reflect/Method\n-  #264 = NameAndType        #361:#358     // getReturnType:()Ljava/lang/Class;\n-  #265 = NameAndType        #362:#363     // isAssignableFrom:(Ljava/lang/Class;)Z\n-  #266 = Utf8               java/lang/Object\n-  #267 = NameAndType        #364:#365     // invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #268 = Utf8               java/lang/IllegalAccessException\n-  #269 = Utf8               java/lang/IllegalArgumentException\n-  #270 = Utf8               java/lang/reflect/InvocationTargetException\n-  #271 = Class              #366          // org/apache/commons/lang3/ArrayUtils\n-  #272 = NameAndType        #367:#368     // clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #273 = Utf8               org/apache/commons/lang3/StringUtils\n-  #274 = Utf8\n-  #275 = Class              #369          // org/apache/commons/lang3/ClassUtils\n-  #276 = NameAndType        #370:#371     // getShortClassName:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-  #277 = NameAndType        #142:#372     // getMessage:()Ljava/lang/String;\n-  #278 = Utf8               java/lang/StringBuilder\n-  #279 = NameAndType        #246:#247     // \"<init>\":()V\n-  #280 = NameAndType        #373:#374     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #281 = Utf8               :\n-  #282 = NameAndType        #375:#376     // defaultString:(Ljava/lang/String;)Ljava/lang/String;\n-  #283 = NameAndType        #377:#372     // toString:()Ljava/lang/String;\n-  #284 = NameAndType        #187:#166     // getThrowableList:(Ljava/lang/Throwable;)Ljava/util/List;\n-  #285 = Class              #354          // java/util/List\n-  #286 = NameAndType        #378:#379     // isEmpty:()Z\n-  #287 = NameAndType        #380:#381     // size:()I\n-  #288 = NameAndType        #382:#383     // get:(I)Ljava/lang/Object;\n-  #289 = NameAndType        #147:#117     // getRootCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;\n-  #290 = NameAndType        #142:#143     // getMessage:(Ljava/lang/Throwable;)Ljava/lang/String;\n-  #291 = NameAndType        #384:#113     // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-  #292 = NameAndType        #189:#190     // getThrowables:(Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n-  #293 = Utf8               java/util/ArrayList\n-  #294 = NameAndType        #165:#166     // getStackFrameList:(Ljava/lang/Throwable;)Ljava/util/List;\n-  #295 = NameAndType        #220:#221     // removeCommonFrames:(Ljava/util/List;Ljava/util/List;)V\n-  #296 = NameAndType        #385:#386     // add:(Ljava/lang/Object;)Z\n-  #297 = Utf8               org/apache/commons/lang3/exception/ExceptionUtils\n-  #298 = Utf8                [wrapped]\n-  #299 = NameAndType        #387:#388     // addAll:(Ljava/util/Collection;)Z\n-  #300 = NameAndType        #389:#368     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #301 = NameAndType        #180:#143     // getStackTrace:(Ljava/lang/Throwable;)Ljava/lang/String;\n-  #302 = Class              #390          // java/lang/System\n-  #303 = NameAndType        #391:#372     // lineSeparator:()Ljava/lang/String;\n-  #304 = Utf8               java/util/StringTokenizer\n-  #305 = NameAndType        #246:#392     // \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n-  #306 = NameAndType        #393:#379     // hasMoreTokens:()Z\n-  #307 = NameAndType        #394:#372     // nextToken:()Ljava/lang/String;\n-  #308 = NameAndType        #198:#395     // indexOf:(Ljava/lang/String;)I\n-  #309 = NameAndType        #396:#397     // substring:(II)Ljava/lang/String;\n-  #310 = NameAndType        #398:#372     // trim:()Ljava/lang/String;\n-  #311 = NameAndType        #178:#179     // getStackFrames:(Ljava/lang/String;)[Ljava/lang/String;\n-  #312 = Utf8               java/io/StringWriter\n-  #313 = Utf8               java/io/PrintWriter\n-  #314 = NameAndType        #246:#399     // \"<init>\":(Ljava/io/Writer;Z)V\n-  #315 = NameAndType        #400:#401     // printStackTrace:(Ljava/io/PrintWriter;)V\n-  #316 = NameAndType        #402:#403     // getBuffer:()Ljava/lang/StringBuffer;\n-  #317 = Class              #404          // java/lang/StringBuffer\n-  #318 = NameAndType        #405:#386     // contains:(Ljava/lang/Object;)Z\n-  #319 = NameAndType        #406:#160     // EMPTY_THROWABLE_ARRAY:[Ljava/lang/Throwable;\n-  #320 = Utf8               java/lang/reflect/UndeclaredThrowableException\n-  #321 = NameAndType        #407:#386     // isInstance:(Ljava/lang/Object;)Z\n-  #322 = NameAndType        #408:#386     // equals:(Ljava/lang/Object;)Z\n-  #323 = NameAndType        #198:#199     // indexOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n-  #324 = NameAndType        #409:#215     // err:Ljava/io/PrintStream;\n-  #325 = NameAndType        #210:#212     // printRootCauseStackTrace:(Ljava/lang/Throwable;Ljava/io/PrintStream;)V\n-  #326 = Class              #410          // java/util/Objects\n-  #327 = NameAndType        #411:#412     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #328 = NameAndType        #155:#156     // getRootCauseStackTrace:(Ljava/lang/Throwable;)[Ljava/lang/String;\n-  #329 = Class              #355          // java/io/PrintStream\n-  #330 = NameAndType        #413:#414     // println:(Ljava/lang/String;)V\n-  #331 = NameAndType        #415:#247     // flush:()V\n-  #332 = Utf8               The List must not be null\n-  #333 = NameAndType        #246:#414     // \"<init>\":(Ljava/lang/String;)V\n-  #334 = Utf8               java/lang/String\n-  #335 = NameAndType        #416:#383     // remove:(I)Ljava/lang/Object;\n-  #336 = NameAndType        #242:#230     // typeErasure:(Ljava/lang/Throwable;)Ljava/lang/Object;\n-  #337 = NameAndType        #417:#418     // cast:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #338 = NameAndType        #232:#233     // throwableOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n-  #339 = Utf8               java/lang/RuntimeException\n-  #340 = Utf8               java/lang/Error\n-  #341 = NameAndType        #246:#211     // \"<init>\":(Ljava/lang/Throwable;)V\n-  #342 = Utf8               getNextException\n-  #343 = Utf8               getTargetException\n-  #344 = Utf8               getException\n-  #345 = Utf8               getSourceException\n-  #346 = Utf8               getCausedByException\n-  #347 = Utf8               getNested\n-  #348 = Utf8               getLinkedException\n-  #349 = Utf8               getNestedException\n-  #350 = Utf8               getLinkedCause\n-  #351 = Utf8               getThrowable\n-  #352 = Utf8               java/lang/reflect/Method\n-  #353 = Utf8               java/lang/Exception\n-  #354 = Utf8               java/util/List\n-  #355 = Utf8               java/io/PrintStream\n-  #356 = Utf8               ()Ljava/lang/Throwable;\n-  #357 = Utf8               getClass\n-  #358 = Utf8               ()Ljava/lang/Class;\n-  #359 = Utf8               getMethod\n-  #360 = Utf8               (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n-  #361 = Utf8               getReturnType\n-  #362 = Utf8               isAssignableFrom\n-  #363 = Utf8               (Ljava/lang/Class;)Z\n-  #364 = Utf8               invoke\n-  #365 = Utf8               (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #366 = Utf8               org/apache/commons/lang3/ArrayUtils\n-  #367 = Utf8               clone\n-  #368 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #369 = Utf8               org/apache/commons/lang3/ClassUtils\n-  #370 = Utf8               getShortClassName\n-  #371 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-  #372 = Utf8               ()Ljava/lang/String;\n-  #373 = Utf8               append\n-  #374 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #375 = Utf8               defaultString\n-  #376 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #377 = Utf8               toString\n-  #378 = Utf8               isEmpty\n-  #379 = Utf8               ()Z\n-  #380 = Utf8               size\n-  #381 = Utf8               ()I\n-  #382 = Utf8               get\n-  #383 = Utf8               (I)Ljava/lang/Object;\n-  #384 = Utf8               EMPTY_STRING_ARRAY\n-  #385 = Utf8               add\n-  #386 = Utf8               (Ljava/lang/Object;)Z\n-  #387 = Utf8               addAll\n-  #388 = Utf8               (Ljava/util/Collection;)Z\n-  #389 = Utf8               toArray\n-  #390 = Utf8               java/lang/System\n-  #391 = Utf8               lineSeparator\n-  #392 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n-  #393 = Utf8               hasMoreTokens\n-  #394 = Utf8               nextToken\n-  #395 = Utf8               (Ljava/lang/String;)I\n-  #396 = Utf8               substring\n-  #397 = Utf8               (II)Ljava/lang/String;\n-  #398 = Utf8               trim\n-  #399 = Utf8               (Ljava/io/Writer;Z)V\n-  #400 = Utf8               printStackTrace\n-  #401 = Utf8               (Ljava/io/PrintWriter;)V\n-  #402 = Utf8               getBuffer\n-  #403 = Utf8               ()Ljava/lang/StringBuffer;\n-  #404 = Utf8               java/lang/StringBuffer\n-  #405 = Utf8               contains\n-  #406 = Utf8               EMPTY_THROWABLE_ARRAY\n-  #407 = Utf8               isInstance\n-  #408 = Utf8               equals\n-  #409 = Utf8               err\n-  #410 = Utf8               java/util/Objects\n-  #411 = Utf8               requireNonNull\n-  #412 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #413 = Utf8               println\n-  #414 = Utf8               (Ljava/lang/String;)V\n-  #415 = Utf8               flush\n-  #416 = Utf8               remove\n-  #417 = Utf8               cast\n-  #418 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #132 = Utf8               getCauseUsingMethodName\n+  #133 = Utf8               (Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;\n+  #134 = Utf8               method\n+  #135 = Utf8               Ljava/lang/reflect/Method;\n+  #136 = Class              #345          // java/lang/reflect/Method\n+  #137 = Class              #346          // java/lang/Exception\n+  #138 = Utf8               getDefaultCauseMethodNames\n+  #139 = Utf8               ()[Ljava/lang/String;\n+  #140 = Utf8               getMessage\n+  #141 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/String;\n+  #142 = Utf8               th\n+  #143 = Utf8               clsName\n+  #144 = Utf8               msg\n+  #145 = Utf8               getRootCause\n+  #146 = Utf8               list\n+  #147 = Utf8               Ljava/util/List;\n+  #148 = Utf8               LocalVariableTypeTable\n+  #149 = Utf8               Ljava/util/List<Ljava/lang/Throwable;>;\n+  #150 = Class              #347          // java/util/List\n+  #151 = Utf8               getRootCauseMessage\n+  #152 = Utf8               root\n+  #153 = Utf8               getRootCauseStackTrace\n+  #154 = Utf8               (Ljava/lang/Throwable;)[Ljava/lang/String;\n+  #155 = Utf8               trace\n+  #156 = Utf8               i\n+  #157 = Utf8               throwables\n+  #158 = Utf8               [Ljava/lang/Throwable;\n+  #159 = Utf8               count\n+  #160 = Utf8               frames\n+  #161 = Utf8               nextTrace\n+  #162 = Utf8               Ljava/util/List<Ljava/lang/String;>;\n+  #163 = Utf8               getStackFrameList\n+  #164 = Utf8               (Ljava/lang/Throwable;)Ljava/util/List;\n+  #165 = Utf8               token\n+  #166 = Utf8               at\n+  #167 = Utf8               t\n+  #168 = Utf8               stackTrace\n+  #169 = Utf8               linebreak\n+  #170 = Utf8               Ljava/util/StringTokenizer;\n+  #171 = Utf8               traceStarted\n+  #172 = Utf8               Z\n+  #173 = Utf8               Signature\n+  #174 = Utf8               (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/String;>;\n+  #175 = Utf8               getStackFrames\n+  #176 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;\n+  #177 = Utf8               getStackTrace\n+  #178 = Utf8               sw\n+  #179 = Utf8               Ljava/io/StringWriter;\n+  #180 = Utf8               pw\n+  #181 = Utf8               Ljava/io/PrintWriter;\n+  #182 = Utf8               getThrowableCount\n+  #183 = Utf8               (Ljava/lang/Throwable;)I\n+  #184 = Utf8               getThrowableList\n+  #185 = Utf8               (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/Throwable;>;\n+  #186 = Utf8               getThrowables\n+  #187 = Utf8               (Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n+  #188 = Utf8               hasCause\n+  #189 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;)Z\n+  #190 = Utf8               chain\n+  #191 = Utf8               type\n+  #192 = Utf8               Ljava/lang/Class;\n+  #193 = Utf8               Ljava/lang/Class<+Ljava/lang/Throwable;>;\n+  #194 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)Z\n+  #195 = Utf8               indexOf\n+  #196 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n+  #197 = Utf8               fromIndex\n+  #198 = Utf8               subclass\n+  #199 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;IZ)I\n+  #200 = Utf8               indexOfThrowable\n+  #201 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;)I\n+  #202 = Utf8               clazz\n+  #203 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)I\n+  #204 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;I)I\n+  #205 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;I)I\n+  #206 = Utf8               indexOfType\n+  #207 = Utf8               printRootCauseStackTrace\n+  #208 = Utf8               (Ljava/lang/Throwable;)V\n+  #209 = Utf8               (Ljava/lang/Throwable;Ljava/io/PrintStream;)V\n+  #210 = Utf8               element\n+  #211 = Utf8               printStream\n+  #212 = Utf8               Ljava/io/PrintStream;\n+  #213 = Class              #348          // java/io/PrintStream\n+  #214 = Utf8               (Ljava/lang/Throwable;Ljava/io/PrintWriter;)V\n+  #215 = Utf8               printWriter\n+  #216 = Utf8               removeCommonFrames\n+  #217 = Utf8               (Ljava/util/List;Ljava/util/List;)V\n+  #218 = Utf8               causeFrame\n+  #219 = Utf8               wrapperFrame\n+  #220 = Utf8               causeFrames\n+  #221 = Utf8               wrapperFrames\n+  #222 = Utf8               causeFrameIndex\n+  #223 = Utf8               wrapperFrameIndex\n+  #224 = Utf8               (Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;)V\n+  #225 = Utf8               rethrow\n+  #226 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/Object;\n+  #227 = Utf8               <R:Ljava/lang/Object;>(Ljava/lang/Throwable;)TR;\n+  #228 = Utf8               throwableOf\n+  #229 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n+  #230 = Utf8               Ljava/lang/Class<TT;>;\n+  #231 = Utf8               <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;IZ)TT;\n+  #232 = Utf8               throwableOfThrowable\n+  #233 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;)Ljava/lang/Throwable;\n+  #234 = Utf8               <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;)TT;\n+  #235 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;I)Ljava/lang/Throwable;\n+  #236 = Utf8               <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;I)TT;\n+  #237 = Utf8               throwableOfType\n+  #238 = Utf8               typeErasure\n+  #239 = Utf8               Exceptions\n+  #240 = Utf8               <R:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;)TR;^TT;\n+  #241 = Utf8               wrapAndThrow\n+  #242 = Utf8               <init>\n+  #243 = Utf8               ()V\n+  #244 = Utf8               this\n+  #245 = Utf8               Lorg/apache/commons/lang3/exception/ExceptionUtils;\n+  #246 = Utf8               <clinit>\n+  #247 = Utf8               SourceFile\n+  #248 = Utf8               ExceptionUtils.java\n+  #249 = NameAndType        #116:#126     // getCause:(Ljava/lang/Throwable;[Ljava/lang/String;)Ljava/lang/Throwable;\n+  #250 = NameAndType        #116:#349     // getCause:()Ljava/lang/Throwable;\n+  #251 = NameAndType        #112:#113     // CAUSE_METHOD_NAMES:[Ljava/lang/String;\n+  #252 = NameAndType        #132:#133     // getCauseUsingMethodName:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;\n+  #253 = NameAndType        #350:#351     // getClass:()Ljava/lang/Class;\n+  #254 = Utf8               java/lang/Class\n+  #255 = NameAndType        #352:#353     // getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n+  #256 = Utf8               java/lang/NoSuchMethodException\n+  #257 = Utf8               java/lang/SecurityException\n+  #258 = Utf8               java/lang/Throwable\n+  #259 = NameAndType        #354:#351     // getReturnType:()Ljava/lang/Class;\n+  #260 = NameAndType        #355:#356     // isAssignableFrom:(Ljava/lang/Class;)Z\n+  #261 = Utf8               java/lang/Object\n+  #262 = NameAndType        #357:#358     // invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #263 = Utf8               java/lang/IllegalAccessException\n+  #264 = Utf8               java/lang/IllegalArgumentException\n+  #265 = Utf8               java/lang/reflect/InvocationTargetException\n+  #266 = Class              #359          // org/apache/commons/lang3/ArrayUtils\n+  #267 = NameAndType        #360:#361     // clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #268 = Utf8               org/apache/commons/lang3/StringUtils\n+  #269 = Utf8\n+  #270 = Class              #362          // org/apache/commons/lang3/ClassUtils\n+  #271 = NameAndType        #363:#364     // getShortClassName:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+  #272 = NameAndType        #140:#365     // getMessage:()Ljava/lang/String;\n+  #273 = Utf8               java/lang/StringBuilder\n+  #274 = NameAndType        #242:#243     // \"<init>\":()V\n+  #275 = NameAndType        #366:#367     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #276 = Utf8               :\n+  #277 = NameAndType        #368:#369     // defaultString:(Ljava/lang/String;)Ljava/lang/String;\n+  #278 = NameAndType        #370:#365     // toString:()Ljava/lang/String;\n+  #279 = NameAndType        #184:#164     // getThrowableList:(Ljava/lang/Throwable;)Ljava/util/List;\n+  #280 = NameAndType        #371:#372     // isEmpty:()Z\n+  #281 = NameAndType        #373:#374     // size:()I\n+  #282 = NameAndType        #375:#376     // get:(I)Ljava/lang/Object;\n+  #283 = NameAndType        #145:#117     // getRootCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;\n+  #284 = NameAndType        #140:#141     // getMessage:(Ljava/lang/Throwable;)Ljava/lang/String;\n+  #285 = NameAndType        #377:#113     // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+  #286 = NameAndType        #186:#187     // getThrowables:(Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n+  #287 = Utf8               java/util/ArrayList\n+  #288 = NameAndType        #163:#164     // getStackFrameList:(Ljava/lang/Throwable;)Ljava/util/List;\n+  #289 = NameAndType        #216:#217     // removeCommonFrames:(Ljava/util/List;Ljava/util/List;)V\n+  #290 = NameAndType        #378:#379     // add:(Ljava/lang/Object;)Z\n+  #291 = Utf8               org/apache/commons/lang3/exception/ExceptionUtils\n+  #292 = Utf8                [wrapped]\n+  #293 = NameAndType        #380:#381     // addAll:(Ljava/util/Collection;)Z\n+  #294 = NameAndType        #382:#361     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #295 = NameAndType        #177:#141     // getStackTrace:(Ljava/lang/Throwable;)Ljava/lang/String;\n+  #296 = Class              #383          // java/lang/System\n+  #297 = NameAndType        #384:#365     // lineSeparator:()Ljava/lang/String;\n+  #298 = Utf8               java/util/StringTokenizer\n+  #299 = NameAndType        #242:#385     // \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+  #300 = NameAndType        #386:#372     // hasMoreTokens:()Z\n+  #301 = NameAndType        #387:#365     // nextToken:()Ljava/lang/String;\n+  #302 = NameAndType        #195:#388     // indexOf:(Ljava/lang/String;)I\n+  #303 = NameAndType        #389:#390     // substring:(II)Ljava/lang/String;\n+  #304 = NameAndType        #391:#365     // trim:()Ljava/lang/String;\n+  #305 = NameAndType        #175:#176     // getStackFrames:(Ljava/lang/String;)[Ljava/lang/String;\n+  #306 = Utf8               java/io/StringWriter\n+  #307 = Utf8               java/io/PrintWriter\n+  #308 = NameAndType        #242:#392     // \"<init>\":(Ljava/io/Writer;Z)V\n+  #309 = NameAndType        #393:#394     // printStackTrace:(Ljava/io/PrintWriter;)V\n+  #310 = NameAndType        #395:#396     // getBuffer:()Ljava/lang/StringBuffer;\n+  #311 = Class              #397          // java/lang/StringBuffer\n+  #312 = NameAndType        #398:#379     // contains:(Ljava/lang/Object;)Z\n+  #313 = NameAndType        #399:#158     // EMPTY_THROWABLE_ARRAY:[Ljava/lang/Throwable;\n+  #314 = Utf8               java/lang/reflect/UndeclaredThrowableException\n+  #315 = NameAndType        #400:#379     // isInstance:(Ljava/lang/Object;)Z\n+  #316 = NameAndType        #401:#379     // equals:(Ljava/lang/Object;)Z\n+  #317 = NameAndType        #195:#196     // indexOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n+  #318 = NameAndType        #402:#212     // err:Ljava/io/PrintStream;\n+  #319 = NameAndType        #207:#209     // printRootCauseStackTrace:(Ljava/lang/Throwable;Ljava/io/PrintStream;)V\n+  #320 = Class              #403          // java/util/Objects\n+  #321 = NameAndType        #404:#405     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #322 = NameAndType        #153:#154     // getRootCauseStackTrace:(Ljava/lang/Throwable;)[Ljava/lang/String;\n+  #323 = NameAndType        #406:#407     // println:(Ljava/lang/String;)V\n+  #324 = NameAndType        #408:#243     // flush:()V\n+  #325 = Utf8               The List must not be null\n+  #326 = NameAndType        #242:#407     // \"<init>\":(Ljava/lang/String;)V\n+  #327 = Utf8               java/lang/String\n+  #328 = NameAndType        #409:#376     // remove:(I)Ljava/lang/Object;\n+  #329 = NameAndType        #238:#226     // typeErasure:(Ljava/lang/Throwable;)Ljava/lang/Object;\n+  #330 = NameAndType        #410:#411     // cast:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #331 = NameAndType        #228:#229     // throwableOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n+  #332 = Utf8               java/lang/RuntimeException\n+  #333 = Utf8               java/lang/Error\n+  #334 = NameAndType        #242:#208     // \"<init>\":(Ljava/lang/Throwable;)V\n+  #335 = Utf8               getNextException\n+  #336 = Utf8               getTargetException\n+  #337 = Utf8               getException\n+  #338 = Utf8               getSourceException\n+  #339 = Utf8               getCausedByException\n+  #340 = Utf8               getNested\n+  #341 = Utf8               getLinkedException\n+  #342 = Utf8               getNestedException\n+  #343 = Utf8               getLinkedCause\n+  #344 = Utf8               getThrowable\n+  #345 = Utf8               java/lang/reflect/Method\n+  #346 = Utf8               java/lang/Exception\n+  #347 = Utf8               java/util/List\n+  #348 = Utf8               java/io/PrintStream\n+  #349 = Utf8               ()Ljava/lang/Throwable;\n+  #350 = Utf8               getClass\n+  #351 = Utf8               ()Ljava/lang/Class;\n+  #352 = Utf8               getMethod\n+  #353 = Utf8               (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n+  #354 = Utf8               getReturnType\n+  #355 = Utf8               isAssignableFrom\n+  #356 = Utf8               (Ljava/lang/Class;)Z\n+  #357 = Utf8               invoke\n+  #358 = Utf8               (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #359 = Utf8               org/apache/commons/lang3/ArrayUtils\n+  #360 = Utf8               clone\n+  #361 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #362 = Utf8               org/apache/commons/lang3/ClassUtils\n+  #363 = Utf8               getShortClassName\n+  #364 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+  #365 = Utf8               ()Ljava/lang/String;\n+  #366 = Utf8               append\n+  #367 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #368 = Utf8               defaultString\n+  #369 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #370 = Utf8               toString\n+  #371 = Utf8               isEmpty\n+  #372 = Utf8               ()Z\n+  #373 = Utf8               size\n+  #374 = Utf8               ()I\n+  #375 = Utf8               get\n+  #376 = Utf8               (I)Ljava/lang/Object;\n+  #377 = Utf8               EMPTY_STRING_ARRAY\n+  #378 = Utf8               add\n+  #379 = Utf8               (Ljava/lang/Object;)Z\n+  #380 = Utf8               addAll\n+  #381 = Utf8               (Ljava/util/Collection;)Z\n+  #382 = Utf8               toArray\n+  #383 = Utf8               java/lang/System\n+  #384 = Utf8               lineSeparator\n+  #385 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n+  #386 = Utf8               hasMoreTokens\n+  #387 = Utf8               nextToken\n+  #388 = Utf8               (Ljava/lang/String;)I\n+  #389 = Utf8               substring\n+  #390 = Utf8               (II)Ljava/lang/String;\n+  #391 = Utf8               trim\n+  #392 = Utf8               (Ljava/io/Writer;Z)V\n+  #393 = Utf8               printStackTrace\n+  #394 = Utf8               (Ljava/io/PrintWriter;)V\n+  #395 = Utf8               getBuffer\n+  #396 = Utf8               ()Ljava/lang/StringBuffer;\n+  #397 = Utf8               java/lang/StringBuffer\n+  #398 = Utf8               contains\n+  #399 = Utf8               EMPTY_THROWABLE_ARRAY\n+  #400 = Utf8               isInstance\n+  #401 = Utf8               equals\n+  #402 = Utf8               err\n+  #403 = Utf8               java/util/Objects\n+  #404 = Utf8               requireNonNull\n+  #405 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #406 = Utf8               println\n+  #407 = Utf8               (Ljava/lang/String;)V\n+  #408 = Utf8               flush\n+  #409 = Utf8               remove\n+  #410 = Utf8               cast\n+  #411 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n {\n   private static final int NOT_FOUND = -1;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int -1\n \n   private static final java.lang.String[] CAUSE_METHOD_NAMES;\n@@ -959,15 +952,15 @@\n           stack = []\n         frame_type = 253 /* append */\n           offset_delta = 60\n           locals = [ class java/lang/String, int ]\n         frame_type = 249 /* chop */\n           offset_delta = 7\n         frame_type = 2 /* same */\n-    Signature: #177                         // (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/String;>;\n+    Signature: #174                         // (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/String;>;\n \n   static java.lang.String[] getStackFrames(java.lang.String);\n     descriptor: (Ljava/lang/String;)[Ljava/lang/String;\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=4, locals=4, args_size=1\n          0: invokestatic  #49                 // Method java/lang/System.lineSeparator:()Ljava/lang/String;\n@@ -1128,15 +1121,15 @@\n         Start  Length  Slot  Name   Signature\n             8      32     1  list   Ljava/util/List<Ljava/lang/Throwable;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 252 /* append */\n           offset_delta = 8\n           locals = [ class java/util/List ]\n         frame_type = 29 /* same */\n-    Signature: #188                         // (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/Throwable;>;\n+    Signature: #185                         // (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/Throwable;>;\n \n   public static java.lang.Throwable[] getThrowables(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n@@ -1182,15 +1175,15 @@\n             0      18     0 chain   Ljava/lang/Throwable;\n             0      18     1  type   Ljava/lang/Class;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      18     1  type   Ljava/lang/Class<+Ljava/lang/Throwable;>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 12 /* same */\n-    Signature: #197                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)Z\n+    Signature: #194                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)Z\n \n   private static int indexOf(java.lang.Throwable, java.lang.Class<? extends java.lang.Throwable>, int, boolean);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=6, args_size=4\n          0: aload_0\n@@ -1297,15 +1290,15 @@\n         frame_type = 2 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 2\n           locals = [ int ]\n         frame_type = 25 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 5\n-    Signature: #202                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;IZ)I\n+    Signature: #199                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;IZ)I\n \n   public static int indexOfThrowable(java.lang.Throwable, java.lang.Class<? extends java.lang.Throwable>);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n@@ -1319,15 +1312,15 @@\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 throwable   Ljava/lang/Throwable;\n             0       8     1 clazz   Ljava/lang/Class;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       8     1 clazz   Ljava/lang/Class<+Ljava/lang/Throwable;>;\n-    Signature: #206                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)I\n+    Signature: #203                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)I\n \n   public static int indexOfThrowable(java.lang.Throwable, java.lang.Class<? extends java.lang.Throwable>, int);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;I)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n@@ -1342,15 +1335,15 @@\n         Start  Length  Slot  Name   Signature\n             0       8     0 throwable   Ljava/lang/Throwable;\n             0       8     1 clazz   Ljava/lang/Class;\n             0       8     2 fromIndex   I\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       8     1 clazz   Ljava/lang/Class<+Ljava/lang/Throwable;>;\n-    Signature: #208                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;I)I\n+    Signature: #205                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;I)I\n \n   public static int indexOfType(java.lang.Throwable, java.lang.Class<? extends java.lang.Throwable>);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n@@ -1364,15 +1357,15 @@\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 throwable   Ljava/lang/Throwable;\n             0       8     1  type   Ljava/lang/Class;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       8     1  type   Ljava/lang/Class<+Ljava/lang/Throwable;>;\n-    Signature: #206                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)I\n+    Signature: #203                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)I\n \n   public static int indexOfType(java.lang.Throwable, java.lang.Class<? extends java.lang.Throwable>, int);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;I)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n@@ -1387,15 +1380,15 @@\n         Start  Length  Slot  Name   Signature\n             0       8     0 throwable   Ljava/lang/Throwable;\n             0       8     1  type   Ljava/lang/Class;\n             0       8     2 fromIndex   I\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       8     1  type   Ljava/lang/Class<+Ljava/lang/Throwable;>;\n-    Signature: #208                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;I)I\n+    Signature: #205                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;I)I\n \n   public static void printRootCauseStackTrace(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n@@ -1616,30 +1609,30 @@\n           offset_delta = 17\n           locals = [ int, int ]\n         frame_type = 253 /* append */\n           offset_delta = 49\n           locals = [ class java/lang/String, class java/lang/String ]\n         frame_type = 249 /* chop */\n           offset_delta = 8\n-    Signature: #228                         // (Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;)V\n+    Signature: #224                         // (Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;)V\n \n   public static <R extends java.lang.Object> R rethrow(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: invokestatic  #89                 // Method typeErasure:(Ljava/lang/Throwable;)Ljava/lang/Object;\n          4: areturn\n       LineNumberTable:\n         line 760: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0 throwable   Ljava/lang/Throwable;\n-    Signature: #231                         // <R:Ljava/lang/Object;>(Ljava/lang/Throwable;)TR;\n+    Signature: #227                         // <R:Ljava/lang/Object;>(Ljava/lang/Throwable;)TR;\n \n   private static <T extends java.lang.Throwable> T throwableOf(java.lang.Throwable, java.lang.Class<T>, int, boolean);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=6, args_size=4\n          0: aload_0\n@@ -1756,15 +1749,15 @@\n         frame_type = 2 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 2\n           locals = [ int ]\n         frame_type = 35 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 5\n-    Signature: #235                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;IZ)TT;\n+    Signature: #231                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;IZ)TT;\n \n   public static <T extends java.lang.Throwable> T throwableOfThrowable(java.lang.Throwable, java.lang.Class<T>);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;)Ljava/lang/Throwable;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n@@ -1778,15 +1771,15 @@\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 throwable   Ljava/lang/Throwable;\n             0       8     1 clazz   Ljava/lang/Class;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       8     1 clazz   Ljava/lang/Class<TT;>;\n-    Signature: #238                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;)TT;\n+    Signature: #234                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;)TT;\n \n   public static <T extends java.lang.Throwable> T throwableOfThrowable(java.lang.Throwable, java.lang.Class<T>, int);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;I)Ljava/lang/Throwable;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n@@ -1801,15 +1794,15 @@\n         Start  Length  Slot  Name   Signature\n             0       8     0 throwable   Ljava/lang/Throwable;\n             0       8     1 clazz   Ljava/lang/Class;\n             0       8     2 fromIndex   I\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       8     1 clazz   Ljava/lang/Class<TT;>;\n-    Signature: #240                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;I)TT;\n+    Signature: #236                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;I)TT;\n \n   public static <T extends java.lang.Throwable> T throwableOfType(java.lang.Throwable, java.lang.Class<T>);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;)Ljava/lang/Throwable;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n@@ -1823,15 +1816,15 @@\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 throwable   Ljava/lang/Throwable;\n             0       8     1  type   Ljava/lang/Class;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       8     1  type   Ljava/lang/Class<TT;>;\n-    Signature: #238                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;)TT;\n+    Signature: #234                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;)TT;\n \n   public static <T extends java.lang.Throwable> T throwableOfType(java.lang.Throwable, java.lang.Class<T>, int);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;I)Ljava/lang/Throwable;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n@@ -1846,15 +1839,15 @@\n         Start  Length  Slot  Name   Signature\n             0       8     0 throwable   Ljava/lang/Throwable;\n             0       8     1  type   Ljava/lang/Class;\n             0       8     2 fromIndex   I\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       8     1  type   Ljava/lang/Class<TT;>;\n-    Signature: #240                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;I)TT;\n+    Signature: #236                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;I)TT;\n \n   private static <R extends java.lang.Object, T extends java.lang.Throwable> R typeErasure(java.lang.Throwable) throws T;\n     descriptor: (Ljava/lang/Throwable;)Ljava/lang/Object;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -1862,15 +1855,15 @@\n       LineNumberTable:\n         line 900: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       2     0 throwable   Ljava/lang/Throwable;\n     Exceptions:\n       throws java.lang.Throwable\n-    Signature: #244                         // <R:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;)TR;^TT;\n+    Signature: #240                         // <R:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;)TR;^TT;\n \n   public static <R extends java.lang.Object> R wrapAndThrow(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n@@ -1898,15 +1891,15 @@\n         line 931: 24\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      33     0 throwable   Ljava/lang/Throwable;\n       StackMapTable: number_of_entries = 2\n         frame_type = 12 /* same */\n         frame_type = 11 /* same */\n-    Signature: #231                         // <R:Ljava/lang/Object;>(Ljava/lang/Throwable;)TR;\n+    Signature: #227                         // <R:Ljava/lang/Object;>(Ljava/lang/Throwable;)TR;\n \n   public org.apache.commons.lang3.exception.ExceptionUtils();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n"}]}
