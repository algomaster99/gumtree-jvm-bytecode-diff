{"diffoscope-json-version": 1, "source1": "first/HiddenFieldCheck.class", "source2": "second/HiddenFieldCheck.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -95,15 +95,15 @@\n                 }\n             }\n         }\n         if (ast.getType() == 199) {\n             final DetailAST recordComponents = ast.findFirstToken(201);\n             TokenUtil.forEachChild(recordComponents, 202, node -> {\n                 final String name2 = node.findFirstToken(58).getText();\n-                newFrame.addInstanceField(name2);\n+                fieldFrame.addInstanceField(name2);\n                 return;\n             });\n         }\n         this.frame = newFrame;\n     }\n     \n     public void leaveToken(final DetailAST ast) {\n@@ -177,15 +177,15 @@\n         }\n         return isSetterMethod;\n     }\n     \n     private static String capitalize(final String name) {\n         String setterName = name;\n         if (name.length() == 1 || !Character.isUpperCase(name.charAt(1))) {\n-            setterName = name.substring(0, 1).toUpperCase(Locale.ENGLISH) + name.substring(1);\n+            setterName = String.valueOf(name.substring(0, 1).toUpperCase(Locale.ENGLISH)) + name.substring(1);\n         }\n         return setterName;\n     }\n     \n     private boolean isIgnoredConstructorParam(final DetailAST ast) {\n         boolean result = false;\n         if (this.ignoreConstructorParameter && ast.getType() == 21) {\n"}]}
