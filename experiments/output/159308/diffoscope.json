{"diffoscope-json-version": 1, "source1": "first/ZipArchiveEntry$ExtraFieldParsingMode.class", "source2": "second/ZipArchiveEntry$ExtraFieldParsingMode.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,8 +1,8 @@\n-  SHA-256 checksum a3e17a8724d646f078d990428b36e8195247b64bacd1248dfe42b8da068d50ea\n+  SHA-256 checksum 35b9e9f8f98f8e875d9bb2293acdfc9b150fe42eab1f289e4173cf9e1a6f1293\n   Compiled from \"ZipArchiveEntry.java\"\n public class org.apache.commons.compress.archivers.zip.ZipArchiveEntry$ExtraFieldParsingMode extends java.lang.Enum<org.apache.commons.compress.archivers.zip.ZipArchiveEntry$ExtraFieldParsingMode> implements org.apache.commons.compress.archivers.zip.ExtraFieldParsingBehavior\n   minor version: 0\n   major version: 52\n   flags: (0x4021) ACC_PUBLIC, ACC_SUPER, ACC_ENUM\n   this_class: #1                          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode\n   super_class: #3                         // java/lang/Enum\n@@ -108,66 +108,68 @@\n    #98 = Utf8               data\n    #99 = Utf8               [B\n   #100 = Utf8               off\n   #101 = Utf8               I\n   #102 = Utf8               len\n   #103 = Utf8               local\n   #104 = Utf8               Z\n-  #105 = Utf8               u\n-  #106 = Utf8               Lorg/apache/commons/compress/archivers/zip/UnrecognizedExtraField;\n-  #107 = Utf8               StackMapTable\n-  #108 = Methodref          #3.#109       // java/lang/Enum.\"<init>\":(Ljava/lang/String;I)V\n-  #109 = NameAndType        #30:#110      // \"<init>\":(Ljava/lang/String;I)V\n-  #110 = Utf8               (Ljava/lang/String;I)V\n-  #111 = Fieldref           #1.#112       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.onUnparseableData:Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;\n-  #112 = NameAndType        #13:#14       // onUnparseableData:Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;\n-  #113 = Utf8               this\n-  #114 = Utf8               createExtraField\n-  #115 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #116 = Utf8               Exceptions\n-  #117 = Class              #118          // java/lang/InstantiationException\n-  #118 = Utf8               java/lang/InstantiationException\n-  #119 = Class              #120          // java/lang/IllegalAccessException\n-  #120 = Utf8               java/lang/IllegalAccessException\n-  #121 = Methodref          #63.#122      // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.createExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #122 = NameAndType        #114:#115     // createExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #123 = Utf8               headerId\n-  #124 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #125 = Utf8               fill\n-  #126 = Utf8               onUnparseableExtraField\n-  #127 = Utf8               ([BIIZI)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #128 = Methodref          #24.#129      // org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField.onUnparseableExtraField:([BIIZI)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #129 = NameAndType        #126:#127     // onUnparseableExtraField:([BIIZI)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #130 = Utf8               claimedLength\n-  #131 = Utf8               values\n-  #132 = Utf8               ()[Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n-  #133 = Methodref          #134.#136     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #134 = Class              #135          // java/lang/System\n-  #135 = Utf8               java/lang/System\n-  #136 = NameAndType        #137:#138     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #137 = Utf8               arraycopy\n-  #138 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #139 = Utf8               valueOf\n-  #140 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n-  #141 = Methodref          #3.#142       // java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-  #142 = NameAndType        #139:#143     // valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-  #143 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-  #144 = Utf8               (Ljava/lang/String;ILorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;)V\n-  #145 = Utf8               access$3\n-  #146 = Methodref          #1.#147       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.fillAndMakeUnrecognizedOnError:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;[BIIZ)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #147 = NameAndType        #60:#61       // fillAndMakeUnrecognizedOnError:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;[BIIZ)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #148 = Utf8               SourceFile\n-  #149 = Utf8               ZipArchiveEntry.java\n-  #150 = Utf8               Signature\n-  #151 = Utf8               Ljava/lang/Enum<Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;>;Lorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;\n-  #152 = Utf8               InnerClasses\n-  #153 = Utf8               UnparseableExtraField\n-  #154 = Class              #155          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #155 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #156 = Utf8               ExtraFieldParsingMode\n+  #105 = Utf8               ex\n+  #106 = Utf8               Ljava/util/zip/ZipException;\n+  #107 = Utf8               u\n+  #108 = Utf8               Lorg/apache/commons/compress/archivers/zip/UnrecognizedExtraField;\n+  #109 = Utf8               StackMapTable\n+  #110 = Methodref          #3.#111       // java/lang/Enum.\"<init>\":(Ljava/lang/String;I)V\n+  #111 = NameAndType        #30:#112      // \"<init>\":(Ljava/lang/String;I)V\n+  #112 = Utf8               (Ljava/lang/String;I)V\n+  #113 = Fieldref           #1.#114       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.onUnparseableData:Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;\n+  #114 = NameAndType        #13:#14       // onUnparseableData:Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;\n+  #115 = Utf8               this\n+  #116 = Utf8               createExtraField\n+  #117 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #118 = Utf8               Exceptions\n+  #119 = Class              #120          // java/lang/InstantiationException\n+  #120 = Utf8               java/lang/InstantiationException\n+  #121 = Class              #122          // java/lang/IllegalAccessException\n+  #122 = Utf8               java/lang/IllegalAccessException\n+  #123 = Methodref          #63.#124      // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.createExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #124 = NameAndType        #116:#117     // createExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #125 = Utf8               headerId\n+  #126 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #127 = Utf8               fill\n+  #128 = Utf8               onUnparseableExtraField\n+  #129 = Utf8               ([BIIZI)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #130 = Methodref          #24.#131      // org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField.onUnparseableExtraField:([BIIZI)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #131 = NameAndType        #128:#129     // onUnparseableExtraField:([BIIZI)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #132 = Utf8               claimedLength\n+  #133 = Utf8               values\n+  #134 = Utf8               ()[Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n+  #135 = Methodref          #136.#138     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #136 = Class              #137          // java/lang/System\n+  #137 = Utf8               java/lang/System\n+  #138 = NameAndType        #139:#140     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #139 = Utf8               arraycopy\n+  #140 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #141 = Utf8               valueOf\n+  #142 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n+  #143 = Methodref          #3.#144       // java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+  #144 = NameAndType        #141:#145     // valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+  #145 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+  #146 = Utf8               (Ljava/lang/String;ILorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;)V\n+  #147 = Utf8               access$3\n+  #148 = Methodref          #1.#149       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.fillAndMakeUnrecognizedOnError:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;[BIIZ)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #149 = NameAndType        #60:#61       // fillAndMakeUnrecognizedOnError:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;[BIIZ)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #150 = Utf8               SourceFile\n+  #151 = Utf8               ZipArchiveEntry.java\n+  #152 = Utf8               Signature\n+  #153 = Utf8               Ljava/lang/Enum<Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;>;Lorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;\n+  #154 = Utf8               InnerClasses\n+  #155 = Utf8               UnparseableExtraField\n+  #156 = Class              #157          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #157 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #158 = Utf8               ExtraFieldParsingMode\n {\n   public static final org.apache.commons.compress.archivers.zip.ZipArchiveEntry$ExtraFieldParsingMode BEST_EFFORT;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n     flags: (0x4019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_ENUM\n \n   public static final org.apache.commons.compress.archivers.zip.ZipArchiveEntry$ExtraFieldParsingMode STRICT_FOR_KNOW_EXTRA_FIELDS;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n@@ -272,93 +274,94 @@\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n \n   private static org.apache.commons.compress.archivers.zip.ZipExtraField fillAndMakeUnrecognizedOnError(org.apache.commons.compress.archivers.zip.ZipExtraField, byte[], int, int, boolean);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipExtraField;[BIIZ)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n-      stack=5, locals=6, args_size=5\n+      stack=5, locals=7, args_size=5\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n          4: iload         4\n          6: invokestatic  #62                 // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.fillExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;[BIIZ)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          9: areturn\n-        10: pop\n-        11: new           #67                 // class org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n-        14: dup\n-        15: invokespecial #69                 // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.\"<init>\":()V\n-        18: astore        5\n-        20: aload         5\n-        22: aload_0\n-        23: invokeinterface #71,  1           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-        28: invokevirtual #77                 // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setHeaderId:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-        31: iload         4\n-        33: ifeq          52\n-        36: aload         5\n-        38: aload_1\n-        39: iload_2\n+        10: astore        5\n+        12: new           #67                 // class org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n+        15: dup\n+        16: invokespecial #69                 // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.\"<init>\":()V\n+        19: astore        6\n+        21: aload         6\n+        23: aload_0\n+        24: invokeinterface #71,  1           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+        29: invokevirtual #77                 // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setHeaderId:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+        32: iload         4\n+        34: ifeq          53\n+        37: aload         6\n+        39: aload_1\n         40: iload_2\n-        41: iload_3\n-        42: iadd\n-        43: invokestatic  #81                 // Method java/util/Arrays.copyOfRange:([BII)[B\n-        46: invokevirtual #87                 // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setLocalFileDataData:([B)V\n-        49: goto          65\n-        52: aload         5\n-        54: aload_1\n-        55: iload_2\n+        41: iload_2\n+        42: iload_3\n+        43: iadd\n+        44: invokestatic  #81                 // Method java/util/Arrays.copyOfRange:([BII)[B\n+        47: invokevirtual #87                 // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setLocalFileDataData:([B)V\n+        50: goto          66\n+        53: aload         6\n+        55: aload_1\n         56: iload_2\n-        57: iload_3\n-        58: iadd\n-        59: invokestatic  #81                 // Method java/util/Arrays.copyOfRange:([BII)[B\n-        62: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setCentralDirectoryData:([B)V\n-        65: aload         5\n-        67: areturn\n+        57: iload_2\n+        58: iload_3\n+        59: iadd\n+        60: invokestatic  #81                 // Method java/util/Arrays.copyOfRange:([BII)[B\n+        63: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setCentralDirectoryData:([B)V\n+        66: aload         6\n+        68: areturn\n       Exception table:\n          from    to  target type\n              0     9    10   Class java/util/zip/ZipException\n       LineNumberTable:\n         line 169: 0\n         line 170: 10\n-        line 171: 11\n-        line 172: 20\n-        line 173: 31\n-        line 174: 36\n-        line 175: 49\n-        line 176: 52\n-        line 178: 65\n+        line 171: 12\n+        line 172: 21\n+        line 173: 32\n+        line 174: 37\n+        line 175: 50\n+        line 176: 53\n+        line 178: 66\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      68     0 field   Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-            0      68     1  data   [B\n-            0      68     2   off   I\n-            0      68     3   len   I\n-            0      68     4 local   Z\n-           20      48     5     u   Lorg/apache/commons/compress/archivers/zip/UnrecognizedExtraField;\n+            0      69     0 field   Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+            0      69     1  data   [B\n+            0      69     2   off   I\n+            0      69     3   len   I\n+            0      69     4 local   Z\n+           12      57     5    ex   Ljava/util/zip/ZipException;\n+           21      48     6     u   Lorg/apache/commons/compress/archivers/zip/UnrecognizedExtraField;\n       StackMapTable: number_of_entries = 3\n         frame_type = 74 /* same_locals_1_stack_item */\n           stack = [ class java/util/zip/ZipException ]\n-        frame_type = 252 /* append */\n-          offset_delta = 41\n-          locals = [ class org/apache/commons/compress/archivers/zip/UnrecognizedExtraField ]\n+        frame_type = 253 /* append */\n+          offset_delta = 42\n+          locals = [ class java/util/zip/ZipException, class org/apache/commons/compress/archivers/zip/UnrecognizedExtraField ]\n         frame_type = 12 /* same */\n \n   private org.apache.commons.compress.archivers.zip.ZipArchiveEntry$ExtraFieldParsingMode(java.lang.String, int, org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField);\n     descriptor: (Ljava/lang/String;ILorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n-         3: invokespecial #108                // Method java/lang/Enum.\"<init>\":(Ljava/lang/String;I)V\n+         3: invokespecial #110                // Method java/lang/Enum.\"<init>\":(Ljava/lang/String;I)V\n          6: aload_0\n          7: aload_3\n-         8: putfield      #111                // Field onUnparseableData:Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;\n+         8: putfield      #113                // Field onUnparseableData:Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;\n         11: return\n       LineNumberTable:\n         line 184: 0\n         line 185: 6\n         line 186: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -369,15 +372,15 @@\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0001) ACC_PUBLIC\n     Exceptions:\n       throws java.util.zip.ZipException, java.lang.InstantiationException, java.lang.IllegalAccessException\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #121                // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.createExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         1: invokestatic  #123                // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.createExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          4: areturn\n       LineNumberTable:\n         line 191: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n             0       5     1 headerId   Lorg/apache/commons/compress/archivers/zip/ZipShort;\n@@ -411,21 +414,21 @@\n     descriptor: ([BIIZI)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0001) ACC_PUBLIC\n     Exceptions:\n       throws java.util.zip.ZipException\n     Code:\n       stack=6, locals=6, args_size=6\n          0: aload_0\n-         1: getfield      #111                // Field onUnparseableData:Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;\n+         1: getfield      #113                // Field onUnparseableData:Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n          7: iload         4\n          9: iload         5\n-        11: invokevirtual #128                // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField.onUnparseableExtraField:([BIIZI)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        11: invokevirtual #130                // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField.onUnparseableExtraField:([BIIZI)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         14: areturn\n       LineNumberTable:\n         line 203: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n             0      15     1  data   [B\n@@ -448,30 +451,30 @@\n          8: dup\n          9: istore_1\n         10: anewarray     #1                  // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode\n         13: dup\n         14: astore_2\n         15: iconst_0\n         16: iload_1\n-        17: invokestatic  #133                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        17: invokestatic  #135                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         20: aload_2\n         21: areturn\n       LineNumberTable:\n         line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n \n   public static org.apache.commons.compress.archivers.zip.ZipArchiveEntry$ExtraFieldParsingMode valueOf(java.lang.String);\n     descriptor: (Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: ldc           #1                  // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode\n          2: aload_0\n-         3: invokestatic  #141                // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+         3: invokestatic  #143                // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n          6: checkcast     #1                  // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode\n          9: areturn\n       LineNumberTable:\n         line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n \n@@ -497,21 +500,21 @@\n     Code:\n       stack=5, locals=5, args_size=5\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n          4: iload         4\n-         6: invokestatic  #146                // Method fillAndMakeUnrecognizedOnError:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;[BIIZ)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         6: invokestatic  #148                // Method fillAndMakeUnrecognizedOnError:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;[BIIZ)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          9: areturn\n       LineNumberTable:\n         line 166: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n }\n SourceFile: \"ZipArchiveEntry.java\"\n-Signature: #151                         // Ljava/lang/Enum<Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;>;Lorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;\n+Signature: #153                         // Ljava/lang/Enum<Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;>;Lorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;\n InnerClasses:\n-  public static final #153= #24 of #63;   // UnparseableExtraField=class org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField of class org/apache/commons/compress/archivers/zip/ExtraFieldUtils\n-  public static #156= #1 of #154;         // ExtraFieldParsingMode=class org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode of class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  public static final #155= #24 of #63;   // UnparseableExtraField=class org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField of class org/apache/commons/compress/archivers/zip/ExtraFieldUtils\n+  public static #158= #1 of #156;         // ExtraFieldParsingMode=class org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode of class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n   #20;                                    // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode$1\n   #38;                                    // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode$2\n"}]}
