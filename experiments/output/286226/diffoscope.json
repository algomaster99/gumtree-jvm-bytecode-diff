{"diffoscope-json-version": 1, "source1": "first/BitInputStream.class", "source2": "second/BitInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,39 +1,39 @@\n-  SHA-256 checksum 7a8273caf9af2b3f9d9c0a9e202946744235e4122293acab38b83432dbd4adec\n+  SHA-256 checksum 6aa8386f82eddd7b7cc68a8e8e94d51a139f9a6cee882b059db53c8272496a7c\n   Compiled from \"BitInputStream.java\"\n public class org.apache.commons.compress.utils.BitInputStream implements java.io.Closeable\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #7                          // org/apache/commons/compress/utils/BitInputStream\n   super_class: #23                        // java/lang/Object\n   interfaces: 1, fields: 6, methods: 11, attributes: 1\n Constant pool:\n-   #1 = Methodref          #23.#62        // java/lang/Object.\"<init>\":()V\n-   #2 = Fieldref           #7.#63         // org/apache/commons/compress/utils/BitInputStream.bitsCached:J\n-   #3 = Fieldref           #7.#64         // org/apache/commons/compress/utils/BitInputStream.bitsCachedSize:I\n-   #4 = Fieldref           #7.#65         // org/apache/commons/compress/utils/BitInputStream.in:Ljava/io/InputStream;\n-   #5 = Fieldref           #7.#66         // org/apache/commons/compress/utils/BitInputStream.byteOrder:Ljava/nio/ByteOrder;\n-   #6 = Methodref          #67.#68        // java/io/InputStream.close:()V\n-   #7 = Class              #69            // org/apache/commons/compress/utils/BitInputStream\n-   #8 = Class              #70            // java/lang/IllegalArgumentException\n-   #9 = String             #71            // count must not be negative or greater than 63\n-  #10 = Methodref          #8.#72         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #11 = Methodref          #7.#73         // org/apache/commons/compress/utils/BitInputStream.ensureCache:(I)Z\n+   #1 = Methodref          #23.#61        // java/lang/Object.\"<init>\":()V\n+   #2 = Fieldref           #7.#62         // org/apache/commons/compress/utils/BitInputStream.bitsCached:J\n+   #3 = Fieldref           #7.#63         // org/apache/commons/compress/utils/BitInputStream.bitsCachedSize:I\n+   #4 = Fieldref           #7.#64         // org/apache/commons/compress/utils/BitInputStream.in:Ljava/io/InputStream;\n+   #5 = Fieldref           #7.#65         // org/apache/commons/compress/utils/BitInputStream.byteOrder:Ljava/nio/ByteOrder;\n+   #6 = Methodref          #66.#67        // java/io/InputStream.close:()V\n+   #7 = Class              #68            // org/apache/commons/compress/utils/BitInputStream\n+   #8 = Class              #69            // java/lang/IllegalArgumentException\n+   #9 = String             #70            // count must not be negative or greater than 63\n+  #10 = Methodref          #8.#71         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #11 = Methodref          #7.#72         // org/apache/commons/compress/utils/BitInputStream.ensureCache:(I)Z\n   #12 = Long               -1l\n-  #14 = Methodref          #7.#74         // org/apache/commons/compress/utils/BitInputStream.processBitsGreater57:(I)J\n-  #15 = Methodref          #7.#75         // org/apache/commons/compress/utils/BitInputStream.readCachedBits:(I)J\n-  #16 = Class              #76            // java/lang/Byte\n+  #14 = Methodref          #7.#73         // org/apache/commons/compress/utils/BitInputStream.processBitsGreater57:(I)J\n+  #15 = Methodref          #7.#74         // org/apache/commons/compress/utils/BitInputStream.readCachedBits:(I)J\n+  #16 = Class              #75            // java/lang/Byte\n   #17 = Long               8l\n-  #19 = Methodref          #67.#77        // java/io/InputStream.available:()I\n-  #20 = Methodref          #67.#78        // java/io/InputStream.read:()I\n-  #21 = Fieldref           #79.#80        // java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n-  #22 = Fieldref           #7.#81         // org/apache/commons/compress/utils/BitInputStream.MASKS:[J\n-  #23 = Class              #82            // java/lang/Object\n-  #24 = Class              #83            // java/io/Closeable\n+  #19 = Methodref          #66.#76        // java/io/InputStream.available:()I\n+  #20 = Methodref          #66.#77        // java/io/InputStream.read:()I\n+  #21 = Fieldref           #78.#79        // java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n+  #22 = Fieldref           #7.#80         // org/apache/commons/compress/utils/BitInputStream.MASKS:[J\n+  #23 = Class              #81            // java/lang/Object\n+  #24 = Class              #82            // java/io/Closeable\n   #25 = Utf8               MAXIMUM_CACHE_SIZE\n   #26 = Utf8               I\n   #27 = Utf8               ConstantValue\n   #28 = Integer            63\n   #29 = Utf8               MASKS\n   #30 = Utf8               [J\n   #31 = Utf8               in\n@@ -46,60 +46,59 @@\n   #38 = Utf8               <init>\n   #39 = Utf8               (Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n   #40 = Utf8               Code\n   #41 = Utf8               LineNumberTable\n   #42 = Utf8               close\n   #43 = Utf8               ()V\n   #44 = Utf8               Exceptions\n-  #45 = Class              #84            // java/io/IOException\n+  #45 = Class              #83            // java/io/IOException\n   #46 = Utf8               clearBitCache\n   #47 = Utf8               readBits\n   #48 = Utf8               (I)J\n   #49 = Utf8               StackMapTable\n   #50 = Utf8               ()I\n   #51 = Utf8               bitsAvailable\n   #52 = Utf8               ()J\n   #53 = Utf8               alignWithByteBoundary\n   #54 = Utf8               processBitsGreater57\n-  #55 = Class              #69            // org/apache/commons/compress/utils/BitInputStream\n-  #56 = Utf8               readCachedBits\n-  #57 = Utf8               ensureCache\n-  #58 = Utf8               (I)Z\n-  #59 = Utf8               <clinit>\n-  #60 = Utf8               SourceFile\n-  #61 = Utf8               BitInputStream.java\n-  #62 = NameAndType        #38:#43        // \"<init>\":()V\n-  #63 = NameAndType        #35:#36        // bitsCached:J\n-  #64 = NameAndType        #37:#26        // bitsCachedSize:I\n-  #65 = NameAndType        #31:#32        // in:Ljava/io/InputStream;\n-  #66 = NameAndType        #33:#34        // byteOrder:Ljava/nio/ByteOrder;\n-  #67 = Class              #85            // java/io/InputStream\n-  #68 = NameAndType        #42:#43        // close:()V\n-  #69 = Utf8               org/apache/commons/compress/utils/BitInputStream\n-  #70 = Utf8               java/lang/IllegalArgumentException\n-  #71 = Utf8               count must not be negative or greater than 63\n-  #72 = NameAndType        #38:#86        // \"<init>\":(Ljava/lang/String;)V\n-  #73 = NameAndType        #57:#58        // ensureCache:(I)Z\n-  #74 = NameAndType        #54:#48        // processBitsGreater57:(I)J\n-  #75 = NameAndType        #56:#48        // readCachedBits:(I)J\n-  #76 = Utf8               java/lang/Byte\n-  #77 = NameAndType        #87:#50        // available:()I\n-  #78 = NameAndType        #88:#50        // read:()I\n-  #79 = Class              #89            // java/nio/ByteOrder\n-  #80 = NameAndType        #90:#34        // LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n-  #81 = NameAndType        #29:#30        // MASKS:[J\n-  #82 = Utf8               java/lang/Object\n-  #83 = Utf8               java/io/Closeable\n-  #84 = Utf8               java/io/IOException\n-  #85 = Utf8               java/io/InputStream\n-  #86 = Utf8               (Ljava/lang/String;)V\n-  #87 = Utf8               available\n-  #88 = Utf8               read\n-  #89 = Utf8               java/nio/ByteOrder\n-  #90 = Utf8               LITTLE_ENDIAN\n+  #55 = Utf8               readCachedBits\n+  #56 = Utf8               ensureCache\n+  #57 = Utf8               (I)Z\n+  #58 = Utf8               <clinit>\n+  #59 = Utf8               SourceFile\n+  #60 = Utf8               BitInputStream.java\n+  #61 = NameAndType        #38:#43        // \"<init>\":()V\n+  #62 = NameAndType        #35:#36        // bitsCached:J\n+  #63 = NameAndType        #37:#26        // bitsCachedSize:I\n+  #64 = NameAndType        #31:#32        // in:Ljava/io/InputStream;\n+  #65 = NameAndType        #33:#34        // byteOrder:Ljava/nio/ByteOrder;\n+  #66 = Class              #84            // java/io/InputStream\n+  #67 = NameAndType        #42:#43        // close:()V\n+  #68 = Utf8               org/apache/commons/compress/utils/BitInputStream\n+  #69 = Utf8               java/lang/IllegalArgumentException\n+  #70 = Utf8               count must not be negative or greater than 63\n+  #71 = NameAndType        #38:#85        // \"<init>\":(Ljava/lang/String;)V\n+  #72 = NameAndType        #56:#57        // ensureCache:(I)Z\n+  #73 = NameAndType        #54:#48        // processBitsGreater57:(I)J\n+  #74 = NameAndType        #55:#48        // readCachedBits:(I)J\n+  #75 = Utf8               java/lang/Byte\n+  #76 = NameAndType        #86:#50        // available:()I\n+  #77 = NameAndType        #87:#50        // read:()I\n+  #78 = Class              #88            // java/nio/ByteOrder\n+  #79 = NameAndType        #89:#34        // LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n+  #80 = NameAndType        #29:#30        // MASKS:[J\n+  #81 = Utf8               java/lang/Object\n+  #82 = Utf8               java/io/Closeable\n+  #83 = Utf8               java/io/IOException\n+  #84 = Utf8               java/io/InputStream\n+  #85 = Utf8               (Ljava/lang/String;)V\n+  #86 = Utf8               available\n+  #87 = Utf8               read\n+  #88 = Utf8               java/nio/ByteOrder\n+  #89 = Utf8               LITTLE_ENDIAN\n {\n   private static final int MAXIMUM_CACHE_SIZE = 63;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 63\n \n   private static final long[] MASKS;\n"}]}
