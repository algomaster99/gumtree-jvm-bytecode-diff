{"diffoscope-json-version": 1, "source1": "first/CLI.class", "source2": "second/CLI.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,37 +1,37 @@\n \n package org.apache.commons.compress.archivers.sevenz;\n \n import java.io.File;\n \n public class CLI\n {\n-    public static void main(final String[] args) throws Exception {\n-        if (args.length == 0) {\n+    public static void main(final String[] array) throws Exception {\n+        if (array.length == 0) {\n             usage();\n             return;\n         }\n-        final CLI.Mode mode = grabMode(args);\n-        System.out.println(mode.getMessage() + \" \" + args[0]);\n-        final File f = new File(args[0]);\n-        if (!f.isFile()) {\n-            System.err.println(f + \" doesn't exist or is a directory\");\n+        final CLI.Mode grabMode = grabMode(array);\n+        System.out.println(grabMode.getMessage() + \" \" + array[0]);\n+        final File obj = new File(array[0]);\n+        if (!obj.isFile()) {\n+            System.err.println(obj + \" doesn't exist or is a directory\");\n         }\n-        try (final SevenZFile archive = new SevenZFile(f)) {\n-            SevenZArchiveEntry ae;\n-            while ((ae = archive.getNextEntry()) != null) {\n-                mode.takeAction(archive, ae);\n+        try (final SevenZFile sevenZFile = new SevenZFile(obj)) {\n+            SevenZArchiveEntry nextEntry;\n+            while ((nextEntry = sevenZFile.getNextEntry()) != null) {\n+                grabMode.takeAction(sevenZFile, nextEntry);\n             }\n         }\n     }\n     \n     private static void usage() {\n         System.out.println(\"Parameters: archive-name [list|extract]\");\n     }\n     \n-    private static CLI.Mode grabMode(final String[] args) {\n-        if (args.length < 2) {\n+    private static CLI.Mode grabMode(final String[] array) {\n+        if (array.length < 2) {\n             return CLI.Mode.LIST;\n         }\n-        return Enum.valueOf(CLI.Mode.class, args[1].toUpperCase());\n+        return Enum.valueOf(CLI.Mode.class, array[1].toUpperCase());\n     }\n }\n"}]}
