{"diffoscope-json-version": 1, "source1": "first/EndianUtils.class", "source2": "second/EndianUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,173 +1,171 @@\n-  SHA-256 checksum c8f5bc2514b28b92287c9d83bc0922fda7d244b82c48530de08b263d0bbf259d\n+  SHA-256 checksum d9aed69c6835d29da2cd53f131ecb9b96a7336db51ec41c3a41c7526a041253e\n   Compiled from \"EndianUtils.java\"\n public class org.apache.commons.io.EndianUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #18                         // org/apache/commons/io/EndianUtils\n-  super_class: #4                         // java/lang/Object\n+  this_class: #1                          // org/apache/commons/io/EndianUtils\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 31, attributes: 1\n Constant pool:\n-    #1 = Class              #2            // org/apache/commons/io/IOUtils\n-    #2 = Utf8               org/apache/commons/io/IOUtils\n-    #3 = Methodref          #4.#5         // java/lang/Object.\"<init>\":()V\n-    #4 = Class              #6            // java/lang/Object\n-    #5 = NameAndType        #7:#8         // \"<init>\":()V\n-    #6 = Utf8               java/lang/Object\n-    #7 = Utf8               <init>\n-    #8 = Utf8               ()V\n-    #9 = Long               255l\n-   #11 = Methodref          #12.#13       // java/lang/Float.floatToIntBits:(F)I\n-   #12 = Class              #14           // java/lang/Float\n-   #13 = NameAndType        #15:#16       // floatToIntBits:(F)I\n-   #14 = Utf8               java/lang/Float\n-   #15 = Utf8               floatToIntBits\n-   #16 = Utf8               (F)I\n-   #17 = Methodref          #18.#19       // org/apache/commons/io/EndianUtils.swapInteger:(I)I\n-   #18 = Class              #20           // org/apache/commons/io/EndianUtils\n-   #19 = NameAndType        #21:#22       // swapInteger:(I)I\n-   #20 = Utf8               org/apache/commons/io/EndianUtils\n-   #21 = Utf8               swapInteger\n-   #22 = Utf8               (I)I\n-   #23 = Methodref          #12.#24       // java/lang/Float.intBitsToFloat:(I)F\n-   #24 = NameAndType        #25:#26       // intBitsToFloat:(I)F\n-   #25 = Utf8               intBitsToFloat\n-   #26 = Utf8               (I)F\n-   #27 = Methodref          #28.#29       // java/lang/Double.doubleToLongBits:(D)J\n-   #28 = Class              #30           // java/lang/Double\n-   #29 = NameAndType        #31:#32       // doubleToLongBits:(D)J\n-   #30 = Utf8               java/lang/Double\n-   #31 = Utf8               doubleToLongBits\n-   #32 = Utf8               (D)J\n-   #33 = Methodref          #18.#34       // org/apache/commons/io/EndianUtils.swapLong:(J)J\n-   #34 = NameAndType        #35:#36       // swapLong:(J)J\n-   #35 = Utf8               swapLong\n-   #36 = Utf8               (J)J\n-   #37 = Methodref          #28.#38       // java/lang/Double.longBitsToDouble:(J)D\n-   #38 = NameAndType        #39:#40       // longBitsToDouble:(J)D\n-   #39 = Utf8               longBitsToDouble\n-   #40 = Utf8               (J)D\n-   #41 = Long               4294967295l\n-   #43 = Methodref          #18.#44       // org/apache/commons/io/EndianUtils.readSwappedInteger:([BI)I\n-   #44 = NameAndType        #45:#46       // readSwappedInteger:([BI)I\n-   #45 = Utf8               readSwappedInteger\n-   #46 = Utf8               ([BI)I\n-   #47 = Methodref          #18.#48       // org/apache/commons/io/EndianUtils.writeSwappedInteger:([BII)V\n-   #48 = NameAndType        #49:#50       // writeSwappedInteger:([BII)V\n-   #49 = Utf8               writeSwappedInteger\n-   #50 = Utf8               ([BII)V\n-   #51 = Methodref          #18.#52       // org/apache/commons/io/EndianUtils.writeSwappedLong:([BIJ)V\n-   #52 = NameAndType        #53:#54       // writeSwappedLong:([BIJ)V\n-   #53 = Utf8               writeSwappedLong\n-   #54 = Utf8               ([BIJ)V\n-   #55 = Methodref          #18.#56       // org/apache/commons/io/EndianUtils.readSwappedLong:([BI)J\n-   #56 = NameAndType        #57:#58       // readSwappedLong:([BI)J\n-   #57 = Utf8               readSwappedLong\n-   #58 = Utf8               ([BI)J\n-   #59 = Methodref          #60.#61       // java/io/OutputStream.write:(I)V\n-   #60 = Class              #62           // java/io/OutputStream\n-   #61 = NameAndType        #63:#64       // write:(I)V\n-   #62 = Utf8               java/io/OutputStream\n-   #63 = Utf8               write\n-   #64 = Utf8               (I)V\n-   #65 = Methodref          #18.#66       // org/apache/commons/io/EndianUtils.read:(Ljava/io/InputStream;)I\n-   #66 = NameAndType        #67:#68       // read:(Ljava/io/InputStream;)I\n-   #67 = Utf8               read\n-   #68 = Utf8               (Ljava/io/InputStream;)I\n-   #69 = Methodref          #18.#70       // org/apache/commons/io/EndianUtils.writeSwappedInteger:(Ljava/io/OutputStream;I)V\n-   #70 = NameAndType        #49:#71       // writeSwappedInteger:(Ljava/io/OutputStream;I)V\n-   #71 = Utf8               (Ljava/io/OutputStream;I)V\n-   #72 = Methodref          #18.#73       // org/apache/commons/io/EndianUtils.readSwappedInteger:(Ljava/io/InputStream;)I\n-   #73 = NameAndType        #45:#68       // readSwappedInteger:(Ljava/io/InputStream;)I\n-   #74 = Methodref          #18.#75       // org/apache/commons/io/EndianUtils.writeSwappedLong:(Ljava/io/OutputStream;J)V\n-   #75 = NameAndType        #53:#76       // writeSwappedLong:(Ljava/io/OutputStream;J)V\n-   #76 = Utf8               (Ljava/io/OutputStream;J)V\n-   #77 = Methodref          #18.#78       // org/apache/commons/io/EndianUtils.readSwappedLong:(Ljava/io/InputStream;)J\n-   #78 = NameAndType        #57:#79       // readSwappedLong:(Ljava/io/InputStream;)J\n-   #79 = Utf8               (Ljava/io/InputStream;)J\n-   #80 = Methodref          #81.#82       // java/io/InputStream.read:()I\n-   #81 = Class              #83           // java/io/InputStream\n-   #82 = NameAndType        #67:#84       // read:()I\n-   #83 = Utf8               java/io/InputStream\n-   #84 = Utf8               ()I\n-   #85 = Class              #86           // java/io/EOFException\n-   #86 = Utf8               java/io/EOFException\n-   #87 = String             #88           // Unexpected EOF reached\n-   #88 = Utf8               Unexpected EOF reached\n-   #89 = Methodref          #85.#90       // java/io/EOFException.\"<init>\":(Ljava/lang/String;)V\n-   #90 = NameAndType        #7:#91        // \"<init>\":(Ljava/lang/String;)V\n-   #91 = Utf8               (Ljava/lang/String;)V\n-   #92 = Utf8               Code\n-   #93 = Utf8               LineNumberTable\n-   #94 = Utf8               LocalVariableTable\n-   #95 = Utf8               this\n-   #96 = Utf8               Lorg/apache/commons/io/EndianUtils;\n-   #97 = Utf8               swapShort\n-   #98 = Utf8               (S)S\n-   #99 = Utf8               value\n-  #100 = Utf8               S\n-  #101 = Utf8               I\n-  #102 = Utf8               J\n-  #103 = Utf8               swapFloat\n-  #104 = Utf8               (F)F\n-  #105 = Utf8               F\n-  #106 = Utf8               swapDouble\n-  #107 = Utf8               (D)D\n-  #108 = Utf8               D\n-  #109 = Utf8               writeSwappedShort\n-  #110 = Utf8               ([BIS)V\n-  #111 = Utf8               data\n-  #112 = Utf8               [B\n-  #113 = Utf8               offset\n-  #114 = Utf8               readSwappedShort\n-  #115 = Utf8               ([BI)S\n-  #116 = Utf8               readSwappedUnsignedShort\n-  #117 = Utf8               readSwappedUnsignedInteger\n-  #118 = Utf8               low\n-  #119 = Utf8               high\n-  #120 = Utf8               writeSwappedFloat\n-  #121 = Utf8               ([BIF)V\n-  #122 = Utf8               readSwappedFloat\n-  #123 = Utf8               ([BI)F\n-  #124 = Utf8               writeSwappedDouble\n-  #125 = Utf8               ([BID)V\n-  #126 = Utf8               readSwappedDouble\n-  #127 = Utf8               ([BI)D\n-  #128 = Utf8               (Ljava/io/OutputStream;S)V\n-  #129 = Utf8               output\n-  #130 = Utf8               Ljava/io/OutputStream;\n-  #131 = Utf8               Exceptions\n-  #132 = Class              #133          // java/io/IOException\n-  #133 = Utf8               java/io/IOException\n-  #134 = Utf8               (Ljava/io/InputStream;)S\n-  #135 = Utf8               input\n-  #136 = Utf8               Ljava/io/InputStream;\n-  #137 = Utf8               value1\n-  #138 = Utf8               value2\n-  #139 = Utf8               value3\n-  #140 = Utf8               value4\n-  #141 = Utf8               i\n-  #142 = Utf8               bytes\n-  #143 = Utf8               StackMapTable\n-  #144 = Class              #112          // \"[B\"\n-  #145 = Utf8               (Ljava/io/OutputStream;F)V\n-  #146 = Utf8               (Ljava/io/InputStream;)F\n-  #147 = Utf8               (Ljava/io/OutputStream;D)V\n-  #148 = Utf8               (Ljava/io/InputStream;)D\n-  #149 = Utf8               SourceFile\n-  #150 = Utf8               EndianUtils.java\n+    #1 = Class              #2            // org/apache/commons/io/EndianUtils\n+    #2 = Utf8               org/apache/commons/io/EndianUtils\n+    #3 = Class              #4            // java/lang/Object\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Utf8               Code\n+    #8 = Methodref          #3.#9         // java/lang/Object.\"<init>\":()V\n+    #9 = NameAndType        #5:#6         // \"<init>\":()V\n+   #10 = Utf8               LineNumberTable\n+   #11 = Utf8               LocalVariableTable\n+   #12 = Utf8               this\n+   #13 = Utf8               Lorg/apache/commons/io/EndianUtils;\n+   #14 = Utf8               swapShort\n+   #15 = Utf8               (S)S\n+   #16 = Utf8               value\n+   #17 = Utf8               S\n+   #18 = Utf8               swapInteger\n+   #19 = Utf8               (I)I\n+   #20 = Utf8               I\n+   #21 = Utf8               swapLong\n+   #22 = Utf8               (J)J\n+   #23 = Long               255l\n+   #25 = Utf8               J\n+   #26 = Utf8               swapFloat\n+   #27 = Utf8               (F)F\n+   #28 = Methodref          #29.#31       // java/lang/Float.floatToIntBits:(F)I\n+   #29 = Class              #30           // java/lang/Float\n+   #30 = Utf8               java/lang/Float\n+   #31 = NameAndType        #32:#33       // floatToIntBits:(F)I\n+   #32 = Utf8               floatToIntBits\n+   #33 = Utf8               (F)I\n+   #34 = Methodref          #1.#35        // org/apache/commons/io/EndianUtils.swapInteger:(I)I\n+   #35 = NameAndType        #18:#19       // swapInteger:(I)I\n+   #36 = Methodref          #29.#37       // java/lang/Float.intBitsToFloat:(I)F\n+   #37 = NameAndType        #38:#39       // intBitsToFloat:(I)F\n+   #38 = Utf8               intBitsToFloat\n+   #39 = Utf8               (I)F\n+   #40 = Utf8               F\n+   #41 = Utf8               swapDouble\n+   #42 = Utf8               (D)D\n+   #43 = Methodref          #44.#46       // java/lang/Double.doubleToLongBits:(D)J\n+   #44 = Class              #45           // java/lang/Double\n+   #45 = Utf8               java/lang/Double\n+   #46 = NameAndType        #47:#48       // doubleToLongBits:(D)J\n+   #47 = Utf8               doubleToLongBits\n+   #48 = Utf8               (D)J\n+   #49 = Methodref          #1.#50        // org/apache/commons/io/EndianUtils.swapLong:(J)J\n+   #50 = NameAndType        #21:#22       // swapLong:(J)J\n+   #51 = Methodref          #44.#52       // java/lang/Double.longBitsToDouble:(J)D\n+   #52 = NameAndType        #53:#54       // longBitsToDouble:(J)D\n+   #53 = Utf8               longBitsToDouble\n+   #54 = Utf8               (J)D\n+   #55 = Utf8               D\n+   #56 = Utf8               writeSwappedShort\n+   #57 = Utf8               ([BIS)V\n+   #58 = Utf8               data\n+   #59 = Utf8               [B\n+   #60 = Utf8               offset\n+   #61 = Utf8               readSwappedShort\n+   #62 = Utf8               ([BI)S\n+   #63 = Utf8               readSwappedUnsignedShort\n+   #64 = Utf8               ([BI)I\n+   #65 = Utf8               writeSwappedInteger\n+   #66 = Utf8               ([BII)V\n+   #67 = Utf8               readSwappedInteger\n+   #68 = Utf8               readSwappedUnsignedInteger\n+   #69 = Utf8               ([BI)J\n+   #70 = Long               4294967295l\n+   #72 = Utf8               low\n+   #73 = Utf8               high\n+   #74 = Utf8               writeSwappedLong\n+   #75 = Utf8               ([BIJ)V\n+   #76 = Utf8               readSwappedLong\n+   #77 = Methodref          #1.#78        // org/apache/commons/io/EndianUtils.readSwappedInteger:([BI)I\n+   #78 = NameAndType        #67:#64       // readSwappedInteger:([BI)I\n+   #79 = Utf8               writeSwappedFloat\n+   #80 = Utf8               ([BIF)V\n+   #81 = Methodref          #1.#82        // org/apache/commons/io/EndianUtils.writeSwappedInteger:([BII)V\n+   #82 = NameAndType        #65:#66       // writeSwappedInteger:([BII)V\n+   #83 = Utf8               readSwappedFloat\n+   #84 = Utf8               ([BI)F\n+   #85 = Utf8               writeSwappedDouble\n+   #86 = Utf8               ([BID)V\n+   #87 = Methodref          #1.#88        // org/apache/commons/io/EndianUtils.writeSwappedLong:([BIJ)V\n+   #88 = NameAndType        #74:#75       // writeSwappedLong:([BIJ)V\n+   #89 = Utf8               readSwappedDouble\n+   #90 = Utf8               ([BI)D\n+   #91 = Methodref          #1.#92        // org/apache/commons/io/EndianUtils.readSwappedLong:([BI)J\n+   #92 = NameAndType        #76:#69       // readSwappedLong:([BI)J\n+   #93 = Utf8               (Ljava/io/OutputStream;S)V\n+   #94 = Utf8               Exceptions\n+   #95 = Class              #96           // java/io/IOException\n+   #96 = Utf8               java/io/IOException\n+   #97 = Methodref          #98.#100      // java/io/OutputStream.write:(I)V\n+   #98 = Class              #99           // java/io/OutputStream\n+   #99 = Utf8               java/io/OutputStream\n+  #100 = NameAndType        #101:#102     // write:(I)V\n+  #101 = Utf8               write\n+  #102 = Utf8               (I)V\n+  #103 = Utf8               output\n+  #104 = Utf8               Ljava/io/OutputStream;\n+  #105 = Utf8               (Ljava/io/InputStream;)S\n+  #106 = Methodref          #1.#107       // org/apache/commons/io/EndianUtils.read:(Ljava/io/InputStream;)I\n+  #107 = NameAndType        #108:#109     // read:(Ljava/io/InputStream;)I\n+  #108 = Utf8               read\n+  #109 = Utf8               (Ljava/io/InputStream;)I\n+  #110 = Utf8               input\n+  #111 = Utf8               Ljava/io/InputStream;\n+  #112 = Utf8               value1\n+  #113 = Utf8               value2\n+  #114 = Utf8               (Ljava/io/OutputStream;I)V\n+  #115 = Utf8               value3\n+  #116 = Utf8               value4\n+  #117 = Utf8               (Ljava/io/InputStream;)J\n+  #118 = Utf8               (Ljava/io/OutputStream;J)V\n+  #119 = Utf8               bytes\n+  #120 = Utf8               i\n+  #121 = Utf8               StackMapTable\n+  #122 = Class              #59           // \"[B\"\n+  #123 = Utf8               (Ljava/io/OutputStream;F)V\n+  #124 = Methodref          #1.#125       // org/apache/commons/io/EndianUtils.writeSwappedInteger:(Ljava/io/OutputStream;I)V\n+  #125 = NameAndType        #65:#114      // writeSwappedInteger:(Ljava/io/OutputStream;I)V\n+  #126 = Utf8               (Ljava/io/InputStream;)F\n+  #127 = Methodref          #1.#128       // org/apache/commons/io/EndianUtils.readSwappedInteger:(Ljava/io/InputStream;)I\n+  #128 = NameAndType        #67:#109      // readSwappedInteger:(Ljava/io/InputStream;)I\n+  #129 = Utf8               (Ljava/io/OutputStream;D)V\n+  #130 = Methodref          #1.#131       // org/apache/commons/io/EndianUtils.writeSwappedLong:(Ljava/io/OutputStream;J)V\n+  #131 = NameAndType        #74:#118      // writeSwappedLong:(Ljava/io/OutputStream;J)V\n+  #132 = Utf8               (Ljava/io/InputStream;)D\n+  #133 = Methodref          #1.#134       // org/apache/commons/io/EndianUtils.readSwappedLong:(Ljava/io/InputStream;)J\n+  #134 = NameAndType        #76:#117      // readSwappedLong:(Ljava/io/InputStream;)J\n+  #135 = Methodref          #136.#138     // java/io/InputStream.read:()I\n+  #136 = Class              #137          // java/io/InputStream\n+  #137 = Utf8               java/io/InputStream\n+  #138 = NameAndType        #108:#139     // read:()I\n+  #139 = Utf8               ()I\n+  #140 = Class              #141          // java/io/EOFException\n+  #141 = Utf8               java/io/EOFException\n+  #142 = String             #143          // Unexpected EOF reached\n+  #143 = Utf8               Unexpected EOF reached\n+  #144 = Methodref          #140.#145     // java/io/EOFException.\"<init>\":(Ljava/lang/String;)V\n+  #145 = NameAndType        #5:#146       // \"<init>\":(Ljava/lang/String;)V\n+  #146 = Utf8               (Ljava/lang/String;)V\n+  #147 = Utf8               SourceFile\n+  #148 = Utf8               EndianUtils.java\n {\n   public org.apache.commons.io.EndianUtils();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #3                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #8                  // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 45: 0\n         line 46: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/EndianUtils;\n@@ -192,14 +190,16 @@\n         18: iconst_0\n         19: ishl\n         20: iadd\n         21: i2s\n         22: ireturn\n       LineNumberTable:\n         line 56: 0\n+        line 57: 10\n+        line 56: 20\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      23     0 value   S\n \n   public static int swapInteger(int);\n     descriptor: (I)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n@@ -234,119 +234,141 @@\n         38: sipush        255\n         41: iand\n         42: iconst_0\n         43: ishl\n         44: iadd\n         45: ireturn\n       LineNumberTable:\n-        line 66: 0\n+        line 67: 0\n+        line 68: 10\n+        line 67: 21\n+        line 69: 22\n+        line 67: 33\n+        line 70: 34\n+        line 67: 44\n+        line 66: 45\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      46     0 value   I\n \n   public static long swapLong(long);\n     descriptor: (J)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=6, locals=2, args_size=1\n          0: lload_0\n          1: iconst_0\n          2: lshr\n-         3: ldc2_w        #9                  // long 255l\n+         3: ldc2_w        #23                 // long 255l\n          6: land\n          7: bipush        56\n          9: lshl\n         10: lload_0\n         11: bipush        8\n         13: lshr\n-        14: ldc2_w        #9                  // long 255l\n+        14: ldc2_w        #23                 // long 255l\n         17: land\n         18: bipush        48\n         20: lshl\n         21: ladd\n         22: lload_0\n         23: bipush        16\n         25: lshr\n-        26: ldc2_w        #9                  // long 255l\n+        26: ldc2_w        #23                 // long 255l\n         29: land\n         30: bipush        40\n         32: lshl\n         33: ladd\n         34: lload_0\n         35: bipush        24\n         37: lshr\n-        38: ldc2_w        #9                  // long 255l\n+        38: ldc2_w        #23                 // long 255l\n         41: land\n         42: bipush        32\n         44: lshl\n         45: ladd\n         46: lload_0\n         47: bipush        32\n         49: lshr\n-        50: ldc2_w        #9                  // long 255l\n+        50: ldc2_w        #23                 // long 255l\n         53: land\n         54: bipush        24\n         56: lshl\n         57: ladd\n         58: lload_0\n         59: bipush        40\n         61: lshr\n-        62: ldc2_w        #9                  // long 255l\n+        62: ldc2_w        #23                 // long 255l\n         65: land\n         66: bipush        16\n         68: lshl\n         69: ladd\n         70: lload_0\n         71: bipush        48\n         73: lshr\n-        74: ldc2_w        #9                  // long 255l\n+        74: ldc2_w        #23                 // long 255l\n         77: land\n         78: bipush        8\n         80: lshl\n         81: ladd\n         82: lload_0\n         83: bipush        56\n         85: lshr\n-        86: ldc2_w        #9                  // long 255l\n+        86: ldc2_w        #23                 // long 255l\n         89: land\n         90: iconst_0\n         91: lshl\n         92: ladd\n         93: lreturn\n       LineNumberTable:\n-        line 79: 0\n+        line 80: 0\n+        line 81: 10\n+        line 80: 21\n+        line 82: 22\n+        line 80: 33\n+        line 83: 34\n+        line 80: 45\n+        line 84: 46\n+        line 80: 57\n+        line 85: 58\n+        line 80: 69\n+        line 86: 70\n+        line 80: 81\n+        line 87: 82\n+        line 80: 92\n+        line 79: 93\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      94     0 value   J\n \n   public static float swapFloat(float);\n     descriptor: (F)F\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: fload_0\n-         1: invokestatic  #11                 // Method java/lang/Float.floatToIntBits:(F)I\n-         4: invokestatic  #17                 // Method swapInteger:(I)I\n-         7: invokestatic  #23                 // Method java/lang/Float.intBitsToFloat:(I)F\n+         1: invokestatic  #28                 // Method java/lang/Float.floatToIntBits:(F)I\n+         4: invokestatic  #34                 // Method swapInteger:(I)I\n+         7: invokestatic  #36                 // Method java/lang/Float.intBitsToFloat:(I)F\n         10: freturn\n       LineNumberTable:\n         line 96: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 value   F\n \n   public static double swapDouble(double);\n     descriptor: (D)D\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: dload_0\n-         1: invokestatic  #27                 // Method java/lang/Double.doubleToLongBits:(D)J\n-         4: invokestatic  #33                 // Method swapLong:(J)J\n-         7: invokestatic  #37                 // Method java/lang/Double.longBitsToDouble:(J)D\n+         1: invokestatic  #43                 // Method java/lang/Double.doubleToLongBits:(D)J\n+         4: invokestatic  #49                 // Method swapLong:(J)J\n+         7: invokestatic  #51                 // Method java/lang/Double.longBitsToDouble:(J)D\n         10: dreturn\n       LineNumberTable:\n         line 105: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 value   D\n \n@@ -412,14 +434,16 @@\n         20: bipush        8\n         22: ishl\n         23: iadd\n         24: i2s\n         25: ireturn\n       LineNumberTable:\n         line 130: 0\n+        line 131: 11\n+        line 130: 23\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      26     0  data   [B\n             0      26     1 offset   I\n \n   public static int readSwappedUnsignedShort(byte[], int);\n     descriptor: ([BI)I\n@@ -444,14 +468,16 @@\n         19: iand\n         20: bipush        8\n         22: ishl\n         23: iadd\n         24: ireturn\n       LineNumberTable:\n         line 143: 0\n+        line 144: 11\n+        line 143: 23\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      25     0  data   [B\n             0      25     1 offset   I\n \n   public static void writeSwappedInteger(byte[], int, int);\n     descriptor: ([BII)V\n@@ -558,14 +584,20 @@\n         45: iand\n         46: bipush        24\n         48: ishl\n         49: iadd\n         50: ireturn\n       LineNumberTable:\n         line 169: 0\n+        line 170: 11\n+        line 169: 23\n+        line 171: 24\n+        line 169: 36\n+        line 172: 37\n+        line 169: 49\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      51     0  data   [B\n             0      51     1 offset   I\n \n   public static long readSwappedUnsignedInteger(byte[], int);\n     descriptor: ([BI)J\n@@ -611,21 +643,25 @@\n         44: sipush        255\n         47: iand\n         48: i2l\n         49: lstore        4\n         51: lload         4\n         53: bipush        24\n         55: lshl\n-        56: ldc2_w        #41                 // long 4294967295l\n+        56: ldc2_w        #70                 // long 4294967295l\n         59: lload_2\n         60: land\n         61: ladd\n         62: lreturn\n       LineNumberTable:\n         line 184: 0\n+        line 185: 11\n+        line 184: 23\n+        line 186: 24\n+        line 184: 36\n         line 188: 39\n         line 190: 51\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      63     0  data   [B\n             0      63     1 offset   I\n            39      24     2   low   J\n@@ -639,99 +675,99 @@\n          0: aload_0\n          1: iload_1\n          2: iconst_0\n          3: iadd\n          4: lload_2\n          5: iconst_0\n          6: lshr\n-         7: ldc2_w        #9                  // long 255l\n+         7: ldc2_w        #23                 // long 255l\n         10: land\n         11: l2i\n         12: i2b\n         13: bastore\n         14: aload_0\n         15: iload_1\n         16: iconst_1\n         17: iadd\n         18: lload_2\n         19: bipush        8\n         21: lshr\n-        22: ldc2_w        #9                  // long 255l\n+        22: ldc2_w        #23                 // long 255l\n         25: land\n         26: l2i\n         27: i2b\n         28: bastore\n         29: aload_0\n         30: iload_1\n         31: iconst_2\n         32: iadd\n         33: lload_2\n         34: bipush        16\n         36: lshr\n-        37: ldc2_w        #9                  // long 255l\n+        37: ldc2_w        #23                 // long 255l\n         40: land\n         41: l2i\n         42: i2b\n         43: bastore\n         44: aload_0\n         45: iload_1\n         46: iconst_3\n         47: iadd\n         48: lload_2\n         49: bipush        24\n         51: lshr\n-        52: ldc2_w        #9                  // long 255l\n+        52: ldc2_w        #23                 // long 255l\n         55: land\n         56: l2i\n         57: i2b\n         58: bastore\n         59: aload_0\n         60: iload_1\n         61: iconst_4\n         62: iadd\n         63: lload_2\n         64: bipush        32\n         66: lshr\n-        67: ldc2_w        #9                  // long 255l\n+        67: ldc2_w        #23                 // long 255l\n         70: land\n         71: l2i\n         72: i2b\n         73: bastore\n         74: aload_0\n         75: iload_1\n         76: iconst_5\n         77: iadd\n         78: lload_2\n         79: bipush        40\n         81: lshr\n-        82: ldc2_w        #9                  // long 255l\n+        82: ldc2_w        #23                 // long 255l\n         85: land\n         86: l2i\n         87: i2b\n         88: bastore\n         89: aload_0\n         90: iload_1\n         91: bipush        6\n         93: iadd\n         94: lload_2\n         95: bipush        48\n         97: lshr\n-        98: ldc2_w        #9                  // long 255l\n+        98: ldc2_w        #23                 // long 255l\n        101: land\n        102: l2i\n        103: i2b\n        104: bastore\n        105: aload_0\n        106: iload_1\n        107: bipush        7\n        109: iadd\n        110: lload_2\n        111: bipush        56\n        113: lshr\n-       114: ldc2_w        #9                  // long 255l\n+       114: ldc2_w        #23                 // long 255l\n        117: land\n        118: l2i\n        119: i2b\n        120: bastore\n        121: return\n       LineNumberTable:\n         line 201: 0\n@@ -752,28 +788,28 @@\n   public static long readSwappedLong(byte[], int);\n     descriptor: ([BI)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=6, locals=6, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #43                 // Method readSwappedInteger:([BI)I\n+         2: invokestatic  #77                 // Method readSwappedInteger:([BI)I\n          5: i2l\n          6: lstore_2\n          7: aload_0\n          8: iload_1\n          9: iconst_4\n         10: iadd\n-        11: invokestatic  #43                 // Method readSwappedInteger:([BI)I\n+        11: invokestatic  #77                 // Method readSwappedInteger:([BI)I\n         14: i2l\n         15: lstore        4\n         17: lload         4\n         19: bipush        32\n         21: lshl\n-        22: ldc2_w        #41                 // long 4294967295l\n+        22: ldc2_w        #70                 // long 4294967295l\n         25: lload_2\n         26: land\n         27: ladd\n         28: lreturn\n       LineNumberTable:\n         line 219: 0\n         line 220: 7\n@@ -789,16 +825,16 @@\n     descriptor: ([BIF)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: iload_1\n          2: fload_2\n-         3: invokestatic  #11                 // Method java/lang/Float.floatToIntBits:(F)I\n-         6: invokestatic  #47                 // Method writeSwappedInteger:([BII)V\n+         3: invokestatic  #28                 // Method java/lang/Float.floatToIntBits:(F)I\n+         6: invokestatic  #81                 // Method writeSwappedInteger:([BII)V\n          9: return\n       LineNumberTable:\n         line 232: 0\n         line 233: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  data   [B\n@@ -808,16 +844,16 @@\n   public static float readSwappedFloat(byte[], int);\n     descriptor: ([BI)F\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #43                 // Method readSwappedInteger:([BI)I\n-         5: invokestatic  #23                 // Method java/lang/Float.intBitsToFloat:(I)F\n+         2: invokestatic  #77                 // Method readSwappedInteger:([BI)I\n+         5: invokestatic  #36                 // Method java/lang/Float.intBitsToFloat:(I)F\n          8: freturn\n       LineNumberTable:\n         line 243: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  data   [B\n             0       9     1 offset   I\n@@ -826,16 +862,16 @@\n     descriptor: ([BID)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=4, args_size=3\n          0: aload_0\n          1: iload_1\n          2: dload_2\n-         3: invokestatic  #27                 // Method java/lang/Double.doubleToLongBits:(D)J\n-         6: invokestatic  #51                 // Method writeSwappedLong:([BIJ)V\n+         3: invokestatic  #43                 // Method java/lang/Double.doubleToLongBits:(D)J\n+         6: invokestatic  #87                 // Method writeSwappedLong:([BIJ)V\n          9: return\n       LineNumberTable:\n         line 254: 0\n         line 255: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  data   [B\n@@ -845,95 +881,97 @@\n   public static double readSwappedDouble(byte[], int);\n     descriptor: ([BI)D\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #55                 // Method readSwappedLong:([BI)J\n-         5: invokestatic  #37                 // Method java/lang/Double.longBitsToDouble:(J)D\n+         2: invokestatic  #91                 // Method readSwappedLong:([BI)J\n+         5: invokestatic  #51                 // Method java/lang/Double.longBitsToDouble:(J)D\n          8: dreturn\n       LineNumberTable:\n         line 265: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  data   [B\n             0       9     1 offset   I\n \n   public static void writeSwappedShort(java.io.OutputStream, short) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;S)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: iconst_0\n          3: ishr\n          4: sipush        255\n          7: iand\n          8: i2b\n-         9: invokevirtual #59                 // Method java/io/OutputStream.write:(I)V\n+         9: invokevirtual #97                 // Method java/io/OutputStream.write:(I)V\n         12: aload_0\n         13: iload_1\n         14: bipush        8\n         16: ishr\n         17: sipush        255\n         20: iand\n         21: i2b\n-        22: invokevirtual #59                 // Method java/io/OutputStream.write:(I)V\n+        22: invokevirtual #97                 // Method java/io/OutputStream.write:(I)V\n         25: return\n       LineNumberTable:\n         line 276: 0\n         line 277: 12\n         line 278: 25\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      26     0 output   Ljava/io/OutputStream;\n             0      26     1 value   S\n-    Exceptions:\n-      throws java.io.IOException\n \n   public static short readSwappedShort(java.io.InputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;)S\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #65                 // Method read:(Ljava/io/InputStream;)I\n+         1: invokestatic  #106                // Method read:(Ljava/io/InputStream;)I\n          4: sipush        255\n          7: iand\n          8: iconst_0\n          9: ishl\n         10: aload_0\n-        11: invokestatic  #65                 // Method read:(Ljava/io/InputStream;)I\n+        11: invokestatic  #106                // Method read:(Ljava/io/InputStream;)I\n         14: sipush        255\n         17: iand\n         18: bipush        8\n         20: ishl\n         21: iadd\n         22: i2s\n         23: ireturn\n       LineNumberTable:\n         line 288: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      24     0 input   Ljava/io/InputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public static int readSwappedUnsignedShort(java.io.InputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=3, args_size=1\n          0: aload_0\n-         1: invokestatic  #65                 // Method read:(Ljava/io/InputStream;)I\n+         1: invokestatic  #106                // Method read:(Ljava/io/InputStream;)I\n          4: istore_1\n          5: aload_0\n-         6: invokestatic  #65                 // Method read:(Ljava/io/InputStream;)I\n+         6: invokestatic  #106                // Method read:(Ljava/io/InputStream;)I\n          9: istore_2\n         10: iload_1\n         11: sipush        255\n         14: iand\n         15: iconst_0\n         16: ishl\n         17: iload_2\n@@ -948,84 +986,84 @@\n         line 300: 5\n         line 302: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      27     0 input   Ljava/io/InputStream;\n             5      22     1 value1   I\n            10      17     2 value2   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public static void writeSwappedInteger(java.io.OutputStream, int) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;I)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: iconst_0\n          3: ishr\n          4: sipush        255\n          7: iand\n          8: i2b\n-         9: invokevirtual #59                 // Method java/io/OutputStream.write:(I)V\n+         9: invokevirtual #97                 // Method java/io/OutputStream.write:(I)V\n         12: aload_0\n         13: iload_1\n         14: bipush        8\n         16: ishr\n         17: sipush        255\n         20: iand\n         21: i2b\n-        22: invokevirtual #59                 // Method java/io/OutputStream.write:(I)V\n+        22: invokevirtual #97                 // Method java/io/OutputStream.write:(I)V\n         25: aload_0\n         26: iload_1\n         27: bipush        16\n         29: ishr\n         30: sipush        255\n         33: iand\n         34: i2b\n-        35: invokevirtual #59                 // Method java/io/OutputStream.write:(I)V\n+        35: invokevirtual #97                 // Method java/io/OutputStream.write:(I)V\n         38: aload_0\n         39: iload_1\n         40: bipush        24\n         42: ishr\n         43: sipush        255\n         46: iand\n         47: i2b\n-        48: invokevirtual #59                 // Method java/io/OutputStream.write:(I)V\n+        48: invokevirtual #97                 // Method java/io/OutputStream.write:(I)V\n         51: return\n       LineNumberTable:\n         line 313: 0\n         line 314: 12\n         line 315: 25\n         line 316: 38\n         line 317: 51\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      52     0 output   Ljava/io/OutputStream;\n             0      52     1 value   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public static int readSwappedInteger(java.io.InputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=5, args_size=1\n          0: aload_0\n-         1: invokestatic  #65                 // Method read:(Ljava/io/InputStream;)I\n+         1: invokestatic  #106                // Method read:(Ljava/io/InputStream;)I\n          4: istore_1\n          5: aload_0\n-         6: invokestatic  #65                 // Method read:(Ljava/io/InputStream;)I\n+         6: invokestatic  #106                // Method read:(Ljava/io/InputStream;)I\n          9: istore_2\n         10: aload_0\n-        11: invokestatic  #65                 // Method read:(Ljava/io/InputStream;)I\n+        11: invokestatic  #106                // Method read:(Ljava/io/InputStream;)I\n         14: istore_3\n         15: aload_0\n-        16: invokestatic  #65                 // Method read:(Ljava/io/InputStream;)I\n+        16: invokestatic  #106                // Method read:(Ljava/io/InputStream;)I\n         19: istore        4\n         21: iload_1\n         22: sipush        255\n         25: iand\n         26: iconst_0\n         27: ishl\n         28: iload_2\n@@ -1056,33 +1094,33 @@\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      57     0 input   Ljava/io/InputStream;\n             5      52     1 value1   I\n            10      47     2 value2   I\n            15      42     3 value3   I\n            21      36     4 value4   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public static long readSwappedUnsignedInteger(java.io.InputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=6, locals=9, args_size=1\n          0: aload_0\n-         1: invokestatic  #65                 // Method read:(Ljava/io/InputStream;)I\n+         1: invokestatic  #106                // Method read:(Ljava/io/InputStream;)I\n          4: istore_1\n          5: aload_0\n-         6: invokestatic  #65                 // Method read:(Ljava/io/InputStream;)I\n+         6: invokestatic  #106                // Method read:(Ljava/io/InputStream;)I\n          9: istore_2\n         10: aload_0\n-        11: invokestatic  #65                 // Method read:(Ljava/io/InputStream;)I\n+        11: invokestatic  #106                // Method read:(Ljava/io/InputStream;)I\n         14: istore_3\n         15: aload_0\n-        16: invokestatic  #65                 // Method read:(Ljava/io/InputStream;)I\n+        16: invokestatic  #106                // Method read:(Ljava/io/InputStream;)I\n         19: istore        4\n         21: iload_1\n         22: sipush        255\n         25: iand\n         26: iconst_0\n         27: ishl\n         28: iload_2\n@@ -1103,15 +1141,15 @@\n         51: sipush        255\n         54: iand\n         55: i2l\n         56: lstore        7\n         58: lload         7\n         60: bipush        24\n         62: lshl\n-        63: ldc2_w        #41                 // long 4294967295l\n+        63: ldc2_w        #70                 // long 4294967295l\n         66: lload         5\n         68: land\n         69: ladd\n         70: lreturn\n       LineNumberTable:\n         line 343: 0\n         line 344: 5\n@@ -1125,94 +1163,94 @@\n             0      71     0 input   Ljava/io/InputStream;\n             5      66     1 value1   I\n            10      61     2 value2   I\n            15      56     3 value3   I\n            21      50     4 value4   I\n            49      22     5   low   J\n            58      13     7  high   J\n-    Exceptions:\n-      throws java.io.IOException\n \n   public static void writeSwappedLong(java.io.OutputStream, long) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;J)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n          2: iconst_0\n          3: lshr\n-         4: ldc2_w        #9                  // long 255l\n+         4: ldc2_w        #23                 // long 255l\n          7: land\n          8: l2i\n          9: i2b\n-        10: invokevirtual #59                 // Method java/io/OutputStream.write:(I)V\n+        10: invokevirtual #97                 // Method java/io/OutputStream.write:(I)V\n         13: aload_0\n         14: lload_1\n         15: bipush        8\n         17: lshr\n-        18: ldc2_w        #9                  // long 255l\n+        18: ldc2_w        #23                 // long 255l\n         21: land\n         22: l2i\n         23: i2b\n-        24: invokevirtual #59                 // Method java/io/OutputStream.write:(I)V\n+        24: invokevirtual #97                 // Method java/io/OutputStream.write:(I)V\n         27: aload_0\n         28: lload_1\n         29: bipush        16\n         31: lshr\n-        32: ldc2_w        #9                  // long 255l\n+        32: ldc2_w        #23                 // long 255l\n         35: land\n         36: l2i\n         37: i2b\n-        38: invokevirtual #59                 // Method java/io/OutputStream.write:(I)V\n+        38: invokevirtual #97                 // Method java/io/OutputStream.write:(I)V\n         41: aload_0\n         42: lload_1\n         43: bipush        24\n         45: lshr\n-        46: ldc2_w        #9                  // long 255l\n+        46: ldc2_w        #23                 // long 255l\n         49: land\n         50: l2i\n         51: i2b\n-        52: invokevirtual #59                 // Method java/io/OutputStream.write:(I)V\n+        52: invokevirtual #97                 // Method java/io/OutputStream.write:(I)V\n         55: aload_0\n         56: lload_1\n         57: bipush        32\n         59: lshr\n-        60: ldc2_w        #9                  // long 255l\n+        60: ldc2_w        #23                 // long 255l\n         63: land\n         64: l2i\n         65: i2b\n-        66: invokevirtual #59                 // Method java/io/OutputStream.write:(I)V\n+        66: invokevirtual #97                 // Method java/io/OutputStream.write:(I)V\n         69: aload_0\n         70: lload_1\n         71: bipush        40\n         73: lshr\n-        74: ldc2_w        #9                  // long 255l\n+        74: ldc2_w        #23                 // long 255l\n         77: land\n         78: l2i\n         79: i2b\n-        80: invokevirtual #59                 // Method java/io/OutputStream.write:(I)V\n+        80: invokevirtual #97                 // Method java/io/OutputStream.write:(I)V\n         83: aload_0\n         84: lload_1\n         85: bipush        48\n         87: lshr\n-        88: ldc2_w        #9                  // long 255l\n+        88: ldc2_w        #23                 // long 255l\n         91: land\n         92: l2i\n         93: i2b\n-        94: invokevirtual #59                 // Method java/io/OutputStream.write:(I)V\n+        94: invokevirtual #97                 // Method java/io/OutputStream.write:(I)V\n         97: aload_0\n         98: lload_1\n         99: bipush        56\n        101: lshr\n-       102: ldc2_w        #9                  // long 255l\n+       102: ldc2_w        #23                 // long 255l\n        105: land\n        106: l2i\n        107: i2b\n-       108: invokevirtual #59                 // Method java/io/OutputStream.write:(I)V\n+       108: invokevirtual #97                 // Method java/io/OutputStream.write:(I)V\n        111: return\n       LineNumberTable:\n         line 363: 0\n         line 364: 13\n         line 365: 27\n         line 366: 41\n         line 367: 55\n@@ -1220,151 +1258,150 @@\n         line 369: 83\n         line 370: 97\n         line 371: 111\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0     112     0 output   Ljava/io/OutputStream;\n             0     112     1 value   J\n-    Exceptions:\n-      throws java.io.IOException\n \n   public static long readSwappedLong(java.io.InputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=3, args_size=1\n          0: bipush        8\n          2: newarray       byte\n          4: astore_1\n          5: iconst_0\n          6: istore_2\n-         7: iload_2\n-         8: bipush        8\n-        10: if_icmpge     27\n-        13: aload_1\n-        14: iload_2\n-        15: aload_0\n-        16: invokestatic  #65                 // Method read:(Ljava/io/InputStream;)I\n-        19: i2b\n-        20: bastore\n-        21: iinc          2, 1\n-        24: goto          7\n+         7: goto          21\n+        10: aload_1\n+        11: iload_2\n+        12: aload_0\n+        13: invokestatic  #106                // Method read:(Ljava/io/InputStream;)I\n+        16: i2b\n+        17: bastore\n+        18: iinc          2, 1\n+        21: iload_2\n+        22: bipush        8\n+        24: if_icmplt     10\n         27: aload_1\n         28: iconst_0\n-        29: invokestatic  #55                 // Method readSwappedLong:([BI)J\n+        29: invokestatic  #91                 // Method readSwappedLong:([BI)J\n         32: lreturn\n       LineNumberTable:\n         line 381: 0\n         line 382: 5\n-        line 383: 13\n-        line 382: 21\n+        line 383: 10\n+        line 382: 18\n         line 385: 27\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            7      20     2     i   I\n             0      33     0 input   Ljava/io/InputStream;\n             5      28     1 bytes   [B\n+            7      20     2     i   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 253 /* append */\n-          offset_delta = 7\n+          offset_delta = 10\n           locals = [ class \"[B\", int ]\n-        frame_type = 250 /* chop */\n-          offset_delta = 19\n-    Exceptions:\n-      throws java.io.IOException\n+        frame_type = 10 /* same */\n \n   public static void writeSwappedFloat(java.io.OutputStream, float) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;F)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: fload_1\n-         2: invokestatic  #11                 // Method java/lang/Float.floatToIntBits:(F)I\n-         5: invokestatic  #69                 // Method writeSwappedInteger:(Ljava/io/OutputStream;I)V\n+         2: invokestatic  #28                 // Method java/lang/Float.floatToIntBits:(F)I\n+         5: invokestatic  #124                // Method writeSwappedInteger:(Ljava/io/OutputStream;I)V\n          8: return\n       LineNumberTable:\n         line 396: 0\n         line 397: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0 output   Ljava/io/OutputStream;\n             0       9     1 value   F\n-    Exceptions:\n-      throws java.io.IOException\n \n   public static float readSwappedFloat(java.io.InputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;)F\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #72                 // Method readSwappedInteger:(Ljava/io/InputStream;)I\n-         4: invokestatic  #23                 // Method java/lang/Float.intBitsToFloat:(I)F\n+         1: invokestatic  #127                // Method readSwappedInteger:(Ljava/io/InputStream;)I\n+         4: invokestatic  #36                 // Method java/lang/Float.intBitsToFloat:(I)F\n          7: freturn\n       LineNumberTable:\n         line 407: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 input   Ljava/io/InputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public static void writeSwappedDouble(java.io.OutputStream, double) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;D)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: dload_1\n-         2: invokestatic  #27                 // Method java/lang/Double.doubleToLongBits:(D)J\n-         5: invokestatic  #74                 // Method writeSwappedLong:(Ljava/io/OutputStream;J)V\n+         2: invokestatic  #43                 // Method java/lang/Double.doubleToLongBits:(D)J\n+         5: invokestatic  #130                // Method writeSwappedLong:(Ljava/io/OutputStream;J)V\n          8: return\n       LineNumberTable:\n         line 418: 0\n         line 419: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0 output   Ljava/io/OutputStream;\n             0       9     1 value   D\n-    Exceptions:\n-      throws java.io.IOException\n \n   public static double readSwappedDouble(java.io.InputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;)D\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #77                 // Method readSwappedLong:(Ljava/io/InputStream;)J\n-         4: invokestatic  #37                 // Method java/lang/Double.longBitsToDouble:(J)D\n+         1: invokestatic  #133                // Method readSwappedLong:(Ljava/io/InputStream;)J\n+         4: invokestatic  #51                 // Method java/lang/Double.longBitsToDouble:(J)D\n          7: dreturn\n       LineNumberTable:\n         line 429: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 input   Ljava/io/InputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   private static int read(java.io.InputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;)I\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #80                 // Method java/io/InputStream.read:()I\n+         1: invokevirtual #135                // Method java/io/InputStream.read:()I\n          4: istore_1\n          5: iconst_m1\n          6: iload_1\n          7: if_icmpne     20\n-        10: new           #85                 // class java/io/EOFException\n+        10: new           #140                // class java/io/EOFException\n         13: dup\n-        14: ldc           #87                 // String Unexpected EOF reached\n-        16: invokespecial #89                 // Method java/io/EOFException.\"<init>\":(Ljava/lang/String;)V\n+        14: ldc           #142                // String Unexpected EOF reached\n+        16: invokespecial #144                // Method java/io/EOFException.\"<init>\":(Ljava/lang/String;)V\n         19: athrow\n         20: iload_1\n         21: ireturn\n       LineNumberTable:\n         line 439: 0\n         line 441: 5\n         line 442: 10\n@@ -1373,11 +1410,9 @@\n         Start  Length  Slot  Name   Signature\n             0      22     0 input   Ljava/io/InputStream;\n             5      17     1 value   I\n       StackMapTable: number_of_entries = 1\n         frame_type = 252 /* append */\n           offset_delta = 20\n           locals = [ int ]\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"EndianUtils.java\"\n"}]}
