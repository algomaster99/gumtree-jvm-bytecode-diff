{"diffoscope-json-version": 1, "source1": "first/PercentCodec.class", "source2": "second/PercentCodec.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,201 +1,201 @@\n-  SHA-256 checksum 4cfbdd265b2a8910859c136c21284a4d702617cbdc1ff7a7828ab7f83ba41104\n+  SHA-256 checksum ff8a048ddae44eedf26cb982f99436e5c2fc2f1cce6f0ba9bf0969b8d79c15df\n   Compiled from \"PercentCodec.java\"\n public class org.apache.commons.codec.net.PercentCodec implements org.apache.commons.codec.BinaryEncoder,org.apache.commons.codec.BinaryDecoder\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #11                         // org/apache/commons/codec/net/PercentCodec\n-  super_class: #47                        // java/lang/Object\n+  super_class: #2                         // java/lang/Object\n   interfaces: 2, fields: 5, methods: 15, attributes: 1\n Constant pool:\n-    #1 = Methodref          #47.#114      // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #115          // java/util/BitSet\n-    #3 = Methodref          #2.#114       // java/util/BitSet.\"<init>\":()V\n-    #4 = Fieldref           #11.#116      // org/apache/commons/codec/net/PercentCodec.alwaysEncodeChars:Ljava/util/BitSet;\n-    #5 = Class              #117          // java/lang/Integer\n-    #6 = Integer            2147483647\n-    #7 = Fieldref           #11.#118      // org/apache/commons/codec/net/PercentCodec.alwaysEncodeCharsMin:I\n-    #8 = Integer            -2147483648\n-    #9 = Fieldref           #11.#119      // org/apache/commons/codec/net/PercentCodec.alwaysEncodeCharsMax:I\n-   #10 = Fieldref           #11.#120      // org/apache/commons/codec/net/PercentCodec.plusForSpace:Z\n-   #11 = Class              #121          // org/apache/commons/codec/net/PercentCodec\n-   #12 = Methodref          #11.#122      // org/apache/commons/codec/net/PercentCodec.insertAlwaysEncodeChar:(B)V\n-   #13 = Methodref          #11.#123      // org/apache/commons/codec/net/PercentCodec.insertAlwaysEncodeChars:([B)V\n-   #14 = Methodref          #2.#124       // java/util/BitSet.set:(I)V\n-   #15 = Methodref          #11.#125      // org/apache/commons/codec/net/PercentCodec.expectedEncodingBytes:([B)I\n-   #16 = Methodref          #11.#126      // org/apache/commons/codec/net/PercentCodec.containsSpace:([B)Z\n-   #17 = Methodref          #11.#127      // org/apache/commons/codec/net/PercentCodec.doEncode:([BIZ)[B\n-   #18 = Methodref          #92.#128      // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n-   #19 = Methodref          #11.#129      // org/apache/commons/codec/net/PercentCodec.canEncode:(B)Z\n-   #20 = Methodref          #130.#131     // org/apache/commons/codec/net/Utils.hexDigit:(I)C\n-   #21 = Methodref          #92.#132      // java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n-   #22 = Methodref          #92.#133      // java/nio/ByteBuffer.array:()[B\n-   #23 = Methodref          #11.#134      // org/apache/commons/codec/net/PercentCodec.isAsciiChar:(B)Z\n-   #24 = Methodref          #11.#135      // org/apache/commons/codec/net/PercentCodec.inAlwaysEncodeCharsRange:(B)Z\n-   #25 = Methodref          #2.#136       // java/util/BitSet.get:(I)Z\n-   #26 = Methodref          #11.#137      // org/apache/commons/codec/net/PercentCodec.expectedDecodingBytes:([B)I\n-   #27 = Methodref          #130.#138     // org/apache/commons/codec/net/Utils.digit16:(B)I\n-   #28 = Class              #139          // java/lang/ArrayIndexOutOfBoundsException\n-   #29 = Class              #140          // org/apache/commons/codec/DecoderException\n-   #30 = String             #141          // Invalid percent decoding:\n-   #31 = Methodref          #29.#142      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #32 = Class              #69           // \"[B\"\n-   #33 = Methodref          #11.#143      // org/apache/commons/codec/net/PercentCodec.encode:([B)[B\n-   #34 = Class              #144          // org/apache/commons/codec/EncoderException\n-   #35 = Class              #145          // java/lang/StringBuilder\n-   #36 = Methodref          #35.#114      // java/lang/StringBuilder.\"<init>\":()V\n-   #37 = String             #146          // Objects of type\n-   #38 = Methodref          #35.#147      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #39 = Methodref          #47.#148      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #40 = Methodref          #149.#150     // java/lang/Class.getName:()Ljava/lang/String;\n-   #41 = String             #151          //  cannot be Percent encoded\n-   #42 = Methodref          #35.#152      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #43 = Methodref          #34.#153      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n-   #44 = Methodref          #11.#154      // org/apache/commons/codec/net/PercentCodec.decode:([B)[B\n-   #45 = String             #155          //  cannot be Percent decoded\n-   #46 = Methodref          #29.#153      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n-   #47 = Class              #156          // java/lang/Object\n-   #48 = Class              #157          // org/apache/commons/codec/BinaryEncoder\n-   #49 = Class              #158          // org/apache/commons/codec/BinaryDecoder\n-   #50 = Utf8               ESCAPE_CHAR\n-   #51 = Utf8               B\n-   #52 = Utf8               ConstantValue\n-   #53 = Integer            37\n-   #54 = Utf8               alwaysEncodeChars\n-   #55 = Utf8               Ljava/util/BitSet;\n-   #56 = Utf8               plusForSpace\n-   #57 = Utf8               Z\n-   #58 = Utf8               alwaysEncodeCharsMin\n-   #59 = Utf8               I\n-   #60 = Utf8               alwaysEncodeCharsMax\n-   #61 = Utf8               <init>\n-   #62 = Utf8               ()V\n-   #63 = Utf8               Code\n-   #64 = Utf8               LineNumberTable\n-   #65 = Utf8               LocalVariableTable\n-   #66 = Utf8               this\n-   #67 = Utf8               Lorg/apache/commons/codec/net/PercentCodec;\n-   #68 = Utf8               ([BZ)V\n-   #69 = Utf8               [B\n-   #70 = Utf8               insertAlwaysEncodeChars\n-   #71 = Utf8               ([B)V\n-   #72 = Utf8               b\n-   #73 = Utf8               alwaysEncodeCharsArray\n-   #74 = Utf8               StackMapTable\n-   #75 = Utf8               insertAlwaysEncodeChar\n-   #76 = Utf8               (B)V\n-   #77 = Utf8               encode\n-   #78 = Utf8               ([B)[B\n-   #79 = Utf8               bytes\n-   #80 = Utf8               expectedEncodingBytes\n-   #81 = Utf8               willEncode\n-   #82 = Utf8               Exceptions\n-   #83 = Utf8               doEncode\n-   #84 = Utf8               ([BIZ)[B\n-   #85 = Utf8               bb\n-   #86 = Utf8               hex1\n-   #87 = Utf8               C\n-   #88 = Utf8               hex2\n-   #89 = Utf8               expectedLength\n-   #90 = Utf8               buffer\n-   #91 = Utf8               Ljava/nio/ByteBuffer;\n-   #92 = Class              #159          // java/nio/ByteBuffer\n-   #93 = Utf8               ([B)I\n-   #94 = Utf8               byteCount\n-   #95 = Utf8               containsSpace\n-   #96 = Utf8               ([B)Z\n-   #97 = Utf8               canEncode\n-   #98 = Utf8               (B)Z\n-   #99 = Utf8               c\n-  #100 = Utf8               inAlwaysEncodeCharsRange\n-  #101 = Utf8               isAsciiChar\n-  #102 = Utf8               decode\n-  #103 = Utf8               u\n-  #104 = Utf8               l\n-  #105 = Utf8               e\n-  #106 = Utf8               Ljava/lang/ArrayIndexOutOfBoundsException;\n-  #107 = Utf8               i\n-  #108 = Utf8               expectedDecodingBytes\n-  #109 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #110 = Utf8               obj\n-  #111 = Utf8               Ljava/lang/Object;\n-  #112 = Utf8               SourceFile\n-  #113 = Utf8               PercentCodec.java\n-  #114 = NameAndType        #61:#62       // \"<init>\":()V\n-  #115 = Utf8               java/util/BitSet\n-  #116 = NameAndType        #54:#55       // alwaysEncodeChars:Ljava/util/BitSet;\n-  #117 = Utf8               java/lang/Integer\n-  #118 = NameAndType        #58:#59       // alwaysEncodeCharsMin:I\n-  #119 = NameAndType        #60:#59       // alwaysEncodeCharsMax:I\n-  #120 = NameAndType        #56:#57       // plusForSpace:Z\n-  #121 = Utf8               org/apache/commons/codec/net/PercentCodec\n-  #122 = NameAndType        #75:#76       // insertAlwaysEncodeChar:(B)V\n-  #123 = NameAndType        #70:#71       // insertAlwaysEncodeChars:([B)V\n-  #124 = NameAndType        #160:#161     // set:(I)V\n-  #125 = NameAndType        #80:#93       // expectedEncodingBytes:([B)I\n-  #126 = NameAndType        #95:#96       // containsSpace:([B)Z\n-  #127 = NameAndType        #83:#84       // doEncode:([BIZ)[B\n-  #128 = NameAndType        #162:#163     // allocate:(I)Ljava/nio/ByteBuffer;\n-  #129 = NameAndType        #97:#98       // canEncode:(B)Z\n-  #130 = Class              #164          // org/apache/commons/codec/net/Utils\n-  #131 = NameAndType        #165:#166     // hexDigit:(I)C\n-  #132 = NameAndType        #167:#168     // put:(B)Ljava/nio/ByteBuffer;\n-  #133 = NameAndType        #169:#170     // array:()[B\n-  #134 = NameAndType        #101:#98      // isAsciiChar:(B)Z\n-  #135 = NameAndType        #100:#98      // inAlwaysEncodeCharsRange:(B)Z\n-  #136 = NameAndType        #171:#172     // get:(I)Z\n-  #137 = NameAndType        #108:#93      // expectedDecodingBytes:([B)I\n-  #138 = NameAndType        #173:#174     // digit16:(B)I\n-  #139 = Utf8               java/lang/ArrayIndexOutOfBoundsException\n-  #140 = Utf8               org/apache/commons/codec/DecoderException\n-  #141 = Utf8               Invalid percent decoding:\n-  #142 = NameAndType        #61:#175      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #143 = NameAndType        #77:#78       // encode:([B)[B\n-  #144 = Utf8               org/apache/commons/codec/EncoderException\n-  #145 = Utf8               java/lang/StringBuilder\n-  #146 = Utf8               Objects of type\n-  #147 = NameAndType        #176:#177     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #148 = NameAndType        #178:#179     // getClass:()Ljava/lang/Class;\n-  #149 = Class              #180          // java/lang/Class\n-  #150 = NameAndType        #181:#182     // getName:()Ljava/lang/String;\n-  #151 = Utf8                cannot be Percent encoded\n-  #152 = NameAndType        #183:#182     // toString:()Ljava/lang/String;\n-  #153 = NameAndType        #61:#184      // \"<init>\":(Ljava/lang/String;)V\n-  #154 = NameAndType        #102:#78      // decode:([B)[B\n-  #155 = Utf8                cannot be Percent decoded\n-  #156 = Utf8               java/lang/Object\n-  #157 = Utf8               org/apache/commons/codec/BinaryEncoder\n-  #158 = Utf8               org/apache/commons/codec/BinaryDecoder\n-  #159 = Utf8               java/nio/ByteBuffer\n-  #160 = Utf8               set\n-  #161 = Utf8               (I)V\n-  #162 = Utf8               allocate\n-  #163 = Utf8               (I)Ljava/nio/ByteBuffer;\n-  #164 = Utf8               org/apache/commons/codec/net/Utils\n-  #165 = Utf8               hexDigit\n-  #166 = Utf8               (I)C\n-  #167 = Utf8               put\n-  #168 = Utf8               (B)Ljava/nio/ByteBuffer;\n-  #169 = Utf8               array\n-  #170 = Utf8               ()[B\n-  #171 = Utf8               get\n-  #172 = Utf8               (I)Z\n-  #173 = Utf8               digit16\n-  #174 = Utf8               (B)I\n-  #175 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #176 = Utf8               append\n-  #177 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #178 = Utf8               getClass\n-  #179 = Utf8               ()Ljava/lang/Class;\n-  #180 = Utf8               java/lang/Class\n-  #181 = Utf8               getName\n-  #182 = Utf8               ()Ljava/lang/String;\n-  #183 = Utf8               toString\n-  #184 = Utf8               (Ljava/lang/String;)V\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Class              #8            // java/util/BitSet\n+    #8 = Utf8               java/util/BitSet\n+    #9 = Methodref          #7.#3         // java/util/BitSet.\"<init>\":()V\n+   #10 = Fieldref           #11.#12       // org/apache/commons/codec/net/PercentCodec.alwaysEncodeChars:Ljava/util/BitSet;\n+   #11 = Class              #13           // org/apache/commons/codec/net/PercentCodec\n+   #12 = NameAndType        #14:#15       // alwaysEncodeChars:Ljava/util/BitSet;\n+   #13 = Utf8               org/apache/commons/codec/net/PercentCodec\n+   #14 = Utf8               alwaysEncodeChars\n+   #15 = Utf8               Ljava/util/BitSet;\n+   #16 = Class              #17           // java/lang/Integer\n+   #17 = Utf8               java/lang/Integer\n+   #18 = Integer            2147483647\n+   #19 = Fieldref           #11.#20       // org/apache/commons/codec/net/PercentCodec.alwaysEncodeCharsMin:I\n+   #20 = NameAndType        #21:#22       // alwaysEncodeCharsMin:I\n+   #21 = Utf8               alwaysEncodeCharsMin\n+   #22 = Utf8               I\n+   #23 = Integer            -2147483648\n+   #24 = Fieldref           #11.#25       // org/apache/commons/codec/net/PercentCodec.alwaysEncodeCharsMax:I\n+   #25 = NameAndType        #26:#22       // alwaysEncodeCharsMax:I\n+   #26 = Utf8               alwaysEncodeCharsMax\n+   #27 = Fieldref           #11.#28       // org/apache/commons/codec/net/PercentCodec.plusForSpace:Z\n+   #28 = NameAndType        #29:#30       // plusForSpace:Z\n+   #29 = Utf8               plusForSpace\n+   #30 = Utf8               Z\n+   #31 = Methodref          #11.#32       // org/apache/commons/codec/net/PercentCodec.insertAlwaysEncodeChar:(B)V\n+   #32 = NameAndType        #33:#34       // insertAlwaysEncodeChar:(B)V\n+   #33 = Utf8               insertAlwaysEncodeChar\n+   #34 = Utf8               (B)V\n+   #35 = Methodref          #11.#36       // org/apache/commons/codec/net/PercentCodec.insertAlwaysEncodeChars:([B)V\n+   #36 = NameAndType        #37:#38       // insertAlwaysEncodeChars:([B)V\n+   #37 = Utf8               insertAlwaysEncodeChars\n+   #38 = Utf8               ([B)V\n+   #39 = Methodref          #7.#40        // java/util/BitSet.set:(I)V\n+   #40 = NameAndType        #41:#42       // set:(I)V\n+   #41 = Utf8               set\n+   #42 = Utf8               (I)V\n+   #43 = Methodref          #11.#44       // org/apache/commons/codec/net/PercentCodec.expectedEncodingBytes:([B)I\n+   #44 = NameAndType        #45:#46       // expectedEncodingBytes:([B)I\n+   #45 = Utf8               expectedEncodingBytes\n+   #46 = Utf8               ([B)I\n+   #47 = Methodref          #11.#48       // org/apache/commons/codec/net/PercentCodec.containsSpace:([B)Z\n+   #48 = NameAndType        #49:#50       // containsSpace:([B)Z\n+   #49 = Utf8               containsSpace\n+   #50 = Utf8               ([B)Z\n+   #51 = Methodref          #11.#52       // org/apache/commons/codec/net/PercentCodec.doEncode:([BIZ)[B\n+   #52 = NameAndType        #53:#54       // doEncode:([BIZ)[B\n+   #53 = Utf8               doEncode\n+   #54 = Utf8               ([BIZ)[B\n+   #55 = Methodref          #56.#57       // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n+   #56 = Class              #58           // java/nio/ByteBuffer\n+   #57 = NameAndType        #59:#60       // allocate:(I)Ljava/nio/ByteBuffer;\n+   #58 = Utf8               java/nio/ByteBuffer\n+   #59 = Utf8               allocate\n+   #60 = Utf8               (I)Ljava/nio/ByteBuffer;\n+   #61 = Methodref          #11.#62       // org/apache/commons/codec/net/PercentCodec.canEncode:(B)Z\n+   #62 = NameAndType        #63:#64       // canEncode:(B)Z\n+   #63 = Utf8               canEncode\n+   #64 = Utf8               (B)Z\n+   #65 = Methodref          #66.#67       // org/apache/commons/codec/net/Utils.hexDigit:(I)C\n+   #66 = Class              #68           // org/apache/commons/codec/net/Utils\n+   #67 = NameAndType        #69:#70       // hexDigit:(I)C\n+   #68 = Utf8               org/apache/commons/codec/net/Utils\n+   #69 = Utf8               hexDigit\n+   #70 = Utf8               (I)C\n+   #71 = Methodref          #56.#72       // java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n+   #72 = NameAndType        #73:#74       // put:(B)Ljava/nio/ByteBuffer;\n+   #73 = Utf8               put\n+   #74 = Utf8               (B)Ljava/nio/ByteBuffer;\n+   #75 = Methodref          #56.#76       // java/nio/ByteBuffer.array:()[B\n+   #76 = NameAndType        #77:#78       // array:()[B\n+   #77 = Utf8               array\n+   #78 = Utf8               ()[B\n+   #79 = Methodref          #11.#80       // org/apache/commons/codec/net/PercentCodec.isAsciiChar:(B)Z\n+   #80 = NameAndType        #81:#64       // isAsciiChar:(B)Z\n+   #81 = Utf8               isAsciiChar\n+   #82 = Methodref          #11.#83       // org/apache/commons/codec/net/PercentCodec.inAlwaysEncodeCharsRange:(B)Z\n+   #83 = NameAndType        #84:#64       // inAlwaysEncodeCharsRange:(B)Z\n+   #84 = Utf8               inAlwaysEncodeCharsRange\n+   #85 = Methodref          #7.#86        // java/util/BitSet.get:(I)Z\n+   #86 = NameAndType        #87:#88       // get:(I)Z\n+   #87 = Utf8               get\n+   #88 = Utf8               (I)Z\n+   #89 = Methodref          #11.#90       // org/apache/commons/codec/net/PercentCodec.expectedDecodingBytes:([B)I\n+   #90 = NameAndType        #91:#46       // expectedDecodingBytes:([B)I\n+   #91 = Utf8               expectedDecodingBytes\n+   #92 = Methodref          #66.#93       // org/apache/commons/codec/net/Utils.digit16:(B)I\n+   #93 = NameAndType        #94:#95       // digit16:(B)I\n+   #94 = Utf8               digit16\n+   #95 = Utf8               (B)I\n+   #96 = Class              #97           // java/lang/ArrayIndexOutOfBoundsException\n+   #97 = Utf8               java/lang/ArrayIndexOutOfBoundsException\n+   #98 = Class              #99           // org/apache/commons/codec/DecoderException\n+   #99 = Utf8               org/apache/commons/codec/DecoderException\n+  #100 = String             #101          // Invalid percent decoding:\n+  #101 = Utf8               Invalid percent decoding:\n+  #102 = Methodref          #98.#103      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #103 = NameAndType        #5:#104       // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #104 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #105 = Class              #106          // \"[B\"\n+  #106 = Utf8               [B\n+  #107 = Methodref          #11.#108      // org/apache/commons/codec/net/PercentCodec.encode:([B)[B\n+  #108 = NameAndType        #109:#110     // encode:([B)[B\n+  #109 = Utf8               encode\n+  #110 = Utf8               ([B)[B\n+  #111 = Class              #112          // org/apache/commons/codec/EncoderException\n+  #112 = Utf8               org/apache/commons/codec/EncoderException\n+  #113 = Class              #114          // java/lang/StringBuilder\n+  #114 = Utf8               java/lang/StringBuilder\n+  #115 = Methodref          #113.#3       // java/lang/StringBuilder.\"<init>\":()V\n+  #116 = String             #117          // Objects of type\n+  #117 = Utf8               Objects of type\n+  #118 = Methodref          #113.#119     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #119 = NameAndType        #120:#121     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #120 = Utf8               append\n+  #121 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #122 = Methodref          #2.#123       // java/lang/Object.getClass:()Ljava/lang/Class;\n+  #123 = NameAndType        #124:#125     // getClass:()Ljava/lang/Class;\n+  #124 = Utf8               getClass\n+  #125 = Utf8               ()Ljava/lang/Class;\n+  #126 = Methodref          #127.#128     // java/lang/Class.getName:()Ljava/lang/String;\n+  #127 = Class              #129          // java/lang/Class\n+  #128 = NameAndType        #130:#131     // getName:()Ljava/lang/String;\n+  #129 = Utf8               java/lang/Class\n+  #130 = Utf8               getName\n+  #131 = Utf8               ()Ljava/lang/String;\n+  #132 = String             #133          //  cannot be Percent encoded\n+  #133 = Utf8                cannot be Percent encoded\n+  #134 = Methodref          #113.#135     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #135 = NameAndType        #136:#131     // toString:()Ljava/lang/String;\n+  #136 = Utf8               toString\n+  #137 = Methodref          #111.#138     // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+  #138 = NameAndType        #5:#139       // \"<init>\":(Ljava/lang/String;)V\n+  #139 = Utf8               (Ljava/lang/String;)V\n+  #140 = Methodref          #11.#141      // org/apache/commons/codec/net/PercentCodec.decode:([B)[B\n+  #141 = NameAndType        #142:#110     // decode:([B)[B\n+  #142 = Utf8               decode\n+  #143 = String             #144          //  cannot be Percent decoded\n+  #144 = Utf8                cannot be Percent decoded\n+  #145 = Methodref          #98.#138      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n+  #146 = Class              #147          // org/apache/commons/codec/BinaryEncoder\n+  #147 = Utf8               org/apache/commons/codec/BinaryEncoder\n+  #148 = Class              #149          // org/apache/commons/codec/BinaryDecoder\n+  #149 = Utf8               org/apache/commons/codec/BinaryDecoder\n+  #150 = Utf8               ESCAPE_CHAR\n+  #151 = Utf8               B\n+  #152 = Utf8               ConstantValue\n+  #153 = Integer            37\n+  #154 = Utf8               Code\n+  #155 = Utf8               LineNumberTable\n+  #156 = Utf8               LocalVariableTable\n+  #157 = Utf8               this\n+  #158 = Utf8               Lorg/apache/commons/codec/net/PercentCodec;\n+  #159 = Utf8               ([BZ)V\n+  #160 = Utf8               b\n+  #161 = Utf8               alwaysEncodeCharsArray\n+  #162 = Utf8               StackMapTable\n+  #163 = Utf8               bytes\n+  #164 = Utf8               willEncode\n+  #165 = Utf8               Exceptions\n+  #166 = Utf8               bb\n+  #167 = Utf8               hex1\n+  #168 = Utf8               C\n+  #169 = Utf8               hex2\n+  #170 = Utf8               expectedLength\n+  #171 = Utf8               buffer\n+  #172 = Utf8               Ljava/nio/ByteBuffer;\n+  #173 = Utf8               byteCount\n+  #174 = Utf8               c\n+  #175 = Utf8               u\n+  #176 = Utf8               l\n+  #177 = Utf8               e\n+  #178 = Utf8               Ljava/lang/ArrayIndexOutOfBoundsException;\n+  #179 = Utf8               i\n+  #180 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #181 = Utf8               obj\n+  #182 = Utf8               Ljava/lang/Object;\n+  #183 = Utf8               SourceFile\n+  #184 = Utf8               PercentCodec.java\n {\n   private static final byte ESCAPE_CHAR = 37;\n     descriptor: B\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 37\n \n   private final java.util.BitSet alwaysEncodeChars;\n@@ -218,30 +218,30 @@\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: new           #2                  // class java/util/BitSet\n+         5: new           #7                  // class java/util/BitSet\n          8: dup\n-         9: invokespecial #3                  // Method java/util/BitSet.\"<init>\":()V\n-        12: putfield      #4                  // Field alwaysEncodeChars:Ljava/util/BitSet;\n+         9: invokespecial #9                  // Method java/util/BitSet.\"<init>\":()V\n+        12: putfield      #10                 // Field alwaysEncodeChars:Ljava/util/BitSet;\n         15: aload_0\n-        16: ldc           #6                  // int 2147483647\n-        18: putfield      #7                  // Field alwaysEncodeCharsMin:I\n+        16: ldc           #18                 // int 2147483647\n+        18: putfield      #19                 // Field alwaysEncodeCharsMin:I\n         21: aload_0\n-        22: ldc           #8                  // int -2147483648\n-        24: putfield      #9                  // Field alwaysEncodeCharsMax:I\n+        22: ldc           #23                 // int -2147483648\n+        24: putfield      #24                 // Field alwaysEncodeCharsMax:I\n         27: aload_0\n         28: iconst_0\n-        29: putfield      #10                 // Field plusForSpace:Z\n+        29: putfield      #27                 // Field plusForSpace:Z\n         32: aload_0\n         33: bipush        37\n-        35: invokespecial #12                 // Method insertAlwaysEncodeChar:(B)V\n+        35: invokespecial #31                 // Method insertAlwaysEncodeChar:(B)V\n         38: return\n       LineNumberTable:\n         line 67: 0\n         line 50: 4\n         line 60: 15\n         line 68: 27\n         line 69: 32\n@@ -254,30 +254,30 @@\n     descriptor: ([BZ)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: new           #2                  // class java/util/BitSet\n+         5: new           #7                  // class java/util/BitSet\n          8: dup\n-         9: invokespecial #3                  // Method java/util/BitSet.\"<init>\":()V\n-        12: putfield      #4                  // Field alwaysEncodeChars:Ljava/util/BitSet;\n+         9: invokespecial #9                  // Method java/util/BitSet.\"<init>\":()V\n+        12: putfield      #10                 // Field alwaysEncodeChars:Ljava/util/BitSet;\n         15: aload_0\n-        16: ldc           #6                  // int 2147483647\n-        18: putfield      #7                  // Field alwaysEncodeCharsMin:I\n+        16: ldc           #18                 // int 2147483647\n+        18: putfield      #19                 // Field alwaysEncodeCharsMin:I\n         21: aload_0\n-        22: ldc           #8                  // int -2147483648\n-        24: putfield      #9                  // Field alwaysEncodeCharsMax:I\n+        22: ldc           #23                 // int -2147483648\n+        24: putfield      #24                 // Field alwaysEncodeCharsMax:I\n         27: aload_0\n         28: iload_2\n-        29: putfield      #10                 // Field plusForSpace:Z\n+        29: putfield      #27                 // Field plusForSpace:Z\n         32: aload_0\n         33: aload_1\n-        34: invokespecial #13                 // Method insertAlwaysEncodeChars:([B)V\n+        34: invokespecial #35                 // Method insertAlwaysEncodeChars:([B)V\n         37: return\n       LineNumberTable:\n         line 80: 0\n         line 50: 4\n         line 60: 15\n         line 81: 27\n         line 82: 32\n@@ -307,20 +307,20 @@\n         15: if_icmpge     36\n         18: aload_2\n         19: iload         4\n         21: baload\n         22: istore        5\n         24: aload_0\n         25: iload         5\n-        27: invokespecial #12                 // Method insertAlwaysEncodeChar:(B)V\n+        27: invokespecial #31                 // Method insertAlwaysEncodeChar:(B)V\n         30: iinc          4, 1\n         33: goto          12\n         36: aload_0\n         37: bipush        37\n-        39: invokespecial #12                 // Method insertAlwaysEncodeChar:(B)V\n+        39: invokespecial #31                 // Method insertAlwaysEncodeChar:(B)V\n         42: return\n       LineNumberTable:\n         line 91: 0\n         line 92: 4\n         line 93: 24\n         line 92: 30\n         line 96: 36\n@@ -339,31 +339,31 @@\n \n   private void insertAlwaysEncodeChar(byte);\n     descriptor: (B)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #4                  // Field alwaysEncodeChars:Ljava/util/BitSet;\n+         1: getfield      #10                 // Field alwaysEncodeChars:Ljava/util/BitSet;\n          4: iload_1\n-         5: invokevirtual #14                 // Method java/util/BitSet.set:(I)V\n+         5: invokevirtual #39                 // Method java/util/BitSet.set:(I)V\n          8: iload_1\n          9: aload_0\n-        10: getfield      #7                  // Field alwaysEncodeCharsMin:I\n+        10: getfield      #19                 // Field alwaysEncodeCharsMin:I\n         13: if_icmpge     21\n         16: aload_0\n         17: iload_1\n-        18: putfield      #7                  // Field alwaysEncodeCharsMin:I\n+        18: putfield      #19                 // Field alwaysEncodeCharsMin:I\n         21: iload_1\n         22: aload_0\n-        23: getfield      #9                  // Field alwaysEncodeCharsMax:I\n+        23: getfield      #24                 // Field alwaysEncodeCharsMax:I\n         26: if_icmple     34\n         29: aload_0\n         30: iload_1\n-        31: putfield      #9                  // Field alwaysEncodeCharsMax:I\n+        31: putfield      #24                 // Field alwaysEncodeCharsMax:I\n         34: return\n       LineNumberTable:\n         line 106: 0\n         line 107: 8\n         line 108: 16\n         line 110: 21\n         line 111: 29\n@@ -383,38 +383,38 @@\n       stack=4, locals=4, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n          7: aload_1\n-         8: invokespecial #15                 // Method expectedEncodingBytes:([B)I\n+         8: invokespecial #43                 // Method expectedEncodingBytes:([B)I\n         11: istore_2\n         12: iload_2\n         13: aload_1\n         14: arraylength\n         15: if_icmpeq     22\n         18: iconst_1\n         19: goto          23\n         22: iconst_0\n         23: istore_3\n         24: iload_3\n         25: ifne          43\n         28: aload_0\n-        29: getfield      #10                 // Field plusForSpace:Z\n+        29: getfield      #27                 // Field plusForSpace:Z\n         32: ifeq          51\n         35: aload_0\n         36: aload_1\n-        37: invokespecial #16                 // Method containsSpace:([B)Z\n+        37: invokespecial #47                 // Method containsSpace:([B)Z\n         40: ifeq          51\n         43: aload_0\n         44: aload_1\n         45: iload_2\n         46: iload_3\n-        47: invokespecial #17                 // Method doEncode:([BIZ)[B\n+        47: invokespecial #51                 // Method doEncode:([BIZ)[B\n         50: areturn\n         51: aload_1\n         52: areturn\n       LineNumberTable:\n         line 121: 0\n         line 122: 4\n         line 125: 6\n@@ -444,15 +444,15 @@\n \n   private byte[] doEncode(byte[], int, boolean);\n     descriptor: ([BIZ)[B\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=12, args_size=4\n          0: iload_2\n-         1: invokestatic  #18                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n+         1: invokestatic  #55                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n          4: astore        4\n          6: aload_1\n          7: astore        5\n          9: aload         5\n         11: arraylength\n         12: istore        6\n         14: iconst_0\n@@ -464,67 +464,67 @@\n         26: iload         7\n         28: baload\n         29: istore        8\n         31: iload_3\n         32: ifeq          107\n         35: aload_0\n         36: iload         8\n-        38: invokespecial #19                 // Method canEncode:(B)Z\n+        38: invokespecial #61                 // Method canEncode:(B)Z\n         41: ifeq          107\n         44: iload         8\n         46: istore        9\n         48: iload         9\n         50: ifge          62\n         53: sipush        256\n         56: iload         9\n         58: iadd\n         59: i2b\n         60: istore        9\n         62: iload         9\n         64: iconst_4\n         65: ishr\n-        66: invokestatic  #20                 // Method org/apache/commons/codec/net/Utils.hexDigit:(I)C\n+        66: invokestatic  #65                 // Method org/apache/commons/codec/net/Utils.hexDigit:(I)C\n         69: istore        10\n         71: iload         9\n-        73: invokestatic  #20                 // Method org/apache/commons/codec/net/Utils.hexDigit:(I)C\n+        73: invokestatic  #65                 // Method org/apache/commons/codec/net/Utils.hexDigit:(I)C\n         76: istore        11\n         78: aload         4\n         80: bipush        37\n-        82: invokevirtual #21                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n+        82: invokevirtual #71                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n         85: pop\n         86: aload         4\n         88: iload         10\n         90: i2b\n-        91: invokevirtual #21                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n+        91: invokevirtual #71                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n         94: pop\n         95: aload         4\n         97: iload         11\n         99: i2b\n-       100: invokevirtual #21                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n+       100: invokevirtual #71                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n        103: pop\n        104: goto          140\n        107: aload_0\n-       108: getfield      #10                 // Field plusForSpace:Z\n+       108: getfield      #27                 // Field plusForSpace:Z\n        111: ifeq          132\n        114: iload         8\n        116: bipush        32\n        118: if_icmpne     132\n        121: aload         4\n        123: bipush        43\n-       125: invokevirtual #21                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n+       125: invokevirtual #71                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n        128: pop\n        129: goto          140\n        132: aload         4\n        134: iload         8\n-       136: invokevirtual #21                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n+       136: invokevirtual #71                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n        139: pop\n        140: iinc          7, 1\n        143: goto          17\n        146: aload         4\n-       148: invokevirtual #22                 // Method java/nio/ByteBuffer.array:()[B\n+       148: invokevirtual #75                 // Method java/nio/ByteBuffer.array:()[B\n        151: areturn\n       LineNumberTable:\n         line 134: 0\n         line 135: 6\n         line 136: 31\n         line 137: 44\n         line 138: 48\n@@ -587,15 +587,15 @@\n         18: aload_3\n         19: iload         5\n         21: baload\n         22: istore        6\n         24: iload_2\n         25: aload_0\n         26: iload         6\n-        28: invokespecial #19                 // Method canEncode:(B)Z\n+        28: invokespecial #61                 // Method canEncode:(B)Z\n         31: ifeq          38\n         34: iconst_3\n         35: goto          39\n         38: iconst_1\n         39: iadd\n         40: istore_2\n         41: iinc          5, 1\n@@ -682,24 +682,24 @@\n   private boolean canEncode(byte);\n     descriptor: (B)Z\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokespecial #23                 // Method isAsciiChar:(B)Z\n+         2: invokespecial #79                 // Method isAsciiChar:(B)Z\n          5: ifeq          27\n          8: aload_0\n          9: iload_1\n-        10: invokespecial #24                 // Method inAlwaysEncodeCharsRange:(B)Z\n+        10: invokespecial #82                 // Method inAlwaysEncodeCharsRange:(B)Z\n         13: ifeq          31\n         16: aload_0\n-        17: getfield      #4                  // Field alwaysEncodeChars:Ljava/util/BitSet;\n+        17: getfield      #10                 // Field alwaysEncodeChars:Ljava/util/BitSet;\n         20: iload_1\n-        21: invokevirtual #25                 // Method java/util/BitSet.get:(I)Z\n+        21: invokevirtual #85                 // Method java/util/BitSet.get:(I)Z\n         24: ifeq          31\n         27: iconst_1\n         28: goto          32\n         31: iconst_0\n         32: ireturn\n       LineNumberTable:\n         line 175: 0\n@@ -716,19 +716,19 @@\n   private boolean inAlwaysEncodeCharsRange(byte);\n     descriptor: (B)Z\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: iload_1\n          1: aload_0\n-         2: getfield      #7                  // Field alwaysEncodeCharsMin:I\n+         2: getfield      #19                 // Field alwaysEncodeCharsMin:I\n          5: if_icmplt     20\n          8: iload_1\n          9: aload_0\n-        10: getfield      #9                  // Field alwaysEncodeCharsMax:I\n+        10: getfield      #24                 // Field alwaysEncodeCharsMax:I\n         13: if_icmpgt     20\n         16: iconst_1\n         17: goto          21\n         20: iconst_0\n         21: ireturn\n       LineNumberTable:\n         line 179: 0\n@@ -770,16 +770,16 @@\n       stack=4, locals=7, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n          7: aload_1\n-         8: invokespecial #26                 // Method expectedDecodingBytes:([B)I\n-        11: invokestatic  #18                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n+         8: invokespecial #89                 // Method expectedDecodingBytes:([B)I\n+        11: invokestatic  #55                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n         14: astore_2\n         15: iconst_0\n         16: istore_3\n         17: iload_3\n         18: aload_1\n         19: arraylength\n         20: if_icmpge     124\n@@ -790,58 +790,58 @@\n         28: iload         4\n         30: bipush        37\n         32: if_icmpne     87\n         35: aload_1\n         36: iinc          3, 1\n         39: iload_3\n         40: baload\n-        41: invokestatic  #27                 // Method org/apache/commons/codec/net/Utils.digit16:(B)I\n+        41: invokestatic  #92                 // Method org/apache/commons/codec/net/Utils.digit16:(B)I\n         44: istore        5\n         46: aload_1\n         47: iinc          3, 1\n         50: iload_3\n         51: baload\n-        52: invokestatic  #27                 // Method org/apache/commons/codec/net/Utils.digit16:(B)I\n+        52: invokestatic  #92                 // Method org/apache/commons/codec/net/Utils.digit16:(B)I\n         55: istore        6\n         57: aload_2\n         58: iload         5\n         60: iconst_4\n         61: ishl\n         62: iload         6\n         64: iadd\n         65: i2b\n-        66: invokevirtual #21                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n+        66: invokevirtual #71                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n         69: pop\n         70: goto          118\n         73: astore        5\n-        75: new           #29                 // class org/apache/commons/codec/DecoderException\n+        75: new           #98                 // class org/apache/commons/codec/DecoderException\n         78: dup\n-        79: ldc           #30                 // String Invalid percent decoding:\n+        79: ldc           #100                // String Invalid percent decoding:\n         81: aload         5\n-        83: invokespecial #31                 // Method org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        83: invokespecial #102                // Method org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         86: athrow\n         87: aload_0\n-        88: getfield      #10                 // Field plusForSpace:Z\n+        88: getfield      #27                 // Field plusForSpace:Z\n         91: ifeq          111\n         94: iload         4\n         96: bipush        43\n         98: if_icmpne     111\n        101: aload_2\n        102: bipush        32\n-       104: invokevirtual #21                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n+       104: invokevirtual #71                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n        107: pop\n        108: goto          118\n        111: aload_2\n        112: iload         4\n-       114: invokevirtual #21                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n+       114: invokevirtual #71                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n        117: pop\n        118: iinc          3, 1\n        121: goto          17\n        124: aload_2\n-       125: invokevirtual #22                 // Method java/nio/ByteBuffer.array:()[B\n+       125: invokevirtual #75                 // Method java/nio/ByteBuffer.array:()[B\n        128: areturn\n       Exception table:\n          from    to  target type\n             35    70    73   Class java/lang/ArrayIndexOutOfBoundsException\n       LineNumberTable:\n         line 192: 0\n         line 193: 4\n@@ -954,36 +954,36 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_1\n-         7: instanceof    #32                 // class \"[B\"\n+         7: instanceof    #105                // class \"[B\"\n         10: ifeq          22\n         13: aload_0\n         14: aload_1\n-        15: checkcast     #32                 // class \"[B\"\n-        18: invokevirtual #33                 // Method encode:([B)[B\n+        15: checkcast     #105                // class \"[B\"\n+        18: invokevirtual #107                // Method encode:([B)[B\n         21: areturn\n-        22: new           #34                 // class org/apache/commons/codec/EncoderException\n+        22: new           #111                // class org/apache/commons/codec/EncoderException\n         25: dup\n-        26: new           #35                 // class java/lang/StringBuilder\n+        26: new           #113                // class java/lang/StringBuilder\n         29: dup\n-        30: invokespecial #36                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        33: ldc           #37                 // String Objects of type\n-        35: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        30: invokespecial #115                // Method java/lang/StringBuilder.\"<init>\":()V\n+        33: ldc           #116                // String Objects of type\n+        35: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         38: aload_1\n-        39: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-        42: invokevirtual #40                 // Method java/lang/Class.getName:()Ljava/lang/String;\n-        45: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        48: ldc           #41                 // String  cannot be Percent encoded\n-        50: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        53: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        56: invokespecial #43                 // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+        39: invokevirtual #122                // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        42: invokevirtual #126                // Method java/lang/Class.getName:()Ljava/lang/String;\n+        45: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        48: ldc           #132                // String  cannot be Percent encoded\n+        50: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        53: invokevirtual #134                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        56: invokespecial #137                // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n         59: athrow\n       LineNumberTable:\n         line 237: 0\n         line 238: 4\n         line 239: 6\n         line 240: 13\n         line 242: 22\n@@ -1003,36 +1003,36 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_1\n-         7: instanceof    #32                 // class \"[B\"\n+         7: instanceof    #105                // class \"[B\"\n         10: ifeq          22\n         13: aload_0\n         14: aload_1\n-        15: checkcast     #32                 // class \"[B\"\n-        18: invokevirtual #44                 // Method decode:([B)[B\n+        15: checkcast     #105                // class \"[B\"\n+        18: invokevirtual #140                // Method decode:([B)[B\n         21: areturn\n-        22: new           #29                 // class org/apache/commons/codec/DecoderException\n+        22: new           #98                 // class org/apache/commons/codec/DecoderException\n         25: dup\n-        26: new           #35                 // class java/lang/StringBuilder\n+        26: new           #113                // class java/lang/StringBuilder\n         29: dup\n-        30: invokespecial #36                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        33: ldc           #37                 // String Objects of type\n-        35: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        30: invokespecial #115                // Method java/lang/StringBuilder.\"<init>\":()V\n+        33: ldc           #116                // String Objects of type\n+        35: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         38: aload_1\n-        39: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-        42: invokevirtual #40                 // Method java/lang/Class.getName:()Ljava/lang/String;\n-        45: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        48: ldc           #45                 // String  cannot be Percent decoded\n-        50: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        53: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        56: invokespecial #46                 // Method org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n+        39: invokevirtual #122                // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        42: invokevirtual #126                // Method java/lang/Class.getName:()Ljava/lang/String;\n+        45: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        48: ldc           #143                // String  cannot be Percent decoded\n+        50: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        53: invokevirtual #134                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        56: invokespecial #145                // Method org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n         59: athrow\n       LineNumberTable:\n         line 255: 0\n         line 256: 4\n         line 257: 6\n         line 258: 13\n         line 260: 22\n"}]}
