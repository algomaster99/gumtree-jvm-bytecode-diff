{"diffoscope-json-version": 1, "source1": "first/NodeCombiner.class", "source2": "second/NodeCombiner.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -10,24 +10,24 @@\n     protected static final NodeHandler<ImmutableNode> HANDLER;\n     private final Set<String> listNodes;\n     \n     public NodeCombiner() {\n         this.listNodes = new HashSet<String>();\n     }\n     \n-    public void addListNode(final String nodeName) {\n-        this.listNodes.add(nodeName);\n+    public void addListNode(final String s) {\n+        this.listNodes.add(s);\n     }\n     \n     public Set<String> getListNodes() {\n         return Collections.unmodifiableSet((Set<? extends String>)this.listNodes);\n     }\n     \n-    public boolean isListNode(final ImmutableNode node) {\n-        return this.listNodes.contains(node.getNodeName());\n+    public boolean isListNode(final ImmutableNode immutableNode) {\n+        return this.listNodes.contains(immutableNode.getNodeName());\n     }\n     \n     public abstract ImmutableNode combine(final ImmutableNode p0, final ImmutableNode p1);\n     \n     private static NodeHandler<ImmutableNode> createNodeHandler() {\n         return (NodeHandler<ImmutableNode>)new NodeCombiner.NodeCombiner$1();\n     }\n"}]}
