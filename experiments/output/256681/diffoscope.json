{"diffoscope-json-version": 1, "source1": "first/NewClassRefForm.class", "source2": "second/NewClassRefForm.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,30 +1,26 @@\n \n package org.apache.commons.compress.harmony.unpack200.bytecode.forms;\n \n-import org.apache.commons.compress.harmony.unpack200.SegmentConstantPool;\n import org.apache.commons.compress.harmony.unpack200.bytecode.CPClass;\n import org.apache.commons.compress.harmony.pack200.Pack200Exception;\n import org.apache.commons.compress.harmony.unpack200.bytecode.ClassFileEntry;\n import org.apache.commons.compress.harmony.unpack200.bytecode.OperandManager;\n import org.apache.commons.compress.harmony.unpack200.bytecode.ByteCode;\n \n public class NewClassRefForm extends ClassRefForm\n {\n-    public NewClassRefForm(final int opcode, final String name, final int[] rewrite) {\n-        super(opcode, name, rewrite);\n+    public NewClassRefForm(final int n, final String s, final int[] array) {\n+        super(n, s, array);\n     }\n     \n-    public void setByteCodeOperands(final ByteCode byteCode, final OperandManager operandManager, final int codeLength) {\n-        ClassFileEntry[] nested = null;\n+    public void setByteCodeOperands(final ByteCode byteCode, final OperandManager operandManager, final int n) {\n         final int offset = this.getOffset(operandManager);\n         if (offset == 0) {\n-            final SegmentConstantPool globalPool = operandManager.globalConstantPool();\n-            nested = new ClassFileEntry[] { (ClassFileEntry)globalPool.getClassPoolEntry(operandManager.getCurrentClass()) };\n-            byteCode.setNested(nested);\n+            byteCode.setNested(new ClassFileEntry[] { (ClassFileEntry)operandManager.globalConstantPool().getClassPoolEntry(operandManager.getCurrentClass()) });\n             byteCode.setNestedPositions(new int[][] { { 0, 2 } });\n         }\n         else {\n             try {\n                 this.setNestedEntries(byteCode, operandManager, offset);\n             }\n             catch (final Pack200Exception ex) {\n"}]}
