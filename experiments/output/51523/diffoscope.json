{"diffoscope-json-version": 1, "source1": "first/BrotliUtils.class", "source2": "second/BrotliUtils.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,14 +1,24 @@\n \n package org.apache.commons.compress.compressors.brotli;\n \n public class BrotliUtils\n {\n     private static volatile BrotliUtils.CachedAvailability cachedBrotliAvailability;\n     \n+    static {\n+        BrotliUtils.cachedBrotliAvailability = BrotliUtils.CachedAvailability.DONT_CACHE;\n+        try {\n+            Class.forName(\"org.osgi.framework.BundleEvent\");\n+        }\n+        catch (final Exception ex) {\n+            setCacheBrotliAvailablity(true);\n+        }\n+    }\n+    \n     private BrotliUtils() {\n     }\n     \n     public static boolean isBrotliCompressionAvailable() {\n         final BrotliUtils.CachedAvailability cachedResult = BrotliUtils.cachedBrotliAvailability;\n         if (cachedResult != BrotliUtils.CachedAvailability.DONT_CACHE) {\n             return cachedResult == BrotliUtils.CachedAvailability.CACHED_AVAILABLE;\n@@ -17,15 +27,15 @@\n     }\n     \n     private static boolean internalIsBrotliCompressionAvailable() {\n         try {\n             Class.forName(\"org.brotli.dec.BrotliInputStream\");\n             return true;\n         }\n-        catch (final NoClassDefFoundError | Exception error) {\n+        catch (final NoClassDefFoundError | Exception ex) {\n             return false;\n         }\n     }\n     \n     public static void setCacheBrotliAvailablity(final boolean doCache) {\n         if (!doCache) {\n             BrotliUtils.cachedBrotliAvailability = BrotliUtils.CachedAvailability.DONT_CACHE;\n@@ -35,18 +45,8 @@\n             BrotliUtils.cachedBrotliAvailability = (hasBrotli ? BrotliUtils.CachedAvailability.CACHED_AVAILABLE : BrotliUtils.CachedAvailability.CACHED_UNAVAILABLE);\n         }\n     }\n     \n     static BrotliUtils.CachedAvailability getCachedBrotliAvailability() {\n         return BrotliUtils.cachedBrotliAvailability;\n     }\n-    \n-    static {\n-        BrotliUtils.cachedBrotliAvailability = BrotliUtils.CachedAvailability.DONT_CACHE;\n-        try {\n-            Class.forName(\"org.osgi.framework.BundleEvent\");\n-        }\n-        catch (final Exception ex) {\n-            setCacheBrotliAvailablity(true);\n-        }\n-    }\n }\n"}]}
