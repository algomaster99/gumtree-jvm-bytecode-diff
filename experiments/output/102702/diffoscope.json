{"diffoscope-json-version": 1, "source1": "first/ZipArchiveInputStream$CurrentEntry.class", "source2": "second/ZipArchiveInputStream$CurrentEntry.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,113 +1,106 @@\n-  SHA-256 checksum 31cba6aa97ad0a8f1ab1b597de3c149f5814b9f470273e6a6a1cdf8b133486e6\n+  SHA-256 checksum 8813a839bb61a5eb3f200869b033e447ffc7aa8031708203313c4ff80f376e5e\n   Compiled from \"ZipArchiveInputStream.java\"\n final class org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry\n   minor version: 0\n   major version: 52\n   flags: (0x0030) ACC_FINAL, ACC_SUPER\n-  this_class: #2                          // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry\n-  super_class: #38                        // java/lang/Object\n-  interfaces: 0, fields: 7, methods: 18, attributes: 2\n+  this_class: #1                          // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry\n+  super_class: #3                         // java/lang/Object\n+  interfaces: 0, fields: 7, methods: 16, attributes: 2\n Constant pool:\n-   #1 = Fieldref           #2.#3          // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.bytesReadFromStream:J\n-   #2 = Class              #4             // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry\n-   #3 = NameAndType        #5:#6          // bytesReadFromStream:J\n-   #4 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry\n-   #5 = Utf8               bytesReadFromStream\n-   #6 = Utf8               J\n-   #7 = Methodref          #2.#8          // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.checkInputStream:()Ljava/io/InputStream;\n-   #8 = NameAndType        #9:#10         // checkInputStream:()Ljava/io/InputStream;\n-   #9 = Utf8               checkInputStream\n-  #10 = Utf8               ()Ljava/io/InputStream;\n-  #11 = Fieldref           #2.#12         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.bytesRead:J\n-  #12 = NameAndType        #13:#6         // bytesRead:J\n-  #13 = Utf8               bytesRead\n-  #14 = Fieldref           #2.#15         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.crc:Ljava/util/zip/CRC32;\n-  #15 = NameAndType        #16:#17        // crc:Ljava/util/zip/CRC32;\n-  #16 = Utf8               crc\n-  #17 = Utf8               Ljava/util/zip/CRC32;\n-  #18 = Fieldref           #2.#19         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.usesZip64:Z\n-  #19 = NameAndType        #20:#21        // usesZip64:Z\n-  #20 = Utf8               usesZip64\n-  #21 = Utf8               Z\n-  #22 = Fieldref           #2.#23         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.inputStream:Ljava/io/InputStream;\n-  #23 = NameAndType        #24:#25        // inputStream:Ljava/io/InputStream;\n-  #24 = Utf8               inputStream\n-  #25 = Utf8               Ljava/io/InputStream;\n-  #26 = Fieldref           #2.#27         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.hasDataDescriptor:Z\n-  #27 = NameAndType        #28:#21        // hasDataDescriptor:Z\n-  #28 = Utf8               hasDataDescriptor\n-  #29 = Fieldref           #2.#30         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #30 = NameAndType        #31:#32        // entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #31 = Utf8               entry\n-  #32 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #33 = Methodref          #2.#34         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.\"<init>\":()V\n-  #34 = NameAndType        #35:#36        // \"<init>\":()V\n-  #35 = Utf8               <init>\n-  #36 = Utf8               ()V\n-  #37 = Methodref          #38.#34        // java/lang/Object.\"<init>\":()V\n-  #38 = Class              #39            // java/lang/Object\n-  #39 = Utf8               java/lang/Object\n-  #40 = Class              #41            // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #41 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #42 = Methodref          #40.#34        // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":()V\n-  #43 = Class              #44            // java/util/zip/CRC32\n-  #44 = Utf8               java/util/zip/CRC32\n-  #45 = Methodref          #43.#34        // java/util/zip/CRC32.\"<init>\":()V\n-  #46 = String             #24            // inputStream\n-  #47 = Methodref          #48.#49        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #48 = Class              #50            // java/util/Objects\n-  #49 = NameAndType        #51:#52        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #50 = Utf8               java/util/Objects\n-  #51 = Utf8               requireNonNull\n-  #52 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #53 = Class              #54            // java/io/InputStream\n-  #54 = Utf8               java/io/InputStream\n-  #55 = Utf8               Code\n-  #56 = Utf8               LineNumberTable\n-  #57 = Utf8               LocalVariableTable\n-  #58 = Utf8               this\n-  #59 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n-  #60 = Utf8               Signature\n-  #61 = Utf8               <T:Ljava/io/InputStream;>()TT;\n-  #62 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1;)V\n-  #63 = Utf8               x0\n-  #64 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1;\n-  #65 = Utf8               access$100\n-  #66 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #67 = Utf8               access$202\n-  #68 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;Z)Z\n-  #69 = Utf8               x1\n-  #70 = Utf8               access$200\n-  #71 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Z\n-  #72 = Utf8               access$302\n-  #73 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;Ljava/io/InputStream;)Ljava/io/InputStream;\n-  #74 = Utf8               access$402\n-  #75 = Utf8               access$300\n-  #76 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Ljava/io/InputStream;\n-  #77 = Utf8               access$500\n-  #78 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Ljava/util/zip/CRC32;\n-  #79 = Utf8               access$600\n-  #80 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)J\n-  #81 = Utf8               access$700\n-  #82 = Utf8               access$814\n-  #83 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)J\n-  #84 = Utf8               access$614\n-  #85 = Utf8               access$800\n-  #86 = Utf8               access$822\n-  #87 = Utf8               access$400\n-  #88 = Utf8               access$808\n-  #89 = Utf8               SourceFile\n-  #90 = Utf8               ZipArchiveInputStream.java\n-  #91 = Utf8               InnerClasses\n-  #92 = Class              #93            // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n-  #93 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n-  #94 = Utf8               CurrentEntry\n-  #95 = Class              #96            // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1\n-  #96 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1\n+   #1 = Class              #2             // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry\n+   #2 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               entry\n+   #6 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+   #7 = Utf8               hasDataDescriptor\n+   #8 = Utf8               Z\n+   #9 = Utf8               usesZip64\n+  #10 = Utf8               bytesRead\n+  #11 = Utf8               J\n+  #12 = Utf8               bytesReadFromStream\n+  #13 = Utf8               crc\n+  #14 = Utf8               Ljava/util/zip/CRC32;\n+  #15 = Utf8               inputStream\n+  #16 = Utf8               Ljava/io/InputStream;\n+  #17 = Utf8               <init>\n+  #18 = Utf8               ()V\n+  #19 = Utf8               Code\n+  #20 = Methodref          #3.#21         // java/lang/Object.\"<init>\":()V\n+  #21 = NameAndType        #17:#18        // \"<init>\":()V\n+  #22 = Class              #23            // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #23 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #24 = Methodref          #22.#21        // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":()V\n+  #25 = Fieldref           #1.#26         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #26 = NameAndType        #5:#6          // entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #27 = Class              #28            // java/util/zip/CRC32\n+  #28 = Utf8               java/util/zip/CRC32\n+  #29 = Methodref          #27.#21        // java/util/zip/CRC32.\"<init>\":()V\n+  #30 = Fieldref           #1.#31         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.crc:Ljava/util/zip/CRC32;\n+  #31 = NameAndType        #13:#14        // crc:Ljava/util/zip/CRC32;\n+  #32 = Utf8               LineNumberTable\n+  #33 = Utf8               LocalVariableTable\n+  #34 = Utf8               this\n+  #35 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n+  #36 = Utf8               checkInputStream\n+  #37 = Utf8               ()Ljava/io/InputStream;\n+  #38 = Utf8               Signature\n+  #39 = Utf8               <T:Ljava/io/InputStream;>()TT;\n+  #40 = Fieldref           #1.#41         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.inputStream:Ljava/io/InputStream;\n+  #41 = NameAndType        #15:#16        // inputStream:Ljava/io/InputStream;\n+  #42 = String             #15            // inputStream\n+  #43 = Methodref          #44.#46        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #44 = Class              #45            // java/util/Objects\n+  #45 = Utf8               java/util/Objects\n+  #46 = NameAndType        #47:#48        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #47 = Utf8               requireNonNull\n+  #48 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #49 = Class              #50            // java/io/InputStream\n+  #50 = Utf8               java/io/InputStream\n+  #51 = Utf8               access$0\n+  #52 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)J\n+  #53 = Fieldref           #1.#54         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.bytesReadFromStream:J\n+  #54 = NameAndType        #12:#11        // bytesReadFromStream:J\n+  #55 = Utf8               access$1\n+  #56 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)V\n+  #57 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)V\n+  #58 = Methodref          #1.#21         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.\"<init>\":()V\n+  #59 = Utf8               access$3\n+  #60 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #61 = Utf8               access$4\n+  #62 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;Z)V\n+  #63 = Fieldref           #1.#64         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.hasDataDescriptor:Z\n+  #64 = NameAndType        #7:#8          // hasDataDescriptor:Z\n+  #65 = Utf8               access$5\n+  #66 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Z\n+  #67 = Utf8               access$6\n+  #68 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;Ljava/io/InputStream;)V\n+  #69 = Utf8               access$7\n+  #70 = Fieldref           #1.#71         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.usesZip64:Z\n+  #71 = NameAndType        #9:#8          // usesZip64:Z\n+  #72 = Utf8               access$8\n+  #73 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Ljava/io/InputStream;\n+  #74 = Utf8               access$9\n+  #75 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Ljava/util/zip/CRC32;\n+  #76 = Utf8               access$10\n+  #77 = Fieldref           #1.#78         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.bytesRead:J\n+  #78 = NameAndType        #10:#11        // bytesRead:J\n+  #79 = Utf8               access$11\n+  #80 = Methodref          #1.#81         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.checkInputStream:()Ljava/io/InputStream;\n+  #81 = NameAndType        #36:#37        // checkInputStream:()Ljava/io/InputStream;\n+  #82 = Utf8               access$12\n+  #83 = Utf8               access$13\n+  #84 = Utf8               SourceFile\n+  #85 = Utf8               ZipArchiveInputStream.java\n+  #86 = Utf8               InnerClasses\n+  #87 = Class              #88            // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+  #88 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+  #89 = Utf8               CurrentEntry\n {\n   private final org.apache.commons.compress.archivers.zip.ZipArchiveEntry entry;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private boolean hasDataDescriptor;\n     descriptor: Z\n@@ -135,306 +128,236 @@\n \n   private org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #37                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #20                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: new           #40                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+         5: new           #22                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n          8: dup\n-         9: invokespecial #42                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":()V\n-        12: putfield      #29                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+         9: invokespecial #24                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":()V\n+        12: putfield      #25                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n         15: aload_0\n-        16: new           #43                 // class java/util/zip/CRC32\n+        16: new           #27                 // class java/util/zip/CRC32\n         19: dup\n-        20: invokespecial #45                 // Method java/util/zip/CRC32.\"<init>\":()V\n-        23: putfield      #14                 // Field crc:Ljava/util/zip/CRC32;\n+        20: invokespecial #29                 // Method java/util/zip/CRC32.\"<init>\":()V\n+        23: putfield      #30                 // Field crc:Ljava/util/zip/CRC32;\n         26: return\n       LineNumberTable:\n         line 1279: 0\n         line 1284: 4\n         line 1314: 15\n+        line 1279: 26\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      27     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n \n   private <T extends java.io.InputStream> T checkInputStream();\n     descriptor: ()Ljava/io/InputStream;\n     flags: (0x0002) ACC_PRIVATE\n+    Signature: #39                          // <T:Ljava/io/InputStream;>()TT;\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #22                 // Field inputStream:Ljava/io/InputStream;\n-         4: ldc           #46                 // String inputStream\n-         6: invokestatic  #47                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-         9: checkcast     #53                 // class java/io/InputStream\n+         1: getfield      #40                 // Field inputStream:Ljava/io/InputStream;\n+         4: ldc           #42                 // String inputStream\n+         6: invokestatic  #43                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         9: checkcast     #49                 // class java/io/InputStream\n         12: areturn\n       LineNumberTable:\n         line 1323: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n-    Signature: #61                          // <T:Ljava/io/InputStream;>()TT;\n \n-  org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$1);\n-    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1;)V\n+  static long access$0(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n+    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)J\n+    flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n+    Code:\n+      stack=2, locals=1, args_size=1\n+         0: aload_0\n+         1: getfield      #53                 // Field bytesReadFromStream:J\n+         4: lreturn\n+      LineNumberTable:\n+        line 1309: 0\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+\n+  static void access$1(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry, long);\n+    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)V\n+    flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n+    Code:\n+      stack=3, locals=3, args_size=2\n+         0: aload_0\n+         1: lload_1\n+         2: putfield      #53                 // Field bytesReadFromStream:J\n+         5: return\n+      LineNumberTable:\n+        line 1309: 0\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+\n+  org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n+    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)V\n     flags: (0x1000) ACC_SYNTHETIC\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #33                 // Method \"<init>\":()V\n+         1: invokespecial #58                 // Method \"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 1279: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n-            0       5     1    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1;\n \n-  static org.apache.commons.compress.archivers.zip.ZipArchiveEntry access$100(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n+  static org.apache.commons.compress.archivers.zip.ZipArchiveEntry access$3(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #29                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+         1: getfield      #25                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n          4: areturn\n       LineNumberTable:\n-        line 1279: 0\n+        line 1284: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n \n-  static boolean access$202(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry, boolean);\n-    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;Z)Z\n+  static void access$4(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry, boolean);\n+    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;Z)V\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n-      stack=3, locals=2, args_size=2\n+      stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: dup_x1\n-         3: putfield      #26                 // Field hasDataDescriptor:Z\n-         6: ireturn\n+         2: putfield      #63                 // Field hasDataDescriptor:Z\n+         5: return\n       LineNumberTable:\n-        line 1279: 0\n+        line 1289: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       7     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n-            0       7     1    x1   Z\n \n-  static boolean access$200(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n+  static boolean access$5(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #26                 // Field hasDataDescriptor:Z\n+         1: getfield      #63                 // Field hasDataDescriptor:Z\n          4: ireturn\n       LineNumberTable:\n-        line 1279: 0\n+        line 1289: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n \n-  static java.io.InputStream access$302(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry, java.io.InputStream);\n-    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;Ljava/io/InputStream;)Ljava/io/InputStream;\n+  static void access$6(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry, java.io.InputStream);\n+    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;Ljava/io/InputStream;)V\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n-      stack=3, locals=2, args_size=2\n+      stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: dup_x1\n-         3: putfield      #22                 // Field inputStream:Ljava/io/InputStream;\n-         6: areturn\n+         2: putfield      #40                 // Field inputStream:Ljava/io/InputStream;\n+         5: return\n       LineNumberTable:\n-        line 1279: 0\n+        line 1319: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       7     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n-            0       7     1    x1   Ljava/io/InputStream;\n \n-  static boolean access$402(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry, boolean);\n-    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;Z)Z\n+  static void access$7(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry, boolean);\n+    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;Z)V\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n-      stack=3, locals=2, args_size=2\n+      stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: dup_x1\n-         3: putfield      #18                 // Field usesZip64:Z\n-         6: ireturn\n+         2: putfield      #70                 // Field usesZip64:Z\n+         5: return\n       LineNumberTable:\n-        line 1279: 0\n+        line 1294: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       7     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n-            0       7     1    x1   Z\n \n-  static java.io.InputStream access$300(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n+  static java.io.InputStream access$8(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Ljava/io/InputStream;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #22                 // Field inputStream:Ljava/io/InputStream;\n+         1: getfield      #40                 // Field inputStream:Ljava/io/InputStream;\n          4: areturn\n       LineNumberTable:\n-        line 1279: 0\n+        line 1319: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n \n-  static java.util.zip.CRC32 access$500(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n+  static java.util.zip.CRC32 access$9(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Ljava/util/zip/CRC32;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #14                 // Field crc:Ljava/util/zip/CRC32;\n+         1: getfield      #30                 // Field crc:Ljava/util/zip/CRC32;\n          4: areturn\n       LineNumberTable:\n-        line 1279: 0\n+        line 1314: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n \n-  static long access$600(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n+  static long access$10(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field bytesRead:J\n+         1: getfield      #77                 // Field bytesRead:J\n          4: lreturn\n       LineNumberTable:\n-        line 1279: 0\n+        line 1300: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n \n-  static java.io.InputStream access$700(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n+  static java.io.InputStream access$11(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Ljava/io/InputStream;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #7                  // Method checkInputStream:()Ljava/io/InputStream;\n+         1: invokespecial #80                 // Method checkInputStream:()Ljava/io/InputStream;\n          4: areturn\n       LineNumberTable:\n-        line 1279: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n-\n-  static long access$814(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry, long);\n-    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)J\n-    flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n-    Code:\n-      stack=5, locals=3, args_size=2\n-         0: aload_0\n-         1: dup\n-         2: getfield      #1                  // Field bytesReadFromStream:J\n-         5: lload_1\n-         6: ladd\n-         7: dup2_x1\n-         8: putfield      #1                  // Field bytesReadFromStream:J\n-        11: lreturn\n-      LineNumberTable:\n-        line 1279: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0      12     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n-            0      12     1    x1   J\n-\n-  static long access$614(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry, long);\n-    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)J\n-    flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n-    Code:\n-      stack=5, locals=3, args_size=2\n-         0: aload_0\n-         1: dup\n-         2: getfield      #11                 // Field bytesRead:J\n-         5: lload_1\n-         6: ladd\n-         7: dup2_x1\n-         8: putfield      #11                 // Field bytesRead:J\n-        11: lreturn\n-      LineNumberTable:\n-        line 1279: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0      12     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n-            0      12     1    x1   J\n-\n-  static long access$800(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n-    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)J\n-    flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n-    Code:\n-      stack=2, locals=1, args_size=1\n-         0: aload_0\n-         1: getfield      #1                  // Field bytesReadFromStream:J\n-         4: lreturn\n-      LineNumberTable:\n-        line 1279: 0\n+        line 1322: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n \n-  static long access$822(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry, long);\n-    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)J\n+  static void access$12(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry, long);\n+    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)V\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n-      stack=5, locals=3, args_size=2\n+      stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: dup\n-         2: getfield      #1                  // Field bytesReadFromStream:J\n-         5: lload_1\n-         6: lsub\n-         7: dup2_x1\n-         8: putfield      #1                  // Field bytesReadFromStream:J\n-        11: lreturn\n+         1: lload_1\n+         2: putfield      #77                 // Field bytesRead:J\n+         5: return\n       LineNumberTable:\n-        line 1279: 0\n+        line 1300: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      12     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n-            0      12     1    x1   J\n \n-  static boolean access$400(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n+  static boolean access$13(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field usesZip64:Z\n+         1: getfield      #70                 // Field usesZip64:Z\n          4: ireturn\n       LineNumberTable:\n-        line 1279: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n-\n-  static long access$808(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n-    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)J\n-    flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n-    Code:\n-      stack=7, locals=1, args_size=1\n-         0: aload_0\n-         1: dup\n-         2: getfield      #1                  // Field bytesReadFromStream:J\n-         5: dup2_x1\n-         6: lconst_1\n-         7: ladd\n-         8: putfield      #1                  // Field bytesReadFromStream:J\n-        11: lreturn\n-      LineNumberTable:\n-        line 1279: 0\n+        line 1294: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      12     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n }\n SourceFile: \"ZipArchiveInputStream.java\"\n InnerClasses:\n-  private static final #94= #2 of #92;    // CurrentEntry=class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry of class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n-  static #95;                             // class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1\n+  private static final #89= #1 of #87;    // CurrentEntry=class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry of class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n"}]}
