{"diffoscope-json-version": 1, "source1": "first/CircularBufferInputStream.class", "source2": "second/CircularBufferInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,145 +1,145 @@\n-  SHA-256 checksum 11b12fa6af28d0845b7740f20af44c2a8fd344c660f102558eaaf1e0af30a3ee\n+  SHA-256 checksum 002fbd6c32b3fe99343c6d62d5634963ad97f14eeb1fe8925a2917fe7307ed9a\n   Compiled from \"CircularBufferInputStream.java\"\n public class org.apache.commons.io.input.buffer.CircularBufferInputStream extends java.io.FilterInputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #36                         // org/apache/commons/io/input/buffer/CircularBufferInputStream\n-  super_class: #37                        // java/io/FilterInputStream\n+  this_class: #4                          // org/apache/commons/io/input/buffer/CircularBufferInputStream\n+  super_class: #20                        // java/io/FilterInputStream\n   interfaces: 0, fields: 3, methods: 7, attributes: 1\n Constant pool:\n-    #1 = Class              #63           // org/apache/commons/io/IOUtils\n-    #2 = Methodref          #36.#64       // org/apache/commons/io/input/buffer/CircularBufferInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-    #3 = String             #65           // inputStream\n-    #4 = Methodref          #66.#67       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-    #5 = Class              #68           // java/io/InputStream\n-    #6 = Methodref          #37.#69       // java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-    #7 = Class              #70           // java/lang/IllegalArgumentException\n-    #8 = Class              #71           // java/lang/StringBuilder\n-    #9 = Methodref          #8.#72        // java/lang/StringBuilder.\"<init>\":()V\n-   #10 = String             #73           // Illegal bufferSize:\n-   #11 = Methodref          #8.#74        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #12 = Methodref          #8.#75        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #13 = Methodref          #8.#76        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #14 = Methodref          #7.#77        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #15 = Class              #78           // org/apache/commons/io/input/buffer/CircularByteBuffer\n-   #16 = Methodref          #15.#79       // org/apache/commons/io/input/buffer/CircularByteBuffer.\"<init>\":(I)V\n-   #17 = Fieldref           #36.#80       // org/apache/commons/io/input/buffer/CircularBufferInputStream.buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-   #18 = Fieldref           #36.#81       // org/apache/commons/io/input/buffer/CircularBufferInputStream.bufferSize:I\n-   #19 = Fieldref           #36.#82       // org/apache/commons/io/input/buffer/CircularBufferInputStream.eof:Z\n-   #20 = Methodref          #37.#83       // java/io/FilterInputStream.close:()V\n-   #21 = Methodref          #15.#84       // org/apache/commons/io/input/buffer/CircularByteBuffer.clear:()V\n-   #22 = Methodref          #15.#85       // org/apache/commons/io/input/buffer/CircularByteBuffer.getSpace:()I\n-   #23 = Methodref          #1.#86        // org/apache/commons/io/IOUtils.byteArray:(I)[B\n-   #24 = Fieldref           #36.#87       // org/apache/commons/io/input/buffer/CircularBufferInputStream.in:Ljava/io/InputStream;\n-   #25 = Methodref          #5.#88        // java/io/InputStream.read:([BII)I\n-   #26 = Methodref          #15.#89       // org/apache/commons/io/input/buffer/CircularByteBuffer.add:([BII)V\n-   #27 = Methodref          #15.#90       // org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n-   #28 = Methodref          #36.#91       // org/apache/commons/io/input/buffer/CircularBufferInputStream.fillBuffer:()V\n-   #29 = Methodref          #15.#92       // org/apache/commons/io/input/buffer/CircularByteBuffer.hasBytes:()Z\n-   #30 = Methodref          #36.#93       // org/apache/commons/io/input/buffer/CircularBufferInputStream.haveBytes:(I)Z\n-   #31 = Methodref          #15.#94       // org/apache/commons/io/input/buffer/CircularByteBuffer.read:()B\n-   #32 = String             #95           // targetBuffer\n-   #33 = String             #96           // Offset must not be negative\n-   #34 = String             #97           // Length must not be negative\n-   #35 = Methodref          #98.#99       // java/lang/Math.min:(II)I\n-   #36 = Class              #100          // org/apache/commons/io/input/buffer/CircularBufferInputStream\n-   #37 = Class              #101          // java/io/FilterInputStream\n-   #38 = Utf8               buffer\n-   #39 = Utf8               Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-   #40 = Utf8               bufferSize\n-   #41 = Utf8               I\n-   #42 = Utf8               eof\n-   #43 = Utf8               Z\n-   #44 = Utf8               <init>\n-   #45 = Utf8               (Ljava/io/InputStream;)V\n-   #46 = Utf8               Code\n-   #47 = Utf8               LineNumberTable\n-   #48 = Utf8               (Ljava/io/InputStream;I)V\n-   #49 = Utf8               StackMapTable\n-   #50 = Utf8               close\n-   #51 = Utf8               ()V\n-   #52 = Utf8               Exceptions\n-   #53 = Class              #102          // java/io/IOException\n-   #54 = Utf8               fillBuffer\n-   #55 = Class              #103          // \"[B\"\n-   #56 = Utf8               haveBytes\n-   #57 = Utf8               (I)Z\n-   #58 = Utf8               read\n-   #59 = Utf8               ()I\n-   #60 = Utf8               ([BII)I\n-   #61 = Utf8               SourceFile\n-   #62 = Utf8               CircularBufferInputStream.java\n-   #63 = Utf8               org/apache/commons/io/IOUtils\n-   #64 = NameAndType        #44:#48       // \"<init>\":(Ljava/io/InputStream;I)V\n-   #65 = Utf8               inputStream\n-   #66 = Class              #104          // java/util/Objects\n-   #67 = NameAndType        #105:#106     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #68 = Utf8               java/io/InputStream\n-   #69 = NameAndType        #44:#45       // \"<init>\":(Ljava/io/InputStream;)V\n-   #70 = Utf8               java/lang/IllegalArgumentException\n-   #71 = Utf8               java/lang/StringBuilder\n-   #72 = NameAndType        #44:#51       // \"<init>\":()V\n-   #73 = Utf8               Illegal bufferSize:\n-   #74 = NameAndType        #107:#108     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #75 = NameAndType        #107:#109     // append:(I)Ljava/lang/StringBuilder;\n-   #76 = NameAndType        #110:#111     // toString:()Ljava/lang/String;\n-   #77 = NameAndType        #44:#112      // \"<init>\":(Ljava/lang/String;)V\n-   #78 = Utf8               org/apache/commons/io/input/buffer/CircularByteBuffer\n-   #79 = NameAndType        #44:#113      // \"<init>\":(I)V\n-   #80 = NameAndType        #38:#39       // buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-   #81 = NameAndType        #40:#41       // bufferSize:I\n-   #82 = NameAndType        #42:#43       // eof:Z\n-   #83 = NameAndType        #50:#51       // close:()V\n-   #84 = NameAndType        #114:#51      // clear:()V\n-   #85 = NameAndType        #115:#59      // getSpace:()I\n-   #86 = NameAndType        #116:#117     // byteArray:(I)[B\n-   #87 = NameAndType        #118:#119     // in:Ljava/io/InputStream;\n-   #88 = NameAndType        #58:#60       // read:([BII)I\n-   #89 = NameAndType        #120:#121     // add:([BII)V\n-   #90 = NameAndType        #122:#59      // getCurrentNumberOfBytes:()I\n-   #91 = NameAndType        #54:#51       // fillBuffer:()V\n-   #92 = NameAndType        #123:#124     // hasBytes:()Z\n-   #93 = NameAndType        #56:#57       // haveBytes:(I)Z\n-   #94 = NameAndType        #58:#125      // read:()B\n-   #95 = Utf8               targetBuffer\n-   #96 = Utf8               Offset must not be negative\n-   #97 = Utf8               Length must not be negative\n-   #98 = Class              #126          // java/lang/Math\n-   #99 = NameAndType        #127:#128     // min:(II)I\n-  #100 = Utf8               org/apache/commons/io/input/buffer/CircularBufferInputStream\n-  #101 = Utf8               java/io/FilterInputStream\n-  #102 = Utf8               java/io/IOException\n-  #103 = Utf8               [B\n-  #104 = Utf8               java/util/Objects\n-  #105 = Utf8               requireNonNull\n-  #106 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #107 = Utf8               append\n-  #108 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #109 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #110 = Utf8               toString\n-  #111 = Utf8               ()Ljava/lang/String;\n-  #112 = Utf8               (Ljava/lang/String;)V\n-  #113 = Utf8               (I)V\n-  #114 = Utf8               clear\n-  #115 = Utf8               getSpace\n-  #116 = Utf8               byteArray\n-  #117 = Utf8               (I)[B\n-  #118 = Utf8               in\n-  #119 = Utf8               Ljava/io/InputStream;\n-  #120 = Utf8               add\n-  #121 = Utf8               ([BII)V\n-  #122 = Utf8               getCurrentNumberOfBytes\n-  #123 = Utf8               hasBytes\n-  #124 = Utf8               ()Z\n-  #125 = Utf8               ()B\n-  #126 = Utf8               java/lang/Math\n-  #127 = Utf8               min\n-  #128 = Utf8               (II)I\n+    #1 = Class              #2            // org/apache/commons/io/IOUtils\n+    #2 = Utf8               org/apache/commons/io/IOUtils\n+    #3 = Methodref          #4.#5         // org/apache/commons/io/input/buffer/CircularBufferInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+    #4 = Class              #6            // org/apache/commons/io/input/buffer/CircularBufferInputStream\n+    #5 = NameAndType        #7:#8         // \"<init>\":(Ljava/io/InputStream;I)V\n+    #6 = Utf8               org/apache/commons/io/input/buffer/CircularBufferInputStream\n+    #7 = Utf8               <init>\n+    #8 = Utf8               (Ljava/io/InputStream;I)V\n+    #9 = String             #10           // inputStream\n+   #10 = Utf8               inputStream\n+   #11 = Methodref          #12.#13       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #12 = Class              #14           // java/util/Objects\n+   #13 = NameAndType        #15:#16       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #14 = Utf8               java/util/Objects\n+   #15 = Utf8               requireNonNull\n+   #16 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #17 = Class              #18           // java/io/InputStream\n+   #18 = Utf8               java/io/InputStream\n+   #19 = Methodref          #20.#21       // java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #20 = Class              #22           // java/io/FilterInputStream\n+   #21 = NameAndType        #7:#23        // \"<init>\":(Ljava/io/InputStream;)V\n+   #22 = Utf8               java/io/FilterInputStream\n+   #23 = Utf8               (Ljava/io/InputStream;)V\n+   #24 = Class              #25           // java/lang/IllegalArgumentException\n+   #25 = Utf8               java/lang/IllegalArgumentException\n+   #26 = Class              #27           // java/lang/StringBuilder\n+   #27 = Utf8               java/lang/StringBuilder\n+   #28 = Methodref          #26.#29       // java/lang/StringBuilder.\"<init>\":()V\n+   #29 = NameAndType        #7:#30        // \"<init>\":()V\n+   #30 = Utf8               ()V\n+   #31 = String             #32           // Illegal bufferSize:\n+   #32 = Utf8               Illegal bufferSize:\n+   #33 = Methodref          #26.#34       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #34 = NameAndType        #35:#36       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #35 = Utf8               append\n+   #36 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #37 = Methodref          #26.#38       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #38 = NameAndType        #35:#39       // append:(I)Ljava/lang/StringBuilder;\n+   #39 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #40 = Methodref          #26.#41       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #41 = NameAndType        #42:#43       // toString:()Ljava/lang/String;\n+   #42 = Utf8               toString\n+   #43 = Utf8               ()Ljava/lang/String;\n+   #44 = Methodref          #24.#45       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #45 = NameAndType        #7:#46        // \"<init>\":(Ljava/lang/String;)V\n+   #46 = Utf8               (Ljava/lang/String;)V\n+   #47 = Class              #48           // org/apache/commons/io/input/buffer/CircularByteBuffer\n+   #48 = Utf8               org/apache/commons/io/input/buffer/CircularByteBuffer\n+   #49 = Methodref          #47.#50       // org/apache/commons/io/input/buffer/CircularByteBuffer.\"<init>\":(I)V\n+   #50 = NameAndType        #7:#51        // \"<init>\":(I)V\n+   #51 = Utf8               (I)V\n+   #52 = Fieldref           #4.#53        // org/apache/commons/io/input/buffer/CircularBufferInputStream.buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+   #53 = NameAndType        #54:#55       // buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+   #54 = Utf8               buffer\n+   #55 = Utf8               Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+   #56 = Fieldref           #4.#57        // org/apache/commons/io/input/buffer/CircularBufferInputStream.bufferSize:I\n+   #57 = NameAndType        #58:#59       // bufferSize:I\n+   #58 = Utf8               bufferSize\n+   #59 = Utf8               I\n+   #60 = Fieldref           #4.#61        // org/apache/commons/io/input/buffer/CircularBufferInputStream.eof:Z\n+   #61 = NameAndType        #62:#63       // eof:Z\n+   #62 = Utf8               eof\n+   #63 = Utf8               Z\n+   #64 = Methodref          #20.#65       // java/io/FilterInputStream.close:()V\n+   #65 = NameAndType        #66:#30       // close:()V\n+   #66 = Utf8               close\n+   #67 = Methodref          #47.#68       // org/apache/commons/io/input/buffer/CircularByteBuffer.clear:()V\n+   #68 = NameAndType        #69:#30       // clear:()V\n+   #69 = Utf8               clear\n+   #70 = Methodref          #47.#71       // org/apache/commons/io/input/buffer/CircularByteBuffer.getSpace:()I\n+   #71 = NameAndType        #72:#73       // getSpace:()I\n+   #72 = Utf8               getSpace\n+   #73 = Utf8               ()I\n+   #74 = Methodref          #1.#75        // org/apache/commons/io/IOUtils.byteArray:(I)[B\n+   #75 = NameAndType        #76:#77       // byteArray:(I)[B\n+   #76 = Utf8               byteArray\n+   #77 = Utf8               (I)[B\n+   #78 = Fieldref           #4.#79        // org/apache/commons/io/input/buffer/CircularBufferInputStream.in:Ljava/io/InputStream;\n+   #79 = NameAndType        #80:#81       // in:Ljava/io/InputStream;\n+   #80 = Utf8               in\n+   #81 = Utf8               Ljava/io/InputStream;\n+   #82 = Methodref          #17.#83       // java/io/InputStream.read:([BII)I\n+   #83 = NameAndType        #84:#85       // read:([BII)I\n+   #84 = Utf8               read\n+   #85 = Utf8               ([BII)I\n+   #86 = Methodref          #47.#87       // org/apache/commons/io/input/buffer/CircularByteBuffer.add:([BII)V\n+   #87 = NameAndType        #88:#89       // add:([BII)V\n+   #88 = Utf8               add\n+   #89 = Utf8               ([BII)V\n+   #90 = Methodref          #47.#91       // org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n+   #91 = NameAndType        #92:#73       // getCurrentNumberOfBytes:()I\n+   #92 = Utf8               getCurrentNumberOfBytes\n+   #93 = Methodref          #4.#94        // org/apache/commons/io/input/buffer/CircularBufferInputStream.fillBuffer:()V\n+   #94 = NameAndType        #95:#30       // fillBuffer:()V\n+   #95 = Utf8               fillBuffer\n+   #96 = Methodref          #47.#97       // org/apache/commons/io/input/buffer/CircularByteBuffer.hasBytes:()Z\n+   #97 = NameAndType        #98:#99       // hasBytes:()Z\n+   #98 = Utf8               hasBytes\n+   #99 = Utf8               ()Z\n+  #100 = Methodref          #4.#101       // org/apache/commons/io/input/buffer/CircularBufferInputStream.haveBytes:(I)Z\n+  #101 = NameAndType        #102:#103     // haveBytes:(I)Z\n+  #102 = Utf8               haveBytes\n+  #103 = Utf8               (I)Z\n+  #104 = Methodref          #47.#105      // org/apache/commons/io/input/buffer/CircularByteBuffer.read:()B\n+  #105 = NameAndType        #84:#106      // read:()B\n+  #106 = Utf8               ()B\n+  #107 = String             #108          // targetBuffer\n+  #108 = Utf8               targetBuffer\n+  #109 = String             #110          // Offset must not be negative\n+  #110 = Utf8               Offset must not be negative\n+  #111 = String             #112          // Length must not be negative\n+  #112 = Utf8               Length must not be negative\n+  #113 = Methodref          #114.#115     // java/lang/Math.min:(II)I\n+  #114 = Class              #116          // java/lang/Math\n+  #115 = NameAndType        #117:#118     // min:(II)I\n+  #116 = Utf8               java/lang/Math\n+  #117 = Utf8               min\n+  #118 = Utf8               (II)I\n+  #119 = Utf8               Code\n+  #120 = Utf8               LineNumberTable\n+  #121 = Utf8               StackMapTable\n+  #122 = Utf8               Exceptions\n+  #123 = Class              #124          // java/io/IOException\n+  #124 = Utf8               java/io/IOException\n+  #125 = Class              #126          // \"[B\"\n+  #126 = Utf8               [B\n+  #127 = Utf8               SourceFile\n+  #128 = Utf8               CircularBufferInputStream.java\n {\n   protected final org.apache.commons.io.input.buffer.CircularByteBuffer buffer;\n     descriptor: Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n \n   protected final int bufferSize;\n     descriptor: I\n@@ -153,57 +153,57 @@\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: sipush        8192\n-         5: invokespecial #2                  // Method \"<init>\":(Ljava/io/InputStream;I)V\n+         5: invokespecial #3                  // Method \"<init>\":(Ljava/io/InputStream;I)V\n          8: return\n       LineNumberTable:\n         line 50: 0\n         line 51: 8\n \n   public org.apache.commons.io.input.buffer.CircularBufferInputStream(java.io.InputStream, int);\n     descriptor: (Ljava/io/InputStream;I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: ldc           #3                  // String inputStream\n-         4: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-         7: checkcast     #5                  // class java/io/InputStream\n-        10: invokespecial #6                  // Method java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+         2: ldc           #9                  // String inputStream\n+         4: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         7: checkcast     #17                 // class java/io/InputStream\n+        10: invokespecial #19                 // Method java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n         13: iload_2\n         14: ifgt          44\n-        17: new           #7                  // class java/lang/IllegalArgumentException\n+        17: new           #24                 // class java/lang/IllegalArgumentException\n         20: dup\n-        21: new           #8                  // class java/lang/StringBuilder\n+        21: new           #26                 // class java/lang/StringBuilder\n         24: dup\n-        25: invokespecial #9                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        28: ldc           #10                 // String Illegal bufferSize:\n-        30: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        25: invokespecial #28                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        28: ldc           #31                 // String Illegal bufferSize:\n+        30: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         33: iload_2\n-        34: invokevirtual #12                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        37: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        40: invokespecial #14                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        34: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        37: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        40: invokespecial #44                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         43: athrow\n         44: aload_0\n-        45: new           #15                 // class org/apache/commons/io/input/buffer/CircularByteBuffer\n+        45: new           #47                 // class org/apache/commons/io/input/buffer/CircularByteBuffer\n         48: dup\n         49: iload_2\n-        50: invokespecial #16                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.\"<init>\":(I)V\n-        53: putfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        50: invokespecial #49                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.\"<init>\":(I)V\n+        53: putfield      #52                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n         56: aload_0\n         57: iload_2\n-        58: putfield      #18                 // Field bufferSize:I\n+        58: putfield      #56                 // Field bufferSize:I\n         61: aload_0\n         62: iconst_0\n-        63: putfield      #19                 // Field eof:Z\n+        63: putfield      #60                 // Field eof:Z\n         66: return\n       LineNumberTable:\n         line 61: 0\n         line 62: 13\n         line 63: 17\n         line 65: 44\n         line 66: 56\n@@ -217,21 +217,21 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #20                 // Method java/io/FilterInputStream.close:()V\n+         1: invokespecial #64                 // Method java/io/FilterInputStream.close:()V\n          4: aload_0\n          5: iconst_1\n-         6: putfield      #19                 // Field eof:Z\n+         6: putfield      #60                 // Field eof:Z\n          9: aload_0\n-        10: getfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-        13: invokevirtual #21                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.clear:()V\n+        10: getfield      #52                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        13: invokevirtual #67                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.clear:()V\n         16: return\n       LineNumberTable:\n         line 72: 0\n         line 73: 4\n         line 74: 9\n         line 75: 16\n     Exceptions:\n@@ -239,48 +239,48 @@\n \n   protected void fillBuffer() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=4, locals=4, args_size=1\n          0: aload_0\n-         1: getfield      #19                 // Field eof:Z\n+         1: getfield      #60                 // Field eof:Z\n          4: ifeq          8\n          7: return\n          8: aload_0\n-         9: getfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-        12: invokevirtual #22                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getSpace:()I\n+         9: getfield      #52                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        12: invokevirtual #70                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getSpace:()I\n         15: istore_1\n         16: iload_1\n-        17: invokestatic  #23                 // Method org/apache/commons/io/IOUtils.byteArray:(I)[B\n+        17: invokestatic  #74                 // Method org/apache/commons/io/IOUtils.byteArray:(I)[B\n         20: astore_2\n         21: iload_1\n         22: ifle          68\n         25: aload_0\n-        26: getfield      #24                 // Field in:Ljava/io/InputStream;\n+        26: getfield      #78                 // Field in:Ljava/io/InputStream;\n         29: aload_2\n         30: iconst_0\n         31: iload_1\n-        32: invokevirtual #25                 // Method java/io/InputStream.read:([BII)I\n+        32: invokevirtual #82                 // Method java/io/InputStream.read:([BII)I\n         35: istore_3\n         36: iload_3\n         37: iconst_m1\n         38: if_icmpne     47\n         41: aload_0\n         42: iconst_1\n-        43: putfield      #19                 // Field eof:Z\n+        43: putfield      #60                 // Field eof:Z\n         46: return\n         47: iload_3\n         48: ifle          65\n         51: aload_0\n-        52: getfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        52: getfield      #52                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n         55: aload_2\n         56: iconst_0\n         57: iload_3\n-        58: invokevirtual #26                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.add:([BII)V\n+        58: invokevirtual #86                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.add:([BII)V\n         61: iload_1\n         62: iload_3\n         63: isub\n         64: istore_1\n         65: goto          21\n         68: return\n       LineNumberTable:\n@@ -314,23 +314,23 @@\n \n   protected boolean haveBytes(int) throws java.io.IOException;\n     descriptor: (I)Z\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-         4: invokevirtual #27                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n+         1: getfield      #52                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+         4: invokevirtual #90                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n          7: iload_1\n          8: if_icmpge     15\n         11: aload_0\n-        12: invokevirtual #28                 // Method fillBuffer:()V\n+        12: invokevirtual #93                 // Method fillBuffer:()V\n         15: aload_0\n-        16: getfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-        19: invokevirtual #29                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.hasBytes:()Z\n+        16: getfield      #52                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        19: invokevirtual #96                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.hasBytes:()Z\n         22: ireturn\n       LineNumberTable:\n         line 109: 0\n         line 110: 11\n         line 112: 15\n       StackMapTable: number_of_entries = 1\n         frame_type = 15 /* same */\n@@ -340,21 +340,21 @@\n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #30                 // Method haveBytes:(I)Z\n+         2: invokevirtual #100                // Method haveBytes:(I)Z\n          5: ifne          10\n          8: iconst_m1\n          9: ireturn\n         10: aload_0\n-        11: getfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-        14: invokevirtual #31                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.read:()B\n+        11: getfield      #52                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        14: invokevirtual #104                // Method org/apache/commons/io/input/buffer/CircularByteBuffer.read:()B\n         17: sipush        255\n         20: iand\n         21: ireturn\n       LineNumberTable:\n         line 117: 0\n         line 118: 8\n         line 120: 10\n@@ -365,55 +365,55 @@\n \n   public int read(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=6, args_size=4\n          0: aload_1\n-         1: ldc           #32                 // String targetBuffer\n-         3: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #107                // String targetBuffer\n+         3: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: iload_2\n          8: ifge          21\n-        11: new           #7                  // class java/lang/IllegalArgumentException\n+        11: new           #24                 // class java/lang/IllegalArgumentException\n         14: dup\n-        15: ldc           #33                 // String Offset must not be negative\n-        17: invokespecial #14                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        15: ldc           #109                // String Offset must not be negative\n+        17: invokespecial #44                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         20: athrow\n         21: iload_3\n         22: ifge          35\n-        25: new           #7                  // class java/lang/IllegalArgumentException\n+        25: new           #24                 // class java/lang/IllegalArgumentException\n         28: dup\n-        29: ldc           #34                 // String Length must not be negative\n-        31: invokespecial #14                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        29: ldc           #111                // String Length must not be negative\n+        31: invokespecial #44                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         34: athrow\n         35: aload_0\n         36: iload_3\n-        37: invokevirtual #30                 // Method haveBytes:(I)Z\n+        37: invokevirtual #100                // Method haveBytes:(I)Z\n         40: ifne          45\n         43: iconst_m1\n         44: ireturn\n         45: iload_3\n         46: aload_0\n-        47: getfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-        50: invokevirtual #27                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n-        53: invokestatic  #35                 // Method java/lang/Math.min:(II)I\n+        47: getfield      #52                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        50: invokevirtual #90                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n+        53: invokestatic  #113                // Method java/lang/Math.min:(II)I\n         56: istore        4\n         58: iconst_0\n         59: istore        5\n         61: iload         5\n         63: iload         4\n         65: if_icmpge     87\n         68: aload_1\n         69: iload_2\n         70: iload         5\n         72: iadd\n         73: aload_0\n-        74: getfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-        77: invokevirtual #31                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.read:()B\n+        74: getfield      #52                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        77: invokevirtual #104                // Method org/apache/commons/io/input/buffer/CircularByteBuffer.read:()B\n         80: bastore\n         81: iinc          5, 1\n         84: goto          61\n         87: iload         4\n         89: ireturn\n       LineNumberTable:\n         line 125: 0\n"}]}
