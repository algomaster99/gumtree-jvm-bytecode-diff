{"diffoscope-json-version": 1, "source1": "first/TokenMgrError.class", "source2": "second/TokenMgrError.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,59 +1,59 @@\n-  SHA-256 checksum 4e9354109a485ed5406076adfcd069eaf4276a24ca264f87273f3040bbc0550f\n+  SHA-256 checksum 7fbd51f1377425bf810f9c82f210206502cded40eac26f68d2103aeeb5393fad\n   Compiled from \"TokenMgrError.java\"\n public class org.apache.commons.configuration2.plist.TokenMgrError extends java.lang.Error\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #41                         // org/apache/commons/configuration2/plist/TokenMgrError\n   super_class: #42                        // java/lang/Error\n   interfaces: 0, fields: 6, methods: 6, attributes: 1\n Constant pool:\n-    #1 = Class              #96           // java/lang/StringBuffer\n-    #2 = Methodref          #1.#97        // java/lang/StringBuffer.\"<init>\":()V\n-    #3 = Methodref          #98.#99       // java/lang/String.length:()I\n-    #4 = Methodref          #98.#100      // java/lang/String.charAt:(I)C\n-    #5 = String             #101          // \\\\b\n-    #6 = Methodref          #1.#102       // java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n-    #7 = String             #103          // \\\\t\n-    #8 = String             #104          // \\\\n\n-    #9 = String             #105          // \\\\f\n-   #10 = String             #106          // \\\\r\n-   #11 = String             #107          // \\\\\\\"\n-   #12 = String             #108          // \\\\\\'\n-   #13 = String             #109          // \\\\\\\\\n-   #14 = Class              #110          // java/lang/StringBuilder\n-   #15 = Methodref          #14.#97       // java/lang/StringBuilder.\"<init>\":()V\n-   #16 = String             #111          // 0000\n-   #17 = Methodref          #14.#112      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #18 = Methodref          #113.#114     // java/lang/Integer.toString:(II)Ljava/lang/String;\n-   #19 = Methodref          #14.#115      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #20 = String             #116          // \\\\u\n-   #21 = Methodref          #98.#117      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #22 = Methodref          #1.#118       // java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;\n-   #23 = Methodref          #1.#115       // java/lang/StringBuffer.toString:()Ljava/lang/String;\n-   #24 = String             #119          // Lexical error at line\n-   #25 = Methodref          #14.#120      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #26 = String             #121          // , column\n-   #27 = String             #122          // .  Encountered:\n-   #28 = String             #123          // <EOF>\n-   #29 = String             #124          // \\\"\n-   #30 = Methodref          #98.#125      // java/lang/String.valueOf:(C)Ljava/lang/String;\n-   #31 = Methodref          #41.#126      // org/apache/commons/configuration2/plist/TokenMgrError.addEscapes:(Ljava/lang/String;)Ljava/lang/String;\n-   #32 = String             #127          //  (\n-   #33 = String             #128          // ),\n-   #34 = String             #129          // after : \\\"\n-   #35 = Methodref          #42.#130      // java/lang/Error.getMessage:()Ljava/lang/String;\n-   #36 = Methodref          #42.#97       // java/lang/Error.\"<init>\":()V\n-   #37 = Methodref          #42.#131      // java/lang/Error.\"<init>\":(Ljava/lang/String;)V\n-   #38 = Fieldref           #41.#132      // org/apache/commons/configuration2/plist/TokenMgrError.errorCode:I\n-   #39 = Methodref          #41.#133      // org/apache/commons/configuration2/plist/TokenMgrError.LexicalError:(ZIIILjava/lang/String;C)Ljava/lang/String;\n-   #40 = Methodref          #41.#134      // org/apache/commons/configuration2/plist/TokenMgrError.\"<init>\":(Ljava/lang/String;I)V\n-   #41 = Class              #135          // org/apache/commons/configuration2/plist/TokenMgrError\n-   #42 = Class              #136          // java/lang/Error\n+    #1 = Class              #94           // java/lang/StringBuffer\n+    #2 = Methodref          #1.#95        // java/lang/StringBuffer.\"<init>\":()V\n+    #3 = Methodref          #72.#96       // java/lang/String.length:()I\n+    #4 = Methodref          #72.#97       // java/lang/String.charAt:(I)C\n+    #5 = String             #98           // \\\\b\n+    #6 = Methodref          #1.#99        // java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+    #7 = String             #100          // \\\\t\n+    #8 = String             #101          // \\\\n\n+    #9 = String             #102          // \\\\f\n+   #10 = String             #103          // \\\\r\n+   #11 = String             #104          // \\\\\\\"\n+   #12 = String             #105          // \\\\\\'\n+   #13 = String             #106          // \\\\\\\\\n+   #14 = Class              #107          // java/lang/StringBuilder\n+   #15 = Methodref          #14.#95       // java/lang/StringBuilder.\"<init>\":()V\n+   #16 = String             #108          // 0000\n+   #17 = Methodref          #14.#109      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #18 = Methodref          #110.#111     // java/lang/Integer.toString:(II)Ljava/lang/String;\n+   #19 = Methodref          #14.#112      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #20 = String             #113          // \\\\u\n+   #21 = Methodref          #72.#114      // java/lang/String.substring:(II)Ljava/lang/String;\n+   #22 = Methodref          #1.#115       // java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;\n+   #23 = Methodref          #1.#112       // java/lang/StringBuffer.toString:()Ljava/lang/String;\n+   #24 = String             #116          // Lexical error at line\n+   #25 = Methodref          #14.#117      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #26 = String             #118          // , column\n+   #27 = String             #119          // .  Encountered:\n+   #28 = String             #120          // <EOF>\n+   #29 = String             #121          // \\\"\n+   #30 = Methodref          #72.#122      // java/lang/String.valueOf:(C)Ljava/lang/String;\n+   #31 = Methodref          #41.#123      // org/apache/commons/configuration2/plist/TokenMgrError.addEscapes:(Ljava/lang/String;)Ljava/lang/String;\n+   #32 = String             #124          //  (\n+   #33 = String             #125          // ),\n+   #34 = String             #126          // after : \\\"\n+   #35 = Methodref          #42.#127      // java/lang/Error.getMessage:()Ljava/lang/String;\n+   #36 = Methodref          #42.#95       // java/lang/Error.\"<init>\":()V\n+   #37 = Methodref          #42.#128      // java/lang/Error.\"<init>\":(Ljava/lang/String;)V\n+   #38 = Fieldref           #41.#129      // org/apache/commons/configuration2/plist/TokenMgrError.errorCode:I\n+   #39 = Methodref          #41.#130      // org/apache/commons/configuration2/plist/TokenMgrError.LexicalError:(ZIIILjava/lang/String;C)Ljava/lang/String;\n+   #40 = Methodref          #41.#131      // org/apache/commons/configuration2/plist/TokenMgrError.\"<init>\":(Ljava/lang/String;I)V\n+   #41 = Class              #132          // org/apache/commons/configuration2/plist/TokenMgrError\n+   #42 = Class              #133          // java/lang/Error\n    #43 = Utf8               serialVersionUID\n    #44 = Utf8               J\n    #45 = Utf8               ConstantValue\n    #46 = Long               1l\n    #48 = Utf8               LEXICAL_ERROR\n    #49 = Utf8               I\n    #50 = Integer            0\n@@ -74,96 +74,93 @@\n    #65 = Utf8               ch\n    #66 = Utf8               C\n    #67 = Utf8               i\n    #68 = Utf8               str\n    #69 = Utf8               retval\n    #70 = Utf8               Ljava/lang/StringBuffer;\n    #71 = Utf8               StackMapTable\n-   #72 = Class              #96           // java/lang/StringBuffer\n-   #73 = Class              #137          // java/lang/String\n-   #74 = Utf8               LexicalError\n-   #75 = Utf8               (ZIIILjava/lang/String;C)Ljava/lang/String;\n-   #76 = Utf8               EOFSeen\n-   #77 = Utf8               Z\n-   #78 = Utf8               lexState\n-   #79 = Utf8               errorLine\n-   #80 = Utf8               errorColumn\n-   #81 = Utf8               errorAfter\n-   #82 = Utf8               curChar\n-   #83 = Class              #110          // java/lang/StringBuilder\n-   #84 = Utf8               getMessage\n-   #85 = Utf8               ()Ljava/lang/String;\n-   #86 = Utf8               this\n-   #87 = Utf8               Lorg/apache/commons/configuration2/plist/TokenMgrError;\n-   #88 = Utf8               <init>\n-   #89 = Utf8               ()V\n-   #90 = Utf8               (Ljava/lang/String;I)V\n-   #91 = Utf8               message\n-   #92 = Utf8               reason\n-   #93 = Utf8               (ZIIILjava/lang/String;CI)V\n-   #94 = Utf8               SourceFile\n-   #95 = Utf8               TokenMgrError.java\n-   #96 = Utf8               java/lang/StringBuffer\n-   #97 = NameAndType        #88:#89       // \"<init>\":()V\n-   #98 = Class              #137          // java/lang/String\n-   #99 = NameAndType        #138:#139     // length:()I\n-  #100 = NameAndType        #140:#141     // charAt:(I)C\n-  #101 = Utf8               \\\\b\n-  #102 = NameAndType        #142:#143     // append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n-  #103 = Utf8               \\\\t\n-  #104 = Utf8               \\\\n\n-  #105 = Utf8               \\\\f\n-  #106 = Utf8               \\\\r\n-  #107 = Utf8               \\\\\\\"\n-  #108 = Utf8               \\\\\\'\n-  #109 = Utf8               \\\\\\\\\n-  #110 = Utf8               java/lang/StringBuilder\n-  #111 = Utf8               0000\n-  #112 = NameAndType        #142:#144     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #113 = Class              #145          // java/lang/Integer\n-  #114 = NameAndType        #146:#147     // toString:(II)Ljava/lang/String;\n-  #115 = NameAndType        #146:#85      // toString:()Ljava/lang/String;\n-  #116 = Utf8               \\\\u\n-  #117 = NameAndType        #148:#147     // substring:(II)Ljava/lang/String;\n-  #118 = NameAndType        #142:#149     // append:(C)Ljava/lang/StringBuffer;\n-  #119 = Utf8               Lexical error at line\n-  #120 = NameAndType        #142:#150     // append:(I)Ljava/lang/StringBuilder;\n-  #121 = Utf8               , column\n-  #122 = Utf8               .  Encountered:\n-  #123 = Utf8               <EOF>\n-  #124 = Utf8               \\\"\n-  #125 = NameAndType        #151:#152     // valueOf:(C)Ljava/lang/String;\n-  #126 = NameAndType        #58:#59       // addEscapes:(Ljava/lang/String;)Ljava/lang/String;\n-  #127 = Utf8                (\n-  #128 = Utf8               ),\n-  #129 = Utf8               after : \\\"\n-  #130 = NameAndType        #84:#85       // getMessage:()Ljava/lang/String;\n-  #131 = NameAndType        #88:#153      // \"<init>\":(Ljava/lang/String;)V\n-  #132 = NameAndType        #57:#49       // errorCode:I\n-  #133 = NameAndType        #74:#75       // LexicalError:(ZIIILjava/lang/String;C)Ljava/lang/String;\n-  #134 = NameAndType        #88:#90       // \"<init>\":(Ljava/lang/String;I)V\n-  #135 = Utf8               org/apache/commons/configuration2/plist/TokenMgrError\n-  #136 = Utf8               java/lang/Error\n-  #137 = Utf8               java/lang/String\n-  #138 = Utf8               length\n-  #139 = Utf8               ()I\n-  #140 = Utf8               charAt\n-  #141 = Utf8               (I)C\n-  #142 = Utf8               append\n-  #143 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuffer;\n-  #144 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #145 = Utf8               java/lang/Integer\n-  #146 = Utf8               toString\n-  #147 = Utf8               (II)Ljava/lang/String;\n-  #148 = Utf8               substring\n-  #149 = Utf8               (C)Ljava/lang/StringBuffer;\n-  #150 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #151 = Utf8               valueOf\n-  #152 = Utf8               (C)Ljava/lang/String;\n-  #153 = Utf8               (Ljava/lang/String;)V\n+   #72 = Class              #134          // java/lang/String\n+   #73 = Utf8               LexicalError\n+   #74 = Utf8               (ZIIILjava/lang/String;C)Ljava/lang/String;\n+   #75 = Utf8               EOFSeen\n+   #76 = Utf8               Z\n+   #77 = Utf8               lexState\n+   #78 = Utf8               errorLine\n+   #79 = Utf8               errorColumn\n+   #80 = Utf8               errorAfter\n+   #81 = Utf8               curChar\n+   #82 = Utf8               getMessage\n+   #83 = Utf8               ()Ljava/lang/String;\n+   #84 = Utf8               this\n+   #85 = Utf8               Lorg/apache/commons/configuration2/plist/TokenMgrError;\n+   #86 = Utf8               <init>\n+   #87 = Utf8               ()V\n+   #88 = Utf8               (Ljava/lang/String;I)V\n+   #89 = Utf8               message\n+   #90 = Utf8               reason\n+   #91 = Utf8               (ZIIILjava/lang/String;CI)V\n+   #92 = Utf8               SourceFile\n+   #93 = Utf8               TokenMgrError.java\n+   #94 = Utf8               java/lang/StringBuffer\n+   #95 = NameAndType        #86:#87       // \"<init>\":()V\n+   #96 = NameAndType        #135:#136     // length:()I\n+   #97 = NameAndType        #137:#138     // charAt:(I)C\n+   #98 = Utf8               \\\\b\n+   #99 = NameAndType        #139:#140     // append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+  #100 = Utf8               \\\\t\n+  #101 = Utf8               \\\\n\n+  #102 = Utf8               \\\\f\n+  #103 = Utf8               \\\\r\n+  #104 = Utf8               \\\\\\\"\n+  #105 = Utf8               \\\\\\'\n+  #106 = Utf8               \\\\\\\\\n+  #107 = Utf8               java/lang/StringBuilder\n+  #108 = Utf8               0000\n+  #109 = NameAndType        #139:#141     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #110 = Class              #142          // java/lang/Integer\n+  #111 = NameAndType        #143:#144     // toString:(II)Ljava/lang/String;\n+  #112 = NameAndType        #143:#83      // toString:()Ljava/lang/String;\n+  #113 = Utf8               \\\\u\n+  #114 = NameAndType        #145:#144     // substring:(II)Ljava/lang/String;\n+  #115 = NameAndType        #139:#146     // append:(C)Ljava/lang/StringBuffer;\n+  #116 = Utf8               Lexical error at line\n+  #117 = NameAndType        #139:#147     // append:(I)Ljava/lang/StringBuilder;\n+  #118 = Utf8               , column\n+  #119 = Utf8               .  Encountered:\n+  #120 = Utf8               <EOF>\n+  #121 = Utf8               \\\"\n+  #122 = NameAndType        #148:#149     // valueOf:(C)Ljava/lang/String;\n+  #123 = NameAndType        #58:#59       // addEscapes:(Ljava/lang/String;)Ljava/lang/String;\n+  #124 = Utf8                (\n+  #125 = Utf8               ),\n+  #126 = Utf8               after : \\\"\n+  #127 = NameAndType        #82:#83       // getMessage:()Ljava/lang/String;\n+  #128 = NameAndType        #86:#150      // \"<init>\":(Ljava/lang/String;)V\n+  #129 = NameAndType        #57:#49       // errorCode:I\n+  #130 = NameAndType        #73:#74       // LexicalError:(ZIIILjava/lang/String;C)Ljava/lang/String;\n+  #131 = NameAndType        #86:#88       // \"<init>\":(Ljava/lang/String;I)V\n+  #132 = Utf8               org/apache/commons/configuration2/plist/TokenMgrError\n+  #133 = Utf8               java/lang/Error\n+  #134 = Utf8               java/lang/String\n+  #135 = Utf8               length\n+  #136 = Utf8               ()I\n+  #137 = Utf8               charAt\n+  #138 = Utf8               (I)C\n+  #139 = Utf8               append\n+  #140 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuffer;\n+  #141 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #142 = Utf8               java/lang/Integer\n+  #143 = Utf8               toString\n+  #144 = Utf8               (II)Ljava/lang/String;\n+  #145 = Utf8               substring\n+  #146 = Utf8               (C)Ljava/lang/StringBuffer;\n+  #147 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #148 = Utf8               valueOf\n+  #149 = Utf8               (C)Ljava/lang/String;\n+  #150 = Utf8               (Ljava/lang/String;)V\n {\n   private static final long serialVersionUID = 1l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 1l\n \n   static final int LEXICAL_ERROR = 0;\n@@ -421,15 +418,15 @@\n         98: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        101: ldc           #29                 // String \\\"\n        103: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        106: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        109: areturn\n       LineNumberTable:\n         line 108: 0\n-        line 111: 53\n+        line 111: 30\n         line 112: 95\n         line 108: 109\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0     110     0 EOFSeen   Z\n             0     110     1 lexState   I\n             0     110     2 errorLine   I\n"}]}
