{"diffoscope-json-version": 1, "source1": "first/BasicThreadFactory.class", "source2": "second/BasicThreadFactory.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -11,24 +11,24 @@\n     private final ThreadFactory wrappedFactory;\n     private final Thread.UncaughtExceptionHandler uncaughtExceptionHandler;\n     private final String namingPattern;\n     private final Integer priority;\n     private final Boolean daemon;\n     \n     private BasicThreadFactory(final BasicThreadFactory.Builder builder) {\n-        if (BasicThreadFactory.Builder.access$000(builder) == null) {\n+        if (BasicThreadFactory.Builder.access$1(builder) == null) {\n             this.wrappedFactory = Executors.defaultThreadFactory();\n         }\n         else {\n-            this.wrappedFactory = BasicThreadFactory.Builder.access$000(builder);\n+            this.wrappedFactory = BasicThreadFactory.Builder.access$1(builder);\n         }\n-        this.namingPattern = BasicThreadFactory.Builder.access$100(builder);\n-        this.priority = BasicThreadFactory.Builder.access$200(builder);\n-        this.daemon = BasicThreadFactory.Builder.access$300(builder);\n-        this.uncaughtExceptionHandler = BasicThreadFactory.Builder.access$400(builder);\n+        this.namingPattern = BasicThreadFactory.Builder.access$2(builder);\n+        this.priority = BasicThreadFactory.Builder.access$3(builder);\n+        this.daemon = BasicThreadFactory.Builder.access$4(builder);\n+        this.uncaughtExceptionHandler = BasicThreadFactory.Builder.access$5(builder);\n         this.threadCounter = new AtomicLong();\n     }\n     \n     public final ThreadFactory getWrappedFactory() {\n         return this.wrappedFactory;\n     }\n     \n"}]}
