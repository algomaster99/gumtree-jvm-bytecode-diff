{"diffoscope-json-version": 1, "source1": "first/BigDecimalParser.class", "source2": "second/BigDecimalParser.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,63 +1,63 @@\n-  SHA-256 checksum 3eb3907540edba8477026f9570a9e6c5b0101d796cb4c875ae68c4f1e6729e95\n+  SHA-256 checksum 86c5e508be13ac700dec7f11e7503ff0f1443e6d46f8199c12ef24bdc12b274a\n   Compiled from \"BigDecimalParser.java\"\n public final class com.fasterxml.jackson.core.io.BigDecimalParser\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #11                         // com/fasterxml/jackson/core/io/BigDecimalParser\n   super_class: #48                        // java/lang/Object\n   interfaces: 0, fields: 1, methods: 7, attributes: 1\n Constant pool:\n-    #1 = Methodref          #48.#112      // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #12.#113      // java/lang/String.toCharArray:()[C\n-    #3 = Methodref          #11.#114      // com/fasterxml/jackson/core/io/BigDecimalParser.parse:([C)Ljava/math/BigDecimal;\n-    #4 = Class              #115          // java/math/BigDecimal\n-    #5 = Methodref          #4.#116       // java/math/BigDecimal.\"<init>\":([CII)V\n-    #6 = Methodref          #11.#117      // com/fasterxml/jackson/core/io/BigDecimalParser.parseBigDecimal:([CIII)Ljava/math/BigDecimal;\n-    #7 = Class              #118          // java/lang/ArithmeticException\n-    #8 = Class              #119          // java/lang/NumberFormatException\n-    #9 = Methodref          #120.#121     // java/lang/RuntimeException.getMessage:()Ljava/lang/String;\n-   #10 = String             #122          // Not a valid number representation\n-   #11 = Class              #123          // com/fasterxml/jackson/core/io/BigDecimalParser\n-   #12 = Class              #124          // java/lang/String\n-   #13 = Methodref          #12.#116      // java/lang/String.\"<init>\":([CII)V\n-   #14 = Class              #125          // java/lang/StringBuilder\n-   #15 = Methodref          #14.#112      // java/lang/StringBuilder.\"<init>\":()V\n-   #16 = Methodref          #126.#127     // java/util/Arrays.copyOfRange:([CII)[C\n-   #17 = Methodref          #12.#128      // java/lang/String.\"<init>\":([C)V\n-   #18 = Methodref          #14.#129      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #19 = String             #130          // (truncated, full length is\n-   #20 = Methodref          #14.#131      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #21 = String             #132          //  chars)\n-   #22 = Methodref          #14.#133      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #23 = String             #134          // Value \\\"\n-   #24 = String             #135          // \\\" can not be represented as `java.math.BigDecimal`, reason:\n-   #25 = Methodref          #8.#136       // java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n-   #26 = Methodref          #11.#137      // com/fasterxml/jackson/core/io/BigDecimalParser.parse:([CII)Ljava/math/BigDecimal;\n-   #27 = String             #138          // Multiple signs in exponent\n-   #28 = String             #139          // Multiple signs in number\n-   #29 = String             #140          // Multiple exponent markers\n-   #30 = String             #141          // Multiple decimal points\n-   #31 = Methodref          #37.#142      // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-   #32 = Methodref          #11.#143      // com/fasterxml/jackson/core/io/BigDecimalParser.adjustScale:(IJ)I\n-   #33 = Methodref          #11.#144      // com/fasterxml/jackson/core/io/BigDecimalParser.toBigDecimalRec:([CIIII)Ljava/math/BigDecimal;\n-   #34 = Methodref          #4.#145       // java/math/BigDecimal.add:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;\n-   #35 = Methodref          #4.#146       // java/math/BigDecimal.setScale:(I)Ljava/math/BigDecimal;\n-   #36 = Methodref          #4.#147       // java/math/BigDecimal.negate:()Ljava/math/BigDecimal;\n-   #37 = Class              #148          // java/lang/Integer\n+    #1 = Methodref          #48.#110      // java/lang/Object.\"<init>\":()V\n+    #2 = Methodref          #12.#111      // java/lang/String.toCharArray:()[C\n+    #3 = Methodref          #11.#112      // com/fasterxml/jackson/core/io/BigDecimalParser.parse:([C)Ljava/math/BigDecimal;\n+    #4 = Class              #113          // java/math/BigDecimal\n+    #5 = Methodref          #4.#114       // java/math/BigDecimal.\"<init>\":([CII)V\n+    #6 = Methodref          #11.#115      // com/fasterxml/jackson/core/io/BigDecimalParser.parseBigDecimal:([CIII)Ljava/math/BigDecimal;\n+    #7 = Class              #116          // java/lang/ArithmeticException\n+    #8 = Class              #117          // java/lang/NumberFormatException\n+    #9 = Methodref          #74.#118      // java/lang/RuntimeException.getMessage:()Ljava/lang/String;\n+   #10 = String             #119          // Not a valid number representation\n+   #11 = Class              #120          // com/fasterxml/jackson/core/io/BigDecimalParser\n+   #12 = Class              #121          // java/lang/String\n+   #13 = Methodref          #12.#114      // java/lang/String.\"<init>\":([CII)V\n+   #14 = Class              #122          // java/lang/StringBuilder\n+   #15 = Methodref          #14.#110      // java/lang/StringBuilder.\"<init>\":()V\n+   #16 = Methodref          #123.#124     // java/util/Arrays.copyOfRange:([CII)[C\n+   #17 = Methodref          #12.#125      // java/lang/String.\"<init>\":([C)V\n+   #18 = Methodref          #14.#126      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #19 = String             #127          // (truncated, full length is\n+   #20 = Methodref          #14.#128      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #21 = String             #129          //  chars)\n+   #22 = Methodref          #14.#130      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #23 = String             #131          // Value \\\"\n+   #24 = String             #132          // \\\" can not be represented as `java.math.BigDecimal`, reason:\n+   #25 = Methodref          #8.#133       // java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+   #26 = Methodref          #11.#134      // com/fasterxml/jackson/core/io/BigDecimalParser.parse:([CII)Ljava/math/BigDecimal;\n+   #27 = String             #135          // Multiple signs in exponent\n+   #28 = String             #136          // Multiple signs in number\n+   #29 = String             #137          // Multiple exponent markers\n+   #30 = String             #138          // Multiple decimal points\n+   #31 = Methodref          #37.#139      // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+   #32 = Methodref          #11.#140      // com/fasterxml/jackson/core/io/BigDecimalParser.adjustScale:(IJ)I\n+   #33 = Methodref          #11.#141      // com/fasterxml/jackson/core/io/BigDecimalParser.toBigDecimalRec:([CIIII)Ljava/math/BigDecimal;\n+   #34 = Methodref          #4.#142       // java/math/BigDecimal.add:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;\n+   #35 = Methodref          #4.#143       // java/math/BigDecimal.setScale:(I)Ljava/math/BigDecimal;\n+   #36 = Methodref          #4.#144       // java/math/BigDecimal.negate:()Ljava/math/BigDecimal;\n+   #37 = Class              #145          // java/lang/Integer\n    #38 = Long               2147483647l\n    #40 = Long               -2147483648l\n-   #42 = String             #149          // Scale out of range:\n-   #43 = Methodref          #14.#150      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-   #44 = String             #151          //  while adjusting scale\n-   #45 = String             #152          //  to exponent\n-   #46 = Fieldref           #4.#153       // java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n-   #47 = Methodref          #4.#154       // java/math/BigDecimal.movePointRight:(I)Ljava/math/BigDecimal;\n-   #48 = Class              #155          // java/lang/Object\n+   #42 = String             #146          // Scale out of range:\n+   #43 = Methodref          #14.#147      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+   #44 = String             #148          //  while adjusting scale\n+   #45 = String             #149          //  to exponent\n+   #46 = Fieldref           #4.#150       // java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n+   #47 = Methodref          #4.#151       // java/math/BigDecimal.movePointRight:(I)Ljava/math/BigDecimal;\n+   #48 = Class              #152          // java/lang/Object\n    #49 = Utf8               MAX_CHARS_TO_REPORT\n    #50 = Utf8               I\n    #51 = Utf8               ConstantValue\n    #52 = Integer            1000\n    #53 = Utf8               <init>\n    #54 = Utf8               ()V\n    #55 = Utf8               Code\n@@ -75,122 +75,119 @@\n    #67 = Utf8               e\n    #68 = Utf8               Ljava/lang/RuntimeException;\n    #69 = Utf8               chars\n    #70 = Utf8               [C\n    #71 = Utf8               off\n    #72 = Utf8               len\n    #73 = Utf8               StackMapTable\n-   #74 = Class              #156          // java/lang/RuntimeException\n-   #75 = Class              #124          // java/lang/String\n-   #76 = Utf8               ([C)Ljava/math/BigDecimal;\n-   #77 = Utf8               parseBigDecimal\n-   #78 = Utf8               ([CIII)Ljava/math/BigDecimal;\n-   #79 = Utf8               c\n-   #80 = Utf8               C\n-   #81 = Utf8               i\n-   #82 = Utf8               expStr\n-   #83 = Utf8               numEndIdx\n-   #84 = Utf8               leftLen\n-   #85 = Utf8               left\n-   #86 = Utf8               Ljava/math/BigDecimal;\n-   #87 = Utf8               rightLen\n-   #88 = Utf8               right\n-   #89 = Utf8               res\n-   #90 = Utf8               splitLen\n-   #91 = Utf8               numHasSign\n-   #92 = Utf8               Z\n-   #93 = Utf8               expHasSign\n-   #94 = Utf8               neg\n-   #95 = Utf8               numIdx\n-   #96 = Utf8               expIdx\n-   #97 = Utf8               dotIdx\n-   #98 = Utf8               scale\n-   #99 = Utf8               endIdx\n-  #100 = Utf8               exp\n-  #101 = Class              #70           // \"[C\"\n-  #102 = Class              #115          // java/math/BigDecimal\n-  #103 = Utf8               adjustScale\n-  #104 = Utf8               (IJ)I\n-  #105 = Utf8               J\n-  #106 = Utf8               adjScale\n-  #107 = Utf8               toBigDecimalRec\n-  #108 = Utf8               ([CIIII)Ljava/math/BigDecimal;\n-  #109 = Utf8               mid\n-  #110 = Utf8               SourceFile\n-  #111 = Utf8               BigDecimalParser.java\n-  #112 = NameAndType        #53:#54       // \"<init>\":()V\n-  #113 = NameAndType        #157:#158     // toCharArray:()[C\n-  #114 = NameAndType        #60:#76       // parse:([C)Ljava/math/BigDecimal;\n-  #115 = Utf8               java/math/BigDecimal\n-  #116 = NameAndType        #53:#159      // \"<init>\":([CII)V\n-  #117 = NameAndType        #77:#78       // parseBigDecimal:([CIII)Ljava/math/BigDecimal;\n-  #118 = Utf8               java/lang/ArithmeticException\n-  #119 = Utf8               java/lang/NumberFormatException\n-  #120 = Class              #156          // java/lang/RuntimeException\n-  #121 = NameAndType        #160:#161     // getMessage:()Ljava/lang/String;\n-  #122 = Utf8               Not a valid number representation\n-  #123 = Utf8               com/fasterxml/jackson/core/io/BigDecimalParser\n-  #124 = Utf8               java/lang/String\n-  #125 = Utf8               java/lang/StringBuilder\n-  #126 = Class              #162          // java/util/Arrays\n-  #127 = NameAndType        #163:#164     // copyOfRange:([CII)[C\n-  #128 = NameAndType        #53:#165      // \"<init>\":([C)V\n-  #129 = NameAndType        #166:#167     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #130 = Utf8               (truncated, full length is\n-  #131 = NameAndType        #166:#168     // append:(I)Ljava/lang/StringBuilder;\n-  #132 = Utf8                chars)\n-  #133 = NameAndType        #169:#161     // toString:()Ljava/lang/String;\n-  #134 = Utf8               Value \\\"\n-  #135 = Utf8               \\\" can not be represented as `java.math.BigDecimal`, reason:\n-  #136 = NameAndType        #53:#170      // \"<init>\":(Ljava/lang/String;)V\n-  #137 = NameAndType        #60:#64       // parse:([CII)Ljava/math/BigDecimal;\n-  #138 = Utf8               Multiple signs in exponent\n-  #139 = Utf8               Multiple signs in number\n-  #140 = Utf8               Multiple exponent markers\n-  #141 = Utf8               Multiple decimal points\n-  #142 = NameAndType        #171:#172     // parseInt:(Ljava/lang/String;)I\n-  #143 = NameAndType        #103:#104     // adjustScale:(IJ)I\n-  #144 = NameAndType        #107:#108     // toBigDecimalRec:([CIIII)Ljava/math/BigDecimal;\n-  #145 = NameAndType        #173:#174     // add:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;\n-  #146 = NameAndType        #175:#176     // setScale:(I)Ljava/math/BigDecimal;\n-  #147 = NameAndType        #177:#178     // negate:()Ljava/math/BigDecimal;\n-  #148 = Utf8               java/lang/Integer\n-  #149 = Utf8               Scale out of range:\n-  #150 = NameAndType        #166:#179     // append:(J)Ljava/lang/StringBuilder;\n-  #151 = Utf8                while adjusting scale\n-  #152 = Utf8                to exponent\n-  #153 = NameAndType        #180:#86      // ZERO:Ljava/math/BigDecimal;\n-  #154 = NameAndType        #181:#176     // movePointRight:(I)Ljava/math/BigDecimal;\n-  #155 = Utf8               java/lang/Object\n-  #156 = Utf8               java/lang/RuntimeException\n-  #157 = Utf8               toCharArray\n-  #158 = Utf8               ()[C\n-  #159 = Utf8               ([CII)V\n-  #160 = Utf8               getMessage\n-  #161 = Utf8               ()Ljava/lang/String;\n-  #162 = Utf8               java/util/Arrays\n-  #163 = Utf8               copyOfRange\n-  #164 = Utf8               ([CII)[C\n-  #165 = Utf8               ([C)V\n-  #166 = Utf8               append\n-  #167 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #168 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #169 = Utf8               toString\n-  #170 = Utf8               (Ljava/lang/String;)V\n-  #171 = Utf8               parseInt\n-  #172 = Utf8               (Ljava/lang/String;)I\n-  #173 = Utf8               add\n-  #174 = Utf8               (Ljava/math/BigDecimal;)Ljava/math/BigDecimal;\n-  #175 = Utf8               setScale\n-  #176 = Utf8               (I)Ljava/math/BigDecimal;\n-  #177 = Utf8               negate\n-  #178 = Utf8               ()Ljava/math/BigDecimal;\n-  #179 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #180 = Utf8               ZERO\n-  #181 = Utf8               movePointRight\n+   #74 = Class              #153          // java/lang/RuntimeException\n+   #75 = Utf8               ([C)Ljava/math/BigDecimal;\n+   #76 = Utf8               parseBigDecimal\n+   #77 = Utf8               ([CIII)Ljava/math/BigDecimal;\n+   #78 = Utf8               c\n+   #79 = Utf8               C\n+   #80 = Utf8               i\n+   #81 = Utf8               expStr\n+   #82 = Utf8               numEndIdx\n+   #83 = Utf8               leftLen\n+   #84 = Utf8               left\n+   #85 = Utf8               Ljava/math/BigDecimal;\n+   #86 = Utf8               rightLen\n+   #87 = Utf8               right\n+   #88 = Utf8               res\n+   #89 = Utf8               splitLen\n+   #90 = Utf8               numHasSign\n+   #91 = Utf8               Z\n+   #92 = Utf8               expHasSign\n+   #93 = Utf8               neg\n+   #94 = Utf8               numIdx\n+   #95 = Utf8               expIdx\n+   #96 = Utf8               dotIdx\n+   #97 = Utf8               scale\n+   #98 = Utf8               endIdx\n+   #99 = Utf8               exp\n+  #100 = Class              #70           // \"[C\"\n+  #101 = Utf8               adjustScale\n+  #102 = Utf8               (IJ)I\n+  #103 = Utf8               J\n+  #104 = Utf8               adjScale\n+  #105 = Utf8               toBigDecimalRec\n+  #106 = Utf8               ([CIIII)Ljava/math/BigDecimal;\n+  #107 = Utf8               mid\n+  #108 = Utf8               SourceFile\n+  #109 = Utf8               BigDecimalParser.java\n+  #110 = NameAndType        #53:#54       // \"<init>\":()V\n+  #111 = NameAndType        #154:#155     // toCharArray:()[C\n+  #112 = NameAndType        #60:#75       // parse:([C)Ljava/math/BigDecimal;\n+  #113 = Utf8               java/math/BigDecimal\n+  #114 = NameAndType        #53:#156      // \"<init>\":([CII)V\n+  #115 = NameAndType        #76:#77       // parseBigDecimal:([CIII)Ljava/math/BigDecimal;\n+  #116 = Utf8               java/lang/ArithmeticException\n+  #117 = Utf8               java/lang/NumberFormatException\n+  #118 = NameAndType        #157:#158     // getMessage:()Ljava/lang/String;\n+  #119 = Utf8               Not a valid number representation\n+  #120 = Utf8               com/fasterxml/jackson/core/io/BigDecimalParser\n+  #121 = Utf8               java/lang/String\n+  #122 = Utf8               java/lang/StringBuilder\n+  #123 = Class              #159          // java/util/Arrays\n+  #124 = NameAndType        #160:#161     // copyOfRange:([CII)[C\n+  #125 = NameAndType        #53:#162      // \"<init>\":([C)V\n+  #126 = NameAndType        #163:#164     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #127 = Utf8               (truncated, full length is\n+  #128 = NameAndType        #163:#165     // append:(I)Ljava/lang/StringBuilder;\n+  #129 = Utf8                chars)\n+  #130 = NameAndType        #166:#158     // toString:()Ljava/lang/String;\n+  #131 = Utf8               Value \\\"\n+  #132 = Utf8               \\\" can not be represented as `java.math.BigDecimal`, reason:\n+  #133 = NameAndType        #53:#167      // \"<init>\":(Ljava/lang/String;)V\n+  #134 = NameAndType        #60:#64       // parse:([CII)Ljava/math/BigDecimal;\n+  #135 = Utf8               Multiple signs in exponent\n+  #136 = Utf8               Multiple signs in number\n+  #137 = Utf8               Multiple exponent markers\n+  #138 = Utf8               Multiple decimal points\n+  #139 = NameAndType        #168:#169     // parseInt:(Ljava/lang/String;)I\n+  #140 = NameAndType        #101:#102     // adjustScale:(IJ)I\n+  #141 = NameAndType        #105:#106     // toBigDecimalRec:([CIIII)Ljava/math/BigDecimal;\n+  #142 = NameAndType        #170:#171     // add:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;\n+  #143 = NameAndType        #172:#173     // setScale:(I)Ljava/math/BigDecimal;\n+  #144 = NameAndType        #174:#175     // negate:()Ljava/math/BigDecimal;\n+  #145 = Utf8               java/lang/Integer\n+  #146 = Utf8               Scale out of range:\n+  #147 = NameAndType        #163:#176     // append:(J)Ljava/lang/StringBuilder;\n+  #148 = Utf8                while adjusting scale\n+  #149 = Utf8                to exponent\n+  #150 = NameAndType        #177:#85      // ZERO:Ljava/math/BigDecimal;\n+  #151 = NameAndType        #178:#173     // movePointRight:(I)Ljava/math/BigDecimal;\n+  #152 = Utf8               java/lang/Object\n+  #153 = Utf8               java/lang/RuntimeException\n+  #154 = Utf8               toCharArray\n+  #155 = Utf8               ()[C\n+  #156 = Utf8               ([CII)V\n+  #157 = Utf8               getMessage\n+  #158 = Utf8               ()Ljava/lang/String;\n+  #159 = Utf8               java/util/Arrays\n+  #160 = Utf8               copyOfRange\n+  #161 = Utf8               ([CII)[C\n+  #162 = Utf8               ([C)V\n+  #163 = Utf8               append\n+  #164 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #165 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #166 = Utf8               toString\n+  #167 = Utf8               (Ljava/lang/String;)V\n+  #168 = Utf8               parseInt\n+  #169 = Utf8               (Ljava/lang/String;)I\n+  #170 = Utf8               add\n+  #171 = Utf8               (Ljava/math/BigDecimal;)Ljava/math/BigDecimal;\n+  #172 = Utf8               setScale\n+  #173 = Utf8               (I)Ljava/math/BigDecimal;\n+  #174 = Utf8               negate\n+  #175 = Utf8               ()Ljava/math/BigDecimal;\n+  #176 = Utf8               (J)Ljava/lang/StringBuilder;\n+  #177 = Utf8               ZERO\n+  #178 = Utf8               movePointRight\n {\n   private static final int MAX_CHARS_TO_REPORT = 1000;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 1000\n \n   private com.fasterxml.jackson.core.io.BigDecimalParser();\n"}]}
