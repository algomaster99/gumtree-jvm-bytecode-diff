{"diffoscope-json-version": 1, "source1": "first/PeekableInputStream.class", "source2": "second/PeekableInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,112 +1,111 @@\n-  SHA-256 checksum ff302a0a13c3995815db5213e28cac94a24c9b5cff3f63c3ac40ef4382c34b5e\n+  SHA-256 checksum 16f4e774fc45f6b69c5853b9011ce475b95e40a59a91598ec0768db18b949ffd\n   Compiled from \"PeekableInputStream.java\"\n public class org.apache.commons.io.input.buffer.PeekableInputStream extends org.apache.commons.io.input.buffer.CircularBufferInputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #21                         // org/apache/commons/io/input/buffer/PeekableInputStream\n-  super_class: #22                        // org/apache/commons/io/input/buffer/CircularBufferInputStream\n+  this_class: #1                          // org/apache/commons/io/input/buffer/PeekableInputStream\n+  super_class: #3                         // org/apache/commons/io/input/buffer/CircularBufferInputStream\n   interfaces: 0, fields: 0, methods: 4, attributes: 1\n Constant pool:\n-   #1 = Methodref          #22.#47        // org/apache/commons/io/input/buffer/CircularBufferInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-   #2 = Methodref          #22.#48        // org/apache/commons/io/input/buffer/CircularBufferInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #3 = String             #37            // sourceBuffer\n-   #4 = Methodref          #49.#50        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #5 = Methodref          #21.#51        // org/apache/commons/io/input/buffer/PeekableInputStream.peek:([BII)Z\n-   #6 = Fieldref           #21.#52        // org/apache/commons/io/input/buffer/PeekableInputStream.bufferSize:I\n-   #7 = Class              #53            // java/lang/IllegalArgumentException\n-   #8 = Class              #54            // java/lang/StringBuilder\n-   #9 = Methodref          #8.#55         // java/lang/StringBuilder.\"<init>\":()V\n-  #10 = String             #56            // Peek request size of\n-  #11 = Methodref          #8.#57         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #12 = Methodref          #8.#58         // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-  #13 = String             #59            //  bytes exceeds buffer size of\n-  #14 = String             #60            //  bytes\n-  #15 = Methodref          #8.#61         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #16 = Methodref          #7.#62         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #17 = Fieldref           #21.#63        // org/apache/commons/io/input/buffer/PeekableInputStream.buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-  #18 = Methodref          #64.#65        // org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n-  #19 = Methodref          #21.#66        // org/apache/commons/io/input/buffer/PeekableInputStream.fillBuffer:()V\n-  #20 = Methodref          #64.#51        // org/apache/commons/io/input/buffer/CircularByteBuffer.peek:([BII)Z\n-  #21 = Class              #67            // org/apache/commons/io/input/buffer/PeekableInputStream\n-  #22 = Class              #68            // org/apache/commons/io/input/buffer/CircularBufferInputStream\n-  #23 = Utf8               <init>\n-  #24 = Utf8               (Ljava/io/InputStream;I)V\n-  #25 = Utf8               Code\n-  #26 = Utf8               LineNumberTable\n-  #27 = Utf8               LocalVariableTable\n-  #28 = Utf8               this\n-  #29 = Utf8               Lorg/apache/commons/io/input/buffer/PeekableInputStream;\n-  #30 = Utf8               inputStream\n-  #31 = Utf8               Ljava/io/InputStream;\n-  #32 = Utf8               bufferSize\n-  #33 = Utf8               I\n-  #34 = Utf8               (Ljava/io/InputStream;)V\n-  #35 = Utf8               peek\n-  #36 = Utf8               ([B)Z\n-  #37 = Utf8               sourceBuffer\n-  #38 = Utf8               [B\n-  #39 = Utf8               Exceptions\n-  #40 = Class              #69            // java/io/IOException\n-  #41 = Utf8               ([BII)Z\n-  #42 = Utf8               offset\n-  #43 = Utf8               length\n-  #44 = Utf8               StackMapTable\n-  #45 = Utf8               SourceFile\n-  #46 = Utf8               PeekableInputStream.java\n-  #47 = NameAndType        #23:#24        // \"<init>\":(Ljava/io/InputStream;I)V\n-  #48 = NameAndType        #23:#34        // \"<init>\":(Ljava/io/InputStream;)V\n-  #49 = Class              #70            // java/util/Objects\n-  #50 = NameAndType        #71:#72        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #51 = NameAndType        #35:#41        // peek:([BII)Z\n-  #52 = NameAndType        #32:#33        // bufferSize:I\n-  #53 = Utf8               java/lang/IllegalArgumentException\n-  #54 = Utf8               java/lang/StringBuilder\n-  #55 = NameAndType        #23:#73        // \"<init>\":()V\n-  #56 = Utf8               Peek request size of\n-  #57 = NameAndType        #74:#75        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #58 = NameAndType        #74:#76        // append:(I)Ljava/lang/StringBuilder;\n-  #59 = Utf8                bytes exceeds buffer size of\n-  #60 = Utf8                bytes\n-  #61 = NameAndType        #77:#78        // toString:()Ljava/lang/String;\n-  #62 = NameAndType        #23:#79        // \"<init>\":(Ljava/lang/String;)V\n-  #63 = NameAndType        #80:#81        // buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-  #64 = Class              #82            // org/apache/commons/io/input/buffer/CircularByteBuffer\n-  #65 = NameAndType        #83:#84        // getCurrentNumberOfBytes:()I\n-  #66 = NameAndType        #85:#73        // fillBuffer:()V\n-  #67 = Utf8               org/apache/commons/io/input/buffer/PeekableInputStream\n-  #68 = Utf8               org/apache/commons/io/input/buffer/CircularBufferInputStream\n-  #69 = Utf8               java/io/IOException\n-  #70 = Utf8               java/util/Objects\n-  #71 = Utf8               requireNonNull\n-  #72 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #73 = Utf8               ()V\n-  #74 = Utf8               append\n-  #75 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #76 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #77 = Utf8               toString\n-  #78 = Utf8               ()Ljava/lang/String;\n-  #79 = Utf8               (Ljava/lang/String;)V\n-  #80 = Utf8               buffer\n-  #81 = Utf8               Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-  #82 = Utf8               org/apache/commons/io/input/buffer/CircularByteBuffer\n-  #83 = Utf8               getCurrentNumberOfBytes\n-  #84 = Utf8               ()I\n-  #85 = Utf8               fillBuffer\n+   #1 = Class              #2             // org/apache/commons/io/input/buffer/PeekableInputStream\n+   #2 = Utf8               org/apache/commons/io/input/buffer/PeekableInputStream\n+   #3 = Class              #4             // org/apache/commons/io/input/buffer/CircularBufferInputStream\n+   #4 = Utf8               org/apache/commons/io/input/buffer/CircularBufferInputStream\n+   #5 = Utf8               <init>\n+   #6 = Utf8               (Ljava/io/InputStream;I)V\n+   #7 = Utf8               Code\n+   #8 = Methodref          #3.#9          // org/apache/commons/io/input/buffer/CircularBufferInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+   #9 = NameAndType        #5:#6          // \"<init>\":(Ljava/io/InputStream;I)V\n+  #10 = Utf8               LineNumberTable\n+  #11 = Utf8               LocalVariableTable\n+  #12 = Utf8               this\n+  #13 = Utf8               Lorg/apache/commons/io/input/buffer/PeekableInputStream;\n+  #14 = Utf8               inputStream\n+  #15 = Utf8               Ljava/io/InputStream;\n+  #16 = Utf8               bufferSize\n+  #17 = Utf8               I\n+  #18 = Utf8               (Ljava/io/InputStream;)V\n+  #19 = Methodref          #3.#20         // org/apache/commons/io/input/buffer/CircularBufferInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #20 = NameAndType        #5:#18         // \"<init>\":(Ljava/io/InputStream;)V\n+  #21 = Utf8               peek\n+  #22 = Utf8               ([B)Z\n+  #23 = Utf8               Exceptions\n+  #24 = Class              #25            // java/io/IOException\n+  #25 = Utf8               java/io/IOException\n+  #26 = String             #27            // sourceBuffer\n+  #27 = Utf8               sourceBuffer\n+  #28 = Methodref          #29.#31        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #29 = Class              #30            // java/util/Objects\n+  #30 = Utf8               java/util/Objects\n+  #31 = NameAndType        #32:#33        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #32 = Utf8               requireNonNull\n+  #33 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #34 = Methodref          #1.#35         // org/apache/commons/io/input/buffer/PeekableInputStream.peek:([BII)Z\n+  #35 = NameAndType        #21:#36        // peek:([BII)Z\n+  #36 = Utf8               ([BII)Z\n+  #37 = Utf8               [B\n+  #38 = Fieldref           #1.#39         // org/apache/commons/io/input/buffer/PeekableInputStream.bufferSize:I\n+  #39 = NameAndType        #16:#17        // bufferSize:I\n+  #40 = Class              #41            // java/lang/IllegalArgumentException\n+  #41 = Utf8               java/lang/IllegalArgumentException\n+  #42 = Class              #43            // java/lang/StringBuilder\n+  #43 = Utf8               java/lang/StringBuilder\n+  #44 = String             #45            // Peek request size of\n+  #45 = Utf8               Peek request size of\n+  #46 = Methodref          #42.#47        // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #47 = NameAndType        #5:#48         // \"<init>\":(Ljava/lang/String;)V\n+  #48 = Utf8               (Ljava/lang/String;)V\n+  #49 = Methodref          #42.#50        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #50 = NameAndType        #51:#52        // append:(I)Ljava/lang/StringBuilder;\n+  #51 = Utf8               append\n+  #52 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #53 = String             #54            //  bytes exceeds buffer size of\n+  #54 = Utf8                bytes exceeds buffer size of\n+  #55 = Methodref          #42.#56        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #56 = NameAndType        #51:#57        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #57 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #58 = String             #59            //  bytes\n+  #59 = Utf8                bytes\n+  #60 = Methodref          #42.#61        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #61 = NameAndType        #62:#63        // toString:()Ljava/lang/String;\n+  #62 = Utf8               toString\n+  #63 = Utf8               ()Ljava/lang/String;\n+  #64 = Methodref          #40.#47        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #65 = Fieldref           #1.#66         // org/apache/commons/io/input/buffer/PeekableInputStream.buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+  #66 = NameAndType        #67:#68        // buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+  #67 = Utf8               buffer\n+  #68 = Utf8               Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+  #69 = Methodref          #70.#72        // org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n+  #70 = Class              #71            // org/apache/commons/io/input/buffer/CircularByteBuffer\n+  #71 = Utf8               org/apache/commons/io/input/buffer/CircularByteBuffer\n+  #72 = NameAndType        #73:#74        // getCurrentNumberOfBytes:()I\n+  #73 = Utf8               getCurrentNumberOfBytes\n+  #74 = Utf8               ()I\n+  #75 = Methodref          #1.#76         // org/apache/commons/io/input/buffer/PeekableInputStream.fillBuffer:()V\n+  #76 = NameAndType        #77:#78        // fillBuffer:()V\n+  #77 = Utf8               fillBuffer\n+  #78 = Utf8               ()V\n+  #79 = Methodref          #70.#35        // org/apache/commons/io/input/buffer/CircularByteBuffer.peek:([BII)Z\n+  #80 = Utf8               offset\n+  #81 = Utf8               length\n+  #82 = Utf8               StackMapTable\n+  #83 = Utf8               SourceFile\n+  #84 = Utf8               PeekableInputStream.java\n {\n   public org.apache.commons.io.input.buffer.PeekableInputStream(java.io.InputStream, int);\n     descriptor: (Ljava/io/InputStream;I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: iload_2\n-         3: invokespecial #1                  // Method org/apache/commons/io/input/buffer/CircularBufferInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+         3: invokespecial #8                  // Method org/apache/commons/io/input/buffer/CircularBufferInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n          6: return\n       LineNumberTable:\n         line 36: 0\n         line 37: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/io/input/buffer/PeekableInputStream;\n@@ -116,112 +115,113 @@\n   public org.apache.commons.io.input.buffer.PeekableInputStream(java.io.InputStream);\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #2                  // Method org/apache/commons/io/input/buffer/CircularBufferInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+         2: invokespecial #19                 // Method org/apache/commons/io/input/buffer/CircularBufferInputStream.\"<init>\":(Ljava/io/InputStream;)V\n          5: return\n       LineNumberTable:\n         line 45: 0\n         line 46: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/input/buffer/PeekableInputStream;\n             0       6     1 inputStream   Ljava/io/InputStream;\n \n   public boolean peek(byte[]) throws java.io.IOException;\n     descriptor: ([B)Z\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_1\n-         1: ldc           #3                  // String sourceBuffer\n-         3: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #26                 // String sourceBuffer\n+         3: invokestatic  #28                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: aload_0\n          8: aload_1\n          9: iconst_0\n         10: aload_1\n         11: arraylength\n-        12: invokevirtual #5                  // Method peek:([BII)Z\n+        12: invokevirtual #34                 // Method peek:([BII)Z\n         15: ireturn\n       LineNumberTable:\n         line 57: 0\n         line 58: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0  this   Lorg/apache/commons/io/input/buffer/PeekableInputStream;\n             0      16     1 sourceBuffer   [B\n-    Exceptions:\n-      throws java.io.IOException\n \n   public boolean peek(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)Z\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n-      stack=4, locals=4, args_size=4\n+      stack=5, locals=4, args_size=4\n          0: aload_1\n-         1: ldc           #3                  // String sourceBuffer\n-         3: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #26                 // String sourceBuffer\n+         3: invokestatic  #28                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: aload_1\n          8: arraylength\n          9: aload_0\n-        10: getfield      #6                  // Field bufferSize:I\n-        13: if_icmple     61\n-        16: new           #7                  // class java/lang/IllegalArgumentException\n+        10: getfield      #38                 // Field bufferSize:I\n+        13: if_icmple     58\n+        16: new           #40                 // class java/lang/IllegalArgumentException\n         19: dup\n-        20: new           #8                  // class java/lang/StringBuilder\n+        20: new           #42                 // class java/lang/StringBuilder\n         23: dup\n-        24: invokespecial #9                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        27: ldc           #10                 // String Peek request size of\n-        29: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        32: aload_1\n-        33: arraylength\n-        34: invokevirtual #12                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        37: ldc           #13                 // String  bytes exceeds buffer size of\n-        39: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        42: aload_0\n-        43: getfield      #6                  // Field bufferSize:I\n-        46: invokevirtual #12                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        49: ldc           #14                 // String  bytes\n-        51: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        54: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        57: invokespecial #16                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        60: athrow\n-        61: aload_0\n-        62: getfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-        65: invokevirtual #18                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n-        68: aload_1\n-        69: arraylength\n-        70: if_icmpge     77\n-        73: aload_0\n-        74: invokevirtual #19                 // Method fillBuffer:()V\n-        77: aload_0\n-        78: getfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-        81: aload_1\n-        82: iload_2\n-        83: iload_3\n-        84: invokevirtual #20                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.peek:([BII)Z\n-        87: ireturn\n+        24: ldc           #44                 // String Peek request size of\n+        26: invokespecial #46                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        29: aload_1\n+        30: arraylength\n+        31: invokevirtual #49                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        34: ldc           #53                 // String  bytes exceeds buffer size of\n+        36: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        39: aload_0\n+        40: getfield      #38                 // Field bufferSize:I\n+        43: invokevirtual #49                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        46: ldc           #58                 // String  bytes\n+        48: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        51: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        54: invokespecial #64                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        57: athrow\n+        58: aload_0\n+        59: getfield      #65                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        62: invokevirtual #69                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n+        65: aload_1\n+        66: arraylength\n+        67: if_icmpge     74\n+        70: aload_0\n+        71: invokevirtual #75                 // Method fillBuffer:()V\n+        74: aload_0\n+        75: getfield      #65                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        78: aload_1\n+        79: iload_2\n+        80: iload_3\n+        81: invokevirtual #79                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.peek:([BII)Z\n+        84: ireturn\n       LineNumberTable:\n         line 72: 0\n         line 73: 7\n         line 74: 16\n-        line 77: 61\n-        line 78: 73\n-        line 80: 77\n+        line 75: 34\n+        line 74: 54\n+        line 77: 58\n+        line 78: 70\n+        line 80: 74\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      88     0  this   Lorg/apache/commons/io/input/buffer/PeekableInputStream;\n-            0      88     1 sourceBuffer   [B\n-            0      88     2 offset   I\n-            0      88     3 length   I\n+            0      85     0  this   Lorg/apache/commons/io/input/buffer/PeekableInputStream;\n+            0      85     1 sourceBuffer   [B\n+            0      85     2 offset   I\n+            0      85     3 length   I\n       StackMapTable: number_of_entries = 2\n-        frame_type = 61 /* same */\n+        frame_type = 58 /* same */\n         frame_type = 15 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"PeekableInputStream.java\"\n"}]}
