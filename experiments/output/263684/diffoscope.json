{"diffoscope-json-version": 1, "source1": "first/ThreadContainer.class", "source2": "second/ThreadContainer.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -4,16 +4,16 @@\n class ThreadContainer\n {\n     Threadable threadable;\n     ThreadContainer parent;\n     ThreadContainer next;\n     ThreadContainer child;\n     \n-    boolean findChild(final ThreadContainer target) {\n-        return this.child != null && (this.child == target || this.child.findChild(target));\n+    boolean findChild(final ThreadContainer threadContainer) {\n+        return this.child != null && (this.child == threadContainer || this.child.findChild(threadContainer));\n     }\n     \n     void flush() {\n         if (this.parent != null && this.threadable == null) {\n             throw new RuntimeException(\"no threadable in \" + this.toString());\n         }\n         this.parent = null;\n@@ -32,19 +32,19 @@\n             this.next = null;\n         }\n         this.threadable = null;\n     }\n     \n     void reverseChildren() {\n         if (this.child != null) {\n-            ThreadContainer prev = null;\n-            for (ThreadContainer kid = this.child, rest = kid.next; kid != null; kid = rest, rest = ((rest == null) ? null : rest.next)) {\n-                kid.next = prev;\n-                prev = kid;\n+            ThreadContainer threadContainer = null;\n+            for (ThreadContainer child = this.child, next = child.next; child != null; child = next, next = ((next == null) ? null : next.next)) {\n+                child.next = threadContainer;\n+                threadContainer = child;\n             }\n-            this.child = prev;\n-            for (ThreadContainer kid = this.child; kid != null; kid = kid.next) {\n-                kid.reverseChildren();\n+            this.child = threadContainer;\n+            for (ThreadContainer threadContainer2 = this.child; threadContainer2 != null; threadContainer2 = threadContainer2.next) {\n+                threadContainer2.reverseChildren();\n             }\n         }\n     }\n }\n"}]}
