{"diffoscope-json-version": 1, "source1": "first/HiddenFileFilter.class", "source2": "second/HiddenFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,85 +1,85 @@\n-  SHA-256 checksum 8acab78e2f700163b17daf7608cf7db8d0a571103d7be87182c1bab4af379ae4\n+  SHA-256 checksum 425071c90881f25b2bb17cd4af5b2bffecd09de384d57cdbafd6a17ea8173e73\n   Compiled from \"HiddenFileFilter.java\"\n public class org.apache.commons.io.filefilter.HiddenFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #7                          // org/apache/commons/io/filefilter/HiddenFileFilter\n-  super_class: #12                        // org/apache/commons/io/filefilter/AbstractFileFilter\n+  this_class: #19                         // org/apache/commons/io/filefilter/HiddenFileFilter\n+  super_class: #2                         // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 1, fields: 3, methods: 4, attributes: 1\n Constant pool:\n-   #1 = Methodref          #12.#43        // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-   #2 = Methodref          #44.#45        // java/io/File.isHidden:()Z\n-   #3 = Methodref          #46.#47        // java/nio/file/Files.isHidden:(Ljava/nio/file/Path;)Z\n-   #4 = Methodref          #7.#48         // org/apache/commons/io/filefilter/HiddenFileFilter.toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-   #5 = Class              #49            // java/io/IOException\n-   #6 = Methodref          #7.#50         // org/apache/commons/io/filefilter/HiddenFileFilter.handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-   #7 = Class              #51            // org/apache/commons/io/filefilter/HiddenFileFilter\n-   #8 = Methodref          #7.#43         // org/apache/commons/io/filefilter/HiddenFileFilter.\"<init>\":()V\n-   #9 = Fieldref           #7.#52         // org/apache/commons/io/filefilter/HiddenFileFilter.HIDDEN:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #10 = InterfaceMethodref #53.#54        // org/apache/commons/io/filefilter/IOFileFilter.negate:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #11 = Fieldref           #7.#55         // org/apache/commons/io/filefilter/HiddenFileFilter.VISIBLE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #12 = Class              #56            // org/apache/commons/io/filefilter/AbstractFileFilter\n-  #13 = Class              #57            // java/io/Serializable\n-  #14 = Utf8               HIDDEN\n-  #15 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #16 = Utf8               serialVersionUID\n-  #17 = Utf8               J\n-  #18 = Utf8               ConstantValue\n-  #19 = Long               8930842316112759062l\n-  #21 = Utf8               VISIBLE\n-  #22 = Utf8               <init>\n-  #23 = Utf8               ()V\n-  #24 = Utf8               Code\n-  #25 = Utf8               LineNumberTable\n-  #26 = Utf8               LocalVariableTable\n-  #27 = Utf8               this\n-  #28 = Utf8               Lorg/apache/commons/io/filefilter/HiddenFileFilter;\n-  #29 = Utf8               accept\n-  #30 = Utf8               (Ljava/io/File;)Z\n-  #31 = Utf8               file\n-  #32 = Utf8               Ljava/io/File;\n-  #33 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #34 = Utf8               e\n-  #35 = Utf8               Ljava/io/IOException;\n-  #36 = Utf8               Ljava/nio/file/Path;\n-  #37 = Utf8               attributes\n-  #38 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n-  #39 = Utf8               StackMapTable\n-  #40 = Utf8               <clinit>\n-  #41 = Utf8               SourceFile\n-  #42 = Utf8               HiddenFileFilter.java\n-  #43 = NameAndType        #22:#23        // \"<init>\":()V\n-  #44 = Class              #58            // java/io/File\n-  #45 = NameAndType        #59:#60        // isHidden:()Z\n-  #46 = Class              #61            // java/nio/file/Files\n-  #47 = NameAndType        #59:#62        // isHidden:(Ljava/nio/file/Path;)Z\n-  #48 = NameAndType        #63:#64        // toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-  #49 = Utf8               java/io/IOException\n-  #50 = NameAndType        #65:#66        // handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-  #51 = Utf8               org/apache/commons/io/filefilter/HiddenFileFilter\n-  #52 = NameAndType        #14:#15        // HIDDEN:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #53 = Class              #67            // org/apache/commons/io/filefilter/IOFileFilter\n-  #54 = NameAndType        #68:#69        // negate:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #55 = NameAndType        #21:#15        // VISIBLE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #56 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-  #57 = Utf8               java/io/Serializable\n-  #58 = Utf8               java/io/File\n-  #59 = Utf8               isHidden\n-  #60 = Utf8               ()Z\n-  #61 = Utf8               java/nio/file/Files\n-  #62 = Utf8               (Ljava/nio/file/Path;)Z\n-  #63 = Utf8               toFileVisitResult\n-  #64 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-  #65 = Utf8               handle\n-  #66 = Utf8               (Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-  #67 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n-  #68 = Utf8               negate\n-  #69 = Utf8               ()Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #1 = Methodref          #2.#3          // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+   #2 = Class              #4             // org/apache/commons/io/filefilter/AbstractFileFilter\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Methodref          #8.#9          // java/io/File.isHidden:()Z\n+   #8 = Class              #10            // java/io/File\n+   #9 = NameAndType        #11:#12        // isHidden:()Z\n+  #10 = Utf8               java/io/File\n+  #11 = Utf8               isHidden\n+  #12 = Utf8               ()Z\n+  #13 = Methodref          #14.#15        // java/nio/file/Files.isHidden:(Ljava/nio/file/Path;)Z\n+  #14 = Class              #16            // java/nio/file/Files\n+  #15 = NameAndType        #11:#17        // isHidden:(Ljava/nio/file/Path;)Z\n+  #16 = Utf8               java/nio/file/Files\n+  #17 = Utf8               (Ljava/nio/file/Path;)Z\n+  #18 = Methodref          #19.#20        // org/apache/commons/io/filefilter/HiddenFileFilter.toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #19 = Class              #21            // org/apache/commons/io/filefilter/HiddenFileFilter\n+  #20 = NameAndType        #22:#23        // toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #21 = Utf8               org/apache/commons/io/filefilter/HiddenFileFilter\n+  #22 = Utf8               toFileVisitResult\n+  #23 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #24 = Class              #25            // java/io/IOException\n+  #25 = Utf8               java/io/IOException\n+  #26 = Methodref          #19.#27        // org/apache/commons/io/filefilter/HiddenFileFilter.handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+  #27 = NameAndType        #28:#29        // handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+  #28 = Utf8               handle\n+  #29 = Utf8               (Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+  #30 = Methodref          #19.#3         // org/apache/commons/io/filefilter/HiddenFileFilter.\"<init>\":()V\n+  #31 = Fieldref           #19.#32        // org/apache/commons/io/filefilter/HiddenFileFilter.HIDDEN:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #32 = NameAndType        #33:#34        // HIDDEN:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #33 = Utf8               HIDDEN\n+  #34 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #35 = InterfaceMethodref #36.#37        // org/apache/commons/io/filefilter/IOFileFilter.negate:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #36 = Class              #38            // org/apache/commons/io/filefilter/IOFileFilter\n+  #37 = NameAndType        #39:#40        // negate:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #38 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n+  #39 = Utf8               negate\n+  #40 = Utf8               ()Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #41 = Fieldref           #19.#42        // org/apache/commons/io/filefilter/HiddenFileFilter.VISIBLE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #42 = NameAndType        #43:#34        // VISIBLE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #43 = Utf8               VISIBLE\n+  #44 = Class              #45            // java/io/Serializable\n+  #45 = Utf8               java/io/Serializable\n+  #46 = Utf8               serialVersionUID\n+  #47 = Utf8               J\n+  #48 = Utf8               ConstantValue\n+  #49 = Long               8930842316112759062l\n+  #51 = Utf8               Code\n+  #52 = Utf8               LineNumberTable\n+  #53 = Utf8               LocalVariableTable\n+  #54 = Utf8               this\n+  #55 = Utf8               Lorg/apache/commons/io/filefilter/HiddenFileFilter;\n+  #56 = Utf8               accept\n+  #57 = Utf8               (Ljava/io/File;)Z\n+  #58 = Utf8               file\n+  #59 = Utf8               Ljava/io/File;\n+  #60 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #61 = Utf8               e\n+  #62 = Utf8               Ljava/io/IOException;\n+  #63 = Utf8               Ljava/nio/file/Path;\n+  #64 = Utf8               attributes\n+  #65 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n+  #66 = Utf8               StackMapTable\n+  #67 = Utf8               <clinit>\n+  #68 = Utf8               SourceFile\n+  #69 = Utf8               HiddenFileFilter.java\n {\n   public static final org.apache.commons.io.filefilter.IOFileFilter HIDDEN;\n     descriptor: Lorg/apache/commons/io/filefilter/IOFileFilter;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   private static final long serialVersionUID = 8930842316112759062l;\n     descriptor: J\n@@ -107,37 +107,37 @@\n \n   public boolean accept(java.io.File);\n     descriptor: (Ljava/io/File;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_1\n-         1: invokevirtual #2                  // Method java/io/File.isHidden:()Z\n+         1: invokevirtual #7                  // Method java/io/File.isHidden:()Z\n          4: ireturn\n       LineNumberTable:\n         line 101: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/filefilter/HiddenFileFilter;\n             0       5     1  file   Ljava/io/File;\n \n   public java.nio.file.FileVisitResult accept(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes);\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=4, args_size=3\n          0: aload_1\n-         1: invokestatic  #3                  // Method java/nio/file/Files.isHidden:(Ljava/nio/file/Path;)Z\n+         1: invokestatic  #13                 // Method java/nio/file/Files.isHidden:(Ljava/nio/file/Path;)Z\n          4: aload_1\n-         5: invokestatic  #4                  // Method toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+         5: invokestatic  #18                 // Method toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n          8: areturn\n          9: astore_3\n         10: aload_0\n         11: aload_3\n-        12: invokevirtual #6                  // Method handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+        12: invokevirtual #26                 // Method handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n         15: areturn\n       Exception table:\n          from    to  target type\n              0     8     9   Class java/io/IOException\n       LineNumberTable:\n         line 115: 0\n         line 116: 9\n@@ -153,20 +153,20 @@\n           stack = [ class java/io/IOException ]\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: new           #7                  // class org/apache/commons/io/filefilter/HiddenFileFilter\n+         0: new           #19                 // class org/apache/commons/io/filefilter/HiddenFileFilter\n          3: dup\n-         4: invokespecial #8                  // Method \"<init>\":()V\n-         7: putstatic     #9                  // Field HIDDEN:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-        10: getstatic     #9                  // Field HIDDEN:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-        13: invokeinterface #10,  1           // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.negate:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n-        18: putstatic     #11                 // Field VISIBLE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+         4: invokespecial #30                 // Method \"<init>\":()V\n+         7: putstatic     #31                 // Field HIDDEN:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        10: getstatic     #31                 // Field HIDDEN:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        13: invokeinterface #35,  1           // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.negate:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        18: putstatic     #41                 // Field VISIBLE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n         21: return\n       LineNumberTable:\n         line 79: 0\n         line 84: 10\n }\n SourceFile: \"HiddenFileFilter.java\"\n"}]}
