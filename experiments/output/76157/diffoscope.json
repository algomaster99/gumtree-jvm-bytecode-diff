{"diffoscope-json-version": 1, "source1": "first/WindowsLineEndingInputStream.class", "source2": "second/WindowsLineEndingInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,83 +1,81 @@\n-  SHA-256 checksum df8758d67ee7e8654a0583e42885423a6e95946018a230451417dede29c59c52\n+  SHA-256 checksum ab86e560e2720283e4cb59f6031a0f801c279b6b71dc56641fe5645a4a21d4b5\n   Compiled from \"WindowsLineEndingInputStream.java\"\n public class org.apache.commons.io.input.WindowsLineEndingInputStream extends java.io.InputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #10                         // org/apache/commons/io/input/WindowsLineEndingInputStream\n-  super_class: #4                         // java/io/InputStream\n+  this_class: #1                          // org/apache/commons/io/input/WindowsLineEndingInputStream\n+  super_class: #3                         // java/io/InputStream\n   interfaces: 0, fields: 6, methods: 6, attributes: 1\n Constant pool:\n-   #1 = Class              #2             // org/apache/commons/io/IOUtils\n-   #2 = Utf8               org/apache/commons/io/IOUtils\n-   #3 = Methodref          #4.#5          // java/io/InputStream.\"<init>\":()V\n-   #4 = Class              #6             // java/io/InputStream\n-   #5 = NameAndType        #7:#8          // \"<init>\":()V\n-   #6 = Utf8               java/io/InputStream\n-   #7 = Utf8               <init>\n-   #8 = Utf8               ()V\n-   #9 = Fieldref           #10.#11        // org/apache/commons/io/input/WindowsLineEndingInputStream.target:Ljava/io/InputStream;\n-  #10 = Class              #12            // org/apache/commons/io/input/WindowsLineEndingInputStream\n-  #11 = NameAndType        #13:#14        // target:Ljava/io/InputStream;\n-  #12 = Utf8               org/apache/commons/io/input/WindowsLineEndingInputStream\n-  #13 = Utf8               target\n-  #14 = Utf8               Ljava/io/InputStream;\n-  #15 = Fieldref           #10.#16        // org/apache/commons/io/input/WindowsLineEndingInputStream.ensureLineFeedAtEndOfFile:Z\n-  #16 = NameAndType        #17:#18        // ensureLineFeedAtEndOfFile:Z\n-  #17 = Utf8               ensureLineFeedAtEndOfFile\n-  #18 = Utf8               Z\n-  #19 = Methodref          #4.#20         // java/io/InputStream.read:()I\n-  #20 = NameAndType        #21:#22        // read:()I\n-  #21 = Utf8               read\n-  #22 = Utf8               ()I\n-  #23 = Fieldref           #10.#24        // org/apache/commons/io/input/WindowsLineEndingInputStream.eofSeen:Z\n-  #24 = NameAndType        #25:#18        // eofSeen:Z\n-  #25 = Utf8               eofSeen\n-  #26 = Fieldref           #10.#27        // org/apache/commons/io/input/WindowsLineEndingInputStream.slashRSeen:Z\n-  #27 = NameAndType        #28:#18        // slashRSeen:Z\n-  #28 = Utf8               slashRSeen\n-  #29 = Fieldref           #10.#30        // org/apache/commons/io/input/WindowsLineEndingInputStream.slashNSeen:Z\n-  #30 = NameAndType        #31:#18        // slashNSeen:Z\n-  #31 = Utf8               slashNSeen\n-  #32 = Methodref          #10.#33        // org/apache/commons/io/input/WindowsLineEndingInputStream.eofGame:()I\n-  #33 = NameAndType        #34:#22        // eofGame:()I\n-  #34 = Utf8               eofGame\n-  #35 = Fieldref           #10.#36        // org/apache/commons/io/input/WindowsLineEndingInputStream.injectSlashN:Z\n-  #36 = NameAndType        #37:#18        // injectSlashN:Z\n-  #37 = Utf8               injectSlashN\n-  #38 = Methodref          #10.#39        // org/apache/commons/io/input/WindowsLineEndingInputStream.readWithUpdate:()I\n-  #39 = NameAndType        #40:#22        // readWithUpdate:()I\n-  #40 = Utf8               readWithUpdate\n-  #41 = Methodref          #4.#42         // java/io/InputStream.close:()V\n-  #42 = NameAndType        #43:#8         // close:()V\n-  #43 = Utf8               close\n-  #44 = Methodref          #45.#46        // org/apache/commons/io/input/UnsupportedOperationExceptions.mark:()Ljava/lang/UnsupportedOperationException;\n-  #45 = Class              #47            // org/apache/commons/io/input/UnsupportedOperationExceptions\n-  #46 = NameAndType        #48:#49        // mark:()Ljava/lang/UnsupportedOperationException;\n-  #47 = Utf8               org/apache/commons/io/input/UnsupportedOperationExceptions\n-  #48 = Utf8               mark\n-  #49 = Utf8               ()Ljava/lang/UnsupportedOperationException;\n-  #50 = Utf8               (Ljava/io/InputStream;Z)V\n-  #51 = Utf8               Code\n-  #52 = Utf8               LineNumberTable\n-  #53 = Utf8               LocalVariableTable\n-  #54 = Utf8               this\n-  #55 = Utf8               Lorg/apache/commons/io/input/WindowsLineEndingInputStream;\n-  #56 = Utf8               in\n-  #57 = Utf8               I\n-  #58 = Utf8               StackMapTable\n-  #59 = Utf8               Exceptions\n-  #60 = Class              #61            // java/io/IOException\n-  #61 = Utf8               java/io/IOException\n-  #62 = Utf8               prevWasSlashR\n-  #63 = Utf8               (I)V\n-  #64 = Utf8               readlimit\n-  #65 = Utf8               SourceFile\n-  #66 = Utf8               WindowsLineEndingInputStream.java\n+   #1 = Class              #2             // org/apache/commons/io/input/WindowsLineEndingInputStream\n+   #2 = Utf8               org/apache/commons/io/input/WindowsLineEndingInputStream\n+   #3 = Class              #4             // java/io/InputStream\n+   #4 = Utf8               java/io/InputStream\n+   #5 = Utf8               slashRSeen\n+   #6 = Utf8               Z\n+   #7 = Utf8               slashNSeen\n+   #8 = Utf8               injectSlashN\n+   #9 = Utf8               eofSeen\n+  #10 = Utf8               target\n+  #11 = Utf8               Ljava/io/InputStream;\n+  #12 = Utf8               ensureLineFeedAtEndOfFile\n+  #13 = Utf8               <init>\n+  #14 = Utf8               (Ljava/io/InputStream;Z)V\n+  #15 = Utf8               Code\n+  #16 = Methodref          #3.#17         // java/io/InputStream.\"<init>\":()V\n+  #17 = NameAndType        #13:#18        // \"<init>\":()V\n+  #18 = Utf8               ()V\n+  #19 = Fieldref           #1.#20         // org/apache/commons/io/input/WindowsLineEndingInputStream.target:Ljava/io/InputStream;\n+  #20 = NameAndType        #10:#11        // target:Ljava/io/InputStream;\n+  #21 = Fieldref           #1.#22         // org/apache/commons/io/input/WindowsLineEndingInputStream.ensureLineFeedAtEndOfFile:Z\n+  #22 = NameAndType        #12:#6         // ensureLineFeedAtEndOfFile:Z\n+  #23 = Utf8               LineNumberTable\n+  #24 = Utf8               LocalVariableTable\n+  #25 = Utf8               this\n+  #26 = Utf8               Lorg/apache/commons/io/input/WindowsLineEndingInputStream;\n+  #27 = Utf8               in\n+  #28 = Utf8               readWithUpdate\n+  #29 = Utf8               ()I\n+  #30 = Utf8               Exceptions\n+  #31 = Class              #32            // java/io/IOException\n+  #32 = Utf8               java/io/IOException\n+  #33 = Methodref          #3.#34         // java/io/InputStream.read:()I\n+  #34 = NameAndType        #35:#29        // read:()I\n+  #35 = Utf8               read\n+  #36 = Fieldref           #1.#37         // org/apache/commons/io/input/WindowsLineEndingInputStream.eofSeen:Z\n+  #37 = NameAndType        #9:#6          // eofSeen:Z\n+  #38 = Fieldref           #1.#39         // org/apache/commons/io/input/WindowsLineEndingInputStream.slashRSeen:Z\n+  #39 = NameAndType        #5:#6          // slashRSeen:Z\n+  #40 = Fieldref           #1.#41         // org/apache/commons/io/input/WindowsLineEndingInputStream.slashNSeen:Z\n+  #41 = NameAndType        #7:#6          // slashNSeen:Z\n+  #42 = Utf8               I\n+  #43 = Utf8               StackMapTable\n+  #44 = Methodref          #1.#45         // org/apache/commons/io/input/WindowsLineEndingInputStream.eofGame:()I\n+  #45 = NameAndType        #46:#29        // eofGame:()I\n+  #46 = Utf8               eofGame\n+  #47 = Fieldref           #1.#48         // org/apache/commons/io/input/WindowsLineEndingInputStream.injectSlashN:Z\n+  #48 = NameAndType        #8:#6          // injectSlashN:Z\n+  #49 = Methodref          #1.#50         // org/apache/commons/io/input/WindowsLineEndingInputStream.readWithUpdate:()I\n+  #50 = NameAndType        #28:#29        // readWithUpdate:()I\n+  #51 = Utf8               prevWasSlashR\n+  #52 = Utf8               close\n+  #53 = Methodref          #3.#54         // java/io/InputStream.close:()V\n+  #54 = NameAndType        #52:#18        // close:()V\n+  #55 = Utf8               mark\n+  #56 = Utf8               (I)V\n+  #57 = Methodref          #58.#60        // org/apache/commons/io/input/UnsupportedOperationExceptions.mark:()Ljava/lang/UnsupportedOperationException;\n+  #58 = Class              #59            // org/apache/commons/io/input/UnsupportedOperationExceptions\n+  #59 = Utf8               org/apache/commons/io/input/UnsupportedOperationExceptions\n+  #60 = NameAndType        #55:#61        // mark:()Ljava/lang/UnsupportedOperationException;\n+  #61 = Utf8               ()Ljava/lang/UnsupportedOperationException;\n+  #62 = Utf8               readlimit\n+  #63 = Utf8               SourceFile\n+  #64 = Utf8               WindowsLineEndingInputStream.java\n {\n   private boolean slashRSeen;\n     descriptor: Z\n     flags: (0x0002) ACC_PRIVATE\n \n   private boolean slashNSeen;\n     descriptor: Z\n@@ -101,21 +99,21 @@\n \n   public org.apache.commons.io.input.WindowsLineEndingInputStream(java.io.InputStream, boolean);\n     descriptor: (Ljava/io/InputStream;Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #3                  // Method java/io/InputStream.\"<init>\":()V\n+         1: invokespecial #16                 // Method java/io/InputStream.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #9                  // Field target:Ljava/io/InputStream;\n+         6: putfield      #19                 // Field target:Ljava/io/InputStream;\n          9: aload_0\n         10: iload_2\n-        11: putfield      #15                 // Field ensureLineFeedAtEndOfFile:Z\n+        11: putfield      #21                 // Field ensureLineFeedAtEndOfFile:Z\n         14: return\n       LineNumberTable:\n         line 51: 0\n         line 52: 4\n         line 53: 9\n         line 54: 14\n       LocalVariableTable:\n@@ -123,49 +121,51 @@\n             0      15     0  this   Lorg/apache/commons/io/input/WindowsLineEndingInputStream;\n             0      15     1    in   Ljava/io/InputStream;\n             0      15     2 ensureLineFeedAtEndOfFile   Z\n \n   private int readWithUpdate() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field target:Ljava/io/InputStream;\n-         4: invokevirtual #19                 // Method java/io/InputStream.read:()I\n+         1: getfield      #19                 // Field target:Ljava/io/InputStream;\n+         4: invokevirtual #33                 // Method java/io/InputStream.read:()I\n          7: istore_1\n          8: aload_0\n          9: iload_1\n         10: iconst_m1\n         11: if_icmpne     18\n         14: iconst_1\n         15: goto          19\n         18: iconst_0\n-        19: putfield      #23                 // Field eofSeen:Z\n+        19: putfield      #36                 // Field eofSeen:Z\n         22: aload_0\n-        23: getfield      #23                 // Field eofSeen:Z\n+        23: getfield      #36                 // Field eofSeen:Z\n         26: ifeq          31\n         29: iload_1\n         30: ireturn\n         31: aload_0\n         32: iload_1\n         33: bipush        13\n         35: if_icmpne     42\n         38: iconst_1\n         39: goto          43\n         42: iconst_0\n-        43: putfield      #26                 // Field slashRSeen:Z\n+        43: putfield      #38                 // Field slashRSeen:Z\n         46: aload_0\n         47: iload_1\n         48: bipush        10\n         50: if_icmpne     57\n         53: iconst_1\n         54: goto          58\n         57: iconst_0\n-        58: putfield      #29                 // Field slashNSeen:Z\n+        58: putfield      #40                 // Field slashNSeen:Z\n         61: iload_1\n         62: ireturn\n       LineNumberTable:\n         line 62: 0\n         line 63: 8\n         line 64: 22\n         line 65: 29\n@@ -194,56 +194,56 @@\n           stack = [ class org/apache/commons/io/input/WindowsLineEndingInputStream, int ]\n         frame_type = 77 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/io/input/WindowsLineEndingInputStream ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = [ class org/apache/commons/io/input/WindowsLineEndingInputStream, int ]\n           stack = [ class org/apache/commons/io/input/WindowsLineEndingInputStream, int ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n-         1: getfield      #23                 // Field eofSeen:Z\n+         1: getfield      #36                 // Field eofSeen:Z\n          4: ifeq          12\n          7: aload_0\n-         8: invokespecial #32                 // Method eofGame:()I\n+         8: invokespecial #44                 // Method eofGame:()I\n         11: ireturn\n         12: aload_0\n-        13: getfield      #35                 // Field injectSlashN:Z\n+        13: getfield      #47                 // Field injectSlashN:Z\n         16: ifeq          27\n         19: aload_0\n         20: iconst_0\n-        21: putfield      #35                 // Field injectSlashN:Z\n+        21: putfield      #47                 // Field injectSlashN:Z\n         24: bipush        10\n         26: ireturn\n         27: aload_0\n-        28: getfield      #26                 // Field slashRSeen:Z\n+        28: getfield      #38                 // Field slashRSeen:Z\n         31: istore_1\n         32: aload_0\n-        33: invokespecial #38                 // Method readWithUpdate:()I\n+        33: invokespecial #49                 // Method readWithUpdate:()I\n         36: istore_2\n         37: aload_0\n-        38: getfield      #23                 // Field eofSeen:Z\n+        38: getfield      #36                 // Field eofSeen:Z\n         41: ifeq          49\n         44: aload_0\n-        45: invokespecial #32                 // Method eofGame:()I\n+        45: invokespecial #44                 // Method eofGame:()I\n         48: ireturn\n         49: iload_2\n         50: bipush        10\n         52: if_icmpne     67\n         55: iload_1\n         56: ifne          67\n         59: aload_0\n         60: iconst_1\n-        61: putfield      #35                 // Field injectSlashN:Z\n+        61: putfield      #47                 // Field injectSlashN:Z\n         64: bipush        13\n         66: ireturn\n         67: iload_2\n         68: ireturn\n       LineNumberTable:\n         line 77: 0\n         line 78: 7\n@@ -266,47 +266,45 @@\n       StackMapTable: number_of_entries = 4\n         frame_type = 12 /* same */\n         frame_type = 14 /* same */\n         frame_type = 253 /* append */\n           offset_delta = 21\n           locals = [ int, int ]\n         frame_type = 17 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   private int eofGame();\n     descriptor: ()I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #15                 // Field ensureLineFeedAtEndOfFile:Z\n+         1: getfield      #21                 // Field ensureLineFeedAtEndOfFile:Z\n          4: ifne          9\n          7: iconst_m1\n          8: ireturn\n          9: aload_0\n-        10: getfield      #29                 // Field slashNSeen:Z\n+        10: getfield      #40                 // Field slashNSeen:Z\n         13: ifne          31\n         16: aload_0\n-        17: getfield      #26                 // Field slashRSeen:Z\n+        17: getfield      #38                 // Field slashRSeen:Z\n         20: ifne          31\n         23: aload_0\n         24: iconst_1\n-        25: putfield      #26                 // Field slashRSeen:Z\n+        25: putfield      #38                 // Field slashRSeen:Z\n         28: bipush        13\n         30: ireturn\n         31: aload_0\n-        32: getfield      #29                 // Field slashNSeen:Z\n+        32: getfield      #40                 // Field slashNSeen:Z\n         35: ifne          51\n         38: aload_0\n         39: iconst_0\n-        40: putfield      #26                 // Field slashRSeen:Z\n+        40: putfield      #38                 // Field slashRSeen:Z\n         43: aload_0\n         44: iconst_1\n-        45: putfield      #29                 // Field slashNSeen:Z\n+        45: putfield      #40                 // Field slashNSeen:Z\n         48: bipush        10\n         50: ireturn\n         51: iconst_m1\n         52: ireturn\n       LineNumberTable:\n         line 101: 0\n         line 102: 7\n@@ -325,38 +323,38 @@\n         frame_type = 9 /* same */\n         frame_type = 21 /* same */\n         frame_type = 19 /* same */\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #41                 // Method java/io/InputStream.close:()V\n+         1: invokespecial #53                 // Method java/io/InputStream.close:()V\n          4: aload_0\n-         5: getfield      #9                  // Field target:Ljava/io/InputStream;\n-         8: invokevirtual #41                 // Method java/io/InputStream.close:()V\n+         5: getfield      #19                 // Field target:Ljava/io/InputStream;\n+         8: invokevirtual #53                 // Method java/io/InputStream.close:()V\n         11: return\n       LineNumberTable:\n         line 122: 0\n         line 123: 4\n         line 124: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/io/input/WindowsLineEndingInputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public synchronized void mark(int);\n     descriptor: (I)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=1, locals=2, args_size=2\n-         0: invokestatic  #44                 // Method org/apache/commons/io/input/UnsupportedOperationExceptions.mark:()Ljava/lang/UnsupportedOperationException;\n+         0: invokestatic  #57                 // Method org/apache/commons/io/input/UnsupportedOperationExceptions.mark:()Ljava/lang/UnsupportedOperationException;\n          3: athrow\n       LineNumberTable:\n         line 131: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       4     0  this   Lorg/apache/commons/io/input/WindowsLineEndingInputStream;\n             0       4     1 readlimit   I\n"}]}
