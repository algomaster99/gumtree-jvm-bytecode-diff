{"diffoscope-json-version": 1, "source1": "first/CodeException.class", "source2": "second/CodeException.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -11,14 +11,18 @@\n {\n     static final CodeException[] EMPTY_CODE_EXCEPTION_ARRAY;\n     private int startPc;\n     private int endPc;\n     private int handlerPc;\n     private int catchType;\n     \n+    static {\n+        EMPTY_CODE_EXCEPTION_ARRAY = new CodeException[0];\n+    }\n+    \n     public CodeException(final CodeException c) {\n         this(c.getStartPC(), c.getEndPC(), c.getHandlerPC(), c.getCatchType());\n     }\n     \n     CodeException(final DataInput file) throws IOException {\n         this(file.readUnsignedShort(), file.readUnsignedShort(), file.readUnsignedShort(), file.readUnsignedShort());\n     }\n@@ -93,16 +97,12 @@\n     \n     public String toString(final ConstantPool cp, final boolean verbose) {\n         String str;\n         if (this.catchType == 0) {\n             str = \"<Any exception>(0)\";\n         }\n         else {\n-            str = Utility.compactClassName(cp.getConstantString(this.catchType, (byte)7), false) + (verbose ? (\"(\" + this.catchType + \")\") : \"\");\n+            str = String.valueOf(Utility.compactClassName(cp.getConstantString(this.catchType, (byte)7), false)) + (verbose ? (\"(\" + this.catchType + \")\") : \"\");\n         }\n-        return this.startPc + \"\\t\" + this.endPc + \"\\t\" + this.handlerPc + \"\\t\" + str;\n-    }\n-    \n-    static {\n-        EMPTY_CODE_EXCEPTION_ARRAY = new CodeException[0];\n+        return String.valueOf(this.startPc) + \"\\t\" + this.endPc + \"\\t\" + this.handlerPc + \"\\t\" + str;\n     }\n }\n"}]}
