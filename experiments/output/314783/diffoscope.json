{"diffoscope-json-version": 1, "source1": "first/IOExceptionList.class", "source2": "second/IOExceptionList.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,278 +1,278 @@\n-  SHA-256 checksum b36ab1506b9d9ea7cde3542102d5f67f6fee0f36e835348bd1e4ada03bdd9edb\n+  SHA-256 checksum e609de5d7f7f6dfd73c05ecad2ff5f8e0870a5e343c54455af42a030d601d631\n   Compiled from \"IOExceptionList.java\"\n public class org.apache.commons.io.IOExceptionList extends java.io.IOException implements java.lang.Iterable<java.lang.Throwable>\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #2                          // org/apache/commons/io/IOExceptionList\n-  super_class: #21                        // java/io/IOException\n+  super_class: #53                        // java/io/IOException\n   interfaces: 1, fields: 2, methods: 11, attributes: 2\n Constant pool:\n-    #1 = Methodref          #2.#71        // org/apache/commons/io/IOExceptionList.isEmpty:(Ljava/util/List;)Z\n-    #2 = Class              #72           // org/apache/commons/io/IOExceptionList\n-    #3 = Methodref          #73.#74       // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-    #4 = Methodref          #2.#75        // org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n-    #5 = Methodref          #2.#76        // org/apache/commons/io/IOExceptionList.size:(Ljava/util/List;)I\n-    #6 = InterfaceMethodref #53.#77       // java/util/List.size:()I\n-    #7 = String             #78           // %,d exception(s): %s\n-    #8 = Class              #79           // java/lang/Object\n-    #9 = Methodref          #80.#81       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #10 = Methodref          #52.#82       // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #11 = Methodref          #2.#83        // org/apache/commons/io/IOExceptionList.toMessage:(Ljava/util/List;)Ljava/lang/String;\n-   #12 = InterfaceMethodref #53.#84       // java/util/List.get:(I)Ljava/lang/Object;\n-   #13 = Class              #85           // java/lang/Throwable\n-   #14 = Methodref          #21.#86       // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #15 = Methodref          #87.#88       // java/util/Collections.emptyList:()Ljava/util/List;\n-   #16 = Fieldref           #2.#89        // org/apache/commons/io/IOExceptionList.causeList:Ljava/util/List;\n-   #17 = Methodref          #2.#90        // org/apache/commons/io/IOExceptionList.getCause:(I)Ljava/lang/Throwable;\n-   #18 = Methodref          #91.#92       // java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #19 = Methodref          #2.#93        // org/apache/commons/io/IOExceptionList.getCauseList:()Ljava/util/List;\n-   #20 = InterfaceMethodref #53.#94       // java/util/List.iterator:()Ljava/util/Iterator;\n-   #21 = Class              #95           // java/io/IOException\n-   #22 = Class              #96           // java/lang/Iterable\n-   #23 = Utf8               serialVersionUID\n-   #24 = Utf8               J\n-   #25 = Utf8               ConstantValue\n-   #26 = Long               1l\n-   #28 = Utf8               causeList\n-   #29 = Utf8               Ljava/util/List;\n-   #30 = Utf8               Signature\n-   #31 = Utf8               Ljava/util/List<+Ljava/lang/Throwable;>;\n-   #32 = Utf8               checkEmpty\n-   #33 = Utf8               (Ljava/util/List;Ljava/lang/Object;)V\n-   #34 = Utf8               Code\n-   #35 = Utf8               LineNumberTable\n-   #36 = Utf8               StackMapTable\n-   #37 = Utf8               Exceptions\n-   #38 = Utf8               (Ljava/util/List<+Ljava/lang/Throwable;>;Ljava/lang/Object;)V\n-   #39 = Utf8               isEmpty\n-   #40 = Utf8               (Ljava/util/List;)Z\n-   #41 = Utf8               (Ljava/util/List<+Ljava/lang/Throwable;>;)Z\n-   #42 = Utf8               size\n-   #43 = Utf8               (Ljava/util/List;)I\n-   #44 = Utf8               (Ljava/util/List<+Ljava/lang/Throwable;>;)I\n-   #45 = Utf8               toMessage\n-   #46 = Utf8               (Ljava/util/List;)Ljava/lang/String;\n-   #47 = Utf8               (Ljava/util/List<+Ljava/lang/Throwable;>;)Ljava/lang/String;\n-   #48 = Utf8               <init>\n-   #49 = Utf8               (Ljava/util/List;)V\n-   #50 = Utf8               (Ljava/util/List<+Ljava/lang/Throwable;>;)V\n-   #51 = Utf8               (Ljava/lang/String;Ljava/util/List;)V\n-   #52 = Class              #97           // java/lang/String\n-   #53 = Class              #98           // java/util/List\n-   #54 = Utf8               (Ljava/lang/String;Ljava/util/List<+Ljava/lang/Throwable;>;)V\n-   #55 = Utf8               getCause\n-   #56 = Utf8               (I)Ljava/lang/Throwable;\n-   #57 = Utf8               <T:Ljava/lang/Throwable;>(I)TT;\n-   #58 = Utf8               (ILjava/lang/Class;)Ljava/lang/Throwable;\n-   #59 = Utf8               <T:Ljava/lang/Throwable;>(ILjava/lang/Class<TT;>;)TT;\n-   #60 = Utf8               getCauseList\n-   #61 = Utf8               ()Ljava/util/List;\n-   #62 = Utf8               <T:Ljava/lang/Throwable;>()Ljava/util/List<TT;>;\n-   #63 = Utf8               (Ljava/lang/Class;)Ljava/util/List;\n-   #64 = Utf8               <T:Ljava/lang/Throwable;>(Ljava/lang/Class<TT;>;)Ljava/util/List<TT;>;\n-   #65 = Utf8               iterator\n-   #66 = Utf8               ()Ljava/util/Iterator;\n-   #67 = Utf8               ()Ljava/util/Iterator<Ljava/lang/Throwable;>;\n-   #68 = Utf8               Ljava/io/IOException;Ljava/lang/Iterable<Ljava/lang/Throwable;>;\n-   #69 = Utf8               SourceFile\n-   #70 = Utf8               IOExceptionList.java\n-   #71 = NameAndType        #39:#40       // isEmpty:(Ljava/util/List;)Z\n-   #72 = Utf8               org/apache/commons/io/IOExceptionList\n-   #73 = Class              #99           // java/util/Objects\n-   #74 = NameAndType        #100:#101     // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-   #75 = NameAndType        #48:#51       // \"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n-   #76 = NameAndType        #42:#43       // size:(Ljava/util/List;)I\n-   #77 = NameAndType        #42:#102      // size:()I\n-   #78 = Utf8               %,d exception(s): %s\n-   #79 = Utf8               java/lang/Object\n-   #80 = Class              #103          // java/lang/Integer\n-   #81 = NameAndType        #104:#105     // valueOf:(I)Ljava/lang/Integer;\n-   #82 = NameAndType        #106:#107     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #83 = NameAndType        #45:#46       // toMessage:(Ljava/util/List;)Ljava/lang/String;\n-   #84 = NameAndType        #108:#109     // get:(I)Ljava/lang/Object;\n-   #85 = Utf8               java/lang/Throwable\n-   #86 = NameAndType        #48:#110      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #87 = Class              #111          // java/util/Collections\n-   #88 = NameAndType        #112:#61      // emptyList:()Ljava/util/List;\n-   #89 = NameAndType        #28:#29       // causeList:Ljava/util/List;\n-   #90 = NameAndType        #55:#56       // getCause:(I)Ljava/lang/Throwable;\n-   #91 = Class              #113          // java/lang/Class\n-   #92 = NameAndType        #114:#115     // cast:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #93 = NameAndType        #60:#61       // getCauseList:()Ljava/util/List;\n-   #94 = NameAndType        #65:#66       // iterator:()Ljava/util/Iterator;\n-   #95 = Utf8               java/io/IOException\n-   #96 = Utf8               java/lang/Iterable\n-   #97 = Utf8               java/lang/String\n-   #98 = Utf8               java/util/List\n-   #99 = Utf8               java/util/Objects\n-  #100 = Utf8               toString\n-  #101 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-  #102 = Utf8               ()I\n-  #103 = Utf8               java/lang/Integer\n-  #104 = Utf8               valueOf\n-  #105 = Utf8               (I)Ljava/lang/Integer;\n-  #106 = Utf8               format\n-  #107 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #108 = Utf8               get\n-  #109 = Utf8               (I)Ljava/lang/Object;\n-  #110 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #111 = Utf8               java/util/Collections\n-  #112 = Utf8               emptyList\n-  #113 = Utf8               java/lang/Class\n-  #114 = Utf8               cast\n-  #115 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+    #1 = Methodref          #2.#3         // org/apache/commons/io/IOExceptionList.isEmpty:(Ljava/util/List;)Z\n+    #2 = Class              #4            // org/apache/commons/io/IOExceptionList\n+    #3 = NameAndType        #5:#6         // isEmpty:(Ljava/util/List;)Z\n+    #4 = Utf8               org/apache/commons/io/IOExceptionList\n+    #5 = Utf8               isEmpty\n+    #6 = Utf8               (Ljava/util/List;)Z\n+    #7 = Methodref          #8.#9         // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+    #8 = Class              #10           // java/util/Objects\n+    #9 = NameAndType        #11:#12       // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #10 = Utf8               java/util/Objects\n+   #11 = Utf8               toString\n+   #12 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #13 = Methodref          #2.#14        // org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n+   #14 = NameAndType        #15:#16       // \"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n+   #15 = Utf8               <init>\n+   #16 = Utf8               (Ljava/lang/String;Ljava/util/List;)V\n+   #17 = Methodref          #2.#18        // org/apache/commons/io/IOExceptionList.size:(Ljava/util/List;)I\n+   #18 = NameAndType        #19:#20       // size:(Ljava/util/List;)I\n+   #19 = Utf8               size\n+   #20 = Utf8               (Ljava/util/List;)I\n+   #21 = InterfaceMethodref #22.#23       // java/util/List.size:()I\n+   #22 = Class              #24           // java/util/List\n+   #23 = NameAndType        #19:#25       // size:()I\n+   #24 = Utf8               java/util/List\n+   #25 = Utf8               ()I\n+   #26 = String             #27           // %,d exception(s): %s\n+   #27 = Utf8               %,d exception(s): %s\n+   #28 = Class              #29           // java/lang/Object\n+   #29 = Utf8               java/lang/Object\n+   #30 = Methodref          #31.#32       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+   #31 = Class              #33           // java/lang/Integer\n+   #32 = NameAndType        #34:#35       // valueOf:(I)Ljava/lang/Integer;\n+   #33 = Utf8               java/lang/Integer\n+   #34 = Utf8               valueOf\n+   #35 = Utf8               (I)Ljava/lang/Integer;\n+   #36 = Methodref          #37.#38       // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #37 = Class              #39           // java/lang/String\n+   #38 = NameAndType        #40:#41       // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #39 = Utf8               java/lang/String\n+   #40 = Utf8               format\n+   #41 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #42 = Methodref          #2.#43        // org/apache/commons/io/IOExceptionList.toMessage:(Ljava/util/List;)Ljava/lang/String;\n+   #43 = NameAndType        #44:#45       // toMessage:(Ljava/util/List;)Ljava/lang/String;\n+   #44 = Utf8               toMessage\n+   #45 = Utf8               (Ljava/util/List;)Ljava/lang/String;\n+   #46 = InterfaceMethodref #22.#47       // java/util/List.get:(I)Ljava/lang/Object;\n+   #47 = NameAndType        #48:#49       // get:(I)Ljava/lang/Object;\n+   #48 = Utf8               get\n+   #49 = Utf8               (I)Ljava/lang/Object;\n+   #50 = Class              #51           // java/lang/Throwable\n+   #51 = Utf8               java/lang/Throwable\n+   #52 = Methodref          #53.#54       // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #53 = Class              #55           // java/io/IOException\n+   #54 = NameAndType        #15:#56       // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #55 = Utf8               java/io/IOException\n+   #56 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #57 = Methodref          #58.#59       // java/util/Collections.emptyList:()Ljava/util/List;\n+   #58 = Class              #60           // java/util/Collections\n+   #59 = NameAndType        #61:#62       // emptyList:()Ljava/util/List;\n+   #60 = Utf8               java/util/Collections\n+   #61 = Utf8               emptyList\n+   #62 = Utf8               ()Ljava/util/List;\n+   #63 = Fieldref           #2.#64        // org/apache/commons/io/IOExceptionList.causeList:Ljava/util/List;\n+   #64 = NameAndType        #65:#66       // causeList:Ljava/util/List;\n+   #65 = Utf8               causeList\n+   #66 = Utf8               Ljava/util/List;\n+   #67 = Methodref          #2.#68        // org/apache/commons/io/IOExceptionList.getCause:(I)Ljava/lang/Throwable;\n+   #68 = NameAndType        #69:#70       // getCause:(I)Ljava/lang/Throwable;\n+   #69 = Utf8               getCause\n+   #70 = Utf8               (I)Ljava/lang/Throwable;\n+   #71 = Methodref          #72.#73       // java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #72 = Class              #74           // java/lang/Class\n+   #73 = NameAndType        #75:#76       // cast:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #74 = Utf8               java/lang/Class\n+   #75 = Utf8               cast\n+   #76 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #77 = Methodref          #2.#78        // org/apache/commons/io/IOExceptionList.getCauseList:()Ljava/util/List;\n+   #78 = NameAndType        #79:#62       // getCauseList:()Ljava/util/List;\n+   #79 = Utf8               getCauseList\n+   #80 = InterfaceMethodref #22.#81       // java/util/List.iterator:()Ljava/util/Iterator;\n+   #81 = NameAndType        #82:#83       // iterator:()Ljava/util/Iterator;\n+   #82 = Utf8               iterator\n+   #83 = Utf8               ()Ljava/util/Iterator;\n+   #84 = Class              #85           // java/lang/Iterable\n+   #85 = Utf8               java/lang/Iterable\n+   #86 = Utf8               serialVersionUID\n+   #87 = Utf8               J\n+   #88 = Utf8               ConstantValue\n+   #89 = Long               1l\n+   #91 = Utf8               Signature\n+   #92 = Utf8               Ljava/util/List<+Ljava/lang/Throwable;>;\n+   #93 = Utf8               checkEmpty\n+   #94 = Utf8               (Ljava/util/List;Ljava/lang/Object;)V\n+   #95 = Utf8               Code\n+   #96 = Utf8               LineNumberTable\n+   #97 = Utf8               StackMapTable\n+   #98 = Utf8               Exceptions\n+   #99 = Utf8               (Ljava/util/List<+Ljava/lang/Throwable;>;Ljava/lang/Object;)V\n+  #100 = Utf8               (Ljava/util/List<+Ljava/lang/Throwable;>;)Z\n+  #101 = Utf8               (Ljava/util/List<+Ljava/lang/Throwable;>;)I\n+  #102 = Utf8               (Ljava/util/List<+Ljava/lang/Throwable;>;)Ljava/lang/String;\n+  #103 = Utf8               (Ljava/util/List;)V\n+  #104 = Utf8               (Ljava/util/List<+Ljava/lang/Throwable;>;)V\n+  #105 = Utf8               (Ljava/lang/String;Ljava/util/List<+Ljava/lang/Throwable;>;)V\n+  #106 = Utf8               <T:Ljava/lang/Throwable;>(I)TT;\n+  #107 = Utf8               (ILjava/lang/Class;)Ljava/lang/Throwable;\n+  #108 = Utf8               <T:Ljava/lang/Throwable;>(ILjava/lang/Class<TT;>;)TT;\n+  #109 = Utf8               <T:Ljava/lang/Throwable;>()Ljava/util/List<TT;>;\n+  #110 = Utf8               (Ljava/lang/Class;)Ljava/util/List;\n+  #111 = Utf8               <T:Ljava/lang/Throwable;>(Ljava/lang/Class<TT;>;)Ljava/util/List<TT;>;\n+  #112 = Utf8               ()Ljava/util/Iterator<Ljava/lang/Throwable;>;\n+  #113 = Utf8               Ljava/io/IOException;Ljava/lang/Iterable<Ljava/lang/Throwable;>;\n+  #114 = Utf8               SourceFile\n+  #115 = Utf8               IOExceptionList.java\n {\n   private static final long serialVersionUID = 1l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 1l\n \n   private final java.util.List<? extends java.lang.Throwable> causeList;\n     descriptor: Ljava/util/List;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #31                          // Ljava/util/List<+Ljava/lang/Throwable;>;\n+    Signature: #92                          // Ljava/util/List<+Ljava/lang/Throwable;>;\n \n   public static void checkEmpty(java.util.List<? extends java.lang.Throwable>, java.lang.Object) throws org.apache.commons.io.IOExceptionList;\n     descriptor: (Ljava/util/List;Ljava/lang/Object;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: invokestatic  #1                  // Method isEmpty:(Ljava/util/List;)Z\n          4: ifne          21\n          7: new           #2                  // class org/apache/commons/io/IOExceptionList\n         10: dup\n         11: aload_1\n         12: aconst_null\n-        13: invokestatic  #3                  // Method java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+        13: invokestatic  #7                  // Method java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n         16: aload_0\n-        17: invokespecial #4                  // Method \"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n+        17: invokespecial #13                 // Method \"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n         20: athrow\n         21: return\n       LineNumberTable:\n         line 48: 0\n         line 49: 7\n         line 51: 21\n       StackMapTable: number_of_entries = 1\n         frame_type = 21 /* same */\n     Exceptions:\n       throws org.apache.commons.io.IOExceptionList\n-    Signature: #38                          // (Ljava/util/List<+Ljava/lang/Throwable;>;Ljava/lang/Object;)V\n+    Signature: #99                          // (Ljava/util/List<+Ljava/lang/Throwable;>;Ljava/lang/Object;)V\n \n   private static boolean isEmpty(java.util.List<? extends java.lang.Throwable>);\n     descriptor: (Ljava/util/List;)Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #5                  // Method size:(Ljava/util/List;)I\n+         1: invokestatic  #17                 // Method size:(Ljava/util/List;)I\n          4: ifne          11\n          7: iconst_1\n          8: goto          12\n         11: iconst_0\n         12: ireturn\n       LineNumberTable:\n         line 54: 0\n       StackMapTable: number_of_entries = 2\n         frame_type = 11 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #41                          // (Ljava/util/List<+Ljava/lang/Throwable;>;)Z\n+    Signature: #100                         // (Ljava/util/List<+Ljava/lang/Throwable;>;)Z\n \n   private static int size(java.util.List<? extends java.lang.Throwable>);\n     descriptor: (Ljava/util/List;)I\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: ifnull        13\n          4: aload_0\n-         5: invokeinterface #6,  1            // InterfaceMethod java/util/List.size:()I\n+         5: invokeinterface #21,  1           // InterfaceMethod java/util/List.size:()I\n         10: goto          14\n         13: iconst_0\n         14: ireturn\n       LineNumberTable:\n         line 58: 0\n       StackMapTable: number_of_entries = 2\n         frame_type = 13 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #44                          // (Ljava/util/List<+Ljava/lang/Throwable;>;)I\n+    Signature: #101                         // (Ljava/util/List<+Ljava/lang/Throwable;>;)I\n \n   private static java.lang.String toMessage(java.util.List<? extends java.lang.Throwable>);\n     descriptor: (Ljava/util/List;)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=5, locals=1, args_size=1\n-         0: ldc           #7                  // String %,d exception(s): %s\n+         0: ldc           #26                 // String %,d exception(s): %s\n          2: iconst_2\n-         3: anewarray     #8                  // class java/lang/Object\n+         3: anewarray     #28                 // class java/lang/Object\n          6: dup\n          7: iconst_0\n          8: aload_0\n-         9: invokestatic  #5                  // Method size:(Ljava/util/List;)I\n-        12: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+         9: invokestatic  #17                 // Method size:(Ljava/util/List;)I\n+        12: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         15: aastore\n         16: dup\n         17: iconst_1\n         18: aload_0\n         19: aastore\n-        20: invokestatic  #10                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        20: invokestatic  #36                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n         23: areturn\n       LineNumberTable:\n         line 62: 0\n-    Signature: #47                          // (Ljava/util/List<+Ljava/lang/Throwable;>;)Ljava/lang/String;\n+    Signature: #102                         // (Ljava/util/List<+Ljava/lang/Throwable;>;)Ljava/lang/String;\n \n   public org.apache.commons.io.IOExceptionList(java.util.List<? extends java.lang.Throwable>);\n     descriptor: (Ljava/util/List;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #11                 // Method toMessage:(Ljava/util/List;)Ljava/lang/String;\n+         2: invokestatic  #42                 // Method toMessage:(Ljava/util/List;)Ljava/lang/String;\n          5: aload_1\n-         6: invokespecial #4                  // Method \"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n+         6: invokespecial #13                 // Method \"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n          9: return\n       LineNumberTable:\n         line 73: 0\n         line 74: 9\n-    Signature: #50                          // (Ljava/util/List<+Ljava/lang/Throwable;>;)V\n+    Signature: #104                         // (Ljava/util/List<+Ljava/lang/Throwable;>;)V\n \n   public org.apache.commons.io.IOExceptionList(java.lang.String, java.util.List<? extends java.lang.Throwable>);\n     descriptor: (Ljava/lang/String;Ljava/util/List;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: ifnull        9\n          5: aload_1\n          6: goto          13\n          9: aload_2\n-        10: invokestatic  #11                 // Method toMessage:(Ljava/util/List;)Ljava/lang/String;\n+        10: invokestatic  #42                 // Method toMessage:(Ljava/util/List;)Ljava/lang/String;\n         13: aload_2\n         14: invokestatic  #1                  // Method isEmpty:(Ljava/util/List;)Z\n         17: ifeq          24\n         20: aconst_null\n         21: goto          34\n         24: aload_2\n         25: iconst_0\n-        26: invokeinterface #12,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n-        31: checkcast     #13                 // class java/lang/Throwable\n-        34: invokespecial #14                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        26: invokeinterface #46,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n+        31: checkcast     #50                 // class java/lang/Throwable\n+        34: invokespecial #52                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         37: aload_0\n         38: aload_2\n         39: ifnonnull     48\n-        42: invokestatic  #15                 // Method java/util/Collections.emptyList:()Ljava/util/List;\n+        42: invokestatic  #57                 // Method java/util/Collections.emptyList:()Ljava/util/List;\n         45: goto          49\n         48: aload_2\n-        49: putfield      #16                 // Field causeList:Ljava/util/List;\n+        49: putfield      #63                 // Field causeList:Ljava/util/List;\n         52: return\n       LineNumberTable:\n         line 84: 0\n         line 85: 37\n         line 86: 52\n       StackMapTable: number_of_entries = 6\n         frame_type = 73 /* same_locals_1_stack_item */\n@@ -293,79 +293,79 @@\n           offset_delta = 13\n           locals = [ class org/apache/commons/io/IOExceptionList, class java/lang/String, class java/util/List ]\n           stack = [ class org/apache/commons/io/IOExceptionList ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = [ class org/apache/commons/io/IOExceptionList, class java/lang/String, class java/util/List ]\n           stack = [ class org/apache/commons/io/IOExceptionList, class java/util/List ]\n-    Signature: #54                          // (Ljava/lang/String;Ljava/util/List<+Ljava/lang/Throwable;>;)V\n+    Signature: #105                         // (Ljava/lang/String;Ljava/util/List<+Ljava/lang/Throwable;>;)V\n \n   public <T extends java.lang.Throwable> T getCause(int);\n     descriptor: (I)Ljava/lang/Throwable;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #16                 // Field causeList:Ljava/util/List;\n+         1: getfield      #63                 // Field causeList:Ljava/util/List;\n          4: iload_1\n-         5: invokeinterface #12,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n-        10: checkcast     #13                 // class java/lang/Throwable\n+         5: invokeinterface #46,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n+        10: checkcast     #50                 // class java/lang/Throwable\n         13: areturn\n       LineNumberTable:\n         line 96: 0\n-    Signature: #57                          // <T:Ljava/lang/Throwable;>(I)TT;\n+    Signature: #106                         // <T:Ljava/lang/Throwable;>(I)TT;\n \n   public <T extends java.lang.Throwable> T getCause(int, java.lang.Class<T>);\n     descriptor: (ILjava/lang/Class;)Ljava/lang/Throwable;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_2\n          1: aload_0\n          2: iload_1\n-         3: invokevirtual #17                 // Method getCause:(I)Ljava/lang/Throwable;\n-         6: invokevirtual #18                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;\n-         9: checkcast     #13                 // class java/lang/Throwable\n+         3: invokevirtual #67                 // Method getCause:(I)Ljava/lang/Throwable;\n+         6: invokevirtual #71                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;\n+         9: checkcast     #50                 // class java/lang/Throwable\n         12: areturn\n       LineNumberTable:\n         line 108: 0\n-    Signature: #59                          // <T:Ljava/lang/Throwable;>(ILjava/lang/Class<TT;>;)TT;\n+    Signature: #108                         // <T:Ljava/lang/Throwable;>(ILjava/lang/Class<TT;>;)TT;\n \n   public <T extends java.lang.Throwable> java.util.List<T> getCauseList();\n     descriptor: ()Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #16                 // Field causeList:Ljava/util/List;\n+         1: getfield      #63                 // Field causeList:Ljava/util/List;\n          4: areturn\n       LineNumberTable:\n         line 118: 0\n-    Signature: #62                          // <T:Ljava/lang/Throwable;>()Ljava/util/List<TT;>;\n+    Signature: #109                         // <T:Ljava/lang/Throwable;>()Ljava/util/List<TT;>;\n \n   public <T extends java.lang.Throwable> java.util.List<T> getCauseList(java.lang.Class<T>);\n     descriptor: (Ljava/lang/Class;)Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #16                 // Field causeList:Ljava/util/List;\n+         1: getfield      #63                 // Field causeList:Ljava/util/List;\n          4: areturn\n       LineNumberTable:\n         line 129: 0\n-    Signature: #64                          // <T:Ljava/lang/Throwable;>(Ljava/lang/Class<TT;>;)Ljava/util/List<TT;>;\n+    Signature: #111                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Class<TT;>;)Ljava/util/List<TT;>;\n \n   public java.util.Iterator<java.lang.Throwable> iterator();\n     descriptor: ()Ljava/util/Iterator;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #19                 // Method getCauseList:()Ljava/util/List;\n-         4: invokeinterface #20,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+         1: invokevirtual #77                 // Method getCauseList:()Ljava/util/List;\n+         4: invokeinterface #80,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n          9: areturn\n       LineNumberTable:\n         line 134: 0\n-    Signature: #67                          // ()Ljava/util/Iterator<Ljava/lang/Throwable;>;\n+    Signature: #112                         // ()Ljava/util/Iterator<Ljava/lang/Throwable;>;\n }\n-Signature: #68                          // Ljava/io/IOException;Ljava/lang/Iterable<Ljava/lang/Throwable;>;\n+Signature: #113                         // Ljava/io/IOException;Ljava/lang/Iterable<Ljava/lang/Throwable;>;\n SourceFile: \"IOExceptionList.java\"\n"}]}
