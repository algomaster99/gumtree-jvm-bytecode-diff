{"diffoscope-json-version": 1, "source1": "first/ArchiveInputStream.class", "source2": "second/ArchiveInputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -14,38 +14,37 @@\n         this.single = new byte[1];\n     }\n     \n     public boolean canReadEntryData(final ArchiveEntry archiveEntry) {\n         return true;\n     }\n     \n-    protected void count(final int read) {\n-        this.count((long)read);\n+    protected void count(final int n) {\n+        this.count((long)n);\n     }\n     \n-    protected void count(final long read) {\n-        if (read != -1L) {\n-            this.bytesRead += read;\n+    protected void count(final long n) {\n+        if (n != -1L) {\n+            this.bytesRead += n;\n         }\n     }\n     \n     public long getBytesRead() {\n         return this.bytesRead;\n     }\n     \n     @Deprecated\n     public int getCount() {\n         return (int)this.bytesRead;\n     }\n     \n     public abstract ArchiveEntry getNextEntry() throws IOException;\n     \n-    protected void pushedBackBytes(final long pushedBack) {\n-        this.bytesRead -= pushedBack;\n+    protected void pushedBackBytes(final long n) {\n+        this.bytesRead -= n;\n     }\n     \n     @Override\n     public int read() throws IOException {\n-        final int num = this.read(this.single, 0, 1);\n-        return (num == -1) ? -1 : (this.single[0] & 0xFF);\n+        return (this.read(this.single, 0, 1) == -1) ? -1 : (this.single[0] & 0xFF);\n     }\n }\n"}]}
