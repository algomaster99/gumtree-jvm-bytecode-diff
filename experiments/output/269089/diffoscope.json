{"diffoscope-json-version": 1, "source1": "first/DetailAstSet.class", "source2": "second/DetailAstSet.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -12,45 +12,44 @@\n     private final SortedMap<Integer, DetailAST> astLines;\n     \n     public DetailAstSet(final IndentationCheck indentCheck) {\n         this.astLines = new TreeMap<Integer, DetailAST>();\n         this.indentCheck = indentCheck;\n     }\n     \n-    public void addAst(final DetailAST ast) {\n-        this.addLineWithAst(ast.getLineNo(), ast);\n+    public void addAst(final DetailAST detailAST) {\n+        this.addLineWithAst(detailAST.getLineNo(), detailAST);\n     }\n     \n-    private void addLineWithAst(final int lineNo, final DetailAST ast) {\n-        this.astLines.put(Integer.valueOf(lineNo), ast);\n+    private void addLineWithAst(final int i, final DetailAST detailAST) {\n+        this.astLines.put(Integer.valueOf(i), detailAST);\n     }\n     \n-    public Integer getStartColumn(final int lineNum) {\n-        Integer startColumn = null;\n-        final DetailAST ast = this.getAst(lineNum);\n+    public Integer getStartColumn(final int n) {\n+        Integer value = null;\n+        final DetailAST ast = this.getAst(n);\n         if (ast != null) {\n-            startColumn = Integer.valueOf(this.expandedTabsColumnNo(ast));\n+            value = Integer.valueOf(this.expandedTabsColumnNo(ast));\n         }\n-        return startColumn;\n+        return value;\n     }\n     \n     public boolean isEmpty() {\n         return this.astLines.isEmpty();\n     }\n     \n     public DetailAST firstLine() {\n         return this.astLines.get(this.astLines.firstKey());\n     }\n     \n-    public DetailAST getAst(final int lineNum) {\n-        return this.astLines.get(Integer.valueOf(lineNum));\n+    public DetailAST getAst(final int i) {\n+        return this.astLines.get(Integer.valueOf(i));\n     }\n     \n     public Integer lastLine() {\n         return Integer.valueOf(this.astLines.lastKey());\n     }\n     \n-    protected final int expandedTabsColumnNo(final DetailAST ast) {\n-        final String line = this.indentCheck.getLine(ast.getLineNo() - 1);\n-        return CommonUtil.lengthExpandedTabs(line, ast.getColumnNo(), this.indentCheck.getIndentationTabWidth());\n+    protected final int expandedTabsColumnNo(final DetailAST detailAST) {\n+        return CommonUtil.lengthExpandedTabs(this.indentCheck.getLine(detailAST.getLineNo() - 1), detailAST.getColumnNo(), this.indentCheck.getIndentationTabWidth());\n     }\n }\n"}]}
