{"diffoscope-json-version": 1, "source1": "first/DumpArchiveEntry.class", "source2": "second/DumpArchiveEntry.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -28,39 +28,44 @@\n     private long ctime;\n     private int generation;\n     private boolean isDeleted;\n     \n     static DumpArchiveEntry parse(final byte[] buffer) {\n         final DumpArchiveEntry entry = new DumpArchiveEntry();\n         final DumpArchiveEntry.TapeSegmentHeader header = entry.header;\n-        DumpArchiveEntry.TapeSegmentHeader.access$002(header, DumpArchiveConstants.SEGMENT_TYPE.find(DumpArchiveUtil.convert32(buffer, 0)));\n-        DumpArchiveEntry.TapeSegmentHeader.access$102(header, DumpArchiveUtil.convert32(buffer, 12));\n-        entry.ino = DumpArchiveEntry.TapeSegmentHeader.access$202(header, DumpArchiveUtil.convert32(buffer, 20));\n+        DumpArchiveEntry.TapeSegmentHeader.access$0(header, DumpArchiveConstants.SEGMENT_TYPE.find(DumpArchiveUtil.convert32(buffer, 0)));\n+        DumpArchiveEntry.TapeSegmentHeader.access$1(header, DumpArchiveUtil.convert32(buffer, 12));\n+        final DumpArchiveEntry dumpArchiveEntry = entry;\n+        final DumpArchiveEntry.TapeSegmentHeader tapeSegmentHeader = header;\n+        final int convert32 = DumpArchiveUtil.convert32(buffer, 20);\n+        DumpArchiveEntry.TapeSegmentHeader.access$2(tapeSegmentHeader, convert32);\n+        dumpArchiveEntry.ino = convert32;\n         final int m = DumpArchiveUtil.convert16(buffer, 32);\n         entry.setType(DumpArchiveEntry.TYPE.find(m >> 12 & 0xF));\n         entry.setMode(m);\n         entry.nlink = DumpArchiveUtil.convert16(buffer, 34);\n         entry.setSize(DumpArchiveUtil.convert64(buffer, 40));\n         long t = 1000L * DumpArchiveUtil.convert32(buffer, 48) + DumpArchiveUtil.convert32(buffer, 52) / 1000;\n         entry.setAccessTime(new Date(t));\n         t = 1000L * DumpArchiveUtil.convert32(buffer, 56) + DumpArchiveUtil.convert32(buffer, 60) / 1000;\n         entry.setLastModifiedDate(new Date(t));\n         t = 1000L * DumpArchiveUtil.convert32(buffer, 64) + DumpArchiveUtil.convert32(buffer, 68) / 1000;\n         entry.ctime = t;\n         entry.generation = DumpArchiveUtil.convert32(buffer, 140);\n         entry.setUserId(DumpArchiveUtil.convert32(buffer, 144));\n         entry.setGroupId(DumpArchiveUtil.convert32(buffer, 148));\n-        DumpArchiveEntry.TapeSegmentHeader.access$302(header, DumpArchiveUtil.convert32(buffer, 160));\n-        DumpArchiveEntry.TapeSegmentHeader.access$402(header, 0);\n-        for (int i = 0; i < 512 && i < DumpArchiveEntry.TapeSegmentHeader.access$300(header); ++i) {\n+        DumpArchiveEntry.TapeSegmentHeader.access$3(header, DumpArchiveUtil.convert32(buffer, 160));\n+        DumpArchiveEntry.TapeSegmentHeader.access$4(header, 0);\n+        for (int i = 0; i < 512 && i < DumpArchiveEntry.TapeSegmentHeader.access$5(header); ++i) {\n             if (buffer[164 + i] == 0) {\n-                DumpArchiveEntry.TapeSegmentHeader.access$408(header);\n+                final DumpArchiveEntry.TapeSegmentHeader tapeSegmentHeader2 = header;\n+                DumpArchiveEntry.TapeSegmentHeader.access$4(tapeSegmentHeader2, DumpArchiveEntry.TapeSegmentHeader.access$6(tapeSegmentHeader2) + 1);\n             }\n         }\n-        System.arraycopy(buffer, 164, DumpArchiveEntry.TapeSegmentHeader.access$500(header), 0, 512);\n+        System.arraycopy(buffer, 164, DumpArchiveEntry.TapeSegmentHeader.access$7(header), 0, 512);\n         entry.volume = header.getVolume();\n         return entry;\n     }\n     \n     public DumpArchiveEntry() {\n         this.type = DumpArchiveEntry.TYPE.UNKNOWN;\n         this.permissions = Collections.emptySet();\n@@ -251,15 +256,15 @@\n         this.permissions = DumpArchiveEntry.PERMISSION.find(mode);\n     }\n     \n     public final void setName(String name) {\n         this.originalName = name;\n         if (name != null) {\n             if (this.isDirectory() && !name.endsWith(\"/\")) {\n-                name += \"/\";\n+                name = String.valueOf(name) + \"/\";\n             }\n             if (name.startsWith(\"./\")) {\n                 name = name.substring(2);\n             }\n         }\n         this.name = name;\n     }\n@@ -294,18 +299,19 @@\n     \n     @Override\n     public String toString() {\n         return this.getName();\n     }\n     \n     void update(final byte[] buffer) {\n-        DumpArchiveEntry.TapeSegmentHeader.access$102(this.header, DumpArchiveUtil.convert32(buffer, 16));\n-        DumpArchiveEntry.TapeSegmentHeader.access$302(this.header, DumpArchiveUtil.convert32(buffer, 160));\n-        DumpArchiveEntry.TapeSegmentHeader.access$402(this.header, 0);\n-        for (int i = 0; i < 512 && i < DumpArchiveEntry.TapeSegmentHeader.access$300(this.header); ++i) {\n+        DumpArchiveEntry.TapeSegmentHeader.access$1(this.header, DumpArchiveUtil.convert32(buffer, 16));\n+        DumpArchiveEntry.TapeSegmentHeader.access$3(this.header, DumpArchiveUtil.convert32(buffer, 160));\n+        DumpArchiveEntry.TapeSegmentHeader.access$4(this.header, 0);\n+        for (int i = 0; i < 512 && i < DumpArchiveEntry.TapeSegmentHeader.access$5(this.header); ++i) {\n             if (buffer[164 + i] == 0) {\n-                DumpArchiveEntry.TapeSegmentHeader.access$408(this.header);\n+                final DumpArchiveEntry.TapeSegmentHeader header = this.header;\n+                DumpArchiveEntry.TapeSegmentHeader.access$4(header, DumpArchiveEntry.TapeSegmentHeader.access$6(header) + 1);\n             }\n         }\n-        System.arraycopy(buffer, 164, DumpArchiveEntry.TapeSegmentHeader.access$500(this.header), 0, 512);\n+        System.arraycopy(buffer, 164, DumpArchiveEntry.TapeSegmentHeader.access$7(this.header), 0, 512);\n     }\n }\n"}]}
