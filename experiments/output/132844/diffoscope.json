{"diffoscope-json-version": 1, "source1": "first/ThreadUtils.class", "source2": "second/ThreadUtils.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -7,14 +7,18 @@\n import java.util.Collections;\n import java.util.Collection;\n \n public class ThreadUtils\n {\n     public static final ThreadUtils.AlwaysTruePredicate ALWAYS_TRUE_PREDICATE;\n     \n+    static {\n+        ALWAYS_TRUE_PREDICATE = new ThreadUtils.AlwaysTruePredicate((ThreadUtils.AlwaysTruePredicate)null);\n+    }\n+    \n     public static Thread findThreadById(final long threadId, final ThreadGroup threadGroup) {\n         Validate.isTrue(threadGroup != null, \"The thread group must not be null\", new Object[0]);\n         final Thread thread = findThreadById(threadId);\n         if (thread != null && threadGroup.equals(thread.getThreadGroup())) {\n             return thread;\n         }\n         return null;\n@@ -114,12 +118,8 @@\n         for (int i = 0; i < count; ++i) {\n             if (predicate.test(threadGroups[i])) {\n                 result.add(threadGroups[i]);\n             }\n         }\n         return Collections.unmodifiableCollection((Collection<? extends ThreadGroup>)result);\n     }\n-    \n-    static {\n-        ALWAYS_TRUE_PREDICATE = new ThreadUtils.AlwaysTruePredicate((ThreadUtils.ThreadUtils$1)null);\n-    }\n }\n"}]}
