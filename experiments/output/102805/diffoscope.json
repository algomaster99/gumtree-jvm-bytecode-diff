{"diffoscope-json-version": 1, "source1": "first/ZstdCompressorOutputStream.class", "source2": "second/ZstdCompressorOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,308 +1,308 @@\n-  SHA-256 checksum dd5f0972b889bedd3e6e80ce56f8e8138db7bc1773136cbb68e7308f31d32d1d\n+  SHA-256 checksum 4cf68c421f0a20d41b4061d9a2819dfab1e5e184d9f917ce30efcee2c44ae0a6\n   Compiled from \"ZstdCompressorOutputStream.java\"\n public class org.apache.commons.compress.compressors.zstandard.ZstdCompressorOutputStream extends org.apache.commons.compress.compressors.CompressorOutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #13                         // org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream\n-  super_class: #2                         // org/apache/commons/compress/compressors/CompressorOutputStream\n+  this_class: #1                          // org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream\n+  super_class: #3                         // org/apache/commons/compress/compressors/CompressorOutputStream\n   interfaces: 0, fields: 1, methods: 9, attributes: 1\n Constant pool:\n-   #1 = Methodref          #2.#3          // org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n-   #2 = Class              #4             // org/apache/commons/compress/compressors/CompressorOutputStream\n-   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #1 = Class              #2             // org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream\n+   #2 = Utf8               org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream\n+   #3 = Class              #4             // org/apache/commons/compress/compressors/CompressorOutputStream\n    #4 = Utf8               org/apache/commons/compress/compressors/CompressorOutputStream\n-   #5 = Utf8               <init>\n-   #6 = Utf8               ()V\n-   #7 = Class              #8             // com/github/luben/zstd/ZstdOutputStream\n-   #8 = Utf8               com/github/luben/zstd/ZstdOutputStream\n-   #9 = Methodref          #7.#10         // com/github/luben/zstd/ZstdOutputStream.\"<init>\":(Ljava/io/OutputStream;I)V\n-  #10 = NameAndType        #5:#11         // \"<init>\":(Ljava/io/OutputStream;I)V\n-  #11 = Utf8               (Ljava/io/OutputStream;I)V\n-  #12 = Fieldref           #13.#14        // org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream.encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n-  #13 = Class              #15            // org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream\n-  #14 = NameAndType        #16:#17        // encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n-  #15 = Utf8               org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream\n-  #16 = Utf8               encOS\n-  #17 = Utf8               Lcom/github/luben/zstd/ZstdOutputStream;\n-  #18 = Methodref          #7.#19         // com/github/luben/zstd/ZstdOutputStream.setCloseFrameOnFlush:(Z)Lcom/github/luben/zstd/ZstdOutputStream;\n-  #19 = NameAndType        #20:#21        // setCloseFrameOnFlush:(Z)Lcom/github/luben/zstd/ZstdOutputStream;\n-  #20 = Utf8               setCloseFrameOnFlush\n-  #21 = Utf8               (Z)Lcom/github/luben/zstd/ZstdOutputStream;\n-  #22 = Methodref          #7.#23         // com/github/luben/zstd/ZstdOutputStream.setChecksum:(Z)Lcom/github/luben/zstd/ZstdOutputStream;\n-  #23 = NameAndType        #24:#21        // setChecksum:(Z)Lcom/github/luben/zstd/ZstdOutputStream;\n-  #24 = Utf8               setChecksum\n-  #25 = Methodref          #7.#26         // com/github/luben/zstd/ZstdOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-  #26 = NameAndType        #5:#27         // \"<init>\":(Ljava/io/OutputStream;)V\n-  #27 = Utf8               (Ljava/io/OutputStream;)V\n-  #28 = Methodref          #7.#29         // com/github/luben/zstd/ZstdOutputStream.close:()V\n-  #29 = NameAndType        #30:#6         // close:()V\n-  #30 = Utf8               close\n-  #31 = Methodref          #7.#32         // com/github/luben/zstd/ZstdOutputStream.write:(I)V\n-  #32 = NameAndType        #33:#34        // write:(I)V\n-  #33 = Utf8               write\n-  #34 = Utf8               (I)V\n-  #35 = Methodref          #7.#36         // com/github/luben/zstd/ZstdOutputStream.write:([BII)V\n-  #36 = NameAndType        #33:#37        // write:([BII)V\n-  #37 = Utf8               ([BII)V\n-  #38 = Methodref          #39.#40        // java/lang/Object.toString:()Ljava/lang/String;\n-  #39 = Class              #41            // java/lang/Object\n-  #40 = NameAndType        #42:#43        // toString:()Ljava/lang/String;\n-  #41 = Utf8               java/lang/Object\n-  #42 = Utf8               toString\n-  #43 = Utf8               ()Ljava/lang/String;\n-  #44 = Methodref          #7.#45         // com/github/luben/zstd/ZstdOutputStream.flush:()V\n-  #45 = NameAndType        #46:#6         // flush:()V\n-  #46 = Utf8               flush\n-  #47 = Utf8               (Ljava/io/OutputStream;IZZ)V\n-  #48 = Utf8               Code\n-  #49 = Utf8               LineNumberTable\n-  #50 = Utf8               LocalVariableTable\n-  #51 = Utf8               this\n-  #52 = Utf8               Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream;\n-  #53 = Utf8               outStream\n-  #54 = Utf8               Ljava/io/OutputStream;\n-  #55 = Utf8               level\n-  #56 = Utf8               I\n-  #57 = Utf8               closeFrameOnFlush\n-  #58 = Utf8               Z\n-  #59 = Utf8               useChecksum\n-  #60 = Utf8               Exceptions\n-  #61 = Class              #62            // java/io/IOException\n-  #62 = Utf8               java/io/IOException\n-  #63 = Utf8               (Ljava/io/OutputStream;IZ)V\n-  #64 = Utf8               b\n-  #65 = Utf8               buf\n-  #66 = Utf8               [B\n-  #67 = Utf8               off\n-  #68 = Utf8               len\n+   #5 = Utf8               encOS\n+   #6 = Utf8               Lcom/github/luben/zstd/ZstdOutputStream;\n+   #7 = Utf8               <init>\n+   #8 = Utf8               (Ljava/io/OutputStream;IZZ)V\n+   #9 = Utf8               Exceptions\n+  #10 = Class              #11            // java/io/IOException\n+  #11 = Utf8               java/io/IOException\n+  #12 = Utf8               Code\n+  #13 = Methodref          #3.#14         // org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n+  #14 = NameAndType        #7:#15         // \"<init>\":()V\n+  #15 = Utf8               ()V\n+  #16 = Class              #17            // com/github/luben/zstd/ZstdOutputStream\n+  #17 = Utf8               com/github/luben/zstd/ZstdOutputStream\n+  #18 = Methodref          #16.#19        // com/github/luben/zstd/ZstdOutputStream.\"<init>\":(Ljava/io/OutputStream;I)V\n+  #19 = NameAndType        #7:#20         // \"<init>\":(Ljava/io/OutputStream;I)V\n+  #20 = Utf8               (Ljava/io/OutputStream;I)V\n+  #21 = Fieldref           #1.#22         // org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream.encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+  #22 = NameAndType        #5:#6          // encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+  #23 = Methodref          #16.#24        // com/github/luben/zstd/ZstdOutputStream.setCloseFrameOnFlush:(Z)Lcom/github/luben/zstd/ZstdOutputStream;\n+  #24 = NameAndType        #25:#26        // setCloseFrameOnFlush:(Z)Lcom/github/luben/zstd/ZstdOutputStream;\n+  #25 = Utf8               setCloseFrameOnFlush\n+  #26 = Utf8               (Z)Lcom/github/luben/zstd/ZstdOutputStream;\n+  #27 = Methodref          #16.#28        // com/github/luben/zstd/ZstdOutputStream.setChecksum:(Z)Lcom/github/luben/zstd/ZstdOutputStream;\n+  #28 = NameAndType        #29:#26        // setChecksum:(Z)Lcom/github/luben/zstd/ZstdOutputStream;\n+  #29 = Utf8               setChecksum\n+  #30 = Utf8               LineNumberTable\n+  #31 = Utf8               LocalVariableTable\n+  #32 = Utf8               this\n+  #33 = Utf8               Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream;\n+  #34 = Utf8               outStream\n+  #35 = Utf8               Ljava/io/OutputStream;\n+  #36 = Utf8               level\n+  #37 = Utf8               I\n+  #38 = Utf8               closeFrameOnFlush\n+  #39 = Utf8               Z\n+  #40 = Utf8               useChecksum\n+  #41 = Utf8               (Ljava/io/OutputStream;IZ)V\n+  #42 = Utf8               (Ljava/io/OutputStream;)V\n+  #43 = Methodref          #16.#44        // com/github/luben/zstd/ZstdOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #44 = NameAndType        #7:#42         // \"<init>\":(Ljava/io/OutputStream;)V\n+  #45 = Utf8               close\n+  #46 = Methodref          #16.#47        // com/github/luben/zstd/ZstdOutputStream.close:()V\n+  #47 = NameAndType        #45:#15        // close:()V\n+  #48 = Utf8               write\n+  #49 = Utf8               (I)V\n+  #50 = Methodref          #16.#51        // com/github/luben/zstd/ZstdOutputStream.write:(I)V\n+  #51 = NameAndType        #48:#49        // write:(I)V\n+  #52 = Utf8               b\n+  #53 = Utf8               ([BII)V\n+  #54 = Methodref          #16.#55        // com/github/luben/zstd/ZstdOutputStream.write:([BII)V\n+  #55 = NameAndType        #48:#53        // write:([BII)V\n+  #56 = Utf8               buf\n+  #57 = Utf8               [B\n+  #58 = Utf8               off\n+  #59 = Utf8               len\n+  #60 = Utf8               toString\n+  #61 = Utf8               ()Ljava/lang/String;\n+  #62 = Methodref          #63.#65        // java/lang/Object.toString:()Ljava/lang/String;\n+  #63 = Class              #64            // java/lang/Object\n+  #64 = Utf8               java/lang/Object\n+  #65 = NameAndType        #60:#61        // toString:()Ljava/lang/String;\n+  #66 = Utf8               flush\n+  #67 = Methodref          #16.#68        // com/github/luben/zstd/ZstdOutputStream.flush:()V\n+  #68 = NameAndType        #66:#15        // flush:()V\n   #69 = Utf8               SourceFile\n   #70 = Utf8               ZstdCompressorOutputStream.java\n {\n   private final com.github.luben.zstd.ZstdOutputStream encOS;\n     descriptor: Lcom/github/luben/zstd/ZstdOutputStream;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.compress.compressors.zstandard.ZstdCompressorOutputStream(java.io.OutputStream, int, boolean, boolean) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;IZZ)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=5, args_size=5\n          0: aload_0\n-         1: invokespecial #1                  // Method org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n+         1: invokespecial #13                 // Method org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n          4: aload_0\n-         5: new           #7                  // class com/github/luben/zstd/ZstdOutputStream\n+         5: new           #16                 // class com/github/luben/zstd/ZstdOutputStream\n          8: dup\n          9: aload_1\n         10: iload_2\n-        11: invokespecial #9                  // Method com/github/luben/zstd/ZstdOutputStream.\"<init>\":(Ljava/io/OutputStream;I)V\n-        14: putfield      #12                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+        11: invokespecial #18                 // Method com/github/luben/zstd/ZstdOutputStream.\"<init>\":(Ljava/io/OutputStream;I)V\n+        14: putfield      #21                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n         17: aload_0\n-        18: getfield      #12                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+        18: getfield      #21                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n         21: iload_3\n-        22: invokevirtual #18                 // Method com/github/luben/zstd/ZstdOutputStream.setCloseFrameOnFlush:(Z)Lcom/github/luben/zstd/ZstdOutputStream;\n+        22: invokevirtual #23                 // Method com/github/luben/zstd/ZstdOutputStream.setCloseFrameOnFlush:(Z)Lcom/github/luben/zstd/ZstdOutputStream;\n         25: pop\n         26: aload_0\n-        27: getfield      #12                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+        27: getfield      #21                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n         30: iload         4\n-        32: invokevirtual #22                 // Method com/github/luben/zstd/ZstdOutputStream.setChecksum:(Z)Lcom/github/luben/zstd/ZstdOutputStream;\n+        32: invokevirtual #27                 // Method com/github/luben/zstd/ZstdOutputStream.setChecksum:(Z)Lcom/github/luben/zstd/ZstdOutputStream;\n         35: pop\n         36: return\n       LineNumberTable:\n-        line 48: 0\n+        line 47: 0\n         line 49: 4\n         line 50: 17\n         line 51: 26\n         line 52: 36\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      37     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream;\n             0      37     1 outStream   Ljava/io/OutputStream;\n             0      37     2 level   I\n             0      37     3 closeFrameOnFlush   Z\n             0      37     4 useChecksum   Z\n-    Exceptions:\n-      throws java.io.IOException\n \n   public org.apache.commons.compress.compressors.zstandard.ZstdCompressorOutputStream(java.io.OutputStream, int, boolean) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;IZ)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=4, args_size=4\n          0: aload_0\n-         1: invokespecial #1                  // Method org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n+         1: invokespecial #13                 // Method org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n          4: aload_0\n-         5: new           #7                  // class com/github/luben/zstd/ZstdOutputStream\n+         5: new           #16                 // class com/github/luben/zstd/ZstdOutputStream\n          8: dup\n          9: aload_1\n         10: iload_2\n-        11: invokespecial #9                  // Method com/github/luben/zstd/ZstdOutputStream.\"<init>\":(Ljava/io/OutputStream;I)V\n-        14: putfield      #12                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+        11: invokespecial #18                 // Method com/github/luben/zstd/ZstdOutputStream.\"<init>\":(Ljava/io/OutputStream;I)V\n+        14: putfield      #21                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n         17: aload_0\n-        18: getfield      #12                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+        18: getfield      #21                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n         21: iload_3\n-        22: invokevirtual #18                 // Method com/github/luben/zstd/ZstdOutputStream.setCloseFrameOnFlush:(Z)Lcom/github/luben/zstd/ZstdOutputStream;\n+        22: invokevirtual #23                 // Method com/github/luben/zstd/ZstdOutputStream.setCloseFrameOnFlush:(Z)Lcom/github/luben/zstd/ZstdOutputStream;\n         25: pop\n         26: return\n       LineNumberTable:\n-        line 63: 0\n+        line 62: 0\n         line 64: 4\n         line 65: 17\n         line 66: 26\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      27     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream;\n             0      27     1 outStream   Ljava/io/OutputStream;\n             0      27     2 level   I\n             0      27     3 closeFrameOnFlush   Z\n-    Exceptions:\n-      throws java.io.IOException\n \n   public org.apache.commons.compress.compressors.zstandard.ZstdCompressorOutputStream(java.io.OutputStream, int) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;I)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #1                  // Method org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n+         1: invokespecial #13                 // Method org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n          4: aload_0\n-         5: new           #7                  // class com/github/luben/zstd/ZstdOutputStream\n+         5: new           #16                 // class com/github/luben/zstd/ZstdOutputStream\n          8: dup\n          9: aload_1\n         10: iload_2\n-        11: invokespecial #9                  // Method com/github/luben/zstd/ZstdOutputStream.\"<init>\":(Ljava/io/OutputStream;I)V\n-        14: putfield      #12                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+        11: invokespecial #18                 // Method com/github/luben/zstd/ZstdOutputStream.\"<init>\":(Ljava/io/OutputStream;I)V\n+        14: putfield      #21                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n         17: return\n       LineNumberTable:\n         line 76: 0\n         line 77: 4\n         line 78: 17\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream;\n             0      18     1 outStream   Ljava/io/OutputStream;\n             0      18     2 level   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public org.apache.commons.compress.compressors.zstandard.ZstdCompressorOutputStream(java.io.OutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n+         1: invokespecial #13                 // Method org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n          4: aload_0\n-         5: new           #7                  // class com/github/luben/zstd/ZstdOutputStream\n+         5: new           #16                 // class com/github/luben/zstd/ZstdOutputStream\n          8: dup\n          9: aload_1\n-        10: invokespecial #25                 // Method com/github/luben/zstd/ZstdOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-        13: putfield      #12                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+        10: invokespecial #43                 // Method com/github/luben/zstd/ZstdOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+        13: putfield      #21                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n         16: return\n       LineNumberTable:\n         line 86: 0\n         line 87: 4\n         line 88: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream;\n             0      17     1 outStream   Ljava/io/OutputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n-         4: invokevirtual #28                 // Method com/github/luben/zstd/ZstdOutputStream.close:()V\n+         1: getfield      #21                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+         4: invokevirtual #46                 // Method com/github/luben/zstd/ZstdOutputStream.close:()V\n          7: return\n       LineNumberTable:\n         line 92: 0\n         line 93: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #12                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+         1: getfield      #21                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n          4: iload_1\n-         5: invokevirtual #31                 // Method com/github/luben/zstd/ZstdOutputStream.write:(I)V\n+         5: invokevirtual #50                 // Method com/github/luben/zstd/ZstdOutputStream.write:(I)V\n          8: return\n       LineNumberTable:\n         line 97: 0\n         line 98: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream;\n             0       9     1     b   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #12                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+         1: getfield      #21                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokevirtual #35                 // Method com/github/luben/zstd/ZstdOutputStream.write:([BII)V\n+         7: invokevirtual #54                 // Method com/github/luben/zstd/ZstdOutputStream.write:([BII)V\n         10: return\n       LineNumberTable:\n         line 102: 0\n         line 103: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream;\n             0      11     1   buf   [B\n             0      11     2   off   I\n             0      11     3   len   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n-         4: invokevirtual #38                 // Method java/lang/Object.toString:()Ljava/lang/String;\n+         1: getfield      #21                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+         4: invokevirtual #62                 // Method java/lang/Object.toString:()Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 107: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream;\n \n   public void flush() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n-         4: invokevirtual #44                 // Method com/github/luben/zstd/ZstdOutputStream.flush:()V\n+         1: getfield      #21                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+         4: invokevirtual #67                 // Method com/github/luben/zstd/ZstdOutputStream.flush:()V\n          7: return\n       LineNumberTable:\n         line 112: 0\n         line 113: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream;\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"ZstdCompressorOutputStream.java\"\n"}]}
