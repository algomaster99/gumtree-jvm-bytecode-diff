{"diffoscope-json-version": 1, "source1": "first/QuotedPrintableCodec.class", "source2": "second/QuotedPrintableCodec.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,78 +1,78 @@\n-  SHA-256 checksum d506a07ac9ae213ec70a0586ed016988e9ac44f4ba0445cea3497cad37cb8acf\n+  SHA-256 checksum 577e803300325ac8b6ee776c461bb7d745f302f02f1c37ff3b1ed1e1013e5854\n   Compiled from \"QuotedPrintableCodec.java\"\n public class org.apache.commons.codec.net.QuotedPrintableCodec implements org.apache.commons.codec.BinaryEncoder,org.apache.commons.codec.BinaryDecoder,org.apache.commons.codec.StringEncoder,org.apache.commons.codec.StringDecoder\n   minor version: 0\n   major version: 50\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #7                          // org/apache/commons/codec/net/QuotedPrintableCodec\n   super_class: #57                        // java/lang/Object\n   interfaces: 4, fields: 9, methods: 25, attributes: 1\n Constant pool:\n-    #1 = Fieldref           #125.#126     // org/apache/commons/codec/Charsets.UTF_8:Ljava/nio/charset/Charset;\n-    #2 = Methodref          #7.#127       // org/apache/commons/codec/net/QuotedPrintableCodec.\"<init>\":(Ljava/nio/charset/Charset;Z)V\n-    #3 = Methodref          #57.#128      // java/lang/Object.\"<init>\":()V\n-    #4 = Fieldref           #7.#129       // org/apache/commons/codec/net/QuotedPrintableCodec.charset:Ljava/nio/charset/Charset;\n-    #5 = Fieldref           #7.#130       // org/apache/commons/codec/net/QuotedPrintableCodec.strict:Z\n-    #6 = Methodref          #131.#132     // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-    #7 = Class              #133          // org/apache/commons/codec/net/QuotedPrintableCodec\n-    #8 = Methodref          #13.#134      // java/io/ByteArrayOutputStream.write:(I)V\n-    #9 = Methodref          #135.#136     // org/apache/commons/codec/net/Utils.hexDigit:(I)C\n-   #10 = Methodref          #7.#137       // org/apache/commons/codec/net/QuotedPrintableCodec.encodeQuotedPrintable:(ILjava/io/ByteArrayOutputStream;)I\n-   #11 = Methodref          #7.#138       // org/apache/commons/codec/net/QuotedPrintableCodec.encodeQuotedPrintable:(Ljava/util/BitSet;[BZ)[B\n-   #12 = Fieldref           #7.#139       // org/apache/commons/codec/net/QuotedPrintableCodec.PRINTABLE_CHARS:Ljava/util/BitSet;\n-   #13 = Class              #140          // java/io/ByteArrayOutputStream\n-   #14 = Methodref          #13.#128      // java/io/ByteArrayOutputStream.\"<init>\":()V\n-   #15 = Methodref          #7.#141       // org/apache/commons/codec/net/QuotedPrintableCodec.getUnsignedOctet:(I[B)I\n-   #16 = Methodref          #54.#142      // java/util/BitSet.get:(I)Z\n-   #17 = Methodref          #7.#143       // org/apache/commons/codec/net/QuotedPrintableCodec.encodeByte:(IZLjava/io/ByteArrayOutputStream;)I\n-   #18 = Methodref          #7.#144       // org/apache/commons/codec/net/QuotedPrintableCodec.isWhitespace:(I)Z\n-   #19 = Methodref          #13.#145      // java/io/ByteArrayOutputStream.toByteArray:()[B\n-   #20 = Methodref          #135.#146     // org/apache/commons/codec/net/Utils.digit16:(B)I\n-   #21 = Class              #147          // java/lang/ArrayIndexOutOfBoundsException\n-   #22 = Class              #148          // org/apache/commons/codec/DecoderException\n-   #23 = String             #149          // Invalid quoted-printable encoding\n-   #24 = Methodref          #22.#150      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #25 = Methodref          #7.#151       // org/apache/commons/codec/net/QuotedPrintableCodec.decodeQuotedPrintable:([B)[B\n-   #26 = Methodref          #7.#152       // org/apache/commons/codec/net/QuotedPrintableCodec.getCharset:()Ljava/nio/charset/Charset;\n-   #27 = Methodref          #7.#153       // org/apache/commons/codec/net/QuotedPrintableCodec.encode:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n-   #28 = Class              #154          // java/lang/String\n-   #29 = Methodref          #155.#156     // org/apache/commons/codec/binary/StringUtils.getBytesUsAscii:(Ljava/lang/String;)[B\n-   #30 = Methodref          #7.#157       // org/apache/commons/codec/net/QuotedPrintableCodec.decode:([B)[B\n-   #31 = Methodref          #28.#158      // java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n-   #32 = Methodref          #28.#159      // java/lang/String.\"<init>\":([BLjava/lang/String;)V\n-   #33 = Methodref          #7.#160       // org/apache/commons/codec/net/QuotedPrintableCodec.decode:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n-   #34 = Class              #161          // \"[B\"\n-   #35 = Methodref          #7.#162       // org/apache/commons/codec/net/QuotedPrintableCodec.encode:([B)[B\n-   #36 = Methodref          #7.#163       // org/apache/commons/codec/net/QuotedPrintableCodec.encode:(Ljava/lang/String;)Ljava/lang/String;\n-   #37 = Class              #164          // org/apache/commons/codec/EncoderException\n-   #38 = Class              #165          // java/lang/StringBuilder\n-   #39 = Methodref          #38.#128      // java/lang/StringBuilder.\"<init>\":()V\n-   #40 = String             #166          // Objects of type\n-   #41 = Methodref          #38.#167      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #42 = Methodref          #57.#168      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #43 = Methodref          #169.#170     // java/lang/Class.getName:()Ljava/lang/String;\n-   #44 = String             #171          //  cannot be quoted-printable encoded\n-   #45 = Methodref          #38.#172      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #46 = Methodref          #37.#173      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n-   #47 = Methodref          #7.#174       // org/apache/commons/codec/net/QuotedPrintableCodec.decode:(Ljava/lang/String;)Ljava/lang/String;\n-   #48 = String             #175          //  cannot be quoted-printable decoded\n-   #49 = Methodref          #22.#173      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n-   #50 = Methodref          #131.#176     // java/nio/charset/Charset.name:()Ljava/lang/String;\n-   #51 = Methodref          #28.#177      // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-   #52 = Methodref          #155.#178     // org/apache/commons/codec/binary/StringUtils.newStringUsAscii:([B)Ljava/lang/String;\n-   #53 = Methodref          #28.#179      // java/lang/String.getBytes:(Ljava/lang/String;)[B\n-   #54 = Class              #180          // java/util/BitSet\n-   #55 = Methodref          #54.#181      // java/util/BitSet.\"<init>\":(I)V\n-   #56 = Methodref          #54.#182      // java/util/BitSet.set:(I)V\n-   #57 = Class              #183          // java/lang/Object\n-   #58 = Class              #184          // org/apache/commons/codec/BinaryEncoder\n-   #59 = Class              #185          // org/apache/commons/codec/BinaryDecoder\n-   #60 = Class              #186          // org/apache/commons/codec/StringEncoder\n-   #61 = Class              #187          // org/apache/commons/codec/StringDecoder\n+    #1 = Fieldref           #122.#123     // org/apache/commons/codec/Charsets.UTF_8:Ljava/nio/charset/Charset;\n+    #2 = Methodref          #7.#124       // org/apache/commons/codec/net/QuotedPrintableCodec.\"<init>\":(Ljava/nio/charset/Charset;Z)V\n+    #3 = Methodref          #57.#125      // java/lang/Object.\"<init>\":()V\n+    #4 = Fieldref           #7.#126       // org/apache/commons/codec/net/QuotedPrintableCodec.charset:Ljava/nio/charset/Charset;\n+    #5 = Fieldref           #7.#127       // org/apache/commons/codec/net/QuotedPrintableCodec.strict:Z\n+    #6 = Methodref          #128.#129     // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+    #7 = Class              #130          // org/apache/commons/codec/net/QuotedPrintableCodec\n+    #8 = Methodref          #13.#131      // java/io/ByteArrayOutputStream.write:(I)V\n+    #9 = Methodref          #132.#133     // org/apache/commons/codec/net/Utils.hexDigit:(I)C\n+   #10 = Methodref          #7.#134       // org/apache/commons/codec/net/QuotedPrintableCodec.encodeQuotedPrintable:(ILjava/io/ByteArrayOutputStream;)I\n+   #11 = Methodref          #7.#135       // org/apache/commons/codec/net/QuotedPrintableCodec.encodeQuotedPrintable:(Ljava/util/BitSet;[BZ)[B\n+   #12 = Fieldref           #7.#136       // org/apache/commons/codec/net/QuotedPrintableCodec.PRINTABLE_CHARS:Ljava/util/BitSet;\n+   #13 = Class              #137          // java/io/ByteArrayOutputStream\n+   #14 = Methodref          #13.#125      // java/io/ByteArrayOutputStream.\"<init>\":()V\n+   #15 = Methodref          #7.#138       // org/apache/commons/codec/net/QuotedPrintableCodec.getUnsignedOctet:(I[B)I\n+   #16 = Methodref          #54.#139      // java/util/BitSet.get:(I)Z\n+   #17 = Methodref          #7.#140       // org/apache/commons/codec/net/QuotedPrintableCodec.encodeByte:(IZLjava/io/ByteArrayOutputStream;)I\n+   #18 = Methodref          #7.#141       // org/apache/commons/codec/net/QuotedPrintableCodec.isWhitespace:(I)Z\n+   #19 = Methodref          #13.#142      // java/io/ByteArrayOutputStream.toByteArray:()[B\n+   #20 = Methodref          #132.#143     // org/apache/commons/codec/net/Utils.digit16:(B)I\n+   #21 = Class              #144          // java/lang/ArrayIndexOutOfBoundsException\n+   #22 = Class              #145          // org/apache/commons/codec/DecoderException\n+   #23 = String             #146          // Invalid quoted-printable encoding\n+   #24 = Methodref          #22.#147      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #25 = Methodref          #7.#148       // org/apache/commons/codec/net/QuotedPrintableCodec.decodeQuotedPrintable:([B)[B\n+   #26 = Methodref          #7.#149       // org/apache/commons/codec/net/QuotedPrintableCodec.getCharset:()Ljava/nio/charset/Charset;\n+   #27 = Methodref          #7.#150       // org/apache/commons/codec/net/QuotedPrintableCodec.encode:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n+   #28 = Class              #151          // java/lang/String\n+   #29 = Methodref          #152.#153     // org/apache/commons/codec/binary/StringUtils.getBytesUsAscii:(Ljava/lang/String;)[B\n+   #30 = Methodref          #7.#154       // org/apache/commons/codec/net/QuotedPrintableCodec.decode:([B)[B\n+   #31 = Methodref          #28.#155      // java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n+   #32 = Methodref          #28.#156      // java/lang/String.\"<init>\":([BLjava/lang/String;)V\n+   #33 = Methodref          #7.#157       // org/apache/commons/codec/net/QuotedPrintableCodec.decode:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n+   #34 = Class              #158          // \"[B\"\n+   #35 = Methodref          #7.#159       // org/apache/commons/codec/net/QuotedPrintableCodec.encode:([B)[B\n+   #36 = Methodref          #7.#160       // org/apache/commons/codec/net/QuotedPrintableCodec.encode:(Ljava/lang/String;)Ljava/lang/String;\n+   #37 = Class              #161          // org/apache/commons/codec/EncoderException\n+   #38 = Class              #162          // java/lang/StringBuilder\n+   #39 = Methodref          #38.#125      // java/lang/StringBuilder.\"<init>\":()V\n+   #40 = String             #163          // Objects of type\n+   #41 = Methodref          #38.#164      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #42 = Methodref          #57.#165      // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #43 = Methodref          #166.#167     // java/lang/Class.getName:()Ljava/lang/String;\n+   #44 = String             #168          //  cannot be quoted-printable encoded\n+   #45 = Methodref          #38.#169      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #46 = Methodref          #37.#170      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+   #47 = Methodref          #7.#171       // org/apache/commons/codec/net/QuotedPrintableCodec.decode:(Ljava/lang/String;)Ljava/lang/String;\n+   #48 = String             #172          //  cannot be quoted-printable decoded\n+   #49 = Methodref          #22.#170      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n+   #50 = Methodref          #128.#173     // java/nio/charset/Charset.name:()Ljava/lang/String;\n+   #51 = Methodref          #28.#174      // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+   #52 = Methodref          #152.#175     // org/apache/commons/codec/binary/StringUtils.newStringUsAscii:([B)Ljava/lang/String;\n+   #53 = Methodref          #28.#176      // java/lang/String.getBytes:(Ljava/lang/String;)[B\n+   #54 = Class              #177          // java/util/BitSet\n+   #55 = Methodref          #54.#178      // java/util/BitSet.\"<init>\":(I)V\n+   #56 = Methodref          #54.#179      // java/util/BitSet.set:(I)V\n+   #57 = Class              #180          // java/lang/Object\n+   #58 = Class              #181          // org/apache/commons/codec/BinaryEncoder\n+   #59 = Class              #182          // org/apache/commons/codec/BinaryDecoder\n+   #60 = Class              #183          // org/apache/commons/codec/StringEncoder\n+   #61 = Class              #184          // org/apache/commons/codec/StringDecoder\n    #62 = Utf8               charset\n    #63 = Utf8               Ljava/nio/charset/Charset;\n    #64 = Utf8               strict\n    #65 = Utf8               Z\n    #66 = Utf8               PRINTABLE_CHARS\n    #67 = Utf8               Ljava/util/BitSet;\n    #68 = Utf8               ESCAPE_CHAR\n@@ -95,148 +95,145 @@\n    #85 = Utf8               Code\n    #86 = Utf8               LineNumberTable\n    #87 = Utf8               (Z)V\n    #88 = Utf8               (Ljava/nio/charset/Charset;)V\n    #89 = Utf8               (Ljava/nio/charset/Charset;Z)V\n    #90 = Utf8               (Ljava/lang/String;)V\n    #91 = Utf8               Exceptions\n-   #92 = Class              #188          // java/nio/charset/IllegalCharsetNameException\n-   #93 = Class              #189          // java/lang/IllegalArgumentException\n-   #94 = Class              #190          // java/nio/charset/UnsupportedCharsetException\n+   #92 = Class              #185          // java/nio/charset/IllegalCharsetNameException\n+   #93 = Class              #186          // java/lang/IllegalArgumentException\n+   #94 = Class              #187          // java/nio/charset/UnsupportedCharsetException\n    #95 = Utf8               encodeQuotedPrintable\n    #96 = Utf8               (ILjava/io/ByteArrayOutputStream;)I\n    #97 = Utf8               getUnsignedOctet\n    #98 = Utf8               (I[B)I\n    #99 = Utf8               StackMapTable\n   #100 = Utf8               encodeByte\n   #101 = Utf8               (IZLjava/io/ByteArrayOutputStream;)I\n   #102 = Utf8               isWhitespace\n   #103 = Utf8               (I)Z\n   #104 = Utf8               (Ljava/util/BitSet;[B)[B\n   #105 = Utf8               (Ljava/util/BitSet;[BZ)[B\n-  #106 = Class              #140          // java/io/ByteArrayOutputStream\n-  #107 = Class              #180          // java/util/BitSet\n-  #108 = Utf8               decodeQuotedPrintable\n-  #109 = Utf8               ([B)[B\n-  #110 = Class              #147          // java/lang/ArrayIndexOutOfBoundsException\n-  #111 = Utf8               encode\n-  #112 = Utf8               decode\n-  #113 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #114 = Utf8               (Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n-  #115 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #116 = Class              #191          // java/io/UnsupportedEncodingException\n-  #117 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #118 = Utf8               getCharset\n-  #119 = Utf8               ()Ljava/nio/charset/Charset;\n-  #120 = Utf8               getDefaultCharset\n-  #121 = Utf8               ()Ljava/lang/String;\n-  #122 = Utf8               <clinit>\n-  #123 = Utf8               SourceFile\n-  #124 = Utf8               QuotedPrintableCodec.java\n-  #125 = Class              #192          // org/apache/commons/codec/Charsets\n-  #126 = NameAndType        #193:#63      // UTF_8:Ljava/nio/charset/Charset;\n-  #127 = NameAndType        #83:#89       // \"<init>\":(Ljava/nio/charset/Charset;Z)V\n-  #128 = NameAndType        #83:#84       // \"<init>\":()V\n-  #129 = NameAndType        #62:#63       // charset:Ljava/nio/charset/Charset;\n-  #130 = NameAndType        #64:#65       // strict:Z\n-  #131 = Class              #194          // java/nio/charset/Charset\n-  #132 = NameAndType        #195:#196     // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #133 = Utf8               org/apache/commons/codec/net/QuotedPrintableCodec\n-  #134 = NameAndType        #197:#198     // write:(I)V\n-  #135 = Class              #199          // org/apache/commons/codec/net/Utils\n-  #136 = NameAndType        #200:#201     // hexDigit:(I)C\n-  #137 = NameAndType        #95:#96       // encodeQuotedPrintable:(ILjava/io/ByteArrayOutputStream;)I\n-  #138 = NameAndType        #95:#105      // encodeQuotedPrintable:(Ljava/util/BitSet;[BZ)[B\n-  #139 = NameAndType        #66:#67       // PRINTABLE_CHARS:Ljava/util/BitSet;\n-  #140 = Utf8               java/io/ByteArrayOutputStream\n-  #141 = NameAndType        #97:#98       // getUnsignedOctet:(I[B)I\n-  #142 = NameAndType        #202:#103     // get:(I)Z\n-  #143 = NameAndType        #100:#101     // encodeByte:(IZLjava/io/ByteArrayOutputStream;)I\n-  #144 = NameAndType        #102:#103     // isWhitespace:(I)Z\n-  #145 = NameAndType        #203:#204     // toByteArray:()[B\n-  #146 = NameAndType        #205:#206     // digit16:(B)I\n-  #147 = Utf8               java/lang/ArrayIndexOutOfBoundsException\n-  #148 = Utf8               org/apache/commons/codec/DecoderException\n-  #149 = Utf8               Invalid quoted-printable encoding\n-  #150 = NameAndType        #83:#207      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #151 = NameAndType        #108:#109     // decodeQuotedPrintable:([B)[B\n-  #152 = NameAndType        #118:#119     // getCharset:()Ljava/nio/charset/Charset;\n-  #153 = NameAndType        #111:#114     // encode:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n-  #154 = Utf8               java/lang/String\n-  #155 = Class              #208          // org/apache/commons/codec/binary/StringUtils\n-  #156 = NameAndType        #209:#210     // getBytesUsAscii:(Ljava/lang/String;)[B\n-  #157 = NameAndType        #112:#109     // decode:([B)[B\n-  #158 = NameAndType        #83:#211      // \"<init>\":([BLjava/nio/charset/Charset;)V\n-  #159 = NameAndType        #83:#212      // \"<init>\":([BLjava/lang/String;)V\n-  #160 = NameAndType        #112:#114     // decode:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n-  #161 = Utf8               [B\n-  #162 = NameAndType        #111:#109     // encode:([B)[B\n-  #163 = NameAndType        #111:#113     // encode:(Ljava/lang/String;)Ljava/lang/String;\n-  #164 = Utf8               org/apache/commons/codec/EncoderException\n-  #165 = Utf8               java/lang/StringBuilder\n-  #166 = Utf8               Objects of type\n-  #167 = NameAndType        #213:#214     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #168 = NameAndType        #215:#216     // getClass:()Ljava/lang/Class;\n-  #169 = Class              #217          // java/lang/Class\n-  #170 = NameAndType        #218:#121     // getName:()Ljava/lang/String;\n-  #171 = Utf8                cannot be quoted-printable encoded\n-  #172 = NameAndType        #219:#121     // toString:()Ljava/lang/String;\n-  #173 = NameAndType        #83:#90       // \"<init>\":(Ljava/lang/String;)V\n-  #174 = NameAndType        #112:#113     // decode:(Ljava/lang/String;)Ljava/lang/String;\n-  #175 = Utf8                cannot be quoted-printable decoded\n-  #176 = NameAndType        #220:#121     // name:()Ljava/lang/String;\n-  #177 = NameAndType        #221:#222     // getBytes:(Ljava/nio/charset/Charset;)[B\n-  #178 = NameAndType        #223:#224     // newStringUsAscii:([B)Ljava/lang/String;\n-  #179 = NameAndType        #221:#210     // getBytes:(Ljava/lang/String;)[B\n-  #180 = Utf8               java/util/BitSet\n-  #181 = NameAndType        #83:#198      // \"<init>\":(I)V\n-  #182 = NameAndType        #225:#198     // set:(I)V\n-  #183 = Utf8               java/lang/Object\n-  #184 = Utf8               org/apache/commons/codec/BinaryEncoder\n-  #185 = Utf8               org/apache/commons/codec/BinaryDecoder\n-  #186 = Utf8               org/apache/commons/codec/StringEncoder\n-  #187 = Utf8               org/apache/commons/codec/StringDecoder\n-  #188 = Utf8               java/nio/charset/IllegalCharsetNameException\n-  #189 = Utf8               java/lang/IllegalArgumentException\n-  #190 = Utf8               java/nio/charset/UnsupportedCharsetException\n-  #191 = Utf8               java/io/UnsupportedEncodingException\n-  #192 = Utf8               org/apache/commons/codec/Charsets\n-  #193 = Utf8               UTF_8\n-  #194 = Utf8               java/nio/charset/Charset\n-  #195 = Utf8               forName\n-  #196 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #197 = Utf8               write\n-  #198 = Utf8               (I)V\n-  #199 = Utf8               org/apache/commons/codec/net/Utils\n-  #200 = Utf8               hexDigit\n-  #201 = Utf8               (I)C\n-  #202 = Utf8               get\n-  #203 = Utf8               toByteArray\n-  #204 = Utf8               ()[B\n-  #205 = Utf8               digit16\n-  #206 = Utf8               (B)I\n-  #207 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #208 = Utf8               org/apache/commons/codec/binary/StringUtils\n-  #209 = Utf8               getBytesUsAscii\n-  #210 = Utf8               (Ljava/lang/String;)[B\n-  #211 = Utf8               ([BLjava/nio/charset/Charset;)V\n-  #212 = Utf8               ([BLjava/lang/String;)V\n-  #213 = Utf8               append\n-  #214 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #215 = Utf8               getClass\n-  #216 = Utf8               ()Ljava/lang/Class;\n-  #217 = Utf8               java/lang/Class\n-  #218 = Utf8               getName\n-  #219 = Utf8               toString\n-  #220 = Utf8               name\n-  #221 = Utf8               getBytes\n-  #222 = Utf8               (Ljava/nio/charset/Charset;)[B\n-  #223 = Utf8               newStringUsAscii\n-  #224 = Utf8               ([B)Ljava/lang/String;\n-  #225 = Utf8               set\n+  #106 = Utf8               decodeQuotedPrintable\n+  #107 = Utf8               ([B)[B\n+  #108 = Utf8               encode\n+  #109 = Utf8               decode\n+  #110 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #111 = Utf8               (Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n+  #112 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #113 = Class              #188          // java/io/UnsupportedEncodingException\n+  #114 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #115 = Utf8               getCharset\n+  #116 = Utf8               ()Ljava/nio/charset/Charset;\n+  #117 = Utf8               getDefaultCharset\n+  #118 = Utf8               ()Ljava/lang/String;\n+  #119 = Utf8               <clinit>\n+  #120 = Utf8               SourceFile\n+  #121 = Utf8               QuotedPrintableCodec.java\n+  #122 = Class              #189          // org/apache/commons/codec/Charsets\n+  #123 = NameAndType        #190:#63      // UTF_8:Ljava/nio/charset/Charset;\n+  #124 = NameAndType        #83:#89       // \"<init>\":(Ljava/nio/charset/Charset;Z)V\n+  #125 = NameAndType        #83:#84       // \"<init>\":()V\n+  #126 = NameAndType        #62:#63       // charset:Ljava/nio/charset/Charset;\n+  #127 = NameAndType        #64:#65       // strict:Z\n+  #128 = Class              #191          // java/nio/charset/Charset\n+  #129 = NameAndType        #192:#193     // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #130 = Utf8               org/apache/commons/codec/net/QuotedPrintableCodec\n+  #131 = NameAndType        #194:#195     // write:(I)V\n+  #132 = Class              #196          // org/apache/commons/codec/net/Utils\n+  #133 = NameAndType        #197:#198     // hexDigit:(I)C\n+  #134 = NameAndType        #95:#96       // encodeQuotedPrintable:(ILjava/io/ByteArrayOutputStream;)I\n+  #135 = NameAndType        #95:#105      // encodeQuotedPrintable:(Ljava/util/BitSet;[BZ)[B\n+  #136 = NameAndType        #66:#67       // PRINTABLE_CHARS:Ljava/util/BitSet;\n+  #137 = Utf8               java/io/ByteArrayOutputStream\n+  #138 = NameAndType        #97:#98       // getUnsignedOctet:(I[B)I\n+  #139 = NameAndType        #199:#103     // get:(I)Z\n+  #140 = NameAndType        #100:#101     // encodeByte:(IZLjava/io/ByteArrayOutputStream;)I\n+  #141 = NameAndType        #102:#103     // isWhitespace:(I)Z\n+  #142 = NameAndType        #200:#201     // toByteArray:()[B\n+  #143 = NameAndType        #202:#203     // digit16:(B)I\n+  #144 = Utf8               java/lang/ArrayIndexOutOfBoundsException\n+  #145 = Utf8               org/apache/commons/codec/DecoderException\n+  #146 = Utf8               Invalid quoted-printable encoding\n+  #147 = NameAndType        #83:#204      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #148 = NameAndType        #106:#107     // decodeQuotedPrintable:([B)[B\n+  #149 = NameAndType        #115:#116     // getCharset:()Ljava/nio/charset/Charset;\n+  #150 = NameAndType        #108:#111     // encode:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n+  #151 = Utf8               java/lang/String\n+  #152 = Class              #205          // org/apache/commons/codec/binary/StringUtils\n+  #153 = NameAndType        #206:#207     // getBytesUsAscii:(Ljava/lang/String;)[B\n+  #154 = NameAndType        #109:#107     // decode:([B)[B\n+  #155 = NameAndType        #83:#208      // \"<init>\":([BLjava/nio/charset/Charset;)V\n+  #156 = NameAndType        #83:#209      // \"<init>\":([BLjava/lang/String;)V\n+  #157 = NameAndType        #109:#111     // decode:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n+  #158 = Utf8               [B\n+  #159 = NameAndType        #108:#107     // encode:([B)[B\n+  #160 = NameAndType        #108:#110     // encode:(Ljava/lang/String;)Ljava/lang/String;\n+  #161 = Utf8               org/apache/commons/codec/EncoderException\n+  #162 = Utf8               java/lang/StringBuilder\n+  #163 = Utf8               Objects of type\n+  #164 = NameAndType        #210:#211     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #165 = NameAndType        #212:#213     // getClass:()Ljava/lang/Class;\n+  #166 = Class              #214          // java/lang/Class\n+  #167 = NameAndType        #215:#118     // getName:()Ljava/lang/String;\n+  #168 = Utf8                cannot be quoted-printable encoded\n+  #169 = NameAndType        #216:#118     // toString:()Ljava/lang/String;\n+  #170 = NameAndType        #83:#90       // \"<init>\":(Ljava/lang/String;)V\n+  #171 = NameAndType        #109:#110     // decode:(Ljava/lang/String;)Ljava/lang/String;\n+  #172 = Utf8                cannot be quoted-printable decoded\n+  #173 = NameAndType        #217:#118     // name:()Ljava/lang/String;\n+  #174 = NameAndType        #218:#219     // getBytes:(Ljava/nio/charset/Charset;)[B\n+  #175 = NameAndType        #220:#221     // newStringUsAscii:([B)Ljava/lang/String;\n+  #176 = NameAndType        #218:#207     // getBytes:(Ljava/lang/String;)[B\n+  #177 = Utf8               java/util/BitSet\n+  #178 = NameAndType        #83:#195      // \"<init>\":(I)V\n+  #179 = NameAndType        #222:#195     // set:(I)V\n+  #180 = Utf8               java/lang/Object\n+  #181 = Utf8               org/apache/commons/codec/BinaryEncoder\n+  #182 = Utf8               org/apache/commons/codec/BinaryDecoder\n+  #183 = Utf8               org/apache/commons/codec/StringEncoder\n+  #184 = Utf8               org/apache/commons/codec/StringDecoder\n+  #185 = Utf8               java/nio/charset/IllegalCharsetNameException\n+  #186 = Utf8               java/lang/IllegalArgumentException\n+  #187 = Utf8               java/nio/charset/UnsupportedCharsetException\n+  #188 = Utf8               java/io/UnsupportedEncodingException\n+  #189 = Utf8               org/apache/commons/codec/Charsets\n+  #190 = Utf8               UTF_8\n+  #191 = Utf8               java/nio/charset/Charset\n+  #192 = Utf8               forName\n+  #193 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #194 = Utf8               write\n+  #195 = Utf8               (I)V\n+  #196 = Utf8               org/apache/commons/codec/net/Utils\n+  #197 = Utf8               hexDigit\n+  #198 = Utf8               (I)C\n+  #199 = Utf8               get\n+  #200 = Utf8               toByteArray\n+  #201 = Utf8               ()[B\n+  #202 = Utf8               digit16\n+  #203 = Utf8               (B)I\n+  #204 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #205 = Utf8               org/apache/commons/codec/binary/StringUtils\n+  #206 = Utf8               getBytesUsAscii\n+  #207 = Utf8               (Ljava/lang/String;)[B\n+  #208 = Utf8               ([BLjava/nio/charset/Charset;)V\n+  #209 = Utf8               ([BLjava/lang/String;)V\n+  #210 = Utf8               append\n+  #211 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #212 = Utf8               getClass\n+  #213 = Utf8               ()Ljava/lang/Class;\n+  #214 = Utf8               java/lang/Class\n+  #215 = Utf8               getName\n+  #216 = Utf8               toString\n+  #217 = Utf8               name\n+  #218 = Utf8               getBytes\n+  #219 = Utf8               (Ljava/nio/charset/Charset;)[B\n+  #220 = Utf8               newStringUsAscii\n+  #221 = Utf8               ([B)Ljava/lang/String;\n+  #222 = Utf8               set\n {\n   private final java.nio.charset.Charset charset;\n     descriptor: Ljava/nio/charset/Charset;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final boolean strict;\n     descriptor: Z\n@@ -1003,57 +1000,56 @@\n       stack=4, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_1\n          7: instanceof    #34                 // class \"[B\"\n-        10: ifeq          25\n+        10: ifeq          22\n         13: aload_0\n         14: aload_1\n         15: checkcast     #34                 // class \"[B\"\n-        18: checkcast     #34                 // class \"[B\"\n-        21: invokevirtual #35                 // Method encode:([B)[B\n-        24: areturn\n-        25: aload_1\n-        26: instanceof    #28                 // class java/lang/String\n-        29: ifeq          41\n-        32: aload_0\n-        33: aload_1\n-        34: checkcast     #28                 // class java/lang/String\n-        37: invokevirtual #36                 // Method encode:(Ljava/lang/String;)Ljava/lang/String;\n-        40: areturn\n-        41: new           #37                 // class org/apache/commons/codec/EncoderException\n-        44: dup\n-        45: new           #38                 // class java/lang/StringBuilder\n-        48: dup\n-        49: invokespecial #39                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        52: ldc           #40                 // String Objects of type\n-        54: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        57: aload_1\n-        58: invokevirtual #42                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-        61: invokevirtual #43                 // Method java/lang/Class.getName:()Ljava/lang/String;\n-        64: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        67: ldc           #44                 // String  cannot be quoted-printable encoded\n-        69: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        72: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        75: invokespecial #46                 // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n-        78: athrow\n+        18: invokevirtual #35                 // Method encode:([B)[B\n+        21: areturn\n+        22: aload_1\n+        23: instanceof    #28                 // class java/lang/String\n+        26: ifeq          38\n+        29: aload_0\n+        30: aload_1\n+        31: checkcast     #28                 // class java/lang/String\n+        34: invokevirtual #36                 // Method encode:(Ljava/lang/String;)Ljava/lang/String;\n+        37: areturn\n+        38: new           #37                 // class org/apache/commons/codec/EncoderException\n+        41: dup\n+        42: new           #38                 // class java/lang/StringBuilder\n+        45: dup\n+        46: invokespecial #39                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        49: ldc           #40                 // String Objects of type\n+        51: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        54: aload_1\n+        55: invokevirtual #42                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        58: invokevirtual #43                 // Method java/lang/Class.getName:()Ljava/lang/String;\n+        61: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        64: ldc           #44                 // String  cannot be quoted-printable encoded\n+        66: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        69: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        72: invokespecial #46                 // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+        75: athrow\n       LineNumberTable:\n         line 501: 0\n         line 502: 4\n         line 503: 6\n         line 504: 13\n-        line 505: 25\n-        line 506: 32\n-        line 508: 41\n-        line 509: 58\n+        line 505: 22\n+        line 506: 29\n+        line 508: 38\n+        line 509: 55\n       StackMapTable: number_of_entries = 3\n         frame_type = 6 /* same */\n-        frame_type = 18 /* same */\n+        frame_type = 15 /* same */\n         frame_type = 15 /* same */\n     Exceptions:\n       throws org.apache.commons.codec.EncoderException\n \n   public java.lang.Object decode(java.lang.Object) throws org.apache.commons.codec.DecoderException;\n     descriptor: (Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n@@ -1061,57 +1057,56 @@\n       stack=4, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_1\n          7: instanceof    #34                 // class \"[B\"\n-        10: ifeq          25\n+        10: ifeq          22\n         13: aload_0\n         14: aload_1\n         15: checkcast     #34                 // class \"[B\"\n-        18: checkcast     #34                 // class \"[B\"\n-        21: invokevirtual #30                 // Method decode:([B)[B\n-        24: areturn\n-        25: aload_1\n-        26: instanceof    #28                 // class java/lang/String\n-        29: ifeq          41\n-        32: aload_0\n-        33: aload_1\n-        34: checkcast     #28                 // class java/lang/String\n-        37: invokevirtual #47                 // Method decode:(Ljava/lang/String;)Ljava/lang/String;\n-        40: areturn\n-        41: new           #22                 // class org/apache/commons/codec/DecoderException\n-        44: dup\n-        45: new           #38                 // class java/lang/StringBuilder\n-        48: dup\n-        49: invokespecial #39                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        52: ldc           #40                 // String Objects of type\n-        54: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        57: aload_1\n-        58: invokevirtual #42                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-        61: invokevirtual #43                 // Method java/lang/Class.getName:()Ljava/lang/String;\n-        64: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        67: ldc           #48                 // String  cannot be quoted-printable decoded\n-        69: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        72: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        75: invokespecial #49                 // Method org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n-        78: athrow\n+        18: invokevirtual #30                 // Method decode:([B)[B\n+        21: areturn\n+        22: aload_1\n+        23: instanceof    #28                 // class java/lang/String\n+        26: ifeq          38\n+        29: aload_0\n+        30: aload_1\n+        31: checkcast     #28                 // class java/lang/String\n+        34: invokevirtual #47                 // Method decode:(Ljava/lang/String;)Ljava/lang/String;\n+        37: areturn\n+        38: new           #22                 // class org/apache/commons/codec/DecoderException\n+        41: dup\n+        42: new           #38                 // class java/lang/StringBuilder\n+        45: dup\n+        46: invokespecial #39                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        49: ldc           #40                 // String Objects of type\n+        51: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        54: aload_1\n+        55: invokevirtual #42                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        58: invokevirtual #43                 // Method java/lang/Class.getName:()Ljava/lang/String;\n+        61: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        64: ldc           #48                 // String  cannot be quoted-printable decoded\n+        66: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        69: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        72: invokespecial #49                 // Method org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n+        75: athrow\n       LineNumberTable:\n         line 527: 0\n         line 528: 4\n         line 529: 6\n         line 530: 13\n-        line 531: 25\n-        line 532: 32\n-        line 534: 41\n-        line 535: 58\n+        line 531: 22\n+        line 532: 29\n+        line 534: 38\n+        line 535: 55\n       StackMapTable: number_of_entries = 3\n         frame_type = 6 /* same */\n-        frame_type = 18 /* same */\n+        frame_type = 15 /* same */\n         frame_type = 15 /* same */\n     Exceptions:\n       throws org.apache.commons.codec.DecoderException\n \n   public java.nio.charset.Charset getCharset();\n     descriptor: ()Ljava/nio/charset/Charset;\n     flags: (0x0001) ACC_PUBLIC\n"}]}
