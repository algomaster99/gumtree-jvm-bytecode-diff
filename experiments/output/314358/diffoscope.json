{"diffoscope-json-version": 1, "source1": "first/WildcardFilter.class", "source2": "second/WildcardFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,127 +1,127 @@\n-  SHA-256 checksum cf442d9203068fca0873456db4ef5352db3190094889608ef9a48693540faad1\n+  SHA-256 checksum 9b6529d3c64fbb0ae94b87493591e97b0fe0a52f6055e9c11756a356260e8175\n   Compiled from \"WildcardFilter.java\"\n public class org.apache.commons.io.filefilter.WildcardFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #24                         // org/apache/commons/io/filefilter/WildcardFilter\n-  super_class: #25                        // org/apache/commons/io/filefilter/AbstractFileFilter\n+  this_class: #15                         // org/apache/commons/io/filefilter/WildcardFilter\n+  super_class: #2                         // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 1, fields: 2, methods: 6, attributes: 3\n Constant pool:\n-    #1 = Methodref          #25.#53       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-    #2 = Class              #54           // java/lang/IllegalArgumentException\n-    #3 = String             #55           // The wildcard list must not be null\n-    #4 = Methodref          #2.#56        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #5 = Fieldref           #24.#57       // org/apache/commons/io/filefilter/WildcardFilter.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-    #6 = InterfaceMethodref #39.#58       // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-    #7 = Class              #33           // \"[Ljava/lang/String;\"\n-    #8 = Fieldref           #24.#59       // org/apache/commons/io/filefilter/WildcardFilter.wildcards:[Ljava/lang/String;\n-    #9 = String             #60           // The wildcard must not be null\n-   #10 = Class              #61           // java/lang/String\n-   #11 = String             #62           // The wildcard array must not be null\n-   #12 = Methodref          #63.#64       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #13 = Methodref          #22.#65       // java/io/File.isDirectory:()Z\n-   #14 = Methodref          #22.#66       // java/io/File.getName:()Ljava/lang/String;\n-   #15 = Methodref          #67.#68       // org/apache/commons/io/FilenameUtils.wildcardMatch:(Ljava/lang/String;Ljava/lang/String;)Z\n-   #16 = Class              #69           // java/nio/file/LinkOption\n-   #17 = Methodref          #70.#71       // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #18 = Fieldref           #72.#73       // java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n-   #19 = InterfaceMethodref #74.#75       // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n-   #20 = Methodref          #76.#77       // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-   #21 = Fieldref           #72.#78       // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-   #22 = Class              #79           // java/io/File\n-   #23 = Methodref          #22.#80       // java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-   #24 = Class              #81           // org/apache/commons/io/filefilter/WildcardFilter\n-   #25 = Class              #82           // org/apache/commons/io/filefilter/AbstractFileFilter\n-   #26 = Class              #83           // java/io/Serializable\n-   #27 = Utf8               serialVersionUID\n-   #28 = Utf8               J\n-   #29 = Utf8               ConstantValue\n-   #30 = Long               -5037645902506953517l\n-   #32 = Utf8               wildcards\n-   #33 = Utf8               [Ljava/lang/String;\n-   #34 = Utf8               <init>\n-   #35 = Utf8               (Ljava/util/List;)V\n-   #36 = Utf8               Code\n-   #37 = Utf8               LineNumberTable\n-   #38 = Utf8               StackMapTable\n-   #39 = Class              #84           // java/util/List\n-   #40 = Utf8               Signature\n-   #41 = Utf8               (Ljava/util/List<Ljava/lang/String;>;)V\n-   #42 = Utf8               (Ljava/lang/String;)V\n-   #43 = Utf8               ([Ljava/lang/String;)V\n-   #44 = Utf8               accept\n-   #45 = Utf8               (Ljava/io/File;)Z\n-   #46 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #47 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n-   #48 = Utf8               SourceFile\n-   #49 = Utf8               WildcardFilter.java\n-   #50 = Utf8               Deprecated\n-   #51 = Utf8               RuntimeVisibleAnnotations\n-   #52 = Utf8               Ljava/lang/Deprecated;\n-   #53 = NameAndType        #34:#85       // \"<init>\":()V\n-   #54 = Utf8               java/lang/IllegalArgumentException\n-   #55 = Utf8               The wildcard list must not be null\n-   #56 = NameAndType        #34:#42       // \"<init>\":(Ljava/lang/String;)V\n-   #57 = NameAndType        #86:#33       // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-   #58 = NameAndType        #87:#88       // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-   #59 = NameAndType        #32:#33       // wildcards:[Ljava/lang/String;\n-   #60 = Utf8               The wildcard must not be null\n-   #61 = Utf8               java/lang/String\n-   #62 = Utf8               The wildcard array must not be null\n-   #63 = Class              #89           // java/lang/System\n-   #64 = NameAndType        #90:#91       // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #65 = NameAndType        #92:#93       // isDirectory:()Z\n-   #66 = NameAndType        #94:#95       // getName:()Ljava/lang/String;\n-   #67 = Class              #96           // org/apache/commons/io/FilenameUtils\n-   #68 = NameAndType        #97:#98       // wildcardMatch:(Ljava/lang/String;Ljava/lang/String;)Z\n-   #69 = Utf8               java/nio/file/LinkOption\n-   #70 = Class              #99           // java/nio/file/Files\n-   #71 = NameAndType        #92:#100      // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #72 = Class              #101          // java/nio/file/FileVisitResult\n-   #73 = NameAndType        #102:#103     // TERMINATE:Ljava/nio/file/FileVisitResult;\n-   #74 = Class              #104          // java/nio/file/Path\n-   #75 = NameAndType        #105:#106     // getFileName:()Ljava/nio/file/Path;\n-   #76 = Class              #107          // java/util/Objects\n-   #77 = NameAndType        #108:#109     // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-   #78 = NameAndType        #110:#103     // CONTINUE:Ljava/nio/file/FileVisitResult;\n-   #79 = Utf8               java/io/File\n-   #80 = NameAndType        #34:#111      // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-   #81 = Utf8               org/apache/commons/io/filefilter/WildcardFilter\n-   #82 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-   #83 = Utf8               java/io/Serializable\n-   #84 = Utf8               java/util/List\n-   #85 = Utf8               ()V\n-   #86 = Utf8               EMPTY_STRING_ARRAY\n-   #87 = Utf8               toArray\n-   #88 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-   #89 = Utf8               java/lang/System\n-   #90 = Utf8               arraycopy\n-   #91 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #92 = Utf8               isDirectory\n-   #93 = Utf8               ()Z\n-   #94 = Utf8               getName\n-   #95 = Utf8               ()Ljava/lang/String;\n-   #96 = Utf8               org/apache/commons/io/FilenameUtils\n-   #97 = Utf8               wildcardMatch\n-   #98 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n-   #99 = Utf8               java/nio/file/Files\n-  #100 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #101 = Utf8               java/nio/file/FileVisitResult\n-  #102 = Utf8               TERMINATE\n-  #103 = Utf8               Ljava/nio/file/FileVisitResult;\n-  #104 = Utf8               java/nio/file/Path\n-  #105 = Utf8               getFileName\n-  #106 = Utf8               ()Ljava/nio/file/Path;\n-  #107 = Utf8               java/util/Objects\n-  #108 = Utf8               toString\n-  #109 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-  #110 = Utf8               CONTINUE\n-  #111 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n+    #1 = Methodref          #2.#3         // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+    #2 = Class              #4            // org/apache/commons/io/filefilter/AbstractFileFilter\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Class              #8            // java/lang/IllegalArgumentException\n+    #8 = Utf8               java/lang/IllegalArgumentException\n+    #9 = String             #10           // The wildcard list must not be null\n+   #10 = Utf8               The wildcard list must not be null\n+   #11 = Methodref          #7.#12        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #12 = NameAndType        #5:#13        // \"<init>\":(Ljava/lang/String;)V\n+   #13 = Utf8               (Ljava/lang/String;)V\n+   #14 = Fieldref           #15.#16       // org/apache/commons/io/filefilter/WildcardFilter.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+   #15 = Class              #17           // org/apache/commons/io/filefilter/WildcardFilter\n+   #16 = NameAndType        #18:#19       // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+   #17 = Utf8               org/apache/commons/io/filefilter/WildcardFilter\n+   #18 = Utf8               EMPTY_STRING_ARRAY\n+   #19 = Utf8               [Ljava/lang/String;\n+   #20 = InterfaceMethodref #21.#22       // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+   #21 = Class              #23           // java/util/List\n+   #22 = NameAndType        #24:#25       // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+   #23 = Utf8               java/util/List\n+   #24 = Utf8               toArray\n+   #25 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+   #26 = Class              #19           // \"[Ljava/lang/String;\"\n+   #27 = Fieldref           #15.#28       // org/apache/commons/io/filefilter/WildcardFilter.wildcards:[Ljava/lang/String;\n+   #28 = NameAndType        #29:#19       // wildcards:[Ljava/lang/String;\n+   #29 = Utf8               wildcards\n+   #30 = String             #31           // The wildcard must not be null\n+   #31 = Utf8               The wildcard must not be null\n+   #32 = Class              #33           // java/lang/String\n+   #33 = Utf8               java/lang/String\n+   #34 = String             #35           // The wildcard array must not be null\n+   #35 = Utf8               The wildcard array must not be null\n+   #36 = Methodref          #37.#38       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #37 = Class              #39           // java/lang/System\n+   #38 = NameAndType        #40:#41       // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #39 = Utf8               java/lang/System\n+   #40 = Utf8               arraycopy\n+   #41 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #42 = Methodref          #43.#44       // java/io/File.isDirectory:()Z\n+   #43 = Class              #45           // java/io/File\n+   #44 = NameAndType        #46:#47       // isDirectory:()Z\n+   #45 = Utf8               java/io/File\n+   #46 = Utf8               isDirectory\n+   #47 = Utf8               ()Z\n+   #48 = Methodref          #43.#49       // java/io/File.getName:()Ljava/lang/String;\n+   #49 = NameAndType        #50:#51       // getName:()Ljava/lang/String;\n+   #50 = Utf8               getName\n+   #51 = Utf8               ()Ljava/lang/String;\n+   #52 = Methodref          #53.#54       // org/apache/commons/io/FilenameUtils.wildcardMatch:(Ljava/lang/String;Ljava/lang/String;)Z\n+   #53 = Class              #55           // org/apache/commons/io/FilenameUtils\n+   #54 = NameAndType        #56:#57       // wildcardMatch:(Ljava/lang/String;Ljava/lang/String;)Z\n+   #55 = Utf8               org/apache/commons/io/FilenameUtils\n+   #56 = Utf8               wildcardMatch\n+   #57 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n+   #58 = Class              #59           // java/nio/file/LinkOption\n+   #59 = Utf8               java/nio/file/LinkOption\n+   #60 = Methodref          #61.#62       // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #61 = Class              #63           // java/nio/file/Files\n+   #62 = NameAndType        #46:#64       // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #63 = Utf8               java/nio/file/Files\n+   #64 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #65 = Fieldref           #66.#67       // java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n+   #66 = Class              #68           // java/nio/file/FileVisitResult\n+   #67 = NameAndType        #69:#70       // TERMINATE:Ljava/nio/file/FileVisitResult;\n+   #68 = Utf8               java/nio/file/FileVisitResult\n+   #69 = Utf8               TERMINATE\n+   #70 = Utf8               Ljava/nio/file/FileVisitResult;\n+   #71 = InterfaceMethodref #72.#73       // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n+   #72 = Class              #74           // java/nio/file/Path\n+   #73 = NameAndType        #75:#76       // getFileName:()Ljava/nio/file/Path;\n+   #74 = Utf8               java/nio/file/Path\n+   #75 = Utf8               getFileName\n+   #76 = Utf8               ()Ljava/nio/file/Path;\n+   #77 = Methodref          #78.#79       // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #78 = Class              #80           // java/util/Objects\n+   #79 = NameAndType        #81:#82       // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #80 = Utf8               java/util/Objects\n+   #81 = Utf8               toString\n+   #82 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #83 = Fieldref           #66.#84       // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+   #84 = NameAndType        #85:#70       // CONTINUE:Ljava/nio/file/FileVisitResult;\n+   #85 = Utf8               CONTINUE\n+   #86 = Methodref          #43.#87       // java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+   #87 = NameAndType        #5:#88        // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+   #88 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n+   #89 = Class              #90           // java/io/Serializable\n+   #90 = Utf8               java/io/Serializable\n+   #91 = Utf8               serialVersionUID\n+   #92 = Utf8               J\n+   #93 = Utf8               ConstantValue\n+   #94 = Long               -5037645902506953517l\n+   #96 = Utf8               (Ljava/util/List;)V\n+   #97 = Utf8               Code\n+   #98 = Utf8               LineNumberTable\n+   #99 = Utf8               StackMapTable\n+  #100 = Utf8               Signature\n+  #101 = Utf8               (Ljava/util/List<Ljava/lang/String;>;)V\n+  #102 = Utf8               ([Ljava/lang/String;)V\n+  #103 = Utf8               accept\n+  #104 = Utf8               (Ljava/io/File;)Z\n+  #105 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #106 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+  #107 = Utf8               SourceFile\n+  #108 = Utf8               WildcardFilter.java\n+  #109 = Utf8               Deprecated\n+  #110 = Utf8               RuntimeVisibleAnnotations\n+  #111 = Utf8               Ljava/lang/Deprecated;\n {\n   private static final long serialVersionUID = -5037645902506953517l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long -5037645902506953517l\n \n   private final java.lang.String[] wildcards;\n@@ -133,61 +133,61 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n          4: aload_1\n          5: ifnonnull     18\n-         8: new           #2                  // class java/lang/IllegalArgumentException\n+         8: new           #7                  // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #3                  // String The wildcard list must not be null\n-        14: invokespecial #4                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #9                  // String The wildcard list must not be null\n+        14: invokespecial #11                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: aload_0\n         19: aload_1\n-        20: getstatic     #5                  // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-        23: invokeinterface #6,  2            // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-        28: checkcast     #7                  // class \"[Ljava/lang/String;\"\n-        31: putfield      #8                  // Field wildcards:[Ljava/lang/String;\n+        20: getstatic     #14                 // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+        23: invokeinterface #20,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+        28: checkcast     #26                 // class \"[Ljava/lang/String;\"\n+        31: putfield      #27                 // Field wildcards:[Ljava/lang/String;\n         34: return\n       LineNumberTable:\n         line 93: 0\n         line 94: 4\n         line 95: 8\n         line 97: 18\n         line 98: 34\n       StackMapTable: number_of_entries = 1\n         frame_type = 255 /* full_frame */\n           offset_delta = 18\n           locals = [ class org/apache/commons/io/filefilter/WildcardFilter, class java/util/List ]\n           stack = []\n-    Signature: #41                          // (Ljava/util/List<Ljava/lang/String;>;)V\n+    Signature: #101                         // (Ljava/util/List<Ljava/lang/String;>;)V\n \n   public org.apache.commons.io.filefilter.WildcardFilter(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n          4: aload_1\n          5: ifnonnull     18\n-         8: new           #2                  // class java/lang/IllegalArgumentException\n+         8: new           #7                  // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #9                  // String The wildcard must not be null\n-        14: invokespecial #4                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #30                 // String The wildcard must not be null\n+        14: invokespecial #11                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: aload_0\n         19: iconst_1\n-        20: anewarray     #10                 // class java/lang/String\n+        20: anewarray     #32                 // class java/lang/String\n         23: dup\n         24: iconst_0\n         25: aload_1\n         26: aastore\n-        27: putfield      #8                  // Field wildcards:[Ljava/lang/String;\n+        27: putfield      #27                 // Field wildcards:[Ljava/lang/String;\n         30: return\n       LineNumberTable:\n         line 106: 0\n         line 107: 4\n         line 108: 8\n         line 110: 18\n         line 111: 30\n@@ -202,32 +202,32 @@\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n          4: aload_1\n          5: ifnonnull     18\n-         8: new           #2                  // class java/lang/IllegalArgumentException\n+         8: new           #7                  // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #11                 // String The wildcard array must not be null\n-        14: invokespecial #4                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #34                 // String The wildcard array must not be null\n+        14: invokespecial #11                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: aload_0\n         19: aload_1\n         20: arraylength\n-        21: anewarray     #10                 // class java/lang/String\n-        24: putfield      #8                  // Field wildcards:[Ljava/lang/String;\n+        21: anewarray     #32                 // class java/lang/String\n+        24: putfield      #27                 // Field wildcards:[Ljava/lang/String;\n         27: aload_1\n         28: iconst_0\n         29: aload_0\n-        30: getfield      #8                  // Field wildcards:[Ljava/lang/String;\n+        30: getfield      #27                 // Field wildcards:[Ljava/lang/String;\n         33: iconst_0\n         34: aload_1\n         35: arraylength\n-        36: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        36: invokestatic  #36                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         39: return\n       LineNumberTable:\n         line 119: 0\n         line 120: 4\n         line 121: 8\n         line 123: 18\n         line 124: 27\n@@ -240,37 +240,37 @@\n \n   public boolean accept(java.io.File);\n     descriptor: (Ljava/io/File;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=6, args_size=2\n          0: aload_1\n-         1: invokevirtual #13                 // Method java/io/File.isDirectory:()Z\n+         1: invokevirtual #42                 // Method java/io/File.isDirectory:()Z\n          4: ifeq          9\n          7: iconst_0\n          8: ireturn\n          9: aload_0\n-        10: getfield      #8                  // Field wildcards:[Ljava/lang/String;\n+        10: getfield      #27                 // Field wildcards:[Ljava/lang/String;\n         13: astore_2\n         14: aload_2\n         15: arraylength\n         16: istore_3\n         17: iconst_0\n         18: istore        4\n         20: iload         4\n         22: iload_3\n         23: if_icmpge     52\n         26: aload_2\n         27: iload         4\n         29: aaload\n         30: astore        5\n         32: aload_1\n-        33: invokevirtual #14                 // Method java/io/File.getName:()Ljava/lang/String;\n+        33: invokevirtual #48                 // Method java/io/File.getName:()Ljava/lang/String;\n         36: aload         5\n-        38: invokestatic  #15                 // Method org/apache/commons/io/FilenameUtils.wildcardMatch:(Ljava/lang/String;Ljava/lang/String;)Z\n+        38: invokestatic  #52                 // Method org/apache/commons/io/FilenameUtils.wildcardMatch:(Ljava/lang/String;Ljava/lang/String;)Z\n         41: ifeq          46\n         44: iconst_1\n         45: ireturn\n         46: iinc          4, 1\n         49: goto          20\n         52: iconst_0\n         53: ireturn\n@@ -294,46 +294,46 @@\n   public java.nio.file.FileVisitResult accept(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes);\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=7, args_size=3\n          0: aload_1\n          1: iconst_0\n-         2: anewarray     #16                 // class java/nio/file/LinkOption\n-         5: invokestatic  #17                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+         2: anewarray     #58                 // class java/nio/file/LinkOption\n+         5: invokestatic  #60                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n          8: ifeq          15\n-        11: getstatic     #18                 // Field java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n+        11: getstatic     #65                 // Field java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n         14: areturn\n         15: aload_0\n-        16: getfield      #8                  // Field wildcards:[Ljava/lang/String;\n+        16: getfield      #27                 // Field wildcards:[Ljava/lang/String;\n         19: astore_3\n         20: aload_3\n         21: arraylength\n         22: istore        4\n         24: iconst_0\n         25: istore        5\n         27: iload         5\n         29: iload         4\n         31: if_icmpge     68\n         34: aload_3\n         35: iload         5\n         37: aaload\n         38: astore        6\n         40: aload_1\n-        41: invokeinterface #19,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n+        41: invokeinterface #71,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n         46: aconst_null\n-        47: invokestatic  #20                 // Method java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+        47: invokestatic  #77                 // Method java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n         50: aload         6\n-        52: invokestatic  #15                 // Method org/apache/commons/io/FilenameUtils.wildcardMatch:(Ljava/lang/String;Ljava/lang/String;)Z\n+        52: invokestatic  #52                 // Method org/apache/commons/io/FilenameUtils.wildcardMatch:(Ljava/lang/String;Ljava/lang/String;)Z\n         55: ifeq          62\n-        58: getstatic     #21                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+        58: getstatic     #83                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n         61: areturn\n         62: iinc          5, 1\n         65: goto          27\n-        68: getstatic     #18                 // Field java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n+        68: getstatic     #65                 // Field java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n         71: areturn\n       LineNumberTable:\n         line 157: 0\n         line 158: 11\n         line 161: 15\n         line 162: 40\n         line 163: 58\n@@ -351,25 +351,25 @@\n   public boolean accept(java.io.File, java.lang.String);\n     descriptor: (Ljava/io/File;Ljava/lang/String;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=7, args_size=3\n          0: aload_1\n          1: ifnull        21\n-         4: new           #22                 // class java/io/File\n+         4: new           #43                 // class java/io/File\n          7: dup\n          8: aload_1\n          9: aload_2\n-        10: invokespecial #23                 // Method java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-        13: invokevirtual #13                 // Method java/io/File.isDirectory:()Z\n+        10: invokespecial #86                 // Method java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+        13: invokevirtual #42                 // Method java/io/File.isDirectory:()Z\n         16: ifeq          21\n         19: iconst_0\n         20: ireturn\n         21: aload_0\n-        22: getfield      #8                  // Field wildcards:[Ljava/lang/String;\n+        22: getfield      #27                 // Field wildcards:[Ljava/lang/String;\n         25: astore_3\n         26: aload_3\n         27: arraylength\n         28: istore        4\n         30: iconst_0\n         31: istore        5\n         33: iload         5\n@@ -377,15 +377,15 @@\n         37: if_icmpge     63\n         40: aload_3\n         41: iload         5\n         43: aaload\n         44: astore        6\n         46: aload_2\n         47: aload         6\n-        49: invokestatic  #15                 // Method org/apache/commons/io/FilenameUtils.wildcardMatch:(Ljava/lang/String;Ljava/lang/String;)Z\n+        49: invokestatic  #52                 // Method org/apache/commons/io/FilenameUtils.wildcardMatch:(Ljava/lang/String;Ljava/lang/String;)Z\n         52: ifeq          57\n         55: iconst_1\n         56: ireturn\n         57: iinc          5, 1\n         60: goto          33\n         63: iconst_0\n         64: ireturn\n@@ -405,9 +405,9 @@\n         frame_type = 23 /* same */\n         frame_type = 248 /* chop */\n           offset_delta = 5\n }\n SourceFile: \"WildcardFilter.java\"\n Deprecated: true\n RuntimeVisibleAnnotations:\n-  0: #52()\n+  0: #111()\n     java.lang.Deprecated\n"}]}
