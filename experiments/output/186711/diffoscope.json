{"diffoscope-json-version": 1, "source1": "first/Base32OutputStream.class", "source2": "second/Base32OutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,62 +1,62 @@\n-  SHA-256 checksum bec3ed79416b458ac626c9c18b8d950dd2ac0ab7f49f11b89070ad8708adb240\n+  SHA-256 checksum 8a97b17ec2a0eae47c019e51545086deb65d49958bbe32032ecf763fef275b2c\n   Compiled from \"Base32OutputStream.java\"\n public class org.apache.commons.codec.binary.Base32OutputStream extends org.apache.commons.codec.binary.BaseNCodecOutputStream\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #8                          // org/apache/commons/codec/binary/Base32OutputStream\n-  super_class: #9                         // org/apache/commons/codec/binary/BaseNCodecOutputStream\n+  this_class: #2                          // org/apache/commons/codec/binary/Base32OutputStream\n+  super_class: #13                        // org/apache/commons/codec/binary/BaseNCodecOutputStream\n   interfaces: 0, fields: 0, methods: 4, attributes: 1\n Constant pool:\n-   #1 = Methodref          #8.#33         // org/apache/commons/codec/binary/Base32OutputStream.\"<init>\":(Ljava/io/OutputStream;Z)V\n-   #2 = Class              #34            // org/apache/commons/codec/binary/Base32\n-   #3 = Methodref          #2.#35         // org/apache/commons/codec/binary/Base32.\"<init>\":(Z)V\n-   #4 = Methodref          #9.#36         // org/apache/commons/codec/binary/BaseNCodecOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n-   #5 = Methodref          #2.#37         // org/apache/commons/codec/binary/Base32.\"<init>\":(I[B)V\n-   #6 = Class              #38            // org/apache/commons/codec/binary/BaseNCodec\n-   #7 = Methodref          #2.#39         // org/apache/commons/codec/binary/Base32.\"<init>\":(I[BZBLorg/apache/commons/codec/CodecPolicy;)V\n-   #8 = Class              #40            // org/apache/commons/codec/binary/Base32OutputStream\n-   #9 = Class              #41            // org/apache/commons/codec/binary/BaseNCodecOutputStream\n-  #10 = Utf8               <init>\n-  #11 = Utf8               (Ljava/io/OutputStream;)V\n-  #12 = Utf8               Code\n-  #13 = Utf8               LineNumberTable\n-  #14 = Utf8               LocalVariableTable\n-  #15 = Utf8               this\n-  #16 = Utf8               Lorg/apache/commons/codec/binary/Base32OutputStream;\n-  #17 = Utf8               out\n-  #18 = Utf8               Ljava/io/OutputStream;\n-  #19 = Utf8               (Ljava/io/OutputStream;Z)V\n-  #20 = Utf8               doEncode\n-  #21 = Utf8               Z\n-  #22 = Utf8               (Ljava/io/OutputStream;ZI[B)V\n-  #23 = Utf8               ouput\n-  #24 = Utf8               lineLength\n-  #25 = Utf8               I\n-  #26 = Utf8               lineSeparator\n-  #27 = Utf8               [B\n-  #28 = Utf8               (Ljava/io/OutputStream;ZI[BLorg/apache/commons/codec/CodecPolicy;)V\n-  #29 = Utf8               decodingPolicy\n-  #30 = Utf8               Lorg/apache/commons/codec/CodecPolicy;\n-  #31 = Utf8               SourceFile\n-  #32 = Utf8               Base32OutputStream.java\n-  #33 = NameAndType        #10:#19        // \"<init>\":(Ljava/io/OutputStream;Z)V\n-  #34 = Utf8               org/apache/commons/codec/binary/Base32\n-  #35 = NameAndType        #10:#42        // \"<init>\":(Z)V\n-  #36 = NameAndType        #10:#43        // \"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n-  #37 = NameAndType        #10:#44        // \"<init>\":(I[B)V\n-  #38 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n-  #39 = NameAndType        #10:#45        // \"<init>\":(I[BZBLorg/apache/commons/codec/CodecPolicy;)V\n-  #40 = Utf8               org/apache/commons/codec/binary/Base32OutputStream\n-  #41 = Utf8               org/apache/commons/codec/binary/BaseNCodecOutputStream\n-  #42 = Utf8               (Z)V\n-  #43 = Utf8               (Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n-  #44 = Utf8               (I[B)V\n-  #45 = Utf8               (I[BZBLorg/apache/commons/codec/CodecPolicy;)V\n+   #1 = Methodref          #2.#3          // org/apache/commons/codec/binary/Base32OutputStream.\"<init>\":(Ljava/io/OutputStream;Z)V\n+   #2 = Class              #4             // org/apache/commons/codec/binary/Base32OutputStream\n+   #3 = NameAndType        #5:#6          // \"<init>\":(Ljava/io/OutputStream;Z)V\n+   #4 = Utf8               org/apache/commons/codec/binary/Base32OutputStream\n+   #5 = Utf8               <init>\n+   #6 = Utf8               (Ljava/io/OutputStream;Z)V\n+   #7 = Class              #8             // org/apache/commons/codec/binary/Base32\n+   #8 = Utf8               org/apache/commons/codec/binary/Base32\n+   #9 = Methodref          #7.#10         // org/apache/commons/codec/binary/Base32.\"<init>\":(Z)V\n+  #10 = NameAndType        #5:#11         // \"<init>\":(Z)V\n+  #11 = Utf8               (Z)V\n+  #12 = Methodref          #13.#14        // org/apache/commons/codec/binary/BaseNCodecOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n+  #13 = Class              #15            // org/apache/commons/codec/binary/BaseNCodecOutputStream\n+  #14 = NameAndType        #5:#16         // \"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n+  #15 = Utf8               org/apache/commons/codec/binary/BaseNCodecOutputStream\n+  #16 = Utf8               (Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n+  #17 = Methodref          #7.#18         // org/apache/commons/codec/binary/Base32.\"<init>\":(I[B)V\n+  #18 = NameAndType        #5:#19         // \"<init>\":(I[B)V\n+  #19 = Utf8               (I[B)V\n+  #20 = Class              #21            // org/apache/commons/codec/binary/BaseNCodec\n+  #21 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n+  #22 = Methodref          #7.#23         // org/apache/commons/codec/binary/Base32.\"<init>\":(I[BZBLorg/apache/commons/codec/CodecPolicy;)V\n+  #23 = NameAndType        #5:#24         // \"<init>\":(I[BZBLorg/apache/commons/codec/CodecPolicy;)V\n+  #24 = Utf8               (I[BZBLorg/apache/commons/codec/CodecPolicy;)V\n+  #25 = Utf8               (Ljava/io/OutputStream;)V\n+  #26 = Utf8               Code\n+  #27 = Utf8               LineNumberTable\n+  #28 = Utf8               LocalVariableTable\n+  #29 = Utf8               this\n+  #30 = Utf8               Lorg/apache/commons/codec/binary/Base32OutputStream;\n+  #31 = Utf8               out\n+  #32 = Utf8               Ljava/io/OutputStream;\n+  #33 = Utf8               doEncode\n+  #34 = Utf8               Z\n+  #35 = Utf8               (Ljava/io/OutputStream;ZI[B)V\n+  #36 = Utf8               ouput\n+  #37 = Utf8               lineLength\n+  #38 = Utf8               I\n+  #39 = Utf8               lineSeparator\n+  #40 = Utf8               [B\n+  #41 = Utf8               (Ljava/io/OutputStream;ZI[BLorg/apache/commons/codec/CodecPolicy;)V\n+  #42 = Utf8               decodingPolicy\n+  #43 = Utf8               Lorg/apache/commons/codec/CodecPolicy;\n+  #44 = Utf8               SourceFile\n+  #45 = Utf8               Base32OutputStream.java\n {\n   public org.apache.commons.codec.binary.Base32OutputStream(java.io.OutputStream);\n     descriptor: (Ljava/io/OutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n@@ -75,20 +75,20 @@\n   public org.apache.commons.codec.binary.Base32OutputStream(java.io.OutputStream, boolean);\n     descriptor: (Ljava/io/OutputStream;Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: new           #2                  // class org/apache/commons/codec/binary/Base32\n+         2: new           #7                  // class org/apache/commons/codec/binary/Base32\n          5: dup\n          6: iconst_0\n-         7: invokespecial #3                  // Method org/apache/commons/codec/binary/Base32.\"<init>\":(Z)V\n+         7: invokespecial #9                  // Method org/apache/commons/codec/binary/Base32.\"<init>\":(Z)V\n         10: iload_2\n-        11: invokespecial #4                  // Method org/apache/commons/codec/binary/BaseNCodecOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n+        11: invokespecial #12                 // Method org/apache/commons/codec/binary/BaseNCodecOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n         14: return\n       LineNumberTable:\n         line 81: 0\n         line 82: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/codec/binary/Base32OutputStream;\n@@ -98,21 +98,21 @@\n   public org.apache.commons.codec.binary.Base32OutputStream(java.io.OutputStream, boolean, int, byte[]);\n     descriptor: (Ljava/io/OutputStream;ZI[B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=5, args_size=5\n          0: aload_0\n          1: aload_1\n-         2: new           #2                  // class org/apache/commons/codec/binary/Base32\n+         2: new           #7                  // class org/apache/commons/codec/binary/Base32\n          5: dup\n          6: iload_3\n          7: aload         4\n-         9: invokespecial #5                  // Method org/apache/commons/codec/binary/Base32.\"<init>\":(I[B)V\n+         9: invokespecial #17                 // Method org/apache/commons/codec/binary/Base32.\"<init>\":(I[B)V\n         12: iload_2\n-        13: invokespecial #4                  // Method org/apache/commons/codec/binary/BaseNCodecOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n+        13: invokespecial #12                 // Method org/apache/commons/codec/binary/BaseNCodecOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n         16: return\n       LineNumberTable:\n         line 102: 0\n         line 103: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lorg/apache/commons/codec/binary/Base32OutputStream;\n@@ -124,24 +124,24 @@\n   public org.apache.commons.codec.binary.Base32OutputStream(java.io.OutputStream, boolean, int, byte[], org.apache.commons.codec.CodecPolicy);\n     descriptor: (Ljava/io/OutputStream;ZI[BLorg/apache/commons/codec/CodecPolicy;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=9, locals=6, args_size=6\n          0: aload_0\n          1: aload_1\n-         2: new           #2                  // class org/apache/commons/codec/binary/Base32\n+         2: new           #7                  // class org/apache/commons/codec/binary/Base32\n          5: dup\n          6: iload_3\n          7: aload         4\n          9: iconst_0\n         10: bipush        61\n         12: aload         5\n-        14: invokespecial #7                  // Method org/apache/commons/codec/binary/Base32.\"<init>\":(I[BZBLorg/apache/commons/codec/CodecPolicy;)V\n+        14: invokespecial #22                 // Method org/apache/commons/codec/binary/Base32.\"<init>\":(I[BZBLorg/apache/commons/codec/CodecPolicy;)V\n         17: iload_2\n-        18: invokespecial #4                  // Method org/apache/commons/codec/binary/BaseNCodecOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n+        18: invokespecial #12                 // Method org/apache/commons/codec/binary/BaseNCodecOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n         21: return\n       LineNumberTable:\n         line 125: 0\n         line 126: 21\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0  this   Lorg/apache/commons/codec/binary/Base32OutputStream;\n"}]}
