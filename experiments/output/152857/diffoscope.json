{"diffoscope-json-version": 1, "source1": "first/CountingInputStream.class", "source2": "second/CountingInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,106 +1,100 @@\n-  SHA-256 checksum 23ccddc33cf58c36e39cecc28bf7d4fdd4c75a5ac77eee03717be8a899953bc1\n+  SHA-256 checksum 304f11bcdbe2481aa2b98af5e2972ecd4243d25306d3aebb5fa9754b9d55f5df\n   Compiled from \"CountingInputStream.java\"\n public class org.apache.commons.io.input.CountingInputStream extends org.apache.commons.io.input.ProxyInputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #10                         // org/apache/commons/io/input/CountingInputStream\n-  super_class: #4                         // org/apache/commons/io/input/ProxyInputStream\n+  this_class: #1                          // org/apache/commons/io/input/CountingInputStream\n+  super_class: #3                         // org/apache/commons/io/input/ProxyInputStream\n   interfaces: 0, fields: 1, methods: 7, attributes: 1\n Constant pool:\n-   #1 = Class              #2             // org/apache/commons/io/IOUtils\n-   #2 = Utf8               org/apache/commons/io/IOUtils\n-   #3 = Methodref          #4.#5          // org/apache/commons/io/input/ProxyInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #4 = Class              #6             // org/apache/commons/io/input/ProxyInputStream\n-   #5 = NameAndType        #7:#8          // \"<init>\":(Ljava/io/InputStream;)V\n-   #6 = Utf8               org/apache/commons/io/input/ProxyInputStream\n+   #1 = Class              #2             // org/apache/commons/io/input/CountingInputStream\n+   #2 = Utf8               org/apache/commons/io/input/CountingInputStream\n+   #3 = Class              #4             // org/apache/commons/io/input/ProxyInputStream\n+   #4 = Utf8               org/apache/commons/io/input/ProxyInputStream\n+   #5 = Utf8               count\n+   #6 = Utf8               J\n    #7 = Utf8               <init>\n    #8 = Utf8               (Ljava/io/InputStream;)V\n-   #9 = Fieldref           #10.#11        // org/apache/commons/io/input/CountingInputStream.count:J\n-  #10 = Class              #12            // org/apache/commons/io/input/CountingInputStream\n-  #11 = NameAndType        #13:#14        // count:J\n-  #12 = Utf8               org/apache/commons/io/input/CountingInputStream\n-  #13 = Utf8               count\n-  #14 = Utf8               J\n-  #15 = Methodref          #10.#16        // org/apache/commons/io/input/CountingInputStream.getByteCount:()J\n-  #16 = NameAndType        #17:#18        // getByteCount:()J\n-  #17 = Utf8               getByteCount\n-  #18 = Utf8               ()J\n-  #19 = Class              #20            // java/lang/Integer\n-  #20 = Utf8               java/lang/Integer\n-  #21 = Long               2147483647l\n-  #23 = Class              #24            // java/lang/ArithmeticException\n-  #24 = Utf8               java/lang/ArithmeticException\n-  #25 = Class              #26            // java/lang/StringBuilder\n-  #26 = Utf8               java/lang/StringBuilder\n-  #27 = Methodref          #25.#28        // java/lang/StringBuilder.\"<init>\":()V\n-  #28 = NameAndType        #7:#29         // \"<init>\":()V\n-  #29 = Utf8               ()V\n-  #30 = String             #31            // The byte count\n-  #31 = Utf8               The byte count\n-  #32 = Methodref          #25.#33        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #33 = NameAndType        #34:#35        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #34 = Utf8               append\n-  #35 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #36 = Methodref          #25.#37        // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-  #37 = NameAndType        #34:#38        // append:(J)Ljava/lang/StringBuilder;\n-  #38 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #39 = String             #40            //  is too large to be converted to an int\n-  #40 = Utf8                is too large to be converted to an int\n-  #41 = Methodref          #25.#42        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #42 = NameAndType        #43:#44        // toString:()Ljava/lang/String;\n-  #43 = Utf8               toString\n-  #44 = Utf8               ()Ljava/lang/String;\n-  #45 = Methodref          #23.#46        // java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n-  #46 = NameAndType        #7:#47         // \"<init>\":(Ljava/lang/String;)V\n-  #47 = Utf8               (Ljava/lang/String;)V\n-  #48 = Methodref          #10.#49        // org/apache/commons/io/input/CountingInputStream.resetByteCount:()J\n-  #49 = NameAndType        #50:#18        // resetByteCount:()J\n-  #50 = Utf8               resetByteCount\n-  #51 = Methodref          #4.#52         // org/apache/commons/io/input/ProxyInputStream.skip:(J)J\n-  #52 = NameAndType        #53:#54        // skip:(J)J\n-  #53 = Utf8               skip\n-  #54 = Utf8               (J)J\n-  #55 = Utf8               Code\n-  #56 = Utf8               LineNumberTable\n-  #57 = Utf8               LocalVariableTable\n-  #58 = Utf8               this\n-  #59 = Utf8               Lorg/apache/commons/io/input/CountingInputStream;\n-  #60 = Utf8               in\n-  #61 = Utf8               Ljava/io/InputStream;\n-  #62 = Utf8               afterRead\n-  #63 = Utf8               (I)V\n-  #64 = Utf8               n\n-  #65 = Utf8               I\n-  #66 = Utf8               StackMapTable\n-  #67 = Utf8               getCount\n-  #68 = Utf8               ()I\n-  #69 = Utf8               result\n-  #70 = Utf8               tmp\n-  #71 = Utf8               resetCount\n-  #72 = Utf8               length\n-  #73 = Utf8               Exceptions\n-  #74 = Class              #75            // java/io/IOException\n-  #75 = Utf8               java/io/IOException\n-  #76 = Utf8               SourceFile\n-  #77 = Utf8               CountingInputStream.java\n+   #9 = Utf8               Code\n+  #10 = Methodref          #3.#11         // org/apache/commons/io/input/ProxyInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #11 = NameAndType        #7:#8          // \"<init>\":(Ljava/io/InputStream;)V\n+  #12 = Utf8               LineNumberTable\n+  #13 = Utf8               LocalVariableTable\n+  #14 = Utf8               this\n+  #15 = Utf8               Lorg/apache/commons/io/input/CountingInputStream;\n+  #16 = Utf8               in\n+  #17 = Utf8               Ljava/io/InputStream;\n+  #18 = Utf8               afterRead\n+  #19 = Utf8               (I)V\n+  #20 = Fieldref           #1.#21         // org/apache/commons/io/input/CountingInputStream.count:J\n+  #21 = NameAndType        #5:#6          // count:J\n+  #22 = Utf8               n\n+  #23 = Utf8               I\n+  #24 = Utf8               StackMapTable\n+  #25 = Utf8               getByteCount\n+  #26 = Utf8               ()J\n+  #27 = Utf8               getCount\n+  #28 = Utf8               ()I\n+  #29 = Methodref          #1.#30         // org/apache/commons/io/input/CountingInputStream.getByteCount:()J\n+  #30 = NameAndType        #25:#26        // getByteCount:()J\n+  #31 = Long               2147483647l\n+  #33 = Class              #34            // java/lang/ArithmeticException\n+  #34 = Utf8               java/lang/ArithmeticException\n+  #35 = Class              #36            // java/lang/StringBuilder\n+  #36 = Utf8               java/lang/StringBuilder\n+  #37 = String             #38            // The byte count\n+  #38 = Utf8               The byte count\n+  #39 = Methodref          #35.#40        // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #40 = NameAndType        #7:#41         // \"<init>\":(Ljava/lang/String;)V\n+  #41 = Utf8               (Ljava/lang/String;)V\n+  #42 = Methodref          #35.#43        // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+  #43 = NameAndType        #44:#45        // append:(J)Ljava/lang/StringBuilder;\n+  #44 = Utf8               append\n+  #45 = Utf8               (J)Ljava/lang/StringBuilder;\n+  #46 = String             #47            //  is too large to be converted to an int\n+  #47 = Utf8                is too large to be converted to an int\n+  #48 = Methodref          #35.#49        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #49 = NameAndType        #44:#50        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #50 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #51 = Methodref          #35.#52        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #52 = NameAndType        #53:#54        // toString:()Ljava/lang/String;\n+  #53 = Utf8               toString\n+  #54 = Utf8               ()Ljava/lang/String;\n+  #55 = Methodref          #33.#40        // java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+  #56 = Utf8               result\n+  #57 = Utf8               resetByteCount\n+  #58 = Utf8               tmp\n+  #59 = Utf8               resetCount\n+  #60 = Methodref          #1.#61         // org/apache/commons/io/input/CountingInputStream.resetByteCount:()J\n+  #61 = NameAndType        #57:#26        // resetByteCount:()J\n+  #62 = Utf8               skip\n+  #63 = Utf8               (J)J\n+  #64 = Utf8               Exceptions\n+  #65 = Class              #66            // java/io/IOException\n+  #66 = Utf8               java/io/IOException\n+  #67 = Methodref          #3.#68         // org/apache/commons/io/input/ProxyInputStream.skip:(J)J\n+  #68 = NameAndType        #62:#63        // skip:(J)J\n+  #69 = Utf8               length\n+  #70 = Utf8               SourceFile\n+  #71 = Utf8               CountingInputStream.java\n {\n   private long count;\n     descriptor: J\n     flags: (0x0002) ACC_PRIVATE\n \n   public org.apache.commons.io.input.CountingInputStream(java.io.InputStream);\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #3                  // Method org/apache/commons/io/input/ProxyInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+         2: invokespecial #10                 // Method org/apache/commons/io/input/ProxyInputStream.\"<init>\":(Ljava/io/InputStream;)V\n          5: return\n       LineNumberTable:\n         line 43: 0\n         line 44: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/input/CountingInputStream;\n@@ -112,19 +106,19 @@\n     Code:\n       stack=5, locals=2, args_size=2\n          0: iload_1\n          1: iconst_m1\n          2: if_icmpeq     16\n          5: aload_0\n          6: dup\n-         7: getfield      #9                  // Field count:J\n+         7: getfield      #20                 // Field count:J\n         10: iload_1\n         11: i2l\n         12: ladd\n-        13: putfield      #9                  // Field count:J\n+        13: putfield      #20                 // Field count:J\n         16: return\n       LineNumberTable:\n         line 55: 0\n         line 56: 5\n         line 58: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -135,76 +129,75 @@\n \n   public synchronized long getByteCount();\n     descriptor: ()J\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field count:J\n+         1: getfield      #20                 // Field count:J\n          4: lreturn\n       LineNumberTable:\n         line 72: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/input/CountingInputStream;\n \n   public int getCount();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=1\n          0: aload_0\n-         1: invokevirtual #15                 // Method getByteCount:()J\n+         1: invokevirtual #29                 // Method getByteCount:()J\n          4: lstore_1\n          5: lload_1\n-         6: ldc2_w        #21                 // long 2147483647l\n+         6: ldc2_w        #31                 // long 2147483647l\n          9: lcmp\n-        10: ifle          45\n-        13: new           #23                 // class java/lang/ArithmeticException\n+        10: ifle          42\n+        13: new           #33                 // class java/lang/ArithmeticException\n         16: dup\n-        17: new           #25                 // class java/lang/StringBuilder\n+        17: new           #35                 // class java/lang/StringBuilder\n         20: dup\n-        21: invokespecial #27                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        24: ldc           #30                 // String The byte count\n-        26: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        29: lload_1\n-        30: invokevirtual #36                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-        33: ldc           #39                 // String  is too large to be converted to an int\n-        35: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        38: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        41: invokespecial #45                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n-        44: athrow\n-        45: lload_1\n-        46: l2i\n-        47: ireturn\n+        21: ldc           #37                 // String The byte count\n+        23: invokespecial #39                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        26: lload_1\n+        27: invokevirtual #42                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        30: ldc           #46                 // String  is too large to be converted to an int\n+        32: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        35: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        38: invokespecial #55                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        41: athrow\n+        42: lload_1\n+        43: l2i\n+        44: ireturn\n       LineNumberTable:\n         line 87: 0\n         line 88: 5\n         line 89: 13\n-        line 91: 45\n+        line 91: 42\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      48     0  this   Lorg/apache/commons/io/input/CountingInputStream;\n-            5      43     1 result   J\n+            0      45     0  this   Lorg/apache/commons/io/input/CountingInputStream;\n+            5      40     1 result   J\n       StackMapTable: number_of_entries = 1\n         frame_type = 252 /* append */\n-          offset_delta = 45\n+          offset_delta = 42\n           locals = [ long ]\n \n   public synchronized long resetByteCount();\n     descriptor: ()J\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=3, locals=3, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field count:J\n+         1: getfield      #20                 // Field count:J\n          4: lstore_1\n          5: aload_0\n          6: lconst_0\n-         7: putfield      #9                  // Field count:J\n+         7: putfield      #20                 // Field count:J\n         10: lload_1\n         11: lreturn\n       LineNumberTable:\n         line 106: 0\n         line 107: 5\n         line 108: 10\n       LocalVariableTable:\n@@ -214,74 +207,73 @@\n \n   public int resetCount();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=1\n          0: aload_0\n-         1: invokevirtual #48                 // Method resetByteCount:()J\n+         1: invokevirtual #60                 // Method resetByteCount:()J\n          4: lstore_1\n          5: lload_1\n-         6: ldc2_w        #21                 // long 2147483647l\n+         6: ldc2_w        #31                 // long 2147483647l\n          9: lcmp\n-        10: ifle          45\n-        13: new           #23                 // class java/lang/ArithmeticException\n+        10: ifle          42\n+        13: new           #33                 // class java/lang/ArithmeticException\n         16: dup\n-        17: new           #25                 // class java/lang/StringBuilder\n+        17: new           #35                 // class java/lang/StringBuilder\n         20: dup\n-        21: invokespecial #27                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        24: ldc           #30                 // String The byte count\n-        26: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        29: lload_1\n-        30: invokevirtual #36                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-        33: ldc           #39                 // String  is too large to be converted to an int\n-        35: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        38: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        41: invokespecial #45                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n-        44: athrow\n-        45: lload_1\n-        46: l2i\n-        47: ireturn\n+        21: ldc           #37                 // String The byte count\n+        23: invokespecial #39                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        26: lload_1\n+        27: invokevirtual #42                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        30: ldc           #46                 // String  is too large to be converted to an int\n+        32: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        35: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        38: invokespecial #55                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        41: athrow\n+        42: lload_1\n+        43: l2i\n+        44: ireturn\n       LineNumberTable:\n         line 123: 0\n         line 124: 5\n         line 125: 13\n-        line 127: 45\n+        line 127: 42\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      48     0  this   Lorg/apache/commons/io/input/CountingInputStream;\n-            5      43     1 result   J\n+            0      45     0  this   Lorg/apache/commons/io/input/CountingInputStream;\n+            5      40     1 result   J\n       StackMapTable: number_of_entries = 1\n         frame_type = 252 /* append */\n-          offset_delta = 45\n+          offset_delta = 42\n           locals = [ long ]\n \n   public synchronized long skip(long) throws java.io.IOException;\n     descriptor: (J)J\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=5, args_size=2\n          0: aload_0\n          1: lload_1\n-         2: invokespecial #51                 // Method org/apache/commons/io/input/ProxyInputStream.skip:(J)J\n+         2: invokespecial #67                 // Method org/apache/commons/io/input/ProxyInputStream.skip:(J)J\n          5: lstore_3\n          6: aload_0\n          7: dup\n-         8: getfield      #9                  // Field count:J\n+         8: getfield      #20                 // Field count:J\n         11: lload_3\n         12: ladd\n-        13: putfield      #9                  // Field count:J\n+        13: putfield      #20                 // Field count:J\n         16: lload_3\n         17: lreturn\n       LineNumberTable:\n         line 141: 0\n         line 142: 6\n         line 143: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0  this   Lorg/apache/commons/io/input/CountingInputStream;\n             0      18     1 length   J\n             6      12     3  skip   J\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"CountingInputStream.java\"\n"}]}
