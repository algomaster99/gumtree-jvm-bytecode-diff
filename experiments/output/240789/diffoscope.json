{"diffoscope-json-version": 1, "source1": "first/DotTerminatedMessageReader.class", "source2": "second/DotTerminatedMessageReader.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -10,92 +10,92 @@\n     private static final char LF = '\\n';\n     private static final char CR = '\\r';\n     private static final int DOT = 46;\n     private boolean atBeginning;\n     private boolean eof;\n     private boolean seenCR;\n     \n-    public DotTerminatedMessageReader(final Reader reader) {\n-        super(reader);\n+    public DotTerminatedMessageReader(final Reader in) {\n+        super(in);\n         this.atBeginning = true;\n         this.eof = false;\n     }\n     \n     @Override\n     public int read() throws IOException {\n         synchronized (this.lock) {\n             if (this.eof) {\n                 return -1;\n             }\n-            int chint = super.read();\n-            if (chint == -1) {\n+            final int read = super.read();\n+            if (read == -1) {\n                 this.eof = true;\n                 return -1;\n             }\n             if (this.atBeginning) {\n                 this.atBeginning = false;\n-                if (chint == 46) {\n+                if (read == 46) {\n                     this.mark(2);\n-                    chint = super.read();\n-                    if (chint == -1) {\n+                    final int read2 = super.read();\n+                    if (read2 == -1) {\n                         this.eof = true;\n                         return 46;\n                     }\n-                    if (chint == 46) {\n-                        return chint;\n+                    if (read2 == 46) {\n+                        return read2;\n                     }\n-                    if (chint == 13) {\n-                        chint = super.read();\n-                        if (chint == -1) {\n+                    if (read2 == 13) {\n+                        final int read3 = super.read();\n+                        if (read3 == -1) {\n                             this.reset();\n                             return 46;\n                         }\n-                        if (chint == 10) {\n+                        if (read3 == 10) {\n                             this.atBeginning = true;\n                             this.eof = true;\n                             return -1;\n                         }\n                     }\n                     this.reset();\n                     return 46;\n                 }\n             }\n             if (this.seenCR) {\n                 this.seenCR = false;\n-                if (chint == 10) {\n+                if (read == 10) {\n                     this.atBeginning = true;\n                 }\n             }\n-            if (chint == 13) {\n+            if (read == 13) {\n                 this.seenCR = true;\n             }\n-            return chint;\n+            return read;\n         }\n     }\n     \n     @Override\n-    public int read(final char[] buffer) throws IOException {\n-        return this.read(buffer, 0, buffer.length);\n+    public int read(final char[] array) throws IOException {\n+        return this.read(array, 0, array.length);\n     }\n     \n     @Override\n-    public int read(final char[] buffer, int offset, int length) throws IOException {\n-        if (length < 1) {\n+    public int read(final char[] array, int n, int n2) throws IOException {\n+        if (n2 < 1) {\n             return 0;\n         }\n         synchronized (this.lock) {\n-            int ch;\n-            if ((ch = this.read()) == -1) {\n+            int n3;\n+            if ((n3 = this.read()) == -1) {\n                 return -1;\n             }\n-            final int off = offset;\n+            final int n4 = n;\n             do {\n-                buffer[offset++] = (char)ch;\n-            } while (--length > 0 && (ch = this.read()) != -1);\n-            return offset - off;\n+                array[n++] = (char)n3;\n+            } while (--n2 > 0 && (n3 = this.read()) != -1);\n+            return n - n4;\n         }\n     }\n     \n     @Override\n     public void close() throws IOException {\n         synchronized (this.lock) {\n             if (!this.eof) {\n@@ -106,20 +106,20 @@\n         }\n     }\n     \n     @Override\n     public String readLine() throws IOException {\n         final StringBuilder sb = new StringBuilder();\n         synchronized (this.lock) {\n-            int intch;\n-            while ((intch = this.read()) != -1) {\n-                if (intch == 10 && this.atBeginning) {\n+            int read;\n+            while ((read = this.read()) != -1) {\n+                if (read == 10 && this.atBeginning) {\n                     return sb.substring();\n                 }\n-                sb.append((char)intch);\n+                sb.append((char)read);\n             }\n         }\n         final String string = sb.toString();\n         if (string.length() == 0) {\n             return null;\n         }\n         return string;\n"}]}
