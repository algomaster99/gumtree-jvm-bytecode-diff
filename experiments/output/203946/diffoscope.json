{"diffoscope-json-version": 1, "source1": "first/EnclosingMethodAttribute.class", "source2": "second/EnclosingMethodAttribute.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -8,16 +8,16 @@\n {\n     private int class_index;\n     private int method_index;\n     private final CPClass cpClass;\n     private final CPNameAndType method;\n     private static CPUTF8 attributeName;\n     \n-    public static void setAttributeName(final CPUTF8 cpUTF8Value) {\n-        EnclosingMethodAttribute.attributeName = cpUTF8Value;\n+    public static void setAttributeName(final CPUTF8 attributeName) {\n+        EnclosingMethodAttribute.attributeName = attributeName;\n     }\n     \n     public EnclosingMethodAttribute(final CPClass cpClass, final CPNameAndType method) {\n         super(EnclosingMethodAttribute.attributeName);\n         this.cpClass = cpClass;\n         this.method = method;\n     }\n@@ -29,29 +29,29 @@\n         return new ClassFileEntry[] { (ClassFileEntry)EnclosingMethodAttribute.attributeName, (ClassFileEntry)this.cpClass };\n     }\n     \n     protected int getLength() {\n         return 4;\n     }\n     \n-    protected void resolve(final ClassConstantPool pool) {\n-        super.resolve(pool);\n-        this.cpClass.resolve(pool);\n-        this.class_index = pool.indexOf((ClassFileEntry)this.cpClass);\n+    protected void resolve(final ClassConstantPool classConstantPool) {\n+        super.resolve(classConstantPool);\n+        this.cpClass.resolve(classConstantPool);\n+        this.class_index = classConstantPool.indexOf((ClassFileEntry)this.cpClass);\n         if (this.method != null) {\n-            this.method.resolve(pool);\n-            this.method_index = pool.indexOf((ClassFileEntry)this.method);\n+            this.method.resolve(classConstantPool);\n+            this.method_index = classConstantPool.indexOf((ClassFileEntry)this.method);\n         }\n         else {\n             this.method_index = 0;\n         }\n     }\n     \n-    protected void writeBody(final DataOutputStream dos) throws IOException {\n-        dos.writeShort(this.class_index);\n-        dos.writeShort(this.method_index);\n+    protected void writeBody(final DataOutputStream dataOutputStream) throws IOException {\n+        dataOutputStream.writeShort(this.class_index);\n+        dataOutputStream.writeShort(this.method_index);\n     }\n     \n     public String toString() {\n         return \"EnclosingMethod\";\n     }\n }\n"}]}
