{"diffoscope-json-version": 1, "source1": "first/PeekableInputStream.class", "source2": "second/PeekableInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,93 +1,93 @@\n-  SHA-256 checksum d040b1d3bca3526b3f961f0fa2177295d4af21043da14beaccecdde6e043e363\n+  SHA-256 checksum e5067c2d0efaa87d4bef4933d37803f5e27b5bc9ecaad43a8bbf3c3d6df237c1\n   Compiled from \"PeekableInputStream.java\"\n public class org.apache.commons.io.input.buffer.PeekableInputStream extends org.apache.commons.io.input.buffer.CircularBufferInputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #20                         // org/apache/commons/io/input/buffer/PeekableInputStream\n-  super_class: #21                        // org/apache/commons/io/input/buffer/CircularBufferInputStream\n+  this_class: #19                         // org/apache/commons/io/input/buffer/PeekableInputStream\n+  super_class: #2                         // org/apache/commons/io/input/buffer/CircularBufferInputStream\n   interfaces: 0, fields: 0, methods: 4, attributes: 1\n Constant pool:\n-   #1 = Methodref          #21.#35        // org/apache/commons/io/input/buffer/CircularBufferInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-   #2 = Methodref          #21.#36        // org/apache/commons/io/input/buffer/CircularBufferInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #3 = String             #37            // Buffer\n-   #4 = Methodref          #38.#39        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #5 = Fieldref           #20.#40        // org/apache/commons/io/input/buffer/PeekableInputStream.bufferSize:I\n-   #6 = Class              #41            // java/lang/IllegalArgumentException\n-   #7 = Class              #42            // java/lang/StringBuilder\n-   #8 = Methodref          #7.#43         // java/lang/StringBuilder.\"<init>\":()V\n-   #9 = String             #44            // Peek request size of\n-  #10 = Methodref          #7.#45         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #11 = Methodref          #7.#46         // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-  #12 = String             #47            //  bytes exceeds buffer size of\n-  #13 = String             #48            //  bytes\n-  #14 = Methodref          #7.#49         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #15 = Methodref          #6.#50         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #16 = Fieldref           #20.#51        // org/apache/commons/io/input/buffer/PeekableInputStream.buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-  #17 = Methodref          #52.#53        // org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n-  #18 = Methodref          #20.#54        // org/apache/commons/io/input/buffer/PeekableInputStream.fillBuffer:()V\n-  #19 = Methodref          #52.#55        // org/apache/commons/io/input/buffer/CircularByteBuffer.peek:([BII)Z\n-  #20 = Class              #56            // org/apache/commons/io/input/buffer/PeekableInputStream\n-  #21 = Class              #57            // org/apache/commons/io/input/buffer/CircularBufferInputStream\n-  #22 = Utf8               <init>\n-  #23 = Utf8               (Ljava/io/InputStream;I)V\n-  #24 = Utf8               Code\n-  #25 = Utf8               LineNumberTable\n-  #26 = Utf8               (Ljava/io/InputStream;)V\n-  #27 = Utf8               peek\n-  #28 = Utf8               ([B)Z\n-  #29 = Utf8               StackMapTable\n-  #30 = Utf8               Exceptions\n-  #31 = Class              #58            // java/io/IOException\n-  #32 = Utf8               ([BII)Z\n-  #33 = Utf8               SourceFile\n-  #34 = Utf8               PeekableInputStream.java\n-  #35 = NameAndType        #22:#23        // \"<init>\":(Ljava/io/InputStream;I)V\n-  #36 = NameAndType        #22:#26        // \"<init>\":(Ljava/io/InputStream;)V\n-  #37 = Utf8               Buffer\n-  #38 = Class              #59            // java/util/Objects\n-  #39 = NameAndType        #60:#61        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #40 = NameAndType        #62:#63        // bufferSize:I\n-  #41 = Utf8               java/lang/IllegalArgumentException\n-  #42 = Utf8               java/lang/StringBuilder\n-  #43 = NameAndType        #22:#64        // \"<init>\":()V\n-  #44 = Utf8               Peek request size of\n-  #45 = NameAndType        #65:#66        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #46 = NameAndType        #65:#67        // append:(I)Ljava/lang/StringBuilder;\n-  #47 = Utf8                bytes exceeds buffer size of\n-  #48 = Utf8                bytes\n-  #49 = NameAndType        #68:#69        // toString:()Ljava/lang/String;\n-  #50 = NameAndType        #22:#70        // \"<init>\":(Ljava/lang/String;)V\n-  #51 = NameAndType        #71:#72        // buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-  #52 = Class              #73            // org/apache/commons/io/input/buffer/CircularByteBuffer\n-  #53 = NameAndType        #74:#75        // getCurrentNumberOfBytes:()I\n-  #54 = NameAndType        #76:#64        // fillBuffer:()V\n-  #55 = NameAndType        #27:#32        // peek:([BII)Z\n-  #56 = Utf8               org/apache/commons/io/input/buffer/PeekableInputStream\n-  #57 = Utf8               org/apache/commons/io/input/buffer/CircularBufferInputStream\n-  #58 = Utf8               java/io/IOException\n-  #59 = Utf8               java/util/Objects\n-  #60 = Utf8               requireNonNull\n-  #61 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #62 = Utf8               bufferSize\n-  #63 = Utf8               I\n-  #64 = Utf8               ()V\n-  #65 = Utf8               append\n-  #66 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #67 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #68 = Utf8               toString\n-  #69 = Utf8               ()Ljava/lang/String;\n-  #70 = Utf8               (Ljava/lang/String;)V\n-  #71 = Utf8               buffer\n-  #72 = Utf8               Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-  #73 = Utf8               org/apache/commons/io/input/buffer/CircularByteBuffer\n-  #74 = Utf8               getCurrentNumberOfBytes\n-  #75 = Utf8               ()I\n-  #76 = Utf8               fillBuffer\n+   #1 = Methodref          #2.#3          // org/apache/commons/io/input/buffer/CircularBufferInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+   #2 = Class              #4             // org/apache/commons/io/input/buffer/CircularBufferInputStream\n+   #3 = NameAndType        #5:#6          // \"<init>\":(Ljava/io/InputStream;I)V\n+   #4 = Utf8               org/apache/commons/io/input/buffer/CircularBufferInputStream\n+   #5 = Utf8               <init>\n+   #6 = Utf8               (Ljava/io/InputStream;I)V\n+   #7 = Methodref          #2.#8          // org/apache/commons/io/input/buffer/CircularBufferInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #8 = NameAndType        #5:#9          // \"<init>\":(Ljava/io/InputStream;)V\n+   #9 = Utf8               (Ljava/io/InputStream;)V\n+  #10 = String             #11            // Buffer\n+  #11 = Utf8               Buffer\n+  #12 = Methodref          #13.#14        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #13 = Class              #15            // java/util/Objects\n+  #14 = NameAndType        #16:#17        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #15 = Utf8               java/util/Objects\n+  #16 = Utf8               requireNonNull\n+  #17 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #18 = Fieldref           #19.#20        // org/apache/commons/io/input/buffer/PeekableInputStream.bufferSize:I\n+  #19 = Class              #21            // org/apache/commons/io/input/buffer/PeekableInputStream\n+  #20 = NameAndType        #22:#23        // bufferSize:I\n+  #21 = Utf8               org/apache/commons/io/input/buffer/PeekableInputStream\n+  #22 = Utf8               bufferSize\n+  #23 = Utf8               I\n+  #24 = Class              #25            // java/lang/IllegalArgumentException\n+  #25 = Utf8               java/lang/IllegalArgumentException\n+  #26 = Class              #27            // java/lang/StringBuilder\n+  #27 = Utf8               java/lang/StringBuilder\n+  #28 = Methodref          #26.#29        // java/lang/StringBuilder.\"<init>\":()V\n+  #29 = NameAndType        #5:#30         // \"<init>\":()V\n+  #30 = Utf8               ()V\n+  #31 = String             #32            // Peek request size of\n+  #32 = Utf8               Peek request size of\n+  #33 = Methodref          #26.#34        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #34 = NameAndType        #35:#36        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #35 = Utf8               append\n+  #36 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #37 = Methodref          #26.#38        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #38 = NameAndType        #35:#39        // append:(I)Ljava/lang/StringBuilder;\n+  #39 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #40 = String             #41            //  bytes exceeds buffer size of\n+  #41 = Utf8                bytes exceeds buffer size of\n+  #42 = String             #43            //  bytes\n+  #43 = Utf8                bytes\n+  #44 = Methodref          #26.#45        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #45 = NameAndType        #46:#47        // toString:()Ljava/lang/String;\n+  #46 = Utf8               toString\n+  #47 = Utf8               ()Ljava/lang/String;\n+  #48 = Methodref          #24.#49        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #49 = NameAndType        #5:#50         // \"<init>\":(Ljava/lang/String;)V\n+  #50 = Utf8               (Ljava/lang/String;)V\n+  #51 = Fieldref           #19.#52        // org/apache/commons/io/input/buffer/PeekableInputStream.buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+  #52 = NameAndType        #53:#54        // buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+  #53 = Utf8               buffer\n+  #54 = Utf8               Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+  #55 = Methodref          #56.#57        // org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n+  #56 = Class              #58            // org/apache/commons/io/input/buffer/CircularByteBuffer\n+  #57 = NameAndType        #59:#60        // getCurrentNumberOfBytes:()I\n+  #58 = Utf8               org/apache/commons/io/input/buffer/CircularByteBuffer\n+  #59 = Utf8               getCurrentNumberOfBytes\n+  #60 = Utf8               ()I\n+  #61 = Methodref          #19.#62        // org/apache/commons/io/input/buffer/PeekableInputStream.fillBuffer:()V\n+  #62 = NameAndType        #63:#30        // fillBuffer:()V\n+  #63 = Utf8               fillBuffer\n+  #64 = Methodref          #56.#65        // org/apache/commons/io/input/buffer/CircularByteBuffer.peek:([BII)Z\n+  #65 = NameAndType        #66:#67        // peek:([BII)Z\n+  #66 = Utf8               peek\n+  #67 = Utf8               ([BII)Z\n+  #68 = Utf8               Code\n+  #69 = Utf8               LineNumberTable\n+  #70 = Utf8               ([B)Z\n+  #71 = Utf8               StackMapTable\n+  #72 = Utf8               Exceptions\n+  #73 = Class              #74            // java/io/IOException\n+  #74 = Utf8               java/io/IOException\n+  #75 = Utf8               SourceFile\n+  #76 = Utf8               PeekableInputStream.java\n {\n   public org.apache.commons.io.input.buffer.PeekableInputStream(java.io.InputStream, int);\n     descriptor: (Ljava/io/InputStream;I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n@@ -102,69 +102,69 @@\n   public org.apache.commons.io.input.buffer.PeekableInputStream(java.io.InputStream);\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #2                  // Method org/apache/commons/io/input/buffer/CircularBufferInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+         2: invokespecial #7                  // Method org/apache/commons/io/input/buffer/CircularBufferInputStream.\"<init>\":(Ljava/io/InputStream;)V\n          5: return\n       LineNumberTable:\n         line 50: 0\n         line 51: 5\n \n   public boolean peek(byte[]) throws java.io.IOException;\n     descriptor: ([B)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_1\n-         1: ldc           #3                  // String Buffer\n-         3: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #10                 // String Buffer\n+         3: invokestatic  #12                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: aload_1\n          8: arraylength\n          9: aload_0\n-        10: getfield      #5                  // Field bufferSize:I\n+        10: getfield      #18                 // Field bufferSize:I\n         13: if_icmple     61\n-        16: new           #6                  // class java/lang/IllegalArgumentException\n+        16: new           #24                 // class java/lang/IllegalArgumentException\n         19: dup\n-        20: new           #7                  // class java/lang/StringBuilder\n+        20: new           #26                 // class java/lang/StringBuilder\n         23: dup\n-        24: invokespecial #8                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        27: ldc           #9                  // String Peek request size of\n-        29: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        24: invokespecial #28                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        27: ldc           #31                 // String Peek request size of\n+        29: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         32: aload_1\n         33: arraylength\n-        34: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        37: ldc           #12                 // String  bytes exceeds buffer size of\n-        39: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        34: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        37: ldc           #40                 // String  bytes exceeds buffer size of\n+        39: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         42: aload_0\n-        43: getfield      #5                  // Field bufferSize:I\n-        46: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        49: ldc           #13                 // String  bytes\n-        51: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        54: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        57: invokespecial #15                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        43: getfield      #18                 // Field bufferSize:I\n+        46: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        49: ldc           #42                 // String  bytes\n+        51: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        54: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        57: invokespecial #48                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         60: athrow\n         61: aload_0\n-        62: getfield      #16                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-        65: invokevirtual #17                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n+        62: getfield      #51                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        65: invokevirtual #55                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n         68: aload_1\n         69: arraylength\n         70: if_icmpge     77\n         73: aload_0\n-        74: invokevirtual #18                 // Method fillBuffer:()V\n+        74: invokevirtual #61                 // Method fillBuffer:()V\n         77: aload_0\n-        78: getfield      #16                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        78: getfield      #51                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n         81: aload_1\n         82: iconst_0\n         83: aload_1\n         84: arraylength\n-        85: invokevirtual #19                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.peek:([BII)Z\n+        85: invokevirtual #64                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.peek:([BII)Z\n         88: ireturn\n       LineNumberTable:\n         line 63: 0\n         line 64: 7\n         line 65: 16\n         line 68: 61\n         line 69: 73\n@@ -177,56 +177,56 @@\n \n   public boolean peek(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_1\n-         1: ldc           #3                  // String Buffer\n-         3: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #10                 // String Buffer\n+         3: invokestatic  #12                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: aload_1\n          8: arraylength\n          9: aload_0\n-        10: getfield      #5                  // Field bufferSize:I\n+        10: getfield      #18                 // Field bufferSize:I\n         13: if_icmple     61\n-        16: new           #6                  // class java/lang/IllegalArgumentException\n+        16: new           #24                 // class java/lang/IllegalArgumentException\n         19: dup\n-        20: new           #7                  // class java/lang/StringBuilder\n+        20: new           #26                 // class java/lang/StringBuilder\n         23: dup\n-        24: invokespecial #8                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        27: ldc           #9                  // String Peek request size of\n-        29: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        24: invokespecial #28                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        27: ldc           #31                 // String Peek request size of\n+        29: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         32: aload_1\n         33: arraylength\n-        34: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        37: ldc           #12                 // String  bytes exceeds buffer size of\n-        39: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        34: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        37: ldc           #40                 // String  bytes exceeds buffer size of\n+        39: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         42: aload_0\n-        43: getfield      #5                  // Field bufferSize:I\n-        46: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        49: ldc           #13                 // String  bytes\n-        51: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        54: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        57: invokespecial #15                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        43: getfield      #18                 // Field bufferSize:I\n+        46: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        49: ldc           #42                 // String  bytes\n+        51: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        54: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        57: invokespecial #48                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         60: athrow\n         61: aload_0\n-        62: getfield      #16                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-        65: invokevirtual #17                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n+        62: getfield      #51                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        65: invokevirtual #55                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n         68: aload_1\n         69: arraylength\n         70: if_icmpge     77\n         73: aload_0\n-        74: invokevirtual #18                 // Method fillBuffer:()V\n+        74: invokevirtual #61                 // Method fillBuffer:()V\n         77: aload_0\n-        78: getfield      #16                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        78: getfield      #51                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n         81: aload_1\n         82: iload_2\n         83: iload_3\n-        84: invokevirtual #19                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.peek:([BII)Z\n+        84: invokevirtual #64                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.peek:([BII)Z\n         87: ireturn\n       LineNumberTable:\n         line 85: 0\n         line 86: 7\n         line 87: 16\n         line 90: 61\n         line 91: 73\n"}]}
