{"diffoscope-json-version": 1, "source1": "first/ColognePhonetic.class", "source2": "second/ColognePhonetic.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,194 +1,194 @@\n-  SHA-256 checksum f65aadfe3cca7da75b9af4c65409f61e6f548f5530fb121b635da51e53dad826\n+  SHA-256 checksum 3ba2069491d7bad57b8b6aa3b1a9920cf76cfd033331625cbfb38dfb0204e928\n   Compiled from \"ColognePhonetic.java\"\n public class org.apache.commons.codec.language.ColognePhonetic implements org.apache.commons.codec.StringEncoder\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #41                         // org/apache/commons/codec/language/ColognePhonetic\n-  super_class: #42                        // java/lang/Object\n+  this_class: #10                         // org/apache/commons/codec/language/ColognePhonetic\n+  super_class: #2                         // java/lang/Object\n   interfaces: 1, fields: 9, methods: 8, attributes: 2\n Constant pool:\n-    #1 = Methodref          #42.#106      // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #107          // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer\n-    #3 = Methodref          #41.#108      // org/apache/commons/codec/language/ColognePhonetic.preprocess:(Ljava/lang/String;)[C\n-    #4 = Methodref          #2.#109       // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.\"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;[C)V\n-    #5 = Class              #110          // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer\n-    #6 = Methodref          #2.#111       // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.length:()I\n-    #7 = Methodref          #5.#112       // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.\"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;I)V\n-    #8 = Methodref          #2.#113       // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.removeNext:()C\n-    #9 = Methodref          #2.#114       // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.getNextChar:()C\n-   #10 = Fieldref           #41.#115      // org/apache/commons/codec/language/ColognePhonetic.AEIJOUY:[C\n-   #11 = Methodref          #41.#116      // org/apache/commons/codec/language/ColognePhonetic.arrayContains:([CC)Z\n-   #12 = Fieldref           #41.#117      // org/apache/commons/codec/language/ColognePhonetic.SCZ:[C\n-   #13 = Fieldref           #41.#118      // org/apache/commons/codec/language/ColognePhonetic.WFPV:[C\n-   #14 = Fieldref           #41.#119      // org/apache/commons/codec/language/ColognePhonetic.GKQ:[C\n-   #15 = Fieldref           #41.#120      // org/apache/commons/codec/language/ColognePhonetic.CKQ:[C\n-   #16 = Methodref          #2.#121       // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.addLeft:(C)V\n-   #17 = Fieldref           #41.#122      // org/apache/commons/codec/language/ColognePhonetic.AHKLOQRUX:[C\n-   #18 = Fieldref           #41.#123      // org/apache/commons/codec/language/ColognePhonetic.SZ:[C\n-   #19 = Fieldref           #41.#124      // org/apache/commons/codec/language/ColognePhonetic.AHOUKQX:[C\n-   #20 = Fieldref           #41.#125      // org/apache/commons/codec/language/ColognePhonetic.TDX:[C\n-   #21 = Methodref          #5.#126       // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.addRight:(C)V\n-   #22 = Methodref          #5.#127       // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.toString:()Ljava/lang/String;\n-   #23 = Class              #128          // java/lang/String\n-   #24 = Class              #129          // org/apache/commons/codec/EncoderException\n-   #25 = Class              #130          // java/lang/StringBuilder\n-   #26 = Methodref          #25.#106      // java/lang/StringBuilder.\"<init>\":()V\n-   #27 = String             #131          // This method\\'s parameter was expected to be of the type\n-   #28 = Methodref          #25.#132      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #29 = Methodref          #133.#134     // java/lang/Class.getName:()Ljava/lang/String;\n-   #30 = String             #135          // . But actually it was of the type\n-   #31 = Methodref          #42.#136      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #32 = String             #137          // .\n-   #33 = Methodref          #25.#127      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #34 = Methodref          #24.#138      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n-   #35 = Methodref          #41.#139      // org/apache/commons/codec/language/ColognePhonetic.encode:(Ljava/lang/String;)Ljava/lang/String;\n-   #36 = Methodref          #41.#140      // org/apache/commons/codec/language/ColognePhonetic.colognePhonetic:(Ljava/lang/String;)Ljava/lang/String;\n-   #37 = Methodref          #23.#141      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #38 = Fieldref           #142.#143     // java/util/Locale.GERMAN:Ljava/util/Locale;\n-   #39 = Methodref          #23.#144      // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-   #40 = Methodref          #23.#145      // java/lang/String.toCharArray:()[C\n-   #41 = Class              #146          // org/apache/commons/codec/language/ColognePhonetic\n-   #42 = Class              #147          // java/lang/Object\n-   #43 = Class              #148          // org/apache/commons/codec/StringEncoder\n-   #44 = Utf8               CologneInputBuffer\n-   #45 = Utf8               InnerClasses\n-   #46 = Utf8               CologneOutputBuffer\n-   #47 = Class              #149          // org/apache/commons/codec/language/ColognePhonetic$CologneBuffer\n-   #48 = Utf8               CologneBuffer\n-   #49 = Utf8               AEIJOUY\n-   #50 = Utf8               [C\n-   #51 = Utf8               SCZ\n-   #52 = Utf8               WFPV\n-   #53 = Utf8               GKQ\n-   #54 = Utf8               CKQ\n-   #55 = Utf8               AHKLOQRUX\n-   #56 = Utf8               SZ\n-   #57 = Utf8               AHOUKQX\n-   #58 = Utf8               TDX\n-   #59 = Utf8               <init>\n-   #60 = Utf8               ()V\n-   #61 = Utf8               Code\n-   #62 = Utf8               LineNumberTable\n-   #63 = Utf8               LocalVariableTable\n-   #64 = Utf8               this\n-   #65 = Utf8               Lorg/apache/commons/codec/language/ColognePhonetic;\n-   #66 = Utf8               arrayContains\n-   #67 = Utf8               ([CC)Z\n-   #68 = Utf8               element\n-   #69 = Utf8               C\n-   #70 = Utf8               arr\n-   #71 = Utf8               key\n-   #72 = Utf8               StackMapTable\n-   #73 = Class              #50           // \"[C\"\n-   #74 = Utf8               colognePhonetic\n-   #75 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-   #76 = Utf8               nextChar\n-   #77 = Utf8               code\n-   #78 = Utf8               chr\n-   #79 = Utf8               text\n-   #80 = Utf8               Ljava/lang/String;\n-   #81 = Utf8               input\n-   #82 = Utf8               Lorg/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer;\n-   #83 = Utf8               output\n-   #84 = Utf8               Lorg/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer;\n-   #85 = Utf8               CHAR_FIRST_POS\n-   #86 = Utf8               CHAR_IGNORE\n-   #87 = Utf8               lastChar\n-   #88 = Utf8               lastCode\n-   #89 = Utf8               encode\n-   #90 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-   #91 = Utf8               object\n-   #92 = Utf8               Ljava/lang/Object;\n-   #93 = Utf8               Exceptions\n-   #94 = Utf8               isEncodeEqual\n-   #95 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n-   #96 = Utf8               text1\n-   #97 = Utf8               text2\n-   #98 = Utf8               preprocess\n-   #99 = Utf8               (Ljava/lang/String;)[C\n-  #100 = Utf8               index\n-  #101 = Utf8               I\n-  #102 = Utf8               chrs\n-  #103 = Utf8               <clinit>\n-  #104 = Utf8               SourceFile\n-  #105 = Utf8               ColognePhonetic.java\n-  #106 = NameAndType        #59:#60       // \"<init>\":()V\n-  #107 = Utf8               org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer\n-  #108 = NameAndType        #98:#99       // preprocess:(Ljava/lang/String;)[C\n-  #109 = NameAndType        #59:#150      // \"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;[C)V\n-  #110 = Utf8               org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer\n-  #111 = NameAndType        #151:#152     // length:()I\n-  #112 = NameAndType        #59:#153      // \"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;I)V\n-  #113 = NameAndType        #154:#155     // removeNext:()C\n-  #114 = NameAndType        #156:#155     // getNextChar:()C\n-  #115 = NameAndType        #49:#50       // AEIJOUY:[C\n-  #116 = NameAndType        #66:#67       // arrayContains:([CC)Z\n-  #117 = NameAndType        #51:#50       // SCZ:[C\n-  #118 = NameAndType        #52:#50       // WFPV:[C\n-  #119 = NameAndType        #53:#50       // GKQ:[C\n-  #120 = NameAndType        #54:#50       // CKQ:[C\n-  #121 = NameAndType        #157:#158     // addLeft:(C)V\n-  #122 = NameAndType        #55:#50       // AHKLOQRUX:[C\n-  #123 = NameAndType        #56:#50       // SZ:[C\n-  #124 = NameAndType        #57:#50       // AHOUKQX:[C\n-  #125 = NameAndType        #58:#50       // TDX:[C\n-  #126 = NameAndType        #159:#158     // addRight:(C)V\n-  #127 = NameAndType        #160:#161     // toString:()Ljava/lang/String;\n-  #128 = Utf8               java/lang/String\n-  #129 = Utf8               org/apache/commons/codec/EncoderException\n-  #130 = Utf8               java/lang/StringBuilder\n-  #131 = Utf8               This method\\'s parameter was expected to be of the type\n-  #132 = NameAndType        #162:#163     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #133 = Class              #164          // java/lang/Class\n-  #134 = NameAndType        #165:#161     // getName:()Ljava/lang/String;\n-  #135 = Utf8               . But actually it was of the type\n-  #136 = NameAndType        #166:#167     // getClass:()Ljava/lang/Class;\n-  #137 = Utf8               .\n-  #138 = NameAndType        #59:#168      // \"<init>\":(Ljava/lang/String;)V\n-  #139 = NameAndType        #89:#75       // encode:(Ljava/lang/String;)Ljava/lang/String;\n-  #140 = NameAndType        #74:#75       // colognePhonetic:(Ljava/lang/String;)Ljava/lang/String;\n-  #141 = NameAndType        #169:#170     // equals:(Ljava/lang/Object;)Z\n-  #142 = Class              #171          // java/util/Locale\n-  #143 = NameAndType        #172:#173     // GERMAN:Ljava/util/Locale;\n-  #144 = NameAndType        #174:#175     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #145 = NameAndType        #176:#177     // toCharArray:()[C\n-  #146 = Utf8               org/apache/commons/codec/language/ColognePhonetic\n-  #147 = Utf8               java/lang/Object\n-  #148 = Utf8               org/apache/commons/codec/StringEncoder\n-  #149 = Utf8               org/apache/commons/codec/language/ColognePhonetic$CologneBuffer\n-  #150 = Utf8               (Lorg/apache/commons/codec/language/ColognePhonetic;[C)V\n-  #151 = Utf8               length\n-  #152 = Utf8               ()I\n-  #153 = Utf8               (Lorg/apache/commons/codec/language/ColognePhonetic;I)V\n-  #154 = Utf8               removeNext\n-  #155 = Utf8               ()C\n-  #156 = Utf8               getNextChar\n-  #157 = Utf8               addLeft\n-  #158 = Utf8               (C)V\n-  #159 = Utf8               addRight\n-  #160 = Utf8               toString\n-  #161 = Utf8               ()Ljava/lang/String;\n-  #162 = Utf8               append\n-  #163 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #164 = Utf8               java/lang/Class\n-  #165 = Utf8               getName\n-  #166 = Utf8               getClass\n-  #167 = Utf8               ()Ljava/lang/Class;\n-  #168 = Utf8               (Ljava/lang/String;)V\n-  #169 = Utf8               equals\n-  #170 = Utf8               (Ljava/lang/Object;)Z\n-  #171 = Utf8               java/util/Locale\n-  #172 = Utf8               GERMAN\n-  #173 = Utf8               Ljava/util/Locale;\n-  #174 = Utf8               toUpperCase\n-  #175 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n-  #176 = Utf8               toCharArray\n-  #177 = Utf8               ()[C\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Class              #8            // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer\n+    #8 = Utf8               org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer\n+    #9 = Methodref          #10.#11       // org/apache/commons/codec/language/ColognePhonetic.preprocess:(Ljava/lang/String;)[C\n+   #10 = Class              #12           // org/apache/commons/codec/language/ColognePhonetic\n+   #11 = NameAndType        #13:#14       // preprocess:(Ljava/lang/String;)[C\n+   #12 = Utf8               org/apache/commons/codec/language/ColognePhonetic\n+   #13 = Utf8               preprocess\n+   #14 = Utf8               (Ljava/lang/String;)[C\n+   #15 = Methodref          #7.#16        // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.\"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;[C)V\n+   #16 = NameAndType        #5:#17        // \"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;[C)V\n+   #17 = Utf8               (Lorg/apache/commons/codec/language/ColognePhonetic;[C)V\n+   #18 = Class              #19           // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer\n+   #19 = Utf8               org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer\n+   #20 = Methodref          #7.#21        // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.length:()I\n+   #21 = NameAndType        #22:#23       // length:()I\n+   #22 = Utf8               length\n+   #23 = Utf8               ()I\n+   #24 = Methodref          #18.#25       // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.\"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;I)V\n+   #25 = NameAndType        #5:#26        // \"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;I)V\n+   #26 = Utf8               (Lorg/apache/commons/codec/language/ColognePhonetic;I)V\n+   #27 = Methodref          #7.#28        // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.removeNext:()C\n+   #28 = NameAndType        #29:#30       // removeNext:()C\n+   #29 = Utf8               removeNext\n+   #30 = Utf8               ()C\n+   #31 = Methodref          #7.#32        // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.getNextChar:()C\n+   #32 = NameAndType        #33:#30       // getNextChar:()C\n+   #33 = Utf8               getNextChar\n+   #34 = Fieldref           #10.#35       // org/apache/commons/codec/language/ColognePhonetic.AEIJOUY:[C\n+   #35 = NameAndType        #36:#37       // AEIJOUY:[C\n+   #36 = Utf8               AEIJOUY\n+   #37 = Utf8               [C\n+   #38 = Methodref          #10.#39       // org/apache/commons/codec/language/ColognePhonetic.arrayContains:([CC)Z\n+   #39 = NameAndType        #40:#41       // arrayContains:([CC)Z\n+   #40 = Utf8               arrayContains\n+   #41 = Utf8               ([CC)Z\n+   #42 = Fieldref           #10.#43       // org/apache/commons/codec/language/ColognePhonetic.SCZ:[C\n+   #43 = NameAndType        #44:#37       // SCZ:[C\n+   #44 = Utf8               SCZ\n+   #45 = Fieldref           #10.#46       // org/apache/commons/codec/language/ColognePhonetic.WFPV:[C\n+   #46 = NameAndType        #47:#37       // WFPV:[C\n+   #47 = Utf8               WFPV\n+   #48 = Fieldref           #10.#49       // org/apache/commons/codec/language/ColognePhonetic.GKQ:[C\n+   #49 = NameAndType        #50:#37       // GKQ:[C\n+   #50 = Utf8               GKQ\n+   #51 = Fieldref           #10.#52       // org/apache/commons/codec/language/ColognePhonetic.CKQ:[C\n+   #52 = NameAndType        #53:#37       // CKQ:[C\n+   #53 = Utf8               CKQ\n+   #54 = Methodref          #7.#55        // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.addLeft:(C)V\n+   #55 = NameAndType        #56:#57       // addLeft:(C)V\n+   #56 = Utf8               addLeft\n+   #57 = Utf8               (C)V\n+   #58 = Fieldref           #10.#59       // org/apache/commons/codec/language/ColognePhonetic.AHKLOQRUX:[C\n+   #59 = NameAndType        #60:#37       // AHKLOQRUX:[C\n+   #60 = Utf8               AHKLOQRUX\n+   #61 = Fieldref           #10.#62       // org/apache/commons/codec/language/ColognePhonetic.SZ:[C\n+   #62 = NameAndType        #63:#37       // SZ:[C\n+   #63 = Utf8               SZ\n+   #64 = Fieldref           #10.#65       // org/apache/commons/codec/language/ColognePhonetic.AHOUKQX:[C\n+   #65 = NameAndType        #66:#37       // AHOUKQX:[C\n+   #66 = Utf8               AHOUKQX\n+   #67 = Fieldref           #10.#68       // org/apache/commons/codec/language/ColognePhonetic.TDX:[C\n+   #68 = NameAndType        #69:#37       // TDX:[C\n+   #69 = Utf8               TDX\n+   #70 = Methodref          #18.#71       // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.addRight:(C)V\n+   #71 = NameAndType        #72:#57       // addRight:(C)V\n+   #72 = Utf8               addRight\n+   #73 = Methodref          #18.#74       // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.toString:()Ljava/lang/String;\n+   #74 = NameAndType        #75:#76       // toString:()Ljava/lang/String;\n+   #75 = Utf8               toString\n+   #76 = Utf8               ()Ljava/lang/String;\n+   #77 = Class              #78           // java/lang/String\n+   #78 = Utf8               java/lang/String\n+   #79 = Class              #80           // org/apache/commons/codec/EncoderException\n+   #80 = Utf8               org/apache/commons/codec/EncoderException\n+   #81 = Class              #82           // java/lang/StringBuilder\n+   #82 = Utf8               java/lang/StringBuilder\n+   #83 = Methodref          #81.#3        // java/lang/StringBuilder.\"<init>\":()V\n+   #84 = String             #85           // This method\\'s parameter was expected to be of the type\n+   #85 = Utf8               This method\\'s parameter was expected to be of the type\n+   #86 = Methodref          #81.#87       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #87 = NameAndType        #88:#89       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #88 = Utf8               append\n+   #89 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #90 = Methodref          #91.#92       // java/lang/Class.getName:()Ljava/lang/String;\n+   #91 = Class              #93           // java/lang/Class\n+   #92 = NameAndType        #94:#76       // getName:()Ljava/lang/String;\n+   #93 = Utf8               java/lang/Class\n+   #94 = Utf8               getName\n+   #95 = String             #96           // . But actually it was of the type\n+   #96 = Utf8               . But actually it was of the type\n+   #97 = Methodref          #2.#98        // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #98 = NameAndType        #99:#100      // getClass:()Ljava/lang/Class;\n+   #99 = Utf8               getClass\n+  #100 = Utf8               ()Ljava/lang/Class;\n+  #101 = String             #102          // .\n+  #102 = Utf8               .\n+  #103 = Methodref          #81.#74       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #104 = Methodref          #79.#105      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+  #105 = NameAndType        #5:#106       // \"<init>\":(Ljava/lang/String;)V\n+  #106 = Utf8               (Ljava/lang/String;)V\n+  #107 = Methodref          #10.#108      // org/apache/commons/codec/language/ColognePhonetic.encode:(Ljava/lang/String;)Ljava/lang/String;\n+  #108 = NameAndType        #109:#110     // encode:(Ljava/lang/String;)Ljava/lang/String;\n+  #109 = Utf8               encode\n+  #110 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #111 = Methodref          #10.#112      // org/apache/commons/codec/language/ColognePhonetic.colognePhonetic:(Ljava/lang/String;)Ljava/lang/String;\n+  #112 = NameAndType        #113:#110     // colognePhonetic:(Ljava/lang/String;)Ljava/lang/String;\n+  #113 = Utf8               colognePhonetic\n+  #114 = Methodref          #77.#115      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+  #115 = NameAndType        #116:#117     // equals:(Ljava/lang/Object;)Z\n+  #116 = Utf8               equals\n+  #117 = Utf8               (Ljava/lang/Object;)Z\n+  #118 = Fieldref           #119.#120     // java/util/Locale.GERMAN:Ljava/util/Locale;\n+  #119 = Class              #121          // java/util/Locale\n+  #120 = NameAndType        #122:#123     // GERMAN:Ljava/util/Locale;\n+  #121 = Utf8               java/util/Locale\n+  #122 = Utf8               GERMAN\n+  #123 = Utf8               Ljava/util/Locale;\n+  #124 = Methodref          #77.#125      // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #125 = NameAndType        #126:#127     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #126 = Utf8               toUpperCase\n+  #127 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+  #128 = Methodref          #77.#129      // java/lang/String.toCharArray:()[C\n+  #129 = NameAndType        #130:#131     // toCharArray:()[C\n+  #130 = Utf8               toCharArray\n+  #131 = Utf8               ()[C\n+  #132 = Class              #133          // org/apache/commons/codec/StringEncoder\n+  #133 = Utf8               org/apache/commons/codec/StringEncoder\n+  #134 = Utf8               Code\n+  #135 = Utf8               LineNumberTable\n+  #136 = Utf8               LocalVariableTable\n+  #137 = Utf8               this\n+  #138 = Utf8               Lorg/apache/commons/codec/language/ColognePhonetic;\n+  #139 = Utf8               element\n+  #140 = Utf8               C\n+  #141 = Utf8               arr\n+  #142 = Utf8               key\n+  #143 = Utf8               StackMapTable\n+  #144 = Class              #37           // \"[C\"\n+  #145 = Utf8               nextChar\n+  #146 = Utf8               code\n+  #147 = Utf8               chr\n+  #148 = Utf8               text\n+  #149 = Utf8               Ljava/lang/String;\n+  #150 = Utf8               input\n+  #151 = Utf8               Lorg/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer;\n+  #152 = Utf8               output\n+  #153 = Utf8               Lorg/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer;\n+  #154 = Utf8               CHAR_FIRST_POS\n+  #155 = Utf8               CHAR_IGNORE\n+  #156 = Utf8               lastChar\n+  #157 = Utf8               lastCode\n+  #158 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #159 = Utf8               object\n+  #160 = Utf8               Ljava/lang/Object;\n+  #161 = Utf8               Exceptions\n+  #162 = Utf8               isEncodeEqual\n+  #163 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n+  #164 = Utf8               text1\n+  #165 = Utf8               text2\n+  #166 = Utf8               index\n+  #167 = Utf8               I\n+  #168 = Utf8               chrs\n+  #169 = Utf8               <clinit>\n+  #170 = Utf8               SourceFile\n+  #171 = Utf8               ColognePhonetic.java\n+  #172 = Utf8               InnerClasses\n+  #173 = Utf8               CologneInputBuffer\n+  #174 = Utf8               CologneOutputBuffer\n+  #175 = Class              #176          // org/apache/commons/codec/language/ColognePhonetic$CologneBuffer\n+  #176 = Utf8               org/apache/commons/codec/language/ColognePhonetic$CologneBuffer\n+  #177 = Utf8               CologneBuffer\n {\n   private static final char[] AEIJOUY;\n     descriptor: [C\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final char[] SCZ;\n     descriptor: [C\n@@ -288,67 +288,67 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=11, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n-         6: new           #2                  // class org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer\n+         6: new           #7                  // class org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer\n          9: dup\n         10: aload_0\n         11: aload_0\n         12: aload_1\n-        13: invokespecial #3                  // Method preprocess:(Ljava/lang/String;)[C\n-        16: invokespecial #4                  // Method org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.\"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;[C)V\n+        13: invokespecial #9                  // Method preprocess:(Ljava/lang/String;)[C\n+        16: invokespecial #15                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.\"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;[C)V\n         19: astore_2\n-        20: new           #5                  // class org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer\n+        20: new           #18                 // class org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer\n         23: dup\n         24: aload_0\n         25: aload_2\n-        26: invokevirtual #6                  // Method org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.length:()I\n+        26: invokevirtual #20                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.length:()I\n         29: iconst_2\n         30: imul\n-        31: invokespecial #7                  // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.\"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;I)V\n+        31: invokespecial #24                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.\"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;I)V\n         34: astore_3\n         35: bipush        47\n         37: istore        5\n         39: bipush        45\n         41: istore        6\n         43: bipush        45\n         45: istore        7\n         47: bipush        47\n         49: istore        8\n         51: aload_2\n-        52: invokevirtual #6                  // Method org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.length:()I\n+        52: invokevirtual #20                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.length:()I\n         55: ifle          479\n         58: aload_2\n-        59: invokevirtual #8                  // Method org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.removeNext:()C\n+        59: invokevirtual #27                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.removeNext:()C\n         62: istore        10\n         64: aload_2\n-        65: invokevirtual #6                  // Method org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.length:()I\n+        65: invokevirtual #20                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.length:()I\n         68: ifle          80\n         71: aload_2\n-        72: invokevirtual #9                  // Method org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.getNextChar:()C\n+        72: invokevirtual #31                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.getNextChar:()C\n         75: istore        4\n         77: goto          84\n         80: bipush        45\n         82: istore        4\n         84: iload         10\n         86: bipush        72\n         88: if_icmpeq     51\n         91: iload         10\n         93: bipush        65\n         95: if_icmplt     51\n         98: iload         10\n        100: bipush        90\n        102: if_icmple     108\n        105: goto          51\n-       108: getstatic     #10                 // Field AEIJOUY:[C\n+       108: getstatic     #34                 // Field AEIJOUY:[C\n        111: iload         10\n-       113: invokestatic  #11                 // Method arrayContains:([CC)Z\n+       113: invokestatic  #38                 // Method arrayContains:([CC)Z\n        116: ifeq          126\n        119: bipush        48\n        121: istore        9\n        123: goto          420\n        126: iload         10\n        128: bipush        66\n        130: if_icmpeq     147\n@@ -363,47 +363,47 @@\n        151: goto          420\n        154: iload         10\n        156: bipush        68\n        158: if_icmpeq     168\n        161: iload         10\n        163: bipush        84\n        165: if_icmpne     186\n-       168: getstatic     #12                 // Field SCZ:[C\n+       168: getstatic     #42                 // Field SCZ:[C\n        171: iload         4\n-       173: invokestatic  #11                 // Method arrayContains:([CC)Z\n+       173: invokestatic  #38                 // Method arrayContains:([CC)Z\n        176: ifne          186\n        179: bipush        50\n        181: istore        9\n        183: goto          420\n-       186: getstatic     #13                 // Field WFPV:[C\n+       186: getstatic     #45                 // Field WFPV:[C\n        189: iload         10\n-       191: invokestatic  #11                 // Method arrayContains:([CC)Z\n+       191: invokestatic  #38                 // Method arrayContains:([CC)Z\n        194: ifeq          204\n        197: bipush        51\n        199: istore        9\n        201: goto          420\n-       204: getstatic     #14                 // Field GKQ:[C\n+       204: getstatic     #48                 // Field GKQ:[C\n        207: iload         10\n-       209: invokestatic  #11                 // Method arrayContains:([CC)Z\n+       209: invokestatic  #38                 // Method arrayContains:([CC)Z\n        212: ifeq          222\n        215: bipush        52\n        217: istore        9\n        219: goto          420\n        222: iload         10\n        224: bipush        88\n        226: if_icmpne     253\n-       229: getstatic     #15                 // Field CKQ:[C\n+       229: getstatic     #51                 // Field CKQ:[C\n        232: iload         7\n-       234: invokestatic  #11                 // Method arrayContains:([CC)Z\n+       234: invokestatic  #38                 // Method arrayContains:([CC)Z\n        237: ifne          253\n        240: bipush        52\n        242: istore        9\n        244: aload_2\n        245: bipush        83\n-       247: invokevirtual #16                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.addLeft:(C)V\n+       247: invokevirtual #54                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.addLeft:(C)V\n        250: goto          420\n        253: iload         10\n        255: bipush        83\n        257: if_icmpeq     267\n        260: iload         10\n        262: bipush        90\n        264: if_icmpne     274\n@@ -412,41 +412,41 @@\n        271: goto          420\n        274: iload         10\n        276: bipush        67\n        278: if_icmpne     349\n        281: iload         8\n        283: bipush        47\n        285: if_icmpne     313\n-       288: getstatic     #17                 // Field AHKLOQRUX:[C\n+       288: getstatic     #58                 // Field AHKLOQRUX:[C\n        291: iload         4\n-       293: invokestatic  #11                 // Method arrayContains:([CC)Z\n+       293: invokestatic  #38                 // Method arrayContains:([CC)Z\n        296: ifeq          306\n        299: bipush        52\n        301: istore        9\n        303: goto          420\n        306: bipush        56\n        308: istore        9\n        310: goto          420\n-       313: getstatic     #18                 // Field SZ:[C\n+       313: getstatic     #61                 // Field SZ:[C\n        316: iload         7\n-       318: invokestatic  #11                 // Method arrayContains:([CC)Z\n+       318: invokestatic  #38                 // Method arrayContains:([CC)Z\n        321: ifne          335\n-       324: getstatic     #19                 // Field AHOUKQX:[C\n+       324: getstatic     #64                 // Field AHOUKQX:[C\n        327: iload         4\n-       329: invokestatic  #11                 // Method arrayContains:([CC)Z\n+       329: invokestatic  #38                 // Method arrayContains:([CC)Z\n        332: ifne          342\n        335: bipush        56\n        337: istore        9\n        339: goto          420\n        342: bipush        52\n        344: istore        9\n        346: goto          420\n-       349: getstatic     #20                 // Field TDX:[C\n+       349: getstatic     #67                 // Field TDX:[C\n        352: iload         10\n-       354: invokestatic  #11                 // Method arrayContains:([CC)Z\n+       354: invokestatic  #38                 // Method arrayContains:([CC)Z\n        357: ifeq          367\n        360: bipush        56\n        362: istore        9\n        364: goto          420\n        367: iload         10\n        369: bipush        82\n        371: if_icmpne     381\n@@ -486,22 +486,22 @@\n        450: bipush        48\n        452: if_icmplt     462\n        455: iload         9\n        457: bipush        56\n        459: if_icmple     468\n        462: aload_3\n        463: iload         9\n-       465: invokevirtual #21                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.addRight:(C)V\n+       465: invokevirtual #70                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.addRight:(C)V\n        468: iload         10\n        470: istore        7\n        472: iload         9\n        474: istore        8\n        476: goto          51\n        479: aload_3\n-       480: invokevirtual #22                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.toString:()Ljava/lang/String;\n+       480: invokevirtual #73                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.toString:()Ljava/lang/String;\n        483: areturn\n       LineNumberTable:\n         line 314: 0\n         line 315: 4\n         line 318: 6\n         line 319: 20\n         line 323: 35\n@@ -629,41 +629,41 @@\n \n   public java.lang.Object encode(java.lang.Object) throws org.apache.commons.codec.EncoderException;\n     descriptor: (Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_1\n-         1: instanceof    #23                 // class java/lang/String\n+         1: instanceof    #77                 // class java/lang/String\n          4: ifne          58\n-         7: new           #24                 // class org/apache/commons/codec/EncoderException\n+         7: new           #79                 // class org/apache/commons/codec/EncoderException\n         10: dup\n-        11: new           #25                 // class java/lang/StringBuilder\n+        11: new           #81                 // class java/lang/StringBuilder\n         14: dup\n-        15: invokespecial #26                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        18: ldc           #27                 // String This method\\'s parameter was expected to be of the type\n-        20: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        23: ldc           #23                 // class java/lang/String\n-        25: invokevirtual #29                 // Method java/lang/Class.getName:()Ljava/lang/String;\n-        28: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        31: ldc           #30                 // String . But actually it was of the type\n-        33: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        15: invokespecial #83                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        18: ldc           #84                 // String This method\\'s parameter was expected to be of the type\n+        20: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        23: ldc           #77                 // class java/lang/String\n+        25: invokevirtual #90                 // Method java/lang/Class.getName:()Ljava/lang/String;\n+        28: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        31: ldc           #95                 // String . But actually it was of the type\n+        33: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         36: aload_1\n-        37: invokevirtual #31                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-        40: invokevirtual #29                 // Method java/lang/Class.getName:()Ljava/lang/String;\n-        43: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        46: ldc           #32                 // String .\n-        48: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        51: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        54: invokespecial #34                 // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+        37: invokevirtual #97                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        40: invokevirtual #90                 // Method java/lang/Class.getName:()Ljava/lang/String;\n+        43: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        46: ldc           #101                // String .\n+        48: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        51: invokevirtual #103                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        54: invokespecial #104                // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n         57: athrow\n         58: aload_0\n         59: aload_1\n-        60: checkcast     #23                 // class java/lang/String\n-        63: invokevirtual #35                 // Method encode:(Ljava/lang/String;)Ljava/lang/String;\n+        60: checkcast     #77                 // class java/lang/String\n+        63: invokevirtual #107                // Method encode:(Ljava/lang/String;)Ljava/lang/String;\n         66: areturn\n       LineNumberTable:\n         line 398: 0\n         line 399: 7\n         line 400: 25\n         line 402: 37\n         line 405: 58\n@@ -679,15 +679,15 @@\n   public java.lang.String encode(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #36                 // Method colognePhonetic:(Ljava/lang/String;)Ljava/lang/String;\n+         2: invokevirtual #111                // Method colognePhonetic:(Ljava/lang/String;)Ljava/lang/String;\n          5: areturn\n       LineNumberTable:\n         line 410: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/codec/language/ColognePhonetic;\n             0       6     1  text   Ljava/lang/String;\n@@ -695,19 +695,19 @@\n   public boolean isEncodeEqual(java.lang.String, java.lang.String);\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #36                 // Method colognePhonetic:(Ljava/lang/String;)Ljava/lang/String;\n+         2: invokevirtual #111                // Method colognePhonetic:(Ljava/lang/String;)Ljava/lang/String;\n          5: aload_0\n          6: aload_2\n-         7: invokevirtual #36                 // Method colognePhonetic:(Ljava/lang/String;)Ljava/lang/String;\n-        10: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+         7: invokevirtual #111                // Method colognePhonetic:(Ljava/lang/String;)Ljava/lang/String;\n+        10: invokevirtual #114                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         13: ireturn\n       LineNumberTable:\n         line 414: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/codec/language/ColognePhonetic;\n             0      14     1 text1   Ljava/lang/String;\n@@ -715,17 +715,17 @@\n \n   private char[] preprocess(java.lang.String);\n     descriptor: (Ljava/lang/String;)[C\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=4, args_size=2\n          0: aload_1\n-         1: getstatic     #38                 // Field java/util/Locale.GERMAN:Ljava/util/Locale;\n-         4: invokevirtual #39                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-         7: invokevirtual #40                 // Method java/lang/String.toCharArray:()[C\n+         1: getstatic     #118                // Field java/util/Locale.GERMAN:Ljava/util/Locale;\n+         4: invokevirtual #124                // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+         7: invokevirtual #128                // Method java/lang/String.toCharArray:()[C\n         10: astore_2\n         11: iconst_0\n         12: istore_3\n         13: iload_3\n         14: aload_2\n         15: arraylength\n         16: if_icmpge     86\n@@ -817,30 +817,30 @@\n         30: iconst_5\n         31: bipush        85\n         33: castore\n         34: dup\n         35: bipush        6\n         37: bipush        89\n         39: castore\n-        40: putstatic     #10                 // Field AEIJOUY:[C\n+        40: putstatic     #34                 // Field AEIJOUY:[C\n         43: iconst_3\n         44: newarray       char\n         46: dup\n         47: iconst_0\n         48: bipush        83\n         50: castore\n         51: dup\n         52: iconst_1\n         53: bipush        67\n         55: castore\n         56: dup\n         57: iconst_2\n         58: bipush        90\n         60: castore\n-        61: putstatic     #12                 // Field SCZ:[C\n+        61: putstatic     #42                 // Field SCZ:[C\n         64: iconst_4\n         65: newarray       char\n         67: dup\n         68: iconst_0\n         69: bipush        87\n         71: castore\n         72: dup\n@@ -851,45 +851,45 @@\n         78: iconst_2\n         79: bipush        80\n         81: castore\n         82: dup\n         83: iconst_3\n         84: bipush        86\n         86: castore\n-        87: putstatic     #13                 // Field WFPV:[C\n+        87: putstatic     #45                 // Field WFPV:[C\n         90: iconst_3\n         91: newarray       char\n         93: dup\n         94: iconst_0\n         95: bipush        71\n         97: castore\n         98: dup\n         99: iconst_1\n        100: bipush        75\n        102: castore\n        103: dup\n        104: iconst_2\n        105: bipush        81\n        107: castore\n-       108: putstatic     #14                 // Field GKQ:[C\n+       108: putstatic     #48                 // Field GKQ:[C\n        111: iconst_3\n        112: newarray       char\n        114: dup\n        115: iconst_0\n        116: bipush        67\n        118: castore\n        119: dup\n        120: iconst_1\n        121: bipush        75\n        123: castore\n        124: dup\n        125: iconst_2\n        126: bipush        81\n        128: castore\n-       129: putstatic     #15                 // Field CKQ:[C\n+       129: putstatic     #51                 // Field CKQ:[C\n        132: bipush        9\n        134: newarray       char\n        136: dup\n        137: iconst_0\n        138: bipush        65\n        140: castore\n        141: dup\n@@ -920,26 +920,26 @@\n        173: bipush        7\n        175: bipush        85\n        177: castore\n        178: dup\n        179: bipush        8\n        181: bipush        88\n        183: castore\n-       184: putstatic     #17                 // Field AHKLOQRUX:[C\n+       184: putstatic     #58                 // Field AHKLOQRUX:[C\n        187: iconst_2\n        188: newarray       char\n        190: dup\n        191: iconst_0\n        192: bipush        83\n        194: castore\n        195: dup\n        196: iconst_1\n        197: bipush        90\n        199: castore\n-       200: putstatic     #18                 // Field SZ:[C\n+       200: putstatic     #61                 // Field SZ:[C\n        203: bipush        7\n        205: newarray       char\n        207: dup\n        208: iconst_0\n        209: bipush        65\n        211: castore\n        212: dup\n@@ -962,40 +962,40 @@\n        233: iconst_5\n        234: bipush        81\n        236: castore\n        237: dup\n        238: bipush        6\n        240: bipush        88\n        242: castore\n-       243: putstatic     #19                 // Field AHOUKQX:[C\n+       243: putstatic     #64                 // Field AHOUKQX:[C\n        246: iconst_3\n        247: newarray       char\n        249: dup\n        250: iconst_0\n        251: bipush        84\n        253: castore\n        254: dup\n        255: iconst_1\n        256: bipush        68\n        258: castore\n        259: dup\n        260: iconst_2\n        261: bipush        88\n        263: castore\n-       264: putstatic     #20                 // Field TDX:[C\n+       264: putstatic     #67                 // Field TDX:[C\n        267: return\n       LineNumberTable:\n         line 185: 0\n         line 186: 43\n         line 187: 64\n         line 188: 90\n         line 189: 111\n         line 190: 132\n         line 191: 187\n         line 192: 203\n         line 193: 246\n }\n SourceFile: \"ColognePhonetic.java\"\n InnerClasses:\n-  private #44= #2 of #41;                 // CologneInputBuffer=class org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer of class org/apache/commons/codec/language/ColognePhonetic\n-  private #46= #5 of #41;                 // CologneOutputBuffer=class org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer of class org/apache/commons/codec/language/ColognePhonetic\n-  private abstract #48= #47 of #41;       // CologneBuffer=class org/apache/commons/codec/language/ColognePhonetic$CologneBuffer of class org/apache/commons/codec/language/ColognePhonetic\n+  private #173= #7 of #10;                // CologneInputBuffer=class org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer of class org/apache/commons/codec/language/ColognePhonetic\n+  private #174= #18 of #10;               // CologneOutputBuffer=class org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer of class org/apache/commons/codec/language/ColognePhonetic\n+  private abstract #177= #175 of #10;     // CologneBuffer=class org/apache/commons/codec/language/ColognePhonetic$CologneBuffer of class org/apache/commons/codec/language/ColognePhonetic\n"}]}
