{"diffoscope-json-version": 1, "source1": "first/Resources.class", "source2": "second/Resources.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,61 +1,61 @@\n-  SHA-256 checksum b21db3e9a3f89eac86b537f011d67314076ed136e2a40366877627125df26325\n+  SHA-256 checksum 2881ad2f13253f2a44f017b3eab0cb41ab66083b0e1055d376be2237cddcc9cc\n   Compiled from \"Resources.java\"\n public class org.apache.commons.codec.Resources\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #7                          // org/apache/commons/codec/Resources\n-  super_class: #2                         // java/lang/Object\n+  this_class: #1                          // org/apache/commons/codec/Resources\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 2, attributes: 1\n Constant pool:\n-   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n-   #2 = Class              #4             // java/lang/Object\n-   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #1 = Class              #2             // org/apache/commons/codec/Resources\n+   #2 = Utf8               org/apache/commons/codec/Resources\n+   #3 = Class              #4             // java/lang/Object\n    #4 = Utf8               java/lang/Object\n    #5 = Utf8               <init>\n    #6 = Utf8               ()V\n-   #7 = Class              #8             // org/apache/commons/codec/Resources\n-   #8 = Utf8               org/apache/commons/codec/Resources\n-   #9 = Methodref          #10.#11        // java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;\n-  #10 = Class              #12            // java/lang/Class\n-  #11 = NameAndType        #13:#14        // getClassLoader:()Ljava/lang/ClassLoader;\n-  #12 = Utf8               java/lang/Class\n-  #13 = Utf8               getClassLoader\n-  #14 = Utf8               ()Ljava/lang/ClassLoader;\n-  #15 = Methodref          #16.#17        // java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n-  #16 = Class              #18            // java/lang/ClassLoader\n-  #17 = NameAndType        #19:#20        // getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n-  #18 = Utf8               java/lang/ClassLoader\n-  #19 = Utf8               getResourceAsStream\n-  #20 = Utf8               (Ljava/lang/String;)Ljava/io/InputStream;\n-  #21 = Class              #22            // java/lang/IllegalArgumentException\n-  #22 = Utf8               java/lang/IllegalArgumentException\n-  #23 = Class              #24            // java/lang/StringBuilder\n-  #24 = Utf8               java/lang/StringBuilder\n-  #25 = Methodref          #23.#3         // java/lang/StringBuilder.\"<init>\":()V\n-  #26 = String             #27            // Unable to resolve required resource:\n-  #27 = Utf8               Unable to resolve required resource:\n-  #28 = Methodref          #23.#29        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #29 = NameAndType        #30:#31        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #30 = Utf8               append\n-  #31 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #32 = Methodref          #23.#33        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #33 = NameAndType        #34:#35        // toString:()Ljava/lang/String;\n-  #34 = Utf8               toString\n-  #35 = Utf8               ()Ljava/lang/String;\n-  #36 = Methodref          #21.#37        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #37 = NameAndType        #5:#38         // \"<init>\":(Ljava/lang/String;)V\n-  #38 = Utf8               (Ljava/lang/String;)V\n-  #39 = Utf8               Code\n-  #40 = Utf8               LineNumberTable\n-  #41 = Utf8               LocalVariableTable\n-  #42 = Utf8               this\n-  #43 = Utf8               Lorg/apache/commons/codec/Resources;\n-  #44 = Utf8               getInputStream\n+   #7 = Utf8               Code\n+   #8 = Methodref          #3.#9          // java/lang/Object.\"<init>\":()V\n+   #9 = NameAndType        #5:#6          // \"<init>\":()V\n+  #10 = Utf8               LineNumberTable\n+  #11 = Utf8               LocalVariableTable\n+  #12 = Utf8               this\n+  #13 = Utf8               Lorg/apache/commons/codec/Resources;\n+  #14 = Utf8               getInputStream\n+  #15 = Utf8               (Ljava/lang/String;)Ljava/io/InputStream;\n+  #16 = Methodref          #17.#19        // java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;\n+  #17 = Class              #18            // java/lang/Class\n+  #18 = Utf8               java/lang/Class\n+  #19 = NameAndType        #20:#21        // getClassLoader:()Ljava/lang/ClassLoader;\n+  #20 = Utf8               getClassLoader\n+  #21 = Utf8               ()Ljava/lang/ClassLoader;\n+  #22 = Methodref          #23.#25        // java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n+  #23 = Class              #24            // java/lang/ClassLoader\n+  #24 = Utf8               java/lang/ClassLoader\n+  #25 = NameAndType        #26:#15        // getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n+  #26 = Utf8               getResourceAsStream\n+  #27 = Class              #28            // java/lang/IllegalArgumentException\n+  #28 = Utf8               java/lang/IllegalArgumentException\n+  #29 = Class              #30            // java/lang/StringBuilder\n+  #30 = Utf8               java/lang/StringBuilder\n+  #31 = String             #32            // Unable to resolve required resource:\n+  #32 = Utf8               Unable to resolve required resource:\n+  #33 = Methodref          #29.#34        // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #34 = NameAndType        #5:#35         // \"<init>\":(Ljava/lang/String;)V\n+  #35 = Utf8               (Ljava/lang/String;)V\n+  #36 = Methodref          #29.#37        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #37 = NameAndType        #38:#39        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #38 = Utf8               append\n+  #39 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #40 = Methodref          #29.#41        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #41 = NameAndType        #42:#43        // toString:()Ljava/lang/String;\n+  #42 = Utf8               toString\n+  #43 = Utf8               ()Ljava/lang/String;\n+  #44 = Methodref          #27.#34        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n   #45 = Utf8               name\n   #46 = Utf8               Ljava/lang/String;\n   #47 = Utf8               inputStream\n   #48 = Utf8               Ljava/io/InputStream;\n   #49 = Utf8               StackMapTable\n   #50 = Class              #51            // java/io/InputStream\n   #51 = Utf8               java/io/InputStream\n@@ -64,56 +64,55 @@\n {\n   public org.apache.commons.codec.Resources();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #8                  // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 27: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/codec/Resources;\n \n   public static java.io.InputStream getInputStream(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/io/InputStream;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n-      stack=4, locals=2, args_size=1\n-         0: ldc           #7                  // class org/apache/commons/codec/Resources\n-         2: invokevirtual #9                  // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;\n+      stack=5, locals=2, args_size=1\n+         0: ldc           #1                  // class org/apache/commons/codec/Resources\n+         2: invokevirtual #16                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;\n          5: aload_0\n-         6: invokevirtual #15                 // Method java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n+         6: invokevirtual #22                 // Method java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n          9: astore_1\n         10: aload_1\n-        11: ifnonnull     41\n-        14: new           #21                 // class java/lang/IllegalArgumentException\n+        11: ifnonnull     38\n+        14: new           #27                 // class java/lang/IllegalArgumentException\n         17: dup\n-        18: new           #23                 // class java/lang/StringBuilder\n+        18: new           #29                 // class java/lang/StringBuilder\n         21: dup\n-        22: invokespecial #25                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        25: ldc           #26                 // String Unable to resolve required resource:\n-        27: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        30: aload_0\n-        31: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        34: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        37: invokespecial #36                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        40: athrow\n-        41: aload_1\n-        42: areturn\n+        22: ldc           #31                 // String Unable to resolve required resource:\n+        24: invokespecial #33                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        27: aload_0\n+        28: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        31: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        34: invokespecial #44                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        37: athrow\n+        38: aload_1\n+        39: areturn\n       LineNumberTable:\n         line 36: 0\n         line 37: 10\n         line 38: 14\n-        line 40: 41\n+        line 40: 38\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      43     0  name   Ljava/lang/String;\n-           10      33     1 inputStream   Ljava/io/InputStream;\n+            0      40     0  name   Ljava/lang/String;\n+           10      30     1 inputStream   Ljava/io/InputStream;\n       StackMapTable: number_of_entries = 1\n         frame_type = 252 /* append */\n-          offset_delta = 41\n+          offset_delta = 38\n           locals = [ class java/io/InputStream ]\n }\n SourceFile: \"Resources.java\"\n"}]}
