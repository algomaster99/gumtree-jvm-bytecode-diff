{"diffoscope-json-version": 1, "source1": "first/FastDatePrinter$UnpaddedNumberField.class", "source2": "second/FastDatePrinter$UnpaddedNumberField.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -4,31 +4,31 @@\n import java.io.IOException;\n import java.util.Calendar;\n \n private static class UnpaddedNumberField implements FastDatePrinter.NumberRule\n {\n     private final int mField;\n     \n-    UnpaddedNumberField(final int field) {\n-        this.mField = field;\n+    UnpaddedNumberField(final int mField) {\n+        this.mField = mField;\n     }\n     \n     public int estimateLength() {\n         return 4;\n     }\n     \n-    public void appendTo(final Appendable buffer, final Calendar calendar) throws IOException {\n-        this.appendTo(buffer, calendar.get(this.mField));\n+    public void appendTo(final Appendable appendable, final Calendar calendar) throws IOException {\n+        this.appendTo(appendable, calendar.get(this.mField));\n     }\n     \n-    public final void appendTo(final Appendable buffer, final int value) throws IOException {\n-        if (value < 10) {\n-            buffer.append((char)(value + 48));\n+    public final void appendTo(final Appendable appendable, final int n) throws IOException {\n+        if (n < 10) {\n+            appendable.append((char)(n + 48));\n         }\n-        else if (value < 100) {\n-            FastDatePrinter.access$000(buffer, value);\n+        else if (n < 100) {\n+            FastDatePrinter.access$000(appendable, n);\n         }\n         else {\n-            FastDatePrinter.access$100(buffer, value, 1);\n+            FastDatePrinter.access$100(appendable, n, 1);\n         }\n     }\n }\n"}]}
