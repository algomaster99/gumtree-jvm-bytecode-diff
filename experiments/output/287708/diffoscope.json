{"diffoscope-json-version": 1, "source1": "first/SevenZFile.class", "source2": "second/SevenZFile.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -705,15 +705,15 @@\n     }\n     \n     private int sanityCheckFolder(final ByteBuffer byteBuffer, final SevenZFile.ArchiveStatistics archiveStatistics) throws IOException {\n         final int assertFitsIntoNonNegativeInt = assertFitsIntoNonNegativeInt(\"numCoders\", readUint64(byteBuffer));\n         if (assertFitsIntoNonNegativeInt == 0) {\n             throw new IOException(\"Folder without coders\");\n         }\n-        SevenZFile.ArchiveStatistics.access$702(archiveStatistics, SevenZFile.ArchiveStatistics.access$700(archiveStatistics) + (long)assertFitsIntoNonNegativeInt);\n+        SevenZFile.ArchiveStatistics.access$714(archiveStatistics, (long)assertFitsIntoNonNegativeInt);\n         long n = 0L;\n         long n2 = 0L;\n         for (int i = 0; i < assertFitsIntoNonNegativeInt; ++i) {\n             final int unsignedByte = getUnsignedByte(byteBuffer);\n             get(byteBuffer, new byte[unsignedByte & 0xF]);\n             final boolean b = (unsignedByte & 0x10) == 0x0;\n             final boolean b2 = (unsignedByte & 0x20) != 0x0;\n@@ -733,16 +733,16 @@\n                 if (skipBytesFully(byteBuffer, assertFitsIntoNonNegativeInt2) < assertFitsIntoNonNegativeInt2) {\n                     throw new IOException(\"invalid propertiesSize in folder\");\n                 }\n             }\n         }\n         assertFitsIntoNonNegativeInt(\"totalInStreams\", n2);\n         assertFitsIntoNonNegativeInt(\"totalOutStreams\", n);\n-        SevenZFile.ArchiveStatistics.access$302(archiveStatistics, SevenZFile.ArchiveStatistics.access$300(archiveStatistics) + n);\n-        SevenZFile.ArchiveStatistics.access$402(archiveStatistics, SevenZFile.ArchiveStatistics.access$400(archiveStatistics) + n2);\n+        SevenZFile.ArchiveStatistics.access$314(archiveStatistics, n);\n+        SevenZFile.ArchiveStatistics.access$414(archiveStatistics, n2);\n         if (n == 0L) {\n             throw new IOException(\"Total output streams can't be 0\");\n         }\n         final int assertFitsIntoNonNegativeInt3 = assertFitsIntoNonNegativeInt(\"numBindPairs\", n - 1L);\n         if (n2 < assertFitsIntoNonNegativeInt3) {\n             throw new IOException(\"Total input streams can't be less than the number of bind pairs\");\n         }\n"}]}
