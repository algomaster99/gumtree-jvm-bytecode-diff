{"diffoscope-json-version": 1, "source1": "first/PathVisitorFileFilter.class", "source2": "second/PathVisitorFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,139 +1,139 @@\n-  SHA-256 checksum 068b5786946f9394d737b843565b4469ec001a55198edda8ea3cb0914ec10966\n+  SHA-256 checksum 0bf7dba1faede9edb57ef87a06a96f68fe9c0c8c3f1819f7b3e9821703fdd194\n   Compiled from \"PathVisitorFileFilter.java\"\n public class org.apache.commons.io.filefilter.PathVisitorFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #14                         // org/apache/commons/io/filefilter/PathVisitorFileFilter\n-  super_class: #2                         // org/apache/commons/io/filefilter/AbstractFileFilter\n-  interfaces: 0, fields: 1, methods: 6, attributes: 1\n+  this_class: #1                          // org/apache/commons/io/filefilter/PathVisitorFileFilter\n+  super_class: #3                         // org/apache/commons/io/filefilter/AbstractFileFilter\n+  interfaces: 0, fields: 1, methods: 5, attributes: 1\n Constant pool:\n-    #1 = Methodref          #2.#3         // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-    #2 = Class              #4            // org/apache/commons/io/filefilter/AbstractFileFilter\n-    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #1 = Class              #2            // org/apache/commons/io/filefilter/PathVisitorFileFilter\n+    #2 = Utf8               org/apache/commons/io/filefilter/PathVisitorFileFilter\n+    #3 = Class              #4            // org/apache/commons/io/filefilter/AbstractFileFilter\n     #4 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-    #5 = Utf8               <init>\n-    #6 = Utf8               ()V\n-    #7 = Fieldref           #8.#9         // org/apache/commons/io/file/NoopPathVisitor.INSTANCE:Lorg/apache/commons/io/file/NoopPathVisitor;\n-    #8 = Class              #10           // org/apache/commons/io/file/NoopPathVisitor\n-    #9 = NameAndType        #11:#12       // INSTANCE:Lorg/apache/commons/io/file/NoopPathVisitor;\n-   #10 = Utf8               org/apache/commons/io/file/NoopPathVisitor\n-   #11 = Utf8               INSTANCE\n-   #12 = Utf8               Lorg/apache/commons/io/file/NoopPathVisitor;\n-   #13 = Fieldref           #14.#15       // org/apache/commons/io/filefilter/PathVisitorFileFilter.pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n-   #14 = Class              #16           // org/apache/commons/io/filefilter/PathVisitorFileFilter\n-   #15 = NameAndType        #17:#18       // pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n-   #16 = Utf8               org/apache/commons/io/filefilter/PathVisitorFileFilter\n-   #17 = Utf8               pathVisitor\n-   #18 = Utf8               Lorg/apache/commons/io/file/PathVisitor;\n-   #19 = Methodref          #20.#21       // java/io/File.toPath:()Ljava/nio/file/Path;\n-   #20 = Class              #22           // java/io/File\n-   #21 = NameAndType        #23:#24       // toPath:()Ljava/nio/file/Path;\n-   #22 = Utf8               java/io/File\n-   #23 = Utf8               toPath\n-   #24 = Utf8               ()Ljava/nio/file/Path;\n-   #25 = Methodref          #20.#26       // java/io/File.exists:()Z\n-   #26 = NameAndType        #27:#28       // exists:()Z\n-   #27 = Utf8               exists\n-   #28 = Utf8               ()Z\n-   #29 = Methodref          #30.#31       // org/apache/commons/io/file/PathUtils.readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n-   #30 = Class              #32           // org/apache/commons/io/file/PathUtils\n-   #31 = NameAndType        #33:#34       // readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n-   #32 = Utf8               org/apache/commons/io/file/PathUtils\n-   #33 = Utf8               readBasicFileAttributes\n-   #34 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n-   #35 = Methodref          #14.#36       // org/apache/commons/io/filefilter/PathVisitorFileFilter.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #36 = NameAndType        #37:#38       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #37 = Utf8               visitFile\n-   #38 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #39 = Fieldref           #40.#41       // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-   #40 = Class              #42           // java/nio/file/FileVisitResult\n-   #41 = NameAndType        #43:#44       // CONTINUE:Ljava/nio/file/FileVisitResult;\n-   #42 = Utf8               java/nio/file/FileVisitResult\n-   #43 = Utf8               CONTINUE\n-   #44 = Utf8               Ljava/nio/file/FileVisitResult;\n-   #45 = Class              #46           // java/io/IOException\n-   #46 = Utf8               java/io/IOException\n-   #47 = Methodref          #14.#48       // org/apache/commons/io/filefilter/PathVisitorFileFilter.handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-   #48 = NameAndType        #49:#50       // handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-   #49 = Utf8               handle\n-   #50 = Utf8               (Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-   #51 = InterfaceMethodref #52.#53       // java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n-   #52 = Class              #54           // java/nio/file/Path\n-   #53 = NameAndType        #55:#56       // resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n-   #54 = Utf8               java/nio/file/Path\n-   #55 = Utf8               resolve\n-   #56 = Utf8               (Ljava/lang/String;)Ljava/nio/file/Path;\n-   #57 = Methodref          #14.#58       // org/apache/commons/io/filefilter/PathVisitorFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #58 = NameAndType        #59:#38       // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #59 = Utf8               accept\n-   #60 = Class              #61           // java/nio/file/LinkOption\n-   #61 = Utf8               java/nio/file/LinkOption\n-   #62 = Methodref          #63.#64       // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #63 = Class              #65           // java/nio/file/Files\n-   #64 = NameAndType        #66:#67       // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #65 = Utf8               java/nio/file/Files\n-   #66 = Utf8               isDirectory\n-   #67 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #68 = InterfaceMethodref #69.#70       // org/apache/commons/io/file/PathVisitor.postVisitDirectory:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-   #69 = Class              #71           // org/apache/commons/io/file/PathVisitor\n-   #70 = NameAndType        #72:#73       // postVisitDirectory:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-   #71 = Utf8               org/apache/commons/io/file/PathVisitor\n-   #72 = Utf8               postVisitDirectory\n-   #73 = Utf8               (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-   #74 = InterfaceMethodref #69.#75       // org/apache/commons/io/file/PathVisitor.visitFile:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #75 = NameAndType        #37:#76       // visitFile:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #76 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #77 = Utf8               (Lorg/apache/commons/io/file/PathVisitor;)V\n-   #78 = Utf8               Code\n-   #79 = Utf8               LineNumberTable\n-   #80 = Utf8               LocalVariableTable\n-   #81 = Utf8               this\n-   #82 = Utf8               Lorg/apache/commons/io/filefilter/PathVisitorFileFilter;\n-   #83 = Utf8               StackMapTable\n-   #84 = Utf8               (Ljava/io/File;)Z\n-   #85 = Utf8               path\n-   #86 = Utf8               Ljava/nio/file/Path;\n-   #87 = Utf8               e\n-   #88 = Utf8               Ljava/io/IOException;\n-   #89 = Utf8               file\n-   #90 = Utf8               Ljava/io/File;\n-   #91 = Class              #92           // java/nio/file/attribute/BasicFileAttributes\n-   #92 = Utf8               java/nio/file/attribute/BasicFileAttributes\n-   #93 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n-   #94 = Utf8               dir\n-   #95 = Utf8               name\n-   #96 = Utf8               Ljava/lang/String;\n-   #97 = Class              #98           // java/lang/String\n-   #98 = Utf8               java/lang/String\n-   #99 = Utf8               attributes\n-  #100 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n-  #101 = Utf8               Exceptions\n+    #5 = Utf8               pathVisitor\n+    #6 = Utf8               Lorg/apache/commons/io/file/PathVisitor;\n+    #7 = Utf8               <init>\n+    #8 = Utf8               (Lorg/apache/commons/io/file/PathVisitor;)V\n+    #9 = Utf8               Code\n+   #10 = Methodref          #3.#11        // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+   #11 = NameAndType        #7:#12        // \"<init>\":()V\n+   #12 = Utf8               ()V\n+   #13 = Fieldref           #14.#16       // org/apache/commons/io/file/NoopPathVisitor.INSTANCE:Lorg/apache/commons/io/file/NoopPathVisitor;\n+   #14 = Class              #15           // org/apache/commons/io/file/NoopPathVisitor\n+   #15 = Utf8               org/apache/commons/io/file/NoopPathVisitor\n+   #16 = NameAndType        #17:#18       // INSTANCE:Lorg/apache/commons/io/file/NoopPathVisitor;\n+   #17 = Utf8               INSTANCE\n+   #18 = Utf8               Lorg/apache/commons/io/file/NoopPathVisitor;\n+   #19 = Fieldref           #1.#20        // org/apache/commons/io/filefilter/PathVisitorFileFilter.pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n+   #20 = NameAndType        #5:#6         // pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n+   #21 = Utf8               LineNumberTable\n+   #22 = Utf8               LocalVariableTable\n+   #23 = Utf8               this\n+   #24 = Utf8               Lorg/apache/commons/io/filefilter/PathVisitorFileFilter;\n+   #25 = Utf8               StackMapTable\n+   #26 = Class              #27           // org/apache/commons/io/file/PathVisitor\n+   #27 = Utf8               org/apache/commons/io/file/PathVisitor\n+   #28 = Utf8               accept\n+   #29 = Utf8               (Ljava/io/File;)Z\n+   #30 = Methodref          #31.#33       // java/io/File.toPath:()Ljava/nio/file/Path;\n+   #31 = Class              #32           // java/io/File\n+   #32 = Utf8               java/io/File\n+   #33 = NameAndType        #34:#35       // toPath:()Ljava/nio/file/Path;\n+   #34 = Utf8               toPath\n+   #35 = Utf8               ()Ljava/nio/file/Path;\n+   #36 = Methodref          #31.#37       // java/io/File.exists:()Z\n+   #37 = NameAndType        #38:#39       // exists:()Z\n+   #38 = Utf8               exists\n+   #39 = Utf8               ()Z\n+   #40 = Methodref          #41.#43       // org/apache/commons/io/file/PathUtils.readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+   #41 = Class              #42           // org/apache/commons/io/file/PathUtils\n+   #42 = Utf8               org/apache/commons/io/file/PathUtils\n+   #43 = NameAndType        #44:#45       // readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+   #44 = Utf8               readBasicFileAttributes\n+   #45 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+   #46 = Methodref          #1.#47        // org/apache/commons/io/filefilter/PathVisitorFileFilter.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #47 = NameAndType        #48:#49       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #48 = Utf8               visitFile\n+   #49 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #50 = Fieldref           #51.#53       // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+   #51 = Class              #52           // java/nio/file/FileVisitResult\n+   #52 = Utf8               java/nio/file/FileVisitResult\n+   #53 = NameAndType        #54:#55       // CONTINUE:Ljava/nio/file/FileVisitResult;\n+   #54 = Utf8               CONTINUE\n+   #55 = Utf8               Ljava/nio/file/FileVisitResult;\n+   #56 = Methodref          #1.#57        // org/apache/commons/io/filefilter/PathVisitorFileFilter.handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+   #57 = NameAndType        #58:#59       // handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+   #58 = Utf8               handle\n+   #59 = Utf8               (Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+   #60 = Class              #61           // java/io/IOException\n+   #61 = Utf8               java/io/IOException\n+   #62 = Utf8               file\n+   #63 = Utf8               Ljava/io/File;\n+   #64 = Utf8               path\n+   #65 = Utf8               Ljava/nio/file/Path;\n+   #66 = Utf8               e\n+   #67 = Utf8               Ljava/io/IOException;\n+   #68 = Class              #69           // java/nio/file/Path\n+   #69 = Utf8               java/nio/file/Path\n+   #70 = Class              #71           // java/nio/file/attribute/BasicFileAttributes\n+   #71 = Utf8               java/nio/file/attribute/BasicFileAttributes\n+   #72 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+   #73 = InterfaceMethodref #68.#74       // java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n+   #74 = NameAndType        #75:#76       // resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n+   #75 = Utf8               resolve\n+   #76 = Utf8               (Ljava/lang/String;)Ljava/nio/file/Path;\n+   #77 = Methodref          #1.#78        // org/apache/commons/io/filefilter/PathVisitorFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #78 = NameAndType        #28:#49       // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #79 = Utf8               dir\n+   #80 = Utf8               name\n+   #81 = Utf8               Ljava/lang/String;\n+   #82 = Class              #83           // java/lang/String\n+   #83 = Utf8               java/lang/String\n+   #84 = Class              #85           // java/nio/file/LinkOption\n+   #85 = Utf8               java/nio/file/LinkOption\n+   #86 = Methodref          #87.#89       // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #87 = Class              #88           // java/nio/file/Files\n+   #88 = Utf8               java/nio/file/Files\n+   #89 = NameAndType        #90:#91       // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #90 = Utf8               isDirectory\n+   #91 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #92 = InterfaceMethodref #26.#93       // org/apache/commons/io/file/PathVisitor.postVisitDirectory:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+   #93 = NameAndType        #94:#95       // postVisitDirectory:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+   #94 = Utf8               postVisitDirectory\n+   #95 = Utf8               (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+   #96 = Utf8               attributes\n+   #97 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n+   #98 = Utf8               Exceptions\n+   #99 = InterfaceMethodref #26.#100      // org/apache/commons/io/file/PathVisitor.visitFile:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #100 = NameAndType        #48:#101      // visitFile:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #101 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n   #102 = Utf8               SourceFile\n   #103 = Utf8               PathVisitorFileFilter.java\n {\n   private final org.apache.commons.io.file.PathVisitor pathVisitor;\n     descriptor: Lorg/apache/commons/io/file/PathVisitor;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.io.filefilter.PathVisitorFileFilter(org.apache.commons.io.file.PathVisitor);\n     descriptor: (Lorg/apache/commons/io/file/PathVisitor;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+         1: invokespecial #10                 // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n          6: ifnonnull     15\n-         9: getstatic     #7                  // Field org/apache/commons/io/file/NoopPathVisitor.INSTANCE:Lorg/apache/commons/io/file/NoopPathVisitor;\n+         9: getstatic     #13                 // Field org/apache/commons/io/file/NoopPathVisitor.INSTANCE:Lorg/apache/commons/io/file/NoopPathVisitor;\n         12: goto          16\n         15: aload_1\n-        16: putfield      #13                 // Field pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n+        16: putfield      #19                 // Field pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n         19: return\n       LineNumberTable:\n         line 45: 0\n         line 46: 4\n         line 47: 19\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -151,222 +151,197 @@\n \n   public boolean accept(java.io.File);\n     descriptor: (Ljava/io/File;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_1\n-         1: invokevirtual #19                 // Method java/io/File.toPath:()Ljava/nio/file/Path;\n+         1: invokevirtual #30                 // Method java/io/File.toPath:()Ljava/nio/file/Path;\n          4: astore_2\n          5: aload_0\n          6: aload_2\n          7: aload_1\n-         8: invokevirtual #25                 // Method java/io/File.exists:()Z\n+         8: invokevirtual #36                 // Method java/io/File.exists:()Z\n         11: ifeq          21\n         14: aload_2\n-        15: invokestatic  #29                 // Method org/apache/commons/io/file/PathUtils.readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+        15: invokestatic  #40                 // Method org/apache/commons/io/file/PathUtils.readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n         18: goto          22\n         21: aconst_null\n-        22: invokevirtual #35                 // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-        25: getstatic     #39                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-        28: if_acmpne     35\n+        22: invokevirtual #46                 // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+        25: getstatic     #50                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+        28: if_acmpne     33\n         31: iconst_1\n-        32: goto          36\n-        35: iconst_0\n-        36: ireturn\n-        37: astore_2\n-        38: aload_0\n-        39: aload_2\n-        40: invokevirtual #47                 // Method handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-        43: getstatic     #39                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-        46: if_acmpne     53\n-        49: iconst_1\n-        50: goto          54\n-        53: iconst_0\n-        54: ireturn\n+        32: ireturn\n+        33: iconst_0\n+        34: ireturn\n+        35: astore_2\n+        36: aload_0\n+        37: aload_2\n+        38: invokevirtual #56                 // Method handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+        41: getstatic     #50                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+        44: if_acmpne     49\n+        47: iconst_1\n+        48: ireturn\n+        49: iconst_0\n+        50: ireturn\n       Exception table:\n          from    to  target type\n-             0    36    37   Class java/io/IOException\n+             0    34    35   Class java/io/IOException\n       LineNumberTable:\n         line 52: 0\n         line 53: 5\n         line 54: 7\n         line 53: 22\n-        line 55: 37\n-        line 56: 38\n+        line 54: 25\n+        line 53: 28\n+        line 55: 35\n+        line 56: 36\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            5      32     2  path   Ljava/nio/file/Path;\n-           38      17     2     e   Ljava/io/IOException;\n-            0      55     0  this   Lorg/apache/commons/io/filefilter/PathVisitorFileFilter;\n-            0      55     1  file   Ljava/io/File;\n-      StackMapTable: number_of_entries = 7\n+            0      51     0  this   Lorg/apache/commons/io/filefilter/PathVisitorFileFilter;\n+            0      51     1  file   Ljava/io/File;\n+            5      30     2  path   Ljava/nio/file/Path;\n+           36      15     2     e   Ljava/io/IOException;\n+      StackMapTable: number_of_entries = 5\n         frame_type = 255 /* full_frame */\n           offset_delta = 21\n           locals = [ class org/apache/commons/io/filefilter/PathVisitorFileFilter, class java/io/File, class java/nio/file/Path ]\n           stack = [ class org/apache/commons/io/filefilter/PathVisitorFileFilter, class java/nio/file/Path ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = [ class org/apache/commons/io/filefilter/PathVisitorFileFilter, class java/io/File, class java/nio/file/Path ]\n           stack = [ class org/apache/commons/io/filefilter/PathVisitorFileFilter, class java/nio/file/Path, class java/nio/file/attribute/BasicFileAttributes ]\n-        frame_type = 12 /* same */\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n+        frame_type = 10 /* same */\n         frame_type = 255 /* full_frame */\n-          offset_delta = 0\n+          offset_delta = 1\n           locals = [ class org/apache/commons/io/filefilter/PathVisitorFileFilter, class java/io/File ]\n           stack = [ class java/io/IOException ]\n         frame_type = 252 /* append */\n-          offset_delta = 15\n+          offset_delta = 13\n           locals = [ class java/io/IOException ]\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n \n   public boolean accept(java.io.File, java.lang.String);\n     descriptor: (Ljava/io/File;Ljava/lang/String;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_1\n-         1: invokevirtual #19                 // Method java/io/File.toPath:()Ljava/nio/file/Path;\n+         1: invokevirtual #30                 // Method java/io/File.toPath:()Ljava/nio/file/Path;\n          4: aload_2\n-         5: invokeinterface #51,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n+         5: invokeinterface #73,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n         10: astore_3\n         11: aload_0\n         12: aload_3\n         13: aload_3\n-        14: invokestatic  #29                 // Method org/apache/commons/io/file/PathUtils.readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n-        17: invokevirtual #57                 // Method accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-        20: getstatic     #39                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-        23: if_acmpne     30\n+        14: invokestatic  #40                 // Method org/apache/commons/io/file/PathUtils.readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+        17: invokevirtual #77                 // Method accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+        20: getstatic     #50                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+        23: if_acmpne     28\n         26: iconst_1\n-        27: goto          31\n-        30: iconst_0\n-        31: ireturn\n-        32: astore_3\n-        33: aload_0\n-        34: aload_3\n-        35: invokevirtual #47                 // Method handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-        38: getstatic     #39                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-        41: if_acmpne     48\n-        44: iconst_1\n-        45: goto          49\n-        48: iconst_0\n-        49: ireturn\n+        27: ireturn\n+        28: iconst_0\n+        29: ireturn\n+        30: astore_3\n+        31: aload_0\n+        32: aload_3\n+        33: invokevirtual #56                 // Method handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+        36: getstatic     #50                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+        39: if_acmpne     44\n+        42: iconst_1\n+        43: ireturn\n+        44: iconst_0\n+        45: ireturn\n       Exception table:\n          from    to  target type\n-             0    31    32   Class java/io/IOException\n+             0    29    30   Class java/io/IOException\n       LineNumberTable:\n         line 63: 0\n         line 64: 11\n-        line 65: 32\n-        line 66: 33\n+        line 65: 30\n+        line 66: 31\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           11      21     3  path   Ljava/nio/file/Path;\n-           33      17     3     e   Ljava/io/IOException;\n-            0      50     0  this   Lorg/apache/commons/io/filefilter/PathVisitorFileFilter;\n-            0      50     1   dir   Ljava/io/File;\n-            0      50     2  name   Ljava/lang/String;\n-      StackMapTable: number_of_entries = 5\n+            0      46     0  this   Lorg/apache/commons/io/filefilter/PathVisitorFileFilter;\n+            0      46     1   dir   Ljava/io/File;\n+            0      46     2  name   Ljava/lang/String;\n+           11      19     3  path   Ljava/nio/file/Path;\n+           31      15     3     e   Ljava/io/IOException;\n+      StackMapTable: number_of_entries = 3\n         frame_type = 252 /* append */\n-          offset_delta = 30\n+          offset_delta = 28\n           locals = [ class java/nio/file/Path ]\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n         frame_type = 255 /* full_frame */\n-          offset_delta = 0\n+          offset_delta = 1\n           locals = [ class org/apache/commons/io/filefilter/PathVisitorFileFilter, class java/io/File, class java/lang/String ]\n           stack = [ class java/io/IOException ]\n         frame_type = 252 /* append */\n-          offset_delta = 15\n+          offset_delta = 13\n           locals = [ class java/io/IOException ]\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n \n   public java.nio.file.FileVisitResult accept(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes);\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_1\n          1: iconst_0\n-         2: anewarray     #60                 // class java/nio/file/LinkOption\n-         5: invokestatic  #62                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+         2: anewarray     #84                 // class java/nio/file/LinkOption\n+         5: invokestatic  #86                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n          8: ifeq          25\n         11: aload_0\n-        12: getfield      #13                 // Field pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n+        12: getfield      #19                 // Field pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n         15: aload_1\n         16: aconst_null\n-        17: invokeinterface #68,  3           // InterfaceMethod org/apache/commons/io/file/PathVisitor.postVisitDirectory:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+        17: invokeinterface #92,  3           // InterfaceMethod org/apache/commons/io/file/PathVisitor.postVisitDirectory:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n         22: goto          31\n         25: aload_0\n         26: aload_1\n         27: aload_2\n-        28: invokevirtual #35                 // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+        28: invokevirtual #46                 // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n         31: areturn\n         32: astore_3\n         33: aload_0\n         34: aload_3\n-        35: invokevirtual #47                 // Method handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+        35: invokevirtual #56                 // Method handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n         38: areturn\n       Exception table:\n          from    to  target type\n              0    31    32   Class java/io/IOException\n       LineNumberTable:\n         line 73: 0\n         line 74: 32\n         line 75: 33\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           33       6     3     e   Ljava/io/IOException;\n             0      39     0  this   Lorg/apache/commons/io/filefilter/PathVisitorFileFilter;\n             0      39     1  path   Ljava/nio/file/Path;\n             0      39     2 attributes   Ljava/nio/file/attribute/BasicFileAttributes;\n+           33       6     3     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 3\n         frame_type = 25 /* same */\n         frame_type = 69 /* same_locals_1_stack_item */\n           stack = [ class java/nio/file/FileVisitResult ]\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n \n   public java.nio.file.FileVisitResult visitFile(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: getfield      #13                 // Field pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n+         1: getfield      #19                 // Field pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n          4: aload_1\n          5: aload_2\n-         6: invokeinterface #74,  3           // InterfaceMethod org/apache/commons/io/file/PathVisitor.visitFile:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+         6: invokeinterface #99,  3           // InterfaceMethod org/apache/commons/io/file/PathVisitor.visitFile:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n         11: areturn\n       LineNumberTable:\n         line 81: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/io/filefilter/PathVisitorFileFilter;\n             0      12     1  path   Ljava/nio/file/Path;\n             0      12     2 attributes   Ljava/nio/file/attribute/BasicFileAttributes;\n-    Exceptions:\n-      throws java.io.IOException\n-\n-  public java.nio.file.FileVisitResult visitFile(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;\n-    descriptor: (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n-    Code:\n-      stack=3, locals=3, args_size=3\n-         0: aload_0\n-         1: aload_1\n-         2: checkcast     #52                 // class java/nio/file/Path\n-         5: aload_2\n-         6: invokevirtual #35                 // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-         9: areturn\n-      LineNumberTable:\n-        line 36: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0      10     0  this   Lorg/apache/commons/io/filefilter/PathVisitorFileFilter;\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"PathVisitorFileFilter.java\"\n"}]}
