{"diffoscope-json-version": 1, "source1": "first/UncheckedFilterOutputStream.class", "source2": "second/UncheckedFilterOutputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -9,36 +9,36 @@\n \n public final class UncheckedFilterOutputStream extends FilterOutputStream\n {\n     public static UncheckedFilterOutputStream.Builder builder() {\n         return new UncheckedFilterOutputStream.Builder();\n     }\n     \n-    private UncheckedFilterOutputStream(final OutputStream outputStream) {\n-        super(outputStream);\n+    private UncheckedFilterOutputStream(final OutputStream out) {\n+        super(out);\n     }\n     \n     @Override\n     public void close() throws UncheckedIOException {\n         Uncheck.run(() -> super.close());\n     }\n     \n     @Override\n     public void flush() throws UncheckedIOException {\n         Uncheck.run(() -> super.flush());\n     }\n     \n     @Override\n-    public void write(final byte[] b) throws UncheckedIOException {\n-        Uncheck.accept(x$0 -> super.write(x$0), (Object)b);\n+    public void write(final byte[] array) throws UncheckedIOException {\n+        Uncheck.accept(b -> super.write(b), (Object)array);\n     }\n     \n     @Override\n-    public void write(final byte[] b, final int off, final int len) throws UncheckedIOException {\n-        Uncheck.accept((x$0, x$1, x$2) -> super.write(x$0, x$1, x$2), (Object)b, (Object)Integer.valueOf(off), (Object)Integer.valueOf(len));\n+    public void write(final byte[] array, final int i, final int j) throws UncheckedIOException {\n+        Uncheck.accept((b, off, len) -> super.write(b, off, len), (Object)array, (Object)Integer.valueOf(i), (Object)Integer.valueOf(j));\n     }\n     \n     @Override\n-    public void write(final int b) throws UncheckedIOException {\n-        Uncheck.accept(x$0 -> super.write(x$0), (Object)Integer.valueOf(b));\n+    public void write(final int i) throws UncheckedIOException {\n+        Uncheck.accept(b -> super.write(b), (Object)Integer.valueOf(i));\n     }\n }\n"}]}
