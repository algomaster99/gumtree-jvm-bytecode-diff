{"diffoscope-json-version": 1, "source1": "first/QCodec.class", "source2": "second/QCodec.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,60 +1,60 @@\n-  SHA-256 checksum 4c5f0a32e411629b73b367b45c272366d963ae448e3fb9c532daf22e9ae61c08\n+  SHA-256 checksum 274c9bed591bcd983562418b653cb482be4edb633d6fd0e26a0c003cb2606e5c\n   Compiled from \"QCodec.java\"\n public class org.apache.commons.codec.net.QCodec extends org.apache.commons.codec.net.RFC1522Codec implements org.apache.commons.codec.StringEncoder,org.apache.commons.codec.StringDecoder\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #10                         // org/apache/commons/codec/net/QCodec\n   super_class: #41                        // org/apache/commons/codec/net/RFC1522Codec\n   interfaces: 2, fields: 5, methods: 17, attributes: 1\n Constant pool:\n-    #1 = Fieldref           #108.#109     // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-    #2 = Methodref          #10.#110      // org/apache/commons/codec/net/QCodec.\"<init>\":(Ljava/nio/charset/Charset;)V\n-    #3 = Methodref          #41.#111      // org/apache/commons/codec/net/RFC1522Codec.\"<init>\":()V\n-    #4 = Fieldref           #10.#112      // org/apache/commons/codec/net/QCodec.encodeBlanks:Z\n-    #5 = Fieldref           #10.#113      // org/apache/commons/codec/net/QCodec.charset:Ljava/nio/charset/Charset;\n-    #6 = Methodref          #114.#115     // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-    #7 = String             #116          // Q\n-    #8 = Fieldref           #10.#117      // org/apache/commons/codec/net/QCodec.PRINTABLE_CHARS:Ljava/util/BitSet;\n-    #9 = Methodref          #118.#119     // org/apache/commons/codec/net/QuotedPrintableCodec.encodeQuotedPrintable:(Ljava/util/BitSet;[B)[B\n-   #10 = Class              #120          // org/apache/commons/codec/net/QCodec\n-   #11 = Methodref          #118.#121     // org/apache/commons/codec/net/QuotedPrintableCodec.decodeQuotedPrintable:([B)[B\n-   #12 = Methodref          #10.#122      // org/apache/commons/codec/net/QCodec.encodeText:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n-   #13 = Methodref          #10.#123      // org/apache/commons/codec/net/QCodec.encodeText:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-   #14 = Class              #124          // java/io/UnsupportedEncodingException\n-   #15 = Class              #125          // org/apache/commons/codec/EncoderException\n-   #16 = Methodref          #14.#126      // java/io/UnsupportedEncodingException.getMessage:()Ljava/lang/String;\n-   #17 = Methodref          #15.#127      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #18 = Methodref          #10.#128      // org/apache/commons/codec/net/QCodec.getCharset:()Ljava/nio/charset/Charset;\n-   #19 = Methodref          #10.#129      // org/apache/commons/codec/net/QCodec.encode:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n-   #20 = Methodref          #10.#130      // org/apache/commons/codec/net/QCodec.decodeText:(Ljava/lang/String;)Ljava/lang/String;\n-   #21 = Class              #131          // org/apache/commons/codec/DecoderException\n-   #22 = Methodref          #21.#127      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #23 = Class              #132          // java/lang/String\n-   #24 = Methodref          #10.#133      // org/apache/commons/codec/net/QCodec.encode:(Ljava/lang/String;)Ljava/lang/String;\n-   #25 = Class              #134          // java/lang/StringBuilder\n-   #26 = Methodref          #25.#111      // java/lang/StringBuilder.\"<init>\":()V\n-   #27 = String             #135          // Objects of type\n-   #28 = Methodref          #25.#136      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #29 = Methodref          #137.#138     // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #30 = Methodref          #139.#140     // java/lang/Class.getName:()Ljava/lang/String;\n-   #31 = String             #141          //  cannot be encoded using Q codec\n-   #32 = Methodref          #25.#142      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #33 = Methodref          #15.#143      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n-   #34 = Methodref          #10.#144      // org/apache/commons/codec/net/QCodec.decode:(Ljava/lang/String;)Ljava/lang/String;\n-   #35 = String             #145          //  cannot be decoded using Q codec\n-   #36 = Methodref          #21.#143      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n-   #37 = Methodref          #114.#146     // java/nio/charset/Charset.name:()Ljava/lang/String;\n-   #38 = Class              #147          // java/util/BitSet\n-   #39 = Methodref          #38.#148      // java/util/BitSet.\"<init>\":(I)V\n-   #40 = Methodref          #38.#149      // java/util/BitSet.set:(I)V\n-   #41 = Class              #150          // org/apache/commons/codec/net/RFC1522Codec\n-   #42 = Class              #151          // org/apache/commons/codec/StringEncoder\n-   #43 = Class              #152          // org/apache/commons/codec/StringDecoder\n+    #1 = Fieldref           #106.#107     // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+    #2 = Methodref          #10.#108      // org/apache/commons/codec/net/QCodec.\"<init>\":(Ljava/nio/charset/Charset;)V\n+    #3 = Methodref          #41.#109      // org/apache/commons/codec/net/RFC1522Codec.\"<init>\":()V\n+    #4 = Fieldref           #10.#110      // org/apache/commons/codec/net/QCodec.encodeBlanks:Z\n+    #5 = Fieldref           #10.#111      // org/apache/commons/codec/net/QCodec.charset:Ljava/nio/charset/Charset;\n+    #6 = Methodref          #112.#113     // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+    #7 = String             #114          // Q\n+    #8 = Fieldref           #10.#115      // org/apache/commons/codec/net/QCodec.PRINTABLE_CHARS:Ljava/util/BitSet;\n+    #9 = Methodref          #116.#117     // org/apache/commons/codec/net/QuotedPrintableCodec.encodeQuotedPrintable:(Ljava/util/BitSet;[B)[B\n+   #10 = Class              #118          // org/apache/commons/codec/net/QCodec\n+   #11 = Methodref          #116.#119     // org/apache/commons/codec/net/QuotedPrintableCodec.decodeQuotedPrintable:([B)[B\n+   #12 = Methodref          #10.#120      // org/apache/commons/codec/net/QCodec.encodeText:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n+   #13 = Methodref          #10.#121      // org/apache/commons/codec/net/QCodec.encodeText:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+   #14 = Class              #122          // java/io/UnsupportedEncodingException\n+   #15 = Class              #123          // org/apache/commons/codec/EncoderException\n+   #16 = Methodref          #14.#124      // java/io/UnsupportedEncodingException.getMessage:()Ljava/lang/String;\n+   #17 = Methodref          #15.#125      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #18 = Methodref          #10.#126      // org/apache/commons/codec/net/QCodec.getCharset:()Ljava/nio/charset/Charset;\n+   #19 = Methodref          #10.#127      // org/apache/commons/codec/net/QCodec.encode:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n+   #20 = Methodref          #10.#128      // org/apache/commons/codec/net/QCodec.decodeText:(Ljava/lang/String;)Ljava/lang/String;\n+   #21 = Class              #129          // org/apache/commons/codec/DecoderException\n+   #22 = Methodref          #21.#125      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #23 = Class              #130          // java/lang/String\n+   #24 = Methodref          #10.#131      // org/apache/commons/codec/net/QCodec.encode:(Ljava/lang/String;)Ljava/lang/String;\n+   #25 = Class              #132          // java/lang/StringBuilder\n+   #26 = Methodref          #25.#109      // java/lang/StringBuilder.\"<init>\":()V\n+   #27 = String             #133          // Objects of type\n+   #28 = Methodref          #25.#134      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #29 = Methodref          #135.#136     // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #30 = Methodref          #137.#138     // java/lang/Class.getName:()Ljava/lang/String;\n+   #31 = String             #139          //  cannot be encoded using Q codec\n+   #32 = Methodref          #25.#140      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #33 = Methodref          #15.#141      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+   #34 = Methodref          #10.#142      // org/apache/commons/codec/net/QCodec.decode:(Ljava/lang/String;)Ljava/lang/String;\n+   #35 = String             #143          //  cannot be decoded using Q codec\n+   #36 = Methodref          #21.#141      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n+   #37 = Methodref          #112.#144     // java/nio/charset/Charset.name:()Ljava/lang/String;\n+   #38 = Class              #145          // java/util/BitSet\n+   #39 = Methodref          #38.#146      // java/util/BitSet.\"<init>\":(I)V\n+   #40 = Methodref          #38.#147      // java/util/BitSet.set:(I)V\n+   #41 = Class              #148          // org/apache/commons/codec/net/RFC1522Codec\n+   #42 = Class              #149          // org/apache/commons/codec/StringEncoder\n+   #43 = Class              #150          // org/apache/commons/codec/StringDecoder\n    #44 = Utf8               charset\n    #45 = Utf8               Ljava/nio/charset/Charset;\n    #46 = Utf8               PRINTABLE_CHARS\n    #47 = Utf8               Ljava/util/BitSet;\n    #48 = Utf8               SPACE\n    #49 = Utf8               B\n    #50 = Utf8               ConstantValue\n@@ -85,109 +85,107 @@\n    #75 = Utf8               data\n    #76 = Utf8               StackMapTable\n    #77 = Class              #74           // \"[B\"\n    #78 = Utf8               doDecoding\n    #79 = Utf8               b\n    #80 = Utf8               tmp\n    #81 = Utf8               hasUnderscores\n-   #82 = Class              #120          // org/apache/commons/codec/net/QCodec\n-   #83 = Utf8               Exceptions\n-   #84 = Utf8               encode\n-   #85 = Utf8               (Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n-   #86 = Utf8               sourceStr\n-   #87 = Utf8               sourceCharset\n-   #88 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-   #89 = Utf8               e\n-   #90 = Utf8               Ljava/io/UnsupportedEncodingException;\n-   #91 = Class              #124          // java/io/UnsupportedEncodingException\n-   #92 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-   #93 = Utf8               decode\n-   #94 = Utf8               str\n-   #95 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-   #96 = Utf8               obj\n-   #97 = Utf8               Ljava/lang/Object;\n-   #98 = Utf8               getCharset\n-   #99 = Utf8               ()Ljava/nio/charset/Charset;\n-  #100 = Utf8               getDefaultCharset\n-  #101 = Utf8               isEncodeBlanks\n-  #102 = Utf8               ()Z\n-  #103 = Utf8               setEncodeBlanks\n-  #104 = Utf8               (Z)V\n-  #105 = Utf8               <clinit>\n-  #106 = Utf8               SourceFile\n-  #107 = Utf8               QCodec.java\n-  #108 = Class              #153          // java/nio/charset/StandardCharsets\n-  #109 = NameAndType        #154:#45      // UTF_8:Ljava/nio/charset/Charset;\n-  #110 = NameAndType        #56:#63       // \"<init>\":(Ljava/nio/charset/Charset;)V\n-  #111 = NameAndType        #56:#57       // \"<init>\":()V\n-  #112 = NameAndType        #54:#55       // encodeBlanks:Z\n-  #113 = NameAndType        #44:#45       // charset:Ljava/nio/charset/Charset;\n-  #114 = Class              #155          // java/nio/charset/Charset\n-  #115 = NameAndType        #156:#157     // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #116 = Utf8               Q\n-  #117 = NameAndType        #46:#47       // PRINTABLE_CHARS:Ljava/util/BitSet;\n-  #118 = Class              #158          // org/apache/commons/codec/net/QuotedPrintableCodec\n-  #119 = NameAndType        #159:#160     // encodeQuotedPrintable:(Ljava/util/BitSet;[B)[B\n-  #120 = Utf8               org/apache/commons/codec/net/QCodec\n-  #121 = NameAndType        #161:#70      // decodeQuotedPrintable:([B)[B\n-  #122 = NameAndType        #162:#85      // encodeText:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n-  #123 = NameAndType        #162:#88      // encodeText:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #124 = Utf8               java/io/UnsupportedEncodingException\n-  #125 = Utf8               org/apache/commons/codec/EncoderException\n-  #126 = NameAndType        #163:#68      // getMessage:()Ljava/lang/String;\n-  #127 = NameAndType        #56:#164      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #128 = NameAndType        #98:#99       // getCharset:()Ljava/nio/charset/Charset;\n-  #129 = NameAndType        #84:#85       // encode:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n-  #130 = NameAndType        #165:#92      // decodeText:(Ljava/lang/String;)Ljava/lang/String;\n-  #131 = Utf8               org/apache/commons/codec/DecoderException\n-  #132 = Utf8               java/lang/String\n-  #133 = NameAndType        #84:#92       // encode:(Ljava/lang/String;)Ljava/lang/String;\n-  #134 = Utf8               java/lang/StringBuilder\n-  #135 = Utf8               Objects of type\n-  #136 = NameAndType        #166:#167     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #137 = Class              #168          // java/lang/Object\n-  #138 = NameAndType        #169:#170     // getClass:()Ljava/lang/Class;\n-  #139 = Class              #171          // java/lang/Class\n-  #140 = NameAndType        #172:#68      // getName:()Ljava/lang/String;\n-  #141 = Utf8                cannot be encoded using Q codec\n-  #142 = NameAndType        #173:#68      // toString:()Ljava/lang/String;\n-  #143 = NameAndType        #56:#64       // \"<init>\":(Ljava/lang/String;)V\n-  #144 = NameAndType        #93:#92       // decode:(Ljava/lang/String;)Ljava/lang/String;\n-  #145 = Utf8                cannot be decoded using Q codec\n-  #146 = NameAndType        #174:#68      // name:()Ljava/lang/String;\n-  #147 = Utf8               java/util/BitSet\n-  #148 = NameAndType        #56:#175      // \"<init>\":(I)V\n-  #149 = NameAndType        #176:#175     // set:(I)V\n-  #150 = Utf8               org/apache/commons/codec/net/RFC1522Codec\n-  #151 = Utf8               org/apache/commons/codec/StringEncoder\n-  #152 = Utf8               org/apache/commons/codec/StringDecoder\n-  #153 = Utf8               java/nio/charset/StandardCharsets\n-  #154 = Utf8               UTF_8\n-  #155 = Utf8               java/nio/charset/Charset\n-  #156 = Utf8               forName\n-  #157 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #158 = Utf8               org/apache/commons/codec/net/QuotedPrintableCodec\n-  #159 = Utf8               encodeQuotedPrintable\n-  #160 = Utf8               (Ljava/util/BitSet;[B)[B\n-  #161 = Utf8               decodeQuotedPrintable\n-  #162 = Utf8               encodeText\n-  #163 = Utf8               getMessage\n-  #164 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #165 = Utf8               decodeText\n-  #166 = Utf8               append\n-  #167 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #168 = Utf8               java/lang/Object\n-  #169 = Utf8               getClass\n-  #170 = Utf8               ()Ljava/lang/Class;\n-  #171 = Utf8               java/lang/Class\n-  #172 = Utf8               getName\n-  #173 = Utf8               toString\n-  #174 = Utf8               name\n-  #175 = Utf8               (I)V\n-  #176 = Utf8               set\n+   #82 = Utf8               Exceptions\n+   #83 = Utf8               encode\n+   #84 = Utf8               (Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n+   #85 = Utf8               sourceStr\n+   #86 = Utf8               sourceCharset\n+   #87 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+   #88 = Utf8               e\n+   #89 = Utf8               Ljava/io/UnsupportedEncodingException;\n+   #90 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+   #91 = Utf8               decode\n+   #92 = Utf8               str\n+   #93 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #94 = Utf8               obj\n+   #95 = Utf8               Ljava/lang/Object;\n+   #96 = Utf8               getCharset\n+   #97 = Utf8               ()Ljava/nio/charset/Charset;\n+   #98 = Utf8               getDefaultCharset\n+   #99 = Utf8               isEncodeBlanks\n+  #100 = Utf8               ()Z\n+  #101 = Utf8               setEncodeBlanks\n+  #102 = Utf8               (Z)V\n+  #103 = Utf8               <clinit>\n+  #104 = Utf8               SourceFile\n+  #105 = Utf8               QCodec.java\n+  #106 = Class              #151          // java/nio/charset/StandardCharsets\n+  #107 = NameAndType        #152:#45      // UTF_8:Ljava/nio/charset/Charset;\n+  #108 = NameAndType        #56:#63       // \"<init>\":(Ljava/nio/charset/Charset;)V\n+  #109 = NameAndType        #56:#57       // \"<init>\":()V\n+  #110 = NameAndType        #54:#55       // encodeBlanks:Z\n+  #111 = NameAndType        #44:#45       // charset:Ljava/nio/charset/Charset;\n+  #112 = Class              #153          // java/nio/charset/Charset\n+  #113 = NameAndType        #154:#155     // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #114 = Utf8               Q\n+  #115 = NameAndType        #46:#47       // PRINTABLE_CHARS:Ljava/util/BitSet;\n+  #116 = Class              #156          // org/apache/commons/codec/net/QuotedPrintableCodec\n+  #117 = NameAndType        #157:#158     // encodeQuotedPrintable:(Ljava/util/BitSet;[B)[B\n+  #118 = Utf8               org/apache/commons/codec/net/QCodec\n+  #119 = NameAndType        #159:#70      // decodeQuotedPrintable:([B)[B\n+  #120 = NameAndType        #160:#84      // encodeText:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n+  #121 = NameAndType        #160:#87      // encodeText:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #122 = Utf8               java/io/UnsupportedEncodingException\n+  #123 = Utf8               org/apache/commons/codec/EncoderException\n+  #124 = NameAndType        #161:#68      // getMessage:()Ljava/lang/String;\n+  #125 = NameAndType        #56:#162      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #126 = NameAndType        #96:#97       // getCharset:()Ljava/nio/charset/Charset;\n+  #127 = NameAndType        #83:#84       // encode:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n+  #128 = NameAndType        #163:#90      // decodeText:(Ljava/lang/String;)Ljava/lang/String;\n+  #129 = Utf8               org/apache/commons/codec/DecoderException\n+  #130 = Utf8               java/lang/String\n+  #131 = NameAndType        #83:#90       // encode:(Ljava/lang/String;)Ljava/lang/String;\n+  #132 = Utf8               java/lang/StringBuilder\n+  #133 = Utf8               Objects of type\n+  #134 = NameAndType        #164:#165     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #135 = Class              #166          // java/lang/Object\n+  #136 = NameAndType        #167:#168     // getClass:()Ljava/lang/Class;\n+  #137 = Class              #169          // java/lang/Class\n+  #138 = NameAndType        #170:#68      // getName:()Ljava/lang/String;\n+  #139 = Utf8                cannot be encoded using Q codec\n+  #140 = NameAndType        #171:#68      // toString:()Ljava/lang/String;\n+  #141 = NameAndType        #56:#64       // \"<init>\":(Ljava/lang/String;)V\n+  #142 = NameAndType        #91:#90       // decode:(Ljava/lang/String;)Ljava/lang/String;\n+  #143 = Utf8                cannot be decoded using Q codec\n+  #144 = NameAndType        #172:#68      // name:()Ljava/lang/String;\n+  #145 = Utf8               java/util/BitSet\n+  #146 = NameAndType        #56:#173      // \"<init>\":(I)V\n+  #147 = NameAndType        #174:#173     // set:(I)V\n+  #148 = Utf8               org/apache/commons/codec/net/RFC1522Codec\n+  #149 = Utf8               org/apache/commons/codec/StringEncoder\n+  #150 = Utf8               org/apache/commons/codec/StringDecoder\n+  #151 = Utf8               java/nio/charset/StandardCharsets\n+  #152 = Utf8               UTF_8\n+  #153 = Utf8               java/nio/charset/Charset\n+  #154 = Utf8               forName\n+  #155 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #156 = Utf8               org/apache/commons/codec/net/QuotedPrintableCodec\n+  #157 = Utf8               encodeQuotedPrintable\n+  #158 = Utf8               (Ljava/util/BitSet;[B)[B\n+  #159 = Utf8               decodeQuotedPrintable\n+  #160 = Utf8               encodeText\n+  #161 = Utf8               getMessage\n+  #162 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #163 = Utf8               decodeText\n+  #164 = Utf8               append\n+  #165 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #166 = Utf8               java/lang/Object\n+  #167 = Utf8               getClass\n+  #168 = Utf8               ()Ljava/lang/Class;\n+  #169 = Utf8               java/lang/Class\n+  #170 = Utf8               getName\n+  #171 = Utf8               toString\n+  #172 = Utf8               name\n+  #173 = Utf8               (I)V\n+  #174 = Utf8               set\n {\n   private final java.nio.charset.Charset charset;\n     descriptor: Ljava/nio/charset/Charset;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private static final java.util.BitSet PRINTABLE_CHARS;\n     descriptor: Ljava/util/BitSet;\n"}]}
