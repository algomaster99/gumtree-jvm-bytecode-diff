{"diffoscope-json-version": 1, "source1": "first/AbstractOrigin.class", "source2": "second/AbstractOrigin.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,193 +1,193 @@\n-  SHA-256 checksum 783dfc2a845784329a4abe39c8ccd46c4f394549653cf56cc5fd720cf7b900bd\n+  SHA-256 checksum f368deb6e63068ee1aae46d502d57bcf333cf6c0be5c5f40ed23f1a9fa9b2976\n   Compiled from \"AbstractOrigin.java\"\n public abstract class org.apache.commons.io.build.AbstractOrigin<T extends java.lang.Object, B extends org.apache.commons.io.build.AbstractOrigin<T, B>> extends org.apache.commons.io.build.AbstractSupplier<T, B>\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #14                         // org/apache/commons/io/build/AbstractOrigin\n-  super_class: #15                        // org/apache/commons/io/build/AbstractSupplier\n+  this_class: #16                         // org/apache/commons/io/build/AbstractOrigin\n+  super_class: #2                         // org/apache/commons/io/build/AbstractSupplier\n   interfaces: 0, fields: 1, methods: 10, attributes: 3\n Constant pool:\n-    #1 = Methodref          #15.#75       // org/apache/commons/io/build/AbstractSupplier.\"<init>\":()V\n-    #2 = String             #33           // origin\n-    #3 = Methodref          #76.#77       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-    #4 = Fieldref           #14.#78       // org/apache/commons/io/build/AbstractOrigin.origin:Ljava/lang/Object;\n-    #5 = Methodref          #14.#79       // org/apache/commons/io/build/AbstractOrigin.getPath:()Ljava/nio/file/Path;\n-    #6 = Methodref          #80.#81       // java/nio/file/Files.readAllBytes:(Ljava/nio/file/Path;)[B\n-    #7 = Class              #82           // java/lang/UnsupportedOperationException\n-    #8 = Methodref          #83.#84       // java/lang/Object.toString:()Ljava/lang/String;\n-    #9 = Methodref          #7.#85        // java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n-   #10 = Methodref          #80.#86       // java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-   #11 = Methodref          #80.#87       // java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n-   #12 = Methodref          #80.#88       // java/nio/file/Files.newBufferedReader:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Ljava/io/BufferedReader;\n-   #13 = Methodref          #80.#89       // java/nio/file/Files.newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n-   #14 = Class              #90           // org/apache/commons/io/build/AbstractOrigin\n-   #15 = Class              #91           // org/apache/commons/io/build/AbstractSupplier\n-   #16 = Class              #92           // org/apache/commons/io/build/AbstractOrigin$WriterOrigin\n-   #17 = Utf8               WriterOrigin\n-   #18 = Utf8               InnerClasses\n-   #19 = Class              #93           // org/apache/commons/io/build/AbstractOrigin$URIOrigin\n-   #20 = Utf8               URIOrigin\n-   #21 = Class              #94           // org/apache/commons/io/build/AbstractOrigin$ReaderOrigin\n-   #22 = Utf8               ReaderOrigin\n-   #23 = Class              #95           // org/apache/commons/io/build/AbstractOrigin$PathOrigin\n-   #24 = Utf8               PathOrigin\n-   #25 = Class              #96           // org/apache/commons/io/build/AbstractOrigin$OutputStreamOrigin\n-   #26 = Utf8               OutputStreamOrigin\n-   #27 = Class              #97           // org/apache/commons/io/build/AbstractOrigin$InputStreamOrigin\n-   #28 = Utf8               InputStreamOrigin\n-   #29 = Class              #98           // org/apache/commons/io/build/AbstractOrigin$FileOrigin\n-   #30 = Utf8               FileOrigin\n-   #31 = Class              #99           // org/apache/commons/io/build/AbstractOrigin$ByteArrayOrigin\n-   #32 = Utf8               ByteArrayOrigin\n-   #33 = Utf8               origin\n-   #34 = Utf8               Ljava/lang/Object;\n-   #35 = Utf8               Signature\n-   #36 = Utf8               TT;\n-   #37 = Utf8               <init>\n-   #38 = Utf8               (Ljava/lang/Object;)V\n-   #39 = Utf8               Code\n-   #40 = Utf8               LineNumberTable\n-   #41 = Utf8               LocalVariableTable\n-   #42 = Utf8               this\n-   #43 = Utf8               Lorg/apache/commons/io/build/AbstractOrigin;\n-   #44 = Utf8               LocalVariableTypeTable\n-   #45 = Utf8               Lorg/apache/commons/io/build/AbstractOrigin<TT;TB;>;\n-   #46 = Utf8               (TT;)V\n-   #47 = Utf8               get\n-   #48 = Utf8               ()Ljava/lang/Object;\n-   #49 = Utf8               ()TT;\n-   #50 = Utf8               getByteArray\n-   #51 = Utf8               ()[B\n-   #52 = Utf8               Exceptions\n-   #53 = Class              #100          // java/io/IOException\n-   #54 = Utf8               getFile\n-   #55 = Utf8               ()Ljava/io/File;\n-   #56 = Utf8               getInputStream\n-   #57 = Utf8               ([Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-   #58 = Utf8               options\n-   #59 = Utf8               [Ljava/nio/file/OpenOption;\n-   #60 = Utf8               getOutputStream\n-   #61 = Utf8               ([Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n-   #62 = Utf8               getPath\n-   #63 = Utf8               ()Ljava/nio/file/Path;\n-   #64 = Utf8               getReader\n-   #65 = Utf8               (Ljava/nio/charset/Charset;)Ljava/io/Reader;\n-   #66 = Utf8               charset\n-   #67 = Utf8               Ljava/nio/charset/Charset;\n-   #68 = Utf8               getWriter\n-   #69 = Utf8               (Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/Writer;\n-   #70 = Utf8               toString\n-   #71 = Utf8               ()Ljava/lang/String;\n-   #72 = Utf8               <T:Ljava/lang/Object;B:Lorg/apache/commons/io/build/AbstractOrigin<TT;TB;>;>Lorg/apache/commons/io/build/AbstractSupplier<TT;TB;>;\n-   #73 = Utf8               SourceFile\n-   #74 = Utf8               AbstractOrigin.java\n-   #75 = NameAndType        #37:#101      // \"<init>\":()V\n-   #76 = Class              #102          // java/util/Objects\n-   #77 = NameAndType        #103:#104     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #78 = NameAndType        #33:#34       // origin:Ljava/lang/Object;\n-   #79 = NameAndType        #62:#63       // getPath:()Ljava/nio/file/Path;\n-   #80 = Class              #105          // java/nio/file/Files\n-   #81 = NameAndType        #106:#107     // readAllBytes:(Ljava/nio/file/Path;)[B\n-   #82 = Utf8               java/lang/UnsupportedOperationException\n-   #83 = Class              #108          // java/lang/Object\n-   #84 = NameAndType        #70:#71       // toString:()Ljava/lang/String;\n-   #85 = NameAndType        #37:#109      // \"<init>\":(Ljava/lang/String;)V\n-   #86 = NameAndType        #110:#111     // newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-   #87 = NameAndType        #112:#113     // newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n-   #88 = NameAndType        #114:#115     // newBufferedReader:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Ljava/io/BufferedReader;\n-   #89 = NameAndType        #116:#117     // newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n-   #90 = Utf8               org/apache/commons/io/build/AbstractOrigin\n-   #91 = Utf8               org/apache/commons/io/build/AbstractSupplier\n-   #92 = Utf8               org/apache/commons/io/build/AbstractOrigin$WriterOrigin\n-   #93 = Utf8               org/apache/commons/io/build/AbstractOrigin$URIOrigin\n-   #94 = Utf8               org/apache/commons/io/build/AbstractOrigin$ReaderOrigin\n-   #95 = Utf8               org/apache/commons/io/build/AbstractOrigin$PathOrigin\n-   #96 = Utf8               org/apache/commons/io/build/AbstractOrigin$OutputStreamOrigin\n-   #97 = Utf8               org/apache/commons/io/build/AbstractOrigin$InputStreamOrigin\n-   #98 = Utf8               org/apache/commons/io/build/AbstractOrigin$FileOrigin\n-   #99 = Utf8               org/apache/commons/io/build/AbstractOrigin$ByteArrayOrigin\n-  #100 = Utf8               java/io/IOException\n-  #101 = Utf8               ()V\n-  #102 = Utf8               java/util/Objects\n-  #103 = Utf8               requireNonNull\n-  #104 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #105 = Utf8               java/nio/file/Files\n-  #106 = Utf8               readAllBytes\n-  #107 = Utf8               (Ljava/nio/file/Path;)[B\n-  #108 = Utf8               java/lang/Object\n-  #109 = Utf8               (Ljava/lang/String;)V\n-  #110 = Utf8               newInputStream\n-  #111 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-  #112 = Utf8               newOutputStream\n-  #113 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n-  #114 = Utf8               newBufferedReader\n-  #115 = Utf8               (Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Ljava/io/BufferedReader;\n-  #116 = Utf8               newBufferedWriter\n-  #117 = Utf8               (Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n+    #1 = Methodref          #2.#3         // org/apache/commons/io/build/AbstractSupplier.\"<init>\":()V\n+    #2 = Class              #4            // org/apache/commons/io/build/AbstractSupplier\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               org/apache/commons/io/build/AbstractSupplier\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = String             #8            // origin\n+    #8 = Utf8               origin\n+    #9 = Methodref          #10.#11       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #10 = Class              #12           // java/util/Objects\n+   #11 = NameAndType        #13:#14       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #12 = Utf8               java/util/Objects\n+   #13 = Utf8               requireNonNull\n+   #14 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #15 = Fieldref           #16.#17       // org/apache/commons/io/build/AbstractOrigin.origin:Ljava/lang/Object;\n+   #16 = Class              #18           // org/apache/commons/io/build/AbstractOrigin\n+   #17 = NameAndType        #8:#19        // origin:Ljava/lang/Object;\n+   #18 = Utf8               org/apache/commons/io/build/AbstractOrigin\n+   #19 = Utf8               Ljava/lang/Object;\n+   #20 = Methodref          #16.#21       // org/apache/commons/io/build/AbstractOrigin.getPath:()Ljava/nio/file/Path;\n+   #21 = NameAndType        #22:#23       // getPath:()Ljava/nio/file/Path;\n+   #22 = Utf8               getPath\n+   #23 = Utf8               ()Ljava/nio/file/Path;\n+   #24 = Methodref          #25.#26       // java/nio/file/Files.readAllBytes:(Ljava/nio/file/Path;)[B\n+   #25 = Class              #27           // java/nio/file/Files\n+   #26 = NameAndType        #28:#29       // readAllBytes:(Ljava/nio/file/Path;)[B\n+   #27 = Utf8               java/nio/file/Files\n+   #28 = Utf8               readAllBytes\n+   #29 = Utf8               (Ljava/nio/file/Path;)[B\n+   #30 = Class              #31           // java/lang/UnsupportedOperationException\n+   #31 = Utf8               java/lang/UnsupportedOperationException\n+   #32 = Methodref          #33.#34       // java/lang/Object.toString:()Ljava/lang/String;\n+   #33 = Class              #35           // java/lang/Object\n+   #34 = NameAndType        #36:#37       // toString:()Ljava/lang/String;\n+   #35 = Utf8               java/lang/Object\n+   #36 = Utf8               toString\n+   #37 = Utf8               ()Ljava/lang/String;\n+   #38 = Methodref          #30.#39       // java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n+   #39 = NameAndType        #5:#40        // \"<init>\":(Ljava/lang/String;)V\n+   #40 = Utf8               (Ljava/lang/String;)V\n+   #41 = Methodref          #25.#42       // java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+   #42 = NameAndType        #43:#44       // newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+   #43 = Utf8               newInputStream\n+   #44 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+   #45 = Methodref          #25.#46       // java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+   #46 = NameAndType        #47:#48       // newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+   #47 = Utf8               newOutputStream\n+   #48 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+   #49 = Methodref          #25.#50       // java/nio/file/Files.newBufferedReader:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Ljava/io/BufferedReader;\n+   #50 = NameAndType        #51:#52       // newBufferedReader:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Ljava/io/BufferedReader;\n+   #51 = Utf8               newBufferedReader\n+   #52 = Utf8               (Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Ljava/io/BufferedReader;\n+   #53 = Methodref          #25.#54       // java/nio/file/Files.newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n+   #54 = NameAndType        #55:#56       // newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n+   #55 = Utf8               newBufferedWriter\n+   #56 = Utf8               (Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n+   #57 = Utf8               Signature\n+   #58 = Utf8               TT;\n+   #59 = Utf8               (Ljava/lang/Object;)V\n+   #60 = Utf8               Code\n+   #61 = Utf8               LineNumberTable\n+   #62 = Utf8               LocalVariableTable\n+   #63 = Utf8               this\n+   #64 = Utf8               Lorg/apache/commons/io/build/AbstractOrigin;\n+   #65 = Utf8               LocalVariableTypeTable\n+   #66 = Utf8               Lorg/apache/commons/io/build/AbstractOrigin<TT;TB;>;\n+   #67 = Utf8               (TT;)V\n+   #68 = Utf8               get\n+   #69 = Utf8               ()Ljava/lang/Object;\n+   #70 = Utf8               ()TT;\n+   #71 = Utf8               getByteArray\n+   #72 = Utf8               ()[B\n+   #73 = Utf8               Exceptions\n+   #74 = Class              #75           // java/io/IOException\n+   #75 = Utf8               java/io/IOException\n+   #76 = Utf8               getFile\n+   #77 = Utf8               ()Ljava/io/File;\n+   #78 = Utf8               getInputStream\n+   #79 = Utf8               ([Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+   #80 = Utf8               options\n+   #81 = Utf8               [Ljava/nio/file/OpenOption;\n+   #82 = Utf8               getOutputStream\n+   #83 = Utf8               ([Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+   #84 = Utf8               getReader\n+   #85 = Utf8               (Ljava/nio/charset/Charset;)Ljava/io/Reader;\n+   #86 = Utf8               charset\n+   #87 = Utf8               Ljava/nio/charset/Charset;\n+   #88 = Utf8               getWriter\n+   #89 = Utf8               (Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/Writer;\n+   #90 = Utf8               <T:Ljava/lang/Object;B:Lorg/apache/commons/io/build/AbstractOrigin<TT;TB;>;>Lorg/apache/commons/io/build/AbstractSupplier<TT;TB;>;\n+   #91 = Utf8               SourceFile\n+   #92 = Utf8               AbstractOrigin.java\n+   #93 = Utf8               InnerClasses\n+   #94 = Class              #95           // org/apache/commons/io/build/AbstractOrigin$WriterOrigin\n+   #95 = Utf8               org/apache/commons/io/build/AbstractOrigin$WriterOrigin\n+   #96 = Utf8               WriterOrigin\n+   #97 = Class              #98           // org/apache/commons/io/build/AbstractOrigin$URIOrigin\n+   #98 = Utf8               org/apache/commons/io/build/AbstractOrigin$URIOrigin\n+   #99 = Utf8               URIOrigin\n+  #100 = Class              #101          // org/apache/commons/io/build/AbstractOrigin$ReaderOrigin\n+  #101 = Utf8               org/apache/commons/io/build/AbstractOrigin$ReaderOrigin\n+  #102 = Utf8               ReaderOrigin\n+  #103 = Class              #104          // org/apache/commons/io/build/AbstractOrigin$PathOrigin\n+  #104 = Utf8               org/apache/commons/io/build/AbstractOrigin$PathOrigin\n+  #105 = Utf8               PathOrigin\n+  #106 = Class              #107          // org/apache/commons/io/build/AbstractOrigin$OutputStreamOrigin\n+  #107 = Utf8               org/apache/commons/io/build/AbstractOrigin$OutputStreamOrigin\n+  #108 = Utf8               OutputStreamOrigin\n+  #109 = Class              #110          // org/apache/commons/io/build/AbstractOrigin$InputStreamOrigin\n+  #110 = Utf8               org/apache/commons/io/build/AbstractOrigin$InputStreamOrigin\n+  #111 = Utf8               InputStreamOrigin\n+  #112 = Class              #113          // org/apache/commons/io/build/AbstractOrigin$FileOrigin\n+  #113 = Utf8               org/apache/commons/io/build/AbstractOrigin$FileOrigin\n+  #114 = Utf8               FileOrigin\n+  #115 = Class              #116          // org/apache/commons/io/build/AbstractOrigin$ByteArrayOrigin\n+  #116 = Utf8               org/apache/commons/io/build/AbstractOrigin$ByteArrayOrigin\n+  #117 = Utf8               ByteArrayOrigin\n {\n   final T origin;\n     descriptor: Ljava/lang/Object;\n     flags: (0x0010) ACC_FINAL\n-    Signature: #36                          // TT;\n+    Signature: #58                          // TT;\n \n   protected org.apache.commons.io.build.AbstractOrigin(T);\n     descriptor: (Ljava/lang/Object;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method org/apache/commons/io/build/AbstractSupplier.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: ldc           #2                  // String origin\n-         8: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        11: putfield      #4                  // Field origin:Ljava/lang/Object;\n+         6: ldc           #7                  // String origin\n+         8: invokestatic  #9                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        11: putfield      #15                 // Field origin:Ljava/lang/Object;\n         14: return\n       LineNumberTable:\n         line 264: 0\n         line 265: 4\n         line 266: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/build/AbstractOrigin;\n             0      15     1 origin   Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/build/AbstractOrigin<TT;TB;>;\n             0      15     1 origin   TT;\n-    Signature: #46                          // (TT;)V\n+    Signature: #67                          // (TT;)V\n \n   public T get();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field origin:Ljava/lang/Object;\n+         1: getfield      #15                 // Field origin:Ljava/lang/Object;\n          4: areturn\n       LineNumberTable:\n         line 275: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/build/AbstractOrigin;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/build/AbstractOrigin<TT;TB;>;\n-    Signature: #49                          // ()TT;\n+    Signature: #70                          // ()TT;\n \n   public byte[] getByteArray() throws java.io.IOException;\n     descriptor: ()[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #5                  // Method getPath:()Ljava/nio/file/Path;\n-         4: invokestatic  #6                  // Method java/nio/file/Files.readAllBytes:(Ljava/nio/file/Path;)[B\n+         1: invokevirtual #20                 // Method getPath:()Ljava/nio/file/Path;\n+         4: invokestatic  #24                 // Method java/nio/file/Files.readAllBytes:(Ljava/nio/file/Path;)[B\n          7: areturn\n       LineNumberTable:\n         line 286: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/build/AbstractOrigin;\n       LocalVariableTypeTable:\n@@ -197,20 +197,20 @@\n       throws java.io.IOException\n \n   public java.io.File getFile();\n     descriptor: ()Ljava/io/File;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: new           #7                  // class java/lang/UnsupportedOperationException\n+         0: new           #30                 // class java/lang/UnsupportedOperationException\n          3: dup\n          4: aload_0\n-         5: getfield      #4                  // Field origin:Ljava/lang/Object;\n-         8: invokevirtual #8                  // Method java/lang/Object.toString:()Ljava/lang/String;\n-        11: invokespecial #9                  // Method java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n+         5: getfield      #15                 // Field origin:Ljava/lang/Object;\n+         8: invokevirtual #32                 // Method java/lang/Object.toString:()Ljava/lang/String;\n+        11: invokespecial #38                 // Method java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n         14: athrow\n       LineNumberTable:\n         line 296: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/build/AbstractOrigin;\n       LocalVariableTypeTable:\n@@ -219,17 +219,17 @@\n \n   public java.io.InputStream getInputStream(java.nio.file.OpenOption...) throws java.io.IOException;\n     descriptor: ([Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #5                  // Method getPath:()Ljava/nio/file/Path;\n+         1: invokevirtual #20                 // Method getPath:()Ljava/nio/file/Path;\n          4: aload_1\n-         5: invokestatic  #10                 // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+         5: invokestatic  #41                 // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n          8: areturn\n       LineNumberTable:\n         line 308: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/build/AbstractOrigin;\n             0       9     1 options   [Ljava/nio/file/OpenOption;\n@@ -241,17 +241,17 @@\n \n   public java.io.OutputStream getOutputStream(java.nio.file.OpenOption...) throws java.io.IOException;\n     descriptor: ([Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #5                  // Method getPath:()Ljava/nio/file/Path;\n+         1: invokevirtual #20                 // Method getPath:()Ljava/nio/file/Path;\n          4: aload_1\n-         5: invokestatic  #11                 // Method java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+         5: invokestatic  #45                 // Method java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n          8: areturn\n       LineNumberTable:\n         line 320: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/build/AbstractOrigin;\n             0       9     1 options   [Ljava/nio/file/OpenOption;\n@@ -262,20 +262,20 @@\n       throws java.io.IOException\n \n   public java.nio.file.Path getPath();\n     descriptor: ()Ljava/nio/file/Path;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: new           #7                  // class java/lang/UnsupportedOperationException\n+         0: new           #30                 // class java/lang/UnsupportedOperationException\n          3: dup\n          4: aload_0\n-         5: getfield      #4                  // Field origin:Ljava/lang/Object;\n-         8: invokevirtual #8                  // Method java/lang/Object.toString:()Ljava/lang/String;\n-        11: invokespecial #9                  // Method java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n+         5: getfield      #15                 // Field origin:Ljava/lang/Object;\n+         8: invokevirtual #32                 // Method java/lang/Object.toString:()Ljava/lang/String;\n+        11: invokespecial #38                 // Method java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n         14: athrow\n       LineNumberTable:\n         line 330: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/build/AbstractOrigin;\n       LocalVariableTypeTable:\n@@ -284,17 +284,17 @@\n \n   public java.io.Reader getReader(java.nio.charset.Charset) throws java.io.IOException;\n     descriptor: (Ljava/nio/charset/Charset;)Ljava/io/Reader;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #5                  // Method getPath:()Ljava/nio/file/Path;\n+         1: invokevirtual #20                 // Method getPath:()Ljava/nio/file/Path;\n          4: aload_1\n-         5: invokestatic  #12                 // Method java/nio/file/Files.newBufferedReader:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Ljava/io/BufferedReader;\n+         5: invokestatic  #49                 // Method java/nio/file/Files.newBufferedReader:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Ljava/io/BufferedReader;\n          8: areturn\n       LineNumberTable:\n         line 341: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/build/AbstractOrigin;\n             0       9     1 charset   Ljava/nio/charset/Charset;\n@@ -306,18 +306,18 @@\n \n   public java.io.Writer getWriter(java.nio.charset.Charset, java.nio.file.OpenOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/Writer;\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: invokevirtual #5                  // Method getPath:()Ljava/nio/file/Path;\n+         1: invokevirtual #20                 // Method getPath:()Ljava/nio/file/Path;\n          4: aload_1\n          5: aload_2\n-         6: invokestatic  #13                 // Method java/nio/file/Files.newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n+         6: invokestatic  #53                 // Method java/nio/file/Files.newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n          9: areturn\n       LineNumberTable:\n         line 354: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/build/AbstractOrigin;\n             0      10     1 charset   Ljava/nio/charset/Charset;\n@@ -330,30 +330,30 @@\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field origin:Ljava/lang/Object;\n-         4: invokevirtual #8                  // Method java/lang/Object.toString:()Ljava/lang/String;\n+         1: getfield      #15                 // Field origin:Ljava/lang/Object;\n+         4: invokevirtual #32                 // Method java/lang/Object.toString:()Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 359: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/build/AbstractOrigin;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/build/AbstractOrigin<TT;TB;>;\n }\n-Signature: #72                          // <T:Ljava/lang/Object;B:Lorg/apache/commons/io/build/AbstractOrigin<TT;TB;>;>Lorg/apache/commons/io/build/AbstractSupplier<TT;TB;>;\n+Signature: #90                          // <T:Ljava/lang/Object;B:Lorg/apache/commons/io/build/AbstractOrigin<TT;TB;>;>Lorg/apache/commons/io/build/AbstractSupplier<TT;TB;>;\n SourceFile: \"AbstractOrigin.java\"\n InnerClasses:\n-  public static #17= #16 of #14;          // WriterOrigin=class org/apache/commons/io/build/AbstractOrigin$WriterOrigin of class org/apache/commons/io/build/AbstractOrigin\n-  public static #20= #19 of #14;          // URIOrigin=class org/apache/commons/io/build/AbstractOrigin$URIOrigin of class org/apache/commons/io/build/AbstractOrigin\n-  public static #22= #21 of #14;          // ReaderOrigin=class org/apache/commons/io/build/AbstractOrigin$ReaderOrigin of class org/apache/commons/io/build/AbstractOrigin\n-  public static #24= #23 of #14;          // PathOrigin=class org/apache/commons/io/build/AbstractOrigin$PathOrigin of class org/apache/commons/io/build/AbstractOrigin\n-  public static #26= #25 of #14;          // OutputStreamOrigin=class org/apache/commons/io/build/AbstractOrigin$OutputStreamOrigin of class org/apache/commons/io/build/AbstractOrigin\n-  public static #28= #27 of #14;          // InputStreamOrigin=class org/apache/commons/io/build/AbstractOrigin$InputStreamOrigin of class org/apache/commons/io/build/AbstractOrigin\n-  public static #30= #29 of #14;          // FileOrigin=class org/apache/commons/io/build/AbstractOrigin$FileOrigin of class org/apache/commons/io/build/AbstractOrigin\n-  public static #32= #31 of #14;          // ByteArrayOrigin=class org/apache/commons/io/build/AbstractOrigin$ByteArrayOrigin of class org/apache/commons/io/build/AbstractOrigin\n+  public static #96= #94 of #16;          // WriterOrigin=class org/apache/commons/io/build/AbstractOrigin$WriterOrigin of class org/apache/commons/io/build/AbstractOrigin\n+  public static #99= #97 of #16;          // URIOrigin=class org/apache/commons/io/build/AbstractOrigin$URIOrigin of class org/apache/commons/io/build/AbstractOrigin\n+  public static #102= #100 of #16;        // ReaderOrigin=class org/apache/commons/io/build/AbstractOrigin$ReaderOrigin of class org/apache/commons/io/build/AbstractOrigin\n+  public static #105= #103 of #16;        // PathOrigin=class org/apache/commons/io/build/AbstractOrigin$PathOrigin of class org/apache/commons/io/build/AbstractOrigin\n+  public static #108= #106 of #16;        // OutputStreamOrigin=class org/apache/commons/io/build/AbstractOrigin$OutputStreamOrigin of class org/apache/commons/io/build/AbstractOrigin\n+  public static #111= #109 of #16;        // InputStreamOrigin=class org/apache/commons/io/build/AbstractOrigin$InputStreamOrigin of class org/apache/commons/io/build/AbstractOrigin\n+  public static #114= #112 of #16;        // FileOrigin=class org/apache/commons/io/build/AbstractOrigin$FileOrigin of class org/apache/commons/io/build/AbstractOrigin\n+  public static #117= #115 of #16;        // ByteArrayOrigin=class org/apache/commons/io/build/AbstractOrigin$ByteArrayOrigin of class org/apache/commons/io/build/AbstractOrigin\n"}]}
