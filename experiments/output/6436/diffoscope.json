{"diffoscope-json-version": 1, "source1": "first/FormattableUtils.class", "source2": "second/FormattableUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,40 +1,40 @@\n-  SHA-256 checksum 20858ca116ce2fa147a76d5de17566da7dc496cb8d9a3005b715339220ccfe80\n+  SHA-256 checksum 46638068ac33118456581fd266c929ce11482b522a0d10938a1e96a6c46536ed\n   Compiled from \"FormattableUtils.java\"\n public class org.apache.commons.lang3.text.FormattableUtils\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #3                          // org/apache/commons/lang3/text/FormattableUtils\n   super_class: #5                         // java/lang/Object\n   interfaces: 0, fields: 1, methods: 6, attributes: 3\n Constant pool:\n-    #1 = Class              #69           // java/util/FormattableFlags\n-    #2 = Methodref          #5.#70        // java/lang/Object.\"<init>\":()V\n-    #3 = Class              #71           // org/apache/commons/lang3/text/FormattableUtils\n-    #4 = String             #72           // %s\n-    #5 = Class              #73           // java/lang/Object\n-    #6 = Methodref          #74.#75       // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-    #7 = Methodref          #3.#76        // org/apache/commons/lang3/text/FormattableUtils.append:(Ljava/lang/CharSequence;Ljava/util/Formatter;IIICLjava/lang/CharSequence;)Ljava/util/Formatter;\n-    #8 = InterfaceMethodref #17.#77       // java/lang/CharSequence.length:()I\n-    #9 = String             #78           // Specified ellipsis \\'%1$s\\' exceeds precision of %2$s\n-   #10 = Methodref          #79.#80       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #11 = Methodref          #81.#82       // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-   #12 = Class              #83           // java/lang/StringBuilder\n-   #13 = Methodref          #12.#84       // java/lang/StringBuilder.\"<init>\":(Ljava/lang/CharSequence;)V\n-   #14 = Class              #85           // org/apache/commons/lang3/StringUtils\n-   #15 = String             #86           //\n-   #16 = Methodref          #87.#88       // org/apache/commons/lang3/ObjectUtils.defaultIfNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #17 = Class              #89           // java/lang/CharSequence\n-   #18 = InterfaceMethodref #17.#90       // java/lang/CharSequence.toString:()Ljava/lang/String;\n-   #19 = Methodref          #12.#91       // java/lang/StringBuilder.replace:(IILjava/lang/String;)Ljava/lang/StringBuilder;\n-   #20 = Methodref          #12.#77       // java/lang/StringBuilder.length:()I\n-   #21 = Methodref          #12.#92       // java/lang/StringBuilder.insert:(IC)Ljava/lang/StringBuilder;\n-   #22 = Methodref          #12.#90       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #23 = Methodref          #93.#94       // java/util/Formatter.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Formatter;\n+    #1 = Class              #67           // java/util/FormattableFlags\n+    #2 = Methodref          #5.#68        // java/lang/Object.\"<init>\":()V\n+    #3 = Class              #69           // org/apache/commons/lang3/text/FormattableUtils\n+    #4 = String             #70           // %s\n+    #5 = Class              #71           // java/lang/Object\n+    #6 = Methodref          #72.#73       // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+    #7 = Methodref          #3.#74        // org/apache/commons/lang3/text/FormattableUtils.append:(Ljava/lang/CharSequence;Ljava/util/Formatter;IIICLjava/lang/CharSequence;)Ljava/util/Formatter;\n+    #8 = InterfaceMethodref #17.#75       // java/lang/CharSequence.length:()I\n+    #9 = String             #76           // Specified ellipsis \\'%1$s\\' exceeds precision of %2$s\n+   #10 = Methodref          #77.#78       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+   #11 = Methodref          #79.#80       // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+   #12 = Class              #81           // java/lang/StringBuilder\n+   #13 = Methodref          #12.#82       // java/lang/StringBuilder.\"<init>\":(Ljava/lang/CharSequence;)V\n+   #14 = Class              #83           // org/apache/commons/lang3/StringUtils\n+   #15 = String             #84           //\n+   #16 = Methodref          #85.#86       // org/apache/commons/lang3/ObjectUtils.defaultIfNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #17 = Class              #87           // java/lang/CharSequence\n+   #18 = InterfaceMethodref #17.#88       // java/lang/CharSequence.toString:()Ljava/lang/String;\n+   #19 = Methodref          #12.#89       // java/lang/StringBuilder.replace:(IILjava/lang/String;)Ljava/lang/StringBuilder;\n+   #20 = Methodref          #12.#75       // java/lang/StringBuilder.length:()I\n+   #21 = Methodref          #12.#90       // java/lang/StringBuilder.insert:(IC)Ljava/lang/StringBuilder;\n+   #22 = Methodref          #12.#88       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #23 = Methodref          #61.#91       // java/util/Formatter.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Formatter;\n    #24 = Utf8               SIMPLEST_FORMAT\n    #25 = Utf8               Ljava/lang/String;\n    #26 = Utf8               ConstantValue\n    #27 = Utf8               <init>\n    #28 = Utf8               ()V\n    #29 = Utf8               Code\n    #30 = Utf8               LineNumberTable\n@@ -64,70 +64,67 @@\n    #54 = Utf8               _ellipsis\n    #55 = Utf8               i\n    #56 = Utf8               buf\n    #57 = Utf8               Ljava/lang/StringBuilder;\n    #58 = Utf8               leftJustify\n    #59 = Utf8               Z\n    #60 = Utf8               StackMapTable\n-   #61 = Class              #83           // java/lang/StringBuilder\n-   #62 = Class              #89           // java/lang/CharSequence\n-   #63 = Class              #95           // java/util/Formatter\n-   #64 = Utf8               SourceFile\n-   #65 = Utf8               FormattableUtils.java\n-   #66 = Utf8               Deprecated\n-   #67 = Utf8               RuntimeVisibleAnnotations\n-   #68 = Utf8               Ljava/lang/Deprecated;\n-   #69 = Utf8               java/util/FormattableFlags\n-   #70 = NameAndType        #27:#28       // \"<init>\":()V\n-   #71 = Utf8               org/apache/commons/lang3/text/FormattableUtils\n-   #72 = Utf8               %s\n-   #73 = Utf8               java/lang/Object\n-   #74 = Class              #96           // java/lang/String\n-   #75 = NameAndType        #97:#98       // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #76 = NameAndType        #38:#53       // append:(Ljava/lang/CharSequence;Ljava/util/Formatter;IIICLjava/lang/CharSequence;)Ljava/util/Formatter;\n-   #77 = NameAndType        #99:#100      // length:()I\n-   #78 = Utf8               Specified ellipsis \\'%1$s\\' exceeds precision of %2$s\n-   #79 = Class              #101          // java/lang/Integer\n-   #80 = NameAndType        #102:#103     // valueOf:(I)Ljava/lang/Integer;\n-   #81 = Class              #104          // org/apache/commons/lang3/Validate\n-   #82 = NameAndType        #105:#106     // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-   #83 = Utf8               java/lang/StringBuilder\n-   #84 = NameAndType        #27:#107      // \"<init>\":(Ljava/lang/CharSequence;)V\n-   #85 = Utf8               org/apache/commons/lang3/StringUtils\n-   #86 = Utf8\n-   #87 = Class              #108          // org/apache/commons/lang3/ObjectUtils\n-   #88 = NameAndType        #109:#110     // defaultIfNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #89 = Utf8               java/lang/CharSequence\n-   #90 = NameAndType        #34:#111      // toString:()Ljava/lang/String;\n-   #91 = NameAndType        #112:#113     // replace:(IILjava/lang/String;)Ljava/lang/StringBuilder;\n-   #92 = NameAndType        #114:#115     // insert:(IC)Ljava/lang/StringBuilder;\n-   #93 = Class              #95           // java/util/Formatter\n-   #94 = NameAndType        #97:#116      // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Formatter;\n-   #95 = Utf8               java/util/Formatter\n-   #96 = Utf8               java/lang/String\n-   #97 = Utf8               format\n-   #98 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #99 = Utf8               length\n-  #100 = Utf8               ()I\n-  #101 = Utf8               java/lang/Integer\n-  #102 = Utf8               valueOf\n-  #103 = Utf8               (I)Ljava/lang/Integer;\n-  #104 = Utf8               org/apache/commons/lang3/Validate\n-  #105 = Utf8               isTrue\n-  #106 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n-  #107 = Utf8               (Ljava/lang/CharSequence;)V\n-  #108 = Utf8               org/apache/commons/lang3/ObjectUtils\n-  #109 = Utf8               defaultIfNull\n-  #110 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #111 = Utf8               ()Ljava/lang/String;\n-  #112 = Utf8               replace\n-  #113 = Utf8               (IILjava/lang/String;)Ljava/lang/StringBuilder;\n-  #114 = Utf8               insert\n-  #115 = Utf8               (IC)Ljava/lang/StringBuilder;\n-  #116 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Formatter;\n+   #61 = Class              #92           // java/util/Formatter\n+   #62 = Utf8               SourceFile\n+   #63 = Utf8               FormattableUtils.java\n+   #64 = Utf8               Deprecated\n+   #65 = Utf8               RuntimeVisibleAnnotations\n+   #66 = Utf8               Ljava/lang/Deprecated;\n+   #67 = Utf8               java/util/FormattableFlags\n+   #68 = NameAndType        #27:#28       // \"<init>\":()V\n+   #69 = Utf8               org/apache/commons/lang3/text/FormattableUtils\n+   #70 = Utf8               %s\n+   #71 = Utf8               java/lang/Object\n+   #72 = Class              #93           // java/lang/String\n+   #73 = NameAndType        #94:#95       // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #74 = NameAndType        #38:#53       // append:(Ljava/lang/CharSequence;Ljava/util/Formatter;IIICLjava/lang/CharSequence;)Ljava/util/Formatter;\n+   #75 = NameAndType        #96:#97       // length:()I\n+   #76 = Utf8               Specified ellipsis \\'%1$s\\' exceeds precision of %2$s\n+   #77 = Class              #98           // java/lang/Integer\n+   #78 = NameAndType        #99:#100      // valueOf:(I)Ljava/lang/Integer;\n+   #79 = Class              #101          // org/apache/commons/lang3/Validate\n+   #80 = NameAndType        #102:#103     // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+   #81 = Utf8               java/lang/StringBuilder\n+   #82 = NameAndType        #27:#104      // \"<init>\":(Ljava/lang/CharSequence;)V\n+   #83 = Utf8               org/apache/commons/lang3/StringUtils\n+   #84 = Utf8\n+   #85 = Class              #105          // org/apache/commons/lang3/ObjectUtils\n+   #86 = NameAndType        #106:#107     // defaultIfNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #87 = Utf8               java/lang/CharSequence\n+   #88 = NameAndType        #34:#108      // toString:()Ljava/lang/String;\n+   #89 = NameAndType        #109:#110     // replace:(IILjava/lang/String;)Ljava/lang/StringBuilder;\n+   #90 = NameAndType        #111:#112     // insert:(IC)Ljava/lang/StringBuilder;\n+   #91 = NameAndType        #94:#113      // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Formatter;\n+   #92 = Utf8               java/util/Formatter\n+   #93 = Utf8               java/lang/String\n+   #94 = Utf8               format\n+   #95 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #96 = Utf8               length\n+   #97 = Utf8               ()I\n+   #98 = Utf8               java/lang/Integer\n+   #99 = Utf8               valueOf\n+  #100 = Utf8               (I)Ljava/lang/Integer;\n+  #101 = Utf8               org/apache/commons/lang3/Validate\n+  #102 = Utf8               isTrue\n+  #103 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #104 = Utf8               (Ljava/lang/CharSequence;)V\n+  #105 = Utf8               org/apache/commons/lang3/ObjectUtils\n+  #106 = Utf8               defaultIfNull\n+  #107 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #108 = Utf8               ()Ljava/lang/String;\n+  #109 = Utf8               replace\n+  #110 = Utf8               (IILjava/lang/String;)Ljava/lang/StringBuilder;\n+  #111 = Utf8               insert\n+  #112 = Utf8               (IC)Ljava/lang/StringBuilder;\n+  #113 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Formatter;\n {\n   private static final java.lang.String SIMPLEST_FORMAT = \"%s\";\n     descriptor: Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: String %s\n \n   public org.apache.commons.lang3.text.FormattableUtils();\n@@ -379,9 +376,9 @@\n           stack = [ class java/lang/StringBuilder, int ]\n         frame_type = 250 /* chop */\n           offset_delta = 11\n }\n SourceFile: \"FormattableUtils.java\"\n Deprecated: true\n RuntimeVisibleAnnotations:\n-  0: #68()\n+  0: #66()\n     java.lang.Deprecated\n"}]}
