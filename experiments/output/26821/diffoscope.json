{"diffoscope-json-version": 1, "source1": "first/LZMADecoder.class", "source2": "second/LZMADecoder.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,276 +1,276 @@\n-  SHA-256 checksum 02641c04866153cd68b1efa7d5387036062d73cdb4f28335331b05a8224bf9db\n+  SHA-256 checksum 9bcdc1d0545f51954ec710fc540c77743dfb2de1cc32c8d20c9daf970e76a946\n   Compiled from \"LZMADecoder.java\"\n class org.apache.commons.compress.archivers.sevenz.LZMADecoder extends org.apache.commons.compress.archivers.sevenz.CoderBase\n   minor version: 0\n   major version: 53\n   flags: (0x0020) ACC_SUPER\n-  this_class: #36                         // org/apache/commons/compress/archivers/sevenz/LZMADecoder\n-  super_class: #37                        // org/apache/commons/compress/archivers/sevenz/CoderBase\n+  this_class: #29                         // org/apache/commons/compress/archivers/sevenz/LZMADecoder\n+  super_class: #8                         // org/apache/commons/compress/archivers/sevenz/CoderBase\n   interfaces: 0, fields: 0, methods: 8, attributes: 3\n Constant pool:\n-    #1 = Class              #91           // java/lang/Class\n-    #2 = Class              #92           // org/tukaani/xz/LZMA2Options\n-    #3 = Class              #93           // java/lang/Number\n-    #4 = Methodref          #37.#94       // org/apache/commons/compress/archivers/sevenz/CoderBase.\"<init>\":([Ljava/lang/Class;)V\n-    #5 = Fieldref           #95.#96       // org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n-    #6 = Class              #97           // java/io/IOException\n-    #7 = String             #98           // Missing LZMA properties\n-    #8 = Methodref          #6.#99        // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-    #9 = String             #100          // LZMA properties too short\n-   #10 = Methodref          #36.#101      // org/apache/commons/compress/archivers/sevenz/LZMADecoder.getDictionarySize:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n-   #11 = Class              #102          // org/tukaani/xz/LZMAInputStream\n-   #12 = Integer            2147483632\n-   #13 = InvokeDynamic      #0:#106       // #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-   #14 = Methodref          #11.#107      // org/tukaani/xz/LZMAInputStream.getMemoryUsage:(IB)I\n-   #15 = Class              #108          // org/apache/commons/compress/MemoryLimitException\n-   #16 = Methodref          #15.#109      // org/apache/commons/compress/MemoryLimitException.\"<init>\":(JI)V\n-   #17 = Methodref          #11.#110      // org/tukaani/xz/LZMAInputStream.\"<init>\":(Ljava/io/InputStream;JBI)V\n-   #18 = Class              #111          // org/apache/commons/compress/utils/FlushShieldFilterOutputStream\n-   #19 = Class              #112          // org/tukaani/xz/LZMAOutputStream\n-   #20 = Methodref          #36.#113      // org/apache/commons/compress/archivers/sevenz/LZMADecoder.getOptions:(Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n-   #21 = Methodref          #19.#114      // org/tukaani/xz/LZMAOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/tukaani/xz/LZMA2Options;Z)V\n-   #22 = Methodref          #18.#115      // org/apache/commons/compress/utils/FlushShieldFilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #23 = Methodref          #2.#116       // org/tukaani/xz/LZMA2Options.getPb:()I\n-   #24 = Methodref          #2.#117       // org/tukaani/xz/LZMA2Options.getLp:()I\n-   #25 = Methodref          #2.#118       // org/tukaani/xz/LZMA2Options.getLc:()I\n-   #26 = Methodref          #2.#119       // org/tukaani/xz/LZMA2Options.getDictSize:()I\n-   #27 = Methodref          #120.#121     // org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n-   #28 = Methodref          #2.#122       // org/tukaani/xz/LZMA2Options.\"<init>\":()V\n-   #29 = Methodref          #2.#123       // org/tukaani/xz/LZMA2Options.setPb:(I)V\n-   #30 = Methodref          #2.#124       // org/tukaani/xz/LZMA2Options.setLcLp:(II)V\n-   #31 = Methodref          #2.#125       // org/tukaani/xz/LZMA2Options.setDictSize:(I)V\n-   #32 = Methodref          #120.#126     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n-   #33 = Methodref          #36.#127      // org/apache/commons/compress/archivers/sevenz/LZMADecoder.numberOptionOrDefault:(Ljava/lang/Object;)I\n-   #34 = Integer            8388608\n-   #35 = Methodref          #36.#128      // org/apache/commons/compress/archivers/sevenz/LZMADecoder.numberOptionOrDefault:(Ljava/lang/Object;I)I\n-   #36 = Class              #129          // org/apache/commons/compress/archivers/sevenz/LZMADecoder\n-   #37 = Class              #130          // org/apache/commons/compress/archivers/sevenz/CoderBase\n-   #38 = Utf8               <init>\n-   #39 = Utf8               ()V\n-   #40 = Utf8               Code\n-   #41 = Utf8               LineNumberTable\n-   #42 = Utf8               LocalVariableTable\n-   #43 = Utf8               this\n-   #44 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/LZMADecoder;\n-   #45 = Utf8               decode\n-   #46 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;JLorg/apache/commons/compress/archivers/sevenz/Coder;[BI)Ljava/io/InputStream;\n-   #47 = Utf8               archiveName\n-   #48 = Utf8               Ljava/lang/String;\n-   #49 = Utf8               in\n-   #50 = Utf8               Ljava/io/InputStream;\n-   #51 = Utf8               uncompressedLength\n-   #52 = Utf8               J\n-   #53 = Utf8               coder\n-   #54 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/Coder;\n-   #55 = Utf8               password\n-   #56 = Utf8               [B\n-   #57 = Utf8               maxMemoryLimitInKb\n-   #58 = Utf8               I\n-   #59 = Utf8               propsByte\n-   #60 = Utf8               B\n-   #61 = Utf8               dictSize\n-   #62 = Utf8               memoryUsageInKb\n-   #63 = Utf8               StackMapTable\n-   #64 = Utf8               Exceptions\n-   #65 = Utf8               encode\n-   #66 = Utf8               (Ljava/io/OutputStream;Ljava/lang/Object;)Ljava/io/OutputStream;\n-   #67 = Utf8               out\n-   #68 = Utf8               Ljava/io/OutputStream;\n-   #69 = Utf8               opts\n-   #70 = Utf8               Ljava/lang/Object;\n-   #71 = Utf8               getOptionsAsProperties\n-   #72 = Utf8               (Ljava/lang/Object;)[B\n-   #73 = Utf8               options\n-   #74 = Utf8               Lorg/tukaani/xz/LZMA2Options;\n-   #75 = Utf8               props\n-   #76 = Utf8               o\n-   #77 = Utf8               getOptionsFromCoder\n-   #78 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/Coder;Ljava/io/InputStream;)Ljava/lang/Object;\n-   #79 = Utf8               pb\n-   #80 = Utf8               lp\n-   #81 = Utf8               lc\n-   #82 = Utf8               getDictionarySize\n-   #83 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n-   #84 = Class              #131          // java/lang/IllegalArgumentException\n-   #85 = Utf8               getOptions\n-   #86 = Utf8               (Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n-   #87 = Utf8               numberOptionOrDefault\n-   #88 = Utf8               (Ljava/lang/Object;)I\n-   #89 = Utf8               SourceFile\n-   #90 = Utf8               LZMADecoder.java\n-   #91 = Utf8               java/lang/Class\n-   #92 = Utf8               org/tukaani/xz/LZMA2Options\n-   #93 = Utf8               java/lang/Number\n-   #94 = NameAndType        #38:#132      // \"<init>\":([Ljava/lang/Class;)V\n-   #95 = Class              #133          // org/apache/commons/compress/archivers/sevenz/Coder\n-   #96 = NameAndType        #134:#56      // properties:[B\n-   #97 = Utf8               java/io/IOException\n-   #98 = Utf8               Missing LZMA properties\n-   #99 = NameAndType        #38:#135      // \"<init>\":(Ljava/lang/String;)V\n-  #100 = Utf8               LZMA properties too short\n-  #101 = NameAndType        #82:#83       // getDictionarySize:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n-  #102 = Utf8               org/tukaani/xz/LZMAInputStream\n-  #103 = Utf8               BootstrapMethods\n-  #104 = MethodHandle       6:#136        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #105 = String             #137          // Dictionary larger than 4GiB maximum size used in \\u0001\n-  #106 = NameAndType        #138:#139     // makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-  #107 = NameAndType        #140:#141     // getMemoryUsage:(IB)I\n-  #108 = Utf8               org/apache/commons/compress/MemoryLimitException\n-  #109 = NameAndType        #38:#142      // \"<init>\":(JI)V\n-  #110 = NameAndType        #38:#143      // \"<init>\":(Ljava/io/InputStream;JBI)V\n-  #111 = Utf8               org/apache/commons/compress/utils/FlushShieldFilterOutputStream\n-  #112 = Utf8               org/tukaani/xz/LZMAOutputStream\n-  #113 = NameAndType        #85:#86       // getOptions:(Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n-  #114 = NameAndType        #38:#144      // \"<init>\":(Ljava/io/OutputStream;Lorg/tukaani/xz/LZMA2Options;Z)V\n-  #115 = NameAndType        #38:#145      // \"<init>\":(Ljava/io/OutputStream;)V\n-  #116 = NameAndType        #146:#147     // getPb:()I\n-  #117 = NameAndType        #148:#147     // getLp:()I\n-  #118 = NameAndType        #149:#147     // getLc:()I\n-  #119 = NameAndType        #150:#147     // getDictSize:()I\n-  #120 = Class              #151          // org/apache/commons/compress/utils/ByteUtils\n-  #121 = NameAndType        #152:#153     // toLittleEndian:([BJII)V\n-  #122 = NameAndType        #38:#39       // \"<init>\":()V\n-  #123 = NameAndType        #154:#155     // setPb:(I)V\n-  #124 = NameAndType        #156:#157     // setLcLp:(II)V\n-  #125 = NameAndType        #158:#155     // setDictSize:(I)V\n-  #126 = NameAndType        #159:#160     // fromLittleEndian:([BII)J\n-  #127 = NameAndType        #87:#88       // numberOptionOrDefault:(Ljava/lang/Object;)I\n-  #128 = NameAndType        #87:#161      // numberOptionOrDefault:(Ljava/lang/Object;I)I\n-  #129 = Utf8               org/apache/commons/compress/archivers/sevenz/LZMADecoder\n-  #130 = Utf8               org/apache/commons/compress/archivers/sevenz/CoderBase\n-  #131 = Utf8               java/lang/IllegalArgumentException\n-  #132 = Utf8               ([Ljava/lang/Class;)V\n-  #133 = Utf8               org/apache/commons/compress/archivers/sevenz/Coder\n-  #134 = Utf8               properties\n-  #135 = Utf8               (Ljava/lang/String;)V\n-  #136 = Methodref          #162.#163     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #137 = Utf8               Dictionary larger than 4GiB maximum size used in \\u0001\n-  #138 = Utf8               makeConcatWithConstants\n-  #139 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #140 = Utf8               getMemoryUsage\n-  #141 = Utf8               (IB)I\n-  #142 = Utf8               (JI)V\n-  #143 = Utf8               (Ljava/io/InputStream;JBI)V\n-  #144 = Utf8               (Ljava/io/OutputStream;Lorg/tukaani/xz/LZMA2Options;Z)V\n-  #145 = Utf8               (Ljava/io/OutputStream;)V\n-  #146 = Utf8               getPb\n-  #147 = Utf8               ()I\n-  #148 = Utf8               getLp\n-  #149 = Utf8               getLc\n-  #150 = Utf8               getDictSize\n-  #151 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #152 = Utf8               toLittleEndian\n-  #153 = Utf8               ([BJII)V\n-  #154 = Utf8               setPb\n-  #155 = Utf8               (I)V\n-  #156 = Utf8               setLcLp\n-  #157 = Utf8               (II)V\n-  #158 = Utf8               setDictSize\n-  #159 = Utf8               fromLittleEndian\n-  #160 = Utf8               ([BII)J\n-  #161 = Utf8               (Ljava/lang/Object;I)I\n-  #162 = Class              #164          // java/lang/invoke/StringConcatFactory\n-  #163 = NameAndType        #138:#168     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #164 = Utf8               java/lang/invoke/StringConcatFactory\n-  #165 = Class              #170          // java/lang/invoke/MethodHandles$Lookup\n-  #166 = Utf8               Lookup\n-  #167 = Utf8               InnerClasses\n-  #168 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #169 = Class              #171          // java/lang/invoke/MethodHandles\n-  #170 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #171 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Class              #2            // java/lang/Class\n+    #2 = Utf8               java/lang/Class\n+    #3 = Class              #4            // org/tukaani/xz/LZMA2Options\n+    #4 = Utf8               org/tukaani/xz/LZMA2Options\n+    #5 = Class              #6            // java/lang/Number\n+    #6 = Utf8               java/lang/Number\n+    #7 = Methodref          #8.#9         // org/apache/commons/compress/archivers/sevenz/CoderBase.\"<init>\":([Ljava/lang/Class;)V\n+    #8 = Class              #10           // org/apache/commons/compress/archivers/sevenz/CoderBase\n+    #9 = NameAndType        #11:#12       // \"<init>\":([Ljava/lang/Class;)V\n+   #10 = Utf8               org/apache/commons/compress/archivers/sevenz/CoderBase\n+   #11 = Utf8               <init>\n+   #12 = Utf8               ([Ljava/lang/Class;)V\n+   #13 = Fieldref           #14.#15       // org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n+   #14 = Class              #16           // org/apache/commons/compress/archivers/sevenz/Coder\n+   #15 = NameAndType        #17:#18       // properties:[B\n+   #16 = Utf8               org/apache/commons/compress/archivers/sevenz/Coder\n+   #17 = Utf8               properties\n+   #18 = Utf8               [B\n+   #19 = Class              #20           // java/io/IOException\n+   #20 = Utf8               java/io/IOException\n+   #21 = String             #22           // Missing LZMA properties\n+   #22 = Utf8               Missing LZMA properties\n+   #23 = Methodref          #19.#24       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #24 = NameAndType        #11:#25       // \"<init>\":(Ljava/lang/String;)V\n+   #25 = Utf8               (Ljava/lang/String;)V\n+   #26 = String             #27           // LZMA properties too short\n+   #27 = Utf8               LZMA properties too short\n+   #28 = Methodref          #29.#30       // org/apache/commons/compress/archivers/sevenz/LZMADecoder.getDictionarySize:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n+   #29 = Class              #31           // org/apache/commons/compress/archivers/sevenz/LZMADecoder\n+   #30 = NameAndType        #32:#33       // getDictionarySize:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n+   #31 = Utf8               org/apache/commons/compress/archivers/sevenz/LZMADecoder\n+   #32 = Utf8               getDictionarySize\n+   #33 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n+   #34 = Class              #35           // org/tukaani/xz/LZMAInputStream\n+   #35 = Utf8               org/tukaani/xz/LZMAInputStream\n+   #36 = Integer            2147483632\n+   #37 = InvokeDynamic      #0:#38        // #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+   #38 = NameAndType        #39:#40       // makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+   #39 = Utf8               makeConcatWithConstants\n+   #40 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+   #41 = Methodref          #34.#42       // org/tukaani/xz/LZMAInputStream.getMemoryUsage:(IB)I\n+   #42 = NameAndType        #43:#44       // getMemoryUsage:(IB)I\n+   #43 = Utf8               getMemoryUsage\n+   #44 = Utf8               (IB)I\n+   #45 = Class              #46           // org/apache/commons/compress/MemoryLimitException\n+   #46 = Utf8               org/apache/commons/compress/MemoryLimitException\n+   #47 = Methodref          #45.#48       // org/apache/commons/compress/MemoryLimitException.\"<init>\":(JI)V\n+   #48 = NameAndType        #11:#49       // \"<init>\":(JI)V\n+   #49 = Utf8               (JI)V\n+   #50 = Methodref          #34.#51       // org/tukaani/xz/LZMAInputStream.\"<init>\":(Ljava/io/InputStream;JBI)V\n+   #51 = NameAndType        #11:#52       // \"<init>\":(Ljava/io/InputStream;JBI)V\n+   #52 = Utf8               (Ljava/io/InputStream;JBI)V\n+   #53 = Class              #54           // org/apache/commons/compress/utils/FlushShieldFilterOutputStream\n+   #54 = Utf8               org/apache/commons/compress/utils/FlushShieldFilterOutputStream\n+   #55 = Class              #56           // org/tukaani/xz/LZMAOutputStream\n+   #56 = Utf8               org/tukaani/xz/LZMAOutputStream\n+   #57 = Methodref          #29.#58       // org/apache/commons/compress/archivers/sevenz/LZMADecoder.getOptions:(Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n+   #58 = NameAndType        #59:#60       // getOptions:(Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n+   #59 = Utf8               getOptions\n+   #60 = Utf8               (Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n+   #61 = Methodref          #55.#62       // org/tukaani/xz/LZMAOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/tukaani/xz/LZMA2Options;Z)V\n+   #62 = NameAndType        #11:#63       // \"<init>\":(Ljava/io/OutputStream;Lorg/tukaani/xz/LZMA2Options;Z)V\n+   #63 = Utf8               (Ljava/io/OutputStream;Lorg/tukaani/xz/LZMA2Options;Z)V\n+   #64 = Methodref          #53.#65       // org/apache/commons/compress/utils/FlushShieldFilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+   #65 = NameAndType        #11:#66       // \"<init>\":(Ljava/io/OutputStream;)V\n+   #66 = Utf8               (Ljava/io/OutputStream;)V\n+   #67 = Methodref          #3.#68        // org/tukaani/xz/LZMA2Options.getPb:()I\n+   #68 = NameAndType        #69:#70       // getPb:()I\n+   #69 = Utf8               getPb\n+   #70 = Utf8               ()I\n+   #71 = Methodref          #3.#72        // org/tukaani/xz/LZMA2Options.getLp:()I\n+   #72 = NameAndType        #73:#70       // getLp:()I\n+   #73 = Utf8               getLp\n+   #74 = Methodref          #3.#75        // org/tukaani/xz/LZMA2Options.getLc:()I\n+   #75 = NameAndType        #76:#70       // getLc:()I\n+   #76 = Utf8               getLc\n+   #77 = Methodref          #3.#78        // org/tukaani/xz/LZMA2Options.getDictSize:()I\n+   #78 = NameAndType        #79:#70       // getDictSize:()I\n+   #79 = Utf8               getDictSize\n+   #80 = Methodref          #81.#82       // org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n+   #81 = Class              #83           // org/apache/commons/compress/utils/ByteUtils\n+   #82 = NameAndType        #84:#85       // toLittleEndian:([BJII)V\n+   #83 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+   #84 = Utf8               toLittleEndian\n+   #85 = Utf8               ([BJII)V\n+   #86 = Methodref          #3.#87        // org/tukaani/xz/LZMA2Options.\"<init>\":()V\n+   #87 = NameAndType        #11:#88       // \"<init>\":()V\n+   #88 = Utf8               ()V\n+   #89 = Methodref          #3.#90        // org/tukaani/xz/LZMA2Options.setPb:(I)V\n+   #90 = NameAndType        #91:#92       // setPb:(I)V\n+   #91 = Utf8               setPb\n+   #92 = Utf8               (I)V\n+   #93 = Methodref          #3.#94        // org/tukaani/xz/LZMA2Options.setLcLp:(II)V\n+   #94 = NameAndType        #95:#96       // setLcLp:(II)V\n+   #95 = Utf8               setLcLp\n+   #96 = Utf8               (II)V\n+   #97 = Methodref          #3.#98        // org/tukaani/xz/LZMA2Options.setDictSize:(I)V\n+   #98 = NameAndType        #99:#92       // setDictSize:(I)V\n+   #99 = Utf8               setDictSize\n+  #100 = Methodref          #81.#101      // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n+  #101 = NameAndType        #102:#103     // fromLittleEndian:([BII)J\n+  #102 = Utf8               fromLittleEndian\n+  #103 = Utf8               ([BII)J\n+  #104 = Methodref          #29.#105      // org/apache/commons/compress/archivers/sevenz/LZMADecoder.numberOptionOrDefault:(Ljava/lang/Object;)I\n+  #105 = NameAndType        #106:#107     // numberOptionOrDefault:(Ljava/lang/Object;)I\n+  #106 = Utf8               numberOptionOrDefault\n+  #107 = Utf8               (Ljava/lang/Object;)I\n+  #108 = Integer            8388608\n+  #109 = Methodref          #29.#110      // org/apache/commons/compress/archivers/sevenz/LZMADecoder.numberOptionOrDefault:(Ljava/lang/Object;I)I\n+  #110 = NameAndType        #106:#111     // numberOptionOrDefault:(Ljava/lang/Object;I)I\n+  #111 = Utf8               (Ljava/lang/Object;I)I\n+  #112 = Utf8               Code\n+  #113 = Utf8               LineNumberTable\n+  #114 = Utf8               LocalVariableTable\n+  #115 = Utf8               this\n+  #116 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/LZMADecoder;\n+  #117 = Utf8               decode\n+  #118 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;JLorg/apache/commons/compress/archivers/sevenz/Coder;[BI)Ljava/io/InputStream;\n+  #119 = Utf8               archiveName\n+  #120 = Utf8               Ljava/lang/String;\n+  #121 = Utf8               in\n+  #122 = Utf8               Ljava/io/InputStream;\n+  #123 = Utf8               uncompressedLength\n+  #124 = Utf8               J\n+  #125 = Utf8               coder\n+  #126 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/Coder;\n+  #127 = Utf8               password\n+  #128 = Utf8               maxMemoryLimitInKb\n+  #129 = Utf8               I\n+  #130 = Utf8               propsByte\n+  #131 = Utf8               B\n+  #132 = Utf8               dictSize\n+  #133 = Utf8               memoryUsageInKb\n+  #134 = Utf8               StackMapTable\n+  #135 = Utf8               Exceptions\n+  #136 = Utf8               encode\n+  #137 = Utf8               (Ljava/io/OutputStream;Ljava/lang/Object;)Ljava/io/OutputStream;\n+  #138 = Utf8               out\n+  #139 = Utf8               Ljava/io/OutputStream;\n+  #140 = Utf8               opts\n+  #141 = Utf8               Ljava/lang/Object;\n+  #142 = Utf8               getOptionsAsProperties\n+  #143 = Utf8               (Ljava/lang/Object;)[B\n+  #144 = Utf8               options\n+  #145 = Utf8               Lorg/tukaani/xz/LZMA2Options;\n+  #146 = Utf8               props\n+  #147 = Utf8               o\n+  #148 = Utf8               getOptionsFromCoder\n+  #149 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/Coder;Ljava/io/InputStream;)Ljava/lang/Object;\n+  #150 = Utf8               pb\n+  #151 = Utf8               lp\n+  #152 = Utf8               lc\n+  #153 = Class              #154          // java/lang/IllegalArgumentException\n+  #154 = Utf8               java/lang/IllegalArgumentException\n+  #155 = Utf8               SourceFile\n+  #156 = Utf8               LZMADecoder.java\n+  #157 = Utf8               BootstrapMethods\n+  #158 = MethodHandle       6:#159        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #159 = Methodref          #160.#161     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #160 = Class              #162          // java/lang/invoke/StringConcatFactory\n+  #161 = NameAndType        #39:#163      // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #162 = Utf8               java/lang/invoke/StringConcatFactory\n+  #163 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #164 = String             #165          // Dictionary larger than 4GiB maximum size used in \\u0001\n+  #165 = Utf8               Dictionary larger than 4GiB maximum size used in \\u0001\n+  #166 = Utf8               InnerClasses\n+  #167 = Class              #168          // java/lang/invoke/MethodHandles$Lookup\n+  #168 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #169 = Class              #170          // java/lang/invoke/MethodHandles\n+  #170 = Utf8               java/lang/invoke/MethodHandles\n+  #171 = Utf8               Lookup\n {\n   org.apache.commons.compress.archivers.sevenz.LZMADecoder();\n     descriptor: ()V\n     flags: (0x0000)\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n          1: iconst_2\n          2: anewarray     #1                  // class java/lang/Class\n          5: dup\n          6: iconst_0\n-         7: ldc           #2                  // class org/tukaani/xz/LZMA2Options\n+         7: ldc           #3                  // class org/tukaani/xz/LZMA2Options\n          9: aastore\n         10: dup\n         11: iconst_1\n-        12: ldc           #3                  // class java/lang/Number\n+        12: ldc           #5                  // class java/lang/Number\n         14: aastore\n-        15: invokespecial #4                  // Method org/apache/commons/compress/archivers/sevenz/CoderBase.\"<init>\":([Ljava/lang/Class;)V\n+        15: invokespecial #7                  // Method org/apache/commons/compress/archivers/sevenz/CoderBase.\"<init>\":([Ljava/lang/Class;)V\n         18: return\n       LineNumberTable:\n         line 33: 0\n         line 34: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0  this   Lorg/apache/commons/compress/archivers/sevenz/LZMADecoder;\n \n   java.io.InputStream decode(java.lang.String, java.io.InputStream, long, org.apache.commons.compress.archivers.sevenz.Coder, byte[], int) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/io/InputStream;JLorg/apache/commons/compress/archivers/sevenz/Coder;[BI)Ljava/io/InputStream;\n     flags: (0x0000)\n     Code:\n       stack=7, locals=11, args_size=7\n          0: aload         5\n-         2: getfield      #5                  // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n+         2: getfield      #13                 // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n          5: ifnonnull     18\n-         8: new           #6                  // class java/io/IOException\n+         8: new           #19                 // class java/io/IOException\n         11: dup\n-        12: ldc           #7                  // String Missing LZMA properties\n-        14: invokespecial #8                  // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #21                 // String Missing LZMA properties\n+        14: invokespecial #23                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: aload         5\n-        20: getfield      #5                  // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n+        20: getfield      #13                 // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n         23: arraylength\n         24: iconst_1\n         25: if_icmpge     38\n-        28: new           #6                  // class java/io/IOException\n+        28: new           #19                 // class java/io/IOException\n         31: dup\n-        32: ldc           #9                  // String LZMA properties too short\n-        34: invokespecial #8                  // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        32: ldc           #26                 // String LZMA properties too short\n+        34: invokespecial #23                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         37: athrow\n         38: aload         5\n-        40: getfield      #5                  // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n+        40: getfield      #13                 // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n         43: iconst_0\n         44: baload\n         45: istore        8\n         47: aload_0\n         48: aload         5\n-        50: invokespecial #10                 // Method getDictionarySize:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n+        50: invokespecial #28                 // Method getDictionarySize:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n         53: istore        9\n         55: iload         9\n-        57: ldc           #12                 // int 2147483632\n+        57: ldc           #36                 // int 2147483632\n         59: if_icmple     76\n-        62: new           #6                  // class java/io/IOException\n+        62: new           #19                 // class java/io/IOException\n         65: dup\n         66: aload_1\n-        67: invokedynamic #13,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-        72: invokespecial #8                  // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        67: invokedynamic #37,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+        72: invokespecial #23                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         75: athrow\n         76: iload         9\n         78: iload         8\n-        80: invokestatic  #14                 // Method org/tukaani/xz/LZMAInputStream.getMemoryUsage:(IB)I\n+        80: invokestatic  #41                 // Method org/tukaani/xz/LZMAInputStream.getMemoryUsage:(IB)I\n         83: istore        10\n         85: iload         10\n         87: iload         7\n         89: if_icmple     105\n-        92: new           #15                 // class org/apache/commons/compress/MemoryLimitException\n+        92: new           #45                 // class org/apache/commons/compress/MemoryLimitException\n         95: dup\n         96: iload         10\n         98: i2l\n         99: iload         7\n-       101: invokespecial #16                 // Method org/apache/commons/compress/MemoryLimitException.\"<init>\":(JI)V\n+       101: invokespecial #47                 // Method org/apache/commons/compress/MemoryLimitException.\"<init>\":(JI)V\n        104: athrow\n-       105: new           #11                 // class org/tukaani/xz/LZMAInputStream\n+       105: new           #34                 // class org/tukaani/xz/LZMAInputStream\n        108: dup\n        109: aload_2\n        110: lload_3\n        111: iload         8\n        113: iload         9\n-       115: invokespecial #17                 // Method org/tukaani/xz/LZMAInputStream.\"<init>\":(Ljava/io/InputStream;JBI)V\n+       115: invokespecial #50                 // Method org/tukaani/xz/LZMAInputStream.\"<init>\":(Ljava/io/InputStream;JBI)V\n        118: areturn\n       LineNumberTable:\n         line 39: 0\n         line 40: 8\n         line 42: 18\n         line 43: 28\n         line 45: 38\n@@ -306,25 +306,25 @@\n       throws java.io.IOException\n \n   java.io.OutputStream encode(java.io.OutputStream, java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;Ljava/lang/Object;)Ljava/io/OutputStream;\n     flags: (0x0000)\n     Code:\n       stack=7, locals=3, args_size=3\n-         0: new           #18                 // class org/apache/commons/compress/utils/FlushShieldFilterOutputStream\n+         0: new           #53                 // class org/apache/commons/compress/utils/FlushShieldFilterOutputStream\n          3: dup\n-         4: new           #19                 // class org/tukaani/xz/LZMAOutputStream\n+         4: new           #55                 // class org/tukaani/xz/LZMAOutputStream\n          7: dup\n          8: aload_1\n          9: aload_0\n         10: aload_2\n-        11: invokespecial #20                 // Method getOptions:(Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n+        11: invokespecial #57                 // Method getOptions:(Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n         14: iconst_0\n-        15: invokespecial #21                 // Method org/tukaani/xz/LZMAOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/tukaani/xz/LZMA2Options;Z)V\n-        18: invokespecial #22                 // Method org/apache/commons/compress/utils/FlushShieldFilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+        15: invokespecial #61                 // Method org/tukaani/xz/LZMAOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/tukaani/xz/LZMA2Options;Z)V\n+        18: invokespecial #64                 // Method org/apache/commons/compress/utils/FlushShieldFilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n         21: areturn\n       LineNumberTable:\n         line 62: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0  this   Lorg/apache/commons/compress/archivers/sevenz/LZMADecoder;\n             0      22     1   out   Ljava/io/OutputStream;\n@@ -335,46 +335,46 @@\n   byte[] getOptionsAsProperties(java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;)[B\n     flags: (0x0000)\n     Code:\n       stack=5, locals=6, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #20                 // Method getOptions:(Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n+         2: invokespecial #57                 // Method getOptions:(Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n          5: astore_2\n          6: aload_2\n-         7: invokevirtual #23                 // Method org/tukaani/xz/LZMA2Options.getPb:()I\n+         7: invokevirtual #67                 // Method org/tukaani/xz/LZMA2Options.getPb:()I\n         10: iconst_5\n         11: imul\n         12: aload_2\n-        13: invokevirtual #24                 // Method org/tukaani/xz/LZMA2Options.getLp:()I\n+        13: invokevirtual #71                 // Method org/tukaani/xz/LZMA2Options.getLp:()I\n         16: iadd\n         17: bipush        9\n         19: imul\n         20: aload_2\n-        21: invokevirtual #25                 // Method org/tukaani/xz/LZMA2Options.getLc:()I\n+        21: invokevirtual #74                 // Method org/tukaani/xz/LZMA2Options.getLc:()I\n         24: iadd\n         25: i2b\n         26: istore_3\n         27: aload_2\n-        28: invokevirtual #26                 // Method org/tukaani/xz/LZMA2Options.getDictSize:()I\n+        28: invokevirtual #77                 // Method org/tukaani/xz/LZMA2Options.getDictSize:()I\n         31: istore        4\n         33: iconst_5\n         34: newarray       byte\n         36: astore        5\n         38: aload         5\n         40: iconst_0\n         41: iload_3\n         42: bastore\n         43: aload         5\n         45: iload         4\n         47: i2l\n         48: iconst_1\n         49: iconst_4\n-        50: invokestatic  #27                 // Method org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n+        50: invokestatic  #80                 // Method org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n         53: aload         5\n         55: areturn\n       LineNumberTable:\n         line 67: 0\n         line 68: 6\n         line 69: 27\n         line 70: 33\n@@ -394,33 +394,33 @@\n \n   java.lang.Object getOptionsFromCoder(org.apache.commons.compress.archivers.sevenz.Coder, java.io.InputStream) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/archivers/sevenz/Coder;Ljava/io/InputStream;)Ljava/lang/Object;\n     flags: (0x0000)\n     Code:\n       stack=3, locals=9, args_size=3\n          0: aload_1\n-         1: getfield      #5                  // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n+         1: getfield      #13                 // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n          4: ifnonnull     17\n-         7: new           #6                  // class java/io/IOException\n+         7: new           #19                 // class java/io/IOException\n         10: dup\n-        11: ldc           #7                  // String Missing LZMA properties\n-        13: invokespecial #8                  // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #21                 // String Missing LZMA properties\n+        13: invokespecial #23                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_1\n-        18: getfield      #5                  // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n+        18: getfield      #13                 // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n         21: arraylength\n         22: iconst_1\n         23: if_icmpge     36\n-        26: new           #6                  // class java/io/IOException\n+        26: new           #19                 // class java/io/IOException\n         29: dup\n-        30: ldc           #9                  // String LZMA properties too short\n-        32: invokespecial #8                  // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        30: ldc           #26                 // String LZMA properties too short\n+        32: invokespecial #23                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         35: athrow\n         36: aload_1\n-        37: getfield      #5                  // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n+        37: getfield      #13                 // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n         40: iconst_0\n         41: baload\n         42: istore_3\n         43: iload_3\n         44: sipush        255\n         47: iand\n         48: istore        4\n@@ -442,30 +442,30 @@\n         74: istore        6\n         76: iload         4\n         78: iload         6\n         80: bipush        9\n         82: imul\n         83: isub\n         84: istore        7\n-        86: new           #2                  // class org/tukaani/xz/LZMA2Options\n+        86: new           #3                  // class org/tukaani/xz/LZMA2Options\n         89: dup\n-        90: invokespecial #28                 // Method org/tukaani/xz/LZMA2Options.\"<init>\":()V\n+        90: invokespecial #86                 // Method org/tukaani/xz/LZMA2Options.\"<init>\":()V\n         93: astore        8\n         95: aload         8\n         97: iload         5\n-        99: invokevirtual #29                 // Method org/tukaani/xz/LZMA2Options.setPb:(I)V\n+        99: invokevirtual #89                 // Method org/tukaani/xz/LZMA2Options.setPb:(I)V\n        102: aload         8\n        104: iload         7\n        106: iload         6\n-       108: invokevirtual #30                 // Method org/tukaani/xz/LZMA2Options.setLcLp:(II)V\n+       108: invokevirtual #93                 // Method org/tukaani/xz/LZMA2Options.setLcLp:(II)V\n        111: aload         8\n        113: aload_0\n        114: aload_1\n-       115: invokespecial #10                 // Method getDictionarySize:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n-       118: invokevirtual #31                 // Method org/tukaani/xz/LZMA2Options.setDictSize:(I)V\n+       115: invokespecial #28                 // Method getDictionarySize:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n+       118: invokevirtual #97                 // Method org/tukaani/xz/LZMA2Options.setDictSize:(I)V\n        121: aload         8\n        123: areturn\n       LineNumberTable:\n         line 78: 0\n         line 79: 7\n         line 81: 17\n         line 82: 26\n@@ -499,18 +499,18 @@\n \n   private int getDictionarySize(org.apache.commons.compress.archivers.sevenz.Coder) throws java.lang.IllegalArgumentException;\n     descriptor: (Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n-         1: getfield      #5                  // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n+         1: getfield      #13                 // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n          4: iconst_1\n          5: iconst_4\n-         6: invokestatic  #32                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n+         6: invokestatic  #100                // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n          9: l2i\n         10: ireturn\n       LineNumberTable:\n         line 98: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/archivers/sevenz/LZMADecoder;\n@@ -520,28 +520,28 @@\n \n   private org.tukaani.xz.LZMA2Options getOptions(java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_1\n-         1: instanceof    #2                  // class org/tukaani/xz/LZMA2Options\n+         1: instanceof    #3                  // class org/tukaani/xz/LZMA2Options\n          4: ifeq          12\n          7: aload_1\n-         8: checkcast     #2                  // class org/tukaani/xz/LZMA2Options\n+         8: checkcast     #3                  // class org/tukaani/xz/LZMA2Options\n         11: areturn\n-        12: new           #2                  // class org/tukaani/xz/LZMA2Options\n+        12: new           #3                  // class org/tukaani/xz/LZMA2Options\n         15: dup\n-        16: invokespecial #28                 // Method org/tukaani/xz/LZMA2Options.\"<init>\":()V\n+        16: invokespecial #86                 // Method org/tukaani/xz/LZMA2Options.\"<init>\":()V\n         19: astore_2\n         20: aload_2\n         21: aload_0\n         22: aload_1\n-        23: invokespecial #33                 // Method numberOptionOrDefault:(Ljava/lang/Object;)I\n-        26: invokevirtual #31                 // Method org/tukaani/xz/LZMA2Options.setDictSize:(I)V\n+        23: invokespecial #104                // Method numberOptionOrDefault:(Ljava/lang/Object;)I\n+        26: invokevirtual #97                 // Method org/tukaani/xz/LZMA2Options.setDictSize:(I)V\n         29: aload_2\n         30: areturn\n       LineNumberTable:\n         line 102: 0\n         line 103: 7\n         line 105: 12\n         line 106: 20\n@@ -558,24 +558,24 @@\n \n   private int numberOptionOrDefault(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: ldc           #34                 // int 8388608\n-         3: invokestatic  #35                 // Method numberOptionOrDefault:(Ljava/lang/Object;I)I\n+         1: ldc           #108                // int 8388608\n+         3: invokestatic  #109                // Method numberOptionOrDefault:(Ljava/lang/Object;I)I\n          6: ireturn\n       LineNumberTable:\n         line 111: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/compress/archivers/sevenz/LZMADecoder;\n             0       7     1  opts   Ljava/lang/Object;\n }\n SourceFile: \"LZMADecoder.java\"\n-InnerClasses:\n-  public static final #166= #165 of #169; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #104 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  0: #158 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #105 Dictionary larger than 4GiB maximum size used in \\u0001\n+      #164 Dictionary larger than 4GiB maximum size used in \\u0001\n+InnerClasses:\n+  public static final #171= #167 of #169; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
