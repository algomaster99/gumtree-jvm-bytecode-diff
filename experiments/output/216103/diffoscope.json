{"diffoscope-json-version": 1, "source1": "first/NEW.class", "source2": "second/NEW.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -4,29 +4,29 @@\n import org.apache.bcel.ExceptionConst;\n \n public class NEW extends CPInstruction implements LoadClass, AllocationInstruction, ExceptionThrower, StackProducer\n {\n     NEW() {\n     }\n     \n-    public NEW(final int index) {\n-        super((short)187, index);\n+    public NEW(final int n) {\n+        super((short)187, n);\n     }\n     \n-    public void accept(final Visitor v) {\n-        v.visitLoadClass((LoadClass)this);\n-        v.visitAllocationInstruction((AllocationInstruction)this);\n-        v.visitExceptionThrower((ExceptionThrower)this);\n-        v.visitStackProducer((StackProducer)this);\n-        v.visitTypedInstruction((TypedInstruction)this);\n-        v.visitCPInstruction((CPInstruction)this);\n-        v.visitNEW(this);\n+    public void accept(final Visitor visitor) {\n+        visitor.visitLoadClass((LoadClass)this);\n+        visitor.visitAllocationInstruction((AllocationInstruction)this);\n+        visitor.visitExceptionThrower((ExceptionThrower)this);\n+        visitor.visitStackProducer((StackProducer)this);\n+        visitor.visitTypedInstruction((TypedInstruction)this);\n+        visitor.visitCPInstruction((CPInstruction)this);\n+        visitor.visitNEW(this);\n     }\n     \n     public Class<?>[] getExceptions() {\n         return ExceptionConst.createExceptions(ExceptionConst.EXCS.EXCS_CLASS_AND_INTERFACE_RESOLUTION, new Class[] { ExceptionConst.ILLEGAL_ACCESS_ERROR, ExceptionConst.INSTANTIATION_ERROR });\n     }\n     \n-    public ObjectType getLoadClassType(final ConstantPoolGen cpg) {\n-        return (ObjectType)this.getType(cpg);\n+    public ObjectType getLoadClassType(final ConstantPoolGen constantPoolGen) {\n+        return (ObjectType)this.getType(constantPoolGen);\n     }\n }\n"}]}
