{"diffoscope-json-version": 1, "source1": "first/Deflate64CompressorInputStream.class", "source2": "second/Deflate64CompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,116 +1,113 @@\n-  SHA-256 checksum 6a7b38a3679a4eddaa279c5976b7cd0a14a635a1c8f8ce55685db7de922d1aac\n+  SHA-256 checksum 7567423a7567d66b438160bfef6b35d0f0be3ae03da39b1f589c108adcc92b79\n   Compiled from \"Deflate64CompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream\n   minor version: 0\n-  major version: 53\n+  major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #18                         // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream\n-  super_class: #19                        // org/apache/commons/compress/compressors/CompressorInputStream\n-  interfaces: 0, fields: 3, methods: 7, attributes: 3\n+  this_class: #23                         // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream\n+  super_class: #24                        // org/apache/commons/compress/compressors/CompressorInputStream\n+  interfaces: 0, fields: 3, methods: 7, attributes: 1\n Constant pool:\n-    #1 = Class              #52           // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-    #2 = Methodref          #1.#53        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.\"<init>\":(Ljava/io/InputStream;)V\n-    #3 = Methodref          #18.#54       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.\"<init>\":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)V\n-    #4 = Fieldref           #18.#55       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.originalStream:Ljava/io/InputStream;\n-    #5 = Methodref          #19.#56       // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n-    #6 = Fieldref           #18.#57       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.oneByte:[B\n-    #7 = Fieldref           #18.#58       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n-    #8 = Methodref          #18.#59       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.read:([B)I\n-    #9 = Class              #60           // java/lang/IllegalStateException\n-   #10 = InvokeDynamic      #0:#64        // #0:makeConcatWithConstants:(I)Ljava/lang/String;\n-   #11 = Methodref          #9.#65        // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #12 = Methodref          #1.#66        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.decode:([BII)I\n-   #13 = Methodref          #18.#67       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.count:(I)V\n-   #14 = Methodref          #18.#68       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.closeDecoder:()V\n-   #15 = Methodref          #1.#69        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.available:()I\n-   #16 = Methodref          #70.#71       // java/io/InputStream.close:()V\n-   #17 = Methodref          #72.#73       // org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n-   #18 = Class              #74           // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream\n-   #19 = Class              #75           // org/apache/commons/compress/compressors/CompressorInputStream\n-   #20 = Utf8               originalStream\n-   #21 = Utf8               Ljava/io/InputStream;\n-   #22 = Utf8               decoder\n-   #23 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n-   #24 = Utf8               oneByte\n-   #25 = Utf8               [B\n-   #26 = Utf8               <init>\n-   #27 = Utf8               (Ljava/io/InputStream;)V\n-   #28 = Utf8               Code\n-   #29 = Utf8               LineNumberTable\n-   #30 = Utf8               LocalVariableTable\n-   #31 = Utf8               this\n-   #32 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream;\n-   #33 = Utf8               in\n-   #34 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)V\n-   #35 = Utf8               read\n-   #36 = Utf8               ()I\n-   #37 = Utf8               r\n-   #38 = Utf8               I\n-   #39 = Utf8               StackMapTable\n-   #40 = Utf8               Exceptions\n-   #41 = Class              #76           // java/io/IOException\n-   #42 = Utf8               ([BII)I\n-   #43 = Utf8               b\n-   #44 = Utf8               off\n-   #45 = Utf8               len\n-   #46 = Utf8               available\n-   #47 = Utf8               close\n-   #48 = Utf8               ()V\n-   #49 = Utf8               closeDecoder\n-   #50 = Utf8               SourceFile\n-   #51 = Utf8               Deflate64CompressorInputStream.java\n-   #52 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-   #53 = NameAndType        #26:#27       // \"<init>\":(Ljava/io/InputStream;)V\n-   #54 = NameAndType        #26:#34       // \"<init>\":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)V\n-   #55 = NameAndType        #20:#21       // originalStream:Ljava/io/InputStream;\n-   #56 = NameAndType        #26:#48       // \"<init>\":()V\n-   #57 = NameAndType        #24:#25       // oneByte:[B\n-   #58 = NameAndType        #22:#23       // decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n-   #59 = NameAndType        #35:#77       // read:([B)I\n-   #60 = Utf8               java/lang/IllegalStateException\n-   #61 = Utf8               BootstrapMethods\n-   #62 = MethodHandle       6:#78         // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-   #63 = String             #79           // Invalid return value from read: \\u0001\n-   #64 = NameAndType        #80:#81       // makeConcatWithConstants:(I)Ljava/lang/String;\n-   #65 = NameAndType        #26:#82       // \"<init>\":(Ljava/lang/String;)V\n-   #66 = NameAndType        #83:#42       // decode:([BII)I\n-   #67 = NameAndType        #84:#85       // count:(I)V\n-   #68 = NameAndType        #49:#48       // closeDecoder:()V\n-   #69 = NameAndType        #46:#36       // available:()I\n-   #70 = Class              #86           // java/io/InputStream\n-   #71 = NameAndType        #47:#48       // close:()V\n-   #72 = Class              #87           // org/apache/commons/compress/utils/IOUtils\n-   #73 = NameAndType        #88:#89       // closeQuietly:(Ljava/io/Closeable;)V\n-   #74 = Utf8               org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream\n-   #75 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n-   #76 = Utf8               java/io/IOException\n-   #77 = Utf8               ([B)I\n-   #78 = Methodref          #90.#91       // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-   #79 = Utf8               Invalid return value from read: \\u0001\n-   #80 = Utf8               makeConcatWithConstants\n-   #81 = Utf8               (I)Ljava/lang/String;\n-   #82 = Utf8               (Ljava/lang/String;)V\n-   #83 = Utf8               decode\n-   #84 = Utf8               count\n-   #85 = Utf8               (I)V\n-   #86 = Utf8               java/io/InputStream\n-   #87 = Utf8               org/apache/commons/compress/utils/IOUtils\n-   #88 = Utf8               closeQuietly\n-   #89 = Utf8               (Ljava/io/Closeable;)V\n-   #90 = Class              #92           // java/lang/invoke/StringConcatFactory\n-   #91 = NameAndType        #80:#96       // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-   #92 = Utf8               java/lang/invoke/StringConcatFactory\n-   #93 = Class              #98           // java/lang/invoke/MethodHandles$Lookup\n-   #94 = Utf8               Lookup\n-   #95 = Utf8               InnerClasses\n-   #96 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-   #97 = Class              #99           // java/lang/invoke/MethodHandles\n-   #98 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-   #99 = Utf8               java/lang/invoke/MethodHandles\n+   #1 = Class              #57            // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+   #2 = Methodref          #1.#58         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.\"<init>\":(Ljava/io/InputStream;)V\n+   #3 = Methodref          #23.#59        // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.\"<init>\":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)V\n+   #4 = Fieldref           #23.#60        // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.originalStream:Ljava/io/InputStream;\n+   #5 = Methodref          #24.#61        // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+   #6 = Fieldref           #23.#62        // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.oneByte:[B\n+   #7 = Fieldref           #23.#63        // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n+   #8 = Methodref          #23.#64        // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.read:([B)I\n+   #9 = Class              #65            // java/lang/IllegalStateException\n+  #10 = Class              #66            // java/lang/StringBuilder\n+  #11 = Methodref          #10.#61        // java/lang/StringBuilder.\"<init>\":()V\n+  #12 = String             #67            // Invalid return value from read:\n+  #13 = Methodref          #10.#68        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #14 = Methodref          #10.#69        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #15 = Methodref          #10.#70        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #16 = Methodref          #9.#71         // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+  #17 = Methodref          #1.#72         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.decode:([BII)I\n+  #18 = Methodref          #23.#73        // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.count:(I)V\n+  #19 = Methodref          #23.#74        // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.closeDecoder:()V\n+  #20 = Methodref          #1.#75         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.available:()I\n+  #21 = Methodref          #76.#77        // java/io/InputStream.close:()V\n+  #22 = Methodref          #78.#79        // org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n+  #23 = Class              #80            // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream\n+  #24 = Class              #81            // org/apache/commons/compress/compressors/CompressorInputStream\n+  #25 = Utf8               originalStream\n+  #26 = Utf8               Ljava/io/InputStream;\n+  #27 = Utf8               decoder\n+  #28 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n+  #29 = Utf8               oneByte\n+  #30 = Utf8               [B\n+  #31 = Utf8               <init>\n+  #32 = Utf8               (Ljava/io/InputStream;)V\n+  #33 = Utf8               Code\n+  #34 = Utf8               LineNumberTable\n+  #35 = Utf8               LocalVariableTable\n+  #36 = Utf8               this\n+  #37 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream;\n+  #38 = Utf8               in\n+  #39 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)V\n+  #40 = Utf8               read\n+  #41 = Utf8               ()I\n+  #42 = Utf8               r\n+  #43 = Utf8               I\n+  #44 = Utf8               StackMapTable\n+  #45 = Utf8               Exceptions\n+  #46 = Class              #82            // java/io/IOException\n+  #47 = Utf8               ([BII)I\n+  #48 = Utf8               b\n+  #49 = Utf8               off\n+  #50 = Utf8               len\n+  #51 = Utf8               available\n+  #52 = Utf8               close\n+  #53 = Utf8               ()V\n+  #54 = Utf8               closeDecoder\n+  #55 = Utf8               SourceFile\n+  #56 = Utf8               Deflate64CompressorInputStream.java\n+  #57 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+  #58 = NameAndType        #31:#32        // \"<init>\":(Ljava/io/InputStream;)V\n+  #59 = NameAndType        #31:#39        // \"<init>\":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)V\n+  #60 = NameAndType        #25:#26        // originalStream:Ljava/io/InputStream;\n+  #61 = NameAndType        #31:#53        // \"<init>\":()V\n+  #62 = NameAndType        #29:#30        // oneByte:[B\n+  #63 = NameAndType        #27:#28        // decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n+  #64 = NameAndType        #40:#83        // read:([B)I\n+  #65 = Utf8               java/lang/IllegalStateException\n+  #66 = Utf8               java/lang/StringBuilder\n+  #67 = Utf8               Invalid return value from read:\n+  #68 = NameAndType        #84:#85        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #69 = NameAndType        #84:#86        // append:(I)Ljava/lang/StringBuilder;\n+  #70 = NameAndType        #87:#88        // toString:()Ljava/lang/String;\n+  #71 = NameAndType        #31:#89        // \"<init>\":(Ljava/lang/String;)V\n+  #72 = NameAndType        #90:#47        // decode:([BII)I\n+  #73 = NameAndType        #91:#92        // count:(I)V\n+  #74 = NameAndType        #54:#53        // closeDecoder:()V\n+  #75 = NameAndType        #51:#41        // available:()I\n+  #76 = Class              #93            // java/io/InputStream\n+  #77 = NameAndType        #52:#53        // close:()V\n+  #78 = Class              #94            // org/apache/commons/compress/utils/IOUtils\n+  #79 = NameAndType        #95:#96        // closeQuietly:(Ljava/io/Closeable;)V\n+  #80 = Utf8               org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream\n+  #81 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n+  #82 = Utf8               java/io/IOException\n+  #83 = Utf8               ([B)I\n+  #84 = Utf8               append\n+  #85 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #86 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #87 = Utf8               toString\n+  #88 = Utf8               ()Ljava/lang/String;\n+  #89 = Utf8               (Ljava/lang/String;)V\n+  #90 = Utf8               decode\n+  #91 = Utf8               count\n+  #92 = Utf8               (I)V\n+  #93 = Utf8               java/io/InputStream\n+  #94 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #95 = Utf8               closeQuietly\n+  #96 = Utf8               (Ljava/io/Closeable;)V\n {\n   private java.io.InputStream originalStream;\n     descriptor: Ljava/io/InputStream;\n     flags: (0x0002) ACC_PRIVATE\n \n   private org.apache.commons.compress.compressors.deflate64.HuffmanDecoder decoder;\n     descriptor: Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n@@ -169,15 +166,15 @@\n             0      17     0  this   Lorg/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream;\n             0      17     1 decoder   Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=3, locals=2, args_size=1\n+      stack=4, locals=2, args_size=1\n          0: aload_0\n          1: aload_0\n          2: getfield      #6                  // Field oneByte:[B\n          5: invokevirtual #8                  // Method read:([B)I\n          8: istore_1\n          9: iload_1\n         10: tableswitch   { // -1 to 1\n@@ -194,29 +191,35 @@\n         45: iand\n         46: ireturn\n         47: iconst_m1\n         48: ireturn\n         49: goto          0\n         52: new           #9                  // class java/lang/IllegalStateException\n         55: dup\n-        56: iload_1\n-        57: invokedynamic #10,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;\n-        62: invokespecial #11                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-        65: athrow\n+        56: new           #10                 // class java/lang/StringBuilder\n+        59: dup\n+        60: invokespecial #11                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        63: ldc           #12                 // String Invalid return value from read:\n+        65: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        68: iload_1\n+        69: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        72: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        75: invokespecial #16                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        78: athrow\n       LineNumberTable:\n         line 57: 0\n         line 58: 9\n         line 60: 36\n         line 62: 47\n         line 64: 49\n         line 66: 52\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            9      57     1     r   I\n-            0      66     0  this   Lorg/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream;\n+            9      70     1     r   I\n+            0      79     0  this   Lorg/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream;\n       StackMapTable: number_of_entries = 5\n         frame_type = 0 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 35\n           locals = [ int ]\n         frame_type = 10 /* same */\n         frame_type = 1 /* same */\n@@ -235,24 +238,24 @@\n          4: getfield      #7                  // Field decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n          7: ifnull        38\n         10: aload_0\n         11: getfield      #7                  // Field decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n         14: aload_1\n         15: iload_2\n         16: iload_3\n-        17: invokevirtual #12                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.decode:([BII)I\n+        17: invokevirtual #17                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.decode:([BII)I\n         20: istore        4\n         22: aload_0\n         23: iload         4\n-        25: invokevirtual #13                 // Method count:(I)V\n+        25: invokevirtual #18                 // Method count:(I)V\n         28: iload         4\n         30: iconst_m1\n         31: if_icmpne     38\n         34: aload_0\n-        35: invokespecial #14                 // Method closeDecoder:()V\n+        35: invokespecial #19                 // Method closeDecoder:()V\n         38: iload         4\n         40: ireturn\n       LineNumberTable:\n         line 76: 0\n         line 77: 3\n         line 78: 10\n         line 79: 22\n@@ -279,15 +282,15 @@\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #7                  // Field decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n          4: ifnull        17\n          7: aload_0\n          8: getfield      #7                  // Field decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n-        11: invokevirtual #15                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.available:()I\n+        11: invokevirtual #20                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.available:()I\n         14: goto          18\n         17: iconst_0\n         18: ireturn\n       LineNumberTable:\n         line 89: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -301,21 +304,21 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #14                 // Method closeDecoder:()V\n+         1: invokespecial #19                 // Method closeDecoder:()V\n          4: aload_0\n          5: getfield      #4                  // Field originalStream:Ljava/io/InputStream;\n          8: ifnull        23\n         11: aload_0\n         12: getfield      #4                  // Field originalStream:Ljava/io/InputStream;\n-        15: invokevirtual #16                 // Method java/io/InputStream.close:()V\n+        15: invokevirtual #21                 // Method java/io/InputStream.close:()V\n         18: aload_0\n         19: aconst_null\n         20: putfield      #4                  // Field originalStream:Ljava/io/InputStream;\n         23: return\n       LineNumberTable:\n         line 94: 0\n         line 95: 4\n@@ -333,27 +336,21 @@\n   private void closeDecoder();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #7                  // Field decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n-         4: invokestatic  #17                 // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n+         4: invokestatic  #22                 // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n          7: aload_0\n          8: aconst_null\n          9: putfield      #7                  // Field decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n         12: return\n       LineNumberTable:\n         line 102: 0\n         line 103: 7\n         line 104: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream;\n }\n SourceFile: \"Deflate64CompressorInputStream.java\"\n-InnerClasses:\n-  public static final #94= #93 of #97;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n-BootstrapMethods:\n-  0: #62 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #63 Invalid return value from read: \\u0001\n"}]}
