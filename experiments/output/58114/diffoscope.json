{"diffoscope-json-version": 1, "source1": "first/ProxyOutputStream.class", "source2": "second/ProxyOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,392 +1,387 @@\n-  SHA-256 checksum 61935aa4c4b88e0665b01091baa2621c21cf468da858140dd08f638ea7593da9\n+  SHA-256 checksum 90899ceb0d7962c2c6f8c61253692114bae8ca3642928eeba4f3b2f9bd413cb3\n   Compiled from \"ProxyOutputStream.java\"\n public class org.apache.commons.io.output.ProxyOutputStream extends java.io.FilterOutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #14                         // org/apache/commons/io/output/ProxyOutputStream\n-  super_class: #15                        // java/io/FilterOutputStream\n+  this_class: #1                          // org/apache/commons/io/output/ProxyOutputStream\n+  super_class: #3                         // java/io/FilterOutputStream\n   interfaces: 0, fields: 0, methods: 10, attributes: 3\n Constant pool:\n-   #1 = Methodref          #15.#52        // java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #2 = Methodref          #14.#53        // org/apache/commons/io/output/ProxyOutputStream.beforeWrite:(I)V\n-   #3 = Fieldref           #14.#54        // org/apache/commons/io/output/ProxyOutputStream.out:Ljava/io/OutputStream;\n-   #4 = Methodref          #55.#56        // java/io/OutputStream.write:(I)V\n-   #5 = Methodref          #14.#57        // org/apache/commons/io/output/ProxyOutputStream.afterWrite:(I)V\n-   #6 = Class              #58            // java/io/IOException\n-   #7 = Methodref          #14.#59        // org/apache/commons/io/output/ProxyOutputStream.handleIOException:(Ljava/io/IOException;)V\n-   #8 = Methodref          #60.#61        // org/apache/commons/io/IOUtils.length:([B)I\n-   #9 = Methodref          #55.#62        // java/io/OutputStream.write:([B)V\n-  #10 = Methodref          #55.#63        // java/io/OutputStream.write:([BII)V\n-  #11 = Methodref          #55.#64        // java/io/OutputStream.flush:()V\n-  #12 = InvokeDynamic      #0:#70         // #0:accept:(Lorg/apache/commons/io/output/ProxyOutputStream;)Lorg/apache/commons/io/function/IOConsumer;\n-  #13 = Methodref          #60.#71        // org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n-  #14 = Class              #72            // org/apache/commons/io/output/ProxyOutputStream\n-  #15 = Class              #73            // java/io/FilterOutputStream\n-  #16 = Utf8               <init>\n-  #17 = Utf8               (Ljava/io/OutputStream;)V\n-  #18 = Utf8               Code\n-  #19 = Utf8               LineNumberTable\n-  #20 = Utf8               LocalVariableTable\n-  #21 = Utf8               this\n-  #22 = Utf8               Lorg/apache/commons/io/output/ProxyOutputStream;\n-  #23 = Utf8               proxy\n-  #24 = Utf8               Ljava/io/OutputStream;\n-  #25 = Utf8               write\n-  #26 = Utf8               (I)V\n-  #27 = Utf8               e\n-  #28 = Utf8               Ljava/io/IOException;\n-  #29 = Utf8               idx\n-  #30 = Utf8               I\n-  #31 = Utf8               StackMapTable\n-  #32 = Class              #58            // java/io/IOException\n-  #33 = Utf8               Exceptions\n-  #34 = Utf8               ([B)V\n-  #35 = Utf8               len\n-  #36 = Utf8               bts\n-  #37 = Utf8               [B\n-  #38 = Utf8               ([BII)V\n-  #39 = Utf8               st\n-  #40 = Utf8               end\n-  #41 = Utf8               flush\n-  #42 = Utf8               ()V\n-  #43 = Utf8               close\n-  #44 = Utf8               beforeWrite\n-  #45 = Utf8               n\n-  #46 = Utf8               afterWrite\n-  #47 = Utf8               handleIOException\n-  #48 = Utf8               (Ljava/io/IOException;)V\n-  #49 = Utf8               lambda$close$0\n-  #50 = Utf8               SourceFile\n-  #51 = Utf8               ProxyOutputStream.java\n-  #52 = NameAndType        #16:#17        // \"<init>\":(Ljava/io/OutputStream;)V\n-  #53 = NameAndType        #44:#26        // beforeWrite:(I)V\n-  #54 = NameAndType        #74:#24        // out:Ljava/io/OutputStream;\n-  #55 = Class              #75            // java/io/OutputStream\n-  #56 = NameAndType        #25:#26        // write:(I)V\n-  #57 = NameAndType        #46:#26        // afterWrite:(I)V\n-  #58 = Utf8               java/io/IOException\n-  #59 = NameAndType        #47:#48        // handleIOException:(Ljava/io/IOException;)V\n-  #60 = Class              #76            // org/apache/commons/io/IOUtils\n-  #61 = NameAndType        #77:#78        // length:([B)I\n-  #62 = NameAndType        #25:#34        // write:([B)V\n-  #63 = NameAndType        #25:#38        // write:([BII)V\n-  #64 = NameAndType        #41:#42        // flush:()V\n-  #65 = Utf8               BootstrapMethods\n-  #66 = MethodHandle       6:#79          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #67 = MethodType         #80            //  (Ljava/lang/Object;)V\n-  #68 = MethodHandle       7:#81          // REF_invokeSpecial org/apache/commons/io/output/ProxyOutputStream.lambda$close$0:(Ljava/io/IOException;)V\n-  #69 = MethodType         #48            //  (Ljava/io/IOException;)V\n-  #70 = NameAndType        #82:#83        // accept:(Lorg/apache/commons/io/output/ProxyOutputStream;)Lorg/apache/commons/io/function/IOConsumer;\n-  #71 = NameAndType        #43:#84        // close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n-  #72 = Utf8               org/apache/commons/io/output/ProxyOutputStream\n-  #73 = Utf8               java/io/FilterOutputStream\n-  #74 = Utf8               out\n-  #75 = Utf8               java/io/OutputStream\n-  #76 = Utf8               org/apache/commons/io/IOUtils\n-  #77 = Utf8               length\n-  #78 = Utf8               ([B)I\n-  #79 = Methodref          #85.#86        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #80 = Utf8               (Ljava/lang/Object;)V\n-  #81 = Methodref          #14.#87        // org/apache/commons/io/output/ProxyOutputStream.lambda$close$0:(Ljava/io/IOException;)V\n-  #82 = Utf8               accept\n-  #83 = Utf8               (Lorg/apache/commons/io/output/ProxyOutputStream;)Lorg/apache/commons/io/function/IOConsumer;\n-  #84 = Utf8               (Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n-  #85 = Class              #88            // java/lang/invoke/LambdaMetafactory\n-  #86 = NameAndType        #89:#93        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #87 = NameAndType        #49:#48        // lambda$close$0:(Ljava/io/IOException;)V\n-  #88 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #89 = Utf8               metafactory\n-  #90 = Class              #95            // java/lang/invoke/MethodHandles$Lookup\n-  #91 = Utf8               Lookup\n-  #92 = Utf8               InnerClasses\n-  #93 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #94 = Class              #96            // java/lang/invoke/MethodHandles\n-  #95 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #96 = Utf8               java/lang/invoke/MethodHandles\n+   #1 = Class              #2             // org/apache/commons/io/output/ProxyOutputStream\n+   #2 = Utf8               org/apache/commons/io/output/ProxyOutputStream\n+   #3 = Class              #4             // java/io/FilterOutputStream\n+   #4 = Utf8               java/io/FilterOutputStream\n+   #5 = Utf8               <init>\n+   #6 = Utf8               (Ljava/io/OutputStream;)V\n+   #7 = Utf8               Code\n+   #8 = Methodref          #3.#9          // java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+   #9 = NameAndType        #5:#6          // \"<init>\":(Ljava/io/OutputStream;)V\n+  #10 = Utf8               LineNumberTable\n+  #11 = Utf8               LocalVariableTable\n+  #12 = Utf8               this\n+  #13 = Utf8               Lorg/apache/commons/io/output/ProxyOutputStream;\n+  #14 = Utf8               proxy\n+  #15 = Utf8               Ljava/io/OutputStream;\n+  #16 = Utf8               write\n+  #17 = Utf8               (I)V\n+  #18 = Utf8               Exceptions\n+  #19 = Class              #20            // java/io/IOException\n+  #20 = Utf8               java/io/IOException\n+  #21 = Methodref          #1.#22         // org/apache/commons/io/output/ProxyOutputStream.beforeWrite:(I)V\n+  #22 = NameAndType        #23:#17        // beforeWrite:(I)V\n+  #23 = Utf8               beforeWrite\n+  #24 = Fieldref           #1.#25         // org/apache/commons/io/output/ProxyOutputStream.out:Ljava/io/OutputStream;\n+  #25 = NameAndType        #26:#15        // out:Ljava/io/OutputStream;\n+  #26 = Utf8               out\n+  #27 = Methodref          #28.#30        // java/io/OutputStream.write:(I)V\n+  #28 = Class              #29            // java/io/OutputStream\n+  #29 = Utf8               java/io/OutputStream\n+  #30 = NameAndType        #16:#17        // write:(I)V\n+  #31 = Methodref          #1.#32         // org/apache/commons/io/output/ProxyOutputStream.afterWrite:(I)V\n+  #32 = NameAndType        #33:#17        // afterWrite:(I)V\n+  #33 = Utf8               afterWrite\n+  #34 = Methodref          #1.#35         // org/apache/commons/io/output/ProxyOutputStream.handleIOException:(Ljava/io/IOException;)V\n+  #35 = NameAndType        #36:#37        // handleIOException:(Ljava/io/IOException;)V\n+  #36 = Utf8               handleIOException\n+  #37 = Utf8               (Ljava/io/IOException;)V\n+  #38 = Utf8               idx\n+  #39 = Utf8               I\n+  #40 = Utf8               e\n+  #41 = Utf8               Ljava/io/IOException;\n+  #42 = Utf8               StackMapTable\n+  #43 = Utf8               ([B)V\n+  #44 = Methodref          #45.#47        // org/apache/commons/io/IOUtils.length:([B)I\n+  #45 = Class              #46            // org/apache/commons/io/IOUtils\n+  #46 = Utf8               org/apache/commons/io/IOUtils\n+  #47 = NameAndType        #48:#49        // length:([B)I\n+  #48 = Utf8               length\n+  #49 = Utf8               ([B)I\n+  #50 = Methodref          #28.#51        // java/io/OutputStream.write:([B)V\n+  #51 = NameAndType        #16:#43        // write:([B)V\n+  #52 = Utf8               bts\n+  #53 = Utf8               [B\n+  #54 = Utf8               len\n+  #55 = Utf8               ([BII)V\n+  #56 = Methodref          #28.#57        // java/io/OutputStream.write:([BII)V\n+  #57 = NameAndType        #16:#55        // write:([BII)V\n+  #58 = Utf8               st\n+  #59 = Utf8               end\n+  #60 = Utf8               flush\n+  #61 = Utf8               ()V\n+  #62 = Methodref          #28.#63        // java/io/OutputStream.flush:()V\n+  #63 = NameAndType        #60:#61        // flush:()V\n+  #64 = Utf8               close\n+  #65 = NameAndType        #66:#67        // accept:(Lorg/apache/commons/io/output/ProxyOutputStream;)Lorg/apache/commons/io/function/IOConsumer;\n+  #66 = Utf8               accept\n+  #67 = Utf8               (Lorg/apache/commons/io/output/ProxyOutputStream;)Lorg/apache/commons/io/function/IOConsumer;\n+  #68 = InvokeDynamic      #0:#65         // #0:accept:(Lorg/apache/commons/io/output/ProxyOutputStream;)Lorg/apache/commons/io/function/IOConsumer;\n+  #69 = Methodref          #45.#70        // org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+  #70 = NameAndType        #64:#71        // close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+  #71 = Utf8               (Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+  #72 = Utf8               n\n+  #73 = Utf8               lambda$0\n+  #74 = Utf8               SourceFile\n+  #75 = Utf8               ProxyOutputStream.java\n+  #76 = Utf8               BootstrapMethods\n+  #77 = Methodref          #78.#80        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #78 = Class              #79            // java/lang/invoke/LambdaMetafactory\n+  #79 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #80 = NameAndType        #81:#82        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #81 = Utf8               metafactory\n+  #82 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #83 = MethodHandle       6:#77          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #84 = Utf8               (Ljava/lang/Object;)V\n+  #85 = MethodType         #84            //  (Ljava/lang/Object;)V\n+  #86 = Methodref          #1.#87         // org/apache/commons/io/output/ProxyOutputStream.lambda$0:(Ljava/io/IOException;)V\n+  #87 = NameAndType        #73:#37        // lambda$0:(Ljava/io/IOException;)V\n+  #88 = MethodHandle       7:#86          // REF_invokeSpecial org/apache/commons/io/output/ProxyOutputStream.lambda$0:(Ljava/io/IOException;)V\n+  #89 = MethodType         #37            //  (Ljava/io/IOException;)V\n+  #90 = Utf8               InnerClasses\n+  #91 = Class              #92            // java/lang/invoke/MethodHandles$Lookup\n+  #92 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #93 = Class              #94            // java/lang/invoke/MethodHandles\n+  #94 = Utf8               java/lang/invoke/MethodHandles\n+  #95 = Utf8               Lookup\n {\n   public org.apache.commons.io.output.ProxyOutputStream(java.io.OutputStream);\n     descriptor: (Ljava/io/OutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #1                  // Method java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+         2: invokespecial #8                  // Method java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n          5: return\n       LineNumberTable:\n         line 43: 0\n         line 45: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/output/ProxyOutputStream;\n             0       6     1 proxy   Ljava/io/OutputStream;\n \n   public void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #2                  // Method beforeWrite:(I)V\n+         2: invokevirtual #21                 // Method beforeWrite:(I)V\n          5: aload_0\n-         6: getfield      #3                  // Field out:Ljava/io/OutputStream;\n+         6: getfield      #24                 // Field out:Ljava/io/OutputStream;\n          9: iload_1\n-        10: invokevirtual #4                  // Method java/io/OutputStream.write:(I)V\n+        10: invokevirtual #27                 // Method java/io/OutputStream.write:(I)V\n         13: aload_0\n         14: iconst_1\n-        15: invokevirtual #5                  // Method afterWrite:(I)V\n+        15: invokevirtual #31                 // Method afterWrite:(I)V\n         18: goto          27\n         21: astore_2\n         22: aload_0\n         23: aload_2\n-        24: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V\n+        24: invokevirtual #34                 // Method handleIOException:(Ljava/io/IOException;)V\n         27: return\n       Exception table:\n          from    to  target type\n              0    18    21   Class java/io/IOException\n       LineNumberTable:\n         line 55: 0\n         line 56: 5\n         line 57: 13\n-        line 60: 18\n-        line 58: 21\n+        line 58: 18\n         line 59: 22\n         line 61: 27\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           22       5     2     e   Ljava/io/IOException;\n             0      28     0  this   Lorg/apache/commons/io/output/ProxyOutputStream;\n             0      28     1   idx   I\n+           22       5     2     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 85 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 5 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(byte[]) throws java.io.IOException;\n     descriptor: ([B)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_1\n-         1: invokestatic  #8                  // Method org/apache/commons/io/IOUtils.length:([B)I\n+         1: invokestatic  #44                 // Method org/apache/commons/io/IOUtils.length:([B)I\n          4: istore_2\n          5: aload_0\n          6: iload_2\n-         7: invokevirtual #2                  // Method beforeWrite:(I)V\n+         7: invokevirtual #21                 // Method beforeWrite:(I)V\n         10: aload_0\n-        11: getfield      #3                  // Field out:Ljava/io/OutputStream;\n+        11: getfield      #24                 // Field out:Ljava/io/OutputStream;\n         14: aload_1\n-        15: invokevirtual #9                  // Method java/io/OutputStream.write:([B)V\n+        15: invokevirtual #50                 // Method java/io/OutputStream.write:([B)V\n         18: aload_0\n         19: iload_2\n-        20: invokevirtual #5                  // Method afterWrite:(I)V\n+        20: invokevirtual #31                 // Method afterWrite:(I)V\n         23: goto          32\n         26: astore_2\n         27: aload_0\n         28: aload_2\n-        29: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V\n+        29: invokevirtual #34                 // Method handleIOException:(Ljava/io/IOException;)V\n         32: return\n       Exception table:\n          from    to  target type\n              0    23    26   Class java/io/IOException\n       LineNumberTable:\n         line 71: 0\n         line 72: 5\n         line 73: 10\n         line 74: 18\n-        line 77: 23\n-        line 75: 26\n+        line 75: 23\n         line 76: 27\n         line 78: 32\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            5      18     2   len   I\n-           27       5     2     e   Ljava/io/IOException;\n             0      33     0  this   Lorg/apache/commons/io/output/ProxyOutputStream;\n             0      33     1   bts   [B\n+            5      18     2   len   I\n+           27       5     2     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 90 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 5 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_0\n          1: iload_3\n-         2: invokevirtual #2                  // Method beforeWrite:(I)V\n+         2: invokevirtual #21                 // Method beforeWrite:(I)V\n          5: aload_0\n-         6: getfield      #3                  // Field out:Ljava/io/OutputStream;\n+         6: getfield      #24                 // Field out:Ljava/io/OutputStream;\n          9: aload_1\n         10: iload_2\n         11: iload_3\n-        12: invokevirtual #10                 // Method java/io/OutputStream.write:([BII)V\n+        12: invokevirtual #56                 // Method java/io/OutputStream.write:([BII)V\n         15: aload_0\n         16: iload_3\n-        17: invokevirtual #5                  // Method afterWrite:(I)V\n+        17: invokevirtual #31                 // Method afterWrite:(I)V\n         20: goto          31\n         23: astore        4\n         25: aload_0\n         26: aload         4\n-        28: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V\n+        28: invokevirtual #34                 // Method handleIOException:(Ljava/io/IOException;)V\n         31: return\n       Exception table:\n          from    to  target type\n              0    20    23   Class java/io/IOException\n       LineNumberTable:\n         line 90: 0\n         line 91: 5\n         line 92: 15\n-        line 95: 20\n-        line 93: 23\n+        line 93: 20\n         line 94: 25\n         line 96: 31\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           25       6     4     e   Ljava/io/IOException;\n             0      32     0  this   Lorg/apache/commons/io/output/ProxyOutputStream;\n             0      32     1   bts   [B\n             0      32     2    st   I\n             0      32     3   end   I\n+           25       6     4     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 87 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 7 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void flush() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field out:Ljava/io/OutputStream;\n-         4: invokevirtual #11                 // Method java/io/OutputStream.flush:()V\n+         1: getfield      #24                 // Field out:Ljava/io/OutputStream;\n+         4: invokevirtual #62                 // Method java/io/OutputStream.flush:()V\n          7: goto          16\n         10: astore_1\n         11: aload_0\n         12: aload_1\n-        13: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V\n+        13: invokevirtual #34                 // Method handleIOException:(Ljava/io/IOException;)V\n         16: return\n       Exception table:\n          from    to  target type\n              0     7    10   Class java/io/IOException\n       LineNumberTable:\n         line 105: 0\n-        line 108: 7\n-        line 106: 10\n+        line 106: 7\n         line 107: 11\n         line 109: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           11       5     1     e   Ljava/io/IOException;\n             0      17     0  this   Lorg/apache/commons/io/output/ProxyOutputStream;\n+           11       5     1     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 74 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 5 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field out:Ljava/io/OutputStream;\n+         1: getfield      #24                 // Field out:Ljava/io/OutputStream;\n          4: aload_0\n-         5: invokedynamic #12,  0             // InvokeDynamic #0:accept:(Lorg/apache/commons/io/output/ProxyOutputStream;)Lorg/apache/commons/io/function/IOConsumer;\n-        10: invokestatic  #13                 // Method org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+         5: invokedynamic #68,  0             // InvokeDynamic #0:accept:(Lorg/apache/commons/io/output/ProxyOutputStream;)Lorg/apache/commons/io/function/IOConsumer;\n+        10: invokestatic  #69                 // Method org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n         13: return\n       LineNumberTable:\n         line 117: 0\n         line 118: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/io/output/ProxyOutputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected void beforeWrite(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=0, locals=2, args_size=2\n          0: return\n       LineNumberTable:\n         line 135: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/output/ProxyOutputStream;\n             0       1     1     n   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected void afterWrite(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=0, locals=2, args_size=2\n          0: return\n       LineNumberTable:\n         line 153: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/output/ProxyOutputStream;\n             0       1     1     n   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected void handleIOException(java.io.IOException) throws java.io.IOException;\n     descriptor: (Ljava/io/IOException;)V\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_1\n          1: athrow\n       LineNumberTable:\n         line 165: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       2     0  this   Lorg/apache/commons/io/output/ProxyOutputStream;\n             0       2     1     e   Ljava/io/IOException;\n-    Exceptions:\n-      throws java.io.IOException\n \n-  private void lambda$close$0(java.io.IOException) throws java.io.IOException;\n+  private void lambda$0(java.io.IOException) throws java.io.IOException;\n     descriptor: (Ljava/io/IOException;)V\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V\n+         2: invokevirtual #34                 // Method handleIOException:(Ljava/io/IOException;)V\n          5: return\n       LineNumberTable:\n         line 117: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/output/ProxyOutputStream;\n             0       6     1     e   Ljava/io/IOException;\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"ProxyOutputStream.java\"\n-InnerClasses:\n-  public static final #91= #90 of #94;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #66 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #83 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #67 (Ljava/lang/Object;)V\n-      #68 REF_invokeSpecial org/apache/commons/io/output/ProxyOutputStream.lambda$close$0:(Ljava/io/IOException;)V\n-      #69 (Ljava/io/IOException;)V\n+      #85 (Ljava/lang/Object;)V\n+      #88 REF_invokeSpecial org/apache/commons/io/output/ProxyOutputStream.lambda$0:(Ljava/io/IOException;)V\n+      #89 (Ljava/io/IOException;)V\n+InnerClasses:\n+  public static final #95= #91 of #93;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
