{"diffoscope-json-version": 1, "source1": "first/StrMatcher.class", "source2": "second/StrMatcher.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -48,52 +48,52 @@\n         return StrMatcher.QUOTE_MATCHER;\n     }\n     \n     public static StrMatcher noneMatcher() {\n         return StrMatcher.NONE_MATCHER;\n     }\n     \n-    public static StrMatcher charMatcher(final char ch) {\n-        return (StrMatcher)new StrMatcher.CharMatcher(ch);\n+    public static StrMatcher charMatcher(final char c) {\n+        return (StrMatcher)new StrMatcher.CharMatcher(c);\n     }\n     \n-    public static StrMatcher charSetMatcher(final char... chars) {\n-        if (chars == null || chars.length == 0) {\n+    public static StrMatcher charSetMatcher(final char... array) {\n+        if (array == null || array.length == 0) {\n             return StrMatcher.NONE_MATCHER;\n         }\n-        if (chars.length == 1) {\n-            return (StrMatcher)new StrMatcher.CharMatcher(chars[0]);\n+        if (array.length == 1) {\n+            return (StrMatcher)new StrMatcher.CharMatcher(array[0]);\n         }\n-        return (StrMatcher)new StrMatcher.CharSetMatcher(chars);\n+        return (StrMatcher)new StrMatcher.CharSetMatcher(array);\n     }\n     \n-    public static StrMatcher charSetMatcher(final String chars) {\n-        if (StringUtils.isEmpty((CharSequence)chars)) {\n+    public static StrMatcher charSetMatcher(final String s) {\n+        if (StringUtils.isEmpty((CharSequence)s)) {\n             return StrMatcher.NONE_MATCHER;\n         }\n-        if (chars.length() == 1) {\n-            return (StrMatcher)new StrMatcher.CharMatcher(chars.charAt(0));\n+        if (s.length() == 1) {\n+            return (StrMatcher)new StrMatcher.CharMatcher(s.charAt(0));\n         }\n-        return (StrMatcher)new StrMatcher.CharSetMatcher(chars.toCharArray());\n+        return (StrMatcher)new StrMatcher.CharSetMatcher(s.toCharArray());\n     }\n     \n-    public static StrMatcher stringMatcher(final String str) {\n-        if (StringUtils.isEmpty((CharSequence)str)) {\n+    public static StrMatcher stringMatcher(final String s) {\n+        if (StringUtils.isEmpty((CharSequence)s)) {\n             return StrMatcher.NONE_MATCHER;\n         }\n-        return (StrMatcher)new StrMatcher.StringMatcher(str);\n+        return (StrMatcher)new StrMatcher.StringMatcher(s);\n     }\n     \n     protected StrMatcher() {\n     }\n     \n     public abstract int isMatch(final char[] p0, final int p1, final int p2, final int p3);\n     \n-    public int isMatch(final char[] buffer, final int pos) {\n-        return this.isMatch(buffer, pos, 0, buffer.length);\n+    public int isMatch(final char[] array, final int n) {\n+        return this.isMatch(array, n, 0, array.length);\n     }\n     \n     static {\n         COMMA_MATCHER = (StrMatcher)new StrMatcher.CharMatcher(',');\n         TAB_MATCHER = (StrMatcher)new StrMatcher.CharMatcher('\\t');\n         SPACE_MATCHER = (StrMatcher)new StrMatcher.CharMatcher(' ');\n         SPLIT_MATCHER = (StrMatcher)new StrMatcher.CharSetMatcher(\" \\t\\n\\r\\f\".toCharArray());\n"}]}
