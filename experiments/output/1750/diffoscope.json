{"diffoscope-json-version": 1, "source1": "first/XZCompressorInputStream.class", "source2": "second/XZCompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,118 +1,115 @@\n-  SHA-256 checksum 1b031f906c300d0de7722d3ce62b1a0c7d2fbbe86bbe0aa638aeb3289a77fae0\n+  SHA-256 checksum 3365ea4e677d01f8484bde7fd26202ebe0c58e92e041e13f48e5f3e65c4890a2\n   Compiled from \"XZCompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.xz.XZCompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream\n   minor version: 0\n-  major version: 51\n+  major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #21                         // org/apache/commons/compress/compressors/xz/XZCompressorInputStream\n   super_class: #22                        // org/apache/commons/compress/compressors/CompressorInputStream\n   interfaces: 0, fields: 1, methods: 9, attributes: 1\n Constant pool:\n-    #1 = Fieldref           #69.#70       // org/tukaani/xz/XZ.HEADER_MAGIC:[B\n-    #2 = Methodref          #21.#71       // org/apache/commons/compress/compressors/xz/XZCompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n-    #3 = Methodref          #21.#72       // org/apache/commons/compress/compressors/xz/XZCompressorInputStream.\"<init>\":(Ljava/io/InputStream;ZI)V\n-    #4 = Methodref          #22.#73       // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n-    #5 = Class              #74           // org/tukaani/xz/XZInputStream\n-    #6 = Methodref          #5.#75        // org/tukaani/xz/XZInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-    #7 = Fieldref           #21.#76       // org/apache/commons/compress/compressors/xz/XZCompressorInputStream.in:Ljava/io/InputStream;\n-    #8 = Class              #77           // org/tukaani/xz/SingleXZInputStream\n-    #9 = Methodref          #8.#75        // org/tukaani/xz/SingleXZInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-   #10 = Methodref          #78.#79       // java/io/InputStream.read:()I\n-   #11 = Methodref          #21.#80       // org/apache/commons/compress/compressors/xz/XZCompressorInputStream.count:(I)V\n-   #12 = Class              #81           // org/tukaani/xz/MemoryLimitException\n-   #13 = Class              #82           // org/apache/commons/compress/MemoryLimitException\n-   #14 = Methodref          #12.#83       // org/tukaani/xz/MemoryLimitException.getMemoryNeeded:()I\n-   #15 = Methodref          #12.#84       // org/tukaani/xz/MemoryLimitException.getMemoryLimit:()I\n-   #16 = Methodref          #13.#85       // org/apache/commons/compress/MemoryLimitException.\"<init>\":(JILjava/lang/Exception;)V\n-   #17 = Methodref          #78.#86       // java/io/InputStream.read:([BII)I\n-   #18 = Methodref          #78.#87       // java/io/InputStream.skip:(J)J\n-   #19 = Methodref          #78.#88       // java/io/InputStream.available:()I\n-   #20 = Methodref          #78.#89       // java/io/InputStream.close:()V\n-   #21 = Class              #90           // org/apache/commons/compress/compressors/xz/XZCompressorInputStream\n-   #22 = Class              #91           // org/apache/commons/compress/compressors/CompressorInputStream\n-   #23 = Utf8               in\n-   #24 = Utf8               Ljava/io/InputStream;\n-   #25 = Utf8               matches\n-   #26 = Utf8               ([BI)Z\n-   #27 = Utf8               Code\n-   #28 = Utf8               LineNumberTable\n-   #29 = Utf8               LocalVariableTable\n-   #30 = Utf8               i\n-   #31 = Utf8               I\n-   #32 = Utf8               signature\n-   #33 = Utf8               [B\n-   #34 = Utf8               length\n-   #35 = Utf8               StackMapTable\n-   #36 = Utf8               <init>\n-   #37 = Utf8               (Ljava/io/InputStream;)V\n-   #38 = Utf8               this\n-   #39 = Utf8               Lorg/apache/commons/compress/compressors/xz/XZCompressorInputStream;\n-   #40 = Utf8               inputStream\n-   #41 = Utf8               Exceptions\n-   #42 = Class              #92           // java/io/IOException\n-   #43 = Utf8               (Ljava/io/InputStream;Z)V\n-   #44 = Utf8               decompressConcatenated\n-   #45 = Utf8               Z\n-   #46 = Utf8               (Ljava/io/InputStream;ZI)V\n-   #47 = Utf8               memoryLimitInKb\n-   #48 = Class              #90           // org/apache/commons/compress/compressors/xz/XZCompressorInputStream\n-   #49 = Class              #93           // java/io/InputStream\n-   #50 = Utf8               read\n-   #51 = Utf8               ()I\n-   #52 = Utf8               ret\n-   #53 = Utf8               e\n-   #54 = Utf8               Lorg/tukaani/xz/MemoryLimitException;\n-   #55 = Class              #81           // org/tukaani/xz/MemoryLimitException\n-   #56 = Utf8               ([BII)I\n-   #57 = Utf8               buf\n-   #58 = Utf8               off\n-   #59 = Utf8               len\n-   #60 = Utf8               skip\n-   #61 = Utf8               (J)J\n-   #62 = Utf8               n\n-   #63 = Utf8               J\n-   #64 = Utf8               available\n-   #65 = Utf8               close\n-   #66 = Utf8               ()V\n-   #67 = Utf8               SourceFile\n-   #68 = Utf8               XZCompressorInputStream.java\n-   #69 = Class              #94           // org/tukaani/xz/XZ\n-   #70 = NameAndType        #95:#33       // HEADER_MAGIC:[B\n-   #71 = NameAndType        #36:#43       // \"<init>\":(Ljava/io/InputStream;Z)V\n-   #72 = NameAndType        #36:#46       // \"<init>\":(Ljava/io/InputStream;ZI)V\n-   #73 = NameAndType        #36:#66       // \"<init>\":()V\n-   #74 = Utf8               org/tukaani/xz/XZInputStream\n-   #75 = NameAndType        #36:#96       // \"<init>\":(Ljava/io/InputStream;I)V\n-   #76 = NameAndType        #23:#24       // in:Ljava/io/InputStream;\n-   #77 = Utf8               org/tukaani/xz/SingleXZInputStream\n-   #78 = Class              #93           // java/io/InputStream\n-   #79 = NameAndType        #50:#51       // read:()I\n-   #80 = NameAndType        #97:#98       // count:(I)V\n-   #81 = Utf8               org/tukaani/xz/MemoryLimitException\n-   #82 = Utf8               org/apache/commons/compress/MemoryLimitException\n-   #83 = NameAndType        #99:#51       // getMemoryNeeded:()I\n-   #84 = NameAndType        #100:#51      // getMemoryLimit:()I\n-   #85 = NameAndType        #36:#101      // \"<init>\":(JILjava/lang/Exception;)V\n-   #86 = NameAndType        #50:#56       // read:([BII)I\n-   #87 = NameAndType        #60:#61       // skip:(J)J\n-   #88 = NameAndType        #64:#51       // available:()I\n-   #89 = NameAndType        #65:#66       // close:()V\n-   #90 = Utf8               org/apache/commons/compress/compressors/xz/XZCompressorInputStream\n-   #91 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n-   #92 = Utf8               java/io/IOException\n-   #93 = Utf8               java/io/InputStream\n-   #94 = Utf8               org/tukaani/xz/XZ\n-   #95 = Utf8               HEADER_MAGIC\n-   #96 = Utf8               (Ljava/io/InputStream;I)V\n-   #97 = Utf8               count\n-   #98 = Utf8               (I)V\n-   #99 = Utf8               getMemoryNeeded\n-  #100 = Utf8               getMemoryLimit\n-  #101 = Utf8               (JILjava/lang/Exception;)V\n+   #1 = Fieldref           #67.#68        // org/tukaani/xz/XZ.HEADER_MAGIC:[B\n+   #2 = Methodref          #21.#69        // org/apache/commons/compress/compressors/xz/XZCompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n+   #3 = Methodref          #21.#70        // org/apache/commons/compress/compressors/xz/XZCompressorInputStream.\"<init>\":(Ljava/io/InputStream;ZI)V\n+   #4 = Methodref          #22.#71        // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+   #5 = Class              #72            // org/tukaani/xz/XZInputStream\n+   #6 = Methodref          #5.#73         // org/tukaani/xz/XZInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+   #7 = Fieldref           #21.#74        // org/apache/commons/compress/compressors/xz/XZCompressorInputStream.in:Ljava/io/InputStream;\n+   #8 = Class              #75            // org/tukaani/xz/SingleXZInputStream\n+   #9 = Methodref          #8.#73         // org/tukaani/xz/SingleXZInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+  #10 = Methodref          #48.#76        // java/io/InputStream.read:()I\n+  #11 = Methodref          #21.#77        // org/apache/commons/compress/compressors/xz/XZCompressorInputStream.count:(I)V\n+  #12 = Class              #78            // org/tukaani/xz/MemoryLimitException\n+  #13 = Class              #79            // org/apache/commons/compress/MemoryLimitException\n+  #14 = Methodref          #12.#80        // org/tukaani/xz/MemoryLimitException.getMemoryNeeded:()I\n+  #15 = Methodref          #12.#81        // org/tukaani/xz/MemoryLimitException.getMemoryLimit:()I\n+  #16 = Methodref          #13.#82        // org/apache/commons/compress/MemoryLimitException.\"<init>\":(JILjava/lang/Exception;)V\n+  #17 = Methodref          #48.#83        // java/io/InputStream.read:([BII)I\n+  #18 = Methodref          #48.#84        // java/io/InputStream.skip:(J)J\n+  #19 = Methodref          #48.#85        // java/io/InputStream.available:()I\n+  #20 = Methodref          #48.#86        // java/io/InputStream.close:()V\n+  #21 = Class              #87            // org/apache/commons/compress/compressors/xz/XZCompressorInputStream\n+  #22 = Class              #88            // org/apache/commons/compress/compressors/CompressorInputStream\n+  #23 = Utf8               in\n+  #24 = Utf8               Ljava/io/InputStream;\n+  #25 = Utf8               matches\n+  #26 = Utf8               ([BI)Z\n+  #27 = Utf8               Code\n+  #28 = Utf8               LineNumberTable\n+  #29 = Utf8               LocalVariableTable\n+  #30 = Utf8               i\n+  #31 = Utf8               I\n+  #32 = Utf8               signature\n+  #33 = Utf8               [B\n+  #34 = Utf8               length\n+  #35 = Utf8               StackMapTable\n+  #36 = Utf8               <init>\n+  #37 = Utf8               (Ljava/io/InputStream;)V\n+  #38 = Utf8               this\n+  #39 = Utf8               Lorg/apache/commons/compress/compressors/xz/XZCompressorInputStream;\n+  #40 = Utf8               inputStream\n+  #41 = Utf8               Exceptions\n+  #42 = Class              #89            // java/io/IOException\n+  #43 = Utf8               (Ljava/io/InputStream;Z)V\n+  #44 = Utf8               decompressConcatenated\n+  #45 = Utf8               Z\n+  #46 = Utf8               (Ljava/io/InputStream;ZI)V\n+  #47 = Utf8               memoryLimitInKb\n+  #48 = Class              #90            // java/io/InputStream\n+  #49 = Utf8               read\n+  #50 = Utf8               ()I\n+  #51 = Utf8               ret\n+  #52 = Utf8               e\n+  #53 = Utf8               Lorg/tukaani/xz/MemoryLimitException;\n+  #54 = Utf8               ([BII)I\n+  #55 = Utf8               buf\n+  #56 = Utf8               off\n+  #57 = Utf8               len\n+  #58 = Utf8               skip\n+  #59 = Utf8               (J)J\n+  #60 = Utf8               n\n+  #61 = Utf8               J\n+  #62 = Utf8               available\n+  #63 = Utf8               close\n+  #64 = Utf8               ()V\n+  #65 = Utf8               SourceFile\n+  #66 = Utf8               XZCompressorInputStream.java\n+  #67 = Class              #91            // org/tukaani/xz/XZ\n+  #68 = NameAndType        #92:#33        // HEADER_MAGIC:[B\n+  #69 = NameAndType        #36:#43        // \"<init>\":(Ljava/io/InputStream;Z)V\n+  #70 = NameAndType        #36:#46        // \"<init>\":(Ljava/io/InputStream;ZI)V\n+  #71 = NameAndType        #36:#64        // \"<init>\":()V\n+  #72 = Utf8               org/tukaani/xz/XZInputStream\n+  #73 = NameAndType        #36:#93        // \"<init>\":(Ljava/io/InputStream;I)V\n+  #74 = NameAndType        #23:#24        // in:Ljava/io/InputStream;\n+  #75 = Utf8               org/tukaani/xz/SingleXZInputStream\n+  #76 = NameAndType        #49:#50        // read:()I\n+  #77 = NameAndType        #94:#95        // count:(I)V\n+  #78 = Utf8               org/tukaani/xz/MemoryLimitException\n+  #79 = Utf8               org/apache/commons/compress/MemoryLimitException\n+  #80 = NameAndType        #96:#50        // getMemoryNeeded:()I\n+  #81 = NameAndType        #97:#50        // getMemoryLimit:()I\n+  #82 = NameAndType        #36:#98        // \"<init>\":(JILjava/lang/Exception;)V\n+  #83 = NameAndType        #49:#54        // read:([BII)I\n+  #84 = NameAndType        #58:#59        // skip:(J)J\n+  #85 = NameAndType        #62:#50        // available:()I\n+  #86 = NameAndType        #63:#64        // close:()V\n+  #87 = Utf8               org/apache/commons/compress/compressors/xz/XZCompressorInputStream\n+  #88 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n+  #89 = Utf8               java/io/IOException\n+  #90 = Utf8               java/io/InputStream\n+  #91 = Utf8               org/tukaani/xz/XZ\n+  #92 = Utf8               HEADER_MAGIC\n+  #93 = Utf8               (Ljava/io/InputStream;I)V\n+  #94 = Utf8               count\n+  #95 = Utf8               (I)V\n+  #96 = Utf8               getMemoryNeeded\n+  #97 = Utf8               getMemoryLimit\n+  #98 = Utf8               (JILjava/lang/Exception;)V\n {\n   private final java.io.InputStream in;\n     descriptor: Ljava/io/InputStream;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public static boolean matches(byte[], int);\n     descriptor: ([BI)Z\n"}]}
