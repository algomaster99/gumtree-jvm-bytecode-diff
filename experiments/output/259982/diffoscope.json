{"diffoscope-json-version": 1, "source1": "first/FileEntry.class", "source2": "second/FileEntry.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -24,19 +24,19 @@\n     private SerializableFileTime lastModified;\n     private long length;\n     \n     public FileEntry(final File file) {\n         this(null, file);\n     }\n     \n-    public FileEntry(final FileEntry parent, final File file) {\n+    public FileEntry(final FileEntry parent, final File obj) {\n         this.lastModified = SerializableFileTime.EPOCH;\n-        this.file = Objects.requireNonNull(file, \"file\");\n+        this.file = Objects.requireNonNull(obj, \"file\");\n         this.parent = parent;\n-        this.name = file.getName();\n+        this.name = obj.getName();\n     }\n     \n     public FileEntry[] getChildren() {\n         return (this.children != null) ? this.children : FileEntry.EMPTY_FILE_ENTRY_ARRAY;\n     }\n     \n     public File getFile() {\n@@ -76,49 +76,49 @@\n     }\n     \n     public FileEntry newChildInstance(final File file) {\n         return new FileEntry(this, file);\n     }\n     \n     public boolean refresh(final File file) {\n-        final boolean origExists = this.exists;\n-        final SerializableFileTime origLastModified = this.lastModified;\n-        final boolean origDirectory = this.directory;\n-        final long origLength = this.length;\n+        final boolean exists = this.exists;\n+        final SerializableFileTime lastModified = this.lastModified;\n+        final boolean directory = this.directory;\n+        final long length = this.length;\n         this.name = file.getName();\n         this.exists = Files.exists(file.toPath(), new LinkOption[0]);\n         this.directory = (this.exists && file.isDirectory());\n         try {\n             this.setLastModified(this.exists ? FileUtils.lastModifiedFileTime(file) : FileTimes.EPOCH);\n         }\n-        catch (final IOException e) {\n+        catch (final IOException ex) {\n             this.setLastModified(SerializableFileTime.EPOCH);\n         }\n         this.length = ((this.exists && !this.directory) ? file.length() : 0L);\n-        return this.exists != origExists || !this.lastModified.equals((Object)origLastModified) || this.directory != origDirectory || this.length != origLength;\n+        return this.exists != exists || !this.lastModified.equals((Object)lastModified) || this.directory != directory || this.length != length;\n     }\n     \n     public void setChildren(final FileEntry... children) {\n         this.children = children;\n     }\n     \n     public void setDirectory(final boolean directory) {\n         this.directory = directory;\n     }\n     \n     public void setExists(final boolean exists) {\n         this.exists = exists;\n     }\n     \n-    public void setLastModified(final FileTime lastModified) {\n-        this.setLastModified(new SerializableFileTime(lastModified));\n+    public void setLastModified(final FileTime fileTime) {\n+        this.setLastModified(new SerializableFileTime(fileTime));\n     }\n     \n-    public void setLastModified(final long lastModified) {\n-        this.setLastModified(FileTime.fromMillis(lastModified));\n+    public void setLastModified(final long value) {\n+        this.setLastModified(FileTime.fromMillis(value));\n     }\n     \n     void setLastModified(final SerializableFileTime lastModified) {\n         this.lastModified = lastModified;\n     }\n     \n     public void setLength(final long length) {\n"}]}
