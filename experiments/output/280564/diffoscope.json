{"diffoscope-json-version": 1, "source1": "first/PropertyListParser.class", "source2": "second/PropertyListParser.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -32,161 +32,145 @@\n     private final PropertyListParser.LookaheadSuccess jj_ls;\n     private List<int[]> jj_expentries;\n     private int[] jj_expentry;\n     private int jj_kind;\n     private int[] jj_lasttokens;\n     private int jj_endpos;\n     \n-    protected String removeQuotes(String s) {\n-        if (s == null) {\n+    protected String removeQuotes(String substring) {\n+        if (substring == null) {\n             return null;\n         }\n-        if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\") && s.length() >= 2) {\n-            s = s.substring(1, s.length() - 1);\n+        if (substring.startsWith(\"\\\"\") && substring.endsWith(\"\\\"\") && substring.length() >= 2) {\n+            substring = substring.substring(1, substring.length() - 1);\n         }\n-        return s;\n+        return substring;\n     }\n     \n     protected String unescapeQuotes(final String s) {\n         return s.replaceAll(\"\\\\\\\\\\\"\", \"\\\"\");\n     }\n     \n-    protected byte[] filterData(String s) throws ParseException {\n-        if (s == null) {\n+    protected byte[] filterData(String str) throws ParseException {\n+        if (str == null) {\n             return null;\n         }\n-        if (s.startsWith(\"<\") && s.endsWith(\">\") && s.length() >= 2) {\n-            s = s.substring(1, s.length() - 1);\n+        if (str.startsWith(\"<\") && str.endsWith(\">\") && str.length() >= 2) {\n+            str = str.substring(1, str.length() - 1);\n         }\n-        s = s.replaceAll(\"\\\\s\", \"\");\n-        if (s.length() % 2 != 0) {\n-            s = \"0\" + s;\n+        str = str.replaceAll(\"\\\\s\", \"\");\n+        if (str.length() % 2 != 0) {\n+            str = \"0\" + str;\n         }\n         try {\n-            return Hex.decodeHex(s.toCharArray());\n+            return Hex.decodeHex(str.toCharArray());\n         }\n-        catch (final Exception e) {\n-            throw new ParseException(\"Unable to parse the byte[] : \" + e.getMessage());\n+        catch (final Exception ex) {\n+            throw new ParseException(\"Unable to parse the byte[] : \" + ex.getMessage());\n         }\n     }\n     \n     protected Date parseDate(final String s) throws ParseException {\n         return PropertyListConfiguration.parseDate(s);\n     }\n     \n     public final PropertyListConfiguration parse() throws ParseException {\n-        PropertyListConfiguration configuration = null;\n-        configuration = this.Dictionary();\n+        final PropertyListConfiguration dictionary = this.Dictionary();\n         this.jj_consume_token(0);\n-        return configuration;\n+        return dictionary;\n     }\n     \n     public final PropertyListConfiguration Dictionary() throws ParseException {\n         final ImmutableNode.Builder builder = new ImmutableNode.Builder();\n-        ImmutableNode child = null;\n         this.jj_consume_token(14);\n         while (true) {\n             switch ((this.jj_ntk == -1) ? this.jj_ntk() : this.jj_ntk) {\n                 case 27:\n                 case 28: {\n-                    child = this.Property();\n-                    if (child.getValue() instanceof HierarchicalConfiguration) {\n-                        final HierarchicalConfiguration<ImmutableNode> conf = (HierarchicalConfiguration<ImmutableNode>)child.getValue();\n-                        final ImmutableNode root = (ImmutableNode)conf.getNodeModel().getNodeHandler().getRootNode();\n-                        final ImmutableNode.Builder childBuilder = new ImmutableNode.Builder();\n-                        childBuilder.name(child.getNodeName()).value(root.getValue()).addChildren((Collection)root.getChildren());\n-                        builder.addChild(childBuilder.create());\n+                    final ImmutableNode property = this.Property();\n+                    if (property.getValue() instanceof HierarchicalConfiguration) {\n+                        final ImmutableNode immutableNode = (ImmutableNode)((HierarchicalConfiguration)property.getValue()).getNodeModel().getNodeHandler().getRootNode();\n+                        final ImmutableNode.Builder builder2 = new ImmutableNode.Builder();\n+                        builder2.name(property.getNodeName()).value(immutableNode.getValue()).addChildren((Collection)immutableNode.getChildren());\n+                        builder.addChild(builder2.create());\n                         continue;\n                     }\n-                    builder.addChild(child);\n+                    builder.addChild(property);\n                     continue;\n                 }\n                 default: {\n                     this.jj_la1[0] = this.jj_gen;\n                     this.jj_consume_token(15);\n                     return new PropertyListConfiguration(builder.create());\n                 }\n             }\n         }\n     }\n     \n     public final ImmutableNode Property() throws ParseException {\n-        String key = null;\n-        Object value = null;\n-        final ImmutableNode.Builder node = new ImmutableNode.Builder();\n-        key = this.String();\n-        node.name(key);\n+        final ImmutableNode.Builder builder = new ImmutableNode.Builder();\n+        builder.name(this.String());\n         this.jj_consume_token(17);\n-        value = this.Element();\n-        node.value(value);\n+        builder.value(this.Element());\n         switch ((this.jj_ntk == -1) ? this.jj_ntk() : this.jj_ntk) {\n             case 16: {\n                 this.jj_consume_token(16);\n                 break;\n             }\n             default: {\n                 this.jj_la1[1] = this.jj_gen;\n                 break;\n             }\n         }\n-        return node.create();\n+        return builder.create();\n     }\n     \n     public final Object Element() throws ParseException {\n-        Object value = null;\n         if (this.jj_2_1(2)) {\n-            value = this.Array();\n-            return value;\n+            return this.Array();\n         }\n         switch ((this.jj_ntk == -1) ? this.jj_ntk() : this.jj_ntk) {\n             case 14: {\n-                value = this.Dictionary();\n-                return value;\n+                return this.Dictionary();\n             }\n             case 27:\n             case 28: {\n-                value = this.String();\n-                return value;\n+                return this.String();\n             }\n             case 25: {\n-                value = this.Data();\n-                return value;\n+                return this.Data();\n             }\n             case 26: {\n-                value = this.Date();\n-                return value;\n+                return this.Date();\n             }\n             default: {\n                 this.jj_la1[2] = this.jj_gen;\n                 this.jj_consume_token(-1);\n                 throw new ParseException();\n             }\n         }\n     }\n     \n     public final List Array() throws ParseException {\n-        final List<Object> list = new ArrayList<Object>();\n-        Object element = null;\n+        final ArrayList list = new ArrayList();\n         this.jj_consume_token(11);\n         Label_0225: {\n             switch ((this.jj_ntk == -1) ? this.jj_ntk() : this.jj_ntk) {\n                 case 11:\n                 case 14:\n                 case 25:\n                 case 26:\n                 case 27:\n                 case 28: {\n-                    element = this.Element();\n-                    list.add(element);\n+                    list.add(this.Element());\n                     while (true) {\n                         switch ((this.jj_ntk == -1) ? this.jj_ntk() : this.jj_ntk) {\n                             case 13: {\n                                 this.jj_consume_token(13);\n-                                element = this.Element();\n-                                list.add(element);\n+                                list.add(this.Element());\n                                 continue;\n                             }\n                             default: {\n                                 this.jj_la1[3] = this.jj_gen;\n                                 break Label_0225;\n                             }\n                         }\n@@ -200,88 +184,82 @@\n             }\n         }\n         this.jj_consume_token(12);\n         return list;\n     }\n     \n     public final String String() throws ParseException {\n-        Token token = null;\n-        final String value = null;\n         switch ((this.jj_ntk == -1) ? this.jj_ntk() : this.jj_ntk) {\n             case 28: {\n-                token = this.jj_consume_token(28);\n-                return this.unescapeQuotes(this.removeQuotes(token.image));\n+                return this.unescapeQuotes(this.removeQuotes(this.jj_consume_token(28).image));\n             }\n             case 27: {\n-                token = this.jj_consume_token(27);\n-                return token.image;\n+                return this.jj_consume_token(27).image;\n             }\n             default: {\n                 this.jj_la1[5] = this.jj_gen;\n                 this.jj_consume_token(-1);\n                 throw new ParseException();\n             }\n         }\n     }\n     \n     public final byte[] Data() throws ParseException {\n-        final Token token = this.jj_consume_token(25);\n-        return this.filterData(token.image);\n+        return this.filterData(this.jj_consume_token(25).image);\n     }\n     \n     public final Date Date() throws ParseException {\n-        final Token token = this.jj_consume_token(26);\n-        return this.parseDate(token.image);\n+        return this.parseDate(this.jj_consume_token(26).image);\n     }\n     \n-    private boolean jj_2_1(final int xla) {\n-        this.jj_la = xla;\n+    private boolean jj_2_1(final int jj_la) {\n+        this.jj_la = jj_la;\n         final Token token = this.token;\n         this.jj_scanpos = token;\n         this.jj_lastpos = token;\n         try {\n             return !this.jj_3_1();\n         }\n-        catch (final PropertyListParser.LookaheadSuccess ls) {\n+        catch (final PropertyListParser.LookaheadSuccess lookaheadSuccess) {\n             return true;\n         }\n         finally {\n-            this.jj_save(0, xla);\n+            this.jj_save(0, jj_la);\n         }\n     }\n     \n     private boolean jj_3R_15() {\n         return this.jj_scan_token(27);\n     }\n     \n     private boolean jj_3R_3() {\n         if (this.jj_scan_token(11)) {\n             return true;\n         }\n-        final Token xsp = this.jj_scanpos;\n+        final Token jj_scanpos = this.jj_scanpos;\n         if (this.jj_3R_4()) {\n-            this.jj_scanpos = xsp;\n+            this.jj_scanpos = jj_scanpos;\n         }\n         return this.jj_scan_token(12);\n     }\n     \n     private boolean jj_3_1() {\n         return this.jj_3R_3();\n     }\n     \n     private boolean jj_3R_5() {\n-        final Token xsp = this.jj_scanpos;\n+        final Token jj_scanpos = this.jj_scanpos;\n         if (this.jj_3_1()) {\n-            this.jj_scanpos = xsp;\n+            this.jj_scanpos = jj_scanpos;\n             if (this.jj_3R_6()) {\n-                this.jj_scanpos = xsp;\n+                this.jj_scanpos = jj_scanpos;\n                 if (this.jj_3R_7()) {\n-                    this.jj_scanpos = xsp;\n+                    this.jj_scanpos = jj_scanpos;\n                     if (this.jj_3R_8()) {\n-                        this.jj_scanpos = xsp;\n+                        this.jj_scanpos = jj_scanpos;\n                         if (this.jj_3R_9()) {\n                             return true;\n                         }\n                     }\n                 }\n             }\n         }\n@@ -289,17 +267,17 @@\n     }\n     \n     private boolean jj_3R_14() {\n         return this.jj_scan_token(28);\n     }\n     \n     private boolean jj_3R_11() {\n-        final Token xsp = this.jj_scanpos;\n+        final Token jj_scanpos = this.jj_scanpos;\n         if (this.jj_3R_14()) {\n-            this.jj_scanpos = xsp;\n+            this.jj_scanpos = jj_scanpos;\n             if (this.jj_3R_15()) {\n                 return true;\n             }\n         }\n         return false;\n     }\n     \n@@ -335,170 +313,170 @@\n         return this.jj_3R_10();\n     }\n     \n     private static void jj_la1_init_0() {\n         PropertyListParser.jj_la1_0 = new int[] { 402653184, 65536, 503332864, 8192, 503334912, 402653184 };\n     }\n     \n-    public PropertyListParser(final InputStream stream) {\n-        this(stream, null);\n+    public PropertyListParser(final InputStream inputStream) {\n+        this(inputStream, null);\n     }\n     \n-    public PropertyListParser(final InputStream stream, final String encoding) {\n+    public PropertyListParser(final InputStream inputStream, final String s) {\n         this.jj_la1 = new int[6];\n         this.jj_2_rtns = new PropertyListParser.JJCalls[1];\n         this.jj_rescan = false;\n         this.jj_gc = 0;\n         this.jj_ls = new PropertyListParser.LookaheadSuccess((PropertyListParser.PropertyListParser$1)null);\n         this.jj_expentries = new ArrayList<int[]>();\n         this.jj_kind = -1;\n         this.jj_lasttokens = new int[100];\n         try {\n-            this.jj_input_stream = new SimpleCharStream(stream, encoding, 1, 1);\n+            this.jj_input_stream = new SimpleCharStream(inputStream, s, 1, 1);\n         }\n-        catch (final UnsupportedEncodingException e) {\n-            throw new RuntimeException(e);\n+        catch (final UnsupportedEncodingException cause) {\n+            throw new RuntimeException(cause);\n         }\n         this.token_source = new PropertyListParserTokenManager(this.jj_input_stream);\n         this.token = new Token();\n         this.jj_ntk = -1;\n         this.jj_gen = 0;\n         for (int i = 0; i < 6; ++i) {\n             this.jj_la1[i] = -1;\n         }\n-        for (int i = 0; i < this.jj_2_rtns.length; ++i) {\n-            this.jj_2_rtns[i] = new PropertyListParser.JJCalls();\n+        for (int j = 0; j < this.jj_2_rtns.length; ++j) {\n+            this.jj_2_rtns[j] = new PropertyListParser.JJCalls();\n         }\n     }\n     \n-    public void ReInit(final InputStream stream) {\n-        this.ReInit(stream, null);\n+    public void ReInit(final InputStream inputStream) {\n+        this.ReInit(inputStream, null);\n     }\n     \n-    public void ReInit(final InputStream stream, final String encoding) {\n+    public void ReInit(final InputStream inputStream, final String s) {\n         try {\n-            this.jj_input_stream.ReInit(stream, encoding, 1, 1);\n+            this.jj_input_stream.ReInit(inputStream, s, 1, 1);\n         }\n-        catch (final UnsupportedEncodingException e) {\n-            throw new RuntimeException(e);\n+        catch (final UnsupportedEncodingException cause) {\n+            throw new RuntimeException(cause);\n         }\n         this.token_source.ReInit(this.jj_input_stream);\n         this.token = new Token();\n         this.jj_ntk = -1;\n         this.jj_gen = 0;\n         for (int i = 0; i < 6; ++i) {\n             this.jj_la1[i] = -1;\n         }\n-        for (int i = 0; i < this.jj_2_rtns.length; ++i) {\n-            this.jj_2_rtns[i] = new PropertyListParser.JJCalls();\n+        for (int j = 0; j < this.jj_2_rtns.length; ++j) {\n+            this.jj_2_rtns[j] = new PropertyListParser.JJCalls();\n         }\n     }\n     \n-    public PropertyListParser(final Reader stream) {\n+    public PropertyListParser(final Reader reader) {\n         this.jj_la1 = new int[6];\n         this.jj_2_rtns = new PropertyListParser.JJCalls[1];\n         this.jj_rescan = false;\n         this.jj_gc = 0;\n         this.jj_ls = new PropertyListParser.LookaheadSuccess((PropertyListParser.PropertyListParser$1)null);\n         this.jj_expentries = new ArrayList<int[]>();\n         this.jj_kind = -1;\n         this.jj_lasttokens = new int[100];\n-        this.jj_input_stream = new SimpleCharStream(stream, 1, 1);\n+        this.jj_input_stream = new SimpleCharStream(reader, 1, 1);\n         this.token_source = new PropertyListParserTokenManager(this.jj_input_stream);\n         this.token = new Token();\n         this.jj_ntk = -1;\n         this.jj_gen = 0;\n         for (int i = 0; i < 6; ++i) {\n             this.jj_la1[i] = -1;\n         }\n-        for (int i = 0; i < this.jj_2_rtns.length; ++i) {\n-            this.jj_2_rtns[i] = new PropertyListParser.JJCalls();\n+        for (int j = 0; j < this.jj_2_rtns.length; ++j) {\n+            this.jj_2_rtns[j] = new PropertyListParser.JJCalls();\n         }\n     }\n     \n-    public void ReInit(final Reader stream) {\n-        this.jj_input_stream.ReInit(stream, 1, 1);\n+    public void ReInit(final Reader reader) {\n+        this.jj_input_stream.ReInit(reader, 1, 1);\n         this.token_source.ReInit(this.jj_input_stream);\n         this.token = new Token();\n         this.jj_ntk = -1;\n         this.jj_gen = 0;\n         for (int i = 0; i < 6; ++i) {\n             this.jj_la1[i] = -1;\n         }\n-        for (int i = 0; i < this.jj_2_rtns.length; ++i) {\n-            this.jj_2_rtns[i] = new PropertyListParser.JJCalls();\n+        for (int j = 0; j < this.jj_2_rtns.length; ++j) {\n+            this.jj_2_rtns[j] = new PropertyListParser.JJCalls();\n         }\n     }\n     \n-    public PropertyListParser(final PropertyListParserTokenManager tm) {\n+    public PropertyListParser(final PropertyListParserTokenManager token_source) {\n         this.jj_la1 = new int[6];\n         this.jj_2_rtns = new PropertyListParser.JJCalls[1];\n         this.jj_rescan = false;\n         this.jj_gc = 0;\n         this.jj_ls = new PropertyListParser.LookaheadSuccess((PropertyListParser.PropertyListParser$1)null);\n         this.jj_expentries = new ArrayList<int[]>();\n         this.jj_kind = -1;\n         this.jj_lasttokens = new int[100];\n-        this.token_source = tm;\n+        this.token_source = token_source;\n         this.token = new Token();\n         this.jj_ntk = -1;\n         this.jj_gen = 0;\n         for (int i = 0; i < 6; ++i) {\n             this.jj_la1[i] = -1;\n         }\n-        for (int i = 0; i < this.jj_2_rtns.length; ++i) {\n-            this.jj_2_rtns[i] = new PropertyListParser.JJCalls();\n+        for (int j = 0; j < this.jj_2_rtns.length; ++j) {\n+            this.jj_2_rtns[j] = new PropertyListParser.JJCalls();\n         }\n     }\n     \n-    public void ReInit(final PropertyListParserTokenManager tm) {\n-        this.token_source = tm;\n+    public void ReInit(final PropertyListParserTokenManager token_source) {\n+        this.token_source = token_source;\n         this.token = new Token();\n         this.jj_ntk = -1;\n         this.jj_gen = 0;\n         for (int i = 0; i < 6; ++i) {\n             this.jj_la1[i] = -1;\n         }\n-        for (int i = 0; i < this.jj_2_rtns.length; ++i) {\n-            this.jj_2_rtns[i] = new PropertyListParser.JJCalls();\n+        for (int j = 0; j < this.jj_2_rtns.length; ++j) {\n+            this.jj_2_rtns[j] = new PropertyListParser.JJCalls();\n         }\n     }\n     \n-    private Token jj_consume_token(final int kind) throws ParseException {\n-        final Token oldToken;\n-        if ((oldToken = this.token).next != null) {\n+    private Token jj_consume_token(final int jj_kind) throws ParseException {\n+        final Token token;\n+        if ((token = this.token).next != null) {\n             this.token = this.token.next;\n         }\n         else {\n-            final Token token = this.token;\n+            final Token token2 = this.token;\n             final Token nextToken = this.token_source.getNextToken();\n-            token.next = nextToken;\n+            token2.next = nextToken;\n             this.token = nextToken;\n         }\n         this.jj_ntk = -1;\n-        if (this.token.kind == kind) {\n+        if (this.token.kind == jj_kind) {\n             ++this.jj_gen;\n             if (++this.jj_gc > 100) {\n                 this.jj_gc = 0;\n                 for (int i = 0; i < this.jj_2_rtns.length; ++i) {\n-                    for (PropertyListParser.JJCalls c = this.jj_2_rtns[i]; c != null; c = c.next) {\n-                        if (c.gen < this.jj_gen) {\n-                            c.first = null;\n+                    for (PropertyListParser.JJCalls next = this.jj_2_rtns[i]; next != null; next = next.next) {\n+                        if (next.gen < this.jj_gen) {\n+                            next.first = null;\n                         }\n                     }\n                 }\n             }\n             return this.token;\n         }\n-        this.token = oldToken;\n-        this.jj_kind = kind;\n+        this.token = token;\n+        this.jj_kind = jj_kind;\n         throw this.generateParseException();\n     }\n     \n-    private boolean jj_scan_token(final int kind) {\n+    private boolean jj_scan_token(final int n) {\n         if (this.jj_scanpos == this.jj_lastpos) {\n             --this.jj_la;\n             if (this.jj_scanpos.next == null) {\n                 final Token jj_scanpos = this.jj_scanpos;\n                 final Token nextToken = this.token_source.getNextToken();\n                 jj_scanpos.next = nextToken;\n                 this.jj_scanpos = nextToken;\n@@ -510,24 +488,24 @@\n                 this.jj_lastpos = next;\n             }\n         }\n         else {\n             this.jj_scanpos = this.jj_scanpos.next;\n         }\n         if (this.jj_rescan) {\n-            int i = 0;\n-            Token tok;\n-            for (tok = this.token; tok != null && tok != this.jj_scanpos; tok = tok.next) {\n-                ++i;\n+            int n2 = 0;\n+            Token token;\n+            for (token = this.token; token != null && token != this.jj_scanpos; token = token.next) {\n+                ++n2;\n             }\n-            if (tok != null) {\n-                this.jj_add_error_token(kind, i);\n+            if (token != null) {\n+                this.jj_add_error_token(n, n2);\n             }\n         }\n-        if (this.jj_scanpos.kind != kind) {\n+        if (this.jj_scanpos.kind != n) {\n             return true;\n         }\n         if (this.jj_la == 0 && this.jj_scanpos == this.jj_lastpos) {\n             throw this.jj_ls;\n         }\n         return false;\n     }\n@@ -543,149 +521,149 @@\n             this.token = nextToken;\n         }\n         this.jj_ntk = -1;\n         ++this.jj_gen;\n         return this.token;\n     }\n     \n-    public final Token getToken(final int index) {\n-        Token t = this.token;\n-        for (int i = 0; i < index; ++i) {\n-            if (t.next != null) {\n-                t = t.next;\n+    public final Token getToken(final int n) {\n+        Token token = this.token;\n+        for (int i = 0; i < n; ++i) {\n+            if (token.next != null) {\n+                token = token.next;\n             }\n             else {\n-                final Token token = t;\n+                final Token token2 = token;\n                 final Token nextToken = this.token_source.getNextToken();\n-                token.next = nextToken;\n-                t = nextToken;\n+                token2.next = nextToken;\n+                token = nextToken;\n             }\n         }\n-        return t;\n+        return token;\n     }\n     \n     private int jj_ntk() {\n         final Token next = this.token.next;\n         this.jj_nt = next;\n         if (next == null) {\n             final Token token = this.token;\n             final Token nextToken = this.token_source.getNextToken();\n             token.next = nextToken;\n             return this.jj_ntk = nextToken.kind;\n         }\n         return this.jj_ntk = this.jj_nt.kind;\n     }\n     \n-    private void jj_add_error_token(final int kind, final int pos) {\n-        if (pos >= 100) {\n+    private void jj_add_error_token(final int n, final int jj_endpos) {\n+        if (jj_endpos >= 100) {\n             return;\n         }\n-        if (pos == this.jj_endpos + 1) {\n-            this.jj_lasttokens[this.jj_endpos++] = kind;\n+        if (jj_endpos == this.jj_endpos + 1) {\n+            this.jj_lasttokens[this.jj_endpos++] = n;\n         }\n         else if (this.jj_endpos != 0) {\n             this.jj_expentry = new int[this.jj_endpos];\n             for (int i = 0; i < this.jj_endpos; ++i) {\n                 this.jj_expentry[i] = this.jj_lasttokens[i];\n             }\n         Label_0092:\n-            for (final int[] oldentry : this.jj_expentries) {\n-                if (oldentry.length == this.jj_expentry.length) {\n+            for (final int[] array : this.jj_expentries) {\n+                if (array.length == this.jj_expentry.length) {\n                     for (int j = 0; j < this.jj_expentry.length; ++j) {\n-                        if (oldentry[j] != this.jj_expentry[j]) {\n+                        if (array[j] != this.jj_expentry[j]) {\n                             continue Label_0092;\n                         }\n                     }\n                     this.jj_expentries.add(this.jj_expentry);\n                     break;\n                 }\n             }\n-            if (pos != 0) {\n-                this.jj_lasttokens[(this.jj_endpos = pos) - 1] = kind;\n+            if (jj_endpos != 0) {\n+                this.jj_lasttokens[(this.jj_endpos = jj_endpos) - 1] = n;\n             }\n         }\n     }\n     \n     public ParseException generateParseException() {\n         this.jj_expentries.clear();\n-        final boolean[] la1tokens = new boolean[30];\n+        final boolean[] array = new boolean[30];\n         if (this.jj_kind >= 0) {\n-            la1tokens[this.jj_kind] = true;\n+            array[this.jj_kind] = true;\n             this.jj_kind = -1;\n         }\n         for (int i = 0; i < 6; ++i) {\n             if (this.jj_la1[i] == this.jj_gen) {\n                 for (int j = 0; j < 32; ++j) {\n                     if ((PropertyListParser.jj_la1_0[i] & 1 << j) != 0x0) {\n-                        la1tokens[j] = true;\n+                        array[j] = true;\n                     }\n                 }\n             }\n         }\n-        for (int i = 0; i < 30; ++i) {\n-            if (la1tokens[i]) {\n-                (this.jj_expentry = new int[1])[0] = i;\n+        for (int k = 0; k < 30; ++k) {\n+            if (array[k]) {\n+                (this.jj_expentry = new int[1])[0] = k;\n                 this.jj_expentries.add(this.jj_expentry);\n             }\n         }\n         this.jj_endpos = 0;\n         this.jj_rescan_token();\n         this.jj_add_error_token(0, 0);\n-        final int[][] exptokseq = new int[this.jj_expentries.size()][];\n-        for (int k = 0; k < this.jj_expentries.size(); ++k) {\n-            exptokseq[k] = this.jj_expentries.get(k);\n+        final int[][] array2 = new int[this.jj_expentries.size()][];\n+        for (int l = 0; l < this.jj_expentries.size(); ++l) {\n+            array2[l] = this.jj_expentries.get(l);\n         }\n-        return new ParseException(this.token, exptokseq, PropertyListParser.tokenImage);\n+        return new ParseException(this.token, array2, PropertyListParser.tokenImage);\n     }\n     \n     public final void enable_tracing() {\n     }\n     \n     public final void disable_tracing() {\n     }\n     \n     private void jj_rescan_token() {\n         this.jj_rescan = true;\n         for (int i = 0; i < 1; ++i) {\n             try {\n-                PropertyListParser.JJCalls p = this.jj_2_rtns[i];\n+                PropertyListParser.JJCalls next = this.jj_2_rtns[i];\n                 do {\n-                    if (p.gen > this.jj_gen) {\n-                        this.jj_la = p.arg;\n-                        final Token first = p.first;\n+                    if (next.gen > this.jj_gen) {\n+                        this.jj_la = next.arg;\n+                        final Token first = next.first;\n                         this.jj_scanpos = first;\n                         this.jj_lastpos = first;\n                         switch (i) {\n                             case 0: {\n                                 this.jj_3_1();\n                                 break;\n                             }\n                         }\n                     }\n-                    p = p.next;\n-                } while (p != null);\n+                    next = next.next;\n+                } while (next != null);\n             }\n             catch (final PropertyListParser.LookaheadSuccess lookaheadSuccess) {}\n         }\n         this.jj_rescan = false;\n     }\n     \n-    private void jj_save(final int index, final int xla) {\n-        PropertyListParser.JJCalls p;\n-        for (p = this.jj_2_rtns[index]; p.gen > this.jj_gen; p = p.next) {\n-            if (p.next == null) {\n-                final PropertyListParser.JJCalls jjCalls = p;\n-                final PropertyListParser.JJCalls next = new PropertyListParser.JJCalls();\n-                jjCalls.next = next;\n-                p = next;\n+    private void jj_save(final int n, final int arg) {\n+        PropertyListParser.JJCalls next;\n+        for (next = this.jj_2_rtns[n]; next.gen > this.jj_gen; next = next.next) {\n+            if (next.next == null) {\n+                final PropertyListParser.JJCalls jjCalls = next;\n+                final PropertyListParser.JJCalls next2 = new PropertyListParser.JJCalls();\n+                jjCalls.next = next2;\n+                next = next2;\n                 break;\n             }\n         }\n-        p.gen = this.jj_gen + xla - this.jj_la;\n-        p.first = this.token;\n-        p.arg = xla;\n+        next.gen = this.jj_gen + arg - this.jj_la;\n+        next.first = this.token;\n+        next.arg = arg;\n     }\n     \n     static {\n         jj_la1_init_0();\n     }\n }\n"}]}
