{"diffoscope-json-version": 1, "source1": "first/LocaleUtils.class", "source2": "second/LocaleUtils.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,24 +1,29 @@\n \n package org.apache.commons.lang3;\n \n-import java.util.concurrent.ConcurrentHashMap;\n import java.util.Iterator;\n import java.util.Set;\n import java.util.Collections;\n import java.util.ArrayList;\n+import java.util.concurrent.ConcurrentHashMap;\n import java.util.Locale;\n import java.util.List;\n import java.util.concurrent.ConcurrentMap;\n \n public class LocaleUtils\n {\n     private static final ConcurrentMap<String, List<Locale>> cLanguagesByCountry;\n     private static final ConcurrentMap<String, List<Locale>> cCountriesByLanguage;\n     \n+    static {\n+        cLanguagesByCountry = new ConcurrentHashMap<String, List<Locale>>();\n+        cCountriesByLanguage = new ConcurrentHashMap<String, List<Locale>>();\n+    }\n+    \n     public static Locale toLocale(final String str) {\n         if (str == null) {\n             return null;\n         }\n         if (str.isEmpty()) {\n             return new Locale(\"\", \"\");\n         }\n@@ -105,19 +110,19 @@\n                 list.add(defaultLocale);\n             }\n         }\n         return Collections.unmodifiableList((List<? extends Locale>)list);\n     }\n     \n     public static List<Locale> availableLocaleList() {\n-        return LocaleUtils.SyncAvoid.access$000();\n+        return LocaleUtils.SyncAvoid.access$0();\n     }\n     \n     public static Set<Locale> availableLocaleSet() {\n-        return LocaleUtils.SyncAvoid.access$100();\n+        return LocaleUtils.SyncAvoid.access$1();\n     }\n     \n     public static boolean isAvailableLocale(final Locale locale) {\n         return availableLocaleList().contains(locale);\n     }\n     \n     public static List<Locale> languagesByCountry(final String countryCode) {\n@@ -155,13 +160,8 @@\n             }\n             countries = Collections.unmodifiableList((List<? extends Locale>)countries);\n             LocaleUtils.cCountriesByLanguage.putIfAbsent(languageCode, countries);\n             countries = LocaleUtils.cCountriesByLanguage.get(languageCode);\n         }\n         return countries;\n     }\n-    \n-    static {\n-        cLanguagesByCountry = new ConcurrentHashMap<String, List<Locale>>();\n-        cCountriesByLanguage = new ConcurrentHashMap<String, List<Locale>>();\n-    }\n }\n"}]}
