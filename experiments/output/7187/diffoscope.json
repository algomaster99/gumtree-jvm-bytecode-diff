{"diffoscope-json-version": 1, "source1": "first/ParserMinimalBase.class", "source2": "second/ParserMinimalBase.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,159 +1,159 @@\n-  SHA-256 checksum d397700932e1fe826e1394bb9a47d5f508476b639168e353dfa7db1c7a17a4f7\n+  SHA-256 checksum 46320d8204c61b5693e83c216c2224650d0e67b92eabcfa4a8ec8c864e22dd02\n   Compiled from \"ParserMinimalBase.java\"\n public abstract class com.fasterxml.jackson.core.base.ParserMinimalBase extends com.fasterxml.jackson.core.JsonParser\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #145                        // com/fasterxml/jackson/core/base/ParserMinimalBase\n   super_class: #146                       // com/fasterxml/jackson/core/JsonParser\n   interfaces: 0, fields: 50, methods: 69, attributes: 1\n Constant pool:\n-    #1 = Class              #392          // java/lang/Integer\n-    #2 = Class              #393          // java/lang/Long\n-    #3 = Class              #394          // com/fasterxml/jackson/core/JsonTokenId\n-    #4 = Methodref          #146.#395     // com/fasterxml/jackson/core/JsonParser.\"<init>\":()V\n-    #5 = Methodref          #146.#396     // com/fasterxml/jackson/core/JsonParser.\"<init>\":(I)V\n-    #6 = Fieldref           #145.#397     // com/fasterxml/jackson/core/base/ParserMinimalBase._currToken:Lcom/fasterxml/jackson/core/JsonToken;\n-    #7 = Methodref          #398.#399     // com/fasterxml/jackson/core/JsonToken.id:()I\n-    #8 = Fieldref           #398.#400     // com/fasterxml/jackson/core/JsonToken.START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n-    #9 = Fieldref           #398.#401     // com/fasterxml/jackson/core/JsonToken.START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n-   #10 = Fieldref           #398.#402     // com/fasterxml/jackson/core/JsonToken.VALUE_NUMBER_INT:Lcom/fasterxml/jackson/core/JsonToken;\n-   #11 = Methodref          #145.#403     // com/fasterxml/jackson/core/base/ParserMinimalBase.nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n-   #12 = Fieldref           #398.#404     // com/fasterxml/jackson/core/JsonToken.FIELD_NAME:Lcom/fasterxml/jackson/core/JsonToken;\n-   #13 = Methodref          #145.#405     // com/fasterxml/jackson/core/base/ParserMinimalBase._handleEOF:()V\n-   #14 = Methodref          #398.#406     // com/fasterxml/jackson/core/JsonToken.isStructStart:()Z\n-   #15 = Methodref          #398.#407     // com/fasterxml/jackson/core/JsonToken.isStructEnd:()Z\n-   #16 = Fieldref           #398.#408     // com/fasterxml/jackson/core/JsonToken.NOT_AVAILABLE:Lcom/fasterxml/jackson/core/JsonToken;\n-   #17 = String             #409          // Not enough content available for `skipChildren()`: non-blocking parser? (%s)\n-   #18 = Methodref          #55.#410      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #19 = Methodref          #411.#412     // java/lang/Class.getName:()Ljava/lang/String;\n-   #20 = Methodref          #145.#413     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportError:(Ljava/lang/String;Ljava/lang/Object;)V\n-   #21 = Fieldref           #145.#414     // com/fasterxml/jackson/core/base/ParserMinimalBase._lastClearedToken:Lcom/fasterxml/jackson/core/JsonToken;\n-   #22 = Methodref          #145.#415     // com/fasterxml/jackson/core/base/ParserMinimalBase.getText:()Ljava/lang/String;\n-   #23 = Methodref          #122.#416     // java/lang/String.trim:()Ljava/lang/String;\n-   #24 = String             #417          // true\n-   #25 = Methodref          #122.#418     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #26 = String             #419          // false\n-   #27 = Methodref          #145.#420     // com/fasterxml/jackson/core/base/ParserMinimalBase._hasTextualNull:(Ljava/lang/String;)Z\n-   #28 = Methodref          #145.#421     // com/fasterxml/jackson/core/base/ParserMinimalBase.getIntValue:()I\n-   #29 = Methodref          #145.#422     // com/fasterxml/jackson/core/base/ParserMinimalBase.getEmbeddedObject:()Ljava/lang/Object;\n-   #30 = Class              #423          // java/lang/Boolean\n-   #31 = Methodref          #30.#424      // java/lang/Boolean.booleanValue:()Z\n-   #32 = Fieldref           #398.#425     // com/fasterxml/jackson/core/JsonToken.VALUE_NUMBER_FLOAT:Lcom/fasterxml/jackson/core/JsonToken;\n-   #33 = Methodref          #145.#426     // com/fasterxml/jackson/core/base/ParserMinimalBase.getValueAsInt:(I)I\n-   #34 = Methodref          #427.#428     // com/fasterxml/jackson/core/io/NumberInput.parseAsInt:(Ljava/lang/String;I)I\n-   #35 = Class              #429          // java/lang/Number\n-   #36 = Methodref          #35.#430      // java/lang/Number.intValue:()I\n-   #37 = Methodref          #145.#431     // com/fasterxml/jackson/core/base/ParserMinimalBase.getLongValue:()J\n-   #38 = Methodref          #145.#432     // com/fasterxml/jackson/core/base/ParserMinimalBase.getValueAsLong:(J)J\n-   #39 = Methodref          #427.#433     // com/fasterxml/jackson/core/io/NumberInput.parseAsLong:(Ljava/lang/String;J)J\n-   #40 = Methodref          #35.#434      // java/lang/Number.longValue:()J\n-   #41 = Methodref          #427.#435     // com/fasterxml/jackson/core/io/NumberInput.parseAsDouble:(Ljava/lang/String;D)D\n-   #42 = Methodref          #145.#436     // com/fasterxml/jackson/core/base/ParserMinimalBase.getDoubleValue:()D\n-   #43 = Methodref          #35.#437      // java/lang/Number.doubleValue:()D\n-   #44 = Methodref          #145.#438     // com/fasterxml/jackson/core/base/ParserMinimalBase.getValueAsString:(Ljava/lang/String;)Ljava/lang/String;\n-   #45 = Fieldref           #398.#439     // com/fasterxml/jackson/core/JsonToken.VALUE_STRING:Lcom/fasterxml/jackson/core/JsonToken;\n-   #46 = Methodref          #145.#440     // com/fasterxml/jackson/core/base/ParserMinimalBase.getCurrentName:()Ljava/lang/String;\n-   #47 = Fieldref           #398.#441     // com/fasterxml/jackson/core/JsonToken.VALUE_NULL:Lcom/fasterxml/jackson/core/JsonToken;\n-   #48 = Methodref          #398.#442     // com/fasterxml/jackson/core/JsonToken.isScalarValue:()Z\n-   #49 = Methodref          #443.#444     // com/fasterxml/jackson/core/Base64Variant.decode:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V\n-   #50 = Class              #445          // java/lang/IllegalArgumentException\n-   #51 = Methodref          #50.#446      // java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;\n-   #52 = Methodref          #145.#447     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportError:(Ljava/lang/String;)V\n-   #53 = String             #448          // null\n-   #54 = String             #449          // Unexpected character (%s) in numeric value\n-   #55 = Class              #450          // java/lang/Object\n-   #56 = Methodref          #145.#451     // com/fasterxml/jackson/core/base/ParserMinimalBase._getCharDesc:(I)Ljava/lang/String;\n-   #57 = Methodref          #122.#452     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #58 = Class              #453          // java/lang/StringBuilder\n-   #59 = Methodref          #58.#395      // java/lang/StringBuilder.\"<init>\":()V\n-   #60 = Methodref          #58.#454      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #61 = String             #455          // :\n-   #62 = Methodref          #58.#456      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #63 = Methodref          #145.#457     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportUnexpectedNumberChar:(ILjava/lang/String;)Ljava/lang/Object;\n-   #64 = String             #458          // Invalid numeric value:\n-   #65 = Methodref          #145.#459     // com/fasterxml/jackson/core/base/ParserMinimalBase.reportOverflowInt:(Ljava/lang/String;)V\n-   #66 = Methodref          #145.#460     // com/fasterxml/jackson/core/base/ParserMinimalBase.currentToken:()Lcom/fasterxml/jackson/core/JsonToken;\n-   #67 = Methodref          #145.#461     // com/fasterxml/jackson/core/base/ParserMinimalBase.reportOverflowInt:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n-   #68 = String             #462          // Numeric value (%s) out of range of int (%d - %s)\n-   #69 = Methodref          #145.#463     // com/fasterxml/jackson/core/base/ParserMinimalBase._longIntegerDesc:(Ljava/lang/String;)Ljava/lang/String;\n+    #1 = Class              #389          // java/lang/Integer\n+    #2 = Class              #390          // java/lang/Long\n+    #3 = Class              #391          // com/fasterxml/jackson/core/JsonTokenId\n+    #4 = Methodref          #146.#392     // com/fasterxml/jackson/core/JsonParser.\"<init>\":()V\n+    #5 = Methodref          #146.#393     // com/fasterxml/jackson/core/JsonParser.\"<init>\":(I)V\n+    #6 = Fieldref           #145.#394     // com/fasterxml/jackson/core/base/ParserMinimalBase._currToken:Lcom/fasterxml/jackson/core/JsonToken;\n+    #7 = Methodref          #262.#395     // com/fasterxml/jackson/core/JsonToken.id:()I\n+    #8 = Fieldref           #262.#396     // com/fasterxml/jackson/core/JsonToken.START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n+    #9 = Fieldref           #262.#397     // com/fasterxml/jackson/core/JsonToken.START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+   #10 = Fieldref           #262.#398     // com/fasterxml/jackson/core/JsonToken.VALUE_NUMBER_INT:Lcom/fasterxml/jackson/core/JsonToken;\n+   #11 = Methodref          #145.#399     // com/fasterxml/jackson/core/base/ParserMinimalBase.nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+   #12 = Fieldref           #262.#400     // com/fasterxml/jackson/core/JsonToken.FIELD_NAME:Lcom/fasterxml/jackson/core/JsonToken;\n+   #13 = Methodref          #145.#401     // com/fasterxml/jackson/core/base/ParserMinimalBase._handleEOF:()V\n+   #14 = Methodref          #262.#402     // com/fasterxml/jackson/core/JsonToken.isStructStart:()Z\n+   #15 = Methodref          #262.#403     // com/fasterxml/jackson/core/JsonToken.isStructEnd:()Z\n+   #16 = Fieldref           #262.#404     // com/fasterxml/jackson/core/JsonToken.NOT_AVAILABLE:Lcom/fasterxml/jackson/core/JsonToken;\n+   #17 = String             #405          // Not enough content available for `skipChildren()`: non-blocking parser? (%s)\n+   #18 = Methodref          #55.#406      // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #19 = Methodref          #407.#408     // java/lang/Class.getName:()Ljava/lang/String;\n+   #20 = Methodref          #145.#409     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportError:(Ljava/lang/String;Ljava/lang/Object;)V\n+   #21 = Fieldref           #145.#410     // com/fasterxml/jackson/core/base/ParserMinimalBase._lastClearedToken:Lcom/fasterxml/jackson/core/JsonToken;\n+   #22 = Methodref          #145.#411     // com/fasterxml/jackson/core/base/ParserMinimalBase.getText:()Ljava/lang/String;\n+   #23 = Methodref          #122.#412     // java/lang/String.trim:()Ljava/lang/String;\n+   #24 = String             #413          // true\n+   #25 = Methodref          #122.#414     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #26 = String             #415          // false\n+   #27 = Methodref          #145.#416     // com/fasterxml/jackson/core/base/ParserMinimalBase._hasTextualNull:(Ljava/lang/String;)Z\n+   #28 = Methodref          #145.#417     // com/fasterxml/jackson/core/base/ParserMinimalBase.getIntValue:()I\n+   #29 = Methodref          #145.#418     // com/fasterxml/jackson/core/base/ParserMinimalBase.getEmbeddedObject:()Ljava/lang/Object;\n+   #30 = Class              #419          // java/lang/Boolean\n+   #31 = Methodref          #30.#420      // java/lang/Boolean.booleanValue:()Z\n+   #32 = Fieldref           #262.#421     // com/fasterxml/jackson/core/JsonToken.VALUE_NUMBER_FLOAT:Lcom/fasterxml/jackson/core/JsonToken;\n+   #33 = Methodref          #145.#422     // com/fasterxml/jackson/core/base/ParserMinimalBase.getValueAsInt:(I)I\n+   #34 = Methodref          #423.#424     // com/fasterxml/jackson/core/io/NumberInput.parseAsInt:(Ljava/lang/String;I)I\n+   #35 = Class              #425          // java/lang/Number\n+   #36 = Methodref          #35.#426      // java/lang/Number.intValue:()I\n+   #37 = Methodref          #145.#427     // com/fasterxml/jackson/core/base/ParserMinimalBase.getLongValue:()J\n+   #38 = Methodref          #145.#428     // com/fasterxml/jackson/core/base/ParserMinimalBase.getValueAsLong:(J)J\n+   #39 = Methodref          #423.#429     // com/fasterxml/jackson/core/io/NumberInput.parseAsLong:(Ljava/lang/String;J)J\n+   #40 = Methodref          #35.#430      // java/lang/Number.longValue:()J\n+   #41 = Methodref          #423.#431     // com/fasterxml/jackson/core/io/NumberInput.parseAsDouble:(Ljava/lang/String;D)D\n+   #42 = Methodref          #145.#432     // com/fasterxml/jackson/core/base/ParserMinimalBase.getDoubleValue:()D\n+   #43 = Methodref          #35.#433      // java/lang/Number.doubleValue:()D\n+   #44 = Methodref          #145.#434     // com/fasterxml/jackson/core/base/ParserMinimalBase.getValueAsString:(Ljava/lang/String;)Ljava/lang/String;\n+   #45 = Fieldref           #262.#435     // com/fasterxml/jackson/core/JsonToken.VALUE_STRING:Lcom/fasterxml/jackson/core/JsonToken;\n+   #46 = Methodref          #145.#436     // com/fasterxml/jackson/core/base/ParserMinimalBase.getCurrentName:()Ljava/lang/String;\n+   #47 = Fieldref           #262.#437     // com/fasterxml/jackson/core/JsonToken.VALUE_NULL:Lcom/fasterxml/jackson/core/JsonToken;\n+   #48 = Methodref          #262.#438     // com/fasterxml/jackson/core/JsonToken.isScalarValue:()Z\n+   #49 = Methodref          #439.#440     // com/fasterxml/jackson/core/Base64Variant.decode:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V\n+   #50 = Class              #441          // java/lang/IllegalArgumentException\n+   #51 = Methodref          #50.#442      // java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;\n+   #52 = Methodref          #145.#443     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportError:(Ljava/lang/String;)V\n+   #53 = String             #444          // null\n+   #54 = String             #445          // Unexpected character (%s) in numeric value\n+   #55 = Class              #446          // java/lang/Object\n+   #56 = Methodref          #145.#447     // com/fasterxml/jackson/core/base/ParserMinimalBase._getCharDesc:(I)Ljava/lang/String;\n+   #57 = Methodref          #122.#448     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #58 = Class              #449          // java/lang/StringBuilder\n+   #59 = Methodref          #58.#392      // java/lang/StringBuilder.\"<init>\":()V\n+   #60 = Methodref          #58.#450      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #61 = String             #451          // :\n+   #62 = Methodref          #58.#452      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #63 = Methodref          #145.#453     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportUnexpectedNumberChar:(ILjava/lang/String;)Ljava/lang/Object;\n+   #64 = String             #454          // Invalid numeric value:\n+   #65 = Methodref          #145.#455     // com/fasterxml/jackson/core/base/ParserMinimalBase.reportOverflowInt:(Ljava/lang/String;)V\n+   #66 = Methodref          #145.#456     // com/fasterxml/jackson/core/base/ParserMinimalBase.currentToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+   #67 = Methodref          #145.#457     // com/fasterxml/jackson/core/base/ParserMinimalBase.reportOverflowInt:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n+   #68 = String             #458          // Numeric value (%s) out of range of int (%d - %s)\n+   #69 = Methodref          #145.#459     // com/fasterxml/jackson/core/base/ParserMinimalBase._longIntegerDesc:(Ljava/lang/String;)Ljava/lang/String;\n    #70 = Integer            -2147483648\n-   #71 = Methodref          #1.#464       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+   #71 = Methodref          #1.#460       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n    #72 = Integer            2147483647\n-   #73 = Fieldref           #1.#465       // java/lang/Integer.TYPE:Ljava/lang/Class;\n-   #74 = Methodref          #145.#466     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportInputCoercion:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class;)V\n-   #75 = Methodref          #145.#467     // com/fasterxml/jackson/core/base/ParserMinimalBase.reportOverflowLong:(Ljava/lang/String;)V\n-   #76 = Methodref          #145.#468     // com/fasterxml/jackson/core/base/ParserMinimalBase.reportOverflowLong:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n-   #77 = String             #469          // Numeric value (%s) out of range of long (%d - %s)\n+   #73 = Fieldref           #1.#461       // java/lang/Integer.TYPE:Ljava/lang/Class;\n+   #74 = Methodref          #145.#462     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportInputCoercion:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class;)V\n+   #75 = Methodref          #145.#463     // com/fasterxml/jackson/core/base/ParserMinimalBase.reportOverflowLong:(Ljava/lang/String;)V\n+   #76 = Methodref          #145.#464     // com/fasterxml/jackson/core/base/ParserMinimalBase.reportOverflowLong:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n+   #77 = String             #465          // Numeric value (%s) out of range of long (%d - %s)\n    #78 = Long               -9223372036854775808l\n-   #80 = Methodref          #2.#470       // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+   #80 = Methodref          #2.#466       // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n    #81 = Long               9223372036854775807l\n-   #83 = Fieldref           #2.#465       // java/lang/Long.TYPE:Ljava/lang/Class;\n-   #84 = Class              #471          // com/fasterxml/jackson/core/exc/InputCoercionException\n-   #85 = Methodref          #84.#472      // com/fasterxml/jackson/core/exc/InputCoercionException.\"<init>\":(Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class;)V\n-   #86 = Methodref          #122.#473     // java/lang/String.length:()I\n-   #87 = String             #474          // -\n-   #88 = Methodref          #122.#475     // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-   #89 = String             #476          // [Integer with %d digits]\n-   #90 = String             #477          // [number with %d characters]\n-   #91 = Methodref          #145.#478     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportInvalidEOF:()V\n-   #92 = String             #479          // Unexpected character (%s)\n-   #93 = String             #480          //  in\n-   #94 = Methodref          #58.#481      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #95 = Methodref          #145.#482     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportInvalidEOF:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n-   #96 = String             #483          //  in a String value\n-   #97 = String             #484          //  in a Number value\n-   #98 = String             #485          //  in a value\n-   #99 = Class              #486          // com/fasterxml/jackson/core/io/JsonEOFException\n-  #100 = String             #487          // Unexpected end-of-input\n-  #101 = Methodref          #99.#488      // com/fasterxml/jackson/core/io/JsonEOFException.\"<init>\":(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/String;)V\n-  #102 = Methodref          #145.#489     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportInvalidEOF:(Ljava/lang/String;)V\n-  #103 = String             #490          // Expected space separating root-level values\n-  #104 = Methodref          #145.#491     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportUnexpectedChar:(ILjava/lang/String;)V\n-  #105 = String             #492          // Illegal character (\n-  #106 = String             #493          // ): only regular white space (\\\\r, \\\\n, \\\\t) is allowed between tokens\n-  #107 = Methodref          #494.#495     // java/lang/Character.isISOControl:(C)Z\n-  #108 = String             #496          // (CTRL-CHAR, code\n-  #109 = Methodref          #58.#497      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-  #110 = String             #498          // )\n-  #111 = String             #499          // \\'\n-  #112 = Methodref          #58.#500      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-  #113 = String             #501          // \\' (code\n-  #114 = String             #502          //  / 0x\n-  #115 = Methodref          #1.#503       // java/lang/Integer.toHexString:(I)Ljava/lang/String;\n-  #116 = Methodref          #145.#504     // com/fasterxml/jackson/core/base/ParserMinimalBase._constructError:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParseException;\n-  #117 = Methodref          #145.#505     // com/fasterxml/jackson/core/base/ParserMinimalBase._constructError:(Ljava/lang/String;Ljava/lang/Throwable;)Lcom/fasterxml/jackson/core/JsonParseException;\n-  #118 = Methodref          #506.#507     // com/fasterxml/jackson/core/util/VersionUtil.throwInternal:()V\n-  #119 = Class              #508          // com/fasterxml/jackson/core/JsonParseException\n-  #120 = Methodref          #119.#509     // com/fasterxml/jackson/core/JsonParseException.\"<init>\":(Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #121 = Methodref          #122.#510     // java/lang/String.charAt:(I)C\n-  #122 = Class              #511          // java/lang/String\n-  #123 = String             #512          // US-ASCII\n-  #124 = Methodref          #122.#513     // java/lang/String.\"<init>\":([BLjava/lang/String;)V\n-  #125 = Class              #514          // java/io/IOException\n-  #126 = Class              #515          // java/lang/RuntimeException\n-  #127 = Methodref          #126.#516     // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n-  #128 = Fieldref           #145.#517     // com/fasterxml/jackson/core/base/ParserMinimalBase.NO_BYTES:[B\n-  #129 = Fieldref           #145.#518     // com/fasterxml/jackson/core/base/ParserMinimalBase.NO_INTS:[I\n+   #83 = Fieldref           #2.#461       // java/lang/Long.TYPE:Ljava/lang/Class;\n+   #84 = Class              #467          // com/fasterxml/jackson/core/exc/InputCoercionException\n+   #85 = Methodref          #84.#468      // com/fasterxml/jackson/core/exc/InputCoercionException.\"<init>\":(Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class;)V\n+   #86 = Methodref          #122.#469     // java/lang/String.length:()I\n+   #87 = String             #470          // -\n+   #88 = Methodref          #122.#471     // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+   #89 = String             #472          // [Integer with %d digits]\n+   #90 = String             #473          // [number with %d characters]\n+   #91 = Methodref          #145.#474     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportInvalidEOF:()V\n+   #92 = String             #475          // Unexpected character (%s)\n+   #93 = String             #476          //  in\n+   #94 = Methodref          #58.#477      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #95 = Methodref          #145.#478     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportInvalidEOF:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n+   #96 = String             #479          //  in a String value\n+   #97 = String             #480          //  in a Number value\n+   #98 = String             #481          //  in a value\n+   #99 = Class              #482          // com/fasterxml/jackson/core/io/JsonEOFException\n+  #100 = String             #483          // Unexpected end-of-input\n+  #101 = Methodref          #99.#484      // com/fasterxml/jackson/core/io/JsonEOFException.\"<init>\":(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/String;)V\n+  #102 = Methodref          #145.#485     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportInvalidEOF:(Ljava/lang/String;)V\n+  #103 = String             #486          // Expected space separating root-level values\n+  #104 = Methodref          #145.#487     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportUnexpectedChar:(ILjava/lang/String;)V\n+  #105 = String             #488          // Illegal character (\n+  #106 = String             #489          // ): only regular white space (\\\\r, \\\\n, \\\\t) is allowed between tokens\n+  #107 = Methodref          #490.#491     // java/lang/Character.isISOControl:(C)Z\n+  #108 = String             #492          // (CTRL-CHAR, code\n+  #109 = Methodref          #58.#493      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #110 = String             #494          // )\n+  #111 = String             #495          // \\'\n+  #112 = Methodref          #58.#496      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+  #113 = String             #497          // \\' (code\n+  #114 = String             #498          //  / 0x\n+  #115 = Methodref          #1.#499       // java/lang/Integer.toHexString:(I)Ljava/lang/String;\n+  #116 = Methodref          #145.#500     // com/fasterxml/jackson/core/base/ParserMinimalBase._constructError:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParseException;\n+  #117 = Methodref          #145.#501     // com/fasterxml/jackson/core/base/ParserMinimalBase._constructError:(Ljava/lang/String;Ljava/lang/Throwable;)Lcom/fasterxml/jackson/core/JsonParseException;\n+  #118 = Methodref          #502.#503     // com/fasterxml/jackson/core/util/VersionUtil.throwInternal:()V\n+  #119 = Class              #504          // com/fasterxml/jackson/core/JsonParseException\n+  #120 = Methodref          #119.#505     // com/fasterxml/jackson/core/JsonParseException.\"<init>\":(Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #121 = Methodref          #122.#506     // java/lang/String.charAt:(I)C\n+  #122 = Class              #507          // java/lang/String\n+  #123 = String             #508          // US-ASCII\n+  #124 = Methodref          #122.#509     // java/lang/String.\"<init>\":([BLjava/lang/String;)V\n+  #125 = Class              #510          // java/io/IOException\n+  #126 = Class              #511          // java/lang/RuntimeException\n+  #127 = Methodref          #126.#512     // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+  #128 = Fieldref           #145.#513     // com/fasterxml/jackson/core/base/ParserMinimalBase.NO_BYTES:[B\n+  #129 = Fieldref           #145.#514     // com/fasterxml/jackson/core/base/ParserMinimalBase.NO_INTS:[I\n   #130 = Long               -2147483648l\n-  #132 = Methodref          #519.#520     // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n-  #133 = Fieldref           #145.#521     // com/fasterxml/jackson/core/base/ParserMinimalBase.BI_MIN_INT:Ljava/math/BigInteger;\n+  #132 = Methodref          #515.#516     // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+  #133 = Fieldref           #145.#517     // com/fasterxml/jackson/core/base/ParserMinimalBase.BI_MIN_INT:Ljava/math/BigInteger;\n   #134 = Long               2147483647l\n-  #136 = Fieldref           #145.#522     // com/fasterxml/jackson/core/base/ParserMinimalBase.BI_MAX_INT:Ljava/math/BigInteger;\n-  #137 = Fieldref           #145.#523     // com/fasterxml/jackson/core/base/ParserMinimalBase.BI_MIN_LONG:Ljava/math/BigInteger;\n-  #138 = Fieldref           #145.#524     // com/fasterxml/jackson/core/base/ParserMinimalBase.BI_MAX_LONG:Ljava/math/BigInteger;\n-  #139 = Class              #525          // java/math/BigDecimal\n-  #140 = Methodref          #139.#526     // java/math/BigDecimal.\"<init>\":(Ljava/math/BigInteger;)V\n-  #141 = Fieldref           #145.#527     // com/fasterxml/jackson/core/base/ParserMinimalBase.BD_MIN_LONG:Ljava/math/BigDecimal;\n-  #142 = Fieldref           #145.#528     // com/fasterxml/jackson/core/base/ParserMinimalBase.BD_MAX_LONG:Ljava/math/BigDecimal;\n-  #143 = Fieldref           #145.#529     // com/fasterxml/jackson/core/base/ParserMinimalBase.BD_MIN_INT:Ljava/math/BigDecimal;\n-  #144 = Fieldref           #145.#530     // com/fasterxml/jackson/core/base/ParserMinimalBase.BD_MAX_INT:Ljava/math/BigDecimal;\n-  #145 = Class              #531          // com/fasterxml/jackson/core/base/ParserMinimalBase\n-  #146 = Class              #532          // com/fasterxml/jackson/core/JsonParser\n+  #136 = Fieldref           #145.#518     // com/fasterxml/jackson/core/base/ParserMinimalBase.BI_MAX_INT:Ljava/math/BigInteger;\n+  #137 = Fieldref           #145.#519     // com/fasterxml/jackson/core/base/ParserMinimalBase.BI_MIN_LONG:Ljava/math/BigInteger;\n+  #138 = Fieldref           #145.#520     // com/fasterxml/jackson/core/base/ParserMinimalBase.BI_MAX_LONG:Ljava/math/BigInteger;\n+  #139 = Class              #521          // java/math/BigDecimal\n+  #140 = Methodref          #139.#522     // java/math/BigDecimal.\"<init>\":(Ljava/math/BigInteger;)V\n+  #141 = Fieldref           #145.#523     // com/fasterxml/jackson/core/base/ParserMinimalBase.BD_MIN_LONG:Ljava/math/BigDecimal;\n+  #142 = Fieldref           #145.#524     // com/fasterxml/jackson/core/base/ParserMinimalBase.BD_MAX_LONG:Ljava/math/BigDecimal;\n+  #143 = Fieldref           #145.#525     // com/fasterxml/jackson/core/base/ParserMinimalBase.BD_MIN_INT:Ljava/math/BigDecimal;\n+  #144 = Fieldref           #145.#526     // com/fasterxml/jackson/core/base/ParserMinimalBase.BD_MAX_INT:Ljava/math/BigDecimal;\n+  #145 = Class              #527          // com/fasterxml/jackson/core/base/ParserMinimalBase\n+  #146 = Class              #528          // com/fasterxml/jackson/core/JsonParser\n   #147 = Utf8               INT_TAB\n   #148 = Utf8               I\n   #149 = Utf8               ConstantValue\n   #150 = Integer            9\n   #151 = Utf8               INT_LF\n   #152 = Integer            10\n   #153 = Utf8               INT_CR\n@@ -257,15 +257,15 @@\n   #255 = Utf8               ()Lcom/fasterxml/jackson/core/JsonToken;\n   #256 = Utf8               Exceptions\n   #257 = Utf8               currentToken\n   #258 = Utf8               currentTokenId\n   #259 = Utf8               ()I\n   #260 = Utf8               t\n   #261 = Utf8               StackMapTable\n-  #262 = Class              #533          // com/fasterxml/jackson/core/JsonToken\n+  #262 = Class              #529          // com/fasterxml/jackson/core/JsonToken\n   #263 = Utf8               getCurrentToken\n   #264 = Utf8               getCurrentTokenId\n   #265 = Utf8               Deprecated\n   #266 = Utf8               RuntimeVisibleAnnotations\n   #267 = Utf8               Ljava/lang/Deprecated;\n   #268 = Utf8               hasCurrentToken\n   #269 = Utf8               ()Z\n@@ -304,309 +304,305 @@\n   #302 = Utf8               (Z)Z\n   #303 = Utf8               str\n   #304 = Utf8               Ljava/lang/String;\n   #305 = Utf8               value\n   #306 = Utf8               Ljava/lang/Object;\n   #307 = Utf8               defaultValue\n   #308 = Utf8               Z\n-  #309 = Class              #511          // java/lang/String\n-  #310 = Utf8               getValueAsInt\n-  #311 = Utf8               (I)I\n-  #312 = Utf8               getValueAsLong\n-  #313 = Utf8               ()J\n-  #314 = Utf8               (J)J\n-  #315 = Utf8               getValueAsDouble\n-  #316 = Utf8               (D)D\n-  #317 = Utf8               getValueAsString\n-  #318 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #319 = Utf8               _decodeBase64\n-  #320 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;Lcom/fasterxml/jackson/core/Base64Variant;)V\n-  #321 = Utf8               e\n-  #322 = Utf8               Ljava/lang/IllegalArgumentException;\n-  #323 = Utf8               builder\n-  #324 = Utf8               Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n-  #325 = Utf8               b64variant\n-  #326 = Utf8               Lcom/fasterxml/jackson/core/Base64Variant;\n-  #327 = Class              #445          // java/lang/IllegalArgumentException\n-  #328 = Utf8               _hasTextualNull\n-  #329 = Utf8               (Ljava/lang/String;)Z\n-  #330 = Utf8               _reportUnexpectedNumberChar\n-  #331 = Utf8               (ILjava/lang/String;)Ljava/lang/Object;\n-  #332 = Utf8               ch\n-  #333 = Utf8               comment\n-  #334 = Utf8               msg\n-  #335 = Utf8               Signature\n-  #336 = Utf8               <T:Ljava/lang/Object;>(ILjava/lang/String;)TT;\n-  #337 = Utf8               reportUnexpectedNumberChar\n-  #338 = Utf8               (ILjava/lang/String;)V\n-  #339 = Utf8               reportInvalidNumber\n-  #340 = Utf8               reportOverflowInt\n-  #341 = Utf8               numDesc\n-  #342 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n-  #343 = Utf8               inputType\n-  #344 = Utf8               reportOverflowLong\n-  #345 = Utf8               _reportInputCoercion\n-  #346 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class;)V\n-  #347 = Utf8               targetType\n-  #348 = Utf8               Ljava/lang/Class;\n-  #349 = Utf8               LocalVariableTypeTable\n-  #350 = Utf8               Ljava/lang/Class<*>;\n-  #351 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class<*>;)V\n-  #352 = Utf8               _longIntegerDesc\n-  #353 = Utf8               rawNum\n-  #354 = Utf8               rawLen\n-  #355 = Utf8               _longNumberDesc\n-  #356 = Utf8               _reportUnexpectedChar\n-  #357 = Utf8               _reportInvalidEOF\n-  #358 = Utf8               _reportInvalidEOFInValue\n-  #359 = Utf8               (Lcom/fasterxml/jackson/core/JsonToken;)V\n-  #360 = Utf8               type\n-  #361 = Utf8               currToken\n-  #362 = Utf8               _reportMissingRootWS\n-  #363 = Utf8               _throwInvalidSpace\n-  #364 = Utf8               i\n-  #365 = Utf8               c\n-  #366 = Utf8               _getCharDesc\n-  #367 = Utf8               (I)Ljava/lang/String;\n-  #368 = Utf8               _reportError\n-  #369 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)V\n-  #370 = Utf8               arg\n-  #371 = Utf8               (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V\n-  #372 = Utf8               arg1\n-  #373 = Utf8               arg2\n-  #374 = Utf8               _wrapError\n-  #375 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #376 = Utf8               Ljava/lang/Throwable;\n-  #377 = Utf8               _throwInternal\n-  #378 = Utf8               _constructError\n-  #379 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)Lcom/fasterxml/jackson/core/JsonParseException;\n-  #380 = Utf8               _asciiBytes\n-  #381 = Utf8               (Ljava/lang/String;)[B\n-  #382 = Utf8               len\n-  #383 = Utf8               b\n-  #384 = Class              #199          // \"[B\"\n-  #385 = Utf8               _ascii\n-  #386 = Utf8               ([B)Ljava/lang/String;\n-  #387 = Utf8               Ljava/io/IOException;\n-  #388 = Class              #514          // java/io/IOException\n-  #389 = Utf8               <clinit>\n-  #390 = Utf8               SourceFile\n-  #391 = Utf8               ParserMinimalBase.java\n-  #392 = Utf8               java/lang/Integer\n-  #393 = Utf8               java/lang/Long\n-  #394 = Utf8               com/fasterxml/jackson/core/JsonTokenId\n-  #395 = NameAndType        #245:#246     // \"<init>\":()V\n-  #396 = NameAndType        #245:#252     // \"<init>\":(I)V\n-  #397 = NameAndType        #242:#243     // _currToken:Lcom/fasterxml/jackson/core/JsonToken;\n-  #398 = Class              #533          // com/fasterxml/jackson/core/JsonToken\n-  #399 = NameAndType        #272:#259     // id:()I\n-  #400 = NameAndType        #534:#243     // START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n-  #401 = NameAndType        #535:#243     // START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n-  #402 = NameAndType        #536:#243     // VALUE_NUMBER_INT:Lcom/fasterxml/jackson/core/JsonToken;\n-  #403 = NameAndType        #254:#255     // nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n-  #404 = NameAndType        #537:#243     // FIELD_NAME:Lcom/fasterxml/jackson/core/JsonToken;\n-  #405 = NameAndType        #282:#246     // _handleEOF:()V\n-  #406 = NameAndType        #538:#269     // isStructStart:()Z\n-  #407 = NameAndType        #539:#269     // isStructEnd:()Z\n-  #408 = NameAndType        #540:#243     // NOT_AVAILABLE:Lcom/fasterxml/jackson/core/JsonToken;\n-  #409 = Utf8               Not enough content available for `skipChildren()`: non-blocking parser? (%s)\n-  #410 = NameAndType        #541:#542     // getClass:()Ljava/lang/Class;\n-  #411 = Class              #543          // java/lang/Class\n-  #412 = NameAndType        #544:#284     // getName:()Ljava/lang/String;\n-  #413 = NameAndType        #368:#369     // _reportError:(Ljava/lang/String;Ljava/lang/Object;)V\n-  #414 = NameAndType        #244:#243     // _lastClearedToken:Lcom/fasterxml/jackson/core/JsonToken;\n-  #415 = NameAndType        #293:#284     // getText:()Ljava/lang/String;\n-  #416 = NameAndType        #545:#284     // trim:()Ljava/lang/String;\n-  #417 = Utf8               true\n-  #418 = NameAndType        #546:#547     // equals:(Ljava/lang/Object;)Z\n-  #419 = Utf8               false\n-  #420 = NameAndType        #328:#329     // _hasTextualNull:(Ljava/lang/String;)Z\n-  #421 = NameAndType        #548:#259     // getIntValue:()I\n-  #422 = NameAndType        #549:#550     // getEmbeddedObject:()Ljava/lang/Object;\n-  #423 = Utf8               java/lang/Boolean\n-  #424 = NameAndType        #551:#269     // booleanValue:()Z\n-  #425 = NameAndType        #552:#243     // VALUE_NUMBER_FLOAT:Lcom/fasterxml/jackson/core/JsonToken;\n-  #426 = NameAndType        #310:#311     // getValueAsInt:(I)I\n-  #427 = Class              #553          // com/fasterxml/jackson/core/io/NumberInput\n-  #428 = NameAndType        #554:#555     // parseAsInt:(Ljava/lang/String;I)I\n-  #429 = Utf8               java/lang/Number\n-  #430 = NameAndType        #556:#259     // intValue:()I\n-  #431 = NameAndType        #557:#313     // getLongValue:()J\n-  #432 = NameAndType        #312:#314     // getValueAsLong:(J)J\n-  #433 = NameAndType        #558:#559     // parseAsLong:(Ljava/lang/String;J)J\n-  #434 = NameAndType        #560:#313     // longValue:()J\n-  #435 = NameAndType        #561:#562     // parseAsDouble:(Ljava/lang/String;D)D\n-  #436 = NameAndType        #563:#564     // getDoubleValue:()D\n-  #437 = NameAndType        #565:#564     // doubleValue:()D\n-  #438 = NameAndType        #317:#318     // getValueAsString:(Ljava/lang/String;)Ljava/lang/String;\n-  #439 = NameAndType        #566:#243     // VALUE_STRING:Lcom/fasterxml/jackson/core/JsonToken;\n-  #440 = NameAndType        #283:#284     // getCurrentName:()Ljava/lang/String;\n-  #441 = NameAndType        #567:#243     // VALUE_NULL:Lcom/fasterxml/jackson/core/JsonToken;\n-  #442 = NameAndType        #568:#269     // isScalarValue:()Z\n-  #443 = Class              #569          // com/fasterxml/jackson/core/Base64Variant\n-  #444 = NameAndType        #570:#571     // decode:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V\n-  #445 = Utf8               java/lang/IllegalArgumentException\n-  #446 = NameAndType        #572:#284     // getMessage:()Ljava/lang/String;\n-  #447 = NameAndType        #368:#292     // _reportError:(Ljava/lang/String;)V\n-  #448 = Utf8               null\n-  #449 = Utf8               Unexpected character (%s) in numeric value\n-  #450 = Utf8               java/lang/Object\n-  #451 = NameAndType        #366:#367     // _getCharDesc:(I)Ljava/lang/String;\n-  #452 = NameAndType        #573:#574     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #453 = Utf8               java/lang/StringBuilder\n-  #454 = NameAndType        #575:#576     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #455 = Utf8               :\n-  #456 = NameAndType        #577:#284     // toString:()Ljava/lang/String;\n-  #457 = NameAndType        #330:#331     // _reportUnexpectedNumberChar:(ILjava/lang/String;)Ljava/lang/Object;\n-  #458 = Utf8               Invalid numeric value:\n-  #459 = NameAndType        #340:#292     // reportOverflowInt:(Ljava/lang/String;)V\n-  #460 = NameAndType        #257:#255     // currentToken:()Lcom/fasterxml/jackson/core/JsonToken;\n-  #461 = NameAndType        #340:#342     // reportOverflowInt:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n-  #462 = Utf8               Numeric value (%s) out of range of int (%d - %s)\n-  #463 = NameAndType        #352:#318     // _longIntegerDesc:(Ljava/lang/String;)Ljava/lang/String;\n-  #464 = NameAndType        #578:#579     // valueOf:(I)Ljava/lang/Integer;\n-  #465 = NameAndType        #580:#348     // TYPE:Ljava/lang/Class;\n-  #466 = NameAndType        #345:#346     // _reportInputCoercion:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class;)V\n-  #467 = NameAndType        #344:#292     // reportOverflowLong:(Ljava/lang/String;)V\n-  #468 = NameAndType        #344:#342     // reportOverflowLong:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n-  #469 = Utf8               Numeric value (%s) out of range of long (%d - %s)\n-  #470 = NameAndType        #578:#581     // valueOf:(J)Ljava/lang/Long;\n-  #471 = Utf8               com/fasterxml/jackson/core/exc/InputCoercionException\n-  #472 = NameAndType        #245:#582     // \"<init>\":(Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class;)V\n-  #473 = NameAndType        #583:#259     // length:()I\n-  #474 = Utf8               -\n-  #475 = NameAndType        #584:#329     // startsWith:(Ljava/lang/String;)Z\n-  #476 = Utf8               [Integer with %d digits]\n-  #477 = Utf8               [number with %d characters]\n-  #478 = NameAndType        #357:#246     // _reportInvalidEOF:()V\n-  #479 = Utf8               Unexpected character (%s)\n-  #480 = Utf8                in\n-  #481 = NameAndType        #575:#585     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #482 = NameAndType        #357:#342     // _reportInvalidEOF:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n-  #483 = Utf8                in a String value\n-  #484 = Utf8                in a Number value\n-  #485 = Utf8                in a value\n-  #486 = Utf8               com/fasterxml/jackson/core/io/JsonEOFException\n-  #487 = Utf8               Unexpected end-of-input\n-  #488 = NameAndType        #245:#586     // \"<init>\":(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/String;)V\n-  #489 = NameAndType        #357:#292     // _reportInvalidEOF:(Ljava/lang/String;)V\n-  #490 = Utf8               Expected space separating root-level values\n-  #491 = NameAndType        #356:#338     // _reportUnexpectedChar:(ILjava/lang/String;)V\n-  #492 = Utf8               Illegal character (\n-  #493 = Utf8               ): only regular white space (\\\\r, \\\\n, \\\\t) is allowed between tokens\n-  #494 = Class              #587          // java/lang/Character\n-  #495 = NameAndType        #588:#589     // isISOControl:(C)Z\n-  #496 = Utf8               (CTRL-CHAR, code\n-  #497 = NameAndType        #575:#590     // append:(I)Ljava/lang/StringBuilder;\n-  #498 = Utf8               )\n-  #499 = Utf8               \\'\n-  #500 = NameAndType        #575:#591     // append:(C)Ljava/lang/StringBuilder;\n-  #501 = Utf8               \\' (code\n-  #502 = Utf8                / 0x\n-  #503 = NameAndType        #592:#367     // toHexString:(I)Ljava/lang/String;\n-  #504 = NameAndType        #378:#593     // _constructError:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParseException;\n-  #505 = NameAndType        #378:#379     // _constructError:(Ljava/lang/String;Ljava/lang/Throwable;)Lcom/fasterxml/jackson/core/JsonParseException;\n-  #506 = Class              #594          // com/fasterxml/jackson/core/util/VersionUtil\n-  #507 = NameAndType        #595:#246     // throwInternal:()V\n-  #508 = Utf8               com/fasterxml/jackson/core/JsonParseException\n-  #509 = NameAndType        #245:#596     // \"<init>\":(Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #510 = NameAndType        #597:#598     // charAt:(I)C\n-  #511 = Utf8               java/lang/String\n-  #512 = Utf8               US-ASCII\n-  #513 = NameAndType        #245:#599     // \"<init>\":([BLjava/lang/String;)V\n-  #514 = Utf8               java/io/IOException\n-  #515 = Utf8               java/lang/RuntimeException\n-  #516 = NameAndType        #245:#600     // \"<init>\":(Ljava/lang/Throwable;)V\n-  #517 = NameAndType        #198:#199     // NO_BYTES:[B\n-  #518 = NameAndType        #200:#201     // NO_INTS:[I\n-  #519 = Class              #601          // java/math/BigInteger\n-  #520 = NameAndType        #578:#602     // valueOf:(J)Ljava/math/BigInteger;\n-  #521 = NameAndType        #214:#215     // BI_MIN_INT:Ljava/math/BigInteger;\n-  #522 = NameAndType        #216:#215     // BI_MAX_INT:Ljava/math/BigInteger;\n-  #523 = NameAndType        #217:#215     // BI_MIN_LONG:Ljava/math/BigInteger;\n-  #524 = NameAndType        #218:#215     // BI_MAX_LONG:Ljava/math/BigInteger;\n-  #525 = Utf8               java/math/BigDecimal\n-  #526 = NameAndType        #245:#603     // \"<init>\":(Ljava/math/BigInteger;)V\n-  #527 = NameAndType        #219:#220     // BD_MIN_LONG:Ljava/math/BigDecimal;\n-  #528 = NameAndType        #221:#220     // BD_MAX_LONG:Ljava/math/BigDecimal;\n-  #529 = NameAndType        #222:#220     // BD_MIN_INT:Ljava/math/BigDecimal;\n-  #530 = NameAndType        #223:#220     // BD_MAX_INT:Ljava/math/BigDecimal;\n-  #531 = Utf8               com/fasterxml/jackson/core/base/ParserMinimalBase\n-  #532 = Utf8               com/fasterxml/jackson/core/JsonParser\n-  #533 = Utf8               com/fasterxml/jackson/core/JsonToken\n-  #534 = Utf8               START_ARRAY\n-  #535 = Utf8               START_OBJECT\n-  #536 = Utf8               VALUE_NUMBER_INT\n-  #537 = Utf8               FIELD_NAME\n-  #538 = Utf8               isStructStart\n-  #539 = Utf8               isStructEnd\n-  #540 = Utf8               NOT_AVAILABLE\n-  #541 = Utf8               getClass\n-  #542 = Utf8               ()Ljava/lang/Class;\n-  #543 = Utf8               java/lang/Class\n-  #544 = Utf8               getName\n-  #545 = Utf8               trim\n-  #546 = Utf8               equals\n-  #547 = Utf8               (Ljava/lang/Object;)Z\n-  #548 = Utf8               getIntValue\n-  #549 = Utf8               getEmbeddedObject\n-  #550 = Utf8               ()Ljava/lang/Object;\n-  #551 = Utf8               booleanValue\n-  #552 = Utf8               VALUE_NUMBER_FLOAT\n-  #553 = Utf8               com/fasterxml/jackson/core/io/NumberInput\n-  #554 = Utf8               parseAsInt\n-  #555 = Utf8               (Ljava/lang/String;I)I\n-  #556 = Utf8               intValue\n-  #557 = Utf8               getLongValue\n-  #558 = Utf8               parseAsLong\n-  #559 = Utf8               (Ljava/lang/String;J)J\n-  #560 = Utf8               longValue\n-  #561 = Utf8               parseAsDouble\n-  #562 = Utf8               (Ljava/lang/String;D)D\n-  #563 = Utf8               getDoubleValue\n-  #564 = Utf8               ()D\n-  #565 = Utf8               doubleValue\n-  #566 = Utf8               VALUE_STRING\n-  #567 = Utf8               VALUE_NULL\n-  #568 = Utf8               isScalarValue\n-  #569 = Utf8               com/fasterxml/jackson/core/Base64Variant\n-  #570 = Utf8               decode\n-  #571 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V\n-  #572 = Utf8               getMessage\n-  #573 = Utf8               format\n-  #574 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #575 = Utf8               append\n-  #576 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #577 = Utf8               toString\n-  #578 = Utf8               valueOf\n-  #579 = Utf8               (I)Ljava/lang/Integer;\n-  #580 = Utf8               TYPE\n-  #581 = Utf8               (J)Ljava/lang/Long;\n-  #582 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class;)V\n-  #583 = Utf8               length\n-  #584 = Utf8               startsWith\n-  #585 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #586 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/String;)V\n-  #587 = Utf8               java/lang/Character\n-  #588 = Utf8               isISOControl\n-  #589 = Utf8               (C)Z\n-  #590 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #591 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #592 = Utf8               toHexString\n-  #593 = Utf8               (Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParseException;\n-  #594 = Utf8               com/fasterxml/jackson/core/util/VersionUtil\n-  #595 = Utf8               throwInternal\n-  #596 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #597 = Utf8               charAt\n-  #598 = Utf8               (I)C\n-  #599 = Utf8               ([BLjava/lang/String;)V\n-  #600 = Utf8               (Ljava/lang/Throwable;)V\n-  #601 = Utf8               java/math/BigInteger\n-  #602 = Utf8               (J)Ljava/math/BigInteger;\n-  #603 = Utf8               (Ljava/math/BigInteger;)V\n+  #309 = Utf8               getValueAsInt\n+  #310 = Utf8               (I)I\n+  #311 = Utf8               getValueAsLong\n+  #312 = Utf8               ()J\n+  #313 = Utf8               (J)J\n+  #314 = Utf8               getValueAsDouble\n+  #315 = Utf8               (D)D\n+  #316 = Utf8               getValueAsString\n+  #317 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #318 = Utf8               _decodeBase64\n+  #319 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;Lcom/fasterxml/jackson/core/Base64Variant;)V\n+  #320 = Utf8               e\n+  #321 = Utf8               Ljava/lang/IllegalArgumentException;\n+  #322 = Utf8               builder\n+  #323 = Utf8               Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n+  #324 = Utf8               b64variant\n+  #325 = Utf8               Lcom/fasterxml/jackson/core/Base64Variant;\n+  #326 = Utf8               _hasTextualNull\n+  #327 = Utf8               (Ljava/lang/String;)Z\n+  #328 = Utf8               _reportUnexpectedNumberChar\n+  #329 = Utf8               (ILjava/lang/String;)Ljava/lang/Object;\n+  #330 = Utf8               ch\n+  #331 = Utf8               comment\n+  #332 = Utf8               msg\n+  #333 = Utf8               Signature\n+  #334 = Utf8               <T:Ljava/lang/Object;>(ILjava/lang/String;)TT;\n+  #335 = Utf8               reportUnexpectedNumberChar\n+  #336 = Utf8               (ILjava/lang/String;)V\n+  #337 = Utf8               reportInvalidNumber\n+  #338 = Utf8               reportOverflowInt\n+  #339 = Utf8               numDesc\n+  #340 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n+  #341 = Utf8               inputType\n+  #342 = Utf8               reportOverflowLong\n+  #343 = Utf8               _reportInputCoercion\n+  #344 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class;)V\n+  #345 = Utf8               targetType\n+  #346 = Utf8               Ljava/lang/Class;\n+  #347 = Utf8               LocalVariableTypeTable\n+  #348 = Utf8               Ljava/lang/Class<*>;\n+  #349 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class<*>;)V\n+  #350 = Utf8               _longIntegerDesc\n+  #351 = Utf8               rawNum\n+  #352 = Utf8               rawLen\n+  #353 = Utf8               _longNumberDesc\n+  #354 = Utf8               _reportUnexpectedChar\n+  #355 = Utf8               _reportInvalidEOF\n+  #356 = Utf8               _reportInvalidEOFInValue\n+  #357 = Utf8               (Lcom/fasterxml/jackson/core/JsonToken;)V\n+  #358 = Utf8               type\n+  #359 = Utf8               currToken\n+  #360 = Utf8               _reportMissingRootWS\n+  #361 = Utf8               _throwInvalidSpace\n+  #362 = Utf8               i\n+  #363 = Utf8               c\n+  #364 = Utf8               _getCharDesc\n+  #365 = Utf8               (I)Ljava/lang/String;\n+  #366 = Utf8               _reportError\n+  #367 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)V\n+  #368 = Utf8               arg\n+  #369 = Utf8               (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V\n+  #370 = Utf8               arg1\n+  #371 = Utf8               arg2\n+  #372 = Utf8               _wrapError\n+  #373 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #374 = Utf8               Ljava/lang/Throwable;\n+  #375 = Utf8               _throwInternal\n+  #376 = Utf8               _constructError\n+  #377 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)Lcom/fasterxml/jackson/core/JsonParseException;\n+  #378 = Utf8               _asciiBytes\n+  #379 = Utf8               (Ljava/lang/String;)[B\n+  #380 = Utf8               len\n+  #381 = Utf8               b\n+  #382 = Class              #199          // \"[B\"\n+  #383 = Utf8               _ascii\n+  #384 = Utf8               ([B)Ljava/lang/String;\n+  #385 = Utf8               Ljava/io/IOException;\n+  #386 = Utf8               <clinit>\n+  #387 = Utf8               SourceFile\n+  #388 = Utf8               ParserMinimalBase.java\n+  #389 = Utf8               java/lang/Integer\n+  #390 = Utf8               java/lang/Long\n+  #391 = Utf8               com/fasterxml/jackson/core/JsonTokenId\n+  #392 = NameAndType        #245:#246     // \"<init>\":()V\n+  #393 = NameAndType        #245:#252     // \"<init>\":(I)V\n+  #394 = NameAndType        #242:#243     // _currToken:Lcom/fasterxml/jackson/core/JsonToken;\n+  #395 = NameAndType        #272:#259     // id:()I\n+  #396 = NameAndType        #530:#243     // START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n+  #397 = NameAndType        #531:#243     // START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+  #398 = NameAndType        #532:#243     // VALUE_NUMBER_INT:Lcom/fasterxml/jackson/core/JsonToken;\n+  #399 = NameAndType        #254:#255     // nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+  #400 = NameAndType        #533:#243     // FIELD_NAME:Lcom/fasterxml/jackson/core/JsonToken;\n+  #401 = NameAndType        #282:#246     // _handleEOF:()V\n+  #402 = NameAndType        #534:#269     // isStructStart:()Z\n+  #403 = NameAndType        #535:#269     // isStructEnd:()Z\n+  #404 = NameAndType        #536:#243     // NOT_AVAILABLE:Lcom/fasterxml/jackson/core/JsonToken;\n+  #405 = Utf8               Not enough content available for `skipChildren()`: non-blocking parser? (%s)\n+  #406 = NameAndType        #537:#538     // getClass:()Ljava/lang/Class;\n+  #407 = Class              #539          // java/lang/Class\n+  #408 = NameAndType        #540:#284     // getName:()Ljava/lang/String;\n+  #409 = NameAndType        #366:#367     // _reportError:(Ljava/lang/String;Ljava/lang/Object;)V\n+  #410 = NameAndType        #244:#243     // _lastClearedToken:Lcom/fasterxml/jackson/core/JsonToken;\n+  #411 = NameAndType        #293:#284     // getText:()Ljava/lang/String;\n+  #412 = NameAndType        #541:#284     // trim:()Ljava/lang/String;\n+  #413 = Utf8               true\n+  #414 = NameAndType        #542:#543     // equals:(Ljava/lang/Object;)Z\n+  #415 = Utf8               false\n+  #416 = NameAndType        #326:#327     // _hasTextualNull:(Ljava/lang/String;)Z\n+  #417 = NameAndType        #544:#259     // getIntValue:()I\n+  #418 = NameAndType        #545:#546     // getEmbeddedObject:()Ljava/lang/Object;\n+  #419 = Utf8               java/lang/Boolean\n+  #420 = NameAndType        #547:#269     // booleanValue:()Z\n+  #421 = NameAndType        #548:#243     // VALUE_NUMBER_FLOAT:Lcom/fasterxml/jackson/core/JsonToken;\n+  #422 = NameAndType        #309:#310     // getValueAsInt:(I)I\n+  #423 = Class              #549          // com/fasterxml/jackson/core/io/NumberInput\n+  #424 = NameAndType        #550:#551     // parseAsInt:(Ljava/lang/String;I)I\n+  #425 = Utf8               java/lang/Number\n+  #426 = NameAndType        #552:#259     // intValue:()I\n+  #427 = NameAndType        #553:#312     // getLongValue:()J\n+  #428 = NameAndType        #311:#313     // getValueAsLong:(J)J\n+  #429 = NameAndType        #554:#555     // parseAsLong:(Ljava/lang/String;J)J\n+  #430 = NameAndType        #556:#312     // longValue:()J\n+  #431 = NameAndType        #557:#558     // parseAsDouble:(Ljava/lang/String;D)D\n+  #432 = NameAndType        #559:#560     // getDoubleValue:()D\n+  #433 = NameAndType        #561:#560     // doubleValue:()D\n+  #434 = NameAndType        #316:#317     // getValueAsString:(Ljava/lang/String;)Ljava/lang/String;\n+  #435 = NameAndType        #562:#243     // VALUE_STRING:Lcom/fasterxml/jackson/core/JsonToken;\n+  #436 = NameAndType        #283:#284     // getCurrentName:()Ljava/lang/String;\n+  #437 = NameAndType        #563:#243     // VALUE_NULL:Lcom/fasterxml/jackson/core/JsonToken;\n+  #438 = NameAndType        #564:#269     // isScalarValue:()Z\n+  #439 = Class              #565          // com/fasterxml/jackson/core/Base64Variant\n+  #440 = NameAndType        #566:#567     // decode:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V\n+  #441 = Utf8               java/lang/IllegalArgumentException\n+  #442 = NameAndType        #568:#284     // getMessage:()Ljava/lang/String;\n+  #443 = NameAndType        #366:#292     // _reportError:(Ljava/lang/String;)V\n+  #444 = Utf8               null\n+  #445 = Utf8               Unexpected character (%s) in numeric value\n+  #446 = Utf8               java/lang/Object\n+  #447 = NameAndType        #364:#365     // _getCharDesc:(I)Ljava/lang/String;\n+  #448 = NameAndType        #569:#570     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #449 = Utf8               java/lang/StringBuilder\n+  #450 = NameAndType        #571:#572     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #451 = Utf8               :\n+  #452 = NameAndType        #573:#284     // toString:()Ljava/lang/String;\n+  #453 = NameAndType        #328:#329     // _reportUnexpectedNumberChar:(ILjava/lang/String;)Ljava/lang/Object;\n+  #454 = Utf8               Invalid numeric value:\n+  #455 = NameAndType        #338:#292     // reportOverflowInt:(Ljava/lang/String;)V\n+  #456 = NameAndType        #257:#255     // currentToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+  #457 = NameAndType        #338:#340     // reportOverflowInt:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n+  #458 = Utf8               Numeric value (%s) out of range of int (%d - %s)\n+  #459 = NameAndType        #350:#317     // _longIntegerDesc:(Ljava/lang/String;)Ljava/lang/String;\n+  #460 = NameAndType        #574:#575     // valueOf:(I)Ljava/lang/Integer;\n+  #461 = NameAndType        #576:#346     // TYPE:Ljava/lang/Class;\n+  #462 = NameAndType        #343:#344     // _reportInputCoercion:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class;)V\n+  #463 = NameAndType        #342:#292     // reportOverflowLong:(Ljava/lang/String;)V\n+  #464 = NameAndType        #342:#340     // reportOverflowLong:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n+  #465 = Utf8               Numeric value (%s) out of range of long (%d - %s)\n+  #466 = NameAndType        #574:#577     // valueOf:(J)Ljava/lang/Long;\n+  #467 = Utf8               com/fasterxml/jackson/core/exc/InputCoercionException\n+  #468 = NameAndType        #245:#578     // \"<init>\":(Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class;)V\n+  #469 = NameAndType        #579:#259     // length:()I\n+  #470 = Utf8               -\n+  #471 = NameAndType        #580:#327     // startsWith:(Ljava/lang/String;)Z\n+  #472 = Utf8               [Integer with %d digits]\n+  #473 = Utf8               [number with %d characters]\n+  #474 = NameAndType        #355:#246     // _reportInvalidEOF:()V\n+  #475 = Utf8               Unexpected character (%s)\n+  #476 = Utf8                in\n+  #477 = NameAndType        #571:#581     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #478 = NameAndType        #355:#340     // _reportInvalidEOF:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n+  #479 = Utf8                in a String value\n+  #480 = Utf8                in a Number value\n+  #481 = Utf8                in a value\n+  #482 = Utf8               com/fasterxml/jackson/core/io/JsonEOFException\n+  #483 = Utf8               Unexpected end-of-input\n+  #484 = NameAndType        #245:#582     // \"<init>\":(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/String;)V\n+  #485 = NameAndType        #355:#292     // _reportInvalidEOF:(Ljava/lang/String;)V\n+  #486 = Utf8               Expected space separating root-level values\n+  #487 = NameAndType        #354:#336     // _reportUnexpectedChar:(ILjava/lang/String;)V\n+  #488 = Utf8               Illegal character (\n+  #489 = Utf8               ): only regular white space (\\\\r, \\\\n, \\\\t) is allowed between tokens\n+  #490 = Class              #583          // java/lang/Character\n+  #491 = NameAndType        #584:#585     // isISOControl:(C)Z\n+  #492 = Utf8               (CTRL-CHAR, code\n+  #493 = NameAndType        #571:#586     // append:(I)Ljava/lang/StringBuilder;\n+  #494 = Utf8               )\n+  #495 = Utf8               \\'\n+  #496 = NameAndType        #571:#587     // append:(C)Ljava/lang/StringBuilder;\n+  #497 = Utf8               \\' (code\n+  #498 = Utf8                / 0x\n+  #499 = NameAndType        #588:#365     // toHexString:(I)Ljava/lang/String;\n+  #500 = NameAndType        #376:#589     // _constructError:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParseException;\n+  #501 = NameAndType        #376:#377     // _constructError:(Ljava/lang/String;Ljava/lang/Throwable;)Lcom/fasterxml/jackson/core/JsonParseException;\n+  #502 = Class              #590          // com/fasterxml/jackson/core/util/VersionUtil\n+  #503 = NameAndType        #591:#246     // throwInternal:()V\n+  #504 = Utf8               com/fasterxml/jackson/core/JsonParseException\n+  #505 = NameAndType        #245:#592     // \"<init>\":(Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #506 = NameAndType        #593:#594     // charAt:(I)C\n+  #507 = Utf8               java/lang/String\n+  #508 = Utf8               US-ASCII\n+  #509 = NameAndType        #245:#595     // \"<init>\":([BLjava/lang/String;)V\n+  #510 = Utf8               java/io/IOException\n+  #511 = Utf8               java/lang/RuntimeException\n+  #512 = NameAndType        #245:#596     // \"<init>\":(Ljava/lang/Throwable;)V\n+  #513 = NameAndType        #198:#199     // NO_BYTES:[B\n+  #514 = NameAndType        #200:#201     // NO_INTS:[I\n+  #515 = Class              #597          // java/math/BigInteger\n+  #516 = NameAndType        #574:#598     // valueOf:(J)Ljava/math/BigInteger;\n+  #517 = NameAndType        #214:#215     // BI_MIN_INT:Ljava/math/BigInteger;\n+  #518 = NameAndType        #216:#215     // BI_MAX_INT:Ljava/math/BigInteger;\n+  #519 = NameAndType        #217:#215     // BI_MIN_LONG:Ljava/math/BigInteger;\n+  #520 = NameAndType        #218:#215     // BI_MAX_LONG:Ljava/math/BigInteger;\n+  #521 = Utf8               java/math/BigDecimal\n+  #522 = NameAndType        #245:#599     // \"<init>\":(Ljava/math/BigInteger;)V\n+  #523 = NameAndType        #219:#220     // BD_MIN_LONG:Ljava/math/BigDecimal;\n+  #524 = NameAndType        #221:#220     // BD_MAX_LONG:Ljava/math/BigDecimal;\n+  #525 = NameAndType        #222:#220     // BD_MIN_INT:Ljava/math/BigDecimal;\n+  #526 = NameAndType        #223:#220     // BD_MAX_INT:Ljava/math/BigDecimal;\n+  #527 = Utf8               com/fasterxml/jackson/core/base/ParserMinimalBase\n+  #528 = Utf8               com/fasterxml/jackson/core/JsonParser\n+  #529 = Utf8               com/fasterxml/jackson/core/JsonToken\n+  #530 = Utf8               START_ARRAY\n+  #531 = Utf8               START_OBJECT\n+  #532 = Utf8               VALUE_NUMBER_INT\n+  #533 = Utf8               FIELD_NAME\n+  #534 = Utf8               isStructStart\n+  #535 = Utf8               isStructEnd\n+  #536 = Utf8               NOT_AVAILABLE\n+  #537 = Utf8               getClass\n+  #538 = Utf8               ()Ljava/lang/Class;\n+  #539 = Utf8               java/lang/Class\n+  #540 = Utf8               getName\n+  #541 = Utf8               trim\n+  #542 = Utf8               equals\n+  #543 = Utf8               (Ljava/lang/Object;)Z\n+  #544 = Utf8               getIntValue\n+  #545 = Utf8               getEmbeddedObject\n+  #546 = Utf8               ()Ljava/lang/Object;\n+  #547 = Utf8               booleanValue\n+  #548 = Utf8               VALUE_NUMBER_FLOAT\n+  #549 = Utf8               com/fasterxml/jackson/core/io/NumberInput\n+  #550 = Utf8               parseAsInt\n+  #551 = Utf8               (Ljava/lang/String;I)I\n+  #552 = Utf8               intValue\n+  #553 = Utf8               getLongValue\n+  #554 = Utf8               parseAsLong\n+  #555 = Utf8               (Ljava/lang/String;J)J\n+  #556 = Utf8               longValue\n+  #557 = Utf8               parseAsDouble\n+  #558 = Utf8               (Ljava/lang/String;D)D\n+  #559 = Utf8               getDoubleValue\n+  #560 = Utf8               ()D\n+  #561 = Utf8               doubleValue\n+  #562 = Utf8               VALUE_STRING\n+  #563 = Utf8               VALUE_NULL\n+  #564 = Utf8               isScalarValue\n+  #565 = Utf8               com/fasterxml/jackson/core/Base64Variant\n+  #566 = Utf8               decode\n+  #567 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V\n+  #568 = Utf8               getMessage\n+  #569 = Utf8               format\n+  #570 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #571 = Utf8               append\n+  #572 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #573 = Utf8               toString\n+  #574 = Utf8               valueOf\n+  #575 = Utf8               (I)Ljava/lang/Integer;\n+  #576 = Utf8               TYPE\n+  #577 = Utf8               (J)Ljava/lang/Long;\n+  #578 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class;)V\n+  #579 = Utf8               length\n+  #580 = Utf8               startsWith\n+  #581 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #582 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/String;)V\n+  #583 = Utf8               java/lang/Character\n+  #584 = Utf8               isISOControl\n+  #585 = Utf8               (C)Z\n+  #586 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #587 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #588 = Utf8               toHexString\n+  #589 = Utf8               (Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParseException;\n+  #590 = Utf8               com/fasterxml/jackson/core/util/VersionUtil\n+  #591 = Utf8               throwInternal\n+  #592 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #593 = Utf8               charAt\n+  #594 = Utf8               (I)C\n+  #595 = Utf8               ([BLjava/lang/String;)V\n+  #596 = Utf8               (Ljava/lang/Throwable;)V\n+  #597 = Utf8               java/math/BigInteger\n+  #598 = Utf8               (J)Ljava/math/BigInteger;\n+  #599 = Utf8               (Ljava/math/BigInteger;)V\n {\n   protected static final int INT_TAB = 9;\n     descriptor: I\n     flags: (0x001c) ACC_PROTECTED, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 9\n \n   protected static final int INT_LF = 10;\n@@ -2011,15 +2007,15 @@\n            17      35     3   msg   Ljava/lang/String;\n       StackMapTable: number_of_entries = 1\n         frame_type = 252 /* append */\n           offset_delta = 45\n           locals = [ class java/lang/String ]\n     Exceptions:\n       throws com.fasterxml.jackson.core.JsonParseException\n-    Signature: #336                         // <T:Ljava/lang/Object;>(ILjava/lang/String;)TT;\n+    Signature: #334                         // <T:Ljava/lang/Object;>(ILjava/lang/String;)TT;\n \n   protected void reportUnexpectedNumberChar(int, java.lang.String) throws com.fasterxml.jackson.core.JsonParseException;\n     descriptor: (ILjava/lang/String;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n@@ -2257,15 +2253,15 @@\n             0      12     2 inputType   Lcom/fasterxml/jackson/core/JsonToken;\n             0      12     3 targetType   Ljava/lang/Class;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      12     3 targetType   Ljava/lang/Class<*>;\n     Exceptions:\n       throws com.fasterxml.jackson.core.exc.InputCoercionException\n-    Signature: #351                         // (Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class<*>;)V\n+    Signature: #349                         // (Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class<*>;)V\n \n   protected java.lang.String _longIntegerDesc(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_1\n"}]}
