{"diffoscope-json-version": 1, "source1": "first/TelnetInputStream.class", "source2": "second/TelnetInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,269 +1,269 @@\n-  SHA-256 checksum 4039c0acd760590b69b802ea31787a718d10ea09b7eb54d36ed0de1a26107f83\n+  SHA-256 checksum 64dad431268969bd30ff91fccebefc6cc85ce192f54808382d732d45f0c973c9\n   Compiled from \"TelnetInputStream.java\"\n final class org.apache.commons.net.telnet.TelnetInputStream extends java.io.BufferedInputStream implements java.lang.Runnable\n   minor version: 0\n   major version: 51\n   flags: (0x0030) ACC_FINAL, ACC_SUPER\n-  this_class: #4                          // org/apache/commons/net/telnet/TelnetInputStream\n-  super_class: #63                        // java/io/BufferedInputStream\n+  this_class: #8                          // org/apache/commons/net/telnet/TelnetInputStream\n+  super_class: #2                         // java/io/BufferedInputStream\n   interfaces: 1, fields: 26, methods: 12, attributes: 1\n Constant pool:\n-    #1 = Methodref          #63.#161      // java/io/BufferedInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-    #2 = Fieldref           #4.#162       // org/apache/commons/net/telnet/TelnetInputStream.suboptionCount:I\n-    #3 = Fieldref           #4.#163       // org/apache/commons/net/telnet/TelnetInputStream.client:Lorg/apache/commons/net/telnet/TelnetClient;\n-    #4 = Class              #164          // org/apache/commons/net/telnet/TelnetInputStream\n-    #5 = Fieldref           #4.#165       // org/apache/commons/net/telnet/TelnetInputStream.receiveState:I\n-    #6 = Fieldref           #4.#166       // org/apache/commons/net/telnet/TelnetInputStream.isClosed:Z\n-    #7 = Fieldref           #4.#167       // org/apache/commons/net/telnet/TelnetInputStream.hasReachedEOF:Z\n-    #8 = Fieldref           #4.#168       // org/apache/commons/net/telnet/TelnetInputStream.queue:[I\n-    #9 = Fieldref           #4.#169       // org/apache/commons/net/telnet/TelnetInputStream.queueHead:I\n-   #10 = Fieldref           #4.#170       // org/apache/commons/net/telnet/TelnetInputStream.queueTail:I\n-   #11 = Fieldref           #122.#171     // org/apache/commons/net/telnet/TelnetClient.maxSubnegotiationLength:I\n-   #12 = Fieldref           #4.#172       // org/apache/commons/net/telnet/TelnetInputStream.suboption:[I\n-   #13 = Fieldref           #4.#173       // org/apache/commons/net/telnet/TelnetInputStream.bytesAvailable:I\n-   #14 = Fieldref           #4.#174       // org/apache/commons/net/telnet/TelnetInputStream.ioException:Ljava/io/IOException;\n-   #15 = Fieldref           #4.#175       // org/apache/commons/net/telnet/TelnetInputStream.readIsWaiting:Z\n-   #16 = Fieldref           #4.#176       // org/apache/commons/net/telnet/TelnetInputStream.threaded:Z\n-   #17 = Class              #177          // java/lang/Thread\n-   #18 = Methodref          #17.#178      // java/lang/Thread.\"<init>\":(Ljava/lang/Runnable;)V\n-   #19 = Fieldref           #4.#179       // org/apache/commons/net/telnet/TelnetInputStream.thread:Ljava/lang/Thread;\n-   #20 = Methodref          #4.#180       // org/apache/commons/net/telnet/TelnetInputStream.\"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/net/telnet/TelnetClient;Z)V\n-   #21 = Methodref          #17.#181      // java/lang/Thread.currentThread:()Ljava/lang/Thread;\n-   #22 = Methodref          #17.#182      // java/lang/Thread.getPriority:()I\n-   #23 = Methodref          #17.#183      // java/lang/Thread.setPriority:(I)V\n-   #24 = Methodref          #17.#184      // java/lang/Thread.setDaemon:(Z)V\n-   #25 = Methodref          #17.#185      // java/lang/Thread.start:()V\n-   #26 = Methodref          #63.#186      // java/io/BufferedInputStream.available:()I\n-   #27 = Methodref          #63.#187      // java/io/BufferedInputStream.read:()I\n-   #28 = Methodref          #122.#188     // org/apache/commons/net/telnet/TelnetClient.processAYTResponse:()V\n-   #29 = Methodref          #122.#189     // org/apache/commons/net/telnet/TelnetClient.spyRead:(I)V\n-   #30 = Class              #190          // org/apache/commons/net/telnet/TelnetCommand\n-   #31 = Class              #191          // org/apache/commons/net/telnet/TelnetOption\n-   #32 = Methodref          #122.#192     // org/apache/commons/net/telnet/TelnetClient.requestedDont:(I)Z\n-   #33 = Methodref          #122.#193     // org/apache/commons/net/telnet/TelnetClient.processCommand:(I)V\n-   #34 = Methodref          #122.#194     // org/apache/commons/net/telnet/TelnetClient.processWill:(I)V\n-   #35 = Methodref          #122.#195     // org/apache/commons/net/telnet/TelnetClient.flushOutputStream:()V\n-   #36 = Methodref          #122.#196     // org/apache/commons/net/telnet/TelnetClient.processWont:(I)V\n-   #37 = Methodref          #122.#197     // org/apache/commons/net/telnet/TelnetClient.processDo:(I)V\n-   #38 = Methodref          #122.#198     // org/apache/commons/net/telnet/TelnetClient.processDont:(I)V\n-   #39 = Methodref          #122.#199     // org/apache/commons/net/telnet/TelnetClient.processSuboption:([II)V\n-   #40 = Methodref          #131.#200     // java/lang/Object.notify:()V\n-   #41 = Methodref          #131.#201     // java/lang/Object.wait:()V\n-   #42 = Class              #202          // java/lang/InterruptedException\n-   #43 = Class              #203          // java/lang/IllegalStateException\n-   #44 = String             #204          // Queue is full! Cannot process another character.\n-   #45 = Methodref          #43.#205      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #46 = Class              #206          // java/io/InterruptedIOException\n-   #47 = String             #207          // Fatal thread interruption during read.\n-   #48 = Methodref          #46.#205      // java/io/InterruptedIOException.\"<init>\":(Ljava/lang/String;)V\n-   #49 = Methodref          #4.#208       // org/apache/commons/net/telnet/TelnetInputStream.__read:(Z)I\n-   #50 = Methodref          #131.#209     // java/lang/Object.notifyAll:()V\n-   #51 = Long               100l\n-   #53 = Methodref          #131.#210     // java/lang/Object.wait:(J)V\n-   #54 = Methodref          #4.#211       // org/apache/commons/net/telnet/TelnetInputStream.processChar:(I)Z\n-   #55 = Methodref          #4.#212       // org/apache/commons/net/telnet/TelnetInputStream.read:([BII)I\n-   #56 = Methodref          #4.#187       // org/apache/commons/net/telnet/TelnetInputStream.read:()I\n-   #57 = Methodref          #63.#213      // java/io/BufferedInputStream.close:()V\n-   #58 = Methodref          #17.#214      // java/lang/Thread.isAlive:()Z\n-   #59 = Methodref          #17.#215      // java/lang/Thread.interrupt:()V\n-   #60 = Class              #216          // java/lang/RuntimeException\n-   #61 = Methodref          #122.#217     // org/apache/commons/net/telnet/TelnetClient.notifyInputListener:()V\n-   #62 = Class              #218          // java/io/IOException\n-   #63 = Class              #219          // java/io/BufferedInputStream\n-   #64 = Class              #220          // java/lang/Runnable\n-   #65 = Utf8               EOF\n-   #66 = Utf8               I\n-   #67 = Utf8               ConstantValue\n-   #68 = Integer            -1\n-   #69 = Utf8               WOULD_BLOCK\n-   #70 = Integer            -2\n-   #71 = Utf8               STATE_DATA\n-   #72 = Integer            0\n-   #73 = Utf8               STATE_IAC\n-   #74 = Integer            1\n-   #75 = Utf8               STATE_WILL\n-   #76 = Integer            2\n-   #77 = Utf8               STATE_WONT\n-   #78 = Integer            3\n-   #79 = Utf8               STATE_DO\n-   #80 = Integer            4\n-   #81 = Utf8               STATE_DONT\n-   #82 = Integer            5\n-   #83 = Utf8               STATE_SB\n-   #84 = Integer            6\n-   #85 = Utf8               STATE_SE\n-   #86 = Integer            7\n-   #87 = Utf8               STATE_CR\n-   #88 = Integer            8\n-   #89 = Utf8               STATE_IAC_SB\n-   #90 = Integer            9\n-   #91 = Utf8               hasReachedEOF\n-   #92 = Utf8               Z\n-   #93 = Utf8               isClosed\n-   #94 = Utf8               readIsWaiting\n-   #95 = Utf8               receiveState\n-   #96 = Utf8               queueHead\n-   #97 = Utf8               queueTail\n-   #98 = Utf8               bytesAvailable\n-   #99 = Utf8               queue\n-  #100 = Utf8               [I\n-  #101 = Utf8               client\n-  #102 = Utf8               Lorg/apache/commons/net/telnet/TelnetClient;\n-  #103 = Utf8               thread\n-  #104 = Utf8               Ljava/lang/Thread;\n-  #105 = Utf8               ioException\n-  #106 = Utf8               Ljava/io/IOException;\n-  #107 = Utf8               suboption\n-  #108 = Utf8               suboptionCount\n-  #109 = Utf8               threaded\n-  #110 = Utf8               <init>\n-  #111 = Utf8               (Ljava/io/InputStream;Lorg/apache/commons/net/telnet/TelnetClient;Z)V\n-  #112 = Utf8               Code\n-  #113 = Utf8               LineNumberTable\n-  #114 = Utf8               LocalVariableTable\n-  #115 = Utf8               this\n-  #116 = Utf8               Lorg/apache/commons/net/telnet/TelnetInputStream;\n-  #117 = Utf8               input\n-  #118 = Utf8               Ljava/io/InputStream;\n-  #119 = Utf8               readerThread\n-  #120 = Utf8               StackMapTable\n-  #121 = Class              #221          // java/io/InputStream\n-  #122 = Class              #222          // org/apache/commons/net/telnet/TelnetClient\n-  #123 = Utf8               (Ljava/io/InputStream;Lorg/apache/commons/net/telnet/TelnetClient;)V\n-  #124 = Utf8               _start\n-  #125 = Utf8               ()V\n-  #126 = Utf8               priority\n-  #127 = Utf8               __read\n-  #128 = Utf8               (Z)I\n-  #129 = Utf8               mayBlock\n-  #130 = Utf8               ch\n-  #131 = Class              #223          // java/lang/Object\n-  #132 = Class              #224          // java/lang/Throwable\n-  #133 = Utf8               Exceptions\n-  #134 = Utf8               processChar\n-  #135 = Utf8               (I)Z\n-  #136 = Utf8               e\n-  #137 = Utf8               Ljava/lang/InterruptedException;\n-  #138 = Utf8               bufferWasEmpty\n-  #139 = Utf8               read\n-  #140 = Utf8               ()I\n-  #141 = Utf8               Ljava/io/InterruptedIOException;\n-  #142 = Utf8               ([B)I\n-  #143 = Utf8               buffer\n-  #144 = Utf8               [B\n-  #145 = Utf8               ([BII)I\n-  #146 = Utf8               offset\n-  #147 = Utf8               length\n-  #148 = Utf8               off\n-  #149 = Utf8               markSupported\n-  #150 = Utf8               ()Z\n-  #151 = Utf8               available\n-  #152 = Utf8               close\n-  #153 = Utf8               run\n-  #154 = Utf8               interrupted\n-  #155 = Utf8               re\n-  #156 = Utf8               Ljava/lang/RuntimeException;\n-  #157 = Utf8               notify\n-  #158 = Utf8               ioe\n-  #159 = Utf8               SourceFile\n-  #160 = Utf8               TelnetInputStream.java\n-  #161 = NameAndType        #110:#225     // \"<init>\":(Ljava/io/InputStream;)V\n-  #162 = NameAndType        #108:#66      // suboptionCount:I\n-  #163 = NameAndType        #101:#102     // client:Lorg/apache/commons/net/telnet/TelnetClient;\n-  #164 = Utf8               org/apache/commons/net/telnet/TelnetInputStream\n-  #165 = NameAndType        #95:#66       // receiveState:I\n-  #166 = NameAndType        #93:#92       // isClosed:Z\n-  #167 = NameAndType        #91:#92       // hasReachedEOF:Z\n-  #168 = NameAndType        #99:#100      // queue:[I\n-  #169 = NameAndType        #96:#66       // queueHead:I\n-  #170 = NameAndType        #97:#66       // queueTail:I\n-  #171 = NameAndType        #226:#66      // maxSubnegotiationLength:I\n-  #172 = NameAndType        #107:#100     // suboption:[I\n-  #173 = NameAndType        #98:#66       // bytesAvailable:I\n-  #174 = NameAndType        #105:#106     // ioException:Ljava/io/IOException;\n-  #175 = NameAndType        #94:#92       // readIsWaiting:Z\n-  #176 = NameAndType        #109:#92      // threaded:Z\n-  #177 = Utf8               java/lang/Thread\n-  #178 = NameAndType        #110:#227     // \"<init>\":(Ljava/lang/Runnable;)V\n-  #179 = NameAndType        #103:#104     // thread:Ljava/lang/Thread;\n-  #180 = NameAndType        #110:#111     // \"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/net/telnet/TelnetClient;Z)V\n-  #181 = NameAndType        #228:#229     // currentThread:()Ljava/lang/Thread;\n-  #182 = NameAndType        #230:#140     // getPriority:()I\n-  #183 = NameAndType        #231:#232     // setPriority:(I)V\n-  #184 = NameAndType        #233:#234     // setDaemon:(Z)V\n-  #185 = NameAndType        #235:#125     // start:()V\n-  #186 = NameAndType        #151:#140     // available:()I\n-  #187 = NameAndType        #139:#140     // read:()I\n-  #188 = NameAndType        #236:#125     // processAYTResponse:()V\n-  #189 = NameAndType        #237:#232     // spyRead:(I)V\n-  #190 = Utf8               org/apache/commons/net/telnet/TelnetCommand\n-  #191 = Utf8               org/apache/commons/net/telnet/TelnetOption\n-  #192 = NameAndType        #238:#135     // requestedDont:(I)Z\n-  #193 = NameAndType        #239:#232     // processCommand:(I)V\n-  #194 = NameAndType        #240:#232     // processWill:(I)V\n-  #195 = NameAndType        #241:#125     // flushOutputStream:()V\n-  #196 = NameAndType        #242:#232     // processWont:(I)V\n-  #197 = NameAndType        #243:#232     // processDo:(I)V\n-  #198 = NameAndType        #244:#232     // processDont:(I)V\n-  #199 = NameAndType        #245:#246     // processSuboption:([II)V\n-  #200 = NameAndType        #157:#125     // notify:()V\n-  #201 = NameAndType        #247:#125     // wait:()V\n-  #202 = Utf8               java/lang/InterruptedException\n-  #203 = Utf8               java/lang/IllegalStateException\n-  #204 = Utf8               Queue is full! Cannot process another character.\n-  #205 = NameAndType        #110:#248     // \"<init>\":(Ljava/lang/String;)V\n-  #206 = Utf8               java/io/InterruptedIOException\n-  #207 = Utf8               Fatal thread interruption during read.\n-  #208 = NameAndType        #127:#128     // __read:(Z)I\n-  #209 = NameAndType        #249:#125     // notifyAll:()V\n-  #210 = NameAndType        #247:#250     // wait:(J)V\n-  #211 = NameAndType        #134:#135     // processChar:(I)Z\n-  #212 = NameAndType        #139:#145     // read:([BII)I\n-  #213 = NameAndType        #152:#125     // close:()V\n-  #214 = NameAndType        #251:#150     // isAlive:()Z\n-  #215 = NameAndType        #252:#125     // interrupt:()V\n-  #216 = Utf8               java/lang/RuntimeException\n-  #217 = NameAndType        #253:#125     // notifyInputListener:()V\n-  #218 = Utf8               java/io/IOException\n-  #219 = Utf8               java/io/BufferedInputStream\n-  #220 = Utf8               java/lang/Runnable\n-  #221 = Utf8               java/io/InputStream\n-  #222 = Utf8               org/apache/commons/net/telnet/TelnetClient\n-  #223 = Utf8               java/lang/Object\n-  #224 = Utf8               java/lang/Throwable\n-  #225 = Utf8               (Ljava/io/InputStream;)V\n-  #226 = Utf8               maxSubnegotiationLength\n-  #227 = Utf8               (Ljava/lang/Runnable;)V\n-  #228 = Utf8               currentThread\n-  #229 = Utf8               ()Ljava/lang/Thread;\n-  #230 = Utf8               getPriority\n-  #231 = Utf8               setPriority\n-  #232 = Utf8               (I)V\n-  #233 = Utf8               setDaemon\n-  #234 = Utf8               (Z)V\n-  #235 = Utf8               start\n-  #236 = Utf8               processAYTResponse\n-  #237 = Utf8               spyRead\n-  #238 = Utf8               requestedDont\n-  #239 = Utf8               processCommand\n-  #240 = Utf8               processWill\n-  #241 = Utf8               flushOutputStream\n-  #242 = Utf8               processWont\n-  #243 = Utf8               processDo\n-  #244 = Utf8               processDont\n-  #245 = Utf8               processSuboption\n-  #246 = Utf8               ([II)V\n-  #247 = Utf8               wait\n-  #248 = Utf8               (Ljava/lang/String;)V\n-  #249 = Utf8               notifyAll\n-  #250 = Utf8               (J)V\n-  #251 = Utf8               isAlive\n-  #252 = Utf8               interrupt\n-  #253 = Utf8               notifyInputListener\n+    #1 = Methodref          #2.#3         // java/io/BufferedInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+    #2 = Class              #4            // java/io/BufferedInputStream\n+    #3 = NameAndType        #5:#6         // \"<init>\":(Ljava/io/InputStream;)V\n+    #4 = Utf8               java/io/BufferedInputStream\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (Ljava/io/InputStream;)V\n+    #7 = Fieldref           #8.#9         // org/apache/commons/net/telnet/TelnetInputStream.suboptionCount:I\n+    #8 = Class              #10           // org/apache/commons/net/telnet/TelnetInputStream\n+    #9 = NameAndType        #11:#12       // suboptionCount:I\n+   #10 = Utf8               org/apache/commons/net/telnet/TelnetInputStream\n+   #11 = Utf8               suboptionCount\n+   #12 = Utf8               I\n+   #13 = Fieldref           #8.#14        // org/apache/commons/net/telnet/TelnetInputStream.client:Lorg/apache/commons/net/telnet/TelnetClient;\n+   #14 = NameAndType        #15:#16       // client:Lorg/apache/commons/net/telnet/TelnetClient;\n+   #15 = Utf8               client\n+   #16 = Utf8               Lorg/apache/commons/net/telnet/TelnetClient;\n+   #17 = Fieldref           #8.#18        // org/apache/commons/net/telnet/TelnetInputStream.receiveState:I\n+   #18 = NameAndType        #19:#12       // receiveState:I\n+   #19 = Utf8               receiveState\n+   #20 = Fieldref           #8.#21        // org/apache/commons/net/telnet/TelnetInputStream.isClosed:Z\n+   #21 = NameAndType        #22:#23       // isClosed:Z\n+   #22 = Utf8               isClosed\n+   #23 = Utf8               Z\n+   #24 = Fieldref           #8.#25        // org/apache/commons/net/telnet/TelnetInputStream.hasReachedEOF:Z\n+   #25 = NameAndType        #26:#23       // hasReachedEOF:Z\n+   #26 = Utf8               hasReachedEOF\n+   #27 = Fieldref           #8.#28        // org/apache/commons/net/telnet/TelnetInputStream.queue:[I\n+   #28 = NameAndType        #29:#30       // queue:[I\n+   #29 = Utf8               queue\n+   #30 = Utf8               [I\n+   #31 = Fieldref           #8.#32        // org/apache/commons/net/telnet/TelnetInputStream.queueHead:I\n+   #32 = NameAndType        #33:#12       // queueHead:I\n+   #33 = Utf8               queueHead\n+   #34 = Fieldref           #8.#35        // org/apache/commons/net/telnet/TelnetInputStream.queueTail:I\n+   #35 = NameAndType        #36:#12       // queueTail:I\n+   #36 = Utf8               queueTail\n+   #37 = Fieldref           #38.#39       // org/apache/commons/net/telnet/TelnetClient.maxSubnegotiationLength:I\n+   #38 = Class              #40           // org/apache/commons/net/telnet/TelnetClient\n+   #39 = NameAndType        #41:#12       // maxSubnegotiationLength:I\n+   #40 = Utf8               org/apache/commons/net/telnet/TelnetClient\n+   #41 = Utf8               maxSubnegotiationLength\n+   #42 = Fieldref           #8.#43        // org/apache/commons/net/telnet/TelnetInputStream.suboption:[I\n+   #43 = NameAndType        #44:#30       // suboption:[I\n+   #44 = Utf8               suboption\n+   #45 = Fieldref           #8.#46        // org/apache/commons/net/telnet/TelnetInputStream.bytesAvailable:I\n+   #46 = NameAndType        #47:#12       // bytesAvailable:I\n+   #47 = Utf8               bytesAvailable\n+   #48 = Fieldref           #8.#49        // org/apache/commons/net/telnet/TelnetInputStream.ioException:Ljava/io/IOException;\n+   #49 = NameAndType        #50:#51       // ioException:Ljava/io/IOException;\n+   #50 = Utf8               ioException\n+   #51 = Utf8               Ljava/io/IOException;\n+   #52 = Fieldref           #8.#53        // org/apache/commons/net/telnet/TelnetInputStream.readIsWaiting:Z\n+   #53 = NameAndType        #54:#23       // readIsWaiting:Z\n+   #54 = Utf8               readIsWaiting\n+   #55 = Fieldref           #8.#56        // org/apache/commons/net/telnet/TelnetInputStream.threaded:Z\n+   #56 = NameAndType        #57:#23       // threaded:Z\n+   #57 = Utf8               threaded\n+   #58 = Class              #59           // java/lang/Thread\n+   #59 = Utf8               java/lang/Thread\n+   #60 = Methodref          #58.#61       // java/lang/Thread.\"<init>\":(Ljava/lang/Runnable;)V\n+   #61 = NameAndType        #5:#62        // \"<init>\":(Ljava/lang/Runnable;)V\n+   #62 = Utf8               (Ljava/lang/Runnable;)V\n+   #63 = Fieldref           #8.#64        // org/apache/commons/net/telnet/TelnetInputStream.thread:Ljava/lang/Thread;\n+   #64 = NameAndType        #65:#66       // thread:Ljava/lang/Thread;\n+   #65 = Utf8               thread\n+   #66 = Utf8               Ljava/lang/Thread;\n+   #67 = Methodref          #8.#68        // org/apache/commons/net/telnet/TelnetInputStream.\"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/net/telnet/TelnetClient;Z)V\n+   #68 = NameAndType        #5:#69        // \"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/net/telnet/TelnetClient;Z)V\n+   #69 = Utf8               (Ljava/io/InputStream;Lorg/apache/commons/net/telnet/TelnetClient;Z)V\n+   #70 = Methodref          #58.#71       // java/lang/Thread.currentThread:()Ljava/lang/Thread;\n+   #71 = NameAndType        #72:#73       // currentThread:()Ljava/lang/Thread;\n+   #72 = Utf8               currentThread\n+   #73 = Utf8               ()Ljava/lang/Thread;\n+   #74 = Methodref          #58.#75       // java/lang/Thread.getPriority:()I\n+   #75 = NameAndType        #76:#77       // getPriority:()I\n+   #76 = Utf8               getPriority\n+   #77 = Utf8               ()I\n+   #78 = Methodref          #58.#79       // java/lang/Thread.setPriority:(I)V\n+   #79 = NameAndType        #80:#81       // setPriority:(I)V\n+   #80 = Utf8               setPriority\n+   #81 = Utf8               (I)V\n+   #82 = Methodref          #58.#83       // java/lang/Thread.setDaemon:(Z)V\n+   #83 = NameAndType        #84:#85       // setDaemon:(Z)V\n+   #84 = Utf8               setDaemon\n+   #85 = Utf8               (Z)V\n+   #86 = Methodref          #58.#87       // java/lang/Thread.start:()V\n+   #87 = NameAndType        #88:#89       // start:()V\n+   #88 = Utf8               start\n+   #89 = Utf8               ()V\n+   #90 = Methodref          #2.#91        // java/io/BufferedInputStream.available:()I\n+   #91 = NameAndType        #92:#77       // available:()I\n+   #92 = Utf8               available\n+   #93 = Methodref          #2.#94        // java/io/BufferedInputStream.read:()I\n+   #94 = NameAndType        #95:#77       // read:()I\n+   #95 = Utf8               read\n+   #96 = Methodref          #38.#97       // org/apache/commons/net/telnet/TelnetClient.processAYTResponse:()V\n+   #97 = NameAndType        #98:#89       // processAYTResponse:()V\n+   #98 = Utf8               processAYTResponse\n+   #99 = Methodref          #38.#100      // org/apache/commons/net/telnet/TelnetClient.spyRead:(I)V\n+  #100 = NameAndType        #101:#81      // spyRead:(I)V\n+  #101 = Utf8               spyRead\n+  #102 = Class              #103          // org/apache/commons/net/telnet/TelnetCommand\n+  #103 = Utf8               org/apache/commons/net/telnet/TelnetCommand\n+  #104 = Class              #105          // org/apache/commons/net/telnet/TelnetOption\n+  #105 = Utf8               org/apache/commons/net/telnet/TelnetOption\n+  #106 = Methodref          #38.#107      // org/apache/commons/net/telnet/TelnetClient.requestedDont:(I)Z\n+  #107 = NameAndType        #108:#109     // requestedDont:(I)Z\n+  #108 = Utf8               requestedDont\n+  #109 = Utf8               (I)Z\n+  #110 = Methodref          #38.#111      // org/apache/commons/net/telnet/TelnetClient.processCommand:(I)V\n+  #111 = NameAndType        #112:#81      // processCommand:(I)V\n+  #112 = Utf8               processCommand\n+  #113 = Methodref          #38.#114      // org/apache/commons/net/telnet/TelnetClient.processWill:(I)V\n+  #114 = NameAndType        #115:#81      // processWill:(I)V\n+  #115 = Utf8               processWill\n+  #116 = Methodref          #38.#117      // org/apache/commons/net/telnet/TelnetClient.flushOutputStream:()V\n+  #117 = NameAndType        #118:#89      // flushOutputStream:()V\n+  #118 = Utf8               flushOutputStream\n+  #119 = Methodref          #38.#120      // org/apache/commons/net/telnet/TelnetClient.processWont:(I)V\n+  #120 = NameAndType        #121:#81      // processWont:(I)V\n+  #121 = Utf8               processWont\n+  #122 = Methodref          #38.#123      // org/apache/commons/net/telnet/TelnetClient.processDo:(I)V\n+  #123 = NameAndType        #124:#81      // processDo:(I)V\n+  #124 = Utf8               processDo\n+  #125 = Methodref          #38.#126      // org/apache/commons/net/telnet/TelnetClient.processDont:(I)V\n+  #126 = NameAndType        #127:#81      // processDont:(I)V\n+  #127 = Utf8               processDont\n+  #128 = Methodref          #38.#129      // org/apache/commons/net/telnet/TelnetClient.processSuboption:([II)V\n+  #129 = NameAndType        #130:#131     // processSuboption:([II)V\n+  #130 = Utf8               processSuboption\n+  #131 = Utf8               ([II)V\n+  #132 = Methodref          #133.#134     // java/lang/Object.notify:()V\n+  #133 = Class              #135          // java/lang/Object\n+  #134 = NameAndType        #136:#89      // notify:()V\n+  #135 = Utf8               java/lang/Object\n+  #136 = Utf8               notify\n+  #137 = Methodref          #133.#138     // java/lang/Object.wait:()V\n+  #138 = NameAndType        #139:#89      // wait:()V\n+  #139 = Utf8               wait\n+  #140 = Class              #141          // java/lang/InterruptedException\n+  #141 = Utf8               java/lang/InterruptedException\n+  #142 = Class              #143          // java/lang/IllegalStateException\n+  #143 = Utf8               java/lang/IllegalStateException\n+  #144 = String             #145          // Queue is full! Cannot process another character.\n+  #145 = Utf8               Queue is full! Cannot process another character.\n+  #146 = Methodref          #142.#147     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+  #147 = NameAndType        #5:#148       // \"<init>\":(Ljava/lang/String;)V\n+  #148 = Utf8               (Ljava/lang/String;)V\n+  #149 = Class              #150          // java/io/InterruptedIOException\n+  #150 = Utf8               java/io/InterruptedIOException\n+  #151 = String             #152          // Fatal thread interruption during read.\n+  #152 = Utf8               Fatal thread interruption during read.\n+  #153 = Methodref          #149.#147     // java/io/InterruptedIOException.\"<init>\":(Ljava/lang/String;)V\n+  #154 = Methodref          #8.#155       // org/apache/commons/net/telnet/TelnetInputStream.__read:(Z)I\n+  #155 = NameAndType        #156:#157     // __read:(Z)I\n+  #156 = Utf8               __read\n+  #157 = Utf8               (Z)I\n+  #158 = Methodref          #133.#159     // java/lang/Object.notifyAll:()V\n+  #159 = NameAndType        #160:#89      // notifyAll:()V\n+  #160 = Utf8               notifyAll\n+  #161 = Long               100l\n+  #163 = Methodref          #133.#164     // java/lang/Object.wait:(J)V\n+  #164 = NameAndType        #139:#165     // wait:(J)V\n+  #165 = Utf8               (J)V\n+  #166 = Methodref          #8.#167       // org/apache/commons/net/telnet/TelnetInputStream.processChar:(I)Z\n+  #167 = NameAndType        #168:#109     // processChar:(I)Z\n+  #168 = Utf8               processChar\n+  #169 = Methodref          #8.#170       // org/apache/commons/net/telnet/TelnetInputStream.read:([BII)I\n+  #170 = NameAndType        #95:#171      // read:([BII)I\n+  #171 = Utf8               ([BII)I\n+  #172 = Methodref          #8.#94        // org/apache/commons/net/telnet/TelnetInputStream.read:()I\n+  #173 = Methodref          #2.#174       // java/io/BufferedInputStream.close:()V\n+  #174 = NameAndType        #175:#89      // close:()V\n+  #175 = Utf8               close\n+  #176 = Methodref          #58.#177      // java/lang/Thread.isAlive:()Z\n+  #177 = NameAndType        #178:#179     // isAlive:()Z\n+  #178 = Utf8               isAlive\n+  #179 = Utf8               ()Z\n+  #180 = Methodref          #58.#181      // java/lang/Thread.interrupt:()V\n+  #181 = NameAndType        #182:#89      // interrupt:()V\n+  #182 = Utf8               interrupt\n+  #183 = Class              #184          // java/lang/RuntimeException\n+  #184 = Utf8               java/lang/RuntimeException\n+  #185 = Methodref          #38.#186      // org/apache/commons/net/telnet/TelnetClient.notifyInputListener:()V\n+  #186 = NameAndType        #187:#89      // notifyInputListener:()V\n+  #187 = Utf8               notifyInputListener\n+  #188 = Class              #189          // java/io/IOException\n+  #189 = Utf8               java/io/IOException\n+  #190 = Class              #191          // java/lang/Runnable\n+  #191 = Utf8               java/lang/Runnable\n+  #192 = Utf8               EOF\n+  #193 = Utf8               ConstantValue\n+  #194 = Integer            -1\n+  #195 = Utf8               WOULD_BLOCK\n+  #196 = Integer            -2\n+  #197 = Utf8               STATE_DATA\n+  #198 = Integer            0\n+  #199 = Utf8               STATE_IAC\n+  #200 = Integer            1\n+  #201 = Utf8               STATE_WILL\n+  #202 = Integer            2\n+  #203 = Utf8               STATE_WONT\n+  #204 = Integer            3\n+  #205 = Utf8               STATE_DO\n+  #206 = Integer            4\n+  #207 = Utf8               STATE_DONT\n+  #208 = Integer            5\n+  #209 = Utf8               STATE_SB\n+  #210 = Integer            6\n+  #211 = Utf8               STATE_SE\n+  #212 = Integer            7\n+  #213 = Utf8               STATE_CR\n+  #214 = Integer            8\n+  #215 = Utf8               STATE_IAC_SB\n+  #216 = Integer            9\n+  #217 = Utf8               Code\n+  #218 = Utf8               LineNumberTable\n+  #219 = Utf8               LocalVariableTable\n+  #220 = Utf8               this\n+  #221 = Utf8               Lorg/apache/commons/net/telnet/TelnetInputStream;\n+  #222 = Utf8               input\n+  #223 = Utf8               Ljava/io/InputStream;\n+  #224 = Utf8               readerThread\n+  #225 = Utf8               StackMapTable\n+  #226 = Class              #227          // java/io/InputStream\n+  #227 = Utf8               java/io/InputStream\n+  #228 = Utf8               (Ljava/io/InputStream;Lorg/apache/commons/net/telnet/TelnetClient;)V\n+  #229 = Utf8               _start\n+  #230 = Utf8               priority\n+  #231 = Utf8               mayBlock\n+  #232 = Utf8               ch\n+  #233 = Class              #234          // java/lang/Throwable\n+  #234 = Utf8               java/lang/Throwable\n+  #235 = Utf8               Exceptions\n+  #236 = Utf8               e\n+  #237 = Utf8               Ljava/lang/InterruptedException;\n+  #238 = Utf8               bufferWasEmpty\n+  #239 = Utf8               Ljava/io/InterruptedIOException;\n+  #240 = Utf8               ([B)I\n+  #241 = Utf8               buffer\n+  #242 = Utf8               [B\n+  #243 = Utf8               offset\n+  #244 = Utf8               length\n+  #245 = Utf8               off\n+  #246 = Utf8               markSupported\n+  #247 = Utf8               run\n+  #248 = Utf8               interrupted\n+  #249 = Utf8               re\n+  #250 = Utf8               Ljava/lang/RuntimeException;\n+  #251 = Utf8               ioe\n+  #252 = Utf8               SourceFile\n+  #253 = Utf8               TelnetInputStream.java\n {\n   private static final int EOF = -1;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int -1\n \n   private static final int WOULD_BLOCK = -2;\n@@ -383,66 +383,66 @@\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: invokespecial #1                  // Method java/io/BufferedInputStream.\"<init>\":(Ljava/io/InputStream;)V\n          5: aload_0\n          6: iconst_0\n-         7: putfield      #2                  // Field suboptionCount:I\n+         7: putfield      #7                  // Field suboptionCount:I\n         10: aload_0\n         11: aload_2\n-        12: putfield      #3                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+        12: putfield      #13                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n         15: aload_0\n         16: iconst_0\n-        17: putfield      #5                  // Field receiveState:I\n+        17: putfield      #17                 // Field receiveState:I\n         20: aload_0\n         21: iconst_1\n-        22: putfield      #6                  // Field isClosed:Z\n+        22: putfield      #20                 // Field isClosed:Z\n         25: aload_0\n         26: iconst_0\n-        27: putfield      #7                  // Field hasReachedEOF:Z\n+        27: putfield      #24                 // Field hasReachedEOF:Z\n         30: aload_0\n         31: sipush        2049\n         34: newarray       int\n-        36: putfield      #8                  // Field queue:[I\n+        36: putfield      #27                 // Field queue:[I\n         39: aload_0\n         40: iconst_0\n-        41: putfield      #9                  // Field queueHead:I\n+        41: putfield      #31                 // Field queueHead:I\n         44: aload_0\n         45: iconst_0\n-        46: putfield      #10                 // Field queueTail:I\n+        46: putfield      #34                 // Field queueTail:I\n         49: aload_0\n         50: aload_2\n-        51: getfield      #11                 // Field org/apache/commons/net/telnet/TelnetClient.maxSubnegotiationLength:I\n+        51: getfield      #37                 // Field org/apache/commons/net/telnet/TelnetClient.maxSubnegotiationLength:I\n         54: newarray       int\n-        56: putfield      #12                 // Field suboption:[I\n+        56: putfield      #42                 // Field suboption:[I\n         59: aload_0\n         60: iconst_0\n-        61: putfield      #13                 // Field bytesAvailable:I\n+        61: putfield      #45                 // Field bytesAvailable:I\n         64: aload_0\n         65: aconst_null\n-        66: putfield      #14                 // Field ioException:Ljava/io/IOException;\n+        66: putfield      #48                 // Field ioException:Ljava/io/IOException;\n         69: aload_0\n         70: iconst_0\n-        71: putfield      #15                 // Field readIsWaiting:Z\n+        71: putfield      #52                 // Field readIsWaiting:Z\n         74: aload_0\n         75: iconst_0\n-        76: putfield      #16                 // Field threaded:Z\n+        76: putfield      #55                 // Field threaded:Z\n         79: iload_3\n         80: ifeq          98\n         83: aload_0\n-        84: new           #17                 // class java/lang/Thread\n+        84: new           #58                 // class java/lang/Thread\n         87: dup\n         88: aload_0\n-        89: invokespecial #18                 // Method java/lang/Thread.\"<init>\":(Ljava/lang/Runnable;)V\n-        92: putfield      #19                 // Field thread:Ljava/lang/Thread;\n+        89: invokespecial #60                 // Method java/lang/Thread.\"<init>\":(Ljava/lang/Runnable;)V\n+        92: putfield      #63                 // Field thread:Ljava/lang/Thread;\n         95: goto          103\n         98: aload_0\n         99: aconst_null\n-       100: putfield      #19                 // Field thread:Ljava/lang/Thread;\n+       100: putfield      #63                 // Field thread:Ljava/lang/Thread;\n        103: return\n       LineNumberTable:\n         line 57: 0\n         line 49: 5\n         line 58: 10\n         line 59: 15\n         line 60: 20\n@@ -477,15 +477,15 @@\n     flags: (0x0000)\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iconst_1\n-         4: invokespecial #20                 // Method \"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/net/telnet/TelnetClient;Z)V\n+         4: invokespecial #67                 // Method \"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/net/telnet/TelnetClient;Z)V\n          7: return\n       LineNumberTable:\n         line 80: 0\n         line 81: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/net/telnet/TelnetInputStream;\n@@ -494,44 +494,44 @@\n \n   void _start();\n     descriptor: ()V\n     flags: (0x0000)\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #19                 // Field thread:Ljava/lang/Thread;\n+         1: getfield      #63                 // Field thread:Ljava/lang/Thread;\n          4: ifnonnull     8\n          7: return\n          8: aload_0\n          9: iconst_0\n-        10: putfield      #6                  // Field isClosed:Z\n-        13: invokestatic  #21                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;\n-        16: invokevirtual #22                 // Method java/lang/Thread.getPriority:()I\n+        10: putfield      #20                 // Field isClosed:Z\n+        13: invokestatic  #70                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;\n+        16: invokevirtual #74                 // Method java/lang/Thread.getPriority:()I\n         19: iconst_1\n         20: iadd\n         21: istore_1\n         22: iload_1\n         23: bipush        10\n         25: if_icmple     31\n         28: bipush        10\n         30: istore_1\n         31: aload_0\n-        32: getfield      #19                 // Field thread:Ljava/lang/Thread;\n+        32: getfield      #63                 // Field thread:Ljava/lang/Thread;\n         35: iload_1\n-        36: invokevirtual #23                 // Method java/lang/Thread.setPriority:(I)V\n+        36: invokevirtual #78                 // Method java/lang/Thread.setPriority:(I)V\n         39: aload_0\n-        40: getfield      #19                 // Field thread:Ljava/lang/Thread;\n+        40: getfield      #63                 // Field thread:Ljava/lang/Thread;\n         43: iconst_1\n-        44: invokevirtual #24                 // Method java/lang/Thread.setDaemon:(Z)V\n+        44: invokevirtual #82                 // Method java/lang/Thread.setDaemon:(Z)V\n         47: aload_0\n-        48: getfield      #19                 // Field thread:Ljava/lang/Thread;\n-        51: invokevirtual #25                 // Method java/lang/Thread.start:()V\n+        48: getfield      #63                 // Field thread:Ljava/lang/Thread;\n+        51: invokevirtual #86                 // Method java/lang/Thread.start:()V\n         54: aload_0\n         55: iconst_1\n-        56: putfield      #16                 // Field threaded:Z\n+        56: putfield      #55                 // Field threaded:Z\n         59: return\n       LineNumberTable:\n         line 85: 0\n         line 86: 7\n         line 90: 8\n         line 95: 13\n         line 96: 22\n@@ -555,51 +555,51 @@\n     descriptor: (Z)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=11, args_size=2\n          0: iload_1\n          1: ifne          14\n          4: aload_0\n-         5: invokespecial #26                 // Method java/io/BufferedInputStream.available:()I\n+         5: invokespecial #90                 // Method java/io/BufferedInputStream.available:()I\n          8: ifne          14\n         11: bipush        -2\n         13: ireturn\n         14: aload_0\n-        15: invokespecial #27                 // Method java/io/BufferedInputStream.read:()I\n+        15: invokespecial #93                 // Method java/io/BufferedInputStream.read:()I\n         18: dup\n         19: istore_2\n         20: ifge          25\n         23: iconst_m1\n         24: ireturn\n         25: iload_2\n         26: sipush        255\n         29: iand\n         30: istore_2\n         31: aload_0\n-        32: getfield      #3                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+        32: getfield      #13                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n         35: dup\n         36: astore_3\n         37: monitorenter\n         38: aload_0\n-        39: getfield      #3                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n-        42: invokevirtual #28                 // Method org/apache/commons/net/telnet/TelnetClient.processAYTResponse:()V\n+        39: getfield      #13                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+        42: invokevirtual #96                 // Method org/apache/commons/net/telnet/TelnetClient.processAYTResponse:()V\n         45: aload_3\n         46: monitorexit\n         47: goto          57\n         50: astore        4\n         52: aload_3\n         53: monitorexit\n         54: aload         4\n         56: athrow\n         57: aload_0\n-        58: getfield      #3                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+        58: getfield      #13                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n         61: iload_2\n-        62: invokevirtual #29                 // Method org/apache/commons/net/telnet/TelnetClient.spyRead:(I)V\n+        62: invokevirtual #99                 // Method org/apache/commons/net/telnet/TelnetClient.spyRead:(I)V\n         65: aload_0\n-        66: getfield      #5                  // Field receiveState:I\n+        66: getfield      #17                 // Field receiveState:I\n         69: tableswitch   { // 0 to 9\n                        0: 131\n                        1: 207\n                        2: 366\n                        3: 408\n                        4: 450\n                        5: 492\n@@ -613,48 +613,48 @@\n        125: ifne          131\n        128: goto          0\n        131: iload_2\n        132: sipush        255\n        135: if_icmpne     146\n        138: aload_0\n        139: iconst_1\n-       140: putfield      #5                  // Field receiveState:I\n+       140: putfield      #17                 // Field receiveState:I\n        143: goto          0\n        146: iload_2\n        147: bipush        13\n        149: if_icmpne     199\n        152: aload_0\n-       153: getfield      #3                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+       153: getfield      #13                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n        156: dup\n        157: astore_3\n        158: monitorenter\n        159: aload_0\n-       160: getfield      #3                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+       160: getfield      #13                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n        163: iconst_0\n-       164: invokevirtual #32                 // Method org/apache/commons/net/telnet/TelnetClient.requestedDont:(I)Z\n+       164: invokevirtual #106                // Method org/apache/commons/net/telnet/TelnetClient.requestedDont:(I)Z\n        167: ifeq          179\n        170: aload_0\n        171: bipush        8\n-       173: putfield      #5                  // Field receiveState:I\n+       173: putfield      #17                 // Field receiveState:I\n        176: goto          184\n        179: aload_0\n        180: iconst_0\n-       181: putfield      #5                  // Field receiveState:I\n+       181: putfield      #17                 // Field receiveState:I\n        184: aload_3\n        185: monitorexit\n        186: goto          196\n        189: astore        5\n        191: aload_3\n        192: monitorexit\n        193: aload         5\n        195: athrow\n        196: goto          718\n        199: aload_0\n        200: iconst_0\n-       201: putfield      #5                  // Field receiveState:I\n+       201: putfield      #17                 // Field receiveState:I\n        204: goto          718\n        207: iload_2\n        208: tableswitch   { // 240 to 255\n                      240: 342\n                      241: 350\n                      242: 350\n                      243: 350\n@@ -670,231 +670,231 @@\n                      253: 304\n                      254: 312\n                      255: 334\n                  default: 350\n             }\n        288: aload_0\n        289: iconst_2\n-       290: putfield      #5                  // Field receiveState:I\n+       290: putfield      #17                 // Field receiveState:I\n        293: goto          0\n        296: aload_0\n        297: iconst_3\n-       298: putfield      #5                  // Field receiveState:I\n+       298: putfield      #17                 // Field receiveState:I\n        301: goto          0\n        304: aload_0\n        305: iconst_4\n-       306: putfield      #5                  // Field receiveState:I\n+       306: putfield      #17                 // Field receiveState:I\n        309: goto          0\n        312: aload_0\n        313: iconst_5\n-       314: putfield      #5                  // Field receiveState:I\n+       314: putfield      #17                 // Field receiveState:I\n        317: goto          0\n        320: aload_0\n        321: iconst_0\n-       322: putfield      #2                  // Field suboptionCount:I\n+       322: putfield      #7                  // Field suboptionCount:I\n        325: aload_0\n        326: bipush        6\n-       328: putfield      #5                  // Field receiveState:I\n+       328: putfield      #17                 // Field receiveState:I\n        331: goto          0\n        334: aload_0\n        335: iconst_0\n-       336: putfield      #5                  // Field receiveState:I\n+       336: putfield      #17                 // Field receiveState:I\n        339: goto          718\n        342: aload_0\n        343: iconst_0\n-       344: putfield      #5                  // Field receiveState:I\n+       344: putfield      #17                 // Field receiveState:I\n        347: goto          0\n        350: aload_0\n        351: iconst_0\n-       352: putfield      #5                  // Field receiveState:I\n+       352: putfield      #17                 // Field receiveState:I\n        355: aload_0\n-       356: getfield      #3                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+       356: getfield      #13                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n        359: iload_2\n-       360: invokevirtual #33                 // Method org/apache/commons/net/telnet/TelnetClient.processCommand:(I)V\n+       360: invokevirtual #110                // Method org/apache/commons/net/telnet/TelnetClient.processCommand:(I)V\n        363: goto          0\n        366: aload_0\n-       367: getfield      #3                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+       367: getfield      #13                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n        370: dup\n        371: astore_3\n        372: monitorenter\n        373: aload_0\n-       374: getfield      #3                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+       374: getfield      #13                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n        377: iload_2\n-       378: invokevirtual #34                 // Method org/apache/commons/net/telnet/TelnetClient.processWill:(I)V\n+       378: invokevirtual #113                // Method org/apache/commons/net/telnet/TelnetClient.processWill:(I)V\n        381: aload_0\n-       382: getfield      #3                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n-       385: invokevirtual #35                 // Method org/apache/commons/net/telnet/TelnetClient.flushOutputStream:()V\n+       382: getfield      #13                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+       385: invokevirtual #116                // Method org/apache/commons/net/telnet/TelnetClient.flushOutputStream:()V\n        388: aload_3\n        389: monitorexit\n        390: goto          400\n        393: astore        6\n        395: aload_3\n        396: monitorexit\n        397: aload         6\n        399: athrow\n        400: aload_0\n        401: iconst_0\n-       402: putfield      #5                  // Field receiveState:I\n+       402: putfield      #17                 // Field receiveState:I\n        405: goto          0\n        408: aload_0\n-       409: getfield      #3                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+       409: getfield      #13                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n        412: dup\n        413: astore_3\n        414: monitorenter\n        415: aload_0\n-       416: getfield      #3                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+       416: getfield      #13                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n        419: iload_2\n-       420: invokevirtual #36                 // Method org/apache/commons/net/telnet/TelnetClient.processWont:(I)V\n+       420: invokevirtual #119                // Method org/apache/commons/net/telnet/TelnetClient.processWont:(I)V\n        423: aload_0\n-       424: getfield      #3                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n-       427: invokevirtual #35                 // Method org/apache/commons/net/telnet/TelnetClient.flushOutputStream:()V\n+       424: getfield      #13                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+       427: invokevirtual #116                // Method org/apache/commons/net/telnet/TelnetClient.flushOutputStream:()V\n        430: aload_3\n        431: monitorexit\n        432: goto          442\n        435: astore        7\n        437: aload_3\n        438: monitorexit\n        439: aload         7\n        441: athrow\n        442: aload_0\n        443: iconst_0\n-       444: putfield      #5                  // Field receiveState:I\n+       444: putfield      #17                 // Field receiveState:I\n        447: goto          0\n        450: aload_0\n-       451: getfield      #3                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+       451: getfield      #13                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n        454: dup\n        455: astore_3\n        456: monitorenter\n        457: aload_0\n-       458: getfield      #3                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+       458: getfield      #13                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n        461: iload_2\n-       462: invokevirtual #37                 // Method org/apache/commons/net/telnet/TelnetClient.processDo:(I)V\n+       462: invokevirtual #122                // Method org/apache/commons/net/telnet/TelnetClient.processDo:(I)V\n        465: aload_0\n-       466: getfield      #3                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n-       469: invokevirtual #35                 // Method org/apache/commons/net/telnet/TelnetClient.flushOutputStream:()V\n+       466: getfield      #13                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+       469: invokevirtual #116                // Method org/apache/commons/net/telnet/TelnetClient.flushOutputStream:()V\n        472: aload_3\n        473: monitorexit\n        474: goto          484\n        477: astore        8\n        479: aload_3\n        480: monitorexit\n        481: aload         8\n        483: athrow\n        484: aload_0\n        485: iconst_0\n-       486: putfield      #5                  // Field receiveState:I\n+       486: putfield      #17                 // Field receiveState:I\n        489: goto          0\n        492: aload_0\n-       493: getfield      #3                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+       493: getfield      #13                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n        496: dup\n        497: astore_3\n        498: monitorenter\n        499: aload_0\n-       500: getfield      #3                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+       500: getfield      #13                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n        503: iload_2\n-       504: invokevirtual #38                 // Method org/apache/commons/net/telnet/TelnetClient.processDont:(I)V\n+       504: invokevirtual #125                // Method org/apache/commons/net/telnet/TelnetClient.processDont:(I)V\n        507: aload_0\n-       508: getfield      #3                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n-       511: invokevirtual #35                 // Method org/apache/commons/net/telnet/TelnetClient.flushOutputStream:()V\n+       508: getfield      #13                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+       511: invokevirtual #116                // Method org/apache/commons/net/telnet/TelnetClient.flushOutputStream:()V\n        514: aload_3\n        515: monitorexit\n        516: goto          526\n        519: astore        9\n        521: aload_3\n        522: monitorexit\n        523: aload         9\n        525: athrow\n        526: aload_0\n        527: iconst_0\n-       528: putfield      #5                  // Field receiveState:I\n+       528: putfield      #17                 // Field receiveState:I\n        531: goto          0\n        534: iload_2\n        535: lookupswitch  { // 1\n                      255: 552\n                  default: 561\n             }\n        552: aload_0\n        553: bipush        9\n-       555: putfield      #5                  // Field receiveState:I\n+       555: putfield      #17                 // Field receiveState:I\n        558: goto          0\n        561: aload_0\n-       562: getfield      #2                  // Field suboptionCount:I\n+       562: getfield      #7                  // Field suboptionCount:I\n        565: aload_0\n-       566: getfield      #12                 // Field suboption:[I\n+       566: getfield      #42                 // Field suboption:[I\n        569: arraylength\n        570: if_icmpge     590\n        573: aload_0\n-       574: getfield      #12                 // Field suboption:[I\n+       574: getfield      #42                 // Field suboption:[I\n        577: aload_0\n        578: dup\n-       579: getfield      #2                  // Field suboptionCount:I\n+       579: getfield      #7                  // Field suboptionCount:I\n        582: dup_x1\n        583: iconst_1\n        584: iadd\n-       585: putfield      #2                  // Field suboptionCount:I\n+       585: putfield      #7                  // Field suboptionCount:I\n        588: iload_2\n        589: iastore\n        590: aload_0\n        591: bipush        6\n-       593: putfield      #5                  // Field receiveState:I\n+       593: putfield      #17                 // Field receiveState:I\n        596: goto          0\n        599: iload_2\n        600: lookupswitch  { // 2\n                      240: 628\n                      255: 677\n                  default: 709\n             }\n        628: aload_0\n-       629: getfield      #3                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+       629: getfield      #13                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n        632: dup\n        633: astore_3\n        634: monitorenter\n        635: aload_0\n-       636: getfield      #3                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+       636: getfield      #13                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n        639: aload_0\n-       640: getfield      #12                 // Field suboption:[I\n+       640: getfield      #42                 // Field suboption:[I\n        643: aload_0\n-       644: getfield      #2                  // Field suboptionCount:I\n-       647: invokevirtual #39                 // Method org/apache/commons/net/telnet/TelnetClient.processSuboption:([II)V\n+       644: getfield      #7                  // Field suboptionCount:I\n+       647: invokevirtual #128                // Method org/apache/commons/net/telnet/TelnetClient.processSuboption:([II)V\n        650: aload_0\n-       651: getfield      #3                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n-       654: invokevirtual #35                 // Method org/apache/commons/net/telnet/TelnetClient.flushOutputStream:()V\n+       651: getfield      #13                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+       654: invokevirtual #116                // Method org/apache/commons/net/telnet/TelnetClient.flushOutputStream:()V\n        657: aload_3\n        658: monitorexit\n        659: goto          669\n        662: astore        10\n        664: aload_3\n        665: monitorexit\n        666: aload         10\n        668: athrow\n        669: aload_0\n        670: iconst_0\n-       671: putfield      #5                  // Field receiveState:I\n+       671: putfield      #17                 // Field receiveState:I\n        674: goto          0\n        677: aload_0\n-       678: getfield      #2                  // Field suboptionCount:I\n+       678: getfield      #7                  // Field suboptionCount:I\n        681: aload_0\n-       682: getfield      #12                 // Field suboption:[I\n+       682: getfield      #42                 // Field suboption:[I\n        685: arraylength\n        686: if_icmpge     709\n        689: aload_0\n-       690: getfield      #12                 // Field suboption:[I\n+       690: getfield      #42                 // Field suboption:[I\n        693: aload_0\n        694: dup\n-       695: getfield      #2                  // Field suboptionCount:I\n+       695: getfield      #7                  // Field suboptionCount:I\n        698: dup_x1\n        699: iconst_1\n        700: iadd\n-       701: putfield      #2                  // Field suboptionCount:I\n+       701: putfield      #7                  // Field suboptionCount:I\n        704: iload_2\n        705: iastore\n        706: goto          709\n        709: aload_0\n        710: bipush        6\n-       712: putfield      #5                  // Field receiveState:I\n+       712: putfield      #17                 // Field receiveState:I\n        715: goto          0\n        718: goto          721\n        721: iload_2\n        722: ireturn\n       Exception table:\n          from    to  target type\n             38    47    50   any\n@@ -1087,86 +1087,86 @@\n \n   private boolean processChar(int) throws java.lang.InterruptedException;\n     descriptor: (I)Z\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=6, args_size=2\n          0: aload_0\n-         1: getfield      #8                  // Field queue:[I\n+         1: getfield      #27                 // Field queue:[I\n          4: dup\n          5: astore_3\n          6: monitorenter\n          7: aload_0\n-         8: getfield      #13                 // Field bytesAvailable:I\n+         8: getfield      #45                 // Field bytesAvailable:I\n         11: ifne          18\n         14: iconst_1\n         15: goto          19\n         18: iconst_0\n         19: istore_2\n         20: aload_0\n-        21: getfield      #13                 // Field bytesAvailable:I\n+        21: getfield      #45                 // Field bytesAvailable:I\n         24: aload_0\n-        25: getfield      #8                  // Field queue:[I\n+        25: getfield      #27                 // Field queue:[I\n         28: arraylength\n         29: iconst_1\n         30: isub\n         31: if_icmplt     73\n         34: aload_0\n-        35: getfield      #16                 // Field threaded:Z\n+        35: getfield      #55                 // Field threaded:Z\n         38: ifeq          63\n         41: aload_0\n-        42: getfield      #8                  // Field queue:[I\n-        45: invokevirtual #40                 // Method java/lang/Object.notify:()V\n+        42: getfield      #27                 // Field queue:[I\n+        45: invokevirtual #132                // Method java/lang/Object.notify:()V\n         48: aload_0\n-        49: getfield      #8                  // Field queue:[I\n-        52: invokevirtual #41                 // Method java/lang/Object.wait:()V\n+        49: getfield      #27                 // Field queue:[I\n+        52: invokevirtual #137                // Method java/lang/Object.wait:()V\n         55: goto          20\n         58: astore        4\n         60: aload         4\n         62: athrow\n-        63: new           #43                 // class java/lang/IllegalStateException\n+        63: new           #142                // class java/lang/IllegalStateException\n         66: dup\n-        67: ldc           #44                 // String Queue is full! Cannot process another character.\n-        69: invokespecial #45                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        67: ldc           #144                // String Queue is full! Cannot process another character.\n+        69: invokespecial #146                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         72: athrow\n         73: aload_0\n-        74: getfield      #15                 // Field readIsWaiting:Z\n+        74: getfield      #52                 // Field readIsWaiting:Z\n         77: ifeq          94\n         80: aload_0\n-        81: getfield      #16                 // Field threaded:Z\n+        81: getfield      #55                 // Field threaded:Z\n         84: ifeq          94\n         87: aload_0\n-        88: getfield      #8                  // Field queue:[I\n-        91: invokevirtual #40                 // Method java/lang/Object.notify:()V\n+        88: getfield      #27                 // Field queue:[I\n+        91: invokevirtual #132                // Method java/lang/Object.notify:()V\n         94: aload_0\n-        95: getfield      #8                  // Field queue:[I\n+        95: getfield      #27                 // Field queue:[I\n         98: aload_0\n-        99: getfield      #10                 // Field queueTail:I\n+        99: getfield      #34                 // Field queueTail:I\n        102: iload_1\n        103: iastore\n        104: aload_0\n        105: dup\n-       106: getfield      #13                 // Field bytesAvailable:I\n+       106: getfield      #45                 // Field bytesAvailable:I\n        109: iconst_1\n        110: iadd\n-       111: putfield      #13                 // Field bytesAvailable:I\n+       111: putfield      #45                 // Field bytesAvailable:I\n        114: aload_0\n        115: dup\n-       116: getfield      #10                 // Field queueTail:I\n+       116: getfield      #34                 // Field queueTail:I\n        119: iconst_1\n        120: iadd\n        121: dup_x1\n-       122: putfield      #10                 // Field queueTail:I\n+       122: putfield      #34                 // Field queueTail:I\n        125: aload_0\n-       126: getfield      #8                  // Field queue:[I\n+       126: getfield      #27                 // Field queue:[I\n        129: arraylength\n        130: if_icmplt     138\n        133: aload_0\n        134: iconst_0\n-       135: putfield      #10                 // Field queueTail:I\n+       135: putfield      #34                 // Field queueTail:I\n        138: aload_3\n        139: monitorexit\n        140: goto          150\n        143: astore        5\n        145: aload_3\n        146: monitorexit\n        147: aload         5\n@@ -1233,96 +1233,96 @@\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=9, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field queue:[I\n+         1: getfield      #27                 // Field queue:[I\n          4: dup\n          5: astore_1\n          6: monitorenter\n          7: aload_0\n-         8: getfield      #14                 // Field ioException:Ljava/io/IOException;\n+         8: getfield      #48                 // Field ioException:Ljava/io/IOException;\n         11: ifnull        26\n         14: aload_0\n-        15: getfield      #14                 // Field ioException:Ljava/io/IOException;\n+        15: getfield      #48                 // Field ioException:Ljava/io/IOException;\n         18: astore_2\n         19: aload_0\n         20: aconst_null\n-        21: putfield      #14                 // Field ioException:Ljava/io/IOException;\n+        21: putfield      #48                 // Field ioException:Ljava/io/IOException;\n         24: aload_2\n         25: athrow\n         26: aload_0\n-        27: getfield      #13                 // Field bytesAvailable:I\n+        27: getfield      #45                 // Field bytesAvailable:I\n         30: ifne          234\n         33: aload_0\n-        34: getfield      #7                  // Field hasReachedEOF:Z\n+        34: getfield      #24                 // Field hasReachedEOF:Z\n         37: ifeq          44\n         40: iconst_m1\n         41: aload_1\n         42: monitorexit\n         43: ireturn\n         44: aload_0\n-        45: getfield      #16                 // Field threaded:Z\n+        45: getfield      #55                 // Field threaded:Z\n         48: ifeq          89\n         51: aload_0\n-        52: getfield      #8                  // Field queue:[I\n-        55: invokevirtual #40                 // Method java/lang/Object.notify:()V\n+        52: getfield      #27                 // Field queue:[I\n+        55: invokevirtual #132                // Method java/lang/Object.notify:()V\n         58: aload_0\n         59: iconst_1\n-        60: putfield      #15                 // Field readIsWaiting:Z\n+        60: putfield      #52                 // Field readIsWaiting:Z\n         63: aload_0\n-        64: getfield      #8                  // Field queue:[I\n-        67: invokevirtual #41                 // Method java/lang/Object.wait:()V\n+        64: getfield      #27                 // Field queue:[I\n+        67: invokevirtual #137                // Method java/lang/Object.wait:()V\n         70: aload_0\n         71: iconst_0\n-        72: putfield      #15                 // Field readIsWaiting:Z\n+        72: putfield      #52                 // Field readIsWaiting:Z\n         75: goto          7\n         78: astore_2\n-        79: new           #46                 // class java/io/InterruptedIOException\n+        79: new           #149                // class java/io/InterruptedIOException\n         82: dup\n-        83: ldc           #47                 // String Fatal thread interruption during read.\n-        85: invokespecial #48                 // Method java/io/InterruptedIOException.\"<init>\":(Ljava/lang/String;)V\n+        83: ldc           #151                // String Fatal thread interruption during read.\n+        85: invokespecial #153                // Method java/io/InterruptedIOException.\"<init>\":(Ljava/lang/String;)V\n         88: athrow\n         89: aload_0\n         90: iconst_1\n-        91: putfield      #15                 // Field readIsWaiting:Z\n+        91: putfield      #52                 // Field readIsWaiting:Z\n         94: iconst_1\n         95: istore_3\n         96: aload_0\n         97: iload_3\n-        98: invokespecial #49                 // Method __read:(Z)I\n+        98: invokespecial #154                // Method __read:(Z)I\n        101: dup\n        102: istore_2\n        103: ifge          116\n        106: iload_2\n        107: bipush        -2\n        109: if_icmpeq     116\n        112: iload_2\n        113: aload_1\n        114: monitorexit\n        115: ireturn\n        116: goto          175\n        119: astore        4\n        121: aload_0\n-       122: getfield      #8                  // Field queue:[I\n+       122: getfield      #27                 // Field queue:[I\n        125: dup\n        126: astore        5\n        128: monitorenter\n        129: aload_0\n        130: aload         4\n-       132: putfield      #14                 // Field ioException:Ljava/io/IOException;\n+       132: putfield      #48                 // Field ioException:Ljava/io/IOException;\n        135: aload_0\n-       136: getfield      #8                  // Field queue:[I\n-       139: invokevirtual #50                 // Method java/lang/Object.notifyAll:()V\n+       136: getfield      #27                 // Field queue:[I\n+       139: invokevirtual #158                // Method java/lang/Object.notifyAll:()V\n        142: aload_0\n-       143: getfield      #8                  // Field queue:[I\n-       146: ldc2_w        #51                 // long 100l\n-       149: invokevirtual #53                 // Method java/lang/Object.wait:(J)V\n+       143: getfield      #27                 // Field queue:[I\n+       146: ldc2_w        #161                // long 100l\n+       149: invokevirtual #163                // Method java/lang/Object.wait:(J)V\n        152: goto          157\n        155: astore        6\n        157: aload         5\n        159: monitorexit\n        160: goto          171\n        163: astore        7\n        165: aload         5\n@@ -1334,77 +1334,77 @@\n        173: monitorexit\n        174: ireturn\n        175: iload_2\n        176: bipush        -2\n        178: if_icmpeq     187\n        181: aload_0\n        182: iload_2\n-       183: invokespecial #54                 // Method processChar:(I)Z\n+       183: invokespecial #166                // Method processChar:(I)Z\n        186: pop\n        187: goto          203\n        190: astore        4\n        192: aload_0\n-       193: getfield      #6                  // Field isClosed:Z\n+       193: getfield      #20                 // Field isClosed:Z\n        196: ifeq          203\n        199: iconst_m1\n        200: aload_1\n        201: monitorexit\n        202: ireturn\n        203: iconst_0\n        204: istore_3\n        205: aload_0\n-       206: invokespecial #26                 // Method java/io/BufferedInputStream.available:()I\n+       206: invokespecial #90                 // Method java/io/BufferedInputStream.available:()I\n        209: ifle          226\n        212: aload_0\n-       213: getfield      #13                 // Field bytesAvailable:I\n+       213: getfield      #45                 // Field bytesAvailable:I\n        216: aload_0\n-       217: getfield      #8                  // Field queue:[I\n+       217: getfield      #27                 // Field queue:[I\n        220: arraylength\n        221: iconst_1\n        222: isub\n        223: if_icmplt     96\n        226: aload_0\n        227: iconst_0\n-       228: putfield      #15                 // Field readIsWaiting:Z\n+       228: putfield      #52                 // Field readIsWaiting:Z\n        231: goto          7\n        234: aload_0\n-       235: getfield      #8                  // Field queue:[I\n+       235: getfield      #27                 // Field queue:[I\n        238: aload_0\n-       239: getfield      #9                  // Field queueHead:I\n+       239: getfield      #31                 // Field queueHead:I\n        242: iaload\n        243: istore_2\n        244: aload_0\n        245: dup\n-       246: getfield      #9                  // Field queueHead:I\n+       246: getfield      #31                 // Field queueHead:I\n        249: iconst_1\n        250: iadd\n        251: dup_x1\n-       252: putfield      #9                  // Field queueHead:I\n+       252: putfield      #31                 // Field queueHead:I\n        255: aload_0\n-       256: getfield      #8                  // Field queue:[I\n+       256: getfield      #27                 // Field queue:[I\n        259: arraylength\n        260: if_icmplt     268\n        263: aload_0\n        264: iconst_0\n-       265: putfield      #9                  // Field queueHead:I\n+       265: putfield      #31                 // Field queueHead:I\n        268: aload_0\n        269: dup\n-       270: getfield      #13                 // Field bytesAvailable:I\n+       270: getfield      #45                 // Field bytesAvailable:I\n        273: iconst_1\n        274: isub\n-       275: putfield      #13                 // Field bytesAvailable:I\n+       275: putfield      #45                 // Field bytesAvailable:I\n        278: aload_0\n-       279: getfield      #13                 // Field bytesAvailable:I\n+       279: getfield      #45                 // Field bytesAvailable:I\n        282: ifne          299\n        285: aload_0\n-       286: getfield      #16                 // Field threaded:Z\n+       286: getfield      #55                 // Field threaded:Z\n        289: ifeq          299\n        292: aload_0\n-       293: getfield      #8                  // Field queue:[I\n-       296: invokevirtual #40                 // Method java/lang/Object.notify:()V\n+       293: getfield      #27                 // Field queue:[I\n+       296: invokevirtual #132                // Method java/lang/Object.notify:()V\n        299: iload_2\n        300: aload_1\n        301: monitorexit\n        302: ireturn\n        303: astore        8\n        305: aload_1\n        306: monitorexit\n@@ -1542,15 +1542,15 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #55                 // Method read:([BII)I\n+         5: invokevirtual #169                // Method read:([BII)I\n          8: ireturn\n       LineNumberTable:\n         line 489: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/net/telnet/TelnetInputStream;\n             0       9     1 buffer   [B\n@@ -1564,35 +1564,35 @@\n       stack=3, locals=8, args_size=4\n          0: iload_3\n          1: iconst_1\n          2: if_icmpge     7\n          5: iconst_0\n          6: ireturn\n          7: aload_0\n-         8: getfield      #8                  // Field queue:[I\n+         8: getfield      #27                 // Field queue:[I\n         11: dup\n         12: astore        6\n         14: monitorenter\n         15: iload_3\n         16: aload_0\n-        17: getfield      #13                 // Field bytesAvailable:I\n+        17: getfield      #45                 // Field bytesAvailable:I\n         20: if_icmple     28\n         23: aload_0\n-        24: getfield      #13                 // Field bytesAvailable:I\n+        24: getfield      #45                 // Field bytesAvailable:I\n         27: istore_3\n         28: aload         6\n         30: monitorexit\n         31: goto          42\n         34: astore        7\n         36: aload         6\n         38: monitorexit\n         39: aload         7\n         41: athrow\n         42: aload_0\n-        43: invokevirtual #56                 // Method read:()I\n+        43: invokevirtual #172                // Method read:()I\n         46: dup\n         47: istore        4\n         49: iconst_m1\n         50: if_icmpne     55\n         53: iconst_m1\n         54: ireturn\n         55: iload_2\n@@ -1603,15 +1603,15 @@\n         63: iload         4\n         65: i2b\n         66: bastore\n         67: iinc          3, -1\n         70: iload_3\n         71: ifle          85\n         74: aload_0\n-        75: invokevirtual #56                 // Method read:()I\n+        75: invokevirtual #172                // Method read:()I\n         78: dup\n         79: istore        4\n         81: iconst_m1\n         82: if_icmpne     58\n         85: iload_2\n         86: iload         5\n         88: isub\n@@ -1675,30 +1675,30 @@\n \n   public int available() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field queue:[I\n+         1: getfield      #27                 // Field queue:[I\n          4: dup\n          5: astore_1\n          6: monitorenter\n          7: aload_0\n-         8: getfield      #16                 // Field threaded:Z\n+         8: getfield      #55                 // Field threaded:Z\n         11: ifeq          21\n         14: aload_0\n-        15: getfield      #13                 // Field bytesAvailable:I\n+        15: getfield      #45                 // Field bytesAvailable:I\n         18: aload_1\n         19: monitorexit\n         20: ireturn\n         21: aload_0\n-        22: getfield      #13                 // Field bytesAvailable:I\n+        22: getfield      #45                 // Field bytesAvailable:I\n         25: aload_0\n-        26: invokespecial #26                 // Method java/io/BufferedInputStream.available:()I\n+        26: invokespecial #90                 // Method java/io/BufferedInputStream.available:()I\n         29: iadd\n         30: aload_1\n         31: monitorexit\n         32: ireturn\n         33: astore_2\n         34: aload_1\n         35: monitorexit\n@@ -1729,39 +1729,39 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n-         1: invokespecial #57                 // Method java/io/BufferedInputStream.close:()V\n+         1: invokespecial #173                // Method java/io/BufferedInputStream.close:()V\n          4: aload_0\n-         5: getfield      #8                  // Field queue:[I\n+         5: getfield      #27                 // Field queue:[I\n          8: dup\n          9: astore_1\n         10: monitorenter\n         11: aload_0\n         12: iconst_1\n-        13: putfield      #7                  // Field hasReachedEOF:Z\n+        13: putfield      #24                 // Field hasReachedEOF:Z\n         16: aload_0\n         17: iconst_1\n-        18: putfield      #6                  // Field isClosed:Z\n+        18: putfield      #20                 // Field isClosed:Z\n         21: aload_0\n-        22: getfield      #19                 // Field thread:Ljava/lang/Thread;\n+        22: getfield      #63                 // Field thread:Ljava/lang/Thread;\n         25: ifnull        45\n         28: aload_0\n-        29: getfield      #19                 // Field thread:Ljava/lang/Thread;\n-        32: invokevirtual #58                 // Method java/lang/Thread.isAlive:()Z\n+        29: getfield      #63                 // Field thread:Ljava/lang/Thread;\n+        32: invokevirtual #176                // Method java/lang/Thread.isAlive:()Z\n         35: ifeq          45\n         38: aload_0\n-        39: getfield      #19                 // Field thread:Ljava/lang/Thread;\n-        42: invokevirtual #59                 // Method java/lang/Thread.interrupt:()V\n+        39: getfield      #63                 // Field thread:Ljava/lang/Thread;\n+        42: invokevirtual #180                // Method java/lang/Thread.interrupt:()V\n         45: aload_0\n-        46: getfield      #8                  // Field queue:[I\n-        49: invokevirtual #50                 // Method java/lang/Object.notifyAll:()V\n+        46: getfield      #27                 // Field queue:[I\n+        49: invokevirtual #158                // Method java/lang/Object.notifyAll:()V\n         52: aload_1\n         53: monitorexit\n         54: goto          62\n         57: astore_2\n         58: aload_1\n         59: monitorexit\n         60: aload_2\n@@ -1797,124 +1797,124 @@\n \n   public void run();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=8, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field isClosed:Z\n+         1: getfield      #20                 // Field isClosed:Z\n          4: ifne          126\n          7: aload_0\n          8: iconst_1\n-         9: invokespecial #49                 // Method __read:(Z)I\n+         9: invokespecial #154                // Method __read:(Z)I\n         12: dup\n         13: istore_1\n         14: ifge          20\n         17: goto          126\n         20: goto          90\n         23: astore_2\n         24: aload_0\n-        25: getfield      #8                  // Field queue:[I\n+        25: getfield      #27                 // Field queue:[I\n         28: dup\n         29: astore_3\n         30: monitorenter\n         31: aload_0\n         32: aload_2\n-        33: putfield      #14                 // Field ioException:Ljava/io/IOException;\n+        33: putfield      #48                 // Field ioException:Ljava/io/IOException;\n         36: aload_0\n-        37: getfield      #8                  // Field queue:[I\n-        40: invokevirtual #50                 // Method java/lang/Object.notifyAll:()V\n+        37: getfield      #27                 // Field queue:[I\n+        40: invokevirtual #158                // Method java/lang/Object.notifyAll:()V\n         43: aload_0\n-        44: getfield      #8                  // Field queue:[I\n-        47: ldc2_w        #51                 // long 100l\n-        50: invokevirtual #53                 // Method java/lang/Object.wait:(J)V\n+        44: getfield      #27                 // Field queue:[I\n+        47: ldc2_w        #161                // long 100l\n+        50: invokevirtual #163                // Method java/lang/Object.wait:(J)V\n         53: goto          70\n         56: astore        4\n         58: aload_0\n-        59: getfield      #6                  // Field isClosed:Z\n+        59: getfield      #20                 // Field isClosed:Z\n         62: ifeq          70\n         65: aload_3\n         66: monitorexit\n         67: goto          126\n         70: aload_3\n         71: monitorexit\n         72: goto          0\n         75: astore        5\n         77: aload_3\n         78: monitorexit\n         79: aload         5\n         81: athrow\n         82: astore_2\n         83: aload_0\n-        84: invokespecial #57                 // Method java/io/BufferedInputStream.close:()V\n+        84: invokespecial #173                // Method java/io/BufferedInputStream.close:()V\n         87: goto          126\n         90: iconst_0\n         91: istore_2\n         92: aload_0\n         93: iload_1\n-        94: invokespecial #54                 // Method processChar:(I)Z\n+        94: invokespecial #166                // Method processChar:(I)Z\n         97: istore_2\n         98: goto          112\n        101: astore_3\n        102: aload_0\n-       103: getfield      #6                  // Field isClosed:Z\n+       103: getfield      #20                 // Field isClosed:Z\n        106: ifeq          112\n        109: goto          126\n        112: iload_2\n        113: ifeq          123\n        116: aload_0\n-       117: getfield      #3                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n-       120: invokevirtual #61                 // Method org/apache/commons/net/telnet/TelnetClient.notifyInputListener:()V\n+       117: getfield      #13                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+       120: invokevirtual #185                // Method org/apache/commons/net/telnet/TelnetClient.notifyInputListener:()V\n        123: goto          0\n        126: goto          161\n        129: astore_2\n        130: aload_0\n-       131: getfield      #8                  // Field queue:[I\n+       131: getfield      #27                 // Field queue:[I\n        134: dup\n        135: astore_3\n        136: monitorenter\n        137: aload_0\n        138: aload_2\n-       139: putfield      #14                 // Field ioException:Ljava/io/IOException;\n+       139: putfield      #48                 // Field ioException:Ljava/io/IOException;\n        142: aload_3\n        143: monitorexit\n        144: goto          154\n        147: astore        6\n        149: aload_3\n        150: monitorexit\n        151: aload         6\n        153: athrow\n        154: aload_0\n-       155: getfield      #3                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n-       158: invokevirtual #61                 // Method org/apache/commons/net/telnet/TelnetClient.notifyInputListener:()V\n+       155: getfield      #13                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+       158: invokevirtual #185                // Method org/apache/commons/net/telnet/TelnetClient.notifyInputListener:()V\n        161: aload_0\n-       162: getfield      #8                  // Field queue:[I\n+       162: getfield      #27                 // Field queue:[I\n        165: dup\n        166: astore_2\n        167: monitorenter\n        168: aload_0\n        169: iconst_1\n-       170: putfield      #6                  // Field isClosed:Z\n+       170: putfield      #20                 // Field isClosed:Z\n        173: aload_0\n        174: iconst_1\n-       175: putfield      #7                  // Field hasReachedEOF:Z\n+       175: putfield      #24                 // Field hasReachedEOF:Z\n        178: aload_0\n-       179: getfield      #8                  // Field queue:[I\n-       182: invokevirtual #40                 // Method java/lang/Object.notify:()V\n+       179: getfield      #27                 // Field queue:[I\n+       182: invokevirtual #132                // Method java/lang/Object.notify:()V\n        185: aload_2\n        186: monitorexit\n        187: goto          197\n        190: astore        7\n        192: aload_2\n        193: monitorexit\n        194: aload         7\n        196: athrow\n        197: aload_0\n        198: iconst_0\n-       199: putfield      #16                 // Field threaded:Z\n+       199: putfield      #55                 // Field threaded:Z\n        202: return\n       Exception table:\n          from    to  target type\n              7    17    23   Class java/io/InterruptedIOException\n             43    53    56   Class java/lang/InterruptedException\n             31    67    75   any\n             70    72    75   any\n"}]}
