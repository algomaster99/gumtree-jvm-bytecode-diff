{"diffoscope-json-version": 1, "source1": "first/ZipShort.class", "source2": "second/ZipShort.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,121 +1,125 @@\n-  SHA-256 checksum 47ed02cbeb483254dbcbb5503a1360f07e48efd2db4354b844aa8455c1718957\n+  SHA-256 checksum 3d5b6dd3e25d77edb8dc4ecadba957da4c7847bde4b94ee15812cb6ac82a14ef\n   Compiled from \"ZipShort.java\"\n public final class org.apache.commons.compress.archivers.zip.ZipShort implements java.lang.Cloneable,java.io.Serializable\n   minor version: 0\n-  major version: 51\n+  major version: 53\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #8                          // org/apache/commons/compress/archivers/zip/ZipShort\n-  super_class: #22                        // java/lang/Object\n-  interfaces: 2, fields: 3, methods: 14, attributes: 1\n+  super_class: #17                        // java/lang/Object\n+  interfaces: 2, fields: 3, methods: 14, attributes: 3\n Constant pool:\n-    #1 = Methodref          #22.#73       // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #8.#74        // org/apache/commons/compress/archivers/zip/ZipShort.value:I\n-    #3 = Methodref          #8.#75        // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":([BI)V\n-    #4 = Methodref          #8.#76        // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-    #5 = Methodref          #77.#78       // org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n-    #6 = Methodref          #8.#79        // org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n-    #7 = Methodref          #77.#80       // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n-    #8 = Class              #81           // org/apache/commons/compress/archivers/zip/ZipShort\n-    #9 = Methodref          #8.#82        // org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I\n-   #10 = Methodref          #22.#83       // java/lang/Object.clone:()Ljava/lang/Object;\n-   #11 = Class              #84           // java/lang/CloneNotSupportedException\n-   #12 = Class              #85           // java/lang/RuntimeException\n-   #13 = Methodref          #12.#86       // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n-   #14 = Class              #87           // java/lang/StringBuilder\n-   #15 = Methodref          #14.#73       // java/lang/StringBuilder.\"<init>\":()V\n-   #16 = String             #88           // ZipShort value:\n-   #17 = Methodref          #14.#89       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #18 = Methodref          #14.#90       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #19 = Methodref          #14.#91       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #20 = Methodref          #8.#92        // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-   #21 = Fieldref           #8.#93        // org/apache/commons/compress/archivers/zip/ZipShort.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #22 = Class              #94           // java/lang/Object\n-   #23 = Class              #95           // java/lang/Cloneable\n-   #24 = Class              #96           // java/io/Serializable\n-   #25 = Utf8               ZERO\n-   #26 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #27 = Utf8               serialVersionUID\n-   #28 = Utf8               J\n-   #29 = Utf8               ConstantValue\n-   #30 = Long               1l\n-   #32 = Utf8               value\n-   #33 = Utf8               I\n-   #34 = Utf8               <init>\n-   #35 = Utf8               (I)V\n-   #36 = Utf8               Code\n-   #37 = Utf8               LineNumberTable\n-   #38 = Utf8               LocalVariableTable\n-   #39 = Utf8               this\n-   #40 = Utf8               ([B)V\n-   #41 = Utf8               bytes\n-   #42 = Utf8               [B\n-   #43 = Utf8               ([BI)V\n-   #44 = Utf8               offset\n-   #45 = Utf8               getBytes\n-   #46 = Utf8               ()[B\n-   #47 = Utf8               result\n-   #48 = Utf8               getValue\n-   #49 = Utf8               ()I\n-   #50 = Utf8               (I)[B\n-   #51 = Utf8               putShort\n-   #52 = Utf8               (I[BI)V\n-   #53 = Utf8               buf\n-   #54 = Utf8               ([BI)I\n-   #55 = Utf8               ([B)I\n-   #56 = Utf8               equals\n-   #57 = Utf8               (Ljava/lang/Object;)Z\n-   #58 = Utf8               o\n-   #59 = Utf8               Ljava/lang/Object;\n-   #60 = Utf8               StackMapTable\n-   #61 = Utf8               hashCode\n-   #62 = Utf8               clone\n-   #63 = Utf8               ()Ljava/lang/Object;\n-   #64 = Utf8               cnfe\n-   #65 = Utf8               Ljava/lang/CloneNotSupportedException;\n-   #66 = Class              #84           // java/lang/CloneNotSupportedException\n-   #67 = Utf8               toString\n-   #68 = Utf8               ()Ljava/lang/String;\n-   #69 = Utf8               <clinit>\n-   #70 = Utf8               ()V\n-   #71 = Utf8               SourceFile\n-   #72 = Utf8               ZipShort.java\n-   #73 = NameAndType        #34:#70       // \"<init>\":()V\n-   #74 = NameAndType        #32:#33       // value:I\n-   #75 = NameAndType        #34:#43       // \"<init>\":([BI)V\n-   #76 = NameAndType        #48:#54       // getValue:([BI)I\n-   #77 = Class              #97           // org/apache/commons/compress/utils/ByteUtils\n-   #78 = NameAndType        #98:#99       // toLittleEndian:([BJII)V\n-   #79 = NameAndType        #51:#52       // putShort:(I[BI)V\n-   #80 = NameAndType        #100:#101     // fromLittleEndian:([BII)J\n-   #81 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-   #82 = NameAndType        #48:#49       // getValue:()I\n-   #83 = NameAndType        #62:#63       // clone:()Ljava/lang/Object;\n-   #84 = Utf8               java/lang/CloneNotSupportedException\n-   #85 = Utf8               java/lang/RuntimeException\n-   #86 = NameAndType        #34:#102      // \"<init>\":(Ljava/lang/Throwable;)V\n-   #87 = Utf8               java/lang/StringBuilder\n-   #88 = Utf8               ZipShort value:\n-   #89 = NameAndType        #103:#104     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #90 = NameAndType        #103:#105     // append:(I)Ljava/lang/StringBuilder;\n-   #91 = NameAndType        #67:#68       // toString:()Ljava/lang/String;\n-   #92 = NameAndType        #34:#35       // \"<init>\":(I)V\n-   #93 = NameAndType        #25:#26       // ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #94 = Utf8               java/lang/Object\n-   #95 = Utf8               java/lang/Cloneable\n-   #96 = Utf8               java/io/Serializable\n-   #97 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-   #98 = Utf8               toLittleEndian\n-   #99 = Utf8               ([BJII)V\n-  #100 = Utf8               fromLittleEndian\n-  #101 = Utf8               ([BII)J\n-  #102 = Utf8               (Ljava/lang/Throwable;)V\n-  #103 = Utf8               append\n-  #104 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #105 = Utf8               (I)Ljava/lang/StringBuilder;\n+    #1 = Methodref          #17.#67       // java/lang/Object.\"<init>\":()V\n+    #2 = Fieldref           #8.#68        // org/apache/commons/compress/archivers/zip/ZipShort.value:I\n+    #3 = Methodref          #8.#69        // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":([BI)V\n+    #4 = Methodref          #8.#70        // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+    #5 = Methodref          #71.#72       // org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n+    #6 = Methodref          #8.#73        // org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n+    #7 = Methodref          #71.#74       // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n+    #8 = Class              #75           // org/apache/commons/compress/archivers/zip/ZipShort\n+    #9 = Methodref          #8.#76        // org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I\n+   #10 = Methodref          #17.#77       // java/lang/Object.clone:()Ljava/lang/Object;\n+   #11 = Class              #78           // java/lang/CloneNotSupportedException\n+   #12 = Class              #79           // java/lang/RuntimeException\n+   #13 = Methodref          #12.#80       // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+   #14 = InvokeDynamic      #0:#84        // #0:makeConcatWithConstants:(I)Ljava/lang/String;\n+   #15 = Methodref          #8.#85        // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+   #16 = Fieldref           #8.#86        // org/apache/commons/compress/archivers/zip/ZipShort.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #17 = Class              #87           // java/lang/Object\n+   #18 = Class              #88           // java/lang/Cloneable\n+   #19 = Class              #89           // java/io/Serializable\n+   #20 = Utf8               ZERO\n+   #21 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #22 = Utf8               serialVersionUID\n+   #23 = Utf8               J\n+   #24 = Utf8               ConstantValue\n+   #25 = Long               1l\n+   #27 = Utf8               value\n+   #28 = Utf8               I\n+   #29 = Utf8               <init>\n+   #30 = Utf8               (I)V\n+   #31 = Utf8               Code\n+   #32 = Utf8               LineNumberTable\n+   #33 = Utf8               LocalVariableTable\n+   #34 = Utf8               this\n+   #35 = Utf8               ([B)V\n+   #36 = Utf8               bytes\n+   #37 = Utf8               [B\n+   #38 = Utf8               ([BI)V\n+   #39 = Utf8               offset\n+   #40 = Utf8               getBytes\n+   #41 = Utf8               ()[B\n+   #42 = Utf8               result\n+   #43 = Utf8               getValue\n+   #44 = Utf8               ()I\n+   #45 = Utf8               (I)[B\n+   #46 = Utf8               putShort\n+   #47 = Utf8               (I[BI)V\n+   #48 = Utf8               buf\n+   #49 = Utf8               ([BI)I\n+   #50 = Utf8               ([B)I\n+   #51 = Utf8               equals\n+   #52 = Utf8               (Ljava/lang/Object;)Z\n+   #53 = Utf8               o\n+   #54 = Utf8               Ljava/lang/Object;\n+   #55 = Utf8               StackMapTable\n+   #56 = Utf8               hashCode\n+   #57 = Utf8               clone\n+   #58 = Utf8               ()Ljava/lang/Object;\n+   #59 = Utf8               cnfe\n+   #60 = Utf8               Ljava/lang/CloneNotSupportedException;\n+   #61 = Utf8               toString\n+   #62 = Utf8               ()Ljava/lang/String;\n+   #63 = Utf8               <clinit>\n+   #64 = Utf8               ()V\n+   #65 = Utf8               SourceFile\n+   #66 = Utf8               ZipShort.java\n+   #67 = NameAndType        #29:#64       // \"<init>\":()V\n+   #68 = NameAndType        #27:#28       // value:I\n+   #69 = NameAndType        #29:#38       // \"<init>\":([BI)V\n+   #70 = NameAndType        #43:#49       // getValue:([BI)I\n+   #71 = Class              #90           // org/apache/commons/compress/utils/ByteUtils\n+   #72 = NameAndType        #91:#92       // toLittleEndian:([BJII)V\n+   #73 = NameAndType        #46:#47       // putShort:(I[BI)V\n+   #74 = NameAndType        #93:#94       // fromLittleEndian:([BII)J\n+   #75 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+   #76 = NameAndType        #43:#44       // getValue:()I\n+   #77 = NameAndType        #57:#58       // clone:()Ljava/lang/Object;\n+   #78 = Utf8               java/lang/CloneNotSupportedException\n+   #79 = Utf8               java/lang/RuntimeException\n+   #80 = NameAndType        #29:#95       // \"<init>\":(Ljava/lang/Throwable;)V\n+   #81 = Utf8               BootstrapMethods\n+   #82 = MethodHandle       6:#96         // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+   #83 = String             #97           // ZipShort value: \\u0001\n+   #84 = NameAndType        #98:#99       // makeConcatWithConstants:(I)Ljava/lang/String;\n+   #85 = NameAndType        #29:#30       // \"<init>\":(I)V\n+   #86 = NameAndType        #20:#21       // ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #87 = Utf8               java/lang/Object\n+   #88 = Utf8               java/lang/Cloneable\n+   #89 = Utf8               java/io/Serializable\n+   #90 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+   #91 = Utf8               toLittleEndian\n+   #92 = Utf8               ([BJII)V\n+   #93 = Utf8               fromLittleEndian\n+   #94 = Utf8               ([BII)J\n+   #95 = Utf8               (Ljava/lang/Throwable;)V\n+   #96 = Methodref          #100.#101     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+   #97 = Utf8               ZipShort value: \\u0001\n+   #98 = Utf8               makeConcatWithConstants\n+   #99 = Utf8               (I)Ljava/lang/String;\n+  #100 = Class              #102          // java/lang/invoke/StringConcatFactory\n+  #101 = NameAndType        #98:#106      // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #102 = Utf8               java/lang/invoke/StringConcatFactory\n+  #103 = Class              #108          // java/lang/invoke/MethodHandles$Lookup\n+  #104 = Utf8               Lookup\n+  #105 = Utf8               InnerClasses\n+  #106 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #107 = Class              #109          // java/lang/invoke/MethodHandles\n+  #108 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #109 = Utf8               java/lang/invoke/MethodHandles\n {\n   public static final org.apache.commons.compress.archivers.zip.ZipShort ZERO;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   private static final long serialVersionUID = 1l;\n     descriptor: J\n@@ -384,39 +388,39 @@\n         frame_type = 69 /* same_locals_1_stack_item */\n           stack = [ class java/lang/CloneNotSupportedException ]\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=2, locals=1, args_size=1\n-         0: new           #14                 // class java/lang/StringBuilder\n-         3: dup\n-         4: invokespecial #15                 // Method java/lang/StringBuilder.\"<init>\":()V\n-         7: ldc           #16                 // String ZipShort value:\n-         9: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        12: aload_0\n-        13: getfield      #2                  // Field value:I\n-        16: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        19: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        22: areturn\n+      stack=1, locals=1, args_size=1\n+         0: aload_0\n+         1: getfield      #2                  // Field value:I\n+         4: invokedynamic #14,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;\n+         9: areturn\n       LineNumberTable:\n         line 159: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      23     0  this   Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+            0      10     0  this   Lorg/apache/commons/compress/archivers/zip/ZipShort;\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=3, locals=0, args_size=0\n          0: new           #8                  // class org/apache/commons/compress/archivers/zip/ZipShort\n          3: dup\n          4: iconst_0\n-         5: invokespecial #20                 // Method \"<init>\":(I)V\n-         8: putstatic     #21                 // Field ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+         5: invokespecial #15                 // Method \"<init>\":(I)V\n+         8: putstatic     #16                 // Field ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n         11: return\n       LineNumberTable:\n         line 34: 0\n }\n SourceFile: \"ZipShort.java\"\n+InnerClasses:\n+  public static final #104= #103 of #107; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+BootstrapMethods:\n+  0: #82 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #83 ZipShort value: \\u0001\n"}]}
