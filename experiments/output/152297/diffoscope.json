{"diffoscope-json-version": 1, "source1": "first/BufferedFileChannelInputStream.class", "source2": "second/BufferedFileChannelInputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -15,14 +15,18 @@\n \n public final class BufferedFileChannelInputStream extends InputStream\n {\n     private final ByteBuffer byteBuffer;\n     private final FileChannel fileChannel;\n     private static final Class<?> DIRECT_BUFFER_CLASS;\n     \n+    static {\n+        DIRECT_BUFFER_CLASS = getDirectBufferClass();\n+    }\n+    \n     private static Class<?> getDirectBufferClass() {\n         Class<?> res = null;\n         try {\n             res = Class.forName(\"sun.nio.ch.DirectBuffer\");\n         }\n         catch (final IllegalAccessError | ClassNotFoundException ex) {}\n         return res;\n@@ -94,14 +98,15 @@\n     public synchronized void close() throws IOException {\n         try {\n             this.fileChannel.close();\n         }\n         finally {\n             this.clean(this.byteBuffer);\n         }\n+        this.clean(this.byteBuffer);\n     }\n     \n     @Override\n     public synchronized int read() throws IOException {\n         if (!this.refill()) {\n             return -1;\n         }\n@@ -154,12 +159,8 @@\n         if (n > size - currentFilePosition) {\n             this.fileChannel.position(size);\n             return size - currentFilePosition;\n         }\n         this.fileChannel.position(currentFilePosition + n);\n         return n;\n     }\n-    \n-    static {\n-        DIRECT_BUFFER_CLASS = getDirectBufferClass();\n-    }\n }\n"}]}
