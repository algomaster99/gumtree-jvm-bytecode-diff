{"diffoscope-json-version": 1, "source1": "first/InitMethodReferenceForm.class", "source2": "second/InitMethodReferenceForm.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,33 +1,29 @@\n \n package org.apache.commons.compress.harmony.unpack200.bytecode.forms;\n \n import org.apache.commons.compress.harmony.pack200.Pack200Exception;\n-import org.apache.commons.compress.harmony.unpack200.SegmentConstantPool;\n import org.apache.commons.compress.harmony.unpack200.bytecode.ClassFileEntry;\n import org.apache.commons.compress.harmony.unpack200.bytecode.ByteCode;\n import org.apache.commons.compress.harmony.unpack200.bytecode.OperandManager;\n \n public abstract class InitMethodReferenceForm extends ClassSpecificReferenceForm\n {\n-    public InitMethodReferenceForm(final int opcode, final String name, final int[] rewrite) {\n-        super(opcode, name, rewrite);\n+    public InitMethodReferenceForm(final int n, final String s, final int[] array) {\n+        super(n, s, array);\n     }\n     \n     protected abstract String context(final OperandManager p0);\n     \n     protected int getPoolID() {\n         return 11;\n     }\n     \n     protected int getOffset(final OperandManager operandManager) {\n         return operandManager.nextInitRef();\n     }\n     \n-    protected void setNestedEntries(final ByteCode byteCode, final OperandManager operandManager, final int offset) throws Pack200Exception {\n-        final SegmentConstantPool globalPool = operandManager.globalConstantPool();\n-        ClassFileEntry[] nested = null;\n-        nested = new ClassFileEntry[] { (ClassFileEntry)globalPool.getInitMethodPoolEntry(11, (long)offset, this.context(operandManager)) };\n-        byteCode.setNested(nested);\n+    protected void setNestedEntries(final ByteCode byteCode, final OperandManager operandManager, final int n) throws Pack200Exception {\n+        byteCode.setNested(new ClassFileEntry[] { (ClassFileEntry)operandManager.globalConstantPool().getInitMethodPoolEntry(11, (long)n, this.context(operandManager)) });\n         byteCode.setNestedPositions(new int[][] { { 0, 2 } });\n     }\n }\n"}]}
