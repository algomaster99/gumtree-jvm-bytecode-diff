{"diffoscope-json-version": 1, "source1": "first/ByteOrderParser.class", "source2": "second/ByteOrderParser.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,140 +1,141 @@\n-  SHA-256 checksum f0f4f5962ba1e3103076212807599fbeb6164bfc70df44724aa3fb12743de77d\n+  SHA-256 checksum 47bfdf249af8c1d81030315676ded3f84237202b02ace27cb485e61ffae90c78\n   Compiled from \"ByteOrderParser.java\"\n public final class org.apache.commons.io.ByteOrderParser\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #16                         // org/apache/commons/io/ByteOrderParser\n-  super_class: #17                        // java/lang/Object\n+  this_class: #1                          // org/apache/commons/io/ByteOrderParser\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 2, attributes: 1\n Constant pool:\n-   #1 = Methodref          #17.#32        // java/lang/Object.\"<init>\":()V\n-   #2 = Fieldref           #33.#34        // java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;\n-   #3 = Methodref          #33.#35        // java/nio/ByteOrder.toString:()Ljava/lang/String;\n-   #4 = Methodref          #36.#37        // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #5 = Fieldref           #33.#38        // java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n-   #6 = Class              #39            // java/lang/IllegalArgumentException\n-   #7 = Class              #40            // java/lang/StringBuilder\n-   #8 = Methodref          #7.#32         // java/lang/StringBuilder.\"<init>\":()V\n-   #9 = String             #41            // Unsupported byte order setting:\n-  #10 = Methodref          #7.#42         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #11 = String             #43            // , expected one of\n-  #12 = Methodref          #7.#44         // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #13 = String             #45            // ,\n-  #14 = Methodref          #7.#35         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #15 = Methodref          #6.#46         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #16 = Class              #47            // org/apache/commons/io/ByteOrderParser\n-  #17 = Class              #48            // java/lang/Object\n-  #18 = Utf8               <init>\n-  #19 = Utf8               ()V\n-  #20 = Utf8               Code\n-  #21 = Utf8               LineNumberTable\n-  #22 = Utf8               LocalVariableTable\n-  #23 = Utf8               this\n-  #24 = Utf8               Lorg/apache/commons/io/ByteOrderParser;\n-  #25 = Utf8               parseByteOrder\n-  #26 = Utf8               (Ljava/lang/String;)Ljava/nio/ByteOrder;\n-  #27 = Utf8               value\n-  #28 = Utf8               Ljava/lang/String;\n-  #29 = Utf8               StackMapTable\n-  #30 = Utf8               SourceFile\n-  #31 = Utf8               ByteOrderParser.java\n-  #32 = NameAndType        #18:#19        // \"<init>\":()V\n-  #33 = Class              #49            // java/nio/ByteOrder\n-  #34 = NameAndType        #50:#51        // BIG_ENDIAN:Ljava/nio/ByteOrder;\n-  #35 = NameAndType        #52:#53        // toString:()Ljava/lang/String;\n-  #36 = Class              #54            // java/lang/String\n-  #37 = NameAndType        #55:#56        // equals:(Ljava/lang/Object;)Z\n-  #38 = NameAndType        #57:#51        // LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n-  #39 = Utf8               java/lang/IllegalArgumentException\n-  #40 = Utf8               java/lang/StringBuilder\n-  #41 = Utf8               Unsupported byte order setting:\n-  #42 = NameAndType        #58:#59        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #43 = Utf8               , expected one of\n-  #44 = NameAndType        #58:#60        // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #45 = Utf8               ,\n-  #46 = NameAndType        #18:#61        // \"<init>\":(Ljava/lang/String;)V\n-  #47 = Utf8               org/apache/commons/io/ByteOrderParser\n-  #48 = Utf8               java/lang/Object\n-  #49 = Utf8               java/nio/ByteOrder\n-  #50 = Utf8               BIG_ENDIAN\n-  #51 = Utf8               Ljava/nio/ByteOrder;\n-  #52 = Utf8               toString\n-  #53 = Utf8               ()Ljava/lang/String;\n-  #54 = Utf8               java/lang/String\n-  #55 = Utf8               equals\n-  #56 = Utf8               (Ljava/lang/Object;)Z\n-  #57 = Utf8               LITTLE_ENDIAN\n-  #58 = Utf8               append\n-  #59 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #60 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #61 = Utf8               (Ljava/lang/String;)V\n+   #1 = Class              #2             // org/apache/commons/io/ByteOrderParser\n+   #2 = Utf8               org/apache/commons/io/ByteOrderParser\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Utf8               Code\n+   #8 = Methodref          #3.#9          // java/lang/Object.\"<init>\":()V\n+   #9 = NameAndType        #5:#6          // \"<init>\":()V\n+  #10 = Utf8               LineNumberTable\n+  #11 = Utf8               LocalVariableTable\n+  #12 = Utf8               this\n+  #13 = Utf8               Lorg/apache/commons/io/ByteOrderParser;\n+  #14 = Utf8               parseByteOrder\n+  #15 = Utf8               (Ljava/lang/String;)Ljava/nio/ByteOrder;\n+  #16 = Fieldref           #17.#19        // java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;\n+  #17 = Class              #18            // java/nio/ByteOrder\n+  #18 = Utf8               java/nio/ByteOrder\n+  #19 = NameAndType        #20:#21        // BIG_ENDIAN:Ljava/nio/ByteOrder;\n+  #20 = Utf8               BIG_ENDIAN\n+  #21 = Utf8               Ljava/nio/ByteOrder;\n+  #22 = Methodref          #17.#23        // java/nio/ByteOrder.toString:()Ljava/lang/String;\n+  #23 = NameAndType        #24:#25        // toString:()Ljava/lang/String;\n+  #24 = Utf8               toString\n+  #25 = Utf8               ()Ljava/lang/String;\n+  #26 = Methodref          #27.#29        // java/lang/String.equals:(Ljava/lang/Object;)Z\n+  #27 = Class              #28            // java/lang/String\n+  #28 = Utf8               java/lang/String\n+  #29 = NameAndType        #30:#31        // equals:(Ljava/lang/Object;)Z\n+  #30 = Utf8               equals\n+  #31 = Utf8               (Ljava/lang/Object;)Z\n+  #32 = Fieldref           #17.#33        // java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n+  #33 = NameAndType        #34:#21        // LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n+  #34 = Utf8               LITTLE_ENDIAN\n+  #35 = Class              #36            // java/lang/IllegalArgumentException\n+  #36 = Utf8               java/lang/IllegalArgumentException\n+  #37 = Class              #38            // java/lang/StringBuilder\n+  #38 = Utf8               java/lang/StringBuilder\n+  #39 = String             #40            // Unsupported byte order setting:\n+  #40 = Utf8               Unsupported byte order setting:\n+  #41 = Methodref          #37.#42        // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #42 = NameAndType        #5:#43         // \"<init>\":(Ljava/lang/String;)V\n+  #43 = Utf8               (Ljava/lang/String;)V\n+  #44 = Methodref          #37.#45        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #45 = NameAndType        #46:#47        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #46 = Utf8               append\n+  #47 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #48 = String             #49            // , expected one of\n+  #49 = Utf8               , expected one of\n+  #50 = Methodref          #37.#51        // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #51 = NameAndType        #46:#52        // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #52 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #53 = String             #54            // ,\n+  #54 = Utf8               ,\n+  #55 = Methodref          #37.#23        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #56 = Methodref          #35.#42        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #57 = Utf8               value\n+  #58 = Utf8               Ljava/lang/String;\n+  #59 = Utf8               StackMapTable\n+  #60 = Utf8               SourceFile\n+  #61 = Utf8               ByteOrderParser.java\n {\n   private org.apache.commons.io.ByteOrderParser();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #8                  // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 32: 0\n         line 33: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/ByteOrderParser;\n \n   public static java.nio.ByteOrder parseByteOrder(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/nio/ByteOrder;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n-      stack=4, locals=1, args_size=1\n-         0: getstatic     #2                  // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;\n-         3: invokevirtual #3                  // Method java/nio/ByteOrder.toString:()Ljava/lang/String;\n+      stack=5, locals=1, args_size=1\n+         0: getstatic     #16                 // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;\n+         3: invokevirtual #22                 // Method java/nio/ByteOrder.toString:()Ljava/lang/String;\n          6: aload_0\n-         7: invokevirtual #4                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+         7: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         10: ifeq          17\n-        13: getstatic     #2                  // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;\n+        13: getstatic     #16                 // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;\n         16: areturn\n-        17: getstatic     #5                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n-        20: invokevirtual #3                  // Method java/nio/ByteOrder.toString:()Ljava/lang/String;\n+        17: getstatic     #32                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n+        20: invokevirtual #22                 // Method java/nio/ByteOrder.toString:()Ljava/lang/String;\n         23: aload_0\n-        24: invokevirtual #4                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        24: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         27: ifeq          34\n-        30: getstatic     #5                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n+        30: getstatic     #32                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n         33: areturn\n-        34: new           #6                  // class java/lang/IllegalArgumentException\n+        34: new           #35                 // class java/lang/IllegalArgumentException\n         37: dup\n-        38: new           #7                  // class java/lang/StringBuilder\n+        38: new           #37                 // class java/lang/StringBuilder\n         41: dup\n-        42: invokespecial #8                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        45: ldc           #9                  // String Unsupported byte order setting:\n-        47: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        50: aload_0\n-        51: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        54: ldc           #11                 // String , expected one of\n-        56: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        59: getstatic     #5                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n-        62: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        65: ldc           #13                 // String ,\n-        67: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        70: getstatic     #2                  // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;\n-        73: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        76: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        79: invokespecial #15                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        82: athrow\n+        42: ldc           #39                 // String Unsupported byte order setting:\n+        44: invokespecial #41                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        47: aload_0\n+        48: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        51: ldc           #48                 // String , expected one of\n+        53: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        56: getstatic     #32                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n+        59: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        62: ldc           #53                 // String ,\n+        64: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        67: getstatic     #16                 // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;\n+        70: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        73: invokevirtual #55                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        76: invokespecial #56                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        79: athrow\n       LineNumberTable:\n         line 56: 0\n         line 57: 13\n         line 59: 17\n         line 60: 30\n         line 62: 34\n+        line 63: 62\n+        line 62: 76\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      83     0 value   Ljava/lang/String;\n+            0      80     0 value   Ljava/lang/String;\n       StackMapTable: number_of_entries = 2\n         frame_type = 17 /* same */\n         frame_type = 16 /* same */\n }\n SourceFile: \"ByteOrderParser.java\"\n"}]}
