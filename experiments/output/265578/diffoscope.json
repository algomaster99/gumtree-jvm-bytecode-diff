{"diffoscope-json-version": 1, "source1": "first/MemorySensitiveClassPathRepository.class", "source2": "second/MemorySensitiveClassPathRepository.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -6,33 +6,33 @@\n import java.lang.ref.SoftReference;\n import java.util.Map;\n \n public class MemorySensitiveClassPathRepository extends AbstractClassPathRepository\n {\n     private final Map<String, SoftReference<JavaClass>> loadedClasses;\n     \n-    public MemorySensitiveClassPathRepository(final ClassPath path) {\n-        super(path);\n+    public MemorySensitiveClassPathRepository(final ClassPath classPath) {\n+        super(classPath);\n         this.loadedClasses = new HashMap<String, SoftReference<JavaClass>>();\n     }\n     \n     public void clear() {\n         this.loadedClasses.clear();\n     }\n     \n-    public JavaClass findClass(final String className) {\n-        final SoftReference<JavaClass> ref = (SoftReference<JavaClass>)this.loadedClasses.get(className);\n-        if (ref == null) {\n+    public JavaClass findClass(final String s) {\n+        final SoftReference softReference = (SoftReference)this.loadedClasses.get(s);\n+        if (softReference == null) {\n             return null;\n         }\n-        return ref.get();\n+        return (JavaClass)softReference.get();\n     }\n     \n-    public void removeClass(final JavaClass clazz) {\n-        this.loadedClasses.remove(clazz.getClassName());\n+    public void removeClass(final JavaClass javaClass) {\n+        this.loadedClasses.remove(javaClass.getClassName());\n     }\n     \n-    public void storeClass(final JavaClass clazz) {\n-        this.loadedClasses.put(clazz.getClassName(), new SoftReference<JavaClass>(clazz));\n-        clazz.setRepository((Repository)this);\n+    public void storeClass(final JavaClass referent) {\n+        this.loadedClasses.put(referent.getClassName(), new SoftReference<JavaClass>(referent));\n+        referent.setRepository((Repository)this);\n     }\n }\n"}]}
