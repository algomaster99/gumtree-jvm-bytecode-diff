{"diffoscope-json-version": 1, "source1": "first/IOUtils.class", "source2": "second/IOUtils.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -7,36 +7,36 @@\n import java.io.Reader;\n \n class IOUtils\n {\n     static final int DEFAULT_BUFFER_SIZE = 4096;\n     private static final int EOF = -1;\n     \n-    static long copy(final Reader input, final Appendable output) throws IOException {\n-        return copy(input, output, CharBuffer.allocate(4096));\n+    static long copy(final Reader reader, final Appendable appendable) throws IOException {\n+        return copy(reader, appendable, CharBuffer.allocate(4096));\n     }\n     \n-    static long copy(final Reader input, final Appendable output, final CharBuffer buffer) throws IOException {\n-        long count = 0L;\n-        int n;\n-        while (-1 != (n = input.read(buffer))) {\n-            buffer.flip();\n-            output.append(buffer, 0, n);\n-            count += n;\n+    static long copy(final Reader reader, final Appendable appendable, final CharBuffer target) throws IOException {\n+        long n = 0L;\n+        int read;\n+        while (-1 != (read = reader.read(target))) {\n+            target.flip();\n+            appendable.append(target, 0, read);\n+            n += read;\n         }\n-        return count;\n+        return n;\n     }\n     \n-    static long copyLarge(final Reader input, final Writer output) throws IOException {\n-        return copyLarge(input, output, new char[4096]);\n+    static long copyLarge(final Reader reader, final Writer writer) throws IOException {\n+        return copyLarge(reader, writer, new char[4096]);\n     }\n     \n-    static long copyLarge(final Reader input, final Writer output, final char[] buffer) throws IOException {\n-        long count = 0L;\n-        int n;\n-        while (-1 != (n = input.read(buffer))) {\n-            output.write(buffer, 0, n);\n-            count += n;\n+    static long copyLarge(final Reader reader, final Writer writer, final char[] cbuf) throws IOException {\n+        long n = 0L;\n+        int read;\n+        while (-1 != (read = reader.read(cbuf))) {\n+            writer.write(cbuf, 0, read);\n+            n += read;\n         }\n-        return count;\n+        return n;\n     }\n }\n"}]}
