{"diffoscope-json-version": 1, "source1": "first/JarArchiveInputStream.class", "source2": "second/JarArchiveInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,26 +1,26 @@\n-  SHA-256 checksum d2956c189767bf83e8e0638a47b854efbde70119545ec6f72eeef0896daca589\n+  SHA-256 checksum bfb883e440fc8086e73e33fc5eb4b7d3ecac09ce8764d11327de4a2667c0fd23\n   Compiled from \"JarArchiveInputStream.java\"\n public class org.apache.commons.compress.archivers.jar.JarArchiveInputStream extends org.apache.commons.compress.archivers.zip.ZipArchiveInputStream\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #8                          // org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n   super_class: #9                         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n   interfaces: 0, fields: 0, methods: 5, attributes: 1\n Constant pool:\n-   #1 = Methodref          #9.#41         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #2 = Methodref          #9.#42         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #3 = Methodref          #8.#43         // org/apache/commons/compress/archivers/jar/JarArchiveInputStream.getNextZipEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-   #4 = Class              #44            // org/apache/commons/compress/archivers/jar/JarArchiveEntry\n-   #5 = Methodref          #4.#45         // org/apache/commons/compress/archivers/jar/JarArchiveEntry.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n-   #6 = Methodref          #8.#46         // org/apache/commons/compress/archivers/jar/JarArchiveInputStream.getNextJarEntry:()Lorg/apache/commons/compress/archivers/jar/JarArchiveEntry;\n-   #7 = Methodref          #9.#47         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches:([BI)Z\n-   #8 = Class              #48            // org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n-   #9 = Class              #49            // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+   #1 = Methodref          #9.#40         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #2 = Methodref          #9.#41         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+   #3 = Methodref          #8.#42         // org/apache/commons/compress/archivers/jar/JarArchiveInputStream.getNextZipEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+   #4 = Class              #43            // org/apache/commons/compress/archivers/jar/JarArchiveEntry\n+   #5 = Methodref          #4.#44         // org/apache/commons/compress/archivers/jar/JarArchiveEntry.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n+   #6 = Methodref          #8.#45         // org/apache/commons/compress/archivers/jar/JarArchiveInputStream.getNextJarEntry:()Lorg/apache/commons/compress/archivers/jar/JarArchiveEntry;\n+   #7 = Methodref          #9.#46         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches:([BI)Z\n+   #8 = Class              #47            // org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n+   #9 = Class              #48            // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n   #10 = Utf8               <init>\n   #11 = Utf8               (Ljava/io/InputStream;)V\n   #12 = Utf8               Code\n   #13 = Utf8               LineNumberTable\n   #14 = Utf8               LocalVariableTable\n   #15 = Utf8               this\n   #16 = Utf8               Lorg/apache/commons/compress/archivers/jar/JarArchiveInputStream;\n@@ -30,42 +30,41 @@\n   #20 = Utf8               encoding\n   #21 = Utf8               Ljava/lang/String;\n   #22 = Utf8               getNextJarEntry\n   #23 = Utf8               ()Lorg/apache/commons/compress/archivers/jar/JarArchiveEntry;\n   #24 = Utf8               entry\n   #25 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n   #26 = Utf8               StackMapTable\n-  #27 = Class              #50            // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #28 = Class              #44            // org/apache/commons/compress/archivers/jar/JarArchiveEntry\n-  #29 = Utf8               Exceptions\n-  #30 = Class              #51            // java/io/IOException\n-  #31 = Utf8               getNextEntry\n-  #32 = Utf8               ()Lorg/apache/commons/compress/archivers/ArchiveEntry;\n-  #33 = Utf8               matches\n-  #34 = Utf8               ([BI)Z\n-  #35 = Utf8               signature\n-  #36 = Utf8               [B\n-  #37 = Utf8               length\n-  #38 = Utf8               I\n-  #39 = Utf8               SourceFile\n-  #40 = Utf8               JarArchiveInputStream.java\n-  #41 = NameAndType        #10:#11        // \"<init>\":(Ljava/io/InputStream;)V\n-  #42 = NameAndType        #10:#19        // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-  #43 = NameAndType        #52:#53        // getNextZipEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #44 = Utf8               org/apache/commons/compress/archivers/jar/JarArchiveEntry\n-  #45 = NameAndType        #10:#54        // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n-  #46 = NameAndType        #22:#23        // getNextJarEntry:()Lorg/apache/commons/compress/archivers/jar/JarArchiveEntry;\n-  #47 = NameAndType        #33:#34        // matches:([BI)Z\n-  #48 = Utf8               org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n-  #49 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n-  #50 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #51 = Utf8               java/io/IOException\n-  #52 = Utf8               getNextZipEntry\n-  #53 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #54 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n+  #27 = Class              #49            // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #28 = Utf8               Exceptions\n+  #29 = Class              #50            // java/io/IOException\n+  #30 = Utf8               getNextEntry\n+  #31 = Utf8               ()Lorg/apache/commons/compress/archivers/ArchiveEntry;\n+  #32 = Utf8               matches\n+  #33 = Utf8               ([BI)Z\n+  #34 = Utf8               signature\n+  #35 = Utf8               [B\n+  #36 = Utf8               length\n+  #37 = Utf8               I\n+  #38 = Utf8               SourceFile\n+  #39 = Utf8               JarArchiveInputStream.java\n+  #40 = NameAndType        #10:#11        // \"<init>\":(Ljava/io/InputStream;)V\n+  #41 = NameAndType        #10:#19        // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #42 = NameAndType        #51:#52        // getNextZipEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #43 = Utf8               org/apache/commons/compress/archivers/jar/JarArchiveEntry\n+  #44 = NameAndType        #10:#53        // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n+  #45 = NameAndType        #22:#23        // getNextJarEntry:()Lorg/apache/commons/compress/archivers/jar/JarArchiveEntry;\n+  #46 = NameAndType        #32:#33        // matches:([BI)Z\n+  #47 = Utf8               org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n+  #48 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+  #49 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #50 = Utf8               java/io/IOException\n+  #51 = Utf8               getNextZipEntry\n+  #52 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #53 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n {\n   public org.apache.commons.compress.archivers.jar.JarArchiveInputStream(java.io.InputStream);\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n"}]}
