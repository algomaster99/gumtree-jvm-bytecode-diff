{"diffoscope-json-version": 1, "source1": "first/FramedLZ4CompressorInputStream.class", "source2": "second/FramedLZ4CompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,104 +1,104 @@\n-  SHA-256 checksum 5a3fd55d47b5e53cf5c4524cb0209be81f3b8b6b3336cebf1510b3656f8848c8\n+  SHA-256 checksum a1adaf1e36a6a953d0d24ff4294e5e26c04e867ca44be92ce90fef0d073dbd63\n   Compiled from \"FramedLZ4CompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #37                         // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n   super_class: #90                        // org/apache/commons/compress/compressors/CompressorInputStream\n   interfaces: 0, fields: 25, methods: 20, attributes: 2\n Constant pool:\n-    #1 = Methodref          #37.#178      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n-    #2 = Methodref          #37.#179      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n-    #3 = Methodref          #90.#180      // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n-    #4 = Fieldref           #37.#181      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.oneByte:[B\n-    #5 = Class              #182          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream$1\n-    #6 = Methodref          #5.#183       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream$1.\"<init>\":(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)V\n-    #7 = Fieldref           #37.#184      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-    #8 = Class              #185          // org/apache/commons/compress/compressors/lz4/XXHash32\n-    #9 = Methodref          #8.#180       // org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n-   #10 = Fieldref           #37.#186      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-   #11 = Fieldref           #37.#187      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-   #12 = Fieldref           #37.#188      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.in:Ljava/io/InputStream;\n-   #13 = Fieldref           #37.#189      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.decompressConcatenated:Z\n-   #14 = Methodref          #37.#190      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.init:(Z)V\n-   #15 = Methodref          #37.#191      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.read:([BII)I\n-   #16 = Fieldref           #37.#192      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.currentBlock:Ljava/io/InputStream;\n-   #17 = Methodref          #193.#194     // java/io/InputStream.close:()V\n-   #18 = Fieldref           #37.#195      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.endReached:Z\n-   #19 = Methodref          #37.#196      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOnce:([BII)I\n-   #20 = Methodref          #37.#197      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.nextBlock:()V\n-   #21 = Fieldref           #37.#198      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockDependency:Z\n-   #22 = Methodref          #37.#199      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.appendToBlockDependencyBuffer:([BII)V\n-   #23 = Fieldref           #37.#200      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentChecksum:Z\n-   #24 = Methodref          #8.#201       // org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n-   #25 = Methodref          #37.#202      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readSignature:(Z)Z\n-   #26 = Methodref          #37.#203      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readFrameDescriptor:()V\n-   #27 = String             #204          // Not a LZ4 frame stream\n-   #28 = String             #205          // LZ4 frame stream followed by garbage\n-   #29 = Methodref          #206.#207     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n-   #30 = Methodref          #37.#208      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(I)V\n-   #31 = Class              #209          // java/io/IOException\n-   #32 = Methodref          #31.#210      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #33 = Methodref          #37.#211      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.skipSkippableFrame:([B)I\n-   #34 = Methodref          #37.#212      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.matches:([BI)Z\n-   #35 = String             #213          // Premature end of stream while reading frame flags\n-   #36 = Methodref          #8.#214       // org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n-   #37 = Class              #215          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-   #38 = Class              #216          // java/lang/StringBuilder\n-   #39 = Methodref          #38.#180      // java/lang/StringBuilder.\"<init>\":()V\n-   #40 = String             #217          // Unsupported version\n-   #41 = Methodref          #38.#218      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #42 = Methodref          #38.#219      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #43 = Methodref          #38.#220      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #44 = Fieldref           #37.#221      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockDependencyBuffer:[B\n-   #45 = Class              #222          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+    #1 = Methodref          #37.#176      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n+    #2 = Methodref          #37.#177      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n+    #3 = Methodref          #90.#178      // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+    #4 = Fieldref           #37.#179      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.oneByte:[B\n+    #5 = Class              #180          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream$1\n+    #6 = Methodref          #5.#181       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream$1.\"<init>\":(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)V\n+    #7 = Fieldref           #37.#182      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+    #8 = Class              #183          // org/apache/commons/compress/compressors/lz4/XXHash32\n+    #9 = Methodref          #8.#178       // org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n+   #10 = Fieldref           #37.#184      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+   #11 = Fieldref           #37.#185      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+   #12 = Fieldref           #37.#186      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.in:Ljava/io/InputStream;\n+   #13 = Fieldref           #37.#187      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.decompressConcatenated:Z\n+   #14 = Methodref          #37.#188      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.init:(Z)V\n+   #15 = Methodref          #37.#189      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.read:([BII)I\n+   #16 = Fieldref           #37.#190      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.currentBlock:Ljava/io/InputStream;\n+   #17 = Methodref          #156.#191     // java/io/InputStream.close:()V\n+   #18 = Fieldref           #37.#192      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.endReached:Z\n+   #19 = Methodref          #37.#193      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOnce:([BII)I\n+   #20 = Methodref          #37.#194      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.nextBlock:()V\n+   #21 = Fieldref           #37.#195      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockDependency:Z\n+   #22 = Methodref          #37.#196      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.appendToBlockDependencyBuffer:([BII)V\n+   #23 = Fieldref           #37.#197      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentChecksum:Z\n+   #24 = Methodref          #8.#198       // org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n+   #25 = Methodref          #37.#199      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readSignature:(Z)Z\n+   #26 = Methodref          #37.#200      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readFrameDescriptor:()V\n+   #27 = String             #201          // Not a LZ4 frame stream\n+   #28 = String             #202          // LZ4 frame stream followed by garbage\n+   #29 = Methodref          #203.#204     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+   #30 = Methodref          #37.#205      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(I)V\n+   #31 = Class              #206          // java/io/IOException\n+   #32 = Methodref          #31.#207      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #33 = Methodref          #37.#208      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.skipSkippableFrame:([B)I\n+   #34 = Methodref          #37.#209      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.matches:([BI)Z\n+   #35 = String             #210          // Premature end of stream while reading frame flags\n+   #36 = Methodref          #8.#211       // org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n+   #37 = Class              #212          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n+   #38 = Class              #213          // java/lang/StringBuilder\n+   #39 = Methodref          #38.#178      // java/lang/StringBuilder.\"<init>\":()V\n+   #40 = String             #214          // Unsupported version\n+   #41 = Methodref          #38.#215      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #42 = Methodref          #38.#216      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #43 = Methodref          #38.#217      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #44 = Fieldref           #37.#218      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockDependencyBuffer:[B\n+   #45 = Class              #219          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n    #46 = Integer            65536\n-   #47 = Fieldref           #37.#223      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockChecksum:Z\n-   #48 = Fieldref           #37.#224      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentSize:Z\n-   #49 = String             #225          // Premature end of stream while reading frame BD byte\n-   #50 = String             #226          // Premature end of stream while reading content size\n-   #51 = String             #227          // Premature end of stream while reading frame header checksum\n-   #52 = Methodref          #8.#228       // org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n+   #47 = Fieldref           #37.#220      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockChecksum:Z\n+   #48 = Fieldref           #37.#221      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentSize:Z\n+   #49 = String             #222          // Premature end of stream while reading frame BD byte\n+   #50 = String             #223          // Premature end of stream while reading content size\n+   #51 = String             #224          // Premature end of stream while reading frame header checksum\n+   #52 = Methodref          #8.#225       // org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n    #53 = Long               255l\n-   #55 = Methodref          #8.#229       // org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n-   #56 = String             #230          // frame header checksum mismatch.\n-   #57 = Methodref          #37.#231      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.maybeFinishCurrentBlock:()V\n-   #58 = Methodref          #232.#233     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+   #55 = Methodref          #8.#226       // org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n+   #56 = String             #227          // frame header checksum mismatch.\n+   #57 = Methodref          #37.#228      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.maybeFinishCurrentBlock:()V\n+   #58 = Methodref          #229.#230     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n    #59 = Long               -2147483648l\n    #61 = Long               2147483647l\n-   #63 = Methodref          #37.#234      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyContentChecksum:()V\n-   #64 = Class              #235          // org/apache/commons/compress/utils/BoundedInputStream\n-   #65 = Methodref          #64.#236      // org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n-   #66 = Class              #237          // org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n-   #67 = Methodref          #66.#238      // org/apache/commons/compress/utils/ChecksumCalculatingInputStream.\"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n-   #68 = Fieldref           #37.#239      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inUncompressed:Z\n-   #69 = Methodref          #45.#240      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #70 = Methodref          #45.#241      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V\n-   #71 = String             #242          // block\n-   #72 = Methodref          #37.#243      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n-   #73 = String             #244          // content\n-   #74 = String             #245          // Premature end of stream while reading\n-   #75 = String             #246          //  checksum\n-   #76 = Methodref          #232.#247     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n-   #77 = String             #248          //  checksum mismatch.\n-   #78 = Methodref          #193.#249     // java/io/InputStream.read:()I\n-   #79 = Methodref          #193.#191     // java/io/InputStream.read:([BII)I\n-   #80 = Methodref          #45.#250      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n-   #81 = Methodref          #37.#251      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(J)V\n-   #82 = Fieldref           #37.#252      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.SKIPPABLE_FRAME_TRAILER:[B\n-   #83 = Methodref          #37.#253      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.isSkippableFrameSignature:([B)Z\n-   #84 = Methodref          #206.#254     // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n-   #85 = String             #255          // Premature end of stream while skipping frame\n-   #86 = Methodref          #256.#257     // java/lang/Math.min:(II)I\n-   #87 = Methodref          #258.#259     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #88 = Fieldref           #37.#260      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.LZ4_SIGNATURE:[B\n-   #89 = Methodref          #261.#262     // java/util/Arrays.equals:([B[B)Z\n-   #90 = Class              #263          // org/apache/commons/compress/compressors/CompressorInputStream\n+   #63 = Methodref          #37.#231      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyContentChecksum:()V\n+   #64 = Class              #232          // org/apache/commons/compress/utils/BoundedInputStream\n+   #65 = Methodref          #64.#233      // org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n+   #66 = Class              #234          // org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n+   #67 = Methodref          #66.#235      // org/apache/commons/compress/utils/ChecksumCalculatingInputStream.\"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+   #68 = Fieldref           #37.#236      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inUncompressed:Z\n+   #69 = Methodref          #45.#237      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #70 = Methodref          #45.#238      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V\n+   #71 = String             #239          // block\n+   #72 = Methodref          #37.#240      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+   #73 = String             #241          // content\n+   #74 = String             #242          // Premature end of stream while reading\n+   #75 = String             #243          //  checksum\n+   #76 = Methodref          #229.#244     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n+   #77 = String             #245          //  checksum mismatch.\n+   #78 = Methodref          #156.#246     // java/io/InputStream.read:()I\n+   #79 = Methodref          #156.#189     // java/io/InputStream.read:([BII)I\n+   #80 = Methodref          #45.#247      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n+   #81 = Methodref          #37.#248      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(J)V\n+   #82 = Fieldref           #37.#249      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.SKIPPABLE_FRAME_TRAILER:[B\n+   #83 = Methodref          #37.#250      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.isSkippableFrameSignature:([B)Z\n+   #84 = Methodref          #203.#251     // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+   #85 = String             #252          // Premature end of stream while skipping frame\n+   #86 = Methodref          #253.#254     // java/lang/Math.min:(II)I\n+   #87 = Methodref          #255.#256     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #88 = Fieldref           #37.#257      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.LZ4_SIGNATURE:[B\n+   #89 = Methodref          #258.#259     // java/util/Arrays.equals:([B[B)Z\n+   #90 = Class              #260          // org/apache/commons/compress/compressors/CompressorInputStream\n    #91 = Utf8               InnerClasses\n    #92 = Utf8               LZ4_SIGNATURE\n    #93 = Utf8               [B\n    #94 = Utf8               SKIPPABLE_FRAME_TRAILER\n    #95 = Utf8               SKIPPABLE_FRAME_PREFIX_BYTE_MASK\n    #96 = Utf8               B\n    #97 = Utf8               ConstantValue\n@@ -118,15 +118,15 @@\n   #111 = Integer            4\n   #112 = Utf8               BLOCK_MAX_SIZE_MASK\n   #113 = Integer            112\n   #114 = Utf8               UNCOMPRESSED_FLAG_MASK\n   #115 = Integer            -2147483648\n   #116 = Utf8               oneByte\n   #117 = Utf8               supplier\n-  #118 = Class              #264          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #118 = Class              #261          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n   #119 = Utf8               ByteSupplier\n   #120 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n   #121 = Utf8               in\n   #122 = Utf8               Ljava/io/InputStream;\n   #123 = Utf8               decompressConcatenated\n   #124 = Utf8               Z\n   #125 = Utf8               expectBlockChecksum\n@@ -152,166 +152,163 @@\n   #145 = Utf8               close\n   #146 = Utf8               ()V\n   #147 = Utf8               ([BII)I\n   #148 = Utf8               init\n   #149 = Utf8               (Z)V\n   #150 = Utf8               readSignature\n   #151 = Utf8               (Z)Z\n-  #152 = Class              #265          // java/lang/String\n+  #152 = Class              #262          // java/lang/String\n   #153 = Class              #93           // \"[B\"\n   #154 = Utf8               readFrameDescriptor\n-  #155 = Class              #215          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-  #156 = Utf8               nextBlock\n-  #157 = Class              #266          // java/io/InputStream\n-  #158 = Class              #222          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-  #159 = Utf8               maybeFinishCurrentBlock\n-  #160 = Utf8               verifyContentChecksum\n-  #161 = Utf8               verifyChecksum\n-  #162 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n-  #163 = Utf8               readOneByte\n-  #164 = Utf8               readOnce\n-  #165 = Utf8               isSkippableFrameSignature\n-  #166 = Utf8               ([B)Z\n-  #167 = Utf8               skipSkippableFrame\n-  #168 = Utf8               ([B)I\n-  #169 = Utf8               appendToBlockDependencyBuffer\n-  #170 = Utf8               ([BII)V\n-  #171 = Utf8               matches\n-  #172 = Utf8               ([BI)Z\n-  #173 = Utf8               access$000\n-  #174 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)I\n-  #175 = Utf8               <clinit>\n-  #176 = Utf8               SourceFile\n-  #177 = Utf8               FramedLZ4CompressorInputStream.java\n-  #178 = NameAndType        #163:#143     // readOneByte:()I\n-  #179 = NameAndType        #136:#141     // \"<init>\":(Ljava/io/InputStream;Z)V\n-  #180 = NameAndType        #136:#146     // \"<init>\":()V\n-  #181 = NameAndType        #116:#93      // oneByte:[B\n-  #182 = Utf8               org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream$1\n-  #183 = NameAndType        #136:#267     // \"<init>\":(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)V\n-  #184 = NameAndType        #117:#120     // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #185 = Utf8               org/apache/commons/compress/compressors/lz4/XXHash32\n-  #186 = NameAndType        #132:#133     // contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-  #187 = NameAndType        #134:#133     // blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-  #188 = NameAndType        #121:#122     // in:Ljava/io/InputStream;\n-  #189 = NameAndType        #123:#124     // decompressConcatenated:Z\n-  #190 = NameAndType        #148:#149     // init:(Z)V\n-  #191 = NameAndType        #142:#147     // read:([BII)I\n-  #192 = NameAndType        #129:#122     // currentBlock:Ljava/io/InputStream;\n-  #193 = Class              #266          // java/io/InputStream\n-  #194 = NameAndType        #145:#146     // close:()V\n-  #195 = NameAndType        #130:#124     // endReached:Z\n-  #196 = NameAndType        #164:#147     // readOnce:([BII)I\n-  #197 = NameAndType        #156:#146     // nextBlock:()V\n-  #198 = NameAndType        #126:#124     // expectBlockDependency:Z\n-  #199 = NameAndType        #169:#170     // appendToBlockDependencyBuffer:([BII)V\n-  #200 = NameAndType        #128:#124     // expectContentChecksum:Z\n-  #201 = NameAndType        #268:#170     // update:([BII)V\n-  #202 = NameAndType        #150:#151     // readSignature:(Z)Z\n-  #203 = NameAndType        #154:#146     // readFrameDescriptor:()V\n-  #204 = Utf8               Not a LZ4 frame stream\n-  #205 = Utf8               LZ4 frame stream followed by garbage\n-  #206 = Class              #269          // org/apache/commons/compress/utils/IOUtils\n-  #207 = NameAndType        #270:#271     // readFully:(Ljava/io/InputStream;[B)I\n-  #208 = NameAndType        #272:#273     // count:(I)V\n-  #209 = Utf8               java/io/IOException\n-  #210 = NameAndType        #136:#274     // \"<init>\":(Ljava/lang/String;)V\n-  #211 = NameAndType        #167:#168     // skipSkippableFrame:([B)I\n-  #212 = NameAndType        #171:#172     // matches:([BI)Z\n-  #213 = Utf8               Premature end of stream while reading frame flags\n-  #214 = NameAndType        #268:#273     // update:(I)V\n-  #215 = Utf8               org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-  #216 = Utf8               java/lang/StringBuilder\n-  #217 = Utf8               Unsupported version\n-  #218 = NameAndType        #275:#276     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #219 = NameAndType        #275:#277     // append:(I)Ljava/lang/StringBuilder;\n-  #220 = NameAndType        #278:#279     // toString:()Ljava/lang/String;\n-  #221 = NameAndType        #135:#93      // blockDependencyBuffer:[B\n-  #222 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-  #223 = NameAndType        #125:#124     // expectBlockChecksum:Z\n-  #224 = NameAndType        #127:#124     // expectContentSize:Z\n-  #225 = Utf8               Premature end of stream while reading frame BD byte\n-  #226 = Utf8               Premature end of stream while reading content size\n-  #227 = Utf8               Premature end of stream while reading frame header checksum\n-  #228 = NameAndType        #280:#281     // getValue:()J\n-  #229 = NameAndType        #282:#146     // reset:()V\n-  #230 = Utf8               frame header checksum mismatch.\n-  #231 = NameAndType        #159:#146     // maybeFinishCurrentBlock:()V\n-  #232 = Class              #283          // org/apache/commons/compress/utils/ByteUtils\n-  #233 = NameAndType        #284:#285     // fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-  #234 = NameAndType        #160:#146     // verifyContentChecksum:()V\n-  #235 = Utf8               org/apache/commons/compress/utils/BoundedInputStream\n-  #236 = NameAndType        #136:#286     // \"<init>\":(Ljava/io/InputStream;J)V\n-  #237 = Utf8               org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n-  #238 = NameAndType        #136:#287     // \"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n-  #239 = NameAndType        #131:#124     // inUncompressed:Z\n-  #240 = NameAndType        #136:#137     // \"<init>\":(Ljava/io/InputStream;)V\n-  #241 = NameAndType        #288:#289     // prefill:([B)V\n-  #242 = Utf8               block\n-  #243 = NameAndType        #161:#162     // verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n-  #244 = Utf8               content\n-  #245 = Utf8               Premature end of stream while reading\n-  #246 = Utf8                checksum\n-  #247 = NameAndType        #284:#290     // fromLittleEndian:([B)J\n-  #248 = Utf8                checksum mismatch.\n-  #249 = NameAndType        #142:#143     // read:()I\n-  #250 = NameAndType        #291:#281     // getBytesRead:()J\n-  #251 = NameAndType        #272:#292     // count:(J)V\n-  #252 = NameAndType        #94:#93       // SKIPPABLE_FRAME_TRAILER:[B\n-  #253 = NameAndType        #165:#166     // isSkippableFrameSignature:([B)Z\n-  #254 = NameAndType        #293:#294     // skip:(Ljava/io/InputStream;J)J\n-  #255 = Utf8               Premature end of stream while skipping frame\n-  #256 = Class              #295          // java/lang/Math\n-  #257 = NameAndType        #296:#297     // min:(II)I\n-  #258 = Class              #298          // java/lang/System\n-  #259 = NameAndType        #299:#300     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #260 = NameAndType        #92:#93       // LZ4_SIGNATURE:[B\n-  #261 = Class              #301          // java/util/Arrays\n-  #262 = NameAndType        #302:#303     // equals:([B[B)Z\n-  #263 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n-  #264 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-  #265 = Utf8               java/lang/String\n-  #266 = Utf8               java/io/InputStream\n-  #267 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)V\n-  #268 = Utf8               update\n-  #269 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #270 = Utf8               readFully\n-  #271 = Utf8               (Ljava/io/InputStream;[B)I\n-  #272 = Utf8               count\n-  #273 = Utf8               (I)V\n-  #274 = Utf8               (Ljava/lang/String;)V\n-  #275 = Utf8               append\n-  #276 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #277 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #278 = Utf8               toString\n-  #279 = Utf8               ()Ljava/lang/String;\n-  #280 = Utf8               getValue\n-  #281 = Utf8               ()J\n-  #282 = Utf8               reset\n-  #283 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #284 = Utf8               fromLittleEndian\n-  #285 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-  #286 = Utf8               (Ljava/io/InputStream;J)V\n-  #287 = Utf8               (Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n-  #288 = Utf8               prefill\n-  #289 = Utf8               ([B)V\n-  #290 = Utf8               ([B)J\n-  #291 = Utf8               getBytesRead\n-  #292 = Utf8               (J)V\n-  #293 = Utf8               skip\n-  #294 = Utf8               (Ljava/io/InputStream;J)J\n-  #295 = Utf8               java/lang/Math\n-  #296 = Utf8               min\n-  #297 = Utf8               (II)I\n-  #298 = Utf8               java/lang/System\n-  #299 = Utf8               arraycopy\n-  #300 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #301 = Utf8               java/util/Arrays\n-  #302 = Utf8               equals\n-  #303 = Utf8               ([B[B)Z\n+  #155 = Utf8               nextBlock\n+  #156 = Class              #263          // java/io/InputStream\n+  #157 = Utf8               maybeFinishCurrentBlock\n+  #158 = Utf8               verifyContentChecksum\n+  #159 = Utf8               verifyChecksum\n+  #160 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+  #161 = Utf8               readOneByte\n+  #162 = Utf8               readOnce\n+  #163 = Utf8               isSkippableFrameSignature\n+  #164 = Utf8               ([B)Z\n+  #165 = Utf8               skipSkippableFrame\n+  #166 = Utf8               ([B)I\n+  #167 = Utf8               appendToBlockDependencyBuffer\n+  #168 = Utf8               ([BII)V\n+  #169 = Utf8               matches\n+  #170 = Utf8               ([BI)Z\n+  #171 = Utf8               access$000\n+  #172 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)I\n+  #173 = Utf8               <clinit>\n+  #174 = Utf8               SourceFile\n+  #175 = Utf8               FramedLZ4CompressorInputStream.java\n+  #176 = NameAndType        #161:#143     // readOneByte:()I\n+  #177 = NameAndType        #136:#141     // \"<init>\":(Ljava/io/InputStream;Z)V\n+  #178 = NameAndType        #136:#146     // \"<init>\":()V\n+  #179 = NameAndType        #116:#93      // oneByte:[B\n+  #180 = Utf8               org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream$1\n+  #181 = NameAndType        #136:#264     // \"<init>\":(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)V\n+  #182 = NameAndType        #117:#120     // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+  #183 = Utf8               org/apache/commons/compress/compressors/lz4/XXHash32\n+  #184 = NameAndType        #132:#133     // contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+  #185 = NameAndType        #134:#133     // blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+  #186 = NameAndType        #121:#122     // in:Ljava/io/InputStream;\n+  #187 = NameAndType        #123:#124     // decompressConcatenated:Z\n+  #188 = NameAndType        #148:#149     // init:(Z)V\n+  #189 = NameAndType        #142:#147     // read:([BII)I\n+  #190 = NameAndType        #129:#122     // currentBlock:Ljava/io/InputStream;\n+  #191 = NameAndType        #145:#146     // close:()V\n+  #192 = NameAndType        #130:#124     // endReached:Z\n+  #193 = NameAndType        #162:#147     // readOnce:([BII)I\n+  #194 = NameAndType        #155:#146     // nextBlock:()V\n+  #195 = NameAndType        #126:#124     // expectBlockDependency:Z\n+  #196 = NameAndType        #167:#168     // appendToBlockDependencyBuffer:([BII)V\n+  #197 = NameAndType        #128:#124     // expectContentChecksum:Z\n+  #198 = NameAndType        #265:#168     // update:([BII)V\n+  #199 = NameAndType        #150:#151     // readSignature:(Z)Z\n+  #200 = NameAndType        #154:#146     // readFrameDescriptor:()V\n+  #201 = Utf8               Not a LZ4 frame stream\n+  #202 = Utf8               LZ4 frame stream followed by garbage\n+  #203 = Class              #266          // org/apache/commons/compress/utils/IOUtils\n+  #204 = NameAndType        #267:#268     // readFully:(Ljava/io/InputStream;[B)I\n+  #205 = NameAndType        #269:#270     // count:(I)V\n+  #206 = Utf8               java/io/IOException\n+  #207 = NameAndType        #136:#271     // \"<init>\":(Ljava/lang/String;)V\n+  #208 = NameAndType        #165:#166     // skipSkippableFrame:([B)I\n+  #209 = NameAndType        #169:#170     // matches:([BI)Z\n+  #210 = Utf8               Premature end of stream while reading frame flags\n+  #211 = NameAndType        #265:#270     // update:(I)V\n+  #212 = Utf8               org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n+  #213 = Utf8               java/lang/StringBuilder\n+  #214 = Utf8               Unsupported version\n+  #215 = NameAndType        #272:#273     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #216 = NameAndType        #272:#274     // append:(I)Ljava/lang/StringBuilder;\n+  #217 = NameAndType        #275:#276     // toString:()Ljava/lang/String;\n+  #218 = NameAndType        #135:#93      // blockDependencyBuffer:[B\n+  #219 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+  #220 = NameAndType        #125:#124     // expectBlockChecksum:Z\n+  #221 = NameAndType        #127:#124     // expectContentSize:Z\n+  #222 = Utf8               Premature end of stream while reading frame BD byte\n+  #223 = Utf8               Premature end of stream while reading content size\n+  #224 = Utf8               Premature end of stream while reading frame header checksum\n+  #225 = NameAndType        #277:#278     // getValue:()J\n+  #226 = NameAndType        #279:#146     // reset:()V\n+  #227 = Utf8               frame header checksum mismatch.\n+  #228 = NameAndType        #157:#146     // maybeFinishCurrentBlock:()V\n+  #229 = Class              #280          // org/apache/commons/compress/utils/ByteUtils\n+  #230 = NameAndType        #281:#282     // fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #231 = NameAndType        #158:#146     // verifyContentChecksum:()V\n+  #232 = Utf8               org/apache/commons/compress/utils/BoundedInputStream\n+  #233 = NameAndType        #136:#283     // \"<init>\":(Ljava/io/InputStream;J)V\n+  #234 = Utf8               org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n+  #235 = NameAndType        #136:#284     // \"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+  #236 = NameAndType        #131:#124     // inUncompressed:Z\n+  #237 = NameAndType        #136:#137     // \"<init>\":(Ljava/io/InputStream;)V\n+  #238 = NameAndType        #285:#286     // prefill:([B)V\n+  #239 = Utf8               block\n+  #240 = NameAndType        #159:#160     // verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+  #241 = Utf8               content\n+  #242 = Utf8               Premature end of stream while reading\n+  #243 = Utf8                checksum\n+  #244 = NameAndType        #281:#287     // fromLittleEndian:([B)J\n+  #245 = Utf8                checksum mismatch.\n+  #246 = NameAndType        #142:#143     // read:()I\n+  #247 = NameAndType        #288:#278     // getBytesRead:()J\n+  #248 = NameAndType        #269:#289     // count:(J)V\n+  #249 = NameAndType        #94:#93       // SKIPPABLE_FRAME_TRAILER:[B\n+  #250 = NameAndType        #163:#164     // isSkippableFrameSignature:([B)Z\n+  #251 = NameAndType        #290:#291     // skip:(Ljava/io/InputStream;J)J\n+  #252 = Utf8               Premature end of stream while skipping frame\n+  #253 = Class              #292          // java/lang/Math\n+  #254 = NameAndType        #293:#294     // min:(II)I\n+  #255 = Class              #295          // java/lang/System\n+  #256 = NameAndType        #296:#297     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #257 = NameAndType        #92:#93       // LZ4_SIGNATURE:[B\n+  #258 = Class              #298          // java/util/Arrays\n+  #259 = NameAndType        #299:#300     // equals:([B[B)Z\n+  #260 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n+  #261 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #262 = Utf8               java/lang/String\n+  #263 = Utf8               java/io/InputStream\n+  #264 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)V\n+  #265 = Utf8               update\n+  #266 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #267 = Utf8               readFully\n+  #268 = Utf8               (Ljava/io/InputStream;[B)I\n+  #269 = Utf8               count\n+  #270 = Utf8               (I)V\n+  #271 = Utf8               (Ljava/lang/String;)V\n+  #272 = Utf8               append\n+  #273 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #274 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #275 = Utf8               toString\n+  #276 = Utf8               ()Ljava/lang/String;\n+  #277 = Utf8               getValue\n+  #278 = Utf8               ()J\n+  #279 = Utf8               reset\n+  #280 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #281 = Utf8               fromLittleEndian\n+  #282 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #283 = Utf8               (Ljava/io/InputStream;J)V\n+  #284 = Utf8               (Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+  #285 = Utf8               prefill\n+  #286 = Utf8               ([B)V\n+  #287 = Utf8               ([B)J\n+  #288 = Utf8               getBytesRead\n+  #289 = Utf8               (J)V\n+  #290 = Utf8               skip\n+  #291 = Utf8               (Ljava/io/InputStream;J)J\n+  #292 = Utf8               java/lang/Math\n+  #293 = Utf8               min\n+  #294 = Utf8               (II)I\n+  #295 = Utf8               java/lang/System\n+  #296 = Utf8               arraycopy\n+  #297 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #298 = Utf8               java/util/Arrays\n+  #299 = Utf8               equals\n+  #300 = Utf8               ([B[B)Z\n {\n   static final byte[] LZ4_SIGNATURE;\n     descriptor: [B\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n \n   private static final byte[] SKIPPABLE_FRAME_TRAILER;\n     descriptor: [B\n@@ -1631,8 +1628,8 @@\n       LineNumberTable:\n         line 43: 0\n         line 46: 25\n }\n SourceFile: \"FramedLZ4CompressorInputStream.java\"\n InnerClasses:\n   #5;                                     // class org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream$1\n-  public static #119= #118 of #232;       // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n+  public static #119= #118 of #229;       // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n"}]}
