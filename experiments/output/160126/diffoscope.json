{"diffoscope-json-version": 1, "source1": "first/IOConsumer.class", "source2": "second/IOConsumer.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,8 +1,8 @@\n-  SHA-256 checksum 90f5dfcb646d8aee9d1961e2f99ef2d342b7c207ae5280695b93c49704d148cf\n+  SHA-256 checksum c82fee32ad2f7e9418f8b211ab7f30b61a37e39bcb959a4df48df9189bdd713b\n   Compiled from \"IOConsumer.java\"\n public interface org.apache.commons.io.function.IOConsumer<T extends java.lang.Object>\n   minor version: 0\n   major version: 52\n   flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT\n   this_class: #1                          // org/apache/commons/io/function/IOConsumer\n   super_class: #3                         // java/lang/Object\n@@ -25,17 +25,17 @@\n   #15 = Utf8               Code\n   #16 = Methodref          #17.#19        // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n   #17 = Class              #18            // java/util/Objects\n   #18 = Utf8               java/util/Objects\n   #19 = NameAndType        #20:#21        // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n   #20 = Utf8               requireNonNull\n   #21 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #22 = NameAndType        #5:#23         // accept:(Lorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n-  #23 = Utf8               (Lorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n-  #24 = InvokeDynamic      #0:#22         // #0:accept:(Lorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n+  #22 = InvokeDynamic      #0:#23         // #0:accept:(Lorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n+  #23 = NameAndType        #5:#24         // accept:(Lorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n+  #24 = Utf8               (Lorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n   #25 = Utf8               LineNumberTable\n   #26 = Utf8               LocalVariableTable\n   #27 = Utf8               this\n   #28 = Utf8               Lorg/apache/commons/io/function/IOConsumer;\n   #29 = Utf8               after\n   #30 = Utf8               LocalVariableTypeTable\n   #31 = Utf8               Lorg/apache/commons/io/function/IOConsumer<TT;>;\n@@ -86,15 +86,15 @@\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: invokestatic  #16                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          4: pop\n          5: aload_0\n          6: aload_1\n-         7: invokedynamic #24,  0             // InvokeDynamic #0:accept:(Lorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n+         7: invokedynamic #22,  0             // InvokeDynamic #0:accept:(Lorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n         12: areturn\n       LineNumberTable:\n         line 52: 0\n         line 53: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/io/function/IOConsumer;\n"}]}
