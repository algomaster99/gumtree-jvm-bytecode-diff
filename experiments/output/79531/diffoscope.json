{"diffoscope-json-version": 1, "source1": "first/RExecClient.class", "source2": "second/RExecClient.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -19,20 +19,41 @@\n     \n     public RExecClient() {\n         this._errorStream_ = null;\n         this.setDefaultPort(512);\n     }\n     \n     InputStream createErrorStream() throws IOException {\n+        Throwable t = null;\n         Socket socket;\n-        try (final ServerSocket server = this._serverSocketFactory_.createServerSocket(0, 1, this.getLocalAddress())) {\n-            this._output_.write(Integer.toString(server.getLocalPort()).getBytes(StandardCharsets.UTF_8));\n-            this._output_.write(0);\n-            this._output_.flush();\n-            socket = server.accept();\n+        try {\n+            final ServerSocket server = this._serverSocketFactory_.createServerSocket(0, 1, this.getLocalAddress());\n+            try {\n+                this._output_.write(Integer.toString(server.getLocalPort()).getBytes(StandardCharsets.UTF_8));\n+                this._output_.write(0);\n+                this._output_.flush();\n+                socket = server.accept();\n+            }\n+            finally {\n+                if (server != null) {\n+                    server.close();\n+                }\n+            }\n+        }\n+        finally {\n+            if (t == null) {\n+                final Throwable exception;\n+                t = exception;\n+            }\n+            else {\n+                final Throwable exception;\n+                if (t != exception) {\n+                    t.addSuppressed(exception);\n+                }\n+            }\n         }\n         if (this.remoteVerificationEnabled && !this.verifyRemote(socket)) {\n             socket.close();\n             throw new IOException(\"Security violation: unexpected connection attempt by \" + socket.getInetAddress().getHostAddress());\n         }\n         return (InputStream)new SocketInputStream(socket, socket.getInputStream());\n     }\n"}]}
