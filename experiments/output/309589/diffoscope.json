{"diffoscope-json-version": 1, "source1": "first/MurmurHash3.class", "source2": "second/MurmurHash3.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,185 +1,185 @@\n-  SHA-256 checksum e18d16c1a8ca9715cecc7a889fa7097e0b75eac44c96ed8b0dbe2082c82afebe\n+  SHA-256 checksum 6e8cdf3cdd14d06845d9f7c24c701e10692937067327a301aa20bd6c39d61c3f\n   Compiled from \"MurmurHash3.java\"\n public final class org.apache.commons.codec.digest.MurmurHash3\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #5                          // org/apache/commons/codec/digest/MurmurHash3\n-  super_class: #58                        // java/lang/Object\n+  this_class: #2                          // org/apache/commons/codec/digest/MurmurHash3\n+  super_class: #16                        // java/lang/Object\n   interfaces: 0, fields: 16, methods: 32, attributes: 2\n Constant pool:\n-    #1 = Methodref          #5.#140       // org/apache/commons/codec/digest/MurmurHash3.fmix32:(I)I\n-    #2 = Methodref          #5.#141       // org/apache/commons/codec/digest/MurmurHash3.getLittleEndianInt:([BI)I\n-    #3 = Methodref          #5.#142       // org/apache/commons/codec/digest/MurmurHash3.mix32:(II)I\n-    #4 = Methodref          #58.#143      // java/lang/Object.\"<init>\":()V\n-    #5 = Class              #144          // org/apache/commons/codec/digest/MurmurHash3\n-    #6 = Integer            104729\n-    #7 = Methodref          #5.#145       // org/apache/commons/codec/digest/MurmurHash3.hash32:(JJI)I\n-    #8 = Methodref          #9.#146       // java/lang/Long.reverseBytes:(J)J\n-    #9 = Class              #147          // java/lang/Long\n-   #10 = Methodref          #5.#148       // org/apache/commons/codec/digest/MurmurHash3.hash32:(JI)I\n-   #11 = Methodref          #5.#149       // org/apache/commons/codec/digest/MurmurHash3.hash32:([BIII)I\n-   #12 = Methodref          #150.#151     // org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n-   #13 = Methodref          #5.#152       // org/apache/commons/codec/digest/MurmurHash3.hash32:([BII)I\n-   #14 = Integer            -862048943\n-   #15 = Methodref          #35.#153      // java/lang/Integer.rotateLeft:(II)I\n-   #16 = Integer            461845907\n-   #17 = Methodref          #5.#154       // org/apache/commons/codec/digest/MurmurHash3.hash32x86:([BIII)I\n-   #18 = Long               104729l\n-   #20 = Long               -8663945395140668459l\n-   #22 = Methodref          #9.#155       // java/lang/Long.rotateLeft:(JI)J\n-   #23 = Long               5545529020109919103l\n-   #25 = Long               5l\n-   #27 = Long               1390208809l\n-   #29 = Long               8l\n-   #31 = Methodref          #5.#156       // org/apache/commons/codec/digest/MurmurHash3.fmix64:(J)J\n-   #32 = Methodref          #35.#157      // java/lang/Integer.reverseBytes:(I)I\n-   #33 = Long               4294967295l\n-   #35 = Class              #158          // java/lang/Integer\n-   #36 = Long               4l\n-   #38 = Long               255l\n-   #40 = Integer            65280\n-   #41 = Class              #159          // java/lang/Short\n-   #42 = Long               2l\n-   #44 = Methodref          #5.#160       // org/apache/commons/codec/digest/MurmurHash3.hash64:([BIII)J\n-   #45 = Methodref          #5.#161       // org/apache/commons/codec/digest/MurmurHash3.getLittleEndianLong:([BI)J\n-   #46 = Methodref          #5.#162       // org/apache/commons/codec/digest/MurmurHash3.hash128:([BIII)[J\n-   #47 = Methodref          #5.#163       // org/apache/commons/codec/digest/MurmurHash3.hash128x64:([BIII)[J\n-   #48 = Methodref          #5.#164       // org/apache/commons/codec/digest/MurmurHash3.hash128x64Internal:([BIIJ)[J\n-   #49 = Long               944331445l\n-   #51 = Integer            -430675100\n-   #52 = Integer            -2048144789\n-   #53 = Integer            -1028477387\n-   #54 = Long               -49064778989728563l\n-   #56 = Long               -4265267296055464877l\n-   #58 = Class              #165          // java/lang/Object\n-   #59 = Class              #166          // org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32\n-   #60 = Utf8               IncrementalHash32\n-   #61 = Utf8               InnerClasses\n-   #62 = Class              #167          // org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32x86\n-   #63 = Utf8               IncrementalHash32x86\n-   #64 = Utf8               NULL_HASHCODE\n-   #65 = Utf8               J\n-   #66 = Utf8               ConstantValue\n-   #67 = Long               2862933555777941757l\n-   #69 = Utf8               Deprecated\n-   #70 = Utf8               RuntimeVisibleAnnotations\n-   #71 = Utf8               Ljava/lang/Deprecated;\n-   #72 = Utf8               DEFAULT_SEED\n-   #73 = Utf8               I\n-   #74 = Utf8               C1_32\n-   #75 = Utf8               C2_32\n-   #76 = Utf8               R1_32\n-   #77 = Integer            15\n-   #78 = Utf8               R2_32\n-   #79 = Integer            13\n-   #80 = Utf8               M_32\n-   #81 = Integer            5\n-   #82 = Utf8               N_32\n-   #83 = Utf8               C1\n-   #84 = Utf8               C2\n-   #85 = Utf8               R1\n-   #86 = Integer            31\n-   #87 = Utf8               R2\n-   #88 = Integer            27\n-   #89 = Utf8               R3\n-   #90 = Integer            33\n-   #91 = Utf8               M\n-   #92 = Utf8               N1\n-   #93 = Integer            1390208809\n-   #94 = Utf8               N2\n-   #95 = Integer            944331445\n-   #96 = Utf8               <init>\n-   #97 = Utf8               ()V\n-   #98 = Utf8               Code\n-   #99 = Utf8               LineNumberTable\n-  #100 = Utf8               hash32\n-  #101 = Utf8               (JJ)I\n-  #102 = Utf8               (JJI)I\n-  #103 = Utf8               (J)I\n-  #104 = Utf8               (JI)I\n-  #105 = Utf8               ([B)I\n-  #106 = Utf8               (Ljava/lang/String;)I\n-  #107 = Utf8               ([BI)I\n-  #108 = Utf8               ([BII)I\n-  #109 = Utf8               ([BIII)I\n-  #110 = Utf8               StackMapTable\n-  #111 = Utf8               hash32x86\n-  #112 = Utf8               hash64\n-  #113 = Utf8               (J)J\n-  #114 = Utf8               (I)J\n-  #115 = Utf8               (S)J\n-  #116 = Utf8               ([B)J\n-  #117 = Utf8               ([BII)J\n-  #118 = Utf8               ([BIII)J\n-  #119 = Utf8               hash128\n-  #120 = Utf8               ([B)[J\n-  #121 = Utf8               hash128x64\n-  #122 = Utf8               (Ljava/lang/String;)[J\n-  #123 = Utf8               ([BIII)[J\n-  #124 = Utf8               hash128x64Internal\n-  #125 = Utf8               ([BIIJ)[J\n-  #126 = Class              #168          // \"[B\"\n-  #127 = Utf8               getLittleEndianLong\n-  #128 = Utf8               ([BI)J\n-  #129 = Utf8               getLittleEndianInt\n-  #130 = Utf8               mix32\n-  #131 = Utf8               (II)I\n-  #132 = Utf8               fmix32\n-  #133 = Utf8               (I)I\n-  #134 = Utf8               fmix64\n-  #135 = Utf8               access$000\n-  #136 = Utf8               access$100\n-  #137 = Utf8               access$200\n-  #138 = Utf8               SourceFile\n-  #139 = Utf8               MurmurHash3.java\n-  #140 = NameAndType        #132:#133     // fmix32:(I)I\n-  #141 = NameAndType        #129:#107     // getLittleEndianInt:([BI)I\n-  #142 = NameAndType        #130:#131     // mix32:(II)I\n-  #143 = NameAndType        #96:#97       // \"<init>\":()V\n-  #144 = Utf8               org/apache/commons/codec/digest/MurmurHash3\n-  #145 = NameAndType        #100:#102     // hash32:(JJI)I\n-  #146 = NameAndType        #169:#113     // reverseBytes:(J)J\n-  #147 = Utf8               java/lang/Long\n-  #148 = NameAndType        #100:#104     // hash32:(JI)I\n-  #149 = NameAndType        #100:#109     // hash32:([BIII)I\n-  #150 = Class              #170          // org/apache/commons/codec/binary/StringUtils\n-  #151 = NameAndType        #171:#172     // getBytesUtf8:(Ljava/lang/String;)[B\n-  #152 = NameAndType        #100:#108     // hash32:([BII)I\n-  #153 = NameAndType        #173:#131     // rotateLeft:(II)I\n-  #154 = NameAndType        #111:#109     // hash32x86:([BIII)I\n-  #155 = NameAndType        #173:#174     // rotateLeft:(JI)J\n-  #156 = NameAndType        #134:#113     // fmix64:(J)J\n-  #157 = NameAndType        #169:#133     // reverseBytes:(I)I\n-  #158 = Utf8               java/lang/Integer\n-  #159 = Utf8               java/lang/Short\n-  #160 = NameAndType        #112:#118     // hash64:([BIII)J\n-  #161 = NameAndType        #127:#128     // getLittleEndianLong:([BI)J\n-  #162 = NameAndType        #119:#123     // hash128:([BIII)[J\n-  #163 = NameAndType        #121:#123     // hash128x64:([BIII)[J\n-  #164 = NameAndType        #124:#125     // hash128x64Internal:([BIIJ)[J\n-  #165 = Utf8               java/lang/Object\n-  #166 = Utf8               org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32\n-  #167 = Utf8               org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32x86\n-  #168 = Utf8               [B\n-  #169 = Utf8               reverseBytes\n-  #170 = Utf8               org/apache/commons/codec/binary/StringUtils\n-  #171 = Utf8               getBytesUtf8\n-  #172 = Utf8               (Ljava/lang/String;)[B\n-  #173 = Utf8               rotateLeft\n-  #174 = Utf8               (JI)J\n+    #1 = Methodref          #2.#3         // org/apache/commons/codec/digest/MurmurHash3.fmix32:(I)I\n+    #2 = Class              #4            // org/apache/commons/codec/digest/MurmurHash3\n+    #3 = NameAndType        #5:#6         // fmix32:(I)I\n+    #4 = Utf8               org/apache/commons/codec/digest/MurmurHash3\n+    #5 = Utf8               fmix32\n+    #6 = Utf8               (I)I\n+    #7 = Methodref          #2.#8         // org/apache/commons/codec/digest/MurmurHash3.getLittleEndianInt:([BI)I\n+    #8 = NameAndType        #9:#10        // getLittleEndianInt:([BI)I\n+    #9 = Utf8               getLittleEndianInt\n+   #10 = Utf8               ([BI)I\n+   #11 = Methodref          #2.#12        // org/apache/commons/codec/digest/MurmurHash3.mix32:(II)I\n+   #12 = NameAndType        #13:#14       // mix32:(II)I\n+   #13 = Utf8               mix32\n+   #14 = Utf8               (II)I\n+   #15 = Methodref          #16.#17       // java/lang/Object.\"<init>\":()V\n+   #16 = Class              #18           // java/lang/Object\n+   #17 = NameAndType        #19:#20       // \"<init>\":()V\n+   #18 = Utf8               java/lang/Object\n+   #19 = Utf8               <init>\n+   #20 = Utf8               ()V\n+   #21 = Integer            104729\n+   #22 = Methodref          #2.#23        // org/apache/commons/codec/digest/MurmurHash3.hash32:(JJI)I\n+   #23 = NameAndType        #24:#25       // hash32:(JJI)I\n+   #24 = Utf8               hash32\n+   #25 = Utf8               (JJI)I\n+   #26 = Methodref          #27.#28       // java/lang/Long.reverseBytes:(J)J\n+   #27 = Class              #29           // java/lang/Long\n+   #28 = NameAndType        #30:#31       // reverseBytes:(J)J\n+   #29 = Utf8               java/lang/Long\n+   #30 = Utf8               reverseBytes\n+   #31 = Utf8               (J)J\n+   #32 = Methodref          #2.#33        // org/apache/commons/codec/digest/MurmurHash3.hash32:(JI)I\n+   #33 = NameAndType        #24:#34       // hash32:(JI)I\n+   #34 = Utf8               (JI)I\n+   #35 = Methodref          #2.#36        // org/apache/commons/codec/digest/MurmurHash3.hash32:([BIII)I\n+   #36 = NameAndType        #24:#37       // hash32:([BIII)I\n+   #37 = Utf8               ([BIII)I\n+   #38 = Methodref          #39.#40       // org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n+   #39 = Class              #41           // org/apache/commons/codec/binary/StringUtils\n+   #40 = NameAndType        #42:#43       // getBytesUtf8:(Ljava/lang/String;)[B\n+   #41 = Utf8               org/apache/commons/codec/binary/StringUtils\n+   #42 = Utf8               getBytesUtf8\n+   #43 = Utf8               (Ljava/lang/String;)[B\n+   #44 = Methodref          #2.#45        // org/apache/commons/codec/digest/MurmurHash3.hash32:([BII)I\n+   #45 = NameAndType        #24:#46       // hash32:([BII)I\n+   #46 = Utf8               ([BII)I\n+   #47 = Integer            -862048943\n+   #48 = Methodref          #49.#50       // java/lang/Integer.rotateLeft:(II)I\n+   #49 = Class              #51           // java/lang/Integer\n+   #50 = NameAndType        #52:#14       // rotateLeft:(II)I\n+   #51 = Utf8               java/lang/Integer\n+   #52 = Utf8               rotateLeft\n+   #53 = Integer            461845907\n+   #54 = Methodref          #2.#55        // org/apache/commons/codec/digest/MurmurHash3.hash32x86:([BIII)I\n+   #55 = NameAndType        #56:#37       // hash32x86:([BIII)I\n+   #56 = Utf8               hash32x86\n+   #57 = Long               104729l\n+   #59 = Long               -8663945395140668459l\n+   #61 = Methodref          #27.#62       // java/lang/Long.rotateLeft:(JI)J\n+   #62 = NameAndType        #52:#63       // rotateLeft:(JI)J\n+   #63 = Utf8               (JI)J\n+   #64 = Long               5545529020109919103l\n+   #66 = Long               5l\n+   #68 = Long               1390208809l\n+   #70 = Long               8l\n+   #72 = Methodref          #2.#73        // org/apache/commons/codec/digest/MurmurHash3.fmix64:(J)J\n+   #73 = NameAndType        #74:#31       // fmix64:(J)J\n+   #74 = Utf8               fmix64\n+   #75 = Methodref          #49.#76       // java/lang/Integer.reverseBytes:(I)I\n+   #76 = NameAndType        #30:#6        // reverseBytes:(I)I\n+   #77 = Long               4294967295l\n+   #79 = Long               4l\n+   #81 = Long               255l\n+   #83 = Integer            65280\n+   #84 = Class              #85           // java/lang/Short\n+   #85 = Utf8               java/lang/Short\n+   #86 = Long               2l\n+   #88 = Methodref          #2.#89        // org/apache/commons/codec/digest/MurmurHash3.hash64:([BIII)J\n+   #89 = NameAndType        #90:#91       // hash64:([BIII)J\n+   #90 = Utf8               hash64\n+   #91 = Utf8               ([BIII)J\n+   #92 = Methodref          #2.#93        // org/apache/commons/codec/digest/MurmurHash3.getLittleEndianLong:([BI)J\n+   #93 = NameAndType        #94:#95       // getLittleEndianLong:([BI)J\n+   #94 = Utf8               getLittleEndianLong\n+   #95 = Utf8               ([BI)J\n+   #96 = Methodref          #2.#97        // org/apache/commons/codec/digest/MurmurHash3.hash128:([BIII)[J\n+   #97 = NameAndType        #98:#99       // hash128:([BIII)[J\n+   #98 = Utf8               hash128\n+   #99 = Utf8               ([BIII)[J\n+  #100 = Methodref          #2.#101       // org/apache/commons/codec/digest/MurmurHash3.hash128x64:([BIII)[J\n+  #101 = NameAndType        #102:#99      // hash128x64:([BIII)[J\n+  #102 = Utf8               hash128x64\n+  #103 = Methodref          #2.#104       // org/apache/commons/codec/digest/MurmurHash3.hash128x64Internal:([BIIJ)[J\n+  #104 = NameAndType        #105:#106     // hash128x64Internal:([BIIJ)[J\n+  #105 = Utf8               hash128x64Internal\n+  #106 = Utf8               ([BIIJ)[J\n+  #107 = Long               944331445l\n+  #109 = Integer            -430675100\n+  #110 = Integer            -2048144789\n+  #111 = Integer            -1028477387\n+  #112 = Long               -49064778989728563l\n+  #114 = Long               -4265267296055464877l\n+  #116 = Utf8               NULL_HASHCODE\n+  #117 = Utf8               J\n+  #118 = Utf8               ConstantValue\n+  #119 = Long               2862933555777941757l\n+  #121 = Utf8               Deprecated\n+  #122 = Utf8               RuntimeVisibleAnnotations\n+  #123 = Utf8               Ljava/lang/Deprecated;\n+  #124 = Utf8               DEFAULT_SEED\n+  #125 = Utf8               I\n+  #126 = Utf8               C1_32\n+  #127 = Utf8               C2_32\n+  #128 = Utf8               R1_32\n+  #129 = Integer            15\n+  #130 = Utf8               R2_32\n+  #131 = Integer            13\n+  #132 = Utf8               M_32\n+  #133 = Integer            5\n+  #134 = Utf8               N_32\n+  #135 = Utf8               C1\n+  #136 = Utf8               C2\n+  #137 = Utf8               R1\n+  #138 = Integer            31\n+  #139 = Utf8               R2\n+  #140 = Integer            27\n+  #141 = Utf8               R3\n+  #142 = Integer            33\n+  #143 = Utf8               M\n+  #144 = Utf8               N1\n+  #145 = Integer            1390208809\n+  #146 = Utf8               N2\n+  #147 = Integer            944331445\n+  #148 = Utf8               Code\n+  #149 = Utf8               LineNumberTable\n+  #150 = Utf8               (JJ)I\n+  #151 = Utf8               (J)I\n+  #152 = Utf8               ([B)I\n+  #153 = Utf8               (Ljava/lang/String;)I\n+  #154 = Utf8               StackMapTable\n+  #155 = Utf8               (I)J\n+  #156 = Utf8               (S)J\n+  #157 = Utf8               ([B)J\n+  #158 = Utf8               ([BII)J\n+  #159 = Utf8               ([B)[J\n+  #160 = Utf8               (Ljava/lang/String;)[J\n+  #161 = Class              #162          // \"[B\"\n+  #162 = Utf8               [B\n+  #163 = Utf8               access$000\n+  #164 = Utf8               access$100\n+  #165 = Utf8               access$200\n+  #166 = Utf8               SourceFile\n+  #167 = Utf8               MurmurHash3.java\n+  #168 = Utf8               InnerClasses\n+  #169 = Class              #170          // org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32\n+  #170 = Utf8               org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32\n+  #171 = Utf8               IncrementalHash32\n+  #172 = Class              #173          // org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32x86\n+  #173 = Utf8               org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32x86\n+  #174 = Utf8               IncrementalHash32x86\n {\n   public static final long NULL_HASHCODE = 2862933555777941757l;\n     descriptor: J\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 2862933555777941757l\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #71()\n+      0: #123()\n         java.lang.Deprecated\n \n   public static final int DEFAULT_SEED = 104729;\n     descriptor: I\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 104729\n \n@@ -255,69 +255,69 @@\n \n   private org.apache.commons.codec.digest.MurmurHash3();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #4                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #15                 // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 93: 0\n         line 94: 4\n \n   public static int hash32(long, long);\n     descriptor: (JJ)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=4, args_size=2\n          0: lload_0\n          1: lload_2\n-         2: ldc           #6                  // int 104729\n-         4: invokestatic  #7                  // Method hash32:(JJI)I\n+         2: ldc           #21                 // int 104729\n+         4: invokestatic  #22                 // Method hash32:(JJI)I\n          7: ireturn\n       LineNumberTable:\n         line 115: 0\n \n   public static int hash32(long, long, int);\n     descriptor: (JJI)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=10, args_size=3\n          0: iload         4\n          2: istore        5\n          4: lload_0\n-         5: invokestatic  #8                  // Method java/lang/Long.reverseBytes:(J)J\n+         5: invokestatic  #26                 // Method java/lang/Long.reverseBytes:(J)J\n          8: lstore        6\n         10: lload_2\n-        11: invokestatic  #8                  // Method java/lang/Long.reverseBytes:(J)J\n+        11: invokestatic  #26                 // Method java/lang/Long.reverseBytes:(J)J\n         14: lstore        8\n         16: lload         6\n         18: l2i\n         19: iload         5\n-        21: invokestatic  #3                  // Method mix32:(II)I\n+        21: invokestatic  #11                 // Method mix32:(II)I\n         24: istore        5\n         26: lload         6\n         28: bipush        32\n         30: lushr\n         31: l2i\n         32: iload         5\n-        34: invokestatic  #3                  // Method mix32:(II)I\n+        34: invokestatic  #11                 // Method mix32:(II)I\n         37: istore        5\n         39: lload         8\n         41: l2i\n         42: iload         5\n-        44: invokestatic  #3                  // Method mix32:(II)I\n+        44: invokestatic  #11                 // Method mix32:(II)I\n         47: istore        5\n         49: lload         8\n         51: bipush        32\n         53: lushr\n         54: l2i\n         55: iload         5\n-        57: invokestatic  #3                  // Method mix32:(II)I\n+        57: invokestatic  #11                 // Method mix32:(II)I\n         60: istore        5\n         62: iload         5\n         64: bipush        16\n         66: ixor\n         67: istore        5\n         69: iload         5\n         71: invokestatic  #1                  // Method fmix32:(I)I\n@@ -335,41 +335,41 @@\n \n   public static int hash32(long);\n     descriptor: (J)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: lload_0\n-         1: ldc           #6                  // int 104729\n-         3: invokestatic  #10                 // Method hash32:(JI)I\n+         1: ldc           #21                 // int 104729\n+         3: invokestatic  #32                 // Method hash32:(JI)I\n          6: ireturn\n       LineNumberTable:\n         line 167: 0\n \n   public static int hash32(long, int);\n     descriptor: (JI)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=6, args_size=2\n          0: iload_2\n          1: istore_3\n          2: lload_0\n-         3: invokestatic  #8                  // Method java/lang/Long.reverseBytes:(J)J\n+         3: invokestatic  #26                 // Method java/lang/Long.reverseBytes:(J)J\n          6: lstore        4\n          8: lload         4\n         10: l2i\n         11: iload_3\n-        12: invokestatic  #3                  // Method mix32:(II)I\n+        12: invokestatic  #11                 // Method mix32:(II)I\n         15: istore_3\n         16: lload         4\n         18: bipush        32\n         20: lushr\n         21: l2i\n         22: iload_3\n-        23: invokestatic  #3                  // Method mix32:(II)I\n+        23: invokestatic  #11                 // Method mix32:(II)I\n         26: istore_3\n         27: iload_3\n         28: bipush        8\n         30: ixor\n         31: istore_3\n         32: iload_3\n         33: invokestatic  #1                  // Method fmix32:(I)I\n@@ -387,80 +387,80 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n          2: aload_0\n          3: arraylength\n-         4: ldc           #6                  // int 104729\n-         6: invokestatic  #11                 // Method hash32:([BIII)I\n+         4: ldc           #21                 // int 104729\n+         6: invokestatic  #35                 // Method hash32:([BIII)I\n          9: ireturn\n       LineNumberTable:\n         line 218: 0\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #71()\n+      0: #123()\n         java.lang.Deprecated\n \n   public static int hash32(java.lang.String);\n     descriptor: (Ljava/lang/String;)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=1\n          0: aload_0\n-         1: invokestatic  #12                 // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n+         1: invokestatic  #38                 // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n          4: astore_1\n          5: aload_1\n          6: iconst_0\n          7: aload_1\n          8: arraylength\n-         9: ldc           #6                  // int 104729\n-        11: invokestatic  #11                 // Method hash32:([BIII)I\n+         9: ldc           #21                 // int 104729\n+        11: invokestatic  #35                 // Method hash32:([BIII)I\n         14: ireturn\n       LineNumberTable:\n         line 248: 0\n         line 249: 5\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #71()\n+      0: #123()\n         java.lang.Deprecated\n \n   public static int hash32(byte[], int);\n     descriptor: ([BI)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: ldc           #6                  // int 104729\n-         4: invokestatic  #13                 // Method hash32:([BII)I\n+         2: ldc           #21                 // int 104729\n+         4: invokestatic  #44                 // Method hash32:([BII)I\n          7: ireturn\n       LineNumberTable:\n         line 274: 0\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #71()\n+      0: #123()\n         java.lang.Deprecated\n \n   public static int hash32(byte[], int, int);\n     descriptor: ([BII)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: iconst_0\n          2: iload_1\n          3: iload_2\n-         4: invokestatic  #11                 // Method hash32:([BIII)I\n+         4: invokestatic  #35                 // Method hash32:([BIII)I\n          7: ireturn\n       LineNumberTable:\n         line 299: 0\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #71()\n+      0: #123()\n         java.lang.Deprecated\n \n   public static int hash32(byte[], int, int, int);\n     descriptor: ([BIII)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=9, args_size=4\n@@ -479,19 +479,19 @@\n         19: iload         6\n         21: iconst_2\n         22: ishl\n         23: iadd\n         24: istore        7\n         26: aload_0\n         27: iload         7\n-        29: invokestatic  #2                  // Method getLittleEndianInt:([BI)I\n+        29: invokestatic  #7                  // Method getLittleEndianInt:([BI)I\n         32: istore        8\n         34: iload         8\n         36: iload         4\n-        38: invokestatic  #3                  // Method mix32:(II)I\n+        38: invokestatic  #11                 // Method mix32:(II)I\n         41: istore        4\n         43: iinc          6, 1\n         46: goto          11\n         49: iload_1\n         50: iload         5\n         52: iconst_2\n         53: ishl\n@@ -533,23 +533,23 @@\n        120: iload         7\n        122: aload_0\n        123: iload         6\n        125: baload\n        126: ixor\n        127: istore        7\n        129: iload         7\n-       131: ldc           #14                 // int -862048943\n+       131: ldc           #47                 // int -862048943\n        133: imul\n        134: istore        7\n        136: iload         7\n        138: bipush        15\n-       140: invokestatic  #15                 // Method java/lang/Integer.rotateLeft:(II)I\n+       140: invokestatic  #48                 // Method java/lang/Integer.rotateLeft:(II)I\n        143: istore        7\n        145: iload         7\n-       147: ldc           #16                 // int 461845907\n+       147: ldc           #53                 // int 461845907\n        149: imul\n        150: istore        7\n        152: iload         4\n        154: iload         7\n        156: ixor\n        157: istore        4\n        159: iload         4\n@@ -589,28 +589,28 @@\n           offset_delta = 42\n           locals = [ int, int ]\n         frame_type = 13 /* same */\n         frame_type = 13 /* same */\n         frame_type = 38 /* same */\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #71()\n+      0: #123()\n         java.lang.Deprecated\n \n   public static int hash32x86(byte[]);\n     descriptor: ([B)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n          2: aload_0\n          3: arraylength\n          4: iconst_0\n-         5: invokestatic  #17                 // Method hash32x86:([BIII)I\n+         5: invokestatic  #54                 // Method hash32x86:([BIII)I\n          8: ireturn\n       LineNumberTable:\n         line 372: 0\n \n   public static int hash32x86(byte[], int, int, int);\n     descriptor: ([BIII)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n@@ -631,19 +631,19 @@\n         19: iload         6\n         21: iconst_2\n         22: ishl\n         23: iadd\n         24: istore        7\n         26: aload_0\n         27: iload         7\n-        29: invokestatic  #2                  // Method getLittleEndianInt:([BI)I\n+        29: invokestatic  #7                  // Method getLittleEndianInt:([BI)I\n         32: istore        8\n         34: iload         8\n         36: iload         4\n-        38: invokestatic  #3                  // Method mix32:(II)I\n+        38: invokestatic  #11                 // Method mix32:(II)I\n         41: istore        4\n         43: iinc          6, 1\n         46: goto          11\n         49: iload_1\n         50: iload         5\n         52: iconst_2\n         53: ishl\n@@ -691,23 +691,23 @@\n        131: iload         6\n        133: baload\n        134: sipush        255\n        137: iand\n        138: ixor\n        139: istore        7\n        141: iload         7\n-       143: ldc           #14                 // int -862048943\n+       143: ldc           #47                 // int -862048943\n        145: imul\n        146: istore        7\n        148: iload         7\n        150: bipush        15\n-       152: invokestatic  #15                 // Method java/lang/Integer.rotateLeft:(II)I\n+       152: invokestatic  #48                 // Method java/lang/Integer.rotateLeft:(II)I\n        155: istore        7\n        157: iload         7\n-       159: ldc           #16                 // int 461845907\n+       159: ldc           #53                 // int 461845907\n        161: imul\n        162: istore        7\n        164: iload         4\n        166: iload         7\n        168: ixor\n        169: istore        4\n        171: iload         4\n@@ -751,49 +751,49 @@\n         frame_type = 42 /* same */\n \n   public static long hash64(long);\n     descriptor: (J)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=6, args_size=1\n-         0: ldc2_w        #18                 // long 104729l\n+         0: ldc2_w        #57                 // long 104729l\n          3: lstore_2\n          4: lload_0\n-         5: invokestatic  #8                  // Method java/lang/Long.reverseBytes:(J)J\n+         5: invokestatic  #26                 // Method java/lang/Long.reverseBytes:(J)J\n          8: lstore        4\n         10: lload         4\n-        12: ldc2_w        #20                 // long -8663945395140668459l\n+        12: ldc2_w        #59                 // long -8663945395140668459l\n         15: lmul\n         16: lstore        4\n         18: lload         4\n         20: bipush        31\n-        22: invokestatic  #22                 // Method java/lang/Long.rotateLeft:(JI)J\n+        22: invokestatic  #61                 // Method java/lang/Long.rotateLeft:(JI)J\n         25: lstore        4\n         27: lload         4\n-        29: ldc2_w        #23                 // long 5545529020109919103l\n+        29: ldc2_w        #64                 // long 5545529020109919103l\n         32: lmul\n         33: lstore        4\n         35: lload_2\n         36: lload         4\n         38: lxor\n         39: lstore_2\n         40: lload_2\n         41: bipush        27\n-        43: invokestatic  #22                 // Method java/lang/Long.rotateLeft:(JI)J\n-        46: ldc2_w        #25                 // long 5l\n+        43: invokestatic  #61                 // Method java/lang/Long.rotateLeft:(JI)J\n+        46: ldc2_w        #66                 // long 5l\n         49: lmul\n-        50: ldc2_w        #27                 // long 1390208809l\n+        50: ldc2_w        #68                 // long 1390208809l\n         53: ladd\n         54: lstore_2\n         55: lload_2\n-        56: ldc2_w        #29                 // long 8l\n+        56: ldc2_w        #70                 // long 8l\n         59: lxor\n         60: lstore_2\n         61: lload_2\n-        62: invokestatic  #31                 // Method fmix64:(J)J\n+        62: invokestatic  #72                 // Method fmix64:(J)J\n         65: lstore_2\n         66: lload_2\n         67: lreturn\n       LineNumberTable:\n         line 452: 0\n         line 453: 4\n         line 455: 10\n@@ -802,52 +802,52 @@\n         line 458: 35\n         line 459: 40\n         line 461: 55\n         line 462: 61\n         line 463: 66\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #71()\n+      0: #123()\n         java.lang.Deprecated\n \n   public static long hash64(int);\n     descriptor: (I)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=5, args_size=1\n          0: iload_0\n-         1: invokestatic  #32                 // Method java/lang/Integer.reverseBytes:(I)I\n+         1: invokestatic  #75                 // Method java/lang/Integer.reverseBytes:(I)I\n          4: i2l\n-         5: ldc2_w        #33                 // long 4294967295l\n+         5: ldc2_w        #77                 // long 4294967295l\n          8: land\n          9: lstore_1\n-        10: ldc2_w        #18                 // long 104729l\n+        10: ldc2_w        #57                 // long 104729l\n         13: lstore_3\n         14: lload_1\n-        15: ldc2_w        #20                 // long -8663945395140668459l\n+        15: ldc2_w        #59                 // long -8663945395140668459l\n         18: lmul\n         19: lstore_1\n         20: lload_1\n         21: bipush        31\n-        23: invokestatic  #22                 // Method java/lang/Long.rotateLeft:(JI)J\n+        23: invokestatic  #61                 // Method java/lang/Long.rotateLeft:(JI)J\n         26: lstore_1\n         27: lload_1\n-        28: ldc2_w        #23                 // long 5545529020109919103l\n+        28: ldc2_w        #64                 // long 5545529020109919103l\n         31: lmul\n         32: lstore_1\n         33: lload_3\n         34: lload_1\n         35: lxor\n         36: lstore_3\n         37: lload_3\n-        38: ldc2_w        #36                 // long 4l\n+        38: ldc2_w        #79                 // long 4l\n         41: lxor\n         42: lstore_3\n         43: lload_3\n-        44: invokestatic  #31                 // Method fmix64:(J)J\n+        44: invokestatic  #72                 // Method fmix64:(J)J\n         47: lstore_3\n         48: lload_3\n         49: lreturn\n       LineNumberTable:\n         line 497: 0\n         line 498: 10\n         line 499: 14\n@@ -855,68 +855,68 @@\n         line 501: 27\n         line 502: 33\n         line 504: 37\n         line 505: 43\n         line 506: 48\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #71()\n+      0: #123()\n         java.lang.Deprecated\n \n   public static long hash64(short);\n     descriptor: (S)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=6, locals=5, args_size=1\n-         0: ldc2_w        #18                 // long 104729l\n+         0: ldc2_w        #57                 // long 104729l\n          3: lstore_1\n          4: lconst_0\n          5: lstore_3\n          6: lload_3\n          7: iload_0\n          8: i2l\n-         9: ldc2_w        #38                 // long 255l\n+         9: ldc2_w        #81                 // long 255l\n         12: land\n         13: bipush        8\n         15: lshl\n         16: lxor\n         17: lstore_3\n         18: lload_3\n         19: iload_0\n-        20: ldc           #40                 // int 65280\n+        20: ldc           #83                 // int 65280\n         22: iand\n         23: bipush        8\n         25: ishr\n         26: i2l\n-        27: ldc2_w        #38                 // long 255l\n+        27: ldc2_w        #81                 // long 255l\n         30: land\n         31: lxor\n         32: lstore_3\n         33: lload_3\n-        34: ldc2_w        #20                 // long -8663945395140668459l\n+        34: ldc2_w        #59                 // long -8663945395140668459l\n         37: lmul\n         38: lstore_3\n         39: lload_3\n         40: bipush        31\n-        42: invokestatic  #22                 // Method java/lang/Long.rotateLeft:(JI)J\n+        42: invokestatic  #61                 // Method java/lang/Long.rotateLeft:(JI)J\n         45: lstore_3\n         46: lload_3\n-        47: ldc2_w        #23                 // long 5545529020109919103l\n+        47: ldc2_w        #64                 // long 5545529020109919103l\n         50: lmul\n         51: lstore_3\n         52: lload_1\n         53: lload_3\n         54: lxor\n         55: lstore_1\n         56: lload_1\n-        57: ldc2_w        #42                 // long 2l\n+        57: ldc2_w        #86                 // long 2l\n         60: lxor\n         61: lstore_1\n         62: lload_1\n-        63: invokestatic  #31                 // Method fmix64:(J)J\n+        63: invokestatic  #72                 // Method fmix64:(J)J\n         66: lstore_1\n         67: lload_1\n         68: lreturn\n       LineNumberTable:\n         line 540: 0\n         line 541: 4\n         line 542: 6\n@@ -926,52 +926,52 @@\n         line 546: 46\n         line 547: 52\n         line 550: 56\n         line 551: 62\n         line 552: 67\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #71()\n+      0: #123()\n         java.lang.Deprecated\n \n   public static long hash64(byte[]);\n     descriptor: ([B)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n          2: aload_0\n          3: arraylength\n-         4: ldc           #6                  // int 104729\n-         6: invokestatic  #44                 // Method hash64:([BIII)J\n+         4: ldc           #21                 // int 104729\n+         6: invokestatic  #88                 // Method hash64:([BIII)J\n          9: lreturn\n       LineNumberTable:\n         line 584: 0\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #71()\n+      0: #123()\n         java.lang.Deprecated\n \n   public static long hash64(byte[], int, int);\n     descriptor: ([BII)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: iload_1\n          2: iload_2\n-         3: ldc           #6                  // int 104729\n-         5: invokestatic  #44                 // Method hash64:([BIII)J\n+         3: ldc           #21                 // int 104729\n+         5: invokestatic  #88                 // Method hash64:([BIII)J\n          8: lreturn\n       LineNumberTable:\n         line 617: 0\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #71()\n+      0: #123()\n         java.lang.Deprecated\n \n   public static long hash64(byte[], int, int, int);\n     descriptor: ([BIII)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=6, locals=11, args_size=4\n@@ -991,38 +991,38 @@\n         20: iload         7\n         22: iconst_3\n         23: ishl\n         24: iadd\n         25: istore        8\n         27: aload_0\n         28: iload         8\n-        30: invokestatic  #45                 // Method getLittleEndianLong:([BI)J\n+        30: invokestatic  #92                 // Method getLittleEndianLong:([BI)J\n         33: lstore        9\n         35: lload         9\n-        37: ldc2_w        #20                 // long -8663945395140668459l\n+        37: ldc2_w        #59                 // long -8663945395140668459l\n         40: lmul\n         41: lstore        9\n         43: lload         9\n         45: bipush        31\n-        47: invokestatic  #22                 // Method java/lang/Long.rotateLeft:(JI)J\n+        47: invokestatic  #61                 // Method java/lang/Long.rotateLeft:(JI)J\n         50: lstore        9\n         52: lload         9\n-        54: ldc2_w        #23                 // long 5545529020109919103l\n+        54: ldc2_w        #64                 // long 5545529020109919103l\n         57: lmul\n         58: lstore        9\n         60: lload         4\n         62: lload         9\n         64: lxor\n         65: lstore        4\n         67: lload         4\n         69: bipush        27\n-        71: invokestatic  #22                 // Method java/lang/Long.rotateLeft:(JI)J\n-        74: ldc2_w        #25                 // long 5l\n+        71: invokestatic  #61                 // Method java/lang/Long.rotateLeft:(JI)J\n+        74: ldc2_w        #66                 // long 5l\n         77: lmul\n-        78: ldc2_w        #27                 // long 1390208809l\n+        78: ldc2_w        #68                 // long 1390208809l\n         81: ladd\n         82: lstore        4\n         84: iinc          7, 1\n         87: goto          12\n         90: lconst_0\n         91: lstore        7\n         93: iload_1\n@@ -1049,117 +1049,117 @@\n        148: lload         7\n        150: aload_0\n        151: iload         9\n        153: bipush        6\n        155: iadd\n        156: baload\n        157: i2l\n-       158: ldc2_w        #38                 // long 255l\n+       158: ldc2_w        #81                 // long 255l\n        161: land\n        162: bipush        48\n        164: lshl\n        165: lxor\n        166: lstore        7\n        168: lload         7\n        170: aload_0\n        171: iload         9\n        173: iconst_5\n        174: iadd\n        175: baload\n        176: i2l\n-       177: ldc2_w        #38                 // long 255l\n+       177: ldc2_w        #81                 // long 255l\n        180: land\n        181: bipush        40\n        183: lshl\n        184: lxor\n        185: lstore        7\n        187: lload         7\n        189: aload_0\n        190: iload         9\n        192: iconst_4\n        193: iadd\n        194: baload\n        195: i2l\n-       196: ldc2_w        #38                 // long 255l\n+       196: ldc2_w        #81                 // long 255l\n        199: land\n        200: bipush        32\n        202: lshl\n        203: lxor\n        204: lstore        7\n        206: lload         7\n        208: aload_0\n        209: iload         9\n        211: iconst_3\n        212: iadd\n        213: baload\n        214: i2l\n-       215: ldc2_w        #38                 // long 255l\n+       215: ldc2_w        #81                 // long 255l\n        218: land\n        219: bipush        24\n        221: lshl\n        222: lxor\n        223: lstore        7\n        225: lload         7\n        227: aload_0\n        228: iload         9\n        230: iconst_2\n        231: iadd\n        232: baload\n        233: i2l\n-       234: ldc2_w        #38                 // long 255l\n+       234: ldc2_w        #81                 // long 255l\n        237: land\n        238: bipush        16\n        240: lshl\n        241: lxor\n        242: lstore        7\n        244: lload         7\n        246: aload_0\n        247: iload         9\n        249: iconst_1\n        250: iadd\n        251: baload\n        252: i2l\n-       253: ldc2_w        #38                 // long 255l\n+       253: ldc2_w        #81                 // long 255l\n        256: land\n        257: bipush        8\n        259: lshl\n        260: lxor\n        261: lstore        7\n        263: lload         7\n        265: aload_0\n        266: iload         9\n        268: baload\n        269: i2l\n-       270: ldc2_w        #38                 // long 255l\n+       270: ldc2_w        #81                 // long 255l\n        273: land\n        274: lxor\n        275: lstore        7\n        277: lload         7\n-       279: ldc2_w        #20                 // long -8663945395140668459l\n+       279: ldc2_w        #59                 // long -8663945395140668459l\n        282: lmul\n        283: lstore        7\n        285: lload         7\n        287: bipush        31\n-       289: invokestatic  #22                 // Method java/lang/Long.rotateLeft:(JI)J\n+       289: invokestatic  #61                 // Method java/lang/Long.rotateLeft:(JI)J\n        292: lstore        7\n        294: lload         7\n-       296: ldc2_w        #23                 // long 5545529020109919103l\n+       296: ldc2_w        #64                 // long 5545529020109919103l\n        299: lmul\n        300: lstore        7\n        302: lload         4\n        304: lload         7\n        306: lxor\n        307: lstore        4\n        309: lload         4\n        311: iload_2\n        312: i2l\n        313: lxor\n        314: lstore        4\n        316: lload         4\n-       318: invokestatic  #31                 // Method fmix64:(J)J\n+       318: invokestatic  #72                 // Method fmix64:(J)J\n        321: lstore        4\n        323: lload         4\n        325: lreturn\n       LineNumberTable:\n         line 653: 0\n         line 654: 4\n         line 657: 9\n@@ -1202,102 +1202,102 @@\n         frame_type = 18 /* same */\n         frame_type = 18 /* same */\n         frame_type = 18 /* same */\n         frame_type = 18 /* same */\n         frame_type = 45 /* same */\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #71()\n+      0: #123()\n         java.lang.Deprecated\n \n   public static long[] hash128(byte[]);\n     descriptor: ([B)[J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n          2: aload_0\n          3: arraylength\n-         4: ldc           #6                  // int 104729\n-         6: invokestatic  #46                 // Method hash128:([BIII)[J\n+         4: ldc           #21                 // int 104729\n+         6: invokestatic  #96                 // Method hash128:([BIII)[J\n          9: areturn\n       LineNumberTable:\n         line 718: 0\n \n   public static long[] hash128x64(byte[]);\n     descriptor: ([B)[J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n          2: aload_0\n          3: arraylength\n          4: iconst_0\n-         5: invokestatic  #47                 // Method hash128x64:([BIII)[J\n+         5: invokestatic  #100                // Method hash128x64:([BIII)[J\n          8: areturn\n       LineNumberTable:\n         line 737: 0\n \n   public static long[] hash128(java.lang.String);\n     descriptor: (Ljava/lang/String;)[J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=1\n          0: aload_0\n-         1: invokestatic  #12                 // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n+         1: invokestatic  #38                 // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n          4: astore_1\n          5: aload_1\n          6: iconst_0\n          7: aload_1\n          8: arraylength\n-         9: ldc           #6                  // int 104729\n-        11: invokestatic  #46                 // Method hash128:([BIII)[J\n+         9: ldc           #21                 // int 104729\n+        11: invokestatic  #96                 // Method hash128:([BIII)[J\n         14: areturn\n       LineNumberTable:\n         line 768: 0\n         line 769: 5\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #71()\n+      0: #123()\n         java.lang.Deprecated\n \n   public static long[] hash128(byte[], int, int, int);\n     descriptor: ([BIII)[J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=4, args_size=4\n          0: aload_0\n          1: iload_1\n          2: iload_2\n          3: iload_3\n          4: i2l\n-         5: invokestatic  #48                 // Method hash128x64Internal:([BIIJ)[J\n+         5: invokestatic  #103                // Method hash128x64Internal:([BIIJ)[J\n          8: areturn\n       LineNumberTable:\n         line 796: 0\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #71()\n+      0: #123()\n         java.lang.Deprecated\n \n   public static long[] hash128x64(byte[], int, int, int);\n     descriptor: ([BIII)[J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=7, locals=4, args_size=4\n          0: aload_0\n          1: iload_1\n          2: iload_2\n          3: iload_3\n          4: i2l\n-         5: ldc2_w        #33                 // long 4294967295l\n+         5: ldc2_w        #77                 // long 4294967295l\n          8: land\n-         9: invokestatic  #48                 // Method hash128x64Internal:([BIIJ)[J\n+         9: invokestatic  #103                // Method hash128x64Internal:([BIIJ)[J\n         12: areturn\n       LineNumberTable:\n         line 814: 0\n \n   private static long[] hash128x64Internal(byte[], int, int, long);\n     descriptor: ([BIIJ)[J\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n@@ -1320,80 +1320,80 @@\n         22: iload         10\n         24: iconst_4\n         25: ishl\n         26: iadd\n         27: istore        11\n         29: aload_0\n         30: iload         11\n-        32: invokestatic  #45                 // Method getLittleEndianLong:([BI)J\n+        32: invokestatic  #92                 // Method getLittleEndianLong:([BI)J\n         35: lstore        12\n         37: aload_0\n         38: iload         11\n         40: bipush        8\n         42: iadd\n-        43: invokestatic  #45                 // Method getLittleEndianLong:([BI)J\n+        43: invokestatic  #92                 // Method getLittleEndianLong:([BI)J\n         46: lstore        14\n         48: lload         12\n-        50: ldc2_w        #20                 // long -8663945395140668459l\n+        50: ldc2_w        #59                 // long -8663945395140668459l\n         53: lmul\n         54: lstore        12\n         56: lload         12\n         58: bipush        31\n-        60: invokestatic  #22                 // Method java/lang/Long.rotateLeft:(JI)J\n+        60: invokestatic  #61                 // Method java/lang/Long.rotateLeft:(JI)J\n         63: lstore        12\n         65: lload         12\n-        67: ldc2_w        #23                 // long 5545529020109919103l\n+        67: ldc2_w        #64                 // long 5545529020109919103l\n         70: lmul\n         71: lstore        12\n         73: lload         5\n         75: lload         12\n         77: lxor\n         78: lstore        5\n         80: lload         5\n         82: bipush        27\n-        84: invokestatic  #22                 // Method java/lang/Long.rotateLeft:(JI)J\n+        84: invokestatic  #61                 // Method java/lang/Long.rotateLeft:(JI)J\n         87: lstore        5\n         89: lload         5\n         91: lload         7\n         93: ladd\n         94: lstore        5\n         96: lload         5\n-        98: ldc2_w        #25                 // long 5l\n+        98: ldc2_w        #66                 // long 5l\n        101: lmul\n-       102: ldc2_w        #27                 // long 1390208809l\n+       102: ldc2_w        #68                 // long 1390208809l\n        105: ladd\n        106: lstore        5\n        108: lload         14\n-       110: ldc2_w        #23                 // long 5545529020109919103l\n+       110: ldc2_w        #64                 // long 5545529020109919103l\n        113: lmul\n        114: lstore        14\n        116: lload         14\n        118: bipush        33\n-       120: invokestatic  #22                 // Method java/lang/Long.rotateLeft:(JI)J\n+       120: invokestatic  #61                 // Method java/lang/Long.rotateLeft:(JI)J\n        123: lstore        14\n        125: lload         14\n-       127: ldc2_w        #20                 // long -8663945395140668459l\n+       127: ldc2_w        #59                 // long -8663945395140668459l\n        130: lmul\n        131: lstore        14\n        133: lload         7\n        135: lload         14\n        137: lxor\n        138: lstore        7\n        140: lload         7\n        142: bipush        31\n-       144: invokestatic  #22                 // Method java/lang/Long.rotateLeft:(JI)J\n+       144: invokestatic  #61                 // Method java/lang/Long.rotateLeft:(JI)J\n        147: lstore        7\n        149: lload         7\n        151: lload         5\n        153: ladd\n        154: lstore        7\n        156: lload         7\n-       158: ldc2_w        #25                 // long 5l\n+       158: ldc2_w        #66                 // long 5l\n        161: lmul\n-       162: ldc2_w        #49                 // long 944331445l\n+       162: ldc2_w        #107                // long 944331445l\n        165: ladd\n        166: lstore        7\n        168: iinc          10, 1\n        171: goto          14\n        174: lconst_0\n        175: lstore        10\n        177: lconst_0\n@@ -1430,80 +1430,80 @@\n        268: lload         12\n        270: aload_0\n        271: iload         14\n        273: bipush        14\n        275: iadd\n        276: baload\n        277: i2l\n-       278: ldc2_w        #38                 // long 255l\n+       278: ldc2_w        #81                 // long 255l\n        281: land\n        282: bipush        48\n        284: lshl\n        285: lxor\n        286: lstore        12\n        288: lload         12\n        290: aload_0\n        291: iload         14\n        293: bipush        13\n        295: iadd\n        296: baload\n        297: i2l\n-       298: ldc2_w        #38                 // long 255l\n+       298: ldc2_w        #81                 // long 255l\n        301: land\n        302: bipush        40\n        304: lshl\n        305: lxor\n        306: lstore        12\n        308: lload         12\n        310: aload_0\n        311: iload         14\n        313: bipush        12\n        315: iadd\n        316: baload\n        317: i2l\n-       318: ldc2_w        #38                 // long 255l\n+       318: ldc2_w        #81                 // long 255l\n        321: land\n        322: bipush        32\n        324: lshl\n        325: lxor\n        326: lstore        12\n        328: lload         12\n        330: aload_0\n        331: iload         14\n        333: bipush        11\n        335: iadd\n        336: baload\n        337: i2l\n-       338: ldc2_w        #38                 // long 255l\n+       338: ldc2_w        #81                 // long 255l\n        341: land\n        342: bipush        24\n        344: lshl\n        345: lxor\n        346: lstore        12\n        348: lload         12\n        350: aload_0\n        351: iload         14\n        353: bipush        10\n        355: iadd\n        356: baload\n        357: i2l\n-       358: ldc2_w        #38                 // long 255l\n+       358: ldc2_w        #81                 // long 255l\n        361: land\n        362: bipush        16\n        364: lshl\n        365: lxor\n        366: lstore        12\n        368: lload         12\n        370: aload_0\n        371: iload         14\n        373: bipush        9\n        375: iadd\n        376: baload\n        377: i2l\n-       378: ldc2_w        #38                 // long 255l\n+       378: ldc2_w        #81                 // long 255l\n        381: land\n        382: bipush        8\n        384: lshl\n        385: lxor\n        386: lstore        12\n        388: lload         12\n        390: aload_0\n@@ -1513,115 +1513,115 @@\n        396: baload\n        397: sipush        255\n        400: iand\n        401: i2l\n        402: lxor\n        403: lstore        12\n        405: lload         12\n-       407: ldc2_w        #23                 // long 5545529020109919103l\n+       407: ldc2_w        #64                 // long 5545529020109919103l\n        410: lmul\n        411: lstore        12\n        413: lload         12\n        415: bipush        33\n-       417: invokestatic  #22                 // Method java/lang/Long.rotateLeft:(JI)J\n+       417: invokestatic  #61                 // Method java/lang/Long.rotateLeft:(JI)J\n        420: lstore        12\n        422: lload         12\n-       424: ldc2_w        #20                 // long -8663945395140668459l\n+       424: ldc2_w        #59                 // long -8663945395140668459l\n        427: lmul\n        428: lstore        12\n        430: lload         7\n        432: lload         12\n        434: lxor\n        435: lstore        7\n        437: lload         10\n        439: aload_0\n        440: iload         14\n        442: bipush        7\n        444: iadd\n        445: baload\n        446: i2l\n-       447: ldc2_w        #38                 // long 255l\n+       447: ldc2_w        #81                 // long 255l\n        450: land\n        451: bipush        56\n        453: lshl\n        454: lxor\n        455: lstore        10\n        457: lload         10\n        459: aload_0\n        460: iload         14\n        462: bipush        6\n        464: iadd\n        465: baload\n        466: i2l\n-       467: ldc2_w        #38                 // long 255l\n+       467: ldc2_w        #81                 // long 255l\n        470: land\n        471: bipush        48\n        473: lshl\n        474: lxor\n        475: lstore        10\n        477: lload         10\n        479: aload_0\n        480: iload         14\n        482: iconst_5\n        483: iadd\n        484: baload\n        485: i2l\n-       486: ldc2_w        #38                 // long 255l\n+       486: ldc2_w        #81                 // long 255l\n        489: land\n        490: bipush        40\n        492: lshl\n        493: lxor\n        494: lstore        10\n        496: lload         10\n        498: aload_0\n        499: iload         14\n        501: iconst_4\n        502: iadd\n        503: baload\n        504: i2l\n-       505: ldc2_w        #38                 // long 255l\n+       505: ldc2_w        #81                 // long 255l\n        508: land\n        509: bipush        32\n        511: lshl\n        512: lxor\n        513: lstore        10\n        515: lload         10\n        517: aload_0\n        518: iload         14\n        520: iconst_3\n        521: iadd\n        522: baload\n        523: i2l\n-       524: ldc2_w        #38                 // long 255l\n+       524: ldc2_w        #81                 // long 255l\n        527: land\n        528: bipush        24\n        530: lshl\n        531: lxor\n        532: lstore        10\n        534: lload         10\n        536: aload_0\n        537: iload         14\n        539: iconst_2\n        540: iadd\n        541: baload\n        542: i2l\n-       543: ldc2_w        #38                 // long 255l\n+       543: ldc2_w        #81                 // long 255l\n        546: land\n        547: bipush        16\n        549: lshl\n        550: lxor\n        551: lstore        10\n        553: lload         10\n        555: aload_0\n        556: iload         14\n        558: iconst_1\n        559: iadd\n        560: baload\n        561: i2l\n-       562: ldc2_w        #38                 // long 255l\n+       562: ldc2_w        #81                 // long 255l\n        565: land\n        566: bipush        8\n        568: lshl\n        569: lxor\n        570: lstore        10\n        572: lload         10\n        574: aload_0\n@@ -1629,23 +1629,23 @@\n        577: baload\n        578: sipush        255\n        581: iand\n        582: i2l\n        583: lxor\n        584: lstore        10\n        586: lload         10\n-       588: ldc2_w        #20                 // long -8663945395140668459l\n+       588: ldc2_w        #59                 // long -8663945395140668459l\n        591: lmul\n        592: lstore        10\n        594: lload         10\n        596: bipush        31\n-       598: invokestatic  #22                 // Method java/lang/Long.rotateLeft:(JI)J\n+       598: invokestatic  #61                 // Method java/lang/Long.rotateLeft:(JI)J\n        601: lstore        10\n        603: lload         10\n-       605: ldc2_w        #23                 // long 5545529020109919103l\n+       605: ldc2_w        #64                 // long 5545529020109919103l\n        608: lmul\n        609: lstore        10\n        611: lload         5\n        613: lload         10\n        615: lxor\n        616: lstore        5\n        618: lload         5\n@@ -1663,18 +1663,18 @@\n        636: ladd\n        637: lstore        5\n        639: lload         7\n        641: lload         5\n        643: ladd\n        644: lstore        7\n        646: lload         5\n-       648: invokestatic  #31                 // Method fmix64:(J)J\n+       648: invokestatic  #72                 // Method fmix64:(J)J\n        651: lstore        5\n        653: lload         7\n-       655: invokestatic  #31                 // Method fmix64:(J)J\n+       655: invokestatic  #72                 // Method fmix64:(J)J\n        658: lstore        7\n        660: lload         5\n        662: lload         7\n        664: ladd\n        665: lstore        5\n        667: lload         7\n        669: lload         5\n@@ -1781,89 +1781,89 @@\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=6, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: baload\n          3: i2l\n-         4: ldc2_w        #38                 // long 255l\n+         4: ldc2_w        #81                 // long 255l\n          7: land\n          8: aload_0\n          9: iload_1\n         10: iconst_1\n         11: iadd\n         12: baload\n         13: i2l\n-        14: ldc2_w        #38                 // long 255l\n+        14: ldc2_w        #81                 // long 255l\n         17: land\n         18: bipush        8\n         20: lshl\n         21: lor\n         22: aload_0\n         23: iload_1\n         24: iconst_2\n         25: iadd\n         26: baload\n         27: i2l\n-        28: ldc2_w        #38                 // long 255l\n+        28: ldc2_w        #81                 // long 255l\n         31: land\n         32: bipush        16\n         34: lshl\n         35: lor\n         36: aload_0\n         37: iload_1\n         38: iconst_3\n         39: iadd\n         40: baload\n         41: i2l\n-        42: ldc2_w        #38                 // long 255l\n+        42: ldc2_w        #81                 // long 255l\n         45: land\n         46: bipush        24\n         48: lshl\n         49: lor\n         50: aload_0\n         51: iload_1\n         52: iconst_4\n         53: iadd\n         54: baload\n         55: i2l\n-        56: ldc2_w        #38                 // long 255l\n+        56: ldc2_w        #81                 // long 255l\n         59: land\n         60: bipush        32\n         62: lshl\n         63: lor\n         64: aload_0\n         65: iload_1\n         66: iconst_5\n         67: iadd\n         68: baload\n         69: i2l\n-        70: ldc2_w        #38                 // long 255l\n+        70: ldc2_w        #81                 // long 255l\n         73: land\n         74: bipush        40\n         76: lshl\n         77: lor\n         78: aload_0\n         79: iload_1\n         80: bipush        6\n         82: iadd\n         83: baload\n         84: i2l\n-        85: ldc2_w        #38                 // long 255l\n+        85: ldc2_w        #81                 // long 255l\n         88: land\n         89: bipush        48\n         91: lshl\n         92: lor\n         93: aload_0\n         94: iload_1\n         95: bipush        7\n         97: iadd\n         98: baload\n         99: i2l\n-       100: ldc2_w        #38                 // long 255l\n+       100: ldc2_w        #81                 // long 255l\n        103: land\n        104: bipush        56\n        106: lshl\n        107: lor\n        108: lreturn\n       LineNumberTable:\n         line 929: 0\n@@ -1914,35 +1914,35 @@\n \n   private static int mix32(int, int);\n     descriptor: (II)I\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: iload_0\n-         1: ldc           #14                 // int -862048943\n+         1: ldc           #47                 // int -862048943\n          3: imul\n          4: istore_0\n          5: iload_0\n          6: bipush        15\n-         8: invokestatic  #15                 // Method java/lang/Integer.rotateLeft:(II)I\n+         8: invokestatic  #48                 // Method java/lang/Integer.rotateLeft:(II)I\n         11: istore_0\n         12: iload_0\n-        13: ldc           #16                 // int 461845907\n+        13: ldc           #53                 // int 461845907\n         15: imul\n         16: istore_0\n         17: iload_1\n         18: iload_0\n         19: ixor\n         20: istore_1\n         21: iload_1\n         22: bipush        13\n-        24: invokestatic  #15                 // Method java/lang/Integer.rotateLeft:(II)I\n+        24: invokestatic  #48                 // Method java/lang/Integer.rotateLeft:(II)I\n         27: iconst_5\n         28: imul\n-        29: ldc           #51                 // int -430675100\n+        29: ldc           #109                // int -430675100\n         31: iadd\n         32: ireturn\n       LineNumberTable:\n         line 961: 0\n         line 962: 5\n         line 963: 12\n         line 964: 17\n@@ -1956,25 +1956,25 @@\n          0: iload_0\n          1: iload_0\n          2: bipush        16\n          4: iushr\n          5: ixor\n          6: istore_0\n          7: iload_0\n-         8: ldc           #52                 // int -2048144789\n+         8: ldc           #110                // int -2048144789\n         10: imul\n         11: istore_0\n         12: iload_0\n         13: iload_0\n         14: bipush        13\n         16: iushr\n         17: ixor\n         18: istore_0\n         19: iload_0\n-        20: ldc           #53                 // int -1028477387\n+        20: ldc           #111                // int -1028477387\n         22: imul\n         23: istore_0\n         24: iload_0\n         25: iload_0\n         26: bipush        16\n         28: iushr\n         29: ixor\n@@ -1997,25 +1997,25 @@\n          0: lload_0\n          1: lload_0\n          2: bipush        33\n          4: lushr\n          5: lxor\n          6: lstore_0\n          7: lload_0\n-         8: ldc2_w        #54                 // long -49064778989728563l\n+         8: ldc2_w        #112                // long -49064778989728563l\n         11: lmul\n         12: lstore_0\n         13: lload_0\n         14: lload_0\n         15: bipush        33\n         17: lushr\n         18: lxor\n         19: lstore_0\n         20: lload_0\n-        21: ldc2_w        #56                 // long -4265267296055464877l\n+        21: ldc2_w        #114                // long -4265267296055464877l\n         24: lmul\n         25: lstore_0\n         26: lload_0\n         27: lload_0\n         28: bipush        33\n         30: lushr\n         31: lxor\n@@ -2033,27 +2033,27 @@\n   static int access$000(int, int);\n     descriptor: (II)I\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: iload_0\n          1: iload_1\n-         2: invokestatic  #3                  // Method mix32:(II)I\n+         2: invokestatic  #11                 // Method mix32:(II)I\n          5: ireturn\n       LineNumberTable:\n         line 58: 0\n \n   static int access$100(byte[], int);\n     descriptor: ([BI)I\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #2                  // Method getLittleEndianInt:([BI)I\n+         2: invokestatic  #7                  // Method getLittleEndianInt:([BI)I\n          5: ireturn\n       LineNumberTable:\n         line 58: 0\n \n   static int access$200(int);\n     descriptor: (I)I\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n@@ -2063,9 +2063,9 @@\n          1: invokestatic  #1                  // Method fmix32:(I)I\n          4: ireturn\n       LineNumberTable:\n         line 58: 0\n }\n SourceFile: \"MurmurHash3.java\"\n InnerClasses:\n-  public static #60= #59 of #5;           // IncrementalHash32=class org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32 of class org/apache/commons/codec/digest/MurmurHash3\n-  public static #63= #62 of #5;           // IncrementalHash32x86=class org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32x86 of class org/apache/commons/codec/digest/MurmurHash3\n+  public static #171= #169 of #2;         // IncrementalHash32=class org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32 of class org/apache/commons/codec/digest/MurmurHash3\n+  public static #174= #172 of #2;         // IncrementalHash32x86=class org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32x86 of class org/apache/commons/codec/digest/MurmurHash3\n"}]}
