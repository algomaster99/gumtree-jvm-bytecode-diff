{"diffoscope-json-version": 1, "source1": "first/InstructionFinder.class", "source2": "second/InstructionFinder.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,32 +1,100 @@\n \n package org.apache.bcel.util;\n \n-import java.util.HashMap;\n import java.util.regex.Matcher;\n import java.util.List;\n import java.util.ArrayList;\n import java.util.regex.Pattern;\n import org.apache.bcel.generic.ClassGenException;\n-import java.util.Iterator;\n import java.util.Locale;\n+import java.util.Iterator;\n import org.apache.bcel.Const;\n+import java.util.HashMap;\n import org.apache.bcel.generic.InstructionHandle;\n import org.apache.bcel.generic.InstructionList;\n import java.util.Map;\n \n public class InstructionFinder\n {\n     private static final int OFFSET = 32767;\n     private static final int NO_OPCODES = 256;\n     private static final Map<String, String> map;\n     private final InstructionList il;\n     private String ilString;\n     private InstructionHandle[] handles;\n     \n+    static {\n+        (map = new HashMap<String, String>()).put(\"arithmeticinstruction\", \"(irem|lrem|iand|ior|ineg|isub|lneg|fneg|fmul|ldiv|fadd|lxor|frem|idiv|land|ixor|ishr|fsub|lshl|fdiv|iadd|lor|dmul|lsub|ishl|imul|lmul|lushr|dneg|iushr|lshr|ddiv|drem|dadd|ladd|dsub)\");\n+        InstructionFinder.map.put(\"invokeinstruction\", \"(invokevirtual|invokeinterface|invokestatic|invokespecial|invokedynamic)\");\n+        InstructionFinder.map.put(\"arrayinstruction\", \"(baload|aastore|saload|caload|fastore|lastore|iaload|castore|iastore|aaload|bastore|sastore|faload|laload|daload|dastore)\");\n+        InstructionFinder.map.put(\"gotoinstruction\", \"(goto|goto_w)\");\n+        InstructionFinder.map.put(\"conversioninstruction\", \"(d2l|l2d|i2s|d2i|l2i|i2b|l2f|d2f|f2i|i2d|i2l|f2d|i2c|f2l|i2f)\");\n+        InstructionFinder.map.put(\"localvariableinstruction\", \"(fstore|iinc|lload|dstore|dload|iload|aload|astore|istore|fload|lstore)\");\n+        InstructionFinder.map.put(\"loadinstruction\", \"(fload|dload|lload|iload|aload)\");\n+        InstructionFinder.map.put(\"fieldinstruction\", \"(getfield|putstatic|getstatic|putfield)\");\n+        InstructionFinder.map.put(\"cpinstruction\", \"(ldc2_w|invokeinterface|invokedynamic|multianewarray|putstatic|instanceof|getstatic|checkcast|getfield|invokespecial|ldc_w|invokestatic|invokevirtual|putfield|ldc|new|anewarray)\");\n+        InstructionFinder.map.put(\"stackinstruction\", \"(dup2|swap|dup2_x2|pop|pop2|dup|dup2_x1|dup_x2|dup_x1)\");\n+        InstructionFinder.map.put(\"branchinstruction\", \"(ifle|if_acmpne|if_icmpeq|if_acmpeq|ifnonnull|goto_w|iflt|ifnull|if_icmpne|tableswitch|if_icmple|ifeq|if_icmplt|jsr_w|if_icmpgt|ifgt|jsr|goto|ifne|ifge|lookupswitch|if_icmpge)\");\n+        InstructionFinder.map.put(\"returninstruction\", \"(lreturn|ireturn|freturn|dreturn|areturn|return)\");\n+        InstructionFinder.map.put(\"storeinstruction\", \"(istore|fstore|dstore|astore|lstore)\");\n+        InstructionFinder.map.put(\"select\", \"(tableswitch|lookupswitch)\");\n+        InstructionFinder.map.put(\"ifinstruction\", \"(ifeq|ifgt|if_icmpne|if_icmpeq|ifge|ifnull|ifne|if_icmple|if_icmpge|if_acmpeq|if_icmplt|if_acmpne|ifnonnull|iflt|if_icmpgt|ifle)\");\n+        InstructionFinder.map.put(\"jsrinstruction\", \"(jsr|jsr_w)\");\n+        InstructionFinder.map.put(\"variablelengthinstruction\", \"(tableswitch|jsr|goto|lookupswitch)\");\n+        InstructionFinder.map.put(\"unconditionalbranch\", \"(goto|jsr|jsr_w|athrow|goto_w)\");\n+        InstructionFinder.map.put(\"constantpushinstruction\", \"(dconst|bipush|sipush|fconst|iconst|lconst)\");\n+        InstructionFinder.map.put(\"typedinstruction\", \"(imul|lsub|aload|fload|lor|new|aaload|fcmpg|iand|iaload|lrem|idiv|d2l|isub|dcmpg|dastore|ret|f2d|f2i|drem|iinc|i2c|checkcast|frem|lreturn|astore|lushr|daload|dneg|fastore|istore|lshl|ldiv|lstore|areturn|ishr|ldc_w|invokeinterface|invokedynamic|aastore|lxor|ishl|l2d|i2f|return|faload|sipush|iushr|caload|instanceof|invokespecial|putfield|fmul|ireturn|laload|d2f|lneg|ixor|i2l|fdiv|lastore|multianewarray|i2b|getstatic|i2d|putstatic|fcmpl|saload|ladd|irem|dload|jsr_w|dconst|dcmpl|fsub|freturn|ldc|aconst_null|castore|lmul|ldc2_w|dadd|iconst|f2l|ddiv|dstore|land|jsr|anewarray|dmul|bipush|dsub|sastore|d2i|i2s|lshr|iadd|l2i|lload|bastore|fstore|fneg|iload|fadd|baload|fconst|ior|ineg|dreturn|l2f|lconst|getfield|invokevirtual|invokestatic|iastore)\");\n+        InstructionFinder.map.put(\"popinstruction\", \"(fstore|dstore|pop|pop2|astore|putstatic|istore|lstore)\");\n+        InstructionFinder.map.put(\"allocationinstruction\", \"(multianewarray|new|anewarray|newarray)\");\n+        InstructionFinder.map.put(\"indexedinstruction\", \"(lload|lstore|fload|ldc2_w|invokeinterface|invokedynamic|multianewarray|astore|dload|putstatic|instanceof|getstatic|checkcast|getfield|invokespecial|dstore|istore|iinc|ldc_w|ret|fstore|invokestatic|iload|putfield|invokevirtual|ldc|new|aload|anewarray)\");\n+        InstructionFinder.map.put(\"pushinstruction\", \"(dup|lload|dup2|bipush|fload|ldc2_w|sipush|lconst|fconst|dload|getstatic|ldc_w|aconst_null|dconst|iload|ldc|iconst|aload)\");\n+        InstructionFinder.map.put(\"stackproducer\", \"(imul|lsub|aload|fload|lor|new|aaload|fcmpg|iand|iaload|lrem|idiv|d2l|isub|dcmpg|dup|f2d|f2i|drem|i2c|checkcast|frem|lushr|daload|dneg|lshl|ldiv|ishr|ldc_w|invokeinterface|invokedynamic|lxor|ishl|l2d|i2f|faload|sipush|iushr|caload|instanceof|invokespecial|fmul|laload|d2f|lneg|ixor|i2l|fdiv|getstatic|i2b|swap|i2d|dup2|fcmpl|saload|ladd|irem|dload|jsr_w|dconst|dcmpl|fsub|ldc|arraylength|aconst_null|tableswitch|lmul|ldc2_w|iconst|dadd|f2l|ddiv|land|jsr|anewarray|dmul|bipush|dsub|d2i|newarray|i2s|lshr|iadd|lload|l2i|fneg|iload|fadd|baload|fconst|lookupswitch|ior|ineg|lconst|l2f|getfield|invokevirtual|invokestatic)\");\n+        InstructionFinder.map.put(\"stackconsumer\", \"(imul|lsub|lor|iflt|fcmpg|if_icmpgt|iand|ifeq|if_icmplt|lrem|ifnonnull|idiv|d2l|isub|dcmpg|dastore|if_icmpeq|f2d|f2i|drem|i2c|checkcast|frem|lreturn|astore|lushr|pop2|monitorexit|dneg|fastore|istore|lshl|ldiv|lstore|areturn|if_icmpge|ishr|monitorenter|invokeinterface|invokedynamic|aastore|lxor|ishl|l2d|i2f|return|iushr|instanceof|invokespecial|fmul|ireturn|d2f|lneg|ixor|pop|i2l|ifnull|fdiv|lastore|i2b|if_acmpeq|ifge|swap|i2d|putstatic|fcmpl|ladd|irem|dcmpl|fsub|freturn|ifgt|castore|lmul|dadd|f2l|ddiv|dstore|land|if_icmpne|if_acmpne|dmul|dsub|sastore|ifle|d2i|i2s|lshr|iadd|l2i|bastore|fstore|fneg|fadd|ior|ineg|ifne|dreturn|l2f|if_icmple|getfield|invokevirtual|invokestatic|iastore)\");\n+        InstructionFinder.map.put(\"exceptionthrower\", \"(irem|lrem|laload|putstatic|baload|dastore|areturn|getstatic|ldiv|anewarray|iastore|castore|idiv|saload|lastore|fastore|putfield|lreturn|caload|getfield|return|aastore|freturn|newarray|instanceof|multianewarray|athrow|faload|iaload|aaload|dreturn|monitorenter|checkcast|bastore|arraylength|new|invokevirtual|sastore|ldc_w|ireturn|invokespecial|monitorexit|invokeinterface|invokedynamic|ldc|invokestatic|daload)\");\n+        InstructionFinder.map.put(\"loadclass\", \"(multianewarray|invokeinterface|invokedynamic|instanceof|invokespecial|putfield|checkcast|putstatic|invokevirtual|new|getstatic|invokestatic|getfield|anewarray)\");\n+        InstructionFinder.map.put(\"instructiontargeter\", \"(ifle|if_acmpne|if_icmpeq|if_acmpeq|ifnonnull|goto_w|iflt|ifnull|if_icmpne|tableswitch|if_icmple|ifeq|if_icmplt|jsr_w|if_icmpgt|ifgt|jsr|goto|ifne|ifge|lookupswitch|if_icmpge)\");\n+        InstructionFinder.map.put(\"if_icmp\", \"(if_icmpne|if_icmpeq|if_icmple|if_icmpge|if_icmplt|if_icmpgt)\");\n+        InstructionFinder.map.put(\"if_acmp\", \"(if_acmpeq|if_acmpne)\");\n+        InstructionFinder.map.put(\"if\", \"(ifeq|ifne|iflt|ifge|ifgt|ifle)\");\n+        InstructionFinder.map.put(\"iconst\", precompile((short)3, (short)8, (short)2));\n+        InstructionFinder.map.put(\"lconst\", new String(new char[] { '(', makeChar((short)9), '|', makeChar((short)10), ')' }));\n+        InstructionFinder.map.put(\"dconst\", new String(new char[] { '(', makeChar((short)14), '|', makeChar((short)15), ')' }));\n+        InstructionFinder.map.put(\"fconst\", new String(new char[] { '(', makeChar((short)11), '|', makeChar((short)12), '|', makeChar((short)13), ')' }));\n+        InstructionFinder.map.put(\"lload\", precompile((short)30, (short)33, (short)22));\n+        InstructionFinder.map.put(\"iload\", precompile((short)26, (short)29, (short)21));\n+        InstructionFinder.map.put(\"dload\", precompile((short)38, (short)41, (short)24));\n+        InstructionFinder.map.put(\"fload\", precompile((short)34, (short)37, (short)23));\n+        InstructionFinder.map.put(\"aload\", precompile((short)42, (short)45, (short)25));\n+        InstructionFinder.map.put(\"lstore\", precompile((short)63, (short)66, (short)55));\n+        InstructionFinder.map.put(\"istore\", precompile((short)59, (short)62, (short)54));\n+        InstructionFinder.map.put(\"dstore\", precompile((short)71, (short)74, (short)57));\n+        InstructionFinder.map.put(\"fstore\", precompile((short)67, (short)70, (short)56));\n+        InstructionFinder.map.put(\"astore\", precompile((short)75, (short)78, (short)58));\n+        for (final Map.Entry<String, String> entry : InstructionFinder.map.entrySet()) {\n+            final String key = (String)entry.getKey();\n+            final String value = (String)entry.getValue();\n+            final char ch = value.charAt(1);\n+            if (ch < '\\u7fff') {\n+                InstructionFinder.map.put(key, compilePattern(value));\n+            }\n+        }\n+        final StringBuilder buf = new StringBuilder(\"(\");\n+        for (short i = 0; i < 256; ++i) {\n+            if (Const.getNoOfOperands((int)i) != -1) {\n+                buf.append(makeChar(i));\n+                if (i < 255) {\n+                    buf.append('|');\n+                }\n+            }\n+        }\n+        buf.append(')');\n+        InstructionFinder.map.put(\"instruction\", buf.toString());\n+    }\n+    \n     public InstructionFinder(final InstructionList il) {\n         this.il = il;\n         this.reread();\n     }\n     \n     public final void reread() {\n         final int size = this.il.getLength();\n@@ -41,15 +109,15 @@\n     private static String mapName(final String pattern) {\n         final String result = (String)InstructionFinder.map.get(pattern);\n         if (result != null) {\n             return result;\n         }\n         for (short i = 0; i < 256; ++i) {\n             if (pattern.equals(Const.getOpcodeName((int)i))) {\n-                return \"\" + makeChar(i);\n+                return new StringBuilder().append(makeChar(i)).toString();\n             }\n         }\n         throw new IllegalArgumentException(\"Instruction unknown: \" + pattern);\n     }\n     \n     private static String compilePattern(final String pattern) {\n         final String lower = pattern.toLowerCase(Locale.ENGLISH);\n@@ -134,76 +202,8 @@\n             buf.append(makeChar(i));\n             buf.append('|');\n         }\n         buf.append(makeChar(extra));\n         buf.append(\")\");\n         return buf.toString();\n     }\n-    \n-    static {\n-        (map = new HashMap<String, String>()).put(\"arithmeticinstruction\", \"(irem|lrem|iand|ior|ineg|isub|lneg|fneg|fmul|ldiv|fadd|lxor|frem|idiv|land|ixor|ishr|fsub|lshl|fdiv|iadd|lor|dmul|lsub|ishl|imul|lmul|lushr|dneg|iushr|lshr|ddiv|drem|dadd|ladd|dsub)\");\n-        InstructionFinder.map.put(\"invokeinstruction\", \"(invokevirtual|invokeinterface|invokestatic|invokespecial|invokedynamic)\");\n-        InstructionFinder.map.put(\"arrayinstruction\", \"(baload|aastore|saload|caload|fastore|lastore|iaload|castore|iastore|aaload|bastore|sastore|faload|laload|daload|dastore)\");\n-        InstructionFinder.map.put(\"gotoinstruction\", \"(goto|goto_w)\");\n-        InstructionFinder.map.put(\"conversioninstruction\", \"(d2l|l2d|i2s|d2i|l2i|i2b|l2f|d2f|f2i|i2d|i2l|f2d|i2c|f2l|i2f)\");\n-        InstructionFinder.map.put(\"localvariableinstruction\", \"(fstore|iinc|lload|dstore|dload|iload|aload|astore|istore|fload|lstore)\");\n-        InstructionFinder.map.put(\"loadinstruction\", \"(fload|dload|lload|iload|aload)\");\n-        InstructionFinder.map.put(\"fieldinstruction\", \"(getfield|putstatic|getstatic|putfield)\");\n-        InstructionFinder.map.put(\"cpinstruction\", \"(ldc2_w|invokeinterface|invokedynamic|multianewarray|putstatic|instanceof|getstatic|checkcast|getfield|invokespecial|ldc_w|invokestatic|invokevirtual|putfield|ldc|new|anewarray)\");\n-        InstructionFinder.map.put(\"stackinstruction\", \"(dup2|swap|dup2_x2|pop|pop2|dup|dup2_x1|dup_x2|dup_x1)\");\n-        InstructionFinder.map.put(\"branchinstruction\", \"(ifle|if_acmpne|if_icmpeq|if_acmpeq|ifnonnull|goto_w|iflt|ifnull|if_icmpne|tableswitch|if_icmple|ifeq|if_icmplt|jsr_w|if_icmpgt|ifgt|jsr|goto|ifne|ifge|lookupswitch|if_icmpge)\");\n-        InstructionFinder.map.put(\"returninstruction\", \"(lreturn|ireturn|freturn|dreturn|areturn|return)\");\n-        InstructionFinder.map.put(\"storeinstruction\", \"(istore|fstore|dstore|astore|lstore)\");\n-        InstructionFinder.map.put(\"select\", \"(tableswitch|lookupswitch)\");\n-        InstructionFinder.map.put(\"ifinstruction\", \"(ifeq|ifgt|if_icmpne|if_icmpeq|ifge|ifnull|ifne|if_icmple|if_icmpge|if_acmpeq|if_icmplt|if_acmpne|ifnonnull|iflt|if_icmpgt|ifle)\");\n-        InstructionFinder.map.put(\"jsrinstruction\", \"(jsr|jsr_w)\");\n-        InstructionFinder.map.put(\"variablelengthinstruction\", \"(tableswitch|jsr|goto|lookupswitch)\");\n-        InstructionFinder.map.put(\"unconditionalbranch\", \"(goto|jsr|jsr_w|athrow|goto_w)\");\n-        InstructionFinder.map.put(\"constantpushinstruction\", \"(dconst|bipush|sipush|fconst|iconst|lconst)\");\n-        InstructionFinder.map.put(\"typedinstruction\", \"(imul|lsub|aload|fload|lor|new|aaload|fcmpg|iand|iaload|lrem|idiv|d2l|isub|dcmpg|dastore|ret|f2d|f2i|drem|iinc|i2c|checkcast|frem|lreturn|astore|lushr|daload|dneg|fastore|istore|lshl|ldiv|lstore|areturn|ishr|ldc_w|invokeinterface|invokedynamic|aastore|lxor|ishl|l2d|i2f|return|faload|sipush|iushr|caload|instanceof|invokespecial|putfield|fmul|ireturn|laload|d2f|lneg|ixor|i2l|fdiv|lastore|multianewarray|i2b|getstatic|i2d|putstatic|fcmpl|saload|ladd|irem|dload|jsr_w|dconst|dcmpl|fsub|freturn|ldc|aconst_null|castore|lmul|ldc2_w|dadd|iconst|f2l|ddiv|dstore|land|jsr|anewarray|dmul|bipush|dsub|sastore|d2i|i2s|lshr|iadd|l2i|lload|bastore|fstore|fneg|iload|fadd|baload|fconst|ior|ineg|dreturn|l2f|lconst|getfield|invokevirtual|invokestatic|iastore)\");\n-        InstructionFinder.map.put(\"popinstruction\", \"(fstore|dstore|pop|pop2|astore|putstatic|istore|lstore)\");\n-        InstructionFinder.map.put(\"allocationinstruction\", \"(multianewarray|new|anewarray|newarray)\");\n-        InstructionFinder.map.put(\"indexedinstruction\", \"(lload|lstore|fload|ldc2_w|invokeinterface|invokedynamic|multianewarray|astore|dload|putstatic|instanceof|getstatic|checkcast|getfield|invokespecial|dstore|istore|iinc|ldc_w|ret|fstore|invokestatic|iload|putfield|invokevirtual|ldc|new|aload|anewarray)\");\n-        InstructionFinder.map.put(\"pushinstruction\", \"(dup|lload|dup2|bipush|fload|ldc2_w|sipush|lconst|fconst|dload|getstatic|ldc_w|aconst_null|dconst|iload|ldc|iconst|aload)\");\n-        InstructionFinder.map.put(\"stackproducer\", \"(imul|lsub|aload|fload|lor|new|aaload|fcmpg|iand|iaload|lrem|idiv|d2l|isub|dcmpg|dup|f2d|f2i|drem|i2c|checkcast|frem|lushr|daload|dneg|lshl|ldiv|ishr|ldc_w|invokeinterface|invokedynamic|lxor|ishl|l2d|i2f|faload|sipush|iushr|caload|instanceof|invokespecial|fmul|laload|d2f|lneg|ixor|i2l|fdiv|getstatic|i2b|swap|i2d|dup2|fcmpl|saload|ladd|irem|dload|jsr_w|dconst|dcmpl|fsub|ldc|arraylength|aconst_null|tableswitch|lmul|ldc2_w|iconst|dadd|f2l|ddiv|land|jsr|anewarray|dmul|bipush|dsub|d2i|newarray|i2s|lshr|iadd|lload|l2i|fneg|iload|fadd|baload|fconst|lookupswitch|ior|ineg|lconst|l2f|getfield|invokevirtual|invokestatic)\");\n-        InstructionFinder.map.put(\"stackconsumer\", \"(imul|lsub|lor|iflt|fcmpg|if_icmpgt|iand|ifeq|if_icmplt|lrem|ifnonnull|idiv|d2l|isub|dcmpg|dastore|if_icmpeq|f2d|f2i|drem|i2c|checkcast|frem|lreturn|astore|lushr|pop2|monitorexit|dneg|fastore|istore|lshl|ldiv|lstore|areturn|if_icmpge|ishr|monitorenter|invokeinterface|invokedynamic|aastore|lxor|ishl|l2d|i2f|return|iushr|instanceof|invokespecial|fmul|ireturn|d2f|lneg|ixor|pop|i2l|ifnull|fdiv|lastore|i2b|if_acmpeq|ifge|swap|i2d|putstatic|fcmpl|ladd|irem|dcmpl|fsub|freturn|ifgt|castore|lmul|dadd|f2l|ddiv|dstore|land|if_icmpne|if_acmpne|dmul|dsub|sastore|ifle|d2i|i2s|lshr|iadd|l2i|bastore|fstore|fneg|fadd|ior|ineg|ifne|dreturn|l2f|if_icmple|getfield|invokevirtual|invokestatic|iastore)\");\n-        InstructionFinder.map.put(\"exceptionthrower\", \"(irem|lrem|laload|putstatic|baload|dastore|areturn|getstatic|ldiv|anewarray|iastore|castore|idiv|saload|lastore|fastore|putfield|lreturn|caload|getfield|return|aastore|freturn|newarray|instanceof|multianewarray|athrow|faload|iaload|aaload|dreturn|monitorenter|checkcast|bastore|arraylength|new|invokevirtual|sastore|ldc_w|ireturn|invokespecial|monitorexit|invokeinterface|invokedynamic|ldc|invokestatic|daload)\");\n-        InstructionFinder.map.put(\"loadclass\", \"(multianewarray|invokeinterface|invokedynamic|instanceof|invokespecial|putfield|checkcast|putstatic|invokevirtual|new|getstatic|invokestatic|getfield|anewarray)\");\n-        InstructionFinder.map.put(\"instructiontargeter\", \"(ifle|if_acmpne|if_icmpeq|if_acmpeq|ifnonnull|goto_w|iflt|ifnull|if_icmpne|tableswitch|if_icmple|ifeq|if_icmplt|jsr_w|if_icmpgt|ifgt|jsr|goto|ifne|ifge|lookupswitch|if_icmpge)\");\n-        InstructionFinder.map.put(\"if_icmp\", \"(if_icmpne|if_icmpeq|if_icmple|if_icmpge|if_icmplt|if_icmpgt)\");\n-        InstructionFinder.map.put(\"if_acmp\", \"(if_acmpeq|if_acmpne)\");\n-        InstructionFinder.map.put(\"if\", \"(ifeq|ifne|iflt|ifge|ifgt|ifle)\");\n-        InstructionFinder.map.put(\"iconst\", precompile((short)3, (short)8, (short)2));\n-        InstructionFinder.map.put(\"lconst\", new String(new char[] { '(', makeChar((short)9), '|', makeChar((short)10), ')' }));\n-        InstructionFinder.map.put(\"dconst\", new String(new char[] { '(', makeChar((short)14), '|', makeChar((short)15), ')' }));\n-        InstructionFinder.map.put(\"fconst\", new String(new char[] { '(', makeChar((short)11), '|', makeChar((short)12), '|', makeChar((short)13), ')' }));\n-        InstructionFinder.map.put(\"lload\", precompile((short)30, (short)33, (short)22));\n-        InstructionFinder.map.put(\"iload\", precompile((short)26, (short)29, (short)21));\n-        InstructionFinder.map.put(\"dload\", precompile((short)38, (short)41, (short)24));\n-        InstructionFinder.map.put(\"fload\", precompile((short)34, (short)37, (short)23));\n-        InstructionFinder.map.put(\"aload\", precompile((short)42, (short)45, (short)25));\n-        InstructionFinder.map.put(\"lstore\", precompile((short)63, (short)66, (short)55));\n-        InstructionFinder.map.put(\"istore\", precompile((short)59, (short)62, (short)54));\n-        InstructionFinder.map.put(\"dstore\", precompile((short)71, (short)74, (short)57));\n-        InstructionFinder.map.put(\"fstore\", precompile((short)67, (short)70, (short)56));\n-        InstructionFinder.map.put(\"astore\", precompile((short)75, (short)78, (short)58));\n-        for (final Map.Entry<String, String> entry : InstructionFinder.map.entrySet()) {\n-            final String key = (String)entry.getKey();\n-            final String value = (String)entry.getValue();\n-            final char ch = value.charAt(1);\n-            if (ch < '\\u7fff') {\n-                InstructionFinder.map.put(key, compilePattern(value));\n-            }\n-        }\n-        final StringBuilder buf = new StringBuilder(\"(\");\n-        for (short i = 0; i < 256; ++i) {\n-            if (Const.getNoOfOperands((int)i) != -1) {\n-                buf.append(makeChar(i));\n-                if (i < 255) {\n-                    buf.append('|');\n-                }\n-            }\n-        }\n-        buf.append(')');\n-        InstructionFinder.map.put(\"instruction\", buf.toString());\n-    }\n }\n"}]}
