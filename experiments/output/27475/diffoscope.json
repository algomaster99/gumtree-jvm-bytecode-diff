{"diffoscope-json-version": 1, "source1": "first/DeflateCompressorOutputStream.class", "source2": "second/DeflateCompressorOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,102 +1,102 @@\n-  SHA-256 checksum 22f2464f9f97e527bd1676da0204767beceb10e024f3d6e3d01ed636336ecf1d\n+  SHA-256 checksum 9d780d9e0e51f3327b18d4fc4925f35994aa96ba8394fe288de2e69a3b3e1540\n   Compiled from \"DeflateCompressorOutputStream.java\"\n public class org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream extends org.apache.commons.compress.compressors.CompressorOutputStream\n   minor version: 0\n   major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #19                         // org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream\n-  super_class: #20                        // org/apache/commons/compress/compressors/CompressorOutputStream\n+  this_class: #8                          // org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream\n+  super_class: #13                        // org/apache/commons/compress/compressors/CompressorOutputStream\n   interfaces: 0, fields: 2, methods: 7, attributes: 1\n Constant pool:\n-   #1 = Class              #57            // org/apache/commons/compress/compressors/deflate/DeflateParameters\n-   #2 = Methodref          #1.#58         // org/apache/commons/compress/compressors/deflate/DeflateParameters.\"<init>\":()V\n-   #3 = Methodref          #19.#59        // org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V\n-   #4 = Methodref          #20.#58        // org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n-   #5 = Class              #60            // java/util/zip/Deflater\n-   #6 = Methodref          #1.#61         // org/apache/commons/compress/compressors/deflate/DeflateParameters.getCompressionLevel:()I\n-   #7 = Methodref          #1.#62         // org/apache/commons/compress/compressors/deflate/DeflateParameters.withZlibHeader:()Z\n-   #8 = Methodref          #5.#63         // java/util/zip/Deflater.\"<init>\":(IZ)V\n-   #9 = Fieldref           #19.#64        // org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.deflater:Ljava/util/zip/Deflater;\n-  #10 = Class              #65            // java/util/zip/DeflaterOutputStream\n-  #11 = Methodref          #10.#66        // java/util/zip/DeflaterOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/util/zip/Deflater;)V\n-  #12 = Fieldref           #19.#67        // org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.out:Ljava/util/zip/DeflaterOutputStream;\n-  #13 = Methodref          #10.#68        // java/util/zip/DeflaterOutputStream.write:(I)V\n-  #14 = Methodref          #10.#69        // java/util/zip/DeflaterOutputStream.write:([BII)V\n-  #15 = Methodref          #10.#70        // java/util/zip/DeflaterOutputStream.flush:()V\n-  #16 = Methodref          #10.#71        // java/util/zip/DeflaterOutputStream.finish:()V\n-  #17 = Methodref          #10.#72        // java/util/zip/DeflaterOutputStream.close:()V\n-  #18 = Methodref          #5.#73         // java/util/zip/Deflater.end:()V\n-  #19 = Class              #74            // org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream\n-  #20 = Class              #75            // org/apache/commons/compress/compressors/CompressorOutputStream\n-  #21 = Utf8               out\n-  #22 = Utf8               Ljava/util/zip/DeflaterOutputStream;\n-  #23 = Utf8               deflater\n-  #24 = Utf8               Ljava/util/zip/Deflater;\n-  #25 = Utf8               <init>\n-  #26 = Utf8               (Ljava/io/OutputStream;)V\n-  #27 = Utf8               Code\n-  #28 = Utf8               LineNumberTable\n-  #29 = Utf8               LocalVariableTable\n-  #30 = Utf8               this\n-  #31 = Utf8               Lorg/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream;\n-  #32 = Utf8               outputStream\n-  #33 = Utf8               Ljava/io/OutputStream;\n-  #34 = Utf8               Exceptions\n-  #35 = Class              #76            // java/io/IOException\n-  #36 = Utf8               (Ljava/io/OutputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V\n-  #37 = Utf8               parameters\n-  #38 = Utf8               Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;\n-  #39 = Utf8               StackMapTable\n-  #40 = Class              #77            // java/io/OutputStream\n-  #41 = Utf8               write\n-  #42 = Utf8               (I)V\n-  #43 = Utf8               b\n-  #44 = Utf8               I\n-  #45 = Utf8               ([BII)V\n-  #46 = Utf8               buf\n-  #47 = Utf8               [B\n-  #48 = Utf8               off\n-  #49 = Utf8               len\n+   #1 = Class              #2             // org/apache/commons/compress/compressors/deflate/DeflateParameters\n+   #2 = Utf8               org/apache/commons/compress/compressors/deflate/DeflateParameters\n+   #3 = Methodref          #1.#4          // org/apache/commons/compress/compressors/deflate/DeflateParameters.\"<init>\":()V\n+   #4 = NameAndType        #5:#6          // \"<init>\":()V\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Methodref          #8.#9          // org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V\n+   #8 = Class              #10            // org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream\n+   #9 = NameAndType        #5:#11         // \"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V\n+  #10 = Utf8               org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream\n+  #11 = Utf8               (Ljava/io/OutputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V\n+  #12 = Methodref          #13.#4         // org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n+  #13 = Class              #14            // org/apache/commons/compress/compressors/CompressorOutputStream\n+  #14 = Utf8               org/apache/commons/compress/compressors/CompressorOutputStream\n+  #15 = Class              #16            // java/util/zip/Deflater\n+  #16 = Utf8               java/util/zip/Deflater\n+  #17 = Methodref          #1.#18         // org/apache/commons/compress/compressors/deflate/DeflateParameters.getCompressionLevel:()I\n+  #18 = NameAndType        #19:#20        // getCompressionLevel:()I\n+  #19 = Utf8               getCompressionLevel\n+  #20 = Utf8               ()I\n+  #21 = Methodref          #1.#22         // org/apache/commons/compress/compressors/deflate/DeflateParameters.withZlibHeader:()Z\n+  #22 = NameAndType        #23:#24        // withZlibHeader:()Z\n+  #23 = Utf8               withZlibHeader\n+  #24 = Utf8               ()Z\n+  #25 = Methodref          #15.#26        // java/util/zip/Deflater.\"<init>\":(IZ)V\n+  #26 = NameAndType        #5:#27         // \"<init>\":(IZ)V\n+  #27 = Utf8               (IZ)V\n+  #28 = Fieldref           #8.#29         // org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.deflater:Ljava/util/zip/Deflater;\n+  #29 = NameAndType        #30:#31        // deflater:Ljava/util/zip/Deflater;\n+  #30 = Utf8               deflater\n+  #31 = Utf8               Ljava/util/zip/Deflater;\n+  #32 = Class              #33            // java/util/zip/DeflaterOutputStream\n+  #33 = Utf8               java/util/zip/DeflaterOutputStream\n+  #34 = Methodref          #32.#35        // java/util/zip/DeflaterOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/util/zip/Deflater;)V\n+  #35 = NameAndType        #5:#36         // \"<init>\":(Ljava/io/OutputStream;Ljava/util/zip/Deflater;)V\n+  #36 = Utf8               (Ljava/io/OutputStream;Ljava/util/zip/Deflater;)V\n+  #37 = Fieldref           #8.#38         // org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.out:Ljava/util/zip/DeflaterOutputStream;\n+  #38 = NameAndType        #39:#40        // out:Ljava/util/zip/DeflaterOutputStream;\n+  #39 = Utf8               out\n+  #40 = Utf8               Ljava/util/zip/DeflaterOutputStream;\n+  #41 = Methodref          #32.#42        // java/util/zip/DeflaterOutputStream.write:(I)V\n+  #42 = NameAndType        #43:#44        // write:(I)V\n+  #43 = Utf8               write\n+  #44 = Utf8               (I)V\n+  #45 = Methodref          #32.#46        // java/util/zip/DeflaterOutputStream.write:([BII)V\n+  #46 = NameAndType        #43:#47        // write:([BII)V\n+  #47 = Utf8               ([BII)V\n+  #48 = Methodref          #32.#49        // java/util/zip/DeflaterOutputStream.flush:()V\n+  #49 = NameAndType        #50:#6         // flush:()V\n   #50 = Utf8               flush\n-  #51 = Utf8               ()V\n-  #52 = Utf8               finish\n-  #53 = Utf8               close\n-  #54 = Class              #78            // java/lang/Throwable\n-  #55 = Utf8               SourceFile\n-  #56 = Utf8               DeflateCompressorOutputStream.java\n-  #57 = Utf8               org/apache/commons/compress/compressors/deflate/DeflateParameters\n-  #58 = NameAndType        #25:#51        // \"<init>\":()V\n-  #59 = NameAndType        #25:#36        // \"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V\n-  #60 = Utf8               java/util/zip/Deflater\n-  #61 = NameAndType        #79:#80        // getCompressionLevel:()I\n-  #62 = NameAndType        #81:#82        // withZlibHeader:()Z\n-  #63 = NameAndType        #25:#83        // \"<init>\":(IZ)V\n-  #64 = NameAndType        #23:#24        // deflater:Ljava/util/zip/Deflater;\n-  #65 = Utf8               java/util/zip/DeflaterOutputStream\n-  #66 = NameAndType        #25:#84        // \"<init>\":(Ljava/io/OutputStream;Ljava/util/zip/Deflater;)V\n-  #67 = NameAndType        #21:#22        // out:Ljava/util/zip/DeflaterOutputStream;\n-  #68 = NameAndType        #41:#42        // write:(I)V\n-  #69 = NameAndType        #41:#45        // write:([BII)V\n-  #70 = NameAndType        #50:#51        // flush:()V\n-  #71 = NameAndType        #52:#51        // finish:()V\n-  #72 = NameAndType        #53:#51        // close:()V\n-  #73 = NameAndType        #85:#51        // end:()V\n-  #74 = Utf8               org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream\n-  #75 = Utf8               org/apache/commons/compress/compressors/CompressorOutputStream\n-  #76 = Utf8               java/io/IOException\n-  #77 = Utf8               java/io/OutputStream\n-  #78 = Utf8               java/lang/Throwable\n-  #79 = Utf8               getCompressionLevel\n-  #80 = Utf8               ()I\n-  #81 = Utf8               withZlibHeader\n-  #82 = Utf8               ()Z\n-  #83 = Utf8               (IZ)V\n-  #84 = Utf8               (Ljava/io/OutputStream;Ljava/util/zip/Deflater;)V\n-  #85 = Utf8               end\n+  #51 = Methodref          #32.#52        // java/util/zip/DeflaterOutputStream.finish:()V\n+  #52 = NameAndType        #53:#6         // finish:()V\n+  #53 = Utf8               finish\n+  #54 = Methodref          #32.#55        // java/util/zip/DeflaterOutputStream.close:()V\n+  #55 = NameAndType        #56:#6         // close:()V\n+  #56 = Utf8               close\n+  #57 = Methodref          #15.#58        // java/util/zip/Deflater.end:()V\n+  #58 = NameAndType        #59:#6         // end:()V\n+  #59 = Utf8               end\n+  #60 = Utf8               (Ljava/io/OutputStream;)V\n+  #61 = Utf8               Code\n+  #62 = Utf8               LineNumberTable\n+  #63 = Utf8               LocalVariableTable\n+  #64 = Utf8               this\n+  #65 = Utf8               Lorg/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream;\n+  #66 = Utf8               outputStream\n+  #67 = Utf8               Ljava/io/OutputStream;\n+  #68 = Utf8               Exceptions\n+  #69 = Class              #70            // java/io/IOException\n+  #70 = Utf8               java/io/IOException\n+  #71 = Utf8               parameters\n+  #72 = Utf8               Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;\n+  #73 = Utf8               StackMapTable\n+  #74 = Class              #75            // java/io/OutputStream\n+  #75 = Utf8               java/io/OutputStream\n+  #76 = Utf8               b\n+  #77 = Utf8               I\n+  #78 = Utf8               buf\n+  #79 = Utf8               [B\n+  #80 = Utf8               off\n+  #81 = Utf8               len\n+  #82 = Class              #83            // java/lang/Throwable\n+  #83 = Utf8               java/lang/Throwable\n+  #84 = Utf8               SourceFile\n+  #85 = Utf8               DeflateCompressorOutputStream.java\n {\n   private final java.util.zip.DeflaterOutputStream out;\n     descriptor: Ljava/util/zip/DeflaterOutputStream;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final java.util.zip.Deflater deflater;\n     descriptor: Ljava/util/zip/Deflater;\n@@ -107,16 +107,16 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: new           #1                  // class org/apache/commons/compress/compressors/deflate/DeflateParameters\n          5: dup\n-         6: invokespecial #2                  // Method org/apache/commons/compress/compressors/deflate/DeflateParameters.\"<init>\":()V\n-         9: invokespecial #3                  // Method \"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V\n+         6: invokespecial #3                  // Method org/apache/commons/compress/compressors/deflate/DeflateParameters.\"<init>\":()V\n+         9: invokespecial #7                  // Method \"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V\n         12: return\n       LineNumberTable:\n         line 42: 0\n         line 43: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream;\n@@ -126,36 +126,36 @@\n \n   public org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream(java.io.OutputStream, org.apache.commons.compress.compressors.deflate.DeflateParameters) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #4                  // Method org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n+         1: invokespecial #12                 // Method org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n          4: aload_0\n-         5: new           #5                  // class java/util/zip/Deflater\n+         5: new           #15                 // class java/util/zip/Deflater\n          8: dup\n          9: aload_2\n-        10: invokevirtual #6                  // Method org/apache/commons/compress/compressors/deflate/DeflateParameters.getCompressionLevel:()I\n+        10: invokevirtual #17                 // Method org/apache/commons/compress/compressors/deflate/DeflateParameters.getCompressionLevel:()I\n         13: aload_2\n-        14: invokevirtual #7                  // Method org/apache/commons/compress/compressors/deflate/DeflateParameters.withZlibHeader:()Z\n+        14: invokevirtual #21                 // Method org/apache/commons/compress/compressors/deflate/DeflateParameters.withZlibHeader:()Z\n         17: ifne          24\n         20: iconst_1\n         21: goto          25\n         24: iconst_0\n-        25: invokespecial #8                  // Method java/util/zip/Deflater.\"<init>\":(IZ)V\n-        28: putfield      #9                  // Field deflater:Ljava/util/zip/Deflater;\n+        25: invokespecial #25                 // Method java/util/zip/Deflater.\"<init>\":(IZ)V\n+        28: putfield      #28                 // Field deflater:Ljava/util/zip/Deflater;\n         31: aload_0\n-        32: new           #10                 // class java/util/zip/DeflaterOutputStream\n+        32: new           #32                 // class java/util/zip/DeflaterOutputStream\n         35: dup\n         36: aload_1\n         37: aload_0\n-        38: getfield      #9                  // Field deflater:Ljava/util/zip/Deflater;\n-        41: invokespecial #11                 // Method java/util/zip/DeflaterOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/util/zip/Deflater;)V\n-        44: putfield      #12                 // Field out:Ljava/util/zip/DeflaterOutputStream;\n+        38: getfield      #28                 // Field deflater:Ljava/util/zip/Deflater;\n+        41: invokespecial #34                 // Method java/util/zip/DeflaterOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/util/zip/Deflater;)V\n+        44: putfield      #37                 // Field out:Ljava/util/zip/DeflaterOutputStream;\n         47: return\n       LineNumberTable:\n         line 52: 0\n         line 53: 4\n         line 54: 31\n         line 55: 47\n       LocalVariableTable:\n@@ -177,17 +177,17 @@\n \n   public void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #12                 // Field out:Ljava/util/zip/DeflaterOutputStream;\n+         1: getfield      #37                 // Field out:Ljava/util/zip/DeflaterOutputStream;\n          4: iload_1\n-         5: invokevirtual #13                 // Method java/util/zip/DeflaterOutputStream.write:(I)V\n+         5: invokevirtual #41                 // Method java/util/zip/DeflaterOutputStream.write:(I)V\n          8: return\n       LineNumberTable:\n         line 59: 0\n         line 60: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream;\n@@ -197,19 +197,19 @@\n \n   public void write(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #12                 // Field out:Ljava/util/zip/DeflaterOutputStream;\n+         1: getfield      #37                 // Field out:Ljava/util/zip/DeflaterOutputStream;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokevirtual #14                 // Method java/util/zip/DeflaterOutputStream.write:([BII)V\n+         7: invokevirtual #45                 // Method java/util/zip/DeflaterOutputStream.write:([BII)V\n         10: return\n       LineNumberTable:\n         line 64: 0\n         line 65: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream;\n@@ -221,16 +221,16 @@\n \n   public void flush() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field out:Ljava/util/zip/DeflaterOutputStream;\n-         4: invokevirtual #15                 // Method java/util/zip/DeflaterOutputStream.flush:()V\n+         1: getfield      #37                 // Field out:Ljava/util/zip/DeflaterOutputStream;\n+         4: invokevirtual #48                 // Method java/util/zip/DeflaterOutputStream.flush:()V\n          7: return\n       LineNumberTable:\n         line 75: 0\n         line 76: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream;\n@@ -239,16 +239,16 @@\n \n   public void finish() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field out:Ljava/util/zip/DeflaterOutputStream;\n-         4: invokevirtual #16                 // Method java/util/zip/DeflaterOutputStream.finish:()V\n+         1: getfield      #37                 // Field out:Ljava/util/zip/DeflaterOutputStream;\n+         4: invokevirtual #51                 // Method java/util/zip/DeflaterOutputStream.finish:()V\n          7: return\n       LineNumberTable:\n         line 84: 0\n         line 85: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream;\n@@ -257,24 +257,24 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field out:Ljava/util/zip/DeflaterOutputStream;\n-         4: invokevirtual #17                 // Method java/util/zip/DeflaterOutputStream.close:()V\n+         1: getfield      #37                 // Field out:Ljava/util/zip/DeflaterOutputStream;\n+         4: invokevirtual #54                 // Method java/util/zip/DeflaterOutputStream.close:()V\n          7: aload_0\n-         8: getfield      #9                  // Field deflater:Ljava/util/zip/Deflater;\n-        11: invokevirtual #18                 // Method java/util/zip/Deflater.end:()V\n+         8: getfield      #28                 // Field deflater:Ljava/util/zip/Deflater;\n+        11: invokevirtual #57                 // Method java/util/zip/Deflater.end:()V\n         14: goto          27\n         17: astore_1\n         18: aload_0\n-        19: getfield      #9                  // Field deflater:Ljava/util/zip/Deflater;\n-        22: invokevirtual #18                 // Method java/util/zip/Deflater.end:()V\n+        19: getfield      #28                 // Field deflater:Ljava/util/zip/Deflater;\n+        22: invokevirtual #57                 // Method java/util/zip/Deflater.end:()V\n         25: aload_1\n         26: athrow\n         27: return\n       Exception table:\n          from    to  target type\n              0     7    17   any\n       LineNumberTable:\n"}]}
