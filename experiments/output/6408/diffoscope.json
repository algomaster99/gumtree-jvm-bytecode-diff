{"diffoscope-json-version": 1, "source1": "first/ConcurrentUtils.class", "source2": "second/ConcurrentUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,48 +1,48 @@\n-  SHA-256 checksum 83a42e2a3686fd353bae57c2cc56ee6ed56438dc4b0c7cb4324d3764f816c8b5\n+  SHA-256 checksum 92da4305491e8312bb6573cb99737026a26ed45e239966afbff242742abaa82e\n   Compiled from \"ConcurrentUtils.java\"\n public class org.apache.commons.lang3.concurrent.ConcurrentUtils\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #31                         // org/apache/commons/lang3/concurrent/ConcurrentUtils\n   super_class: #19                        // java/lang/Object\n   interfaces: 0, fields: 0, methods: 13, attributes: 2\n Constant pool:\n-    #1 = Methodref          #19.#96       // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #97.#98       // java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n-    #3 = Methodref          #31.#99       // org/apache/commons/lang3/concurrent/ConcurrentUtils.throwCause:(Ljava/util/concurrent/ExecutionException;)V\n-    #4 = Class              #100          // org/apache/commons/lang3/concurrent/ConcurrentException\n-    #5 = Methodref          #97.#101      // java/util/concurrent/ExecutionException.getMessage:()Ljava/lang/String;\n-    #6 = Methodref          #4.#102       // org/apache/commons/lang3/concurrent/ConcurrentException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-    #7 = Class              #103          // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n-    #8 = Methodref          #7.#102       // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-    #9 = Methodref          #31.#104      // org/apache/commons/lang3/concurrent/ConcurrentUtils.extractCause:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n-   #10 = Methodref          #31.#105      // org/apache/commons/lang3/concurrent/ConcurrentUtils.extractCauseUnchecked:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n-   #11 = Class              #106          // java/lang/RuntimeException\n-   #12 = Class              #107          // java/lang/Error\n-   #13 = Class              #108          // java/lang/StringBuilder\n-   #14 = Methodref          #13.#96       // java/lang/StringBuilder.\"<init>\":()V\n-   #15 = String             #109          // Not a checked exception:\n-   #16 = Methodref          #13.#110      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #17 = Methodref          #13.#111      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #18 = Methodref          #13.#112      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #19 = Class              #113          // java/lang/Object\n-   #20 = Methodref          #114.#115     // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-   #21 = InterfaceMethodref #116.#117     // org/apache/commons/lang3/concurrent/ConcurrentInitializer.get:()Ljava/lang/Object;\n-   #22 = Methodref          #31.#118      // org/apache/commons/lang3/concurrent/ConcurrentUtils.initialize:(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n-   #23 = Methodref          #4.#98        // org/apache/commons/lang3/concurrent/ConcurrentException.getCause:()Ljava/lang/Throwable;\n-   #24 = Methodref          #7.#119       // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n-   #25 = InterfaceMethodref #120.#121     // java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #26 = InterfaceMethodref #120.#122     // java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #27 = Methodref          #31.#123      // org/apache/commons/lang3/concurrent/ConcurrentUtils.putIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #28 = Methodref          #31.#124      // org/apache/commons/lang3/concurrent/ConcurrentUtils.createIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n-   #29 = Class              #125          // org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture\n-   #30 = Methodref          #29.#126      // org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture.\"<init>\":(Ljava/lang/Object;)V\n-   #31 = Class              #127          // org/apache/commons/lang3/concurrent/ConcurrentUtils\n+    #1 = Methodref          #19.#93       // java/lang/Object.\"<init>\":()V\n+    #2 = Methodref          #94.#95       // java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n+    #3 = Methodref          #31.#96       // org/apache/commons/lang3/concurrent/ConcurrentUtils.throwCause:(Ljava/util/concurrent/ExecutionException;)V\n+    #4 = Class              #97           // org/apache/commons/lang3/concurrent/ConcurrentException\n+    #5 = Methodref          #94.#98       // java/util/concurrent/ExecutionException.getMessage:()Ljava/lang/String;\n+    #6 = Methodref          #4.#99        // org/apache/commons/lang3/concurrent/ConcurrentException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+    #7 = Class              #100          // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n+    #8 = Methodref          #7.#99        // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+    #9 = Methodref          #31.#101      // org/apache/commons/lang3/concurrent/ConcurrentUtils.extractCause:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n+   #10 = Methodref          #31.#102      // org/apache/commons/lang3/concurrent/ConcurrentUtils.extractCauseUnchecked:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n+   #11 = Class              #103          // java/lang/RuntimeException\n+   #12 = Class              #104          // java/lang/Error\n+   #13 = Class              #105          // java/lang/StringBuilder\n+   #14 = Methodref          #13.#93       // java/lang/StringBuilder.\"<init>\":()V\n+   #15 = String             #106          // Not a checked exception:\n+   #16 = Methodref          #13.#107      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #17 = Methodref          #13.#108      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #18 = Methodref          #13.#109      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #19 = Class              #110          // java/lang/Object\n+   #20 = Methodref          #111.#112     // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+   #21 = InterfaceMethodref #113.#114     // org/apache/commons/lang3/concurrent/ConcurrentInitializer.get:()Ljava/lang/Object;\n+   #22 = Methodref          #31.#115      // org/apache/commons/lang3/concurrent/ConcurrentUtils.initialize:(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n+   #23 = Methodref          #4.#95        // org/apache/commons/lang3/concurrent/ConcurrentException.getCause:()Ljava/lang/Throwable;\n+   #24 = Methodref          #7.#116       // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+   #25 = InterfaceMethodref #117.#118     // java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #26 = InterfaceMethodref #117.#119     // java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #27 = Methodref          #31.#120      // org/apache/commons/lang3/concurrent/ConcurrentUtils.putIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #28 = Methodref          #31.#121      // org/apache/commons/lang3/concurrent/ConcurrentUtils.createIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n+   #29 = Class              #122          // org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture\n+   #30 = Methodref          #29.#123      // org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture.\"<init>\":(Ljava/lang/Object;)V\n+   #31 = Class              #124          // org/apache/commons/lang3/concurrent/ConcurrentUtils\n    #32 = Utf8               ConstantFuture\n    #33 = Utf8               InnerClasses\n    #34 = Utf8               <init>\n    #35 = Utf8               ()V\n    #36 = Utf8               Code\n    #37 = Utf8               LineNumberTable\n    #38 = Utf8               LocalVariableTable\n@@ -55,111 +55,108 @@\n    #45 = Utf8               StackMapTable\n    #46 = Utf8               extractCauseUnchecked\n    #47 = Utf8               (Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n    #48 = Utf8               handleCause\n    #49 = Utf8               (Ljava/util/concurrent/ExecutionException;)V\n    #50 = Utf8               cex\n    #51 = Utf8               Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n-   #52 = Class              #100          // org/apache/commons/lang3/concurrent/ConcurrentException\n-   #53 = Utf8               Exceptions\n-   #54 = Utf8               handleCauseUnchecked\n-   #55 = Utf8               crex\n-   #56 = Utf8               Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n-   #57 = Class              #103          // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n-   #58 = Utf8               checkedException\n-   #59 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/Throwable;\n-   #60 = Utf8               Ljava/lang/Throwable;\n-   #61 = Utf8               throwCause\n-   #62 = Utf8               initialize\n-   #63 = Utf8               (Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n-   #64 = Utf8               initializer\n-   #65 = Utf8               Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;\n-   #66 = Utf8               LocalVariableTypeTable\n-   #67 = Utf8               Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;\n-   #68 = Class              #113          // java/lang/Object\n-   #69 = Utf8               Signature\n-   #70 = Utf8               <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;\n-   #71 = Utf8               initializeUnchecked\n-   #72 = Utf8               putIfAbsent\n-   #73 = Utf8               (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #74 = Utf8               map\n-   #75 = Utf8               Ljava/util/concurrent/ConcurrentMap;\n-   #76 = Utf8               key\n-   #77 = Utf8               Ljava/lang/Object;\n-   #78 = Utf8               value\n-   #79 = Utf8               result\n-   #80 = Utf8               Ljava/util/concurrent/ConcurrentMap<TK;TV;>;\n-   #81 = Utf8               TK;\n-   #82 = Utf8               TV;\n-   #83 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;TV;)TV;\n-   #84 = Utf8               createIfAbsent\n-   #85 = Utf8               (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n-   #86 = Utf8               init\n-   #87 = Utf8               Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;\n-   #88 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;\n-   #89 = Utf8               createIfAbsentUnchecked\n-   #90 = Utf8               constantFuture\n-   #91 = Utf8               (Ljava/lang/Object;)Ljava/util/concurrent/Future;\n-   #92 = Utf8               TT;\n-   #93 = Utf8               <T:Ljava/lang/Object;>(TT;)Ljava/util/concurrent/Future<TT;>;\n-   #94 = Utf8               SourceFile\n-   #95 = Utf8               ConcurrentUtils.java\n-   #96 = NameAndType        #34:#35       // \"<init>\":()V\n-   #97 = Class              #128          // java/util/concurrent/ExecutionException\n-   #98 = NameAndType        #129:#130     // getCause:()Ljava/lang/Throwable;\n-   #99 = NameAndType        #61:#49       // throwCause:(Ljava/util/concurrent/ExecutionException;)V\n-  #100 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentException\n-  #101 = NameAndType        #131:#132     // getMessage:()Ljava/lang/String;\n-  #102 = NameAndType        #34:#133      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #103 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n-  #104 = NameAndType        #41:#42       // extractCause:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n-  #105 = NameAndType        #46:#47       // extractCauseUnchecked:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n-  #106 = Utf8               java/lang/RuntimeException\n-  #107 = Utf8               java/lang/Error\n-  #108 = Utf8               java/lang/StringBuilder\n-  #109 = Utf8               Not a checked exception:\n-  #110 = NameAndType        #134:#135     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #111 = NameAndType        #134:#136     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #112 = NameAndType        #137:#132     // toString:()Ljava/lang/String;\n-  #113 = Utf8               java/lang/Object\n-  #114 = Class              #138          // org/apache/commons/lang3/Validate\n-  #115 = NameAndType        #139:#140     // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-  #116 = Class              #141          // org/apache/commons/lang3/concurrent/ConcurrentInitializer\n-  #117 = NameAndType        #142:#143     // get:()Ljava/lang/Object;\n-  #118 = NameAndType        #62:#63       // initialize:(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n-  #119 = NameAndType        #34:#144      // \"<init>\":(Ljava/lang/Throwable;)V\n-  #120 = Class              #145          // java/util/concurrent/ConcurrentMap\n-  #121 = NameAndType        #72:#146      // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #122 = NameAndType        #142:#147     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #123 = NameAndType        #72:#73       // putIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #124 = NameAndType        #84:#85       // createIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n-  #125 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture\n-  #126 = NameAndType        #34:#148      // \"<init>\":(Ljava/lang/Object;)V\n-  #127 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentUtils\n-  #128 = Utf8               java/util/concurrent/ExecutionException\n-  #129 = Utf8               getCause\n-  #130 = Utf8               ()Ljava/lang/Throwable;\n-  #131 = Utf8               getMessage\n-  #132 = Utf8               ()Ljava/lang/String;\n-  #133 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #134 = Utf8               append\n-  #135 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #136 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #137 = Utf8               toString\n-  #138 = Utf8               org/apache/commons/lang3/Validate\n-  #139 = Utf8               isTrue\n-  #140 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n-  #141 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentInitializer\n-  #142 = Utf8               get\n-  #143 = Utf8               ()Ljava/lang/Object;\n-  #144 = Utf8               (Ljava/lang/Throwable;)V\n-  #145 = Utf8               java/util/concurrent/ConcurrentMap\n-  #146 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #147 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #148 = Utf8               (Ljava/lang/Object;)V\n+   #52 = Utf8               Exceptions\n+   #53 = Utf8               handleCauseUnchecked\n+   #54 = Utf8               crex\n+   #55 = Utf8               Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n+   #56 = Utf8               checkedException\n+   #57 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/Throwable;\n+   #58 = Utf8               Ljava/lang/Throwable;\n+   #59 = Utf8               throwCause\n+   #60 = Utf8               initialize\n+   #61 = Utf8               (Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n+   #62 = Utf8               initializer\n+   #63 = Utf8               Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;\n+   #64 = Utf8               LocalVariableTypeTable\n+   #65 = Utf8               Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;\n+   #66 = Utf8               Signature\n+   #67 = Utf8               <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;\n+   #68 = Utf8               initializeUnchecked\n+   #69 = Utf8               putIfAbsent\n+   #70 = Utf8               (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #71 = Utf8               map\n+   #72 = Utf8               Ljava/util/concurrent/ConcurrentMap;\n+   #73 = Utf8               key\n+   #74 = Utf8               Ljava/lang/Object;\n+   #75 = Utf8               value\n+   #76 = Utf8               result\n+   #77 = Utf8               Ljava/util/concurrent/ConcurrentMap<TK;TV;>;\n+   #78 = Utf8               TK;\n+   #79 = Utf8               TV;\n+   #80 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;TV;)TV;\n+   #81 = Utf8               createIfAbsent\n+   #82 = Utf8               (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n+   #83 = Utf8               init\n+   #84 = Utf8               Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;\n+   #85 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;\n+   #86 = Utf8               createIfAbsentUnchecked\n+   #87 = Utf8               constantFuture\n+   #88 = Utf8               (Ljava/lang/Object;)Ljava/util/concurrent/Future;\n+   #89 = Utf8               TT;\n+   #90 = Utf8               <T:Ljava/lang/Object;>(TT;)Ljava/util/concurrent/Future<TT;>;\n+   #91 = Utf8               SourceFile\n+   #92 = Utf8               ConcurrentUtils.java\n+   #93 = NameAndType        #34:#35       // \"<init>\":()V\n+   #94 = Class              #125          // java/util/concurrent/ExecutionException\n+   #95 = NameAndType        #126:#127     // getCause:()Ljava/lang/Throwable;\n+   #96 = NameAndType        #59:#49       // throwCause:(Ljava/util/concurrent/ExecutionException;)V\n+   #97 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentException\n+   #98 = NameAndType        #128:#129     // getMessage:()Ljava/lang/String;\n+   #99 = NameAndType        #34:#130      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #100 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n+  #101 = NameAndType        #41:#42       // extractCause:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n+  #102 = NameAndType        #46:#47       // extractCauseUnchecked:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n+  #103 = Utf8               java/lang/RuntimeException\n+  #104 = Utf8               java/lang/Error\n+  #105 = Utf8               java/lang/StringBuilder\n+  #106 = Utf8               Not a checked exception:\n+  #107 = NameAndType        #131:#132     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #108 = NameAndType        #131:#133     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #109 = NameAndType        #134:#129     // toString:()Ljava/lang/String;\n+  #110 = Utf8               java/lang/Object\n+  #111 = Class              #135          // org/apache/commons/lang3/Validate\n+  #112 = NameAndType        #136:#137     // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #113 = Class              #138          // org/apache/commons/lang3/concurrent/ConcurrentInitializer\n+  #114 = NameAndType        #139:#140     // get:()Ljava/lang/Object;\n+  #115 = NameAndType        #60:#61       // initialize:(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n+  #116 = NameAndType        #34:#141      // \"<init>\":(Ljava/lang/Throwable;)V\n+  #117 = Class              #142          // java/util/concurrent/ConcurrentMap\n+  #118 = NameAndType        #69:#143      // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #119 = NameAndType        #139:#144     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #120 = NameAndType        #69:#70       // putIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #121 = NameAndType        #81:#82       // createIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n+  #122 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture\n+  #123 = NameAndType        #34:#145      // \"<init>\":(Ljava/lang/Object;)V\n+  #124 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentUtils\n+  #125 = Utf8               java/util/concurrent/ExecutionException\n+  #126 = Utf8               getCause\n+  #127 = Utf8               ()Ljava/lang/Throwable;\n+  #128 = Utf8               getMessage\n+  #129 = Utf8               ()Ljava/lang/String;\n+  #130 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #131 = Utf8               append\n+  #132 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #133 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #134 = Utf8               toString\n+  #135 = Utf8               org/apache/commons/lang3/Validate\n+  #136 = Utf8               isTrue\n+  #137 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #138 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentInitializer\n+  #139 = Utf8               get\n+  #140 = Utf8               ()Ljava/lang/Object;\n+  #141 = Utf8               (Ljava/lang/Throwable;)V\n+  #142 = Utf8               java/util/concurrent/ConcurrentMap\n+  #143 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #144 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #145 = Utf8               (Ljava/lang/Object;)V\n {\n   private org.apache.commons.lang3.concurrent.ConcurrentUtils();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -393,15 +390,15 @@\n             0      15     0 initializer   Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 13 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Object ]\n     Exceptions:\n       throws org.apache.commons.lang3.concurrent.ConcurrentException\n-    Signature: #70                          // <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;\n+    Signature: #67                          // <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;\n \n   public static <T extends java.lang.Object> T initializeUnchecked(org.apache.commons.lang3.concurrent.ConcurrentInitializer<T>);\n     descriptor: (Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n@@ -427,15 +424,15 @@\n             0      18     0 initializer   Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0 initializer   Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 69 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/lang3/concurrent/ConcurrentException ]\n-    Signature: #70                          // <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;\n+    Signature: #67                          // <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;\n \n   public static <K extends java.lang.Object, V extends java.lang.Object> V putIfAbsent(java.util.concurrent.ConcurrentMap<K, V>, K, V);\n     descriptor: (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_0\n@@ -473,15 +470,15 @@\n       StackMapTable: number_of_entries = 3\n         frame_type = 6 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 16\n           locals = [ class java/lang/Object ]\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Object ]\n-    Signature: #83                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;TV;)TV;\n+    Signature: #80                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;TV;)TV;\n \n   public static <K extends java.lang.Object, V extends java.lang.Object> V createIfAbsent(java.util.concurrent.ConcurrentMap<K, V>, K, org.apache.commons.lang3.concurrent.ConcurrentInitializer<V>) throws org.apache.commons.lang3.concurrent.ConcurrentException;\n     descriptor: (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_0\n@@ -527,15 +524,15 @@\n         frame_type = 8 /* same */\n         frame_type = 1 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 23\n           locals = [ class java/lang/Object ]\n     Exceptions:\n       throws org.apache.commons.lang3.concurrent.ConcurrentException\n-    Signature: #88                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;\n+    Signature: #85                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;\n \n   public static <K extends java.lang.Object, V extends java.lang.Object> V createIfAbsentUnchecked(java.util.concurrent.ConcurrentMap<K, V>, K, org.apache.commons.lang3.concurrent.ConcurrentInitializer<V>);\n     descriptor: (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_0\n@@ -567,15 +564,15 @@\n         Start  Length  Slot  Name   Signature\n             0      20     0   map   Ljava/util/concurrent/ConcurrentMap<TK;TV;>;\n             0      20     1   key   TK;\n             0      20     2  init   Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 71 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/lang3/concurrent/ConcurrentException ]\n-    Signature: #88                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;\n+    Signature: #85                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;\n \n   public static <T extends java.lang.Object> java.util.concurrent.Future<T> constantFuture(T);\n     descriptor: (Ljava/lang/Object;)Ljava/util/concurrent/Future;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: new           #29                 // class org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture\n@@ -587,12 +584,12 @@\n         line 325: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0 value   Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0 value   TT;\n-    Signature: #93                          // <T:Ljava/lang/Object;>(TT;)Ljava/util/concurrent/Future<TT;>;\n+    Signature: #90                          // <T:Ljava/lang/Object;>(TT;)Ljava/util/concurrent/Future<TT;>;\n }\n SourceFile: \"ConcurrentUtils.java\"\n InnerClasses:\n   static final #32= #29 of #31;           // ConstantFuture=class org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture of class org/apache/commons/lang3/concurrent/ConcurrentUtils\n"}]}
