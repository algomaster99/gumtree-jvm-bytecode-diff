{"diffoscope-json-version": 1, "source1": "first/BaseConfigurationBuilderProvider.class", "source2": "second/BaseConfigurationBuilderProvider.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,32 +1,36 @@\n \n package org.apache.commons.configuration2.builder.combined;\n \n-import java.util.Map;\n import java.util.Collections;\n import java.lang.reflect.Constructor;\n import org.apache.commons.configuration2.ConfigurationUtils;\n import org.apache.commons.configuration2.beanutils.BeanDeclaration;\n import java.util.Iterator;\n import java.util.ArrayList;\n import org.apache.commons.configuration2.builder.BasicConfigurationBuilder;\n import org.apache.commons.configuration2.builder.BuilderParameters;\n import org.apache.commons.configuration2.ex.ConfigurationException;\n import org.apache.commons.configuration2.Configuration;\n import org.apache.commons.configuration2.builder.ConfigurationBuilder;\n+import java.util.Map;\n import java.util.Collection;\n \n public class BaseConfigurationBuilderProvider implements ConfigurationBuilderProvider\n {\n     private static final Class<?>[] CTOR_PARAM_TYPES;\n     private final String builderClass;\n     private final String reloadingBuilderClass;\n     private final String configurationClass;\n     private final Collection<String> parameterClasses;\n     \n+    static {\n+        CTOR_PARAM_TYPES = new Class[] { Class.class, Map.class, Boolean.TYPE };\n+    }\n+    \n     public BaseConfigurationBuilderProvider(final String bldrCls, final String reloadBldrCls, final String configCls, final Collection<String> paramCls) {\n         if (bldrCls == null) {\n             throw new IllegalArgumentException(\"Builder class must not be null!\");\n         }\n         if (configCls == null) {\n             throw new IllegalArgumentException(\"Configuration class must not be null!\");\n         }\n@@ -126,12 +130,8 @@\n     \n     private static Collection<String> initParameterClasses(final Collection<String> paramCls) {\n         if (paramCls == null) {\n             return (Collection<String>)Collections.emptySet();\n         }\n         return Collections.unmodifiableCollection((Collection<? extends String>)new ArrayList<String>(paramCls));\n     }\n-    \n-    static {\n-        CTOR_PARAM_TYPES = new Class[] { Class.class, Map.class, Boolean.TYPE };\n-    }\n }\n"}]}
