{"diffoscope-json-version": 1, "source1": "first/FailableDoubleUnaryOperator.class", "source2": "second/FailableDoubleUnaryOperator.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,188 +1,188 @@\n-  SHA-256 checksum 9d18f5ab868ebc91a09b6d861bdfacf59254146c3cbc753a944113ee219220ad\n+  SHA-256 checksum bfee61eb84c280c9590b38ba9cc31550e33334c1461c14ac6686dddd35a975b1\n   Compiled from \"FailableDoubleUnaryOperator.java\"\n public interface org.apache.commons.lang3.function.FailableDoubleUnaryOperator<E extends java.lang.Throwable>\n   minor version: 0\n   major version: 52\n   flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT\n-  this_class: #8                          // org/apache/commons/lang3/function/FailableDoubleUnaryOperator\n-  super_class: #9                         // java/lang/Object\n+  this_class: #6                          // org/apache/commons/lang3/function/FailableDoubleUnaryOperator\n+  super_class: #25                        // java/lang/Object\n   interfaces: 0, fields: 1, methods: 10, attributes: 4\n Constant pool:\n-   #1 = InvokeDynamic      #0:#42         // #0:applyAsDouble:()Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n-   #2 = Fieldref           #8.#43         // org/apache/commons/lang3/function/FailableDoubleUnaryOperator.NOP:Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n-   #3 = Methodref          #44.#45        // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #4 = InvokeDynamic      #1:#47         // #1:applyAsDouble:(Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;)Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n-   #5 = InvokeDynamic      #2:#47         // #2:applyAsDouble:(Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;)Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n-   #6 = InterfaceMethodref #8.#49         // org/apache/commons/lang3/function/FailableDoubleUnaryOperator.applyAsDouble:(D)D\n-   #7 = InvokeDynamic      #3:#42         // #3:applyAsDouble:()Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n-   #8 = Class              #51            // org/apache/commons/lang3/function/FailableDoubleUnaryOperator\n-   #9 = Class              #52            // java/lang/Object\n-  #10 = Utf8               NOP\n-  #11 = Utf8               Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n-  #12 = Utf8               identity\n-  #13 = Utf8               ()Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n-  #14 = Utf8               Code\n-  #15 = Utf8               LineNumberTable\n-  #16 = Utf8               Signature\n-  #17 = Utf8               <E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator<TE;>;\n-  #18 = Utf8               nop\n-  #19 = Utf8               andThen\n-  #20 = Utf8               (Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;)Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n-  #21 = Utf8               (Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator<TE;>;)Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator<TE;>;\n-  #22 = Utf8               applyAsDouble\n+   #1 = InvokeDynamic      #0:#2          // #0:applyAsDouble:()Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n+   #2 = NameAndType        #3:#4          // applyAsDouble:()Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n+   #3 = Utf8               applyAsDouble\n+   #4 = Utf8               ()Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n+   #5 = Fieldref           #6.#7          // org/apache/commons/lang3/function/FailableDoubleUnaryOperator.NOP:Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n+   #6 = Class              #8             // org/apache/commons/lang3/function/FailableDoubleUnaryOperator\n+   #7 = NameAndType        #9:#10         // NOP:Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n+   #8 = Utf8               org/apache/commons/lang3/function/FailableDoubleUnaryOperator\n+   #9 = Utf8               NOP\n+  #10 = Utf8               Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n+  #11 = Methodref          #12.#13        // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #12 = Class              #14            // java/util/Objects\n+  #13 = NameAndType        #15:#16        // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #14 = Utf8               java/util/Objects\n+  #15 = Utf8               requireNonNull\n+  #16 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #17 = InvokeDynamic      #1:#18         // #1:applyAsDouble:(Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;)Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n+  #18 = NameAndType        #3:#19         // applyAsDouble:(Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;)Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n+  #19 = Utf8               (Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;)Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n+  #20 = InvokeDynamic      #2:#18         // #2:applyAsDouble:(Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;)Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n+  #21 = InterfaceMethodref #6.#22         // org/apache/commons/lang3/function/FailableDoubleUnaryOperator.applyAsDouble:(D)D\n+  #22 = NameAndType        #3:#23         // applyAsDouble:(D)D\n   #23 = Utf8               (D)D\n-  #24 = Utf8               Exceptions\n-  #25 = Class              #53            // java/lang/Throwable\n-  #26 = Utf8               (D)D^TE;\n-  #27 = Utf8               compose\n-  #28 = Utf8               lambda$compose$3\n-  #29 = Utf8               (Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;D)D\n-  #30 = Utf8               lambda$andThen$2\n-  #31 = Utf8               lambda$identity$1\n-  #32 = Utf8               lambda$static$0\n-  #33 = Utf8               <clinit>\n-  #34 = Utf8               ()V\n-  #35 = Utf8               <E:Ljava/lang/Throwable;>Ljava/lang/Object;\n-  #36 = Utf8               SourceFile\n-  #37 = Utf8               FailableDoubleUnaryOperator.java\n-  #38 = Utf8               BootstrapMethods\n-  #39 = MethodHandle       6:#54          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #40 = MethodType         #23            //  (D)D\n-  #41 = MethodHandle       6:#55          // REF_invokeStatic org/apache/commons/lang3/function/FailableDoubleUnaryOperator.lambda$identity$1:(D)D\n-  #42 = NameAndType        #22:#13        // applyAsDouble:()Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n-  #43 = NameAndType        #10:#11        // NOP:Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n-  #44 = Class              #56            // java/util/Objects\n-  #45 = NameAndType        #57:#58        // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #46 = MethodHandle       7:#59          // REF_invokeSpecial org/apache/commons/lang3/function/FailableDoubleUnaryOperator.lambda$andThen$2:(Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;D)D\n-  #47 = NameAndType        #22:#60        // applyAsDouble:(Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;)Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n-  #48 = MethodHandle       7:#61          // REF_invokeSpecial org/apache/commons/lang3/function/FailableDoubleUnaryOperator.lambda$compose$3:(Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;D)D\n-  #49 = NameAndType        #22:#23        // applyAsDouble:(D)D\n-  #50 = MethodHandle       6:#62          // REF_invokeStatic org/apache/commons/lang3/function/FailableDoubleUnaryOperator.lambda$static$0:(D)D\n-  #51 = Utf8               org/apache/commons/lang3/function/FailableDoubleUnaryOperator\n-  #52 = Utf8               java/lang/Object\n-  #53 = Utf8               java/lang/Throwable\n-  #54 = Methodref          #63.#64        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #55 = InterfaceMethodref #8.#65         // org/apache/commons/lang3/function/FailableDoubleUnaryOperator.lambda$identity$1:(D)D\n-  #56 = Utf8               java/util/Objects\n-  #57 = Utf8               requireNonNull\n-  #58 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #59 = InterfaceMethodref #8.#66         // org/apache/commons/lang3/function/FailableDoubleUnaryOperator.lambda$andThen$2:(Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;D)D\n-  #60 = Utf8               (Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;)Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n-  #61 = InterfaceMethodref #8.#67         // org/apache/commons/lang3/function/FailableDoubleUnaryOperator.lambda$compose$3:(Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;D)D\n-  #62 = InterfaceMethodref #8.#68         // org/apache/commons/lang3/function/FailableDoubleUnaryOperator.lambda$static$0:(D)D\n-  #63 = Class              #69            // java/lang/invoke/LambdaMetafactory\n-  #64 = NameAndType        #70:#74        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #65 = NameAndType        #31:#23        // lambda$identity$1:(D)D\n-  #66 = NameAndType        #30:#29        // lambda$andThen$2:(Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;D)D\n-  #67 = NameAndType        #28:#29        // lambda$compose$3:(Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;D)D\n-  #68 = NameAndType        #32:#23        // lambda$static$0:(D)D\n-  #69 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #70 = Utf8               metafactory\n-  #71 = Class              #76            // java/lang/invoke/MethodHandles$Lookup\n-  #72 = Utf8               Lookup\n-  #73 = Utf8               InnerClasses\n-  #74 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #75 = Class              #77            // java/lang/invoke/MethodHandles\n-  #76 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #77 = Utf8               java/lang/invoke/MethodHandles\n+  #24 = InvokeDynamic      #3:#2          // #3:applyAsDouble:()Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n+  #25 = Class              #26            // java/lang/Object\n+  #26 = Utf8               java/lang/Object\n+  #27 = Utf8               identity\n+  #28 = Utf8               Code\n+  #29 = Utf8               LineNumberTable\n+  #30 = Utf8               Signature\n+  #31 = Utf8               <E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator<TE;>;\n+  #32 = Utf8               nop\n+  #33 = Utf8               andThen\n+  #34 = Utf8               (Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;)Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n+  #35 = Utf8               (Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator<TE;>;)Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator<TE;>;\n+  #36 = Utf8               Exceptions\n+  #37 = Class              #38            // java/lang/Throwable\n+  #38 = Utf8               java/lang/Throwable\n+  #39 = Utf8               (D)D^TE;\n+  #40 = Utf8               compose\n+  #41 = Utf8               lambda$compose$3\n+  #42 = Utf8               (Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;D)D\n+  #43 = Utf8               lambda$andThen$2\n+  #44 = Utf8               lambda$identity$1\n+  #45 = Utf8               lambda$static$0\n+  #46 = Utf8               <clinit>\n+  #47 = Utf8               ()V\n+  #48 = Utf8               <E:Ljava/lang/Throwable;>Ljava/lang/Object;\n+  #49 = Utf8               SourceFile\n+  #50 = Utf8               FailableDoubleUnaryOperator.java\n+  #51 = Utf8               BootstrapMethods\n+  #52 = MethodHandle       6:#53          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #53 = Methodref          #54.#55        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #54 = Class              #56            // java/lang/invoke/LambdaMetafactory\n+  #55 = NameAndType        #57:#58        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #56 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #57 = Utf8               metafactory\n+  #58 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #59 = MethodType         #23            //  (D)D\n+  #60 = MethodHandle       6:#61          // REF_invokeStatic org/apache/commons/lang3/function/FailableDoubleUnaryOperator.lambda$identity$1:(D)D\n+  #61 = InterfaceMethodref #6.#62         // org/apache/commons/lang3/function/FailableDoubleUnaryOperator.lambda$identity$1:(D)D\n+  #62 = NameAndType        #44:#23        // lambda$identity$1:(D)D\n+  #63 = MethodHandle       7:#64          // REF_invokeSpecial org/apache/commons/lang3/function/FailableDoubleUnaryOperator.lambda$andThen$2:(Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;D)D\n+  #64 = InterfaceMethodref #6.#65         // org/apache/commons/lang3/function/FailableDoubleUnaryOperator.lambda$andThen$2:(Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;D)D\n+  #65 = NameAndType        #43:#42        // lambda$andThen$2:(Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;D)D\n+  #66 = MethodHandle       7:#67          // REF_invokeSpecial org/apache/commons/lang3/function/FailableDoubleUnaryOperator.lambda$compose$3:(Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;D)D\n+  #67 = InterfaceMethodref #6.#68         // org/apache/commons/lang3/function/FailableDoubleUnaryOperator.lambda$compose$3:(Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;D)D\n+  #68 = NameAndType        #41:#42        // lambda$compose$3:(Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;D)D\n+  #69 = MethodHandle       6:#70          // REF_invokeStatic org/apache/commons/lang3/function/FailableDoubleUnaryOperator.lambda$static$0:(D)D\n+  #70 = InterfaceMethodref #6.#71         // org/apache/commons/lang3/function/FailableDoubleUnaryOperator.lambda$static$0:(D)D\n+  #71 = NameAndType        #45:#23        // lambda$static$0:(D)D\n+  #72 = Utf8               InnerClasses\n+  #73 = Class              #74            // java/lang/invoke/MethodHandles$Lookup\n+  #74 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #75 = Class              #76            // java/lang/invoke/MethodHandles\n+  #76 = Utf8               java/lang/invoke/MethodHandles\n+  #77 = Utf8               Lookup\n {\n   public static final org.apache.commons.lang3.function.FailableDoubleUnaryOperator NOP;\n     descriptor: Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public static <E extends java.lang.Throwable> org.apache.commons.lang3.function.FailableDoubleUnaryOperator<E> identity();\n     descriptor: ()Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: invokedynamic #1,  0              // InvokeDynamic #0:applyAsDouble:()Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n          5: areturn\n       LineNumberTable:\n         line 42: 0\n-    Signature: #17                          // <E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator<TE;>;\n+    Signature: #31                          // <E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator<TE;>;\n \n   public static <E extends java.lang.Throwable> org.apache.commons.lang3.function.FailableDoubleUnaryOperator<E> nop();\n     descriptor: ()Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: getstatic     #2                  // Field NOP:Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n+         0: getstatic     #5                  // Field NOP:Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n          3: areturn\n       LineNumberTable:\n         line 52: 0\n-    Signature: #17                          // <E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator<TE;>;\n+    Signature: #31                          // <E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator<TE;>;\n \n   public default org.apache.commons.lang3.function.FailableDoubleUnaryOperator<E> andThen(org.apache.commons.lang3.function.FailableDoubleUnaryOperator<E>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;)Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         1: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          4: pop\n          5: aload_0\n          6: aload_1\n-         7: invokedynamic #4,  0              // InvokeDynamic #1:applyAsDouble:(Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;)Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n+         7: invokedynamic #17,  0             // InvokeDynamic #1:applyAsDouble:(Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;)Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n         12: areturn\n       LineNumberTable:\n         line 66: 0\n         line 67: 5\n-    Signature: #21                          // (Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator<TE;>;)Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator<TE;>;\n+    Signature: #35                          // (Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator<TE;>;)Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator<TE;>;\n \n   public abstract double applyAsDouble(double) throws E;\n     descriptor: (D)D\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.lang.Throwable\n-    Signature: #26                          // (D)D^TE;\n+    Signature: #39                          // (D)D^TE;\n \n   public default org.apache.commons.lang3.function.FailableDoubleUnaryOperator<E> compose(org.apache.commons.lang3.function.FailableDoubleUnaryOperator<E>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;)Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         1: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          4: pop\n          5: aload_0\n          6: aload_1\n-         7: invokedynamic #5,  0              // InvokeDynamic #2:applyAsDouble:(Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;)Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n+         7: invokedynamic #20,  0             // InvokeDynamic #2:applyAsDouble:(Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;)Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n         12: areturn\n       LineNumberTable:\n         line 90: 0\n         line 91: 5\n-    Signature: #21                          // (Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator<TE;>;)Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator<TE;>;\n+    Signature: #35                          // (Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator<TE;>;)Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator<TE;>;\n \n   private double lambda$compose$3(org.apache.commons.lang3.function.FailableDoubleUnaryOperator, double) throws java.lang.Throwable;\n     descriptor: (Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;D)D\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=4, locals=4, args_size=3\n          0: aload_0\n          1: aload_1\n          2: dload_2\n-         3: invokeinterface #6,  3            // InterfaceMethod applyAsDouble:(D)D\n-         8: invokeinterface #6,  3            // InterfaceMethod applyAsDouble:(D)D\n+         3: invokeinterface #21,  3           // InterfaceMethod applyAsDouble:(D)D\n+         8: invokeinterface #21,  3           // InterfaceMethod applyAsDouble:(D)D\n         13: dreturn\n       LineNumberTable:\n         line 91: 0\n     Exceptions:\n       throws java.lang.Throwable\n \n   private double lambda$andThen$2(org.apache.commons.lang3.function.FailableDoubleUnaryOperator, double) throws java.lang.Throwable;\n     descriptor: (Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;D)D\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=4, locals=4, args_size=3\n          0: aload_1\n          1: aload_0\n          2: dload_2\n-         3: invokeinterface #6,  3            // InterfaceMethod applyAsDouble:(D)D\n-         8: invokeinterface #6,  3            // InterfaceMethod applyAsDouble:(D)D\n+         3: invokeinterface #21,  3           // InterfaceMethod applyAsDouble:(D)D\n+         8: invokeinterface #21,  3           // InterfaceMethod applyAsDouble:(D)D\n         13: dreturn\n       LineNumberTable:\n         line 67: 0\n     Exceptions:\n       throws java.lang.Throwable\n \n   private static double lambda$identity$1(double) throws java.lang.Throwable;\n@@ -210,38 +210,38 @@\n       throws java.lang.Throwable\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: invokedynamic #7,  0              // InvokeDynamic #3:applyAsDouble:()Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n-         5: putstatic     #2                  // Field NOP:Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n+         0: invokedynamic #24,  0             // InvokeDynamic #3:applyAsDouble:()Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n+         5: putstatic     #5                  // Field NOP:Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;\n          8: return\n       LineNumberTable:\n         line 33: 0\n }\n-Signature: #35                          // <E:Ljava/lang/Throwable;>Ljava/lang/Object;\n+Signature: #48                          // <E:Ljava/lang/Throwable;>Ljava/lang/Object;\n SourceFile: \"FailableDoubleUnaryOperator.java\"\n-InnerClasses:\n-  public static final #72= #71 of #75;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #39 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #52 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #40 (D)D\n-      #41 REF_invokeStatic org/apache/commons/lang3/function/FailableDoubleUnaryOperator.lambda$identity$1:(D)D\n-      #40 (D)D\n-  1: #39 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #59 (D)D\n+      #60 REF_invokeStatic org/apache/commons/lang3/function/FailableDoubleUnaryOperator.lambda$identity$1:(D)D\n+      #59 (D)D\n+  1: #52 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #40 (D)D\n-      #46 REF_invokeSpecial org/apache/commons/lang3/function/FailableDoubleUnaryOperator.lambda$andThen$2:(Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;D)D\n-      #40 (D)D\n-  2: #39 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #59 (D)D\n+      #63 REF_invokeSpecial org/apache/commons/lang3/function/FailableDoubleUnaryOperator.lambda$andThen$2:(Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;D)D\n+      #59 (D)D\n+  2: #52 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #40 (D)D\n-      #48 REF_invokeSpecial org/apache/commons/lang3/function/FailableDoubleUnaryOperator.lambda$compose$3:(Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;D)D\n-      #40 (D)D\n-  3: #39 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #59 (D)D\n+      #66 REF_invokeSpecial org/apache/commons/lang3/function/FailableDoubleUnaryOperator.lambda$compose$3:(Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;D)D\n+      #59 (D)D\n+  3: #52 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #40 (D)D\n-      #50 REF_invokeStatic org/apache/commons/lang3/function/FailableDoubleUnaryOperator.lambda$static$0:(D)D\n-      #40 (D)D\n+      #59 (D)D\n+      #69 REF_invokeStatic org/apache/commons/lang3/function/FailableDoubleUnaryOperator.lambda$static$0:(D)D\n+      #59 (D)D\n+InnerClasses:\n+  public static final #77= #73 of #75;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
