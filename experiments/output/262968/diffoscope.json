{"diffoscope-json-version": 1, "source1": "first/LazyInitializer.class", "source2": "second/LazyInitializer.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -7,24 +7,24 @@\n     private volatile T object;\n     \n     public LazyInitializer() {\n         this.object = (T)LazyInitializer.NO_INIT;\n     }\n     \n     public T get() throws ConcurrentException {\n-        T result = this.object;\n-        if (result == LazyInitializer.NO_INIT) {\n+        Object o = this.object;\n+        if (o == LazyInitializer.NO_INIT) {\n             synchronized (this) {\n-                result = this.object;\n-                if (result == LazyInitializer.NO_INIT) {\n-                    result = (this.object = this.initialize());\n+                o = this.object;\n+                if (o == LazyInitializer.NO_INIT) {\n+                    o = (this.object = this.initialize());\n                 }\n             }\n         }\n-        return result;\n+        return (T)o;\n     }\n     \n     protected abstract T initialize() throws ConcurrentException;\n     \n     static {\n         NO_INIT = new Object();\n     }\n"}]}
