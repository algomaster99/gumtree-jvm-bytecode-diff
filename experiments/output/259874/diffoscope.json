{"diffoscope-json-version": 1, "source1": "first/IOBiFunction.class", "source2": "second/IOBiFunction.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -4,18 +4,18 @@\n import java.util.function.BiFunction;\n import java.io.IOException;\n import java.util.Objects;\n \n @FunctionalInterface\n public interface IOBiFunction<T, U, R>\n {\n-    default <V> IOBiFunction<T, U, V> andThen(final IOFunction<? super R, ? extends V> after) {\n-        Objects.requireNonNull(after);\n-        return (IOBiFunction<T, U, V>)((t, u) -> after.apply(this.apply(t, u)));\n+    default <V> IOBiFunction<T, U, V> andThen(final IOFunction<? super R, ? extends V> obj) {\n+        Objects.requireNonNull(obj);\n+        return (IOBiFunction<T, U, V>)((o, o2) -> ioFunction.apply(this.apply(o, o2)));\n     }\n     \n     R apply(final T p0, final U p1) throws IOException;\n     \n     default BiFunction<T, U, R> asBiFunction() {\n-        return (BiFunction<T, U, R>)((t, u) -> Uncheck.apply(this, t, u));\n+        return (BiFunction<T, U, R>)((o2, o4) -> Uncheck.apply(this, o2, o4));\n     }\n }\n"}]}
