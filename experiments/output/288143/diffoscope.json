{"diffoscope-json-version": 1, "source1": "first/FramedLZ4CompressorInputStream.class", "source2": "second/FramedLZ4CompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,110 +1,110 @@\n-  SHA-256 checksum 50c279d7ea2208eefd9a9e98830d5badb94d927433a9fac7796774bda425f407\n+  SHA-256 checksum 99c5b381963794a9ad855903b98a90462461c1a1de437621622e53163db0fd4c\n   Compiled from \"FramedLZ4CompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream implements org.apache.commons.compress.utils.InputStreamStatistics\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n   super_class: #95                        // org/apache/commons/compress/compressors/CompressorInputStream\n   interfaces: 1, fields: 25, methods: 20, attributes: 3\n Constant pool:\n-    #1 = Class              #186          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-    #2 = Fieldref           #1.#187       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.SKIPPABLE_FRAME_TRAILER:[B\n-    #3 = Fieldref           #1.#188       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.LZ4_SIGNATURE:[B\n-    #4 = Methodref          #189.#190     // java/util/Arrays.copyOf:([BI)[B\n-    #5 = Methodref          #189.#191     // java/util/Arrays.equals:([B[B)Z\n-    #6 = Methodref          #1.#192       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n-    #7 = Methodref          #95.#193      // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n-    #8 = Fieldref           #1.#194       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.oneByte:[B\n-    #9 = InvokeDynamic      #0:#199       // #0:getAsByte:(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-   #10 = Fieldref           #1.#200       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-   #11 = Class              #201          // org/apache/commons/compress/compressors/lz4/XXHash32\n-   #12 = Methodref          #11.#193      // org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n-   #13 = Fieldref           #1.#202       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-   #14 = Fieldref           #1.#203       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-   #15 = Class              #204          // org/apache/commons/compress/utils/CountingInputStream\n-   #16 = Methodref          #15.#205      // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #17 = Fieldref           #1.#206       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-   #18 = Fieldref           #1.#207       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.decompressConcatenated:Z\n-   #19 = Methodref          #1.#208       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.init:(Z)V\n-   #20 = Fieldref           #1.#209       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockDependencyBuffer:[B\n-   #21 = Methodref          #210.#211     // java/lang/Math.min:(II)I\n-   #22 = Methodref          #212.#213     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #23 = Fieldref           #1.#214       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.currentBlock:Ljava/io/InputStream;\n-   #24 = Methodref          #215.#216     // java/io/InputStream.close:()V\n-   #25 = Methodref          #15.#216      // org/apache/commons/compress/utils/CountingInputStream.close:()V\n-   #26 = Methodref          #15.#217      // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n-   #27 = Methodref          #1.#218       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readSignature:(Z)Z\n-   #28 = Methodref          #1.#219       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readFrameDescriptor:()V\n-   #29 = Methodref          #1.#220       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.nextBlock:()V\n-   #30 = Fieldref           #1.#221       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockChecksum:Z\n-   #31 = String             #222          // block\n-   #32 = Methodref          #1.#223       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n-   #33 = Methodref          #11.#224      // org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n-   #34 = Methodref          #1.#225       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.maybeFinishCurrentBlock:()V\n-   #35 = Methodref          #226.#227     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+    #1 = Class              #184          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n+    #2 = Fieldref           #1.#185       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.SKIPPABLE_FRAME_TRAILER:[B\n+    #3 = Fieldref           #1.#186       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.LZ4_SIGNATURE:[B\n+    #4 = Methodref          #187.#188     // java/util/Arrays.copyOf:([BI)[B\n+    #5 = Methodref          #187.#189     // java/util/Arrays.equals:([B[B)Z\n+    #6 = Methodref          #1.#190       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n+    #7 = Methodref          #95.#191      // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+    #8 = Fieldref           #1.#192       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.oneByte:[B\n+    #9 = InvokeDynamic      #0:#197       // #0:getAsByte:(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #10 = Fieldref           #1.#198       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #11 = Class              #199          // org/apache/commons/compress/compressors/lz4/XXHash32\n+   #12 = Methodref          #11.#191      // org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n+   #13 = Fieldref           #1.#200       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+   #14 = Fieldref           #1.#201       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+   #15 = Class              #202          // org/apache/commons/compress/utils/CountingInputStream\n+   #16 = Methodref          #15.#203      // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #17 = Fieldref           #1.#204       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #18 = Fieldref           #1.#205       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.decompressConcatenated:Z\n+   #19 = Methodref          #1.#206       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.init:(Z)V\n+   #20 = Fieldref           #1.#207       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockDependencyBuffer:[B\n+   #21 = Methodref          #208.#209     // java/lang/Math.min:(II)I\n+   #22 = Methodref          #210.#211     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #23 = Fieldref           #1.#212       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.currentBlock:Ljava/io/InputStream;\n+   #24 = Methodref          #166.#213     // java/io/InputStream.close:()V\n+   #25 = Methodref          #15.#213      // org/apache/commons/compress/utils/CountingInputStream.close:()V\n+   #26 = Methodref          #15.#214      // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+   #27 = Methodref          #1.#215       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readSignature:(Z)Z\n+   #28 = Methodref          #1.#216       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readFrameDescriptor:()V\n+   #29 = Methodref          #1.#217       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.nextBlock:()V\n+   #30 = Fieldref           #1.#218       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockChecksum:Z\n+   #31 = String             #219          // block\n+   #32 = Methodref          #1.#220       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+   #33 = Methodref          #11.#221      // org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n+   #34 = Methodref          #1.#222       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.maybeFinishCurrentBlock:()V\n+   #35 = Methodref          #223.#224     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n    #36 = Long               -2147483648l\n    #38 = Long               2147483647l\n-   #40 = Methodref          #1.#228       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyContentChecksum:()V\n-   #41 = Fieldref           #1.#229       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.endReached:Z\n-   #42 = Class              #230          // org/apache/commons/compress/utils/BoundedInputStream\n-   #43 = Methodref          #42.#231      // org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n-   #44 = Class              #232          // org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n-   #45 = Methodref          #44.#233      // org/apache/commons/compress/utils/ChecksumCalculatingInputStream.\"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n-   #46 = Fieldref           #1.#234       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inUncompressed:Z\n-   #47 = Class              #235          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-   #48 = Methodref          #47.#205      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #49 = Fieldref           #1.#236       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockDependency:Z\n-   #50 = Methodref          #47.#237      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V\n-   #51 = Methodref          #1.#238       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.read:([BII)I\n-   #52 = Methodref          #1.#239       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOnce:([BII)I\n-   #53 = Methodref          #1.#240       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.appendToBlockDependencyBuffer:([BII)V\n-   #54 = Fieldref           #1.#241       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentChecksum:Z\n-   #55 = Methodref          #11.#242      // org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n-   #56 = Methodref          #1.#243       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n-   #57 = Class              #244          // java/io/IOException\n-   #58 = String             #245          // Premature end of stream while reading frame flags\n-   #59 = Methodref          #57.#246      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #60 = Methodref          #11.#247      // org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n-   #61 = Class              #248          // java/lang/StringBuilder\n-   #62 = Methodref          #61.#193      // java/lang/StringBuilder.\"<init>\":()V\n-   #63 = String             #249          // Unsupported version\n-   #64 = Methodref          #61.#250      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #65 = Methodref          #61.#251      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #66 = Methodref          #61.#252      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #40 = Methodref          #1.#225       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyContentChecksum:()V\n+   #41 = Fieldref           #1.#226       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.endReached:Z\n+   #42 = Class              #227          // org/apache/commons/compress/utils/BoundedInputStream\n+   #43 = Methodref          #42.#228      // org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n+   #44 = Class              #229          // org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n+   #45 = Methodref          #44.#230      // org/apache/commons/compress/utils/ChecksumCalculatingInputStream.\"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+   #46 = Fieldref           #1.#231       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inUncompressed:Z\n+   #47 = Class              #232          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+   #48 = Methodref          #47.#203      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #49 = Fieldref           #1.#233       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockDependency:Z\n+   #50 = Methodref          #47.#234      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V\n+   #51 = Methodref          #1.#235       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.read:([BII)I\n+   #52 = Methodref          #1.#236       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOnce:([BII)I\n+   #53 = Methodref          #1.#237       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.appendToBlockDependencyBuffer:([BII)V\n+   #54 = Fieldref           #1.#238       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentChecksum:Z\n+   #55 = Methodref          #11.#239      // org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n+   #56 = Methodref          #1.#240       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n+   #57 = Class              #241          // java/io/IOException\n+   #58 = String             #242          // Premature end of stream while reading frame flags\n+   #59 = Methodref          #57.#243      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #60 = Methodref          #11.#244      // org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n+   #61 = Class              #245          // java/lang/StringBuilder\n+   #62 = Methodref          #61.#191      // java/lang/StringBuilder.\"<init>\":()V\n+   #63 = String             #246          // Unsupported version\n+   #64 = Methodref          #61.#247      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #65 = Methodref          #61.#248      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #66 = Methodref          #61.#249      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n    #67 = Integer            65536\n-   #68 = Fieldref           #1.#253       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentSize:Z\n-   #69 = String             #254          // Premature end of stream while reading frame BD byte\n-   #70 = Methodref          #255.#256     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n-   #71 = Methodref          #1.#257       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(I)V\n-   #72 = String             #258          // Premature end of stream while reading content size\n-   #73 = String             #259          // Premature end of stream while reading frame header checksum\n-   #74 = Methodref          #11.#260      // org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n+   #68 = Fieldref           #1.#250       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentSize:Z\n+   #69 = String             #251          // Premature end of stream while reading frame BD byte\n+   #70 = Methodref          #252.#253     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+   #71 = Methodref          #1.#254       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(I)V\n+   #72 = String             #255          // Premature end of stream while reading content size\n+   #73 = String             #256          // Premature end of stream while reading frame header checksum\n+   #74 = Methodref          #11.#257      // org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n    #75 = Long               255l\n-   #77 = String             #261          // Frame header checksum mismatch\n-   #78 = Methodref          #215.#238     // java/io/InputStream.read:([BII)I\n-   #79 = Methodref          #47.#217      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n-   #80 = Methodref          #1.#262       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(J)V\n-   #81 = Methodref          #15.#263      // org/apache/commons/compress/utils/CountingInputStream.read:()I\n-   #82 = String             #264          // Not a LZ4 frame stream\n-   #83 = String             #265          // LZ4 frame stream followed by garbage\n-   #84 = Methodref          #1.#266       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.skipSkippableFrame:([B)I\n-   #85 = Methodref          #1.#267       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.matches:([BI)Z\n-   #86 = Methodref          #1.#268       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.isSkippableFrameSignature:([B)Z\n-   #87 = String             #269          // Found illegal skippable frame with negative size\n-   #88 = Methodref          #255.#270     // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n-   #89 = String             #271          // Premature end of stream while skipping frame\n-   #90 = String             #272          // Premature end of stream while reading\n-   #91 = String             #273          //  checksum\n-   #92 = Methodref          #226.#274     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n-   #93 = String             #275          //  checksum mismatch.\n-   #94 = String             #276          // content\n-   #95 = Class              #277          // org/apache/commons/compress/compressors/CompressorInputStream\n-   #96 = Class              #278          // org/apache/commons/compress/utils/InputStreamStatistics\n+   #77 = String             #258          // Frame header checksum mismatch\n+   #78 = Methodref          #166.#235     // java/io/InputStream.read:([BII)I\n+   #79 = Methodref          #47.#214      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n+   #80 = Methodref          #1.#259       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(J)V\n+   #81 = Methodref          #15.#260      // org/apache/commons/compress/utils/CountingInputStream.read:()I\n+   #82 = String             #261          // Not a LZ4 frame stream\n+   #83 = String             #262          // LZ4 frame stream followed by garbage\n+   #84 = Methodref          #1.#263       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.skipSkippableFrame:([B)I\n+   #85 = Methodref          #1.#264       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.matches:([BI)Z\n+   #86 = Methodref          #1.#265       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.isSkippableFrameSignature:([B)Z\n+   #87 = String             #266          // Found illegal skippable frame with negative size\n+   #88 = Methodref          #252.#267     // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+   #89 = String             #268          // Premature end of stream while skipping frame\n+   #90 = String             #269          // Premature end of stream while reading\n+   #91 = String             #270          //  checksum\n+   #92 = Methodref          #223.#271     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n+   #93 = String             #272          //  checksum mismatch.\n+   #94 = String             #273          // content\n+   #95 = Class              #274          // org/apache/commons/compress/compressors/CompressorInputStream\n+   #96 = Class              #275          // org/apache/commons/compress/utils/InputStreamStatistics\n    #97 = Utf8               LZ4_SIGNATURE\n    #98 = Utf8               [B\n    #99 = Utf8               SKIPPABLE_FRAME_TRAILER\n   #100 = Utf8               SKIPPABLE_FRAME_PREFIX_BYTE_MASK\n   #101 = Utf8               B\n   #102 = Utf8               ConstantValue\n   #103 = Integer            80\n@@ -123,15 +123,15 @@\n   #116 = Integer            4\n   #117 = Utf8               BLOCK_MAX_SIZE_MASK\n   #118 = Integer            112\n   #119 = Utf8               UNCOMPRESSED_FLAG_MASK\n   #120 = Integer            -2147483648\n   #121 = Utf8               oneByte\n   #122 = Utf8               supplier\n-  #123 = Class              #279          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #123 = Class              #276          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n   #124 = Utf8               ByteSupplier\n   #125 = Utf8               InnerClasses\n   #126 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n   #127 = Utf8               inputStream\n   #128 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n   #129 = Utf8               decompressConcatenated\n   #130 = Utf8               Z\n@@ -159,188 +159,185 @@\n   #152 = Utf8               (Ljava/io/InputStream;)V\n   #153 = Utf8               Exceptions\n   #154 = Utf8               (Ljava/io/InputStream;Z)V\n   #155 = Utf8               appendToBlockDependencyBuffer\n   #156 = Utf8               ([BII)V\n   #157 = Utf8               close\n   #158 = Utf8               ()V\n-  #159 = Class              #280          // java/lang/Throwable\n+  #159 = Class              #277          // java/lang/Throwable\n   #160 = Utf8               getCompressedCount\n   #161 = Utf8               ()J\n   #162 = Utf8               init\n   #163 = Utf8               (Z)V\n   #164 = Utf8               maybeFinishCurrentBlock\n   #165 = Utf8               nextBlock\n-  #166 = Class              #281          // java/io/InputStream\n-  #167 = Class              #235          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-  #168 = Utf8               read\n-  #169 = Utf8               ()I\n-  #170 = Utf8               ([BII)I\n-  #171 = Utf8               readFrameDescriptor\n-  #172 = Class              #186          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-  #173 = Utf8               readOnce\n-  #174 = Utf8               readOneByte\n-  #175 = Utf8               readSignature\n-  #176 = Utf8               (Z)Z\n-  #177 = Class              #282          // java/lang/String\n-  #178 = Utf8               skipSkippableFrame\n-  #179 = Utf8               ([B)I\n-  #180 = Utf8               verifyChecksum\n-  #181 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n-  #182 = Utf8               verifyContentChecksum\n-  #183 = Utf8               <clinit>\n-  #184 = Utf8               SourceFile\n-  #185 = Utf8               FramedLZ4CompressorInputStream.java\n-  #186 = Utf8               org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-  #187 = NameAndType        #99:#98       // SKIPPABLE_FRAME_TRAILER:[B\n-  #188 = NameAndType        #97:#98       // LZ4_SIGNATURE:[B\n-  #189 = Class              #283          // java/util/Arrays\n-  #190 = NameAndType        #284:#285     // copyOf:([BI)[B\n-  #191 = NameAndType        #286:#287     // equals:([B[B)Z\n-  #192 = NameAndType        #151:#154     // \"<init>\":(Ljava/io/InputStream;Z)V\n-  #193 = NameAndType        #151:#158     // \"<init>\":()V\n-  #194 = NameAndType        #121:#98      // oneByte:[B\n-  #195 = Utf8               BootstrapMethods\n-  #196 = MethodHandle       6:#288        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #197 = MethodType         #169          //  ()I\n-  #198 = MethodHandle       7:#56         // REF_invokeSpecial org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n-  #199 = NameAndType        #289:#290     // getAsByte:(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #200 = NameAndType        #122:#126     // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #201 = Utf8               org/apache/commons/compress/compressors/lz4/XXHash32\n-  #202 = NameAndType        #139:#140     // contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-  #203 = NameAndType        #141:#140     // blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-  #204 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n-  #205 = NameAndType        #151:#152     // \"<init>\":(Ljava/io/InputStream;)V\n-  #206 = NameAndType        #127:#128     // inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-  #207 = NameAndType        #129:#130     // decompressConcatenated:Z\n-  #208 = NameAndType        #162:#163     // init:(Z)V\n-  #209 = NameAndType        #142:#98      // blockDependencyBuffer:[B\n-  #210 = Class              #291          // java/lang/Math\n-  #211 = NameAndType        #292:#293     // min:(II)I\n-  #212 = Class              #294          // java/lang/System\n-  #213 = NameAndType        #295:#296     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #214 = NameAndType        #135:#136     // currentBlock:Ljava/io/InputStream;\n-  #215 = Class              #281          // java/io/InputStream\n-  #216 = NameAndType        #157:#158     // close:()V\n-  #217 = NameAndType        #297:#161     // getBytesRead:()J\n-  #218 = NameAndType        #175:#176     // readSignature:(Z)Z\n-  #219 = NameAndType        #171:#158     // readFrameDescriptor:()V\n-  #220 = NameAndType        #165:#158     // nextBlock:()V\n-  #221 = NameAndType        #131:#130     // expectBlockChecksum:Z\n-  #222 = Utf8               block\n-  #223 = NameAndType        #180:#181     // verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n-  #224 = NameAndType        #298:#158     // reset:()V\n-  #225 = NameAndType        #164:#158     // maybeFinishCurrentBlock:()V\n-  #226 = Class              #299          // org/apache/commons/compress/utils/ByteUtils\n-  #227 = NameAndType        #300:#301     // fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-  #228 = NameAndType        #182:#158     // verifyContentChecksum:()V\n-  #229 = NameAndType        #137:#130     // endReached:Z\n-  #230 = Utf8               org/apache/commons/compress/utils/BoundedInputStream\n-  #231 = NameAndType        #151:#302     // \"<init>\":(Ljava/io/InputStream;J)V\n-  #232 = Utf8               org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n-  #233 = NameAndType        #151:#303     // \"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n-  #234 = NameAndType        #138:#130     // inUncompressed:Z\n-  #235 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-  #236 = NameAndType        #132:#130     // expectBlockDependency:Z\n-  #237 = NameAndType        #304:#305     // prefill:([B)V\n-  #238 = NameAndType        #168:#170     // read:([BII)I\n-  #239 = NameAndType        #173:#170     // readOnce:([BII)I\n-  #240 = NameAndType        #155:#156     // appendToBlockDependencyBuffer:([BII)V\n-  #241 = NameAndType        #134:#130     // expectContentChecksum:Z\n-  #242 = NameAndType        #306:#156     // update:([BII)V\n-  #243 = NameAndType        #174:#169     // readOneByte:()I\n-  #244 = Utf8               java/io/IOException\n-  #245 = Utf8               Premature end of stream while reading frame flags\n-  #246 = NameAndType        #151:#307     // \"<init>\":(Ljava/lang/String;)V\n-  #247 = NameAndType        #306:#308     // update:(I)V\n-  #248 = Utf8               java/lang/StringBuilder\n-  #249 = Utf8               Unsupported version\n-  #250 = NameAndType        #309:#310     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #251 = NameAndType        #309:#311     // append:(I)Ljava/lang/StringBuilder;\n-  #252 = NameAndType        #312:#313     // toString:()Ljava/lang/String;\n-  #253 = NameAndType        #133:#130     // expectContentSize:Z\n-  #254 = Utf8               Premature end of stream while reading frame BD byte\n-  #255 = Class              #314          // org/apache/commons/compress/utils/IOUtils\n-  #256 = NameAndType        #315:#316     // readFully:(Ljava/io/InputStream;[B)I\n-  #257 = NameAndType        #317:#308     // count:(I)V\n-  #258 = Utf8               Premature end of stream while reading content size\n-  #259 = Utf8               Premature end of stream while reading frame header checksum\n-  #260 = NameAndType        #318:#161     // getValue:()J\n-  #261 = Utf8               Frame header checksum mismatch\n-  #262 = NameAndType        #317:#319     // count:(J)V\n-  #263 = NameAndType        #168:#169     // read:()I\n-  #264 = Utf8               Not a LZ4 frame stream\n-  #265 = Utf8               LZ4 frame stream followed by garbage\n-  #266 = NameAndType        #178:#179     // skipSkippableFrame:([B)I\n-  #267 = NameAndType        #148:#149     // matches:([BI)Z\n-  #268 = NameAndType        #143:#144     // isSkippableFrameSignature:([B)Z\n-  #269 = Utf8               Found illegal skippable frame with negative size\n-  #270 = NameAndType        #320:#321     // skip:(Ljava/io/InputStream;J)J\n-  #271 = Utf8               Premature end of stream while skipping frame\n-  #272 = Utf8               Premature end of stream while reading\n-  #273 = Utf8                checksum\n-  #274 = NameAndType        #300:#322     // fromLittleEndian:([B)J\n-  #275 = Utf8                checksum mismatch.\n-  #276 = Utf8               content\n-  #277 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n-  #278 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n-  #279 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-  #280 = Utf8               java/lang/Throwable\n-  #281 = Utf8               java/io/InputStream\n-  #282 = Utf8               java/lang/String\n-  #283 = Utf8               java/util/Arrays\n-  #284 = Utf8               copyOf\n-  #285 = Utf8               ([BI)[B\n-  #286 = Utf8               equals\n-  #287 = Utf8               ([B[B)Z\n-  #288 = Methodref          #323.#324     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #289 = Utf8               getAsByte\n-  #290 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #291 = Utf8               java/lang/Math\n-  #292 = Utf8               min\n-  #293 = Utf8               (II)I\n-  #294 = Utf8               java/lang/System\n-  #295 = Utf8               arraycopy\n-  #296 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #297 = Utf8               getBytesRead\n-  #298 = Utf8               reset\n-  #299 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #300 = Utf8               fromLittleEndian\n-  #301 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-  #302 = Utf8               (Ljava/io/InputStream;J)V\n-  #303 = Utf8               (Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n-  #304 = Utf8               prefill\n-  #305 = Utf8               ([B)V\n-  #306 = Utf8               update\n-  #307 = Utf8               (Ljava/lang/String;)V\n-  #308 = Utf8               (I)V\n-  #309 = Utf8               append\n-  #310 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #311 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #312 = Utf8               toString\n-  #313 = Utf8               ()Ljava/lang/String;\n-  #314 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #315 = Utf8               readFully\n-  #316 = Utf8               (Ljava/io/InputStream;[B)I\n-  #317 = Utf8               count\n-  #318 = Utf8               getValue\n-  #319 = Utf8               (J)V\n-  #320 = Utf8               skip\n-  #321 = Utf8               (Ljava/io/InputStream;J)J\n-  #322 = Utf8               ([B)J\n-  #323 = Class              #325          // java/lang/invoke/LambdaMetafactory\n-  #324 = NameAndType        #326:#329     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #325 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #326 = Utf8               metafactory\n-  #327 = Class              #331          // java/lang/invoke/MethodHandles$Lookup\n-  #328 = Utf8               Lookup\n-  #329 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #330 = Class              #332          // java/lang/invoke/MethodHandles\n-  #331 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #332 = Utf8               java/lang/invoke/MethodHandles\n+  #166 = Class              #278          // java/io/InputStream\n+  #167 = Utf8               read\n+  #168 = Utf8               ()I\n+  #169 = Utf8               ([BII)I\n+  #170 = Utf8               readFrameDescriptor\n+  #171 = Utf8               readOnce\n+  #172 = Utf8               readOneByte\n+  #173 = Utf8               readSignature\n+  #174 = Utf8               (Z)Z\n+  #175 = Class              #279          // java/lang/String\n+  #176 = Utf8               skipSkippableFrame\n+  #177 = Utf8               ([B)I\n+  #178 = Utf8               verifyChecksum\n+  #179 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+  #180 = Utf8               verifyContentChecksum\n+  #181 = Utf8               <clinit>\n+  #182 = Utf8               SourceFile\n+  #183 = Utf8               FramedLZ4CompressorInputStream.java\n+  #184 = Utf8               org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n+  #185 = NameAndType        #99:#98       // SKIPPABLE_FRAME_TRAILER:[B\n+  #186 = NameAndType        #97:#98       // LZ4_SIGNATURE:[B\n+  #187 = Class              #280          // java/util/Arrays\n+  #188 = NameAndType        #281:#282     // copyOf:([BI)[B\n+  #189 = NameAndType        #283:#284     // equals:([B[B)Z\n+  #190 = NameAndType        #151:#154     // \"<init>\":(Ljava/io/InputStream;Z)V\n+  #191 = NameAndType        #151:#158     // \"<init>\":()V\n+  #192 = NameAndType        #121:#98      // oneByte:[B\n+  #193 = Utf8               BootstrapMethods\n+  #194 = MethodHandle       6:#285        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #195 = MethodType         #168          //  ()I\n+  #196 = MethodHandle       7:#56         // REF_invokeSpecial org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n+  #197 = NameAndType        #286:#287     // getAsByte:(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+  #198 = NameAndType        #122:#126     // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+  #199 = Utf8               org/apache/commons/compress/compressors/lz4/XXHash32\n+  #200 = NameAndType        #139:#140     // contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+  #201 = NameAndType        #141:#140     // blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+  #202 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n+  #203 = NameAndType        #151:#152     // \"<init>\":(Ljava/io/InputStream;)V\n+  #204 = NameAndType        #127:#128     // inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+  #205 = NameAndType        #129:#130     // decompressConcatenated:Z\n+  #206 = NameAndType        #162:#163     // init:(Z)V\n+  #207 = NameAndType        #142:#98      // blockDependencyBuffer:[B\n+  #208 = Class              #288          // java/lang/Math\n+  #209 = NameAndType        #289:#290     // min:(II)I\n+  #210 = Class              #291          // java/lang/System\n+  #211 = NameAndType        #292:#293     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #212 = NameAndType        #135:#136     // currentBlock:Ljava/io/InputStream;\n+  #213 = NameAndType        #157:#158     // close:()V\n+  #214 = NameAndType        #294:#161     // getBytesRead:()J\n+  #215 = NameAndType        #173:#174     // readSignature:(Z)Z\n+  #216 = NameAndType        #170:#158     // readFrameDescriptor:()V\n+  #217 = NameAndType        #165:#158     // nextBlock:()V\n+  #218 = NameAndType        #131:#130     // expectBlockChecksum:Z\n+  #219 = Utf8               block\n+  #220 = NameAndType        #178:#179     // verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+  #221 = NameAndType        #295:#158     // reset:()V\n+  #222 = NameAndType        #164:#158     // maybeFinishCurrentBlock:()V\n+  #223 = Class              #296          // org/apache/commons/compress/utils/ByteUtils\n+  #224 = NameAndType        #297:#298     // fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #225 = NameAndType        #180:#158     // verifyContentChecksum:()V\n+  #226 = NameAndType        #137:#130     // endReached:Z\n+  #227 = Utf8               org/apache/commons/compress/utils/BoundedInputStream\n+  #228 = NameAndType        #151:#299     // \"<init>\":(Ljava/io/InputStream;J)V\n+  #229 = Utf8               org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n+  #230 = NameAndType        #151:#300     // \"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+  #231 = NameAndType        #138:#130     // inUncompressed:Z\n+  #232 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+  #233 = NameAndType        #132:#130     // expectBlockDependency:Z\n+  #234 = NameAndType        #301:#302     // prefill:([B)V\n+  #235 = NameAndType        #167:#169     // read:([BII)I\n+  #236 = NameAndType        #171:#169     // readOnce:([BII)I\n+  #237 = NameAndType        #155:#156     // appendToBlockDependencyBuffer:([BII)V\n+  #238 = NameAndType        #134:#130     // expectContentChecksum:Z\n+  #239 = NameAndType        #303:#156     // update:([BII)V\n+  #240 = NameAndType        #172:#168     // readOneByte:()I\n+  #241 = Utf8               java/io/IOException\n+  #242 = Utf8               Premature end of stream while reading frame flags\n+  #243 = NameAndType        #151:#304     // \"<init>\":(Ljava/lang/String;)V\n+  #244 = NameAndType        #303:#305     // update:(I)V\n+  #245 = Utf8               java/lang/StringBuilder\n+  #246 = Utf8               Unsupported version\n+  #247 = NameAndType        #306:#307     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #248 = NameAndType        #306:#308     // append:(I)Ljava/lang/StringBuilder;\n+  #249 = NameAndType        #309:#310     // toString:()Ljava/lang/String;\n+  #250 = NameAndType        #133:#130     // expectContentSize:Z\n+  #251 = Utf8               Premature end of stream while reading frame BD byte\n+  #252 = Class              #311          // org/apache/commons/compress/utils/IOUtils\n+  #253 = NameAndType        #312:#313     // readFully:(Ljava/io/InputStream;[B)I\n+  #254 = NameAndType        #314:#305     // count:(I)V\n+  #255 = Utf8               Premature end of stream while reading content size\n+  #256 = Utf8               Premature end of stream while reading frame header checksum\n+  #257 = NameAndType        #315:#161     // getValue:()J\n+  #258 = Utf8               Frame header checksum mismatch\n+  #259 = NameAndType        #314:#316     // count:(J)V\n+  #260 = NameAndType        #167:#168     // read:()I\n+  #261 = Utf8               Not a LZ4 frame stream\n+  #262 = Utf8               LZ4 frame stream followed by garbage\n+  #263 = NameAndType        #176:#177     // skipSkippableFrame:([B)I\n+  #264 = NameAndType        #148:#149     // matches:([BI)Z\n+  #265 = NameAndType        #143:#144     // isSkippableFrameSignature:([B)Z\n+  #266 = Utf8               Found illegal skippable frame with negative size\n+  #267 = NameAndType        #317:#318     // skip:(Ljava/io/InputStream;J)J\n+  #268 = Utf8               Premature end of stream while skipping frame\n+  #269 = Utf8               Premature end of stream while reading\n+  #270 = Utf8                checksum\n+  #271 = NameAndType        #297:#319     // fromLittleEndian:([B)J\n+  #272 = Utf8                checksum mismatch.\n+  #273 = Utf8               content\n+  #274 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n+  #275 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n+  #276 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #277 = Utf8               java/lang/Throwable\n+  #278 = Utf8               java/io/InputStream\n+  #279 = Utf8               java/lang/String\n+  #280 = Utf8               java/util/Arrays\n+  #281 = Utf8               copyOf\n+  #282 = Utf8               ([BI)[B\n+  #283 = Utf8               equals\n+  #284 = Utf8               ([B[B)Z\n+  #285 = Methodref          #320.#321     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #286 = Utf8               getAsByte\n+  #287 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+  #288 = Utf8               java/lang/Math\n+  #289 = Utf8               min\n+  #290 = Utf8               (II)I\n+  #291 = Utf8               java/lang/System\n+  #292 = Utf8               arraycopy\n+  #293 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #294 = Utf8               getBytesRead\n+  #295 = Utf8               reset\n+  #296 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #297 = Utf8               fromLittleEndian\n+  #298 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #299 = Utf8               (Ljava/io/InputStream;J)V\n+  #300 = Utf8               (Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+  #301 = Utf8               prefill\n+  #302 = Utf8               ([B)V\n+  #303 = Utf8               update\n+  #304 = Utf8               (Ljava/lang/String;)V\n+  #305 = Utf8               (I)V\n+  #306 = Utf8               append\n+  #307 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #308 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #309 = Utf8               toString\n+  #310 = Utf8               ()Ljava/lang/String;\n+  #311 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #312 = Utf8               readFully\n+  #313 = Utf8               (Ljava/io/InputStream;[B)I\n+  #314 = Utf8               count\n+  #315 = Utf8               getValue\n+  #316 = Utf8               (J)V\n+  #317 = Utf8               skip\n+  #318 = Utf8               (Ljava/io/InputStream;J)J\n+  #319 = Utf8               ([B)J\n+  #320 = Class              #322          // java/lang/invoke/LambdaMetafactory\n+  #321 = NameAndType        #323:#326     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #322 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #323 = Utf8               metafactory\n+  #324 = Class              #328          // java/lang/invoke/MethodHandles$Lookup\n+  #325 = Utf8               Lookup\n+  #326 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #327 = Class              #329          // java/lang/invoke/MethodHandles\n+  #328 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #329 = Utf8               java/lang/invoke/MethodHandles\n {\n   static final byte[] LZ4_SIGNATURE;\n     descriptor: [B\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n \n   private static final byte[] SKIPPABLE_FRAME_TRAILER;\n     descriptor: [B\n@@ -1689,15 +1686,15 @@\n         46: return\n       LineNumberTable:\n         line 46: 0\n         line 49: 25\n }\n SourceFile: \"FramedLZ4CompressorInputStream.java\"\n InnerClasses:\n-  public static #124= #123 of #226;       // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n-  public static final #328= #327 of #330; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  public static #124= #123 of #223;       // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n+  public static final #325= #324 of #327; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #196 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #194 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #197 ()I\n-      #198 REF_invokeSpecial org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n-      #197 ()I\n+      #195 ()I\n+      #196 REF_invokeSpecial org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n+      #195 ()I\n"}]}
