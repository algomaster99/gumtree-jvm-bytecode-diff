{"diffoscope-json-version": 1, "source1": "first/ParallelScatterZipCreator.class", "source2": "second/ParallelScatterZipCreator.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,88 +1,88 @@\n-  SHA-256 checksum 3bd2c05350ebcdf033380c08484df4d1d154a9564767218e6fbb94560cf0eeef\n+  SHA-256 checksum ef1c0bac8c11640283a63e4866b560cbfebf35fc5585333cb931b134081be394\n   Compiled from \"ParallelScatterZipCreator.java\"\n public class org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #71                         // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator\n   super_class: #72                        // java/lang/Object\n   interfaces: 0, fields: 9, methods: 20, attributes: 3\n Constant pool:\n-    #1 = Fieldref           #71.#147      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.streams:Ljava/util/Deque;\n-    #2 = Methodref          #71.#148      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.createDeferred:(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-    #3 = Fieldref           #71.#149      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.backingStoreSupplier:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;\n-    #4 = InterfaceMethodref #150.#151     // org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier.get:()Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n-    #5 = Fieldref           #71.#152      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.compressionLevel:I\n-    #6 = Methodref          #153.#154     // org/apache/commons/compress/archivers/zip/StreamCompressor.create:(ILorg/apache/commons/compress/parallel/ScatterGatherBackingStore;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n-    #7 = Class              #155          // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n-    #8 = Methodref          #7.#156       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.\"<init>\":(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;Lorg/apache/commons/compress/archivers/zip/StreamCompressor;)V\n-    #9 = Methodref          #157.#158     // java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;\n-   #10 = Methodref          #157.#159     // java/lang/Runtime.availableProcessors:()I\n-   #11 = Methodref          #160.#161     // java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;\n-   #12 = Methodref          #71.#162      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.\"<init>\":(Ljava/util/concurrent/ExecutorService;)V\n-   #13 = Class              #163          // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier\n-   #14 = Methodref          #13.#164      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1;)V\n-   #15 = Methodref          #71.#165      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.\"<init>\":(Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)V\n-   #16 = Class              #166          // java/util/zip/Deflater\n-   #17 = Methodref          #71.#167      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.\"<init>\":(Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;I)V\n-   #18 = Methodref          #72.#168      // java/lang/Object.\"<init>\":()V\n-   #19 = Class              #169          // java/util/concurrent/ConcurrentLinkedDeque\n-   #20 = Methodref          #19.#168      // java/util/concurrent/ConcurrentLinkedDeque.\"<init>\":()V\n-   #21 = Fieldref           #71.#170      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.futures:Ljava/util/Deque;\n-   #22 = Methodref          #171.#172     // java/lang/System.currentTimeMillis:()J\n-   #23 = Fieldref           #71.#173      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.startedAt:J\n-   #24 = Class              #174          // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1\n-   #25 = Methodref          #24.#175      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;)V\n-   #26 = Fieldref           #71.#176      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.tlScatterStreams:Ljava/lang/ThreadLocal;\n-   #27 = Class              #177          // java/lang/IllegalArgumentException\n-   #28 = String             #178          // Compression level is expected between -1~9\n-   #29 = Methodref          #27.#179      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #30 = Fieldref           #71.#180      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.es:Ljava/util/concurrent/ExecutorService;\n-   #31 = Methodref          #71.#181      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.createCallable:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Ljava/util/concurrent/Callable;\n-   #32 = Methodref          #71.#182      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.submitStreamAwareCallable:(Ljava/util/concurrent/Callable;)V\n-   #33 = Methodref          #71.#183      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.createCallable:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n-   #34 = InvokeDynamic      #0:#189       // #0:call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;\n-   #35 = InterfaceMethodref #190.#191     // java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n-   #36 = InterfaceMethodref #192.#193     // java/util/Deque.add:(Ljava/lang/Object;)Z\n-   #37 = Methodref          #194.#195     // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n-   #38 = Class              #196          // org/apache/commons/compress/archivers/zip/ZipMethod\n-   #39 = Class              #197          // java/lang/StringBuilder\n-   #40 = Methodref          #39.#168      // java/lang/StringBuilder.\"<init>\":()V\n-   #41 = String             #198          // Method must be set on zipArchiveEntry:\n-   #42 = Methodref          #39.#199      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #43 = Methodref          #39.#200      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #44 = Methodref          #39.#201      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #45 = Methodref          #202.#203     // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.createZipArchiveEntryRequest:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n-   #46 = InvokeDynamic      #1:#205       // #1:call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Ljava/util/concurrent/Callable;\n-   #47 = InvokeDynamic      #2:#207       // #2:call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n-   #48 = InterfaceMethodref #192.#208     // java/util/Deque.iterator:()Ljava/util/Iterator;\n-   #49 = InterfaceMethodref #209.#210     // java/util/Iterator.hasNext:()Z\n-   #50 = InterfaceMethodref #209.#211     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #51 = Class              #212          // java/util/concurrent/Future\n-   #52 = InterfaceMethodref #51.#213      // java/util/concurrent/Future.get:()Ljava/lang/Object;\n-   #53 = InterfaceMethodref #190.#214     // java/util/concurrent/ExecutorService.shutdown:()V\n+    #1 = Fieldref           #71.#144      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.streams:Ljava/util/Deque;\n+    #2 = Methodref          #71.#145      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.createDeferred:(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+    #3 = Fieldref           #71.#146      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.backingStoreSupplier:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;\n+    #4 = InterfaceMethodref #106.#147     // org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier.get:()Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n+    #5 = Fieldref           #71.#148      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.compressionLevel:I\n+    #6 = Methodref          #149.#150     // org/apache/commons/compress/archivers/zip/StreamCompressor.create:(ILorg/apache/commons/compress/parallel/ScatterGatherBackingStore;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n+    #7 = Class              #151          // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n+    #8 = Methodref          #7.#152       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.\"<init>\":(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;Lorg/apache/commons/compress/archivers/zip/StreamCompressor;)V\n+    #9 = Methodref          #153.#154     // java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;\n+   #10 = Methodref          #153.#155     // java/lang/Runtime.availableProcessors:()I\n+   #11 = Methodref          #156.#157     // java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;\n+   #12 = Methodref          #71.#158      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.\"<init>\":(Ljava/util/concurrent/ExecutorService;)V\n+   #13 = Class              #159          // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier\n+   #14 = Methodref          #13.#160      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1;)V\n+   #15 = Methodref          #71.#161      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.\"<init>\":(Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)V\n+   #16 = Class              #162          // java/util/zip/Deflater\n+   #17 = Methodref          #71.#163      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.\"<init>\":(Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;I)V\n+   #18 = Methodref          #72.#164      // java/lang/Object.\"<init>\":()V\n+   #19 = Class              #165          // java/util/concurrent/ConcurrentLinkedDeque\n+   #20 = Methodref          #19.#164      // java/util/concurrent/ConcurrentLinkedDeque.\"<init>\":()V\n+   #21 = Fieldref           #71.#166      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.futures:Ljava/util/Deque;\n+   #22 = Methodref          #167.#168     // java/lang/System.currentTimeMillis:()J\n+   #23 = Fieldref           #71.#169      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.startedAt:J\n+   #24 = Class              #170          // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1\n+   #25 = Methodref          #24.#171      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;)V\n+   #26 = Fieldref           #71.#172      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.tlScatterStreams:Ljava/lang/ThreadLocal;\n+   #27 = Class              #173          // java/lang/IllegalArgumentException\n+   #28 = String             #174          // Compression level is expected between -1~9\n+   #29 = Methodref          #27.#175      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #30 = Fieldref           #71.#176      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.es:Ljava/util/concurrent/ExecutorService;\n+   #31 = Methodref          #71.#177      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.createCallable:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Ljava/util/concurrent/Callable;\n+   #32 = Methodref          #71.#178      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.submitStreamAwareCallable:(Ljava/util/concurrent/Callable;)V\n+   #33 = Methodref          #71.#179      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.createCallable:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n+   #34 = InvokeDynamic      #0:#185       // #0:call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;\n+   #35 = InterfaceMethodref #105.#186     // java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n+   #36 = InterfaceMethodref #187.#188     // java/util/Deque.add:(Ljava/lang/Object;)Z\n+   #37 = Methodref          #189.#190     // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n+   #38 = Class              #191          // org/apache/commons/compress/archivers/zip/ZipMethod\n+   #39 = Class              #192          // java/lang/StringBuilder\n+   #40 = Methodref          #39.#164      // java/lang/StringBuilder.\"<init>\":()V\n+   #41 = String             #193          // Method must be set on zipArchiveEntry:\n+   #42 = Methodref          #39.#194      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #43 = Methodref          #39.#195      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #44 = Methodref          #39.#196      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #45 = Methodref          #197.#198     // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.createZipArchiveEntryRequest:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n+   #46 = InvokeDynamic      #1:#200       // #1:call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Ljava/util/concurrent/Callable;\n+   #47 = InvokeDynamic      #2:#202       // #2:call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n+   #48 = InterfaceMethodref #187.#203     // java/util/Deque.iterator:()Ljava/util/Iterator;\n+   #49 = InterfaceMethodref #122.#204     // java/util/Iterator.hasNext:()Z\n+   #50 = InterfaceMethodref #122.#205     // java/util/Iterator.next:()Ljava/lang/Object;\n+   #51 = Class              #206          // java/util/concurrent/Future\n+   #52 = InterfaceMethodref #51.#207      // java/util/concurrent/Future.get:()Ljava/lang/Object;\n+   #53 = InterfaceMethodref #105.#208     // java/util/concurrent/ExecutorService.shutdown:()V\n    #54 = Long               60000l\n-   #56 = Fieldref           #215.#216     // java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;\n-   #57 = InterfaceMethodref #190.#217     // java/util/concurrent/ExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z\n-   #58 = Fieldref           #71.#218      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.compressionDoneAt:J\n-   #59 = Methodref          #7.#219       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.zipEntryWriter:()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;\n-   #60 = Methodref          #220.#221     // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter.writeNextZipEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V\n-   #61 = Methodref          #7.#222       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.close:()V\n-   #62 = Fieldref           #71.#223      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.scatterDoneAt:J\n-   #63 = Methodref          #71.#224      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.closeAll:()V\n-   #64 = Class              #225          // org/apache/commons/compress/archivers/zip/ScatterStatistics\n-   #65 = Methodref          #64.#226      // org/apache/commons/compress/archivers/zip/ScatterStatistics.\"<init>\":(JJ)V\n-   #66 = Class              #227          // java/io/IOException\n-   #67 = Methodref          #228.#213     // java/lang/ThreadLocal.get:()Ljava/lang/Object;\n-   #68 = InterfaceMethodref #229.#230     // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier.get:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n-   #69 = Methodref          #7.#231       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.addArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)V\n-   #70 = InterfaceMethodref #232.#233     // java/util/concurrent/Callable.call:()Ljava/lang/Object;\n-   #71 = Class              #234          // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator\n-   #72 = Class              #235          // java/lang/Object\n+   #56 = Fieldref           #209.#210     // java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;\n+   #57 = InterfaceMethodref #105.#211     // java/util/concurrent/ExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z\n+   #58 = Fieldref           #71.#212      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.compressionDoneAt:J\n+   #59 = Methodref          #7.#213       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.zipEntryWriter:()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;\n+   #60 = Methodref          #214.#215     // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter.writeNextZipEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V\n+   #61 = Methodref          #7.#216       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.close:()V\n+   #62 = Fieldref           #71.#217      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.scatterDoneAt:J\n+   #63 = Methodref          #71.#218      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.closeAll:()V\n+   #64 = Class              #219          // org/apache/commons/compress/archivers/zip/ScatterStatistics\n+   #65 = Methodref          #64.#220      // org/apache/commons/compress/archivers/zip/ScatterStatistics.\"<init>\":(JJ)V\n+   #66 = Class              #221          // java/io/IOException\n+   #67 = Methodref          #222.#207     // java/lang/ThreadLocal.get:()Ljava/lang/Object;\n+   #68 = InterfaceMethodref #223.#224     // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier.get:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n+   #69 = Methodref          #7.#225       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.addArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)V\n+   #70 = InterfaceMethodref #226.#227     // java/util/concurrent/Callable.call:()Ljava/lang/Object;\n+   #71 = Class              #228          // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator\n+   #72 = Class              #229          // java/lang/Object\n    #73 = Utf8               DefaultBackingStoreSupplier\n    #74 = Utf8               InnerClasses\n    #75 = Utf8               streams\n    #76 = Utf8               Ljava/util/Deque;\n    #77 = Utf8               Signature\n    #78 = Utf8               Ljava/util/Deque<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n    #79 = Utf8               es\n@@ -107,232 +107,226 @@\n    #98 = Utf8               Exceptions\n    #99 = Utf8               <init>\n   #100 = Utf8               ()V\n   #101 = Utf8               (Ljava/util/concurrent/ExecutorService;)V\n   #102 = Utf8               (Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)V\n   #103 = Utf8               (Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;I)V\n   #104 = Utf8               StackMapTable\n-  #105 = Class              #234          // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator\n-  #106 = Class              #236          // java/util/concurrent/ExecutorService\n-  #107 = Class              #237          // org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier\n-  #108 = Utf8               addArchiveEntry\n-  #109 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)V\n-  #110 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)V\n-  #111 = Utf8               submit\n-  #112 = Utf8               (Ljava/util/concurrent/Callable;)V\n-  #113 = Utf8               (Ljava/util/concurrent/Callable<+Ljava/lang/Object;>;)V\n-  #114 = Utf8               submitStreamAwareCallable\n-  #115 = Utf8               (Ljava/util/concurrent/Callable<+Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;)V\n-  #116 = Utf8               createCallable\n-  #117 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Ljava/util/concurrent/Callable;\n-  #118 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Ljava/util/concurrent/Callable<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n-  #119 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n-  #120 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n-  #121 = Utf8               writeTo\n-  #122 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V\n-  #123 = Class              #238          // java/util/Iterator\n-  #124 = Class              #239          // java/lang/Throwable\n-  #125 = Class              #240          // java/lang/InterruptedException\n-  #126 = Class              #241          // java/util/concurrent/ExecutionException\n-  #127 = Utf8               getStatisticsMessage\n-  #128 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ScatterStatistics;\n-  #129 = Utf8               closeAll\n-  #130 = Class              #155          // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n-  #131 = Class              #227          // java/io/IOException\n-  #132 = Utf8               lambda$createCallable$2\n-  #133 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #134 = Class              #242          // java/lang/Exception\n-  #135 = Utf8               lambda$createCallable$1\n-  #136 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #137 = Utf8               lambda$submit$0\n-  #138 = Utf8               (Ljava/util/concurrent/Callable;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #139 = Utf8               access$000\n-  #140 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;)Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;\n-  #141 = Utf8               access$100\n-  #142 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #143 = Utf8               access$200\n-  #144 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;)Ljava/util/Deque;\n-  #145 = Utf8               SourceFile\n-  #146 = Utf8               ParallelScatterZipCreator.java\n-  #147 = NameAndType        #75:#76       // streams:Ljava/util/Deque;\n-  #148 = NameAndType        #94:#95       // createDeferred:(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #149 = NameAndType        #81:#82       // backingStoreSupplier:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;\n-  #150 = Class              #237          // org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier\n-  #151 = NameAndType        #243:#244     // get:()Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n-  #152 = NameAndType        #89:#90       // compressionLevel:I\n-  #153 = Class              #245          // org/apache/commons/compress/archivers/zip/StreamCompressor\n-  #154 = NameAndType        #246:#247     // create:(ILorg/apache/commons/compress/parallel/ScatterGatherBackingStore;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n-  #155 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n-  #156 = NameAndType        #99:#248      // \"<init>\":(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;Lorg/apache/commons/compress/archivers/zip/StreamCompressor;)V\n-  #157 = Class              #249          // java/lang/Runtime\n-  #158 = NameAndType        #250:#251     // getRuntime:()Ljava/lang/Runtime;\n-  #159 = NameAndType        #252:#253     // availableProcessors:()I\n-  #160 = Class              #254          // java/util/concurrent/Executors\n-  #161 = NameAndType        #255:#256     // newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;\n-  #162 = NameAndType        #99:#101      // \"<init>\":(Ljava/util/concurrent/ExecutorService;)V\n-  #163 = Utf8               org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier\n-  #164 = NameAndType        #99:#257      // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1;)V\n-  #165 = NameAndType        #99:#102      // \"<init>\":(Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)V\n-  #166 = Utf8               java/util/zip/Deflater\n-  #167 = NameAndType        #99:#103      // \"<init>\":(Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;I)V\n-  #168 = NameAndType        #99:#100      // \"<init>\":()V\n-  #169 = Utf8               java/util/concurrent/ConcurrentLinkedDeque\n-  #170 = NameAndType        #83:#76       // futures:Ljava/util/Deque;\n-  #171 = Class              #258          // java/lang/System\n-  #172 = NameAndType        #259:#260     // currentTimeMillis:()J\n-  #173 = NameAndType        #85:#86       // startedAt:J\n-  #174 = Utf8               org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1\n-  #175 = NameAndType        #99:#261      // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;)V\n-  #176 = NameAndType        #91:#92       // tlScatterStreams:Ljava/lang/ThreadLocal;\n-  #177 = Utf8               java/lang/IllegalArgumentException\n-  #178 = Utf8               Compression level is expected between -1~9\n-  #179 = NameAndType        #99:#262      // \"<init>\":(Ljava/lang/String;)V\n-  #180 = NameAndType        #79:#80       // es:Ljava/util/concurrent/ExecutorService;\n-  #181 = NameAndType        #116:#117     // createCallable:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Ljava/util/concurrent/Callable;\n-  #182 = NameAndType        #114:#112     // submitStreamAwareCallable:(Ljava/util/concurrent/Callable;)V\n-  #183 = NameAndType        #116:#119     // createCallable:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n-  #184 = Utf8               BootstrapMethods\n-  #185 = MethodHandle       6:#263        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #186 = MethodType         #264          //  ()Ljava/lang/Object;\n-  #187 = MethodHandle       7:#265        // REF_invokeSpecial org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$submit$0:(Ljava/util/concurrent/Callable;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #188 = MethodType         #266          //  ()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #189 = NameAndType        #267:#268     // call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;\n-  #190 = Class              #236          // java/util/concurrent/ExecutorService\n-  #191 = NameAndType        #111:#269     // submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n-  #192 = Class              #270          // java/util/Deque\n-  #193 = NameAndType        #271:#272     // add:(Ljava/lang/Object;)Z\n-  #194 = Class              #273          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #195 = NameAndType        #274:#253     // getMethod:()I\n-  #196 = Utf8               org/apache/commons/compress/archivers/zip/ZipMethod\n-  #197 = Utf8               java/lang/StringBuilder\n-  #198 = Utf8               Method must be set on zipArchiveEntry:\n-  #199 = NameAndType        #275:#276     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #200 = NameAndType        #275:#277     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #201 = NameAndType        #278:#279     // toString:()Ljava/lang/String;\n-  #202 = Class              #280          // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n-  #203 = NameAndType        #281:#282     // createZipArchiveEntryRequest:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n-  #204 = MethodHandle       7:#283        // REF_invokeSpecial org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$createCallable$1:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #205 = NameAndType        #267:#284     // call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Ljava/util/concurrent/Callable;\n-  #206 = MethodHandle       7:#285        // REF_invokeSpecial org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$createCallable$2:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #207 = NameAndType        #267:#286     // call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n-  #208 = NameAndType        #287:#288     // iterator:()Ljava/util/Iterator;\n-  #209 = Class              #238          // java/util/Iterator\n-  #210 = NameAndType        #289:#290     // hasNext:()Z\n-  #211 = NameAndType        #291:#264     // next:()Ljava/lang/Object;\n-  #212 = Utf8               java/util/concurrent/Future\n-  #213 = NameAndType        #243:#264     // get:()Ljava/lang/Object;\n-  #214 = NameAndType        #292:#100     // shutdown:()V\n-  #215 = Class              #293          // java/util/concurrent/TimeUnit\n-  #216 = NameAndType        #294:#295     // SECONDS:Ljava/util/concurrent/TimeUnit;\n-  #217 = NameAndType        #296:#297     // awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z\n-  #218 = NameAndType        #87:#86       // compressionDoneAt:J\n-  #219 = NameAndType        #298:#300     // zipEntryWriter:()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;\n-  #220 = Class              #301          // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter\n-  #221 = NameAndType        #302:#122     // writeNextZipEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V\n-  #222 = NameAndType        #303:#100     // close:()V\n-  #223 = NameAndType        #88:#86       // scatterDoneAt:J\n-  #224 = NameAndType        #129:#100     // closeAll:()V\n-  #225 = Utf8               org/apache/commons/compress/archivers/zip/ScatterStatistics\n-  #226 = NameAndType        #99:#304      // \"<init>\":(JJ)V\n-  #227 = Utf8               java/io/IOException\n-  #228 = Class              #305          // java/lang/ThreadLocal\n-  #229 = Class              #306          // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier\n-  #230 = NameAndType        #243:#307     // get:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n-  #231 = NameAndType        #108:#308     // addArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)V\n-  #232 = Class              #309          // java/util/concurrent/Callable\n-  #233 = NameAndType        #267:#264     // call:()Ljava/lang/Object;\n-  #234 = Utf8               org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator\n-  #235 = Utf8               java/lang/Object\n-  #236 = Utf8               java/util/concurrent/ExecutorService\n-  #237 = Utf8               org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier\n-  #238 = Utf8               java/util/Iterator\n-  #239 = Utf8               java/lang/Throwable\n-  #240 = Utf8               java/lang/InterruptedException\n-  #241 = Utf8               java/util/concurrent/ExecutionException\n-  #242 = Utf8               java/lang/Exception\n-  #243 = Utf8               get\n-  #244 = Utf8               ()Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n-  #245 = Utf8               org/apache/commons/compress/archivers/zip/StreamCompressor\n-  #246 = Utf8               create\n-  #247 = Utf8               (ILorg/apache/commons/compress/parallel/ScatterGatherBackingStore;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n-  #248 = Utf8               (Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;Lorg/apache/commons/compress/archivers/zip/StreamCompressor;)V\n-  #249 = Utf8               java/lang/Runtime\n-  #250 = Utf8               getRuntime\n-  #251 = Utf8               ()Ljava/lang/Runtime;\n-  #252 = Utf8               availableProcessors\n-  #253 = Utf8               ()I\n-  #254 = Utf8               java/util/concurrent/Executors\n-  #255 = Utf8               newFixedThreadPool\n-  #256 = Utf8               (I)Ljava/util/concurrent/ExecutorService;\n-  #257 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1;)V\n-  #258 = Utf8               java/lang/System\n-  #259 = Utf8               currentTimeMillis\n-  #260 = Utf8               ()J\n-  #261 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;)V\n-  #262 = Utf8               (Ljava/lang/String;)V\n-  #263 = Methodref          #310.#311     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #264 = Utf8               ()Ljava/lang/Object;\n-  #265 = Methodref          #71.#312      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$submit$0:(Ljava/util/concurrent/Callable;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #266 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #267 = Utf8               call\n-  #268 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;\n-  #269 = Utf8               (Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n-  #270 = Utf8               java/util/Deque\n-  #271 = Utf8               add\n-  #272 = Utf8               (Ljava/lang/Object;)Z\n-  #273 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #274 = Utf8               getMethod\n-  #275 = Utf8               append\n-  #276 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #277 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #278 = Utf8               toString\n-  #279 = Utf8               ()Ljava/lang/String;\n-  #280 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n-  #281 = Utf8               createZipArchiveEntryRequest\n-  #282 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n-  #283 = Methodref          #71.#313      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$createCallable$1:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #284 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Ljava/util/concurrent/Callable;\n-  #285 = Methodref          #71.#314      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$createCallable$2:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #286 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n-  #287 = Utf8               iterator\n-  #288 = Utf8               ()Ljava/util/Iterator;\n-  #289 = Utf8               hasNext\n-  #290 = Utf8               ()Z\n-  #291 = Utf8               next\n-  #292 = Utf8               shutdown\n-  #293 = Utf8               java/util/concurrent/TimeUnit\n-  #294 = Utf8               SECONDS\n-  #295 = Utf8               Ljava/util/concurrent/TimeUnit;\n-  #296 = Utf8               awaitTermination\n-  #297 = Utf8               (JLjava/util/concurrent/TimeUnit;)Z\n-  #298 = Utf8               zipEntryWriter\n-  #299 = Utf8               ZipEntryWriter\n-  #300 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;\n-  #301 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter\n-  #302 = Utf8               writeNextZipEntry\n-  #303 = Utf8               close\n-  #304 = Utf8               (JJ)V\n-  #305 = Utf8               java/lang/ThreadLocal\n-  #306 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier\n-  #307 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n-  #308 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)V\n-  #309 = Utf8               java/util/concurrent/Callable\n-  #310 = Class              #315          // java/lang/invoke/LambdaMetafactory\n-  #311 = NameAndType        #316:#319     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #312 = NameAndType        #137:#138     // lambda$submit$0:(Ljava/util/concurrent/Callable;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #313 = NameAndType        #135:#136     // lambda$createCallable$1:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #314 = NameAndType        #132:#133     // lambda$createCallable$2:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #315 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #316 = Utf8               metafactory\n-  #317 = Class              #321          // java/lang/invoke/MethodHandles$Lookup\n-  #318 = Utf8               Lookup\n-  #319 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #320 = Class              #322          // java/lang/invoke/MethodHandles\n-  #321 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #322 = Utf8               java/lang/invoke/MethodHandles\n+  #105 = Class              #230          // java/util/concurrent/ExecutorService\n+  #106 = Class              #231          // org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier\n+  #107 = Utf8               addArchiveEntry\n+  #108 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)V\n+  #109 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)V\n+  #110 = Utf8               submit\n+  #111 = Utf8               (Ljava/util/concurrent/Callable;)V\n+  #112 = Utf8               (Ljava/util/concurrent/Callable<+Ljava/lang/Object;>;)V\n+  #113 = Utf8               submitStreamAwareCallable\n+  #114 = Utf8               (Ljava/util/concurrent/Callable<+Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;)V\n+  #115 = Utf8               createCallable\n+  #116 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Ljava/util/concurrent/Callable;\n+  #117 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Ljava/util/concurrent/Callable<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n+  #118 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n+  #119 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n+  #120 = Utf8               writeTo\n+  #121 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V\n+  #122 = Class              #232          // java/util/Iterator\n+  #123 = Class              #233          // java/lang/Throwable\n+  #124 = Class              #234          // java/lang/InterruptedException\n+  #125 = Class              #235          // java/util/concurrent/ExecutionException\n+  #126 = Utf8               getStatisticsMessage\n+  #127 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ScatterStatistics;\n+  #128 = Utf8               closeAll\n+  #129 = Utf8               lambda$createCallable$2\n+  #130 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #131 = Class              #236          // java/lang/Exception\n+  #132 = Utf8               lambda$createCallable$1\n+  #133 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #134 = Utf8               lambda$submit$0\n+  #135 = Utf8               (Ljava/util/concurrent/Callable;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #136 = Utf8               access$000\n+  #137 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;)Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;\n+  #138 = Utf8               access$100\n+  #139 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #140 = Utf8               access$200\n+  #141 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;)Ljava/util/Deque;\n+  #142 = Utf8               SourceFile\n+  #143 = Utf8               ParallelScatterZipCreator.java\n+  #144 = NameAndType        #75:#76       // streams:Ljava/util/Deque;\n+  #145 = NameAndType        #94:#95       // createDeferred:(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #146 = NameAndType        #81:#82       // backingStoreSupplier:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;\n+  #147 = NameAndType        #237:#238     // get:()Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n+  #148 = NameAndType        #89:#90       // compressionLevel:I\n+  #149 = Class              #239          // org/apache/commons/compress/archivers/zip/StreamCompressor\n+  #150 = NameAndType        #240:#241     // create:(ILorg/apache/commons/compress/parallel/ScatterGatherBackingStore;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n+  #151 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n+  #152 = NameAndType        #99:#242      // \"<init>\":(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;Lorg/apache/commons/compress/archivers/zip/StreamCompressor;)V\n+  #153 = Class              #243          // java/lang/Runtime\n+  #154 = NameAndType        #244:#245     // getRuntime:()Ljava/lang/Runtime;\n+  #155 = NameAndType        #246:#247     // availableProcessors:()I\n+  #156 = Class              #248          // java/util/concurrent/Executors\n+  #157 = NameAndType        #249:#250     // newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;\n+  #158 = NameAndType        #99:#101      // \"<init>\":(Ljava/util/concurrent/ExecutorService;)V\n+  #159 = Utf8               org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier\n+  #160 = NameAndType        #99:#251      // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1;)V\n+  #161 = NameAndType        #99:#102      // \"<init>\":(Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)V\n+  #162 = Utf8               java/util/zip/Deflater\n+  #163 = NameAndType        #99:#103      // \"<init>\":(Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;I)V\n+  #164 = NameAndType        #99:#100      // \"<init>\":()V\n+  #165 = Utf8               java/util/concurrent/ConcurrentLinkedDeque\n+  #166 = NameAndType        #83:#76       // futures:Ljava/util/Deque;\n+  #167 = Class              #252          // java/lang/System\n+  #168 = NameAndType        #253:#254     // currentTimeMillis:()J\n+  #169 = NameAndType        #85:#86       // startedAt:J\n+  #170 = Utf8               org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1\n+  #171 = NameAndType        #99:#255      // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;)V\n+  #172 = NameAndType        #91:#92       // tlScatterStreams:Ljava/lang/ThreadLocal;\n+  #173 = Utf8               java/lang/IllegalArgumentException\n+  #174 = Utf8               Compression level is expected between -1~9\n+  #175 = NameAndType        #99:#256      // \"<init>\":(Ljava/lang/String;)V\n+  #176 = NameAndType        #79:#80       // es:Ljava/util/concurrent/ExecutorService;\n+  #177 = NameAndType        #115:#116     // createCallable:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Ljava/util/concurrent/Callable;\n+  #178 = NameAndType        #113:#111     // submitStreamAwareCallable:(Ljava/util/concurrent/Callable;)V\n+  #179 = NameAndType        #115:#118     // createCallable:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n+  #180 = Utf8               BootstrapMethods\n+  #181 = MethodHandle       6:#257        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #182 = MethodType         #258          //  ()Ljava/lang/Object;\n+  #183 = MethodHandle       7:#259        // REF_invokeSpecial org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$submit$0:(Ljava/util/concurrent/Callable;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #184 = MethodType         #260          //  ()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #185 = NameAndType        #261:#262     // call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;\n+  #186 = NameAndType        #110:#263     // submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n+  #187 = Class              #264          // java/util/Deque\n+  #188 = NameAndType        #265:#266     // add:(Ljava/lang/Object;)Z\n+  #189 = Class              #267          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #190 = NameAndType        #268:#247     // getMethod:()I\n+  #191 = Utf8               org/apache/commons/compress/archivers/zip/ZipMethod\n+  #192 = Utf8               java/lang/StringBuilder\n+  #193 = Utf8               Method must be set on zipArchiveEntry:\n+  #194 = NameAndType        #269:#270     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #195 = NameAndType        #269:#271     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #196 = NameAndType        #272:#273     // toString:()Ljava/lang/String;\n+  #197 = Class              #274          // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n+  #198 = NameAndType        #275:#276     // createZipArchiveEntryRequest:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n+  #199 = MethodHandle       7:#277        // REF_invokeSpecial org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$createCallable$1:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #200 = NameAndType        #261:#278     // call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Ljava/util/concurrent/Callable;\n+  #201 = MethodHandle       7:#279        // REF_invokeSpecial org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$createCallable$2:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #202 = NameAndType        #261:#280     // call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n+  #203 = NameAndType        #281:#282     // iterator:()Ljava/util/Iterator;\n+  #204 = NameAndType        #283:#284     // hasNext:()Z\n+  #205 = NameAndType        #285:#258     // next:()Ljava/lang/Object;\n+  #206 = Utf8               java/util/concurrent/Future\n+  #207 = NameAndType        #237:#258     // get:()Ljava/lang/Object;\n+  #208 = NameAndType        #286:#100     // shutdown:()V\n+  #209 = Class              #287          // java/util/concurrent/TimeUnit\n+  #210 = NameAndType        #288:#289     // SECONDS:Ljava/util/concurrent/TimeUnit;\n+  #211 = NameAndType        #290:#291     // awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z\n+  #212 = NameAndType        #87:#86       // compressionDoneAt:J\n+  #213 = NameAndType        #292:#294     // zipEntryWriter:()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;\n+  #214 = Class              #295          // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter\n+  #215 = NameAndType        #296:#121     // writeNextZipEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V\n+  #216 = NameAndType        #297:#100     // close:()V\n+  #217 = NameAndType        #88:#86       // scatterDoneAt:J\n+  #218 = NameAndType        #128:#100     // closeAll:()V\n+  #219 = Utf8               org/apache/commons/compress/archivers/zip/ScatterStatistics\n+  #220 = NameAndType        #99:#298      // \"<init>\":(JJ)V\n+  #221 = Utf8               java/io/IOException\n+  #222 = Class              #299          // java/lang/ThreadLocal\n+  #223 = Class              #300          // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier\n+  #224 = NameAndType        #237:#301     // get:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n+  #225 = NameAndType        #107:#302     // addArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)V\n+  #226 = Class              #303          // java/util/concurrent/Callable\n+  #227 = NameAndType        #261:#258     // call:()Ljava/lang/Object;\n+  #228 = Utf8               org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator\n+  #229 = Utf8               java/lang/Object\n+  #230 = Utf8               java/util/concurrent/ExecutorService\n+  #231 = Utf8               org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier\n+  #232 = Utf8               java/util/Iterator\n+  #233 = Utf8               java/lang/Throwable\n+  #234 = Utf8               java/lang/InterruptedException\n+  #235 = Utf8               java/util/concurrent/ExecutionException\n+  #236 = Utf8               java/lang/Exception\n+  #237 = Utf8               get\n+  #238 = Utf8               ()Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n+  #239 = Utf8               org/apache/commons/compress/archivers/zip/StreamCompressor\n+  #240 = Utf8               create\n+  #241 = Utf8               (ILorg/apache/commons/compress/parallel/ScatterGatherBackingStore;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n+  #242 = Utf8               (Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;Lorg/apache/commons/compress/archivers/zip/StreamCompressor;)V\n+  #243 = Utf8               java/lang/Runtime\n+  #244 = Utf8               getRuntime\n+  #245 = Utf8               ()Ljava/lang/Runtime;\n+  #246 = Utf8               availableProcessors\n+  #247 = Utf8               ()I\n+  #248 = Utf8               java/util/concurrent/Executors\n+  #249 = Utf8               newFixedThreadPool\n+  #250 = Utf8               (I)Ljava/util/concurrent/ExecutorService;\n+  #251 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1;)V\n+  #252 = Utf8               java/lang/System\n+  #253 = Utf8               currentTimeMillis\n+  #254 = Utf8               ()J\n+  #255 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;)V\n+  #256 = Utf8               (Ljava/lang/String;)V\n+  #257 = Methodref          #304.#305     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #258 = Utf8               ()Ljava/lang/Object;\n+  #259 = Methodref          #71.#306      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$submit$0:(Ljava/util/concurrent/Callable;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #260 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #261 = Utf8               call\n+  #262 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;\n+  #263 = Utf8               (Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n+  #264 = Utf8               java/util/Deque\n+  #265 = Utf8               add\n+  #266 = Utf8               (Ljava/lang/Object;)Z\n+  #267 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #268 = Utf8               getMethod\n+  #269 = Utf8               append\n+  #270 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #271 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #272 = Utf8               toString\n+  #273 = Utf8               ()Ljava/lang/String;\n+  #274 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n+  #275 = Utf8               createZipArchiveEntryRequest\n+  #276 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n+  #277 = Methodref          #71.#307      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$createCallable$1:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #278 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Ljava/util/concurrent/Callable;\n+  #279 = Methodref          #71.#308      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$createCallable$2:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #280 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n+  #281 = Utf8               iterator\n+  #282 = Utf8               ()Ljava/util/Iterator;\n+  #283 = Utf8               hasNext\n+  #284 = Utf8               ()Z\n+  #285 = Utf8               next\n+  #286 = Utf8               shutdown\n+  #287 = Utf8               java/util/concurrent/TimeUnit\n+  #288 = Utf8               SECONDS\n+  #289 = Utf8               Ljava/util/concurrent/TimeUnit;\n+  #290 = Utf8               awaitTermination\n+  #291 = Utf8               (JLjava/util/concurrent/TimeUnit;)Z\n+  #292 = Utf8               zipEntryWriter\n+  #293 = Utf8               ZipEntryWriter\n+  #294 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;\n+  #295 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter\n+  #296 = Utf8               writeNextZipEntry\n+  #297 = Utf8               close\n+  #298 = Utf8               (JJ)V\n+  #299 = Utf8               java/lang/ThreadLocal\n+  #300 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier\n+  #301 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n+  #302 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)V\n+  #303 = Utf8               java/util/concurrent/Callable\n+  #304 = Class              #309          // java/lang/invoke/LambdaMetafactory\n+  #305 = NameAndType        #310:#313     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #306 = NameAndType        #134:#135     // lambda$submit$0:(Ljava/util/concurrent/Callable;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #307 = NameAndType        #132:#133     // lambda$createCallable$1:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #308 = NameAndType        #129:#130     // lambda$createCallable$2:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #309 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #310 = Utf8               metafactory\n+  #311 = Class              #315          // java/lang/invoke/MethodHandles$Lookup\n+  #312 = Utf8               Lookup\n+  #313 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #314 = Class              #316          // java/lang/invoke/MethodHandles\n+  #315 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #316 = Utf8               java/lang/invoke/MethodHandles\n {\n   private final java.util.Deque<org.apache.commons.compress.archivers.zip.ScatterZipOutputStream> streams;\n     descriptor: Ljava/util/Deque;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n     Signature: #78                          // Ljava/util/Deque<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n \n   private final java.util.concurrent.ExecutorService es;\n@@ -553,15 +547,15 @@\n          2: aload_1\n          3: invokedynamic #34,  0             // InvokeDynamic #0:call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;\n          8: invokevirtual #32                 // Method submitStreamAwareCallable:(Ljava/util/concurrent/Callable;)V\n         11: return\n       LineNumberTable:\n         line 186: 0\n         line 190: 11\n-    Signature: #113                         // (Ljava/util/concurrent/Callable<+Ljava/lang/Object;>;)V\n+    Signature: #112                         // (Ljava/util/concurrent/Callable<+Ljava/lang/Object;>;)V\n \n   public final void submitStreamAwareCallable(java.util.concurrent.Callable<? extends org.apache.commons.compress.archivers.zip.ScatterZipOutputStream>);\n     descriptor: (Ljava/util/concurrent/Callable;)V\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n@@ -572,15 +566,15 @@\n          9: invokeinterface #35,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n         14: invokeinterface #36,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z\n         19: pop\n         20: return\n       LineNumberTable:\n         line 201: 0\n         line 202: 20\n-    Signature: #115                         // (Ljava/util/concurrent/Callable<+Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;)V\n+    Signature: #114                         // (Ljava/util/concurrent/Callable<+Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;)V\n \n   public final java.util.concurrent.Callable<org.apache.commons.compress.archivers.zip.ScatterZipOutputStream> createCallable(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, org.apache.commons.compress.parallel.InputStreamSupplier);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Ljava/util/concurrent/Callable;\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=4, locals=5, args_size=3\n          0: aload_1\n@@ -615,28 +609,28 @@\n         line 226: 10\n         line 228: 37\n         line 229: 44\n       StackMapTable: number_of_entries = 1\n         frame_type = 252 /* append */\n           offset_delta = 37\n           locals = [ int ]\n-    Signature: #118                         // (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Ljava/util/concurrent/Callable<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n+    Signature: #117                         // (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Ljava/util/concurrent/Callable<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n \n   public final java.util.concurrent.Callable<org.apache.commons.compress.archivers.zip.ScatterZipOutputStream> createCallable(org.apache.commons.compress.archivers.zip.ZipArchiveEntryRequestSupplier);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: invokedynamic #47,  0             // InvokeDynamic #2:call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n          7: areturn\n       LineNumberTable:\n         line 253: 0\n-    Signature: #120                         // (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n+    Signature: #119                         // (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n \n   public void writeTo(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream) throws java.io.IOException, java.lang.InterruptedException, java.util.concurrent.ExecutionException;\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=6, args_size=2\n          0: aload_0\n@@ -940,25 +934,25 @@\n       LineNumberTable:\n         line 55: 0\n }\n SourceFile: \"ParallelScatterZipCreator.java\"\n InnerClasses:\n   private static #73= #13 of #71;         // DefaultBackingStoreSupplier=class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier of class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator\n   #24;                                    // class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1\n-  public static #299= #220 of #7;         // ZipEntryWriter=class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter of class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n-  public static final #318= #317 of #320; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  public static #293= #214 of #7;         // ZipEntryWriter=class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter of class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n+  public static final #312= #311 of #314; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #185 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #181 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #186 ()Ljava/lang/Object;\n-      #187 REF_invokeSpecial org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$submit$0:(Ljava/util/concurrent/Callable;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-      #188 ()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  1: #185 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #182 ()Ljava/lang/Object;\n+      #183 REF_invokeSpecial org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$submit$0:(Ljava/util/concurrent/Callable;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+      #184 ()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  1: #181 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #186 ()Ljava/lang/Object;\n-      #204 REF_invokeSpecial org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$createCallable$1:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-      #188 ()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  2: #185 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #182 ()Ljava/lang/Object;\n+      #199 REF_invokeSpecial org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$createCallable$1:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+      #184 ()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  2: #181 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #186 ()Ljava/lang/Object;\n-      #206 REF_invokeSpecial org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$createCallable$2:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-      #188 ()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+      #182 ()Ljava/lang/Object;\n+      #201 REF_invokeSpecial org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$createCallable$2:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+      #184 ()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n"}]}
