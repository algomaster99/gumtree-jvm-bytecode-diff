{"diffoscope-json-version": 1, "source1": "first/ZipShort.class", "source2": "second/ZipShort.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,41 +1,41 @@\n-  SHA-256 checksum 7a571e18a37c5b0e6fbde672e638f7528d75fc41a5f5002b9a96d3dc73dde8d4\n+  SHA-256 checksum 924f621f36e8e9c22226c99ad42d8b314f90cf3fc6e840cabea603867bfc65ab\n   Compiled from \"ZipShort.java\"\n public final class org.apache.commons.compress.archivers.zip.ZipShort implements java.lang.Cloneable,java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #8                          // org/apache/commons/compress/archivers/zip/ZipShort\n   super_class: #22                        // java/lang/Object\n   interfaces: 2, fields: 3, methods: 14, attributes: 1\n Constant pool:\n-   #1 = Methodref          #22.#62        // java/lang/Object.\"<init>\":()V\n-   #2 = Fieldref           #8.#63         // org/apache/commons/compress/archivers/zip/ZipShort.value:I\n-   #3 = Methodref          #8.#64         // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":([BI)V\n-   #4 = Methodref          #8.#65         // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-   #5 = Methodref          #66.#67        // org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n-   #6 = Methodref          #8.#68         // org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n-   #7 = Methodref          #66.#69        // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n-   #8 = Class              #70            // org/apache/commons/compress/archivers/zip/ZipShort\n-   #9 = Methodref          #8.#71         // org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I\n-  #10 = Methodref          #22.#72        // java/lang/Object.clone:()Ljava/lang/Object;\n-  #11 = Class              #73            // java/lang/CloneNotSupportedException\n-  #12 = Class              #74            // java/lang/IllegalStateException\n-  #13 = Methodref          #12.#75        // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/Throwable;)V\n-  #14 = Class              #76            // java/lang/StringBuilder\n-  #15 = Methodref          #14.#62        // java/lang/StringBuilder.\"<init>\":()V\n-  #16 = String             #77            // ZipShort value:\n-  #17 = Methodref          #14.#78        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #18 = Methodref          #14.#79        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-  #19 = Methodref          #14.#80        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #20 = Methodref          #8.#81         // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-  #21 = Fieldref           #8.#82         // org/apache/commons/compress/archivers/zip/ZipShort.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #22 = Class              #83            // java/lang/Object\n-  #23 = Class              #84            // java/lang/Cloneable\n-  #24 = Class              #85            // java/io/Serializable\n+   #1 = Methodref          #22.#61        // java/lang/Object.\"<init>\":()V\n+   #2 = Fieldref           #8.#62         // org/apache/commons/compress/archivers/zip/ZipShort.value:I\n+   #3 = Methodref          #8.#63         // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":([BI)V\n+   #4 = Methodref          #8.#64         // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+   #5 = Methodref          #65.#66        // org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n+   #6 = Methodref          #8.#67         // org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n+   #7 = Methodref          #65.#68        // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n+   #8 = Class              #69            // org/apache/commons/compress/archivers/zip/ZipShort\n+   #9 = Methodref          #8.#70         // org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I\n+  #10 = Methodref          #22.#71        // java/lang/Object.clone:()Ljava/lang/Object;\n+  #11 = Class              #72            // java/lang/CloneNotSupportedException\n+  #12 = Class              #73            // java/lang/IllegalStateException\n+  #13 = Methodref          #12.#74        // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/Throwable;)V\n+  #14 = Class              #75            // java/lang/StringBuilder\n+  #15 = Methodref          #14.#61        // java/lang/StringBuilder.\"<init>\":()V\n+  #16 = String             #76            // ZipShort value:\n+  #17 = Methodref          #14.#77        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #18 = Methodref          #14.#78        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #19 = Methodref          #14.#79        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #20 = Methodref          #8.#80         // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+  #21 = Fieldref           #8.#81         // org/apache/commons/compress/archivers/zip/ZipShort.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #22 = Class              #82            // java/lang/Object\n+  #23 = Class              #83            // java/lang/Cloneable\n+  #24 = Class              #84            // java/io/Serializable\n   #25 = Utf8               ZERO\n   #26 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n   #27 = Utf8               serialVersionUID\n   #28 = Utf8               J\n   #29 = Utf8               ConstantValue\n   #30 = Long               1l\n   #32 = Utf8               value\n@@ -57,54 +57,53 @@\n   #48 = Utf8               ([B)I\n   #49 = Utf8               equals\n   #50 = Utf8               (Ljava/lang/Object;)Z\n   #51 = Utf8               StackMapTable\n   #52 = Utf8               hashCode\n   #53 = Utf8               clone\n   #54 = Utf8               ()Ljava/lang/Object;\n-  #55 = Class              #73            // java/lang/CloneNotSupportedException\n-  #56 = Utf8               toString\n-  #57 = Utf8               ()Ljava/lang/String;\n-  #58 = Utf8               <clinit>\n-  #59 = Utf8               ()V\n-  #60 = Utf8               SourceFile\n-  #61 = Utf8               ZipShort.java\n-  #62 = NameAndType        #34:#59        // \"<init>\":()V\n-  #63 = NameAndType        #32:#33        // value:I\n-  #64 = NameAndType        #34:#39        // \"<init>\":([BI)V\n-  #65 = NameAndType        #42:#47        // getValue:([BI)I\n-  #66 = Class              #86            // org/apache/commons/compress/utils/ByteUtils\n-  #67 = NameAndType        #87:#88        // toLittleEndian:([BJII)V\n-  #68 = NameAndType        #45:#46        // putShort:(I[BI)V\n-  #69 = NameAndType        #89:#90        // fromLittleEndian:([BII)J\n-  #70 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-  #71 = NameAndType        #42:#43        // getValue:()I\n-  #72 = NameAndType        #53:#54        // clone:()Ljava/lang/Object;\n-  #73 = Utf8               java/lang/CloneNotSupportedException\n-  #74 = Utf8               java/lang/IllegalStateException\n-  #75 = NameAndType        #34:#91        // \"<init>\":(Ljava/lang/Throwable;)V\n-  #76 = Utf8               java/lang/StringBuilder\n-  #77 = Utf8               ZipShort value:\n-  #78 = NameAndType        #92:#93        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #79 = NameAndType        #92:#94        // append:(I)Ljava/lang/StringBuilder;\n-  #80 = NameAndType        #56:#57        // toString:()Ljava/lang/String;\n-  #81 = NameAndType        #34:#35        // \"<init>\":(I)V\n-  #82 = NameAndType        #25:#26        // ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #83 = Utf8               java/lang/Object\n-  #84 = Utf8               java/lang/Cloneable\n-  #85 = Utf8               java/io/Serializable\n-  #86 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #87 = Utf8               toLittleEndian\n-  #88 = Utf8               ([BJII)V\n-  #89 = Utf8               fromLittleEndian\n-  #90 = Utf8               ([BII)J\n-  #91 = Utf8               (Ljava/lang/Throwable;)V\n-  #92 = Utf8               append\n-  #93 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #94 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #55 = Utf8               toString\n+  #56 = Utf8               ()Ljava/lang/String;\n+  #57 = Utf8               <clinit>\n+  #58 = Utf8               ()V\n+  #59 = Utf8               SourceFile\n+  #60 = Utf8               ZipShort.java\n+  #61 = NameAndType        #34:#58        // \"<init>\":()V\n+  #62 = NameAndType        #32:#33        // value:I\n+  #63 = NameAndType        #34:#39        // \"<init>\":([BI)V\n+  #64 = NameAndType        #42:#47        // getValue:([BI)I\n+  #65 = Class              #85            // org/apache/commons/compress/utils/ByteUtils\n+  #66 = NameAndType        #86:#87        // toLittleEndian:([BJII)V\n+  #67 = NameAndType        #45:#46        // putShort:(I[BI)V\n+  #68 = NameAndType        #88:#89        // fromLittleEndian:([BII)J\n+  #69 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+  #70 = NameAndType        #42:#43        // getValue:()I\n+  #71 = NameAndType        #53:#54        // clone:()Ljava/lang/Object;\n+  #72 = Utf8               java/lang/CloneNotSupportedException\n+  #73 = Utf8               java/lang/IllegalStateException\n+  #74 = NameAndType        #34:#90        // \"<init>\":(Ljava/lang/Throwable;)V\n+  #75 = Utf8               java/lang/StringBuilder\n+  #76 = Utf8               ZipShort value:\n+  #77 = NameAndType        #91:#92        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #78 = NameAndType        #91:#93        // append:(I)Ljava/lang/StringBuilder;\n+  #79 = NameAndType        #55:#56        // toString:()Ljava/lang/String;\n+  #80 = NameAndType        #34:#35        // \"<init>\":(I)V\n+  #81 = NameAndType        #25:#26        // ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #82 = Utf8               java/lang/Object\n+  #83 = Utf8               java/lang/Cloneable\n+  #84 = Utf8               java/io/Serializable\n+  #85 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #86 = Utf8               toLittleEndian\n+  #87 = Utf8               ([BJII)V\n+  #88 = Utf8               fromLittleEndian\n+  #89 = Utf8               ([BII)J\n+  #90 = Utf8               (Ljava/lang/Throwable;)V\n+  #91 = Utf8               append\n+  #92 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #93 = Utf8               (I)Ljava/lang/StringBuilder;\n {\n   public static final org.apache.commons.compress.archivers.zip.ZipShort ZERO;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   private static final long serialVersionUID = 1l;\n     descriptor: J\n"}]}
