{"diffoscope-json-version": 1, "source1": "first/TarArchiveSparseEntry.class", "source2": "second/TarArchiveSparseEntry.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,98 +1,98 @@\n-  SHA-256 checksum fdb037b90ac662e3d304df14c8a9697fb55374ff6efe90738171b0cc40e62c39\n+  SHA-256 checksum 0d19f436d5303a1c48aed32a047d8d11dec7b6425d1f05fd976ee9ce00ee5f06\n   Compiled from \"TarArchiveSparseEntry.java\"\n public class org.apache.commons.compress.archivers.tar.TarArchiveSparseEntry implements org.apache.commons.compress.archivers.tar.TarConstants\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #9                          // org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry\n-  super_class: #10                        // java/lang/Object\n+  this_class: #21                         // org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry\n+  super_class: #2                         // java/lang/Object\n   interfaces: 1, fields: 2, methods: 3, attributes: 1\n Constant pool:\n-   #1 = Methodref          #10.#29        // java/lang/Object.\"<init>\":()V\n-   #2 = Class              #30            // java/util/ArrayList\n-   #3 = Class              #31            // org/apache/commons/compress/archivers/tar/TarConstants\n-   #4 = Methodref          #32.#33        // org/apache/commons/compress/archivers/tar/TarUtils.readSparseStructs:([BII)Ljava/util/List;\n-   #5 = Methodref          #2.#34         // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n-   #6 = Fieldref           #9.#35         // org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.sparseHeaders:Ljava/util/List;\n-   #7 = Methodref          #32.#36        // org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean:([BI)Z\n-   #8 = Fieldref           #9.#37         // org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.isExtended:Z\n-   #9 = Class              #38            // org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry\n-  #10 = Class              #39            // java/lang/Object\n-  #11 = Utf8               isExtended\n-  #12 = Utf8               Z\n-  #13 = Utf8               sparseHeaders\n-  #14 = Utf8               Ljava/util/List;\n-  #15 = Utf8               Signature\n-  #16 = Utf8               Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;\n-  #17 = Utf8               <init>\n-  #18 = Utf8               ([B)V\n-  #19 = Utf8               Code\n-  #20 = Utf8               LineNumberTable\n-  #21 = Utf8               Exceptions\n-  #22 = Class              #40            // java/io/IOException\n-  #23 = Utf8               ()Z\n-  #24 = Utf8               getSparseHeaders\n-  #25 = Utf8               ()Ljava/util/List;\n-  #26 = Utf8               ()Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;\n-  #27 = Utf8               SourceFile\n-  #28 = Utf8               TarArchiveSparseEntry.java\n-  #29 = NameAndType        #17:#41        // \"<init>\":()V\n-  #30 = Utf8               java/util/ArrayList\n-  #31 = Utf8               org/apache/commons/compress/archivers/tar/TarConstants\n-  #32 = Class              #42            // org/apache/commons/compress/archivers/tar/TarUtils\n-  #33 = NameAndType        #43:#44        // readSparseStructs:([BII)Ljava/util/List;\n-  #34 = NameAndType        #17:#45        // \"<init>\":(Ljava/util/Collection;)V\n-  #35 = NameAndType        #13:#14        // sparseHeaders:Ljava/util/List;\n-  #36 = NameAndType        #46:#47        // parseBoolean:([BI)Z\n-  #37 = NameAndType        #11:#12        // isExtended:Z\n-  #38 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry\n-  #39 = Utf8               java/lang/Object\n-  #40 = Utf8               java/io/IOException\n-  #41 = Utf8               ()V\n-  #42 = Utf8               org/apache/commons/compress/archivers/tar/TarUtils\n-  #43 = Utf8               readSparseStructs\n-  #44 = Utf8               ([BII)Ljava/util/List;\n-  #45 = Utf8               (Ljava/util/Collection;)V\n-  #46 = Utf8               parseBoolean\n-  #47 = Utf8               ([BI)Z\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Class              #8             // java/util/ArrayList\n+   #8 = Utf8               java/util/ArrayList\n+   #9 = Class              #10            // org/apache/commons/compress/archivers/tar/TarConstants\n+  #10 = Utf8               org/apache/commons/compress/archivers/tar/TarConstants\n+  #11 = Methodref          #12.#13        // org/apache/commons/compress/archivers/tar/TarUtils.readSparseStructs:([BII)Ljava/util/List;\n+  #12 = Class              #14            // org/apache/commons/compress/archivers/tar/TarUtils\n+  #13 = NameAndType        #15:#16        // readSparseStructs:([BII)Ljava/util/List;\n+  #14 = Utf8               org/apache/commons/compress/archivers/tar/TarUtils\n+  #15 = Utf8               readSparseStructs\n+  #16 = Utf8               ([BII)Ljava/util/List;\n+  #17 = Methodref          #7.#18         // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n+  #18 = NameAndType        #5:#19         // \"<init>\":(Ljava/util/Collection;)V\n+  #19 = Utf8               (Ljava/util/Collection;)V\n+  #20 = Fieldref           #21.#22        // org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.sparseHeaders:Ljava/util/List;\n+  #21 = Class              #23            // org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry\n+  #22 = NameAndType        #24:#25        // sparseHeaders:Ljava/util/List;\n+  #23 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry\n+  #24 = Utf8               sparseHeaders\n+  #25 = Utf8               Ljava/util/List;\n+  #26 = Methodref          #12.#27        // org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean:([BI)Z\n+  #27 = NameAndType        #28:#29        // parseBoolean:([BI)Z\n+  #28 = Utf8               parseBoolean\n+  #29 = Utf8               ([BI)Z\n+  #30 = Fieldref           #21.#31        // org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.isExtended:Z\n+  #31 = NameAndType        #32:#33        // isExtended:Z\n+  #32 = Utf8               isExtended\n+  #33 = Utf8               Z\n+  #34 = Utf8               Signature\n+  #35 = Utf8               Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;\n+  #36 = Utf8               ([B)V\n+  #37 = Utf8               Code\n+  #38 = Utf8               LineNumberTable\n+  #39 = Utf8               Exceptions\n+  #40 = Class              #41            // java/io/IOException\n+  #41 = Utf8               java/io/IOException\n+  #42 = Utf8               ()Z\n+  #43 = Utf8               getSparseHeaders\n+  #44 = Utf8               ()Ljava/util/List;\n+  #45 = Utf8               ()Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;\n+  #46 = Utf8               SourceFile\n+  #47 = Utf8               TarArchiveSparseEntry.java\n {\n   private final boolean isExtended;\n     descriptor: Z\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final java.util.List<org.apache.commons.compress.archivers.tar.TarArchiveStructSparse> sparseHeaders;\n     descriptor: Ljava/util/List;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #16                          // Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;\n+    Signature: #35                          // Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;\n \n   public org.apache.commons.compress.archivers.tar.TarArchiveSparseEntry(byte[]) throws java.io.IOException;\n     descriptor: ([B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=3, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: iconst_0\n          5: istore_2\n          6: aload_0\n-         7: new           #2                  // class java/util/ArrayList\n+         7: new           #7                  // class java/util/ArrayList\n         10: dup\n         11: aload_1\n         12: iconst_0\n         13: bipush        21\n-        15: invokestatic  #4                  // Method org/apache/commons/compress/archivers/tar/TarUtils.readSparseStructs:([BII)Ljava/util/List;\n-        18: invokespecial #5                  // Method java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n-        21: putfield      #6                  // Field sparseHeaders:Ljava/util/List;\n+        15: invokestatic  #11                 // Method org/apache/commons/compress/archivers/tar/TarUtils.readSparseStructs:([BII)Ljava/util/List;\n+        18: invokespecial #17                 // Method java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n+        21: putfield      #20                 // Field sparseHeaders:Ljava/util/List;\n         24: iinc_w        2, 504\n         30: aload_0\n         31: aload_1\n         32: iload_2\n-        33: invokestatic  #7                  // Method org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean:([BI)Z\n-        36: putfield      #8                  // Field isExtended:Z\n+        33: invokestatic  #26                 // Method org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean:([BI)Z\n+        36: putfield      #30                 // Field isExtended:Z\n         39: return\n       LineNumberTable:\n         line 62: 0\n         line 63: 4\n         line 64: 6\n         line 65: 24\n         line 66: 30\n@@ -102,25 +102,25 @@\n \n   public boolean isExtended();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field isExtended:Z\n+         1: getfield      #30                 // Field isExtended:Z\n          4: ireturn\n       LineNumberTable:\n         line 70: 0\n \n   public java.util.List<org.apache.commons.compress.archivers.tar.TarArchiveStructSparse> getSparseHeaders();\n     descriptor: ()Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field sparseHeaders:Ljava/util/List;\n+         1: getfield      #20                 // Field sparseHeaders:Ljava/util/List;\n          4: areturn\n       LineNumberTable:\n         line 79: 0\n-    Signature: #26                          // ()Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;\n+    Signature: #45                          // ()Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;\n }\n SourceFile: \"TarArchiveSparseEntry.java\"\n"}]}
