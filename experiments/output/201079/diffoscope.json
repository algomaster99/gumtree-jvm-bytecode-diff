{"diffoscope-json-version": 1, "source1": "first/Nysiis.class", "source2": "second/Nysiis.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -27,120 +27,115 @@\n     private static final int TRUE_LENGTH = 6;\n     private final boolean strict;\n     \n     private static boolean isVowel(final char c) {\n         return c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U';\n     }\n     \n-    private static char[] transcodeRemaining(final char prev, final char curr, final char next, final char aNext) {\n-        if (curr == 'E' && next == 'V') {\n+    private static char[] transcodeRemaining(final char c, final char c2, final char c3, final char c4) {\n+        if (c2 == 'E' && c3 == 'V') {\n             return Nysiis.CHARS_AF;\n         }\n-        if (isVowel(curr)) {\n+        if (isVowel(c2)) {\n             return Nysiis.CHARS_A;\n         }\n-        if (curr == 'Q') {\n+        if (c2 == 'Q') {\n             return Nysiis.CHARS_G;\n         }\n-        if (curr == 'Z') {\n+        if (c2 == 'Z') {\n             return Nysiis.CHARS_S;\n         }\n-        if (curr == 'M') {\n+        if (c2 == 'M') {\n             return Nysiis.CHARS_N;\n         }\n-        if (curr == 'K') {\n-            if (next == 'N') {\n+        if (c2 == 'K') {\n+            if (c3 == 'N') {\n                 return Nysiis.CHARS_NN;\n             }\n             return Nysiis.CHARS_C;\n         }\n         else {\n-            if (curr == 'S' && next == 'C' && aNext == 'H') {\n+            if (c2 == 'S' && c3 == 'C' && c4 == 'H') {\n                 return Nysiis.CHARS_SSS;\n             }\n-            if (curr == 'P' && next == 'H') {\n+            if (c2 == 'P' && c3 == 'H') {\n                 return Nysiis.CHARS_FF;\n             }\n-            if (curr == 'H' && (!isVowel(prev) || !isVowel(next))) {\n-                return new char[] { prev };\n+            if (c2 == 'H' && (!isVowel(c) || !isVowel(c3))) {\n+                return new char[] { c };\n             }\n-            if (curr == 'W' && isVowel(prev)) {\n-                return new char[] { prev };\n+            if (c2 == 'W' && isVowel(c)) {\n+                return new char[] { c };\n             }\n-            return new char[] { curr };\n+            return new char[] { c2 };\n         }\n     }\n     \n     public Nysiis() {\n         this(true);\n     }\n     \n     public Nysiis(final boolean strict) {\n         this.strict = strict;\n     }\n     \n-    public Object encode(final Object obj) throws EncoderException {\n-        if (!(obj instanceof String)) {\n+    public Object encode(final Object o) throws EncoderException {\n+        if (!(o instanceof String)) {\n             throw new EncoderException(\"Parameter supplied to Nysiis encode is not of type java.lang.String\");\n         }\n-        return this.nysiis((String)obj);\n+        return this.nysiis((String)o);\n     }\n     \n-    public String encode(final String str) {\n-        return this.nysiis(str);\n+    public String encode(final String s) {\n+        return this.nysiis(s);\n     }\n     \n     public boolean isStrict() {\n         return this.strict;\n     }\n     \n-    public String nysiis(String str) {\n-        if (str == null) {\n+    public String nysiis(String input) {\n+        if (input == null) {\n             return null;\n         }\n-        str = SoundexUtils.clean(str);\n-        if (str.length() == 0) {\n-            return str;\n-        }\n-        str = Nysiis.PAT_MAC.matcher(str).replaceFirst(\"MCC\");\n-        str = Nysiis.PAT_KN.matcher(str).replaceFirst(\"NN\");\n-        str = Nysiis.PAT_K.matcher(str).replaceFirst(\"C\");\n-        str = Nysiis.PAT_PH_PF.matcher(str).replaceFirst(\"FF\");\n-        str = Nysiis.PAT_SCH.matcher(str).replaceFirst(\"SSS\");\n-        str = Nysiis.PAT_EE_IE.matcher(str).replaceFirst(\"Y\");\n-        str = Nysiis.PAT_DT_ETC.matcher(str).replaceFirst(\"D\");\n-        final StringBuilder key = new StringBuilder(str.length());\n-        key.append(str.charAt(0));\n-        final char[] chars = str.toCharArray();\n-        for (int len = chars.length, i = 1; i < len; ++i) {\n-            final char next = (i < len - 1) ? chars[i + 1] : ' ';\n-            final char aNext = (i < len - 2) ? chars[i + 2] : ' ';\n-            final char[] transcoded = transcodeRemaining(chars[i - 1], chars[i], next, aNext);\n-            System.arraycopy(transcoded, 0, chars, i, transcoded.length);\n-            if (chars[i] != chars[i - 1]) {\n-                key.append(chars[i]);\n-            }\n-        }\n-        if (key.length() > 1) {\n-            char lastChar = key.charAt();\n-            if (lastChar == 'S') {\n-                key.deleteCharAt(key.length() - 1);\n-                lastChar = key.charAt();\n-            }\n-            if (key.length() > 2) {\n-                final char last2Char = key.charAt();\n-                if (last2Char == 'A' && lastChar == 'Y') {\n-                    key.deleteCharAt(key.length() - 2);\n-                }\n+        input = SoundexUtils.clean(input);\n+        if (input.length() == 0) {\n+            return input;\n+        }\n+        input = Nysiis.PAT_MAC.matcher(input).replaceFirst(\"MCC\");\n+        input = Nysiis.PAT_KN.matcher(input).replaceFirst(\"NN\");\n+        input = Nysiis.PAT_K.matcher(input).replaceFirst(\"C\");\n+        input = Nysiis.PAT_PH_PF.matcher(input).replaceFirst(\"FF\");\n+        input = Nysiis.PAT_SCH.matcher(input).replaceFirst(\"SSS\");\n+        input = Nysiis.PAT_EE_IE.matcher(input).replaceFirst(\"Y\");\n+        input = Nysiis.PAT_DT_ETC.matcher(input).replaceFirst(\"D\");\n+        final StringBuilder sb = new StringBuilder(input.length());\n+        sb.append(input.charAt(0));\n+        final char[] charArray = input.toCharArray();\n+        for (int length = charArray.length, i = 1; i < length; ++i) {\n+            final char[] transcodeRemaining = transcodeRemaining(charArray[i - 1], charArray[i], (i < length - 1) ? charArray[i + 1] : ' ', (i < length - 2) ? charArray[i + 2] : ' ');\n+            System.arraycopy(transcodeRemaining, 0, charArray, i, transcodeRemaining.length);\n+            if (charArray[i] != charArray[i - 1]) {\n+                sb.append(charArray[i]);\n+            }\n+        }\n+        if (sb.length() > 1) {\n+            char c = sb.charAt();\n+            if (c == 'S') {\n+                sb.deleteCharAt(sb.length() - 1);\n+                c = sb.charAt();\n             }\n-            if (lastChar == 'A') {\n-                key.deleteCharAt(key.length() - 1);\n+            if (sb.length() > 2 && sb.charAt() == 'A' && c == 'Y') {\n+                sb.deleteCharAt(sb.length() - 2);\n+            }\n+            if (c == 'A') {\n+                sb.deleteCharAt(sb.length() - 1);\n             }\n         }\n-        final String string = key.toString();\n+        final String string = sb.toString();\n         return this.isStrict() ? string.substring(0, Math.min(6, string.length())) : string;\n     }\n     \n     static {\n         CHARS_A = new char[] { 'A' };\n         CHARS_AF = new char[] { 'A', 'F' };\n         CHARS_C = new char[] { 'C' };\n"}]}
