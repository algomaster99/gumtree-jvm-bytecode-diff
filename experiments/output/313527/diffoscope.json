{"diffoscope-json-version": 1, "source1": "first/Assertions.class", "source2": "second/Assertions.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,52 +1,52 @@\n-  SHA-256 checksum f5df0baaf8a2409c9e0a7a34f6bbe6574d848258ee416bf7a906c8ab1019a2db\n+  SHA-256 checksum 14fe68f09aa6b9c13d123a73aa267257ba301ea886b6527b0c3ac635e796e96c\n   Compiled from \"Assertions.java\"\n final class org.apache.commons.csv.Assertions\n   minor version: 0\n   major version: 51\n   flags: (0x0030) ACC_FINAL, ACC_SUPER\n-  this_class: #10                         // org/apache/commons/csv/Assertions\n-  super_class: #11                        // java/lang/Object\n+  this_class: #27                         // org/apache/commons/csv/Assertions\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 2, attributes: 1\n Constant pool:\n-   #1 = Methodref          #11.#21        // java/lang/Object.\"<init>\":()V\n-   #2 = Class              #22            // java/lang/IllegalArgumentException\n-   #3 = Class              #23            // java/lang/StringBuilder\n-   #4 = Methodref          #3.#21         // java/lang/StringBuilder.\"<init>\":()V\n-   #5 = String             #24            // Parameter \\'\n-   #6 = Methodref          #3.#25         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #7 = String             #26            // \\' must not be null!\n-   #8 = Methodref          #3.#27         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #9 = Methodref          #2.#28         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #10 = Class              #29            // org/apache/commons/csv/Assertions\n-  #11 = Class              #30            // java/lang/Object\n-  #12 = Utf8               <init>\n-  #13 = Utf8               ()V\n-  #14 = Utf8               Code\n-  #15 = Utf8               LineNumberTable\n-  #16 = Utf8               notNull\n-  #17 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)V\n-  #18 = Utf8               StackMapTable\n-  #19 = Utf8               SourceFile\n-  #20 = Utf8               Assertions.java\n-  #21 = NameAndType        #12:#13        // \"<init>\":()V\n-  #22 = Utf8               java/lang/IllegalArgumentException\n-  #23 = Utf8               java/lang/StringBuilder\n-  #24 = Utf8               Parameter \\'\n-  #25 = NameAndType        #31:#32        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #26 = Utf8               \\' must not be null!\n-  #27 = NameAndType        #33:#34        // toString:()Ljava/lang/String;\n-  #28 = NameAndType        #12:#35        // \"<init>\":(Ljava/lang/String;)V\n-  #29 = Utf8               org/apache/commons/csv/Assertions\n-  #30 = Utf8               java/lang/Object\n-  #31 = Utf8               append\n-  #32 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #33 = Utf8               toString\n-  #34 = Utf8               ()Ljava/lang/String;\n-  #35 = Utf8               (Ljava/lang/String;)V\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Class              #8             // java/lang/IllegalArgumentException\n+   #8 = Utf8               java/lang/IllegalArgumentException\n+   #9 = Class              #10            // java/lang/StringBuilder\n+  #10 = Utf8               java/lang/StringBuilder\n+  #11 = Methodref          #9.#3          // java/lang/StringBuilder.\"<init>\":()V\n+  #12 = String             #13            // Parameter \\'\n+  #13 = Utf8               Parameter \\'\n+  #14 = Methodref          #9.#15         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #15 = NameAndType        #16:#17        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #16 = Utf8               append\n+  #17 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #18 = String             #19            // \\' must not be null!\n+  #19 = Utf8               \\' must not be null!\n+  #20 = Methodref          #9.#21         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #21 = NameAndType        #22:#23        // toString:()Ljava/lang/String;\n+  #22 = Utf8               toString\n+  #23 = Utf8               ()Ljava/lang/String;\n+  #24 = Methodref          #7.#25         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #25 = NameAndType        #5:#26         // \"<init>\":(Ljava/lang/String;)V\n+  #26 = Utf8               (Ljava/lang/String;)V\n+  #27 = Class              #28            // org/apache/commons/csv/Assertions\n+  #28 = Utf8               org/apache/commons/csv/Assertions\n+  #29 = Utf8               Code\n+  #30 = Utf8               LineNumberTable\n+  #31 = Utf8               notNull\n+  #32 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)V\n+  #33 = Utf8               StackMapTable\n+  #34 = Utf8               SourceFile\n+  #35 = Utf8               Assertions.java\n {\n   private org.apache.commons.csv.Assertions();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -59,27 +59,27 @@\n   static void notNull(java.lang.Object, java.lang.String);\n     descriptor: (Ljava/lang/Object;Ljava/lang/String;)V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: ifnonnull     36\n-         4: new           #2                  // class java/lang/IllegalArgumentException\n+         4: new           #7                  // class java/lang/IllegalArgumentException\n          7: dup\n-         8: new           #3                  // class java/lang/StringBuilder\n+         8: new           #9                  // class java/lang/StringBuilder\n         11: dup\n-        12: invokespecial #4                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        15: ldc           #5                  // String Parameter \\'\n-        17: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        12: invokespecial #11                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        15: ldc           #12                 // String Parameter \\'\n+        17: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         20: aload_1\n-        21: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        24: ldc           #7                  // String \\' must not be null!\n-        26: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        29: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        32: invokespecial #9                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        21: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        24: ldc           #18                 // String \\' must not be null!\n+        26: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        29: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        32: invokespecial #24                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         35: athrow\n         36: return\n       LineNumberTable:\n         line 34: 0\n         line 35: 4\n         line 37: 36\n       StackMapTable: number_of_entries = 1\n"}]}
