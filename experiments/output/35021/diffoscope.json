{"diffoscope-json-version": 1, "source1": "first/EnumUtils.class", "source2": "second/EnumUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,251 +1,251 @@\n-  SHA-256 checksum 80320bfb17d2d036511008fa5ea6cc6ee07ffdcbaf2d221f07ef297ed33edeac\n+  SHA-256 checksum 087f5c5de9ac173330acb85a494d1b40fe2e0d3f05368dfe0b9229c992055b5c\n   Compiled from \"EnumUtils.java\"\n public class org.apache.commons.lang3.EnumUtils\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #23                         // org/apache/commons/lang3/EnumUtils\n-  super_class: #25                        // java/lang/Object\n+  this_class: #42                         // org/apache/commons/lang3/EnumUtils\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 4, methods: 15, attributes: 1\n Constant pool:\n-    #1 = Methodref          #25.#136      // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #137          // java/util/LinkedHashMap\n-    #3 = Methodref          #2.#136       // java/util/LinkedHashMap.\"<init>\":()V\n-    #4 = Methodref          #72.#138      // java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n-    #5 = Class              #112          // \"[Ljava/lang/Enum;\"\n-    #6 = Methodref          #22.#139      // java/lang/Enum.name:()Ljava/lang/String;\n-    #7 = InterfaceMethodref #73.#140      // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-    #8 = Class              #141          // java/util/ArrayList\n-    #9 = Methodref          #142.#143     // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-   #10 = Methodref          #8.#144       // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n-   #11 = Methodref          #23.#145      // org/apache/commons/lang3/EnumUtils.getEnum:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-   #12 = Methodref          #23.#146      // org/apache/commons/lang3/EnumUtils.getEnumIgnoreCase:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-   #13 = Methodref          #22.#147      // java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-   #14 = Class              #148          // java/lang/IllegalArgumentException\n-   #15 = Methodref          #72.#149      // java/lang/Class.isEnum:()Z\n-   #16 = Methodref          #150.#151     // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-   #17 = Methodref          #23.#152      // org/apache/commons/lang3/EnumUtils.checkBitVectorable:(Ljava/lang/Class;)Ljava/lang/Class;\n-   #18 = Methodref          #153.#154     // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #19 = InterfaceMethodref #155.#156     // java/lang/Iterable.iterator:()Ljava/util/Iterator;\n-   #20 = InterfaceMethodref #99.#157      // java/util/Iterator.hasNext:()Z\n-   #21 = InterfaceMethodref #99.#158      // java/util/Iterator.next:()Ljava/lang/Object;\n-   #22 = Class              #159          // java/lang/Enum\n-   #23 = Class              #160          // org/apache/commons/lang3/EnumUtils\n-   #24 = String             #161          // null elements not permitted\n-   #25 = Class              #162          // java/lang/Object\n-   #26 = Methodref          #153.#163     // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-   #27 = Methodref          #22.#164      // java/lang/Enum.ordinal:()I\n-   #28 = Methodref          #23.#165      // org/apache/commons/lang3/EnumUtils.asEnum:(Ljava/lang/Class;)Ljava/lang/Class;\n-   #29 = Methodref          #109.#166     // java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;\n-   #30 = Methodref          #109.#167     // java/util/EnumSet.add:(Ljava/lang/Object;)Z\n-   #31 = Class              #168          // java/lang/Long\n-   #32 = Methodref          #109.#156     // java/util/EnumSet.iterator:()Ljava/util/Iterator;\n-   #33 = Methodref          #169.#170     // org/apache/commons/lang3/ArrayUtils.reverse:([J)V\n-   #34 = Methodref          #153.#171     // org/apache/commons/lang3/Validate.noNullElements:([Ljava/lang/Object;)[Ljava/lang/Object;\n-   #35 = Methodref          #23.#172      // org/apache/commons/lang3/EnumUtils.generateBitVector:(Ljava/lang/Class;Ljava/lang/Iterable;)J\n-   #36 = Methodref          #173.#174     // java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z\n-   #37 = Methodref          #23.#175      // org/apache/commons/lang3/EnumUtils.processBitVectors:(Ljava/lang/Class;[J)Ljava/util/EnumSet;\n-   #38 = Class              #107          // \"[J\"\n-   #39 = Methodref          #169.#176     // org/apache/commons/lang3/ArrayUtils.clone:([J)[J\n-   #40 = String             #177          // Cannot store %s %s values in %s bits\n-   #41 = Methodref          #178.#179     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #42 = Methodref          #72.#180      // java/lang/Class.getSimpleName:()Ljava/lang/String;\n-   #43 = String             #181          // EnumClass must be defined.\n-   #44 = Methodref          #153.#182     // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-   #45 = String             #183          // %s does not seem to be an Enum type\n-   #46 = Utf8               NULL_ELEMENTS_NOT_PERMITTED\n-   #47 = Utf8               Ljava/lang/String;\n-   #48 = Utf8               ConstantValue\n-   #49 = Utf8               CANNOT_STORE_S_S_VALUES_IN_S_BITS\n-   #50 = Utf8               S_DOES_NOT_SEEM_TO_BE_AN_ENUM_TYPE\n-   #51 = Utf8               ENUM_CLASS_MUST_BE_DEFINED\n-   #52 = Utf8               <init>\n-   #53 = Utf8               ()V\n-   #54 = Utf8               Code\n-   #55 = Utf8               LineNumberTable\n-   #56 = Utf8               LocalVariableTable\n-   #57 = Utf8               this\n-   #58 = Utf8               Lorg/apache/commons/lang3/EnumUtils;\n-   #59 = Utf8               getEnumMap\n-   #60 = Utf8               (Ljava/lang/Class;)Ljava/util/Map;\n-   #61 = Utf8               e\n-   #62 = Utf8               Ljava/lang/Enum;\n-   #63 = Utf8               enumClass\n-   #64 = Utf8               Ljava/lang/Class;\n-   #65 = Utf8               map\n-   #66 = Utf8               Ljava/util/Map;\n-   #67 = Utf8               LocalVariableTypeTable\n-   #68 = Utf8               TE;\n-   #69 = Utf8               Ljava/lang/Class<TE;>;\n-   #70 = Utf8               Ljava/util/Map<Ljava/lang/String;TE;>;\n-   #71 = Utf8               StackMapTable\n-   #72 = Class              #184          // java/lang/Class\n-   #73 = Class              #185          // java/util/Map\n-   #74 = Utf8               Signature\n-   #75 = Utf8               <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;)Ljava/util/Map<Ljava/lang/String;TE;>;\n-   #76 = Utf8               getEnumList\n-   #77 = Utf8               (Ljava/lang/Class;)Ljava/util/List;\n-   #78 = Utf8               <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;)Ljava/util/List<TE;>;\n-   #79 = Utf8               isValidEnum\n-   #80 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)Z\n-   #81 = Utf8               enumName\n-   #82 = Utf8               <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;Ljava/lang/String;)Z\n-   #83 = Utf8               isValidEnumIgnoreCase\n-   #84 = Utf8               getEnum\n-   #85 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-   #86 = Utf8               ex\n-   #87 = Utf8               Ljava/lang/IllegalArgumentException;\n-   #88 = Utf8               <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;Ljava/lang/String;)TE;\n-   #89 = Utf8               getEnumIgnoreCase\n-   #90 = Utf8               each\n-   #91 = Utf8               generateBitVector\n-   #92 = Utf8               (Ljava/lang/Class;Ljava/lang/Iterable;)J\n-   #93 = Utf8               constant\n-   #94 = Utf8               values\n-   #95 = Utf8               Ljava/lang/Iterable;\n-   #96 = Utf8               total\n-   #97 = Utf8               J\n-   #98 = Utf8               Ljava/lang/Iterable<+TE;>;\n-   #99 = Class              #186          // java/util/Iterator\n-  #100 = Utf8               <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;Ljava/lang/Iterable<+TE;>;)J\n-  #101 = Utf8               generateBitVectors\n-  #102 = Utf8               (Ljava/lang/Class;Ljava/lang/Iterable;)[J\n-  #103 = Utf8               value\n-  #104 = Utf8               condensed\n-  #105 = Utf8               Ljava/util/EnumSet;\n-  #106 = Utf8               result\n-  #107 = Utf8               [J\n-  #108 = Utf8               Ljava/util/EnumSet<TE;>;\n-  #109 = Class              #187          // java/util/EnumSet\n-  #110 = Utf8               <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;Ljava/lang/Iterable<+TE;>;)[J\n-  #111 = Utf8               (Ljava/lang/Class;[Ljava/lang/Enum;)J\n-  #112 = Utf8               [Ljava/lang/Enum;\n-  #113 = Utf8               [TE;\n-  #114 = Utf8               <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;[TE;)J\n-  #115 = Utf8               RuntimeVisibleAnnotations\n-  #116 = Utf8               Ljava/lang/SafeVarargs;\n-  #117 = Utf8               (Ljava/lang/Class;[Ljava/lang/Enum;)[J\n-  #118 = Utf8               <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;[TE;)[J\n-  #119 = Utf8               processBitVector\n-  #120 = Utf8               (Ljava/lang/Class;J)Ljava/util/EnumSet;\n-  #121 = Utf8               <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;J)Ljava/util/EnumSet<TE;>;\n-  #122 = Utf8               processBitVectors\n-  #123 = Utf8               (Ljava/lang/Class;[J)Ljava/util/EnumSet;\n-  #124 = Utf8               block\n-  #125 = Utf8               I\n-  #126 = Utf8               results\n-  #127 = Utf8               lvalues\n-  #128 = Utf8               <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;[J)Ljava/util/EnumSet<TE;>;\n-  #129 = Utf8               checkBitVectorable\n-  #130 = Utf8               (Ljava/lang/Class;)Ljava/lang/Class;\n-  #131 = Utf8               constants\n-  #132 = Utf8               <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;)Ljava/lang/Class<TE;>;\n-  #133 = Utf8               asEnum\n-  #134 = Utf8               SourceFile\n-  #135 = Utf8               EnumUtils.java\n-  #136 = NameAndType        #52:#53       // \"<init>\":()V\n-  #137 = Utf8               java/util/LinkedHashMap\n-  #138 = NameAndType        #188:#189     // getEnumConstants:()[Ljava/lang/Object;\n-  #139 = NameAndType        #190:#191     // name:()Ljava/lang/String;\n-  #140 = NameAndType        #192:#193     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #141 = Utf8               java/util/ArrayList\n-  #142 = Class              #194          // java/util/Arrays\n-  #143 = NameAndType        #195:#196     // asList:([Ljava/lang/Object;)Ljava/util/List;\n-  #144 = NameAndType        #52:#197      // \"<init>\":(Ljava/util/Collection;)V\n-  #145 = NameAndType        #84:#85       // getEnum:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-  #146 = NameAndType        #89:#85       // getEnumIgnoreCase:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-  #147 = NameAndType        #198:#85      // valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-  #148 = Utf8               java/lang/IllegalArgumentException\n-  #149 = NameAndType        #199:#200     // isEnum:()Z\n-  #150 = Class              #201          // java/lang/String\n-  #151 = NameAndType        #202:#203     // equalsIgnoreCase:(Ljava/lang/String;)Z\n-  #152 = NameAndType        #129:#130     // checkBitVectorable:(Ljava/lang/Class;)Ljava/lang/Class;\n-  #153 = Class              #204          // org/apache/commons/lang3/Validate\n-  #154 = NameAndType        #205:#206     // notNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #155 = Class              #207          // java/lang/Iterable\n-  #156 = NameAndType        #208:#209     // iterator:()Ljava/util/Iterator;\n-  #157 = NameAndType        #210:#200     // hasNext:()Z\n-  #158 = NameAndType        #211:#212     // next:()Ljava/lang/Object;\n-  #159 = Utf8               java/lang/Enum\n-  #160 = Utf8               org/apache/commons/lang3/EnumUtils\n-  #161 = Utf8               null elements not permitted\n-  #162 = Utf8               java/lang/Object\n-  #163 = NameAndType        #213:#214     // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-  #164 = NameAndType        #215:#216     // ordinal:()I\n-  #165 = NameAndType        #133:#130     // asEnum:(Ljava/lang/Class;)Ljava/lang/Class;\n-  #166 = NameAndType        #217:#218     // noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;\n-  #167 = NameAndType        #219:#220     // add:(Ljava/lang/Object;)Z\n-  #168 = Utf8               java/lang/Long\n-  #169 = Class              #221          // org/apache/commons/lang3/ArrayUtils\n-  #170 = NameAndType        #222:#223     // reverse:([J)V\n-  #171 = NameAndType        #224:#225     // noNullElements:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #172 = NameAndType        #91:#92       // generateBitVector:(Ljava/lang/Class;Ljava/lang/Iterable;)J\n-  #173 = Class              #226          // java/util/Collections\n-  #174 = NameAndType        #227:#228     // addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z\n-  #175 = NameAndType        #122:#123     // processBitVectors:(Ljava/lang/Class;[J)Ljava/util/EnumSet;\n-  #176 = NameAndType        #229:#230     // clone:([J)[J\n-  #177 = Utf8               Cannot store %s %s values in %s bits\n-  #178 = Class              #231          // java/lang/Integer\n-  #179 = NameAndType        #198:#232     // valueOf:(I)Ljava/lang/Integer;\n-  #180 = NameAndType        #233:#191     // getSimpleName:()Ljava/lang/String;\n-  #181 = Utf8               EnumClass must be defined.\n-  #182 = NameAndType        #205:#234     // notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #183 = Utf8               %s does not seem to be an Enum type\n-  #184 = Utf8               java/lang/Class\n-  #185 = Utf8               java/util/Map\n-  #186 = Utf8               java/util/Iterator\n-  #187 = Utf8               java/util/EnumSet\n-  #188 = Utf8               getEnumConstants\n-  #189 = Utf8               ()[Ljava/lang/Object;\n-  #190 = Utf8               name\n-  #191 = Utf8               ()Ljava/lang/String;\n-  #192 = Utf8               put\n-  #193 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #194 = Utf8               java/util/Arrays\n-  #195 = Utf8               asList\n-  #196 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n-  #197 = Utf8               (Ljava/util/Collection;)V\n-  #198 = Utf8               valueOf\n-  #199 = Utf8               isEnum\n-  #200 = Utf8               ()Z\n-  #201 = Utf8               java/lang/String\n-  #202 = Utf8               equalsIgnoreCase\n-  #203 = Utf8               (Ljava/lang/String;)Z\n-  #204 = Utf8               org/apache/commons/lang3/Validate\n-  #205 = Utf8               notNull\n-  #206 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #207 = Utf8               java/lang/Iterable\n-  #208 = Utf8               iterator\n-  #209 = Utf8               ()Ljava/util/Iterator;\n-  #210 = Utf8               hasNext\n-  #211 = Utf8               next\n-  #212 = Utf8               ()Ljava/lang/Object;\n-  #213 = Utf8               isTrue\n-  #214 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n-  #215 = Utf8               ordinal\n-  #216 = Utf8               ()I\n-  #217 = Utf8               noneOf\n-  #218 = Utf8               (Ljava/lang/Class;)Ljava/util/EnumSet;\n-  #219 = Utf8               add\n-  #220 = Utf8               (Ljava/lang/Object;)Z\n-  #221 = Utf8               org/apache/commons/lang3/ArrayUtils\n-  #222 = Utf8               reverse\n-  #223 = Utf8               ([J)V\n-  #224 = Utf8               noNullElements\n-  #225 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #226 = Utf8               java/util/Collections\n-  #227 = Utf8               addAll\n-  #228 = Utf8               (Ljava/util/Collection;[Ljava/lang/Object;)Z\n-  #229 = Utf8               clone\n-  #230 = Utf8               ([J)[J\n-  #231 = Utf8               java/lang/Integer\n-  #232 = Utf8               (I)Ljava/lang/Integer;\n-  #233 = Utf8               getSimpleName\n-  #234 = Utf8               (Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Class              #8            // java/util/LinkedHashMap\n+    #8 = Utf8               java/util/LinkedHashMap\n+    #9 = Methodref          #7.#3         // java/util/LinkedHashMap.\"<init>\":()V\n+   #10 = Methodref          #11.#12       // java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n+   #11 = Class              #13           // java/lang/Class\n+   #12 = NameAndType        #14:#15       // getEnumConstants:()[Ljava/lang/Object;\n+   #13 = Utf8               java/lang/Class\n+   #14 = Utf8               getEnumConstants\n+   #15 = Utf8               ()[Ljava/lang/Object;\n+   #16 = Class              #17           // \"[Ljava/lang/Enum;\"\n+   #17 = Utf8               [Ljava/lang/Enum;\n+   #18 = Methodref          #19.#20       // java/lang/Enum.name:()Ljava/lang/String;\n+   #19 = Class              #21           // java/lang/Enum\n+   #20 = NameAndType        #22:#23       // name:()Ljava/lang/String;\n+   #21 = Utf8               java/lang/Enum\n+   #22 = Utf8               name\n+   #23 = Utf8               ()Ljava/lang/String;\n+   #24 = InterfaceMethodref #25.#26       // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #25 = Class              #27           // java/util/Map\n+   #26 = NameAndType        #28:#29       // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #27 = Utf8               java/util/Map\n+   #28 = Utf8               put\n+   #29 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #30 = Class              #31           // java/util/ArrayList\n+   #31 = Utf8               java/util/ArrayList\n+   #32 = Methodref          #33.#34       // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+   #33 = Class              #35           // java/util/Arrays\n+   #34 = NameAndType        #36:#37       // asList:([Ljava/lang/Object;)Ljava/util/List;\n+   #35 = Utf8               java/util/Arrays\n+   #36 = Utf8               asList\n+   #37 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n+   #38 = Methodref          #30.#39       // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n+   #39 = NameAndType        #5:#40        // \"<init>\":(Ljava/util/Collection;)V\n+   #40 = Utf8               (Ljava/util/Collection;)V\n+   #41 = Methodref          #42.#43       // org/apache/commons/lang3/EnumUtils.getEnum:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+   #42 = Class              #44           // org/apache/commons/lang3/EnumUtils\n+   #43 = NameAndType        #45:#46       // getEnum:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+   #44 = Utf8               org/apache/commons/lang3/EnumUtils\n+   #45 = Utf8               getEnum\n+   #46 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+   #47 = Methodref          #42.#48       // org/apache/commons/lang3/EnumUtils.getEnumIgnoreCase:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+   #48 = NameAndType        #49:#46       // getEnumIgnoreCase:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+   #49 = Utf8               getEnumIgnoreCase\n+   #50 = Methodref          #19.#51       // java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+   #51 = NameAndType        #52:#46       // valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+   #52 = Utf8               valueOf\n+   #53 = Class              #54           // java/lang/IllegalArgumentException\n+   #54 = Utf8               java/lang/IllegalArgumentException\n+   #55 = Methodref          #11.#56       // java/lang/Class.isEnum:()Z\n+   #56 = NameAndType        #57:#58       // isEnum:()Z\n+   #57 = Utf8               isEnum\n+   #58 = Utf8               ()Z\n+   #59 = Methodref          #60.#61       // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+   #60 = Class              #62           // java/lang/String\n+   #61 = NameAndType        #63:#64       // equalsIgnoreCase:(Ljava/lang/String;)Z\n+   #62 = Utf8               java/lang/String\n+   #63 = Utf8               equalsIgnoreCase\n+   #64 = Utf8               (Ljava/lang/String;)Z\n+   #65 = Methodref          #42.#66       // org/apache/commons/lang3/EnumUtils.checkBitVectorable:(Ljava/lang/Class;)Ljava/lang/Class;\n+   #66 = NameAndType        #67:#68       // checkBitVectorable:(Ljava/lang/Class;)Ljava/lang/Class;\n+   #67 = Utf8               checkBitVectorable\n+   #68 = Utf8               (Ljava/lang/Class;)Ljava/lang/Class;\n+   #69 = Methodref          #70.#71       // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #70 = Class              #72           // org/apache/commons/lang3/Validate\n+   #71 = NameAndType        #73:#74       // notNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #72 = Utf8               org/apache/commons/lang3/Validate\n+   #73 = Utf8               notNull\n+   #74 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #75 = InterfaceMethodref #76.#77       // java/lang/Iterable.iterator:()Ljava/util/Iterator;\n+   #76 = Class              #78           // java/lang/Iterable\n+   #77 = NameAndType        #79:#80       // iterator:()Ljava/util/Iterator;\n+   #78 = Utf8               java/lang/Iterable\n+   #79 = Utf8               iterator\n+   #80 = Utf8               ()Ljava/util/Iterator;\n+   #81 = InterfaceMethodref #82.#83       // java/util/Iterator.hasNext:()Z\n+   #82 = Class              #84           // java/util/Iterator\n+   #83 = NameAndType        #85:#58       // hasNext:()Z\n+   #84 = Utf8               java/util/Iterator\n+   #85 = Utf8               hasNext\n+   #86 = InterfaceMethodref #82.#87       // java/util/Iterator.next:()Ljava/lang/Object;\n+   #87 = NameAndType        #88:#89       // next:()Ljava/lang/Object;\n+   #88 = Utf8               next\n+   #89 = Utf8               ()Ljava/lang/Object;\n+   #90 = String             #91           // null elements not permitted\n+   #91 = Utf8               null elements not permitted\n+   #92 = Methodref          #70.#93       // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+   #93 = NameAndType        #94:#95       // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+   #94 = Utf8               isTrue\n+   #95 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n+   #96 = Methodref          #19.#97       // java/lang/Enum.ordinal:()I\n+   #97 = NameAndType        #98:#99       // ordinal:()I\n+   #98 = Utf8               ordinal\n+   #99 = Utf8               ()I\n+  #100 = Methodref          #42.#101      // org/apache/commons/lang3/EnumUtils.asEnum:(Ljava/lang/Class;)Ljava/lang/Class;\n+  #101 = NameAndType        #102:#68      // asEnum:(Ljava/lang/Class;)Ljava/lang/Class;\n+  #102 = Utf8               asEnum\n+  #103 = Methodref          #104.#105     // java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;\n+  #104 = Class              #106          // java/util/EnumSet\n+  #105 = NameAndType        #107:#108     // noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;\n+  #106 = Utf8               java/util/EnumSet\n+  #107 = Utf8               noneOf\n+  #108 = Utf8               (Ljava/lang/Class;)Ljava/util/EnumSet;\n+  #109 = Methodref          #104.#110     // java/util/EnumSet.add:(Ljava/lang/Object;)Z\n+  #110 = NameAndType        #111:#112     // add:(Ljava/lang/Object;)Z\n+  #111 = Utf8               add\n+  #112 = Utf8               (Ljava/lang/Object;)Z\n+  #113 = Class              #114          // java/lang/Long\n+  #114 = Utf8               java/lang/Long\n+  #115 = Methodref          #104.#77      // java/util/EnumSet.iterator:()Ljava/util/Iterator;\n+  #116 = Methodref          #117.#118     // org/apache/commons/lang3/ArrayUtils.reverse:([J)V\n+  #117 = Class              #119          // org/apache/commons/lang3/ArrayUtils\n+  #118 = NameAndType        #120:#121     // reverse:([J)V\n+  #119 = Utf8               org/apache/commons/lang3/ArrayUtils\n+  #120 = Utf8               reverse\n+  #121 = Utf8               ([J)V\n+  #122 = Methodref          #70.#123      // org/apache/commons/lang3/Validate.noNullElements:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #123 = NameAndType        #124:#125     // noNullElements:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #124 = Utf8               noNullElements\n+  #125 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #126 = Methodref          #42.#127      // org/apache/commons/lang3/EnumUtils.generateBitVector:(Ljava/lang/Class;Ljava/lang/Iterable;)J\n+  #127 = NameAndType        #128:#129     // generateBitVector:(Ljava/lang/Class;Ljava/lang/Iterable;)J\n+  #128 = Utf8               generateBitVector\n+  #129 = Utf8               (Ljava/lang/Class;Ljava/lang/Iterable;)J\n+  #130 = Methodref          #131.#132     // java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z\n+  #131 = Class              #133          // java/util/Collections\n+  #132 = NameAndType        #134:#135     // addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z\n+  #133 = Utf8               java/util/Collections\n+  #134 = Utf8               addAll\n+  #135 = Utf8               (Ljava/util/Collection;[Ljava/lang/Object;)Z\n+  #136 = Methodref          #42.#137      // org/apache/commons/lang3/EnumUtils.processBitVectors:(Ljava/lang/Class;[J)Ljava/util/EnumSet;\n+  #137 = NameAndType        #138:#139     // processBitVectors:(Ljava/lang/Class;[J)Ljava/util/EnumSet;\n+  #138 = Utf8               processBitVectors\n+  #139 = Utf8               (Ljava/lang/Class;[J)Ljava/util/EnumSet;\n+  #140 = Class              #141          // \"[J\"\n+  #141 = Utf8               [J\n+  #142 = Methodref          #117.#143     // org/apache/commons/lang3/ArrayUtils.clone:([J)[J\n+  #143 = NameAndType        #144:#145     // clone:([J)[J\n+  #144 = Utf8               clone\n+  #145 = Utf8               ([J)[J\n+  #146 = String             #147          // Cannot store %s %s values in %s bits\n+  #147 = Utf8               Cannot store %s %s values in %s bits\n+  #148 = Methodref          #149.#150     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+  #149 = Class              #151          // java/lang/Integer\n+  #150 = NameAndType        #52:#152      // valueOf:(I)Ljava/lang/Integer;\n+  #151 = Utf8               java/lang/Integer\n+  #152 = Utf8               (I)Ljava/lang/Integer;\n+  #153 = Methodref          #11.#154      // java/lang/Class.getSimpleName:()Ljava/lang/String;\n+  #154 = NameAndType        #155:#23      // getSimpleName:()Ljava/lang/String;\n+  #155 = Utf8               getSimpleName\n+  #156 = String             #157          // EnumClass must be defined.\n+  #157 = Utf8               EnumClass must be defined.\n+  #158 = Methodref          #70.#159      // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #159 = NameAndType        #73:#160      // notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #160 = Utf8               (Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #161 = String             #162          // %s does not seem to be an Enum type\n+  #162 = Utf8               %s does not seem to be an Enum type\n+  #163 = Utf8               NULL_ELEMENTS_NOT_PERMITTED\n+  #164 = Utf8               Ljava/lang/String;\n+  #165 = Utf8               ConstantValue\n+  #166 = Utf8               CANNOT_STORE_S_S_VALUES_IN_S_BITS\n+  #167 = Utf8               S_DOES_NOT_SEEM_TO_BE_AN_ENUM_TYPE\n+  #168 = Utf8               ENUM_CLASS_MUST_BE_DEFINED\n+  #169 = Utf8               Code\n+  #170 = Utf8               LineNumberTable\n+  #171 = Utf8               LocalVariableTable\n+  #172 = Utf8               this\n+  #173 = Utf8               Lorg/apache/commons/lang3/EnumUtils;\n+  #174 = Utf8               getEnumMap\n+  #175 = Utf8               (Ljava/lang/Class;)Ljava/util/Map;\n+  #176 = Utf8               e\n+  #177 = Utf8               Ljava/lang/Enum;\n+  #178 = Utf8               enumClass\n+  #179 = Utf8               Ljava/lang/Class;\n+  #180 = Utf8               map\n+  #181 = Utf8               Ljava/util/Map;\n+  #182 = Utf8               LocalVariableTypeTable\n+  #183 = Utf8               TE;\n+  #184 = Utf8               Ljava/lang/Class<TE;>;\n+  #185 = Utf8               Ljava/util/Map<Ljava/lang/String;TE;>;\n+  #186 = Utf8               StackMapTable\n+  #187 = Utf8               Signature\n+  #188 = Utf8               <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;)Ljava/util/Map<Ljava/lang/String;TE;>;\n+  #189 = Utf8               getEnumList\n+  #190 = Utf8               (Ljava/lang/Class;)Ljava/util/List;\n+  #191 = Utf8               <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;)Ljava/util/List<TE;>;\n+  #192 = Utf8               isValidEnum\n+  #193 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)Z\n+  #194 = Utf8               enumName\n+  #195 = Utf8               <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;Ljava/lang/String;)Z\n+  #196 = Utf8               isValidEnumIgnoreCase\n+  #197 = Utf8               ex\n+  #198 = Utf8               Ljava/lang/IllegalArgumentException;\n+  #199 = Utf8               <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;Ljava/lang/String;)TE;\n+  #200 = Utf8               each\n+  #201 = Utf8               constant\n+  #202 = Utf8               values\n+  #203 = Utf8               Ljava/lang/Iterable;\n+  #204 = Utf8               total\n+  #205 = Utf8               J\n+  #206 = Utf8               Ljava/lang/Iterable<+TE;>;\n+  #207 = Utf8               <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;Ljava/lang/Iterable<+TE;>;)J\n+  #208 = Utf8               generateBitVectors\n+  #209 = Utf8               (Ljava/lang/Class;Ljava/lang/Iterable;)[J\n+  #210 = Utf8               value\n+  #211 = Utf8               condensed\n+  #212 = Utf8               Ljava/util/EnumSet;\n+  #213 = Utf8               result\n+  #214 = Utf8               Ljava/util/EnumSet<TE;>;\n+  #215 = Utf8               <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;Ljava/lang/Iterable<+TE;>;)[J\n+  #216 = Utf8               (Ljava/lang/Class;[Ljava/lang/Enum;)J\n+  #217 = Utf8               [TE;\n+  #218 = Utf8               <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;[TE;)J\n+  #219 = Utf8               RuntimeVisibleAnnotations\n+  #220 = Utf8               Ljava/lang/SafeVarargs;\n+  #221 = Utf8               (Ljava/lang/Class;[Ljava/lang/Enum;)[J\n+  #222 = Utf8               <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;[TE;)[J\n+  #223 = Utf8               processBitVector\n+  #224 = Utf8               (Ljava/lang/Class;J)Ljava/util/EnumSet;\n+  #225 = Utf8               <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;J)Ljava/util/EnumSet<TE;>;\n+  #226 = Utf8               block\n+  #227 = Utf8               I\n+  #228 = Utf8               results\n+  #229 = Utf8               lvalues\n+  #230 = Utf8               <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;[J)Ljava/util/EnumSet<TE;>;\n+  #231 = Utf8               constants\n+  #232 = Utf8               <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;)Ljava/lang/Class<TE;>;\n+  #233 = Utf8               SourceFile\n+  #234 = Utf8               EnumUtils.java\n {\n   private static final java.lang.String NULL_ELEMENTS_NOT_PERMITTED = \"null elements not permitted\";\n     descriptor: Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: String null elements not permitted\n \n   private static final java.lang.String CANNOT_STORE_S_S_VALUES_IN_S_BITS = \"Cannot store %s %s values in %s bits\";\n@@ -279,21 +279,21 @@\n             0       5     0  this   Lorg/apache/commons/lang3/EnumUtils;\n \n   public static <E extends java.lang.Enum<E>> java.util.Map<java.lang.String, E> getEnumMap(java.lang.Class<E>);\n     descriptor: (Ljava/lang/Class;)Ljava/util/Map;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=6, args_size=1\n-         0: new           #2                  // class java/util/LinkedHashMap\n+         0: new           #7                  // class java/util/LinkedHashMap\n          3: dup\n-         4: invokespecial #3                  // Method java/util/LinkedHashMap.\"<init>\":()V\n+         4: invokespecial #9                  // Method java/util/LinkedHashMap.\"<init>\":()V\n          7: astore_1\n          8: aload_0\n-         9: invokevirtual #4                  // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n-        12: checkcast     #5                  // class \"[Ljava/lang/Enum;\"\n+         9: invokevirtual #10                 // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n+        12: checkcast     #16                 // class \"[Ljava/lang/Enum;\"\n         15: astore_2\n         16: aload_2\n         17: arraylength\n         18: istore_3\n         19: iconst_0\n         20: istore        4\n         22: iload         4\n@@ -301,17 +301,17 @@\n         25: if_icmpge     54\n         28: aload_2\n         29: iload         4\n         31: aaload\n         32: astore        5\n         34: aload_1\n         35: aload         5\n-        37: invokevirtual #6                  // Method java/lang/Enum.name:()Ljava/lang/String;\n+        37: invokevirtual #18                 // Method java/lang/Enum.name:()Ljava/lang/String;\n         40: aload         5\n-        42: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+        42: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n         47: pop\n         48: iinc          4, 1\n         51: goto          22\n         54: aload_1\n         55: areturn\n       LineNumberTable:\n         line 58: 0\n@@ -332,46 +332,46 @@\n       StackMapTable: number_of_entries = 2\n         frame_type = 255 /* full_frame */\n           offset_delta = 22\n           locals = [ class java/lang/Class, class java/util/Map, class \"[Ljava/lang/Enum;\", int, int ]\n           stack = []\n         frame_type = 248 /* chop */\n           offset_delta = 31\n-    Signature: #75                          // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;)Ljava/util/Map<Ljava/lang/String;TE;>;\n+    Signature: #188                         // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;)Ljava/util/Map<Ljava/lang/String;TE;>;\n \n   public static <E extends java.lang.Enum<E>> java.util.List<E> getEnumList(java.lang.Class<E>);\n     descriptor: (Ljava/lang/Class;)Ljava/util/List;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: new           #8                  // class java/util/ArrayList\n+         0: new           #30                 // class java/util/ArrayList\n          3: dup\n          4: aload_0\n-         5: invokevirtual #4                  // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n-         8: invokestatic  #9                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-        11: invokespecial #10                 // Method java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n+         5: invokevirtual #10                 // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n+         8: invokestatic  #32                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+        11: invokespecial #38                 // Method java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n         14: areturn\n       LineNumberTable:\n         line 75: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0 enumClass   Ljava/lang/Class;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0 enumClass   Ljava/lang/Class<TE;>;\n-    Signature: #78                          // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;)Ljava/util/List<TE;>;\n+    Signature: #191                         // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;)Ljava/util/List<TE;>;\n \n   public static <E extends java.lang.Enum<E>> boolean isValidEnum(java.lang.Class<E>, java.lang.String);\n     descriptor: (Ljava/lang/Class;Ljava/lang/String;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #11                 // Method getEnum:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+         2: invokestatic  #41                 // Method getEnum:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n          5: ifnull        12\n          8: iconst_1\n          9: goto          13\n         12: iconst_0\n         13: ireturn\n       LineNumberTable:\n         line 90: 0\n@@ -382,24 +382,24 @@\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0 enumClass   Ljava/lang/Class<TE;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 12 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #82                          // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;Ljava/lang/String;)Z\n+    Signature: #195                         // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;Ljava/lang/String;)Z\n \n   public static <E extends java.lang.Enum<E>> boolean isValidEnumIgnoreCase(java.lang.Class<E>, java.lang.String);\n     descriptor: (Ljava/lang/Class;Ljava/lang/String;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #12                 // Method getEnumIgnoreCase:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+         2: invokestatic  #47                 // Method getEnumIgnoreCase:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n          5: ifnull        12\n          8: iconst_1\n          9: goto          13\n         12: iconst_0\n         13: ireturn\n       LineNumberTable:\n         line 107: 0\n@@ -410,28 +410,28 @@\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0 enumClass   Ljava/lang/Class<TE;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 12 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #82                          // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;Ljava/lang/String;)Z\n+    Signature: #195                         // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;Ljava/lang/String;)Z\n \n   public static <E extends java.lang.Enum<E>> E getEnum(java.lang.Class<E>, java.lang.String);\n     descriptor: (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n          7: aload_1\n-         8: invokestatic  #13                 // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+         8: invokestatic  #50                 // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n         11: areturn\n         12: astore_2\n         13: aconst_null\n         14: areturn\n       Exception table:\n          from    to  target type\n              6    11    12   Class java/lang/IllegalArgumentException\n@@ -449,48 +449,48 @@\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0 enumClass   Ljava/lang/Class<TE;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 6 /* same */\n         frame_type = 69 /* same_locals_1_stack_item */\n           stack = [ class java/lang/IllegalArgumentException ]\n-    Signature: #88                          // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;Ljava/lang/String;)TE;\n+    Signature: #199                         // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;Ljava/lang/String;)TE;\n \n   public static <E extends java.lang.Enum<E>> E getEnumIgnoreCase(java.lang.Class<E>, java.lang.String);\n     descriptor: (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=6, args_size=2\n          0: aload_1\n          1: ifnull        11\n          4: aload_0\n-         5: invokevirtual #15                 // Method java/lang/Class.isEnum:()Z\n+         5: invokevirtual #55                 // Method java/lang/Class.isEnum:()Z\n          8: ifne          13\n         11: aconst_null\n         12: areturn\n         13: aload_0\n-        14: invokevirtual #4                  // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n-        17: checkcast     #5                  // class \"[Ljava/lang/Enum;\"\n+        14: invokevirtual #10                 // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n+        17: checkcast     #16                 // class \"[Ljava/lang/Enum;\"\n         20: astore_2\n         21: aload_2\n         22: arraylength\n         23: istore_3\n         24: iconst_0\n         25: istore        4\n         27: iload         4\n         29: iload_3\n         30: if_icmpge     60\n         33: aload_2\n         34: iload         4\n         36: aaload\n         37: astore        5\n         39: aload         5\n-        41: invokevirtual #6                  // Method java/lang/Enum.name:()Ljava/lang/String;\n+        41: invokevirtual #18                 // Method java/lang/Enum.name:()Ljava/lang/String;\n         44: aload_1\n-        45: invokevirtual #16                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+        45: invokevirtual #59                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n         48: ifeq          54\n         51: aload         5\n         53: areturn\n         54: iinc          4, 1\n         57: goto          27\n         60: aconst_null\n         61: areturn\n@@ -516,52 +516,52 @@\n         frame_type = 1 /* same */\n         frame_type = 254 /* append */\n           offset_delta = 13\n           locals = [ class \"[Ljava/lang/Enum;\", int, int ]\n         frame_type = 26 /* same */\n         frame_type = 248 /* chop */\n           offset_delta = 5\n-    Signature: #88                          // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;Ljava/lang/String;)TE;\n+    Signature: #199                         // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;Ljava/lang/String;)TE;\n \n   public static <E extends java.lang.Enum<E>> long generateBitVector(java.lang.Class<E>, java.lang.Iterable<? extends E>);\n     descriptor: (Ljava/lang/Class;Ljava/lang/Iterable;)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=6, args_size=2\n          0: aload_0\n-         1: invokestatic  #17                 // Method checkBitVectorable:(Ljava/lang/Class;)Ljava/lang/Class;\n+         1: invokestatic  #65                 // Method checkBitVectorable:(Ljava/lang/Class;)Ljava/lang/Class;\n          4: pop\n          5: aload_1\n-         6: invokestatic  #18                 // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         6: invokestatic  #69                 // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          9: pop\n         10: lconst_0\n         11: lstore_2\n         12: aload_1\n-        13: invokeinterface #19,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;\n+        13: invokeinterface #75,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;\n         18: astore        4\n         20: aload         4\n-        22: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        22: invokeinterface #81,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         27: ifeq          74\n         30: aload         4\n-        32: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        37: checkcast     #22                 // class java/lang/Enum\n+        32: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        37: checkcast     #19                 // class java/lang/Enum\n         40: astore        5\n         42: aload         5\n         44: ifnull        51\n         47: iconst_1\n         48: goto          52\n         51: iconst_0\n-        52: ldc           #24                 // String null elements not permitted\n+        52: ldc           #90                 // String null elements not permitted\n         54: iconst_0\n-        55: anewarray     #25                 // class java/lang/Object\n-        58: invokestatic  #26                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        55: anewarray     #2                  // class java/lang/Object\n+        58: invokestatic  #92                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         61: lload_2\n         62: lconst_1\n         63: aload         5\n-        65: invokevirtual #27                 // Method java/lang/Enum.ordinal:()I\n+        65: invokevirtual #96                 // Method java/lang/Enum.ordinal:()I\n         68: lshl\n         69: lor\n         70: lstore_2\n         71: goto          20\n         74: lload_2\n         75: lreturn\n       LineNumberTable:\n@@ -591,94 +591,94 @@\n         frame_type = 252 /* append */\n           offset_delta = 30\n           locals = [ class java/lang/Enum ]\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n         frame_type = 249 /* chop */\n           offset_delta = 21\n-    Signature: #100                         // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;Ljava/lang/Iterable<+TE;>;)J\n+    Signature: #207                         // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;Ljava/lang/Iterable<+TE;>;)J\n \n   public static <E extends java.lang.Enum<E>> long[] generateBitVectors(java.lang.Class<E>, java.lang.Iterable<? extends E>);\n     descriptor: (Ljava/lang/Class;Ljava/lang/Iterable;)[J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=8, locals=6, args_size=2\n          0: aload_0\n-         1: invokestatic  #28                 // Method asEnum:(Ljava/lang/Class;)Ljava/lang/Class;\n+         1: invokestatic  #100                // Method asEnum:(Ljava/lang/Class;)Ljava/lang/Class;\n          4: pop\n          5: aload_1\n-         6: invokestatic  #18                 // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         6: invokestatic  #69                 // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          9: pop\n         10: aload_0\n-        11: invokestatic  #29                 // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;\n+        11: invokestatic  #103                // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;\n         14: astore_2\n         15: aload_1\n-        16: invokeinterface #19,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;\n+        16: invokeinterface #75,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;\n         21: astore_3\n         22: aload_3\n-        23: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        23: invokeinterface #81,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         28: ifeq          71\n         31: aload_3\n-        32: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        37: checkcast     #22                 // class java/lang/Enum\n+        32: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        37: checkcast     #19                 // class java/lang/Enum\n         40: astore        4\n         42: aload         4\n         44: ifnull        51\n         47: iconst_1\n         48: goto          52\n         51: iconst_0\n-        52: ldc           #24                 // String null elements not permitted\n+        52: ldc           #90                 // String null elements not permitted\n         54: iconst_0\n-        55: anewarray     #25                 // class java/lang/Object\n-        58: invokestatic  #26                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        55: anewarray     #2                  // class java/lang/Object\n+        58: invokestatic  #92                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         61: aload_2\n         62: aload         4\n-        64: invokevirtual #30                 // Method java/util/EnumSet.add:(Ljava/lang/Object;)Z\n+        64: invokevirtual #109                // Method java/util/EnumSet.add:(Ljava/lang/Object;)Z\n         67: pop\n         68: goto          22\n         71: aload_0\n-        72: invokevirtual #4                  // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n-        75: checkcast     #5                  // class \"[Ljava/lang/Enum;\"\n+        72: invokevirtual #10                 // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n+        75: checkcast     #16                 // class \"[Ljava/lang/Enum;\"\n         78: arraylength\n         79: iconst_1\n         80: isub\n         81: bipush        64\n         83: idiv\n         84: iconst_1\n         85: iadd\n         86: newarray       long\n         88: astore_3\n         89: aload_2\n-        90: invokevirtual #32                 // Method java/util/EnumSet.iterator:()Ljava/util/Iterator;\n+        90: invokevirtual #115                // Method java/util/EnumSet.iterator:()Ljava/util/Iterator;\n         93: astore        4\n         95: aload         4\n-        97: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        97: invokeinterface #81,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n        102: ifeq          143\n        105: aload         4\n-       107: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-       112: checkcast     #22                 // class java/lang/Enum\n+       107: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+       112: checkcast     #19                 // class java/lang/Enum\n        115: astore        5\n        117: aload_3\n        118: aload         5\n-       120: invokevirtual #27                 // Method java/lang/Enum.ordinal:()I\n+       120: invokevirtual #96                 // Method java/lang/Enum.ordinal:()I\n        123: bipush        64\n        125: idiv\n        126: dup2\n        127: laload\n        128: lconst_1\n        129: aload         5\n-       131: invokevirtual #27                 // Method java/lang/Enum.ordinal:()I\n+       131: invokevirtual #96                 // Method java/lang/Enum.ordinal:()I\n        134: bipush        64\n        136: irem\n        137: lshl\n        138: lor\n        139: lastore\n        140: goto          95\n        143: aload_3\n-       144: invokestatic  #33                 // Method org/apache/commons/lang3/ArrayUtils.reverse:([J)V\n+       144: invokestatic  #116                // Method org/apache/commons/lang3/ArrayUtils.reverse:([J)V\n        147: aload_3\n        148: areturn\n       LineNumberTable:\n         line 202: 0\n         line 203: 5\n         line 204: 10\n         line 205: 15\n@@ -718,103 +718,103 @@\n         frame_type = 249 /* chop */\n           offset_delta = 18\n         frame_type = 253 /* append */\n           offset_delta = 23\n           locals = [ class \"[J\", class java/util/Iterator ]\n         frame_type = 250 /* chop */\n           offset_delta = 47\n-    Signature: #110                         // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;Ljava/lang/Iterable<+TE;>;)[J\n+    Signature: #215                         // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;Ljava/lang/Iterable<+TE;>;)[J\n \n   public static <E extends java.lang.Enum<E>> long generateBitVector(java.lang.Class<E>, E...);\n     descriptor: (Ljava/lang/Class;[Ljava/lang/Enum;)J\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #34                 // Method org/apache/commons/lang3/Validate.noNullElements:([Ljava/lang/Object;)[Ljava/lang/Object;\n+         1: invokestatic  #122                // Method org/apache/commons/lang3/Validate.noNullElements:([Ljava/lang/Object;)[Ljava/lang/Object;\n          4: pop\n          5: aload_0\n          6: aload_1\n-         7: invokestatic  #9                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-        10: invokestatic  #35                 // Method generateBitVector:(Ljava/lang/Class;Ljava/lang/Iterable;)J\n+         7: invokestatic  #32                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+        10: invokestatic  #126                // Method generateBitVector:(Ljava/lang/Class;Ljava/lang/Iterable;)J\n         13: lreturn\n       LineNumberTable:\n         line 236: 0\n         line 237: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0 enumClass   Ljava/lang/Class;\n             0      14     1 values   [Ljava/lang/Enum;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0 enumClass   Ljava/lang/Class<TE;>;\n             0      14     1 values   [TE;\n-    Signature: #114                         // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;[TE;)J\n+    Signature: #218                         // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;[TE;)J\n     RuntimeVisibleAnnotations:\n-      0: #116()\n+      0: #220()\n         java.lang.SafeVarargs\n \n   public static <E extends java.lang.Enum<E>> long[] generateBitVectors(java.lang.Class<E>, E...);\n     descriptor: (Ljava/lang/Class;[Ljava/lang/Enum;)[J\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=8, locals=6, args_size=2\n          0: aload_0\n-         1: invokestatic  #28                 // Method asEnum:(Ljava/lang/Class;)Ljava/lang/Class;\n+         1: invokestatic  #100                // Method asEnum:(Ljava/lang/Class;)Ljava/lang/Class;\n          4: pop\n          5: aload_1\n-         6: invokestatic  #34                 // Method org/apache/commons/lang3/Validate.noNullElements:([Ljava/lang/Object;)[Ljava/lang/Object;\n+         6: invokestatic  #122                // Method org/apache/commons/lang3/Validate.noNullElements:([Ljava/lang/Object;)[Ljava/lang/Object;\n          9: pop\n         10: aload_0\n-        11: invokestatic  #29                 // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;\n+        11: invokestatic  #103                // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;\n         14: astore_2\n         15: aload_2\n         16: aload_1\n-        17: invokestatic  #36                 // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z\n+        17: invokestatic  #130                // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z\n         20: pop\n         21: aload_0\n-        22: invokevirtual #4                  // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n-        25: checkcast     #5                  // class \"[Ljava/lang/Enum;\"\n+        22: invokevirtual #10                 // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n+        25: checkcast     #16                 // class \"[Ljava/lang/Enum;\"\n         28: arraylength\n         29: iconst_1\n         30: isub\n         31: bipush        64\n         33: idiv\n         34: iconst_1\n         35: iadd\n         36: newarray       long\n         38: astore_3\n         39: aload_2\n-        40: invokevirtual #32                 // Method java/util/EnumSet.iterator:()Ljava/util/Iterator;\n+        40: invokevirtual #115                // Method java/util/EnumSet.iterator:()Ljava/util/Iterator;\n         43: astore        4\n         45: aload         4\n-        47: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        47: invokeinterface #81,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         52: ifeq          93\n         55: aload         4\n-        57: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        62: checkcast     #22                 // class java/lang/Enum\n+        57: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        62: checkcast     #19                 // class java/lang/Enum\n         65: astore        5\n         67: aload_3\n         68: aload         5\n-        70: invokevirtual #27                 // Method java/lang/Enum.ordinal:()I\n+        70: invokevirtual #96                 // Method java/lang/Enum.ordinal:()I\n         73: bipush        64\n         75: idiv\n         76: dup2\n         77: laload\n         78: lconst_1\n         79: aload         5\n-        81: invokevirtual #27                 // Method java/lang/Enum.ordinal:()I\n+        81: invokevirtual #96                 // Method java/lang/Enum.ordinal:()I\n         84: bipush        64\n         86: irem\n         87: lshl\n         88: lor\n         89: lastore\n         90: goto          45\n         93: aload_3\n-        94: invokestatic  #33                 // Method org/apache/commons/lang3/ArrayUtils.reverse:([J)V\n+        94: invokestatic  #116                // Method org/apache/commons/lang3/ArrayUtils.reverse:([J)V\n         97: aload_3\n         98: areturn\n       LineNumberTable:\n         line 258: 0\n         line 259: 5\n         line 260: 10\n         line 261: 15\n@@ -839,106 +839,106 @@\n            15      84     2 condensed   Ljava/util/EnumSet<TE;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 254 /* append */\n           offset_delta = 45\n           locals = [ class java/util/EnumSet, class \"[J\", class java/util/Iterator ]\n         frame_type = 250 /* chop */\n           offset_delta = 47\n-    Signature: #118                         // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;[TE;)[J\n+    Signature: #222                         // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;[TE;)[J\n     RuntimeVisibleAnnotations:\n-      0: #116()\n+      0: #220()\n         java.lang.SafeVarargs\n \n   public static <E extends java.lang.Enum<E>> java.util.EnumSet<E> processBitVector(java.lang.Class<E>, long);\n     descriptor: (Ljava/lang/Class;J)Ljava/util/EnumSet;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=6, locals=3, args_size=2\n          0: aload_0\n-         1: invokestatic  #17                 // Method checkBitVectorable:(Ljava/lang/Class;)Ljava/lang/Class;\n-         4: invokevirtual #4                  // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n+         1: invokestatic  #65                 // Method checkBitVectorable:(Ljava/lang/Class;)Ljava/lang/Class;\n+         4: invokevirtual #10                 // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n          7: pop\n          8: aload_0\n          9: iconst_1\n         10: newarray       long\n         12: dup\n         13: iconst_0\n         14: lload_1\n         15: lastore\n-        16: invokestatic  #37                 // Method processBitVectors:(Ljava/lang/Class;[J)Ljava/util/EnumSet;\n+        16: invokestatic  #136                // Method processBitVectors:(Ljava/lang/Class;[J)Ljava/util/EnumSet;\n         19: areturn\n       LineNumberTable:\n         line 284: 0\n         line 285: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      20     0 enumClass   Ljava/lang/Class;\n             0      20     1 value   J\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      20     0 enumClass   Ljava/lang/Class<TE;>;\n-    Signature: #121                         // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;J)Ljava/util/EnumSet<TE;>;\n+    Signature: #225                         // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;J)Ljava/util/EnumSet<TE;>;\n \n   public static <E extends java.lang.Enum<E>> java.util.EnumSet<E> processBitVectors(java.lang.Class<E>, long...);\n     descriptor: (Ljava/lang/Class;[J)Ljava/util/EnumSet;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=6, locals=9, args_size=2\n          0: aload_0\n-         1: invokestatic  #28                 // Method asEnum:(Ljava/lang/Class;)Ljava/lang/Class;\n-         4: invokestatic  #29                 // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;\n+         1: invokestatic  #100                // Method asEnum:(Ljava/lang/Class;)Ljava/lang/Class;\n+         4: invokestatic  #103                // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;\n          7: astore_2\n          8: aload_1\n-         9: invokestatic  #18                 // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-        12: checkcast     #38                 // class \"[J\"\n-        15: invokestatic  #39                 // Method org/apache/commons/lang3/ArrayUtils.clone:([J)[J\n+         9: invokestatic  #69                 // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+        12: checkcast     #140                // class \"[J\"\n+        15: invokestatic  #142                // Method org/apache/commons/lang3/ArrayUtils.clone:([J)[J\n         18: astore_3\n         19: aload_3\n-        20: invokestatic  #33                 // Method org/apache/commons/lang3/ArrayUtils.reverse:([J)V\n+        20: invokestatic  #116                // Method org/apache/commons/lang3/ArrayUtils.reverse:([J)V\n         23: aload_0\n-        24: invokevirtual #4                  // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n-        27: checkcast     #5                  // class \"[Ljava/lang/Enum;\"\n+        24: invokevirtual #10                 // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n+        27: checkcast     #16                 // class \"[Ljava/lang/Enum;\"\n         30: astore        4\n         32: aload         4\n         34: arraylength\n         35: istore        5\n         37: iconst_0\n         38: istore        6\n         40: iload         6\n         42: iload         5\n         44: if_icmpge     104\n         47: aload         4\n         49: iload         6\n         51: aaload\n         52: astore        7\n         54: aload         7\n-        56: invokevirtual #27                 // Method java/lang/Enum.ordinal:()I\n+        56: invokevirtual #96                 // Method java/lang/Enum.ordinal:()I\n         59: bipush        64\n         61: idiv\n         62: istore        8\n         64: iload         8\n         66: aload_3\n         67: arraylength\n         68: if_icmpge     98\n         71: aload_3\n         72: iload         8\n         74: laload\n         75: lconst_1\n         76: aload         7\n-        78: invokevirtual #27                 // Method java/lang/Enum.ordinal:()I\n+        78: invokevirtual #96                 // Method java/lang/Enum.ordinal:()I\n         81: bipush        64\n         83: irem\n         84: lshl\n         85: land\n         86: lconst_0\n         87: lcmp\n         88: ifeq          98\n         91: aload_2\n         92: aload         7\n-        94: invokevirtual #30                 // Method java/util/EnumSet.add:(Ljava/lang/Object;)Z\n+        94: invokevirtual #109                // Method java/util/EnumSet.add:(Ljava/lang/Object;)Z\n         97: pop\n         98: iinc          6, 1\n        101: goto          40\n        104: aload_2\n        105: areturn\n       LineNumberTable:\n         line 302: 0\n@@ -967,53 +967,53 @@\n         frame_type = 255 /* full_frame */\n           offset_delta = 40\n           locals = [ class java/lang/Class, class \"[J\", class java/util/EnumSet, class \"[J\", class \"[Ljava/lang/Enum;\", int, int ]\n           stack = []\n         frame_type = 57 /* same */\n         frame_type = 248 /* chop */\n           offset_delta = 5\n-    Signature: #128                         // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;[J)Ljava/util/EnumSet<TE;>;\n+    Signature: #230                         // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;[J)Ljava/util/EnumSet<TE;>;\n \n   private static <E extends java.lang.Enum<E>> java.lang.Class<E> checkBitVectorable(java.lang.Class<E>);\n     descriptor: (Ljava/lang/Class;)Ljava/lang/Class;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=6, locals=2, args_size=1\n          0: aload_0\n-         1: invokestatic  #28                 // Method asEnum:(Ljava/lang/Class;)Ljava/lang/Class;\n-         4: invokevirtual #4                  // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n-         7: checkcast     #5                  // class \"[Ljava/lang/Enum;\"\n+         1: invokestatic  #100                // Method asEnum:(Ljava/lang/Class;)Ljava/lang/Class;\n+         4: invokevirtual #10                 // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n+         7: checkcast     #16                 // class \"[Ljava/lang/Enum;\"\n         10: astore_1\n         11: aload_1\n         12: arraylength\n         13: bipush        64\n         15: if_icmpgt     22\n         18: iconst_1\n         19: goto          23\n         22: iconst_0\n-        23: ldc           #40                 // String Cannot store %s %s values in %s bits\n+        23: ldc           #146                // String Cannot store %s %s values in %s bits\n         25: iconst_3\n-        26: anewarray     #25                 // class java/lang/Object\n+        26: anewarray     #2                  // class java/lang/Object\n         29: dup\n         30: iconst_0\n         31: aload_1\n         32: arraylength\n-        33: invokestatic  #41                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        33: invokestatic  #148                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         36: aastore\n         37: dup\n         38: iconst_1\n         39: aload_0\n-        40: invokevirtual #42                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;\n+        40: invokevirtual #153                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;\n         43: aastore\n         44: dup\n         45: iconst_2\n         46: bipush        64\n-        48: invokestatic  #41                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        48: invokestatic  #148                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         51: aastore\n-        52: invokestatic  #26                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        52: invokestatic  #92                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         55: aload_0\n         56: areturn\n       LineNumberTable:\n         line 324: 0\n         line 325: 11\n         line 326: 33\n         line 325: 52\n@@ -1028,45 +1028,45 @@\n            11      46     1 constants   [TE;\n       StackMapTable: number_of_entries = 2\n         frame_type = 252 /* append */\n           offset_delta = 22\n           locals = [ class \"[Ljava/lang/Enum;\" ]\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #132                         // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;)Ljava/lang/Class<TE;>;\n+    Signature: #232                         // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;)Ljava/lang/Class<TE;>;\n \n   private static <E extends java.lang.Enum<E>> java.lang.Class<E> asEnum(java.lang.Class<E>);\n     descriptor: (Ljava/lang/Class;)Ljava/lang/Class;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=6, locals=1, args_size=1\n          0: aload_0\n-         1: ldc           #43                 // String EnumClass must be defined.\n+         1: ldc           #156                // String EnumClass must be defined.\n          3: iconst_0\n-         4: anewarray     #25                 // class java/lang/Object\n-         7: invokestatic  #44                 // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+         4: anewarray     #2                  // class java/lang/Object\n+         7: invokestatic  #158                // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n         10: pop\n         11: aload_0\n-        12: invokevirtual #15                 // Method java/lang/Class.isEnum:()Z\n-        15: ldc           #45                 // String %s does not seem to be an Enum type\n+        12: invokevirtual #55                 // Method java/lang/Class.isEnum:()Z\n+        15: ldc           #161                // String %s does not seem to be an Enum type\n         17: iconst_1\n-        18: anewarray     #25                 // class java/lang/Object\n+        18: anewarray     #2                  // class java/lang/Object\n         21: dup\n         22: iconst_0\n         23: aload_0\n         24: aastore\n-        25: invokestatic  #26                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        25: invokestatic  #92                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         28: aload_0\n         29: areturn\n       LineNumberTable:\n         line 341: 0\n         line 342: 11\n         line 343: 28\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      30     0 enumClass   Ljava/lang/Class;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      30     0 enumClass   Ljava/lang/Class<TE;>;\n-    Signature: #132                         // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;)Ljava/lang/Class<TE;>;\n+    Signature: #232                         // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;)Ljava/lang/Class<TE;>;\n }\n SourceFile: \"EnumUtils.java\"\n"}]}
