{"diffoscope-json-version": 1, "source1": "first/AttributeLayoutMap.class", "source2": "second/AttributeLayoutMap.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,280 +1,276 @@\n-  SHA-256 checksum 65641a7d4dc32ca1967e6828bc43d63f0154a81e53584363875c1612733a62c6\n+  SHA-256 checksum a39b87a8582e55c1ce57a33b5d672d99e6087c0f92a77da4cc7b6540033c6c2c\n   Compiled from \"AttributeLayoutMap.java\"\n public class org.apache.commons.compress.harmony.unpack200.AttributeLayoutMap\n   minor version: 0\n-  major version: 52\n+  major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #84                         // org/apache/commons/compress/harmony/unpack200/AttributeLayoutMap\n-  super_class: #85                        // java/lang/Object\n-  interfaces: 0, fields: 6, methods: 8, attributes: 1\n+  this_class: #78                         // org/apache/commons/compress/harmony/unpack200/AttributeLayoutMap\n+  super_class: #79                        // java/lang/Object\n+  interfaces: 0, fields: 6, methods: 8, attributes: 3\n Constant pool:\n-    #1 = Class              #146          // org/apache/commons/compress/harmony/unpack200/AttributeLayout\n-    #2 = String             #147          // ACC_PUBLIC\n-    #3 = String             #148          //\n-    #4 = Methodref          #1.#149       // org/apache/commons/compress/harmony/unpack200/AttributeLayout.\"<init>\":(Ljava/lang/String;ILjava/lang/String;I)V\n-    #5 = String             #150          // ACC_PRIVATE\n-    #6 = String             #97           // LineNumberTable\n-    #7 = String             #151          // NH[PHH]\n-    #8 = String             #152          // ACC_PROTECTED\n-    #9 = String             #101          // LocalVariableTable\n-   #10 = String             #153          // NH[PHOHRUHRSHH]\n-   #11 = String             #154          // ACC_STATIC\n-   #12 = String             #155          // LocalVariableTypeTable\n-   #13 = String             #156          // ACC_FINAL\n-   #14 = String             #157          // ACC_SYNCHRONIZED\n-   #15 = String             #158          // ACC_VOLATILE\n-   #16 = String             #159          // ACC_TRANSIENT\n-   #17 = String             #160          // ACC_NATIVE\n-   #18 = String             #161          // ACC_INTERFACE\n-   #19 = String             #162          // ACC_ABSTRACT\n-   #20 = String             #163          // ACC_STRICT\n-   #21 = String             #164          // ACC_SYNTHETIC\n-   #22 = String             #165          // ACC_ANNOTATION\n-   #23 = String             #166          // ACC_ENUM\n-   #24 = String             #144          // SourceFile\n-   #25 = String             #167          // RUNH\n-   #26 = String             #168          // ConstantValue\n-   #27 = String             #169          // KQH\n-   #28 = String             #96           // Code\n-   #29 = String             #170          // EnclosingMethod\n-   #30 = String             #171          // RCHRDNH\n-   #31 = String             #98           // Exceptions\n-   #32 = String             #172          // NH[RCH]\n-   #33 = String             #173          // Signature\n-   #34 = String             #174          // RSH\n-   #35 = String             #175          // Deprecated\n-   #36 = String             #176          // RuntimeVisibleAnnotations\n-   #37 = String             #177          // *\n-   #38 = String             #178          // RuntimeInvisibleAnnotations\n-   #39 = String             #179          // InnerClasses\n-   #40 = String             #180          // RuntimeVisibleParameterAnnotations\n-   #41 = String             #181          // class-file version\n-   #42 = String             #182          // RuntimeInvisibleParameterAnnotations\n-   #43 = String             #183          // AnnotationDefault\n-   #44 = Methodref          #85.#184      // java/lang/Object.\"<init>\":()V\n-   #45 = Class              #185          // java/util/HashMap\n-   #46 = Methodref          #45.#184      // java/util/HashMap.\"<init>\":()V\n-   #47 = Fieldref           #84.#186      // org/apache/commons/compress/harmony/unpack200/AttributeLayoutMap.classLayouts:Ljava/util/Map;\n-   #48 = Fieldref           #84.#187      // org/apache/commons/compress/harmony/unpack200/AttributeLayoutMap.fieldLayouts:Ljava/util/Map;\n-   #49 = Fieldref           #84.#188      // org/apache/commons/compress/harmony/unpack200/AttributeLayoutMap.methodLayouts:Ljava/util/Map;\n-   #50 = Fieldref           #84.#189      // org/apache/commons/compress/harmony/unpack200/AttributeLayoutMap.codeLayouts:Ljava/util/Map;\n-   #51 = Class              #190          // java/util/Map\n-   #52 = Fieldref           #84.#191      // org/apache/commons/compress/harmony/unpack200/AttributeLayoutMap.layouts:[Ljava/util/Map;\n-   #53 = Fieldref           #84.#192      // org/apache/commons/compress/harmony/unpack200/AttributeLayoutMap.layoutsToBands:Ljava/util/Map;\n-   #54 = Methodref          #84.#193      // org/apache/commons/compress/harmony/unpack200/AttributeLayoutMap.getDefaultAttributeLayouts:()[Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;\n-   #55 = Methodref          #84.#194      // org/apache/commons/compress/harmony/unpack200/AttributeLayoutMap.add:(Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;)V\n-   #56 = Methodref          #1.#195       // org/apache/commons/compress/harmony/unpack200/AttributeLayout.getContext:()I\n-   #57 = Methodref          #1.#196       // org/apache/commons/compress/harmony/unpack200/AttributeLayout.getIndex:()I\n-   #58 = Methodref          #197.#198     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #59 = InterfaceMethodref #51.#199      // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #60 = InterfaceMethodref #51.#200      // java/util/Map.values:()Ljava/util/Collection;\n-   #61 = InterfaceMethodref #201.#202     // java/util/Collection.iterator:()Ljava/util/Iterator;\n-   #62 = InterfaceMethodref #203.#204     // java/util/Iterator.hasNext:()Z\n-   #63 = InterfaceMethodref #203.#205     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #64 = Methodref          #1.#206       // org/apache/commons/compress/harmony/unpack200/AttributeLayout.getName:()Ljava/lang/String;\n-   #65 = Methodref          #207.#208     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #66 = InterfaceMethodref #51.#209      // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #67 = Class              #210          // java/util/List\n-   #68 = Class              #211          // java/util/ArrayList\n-   #69 = Methodref          #68.#212      // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n-   #70 = InterfaceMethodref #67.#213      // java/util/List.size:()I\n-   #71 = InterfaceMethodref #67.#214      // java/util/List.get:(I)Ljava/lang/Object;\n-   #72 = Methodref          #1.#215       // org/apache/commons/compress/harmony/unpack200/AttributeLayout.getLayout:()Ljava/lang/String;\n-   #73 = Class              #216          // org/apache/commons/compress/harmony/pack200/Pack200Exception\n-   #74 = Class              #217          // java/lang/StringBuilder\n-   #75 = Methodref          #74.#184      // java/lang/StringBuilder.\"<init>\":()V\n-   #76 = String             #218          // Same layout/name combination:\n-   #77 = Methodref          #74.#219      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #78 = String             #220          // /\n-   #79 = String             #221          //  exists twice for context:\n-   #80 = Fieldref           #1.#222       // org/apache/commons/compress/harmony/unpack200/AttributeLayout.contextNames:[Ljava/lang/String;\n-   #81 = Methodref          #74.#223      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #82 = Methodref          #73.#224      // org/apache/commons/compress/harmony/pack200/Pack200Exception.\"<init>\":(Ljava/lang/String;)V\n-   #83 = Class              #225          // org/apache/commons/compress/harmony/unpack200/NewAttributeBands\n-   #84 = Class              #226          // org/apache/commons/compress/harmony/unpack200/AttributeLayoutMap\n-   #85 = Class              #227          // java/lang/Object\n-   #86 = Utf8               classLayouts\n-   #87 = Utf8               Ljava/util/Map;\n-   #88 = Utf8               fieldLayouts\n-   #89 = Utf8               methodLayouts\n-   #90 = Utf8               codeLayouts\n-   #91 = Utf8               layouts\n-   #92 = Utf8               [Ljava/util/Map;\n-   #93 = Utf8               layoutsToBands\n-   #94 = Utf8               getDefaultAttributeLayouts\n-   #95 = Utf8               ()[Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;\n-   #96 = Utf8               Code\n-   #97 = Utf8               LineNumberTable\n-   #98 = Utf8               Exceptions\n-   #99 = Utf8               <init>\n-  #100 = Utf8               ()V\n-  #101 = Utf8               LocalVariableTable\n-  #102 = Utf8               i\n-  #103 = Utf8               I\n-  #104 = Utf8               this\n-  #105 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/AttributeLayoutMap;\n-  #106 = Utf8               defaultAttributeLayouts\n-  #107 = Utf8               [Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;\n-  #108 = Utf8               StackMapTable\n-  #109 = Class              #226          // org/apache/commons/compress/harmony/unpack200/AttributeLayoutMap\n-  #110 = Class              #107          // \"[Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;\"\n-  #111 = Utf8               add\n-  #112 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;)V\n-  #113 = Utf8               layout\n-  #114 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;\n-  #115 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;Lorg/apache/commons/compress/harmony/unpack200/NewAttributeBands;)V\n-  #116 = Utf8               newBands\n-  #117 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/NewAttributeBands;\n-  #118 = Utf8               getAttributeLayout\n-  #119 = Utf8               (Ljava/lang/String;I)Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;\n-  #120 = Utf8               iter\n-  #121 = Utf8               Ljava/util/Iterator;\n-  #122 = Utf8               name\n-  #123 = Utf8               Ljava/lang/String;\n-  #124 = Utf8               context\n-  #125 = Utf8               map\n-  #126 = Class              #190          // java/util/Map\n-  #127 = Class              #228          // java/util/Iterator\n-  #128 = Utf8               (II)Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;\n-  #129 = Utf8               index\n-  #130 = Utf8               checkMap\n-  #131 = Utf8               layout2\n-  #132 = Utf8               j2\n-  #133 = Utf8               layout1\n-  #134 = Utf8               j\n-  #135 = Utf8               c\n-  #136 = Utf8               Ljava/util/Collection;\n-  #137 = Utf8               l\n-  #138 = Utf8               Ljava/util/List;\n-  #139 = Class              #229          // java/util/Collection\n-  #140 = Class              #210          // java/util/List\n-  #141 = Class              #146          // org/apache/commons/compress/harmony/unpack200/AttributeLayout\n-  #142 = Utf8               getAttributeBands\n-  #143 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;)Lorg/apache/commons/compress/harmony/unpack200/NewAttributeBands;\n-  #144 = Utf8               SourceFile\n-  #145 = Utf8               AttributeLayoutMap.java\n-  #146 = Utf8               org/apache/commons/compress/harmony/unpack200/AttributeLayout\n-  #147 = Utf8               ACC_PUBLIC\n-  #148 = Utf8\n-  #149 = NameAndType        #99:#230      // \"<init>\":(Ljava/lang/String;ILjava/lang/String;I)V\n-  #150 = Utf8               ACC_PRIVATE\n-  #151 = Utf8               NH[PHH]\n-  #152 = Utf8               ACC_PROTECTED\n-  #153 = Utf8               NH[PHOHRUHRSHH]\n-  #154 = Utf8               ACC_STATIC\n-  #155 = Utf8               LocalVariableTypeTable\n-  #156 = Utf8               ACC_FINAL\n-  #157 = Utf8               ACC_SYNCHRONIZED\n-  #158 = Utf8               ACC_VOLATILE\n-  #159 = Utf8               ACC_TRANSIENT\n-  #160 = Utf8               ACC_NATIVE\n-  #161 = Utf8               ACC_INTERFACE\n-  #162 = Utf8               ACC_ABSTRACT\n-  #163 = Utf8               ACC_STRICT\n-  #164 = Utf8               ACC_SYNTHETIC\n-  #165 = Utf8               ACC_ANNOTATION\n-  #166 = Utf8               ACC_ENUM\n-  #167 = Utf8               RUNH\n-  #168 = Utf8               ConstantValue\n-  #169 = Utf8               KQH\n-  #170 = Utf8               EnclosingMethod\n-  #171 = Utf8               RCHRDNH\n-  #172 = Utf8               NH[RCH]\n-  #173 = Utf8               Signature\n-  #174 = Utf8               RSH\n-  #175 = Utf8               Deprecated\n-  #176 = Utf8               RuntimeVisibleAnnotations\n-  #177 = Utf8               *\n-  #178 = Utf8               RuntimeInvisibleAnnotations\n-  #179 = Utf8               InnerClasses\n-  #180 = Utf8               RuntimeVisibleParameterAnnotations\n-  #181 = Utf8               class-file version\n-  #182 = Utf8               RuntimeInvisibleParameterAnnotations\n-  #183 = Utf8               AnnotationDefault\n-  #184 = NameAndType        #99:#100      // \"<init>\":()V\n-  #185 = Utf8               java/util/HashMap\n-  #186 = NameAndType        #86:#87       // classLayouts:Ljava/util/Map;\n-  #187 = NameAndType        #88:#87       // fieldLayouts:Ljava/util/Map;\n-  #188 = NameAndType        #89:#87       // methodLayouts:Ljava/util/Map;\n-  #189 = NameAndType        #90:#87       // codeLayouts:Ljava/util/Map;\n-  #190 = Utf8               java/util/Map\n-  #191 = NameAndType        #91:#92       // layouts:[Ljava/util/Map;\n-  #192 = NameAndType        #93:#87       // layoutsToBands:Ljava/util/Map;\n-  #193 = NameAndType        #94:#95       // getDefaultAttributeLayouts:()[Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;\n-  #194 = NameAndType        #111:#112     // add:(Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;)V\n-  #195 = NameAndType        #231:#232     // getContext:()I\n-  #196 = NameAndType        #233:#232     // getIndex:()I\n-  #197 = Class              #234          // java/lang/Integer\n-  #198 = NameAndType        #235:#236     // valueOf:(I)Ljava/lang/Integer;\n-  #199 = NameAndType        #237:#238     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #200 = NameAndType        #239:#240     // values:()Ljava/util/Collection;\n-  #201 = Class              #229          // java/util/Collection\n-  #202 = NameAndType        #241:#242     // iterator:()Ljava/util/Iterator;\n-  #203 = Class              #228          // java/util/Iterator\n-  #204 = NameAndType        #243:#244     // hasNext:()Z\n-  #205 = NameAndType        #245:#246     // next:()Ljava/lang/Object;\n-  #206 = NameAndType        #247:#248     // getName:()Ljava/lang/String;\n-  #207 = Class              #249          // java/lang/String\n-  #208 = NameAndType        #250:#251     // equals:(Ljava/lang/Object;)Z\n-  #209 = NameAndType        #252:#253     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #210 = Utf8               java/util/List\n-  #211 = Utf8               java/util/ArrayList\n-  #212 = NameAndType        #99:#254      // \"<init>\":(Ljava/util/Collection;)V\n-  #213 = NameAndType        #255:#232     // size:()I\n-  #214 = NameAndType        #252:#256     // get:(I)Ljava/lang/Object;\n-  #215 = NameAndType        #257:#248     // getLayout:()Ljava/lang/String;\n-  #216 = Utf8               org/apache/commons/compress/harmony/pack200/Pack200Exception\n-  #217 = Utf8               java/lang/StringBuilder\n-  #218 = Utf8               Same layout/name combination:\n-  #219 = NameAndType        #258:#259     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #220 = Utf8               /\n-  #221 = Utf8                exists twice for context:\n-  #222 = NameAndType        #260:#261     // contextNames:[Ljava/lang/String;\n-  #223 = NameAndType        #262:#248     // toString:()Ljava/lang/String;\n-  #224 = NameAndType        #99:#263      // \"<init>\":(Ljava/lang/String;)V\n-  #225 = Utf8               org/apache/commons/compress/harmony/unpack200/NewAttributeBands\n-  #226 = Utf8               org/apache/commons/compress/harmony/unpack200/AttributeLayoutMap\n-  #227 = Utf8               java/lang/Object\n-  #228 = Utf8               java/util/Iterator\n-  #229 = Utf8               java/util/Collection\n-  #230 = Utf8               (Ljava/lang/String;ILjava/lang/String;I)V\n-  #231 = Utf8               getContext\n-  #232 = Utf8               ()I\n-  #233 = Utf8               getIndex\n-  #234 = Utf8               java/lang/Integer\n-  #235 = Utf8               valueOf\n-  #236 = Utf8               (I)Ljava/lang/Integer;\n-  #237 = Utf8               put\n-  #238 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #239 = Utf8               values\n-  #240 = Utf8               ()Ljava/util/Collection;\n-  #241 = Utf8               iterator\n-  #242 = Utf8               ()Ljava/util/Iterator;\n-  #243 = Utf8               hasNext\n-  #244 = Utf8               ()Z\n-  #245 = Utf8               next\n-  #246 = Utf8               ()Ljava/lang/Object;\n-  #247 = Utf8               getName\n-  #248 = Utf8               ()Ljava/lang/String;\n-  #249 = Utf8               java/lang/String\n-  #250 = Utf8               equals\n-  #251 = Utf8               (Ljava/lang/Object;)Z\n-  #252 = Utf8               get\n-  #253 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #254 = Utf8               (Ljava/util/Collection;)V\n-  #255 = Utf8               size\n-  #256 = Utf8               (I)Ljava/lang/Object;\n-  #257 = Utf8               getLayout\n-  #258 = Utf8               append\n-  #259 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #260 = Utf8               contextNames\n-  #261 = Utf8               [Ljava/lang/String;\n-  #262 = Utf8               toString\n-  #263 = Utf8               (Ljava/lang/String;)V\n+    #1 = Class              #136          // org/apache/commons/compress/harmony/unpack200/AttributeLayout\n+    #2 = String             #137          // ACC_PUBLIC\n+    #3 = String             #138          //\n+    #4 = Methodref          #1.#139       // org/apache/commons/compress/harmony/unpack200/AttributeLayout.\"<init>\":(Ljava/lang/String;ILjava/lang/String;I)V\n+    #5 = String             #140          // ACC_PRIVATE\n+    #6 = String             #91           // LineNumberTable\n+    #7 = String             #141          // NH[PHH]\n+    #8 = String             #142          // ACC_PROTECTED\n+    #9 = String             #95           // LocalVariableTable\n+   #10 = String             #143          // NH[PHOHRUHRSHH]\n+   #11 = String             #144          // ACC_STATIC\n+   #12 = String             #145          // LocalVariableTypeTable\n+   #13 = String             #146          // ACC_FINAL\n+   #14 = String             #147          // ACC_SYNCHRONIZED\n+   #15 = String             #148          // ACC_VOLATILE\n+   #16 = String             #149          // ACC_TRANSIENT\n+   #17 = String             #150          // ACC_NATIVE\n+   #18 = String             #151          // ACC_INTERFACE\n+   #19 = String             #152          // ACC_ABSTRACT\n+   #20 = String             #153          // ACC_STRICT\n+   #21 = String             #154          // ACC_SYNTHETIC\n+   #22 = String             #155          // ACC_ANNOTATION\n+   #23 = String             #156          // ACC_ENUM\n+   #24 = String             #134          // SourceFile\n+   #25 = String             #157          // RUNH\n+   #26 = String             #158          // ConstantValue\n+   #27 = String             #159          // KQH\n+   #28 = String             #90           // Code\n+   #29 = String             #160          // EnclosingMethod\n+   #30 = String             #161          // RCHRDNH\n+   #31 = String             #92           // Exceptions\n+   #32 = String             #162          // NH[RCH]\n+   #33 = String             #163          // Signature\n+   #34 = String             #164          // RSH\n+   #35 = String             #165          // Deprecated\n+   #36 = String             #166          // RuntimeVisibleAnnotations\n+   #37 = String             #167          // *\n+   #38 = String             #168          // RuntimeInvisibleAnnotations\n+   #39 = String             #169          // InnerClasses\n+   #40 = String             #170          // RuntimeVisibleParameterAnnotations\n+   #41 = String             #171          // class-file version\n+   #42 = String             #172          // RuntimeInvisibleParameterAnnotations\n+   #43 = String             #173          // AnnotationDefault\n+   #44 = Methodref          #79.#174      // java/lang/Object.\"<init>\":()V\n+   #45 = Class              #175          // java/util/HashMap\n+   #46 = Methodref          #45.#174      // java/util/HashMap.\"<init>\":()V\n+   #47 = Fieldref           #78.#176      // org/apache/commons/compress/harmony/unpack200/AttributeLayoutMap.classLayouts:Ljava/util/Map;\n+   #48 = Fieldref           #78.#177      // org/apache/commons/compress/harmony/unpack200/AttributeLayoutMap.fieldLayouts:Ljava/util/Map;\n+   #49 = Fieldref           #78.#178      // org/apache/commons/compress/harmony/unpack200/AttributeLayoutMap.methodLayouts:Ljava/util/Map;\n+   #50 = Fieldref           #78.#179      // org/apache/commons/compress/harmony/unpack200/AttributeLayoutMap.codeLayouts:Ljava/util/Map;\n+   #51 = Class              #180          // java/util/Map\n+   #52 = Fieldref           #78.#181      // org/apache/commons/compress/harmony/unpack200/AttributeLayoutMap.layouts:[Ljava/util/Map;\n+   #53 = Fieldref           #78.#182      // org/apache/commons/compress/harmony/unpack200/AttributeLayoutMap.layoutsToBands:Ljava/util/Map;\n+   #54 = Methodref          #78.#183      // org/apache/commons/compress/harmony/unpack200/AttributeLayoutMap.getDefaultAttributeLayouts:()[Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;\n+   #55 = Methodref          #78.#184      // org/apache/commons/compress/harmony/unpack200/AttributeLayoutMap.add:(Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;)V\n+   #56 = Methodref          #1.#185       // org/apache/commons/compress/harmony/unpack200/AttributeLayout.getContext:()I\n+   #57 = Methodref          #1.#186       // org/apache/commons/compress/harmony/unpack200/AttributeLayout.getIndex:()I\n+   #58 = Methodref          #187.#188     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+   #59 = InterfaceMethodref #51.#189      // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #60 = InterfaceMethodref #51.#190      // java/util/Map.values:()Ljava/util/Collection;\n+   #61 = InterfaceMethodref #131.#191     // java/util/Collection.iterator:()Ljava/util/Iterator;\n+   #62 = InterfaceMethodref #119.#192     // java/util/Iterator.hasNext:()Z\n+   #63 = InterfaceMethodref #119.#193     // java/util/Iterator.next:()Ljava/lang/Object;\n+   #64 = Methodref          #1.#194       // org/apache/commons/compress/harmony/unpack200/AttributeLayout.getName:()Ljava/lang/String;\n+   #65 = Methodref          #195.#196     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #66 = InterfaceMethodref #51.#197      // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #67 = Class              #198          // java/util/List\n+   #68 = Class              #199          // java/util/ArrayList\n+   #69 = Methodref          #68.#200      // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n+   #70 = InterfaceMethodref #67.#201      // java/util/List.size:()I\n+   #71 = InterfaceMethodref #67.#202      // java/util/List.get:(I)Ljava/lang/Object;\n+   #72 = Methodref          #1.#203       // org/apache/commons/compress/harmony/unpack200/AttributeLayout.getLayout:()Ljava/lang/String;\n+   #73 = Class              #204          // org/apache/commons/compress/harmony/pack200/Pack200Exception\n+   #74 = Fieldref           #1.#205       // org/apache/commons/compress/harmony/unpack200/AttributeLayout.contextNames:[Ljava/lang/String;\n+   #75 = InvokeDynamic      #0:#209       // #0:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+   #76 = Methodref          #73.#210      // org/apache/commons/compress/harmony/pack200/Pack200Exception.\"<init>\":(Ljava/lang/String;)V\n+   #77 = Class              #211          // org/apache/commons/compress/harmony/unpack200/NewAttributeBands\n+   #78 = Class              #212          // org/apache/commons/compress/harmony/unpack200/AttributeLayoutMap\n+   #79 = Class              #213          // java/lang/Object\n+   #80 = Utf8               classLayouts\n+   #81 = Utf8               Ljava/util/Map;\n+   #82 = Utf8               fieldLayouts\n+   #83 = Utf8               methodLayouts\n+   #84 = Utf8               codeLayouts\n+   #85 = Utf8               layouts\n+   #86 = Utf8               [Ljava/util/Map;\n+   #87 = Utf8               layoutsToBands\n+   #88 = Utf8               getDefaultAttributeLayouts\n+   #89 = Utf8               ()[Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;\n+   #90 = Utf8               Code\n+   #91 = Utf8               LineNumberTable\n+   #92 = Utf8               Exceptions\n+   #93 = Utf8               <init>\n+   #94 = Utf8               ()V\n+   #95 = Utf8               LocalVariableTable\n+   #96 = Utf8               i\n+   #97 = Utf8               I\n+   #98 = Utf8               this\n+   #99 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/AttributeLayoutMap;\n+  #100 = Utf8               defaultAttributeLayouts\n+  #101 = Utf8               [Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;\n+  #102 = Utf8               StackMapTable\n+  #103 = Class              #101          // \"[Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;\"\n+  #104 = Utf8               add\n+  #105 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;)V\n+  #106 = Utf8               layout\n+  #107 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;\n+  #108 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;Lorg/apache/commons/compress/harmony/unpack200/NewAttributeBands;)V\n+  #109 = Utf8               newBands\n+  #110 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/NewAttributeBands;\n+  #111 = Utf8               getAttributeLayout\n+  #112 = Utf8               (Ljava/lang/String;I)Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;\n+  #113 = Utf8               iter\n+  #114 = Utf8               Ljava/util/Iterator;\n+  #115 = Utf8               name\n+  #116 = Utf8               Ljava/lang/String;\n+  #117 = Utf8               context\n+  #118 = Utf8               map\n+  #119 = Class              #214          // java/util/Iterator\n+  #120 = Utf8               (II)Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;\n+  #121 = Utf8               index\n+  #122 = Utf8               checkMap\n+  #123 = Utf8               layout2\n+  #124 = Utf8               j2\n+  #125 = Utf8               layout1\n+  #126 = Utf8               j\n+  #127 = Utf8               c\n+  #128 = Utf8               Ljava/util/Collection;\n+  #129 = Utf8               l\n+  #130 = Utf8               Ljava/util/List;\n+  #131 = Class              #215          // java/util/Collection\n+  #132 = Utf8               getAttributeBands\n+  #133 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;)Lorg/apache/commons/compress/harmony/unpack200/NewAttributeBands;\n+  #134 = Utf8               SourceFile\n+  #135 = Utf8               AttributeLayoutMap.java\n+  #136 = Utf8               org/apache/commons/compress/harmony/unpack200/AttributeLayout\n+  #137 = Utf8               ACC_PUBLIC\n+  #138 = Utf8\n+  #139 = NameAndType        #93:#216      // \"<init>\":(Ljava/lang/String;ILjava/lang/String;I)V\n+  #140 = Utf8               ACC_PRIVATE\n+  #141 = Utf8               NH[PHH]\n+  #142 = Utf8               ACC_PROTECTED\n+  #143 = Utf8               NH[PHOHRUHRSHH]\n+  #144 = Utf8               ACC_STATIC\n+  #145 = Utf8               LocalVariableTypeTable\n+  #146 = Utf8               ACC_FINAL\n+  #147 = Utf8               ACC_SYNCHRONIZED\n+  #148 = Utf8               ACC_VOLATILE\n+  #149 = Utf8               ACC_TRANSIENT\n+  #150 = Utf8               ACC_NATIVE\n+  #151 = Utf8               ACC_INTERFACE\n+  #152 = Utf8               ACC_ABSTRACT\n+  #153 = Utf8               ACC_STRICT\n+  #154 = Utf8               ACC_SYNTHETIC\n+  #155 = Utf8               ACC_ANNOTATION\n+  #156 = Utf8               ACC_ENUM\n+  #157 = Utf8               RUNH\n+  #158 = Utf8               ConstantValue\n+  #159 = Utf8               KQH\n+  #160 = Utf8               EnclosingMethod\n+  #161 = Utf8               RCHRDNH\n+  #162 = Utf8               NH[RCH]\n+  #163 = Utf8               Signature\n+  #164 = Utf8               RSH\n+  #165 = Utf8               Deprecated\n+  #166 = Utf8               RuntimeVisibleAnnotations\n+  #167 = Utf8               *\n+  #168 = Utf8               RuntimeInvisibleAnnotations\n+  #169 = Utf8               InnerClasses\n+  #170 = Utf8               RuntimeVisibleParameterAnnotations\n+  #171 = Utf8               class-file version\n+  #172 = Utf8               RuntimeInvisibleParameterAnnotations\n+  #173 = Utf8               AnnotationDefault\n+  #174 = NameAndType        #93:#94       // \"<init>\":()V\n+  #175 = Utf8               java/util/HashMap\n+  #176 = NameAndType        #80:#81       // classLayouts:Ljava/util/Map;\n+  #177 = NameAndType        #82:#81       // fieldLayouts:Ljava/util/Map;\n+  #178 = NameAndType        #83:#81       // methodLayouts:Ljava/util/Map;\n+  #179 = NameAndType        #84:#81       // codeLayouts:Ljava/util/Map;\n+  #180 = Utf8               java/util/Map\n+  #181 = NameAndType        #85:#86       // layouts:[Ljava/util/Map;\n+  #182 = NameAndType        #87:#81       // layoutsToBands:Ljava/util/Map;\n+  #183 = NameAndType        #88:#89       // getDefaultAttributeLayouts:()[Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;\n+  #184 = NameAndType        #104:#105     // add:(Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;)V\n+  #185 = NameAndType        #217:#218     // getContext:()I\n+  #186 = NameAndType        #219:#218     // getIndex:()I\n+  #187 = Class              #220          // java/lang/Integer\n+  #188 = NameAndType        #221:#222     // valueOf:(I)Ljava/lang/Integer;\n+  #189 = NameAndType        #223:#224     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #190 = NameAndType        #225:#226     // values:()Ljava/util/Collection;\n+  #191 = NameAndType        #227:#228     // iterator:()Ljava/util/Iterator;\n+  #192 = NameAndType        #229:#230     // hasNext:()Z\n+  #193 = NameAndType        #231:#232     // next:()Ljava/lang/Object;\n+  #194 = NameAndType        #233:#234     // getName:()Ljava/lang/String;\n+  #195 = Class              #235          // java/lang/String\n+  #196 = NameAndType        #236:#237     // equals:(Ljava/lang/Object;)Z\n+  #197 = NameAndType        #238:#239     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #198 = Utf8               java/util/List\n+  #199 = Utf8               java/util/ArrayList\n+  #200 = NameAndType        #93:#240      // \"<init>\":(Ljava/util/Collection;)V\n+  #201 = NameAndType        #241:#218     // size:()I\n+  #202 = NameAndType        #238:#242     // get:(I)Ljava/lang/Object;\n+  #203 = NameAndType        #243:#234     // getLayout:()Ljava/lang/String;\n+  #204 = Utf8               org/apache/commons/compress/harmony/pack200/Pack200Exception\n+  #205 = NameAndType        #244:#245     // contextNames:[Ljava/lang/String;\n+  #206 = Utf8               BootstrapMethods\n+  #207 = MethodHandle       6:#246        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #208 = String             #247          // Same layout/name combination: \\u0001/\\u0001 exists twice for context: \\u0001\n+  #209 = NameAndType        #248:#249     // makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #210 = NameAndType        #93:#250      // \"<init>\":(Ljava/lang/String;)V\n+  #211 = Utf8               org/apache/commons/compress/harmony/unpack200/NewAttributeBands\n+  #212 = Utf8               org/apache/commons/compress/harmony/unpack200/AttributeLayoutMap\n+  #213 = Utf8               java/lang/Object\n+  #214 = Utf8               java/util/Iterator\n+  #215 = Utf8               java/util/Collection\n+  #216 = Utf8               (Ljava/lang/String;ILjava/lang/String;I)V\n+  #217 = Utf8               getContext\n+  #218 = Utf8               ()I\n+  #219 = Utf8               getIndex\n+  #220 = Utf8               java/lang/Integer\n+  #221 = Utf8               valueOf\n+  #222 = Utf8               (I)Ljava/lang/Integer;\n+  #223 = Utf8               put\n+  #224 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #225 = Utf8               values\n+  #226 = Utf8               ()Ljava/util/Collection;\n+  #227 = Utf8               iterator\n+  #228 = Utf8               ()Ljava/util/Iterator;\n+  #229 = Utf8               hasNext\n+  #230 = Utf8               ()Z\n+  #231 = Utf8               next\n+  #232 = Utf8               ()Ljava/lang/Object;\n+  #233 = Utf8               getName\n+  #234 = Utf8               ()Ljava/lang/String;\n+  #235 = Utf8               java/lang/String\n+  #236 = Utf8               equals\n+  #237 = Utf8               (Ljava/lang/Object;)Z\n+  #238 = Utf8               get\n+  #239 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #240 = Utf8               (Ljava/util/Collection;)V\n+  #241 = Utf8               size\n+  #242 = Utf8               (I)Ljava/lang/Object;\n+  #243 = Utf8               getLayout\n+  #244 = Utf8               contextNames\n+  #245 = Utf8               [Ljava/lang/String;\n+  #246 = Methodref          #251.#252     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #247 = Utf8               Same layout/name combination: \\u0001/\\u0001 exists twice for context: \\u0001\n+  #248 = Utf8               makeConcatWithConstants\n+  #249 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #250 = Utf8               (Ljava/lang/String;)V\n+  #251 = Class              #253          // java/lang/invoke/StringConcatFactory\n+  #252 = NameAndType        #248:#256     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #253 = Utf8               java/lang/invoke/StringConcatFactory\n+  #254 = Class              #258          // java/lang/invoke/MethodHandles$Lookup\n+  #255 = Utf8               Lookup\n+  #256 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #257 = Class              #259          // java/lang/invoke/MethodHandles\n+  #258 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #259 = Utf8               java/lang/invoke/MethodHandles\n {\n   private final java.util.Map classLayouts;\n     descriptor: Ljava/util/Map;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final java.util.Map fieldLayouts;\n     descriptor: Ljava/util/Map;\n@@ -1244,22 +1240,22 @@\n     Exceptions:\n       throws org.apache.commons.compress.harmony.pack200.Pack200Exception\n \n   public void checkMap() throws org.apache.commons.compress.harmony.pack200.Pack200Exception;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=5, locals=9, args_size=1\n+      stack=6, locals=9, args_size=1\n          0: iconst_0\n          1: istore_1\n          2: iload_1\n          3: aload_0\n          4: getfield      #52                 // Field layouts:[Ljava/util/Map;\n          7: arraylength\n-         8: if_icmpge     219\n+         8: if_icmpge     190\n         11: aload_0\n         12: getfield      #52                 // Field layouts:[Ljava/util/Map;\n         15: iload_1\n         16: aaload\n         17: astore_2\n         18: aload_2\n         19: invokeinterface #60,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;\n@@ -1276,123 +1272,111 @@\n         42: checkcast     #67                 // class java/util/List\n         45: astore        4\n         47: iconst_0\n         48: istore        5\n         50: iload         5\n         52: aload         4\n         54: invokeinterface #70,  1           // InterfaceMethod java/util/List.size:()I\n-        59: if_icmpge     213\n+        59: if_icmpge     184\n         62: aload         4\n         64: iload         5\n         66: invokeinterface #71,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n         71: checkcast     #1                  // class org/apache/commons/compress/harmony/unpack200/AttributeLayout\n         74: astore        6\n         76: iload         5\n         78: iconst_1\n         79: iadd\n         80: istore        7\n         82: iload         7\n         84: aload         4\n         86: invokeinterface #70,  1           // InterfaceMethod java/util/List.size:()I\n-        91: if_icmpge     207\n+        91: if_icmpge     178\n         94: aload         4\n         96: iload         7\n         98: invokeinterface #71,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n        103: checkcast     #1                  // class org/apache/commons/compress/harmony/unpack200/AttributeLayout\n        106: astore        8\n        108: aload         6\n        110: invokevirtual #64                 // Method org/apache/commons/compress/harmony/unpack200/AttributeLayout.getName:()Ljava/lang/String;\n        113: aload         8\n        115: invokevirtual #64                 // Method org/apache/commons/compress/harmony/unpack200/AttributeLayout.getName:()Ljava/lang/String;\n        118: invokevirtual #65                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n-       121: ifeq          201\n+       121: ifeq          172\n        124: aload         6\n        126: invokevirtual #72                 // Method org/apache/commons/compress/harmony/unpack200/AttributeLayout.getLayout:()Ljava/lang/String;\n        129: aload         8\n        131: invokevirtual #72                 // Method org/apache/commons/compress/harmony/unpack200/AttributeLayout.getLayout:()Ljava/lang/String;\n        134: invokevirtual #65                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n-       137: ifeq          201\n+       137: ifeq          172\n        140: new           #73                 // class org/apache/commons/compress/harmony/pack200/Pack200Exception\n        143: dup\n-       144: new           #74                 // class java/lang/StringBuilder\n-       147: dup\n-       148: invokespecial #75                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       151: ldc           #76                 // String Same layout/name combination:\n-       153: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       156: aload         6\n-       158: invokevirtual #72                 // Method org/apache/commons/compress/harmony/unpack200/AttributeLayout.getLayout:()Ljava/lang/String;\n-       161: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       164: ldc           #78                 // String /\n-       166: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       169: aload         6\n-       171: invokevirtual #64                 // Method org/apache/commons/compress/harmony/unpack200/AttributeLayout.getName:()Ljava/lang/String;\n-       174: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       177: ldc           #79                 // String  exists twice for context:\n-       179: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       182: getstatic     #80                 // Field org/apache/commons/compress/harmony/unpack200/AttributeLayout.contextNames:[Ljava/lang/String;\n-       185: aload         6\n-       187: invokevirtual #56                 // Method org/apache/commons/compress/harmony/unpack200/AttributeLayout.getContext:()I\n-       190: aaload\n-       191: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       194: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       197: invokespecial #82                 // Method org/apache/commons/compress/harmony/pack200/Pack200Exception.\"<init>\":(Ljava/lang/String;)V\n-       200: athrow\n-       201: iinc          7, 1\n-       204: goto          82\n-       207: iinc          5, 1\n-       210: goto          50\n-       213: iinc          1, 1\n-       216: goto          2\n-       219: return\n+       144: aload         6\n+       146: invokevirtual #72                 // Method org/apache/commons/compress/harmony/unpack200/AttributeLayout.getLayout:()Ljava/lang/String;\n+       149: aload         6\n+       151: invokevirtual #64                 // Method org/apache/commons/compress/harmony/unpack200/AttributeLayout.getName:()Ljava/lang/String;\n+       154: getstatic     #74                 // Field org/apache/commons/compress/harmony/unpack200/AttributeLayout.contextNames:[Ljava/lang/String;\n+       157: aload         6\n+       159: invokevirtual #56                 // Method org/apache/commons/compress/harmony/unpack200/AttributeLayout.getContext:()I\n+       162: aaload\n+       163: invokedynamic #75,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+       168: invokespecial #76                 // Method org/apache/commons/compress/harmony/pack200/Pack200Exception.\"<init>\":(Ljava/lang/String;)V\n+       171: athrow\n+       172: iinc          7, 1\n+       175: goto          82\n+       178: iinc          5, 1\n+       181: goto          50\n+       184: iinc          1, 1\n+       187: goto          2\n+       190: return\n       LineNumberTable:\n         line 174: 0\n         line 175: 11\n         line 176: 18\n         line 177: 25\n         line 178: 32\n         line 180: 41\n         line 181: 47\n         line 182: 62\n         line 183: 76\n         line 184: 94\n         line 185: 108\n         line 186: 126\n         line 187: 140\n-        line 188: 158\n-        line 189: 187\n-        line 183: 201\n-        line 181: 207\n-        line 174: 213\n-        line 194: 219\n+        line 188: 146\n+        line 189: 159\n+        line 183: 172\n+        line 181: 178\n+        line 174: 184\n+        line 194: 190\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-          108      93     8 layout2   Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;\n-           82     125     7    j2   I\n-           76     131     6 layout1   Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;\n-           50     163     5     j   I\n-           18     195     2   map   Ljava/util/Map;\n-           25     188     3     c   Ljava/util/Collection;\n-           47     166     4     l   Ljava/util/List;\n-            2     217     1     i   I\n-            0     220     0  this   Lorg/apache/commons/compress/harmony/unpack200/AttributeLayoutMap;\n+          108      64     8 layout2   Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;\n+           82      96     7    j2   I\n+           76     102     6 layout1   Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;\n+           50     134     5     j   I\n+           18     166     2   map   Ljava/util/Map;\n+           25     159     3     c   Ljava/util/Collection;\n+           47     137     4     l   Ljava/util/List;\n+            2     188     1     i   I\n+            0     191     0  this   Lorg/apache/commons/compress/harmony/unpack200/AttributeLayoutMap;\n       StackMapTable: number_of_entries = 8\n         frame_type = 252 /* append */\n           offset_delta = 2\n           locals = [ int ]\n         frame_type = 253 /* append */\n           offset_delta = 38\n           locals = [ class java/util/Map, class java/util/Collection ]\n         frame_type = 253 /* append */\n           offset_delta = 8\n           locals = [ class java/util/List, int ]\n         frame_type = 253 /* append */\n           offset_delta = 31\n           locals = [ class org/apache/commons/compress/harmony/unpack200/AttributeLayout, int ]\n         frame_type = 251 /* same_frame_extended */\n-          offset_delta = 118\n+          offset_delta = 89\n         frame_type = 249 /* chop */\n           offset_delta = 5\n         frame_type = 255 /* full_frame */\n           offset_delta = 5\n           locals = [ class org/apache/commons/compress/harmony/unpack200/AttributeLayoutMap, int ]\n           stack = []\n         frame_type = 250 /* chop */\n@@ -1405,17 +1389,23 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: getfield      #53                 // Field layoutsToBands:Ljava/util/Map;\n          4: aload_1\n          5: invokeinterface #66,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-        10: checkcast     #83                 // class org/apache/commons/compress/harmony/unpack200/NewAttributeBands\n+        10: checkcast     #77                 // class org/apache/commons/compress/harmony/unpack200/NewAttributeBands\n         13: areturn\n       LineNumberTable:\n         line 197: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/compress/harmony/unpack200/AttributeLayoutMap;\n             0      14     1 layout   Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;\n }\n SourceFile: \"AttributeLayoutMap.java\"\n+InnerClasses:\n+  public static final #255= #254 of #257; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+BootstrapMethods:\n+  0: #207 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #208 Same layout/name combination: \\u0001/\\u0001 exists twice for context: \\u0001\n"}]}
