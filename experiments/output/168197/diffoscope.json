{"diffoscope-json-version": 1, "source1": "first/DirectoryWalker.class", "source2": "second/DirectoryWalker.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,46 +1,46 @@\n-  SHA-256 checksum 770b91b92f289a6c55f5907131afd8d5ac2781c98226c5307a8f5525ff136175\n+  SHA-256 checksum 60c03c39c6871049dc4ee62c3b0079c95960b674338c0f9b17a92a4582b84ac4\n   Compiled from \"DirectoryWalker.java\"\n public abstract class org.apache.commons.io.DirectoryWalker<T extends java.lang.Object> extends java.lang.Object\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #28                         // org/apache/commons/io/DirectoryWalker\n   super_class: #29                        // java/lang/Object\n   interfaces: 0, fields: 2, methods: 16, attributes: 5\n Constant pool:\n-    #1 = Methodref          #28.#104      // org/apache/commons/io/DirectoryWalker.\"<init>\":(Ljava/io/FileFilter;I)V\n-    #2 = Methodref          #29.#105      // java/lang/Object.\"<init>\":()V\n-    #3 = Fieldref           #28.#106      // org/apache/commons/io/DirectoryWalker.filter:Ljava/io/FileFilter;\n-    #4 = Fieldref           #28.#107      // org/apache/commons/io/DirectoryWalker.depthLimit:I\n-    #5 = Fieldref           #108.#109     // org/apache/commons/io/filefilter/TrueFileFilter.TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-    #6 = Methodref          #110.#111     // org/apache/commons/io/filefilter/FileFilterUtils.makeDirectoryOnly:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-    #7 = Methodref          #110.#112     // org/apache/commons/io/filefilter/FileFilterUtils.makeFileOnly:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-    #8 = InterfaceMethodref #113.#114     // org/apache/commons/io/filefilter/IOFileFilter.or:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-    #9 = String             #57           // startDirectory\n-   #10 = Methodref          #115.#116     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #11 = Methodref          #28.#117      // org/apache/commons/io/DirectoryWalker.handleStart:(Ljava/io/File;Ljava/util/Collection;)V\n-   #12 = Methodref          #28.#118      // org/apache/commons/io/DirectoryWalker.walk:(Ljava/io/File;ILjava/util/Collection;)V\n-   #13 = Methodref          #28.#119      // org/apache/commons/io/DirectoryWalker.handleEnd:(Ljava/util/Collection;)V\n-   #14 = Class              #120          // org/apache/commons/io/DirectoryWalker$CancelException\n-   #15 = Methodref          #28.#121      // org/apache/commons/io/DirectoryWalker.handleCancelled:(Ljava/io/File;Ljava/util/Collection;Lorg/apache/commons/io/DirectoryWalker$CancelException;)V\n-   #16 = Methodref          #28.#122      // org/apache/commons/io/DirectoryWalker.checkIfCancelled:(Ljava/io/File;ILjava/util/Collection;)V\n-   #17 = Methodref          #28.#123      // org/apache/commons/io/DirectoryWalker.handleDirectory:(Ljava/io/File;ILjava/util/Collection;)Z\n-   #18 = Methodref          #28.#124      // org/apache/commons/io/DirectoryWalker.handleDirectoryStart:(Ljava/io/File;ILjava/util/Collection;)V\n-   #19 = Methodref          #125.#126     // java/io/File.listFiles:()[Ljava/io/File;\n-   #20 = Methodref          #125.#127     // java/io/File.listFiles:(Ljava/io/FileFilter;)[Ljava/io/File;\n-   #21 = Methodref          #28.#128      // org/apache/commons/io/DirectoryWalker.filterDirectoryContents:(Ljava/io/File;I[Ljava/io/File;)[Ljava/io/File;\n-   #22 = Methodref          #28.#129      // org/apache/commons/io/DirectoryWalker.handleRestricted:(Ljava/io/File;ILjava/util/Collection;)V\n-   #23 = Methodref          #125.#130     // java/io/File.isDirectory:()Z\n-   #24 = Methodref          #28.#131      // org/apache/commons/io/DirectoryWalker.handleFile:(Ljava/io/File;ILjava/util/Collection;)V\n-   #25 = Methodref          #28.#132      // org/apache/commons/io/DirectoryWalker.handleDirectoryEnd:(Ljava/io/File;ILjava/util/Collection;)V\n-   #26 = Methodref          #28.#133      // org/apache/commons/io/DirectoryWalker.handleIsCancelled:(Ljava/io/File;ILjava/util/Collection;)Z\n-   #27 = Methodref          #14.#134      // org/apache/commons/io/DirectoryWalker$CancelException.\"<init>\":(Ljava/io/File;I)V\n-   #28 = Class              #135          // org/apache/commons/io/DirectoryWalker\n-   #29 = Class              #136          // java/lang/Object\n+    #1 = Methodref          #28.#102      // org/apache/commons/io/DirectoryWalker.\"<init>\":(Ljava/io/FileFilter;I)V\n+    #2 = Methodref          #29.#103      // java/lang/Object.\"<init>\":()V\n+    #3 = Fieldref           #28.#104      // org/apache/commons/io/DirectoryWalker.filter:Ljava/io/FileFilter;\n+    #4 = Fieldref           #28.#105      // org/apache/commons/io/DirectoryWalker.depthLimit:I\n+    #5 = Fieldref           #106.#107     // org/apache/commons/io/filefilter/TrueFileFilter.TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+    #6 = Methodref          #108.#109     // org/apache/commons/io/filefilter/FileFilterUtils.makeDirectoryOnly:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+    #7 = Methodref          #108.#110     // org/apache/commons/io/filefilter/FileFilterUtils.makeFileOnly:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+    #8 = InterfaceMethodref #51.#111      // org/apache/commons/io/filefilter/IOFileFilter.or:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+    #9 = String             #56           // startDirectory\n+   #10 = Methodref          #112.#113     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #11 = Methodref          #28.#114      // org/apache/commons/io/DirectoryWalker.handleStart:(Ljava/io/File;Ljava/util/Collection;)V\n+   #12 = Methodref          #28.#115      // org/apache/commons/io/DirectoryWalker.walk:(Ljava/io/File;ILjava/util/Collection;)V\n+   #13 = Methodref          #28.#116      // org/apache/commons/io/DirectoryWalker.handleEnd:(Ljava/util/Collection;)V\n+   #14 = Class              #117          // org/apache/commons/io/DirectoryWalker$CancelException\n+   #15 = Methodref          #28.#118      // org/apache/commons/io/DirectoryWalker.handleCancelled:(Ljava/io/File;Ljava/util/Collection;Lorg/apache/commons/io/DirectoryWalker$CancelException;)V\n+   #16 = Methodref          #28.#119      // org/apache/commons/io/DirectoryWalker.checkIfCancelled:(Ljava/io/File;ILjava/util/Collection;)V\n+   #17 = Methodref          #28.#120      // org/apache/commons/io/DirectoryWalker.handleDirectory:(Ljava/io/File;ILjava/util/Collection;)Z\n+   #18 = Methodref          #28.#121      // org/apache/commons/io/DirectoryWalker.handleDirectoryStart:(Ljava/io/File;ILjava/util/Collection;)V\n+   #19 = Methodref          #73.#122      // java/io/File.listFiles:()[Ljava/io/File;\n+   #20 = Methodref          #73.#123      // java/io/File.listFiles:(Ljava/io/FileFilter;)[Ljava/io/File;\n+   #21 = Methodref          #28.#124      // org/apache/commons/io/DirectoryWalker.filterDirectoryContents:(Ljava/io/File;I[Ljava/io/File;)[Ljava/io/File;\n+   #22 = Methodref          #28.#125      // org/apache/commons/io/DirectoryWalker.handleRestricted:(Ljava/io/File;ILjava/util/Collection;)V\n+   #23 = Methodref          #73.#126      // java/io/File.isDirectory:()Z\n+   #24 = Methodref          #28.#127      // org/apache/commons/io/DirectoryWalker.handleFile:(Ljava/io/File;ILjava/util/Collection;)V\n+   #25 = Methodref          #28.#128      // org/apache/commons/io/DirectoryWalker.handleDirectoryEnd:(Ljava/io/File;ILjava/util/Collection;)V\n+   #26 = Methodref          #28.#129      // org/apache/commons/io/DirectoryWalker.handleIsCancelled:(Ljava/io/File;ILjava/util/Collection;)Z\n+   #27 = Methodref          #14.#130      // org/apache/commons/io/DirectoryWalker$CancelException.\"<init>\":(Ljava/io/File;I)V\n+   #28 = Class              #131          // org/apache/commons/io/DirectoryWalker\n+   #29 = Class              #132          // java/lang/Object\n    #30 = Utf8               CancelException\n    #31 = Utf8               InnerClasses\n    #32 = Utf8               filter\n    #33 = Utf8               Ljava/io/FileFilter;\n    #34 = Utf8               depthLimit\n    #35 = Utf8               I\n    #36 = Utf8               <init>\n@@ -54,120 +54,116 @@\n    #44 = Utf8               Lorg/apache/commons/io/DirectoryWalker<TT;>;\n    #45 = Utf8               (Ljava/io/FileFilter;I)V\n    #46 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;I)V\n    #47 = Utf8               directoryFilter\n    #48 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n    #49 = Utf8               fileFilter\n    #50 = Utf8               StackMapTable\n-   #51 = Class              #135          // org/apache/commons/io/DirectoryWalker\n-   #52 = Class              #137          // org/apache/commons/io/filefilter/IOFileFilter\n-   #53 = Utf8               walk\n-   #54 = Utf8               (Ljava/io/File;Ljava/util/Collection;)V\n-   #55 = Utf8               cancel\n-   #56 = Utf8               Lorg/apache/commons/io/DirectoryWalker$CancelException;\n-   #57 = Utf8               startDirectory\n-   #58 = Utf8               Ljava/io/File;\n-   #59 = Utf8               results\n-   #60 = Utf8               Ljava/util/Collection;\n-   #61 = Utf8               Ljava/util/Collection<TT;>;\n-   #62 = Class              #120          // org/apache/commons/io/DirectoryWalker$CancelException\n-   #63 = Utf8               Exceptions\n-   #64 = Class              #138          // java/io/IOException\n-   #65 = Utf8               Signature\n-   #66 = Utf8               (Ljava/io/File;Ljava/util/Collection<TT;>;)V\n-   #67 = Utf8               (Ljava/io/File;ILjava/util/Collection;)V\n-   #68 = Utf8               childFile\n-   #69 = Utf8               childFiles\n-   #70 = Utf8               [Ljava/io/File;\n-   #71 = Utf8               childDepth\n-   #72 = Utf8               directory\n-   #73 = Utf8               depth\n-   #74 = Class              #70           // \"[Ljava/io/File;\"\n-   #75 = Class              #139          // java/io/File\n-   #76 = Class              #140          // java/util/Collection\n-   #77 = Utf8               (Ljava/io/File;ILjava/util/Collection<TT;>;)V\n-   #78 = Utf8               checkIfCancelled\n-   #79 = Utf8               file\n-   #80 = Utf8               handleIsCancelled\n-   #81 = Utf8               (Ljava/io/File;ILjava/util/Collection;)Z\n-   #82 = Utf8               (Ljava/io/File;ILjava/util/Collection<TT;>;)Z\n-   #83 = Utf8               handleCancelled\n-   #84 = Utf8               (Ljava/io/File;Ljava/util/Collection;Lorg/apache/commons/io/DirectoryWalker$CancelException;)V\n-   #85 = Utf8               (Ljava/io/File;Ljava/util/Collection<TT;>;Lorg/apache/commons/io/DirectoryWalker$CancelException;)V\n-   #86 = Utf8               handleStart\n-   #87 = Utf8               handleDirectory\n-   #88 = Utf8               handleDirectoryStart\n-   #89 = Utf8               filterDirectoryContents\n-   #90 = Utf8               (Ljava/io/File;I[Ljava/io/File;)[Ljava/io/File;\n-   #91 = Utf8               files\n-   #92 = Utf8               handleFile\n-   #93 = Utf8               handleRestricted\n-   #94 = Utf8               handleDirectoryEnd\n-   #95 = Utf8               handleEnd\n-   #96 = Utf8               (Ljava/util/Collection;)V\n-   #97 = Utf8               (Ljava/util/Collection<TT;>;)V\n-   #98 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;\n-   #99 = Utf8               SourceFile\n-  #100 = Utf8               DirectoryWalker.java\n-  #101 = Utf8               Deprecated\n-  #102 = Utf8               RuntimeVisibleAnnotations\n-  #103 = Utf8               Ljava/lang/Deprecated;\n-  #104 = NameAndType        #36:#45       // \"<init>\":(Ljava/io/FileFilter;I)V\n-  #105 = NameAndType        #36:#37       // \"<init>\":()V\n-  #106 = NameAndType        #32:#33       // filter:Ljava/io/FileFilter;\n-  #107 = NameAndType        #34:#35       // depthLimit:I\n-  #108 = Class              #141          // org/apache/commons/io/filefilter/TrueFileFilter\n-  #109 = NameAndType        #142:#48      // TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #110 = Class              #143          // org/apache/commons/io/filefilter/FileFilterUtils\n-  #111 = NameAndType        #144:#145     // makeDirectoryOnly:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #112 = NameAndType        #146:#145     // makeFileOnly:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #113 = Class              #137          // org/apache/commons/io/filefilter/IOFileFilter\n-  #114 = NameAndType        #147:#145     // or:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #115 = Class              #148          // java/util/Objects\n-  #116 = NameAndType        #149:#150     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #117 = NameAndType        #86:#54       // handleStart:(Ljava/io/File;Ljava/util/Collection;)V\n-  #118 = NameAndType        #53:#67       // walk:(Ljava/io/File;ILjava/util/Collection;)V\n-  #119 = NameAndType        #95:#96       // handleEnd:(Ljava/util/Collection;)V\n-  #120 = Utf8               org/apache/commons/io/DirectoryWalker$CancelException\n-  #121 = NameAndType        #83:#84       // handleCancelled:(Ljava/io/File;Ljava/util/Collection;Lorg/apache/commons/io/DirectoryWalker$CancelException;)V\n-  #122 = NameAndType        #78:#67       // checkIfCancelled:(Ljava/io/File;ILjava/util/Collection;)V\n-  #123 = NameAndType        #87:#81       // handleDirectory:(Ljava/io/File;ILjava/util/Collection;)Z\n-  #124 = NameAndType        #88:#67       // handleDirectoryStart:(Ljava/io/File;ILjava/util/Collection;)V\n-  #125 = Class              #139          // java/io/File\n-  #126 = NameAndType        #151:#152     // listFiles:()[Ljava/io/File;\n-  #127 = NameAndType        #151:#153     // listFiles:(Ljava/io/FileFilter;)[Ljava/io/File;\n-  #128 = NameAndType        #89:#90       // filterDirectoryContents:(Ljava/io/File;I[Ljava/io/File;)[Ljava/io/File;\n-  #129 = NameAndType        #93:#67       // handleRestricted:(Ljava/io/File;ILjava/util/Collection;)V\n-  #130 = NameAndType        #154:#155     // isDirectory:()Z\n-  #131 = NameAndType        #92:#67       // handleFile:(Ljava/io/File;ILjava/util/Collection;)V\n-  #132 = NameAndType        #94:#67       // handleDirectoryEnd:(Ljava/io/File;ILjava/util/Collection;)V\n-  #133 = NameAndType        #80:#81       // handleIsCancelled:(Ljava/io/File;ILjava/util/Collection;)Z\n-  #134 = NameAndType        #36:#156      // \"<init>\":(Ljava/io/File;I)V\n-  #135 = Utf8               org/apache/commons/io/DirectoryWalker\n-  #136 = Utf8               java/lang/Object\n-  #137 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n-  #138 = Utf8               java/io/IOException\n-  #139 = Utf8               java/io/File\n-  #140 = Utf8               java/util/Collection\n-  #141 = Utf8               org/apache/commons/io/filefilter/TrueFileFilter\n-  #142 = Utf8               TRUE\n-  #143 = Utf8               org/apache/commons/io/filefilter/FileFilterUtils\n-  #144 = Utf8               makeDirectoryOnly\n-  #145 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #146 = Utf8               makeFileOnly\n-  #147 = Utf8               or\n-  #148 = Utf8               java/util/Objects\n-  #149 = Utf8               requireNonNull\n-  #150 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #151 = Utf8               listFiles\n-  #152 = Utf8               ()[Ljava/io/File;\n-  #153 = Utf8               (Ljava/io/FileFilter;)[Ljava/io/File;\n-  #154 = Utf8               isDirectory\n-  #155 = Utf8               ()Z\n-  #156 = Utf8               (Ljava/io/File;I)V\n+   #51 = Class              #133          // org/apache/commons/io/filefilter/IOFileFilter\n+   #52 = Utf8               walk\n+   #53 = Utf8               (Ljava/io/File;Ljava/util/Collection;)V\n+   #54 = Utf8               cancel\n+   #55 = Utf8               Lorg/apache/commons/io/DirectoryWalker$CancelException;\n+   #56 = Utf8               startDirectory\n+   #57 = Utf8               Ljava/io/File;\n+   #58 = Utf8               results\n+   #59 = Utf8               Ljava/util/Collection;\n+   #60 = Utf8               Ljava/util/Collection<TT;>;\n+   #61 = Utf8               Exceptions\n+   #62 = Class              #134          // java/io/IOException\n+   #63 = Utf8               Signature\n+   #64 = Utf8               (Ljava/io/File;Ljava/util/Collection<TT;>;)V\n+   #65 = Utf8               (Ljava/io/File;ILjava/util/Collection;)V\n+   #66 = Utf8               childFile\n+   #67 = Utf8               childFiles\n+   #68 = Utf8               [Ljava/io/File;\n+   #69 = Utf8               childDepth\n+   #70 = Utf8               directory\n+   #71 = Utf8               depth\n+   #72 = Class              #68           // \"[Ljava/io/File;\"\n+   #73 = Class              #135          // java/io/File\n+   #74 = Class              #136          // java/util/Collection\n+   #75 = Utf8               (Ljava/io/File;ILjava/util/Collection<TT;>;)V\n+   #76 = Utf8               checkIfCancelled\n+   #77 = Utf8               file\n+   #78 = Utf8               handleIsCancelled\n+   #79 = Utf8               (Ljava/io/File;ILjava/util/Collection;)Z\n+   #80 = Utf8               (Ljava/io/File;ILjava/util/Collection<TT;>;)Z\n+   #81 = Utf8               handleCancelled\n+   #82 = Utf8               (Ljava/io/File;Ljava/util/Collection;Lorg/apache/commons/io/DirectoryWalker$CancelException;)V\n+   #83 = Utf8               (Ljava/io/File;Ljava/util/Collection<TT;>;Lorg/apache/commons/io/DirectoryWalker$CancelException;)V\n+   #84 = Utf8               handleStart\n+   #85 = Utf8               handleDirectory\n+   #86 = Utf8               handleDirectoryStart\n+   #87 = Utf8               filterDirectoryContents\n+   #88 = Utf8               (Ljava/io/File;I[Ljava/io/File;)[Ljava/io/File;\n+   #89 = Utf8               files\n+   #90 = Utf8               handleFile\n+   #91 = Utf8               handleRestricted\n+   #92 = Utf8               handleDirectoryEnd\n+   #93 = Utf8               handleEnd\n+   #94 = Utf8               (Ljava/util/Collection;)V\n+   #95 = Utf8               (Ljava/util/Collection<TT;>;)V\n+   #96 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;\n+   #97 = Utf8               SourceFile\n+   #98 = Utf8               DirectoryWalker.java\n+   #99 = Utf8               Deprecated\n+  #100 = Utf8               RuntimeVisibleAnnotations\n+  #101 = Utf8               Ljava/lang/Deprecated;\n+  #102 = NameAndType        #36:#45       // \"<init>\":(Ljava/io/FileFilter;I)V\n+  #103 = NameAndType        #36:#37       // \"<init>\":()V\n+  #104 = NameAndType        #32:#33       // filter:Ljava/io/FileFilter;\n+  #105 = NameAndType        #34:#35       // depthLimit:I\n+  #106 = Class              #137          // org/apache/commons/io/filefilter/TrueFileFilter\n+  #107 = NameAndType        #138:#48      // TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #108 = Class              #139          // org/apache/commons/io/filefilter/FileFilterUtils\n+  #109 = NameAndType        #140:#141     // makeDirectoryOnly:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #110 = NameAndType        #142:#141     // makeFileOnly:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #111 = NameAndType        #143:#141     // or:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #112 = Class              #144          // java/util/Objects\n+  #113 = NameAndType        #145:#146     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #114 = NameAndType        #84:#53       // handleStart:(Ljava/io/File;Ljava/util/Collection;)V\n+  #115 = NameAndType        #52:#65       // walk:(Ljava/io/File;ILjava/util/Collection;)V\n+  #116 = NameAndType        #93:#94       // handleEnd:(Ljava/util/Collection;)V\n+  #117 = Utf8               org/apache/commons/io/DirectoryWalker$CancelException\n+  #118 = NameAndType        #81:#82       // handleCancelled:(Ljava/io/File;Ljava/util/Collection;Lorg/apache/commons/io/DirectoryWalker$CancelException;)V\n+  #119 = NameAndType        #76:#65       // checkIfCancelled:(Ljava/io/File;ILjava/util/Collection;)V\n+  #120 = NameAndType        #85:#79       // handleDirectory:(Ljava/io/File;ILjava/util/Collection;)Z\n+  #121 = NameAndType        #86:#65       // handleDirectoryStart:(Ljava/io/File;ILjava/util/Collection;)V\n+  #122 = NameAndType        #147:#148     // listFiles:()[Ljava/io/File;\n+  #123 = NameAndType        #147:#149     // listFiles:(Ljava/io/FileFilter;)[Ljava/io/File;\n+  #124 = NameAndType        #87:#88       // filterDirectoryContents:(Ljava/io/File;I[Ljava/io/File;)[Ljava/io/File;\n+  #125 = NameAndType        #91:#65       // handleRestricted:(Ljava/io/File;ILjava/util/Collection;)V\n+  #126 = NameAndType        #150:#151     // isDirectory:()Z\n+  #127 = NameAndType        #90:#65       // handleFile:(Ljava/io/File;ILjava/util/Collection;)V\n+  #128 = NameAndType        #92:#65       // handleDirectoryEnd:(Ljava/io/File;ILjava/util/Collection;)V\n+  #129 = NameAndType        #78:#79       // handleIsCancelled:(Ljava/io/File;ILjava/util/Collection;)Z\n+  #130 = NameAndType        #36:#152      // \"<init>\":(Ljava/io/File;I)V\n+  #131 = Utf8               org/apache/commons/io/DirectoryWalker\n+  #132 = Utf8               java/lang/Object\n+  #133 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n+  #134 = Utf8               java/io/IOException\n+  #135 = Utf8               java/io/File\n+  #136 = Utf8               java/util/Collection\n+  #137 = Utf8               org/apache/commons/io/filefilter/TrueFileFilter\n+  #138 = Utf8               TRUE\n+  #139 = Utf8               org/apache/commons/io/filefilter/FileFilterUtils\n+  #140 = Utf8               makeDirectoryOnly\n+  #141 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #142 = Utf8               makeFileOnly\n+  #143 = Utf8               or\n+  #144 = Utf8               java/util/Objects\n+  #145 = Utf8               requireNonNull\n+  #146 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #147 = Utf8               listFiles\n+  #148 = Utf8               ()[Ljava/io/File;\n+  #149 = Utf8               (Ljava/io/FileFilter;)[Ljava/io/File;\n+  #150 = Utf8               isDirectory\n+  #151 = Utf8               ()Z\n+  #152 = Utf8               (Ljava/io/File;I)V\n {\n   private final java.io.FileFilter filter;\n     descriptor: Ljava/io/FileFilter;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final int depthLimit;\n     descriptor: I\n@@ -349,15 +345,15 @@\n             0      37     2 results   Ljava/util/Collection<TT;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 92 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/io/DirectoryWalker$CancelException ]\n         frame_type = 7 /* same */\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #66                          // (Ljava/io/File;Ljava/util/Collection<TT;>;)V\n+    Signature: #64                          // (Ljava/io/File;Ljava/util/Collection<TT;>;)V\n \n   private void walk(java.io.File, int, java.util.Collection<T>) throws java.io.IOException;\n     descriptor: (Ljava/io/File;ILjava/util/Collection;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=10, args_size=4\n          0: aload_0\n@@ -524,15 +520,15 @@\n           offset_delta = 5\n           locals = [ class org/apache/commons/io/DirectoryWalker, class java/io/File, int, class java/util/Collection, int ]\n           stack = []\n         frame_type = 250 /* chop */\n           offset_delta = 6\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #77                          // (Ljava/io/File;ILjava/util/Collection<TT;>;)V\n+    Signature: #75                          // (Ljava/io/File;ILjava/util/Collection<TT;>;)V\n \n   protected final void checkIfCancelled(java.io.File, int, java.util.Collection<T>) throws java.io.IOException;\n     descriptor: (Ljava/io/File;ILjava/util/Collection;)V\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n@@ -562,15 +558,15 @@\n         Start  Length  Slot  Name   Signature\n             0      21     0  this   Lorg/apache/commons/io/DirectoryWalker<TT;>;\n             0      21     3 results   Ljava/util/Collection<TT;>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 20 /* same */\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #77                          // (Ljava/io/File;ILjava/util/Collection<TT;>;)V\n+    Signature: #75                          // (Ljava/io/File;ILjava/util/Collection<TT;>;)V\n \n   protected boolean handleIsCancelled(java.io.File, int, java.util.Collection<T>) throws java.io.IOException;\n     descriptor: (Ljava/io/File;ILjava/util/Collection;)Z\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=4, args_size=4\n          0: iconst_0\n@@ -585,15 +581,15 @@\n             0       2     3 results   Ljava/util/Collection;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       2     0  this   Lorg/apache/commons/io/DirectoryWalker<TT;>;\n             0       2     3 results   Ljava/util/Collection<TT;>;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #82                          // (Ljava/io/File;ILjava/util/Collection<TT;>;)Z\n+    Signature: #80                          // (Ljava/io/File;ILjava/util/Collection<TT;>;)Z\n \n   protected void handleCancelled(java.io.File, java.util.Collection<T>, org.apache.commons.io.DirectoryWalker$CancelException) throws java.io.IOException;\n     descriptor: (Ljava/io/File;Ljava/util/Collection;Lorg/apache/commons/io/DirectoryWalker$CancelException;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=4, args_size=4\n          0: aload_3\n@@ -608,15 +604,15 @@\n             0       2     3 cancel   Lorg/apache/commons/io/DirectoryWalker$CancelException;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       2     0  this   Lorg/apache/commons/io/DirectoryWalker<TT;>;\n             0       2     2 results   Ljava/util/Collection<TT;>;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #85                          // (Ljava/io/File;Ljava/util/Collection<TT;>;Lorg/apache/commons/io/DirectoryWalker$CancelException;)V\n+    Signature: #83                          // (Ljava/io/File;Ljava/util/Collection<TT;>;Lorg/apache/commons/io/DirectoryWalker$CancelException;)V\n \n   protected void handleStart(java.io.File, java.util.Collection<T>) throws java.io.IOException;\n     descriptor: (Ljava/io/File;Ljava/util/Collection;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=0, locals=3, args_size=3\n          0: return\n@@ -629,15 +625,15 @@\n             0       1     2 results   Ljava/util/Collection;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/DirectoryWalker<TT;>;\n             0       1     2 results   Ljava/util/Collection<TT;>;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #66                          // (Ljava/io/File;Ljava/util/Collection<TT;>;)V\n+    Signature: #64                          // (Ljava/io/File;Ljava/util/Collection<TT;>;)V\n \n   protected boolean handleDirectory(java.io.File, int, java.util.Collection<T>) throws java.io.IOException;\n     descriptor: (Ljava/io/File;ILjava/util/Collection;)Z\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=4, args_size=4\n          0: iconst_1\n@@ -652,15 +648,15 @@\n             0       2     3 results   Ljava/util/Collection;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       2     0  this   Lorg/apache/commons/io/DirectoryWalker<TT;>;\n             0       2     3 results   Ljava/util/Collection<TT;>;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #82                          // (Ljava/io/File;ILjava/util/Collection<TT;>;)Z\n+    Signature: #80                          // (Ljava/io/File;ILjava/util/Collection<TT;>;)Z\n \n   protected void handleDirectoryStart(java.io.File, int, java.util.Collection<T>) throws java.io.IOException;\n     descriptor: (Ljava/io/File;ILjava/util/Collection;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=0, locals=4, args_size=4\n          0: return\n@@ -674,15 +670,15 @@\n             0       1     3 results   Ljava/util/Collection;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/DirectoryWalker<TT;>;\n             0       1     3 results   Ljava/util/Collection<TT;>;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #77                          // (Ljava/io/File;ILjava/util/Collection<TT;>;)V\n+    Signature: #75                          // (Ljava/io/File;ILjava/util/Collection<TT;>;)V\n \n   protected java.io.File[] filterDirectoryContents(java.io.File, int, java.io.File...) throws java.io.IOException;\n     descriptor: (Ljava/io/File;I[Ljava/io/File;)[Ljava/io/File;\n     flags: (0x0084) ACC_PROTECTED, ACC_VARARGS\n     Code:\n       stack=1, locals=4, args_size=4\n          0: aload_3\n@@ -717,15 +713,15 @@\n             0       1     3 results   Ljava/util/Collection;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/DirectoryWalker<TT;>;\n             0       1     3 results   Ljava/util/Collection<TT;>;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #77                          // (Ljava/io/File;ILjava/util/Collection<TT;>;)V\n+    Signature: #75                          // (Ljava/io/File;ILjava/util/Collection<TT;>;)V\n \n   protected void handleRestricted(java.io.File, int, java.util.Collection<T>) throws java.io.IOException;\n     descriptor: (Ljava/io/File;ILjava/util/Collection;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=0, locals=4, args_size=4\n          0: return\n@@ -739,15 +735,15 @@\n             0       1     3 results   Ljava/util/Collection;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/DirectoryWalker<TT;>;\n             0       1     3 results   Ljava/util/Collection<TT;>;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #77                          // (Ljava/io/File;ILjava/util/Collection<TT;>;)V\n+    Signature: #75                          // (Ljava/io/File;ILjava/util/Collection<TT;>;)V\n \n   protected void handleDirectoryEnd(java.io.File, int, java.util.Collection<T>) throws java.io.IOException;\n     descriptor: (Ljava/io/File;ILjava/util/Collection;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=0, locals=4, args_size=4\n          0: return\n@@ -761,15 +757,15 @@\n             0       1     3 results   Ljava/util/Collection;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/DirectoryWalker<TT;>;\n             0       1     3 results   Ljava/util/Collection<TT;>;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #77                          // (Ljava/io/File;ILjava/util/Collection<TT;>;)V\n+    Signature: #75                          // (Ljava/io/File;ILjava/util/Collection<TT;>;)V\n \n   protected void handleEnd(java.util.Collection<T>) throws java.io.IOException;\n     descriptor: (Ljava/util/Collection;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=0, locals=2, args_size=2\n          0: return\n@@ -781,17 +777,17 @@\n             0       1     1 results   Ljava/util/Collection;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/DirectoryWalker<TT;>;\n             0       1     1 results   Ljava/util/Collection<TT;>;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #97                          // (Ljava/util/Collection<TT;>;)V\n+    Signature: #95                          // (Ljava/util/Collection<TT;>;)V\n }\n-Signature: #98                          // <T:Ljava/lang/Object;>Ljava/lang/Object;\n+Signature: #96                          // <T:Ljava/lang/Object;>Ljava/lang/Object;\n SourceFile: \"DirectoryWalker.java\"\n Deprecated: true\n RuntimeVisibleAnnotations:\n-  0: #103()\n+  0: #101()\n     java.lang.Deprecated\n InnerClasses:\n   public static #30= #14 of #28;          // CancelException=class org/apache/commons/io/DirectoryWalker$CancelException of class org/apache/commons/io/DirectoryWalker\n"}]}
