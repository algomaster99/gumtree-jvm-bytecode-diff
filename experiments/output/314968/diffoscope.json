{"diffoscope-json-version": 1, "source1": "first/TeeReader.class", "source2": "second/TeeReader.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,95 +1,95 @@\n-  SHA-256 checksum 95caff15a2583b93843ae46c9218034bd761112baf37a82a7d4b42fc4eb1f2aa\n+  SHA-256 checksum dd17efb5efef21ecf35ee85b9baa27023907be608b658dc09d17f0c26d39825f\n   Compiled from \"TeeReader.java\"\n public class org.apache.commons.io.input.TeeReader extends org.apache.commons.io.input.ProxyReader\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #19                         // org/apache/commons/io/input/TeeReader\n-  super_class: #20                        // org/apache/commons/io/input/ProxyReader\n+  this_class: #4                          // org/apache/commons/io/input/TeeReader\n+  super_class: #10                        // org/apache/commons/io/input/ProxyReader\n   interfaces: 0, fields: 2, methods: 7, attributes: 1\n Constant pool:\n-   #1 = Class              #44            // org/apache/commons/io/IOUtils\n-   #2 = Methodref          #19.#45        // org/apache/commons/io/input/TeeReader.\"<init>\":(Ljava/io/Reader;Ljava/io/Writer;Z)V\n-   #3 = Methodref          #20.#46        // org/apache/commons/io/input/ProxyReader.\"<init>\":(Ljava/io/Reader;)V\n-   #4 = Fieldref           #19.#47        // org/apache/commons/io/input/TeeReader.branch:Ljava/io/Writer;\n-   #5 = Fieldref           #19.#48        // org/apache/commons/io/input/TeeReader.closeBranch:Z\n-   #6 = Methodref          #20.#49        // org/apache/commons/io/input/ProxyReader.close:()V\n-   #7 = Methodref          #50.#49        // java/io/Writer.close:()V\n-   #8 = Methodref          #20.#51        // org/apache/commons/io/input/ProxyReader.read:()I\n-   #9 = Methodref          #50.#52        // java/io/Writer.write:(I)V\n-  #10 = Methodref          #20.#53        // org/apache/commons/io/input/ProxyReader.read:([C)I\n-  #11 = Methodref          #50.#54        // java/io/Writer.write:([CII)V\n-  #12 = Methodref          #20.#55        // org/apache/commons/io/input/ProxyReader.read:([CII)I\n-  #13 = Methodref          #41.#56        // java/nio/CharBuffer.position:()I\n-  #14 = Methodref          #20.#57        // org/apache/commons/io/input/ProxyReader.read:(Ljava/nio/CharBuffer;)I\n-  #15 = Methodref          #41.#58        // java/nio/CharBuffer.limit:()I\n-  #16 = Methodref          #41.#59        // java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;\n-  #17 = Methodref          #60.#61        // java/nio/Buffer.limit:(I)Ljava/nio/Buffer;\n-  #18 = Methodref          #50.#62        // java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-  #19 = Class              #63            // org/apache/commons/io/input/TeeReader\n-  #20 = Class              #64            // org/apache/commons/io/input/ProxyReader\n-  #21 = Utf8               branch\n-  #22 = Utf8               Ljava/io/Writer;\n-  #23 = Utf8               closeBranch\n-  #24 = Utf8               Z\n-  #25 = Utf8               <init>\n-  #26 = Utf8               (Ljava/io/Reader;Ljava/io/Writer;)V\n-  #27 = Utf8               Code\n-  #28 = Utf8               LineNumberTable\n-  #29 = Utf8               (Ljava/io/Reader;Ljava/io/Writer;Z)V\n-  #30 = Utf8               close\n-  #31 = Utf8               ()V\n-  #32 = Utf8               StackMapTable\n-  #33 = Class              #65            // java/lang/Throwable\n-  #34 = Utf8               Exceptions\n-  #35 = Class              #66            // java/io/IOException\n-  #36 = Utf8               read\n-  #37 = Utf8               ()I\n-  #38 = Utf8               ([C)I\n-  #39 = Utf8               ([CII)I\n-  #40 = Utf8               (Ljava/nio/CharBuffer;)I\n-  #41 = Class              #67            // java/nio/CharBuffer\n-  #42 = Utf8               SourceFile\n-  #43 = Utf8               TeeReader.java\n-  #44 = Utf8               org/apache/commons/io/IOUtils\n-  #45 = NameAndType        #25:#29        // \"<init>\":(Ljava/io/Reader;Ljava/io/Writer;Z)V\n-  #46 = NameAndType        #25:#68        // \"<init>\":(Ljava/io/Reader;)V\n-  #47 = NameAndType        #21:#22        // branch:Ljava/io/Writer;\n-  #48 = NameAndType        #23:#24        // closeBranch:Z\n-  #49 = NameAndType        #30:#31        // close:()V\n-  #50 = Class              #69            // java/io/Writer\n-  #51 = NameAndType        #36:#37        // read:()I\n-  #52 = NameAndType        #70:#71        // write:(I)V\n-  #53 = NameAndType        #36:#38        // read:([C)I\n-  #54 = NameAndType        #70:#72        // write:([CII)V\n-  #55 = NameAndType        #36:#39        // read:([CII)I\n-  #56 = NameAndType        #73:#37        // position:()I\n-  #57 = NameAndType        #36:#40        // read:(Ljava/nio/CharBuffer;)I\n-  #58 = NameAndType        #74:#37        // limit:()I\n-  #59 = NameAndType        #73:#75        // position:(I)Ljava/nio/Buffer;\n-  #60 = Class              #76            // java/nio/Buffer\n-  #61 = NameAndType        #74:#75        // limit:(I)Ljava/nio/Buffer;\n-  #62 = NameAndType        #77:#78        // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-  #63 = Utf8               org/apache/commons/io/input/TeeReader\n-  #64 = Utf8               org/apache/commons/io/input/ProxyReader\n-  #65 = Utf8               java/lang/Throwable\n-  #66 = Utf8               java/io/IOException\n-  #67 = Utf8               java/nio/CharBuffer\n-  #68 = Utf8               (Ljava/io/Reader;)V\n-  #69 = Utf8               java/io/Writer\n-  #70 = Utf8               write\n-  #71 = Utf8               (I)V\n-  #72 = Utf8               ([CII)V\n-  #73 = Utf8               position\n-  #74 = Utf8               limit\n-  #75 = Utf8               (I)Ljava/nio/Buffer;\n-  #76 = Utf8               java/nio/Buffer\n-  #77 = Utf8               append\n-  #78 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;\n+   #1 = Class              #2             // org/apache/commons/io/IOUtils\n+   #2 = Utf8               org/apache/commons/io/IOUtils\n+   #3 = Methodref          #4.#5          // org/apache/commons/io/input/TeeReader.\"<init>\":(Ljava/io/Reader;Ljava/io/Writer;Z)V\n+   #4 = Class              #6             // org/apache/commons/io/input/TeeReader\n+   #5 = NameAndType        #7:#8          // \"<init>\":(Ljava/io/Reader;Ljava/io/Writer;Z)V\n+   #6 = Utf8               org/apache/commons/io/input/TeeReader\n+   #7 = Utf8               <init>\n+   #8 = Utf8               (Ljava/io/Reader;Ljava/io/Writer;Z)V\n+   #9 = Methodref          #10.#11        // org/apache/commons/io/input/ProxyReader.\"<init>\":(Ljava/io/Reader;)V\n+  #10 = Class              #12            // org/apache/commons/io/input/ProxyReader\n+  #11 = NameAndType        #7:#13         // \"<init>\":(Ljava/io/Reader;)V\n+  #12 = Utf8               org/apache/commons/io/input/ProxyReader\n+  #13 = Utf8               (Ljava/io/Reader;)V\n+  #14 = Fieldref           #4.#15         // org/apache/commons/io/input/TeeReader.branch:Ljava/io/Writer;\n+  #15 = NameAndType        #16:#17        // branch:Ljava/io/Writer;\n+  #16 = Utf8               branch\n+  #17 = Utf8               Ljava/io/Writer;\n+  #18 = Fieldref           #4.#19         // org/apache/commons/io/input/TeeReader.closeBranch:Z\n+  #19 = NameAndType        #20:#21        // closeBranch:Z\n+  #20 = Utf8               closeBranch\n+  #21 = Utf8               Z\n+  #22 = Methodref          #10.#23        // org/apache/commons/io/input/ProxyReader.close:()V\n+  #23 = NameAndType        #24:#25        // close:()V\n+  #24 = Utf8               close\n+  #25 = Utf8               ()V\n+  #26 = Methodref          #27.#23        // java/io/Writer.close:()V\n+  #27 = Class              #28            // java/io/Writer\n+  #28 = Utf8               java/io/Writer\n+  #29 = Methodref          #10.#30        // org/apache/commons/io/input/ProxyReader.read:()I\n+  #30 = NameAndType        #31:#32        // read:()I\n+  #31 = Utf8               read\n+  #32 = Utf8               ()I\n+  #33 = Methodref          #27.#34        // java/io/Writer.write:(I)V\n+  #34 = NameAndType        #35:#36        // write:(I)V\n+  #35 = Utf8               write\n+  #36 = Utf8               (I)V\n+  #37 = Methodref          #10.#38        // org/apache/commons/io/input/ProxyReader.read:([C)I\n+  #38 = NameAndType        #31:#39        // read:([C)I\n+  #39 = Utf8               ([C)I\n+  #40 = Methodref          #27.#41        // java/io/Writer.write:([CII)V\n+  #41 = NameAndType        #35:#42        // write:([CII)V\n+  #42 = Utf8               ([CII)V\n+  #43 = Methodref          #10.#44        // org/apache/commons/io/input/ProxyReader.read:([CII)I\n+  #44 = NameAndType        #31:#45        // read:([CII)I\n+  #45 = Utf8               ([CII)I\n+  #46 = Methodref          #47.#48        // java/nio/CharBuffer.position:()I\n+  #47 = Class              #49            // java/nio/CharBuffer\n+  #48 = NameAndType        #50:#32        // position:()I\n+  #49 = Utf8               java/nio/CharBuffer\n+  #50 = Utf8               position\n+  #51 = Methodref          #10.#52        // org/apache/commons/io/input/ProxyReader.read:(Ljava/nio/CharBuffer;)I\n+  #52 = NameAndType        #31:#53        // read:(Ljava/nio/CharBuffer;)I\n+  #53 = Utf8               (Ljava/nio/CharBuffer;)I\n+  #54 = Methodref          #47.#55        // java/nio/CharBuffer.limit:()I\n+  #55 = NameAndType        #56:#32        // limit:()I\n+  #56 = Utf8               limit\n+  #57 = Methodref          #47.#58        // java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;\n+  #58 = NameAndType        #50:#59        // position:(I)Ljava/nio/Buffer;\n+  #59 = Utf8               (I)Ljava/nio/Buffer;\n+  #60 = Methodref          #61.#62        // java/nio/Buffer.limit:(I)Ljava/nio/Buffer;\n+  #61 = Class              #63            // java/nio/Buffer\n+  #62 = NameAndType        #56:#59        // limit:(I)Ljava/nio/Buffer;\n+  #63 = Utf8               java/nio/Buffer\n+  #64 = Methodref          #27.#65        // java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+  #65 = NameAndType        #66:#67        // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+  #66 = Utf8               append\n+  #67 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;\n+  #68 = Utf8               (Ljava/io/Reader;Ljava/io/Writer;)V\n+  #69 = Utf8               Code\n+  #70 = Utf8               LineNumberTable\n+  #71 = Utf8               StackMapTable\n+  #72 = Class              #73            // java/lang/Throwable\n+  #73 = Utf8               java/lang/Throwable\n+  #74 = Utf8               Exceptions\n+  #75 = Class              #76            // java/io/IOException\n+  #76 = Utf8               java/io/IOException\n+  #77 = Utf8               SourceFile\n+  #78 = Utf8               TeeReader.java\n {\n   private final java.io.Writer branch;\n     descriptor: Ljava/io/Writer;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final boolean closeBranch;\n     descriptor: Z\n@@ -100,62 +100,62 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iconst_0\n-         4: invokespecial #2                  // Method \"<init>\":(Ljava/io/Reader;Ljava/io/Writer;Z)V\n+         4: invokespecial #3                  // Method \"<init>\":(Ljava/io/Reader;Ljava/io/Writer;Z)V\n          7: return\n       LineNumberTable:\n         line 57: 0\n         line 58: 7\n \n   public org.apache.commons.io.input.TeeReader(java.io.Reader, java.io.Writer, boolean);\n     descriptor: (Ljava/io/Reader;Ljava/io/Writer;Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #3                  // Method org/apache/commons/io/input/ProxyReader.\"<init>\":(Ljava/io/Reader;)V\n+         2: invokespecial #9                  // Method org/apache/commons/io/input/ProxyReader.\"<init>\":(Ljava/io/Reader;)V\n          5: aload_0\n          6: aload_2\n-         7: putfield      #4                  // Field branch:Ljava/io/Writer;\n+         7: putfield      #14                 // Field branch:Ljava/io/Writer;\n         10: aload_0\n         11: iload_3\n-        12: putfield      #5                  // Field closeBranch:Z\n+        12: putfield      #18                 // Field closeBranch:Z\n         15: return\n       LineNumberTable:\n         line 70: 0\n         line 71: 5\n         line 72: 10\n         line 73: 15\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #6                  // Method org/apache/commons/io/input/ProxyReader.close:()V\n+         1: invokespecial #22                 // Method org/apache/commons/io/input/ProxyReader.close:()V\n          4: aload_0\n-         5: getfield      #5                  // Field closeBranch:Z\n+         5: getfield      #18                 // Field closeBranch:Z\n          8: ifeq          38\n         11: aload_0\n-        12: getfield      #4                  // Field branch:Ljava/io/Writer;\n-        15: invokevirtual #7                  // Method java/io/Writer.close:()V\n+        12: getfield      #14                 // Field branch:Ljava/io/Writer;\n+        15: invokevirtual #26                 // Method java/io/Writer.close:()V\n         18: goto          38\n         21: astore_1\n         22: aload_0\n-        23: getfield      #5                  // Field closeBranch:Z\n+        23: getfield      #18                 // Field closeBranch:Z\n         26: ifeq          36\n         29: aload_0\n-        30: getfield      #4                  // Field branch:Ljava/io/Writer;\n-        33: invokevirtual #7                  // Method java/io/Writer.close:()V\n+        30: getfield      #14                 // Field branch:Ljava/io/Writer;\n+        33: invokevirtual #26                 // Method java/io/Writer.close:()V\n         36: aload_1\n         37: athrow\n         38: return\n       Exception table:\n          from    to  target type\n              0     4    21   any\n       LineNumberTable:\n@@ -179,23 +179,23 @@\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #8                  // Method org/apache/commons/io/input/ProxyReader.read:()I\n+         1: invokespecial #29                 // Method org/apache/commons/io/input/ProxyReader.read:()I\n          4: istore_1\n          5: iload_1\n          6: iconst_m1\n          7: if_icmpeq     18\n         10: aload_0\n-        11: getfield      #4                  // Field branch:Ljava/io/Writer;\n+        11: getfield      #14                 // Field branch:Ljava/io/Writer;\n         14: iload_1\n-        15: invokevirtual #9                  // Method java/io/Writer.write:(I)V\n+        15: invokevirtual #33                 // Method java/io/Writer.write:(I)V\n         18: iload_1\n         19: ireturn\n       LineNumberTable:\n         line 100: 0\n         line 101: 5\n         line 102: 10\n         line 104: 18\n@@ -209,25 +209,25 @@\n   public int read(char[]) throws java.io.IOException;\n     descriptor: ([C)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #10                 // Method org/apache/commons/io/input/ProxyReader.read:([C)I\n+         2: invokespecial #37                 // Method org/apache/commons/io/input/ProxyReader.read:([C)I\n          5: istore_2\n          6: iload_2\n          7: iconst_m1\n          8: if_icmpeq     21\n         11: aload_0\n-        12: getfield      #4                  // Field branch:Ljava/io/Writer;\n+        12: getfield      #14                 // Field branch:Ljava/io/Writer;\n         15: aload_1\n         16: iconst_0\n         17: iload_2\n-        18: invokevirtual #11                 // Method java/io/Writer.write:([CII)V\n+        18: invokevirtual #40                 // Method java/io/Writer.write:([CII)V\n         21: iload_2\n         22: ireturn\n       LineNumberTable:\n         line 116: 0\n         line 117: 6\n         line 118: 11\n         line 120: 21\n@@ -243,25 +243,25 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokespecial #12                 // Method org/apache/commons/io/input/ProxyReader.read:([CII)I\n+         4: invokespecial #43                 // Method org/apache/commons/io/input/ProxyReader.read:([CII)I\n          7: istore        4\n          9: iload         4\n         11: iconst_m1\n         12: if_icmpeq     26\n         15: aload_0\n-        16: getfield      #4                  // Field branch:Ljava/io/Writer;\n+        16: getfield      #14                 // Field branch:Ljava/io/Writer;\n         19: aload_1\n         20: iload_2\n         21: iload         4\n-        23: invokevirtual #11                 // Method java/io/Writer.write:([CII)V\n+        23: invokevirtual #40                 // Method java/io/Writer.write:([CII)V\n         26: iload         4\n         28: ireturn\n       LineNumberTable:\n         line 134: 0\n         line 135: 9\n         line 136: 15\n         line 138: 26\n@@ -274,53 +274,53 @@\n \n   public int read(java.nio.CharBuffer) throws java.io.IOException;\n     descriptor: (Ljava/nio/CharBuffer;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=7, args_size=2\n          0: aload_1\n-         1: invokevirtual #13                 // Method java/nio/CharBuffer.position:()I\n+         1: invokevirtual #46                 // Method java/nio/CharBuffer.position:()I\n          4: istore_2\n          5: aload_0\n          6: aload_1\n-         7: invokespecial #14                 // Method org/apache/commons/io/input/ProxyReader.read:(Ljava/nio/CharBuffer;)I\n+         7: invokespecial #51                 // Method org/apache/commons/io/input/ProxyReader.read:(Ljava/nio/CharBuffer;)I\n         10: istore_3\n         11: iload_3\n         12: iconst_m1\n         13: if_icmpeq     80\n         16: aload_1\n-        17: invokevirtual #13                 // Method java/nio/CharBuffer.position:()I\n+        17: invokevirtual #46                 // Method java/nio/CharBuffer.position:()I\n         20: istore        4\n         22: aload_1\n-        23: invokevirtual #15                 // Method java/nio/CharBuffer.limit:()I\n+        23: invokevirtual #54                 // Method java/nio/CharBuffer.limit:()I\n         26: istore        5\n         28: aload_1\n         29: iload_2\n-        30: invokevirtual #16                 // Method java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;\n+        30: invokevirtual #57                 // Method java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;\n         33: iload         4\n-        35: invokevirtual #17                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;\n+        35: invokevirtual #60                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;\n         38: pop\n         39: aload_0\n-        40: getfield      #4                  // Field branch:Ljava/io/Writer;\n+        40: getfield      #14                 // Field branch:Ljava/io/Writer;\n         43: aload_1\n-        44: invokevirtual #18                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+        44: invokevirtual #64                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n         47: pop\n         48: aload_1\n         49: iload         4\n-        51: invokevirtual #16                 // Method java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;\n+        51: invokevirtual #57                 // Method java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;\n         54: iload         5\n-        56: invokevirtual #17                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;\n+        56: invokevirtual #60                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;\n         59: pop\n         60: goto          80\n         63: astore        6\n         65: aload_1\n         66: iload         4\n-        68: invokevirtual #16                 // Method java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;\n+        68: invokevirtual #57                 // Method java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;\n         71: iload         5\n-        73: invokevirtual #17                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;\n+        73: invokevirtual #60                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;\n         76: pop\n         77: aload         6\n         79: athrow\n         80: iload_3\n         81: ireturn\n       Exception table:\n          from    to  target type\n"}]}
