{"diffoscope-json-version": 1, "source1": "first/EmptyFileFilter.class", "source2": "second/EmptyFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,151 +1,151 @@\n-  SHA-256 checksum 773c003a1c3f22a69ae9b6cb9de2271007d048ce70e30837ef36abcd3a4fd0dd\n+  SHA-256 checksum 29df5c42c6c0d02ea9437930be444e85dca8a582a05df1804332abb0d1b47174\n   Compiled from \"EmptyFileFilter.java\"\n public class org.apache.commons.io.filefilter.EmptyFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #18                         // org/apache/commons/io/filefilter/EmptyFileFilter\n-  super_class: #23                        // org/apache/commons/io/filefilter/AbstractFileFilter\n+  this_class: #31                         // org/apache/commons/io/filefilter/EmptyFileFilter\n+  super_class: #2                         // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 1, fields: 3, methods: 5, attributes: 3\n Constant pool:\n-    #1 = Methodref          #23.#52       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-    #2 = Methodref          #53.#54       // java/io/File.isDirectory:()Z\n-    #3 = Methodref          #53.#55       // java/io/File.listFiles:()[Ljava/io/File;\n-    #4 = Methodref          #56.#57       // org/apache/commons/io/IOUtils.length:([Ljava/lang/Object;)I\n-    #5 = Methodref          #53.#58       // java/io/File.length:()J\n-    #6 = InvokeDynamic      #0:#64        // #0:get:(Lorg/apache/commons/io/filefilter/EmptyFileFilter;Ljava/nio/file/Path;)Lorg/apache/commons/io/function/IOSupplier;\n-    #7 = Methodref          #18.#65       // org/apache/commons/io/filefilter/EmptyFileFilter.get:(Lorg/apache/commons/io/function/IOSupplier;)Ljava/nio/file/FileVisitResult;\n-    #8 = Class              #66           // java/nio/file/LinkOption\n-    #9 = Methodref          #67.#68       // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #10 = Methodref          #67.#69       // java/nio/file/Files.list:(Ljava/nio/file/Path;)Ljava/util/stream/Stream;\n-   #11 = InterfaceMethodref #45.#70       // java/util/stream/Stream.findFirst:()Ljava/util/Optional;\n-   #12 = Methodref          #71.#72       // java/util/Optional.isPresent:()Z\n-   #13 = Methodref          #18.#73       // org/apache/commons/io/filefilter/EmptyFileFilter.toFileVisitResult:(Z)Ljava/nio/file/FileVisitResult;\n-   #14 = InterfaceMethodref #45.#74       // java/util/stream/Stream.close:()V\n-   #15 = Class              #75           // java/lang/Throwable\n-   #16 = Methodref          #15.#76       // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-   #17 = Methodref          #67.#77       // java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n-   #18 = Class              #78           // org/apache/commons/io/filefilter/EmptyFileFilter\n-   #19 = Methodref          #18.#52       // org/apache/commons/io/filefilter/EmptyFileFilter.\"<init>\":()V\n-   #20 = Fieldref           #18.#79       // org/apache/commons/io/filefilter/EmptyFileFilter.EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #21 = InterfaceMethodref #80.#81       // org/apache/commons/io/filefilter/IOFileFilter.negate:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #22 = Fieldref           #18.#82       // org/apache/commons/io/filefilter/EmptyFileFilter.NOT_EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #23 = Class              #83           // org/apache/commons/io/filefilter/AbstractFileFilter\n-   #24 = Class              #84           // java/io/Serializable\n-   #25 = Utf8               EMPTY\n-   #26 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #27 = Utf8               NOT_EMPTY\n-   #28 = Utf8               serialVersionUID\n-   #29 = Utf8               J\n-   #30 = Utf8               ConstantValue\n-   #31 = Long               3631422087512832211l\n-   #33 = Utf8               <init>\n-   #34 = Utf8               ()V\n-   #35 = Utf8               Code\n-   #36 = Utf8               LineNumberTable\n-   #37 = Utf8               accept\n-   #38 = Utf8               (Ljava/io/File;)Z\n-   #39 = Utf8               StackMapTable\n-   #40 = Class              #85           // \"[Ljava/io/File;\"\n-   #41 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #42 = Utf8               lambda$accept$0\n-   #43 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-   #44 = Class              #86           // java/nio/file/Path\n-   #45 = Class              #87           // java/util/stream/Stream\n-   #46 = Class              #88           // java/nio/file/FileVisitResult\n-   #47 = Utf8               Exceptions\n-   #48 = Class              #89           // java/io/IOException\n-   #49 = Utf8               <clinit>\n-   #50 = Utf8               SourceFile\n-   #51 = Utf8               EmptyFileFilter.java\n-   #52 = NameAndType        #33:#34       // \"<init>\":()V\n-   #53 = Class              #90           // java/io/File\n-   #54 = NameAndType        #91:#92       // isDirectory:()Z\n-   #55 = NameAndType        #93:#94       // listFiles:()[Ljava/io/File;\n-   #56 = Class              #95           // org/apache/commons/io/IOUtils\n-   #57 = NameAndType        #96:#97       // length:([Ljava/lang/Object;)I\n-   #58 = NameAndType        #96:#98       // length:()J\n-   #59 = Utf8               BootstrapMethods\n-   #60 = MethodHandle       6:#99         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #61 = MethodType         #100          //  ()Ljava/lang/Object;\n-   #62 = MethodHandle       7:#101        // REF_invokeSpecial org/apache/commons/io/filefilter/EmptyFileFilter.lambda$accept$0:(Ljava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-   #63 = MethodType         #102          //  ()Ljava/nio/file/FileVisitResult;\n-   #64 = NameAndType        #103:#104     // get:(Lorg/apache/commons/io/filefilter/EmptyFileFilter;Ljava/nio/file/Path;)Lorg/apache/commons/io/function/IOSupplier;\n-   #65 = NameAndType        #103:#105     // get:(Lorg/apache/commons/io/function/IOSupplier;)Ljava/nio/file/FileVisitResult;\n-   #66 = Utf8               java/nio/file/LinkOption\n-   #67 = Class              #106          // java/nio/file/Files\n-   #68 = NameAndType        #91:#107      // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #69 = NameAndType        #108:#109     // list:(Ljava/nio/file/Path;)Ljava/util/stream/Stream;\n-   #70 = NameAndType        #110:#111     // findFirst:()Ljava/util/Optional;\n-   #71 = Class              #112          // java/util/Optional\n-   #72 = NameAndType        #113:#92      // isPresent:()Z\n-   #73 = NameAndType        #114:#115     // toFileVisitResult:(Z)Ljava/nio/file/FileVisitResult;\n-   #74 = NameAndType        #116:#34      // close:()V\n-   #75 = Utf8               java/lang/Throwable\n-   #76 = NameAndType        #117:#118     // addSuppressed:(Ljava/lang/Throwable;)V\n-   #77 = NameAndType        #119:#120     // size:(Ljava/nio/file/Path;)J\n-   #78 = Utf8               org/apache/commons/io/filefilter/EmptyFileFilter\n-   #79 = NameAndType        #25:#26       // EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #80 = Class              #121          // org/apache/commons/io/filefilter/IOFileFilter\n-   #81 = NameAndType        #122:#123     // negate:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #82 = NameAndType        #27:#26       // NOT_EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #83 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-   #84 = Utf8               java/io/Serializable\n-   #85 = Utf8               [Ljava/io/File;\n-   #86 = Utf8               java/nio/file/Path\n-   #87 = Utf8               java/util/stream/Stream\n-   #88 = Utf8               java/nio/file/FileVisitResult\n-   #89 = Utf8               java/io/IOException\n-   #90 = Utf8               java/io/File\n-   #91 = Utf8               isDirectory\n-   #92 = Utf8               ()Z\n-   #93 = Utf8               listFiles\n-   #94 = Utf8               ()[Ljava/io/File;\n-   #95 = Utf8               org/apache/commons/io/IOUtils\n-   #96 = Utf8               length\n-   #97 = Utf8               ([Ljava/lang/Object;)I\n-   #98 = Utf8               ()J\n-   #99 = Methodref          #124.#125     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #100 = Utf8               ()Ljava/lang/Object;\n-  #101 = Methodref          #18.#126      // org/apache/commons/io/filefilter/EmptyFileFilter.lambda$accept$0:(Ljava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-  #102 = Utf8               ()Ljava/nio/file/FileVisitResult;\n-  #103 = Utf8               get\n-  #104 = Utf8               (Lorg/apache/commons/io/filefilter/EmptyFileFilter;Ljava/nio/file/Path;)Lorg/apache/commons/io/function/IOSupplier;\n-  #105 = Utf8               (Lorg/apache/commons/io/function/IOSupplier;)Ljava/nio/file/FileVisitResult;\n-  #106 = Utf8               java/nio/file/Files\n-  #107 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #108 = Utf8               list\n-  #109 = Utf8               (Ljava/nio/file/Path;)Ljava/util/stream/Stream;\n-  #110 = Utf8               findFirst\n-  #111 = Utf8               ()Ljava/util/Optional;\n-  #112 = Utf8               java/util/Optional\n-  #113 = Utf8               isPresent\n-  #114 = Utf8               toFileVisitResult\n-  #115 = Utf8               (Z)Ljava/nio/file/FileVisitResult;\n-  #116 = Utf8               close\n-  #117 = Utf8               addSuppressed\n-  #118 = Utf8               (Ljava/lang/Throwable;)V\n-  #119 = Utf8               size\n-  #120 = Utf8               (Ljava/nio/file/Path;)J\n-  #121 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n-  #122 = Utf8               negate\n-  #123 = Utf8               ()Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #124 = Class              #127          // java/lang/invoke/LambdaMetafactory\n-  #125 = NameAndType        #128:#132     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #126 = NameAndType        #42:#43       // lambda$accept$0:(Ljava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-  #127 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #128 = Utf8               metafactory\n-  #129 = Class              #134          // java/lang/invoke/MethodHandles$Lookup\n-  #130 = Utf8               Lookup\n-  #131 = Utf8               InnerClasses\n-  #132 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #133 = Class              #135          // java/lang/invoke/MethodHandles\n-  #134 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #135 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Methodref          #2.#3         // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+    #2 = Class              #4            // org/apache/commons/io/filefilter/AbstractFileFilter\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Methodref          #8.#9         // java/io/File.isDirectory:()Z\n+    #8 = Class              #10           // java/io/File\n+    #9 = NameAndType        #11:#12       // isDirectory:()Z\n+   #10 = Utf8               java/io/File\n+   #11 = Utf8               isDirectory\n+   #12 = Utf8               ()Z\n+   #13 = Methodref          #8.#14        // java/io/File.listFiles:()[Ljava/io/File;\n+   #14 = NameAndType        #15:#16       // listFiles:()[Ljava/io/File;\n+   #15 = Utf8               listFiles\n+   #16 = Utf8               ()[Ljava/io/File;\n+   #17 = Methodref          #18.#19       // org/apache/commons/io/IOUtils.length:([Ljava/lang/Object;)I\n+   #18 = Class              #20           // org/apache/commons/io/IOUtils\n+   #19 = NameAndType        #21:#22       // length:([Ljava/lang/Object;)I\n+   #20 = Utf8               org/apache/commons/io/IOUtils\n+   #21 = Utf8               length\n+   #22 = Utf8               ([Ljava/lang/Object;)I\n+   #23 = Methodref          #8.#24        // java/io/File.length:()J\n+   #24 = NameAndType        #21:#25       // length:()J\n+   #25 = Utf8               ()J\n+   #26 = InvokeDynamic      #0:#27        // #0:get:(Lorg/apache/commons/io/filefilter/EmptyFileFilter;Ljava/nio/file/Path;)Lorg/apache/commons/io/function/IOSupplier;\n+   #27 = NameAndType        #28:#29       // get:(Lorg/apache/commons/io/filefilter/EmptyFileFilter;Ljava/nio/file/Path;)Lorg/apache/commons/io/function/IOSupplier;\n+   #28 = Utf8               get\n+   #29 = Utf8               (Lorg/apache/commons/io/filefilter/EmptyFileFilter;Ljava/nio/file/Path;)Lorg/apache/commons/io/function/IOSupplier;\n+   #30 = Methodref          #31.#32       // org/apache/commons/io/filefilter/EmptyFileFilter.get:(Lorg/apache/commons/io/function/IOSupplier;)Ljava/nio/file/FileVisitResult;\n+   #31 = Class              #33           // org/apache/commons/io/filefilter/EmptyFileFilter\n+   #32 = NameAndType        #28:#34       // get:(Lorg/apache/commons/io/function/IOSupplier;)Ljava/nio/file/FileVisitResult;\n+   #33 = Utf8               org/apache/commons/io/filefilter/EmptyFileFilter\n+   #34 = Utf8               (Lorg/apache/commons/io/function/IOSupplier;)Ljava/nio/file/FileVisitResult;\n+   #35 = Class              #36           // java/nio/file/LinkOption\n+   #36 = Utf8               java/nio/file/LinkOption\n+   #37 = Methodref          #38.#39       // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #38 = Class              #40           // java/nio/file/Files\n+   #39 = NameAndType        #11:#41       // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #40 = Utf8               java/nio/file/Files\n+   #41 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #42 = Methodref          #38.#43       // java/nio/file/Files.list:(Ljava/nio/file/Path;)Ljava/util/stream/Stream;\n+   #43 = NameAndType        #44:#45       // list:(Ljava/nio/file/Path;)Ljava/util/stream/Stream;\n+   #44 = Utf8               list\n+   #45 = Utf8               (Ljava/nio/file/Path;)Ljava/util/stream/Stream;\n+   #46 = InterfaceMethodref #47.#48       // java/util/stream/Stream.findFirst:()Ljava/util/Optional;\n+   #47 = Class              #49           // java/util/stream/Stream\n+   #48 = NameAndType        #50:#51       // findFirst:()Ljava/util/Optional;\n+   #49 = Utf8               java/util/stream/Stream\n+   #50 = Utf8               findFirst\n+   #51 = Utf8               ()Ljava/util/Optional;\n+   #52 = Methodref          #53.#54       // java/util/Optional.isPresent:()Z\n+   #53 = Class              #55           // java/util/Optional\n+   #54 = NameAndType        #56:#12       // isPresent:()Z\n+   #55 = Utf8               java/util/Optional\n+   #56 = Utf8               isPresent\n+   #57 = Methodref          #31.#58       // org/apache/commons/io/filefilter/EmptyFileFilter.toFileVisitResult:(Z)Ljava/nio/file/FileVisitResult;\n+   #58 = NameAndType        #59:#60       // toFileVisitResult:(Z)Ljava/nio/file/FileVisitResult;\n+   #59 = Utf8               toFileVisitResult\n+   #60 = Utf8               (Z)Ljava/nio/file/FileVisitResult;\n+   #61 = InterfaceMethodref #47.#62       // java/util/stream/Stream.close:()V\n+   #62 = NameAndType        #63:#6        // close:()V\n+   #63 = Utf8               close\n+   #64 = Class              #65           // java/lang/Throwable\n+   #65 = Utf8               java/lang/Throwable\n+   #66 = Methodref          #64.#67       // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+   #67 = NameAndType        #68:#69       // addSuppressed:(Ljava/lang/Throwable;)V\n+   #68 = Utf8               addSuppressed\n+   #69 = Utf8               (Ljava/lang/Throwable;)V\n+   #70 = Methodref          #38.#71       // java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+   #71 = NameAndType        #72:#73       // size:(Ljava/nio/file/Path;)J\n+   #72 = Utf8               size\n+   #73 = Utf8               (Ljava/nio/file/Path;)J\n+   #74 = Methodref          #31.#3        // org/apache/commons/io/filefilter/EmptyFileFilter.\"<init>\":()V\n+   #75 = Fieldref           #31.#76       // org/apache/commons/io/filefilter/EmptyFileFilter.EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #76 = NameAndType        #77:#78       // EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #77 = Utf8               EMPTY\n+   #78 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #79 = InterfaceMethodref #80.#81       // org/apache/commons/io/filefilter/IOFileFilter.negate:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #80 = Class              #82           // org/apache/commons/io/filefilter/IOFileFilter\n+   #81 = NameAndType        #83:#84       // negate:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #82 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n+   #83 = Utf8               negate\n+   #84 = Utf8               ()Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #85 = Fieldref           #31.#86       // org/apache/commons/io/filefilter/EmptyFileFilter.NOT_EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #86 = NameAndType        #87:#78       // NOT_EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #87 = Utf8               NOT_EMPTY\n+   #88 = Class              #89           // java/io/Serializable\n+   #89 = Utf8               java/io/Serializable\n+   #90 = Utf8               serialVersionUID\n+   #91 = Utf8               J\n+   #92 = Utf8               ConstantValue\n+   #93 = Long               3631422087512832211l\n+   #95 = Utf8               Code\n+   #96 = Utf8               LineNumberTable\n+   #97 = Utf8               accept\n+   #98 = Utf8               (Ljava/io/File;)Z\n+   #99 = Utf8               StackMapTable\n+  #100 = Class              #101          // \"[Ljava/io/File;\"\n+  #101 = Utf8               [Ljava/io/File;\n+  #102 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #103 = Utf8               lambda$accept$0\n+  #104 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #105 = Class              #106          // java/nio/file/Path\n+  #106 = Utf8               java/nio/file/Path\n+  #107 = Class              #108          // java/nio/file/FileVisitResult\n+  #108 = Utf8               java/nio/file/FileVisitResult\n+  #109 = Utf8               Exceptions\n+  #110 = Class              #111          // java/io/IOException\n+  #111 = Utf8               java/io/IOException\n+  #112 = Utf8               <clinit>\n+  #113 = Utf8               SourceFile\n+  #114 = Utf8               EmptyFileFilter.java\n+  #115 = Utf8               BootstrapMethods\n+  #116 = MethodHandle       6:#117        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #117 = Methodref          #118.#119     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #118 = Class              #120          // java/lang/invoke/LambdaMetafactory\n+  #119 = NameAndType        #121:#122     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #120 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #121 = Utf8               metafactory\n+  #122 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #123 = MethodType         #124          //  ()Ljava/lang/Object;\n+  #124 = Utf8               ()Ljava/lang/Object;\n+  #125 = MethodHandle       7:#126        // REF_invokeSpecial org/apache/commons/io/filefilter/EmptyFileFilter.lambda$accept$0:(Ljava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #126 = Methodref          #31.#127      // org/apache/commons/io/filefilter/EmptyFileFilter.lambda$accept$0:(Ljava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #127 = NameAndType        #103:#104     // lambda$accept$0:(Ljava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #128 = MethodType         #129          //  ()Ljava/nio/file/FileVisitResult;\n+  #129 = Utf8               ()Ljava/nio/file/FileVisitResult;\n+  #130 = Utf8               InnerClasses\n+  #131 = Class              #132          // java/lang/invoke/MethodHandles$Lookup\n+  #132 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #133 = Class              #134          // java/lang/invoke/MethodHandles\n+  #134 = Utf8               java/lang/invoke/MethodHandles\n+  #135 = Utf8               Lookup\n {\n   public static final org.apache.commons.io.filefilter.IOFileFilter EMPTY;\n     descriptor: Lorg/apache/commons/io/filefilter/IOFileFilter;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public static final org.apache.commons.io.filefilter.IOFileFilter NOT_EMPTY;\n     descriptor: Lorg/apache/commons/io/filefilter/IOFileFilter;\n@@ -170,28 +170,28 @@\n \n   public boolean accept(java.io.File);\n     descriptor: (Ljava/io/File;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_1\n-         1: invokevirtual #2                  // Method java/io/File.isDirectory:()Z\n+         1: invokevirtual #7                  // Method java/io/File.isDirectory:()Z\n          4: ifeq          25\n          7: aload_1\n-         8: invokevirtual #3                  // Method java/io/File.listFiles:()[Ljava/io/File;\n+         8: invokevirtual #13                 // Method java/io/File.listFiles:()[Ljava/io/File;\n         11: astore_2\n         12: aload_2\n-        13: invokestatic  #4                  // Method org/apache/commons/io/IOUtils.length:([Ljava/lang/Object;)I\n+        13: invokestatic  #17                 // Method org/apache/commons/io/IOUtils.length:([Ljava/lang/Object;)I\n         16: ifne          23\n         19: iconst_1\n         20: goto          24\n         23: iconst_0\n         24: ireturn\n         25: aload_1\n-        26: invokevirtual #5                  // Method java/io/File.length:()J\n+        26: invokevirtual #23                 // Method java/io/File.length:()J\n         29: lconst_0\n         30: lcmp\n         31: ifne          38\n         34: iconst_1\n         35: goto          39\n         38: iconst_0\n         39: ireturn\n@@ -216,71 +216,71 @@\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_0\n          2: aload_1\n-         3: invokedynamic #6,  0              // InvokeDynamic #0:get:(Lorg/apache/commons/io/filefilter/EmptyFileFilter;Ljava/nio/file/Path;)Lorg/apache/commons/io/function/IOSupplier;\n-         8: invokevirtual #7                  // Method get:(Lorg/apache/commons/io/function/IOSupplier;)Ljava/nio/file/FileVisitResult;\n+         3: invokedynamic #26,  0             // InvokeDynamic #0:get:(Lorg/apache/commons/io/filefilter/EmptyFileFilter;Ljava/nio/file/Path;)Lorg/apache/commons/io/function/IOSupplier;\n+         8: invokevirtual #30                 // Method get:(Lorg/apache/commons/io/function/IOSupplier;)Ljava/nio/file/FileVisitResult;\n         11: areturn\n       LineNumberTable:\n         line 123: 0\n \n   private java.nio.file.FileVisitResult lambda$accept$0(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=5, locals=5, args_size=2\n          0: aload_1\n          1: iconst_0\n-         2: anewarray     #8                  // class java/nio/file/LinkOption\n-         5: invokestatic  #9                  // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+         2: anewarray     #35                 // class java/nio/file/LinkOption\n+         5: invokestatic  #37                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n          8: ifeq          74\n         11: aload_1\n-        12: invokestatic  #10                 // Method java/nio/file/Files.list:(Ljava/nio/file/Path;)Ljava/util/stream/Stream;\n+        12: invokestatic  #42                 // Method java/nio/file/Files.list:(Ljava/nio/file/Path;)Ljava/util/stream/Stream;\n         15: astore_2\n         16: aload_0\n         17: aload_2\n-        18: invokeinterface #11,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;\n-        23: invokevirtual #12                 // Method java/util/Optional.isPresent:()Z\n+        18: invokeinterface #46,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;\n+        23: invokevirtual #52                 // Method java/util/Optional.isPresent:()Z\n         26: ifne          33\n         29: iconst_1\n         30: goto          34\n         33: iconst_0\n-        34: invokevirtual #13                 // Method toFileVisitResult:(Z)Ljava/nio/file/FileVisitResult;\n+        34: invokevirtual #57                 // Method toFileVisitResult:(Z)Ljava/nio/file/FileVisitResult;\n         37: astore_3\n         38: aload_2\n         39: ifnull        48\n         42: aload_2\n-        43: invokeinterface #14,  1           // InterfaceMethod java/util/stream/Stream.close:()V\n+        43: invokeinterface #61,  1           // InterfaceMethod java/util/stream/Stream.close:()V\n         48: aload_3\n         49: areturn\n         50: astore_3\n         51: aload_2\n         52: ifnull        72\n         55: aload_2\n-        56: invokeinterface #14,  1           // InterfaceMethod java/util/stream/Stream.close:()V\n+        56: invokeinterface #61,  1           // InterfaceMethod java/util/stream/Stream.close:()V\n         61: goto          72\n         64: astore        4\n         66: aload_3\n         67: aload         4\n-        69: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        69: invokevirtual #66                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n         72: aload_3\n         73: athrow\n         74: aload_0\n         75: aload_1\n-        76: invokestatic  #17                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+        76: invokestatic  #70                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n         79: lconst_0\n         80: lcmp\n         81: ifne          88\n         84: iconst_1\n         85: goto          89\n         88: iconst_0\n-        89: invokevirtual #13                 // Method toFileVisitResult:(Z)Ljava/nio/file/FileVisitResult;\n+        89: invokevirtual #57                 // Method toFileVisitResult:(Z)Ljava/nio/file/FileVisitResult;\n         92: areturn\n       Exception table:\n          from    to  target type\n             16    38    50   Class java/lang/Throwable\n             55    61    64   Class java/lang/Throwable\n       LineNumberTable:\n         line 124: 0\n@@ -323,28 +323,28 @@\n       throws java.io.IOException\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: new           #18                 // class org/apache/commons/io/filefilter/EmptyFileFilter\n+         0: new           #31                 // class org/apache/commons/io/filefilter/EmptyFileFilter\n          3: dup\n-         4: invokespecial #19                 // Method \"<init>\":()V\n-         7: putstatic     #20                 // Field EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-        10: getstatic     #20                 // Field EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-        13: invokeinterface #21,  1           // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.negate:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n-        18: putstatic     #22                 // Field NOT_EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+         4: invokespecial #74                 // Method \"<init>\":()V\n+         7: putstatic     #75                 // Field EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        10: getstatic     #75                 // Field EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        13: invokeinterface #79,  1           // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.negate:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        18: putstatic     #85                 // Field NOT_EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n         21: return\n       LineNumberTable:\n         line 86: 0\n         line 89: 10\n }\n SourceFile: \"EmptyFileFilter.java\"\n-InnerClasses:\n-  public static final #130= #129 of #133; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #60 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #116 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #61 ()Ljava/lang/Object;\n-      #62 REF_invokeSpecial org/apache/commons/io/filefilter/EmptyFileFilter.lambda$accept$0:(Ljava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-      #63 ()Ljava/nio/file/FileVisitResult;\n+      #123 ()Ljava/lang/Object;\n+      #125 REF_invokeSpecial org/apache/commons/io/filefilter/EmptyFileFilter.lambda$accept$0:(Ljava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+      #128 ()Ljava/nio/file/FileVisitResult;\n+InnerClasses:\n+  public static final #135= #131 of #133; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
