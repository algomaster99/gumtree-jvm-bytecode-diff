{"diffoscope-json-version": 1, "source1": "first/ScatterZipOutputStream$ZipEntryWriter.class", "source2": "second/ScatterZipOutputStream$ZipEntryWriter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,39 +1,39 @@\n-  SHA-256 checksum 540a77a159d49be2ede220e01b322f87eb6cae242e55ed53ab1aaacd83a1e107\n+  SHA-256 checksum a4e2798d61d87556c0328bc122d773f8a0ba71c9a9c1a5962cff91ba0e946b84\n   Compiled from \"ScatterZipOutputStream.java\"\n public class org.apache.commons.compress.archivers.zip.ScatterZipOutputStream$ZipEntryWriter implements java.io.Closeable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #20                         // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter\n   super_class: #21                        // java/lang/Object\n   interfaces: 1, fields: 2, methods: 3, attributes: 2\n Constant pool:\n-    #1 = Methodref          #21.#61       // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #62.#63       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.access$000:(Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n-    #3 = InterfaceMethodref #64.#65       // org/apache/commons/compress/parallel/ScatterGatherBackingStore.closeForWriting:()V\n-    #4 = Methodref          #62.#66       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.access$100:(Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Ljava/util/Queue;\n-    #5 = InterfaceMethodref #67.#68       // java/util/Queue.iterator:()Ljava/util/Iterator;\n-    #6 = Fieldref           #20.#69       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter.itemsIterator:Ljava/util/Iterator;\n-    #7 = InterfaceMethodref #64.#70       // org/apache/commons/compress/parallel/ScatterGatherBackingStore.getInputStream:()Ljava/io/InputStream;\n-    #8 = Fieldref           #20.#71       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter.itemsIteratorData:Ljava/io/InputStream;\n-    #9 = Methodref          #72.#73       // java/io/InputStream.close:()V\n-   #10 = InterfaceMethodref #74.#75       // java/util/Iterator.next:()Ljava/lang/Object;\n-   #11 = Class              #76           // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry\n-   #12 = Class              #77           // org/apache/commons/compress/utils/BoundedInputStream\n-   #13 = Fieldref           #11.#78       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.compressedSize:J\n-   #14 = Methodref          #12.#79       // org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n-   #15 = Methodref          #11.#80       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.transferToArchiveEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-   #16 = Methodref          #81.#82       // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.addRawArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/io/InputStream;)V\n-   #17 = Methodref          #12.#73       // org/apache/commons/compress/utils/BoundedInputStream.close:()V\n-   #18 = Class              #83           // java/lang/Throwable\n-   #19 = Methodref          #18.#84       // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-   #20 = Class              #85           // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter\n-   #21 = Class              #86           // java/lang/Object\n-   #22 = Class              #87           // java/io/Closeable\n+    #1 = Methodref          #21.#57       // java/lang/Object.\"<init>\":()V\n+    #2 = Methodref          #58.#59       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.access$000:(Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n+    #3 = InterfaceMethodref #60.#61       // org/apache/commons/compress/parallel/ScatterGatherBackingStore.closeForWriting:()V\n+    #4 = Methodref          #58.#62       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.access$100:(Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Ljava/util/Queue;\n+    #5 = InterfaceMethodref #63.#64       // java/util/Queue.iterator:()Ljava/util/Iterator;\n+    #6 = Fieldref           #20.#65       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter.itemsIterator:Ljava/util/Iterator;\n+    #7 = InterfaceMethodref #60.#66       // org/apache/commons/compress/parallel/ScatterGatherBackingStore.getInputStream:()Ljava/io/InputStream;\n+    #8 = Fieldref           #20.#67       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter.itemsIteratorData:Ljava/io/InputStream;\n+    #9 = Methodref          #68.#69       // java/io/InputStream.close:()V\n+   #10 = InterfaceMethodref #70.#71       // java/util/Iterator.next:()Ljava/lang/Object;\n+   #11 = Class              #72           // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry\n+   #12 = Class              #73           // org/apache/commons/compress/utils/BoundedInputStream\n+   #13 = Fieldref           #11.#74       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.compressedSize:J\n+   #14 = Methodref          #12.#75       // org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n+   #15 = Methodref          #11.#76       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.transferToArchiveEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+   #16 = Methodref          #54.#77       // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.addRawArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/io/InputStream;)V\n+   #17 = Methodref          #12.#69       // org/apache/commons/compress/utils/BoundedInputStream.close:()V\n+   #18 = Class              #78           // java/lang/Throwable\n+   #19 = Methodref          #18.#79       // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+   #20 = Class              #80           // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter\n+   #21 = Class              #81           // java/lang/Object\n+   #22 = Class              #82           // java/io/Closeable\n    #23 = Utf8               itemsIterator\n    #24 = Utf8               Ljava/util/Iterator;\n    #25 = Utf8               Signature\n    #26 = Utf8               CompressedEntry\n    #27 = Utf8               InnerClasses\n    #28 = Utf8               Ljava/util/Iterator<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry;>;\n    #29 = Utf8               itemsIteratorData\n@@ -45,87 +45,82 @@\n    #35 = Utf8               LocalVariableTable\n    #36 = Utf8               this\n    #37 = Utf8               ZipEntryWriter\n    #38 = Utf8               Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;\n    #39 = Utf8               scatter\n    #40 = Utf8               Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n    #41 = Utf8               Exceptions\n-   #42 = Class              #88           // java/io/IOException\n+   #42 = Class              #83           // java/io/IOException\n    #43 = Utf8               close\n    #44 = Utf8               ()V\n    #45 = Utf8               StackMapTable\n    #46 = Utf8               writeNextZipEntry\n    #47 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V\n    #48 = Utf8               rawStream\n    #49 = Utf8               Lorg/apache/commons/compress/utils/BoundedInputStream;\n    #50 = Utf8               target\n    #51 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;\n    #52 = Utf8               compressedEntry\n    #53 = Utf8               Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry;\n-   #54 = Class              #85           // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter\n-   #55 = Class              #89           // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n-   #56 = Class              #76           // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry\n-   #57 = Class              #77           // org/apache/commons/compress/utils/BoundedInputStream\n-   #58 = Class              #83           // java/lang/Throwable\n-   #59 = Utf8               SourceFile\n-   #60 = Utf8               ScatterZipOutputStream.java\n-   #61 = NameAndType        #31:#44       // \"<init>\":()V\n-   #62 = Class              #90           // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n-   #63 = NameAndType        #91:#92       // access$000:(Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n-   #64 = Class              #93           // org/apache/commons/compress/parallel/ScatterGatherBackingStore\n-   #65 = NameAndType        #94:#44       // closeForWriting:()V\n-   #66 = NameAndType        #95:#96       // access$100:(Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Ljava/util/Queue;\n-   #67 = Class              #97           // java/util/Queue\n-   #68 = NameAndType        #98:#99       // iterator:()Ljava/util/Iterator;\n-   #69 = NameAndType        #23:#24       // itemsIterator:Ljava/util/Iterator;\n-   #70 = NameAndType        #100:#101     // getInputStream:()Ljava/io/InputStream;\n-   #71 = NameAndType        #29:#30       // itemsIteratorData:Ljava/io/InputStream;\n-   #72 = Class              #102          // java/io/InputStream\n-   #73 = NameAndType        #43:#44       // close:()V\n-   #74 = Class              #103          // java/util/Iterator\n-   #75 = NameAndType        #104:#105     // next:()Ljava/lang/Object;\n-   #76 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry\n-   #77 = Utf8               org/apache/commons/compress/utils/BoundedInputStream\n-   #78 = NameAndType        #106:#107     // compressedSize:J\n-   #79 = NameAndType        #31:#108      // \"<init>\":(Ljava/io/InputStream;J)V\n-   #80 = NameAndType        #109:#110     // transferToArchiveEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-   #81 = Class              #89           // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n-   #82 = NameAndType        #111:#112     // addRawArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/io/InputStream;)V\n-   #83 = Utf8               java/lang/Throwable\n-   #84 = NameAndType        #113:#114     // addSuppressed:(Ljava/lang/Throwable;)V\n-   #85 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter\n-   #86 = Utf8               java/lang/Object\n-   #87 = Utf8               java/io/Closeable\n-   #88 = Utf8               java/io/IOException\n-   #89 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n-   #90 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n-   #91 = Utf8               access$000\n-   #92 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n-   #93 = Utf8               org/apache/commons/compress/parallel/ScatterGatherBackingStore\n-   #94 = Utf8               closeForWriting\n-   #95 = Utf8               access$100\n-   #96 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Ljava/util/Queue;\n-   #97 = Utf8               java/util/Queue\n-   #98 = Utf8               iterator\n-   #99 = Utf8               ()Ljava/util/Iterator;\n-  #100 = Utf8               getInputStream\n-  #101 = Utf8               ()Ljava/io/InputStream;\n-  #102 = Utf8               java/io/InputStream\n-  #103 = Utf8               java/util/Iterator\n-  #104 = Utf8               next\n-  #105 = Utf8               ()Ljava/lang/Object;\n-  #106 = Utf8               compressedSize\n-  #107 = Utf8               J\n-  #108 = Utf8               (Ljava/io/InputStream;J)V\n-  #109 = Utf8               transferToArchiveEntry\n-  #110 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #111 = Utf8               addRawArchiveEntry\n-  #112 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/io/InputStream;)V\n-  #113 = Utf8               addSuppressed\n-  #114 = Utf8               (Ljava/lang/Throwable;)V\n+   #54 = Class              #84           // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n+   #55 = Utf8               SourceFile\n+   #56 = Utf8               ScatterZipOutputStream.java\n+   #57 = NameAndType        #31:#44       // \"<init>\":()V\n+   #58 = Class              #85           // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n+   #59 = NameAndType        #86:#87       // access$000:(Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n+   #60 = Class              #88           // org/apache/commons/compress/parallel/ScatterGatherBackingStore\n+   #61 = NameAndType        #89:#44       // closeForWriting:()V\n+   #62 = NameAndType        #90:#91       // access$100:(Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Ljava/util/Queue;\n+   #63 = Class              #92           // java/util/Queue\n+   #64 = NameAndType        #93:#94       // iterator:()Ljava/util/Iterator;\n+   #65 = NameAndType        #23:#24       // itemsIterator:Ljava/util/Iterator;\n+   #66 = NameAndType        #95:#96       // getInputStream:()Ljava/io/InputStream;\n+   #67 = NameAndType        #29:#30       // itemsIteratorData:Ljava/io/InputStream;\n+   #68 = Class              #97           // java/io/InputStream\n+   #69 = NameAndType        #43:#44       // close:()V\n+   #70 = Class              #98           // java/util/Iterator\n+   #71 = NameAndType        #99:#100      // next:()Ljava/lang/Object;\n+   #72 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry\n+   #73 = Utf8               org/apache/commons/compress/utils/BoundedInputStream\n+   #74 = NameAndType        #101:#102     // compressedSize:J\n+   #75 = NameAndType        #31:#103      // \"<init>\":(Ljava/io/InputStream;J)V\n+   #76 = NameAndType        #104:#105     // transferToArchiveEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+   #77 = NameAndType        #106:#107     // addRawArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/io/InputStream;)V\n+   #78 = Utf8               java/lang/Throwable\n+   #79 = NameAndType        #108:#109     // addSuppressed:(Ljava/lang/Throwable;)V\n+   #80 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter\n+   #81 = Utf8               java/lang/Object\n+   #82 = Utf8               java/io/Closeable\n+   #83 = Utf8               java/io/IOException\n+   #84 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n+   #85 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n+   #86 = Utf8               access$000\n+   #87 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n+   #88 = Utf8               org/apache/commons/compress/parallel/ScatterGatherBackingStore\n+   #89 = Utf8               closeForWriting\n+   #90 = Utf8               access$100\n+   #91 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Ljava/util/Queue;\n+   #92 = Utf8               java/util/Queue\n+   #93 = Utf8               iterator\n+   #94 = Utf8               ()Ljava/util/Iterator;\n+   #95 = Utf8               getInputStream\n+   #96 = Utf8               ()Ljava/io/InputStream;\n+   #97 = Utf8               java/io/InputStream\n+   #98 = Utf8               java/util/Iterator\n+   #99 = Utf8               next\n+  #100 = Utf8               ()Ljava/lang/Object;\n+  #101 = Utf8               compressedSize\n+  #102 = Utf8               J\n+  #103 = Utf8               (Ljava/io/InputStream;J)V\n+  #104 = Utf8               transferToArchiveEntry\n+  #105 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #106 = Utf8               addRawArchiveEntry\n+  #107 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/io/InputStream;)V\n+  #108 = Utf8               addSuppressed\n+  #109 = Utf8               (Ljava/lang/Throwable;)V\n {\n   private final java.util.Iterator<org.apache.commons.compress.archivers.zip.ScatterZipOutputStream$CompressedEntry> itemsIterator;\n     descriptor: Ljava/util/Iterator;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n     Signature: #28                          // Ljava/util/Iterator<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry;>;\n \n   private final java.io.InputStream itemsIteratorData;\n@@ -190,114 +185,76 @@\n     Exceptions:\n       throws java.io.IOException\n \n   public void writeNextZipEntry(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=5, locals=8, args_size=2\n+      stack=5, locals=6, args_size=2\n          0: aload_0\n          1: getfield      #6                  // Field itemsIterator:Ljava/util/Iterator;\n          4: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n          9: checkcast     #11                 // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry\n         12: astore_2\n         13: new           #12                 // class org/apache/commons/compress/utils/BoundedInputStream\n         16: dup\n         17: aload_0\n         18: getfield      #8                  // Field itemsIteratorData:Ljava/io/InputStream;\n         21: aload_2\n         22: getfield      #13                 // Field org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.compressedSize:J\n         25: invokespecial #14                 // Method org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n         28: astore_3\n-        29: aconst_null\n-        30: astore        4\n-        32: aload_1\n-        33: aload_2\n-        34: invokevirtual #15                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.transferToArchiveEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-        37: aload_3\n-        38: invokevirtual #16                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.addRawArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/io/InputStream;)V\n-        41: aload_3\n-        42: ifnull        122\n-        45: aload         4\n-        47: ifnull        69\n-        50: aload_3\n-        51: invokevirtual #17                 // Method org/apache/commons/compress/utils/BoundedInputStream.close:()V\n-        54: goto          122\n-        57: astore        5\n-        59: aload         4\n-        61: aload         5\n-        63: invokevirtual #19                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-        66: goto          122\n-        69: aload_3\n-        70: invokevirtual #17                 // Method org/apache/commons/compress/utils/BoundedInputStream.close:()V\n-        73: goto          122\n-        76: astore        5\n-        78: aload         5\n-        80: astore        4\n-        82: aload         5\n-        84: athrow\n-        85: astore        6\n-        87: aload_3\n-        88: ifnull        119\n-        91: aload         4\n-        93: ifnull        115\n-        96: aload_3\n-        97: invokevirtual #17                 // Method org/apache/commons/compress/utils/BoundedInputStream.close:()V\n-       100: goto          119\n-       103: astore        7\n-       105: aload         4\n-       107: aload         7\n-       109: invokevirtual #19                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       112: goto          119\n-       115: aload_3\n-       116: invokevirtual #17                 // Method org/apache/commons/compress/utils/BoundedInputStream.close:()V\n-       119: aload         6\n-       121: athrow\n-       122: return\n+        29: aload_1\n+        30: aload_2\n+        31: invokevirtual #15                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.transferToArchiveEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+        34: aload_3\n+        35: invokevirtual #16                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.addRawArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/io/InputStream;)V\n+        38: aload_3\n+        39: invokevirtual #17                 // Method org/apache/commons/compress/utils/BoundedInputStream.close:()V\n+        42: goto          66\n+        45: astore        4\n+        47: aload_3\n+        48: invokevirtual #17                 // Method org/apache/commons/compress/utils/BoundedInputStream.close:()V\n+        51: goto          63\n+        54: astore        5\n+        56: aload         4\n+        58: aload         5\n+        60: invokevirtual #19                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        63: aload         4\n+        65: athrow\n+        66: return\n       Exception table:\n          from    to  target type\n-            50    54    57   Class java/lang/Throwable\n-            32    41    76   Class java/lang/Throwable\n-            32    41    85   any\n-            96   100   103   Class java/lang/Throwable\n-            76    87    85   any\n+            29    38    45   Class java/lang/Throwable\n+            47    51    54   Class java/lang/Throwable\n       LineNumberTable:\n         line 144: 0\n         line 145: 13\n-        line 146: 32\n-        line 147: 41\n-        line 145: 76\n-        line 147: 85\n-        line 148: 122\n+        line 146: 29\n+        line 147: 38\n+        line 145: 45\n+        line 148: 66\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           29      93     3 rawStream   Lorg/apache/commons/compress/utils/BoundedInputStream;\n-            0     123     0  this   Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;\n-            0     123     1 target   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;\n-           13     110     2 compressedEntry   Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry;\n-      StackMapTable: number_of_entries = 8\n+           29      37     3 rawStream   Lorg/apache/commons/compress/utils/BoundedInputStream;\n+            0      67     0  this   Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;\n+            0      67     1 target   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;\n+           13      54     2 compressedEntry   Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry;\n+      StackMapTable: number_of_entries = 4\n         frame_type = 255 /* full_frame */\n-          offset_delta = 57\n-          locals = [ class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter, class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream, class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry, class org/apache/commons/compress/utils/BoundedInputStream, class java/lang/Throwable ]\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 11 /* same */\n-        frame_type = 70 /* same_locals_1_stack_item */\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 72 /* same_locals_1_stack_item */\n+          offset_delta = 45\n+          locals = [ class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter, class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream, class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry, class org/apache/commons/compress/utils/BoundedInputStream ]\n           stack = [ class java/lang/Throwable ]\n         frame_type = 255 /* full_frame */\n-          offset_delta = 17\n-          locals = [ class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter, class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream, class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry, class org/apache/commons/compress/utils/BoundedInputStream, class java/lang/Throwable, top, class java/lang/Throwable ]\n+          offset_delta = 8\n+          locals = [ class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter, class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream, class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry, class org/apache/commons/compress/utils/BoundedInputStream, class java/lang/Throwable ]\n           stack = [ class java/lang/Throwable ]\n-        frame_type = 11 /* same */\n-        frame_type = 3 /* same */\n-        frame_type = 255 /* full_frame */\n+        frame_type = 8 /* same */\n+        frame_type = 249 /* chop */\n           offset_delta = 2\n-          locals = [ class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter, class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream, class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry ]\n-          stack = []\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"ScatterZipOutputStream.java\"\n InnerClasses:\n-  private static #26= #11 of #62;         // CompressedEntry=class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry of class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n-  public static #37= #20 of #62;          // ZipEntryWriter=class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter of class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n+  private static #26= #11 of #58;         // CompressedEntry=class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry of class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n+  public static #37= #20 of #58;          // ZipEntryWriter=class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter of class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n"}]}
