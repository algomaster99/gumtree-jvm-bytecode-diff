{"diffoscope-json-version": 1, "source1": "first/ZipArchiveInputStream$CurrentEntry.class", "source2": "second/ZipArchiveInputStream$CurrentEntry.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,8 +1,8 @@\n-  SHA-256 checksum 88d6ea0981574e78b7f8251bd8369c134cc1c530ba6f60af7e44fa1c5786c846\n+  SHA-256 checksum 366a1d67d329a799ee0c0e0043654a146d1ed59c93a8d9400c7a7510a7002e6b\n   Compiled from \"ZipArchiveInputStream.java\"\n final class org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry\n   minor version: 0\n   major version: 52\n   flags: (0x0030) ACC_FINAL, ACC_SUPER\n   this_class: #2                          // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry\n   super_class: #38                        // java/lang/Object\n@@ -60,54 +60,48 @@\n   #50 = Utf8               java/util/Objects\n   #51 = Utf8               requireNonNull\n   #52 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n   #53 = Class              #54            // java/io/InputStream\n   #54 = Utf8               java/io/InputStream\n   #55 = Utf8               Code\n   #56 = Utf8               LineNumberTable\n-  #57 = Utf8               LocalVariableTable\n-  #58 = Utf8               this\n-  #59 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n-  #60 = Utf8               Signature\n-  #61 = Utf8               <T:Ljava/io/InputStream;>()TT;\n-  #62 = Utf8               access$208\n-  #63 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)J\n-  #64 = Utf8               x0\n-  #65 = Utf8               access$214\n-  #66 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)J\n-  #67 = Utf8               x1\n-  #68 = Utf8               access$400\n-  #69 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #70 = Utf8               access$500\n-  #71 = Utf8               access$200\n-  #72 = Utf8               access$222\n-  #73 = Utf8               access$600\n-  #74 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Z\n-  #75 = Utf8               access$700\n-  #76 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Ljava/io/InputStream;\n-  #77 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1;)V\n-  #78 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1;\n-  #79 = Utf8               access$602\n-  #80 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;Z)Z\n-  #81 = Utf8               access$902\n-  #82 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;Ljava/io/InputStream;)Ljava/io/InputStream;\n-  #83 = Utf8               access$1002\n-  #84 = Utf8               access$900\n-  #85 = Utf8               access$1100\n-  #86 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Ljava/util/zip/CRC32;\n-  #87 = Utf8               access$514\n-  #88 = Utf8               access$1000\n-  #89 = Utf8               SourceFile\n-  #90 = Utf8               ZipArchiveInputStream.java\n-  #91 = Utf8               InnerClasses\n-  #92 = Class              #93            // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n-  #93 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n-  #94 = Utf8               CurrentEntry\n-  #95 = Class              #96            // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1\n-  #96 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1\n+  #57 = Utf8               Signature\n+  #58 = Utf8               <T:Ljava/io/InputStream;>()TT;\n+  #59 = Utf8               access$208\n+  #60 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)J\n+  #61 = Utf8               access$214\n+  #62 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)J\n+  #63 = Utf8               access$400\n+  #64 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #65 = Utf8               access$500\n+  #66 = Utf8               access$200\n+  #67 = Utf8               access$222\n+  #68 = Utf8               access$600\n+  #69 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Z\n+  #70 = Utf8               access$700\n+  #71 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Ljava/io/InputStream;\n+  #72 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1;)V\n+  #73 = Utf8               access$602\n+  #74 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;Z)Z\n+  #75 = Utf8               access$902\n+  #76 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;Ljava/io/InputStream;)Ljava/io/InputStream;\n+  #77 = Utf8               access$1002\n+  #78 = Utf8               access$900\n+  #79 = Utf8               access$1100\n+  #80 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Ljava/util/zip/CRC32;\n+  #81 = Utf8               access$514\n+  #82 = Utf8               access$1000\n+  #83 = Utf8               SourceFile\n+  #84 = Utf8               ZipArchiveInputStream.java\n+  #85 = Utf8               InnerClasses\n+  #86 = Class              #87            // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+  #87 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+  #88 = Utf8               CurrentEntry\n+  #89 = Class              #90            // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1\n+  #90 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1\n {\n   private final org.apache.commons.compress.archivers.zip.ZipArchiveEntry entry;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private boolean hasDataDescriptor;\n     descriptor: Z\n@@ -151,35 +145,29 @@\n         20: invokespecial #45                 // Method java/util/zip/CRC32.\"<init>\":()V\n         23: putfield      #1                  // Field crc:Ljava/util/zip/CRC32;\n         26: return\n       LineNumberTable:\n         line 169: 0\n         line 174: 4\n         line 204: 15\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0      27     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n \n   private <T extends java.io.InputStream> T checkInputStream();\n     descriptor: ()Ljava/io/InputStream;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #11                 // Field inputStream:Ljava/io/InputStream;\n          4: ldc           #46                 // String inputStream\n          6: invokestatic  #47                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          9: checkcast     #53                 // class java/io/InputStream\n         12: areturn\n       LineNumberTable:\n         line 213: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0      13     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n-    Signature: #61                          // <T:Ljava/io/InputStream;>()TT;\n+    Signature: #58                          // <T:Ljava/io/InputStream;>()TT;\n \n   static long access$208(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=7, locals=1, args_size=1\n          0: aload_0\n@@ -188,17 +176,14 @@\n          5: dup2_x1\n          6: lconst_1\n          7: ladd\n          8: putfield      #34                 // Field bytesReadFromStream:J\n         11: lreturn\n       LineNumberTable:\n         line 169: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0      12     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n \n   static long access$214(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry, long);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n@@ -207,60 +192,47 @@\n          5: lload_1\n          6: ladd\n          7: dup2_x1\n          8: putfield      #34                 // Field bytesReadFromStream:J\n         11: lreturn\n       LineNumberTable:\n         line 169: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0      12     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n-            0      12     1    x1   J\n \n   static org.apache.commons.compress.archivers.zip.ZipArchiveEntry access$400(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #30                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n          4: areturn\n       LineNumberTable:\n         line 169: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n \n   static long access$500(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #26                 // Field bytesRead:J\n          4: lreturn\n       LineNumberTable:\n         line 169: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n \n   static long access$200(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #34                 // Field bytesReadFromStream:J\n          4: lreturn\n       LineNumberTable:\n         line 169: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n \n   static long access$222(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry, long);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n@@ -269,140 +241,108 @@\n          5: lload_1\n          6: lsub\n          7: dup2_x1\n          8: putfield      #34                 // Field bytesReadFromStream:J\n         11: lreturn\n       LineNumberTable:\n         line 169: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0      12     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n-            0      12     1    x1   J\n \n   static boolean access$600(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #23                 // Field hasDataDescriptor:Z\n          4: ireturn\n       LineNumberTable:\n         line 169: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n \n   static java.io.InputStream access$700(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Ljava/io/InputStream;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: invokespecial #19                 // Method checkInputStream:()Ljava/io/InputStream;\n          4: areturn\n       LineNumberTable:\n         line 169: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n \n   org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$1);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1;)V\n     flags: (0x1000) ACC_SYNTHETIC\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #15                 // Method \"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 169: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n-            0       5     1    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1;\n \n   static boolean access$602(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry, boolean);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;Z)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: dup_x1\n          3: putfield      #23                 // Field hasDataDescriptor:Z\n          6: ireturn\n       LineNumberTable:\n         line 169: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       7     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n-            0       7     1    x1   Z\n \n   static java.io.InputStream access$902(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry, java.io.InputStream);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;Ljava/io/InputStream;)Ljava/io/InputStream;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: dup_x1\n          3: putfield      #11                 // Field inputStream:Ljava/io/InputStream;\n          6: areturn\n       LineNumberTable:\n         line 169: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       7     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n-            0       7     1    x1   Ljava/io/InputStream;\n \n   static boolean access$1002(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry, boolean);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;Z)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: dup_x1\n          3: putfield      #7                  // Field usesZip64:Z\n          6: ireturn\n       LineNumberTable:\n         line 169: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       7     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n-            0       7     1    x1   Z\n \n   static java.io.InputStream access$900(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Ljava/io/InputStream;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #11                 // Field inputStream:Ljava/io/InputStream;\n          4: areturn\n       LineNumberTable:\n         line 169: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n \n   static java.util.zip.CRC32 access$1100(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Ljava/util/zip/CRC32;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #1                  // Field crc:Ljava/util/zip/CRC32;\n          4: areturn\n       LineNumberTable:\n         line 169: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n \n   static long access$514(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry, long);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n@@ -411,30 +351,23 @@\n          5: lload_1\n          6: ladd\n          7: dup2_x1\n          8: putfield      #26                 // Field bytesRead:J\n         11: lreturn\n       LineNumberTable:\n         line 169: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0      12     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n-            0      12     1    x1   J\n \n   static boolean access$1000(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #7                  // Field usesZip64:Z\n          4: ireturn\n       LineNumberTable:\n         line 169: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n }\n SourceFile: \"ZipArchiveInputStream.java\"\n InnerClasses:\n-  private static final #94= #2 of #92;    // CurrentEntry=class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry of class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n-  static #95;                             // class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1\n+  private static final #88= #2 of #86;    // CurrentEntry=class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry of class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+  static #89;                             // class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1\n"}]}
