{"diffoscope-json-version": 1, "source1": "first/SnappyCompressorOutputStream.class", "source2": "second/SnappyCompressorOutputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -42,20 +42,20 @@\n     }\n     \n     public SnappyCompressorOutputStream(final OutputStream os, final long uncompressedSize, final Parameters params) throws IOException {\n         this.oneByte = new byte[1];\n         this.os = os;\n         this.consumer = (ByteUtils.ByteConsumer)new ByteUtils.OutputStreamByteConsumer(os);\n         this.compressor = new LZ77Compressor(params, block -> {\n-            switch (SnappyCompressorOutputStream.SnappyCompressorOutputStream$1.$SwitchMap$org$apache$commons$compress$compressors$lz77support$LZ77Compressor$Block$BlockType[block.getType().ordinal()]) {\n-                case 1: {\n+            switch (block.getType()) {\n+                case LITERAL: {\n                     this.writeLiteralBlock((LZ77Compressor.LiteralBlock)block);\n                     break;\n                 }\n-                case 2: {\n+                case BACK_REFERENCE: {\n                     this.writeBackReference((LZ77Compressor.BackReference)block);\n                     break;\n                 }\n             }\n         });\n         this.writeUncompressedSize(uncompressedSize);\n     }\n@@ -72,14 +72,15 @@\n     public void close() throws IOException {\n         try {\n             this.finish();\n         }\n         finally {\n             this.os.close();\n         }\n+        this.os.close();\n     }\n     \n     public void finish() throws IOException {\n         if (!this.finished) {\n             this.compressor.finish();\n             this.finished = true;\n         }\n"}]}
