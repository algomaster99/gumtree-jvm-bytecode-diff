{"diffoscope-json-version": 1, "source1": "first/GeneralPurposeBit.class", "source2": "second/GeneralPurposeBit.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,40 +1,40 @@\n-  SHA-256 checksum 5d4259998695e3b6cec3da29772876bcfdd281f0438227f8957d337c12e983e0\n+  SHA-256 checksum fd1e7de251f1ffc11f921ab255a3f24fb5ff5b8fcb1b5eed3160783fd3b1708d\n   Compiled from \"GeneralPurposeBit.java\"\n public final class org.apache.commons.compress.archivers.zip.GeneralPurposeBit implements java.lang.Cloneable\n   minor version: 0\n   major version: 51\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #10                         // org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n   super_class: #22                        // java/lang/Object\n   interfaces: 1, fields: 12, methods: 17, attributes: 1\n Constant pool:\n-    #1 = Methodref          #22.#78       // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #10.#79       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.languageEncodingFlag:Z\n-    #3 = Fieldref           #10.#80       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.dataDescriptorFlag:Z\n-    #4 = Fieldref           #10.#81       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.encryptionFlag:Z\n-    #5 = Fieldref           #10.#82       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.strongEncryptionFlag:Z\n-    #6 = Methodref          #10.#83       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useEncryption:(Z)V\n-    #7 = Fieldref           #10.#84       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.slidingDictionarySize:I\n-    #8 = Fieldref           #10.#85       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.numberOfShannonFanoTrees:I\n-    #9 = Methodref          #10.#86       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.encode:([BI)V\n-   #10 = Class              #87           // org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n-   #11 = Methodref          #88.#89       // org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n-   #12 = Methodref          #88.#90       // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-   #13 = Methodref          #10.#78       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.\"<init>\":()V\n-   #14 = Methodref          #10.#91       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useDataDescriptor:(Z)V\n-   #15 = Methodref          #10.#92       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useUTF8ForNames:(Z)V\n-   #16 = Methodref          #10.#93       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useStrongEncryption:(Z)V\n-   #17 = Methodref          #22.#94       // java/lang/Object.clone:()Ljava/lang/Object;\n-   #18 = Class              #95           // java/lang/CloneNotSupportedException\n-   #19 = Class              #96           // java/lang/RuntimeException\n-   #20 = String             #97           // GeneralPurposeBit is not Cloneable?\n-   #21 = Methodref          #19.#98       // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #22 = Class              #99           // java/lang/Object\n-   #23 = Class              #100          // java/lang/Cloneable\n+    #1 = Methodref          #22.#76       // java/lang/Object.\"<init>\":()V\n+    #2 = Fieldref           #10.#77       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.languageEncodingFlag:Z\n+    #3 = Fieldref           #10.#78       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.dataDescriptorFlag:Z\n+    #4 = Fieldref           #10.#79       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.encryptionFlag:Z\n+    #5 = Fieldref           #10.#80       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.strongEncryptionFlag:Z\n+    #6 = Methodref          #10.#81       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useEncryption:(Z)V\n+    #7 = Fieldref           #10.#82       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.slidingDictionarySize:I\n+    #8 = Fieldref           #10.#83       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.numberOfShannonFanoTrees:I\n+    #9 = Methodref          #10.#84       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.encode:([BI)V\n+   #10 = Class              #85           // org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+   #11 = Methodref          #86.#87       // org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n+   #12 = Methodref          #86.#88       // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+   #13 = Methodref          #10.#76       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.\"<init>\":()V\n+   #14 = Methodref          #10.#89       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useDataDescriptor:(Z)V\n+   #15 = Methodref          #10.#90       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useUTF8ForNames:(Z)V\n+   #16 = Methodref          #10.#91       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useStrongEncryption:(Z)V\n+   #17 = Methodref          #22.#92       // java/lang/Object.clone:()Ljava/lang/Object;\n+   #18 = Class              #93           // java/lang/CloneNotSupportedException\n+   #19 = Class              #94           // java/lang/RuntimeException\n+   #20 = String             #95           // GeneralPurposeBit is not Cloneable?\n+   #21 = Methodref          #19.#96       // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #22 = Class              #97           // java/lang/Object\n+   #23 = Class              #98           // java/lang/Cloneable\n    #24 = Utf8               ENCRYPTION_FLAG\n    #25 = Utf8               I\n    #26 = Utf8               ConstantValue\n    #27 = Integer            1\n    #28 = Utf8               SLIDING_DICTIONARY_SIZE_FLAG\n    #29 = Integer            2\n    #30 = Utf8               NUMBER_OF_SHANNON_FANO_TREES_FLAG\n@@ -69,56 +69,54 @@\n    #59 = Utf8               useStrongEncryption\n    #60 = Utf8               getSlidingDictionarySize\n    #61 = Utf8               ()I\n    #62 = Utf8               getNumberOfShannonFanoTrees\n    #63 = Utf8               encode\n    #64 = Utf8               ()[B\n    #65 = Utf8               ([BI)V\n-   #66 = Class              #87           // org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n-   #67 = Class              #101          // \"[B\"\n-   #68 = Utf8               parse\n-   #69 = Utf8               ([BI)Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-   #70 = Utf8               hashCode\n-   #71 = Utf8               equals\n-   #72 = Utf8               (Ljava/lang/Object;)Z\n-   #73 = Utf8               clone\n-   #74 = Utf8               ()Ljava/lang/Object;\n-   #75 = Class              #95           // java/lang/CloneNotSupportedException\n-   #76 = Utf8               SourceFile\n-   #77 = Utf8               GeneralPurposeBit.java\n-   #78 = NameAndType        #45:#46       // \"<init>\":()V\n-   #79 = NameAndType        #38:#39       // languageEncodingFlag:Z\n-   #80 = NameAndType        #40:#39       // dataDescriptorFlag:Z\n-   #81 = NameAndType        #41:#39       // encryptionFlag:Z\n-   #82 = NameAndType        #42:#39       // strongEncryptionFlag:Z\n-   #83 = NameAndType        #56:#52       // useEncryption:(Z)V\n-   #84 = NameAndType        #43:#25       // slidingDictionarySize:I\n-   #85 = NameAndType        #44:#25       // numberOfShannonFanoTrees:I\n-   #86 = NameAndType        #63:#65       // encode:([BI)V\n-   #87 = Utf8               org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n-   #88 = Class              #102          // org/apache/commons/compress/archivers/zip/ZipShort\n-   #89 = NameAndType        #103:#104     // putShort:(I[BI)V\n-   #90 = NameAndType        #105:#106     // getValue:([BI)I\n-   #91 = NameAndType        #54:#52       // useDataDescriptor:(Z)V\n-   #92 = NameAndType        #51:#52       // useUTF8ForNames:(Z)V\n-   #93 = NameAndType        #59:#52       // useStrongEncryption:(Z)V\n-   #94 = NameAndType        #73:#74       // clone:()Ljava/lang/Object;\n-   #95 = Utf8               java/lang/CloneNotSupportedException\n-   #96 = Utf8               java/lang/RuntimeException\n-   #97 = Utf8               GeneralPurposeBit is not Cloneable?\n-   #98 = NameAndType        #45:#107      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #99 = Utf8               java/lang/Object\n-  #100 = Utf8               java/lang/Cloneable\n-  #101 = Utf8               [B\n-  #102 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-  #103 = Utf8               putShort\n-  #104 = Utf8               (I[BI)V\n-  #105 = Utf8               getValue\n-  #106 = Utf8               ([BI)I\n-  #107 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #66 = Class              #99           // \"[B\"\n+   #67 = Utf8               parse\n+   #68 = Utf8               ([BI)Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+   #69 = Utf8               hashCode\n+   #70 = Utf8               equals\n+   #71 = Utf8               (Ljava/lang/Object;)Z\n+   #72 = Utf8               clone\n+   #73 = Utf8               ()Ljava/lang/Object;\n+   #74 = Utf8               SourceFile\n+   #75 = Utf8               GeneralPurposeBit.java\n+   #76 = NameAndType        #45:#46       // \"<init>\":()V\n+   #77 = NameAndType        #38:#39       // languageEncodingFlag:Z\n+   #78 = NameAndType        #40:#39       // dataDescriptorFlag:Z\n+   #79 = NameAndType        #41:#39       // encryptionFlag:Z\n+   #80 = NameAndType        #42:#39       // strongEncryptionFlag:Z\n+   #81 = NameAndType        #56:#52       // useEncryption:(Z)V\n+   #82 = NameAndType        #43:#25       // slidingDictionarySize:I\n+   #83 = NameAndType        #44:#25       // numberOfShannonFanoTrees:I\n+   #84 = NameAndType        #63:#65       // encode:([BI)V\n+   #85 = Utf8               org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+   #86 = Class              #100          // org/apache/commons/compress/archivers/zip/ZipShort\n+   #87 = NameAndType        #101:#102     // putShort:(I[BI)V\n+   #88 = NameAndType        #103:#104     // getValue:([BI)I\n+   #89 = NameAndType        #54:#52       // useDataDescriptor:(Z)V\n+   #90 = NameAndType        #51:#52       // useUTF8ForNames:(Z)V\n+   #91 = NameAndType        #59:#52       // useStrongEncryption:(Z)V\n+   #92 = NameAndType        #72:#73       // clone:()Ljava/lang/Object;\n+   #93 = Utf8               java/lang/CloneNotSupportedException\n+   #94 = Utf8               java/lang/RuntimeException\n+   #95 = Utf8               GeneralPurposeBit is not Cloneable?\n+   #96 = NameAndType        #45:#105      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #97 = Utf8               java/lang/Object\n+   #98 = Utf8               java/lang/Cloneable\n+   #99 = Utf8               [B\n+  #100 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+  #101 = Utf8               putShort\n+  #102 = Utf8               (I[BI)V\n+  #103 = Utf8               getValue\n+  #104 = Utf8               ([BI)I\n+  #105 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n {\n   private static final int ENCRYPTION_FLAG = 1;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 1\n \n   private static final int SLIDING_DICTIONARY_SIZE_FLAG = 2;\n@@ -389,14 +387,18 @@\n         54: ior\n         55: aload_1\n         56: iload_2\n         57: invokestatic  #11                 // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n         60: return\n       LineNumberTable:\n         line 187: 0\n+        line 189: 13\n+        line 191: 28\n+        line 193: 41\n+        line 187: 57\n         line 195: 60\n       StackMapTable: number_of_entries = 8\n         frame_type = 12 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n         frame_type = 76 /* same_locals_1_stack_item */\n           stack = [ int ]\n@@ -575,14 +577,18 @@\n         56: goto          60\n         59: iconst_0\n         60: iadd\n         61: imul\n         62: ireturn\n       LineNumberTable:\n         line 218: 0\n+        line 219: 20\n+        line 220: 34\n+        line 221: 48\n+        line 218: 62\n       StackMapTable: number_of_entries = 8\n         frame_type = 255 /* full_frame */\n           offset_delta = 18\n           locals = [ class org/apache/commons/compress/archivers/zip/GeneralPurposeBit ]\n           stack = [ int, int, int, int ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n"}]}
