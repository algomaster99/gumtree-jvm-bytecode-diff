{"diffoscope-json-version": 1, "source1": "first/MurmurHash3$IncrementalHash32.class", "source2": "second/MurmurHash3$IncrementalHash32.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,30 +1,25 @@\n \n package org.apache.commons.codec.digest;\n \n @Deprecated\n public static class IncrementalHash32 extends MurmurHash3.IncrementalHash32x86\n {\n     @Deprecated\n-    int finalise(final int hash, final int unprocessedLength, final byte[] unprocessed, final int totalLen) {\n-        int result = hash;\n-        int k1 = 0;\n-        switch (unprocessedLength) {\n+    int finalise(final int n, final int n2, final byte[] array, final int n3) {\n+        int n4 = n;\n+        int n5 = 0;\n+        switch (n2) {\n             case 3: {\n-                k1 ^= unprocessed[2] << 16;\n+                n5 ^= array[2] << 16;\n             }\n             case 2: {\n-                k1 ^= unprocessed[1] << 8;\n+                n5 ^= array[1] << 8;\n             }\n             case 1: {\n-                k1 ^= unprocessed[0];\n-                k1 *= -862048943;\n-                k1 = Integer.rotateLeft(k1, 15);\n-                k1 *= 461845907;\n-                result ^= k1;\n+                n4 ^= Integer.rotateLeft((n5 ^ array[0]) * -862048943, 15) * 461845907;\n                 break;\n             }\n         }\n-        result ^= totalLen;\n-        return MurmurHash3.access$200(result);\n+        return MurmurHash3.access$200(n4 ^ n3);\n     }\n }\n"}]}
