{"diffoscope-json-version": 1, "source1": "first/Fraction.class", "source2": "second/Fraction.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,378 +1,378 @@\n-  SHA-256 checksum 71c7d5f9e6d9a754c978b54e7d3e1add26ec8492d22c4d24d031855c987618fe\n+  SHA-256 checksum 1ea7b0529d102bb3404df50916faa4a03915a6d01d5432a08a9811e5ef7f741f\n   Compiled from \"Fraction.java\"\n public final class org.apache.commons.lang3.math.Fraction extends java.lang.Number implements java.lang.Comparable<org.apache.commons.lang3.math.Fraction>\n   minor version: 0\n   major version: 51\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #13                         // org/apache/commons/lang3/math/Fraction\n-  super_class: #104                       // java/lang/Number\n+  this_class: #8                          // org/apache/commons/lang3/math/Fraction\n+  super_class: #2                         // java/lang/Number\n   interfaces: 1, fields: 18, methods: 36, attributes: 2\n Constant pool:\n-    #1 = Methodref          #104.#241     // java/lang/Number.\"<init>\":()V\n-    #2 = Fieldref           #13.#242      // org/apache/commons/lang3/math/Fraction.hashCode:I\n-    #3 = Fieldref           #13.#243      // org/apache/commons/lang3/math/Fraction.toString:Ljava/lang/String;\n-    #4 = Fieldref           #13.#244      // org/apache/commons/lang3/math/Fraction.toProperString:Ljava/lang/String;\n-    #5 = Fieldref           #13.#245      // org/apache/commons/lang3/math/Fraction.numerator:I\n-    #6 = Fieldref           #13.#246      // org/apache/commons/lang3/math/Fraction.denominator:I\n-    #7 = Class              #247          // java/lang/ArithmeticException\n-    #8 = String             #248          // The denominator must not be zero\n-    #9 = Methodref          #7.#249       // java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n-   #10 = Class              #250          // java/lang/Integer\n-   #11 = Integer            -2147483648\n-   #12 = String             #251          // overflow: can\\'t negate\n-   #13 = Class              #252          // org/apache/commons/lang3/math/Fraction\n-   #14 = Methodref          #13.#253      // org/apache/commons/lang3/math/Fraction.\"<init>\":(II)V\n-   #15 = String             #254          // The denominator must not be negative\n-   #16 = String             #255          // The numerator must not be negative\n-   #17 = Long               -2147483648l\n-   #19 = Long               2147483647l\n-   #21 = String             #256          // Numerator too large to represent as an Integer.\n-   #22 = Fieldref           #13.#257      // org/apache/commons/lang3/math/Fraction.ZERO:Lorg/apache/commons/lang3/math/Fraction;\n-   #23 = Methodref          #13.#258      // org/apache/commons/lang3/math/Fraction.greatestCommonDivisor:(II)I\n-   #24 = Methodref          #259.#260     // java/lang/Math.abs:(D)D\n-   #25 = Double             2.147483647E9d\n-   #27 = Methodref          #29.#261      // java/lang/Double.isNaN:(D)Z\n-   #28 = String             #262          // The value must not be greater than Integer.MAX_VALUE or NaN\n-   #29 = Class              #263          // java/lang/Double\n-   #30 = Double             1.7976931348623157E308d\n-   #32 = String             #264          // Unable to convert double to fraction\n-   #33 = Methodref          #13.#265      // org/apache/commons/lang3/math/Fraction.getReducedFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n-   #34 = String             #266          // The string must not be null\n-   #35 = Class              #267          // java/lang/Object\n-   #36 = Methodref          #268.#269     // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-   #37 = Methodref          #270.#271     // java/lang/String.indexOf:(I)I\n-   #38 = Methodref          #29.#272      // java/lang/Double.parseDouble:(Ljava/lang/String;)D\n-   #39 = Methodref          #13.#273      // org/apache/commons/lang3/math/Fraction.getFraction:(D)Lorg/apache/commons/lang3/math/Fraction;\n-   #40 = Methodref          #270.#274     // java/lang/String.substring:(II)Ljava/lang/String;\n-   #41 = Methodref          #10.#275      // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-   #42 = Methodref          #270.#276     // java/lang/String.substring:(I)Ljava/lang/String;\n-   #43 = Class              #277          // java/lang/NumberFormatException\n-   #44 = String             #278          // The fraction could not be parsed as the format X Y/Z\n-   #45 = Methodref          #43.#249      // java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n-   #46 = Methodref          #13.#279      // org/apache/commons/lang3/math/Fraction.getFraction:(III)Lorg/apache/commons/lang3/math/Fraction;\n-   #47 = Methodref          #13.#280      // org/apache/commons/lang3/math/Fraction.getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n-   #48 = Methodref          #259.#281     // java/lang/Math.abs:(I)I\n-   #49 = Methodref          #13.#282      // org/apache/commons/lang3/math/Fraction.equals:(Ljava/lang/Object;)Z\n-   #50 = String             #283          // Unable to invert zero.\n-   #51 = String             #284          // overflow: can\\'t negate numerator\n-   #52 = String             #285          // overflow: too large to negate\n-   #53 = Methodref          #13.#286      // org/apache/commons/lang3/math/Fraction.negate:()Lorg/apache/commons/lang3/math/Fraction;\n-   #54 = Fieldref           #13.#287      // org/apache/commons/lang3/math/Fraction.ONE:Lorg/apache/commons/lang3/math/Fraction;\n-   #55 = Methodref          #13.#288      // org/apache/commons/lang3/math/Fraction.invert:()Lorg/apache/commons/lang3/math/Fraction;\n-   #56 = Methodref          #13.#289      // org/apache/commons/lang3/math/Fraction.pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n-   #57 = Methodref          #13.#290      // org/apache/commons/lang3/math/Fraction.multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n-   #58 = String             #291          // overflow: gcd is 2^31\n-   #59 = String             #292          // overflow: mul\n-   #60 = String             #293          // overflow: mulPos\n-   #61 = String             #294          // overflow: add\n-   #62 = Methodref          #13.#295      // org/apache/commons/lang3/math/Fraction.addSub:(Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;\n-   #63 = String             #296          // The fraction must not be null\n-   #64 = Methodref          #13.#297      // org/apache/commons/lang3/math/Fraction.mulAndCheck:(II)I\n-   #65 = Methodref          #13.#298      // org/apache/commons/lang3/math/Fraction.addAndCheck:(II)I\n-   #66 = Methodref          #13.#299      // org/apache/commons/lang3/math/Fraction.subAndCheck:(II)I\n-   #67 = Methodref          #13.#300      // org/apache/commons/lang3/math/Fraction.mulPosAndCheck:(II)I\n-   #68 = Methodref          #220.#301     // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n-   #69 = Methodref          #220.#302     // java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-   #70 = Methodref          #220.#303     // java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-   #71 = Methodref          #220.#304     // java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-   #72 = Methodref          #220.#305     // java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-   #73 = Methodref          #220.#306     // java/math/BigInteger.intValue:()I\n-   #74 = Methodref          #220.#307     // java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-   #75 = Methodref          #220.#308     // java/math/BigInteger.bitLength:()I\n-   #76 = String             #309          // overflow: numerator too large after multiply\n-   #77 = String             #310          // The fraction to divide by must not be zero\n-   #78 = Methodref          #13.#311      // org/apache/commons/lang3/math/Fraction.getNumerator:()I\n-   #79 = Methodref          #13.#312      // org/apache/commons/lang3/math/Fraction.getDenominator:()I\n-   #80 = Class              #313          // java/lang/StringBuilder\n-   #81 = Methodref          #80.#241      // java/lang/StringBuilder.\"<init>\":()V\n-   #82 = Methodref          #80.#314      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #83 = String             #315          // /\n-   #84 = Methodref          #80.#316      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #85 = Methodref          #80.#317      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #86 = String             #318          // 0\n-   #87 = String             #319          // 1\n-   #88 = String             #320          // -1\n-   #89 = Methodref          #13.#321      // org/apache/commons/lang3/math/Fraction.getProperNumerator:()I\n-   #90 = Methodref          #13.#322      // org/apache/commons/lang3/math/Fraction.getProperWhole:()I\n-   #91 = Methodref          #10.#323      // java/lang/Integer.toString:(I)Ljava/lang/String;\n-   #92 = String             #324          //\n-   #93 = Methodref          #13.#325      // org/apache/commons/lang3/math/Fraction.compareTo:(Lorg/apache/commons/lang3/math/Fraction;)I\n-   #94 = Fieldref           #13.#326      // org/apache/commons/lang3/math/Fraction.ONE_HALF:Lorg/apache/commons/lang3/math/Fraction;\n-   #95 = Fieldref           #13.#327      // org/apache/commons/lang3/math/Fraction.ONE_THIRD:Lorg/apache/commons/lang3/math/Fraction;\n-   #96 = Fieldref           #13.#328      // org/apache/commons/lang3/math/Fraction.TWO_THIRDS:Lorg/apache/commons/lang3/math/Fraction;\n-   #97 = Fieldref           #13.#329      // org/apache/commons/lang3/math/Fraction.ONE_QUARTER:Lorg/apache/commons/lang3/math/Fraction;\n-   #98 = Fieldref           #13.#330      // org/apache/commons/lang3/math/Fraction.TWO_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n-   #99 = Fieldref           #13.#331      // org/apache/commons/lang3/math/Fraction.THREE_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n-  #100 = Fieldref           #13.#332      // org/apache/commons/lang3/math/Fraction.ONE_FIFTH:Lorg/apache/commons/lang3/math/Fraction;\n-  #101 = Fieldref           #13.#333      // org/apache/commons/lang3/math/Fraction.TWO_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n-  #102 = Fieldref           #13.#334      // org/apache/commons/lang3/math/Fraction.THREE_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n-  #103 = Fieldref           #13.#335      // org/apache/commons/lang3/math/Fraction.FOUR_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n-  #104 = Class              #336          // java/lang/Number\n-  #105 = Class              #337          // java/lang/Comparable\n-  #106 = Utf8               serialVersionUID\n-  #107 = Utf8               J\n-  #108 = Utf8               ConstantValue\n-  #109 = Long               65382027393090l\n-  #111 = Utf8               ZERO\n-  #112 = Utf8               Lorg/apache/commons/lang3/math/Fraction;\n-  #113 = Utf8               ONE\n-  #114 = Utf8               ONE_HALF\n-  #115 = Utf8               ONE_THIRD\n-  #116 = Utf8               TWO_THIRDS\n-  #117 = Utf8               ONE_QUARTER\n-  #118 = Utf8               TWO_QUARTERS\n-  #119 = Utf8               THREE_QUARTERS\n-  #120 = Utf8               ONE_FIFTH\n-  #121 = Utf8               TWO_FIFTHS\n-  #122 = Utf8               THREE_FIFTHS\n-  #123 = Utf8               FOUR_FIFTHS\n-  #124 = Utf8               numerator\n-  #125 = Utf8               I\n-  #126 = Utf8               denominator\n-  #127 = Utf8               hashCode\n-  #128 = Utf8               toString\n-  #129 = Utf8               Ljava/lang/String;\n-  #130 = Utf8               toProperString\n-  #131 = Utf8               <init>\n-  #132 = Utf8               (II)V\n-  #133 = Utf8               Code\n-  #134 = Utf8               LineNumberTable\n-  #135 = Utf8               LocalVariableTable\n-  #136 = Utf8               this\n-  #137 = Utf8               getFraction\n-  #138 = Utf8               (II)Lorg/apache/commons/lang3/math/Fraction;\n-  #139 = Utf8               StackMapTable\n-  #140 = Utf8               (III)Lorg/apache/commons/lang3/math/Fraction;\n-  #141 = Utf8               numeratorValue\n-  #142 = Utf8               whole\n-  #143 = Utf8               getReducedFraction\n-  #144 = Utf8               gcd\n-  #145 = Utf8               (D)Lorg/apache/commons/lang3/math/Fraction;\n-  #146 = Utf8               value\n-  #147 = Utf8               D\n-  #148 = Utf8               sign\n-  #149 = Utf8               wholeNumber\n-  #150 = Utf8               numer0\n-  #151 = Utf8               denom0\n-  #152 = Utf8               numer1\n-  #153 = Utf8               denom1\n-  #154 = Utf8               numer2\n-  #155 = Utf8               denom2\n-  #156 = Utf8               a1\n-  #157 = Utf8               a2\n-  #158 = Utf8               x1\n-  #159 = Utf8               x2\n-  #160 = Utf8               y1\n-  #161 = Utf8               y2\n-  #162 = Utf8               delta1\n-  #163 = Utf8               delta2\n-  #164 = Utf8               fraction\n-  #165 = Utf8               i\n-  #166 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/lang3/math/Fraction;\n-  #167 = Utf8               numer\n-  #168 = Utf8               denom\n-  #169 = Utf8               str\n-  #170 = Utf8               pos\n-  #171 = Utf8               getNumerator\n-  #172 = Utf8               ()I\n-  #173 = Utf8               getDenominator\n-  #174 = Utf8               getProperNumerator\n-  #175 = Utf8               getProperWhole\n-  #176 = Utf8               intValue\n-  #177 = Utf8               longValue\n-  #178 = Utf8               ()J\n-  #179 = Utf8               floatValue\n-  #180 = Utf8               ()F\n-  #181 = Utf8               doubleValue\n-  #182 = Utf8               ()D\n-  #183 = Utf8               reduce\n-  #184 = Utf8               ()Lorg/apache/commons/lang3/math/Fraction;\n-  #185 = Utf8               invert\n-  #186 = Utf8               negate\n-  #187 = Utf8               abs\n-  #188 = Utf8               pow\n-  #189 = Utf8               (I)Lorg/apache/commons/lang3/math/Fraction;\n-  #190 = Utf8               f\n-  #191 = Utf8               power\n-  #192 = Utf8               greatestCommonDivisor\n-  #193 = Utf8               (II)I\n-  #194 = Utf8               u\n-  #195 = Utf8               v\n-  #196 = Utf8               k\n-  #197 = Utf8               t\n-  #198 = Utf8               mulAndCheck\n-  #199 = Utf8               x\n-  #200 = Utf8               y\n-  #201 = Utf8               m\n-  #202 = Utf8               mulPosAndCheck\n-  #203 = Utf8               addAndCheck\n-  #204 = Utf8               s\n-  #205 = Utf8               subAndCheck\n-  #206 = Utf8               add\n-  #207 = Utf8               (Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n-  #208 = Utf8               subtract\n-  #209 = Utf8               addSub\n-  #210 = Utf8               (Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;\n-  #211 = Utf8               uvp\n-  #212 = Utf8               upv\n-  #213 = Utf8               isAdd\n-  #214 = Utf8               Z\n-  #215 = Utf8               d1\n-  #216 = Utf8               Ljava/math/BigInteger;\n-  #217 = Utf8               tmodd1\n-  #218 = Utf8               d2\n-  #219 = Utf8               w\n-  #220 = Class              #338          // java/math/BigInteger\n-  #221 = Utf8               multiplyBy\n-  #222 = Utf8               divideBy\n-  #223 = Utf8               equals\n-  #224 = Utf8               (Ljava/lang/Object;)Z\n-  #225 = Utf8               obj\n-  #226 = Utf8               Ljava/lang/Object;\n-  #227 = Utf8               other\n-  #228 = Utf8               compareTo\n-  #229 = Utf8               (Lorg/apache/commons/lang3/math/Fraction;)I\n-  #230 = Utf8               first\n-  #231 = Utf8               second\n-  #232 = Utf8               ()Ljava/lang/String;\n-  #233 = Utf8               properNumerator\n-  #234 = Utf8               (Ljava/lang/Object;)I\n-  #235 = Utf8               <clinit>\n-  #236 = Utf8               ()V\n-  #237 = Utf8               Signature\n-  #238 = Utf8               Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/math/Fraction;>;\n-  #239 = Utf8               SourceFile\n-  #240 = Utf8               Fraction.java\n-  #241 = NameAndType        #131:#236     // \"<init>\":()V\n-  #242 = NameAndType        #127:#125     // hashCode:I\n-  #243 = NameAndType        #128:#129     // toString:Ljava/lang/String;\n-  #244 = NameAndType        #130:#129     // toProperString:Ljava/lang/String;\n-  #245 = NameAndType        #124:#125     // numerator:I\n-  #246 = NameAndType        #126:#125     // denominator:I\n-  #247 = Utf8               java/lang/ArithmeticException\n-  #248 = Utf8               The denominator must not be zero\n-  #249 = NameAndType        #131:#339     // \"<init>\":(Ljava/lang/String;)V\n-  #250 = Utf8               java/lang/Integer\n-  #251 = Utf8               overflow: can\\'t negate\n-  #252 = Utf8               org/apache/commons/lang3/math/Fraction\n-  #253 = NameAndType        #131:#132     // \"<init>\":(II)V\n-  #254 = Utf8               The denominator must not be negative\n-  #255 = Utf8               The numerator must not be negative\n-  #256 = Utf8               Numerator too large to represent as an Integer.\n-  #257 = NameAndType        #111:#112     // ZERO:Lorg/apache/commons/lang3/math/Fraction;\n-  #258 = NameAndType        #192:#193     // greatestCommonDivisor:(II)I\n-  #259 = Class              #340          // java/lang/Math\n-  #260 = NameAndType        #187:#341     // abs:(D)D\n-  #261 = NameAndType        #342:#343     // isNaN:(D)Z\n-  #262 = Utf8               The value must not be greater than Integer.MAX_VALUE or NaN\n-  #263 = Utf8               java/lang/Double\n-  #264 = Utf8               Unable to convert double to fraction\n-  #265 = NameAndType        #143:#138     // getReducedFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n-  #266 = Utf8               The string must not be null\n-  #267 = Utf8               java/lang/Object\n-  #268 = Class              #344          // org/apache/commons/lang3/Validate\n-  #269 = NameAndType        #345:#346     // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-  #270 = Class              #347          // java/lang/String\n-  #271 = NameAndType        #348:#349     // indexOf:(I)I\n-  #272 = NameAndType        #350:#351     // parseDouble:(Ljava/lang/String;)D\n-  #273 = NameAndType        #137:#145     // getFraction:(D)Lorg/apache/commons/lang3/math/Fraction;\n-  #274 = NameAndType        #352:#353     // substring:(II)Ljava/lang/String;\n-  #275 = NameAndType        #354:#355     // parseInt:(Ljava/lang/String;)I\n-  #276 = NameAndType        #352:#356     // substring:(I)Ljava/lang/String;\n-  #277 = Utf8               java/lang/NumberFormatException\n-  #278 = Utf8               The fraction could not be parsed as the format X Y/Z\n-  #279 = NameAndType        #137:#140     // getFraction:(III)Lorg/apache/commons/lang3/math/Fraction;\n-  #280 = NameAndType        #137:#138     // getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n-  #281 = NameAndType        #187:#349     // abs:(I)I\n-  #282 = NameAndType        #223:#224     // equals:(Ljava/lang/Object;)Z\n-  #283 = Utf8               Unable to invert zero.\n-  #284 = Utf8               overflow: can\\'t negate numerator\n-  #285 = Utf8               overflow: too large to negate\n-  #286 = NameAndType        #186:#184     // negate:()Lorg/apache/commons/lang3/math/Fraction;\n-  #287 = NameAndType        #113:#112     // ONE:Lorg/apache/commons/lang3/math/Fraction;\n-  #288 = NameAndType        #185:#184     // invert:()Lorg/apache/commons/lang3/math/Fraction;\n-  #289 = NameAndType        #188:#189     // pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n-  #290 = NameAndType        #221:#207     // multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n-  #291 = Utf8               overflow: gcd is 2^31\n-  #292 = Utf8               overflow: mul\n-  #293 = Utf8               overflow: mulPos\n-  #294 = Utf8               overflow: add\n-  #295 = NameAndType        #209:#210     // addSub:(Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;\n-  #296 = Utf8               The fraction must not be null\n-  #297 = NameAndType        #198:#193     // mulAndCheck:(II)I\n-  #298 = NameAndType        #203:#193     // addAndCheck:(II)I\n-  #299 = NameAndType        #205:#193     // subAndCheck:(II)I\n-  #300 = NameAndType        #202:#193     // mulPosAndCheck:(II)I\n-  #301 = NameAndType        #357:#358     // valueOf:(J)Ljava/math/BigInteger;\n-  #302 = NameAndType        #359:#360     // multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-  #303 = NameAndType        #206:#360     // add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-  #304 = NameAndType        #208:#360     // subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-  #305 = NameAndType        #361:#360     // mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-  #306 = NameAndType        #176:#172     // intValue:()I\n-  #307 = NameAndType        #362:#360     // divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-  #308 = NameAndType        #363:#172     // bitLength:()I\n-  #309 = Utf8               overflow: numerator too large after multiply\n-  #310 = Utf8               The fraction to divide by must not be zero\n-  #311 = NameAndType        #171:#172     // getNumerator:()I\n-  #312 = NameAndType        #173:#172     // getDenominator:()I\n-  #313 = Utf8               java/lang/StringBuilder\n-  #314 = NameAndType        #364:#365     // append:(I)Ljava/lang/StringBuilder;\n-  #315 = Utf8               /\n-  #316 = NameAndType        #364:#366     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #317 = NameAndType        #128:#232     // toString:()Ljava/lang/String;\n-  #318 = Utf8               0\n-  #319 = Utf8               1\n-  #320 = Utf8               -1\n-  #321 = NameAndType        #174:#172     // getProperNumerator:()I\n-  #322 = NameAndType        #175:#172     // getProperWhole:()I\n-  #323 = NameAndType        #128:#356     // toString:(I)Ljava/lang/String;\n-  #324 = Utf8\n-  #325 = NameAndType        #228:#229     // compareTo:(Lorg/apache/commons/lang3/math/Fraction;)I\n-  #326 = NameAndType        #114:#112     // ONE_HALF:Lorg/apache/commons/lang3/math/Fraction;\n-  #327 = NameAndType        #115:#112     // ONE_THIRD:Lorg/apache/commons/lang3/math/Fraction;\n-  #328 = NameAndType        #116:#112     // TWO_THIRDS:Lorg/apache/commons/lang3/math/Fraction;\n-  #329 = NameAndType        #117:#112     // ONE_QUARTER:Lorg/apache/commons/lang3/math/Fraction;\n-  #330 = NameAndType        #118:#112     // TWO_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n-  #331 = NameAndType        #119:#112     // THREE_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n-  #332 = NameAndType        #120:#112     // ONE_FIFTH:Lorg/apache/commons/lang3/math/Fraction;\n-  #333 = NameAndType        #121:#112     // TWO_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n-  #334 = NameAndType        #122:#112     // THREE_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n-  #335 = NameAndType        #123:#112     // FOUR_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n-  #336 = Utf8               java/lang/Number\n-  #337 = Utf8               java/lang/Comparable\n-  #338 = Utf8               java/math/BigInteger\n-  #339 = Utf8               (Ljava/lang/String;)V\n-  #340 = Utf8               java/lang/Math\n-  #341 = Utf8               (D)D\n-  #342 = Utf8               isNaN\n-  #343 = Utf8               (D)Z\n-  #344 = Utf8               org/apache/commons/lang3/Validate\n-  #345 = Utf8               isTrue\n-  #346 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n-  #347 = Utf8               java/lang/String\n-  #348 = Utf8               indexOf\n-  #349 = Utf8               (I)I\n-  #350 = Utf8               parseDouble\n-  #351 = Utf8               (Ljava/lang/String;)D\n-  #352 = Utf8               substring\n-  #353 = Utf8               (II)Ljava/lang/String;\n-  #354 = Utf8               parseInt\n-  #355 = Utf8               (Ljava/lang/String;)I\n-  #356 = Utf8               (I)Ljava/lang/String;\n-  #357 = Utf8               valueOf\n-  #358 = Utf8               (J)Ljava/math/BigInteger;\n-  #359 = Utf8               multiply\n-  #360 = Utf8               (Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-  #361 = Utf8               mod\n-  #362 = Utf8               divide\n-  #363 = Utf8               bitLength\n-  #364 = Utf8               append\n-  #365 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #366 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+    #1 = Methodref          #2.#3         // java/lang/Number.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Number\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Number\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Fieldref           #8.#9         // org/apache/commons/lang3/math/Fraction.hashCode:I\n+    #8 = Class              #10           // org/apache/commons/lang3/math/Fraction\n+    #9 = NameAndType        #11:#12       // hashCode:I\n+   #10 = Utf8               org/apache/commons/lang3/math/Fraction\n+   #11 = Utf8               hashCode\n+   #12 = Utf8               I\n+   #13 = Fieldref           #8.#14        // org/apache/commons/lang3/math/Fraction.toString:Ljava/lang/String;\n+   #14 = NameAndType        #15:#16       // toString:Ljava/lang/String;\n+   #15 = Utf8               toString\n+   #16 = Utf8               Ljava/lang/String;\n+   #17 = Fieldref           #8.#18        // org/apache/commons/lang3/math/Fraction.toProperString:Ljava/lang/String;\n+   #18 = NameAndType        #19:#16       // toProperString:Ljava/lang/String;\n+   #19 = Utf8               toProperString\n+   #20 = Fieldref           #8.#21        // org/apache/commons/lang3/math/Fraction.numerator:I\n+   #21 = NameAndType        #22:#12       // numerator:I\n+   #22 = Utf8               numerator\n+   #23 = Fieldref           #8.#24        // org/apache/commons/lang3/math/Fraction.denominator:I\n+   #24 = NameAndType        #25:#12       // denominator:I\n+   #25 = Utf8               denominator\n+   #26 = Class              #27           // java/lang/ArithmeticException\n+   #27 = Utf8               java/lang/ArithmeticException\n+   #28 = String             #29           // The denominator must not be zero\n+   #29 = Utf8               The denominator must not be zero\n+   #30 = Methodref          #26.#31       // java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+   #31 = NameAndType        #5:#32        // \"<init>\":(Ljava/lang/String;)V\n+   #32 = Utf8               (Ljava/lang/String;)V\n+   #33 = Class              #34           // java/lang/Integer\n+   #34 = Utf8               java/lang/Integer\n+   #35 = Integer            -2147483648\n+   #36 = String             #37           // overflow: can\\'t negate\n+   #37 = Utf8               overflow: can\\'t negate\n+   #38 = Methodref          #8.#39        // org/apache/commons/lang3/math/Fraction.\"<init>\":(II)V\n+   #39 = NameAndType        #5:#40        // \"<init>\":(II)V\n+   #40 = Utf8               (II)V\n+   #41 = String             #42           // The denominator must not be negative\n+   #42 = Utf8               The denominator must not be negative\n+   #43 = String             #44           // The numerator must not be negative\n+   #44 = Utf8               The numerator must not be negative\n+   #45 = Long               -2147483648l\n+   #47 = Long               2147483647l\n+   #49 = String             #50           // Numerator too large to represent as an Integer.\n+   #50 = Utf8               Numerator too large to represent as an Integer.\n+   #51 = Fieldref           #8.#52        // org/apache/commons/lang3/math/Fraction.ZERO:Lorg/apache/commons/lang3/math/Fraction;\n+   #52 = NameAndType        #53:#54       // ZERO:Lorg/apache/commons/lang3/math/Fraction;\n+   #53 = Utf8               ZERO\n+   #54 = Utf8               Lorg/apache/commons/lang3/math/Fraction;\n+   #55 = Methodref          #8.#56        // org/apache/commons/lang3/math/Fraction.greatestCommonDivisor:(II)I\n+   #56 = NameAndType        #57:#58       // greatestCommonDivisor:(II)I\n+   #57 = Utf8               greatestCommonDivisor\n+   #58 = Utf8               (II)I\n+   #59 = Methodref          #60.#61       // java/lang/Math.abs:(D)D\n+   #60 = Class              #62           // java/lang/Math\n+   #61 = NameAndType        #63:#64       // abs:(D)D\n+   #62 = Utf8               java/lang/Math\n+   #63 = Utf8               abs\n+   #64 = Utf8               (D)D\n+   #65 = Double             2.147483647E9d\n+   #67 = Methodref          #68.#69       // java/lang/Double.isNaN:(D)Z\n+   #68 = Class              #70           // java/lang/Double\n+   #69 = NameAndType        #71:#72       // isNaN:(D)Z\n+   #70 = Utf8               java/lang/Double\n+   #71 = Utf8               isNaN\n+   #72 = Utf8               (D)Z\n+   #73 = String             #74           // The value must not be greater than Integer.MAX_VALUE or NaN\n+   #74 = Utf8               The value must not be greater than Integer.MAX_VALUE or NaN\n+   #75 = Double             1.7976931348623157E308d\n+   #77 = String             #78           // Unable to convert double to fraction\n+   #78 = Utf8               Unable to convert double to fraction\n+   #79 = Methodref          #8.#80        // org/apache/commons/lang3/math/Fraction.getReducedFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n+   #80 = NameAndType        #81:#82       // getReducedFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n+   #81 = Utf8               getReducedFraction\n+   #82 = Utf8               (II)Lorg/apache/commons/lang3/math/Fraction;\n+   #83 = String             #84           // The string must not be null\n+   #84 = Utf8               The string must not be null\n+   #85 = Class              #86           // java/lang/Object\n+   #86 = Utf8               java/lang/Object\n+   #87 = Methodref          #88.#89       // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+   #88 = Class              #90           // org/apache/commons/lang3/Validate\n+   #89 = NameAndType        #91:#92       // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+   #90 = Utf8               org/apache/commons/lang3/Validate\n+   #91 = Utf8               isTrue\n+   #92 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n+   #93 = Methodref          #94.#95       // java/lang/String.indexOf:(I)I\n+   #94 = Class              #96           // java/lang/String\n+   #95 = NameAndType        #97:#98       // indexOf:(I)I\n+   #96 = Utf8               java/lang/String\n+   #97 = Utf8               indexOf\n+   #98 = Utf8               (I)I\n+   #99 = Methodref          #68.#100      // java/lang/Double.parseDouble:(Ljava/lang/String;)D\n+  #100 = NameAndType        #101:#102     // parseDouble:(Ljava/lang/String;)D\n+  #101 = Utf8               parseDouble\n+  #102 = Utf8               (Ljava/lang/String;)D\n+  #103 = Methodref          #8.#104       // org/apache/commons/lang3/math/Fraction.getFraction:(D)Lorg/apache/commons/lang3/math/Fraction;\n+  #104 = NameAndType        #105:#106     // getFraction:(D)Lorg/apache/commons/lang3/math/Fraction;\n+  #105 = Utf8               getFraction\n+  #106 = Utf8               (D)Lorg/apache/commons/lang3/math/Fraction;\n+  #107 = Methodref          #94.#108      // java/lang/String.substring:(II)Ljava/lang/String;\n+  #108 = NameAndType        #109:#110     // substring:(II)Ljava/lang/String;\n+  #109 = Utf8               substring\n+  #110 = Utf8               (II)Ljava/lang/String;\n+  #111 = Methodref          #33.#112      // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+  #112 = NameAndType        #113:#114     // parseInt:(Ljava/lang/String;)I\n+  #113 = Utf8               parseInt\n+  #114 = Utf8               (Ljava/lang/String;)I\n+  #115 = Methodref          #94.#116      // java/lang/String.substring:(I)Ljava/lang/String;\n+  #116 = NameAndType        #109:#117     // substring:(I)Ljava/lang/String;\n+  #117 = Utf8               (I)Ljava/lang/String;\n+  #118 = Class              #119          // java/lang/NumberFormatException\n+  #119 = Utf8               java/lang/NumberFormatException\n+  #120 = String             #121          // The fraction could not be parsed as the format X Y/Z\n+  #121 = Utf8               The fraction could not be parsed as the format X Y/Z\n+  #122 = Methodref          #118.#31      // java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+  #123 = Methodref          #8.#124       // org/apache/commons/lang3/math/Fraction.getFraction:(III)Lorg/apache/commons/lang3/math/Fraction;\n+  #124 = NameAndType        #105:#125     // getFraction:(III)Lorg/apache/commons/lang3/math/Fraction;\n+  #125 = Utf8               (III)Lorg/apache/commons/lang3/math/Fraction;\n+  #126 = Methodref          #8.#127       // org/apache/commons/lang3/math/Fraction.getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n+  #127 = NameAndType        #105:#82      // getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n+  #128 = Methodref          #60.#129      // java/lang/Math.abs:(I)I\n+  #129 = NameAndType        #63:#98       // abs:(I)I\n+  #130 = Methodref          #8.#131       // org/apache/commons/lang3/math/Fraction.equals:(Ljava/lang/Object;)Z\n+  #131 = NameAndType        #132:#133     // equals:(Ljava/lang/Object;)Z\n+  #132 = Utf8               equals\n+  #133 = Utf8               (Ljava/lang/Object;)Z\n+  #134 = String             #135          // Unable to invert zero.\n+  #135 = Utf8               Unable to invert zero.\n+  #136 = String             #137          // overflow: can\\'t negate numerator\n+  #137 = Utf8               overflow: can\\'t negate numerator\n+  #138 = String             #139          // overflow: too large to negate\n+  #139 = Utf8               overflow: too large to negate\n+  #140 = Methodref          #8.#141       // org/apache/commons/lang3/math/Fraction.negate:()Lorg/apache/commons/lang3/math/Fraction;\n+  #141 = NameAndType        #142:#143     // negate:()Lorg/apache/commons/lang3/math/Fraction;\n+  #142 = Utf8               negate\n+  #143 = Utf8               ()Lorg/apache/commons/lang3/math/Fraction;\n+  #144 = Fieldref           #8.#145       // org/apache/commons/lang3/math/Fraction.ONE:Lorg/apache/commons/lang3/math/Fraction;\n+  #145 = NameAndType        #146:#54      // ONE:Lorg/apache/commons/lang3/math/Fraction;\n+  #146 = Utf8               ONE\n+  #147 = Methodref          #8.#148       // org/apache/commons/lang3/math/Fraction.invert:()Lorg/apache/commons/lang3/math/Fraction;\n+  #148 = NameAndType        #149:#143     // invert:()Lorg/apache/commons/lang3/math/Fraction;\n+  #149 = Utf8               invert\n+  #150 = Methodref          #8.#151       // org/apache/commons/lang3/math/Fraction.pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n+  #151 = NameAndType        #152:#153     // pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n+  #152 = Utf8               pow\n+  #153 = Utf8               (I)Lorg/apache/commons/lang3/math/Fraction;\n+  #154 = Methodref          #8.#155       // org/apache/commons/lang3/math/Fraction.multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n+  #155 = NameAndType        #156:#157     // multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n+  #156 = Utf8               multiplyBy\n+  #157 = Utf8               (Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n+  #158 = String             #159          // overflow: gcd is 2^31\n+  #159 = Utf8               overflow: gcd is 2^31\n+  #160 = String             #161          // overflow: mul\n+  #161 = Utf8               overflow: mul\n+  #162 = String             #163          // overflow: mulPos\n+  #163 = Utf8               overflow: mulPos\n+  #164 = String             #165          // overflow: add\n+  #165 = Utf8               overflow: add\n+  #166 = Methodref          #8.#167       // org/apache/commons/lang3/math/Fraction.addSub:(Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;\n+  #167 = NameAndType        #168:#169     // addSub:(Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;\n+  #168 = Utf8               addSub\n+  #169 = Utf8               (Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;\n+  #170 = String             #171          // The fraction must not be null\n+  #171 = Utf8               The fraction must not be null\n+  #172 = Methodref          #8.#173       // org/apache/commons/lang3/math/Fraction.mulAndCheck:(II)I\n+  #173 = NameAndType        #174:#58      // mulAndCheck:(II)I\n+  #174 = Utf8               mulAndCheck\n+  #175 = Methodref          #8.#176       // org/apache/commons/lang3/math/Fraction.addAndCheck:(II)I\n+  #176 = NameAndType        #177:#58      // addAndCheck:(II)I\n+  #177 = Utf8               addAndCheck\n+  #178 = Methodref          #8.#179       // org/apache/commons/lang3/math/Fraction.subAndCheck:(II)I\n+  #179 = NameAndType        #180:#58      // subAndCheck:(II)I\n+  #180 = Utf8               subAndCheck\n+  #181 = Methodref          #8.#182       // org/apache/commons/lang3/math/Fraction.mulPosAndCheck:(II)I\n+  #182 = NameAndType        #183:#58      // mulPosAndCheck:(II)I\n+  #183 = Utf8               mulPosAndCheck\n+  #184 = Methodref          #185.#186     // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+  #185 = Class              #187          // java/math/BigInteger\n+  #186 = NameAndType        #188:#189     // valueOf:(J)Ljava/math/BigInteger;\n+  #187 = Utf8               java/math/BigInteger\n+  #188 = Utf8               valueOf\n+  #189 = Utf8               (J)Ljava/math/BigInteger;\n+  #190 = Methodref          #185.#191     // java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #191 = NameAndType        #192:#193     // multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #192 = Utf8               multiply\n+  #193 = Utf8               (Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #194 = Methodref          #185.#195     // java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #195 = NameAndType        #196:#193     // add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #196 = Utf8               add\n+  #197 = Methodref          #185.#198     // java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #198 = NameAndType        #199:#193     // subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #199 = Utf8               subtract\n+  #200 = Methodref          #185.#201     // java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #201 = NameAndType        #202:#193     // mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #202 = Utf8               mod\n+  #203 = Methodref          #185.#204     // java/math/BigInteger.intValue:()I\n+  #204 = NameAndType        #205:#206     // intValue:()I\n+  #205 = Utf8               intValue\n+  #206 = Utf8               ()I\n+  #207 = Methodref          #185.#208     // java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #208 = NameAndType        #209:#193     // divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #209 = Utf8               divide\n+  #210 = Methodref          #185.#211     // java/math/BigInteger.bitLength:()I\n+  #211 = NameAndType        #212:#206     // bitLength:()I\n+  #212 = Utf8               bitLength\n+  #213 = String             #214          // overflow: numerator too large after multiply\n+  #214 = Utf8               overflow: numerator too large after multiply\n+  #215 = String             #216          // The fraction to divide by must not be zero\n+  #216 = Utf8               The fraction to divide by must not be zero\n+  #217 = Methodref          #8.#218       // org/apache/commons/lang3/math/Fraction.getNumerator:()I\n+  #218 = NameAndType        #219:#206     // getNumerator:()I\n+  #219 = Utf8               getNumerator\n+  #220 = Methodref          #8.#221       // org/apache/commons/lang3/math/Fraction.getDenominator:()I\n+  #221 = NameAndType        #222:#206     // getDenominator:()I\n+  #222 = Utf8               getDenominator\n+  #223 = Class              #224          // java/lang/StringBuilder\n+  #224 = Utf8               java/lang/StringBuilder\n+  #225 = Methodref          #223.#3       // java/lang/StringBuilder.\"<init>\":()V\n+  #226 = Methodref          #223.#227     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #227 = NameAndType        #228:#229     // append:(I)Ljava/lang/StringBuilder;\n+  #228 = Utf8               append\n+  #229 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #230 = String             #231          // /\n+  #231 = Utf8               /\n+  #232 = Methodref          #223.#233     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #233 = NameAndType        #228:#234     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #234 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #235 = Methodref          #223.#236     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #236 = NameAndType        #15:#237      // toString:()Ljava/lang/String;\n+  #237 = Utf8               ()Ljava/lang/String;\n+  #238 = String             #239          // 0\n+  #239 = Utf8               0\n+  #240 = String             #241          // 1\n+  #241 = Utf8               1\n+  #242 = String             #243          // -1\n+  #243 = Utf8               -1\n+  #244 = Methodref          #8.#245       // org/apache/commons/lang3/math/Fraction.getProperNumerator:()I\n+  #245 = NameAndType        #246:#206     // getProperNumerator:()I\n+  #246 = Utf8               getProperNumerator\n+  #247 = Methodref          #8.#248       // org/apache/commons/lang3/math/Fraction.getProperWhole:()I\n+  #248 = NameAndType        #249:#206     // getProperWhole:()I\n+  #249 = Utf8               getProperWhole\n+  #250 = Methodref          #33.#251      // java/lang/Integer.toString:(I)Ljava/lang/String;\n+  #251 = NameAndType        #15:#117      // toString:(I)Ljava/lang/String;\n+  #252 = String             #253          //\n+  #253 = Utf8\n+  #254 = Methodref          #8.#255       // org/apache/commons/lang3/math/Fraction.compareTo:(Lorg/apache/commons/lang3/math/Fraction;)I\n+  #255 = NameAndType        #256:#257     // compareTo:(Lorg/apache/commons/lang3/math/Fraction;)I\n+  #256 = Utf8               compareTo\n+  #257 = Utf8               (Lorg/apache/commons/lang3/math/Fraction;)I\n+  #258 = Fieldref           #8.#259       // org/apache/commons/lang3/math/Fraction.ONE_HALF:Lorg/apache/commons/lang3/math/Fraction;\n+  #259 = NameAndType        #260:#54      // ONE_HALF:Lorg/apache/commons/lang3/math/Fraction;\n+  #260 = Utf8               ONE_HALF\n+  #261 = Fieldref           #8.#262       // org/apache/commons/lang3/math/Fraction.ONE_THIRD:Lorg/apache/commons/lang3/math/Fraction;\n+  #262 = NameAndType        #263:#54      // ONE_THIRD:Lorg/apache/commons/lang3/math/Fraction;\n+  #263 = Utf8               ONE_THIRD\n+  #264 = Fieldref           #8.#265       // org/apache/commons/lang3/math/Fraction.TWO_THIRDS:Lorg/apache/commons/lang3/math/Fraction;\n+  #265 = NameAndType        #266:#54      // TWO_THIRDS:Lorg/apache/commons/lang3/math/Fraction;\n+  #266 = Utf8               TWO_THIRDS\n+  #267 = Fieldref           #8.#268       // org/apache/commons/lang3/math/Fraction.ONE_QUARTER:Lorg/apache/commons/lang3/math/Fraction;\n+  #268 = NameAndType        #269:#54      // ONE_QUARTER:Lorg/apache/commons/lang3/math/Fraction;\n+  #269 = Utf8               ONE_QUARTER\n+  #270 = Fieldref           #8.#271       // org/apache/commons/lang3/math/Fraction.TWO_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n+  #271 = NameAndType        #272:#54      // TWO_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n+  #272 = Utf8               TWO_QUARTERS\n+  #273 = Fieldref           #8.#274       // org/apache/commons/lang3/math/Fraction.THREE_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n+  #274 = NameAndType        #275:#54      // THREE_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n+  #275 = Utf8               THREE_QUARTERS\n+  #276 = Fieldref           #8.#277       // org/apache/commons/lang3/math/Fraction.ONE_FIFTH:Lorg/apache/commons/lang3/math/Fraction;\n+  #277 = NameAndType        #278:#54      // ONE_FIFTH:Lorg/apache/commons/lang3/math/Fraction;\n+  #278 = Utf8               ONE_FIFTH\n+  #279 = Fieldref           #8.#280       // org/apache/commons/lang3/math/Fraction.TWO_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n+  #280 = NameAndType        #281:#54      // TWO_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n+  #281 = Utf8               TWO_FIFTHS\n+  #282 = Fieldref           #8.#283       // org/apache/commons/lang3/math/Fraction.THREE_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n+  #283 = NameAndType        #284:#54      // THREE_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n+  #284 = Utf8               THREE_FIFTHS\n+  #285 = Fieldref           #8.#286       // org/apache/commons/lang3/math/Fraction.FOUR_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n+  #286 = NameAndType        #287:#54      // FOUR_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n+  #287 = Utf8               FOUR_FIFTHS\n+  #288 = Class              #289          // java/lang/Comparable\n+  #289 = Utf8               java/lang/Comparable\n+  #290 = Utf8               serialVersionUID\n+  #291 = Utf8               J\n+  #292 = Utf8               ConstantValue\n+  #293 = Long               65382027393090l\n+  #295 = Utf8               Code\n+  #296 = Utf8               LineNumberTable\n+  #297 = Utf8               LocalVariableTable\n+  #298 = Utf8               this\n+  #299 = Utf8               StackMapTable\n+  #300 = Utf8               numeratorValue\n+  #301 = Utf8               whole\n+  #302 = Utf8               gcd\n+  #303 = Utf8               value\n+  #304 = Utf8               D\n+  #305 = Utf8               sign\n+  #306 = Utf8               wholeNumber\n+  #307 = Utf8               numer0\n+  #308 = Utf8               denom0\n+  #309 = Utf8               numer1\n+  #310 = Utf8               denom1\n+  #311 = Utf8               numer2\n+  #312 = Utf8               denom2\n+  #313 = Utf8               a1\n+  #314 = Utf8               a2\n+  #315 = Utf8               x1\n+  #316 = Utf8               x2\n+  #317 = Utf8               y1\n+  #318 = Utf8               y2\n+  #319 = Utf8               delta1\n+  #320 = Utf8               delta2\n+  #321 = Utf8               fraction\n+  #322 = Utf8               i\n+  #323 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/lang3/math/Fraction;\n+  #324 = Utf8               numer\n+  #325 = Utf8               denom\n+  #326 = Utf8               str\n+  #327 = Utf8               pos\n+  #328 = Utf8               longValue\n+  #329 = Utf8               ()J\n+  #330 = Utf8               floatValue\n+  #331 = Utf8               ()F\n+  #332 = Utf8               doubleValue\n+  #333 = Utf8               ()D\n+  #334 = Utf8               reduce\n+  #335 = Utf8               f\n+  #336 = Utf8               power\n+  #337 = Utf8               u\n+  #338 = Utf8               v\n+  #339 = Utf8               k\n+  #340 = Utf8               t\n+  #341 = Utf8               x\n+  #342 = Utf8               y\n+  #343 = Utf8               m\n+  #344 = Utf8               s\n+  #345 = Utf8               uvp\n+  #346 = Utf8               upv\n+  #347 = Utf8               isAdd\n+  #348 = Utf8               Z\n+  #349 = Utf8               d1\n+  #350 = Utf8               Ljava/math/BigInteger;\n+  #351 = Utf8               tmodd1\n+  #352 = Utf8               d2\n+  #353 = Utf8               w\n+  #354 = Utf8               divideBy\n+  #355 = Utf8               obj\n+  #356 = Utf8               Ljava/lang/Object;\n+  #357 = Utf8               other\n+  #358 = Utf8               first\n+  #359 = Utf8               second\n+  #360 = Utf8               properNumerator\n+  #361 = Utf8               (Ljava/lang/Object;)I\n+  #362 = Utf8               <clinit>\n+  #363 = Utf8               Signature\n+  #364 = Utf8               Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/math/Fraction;>;\n+  #365 = Utf8               SourceFile\n+  #366 = Utf8               Fraction.java\n {\n   private static final long serialVersionUID = 65382027393090l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 65382027393090l\n \n   public static final org.apache.commons.lang3.math.Fraction ZERO;\n@@ -448,27 +448,27 @@\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Number.\"<init>\":()V\n          4: aload_0\n          5: iconst_0\n-         6: putfield      #2                  // Field hashCode:I\n+         6: putfield      #7                  // Field hashCode:I\n          9: aload_0\n         10: aconst_null\n-        11: putfield      #3                  // Field toString:Ljava/lang/String;\n+        11: putfield      #13                 // Field toString:Ljava/lang/String;\n         14: aload_0\n         15: aconst_null\n-        16: putfield      #4                  // Field toProperString:Ljava/lang/String;\n+        16: putfield      #17                 // Field toProperString:Ljava/lang/String;\n         19: aload_0\n         20: iload_1\n-        21: putfield      #5                  // Field numerator:I\n+        21: putfield      #20                 // Field numerator:I\n         24: aload_0\n         25: iload_2\n-        26: putfield      #6                  // Field denominator:I\n+        26: putfield      #23                 // Field denominator:I\n         29: return\n       LineNumberTable:\n         line 125: 0\n         line 107: 4\n         line 111: 9\n         line 115: 14\n         line 126: 19\n@@ -483,43 +483,43 @@\n   public static org.apache.commons.lang3.math.Fraction getFraction(int, int);\n     descriptor: (II)Lorg/apache/commons/lang3/math/Fraction;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: iload_1\n          1: ifne          14\n-         4: new           #7                  // class java/lang/ArithmeticException\n+         4: new           #26                 // class java/lang/ArithmeticException\n          7: dup\n-         8: ldc           #8                  // String The denominator must not be zero\n-        10: invokespecial #9                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #28                 // String The denominator must not be zero\n+        10: invokespecial #30                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: iload_1\n         15: ifge          46\n         18: iload_0\n-        19: ldc           #11                 // int -2147483648\n+        19: ldc           #35                 // int -2147483648\n         21: if_icmpeq     30\n         24: iload_1\n-        25: ldc           #11                 // int -2147483648\n+        25: ldc           #35                 // int -2147483648\n         27: if_icmpne     40\n-        30: new           #7                  // class java/lang/ArithmeticException\n+        30: new           #26                 // class java/lang/ArithmeticException\n         33: dup\n-        34: ldc           #12                 // String overflow: can\\'t negate\n-        36: invokespecial #9                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        34: ldc           #36                 // String overflow: can\\'t negate\n+        36: invokespecial #30                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         39: athrow\n         40: iload_0\n         41: ineg\n         42: istore_0\n         43: iload_1\n         44: ineg\n         45: istore_1\n-        46: new           #13                 // class org/apache/commons/lang3/math/Fraction\n+        46: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         49: dup\n         50: iload_0\n         51: iload_1\n-        52: invokespecial #14                 // Method \"<init>\":(II)V\n+        52: invokespecial #38                 // Method \"<init>\":(II)V\n         55: areturn\n       LineNumberTable:\n         line 143: 0\n         line 144: 4\n         line 146: 14\n         line 147: 18\n         line 148: 30\n@@ -539,32 +539,32 @@\n   public static org.apache.commons.lang3.math.Fraction getFraction(int, int, int);\n     descriptor: (III)Lorg/apache/commons/lang3/math/Fraction;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=5, args_size=3\n          0: iload_2\n          1: ifne          14\n-         4: new           #7                  // class java/lang/ArithmeticException\n+         4: new           #26                 // class java/lang/ArithmeticException\n          7: dup\n-         8: ldc           #8                  // String The denominator must not be zero\n-        10: invokespecial #9                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #28                 // String The denominator must not be zero\n+        10: invokespecial #30                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: iload_2\n         15: ifge          28\n-        18: new           #7                  // class java/lang/ArithmeticException\n+        18: new           #26                 // class java/lang/ArithmeticException\n         21: dup\n-        22: ldc           #15                 // String The denominator must not be negative\n-        24: invokespecial #9                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        22: ldc           #41                 // String The denominator must not be negative\n+        24: invokespecial #30                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         27: athrow\n         28: iload_1\n         29: ifge          42\n-        32: new           #7                  // class java/lang/ArithmeticException\n+        32: new           #26                 // class java/lang/ArithmeticException\n         35: dup\n-        36: ldc           #16                 // String The numerator must not be negative\n-        38: invokespecial #9                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        36: ldc           #43                 // String The numerator must not be negative\n+        38: invokespecial #30                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         41: athrow\n         42: iload_0\n         43: ifge          58\n         46: iload_0\n         47: i2l\n         48: iload_2\n         49: i2l\n@@ -580,32 +580,32 @@\n         61: i2l\n         62: lmul\n         63: iload_1\n         64: i2l\n         65: ladd\n         66: lstore_3\n         67: lload_3\n-        68: ldc2_w        #17                 // long -2147483648l\n+        68: ldc2_w        #45                 // long -2147483648l\n         71: lcmp\n         72: iflt          83\n         75: lload_3\n-        76: ldc2_w        #19                 // long 2147483647l\n+        76: ldc2_w        #47                 // long 2147483647l\n         79: lcmp\n         80: ifle          93\n-        83: new           #7                  // class java/lang/ArithmeticException\n+        83: new           #26                 // class java/lang/ArithmeticException\n         86: dup\n-        87: ldc           #21                 // String Numerator too large to represent as an Integer.\n-        89: invokespecial #9                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        87: ldc           #49                 // String Numerator too large to represent as an Integer.\n+        89: invokespecial #30                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         92: athrow\n-        93: new           #13                 // class org/apache/commons/lang3/math/Fraction\n+        93: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         96: dup\n         97: lload_3\n         98: l2i\n         99: iload_2\n-       100: invokespecial #14                 // Method \"<init>\":(II)V\n+       100: invokespecial #38                 // Method \"<init>\":(II)V\n        103: areturn\n       LineNumberTable:\n         line 173: 0\n         line 174: 4\n         line 176: 14\n         line 177: 18\n         line 179: 28\n@@ -637,25 +637,25 @@\n   public static org.apache.commons.lang3.math.Fraction getReducedFraction(int, int);\n     descriptor: (II)Lorg/apache/commons/lang3/math/Fraction;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=2\n          0: iload_1\n          1: ifne          14\n-         4: new           #7                  // class java/lang/ArithmeticException\n+         4: new           #26                 // class java/lang/ArithmeticException\n          7: dup\n-         8: ldc           #8                  // String The denominator must not be zero\n-        10: invokespecial #9                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #28                 // String The denominator must not be zero\n+        10: invokespecial #30                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: iload_0\n         15: ifne          22\n-        18: getstatic     #22                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;\n+        18: getstatic     #51                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;\n         21: areturn\n         22: iload_1\n-        23: ldc           #11                 // int -2147483648\n+        23: ldc           #35                 // int -2147483648\n         25: if_icmpne     42\n         28: iload_0\n         29: iconst_1\n         30: iand\n         31: ifne          42\n         34: iload_0\n         35: iconst_2\n@@ -664,47 +664,47 @@\n         38: iload_1\n         39: iconst_2\n         40: idiv\n         41: istore_1\n         42: iload_1\n         43: ifge          74\n         46: iload_0\n-        47: ldc           #11                 // int -2147483648\n+        47: ldc           #35                 // int -2147483648\n         49: if_icmpeq     58\n         52: iload_1\n-        53: ldc           #11                 // int -2147483648\n+        53: ldc           #35                 // int -2147483648\n         55: if_icmpne     68\n-        58: new           #7                  // class java/lang/ArithmeticException\n+        58: new           #26                 // class java/lang/ArithmeticException\n         61: dup\n-        62: ldc           #12                 // String overflow: can\\'t negate\n-        64: invokespecial #9                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        62: ldc           #36                 // String overflow: can\\'t negate\n+        64: invokespecial #30                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         67: athrow\n         68: iload_0\n         69: ineg\n         70: istore_0\n         71: iload_1\n         72: ineg\n         73: istore_1\n         74: iload_0\n         75: iload_1\n-        76: invokestatic  #23                 // Method greatestCommonDivisor:(II)I\n+        76: invokestatic  #55                 // Method greatestCommonDivisor:(II)I\n         79: istore_2\n         80: iload_0\n         81: iload_2\n         82: idiv\n         83: istore_0\n         84: iload_1\n         85: iload_2\n         86: idiv\n         87: istore_1\n-        88: new           #13                 // class org/apache/commons/lang3/math/Fraction\n+        88: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         91: dup\n         92: iload_0\n         93: iload_1\n-        94: invokespecial #14                 // Method \"<init>\":(II)V\n+        94: invokespecial #38                 // Method \"<init>\":(II)V\n         97: areturn\n       LineNumberTable:\n         line 209: 0\n         line 210: 4\n         line 212: 14\n         line 213: 18\n         line 216: 22\n@@ -742,27 +742,27 @@\n          2: dcmpg\n          3: ifge          10\n          6: iconst_m1\n          7: goto          11\n         10: iconst_1\n         11: istore_2\n         12: dload_0\n-        13: invokestatic  #24                 // Method java/lang/Math.abs:(D)D\n+        13: invokestatic  #59                 // Method java/lang/Math.abs:(D)D\n         16: dstore_0\n         17: dload_0\n-        18: ldc2_w        #25                 // double 2.147483647E9d\n+        18: ldc2_w        #65                 // double 2.147483647E9d\n         21: dcmpl\n         22: ifgt          32\n         25: dload_0\n-        26: invokestatic  #27                 // Method java/lang/Double.isNaN:(D)Z\n+        26: invokestatic  #67                 // Method java/lang/Double.isNaN:(D)Z\n         29: ifeq          42\n-        32: new           #7                  // class java/lang/ArithmeticException\n+        32: new           #26                 // class java/lang/ArithmeticException\n         35: dup\n-        36: ldc           #28                 // String The value must not be greater than Integer.MAX_VALUE or NaN\n-        38: invokespecial #9                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        36: ldc           #73                 // String The value must not be greater than Integer.MAX_VALUE or NaN\n+        38: invokespecial #30                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         41: athrow\n         42: dload_0\n         43: d2i\n         44: istore_3\n         45: dload_0\n         46: iload_3\n         47: i2d\n@@ -792,15 +792,15 @@\n         81: dload_0\n         82: iload         10\n         84: i2d\n         85: dsub\n         86: dstore        16\n         88: dconst_0\n         89: dstore        18\n-        91: ldc2_w        #30                 // double 1.7976931348623157E308d\n+        91: ldc2_w        #75                 // double 1.7976931348623157E308d\n         94: dstore        22\n         96: iconst_1\n         97: istore        26\n         99: dload         22\n        101: dstore        20\n        103: dload         12\n        105: dload         16\n@@ -833,15 +833,15 @@\n        149: iload         9\n        151: i2d\n        152: ddiv\n        153: dstore        24\n        155: dload_0\n        156: dload         24\n        158: dsub\n-       159: invokestatic  #24                 // Method java/lang/Math.abs:(D)D\n+       159: invokestatic  #59                 // Method java/lang/Math.abs:(D)D\n        162: dstore        22\n        164: iload         11\n        166: istore        10\n        168: dload         14\n        170: dstore        12\n        172: dload         18\n        174: dstore        16\n@@ -865,28 +865,28 @@\n        213: ifle          223\n        216: iload         26\n        218: bipush        25\n        220: if_icmplt     99\n        223: iload         26\n        225: bipush        25\n        227: if_icmpne     240\n-       230: new           #7                  // class java/lang/ArithmeticException\n+       230: new           #26                 // class java/lang/ArithmeticException\n        233: dup\n-       234: ldc           #32                 // String Unable to convert double to fraction\n-       236: invokespecial #9                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+       234: ldc           #77                 // String Unable to convert double to fraction\n+       236: invokespecial #30                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n        239: athrow\n        240: iload         4\n        242: iload_3\n        243: iload         5\n        245: imul\n        246: iadd\n        247: iload_2\n        248: imul\n        249: iload         5\n-       251: invokestatic  #33                 // Method getReducedFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n+       251: invokestatic  #79                 // Method getReducedFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n        254: areturn\n       LineNumberTable:\n         line 249: 0\n         line 250: 12\n         line 251: 17\n         line 252: 32\n         line 254: 42\n@@ -970,102 +970,102 @@\n     Code:\n       stack=3, locals=5, args_size=1\n          0: aload_0\n          1: ifnull        8\n          4: iconst_1\n          5: goto          9\n          8: iconst_0\n-         9: ldc           #34                 // String The string must not be null\n+         9: ldc           #83                 // String The string must not be null\n         11: iconst_0\n-        12: anewarray     #35                 // class java/lang/Object\n-        15: invokestatic  #36                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        12: anewarray     #85                 // class java/lang/Object\n+        15: invokestatic  #87                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         18: aload_0\n         19: bipush        46\n-        21: invokevirtual #37                 // Method java/lang/String.indexOf:(I)I\n+        21: invokevirtual #93                 // Method java/lang/String.indexOf:(I)I\n         24: istore_1\n         25: iload_1\n         26: iflt          37\n         29: aload_0\n-        30: invokestatic  #38                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D\n-        33: invokestatic  #39                 // Method getFraction:(D)Lorg/apache/commons/lang3/math/Fraction;\n+        30: invokestatic  #99                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D\n+        33: invokestatic  #103                // Method getFraction:(D)Lorg/apache/commons/lang3/math/Fraction;\n         36: areturn\n         37: aload_0\n         38: bipush        32\n-        40: invokevirtual #37                 // Method java/lang/String.indexOf:(I)I\n+        40: invokevirtual #93                 // Method java/lang/String.indexOf:(I)I\n         43: istore_1\n         44: iload_1\n         45: ifle          117\n         48: aload_0\n         49: iconst_0\n         50: iload_1\n-        51: invokevirtual #40                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n-        54: invokestatic  #41                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+        51: invokevirtual #107                // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        54: invokestatic  #111                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n         57: istore_2\n         58: aload_0\n         59: iload_1\n         60: iconst_1\n         61: iadd\n-        62: invokevirtual #42                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n+        62: invokevirtual #115                // Method java/lang/String.substring:(I)Ljava/lang/String;\n         65: astore_0\n         66: aload_0\n         67: bipush        47\n-        69: invokevirtual #37                 // Method java/lang/String.indexOf:(I)I\n+        69: invokevirtual #93                 // Method java/lang/String.indexOf:(I)I\n         72: istore_1\n         73: iload_1\n         74: ifge          87\n-        77: new           #43                 // class java/lang/NumberFormatException\n+        77: new           #118                // class java/lang/NumberFormatException\n         80: dup\n-        81: ldc           #44                 // String The fraction could not be parsed as the format X Y/Z\n-        83: invokespecial #45                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+        81: ldc           #120                // String The fraction could not be parsed as the format X Y/Z\n+        83: invokespecial #122                // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n         86: athrow\n         87: aload_0\n         88: iconst_0\n         89: iload_1\n-        90: invokevirtual #40                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n-        93: invokestatic  #41                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+        90: invokevirtual #107                // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        93: invokestatic  #111                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n         96: istore_3\n         97: aload_0\n         98: iload_1\n         99: iconst_1\n        100: iadd\n-       101: invokevirtual #42                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n-       104: invokestatic  #41                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+       101: invokevirtual #115                // Method java/lang/String.substring:(I)Ljava/lang/String;\n+       104: invokestatic  #111                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n        107: istore        4\n        109: iload_2\n        110: iload_3\n        111: iload         4\n-       113: invokestatic  #46                 // Method getFraction:(III)Lorg/apache/commons/lang3/math/Fraction;\n+       113: invokestatic  #123                // Method getFraction:(III)Lorg/apache/commons/lang3/math/Fraction;\n        116: areturn\n        117: aload_0\n        118: bipush        47\n-       120: invokevirtual #37                 // Method java/lang/String.indexOf:(I)I\n+       120: invokevirtual #93                 // Method java/lang/String.indexOf:(I)I\n        123: istore_1\n        124: iload_1\n        125: ifge          137\n        128: aload_0\n-       129: invokestatic  #41                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+       129: invokestatic  #111                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n        132: iconst_1\n-       133: invokestatic  #47                 // Method getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n+       133: invokestatic  #126                // Method getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n        136: areturn\n        137: aload_0\n        138: iconst_0\n        139: iload_1\n-       140: invokevirtual #40                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n-       143: invokestatic  #41                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+       140: invokevirtual #107                // Method java/lang/String.substring:(II)Ljava/lang/String;\n+       143: invokestatic  #111                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n        146: istore_2\n        147: aload_0\n        148: iload_1\n        149: iconst_1\n        150: iadd\n-       151: invokevirtual #42                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n-       154: invokestatic  #41                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+       151: invokevirtual #115                // Method java/lang/String.substring:(I)Ljava/lang/String;\n+       154: invokestatic  #111                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n        157: istore_3\n        158: iload_2\n        159: iload_3\n-       160: invokestatic  #47                 // Method getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n+       160: invokestatic  #126                // Method getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n        163: areturn\n       LineNumberTable:\n         line 315: 0\n         line 317: 18\n         line 318: 25\n         line 319: 29\n         line 323: 37\n@@ -1109,98 +1109,98 @@\n \n   public int getNumerator();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field numerator:I\n+         1: getfield      #20                 // Field numerator:I\n          4: ireturn\n       LineNumberTable:\n         line 359: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/math/Fraction;\n \n   public int getDenominator();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field denominator:I\n+         1: getfield      #23                 // Field denominator:I\n          4: ireturn\n       LineNumberTable:\n         line 368: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/math/Fraction;\n \n   public int getProperNumerator();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field numerator:I\n+         1: getfield      #20                 // Field numerator:I\n          4: aload_0\n-         5: getfield      #6                  // Field denominator:I\n+         5: getfield      #23                 // Field denominator:I\n          8: irem\n-         9: invokestatic  #48                 // Method java/lang/Math.abs:(I)I\n+         9: invokestatic  #128                // Method java/lang/Math.abs:(I)I\n         12: ireturn\n       LineNumberTable:\n         line 383: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/lang3/math/Fraction;\n \n   public int getProperWhole();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field numerator:I\n+         1: getfield      #20                 // Field numerator:I\n          4: aload_0\n-         5: getfield      #6                  // Field denominator:I\n+         5: getfield      #23                 // Field denominator:I\n          8: idiv\n          9: ireturn\n       LineNumberTable:\n         line 398: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/lang3/math/Fraction;\n \n   public int intValue();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field numerator:I\n+         1: getfield      #20                 // Field numerator:I\n          4: aload_0\n-         5: getfield      #6                  // Field denominator:I\n+         5: getfield      #23                 // Field denominator:I\n          8: idiv\n          9: ireturn\n       LineNumberTable:\n         line 412: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/lang3/math/Fraction;\n \n   public long longValue();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field numerator:I\n+         1: getfield      #20                 // Field numerator:I\n          4: i2l\n          5: aload_0\n-         6: getfield      #6                  // Field denominator:I\n+         6: getfield      #23                 // Field denominator:I\n          9: i2l\n         10: ldiv\n         11: lreturn\n       LineNumberTable:\n         line 423: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1208,18 +1208,18 @@\n \n   public float floatValue();\n     descriptor: ()F\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field numerator:I\n+         1: getfield      #20                 // Field numerator:I\n          4: i2f\n          5: aload_0\n-         6: getfield      #6                  // Field denominator:I\n+         6: getfield      #23                 // Field denominator:I\n          9: i2f\n         10: fdiv\n         11: freturn\n       LineNumberTable:\n         line 434: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1227,18 +1227,18 @@\n \n   public double doubleValue();\n     descriptor: ()D\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field numerator:I\n+         1: getfield      #20                 // Field numerator:I\n          4: i2d\n          5: aload_0\n-         6: getfield      #6                  // Field denominator:I\n+         6: getfield      #23                 // Field denominator:I\n          9: i2d\n         10: ddiv\n         11: dreturn\n       LineNumberTable:\n         line 445: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1246,45 +1246,45 @@\n \n   public org.apache.commons.lang3.math.Fraction reduce();\n     descriptor: ()Lorg/apache/commons/lang3/math/Fraction;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field numerator:I\n+         1: getfield      #20                 // Field numerator:I\n          4: ifne          25\n          7: aload_0\n-         8: getstatic     #22                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;\n-        11: invokevirtual #49                 // Method equals:(Ljava/lang/Object;)Z\n+         8: getstatic     #51                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;\n+        11: invokevirtual #130                // Method equals:(Ljava/lang/Object;)Z\n         14: ifeq          21\n         17: aload_0\n         18: goto          24\n-        21: getstatic     #22                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;\n+        21: getstatic     #51                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;\n         24: areturn\n         25: aload_0\n-        26: getfield      #5                  // Field numerator:I\n-        29: invokestatic  #48                 // Method java/lang/Math.abs:(I)I\n+        26: getfield      #20                 // Field numerator:I\n+        29: invokestatic  #128                // Method java/lang/Math.abs:(I)I\n         32: aload_0\n-        33: getfield      #6                  // Field denominator:I\n-        36: invokestatic  #23                 // Method greatestCommonDivisor:(II)I\n+        33: getfield      #23                 // Field denominator:I\n+        36: invokestatic  #55                 // Method greatestCommonDivisor:(II)I\n         39: istore_1\n         40: iload_1\n         41: iconst_1\n         42: if_icmpne     47\n         45: aload_0\n         46: areturn\n         47: aload_0\n-        48: getfield      #5                  // Field numerator:I\n+        48: getfield      #20                 // Field numerator:I\n         51: iload_1\n         52: idiv\n         53: aload_0\n-        54: getfield      #6                  // Field denominator:I\n+        54: getfield      #23                 // Field denominator:I\n         57: iload_1\n         58: idiv\n-        59: invokestatic  #47                 // Method getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n+        59: invokestatic  #126                // Method getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n         62: areturn\n       LineNumberTable:\n         line 461: 0\n         line 462: 7\n         line 464: 25\n         line 465: 40\n         line 466: 45\n@@ -1304,50 +1304,50 @@\n \n   public org.apache.commons.lang3.math.Fraction invert();\n     descriptor: ()Lorg/apache/commons/lang3/math/Fraction;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field numerator:I\n+         1: getfield      #20                 // Field numerator:I\n          4: ifne          17\n-         7: new           #7                  // class java/lang/ArithmeticException\n+         7: new           #26                 // class java/lang/ArithmeticException\n         10: dup\n-        11: ldc           #50                 // String Unable to invert zero.\n-        13: invokespecial #9                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #134                // String Unable to invert zero.\n+        13: invokespecial #30                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: getfield      #5                  // Field numerator:I\n-        21: ldc           #11                 // int -2147483648\n+        18: getfield      #20                 // Field numerator:I\n+        21: ldc           #35                 // int -2147483648\n         23: if_icmpne     36\n-        26: new           #7                  // class java/lang/ArithmeticException\n+        26: new           #26                 // class java/lang/ArithmeticException\n         29: dup\n-        30: ldc           #51                 // String overflow: can\\'t negate numerator\n-        32: invokespecial #9                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        30: ldc           #136                // String overflow: can\\'t negate numerator\n+        32: invokespecial #30                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         35: athrow\n         36: aload_0\n-        37: getfield      #5                  // Field numerator:I\n+        37: getfield      #20                 // Field numerator:I\n         40: ifge          61\n-        43: new           #13                 // class org/apache/commons/lang3/math/Fraction\n+        43: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         46: dup\n         47: aload_0\n-        48: getfield      #6                  // Field denominator:I\n+        48: getfield      #23                 // Field denominator:I\n         51: ineg\n         52: aload_0\n-        53: getfield      #5                  // Field numerator:I\n+        53: getfield      #20                 // Field numerator:I\n         56: ineg\n-        57: invokespecial #14                 // Method \"<init>\":(II)V\n+        57: invokespecial #38                 // Method \"<init>\":(II)V\n         60: areturn\n-        61: new           #13                 // class org/apache/commons/lang3/math/Fraction\n+        61: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         64: dup\n         65: aload_0\n-        66: getfield      #6                  // Field denominator:I\n+        66: getfield      #23                 // Field denominator:I\n         69: aload_0\n-        70: getfield      #5                  // Field numerator:I\n-        73: invokespecial #14                 // Method \"<init>\":(II)V\n+        70: getfield      #20                 // Field numerator:I\n+        73: invokespecial #38                 // Method \"<init>\":(II)V\n         76: areturn\n       LineNumberTable:\n         line 481: 0\n         line 482: 7\n         line 484: 17\n         line 485: 26\n         line 487: 36\n@@ -1363,30 +1363,30 @@\n \n   public org.apache.commons.lang3.math.Fraction negate();\n     descriptor: ()Lorg/apache/commons/lang3/math/Fraction;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field numerator:I\n-         4: ldc           #11                 // int -2147483648\n+         1: getfield      #20                 // Field numerator:I\n+         4: ldc           #35                 // int -2147483648\n          6: if_icmpne     19\n-         9: new           #7                  // class java/lang/ArithmeticException\n+         9: new           #26                 // class java/lang/ArithmeticException\n         12: dup\n-        13: ldc           #52                 // String overflow: too large to negate\n-        15: invokespecial #9                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        13: ldc           #138                // String overflow: too large to negate\n+        15: invokespecial #30                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         18: athrow\n-        19: new           #13                 // class org/apache/commons/lang3/math/Fraction\n+        19: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         22: dup\n         23: aload_0\n-        24: getfield      #5                  // Field numerator:I\n+        24: getfield      #20                 // Field numerator:I\n         27: ineg\n         28: aload_0\n-        29: getfield      #6                  // Field denominator:I\n-        32: invokespecial #14                 // Method \"<init>\":(II)V\n+        29: getfield      #23                 // Field denominator:I\n+        32: invokespecial #38                 // Method \"<init>\":(II)V\n         35: areturn\n       LineNumberTable:\n         line 502: 0\n         line 503: 9\n         line 505: 19\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1396,20 +1396,20 @@\n \n   public org.apache.commons.lang3.math.Fraction abs();\n     descriptor: ()Lorg/apache/commons/lang3/math/Fraction;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field numerator:I\n+         1: getfield      #20                 // Field numerator:I\n          4: iflt          9\n          7: aload_0\n          8: areturn\n          9: aload_0\n-        10: invokevirtual #53                 // Method negate:()Lorg/apache/commons/lang3/math/Fraction;\n+        10: invokevirtual #140                // Method negate:()Lorg/apache/commons/lang3/math/Fraction;\n         13: areturn\n       LineNumberTable:\n         line 518: 0\n         line 519: 7\n         line 521: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1425,58 +1425,58 @@\n          0: iload_1\n          1: iconst_1\n          2: if_icmpne     7\n          5: aload_0\n          6: areturn\n          7: iload_1\n          8: ifne          15\n-        11: getstatic     #54                 // Field ONE:Lorg/apache/commons/lang3/math/Fraction;\n+        11: getstatic     #144                // Field ONE:Lorg/apache/commons/lang3/math/Fraction;\n         14: areturn\n         15: iload_1\n         16: ifge          51\n         19: iload_1\n-        20: ldc           #11                 // int -2147483648\n+        20: ldc           #35                 // int -2147483648\n         22: if_icmpne     41\n         25: aload_0\n-        26: invokevirtual #55                 // Method invert:()Lorg/apache/commons/lang3/math/Fraction;\n+        26: invokevirtual #147                // Method invert:()Lorg/apache/commons/lang3/math/Fraction;\n         29: iconst_2\n-        30: invokevirtual #56                 // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n+        30: invokevirtual #150                // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n         33: iload_1\n         34: iconst_2\n         35: idiv\n         36: ineg\n-        37: invokevirtual #56                 // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n+        37: invokevirtual #150                // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n         40: areturn\n         41: aload_0\n-        42: invokevirtual #55                 // Method invert:()Lorg/apache/commons/lang3/math/Fraction;\n+        42: invokevirtual #147                // Method invert:()Lorg/apache/commons/lang3/math/Fraction;\n         45: iload_1\n         46: ineg\n-        47: invokevirtual #56                 // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n+        47: invokevirtual #150                // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n         50: areturn\n         51: aload_0\n         52: aload_0\n-        53: invokevirtual #57                 // Method multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n+        53: invokevirtual #154                // Method multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n         56: astore_2\n         57: iload_1\n         58: iconst_2\n         59: irem\n         60: ifne          71\n         63: aload_2\n         64: iload_1\n         65: iconst_2\n         66: idiv\n-        67: invokevirtual #56                 // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n+        67: invokevirtual #150                // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n         70: areturn\n         71: aload_2\n         72: iload_1\n         73: iconst_2\n         74: idiv\n-        75: invokevirtual #56                 // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n+        75: invokevirtual #150                // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n         78: aload_0\n-        79: invokevirtual #57                 // Method multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n+        79: invokevirtual #154                // Method multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n         82: areturn\n       LineNumberTable:\n         line 537: 0\n         line 538: 5\n         line 539: 7\n         line 540: 11\n         line 541: 15\n@@ -1507,36 +1507,36 @@\n     Code:\n       stack=3, locals=4, args_size=2\n          0: iload_0\n          1: ifeq          8\n          4: iload_1\n          5: ifne          40\n          8: iload_0\n-         9: ldc           #11                 // int -2147483648\n+         9: ldc           #35                 // int -2147483648\n         11: if_icmpeq     20\n         14: iload_1\n-        15: ldc           #11                 // int -2147483648\n+        15: ldc           #35                 // int -2147483648\n         17: if_icmpne     30\n-        20: new           #7                  // class java/lang/ArithmeticException\n+        20: new           #26                 // class java/lang/ArithmeticException\n         23: dup\n-        24: ldc           #58                 // String overflow: gcd is 2^31\n-        26: invokespecial #9                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        24: ldc           #158                // String overflow: gcd is 2^31\n+        26: invokespecial #30                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         29: athrow\n         30: iload_0\n-        31: invokestatic  #48                 // Method java/lang/Math.abs:(I)I\n+        31: invokestatic  #128                // Method java/lang/Math.abs:(I)I\n         34: iload_1\n-        35: invokestatic  #48                 // Method java/lang/Math.abs:(I)I\n+        35: invokestatic  #128                // Method java/lang/Math.abs:(I)I\n         38: iadd\n         39: ireturn\n         40: iload_0\n-        41: invokestatic  #48                 // Method java/lang/Math.abs:(I)I\n+        41: invokestatic  #128                // Method java/lang/Math.abs:(I)I\n         44: iconst_1\n         45: if_icmpeq     56\n         48: iload_1\n-        49: invokestatic  #48                 // Method java/lang/Math.abs:(I)I\n+        49: invokestatic  #128                // Method java/lang/Math.abs:(I)I\n         52: iconst_1\n         53: if_icmpne     58\n         56: iconst_1\n         57: ireturn\n         58: iload_0\n         59: ifle          65\n         62: iload_0\n@@ -1569,18 +1569,18 @@\n         98: idiv\n         99: istore_1\n        100: iinc          2, 1\n        103: goto          74\n        106: iload_2\n        107: bipush        31\n        109: if_icmpne     122\n-       112: new           #7                  // class java/lang/ArithmeticException\n+       112: new           #26                 // class java/lang/ArithmeticException\n        115: dup\n-       116: ldc           #58                 // String overflow: gcd is 2^31\n-       118: invokespecial #9                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+       116: ldc           #158                // String overflow: gcd is 2^31\n+       118: invokespecial #30                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n        121: athrow\n        122: iload_0\n        123: iconst_1\n        124: iand\n        125: iconst_1\n        126: if_icmpne     133\n        129: iload_1\n@@ -1687,25 +1687,25 @@\n          0: iload_0\n          1: i2l\n          2: iload_1\n          3: i2l\n          4: lmul\n          5: lstore_2\n          6: lload_2\n-         7: ldc2_w        #17                 // long -2147483648l\n+         7: ldc2_w        #45                 // long -2147483648l\n         10: lcmp\n         11: iflt          22\n         14: lload_2\n-        15: ldc2_w        #19                 // long 2147483647l\n+        15: ldc2_w        #47                 // long 2147483647l\n         18: lcmp\n         19: ifle          32\n-        22: new           #7                  // class java/lang/ArithmeticException\n+        22: new           #26                 // class java/lang/ArithmeticException\n         25: dup\n-        26: ldc           #59                 // String overflow: mul\n-        28: invokespecial #9                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        26: ldc           #160                // String overflow: mul\n+        28: invokespecial #30                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         31: athrow\n         32: lload_2\n         33: l2i\n         34: ireturn\n       LineNumberTable:\n         line 635: 0\n         line 636: 6\n@@ -1730,21 +1730,21 @@\n          0: iload_0\n          1: i2l\n          2: iload_1\n          3: i2l\n          4: lmul\n          5: lstore_2\n          6: lload_2\n-         7: ldc2_w        #19                 // long 2147483647l\n+         7: ldc2_w        #47                 // long 2147483647l\n         10: lcmp\n         11: ifle          24\n-        14: new           #7                  // class java/lang/ArithmeticException\n+        14: new           #26                 // class java/lang/ArithmeticException\n         17: dup\n-        18: ldc           #60                 // String overflow: mulPos\n-        20: invokespecial #9                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        18: ldc           #162                // String overflow: mulPos\n+        20: invokespecial #30                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         23: athrow\n         24: lload_2\n         25: l2i\n         26: ireturn\n       LineNumberTable:\n         line 653: 0\n         line 654: 6\n@@ -1768,25 +1768,25 @@\n          0: iload_0\n          1: i2l\n          2: iload_1\n          3: i2l\n          4: ladd\n          5: lstore_2\n          6: lload_2\n-         7: ldc2_w        #17                 // long -2147483648l\n+         7: ldc2_w        #45                 // long -2147483648l\n         10: lcmp\n         11: iflt          22\n         14: lload_2\n-        15: ldc2_w        #19                 // long 2147483647l\n+        15: ldc2_w        #47                 // long 2147483647l\n         18: lcmp\n         19: ifle          32\n-        22: new           #7                  // class java/lang/ArithmeticException\n+        22: new           #26                 // class java/lang/ArithmeticException\n         25: dup\n-        26: ldc           #61                 // String overflow: add\n-        28: invokespecial #9                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        26: ldc           #164                // String overflow: add\n+        28: invokespecial #30                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         31: athrow\n         32: lload_2\n         33: l2i\n         34: ireturn\n       LineNumberTable:\n         line 670: 0\n         line 671: 6\n@@ -1811,25 +1811,25 @@\n          0: iload_0\n          1: i2l\n          2: iload_1\n          3: i2l\n          4: lsub\n          5: lstore_2\n          6: lload_2\n-         7: ldc2_w        #17                 // long -2147483648l\n+         7: ldc2_w        #45                 // long -2147483648l\n         10: lcmp\n         11: iflt          22\n         14: lload_2\n-        15: ldc2_w        #19                 // long 2147483647l\n+        15: ldc2_w        #47                 // long 2147483647l\n         18: lcmp\n         19: ifle          32\n-        22: new           #7                  // class java/lang/ArithmeticException\n+        22: new           #26                 // class java/lang/ArithmeticException\n         25: dup\n-        26: ldc           #61                 // String overflow: add\n-        28: invokespecial #9                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        26: ldc           #164                // String overflow: add\n+        28: invokespecial #30                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         31: athrow\n         32: lload_2\n         33: l2i\n         34: ireturn\n       LineNumberTable:\n         line 687: 0\n         line 688: 6\n@@ -1850,15 +1850,15 @@\n     descriptor: (Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_1\n-         3: invokespecial #62                 // Method addSub:(Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;\n+         3: invokespecial #166                // Method addSub:(Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;\n          6: areturn\n       LineNumberTable:\n         line 705: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/lang3/math/Fraction;\n             0       7     1 fraction   Lorg/apache/commons/lang3/math/Fraction;\n@@ -1867,15 +1867,15 @@\n     descriptor: (Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n-         3: invokespecial #62                 // Method addSub:(Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;\n+         3: invokespecial #166                // Method addSub:(Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;\n          6: areturn\n       LineNumberTable:\n         line 719: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/lang3/math/Fraction;\n             0       7     1 fraction   Lorg/apache/commons/lang3/math/Fraction;\n@@ -1886,150 +1886,150 @@\n     Code:\n       stack=6, locals=10, args_size=3\n          0: aload_1\n          1: ifnull        8\n          4: iconst_1\n          5: goto          9\n          8: iconst_0\n-         9: ldc           #63                 // String The fraction must not be null\n+         9: ldc           #170                // String The fraction must not be null\n         11: iconst_0\n-        12: anewarray     #35                 // class java/lang/Object\n-        15: invokestatic  #36                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        12: anewarray     #85                 // class java/lang/Object\n+        15: invokestatic  #87                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         18: aload_0\n-        19: getfield      #5                  // Field numerator:I\n+        19: getfield      #20                 // Field numerator:I\n         22: ifne          38\n         25: iload_2\n         26: ifeq          33\n         29: aload_1\n         30: goto          37\n         33: aload_1\n-        34: invokevirtual #53                 // Method negate:()Lorg/apache/commons/lang3/math/Fraction;\n+        34: invokevirtual #140                // Method negate:()Lorg/apache/commons/lang3/math/Fraction;\n         37: areturn\n         38: aload_1\n-        39: getfield      #5                  // Field numerator:I\n+        39: getfield      #20                 // Field numerator:I\n         42: ifne          47\n         45: aload_0\n         46: areturn\n         47: aload_0\n-        48: getfield      #6                  // Field denominator:I\n+        48: getfield      #23                 // Field denominator:I\n         51: aload_1\n-        52: getfield      #6                  // Field denominator:I\n-        55: invokestatic  #23                 // Method greatestCommonDivisor:(II)I\n+        52: getfield      #23                 // Field denominator:I\n+        55: invokestatic  #55                 // Method greatestCommonDivisor:(II)I\n         58: istore_3\n         59: iload_3\n         60: iconst_1\n         61: if_icmpne     130\n         64: aload_0\n-        65: getfield      #5                  // Field numerator:I\n+        65: getfield      #20                 // Field numerator:I\n         68: aload_1\n-        69: getfield      #6                  // Field denominator:I\n-        72: invokestatic  #64                 // Method mulAndCheck:(II)I\n+        69: getfield      #23                 // Field denominator:I\n+        72: invokestatic  #172                // Method mulAndCheck:(II)I\n         75: istore        4\n         77: aload_1\n-        78: getfield      #5                  // Field numerator:I\n+        78: getfield      #20                 // Field numerator:I\n         81: aload_0\n-        82: getfield      #6                  // Field denominator:I\n-        85: invokestatic  #64                 // Method mulAndCheck:(II)I\n+        82: getfield      #23                 // Field denominator:I\n+        85: invokestatic  #172                // Method mulAndCheck:(II)I\n         88: istore        5\n-        90: new           #13                 // class org/apache/commons/lang3/math/Fraction\n+        90: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         93: dup\n         94: iload_2\n         95: ifeq          108\n         98: iload         4\n        100: iload         5\n-       102: invokestatic  #65                 // Method addAndCheck:(II)I\n+       102: invokestatic  #175                // Method addAndCheck:(II)I\n        105: goto          115\n        108: iload         4\n        110: iload         5\n-       112: invokestatic  #66                 // Method subAndCheck:(II)I\n+       112: invokestatic  #178                // Method subAndCheck:(II)I\n        115: aload_0\n-       116: getfield      #6                  // Field denominator:I\n+       116: getfield      #23                 // Field denominator:I\n        119: aload_1\n-       120: getfield      #6                  // Field denominator:I\n-       123: invokestatic  #67                 // Method mulPosAndCheck:(II)I\n-       126: invokespecial #14                 // Method \"<init>\":(II)V\n+       120: getfield      #23                 // Field denominator:I\n+       123: invokestatic  #181                // Method mulPosAndCheck:(II)I\n+       126: invokespecial #38                 // Method \"<init>\":(II)V\n        129: areturn\n        130: aload_0\n-       131: getfield      #5                  // Field numerator:I\n+       131: getfield      #20                 // Field numerator:I\n        134: i2l\n-       135: invokestatic  #68                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+       135: invokestatic  #184                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n        138: aload_1\n-       139: getfield      #6                  // Field denominator:I\n+       139: getfield      #23                 // Field denominator:I\n        142: iload_3\n        143: idiv\n        144: i2l\n-       145: invokestatic  #68                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n-       148: invokevirtual #69                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+       145: invokestatic  #184                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+       148: invokevirtual #190                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n        151: astore        4\n        153: aload_1\n-       154: getfield      #5                  // Field numerator:I\n+       154: getfield      #20                 // Field numerator:I\n        157: i2l\n-       158: invokestatic  #68                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+       158: invokestatic  #184                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n        161: aload_0\n-       162: getfield      #6                  // Field denominator:I\n+       162: getfield      #23                 // Field denominator:I\n        165: iload_3\n        166: idiv\n        167: i2l\n-       168: invokestatic  #68                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n-       171: invokevirtual #69                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+       168: invokestatic  #184                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+       171: invokevirtual #190                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n        174: astore        5\n        176: iload_2\n        177: ifeq          190\n        180: aload         4\n        182: aload         5\n-       184: invokevirtual #70                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+       184: invokevirtual #194                // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n        187: goto          197\n        190: aload         4\n        192: aload         5\n-       194: invokevirtual #71                 // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+       194: invokevirtual #197                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n        197: astore        6\n        199: aload         6\n        201: iload_3\n        202: i2l\n-       203: invokestatic  #68                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n-       206: invokevirtual #72                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-       209: invokevirtual #73                 // Method java/math/BigInteger.intValue:()I\n+       203: invokestatic  #184                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+       206: invokevirtual #200                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+       209: invokevirtual #203                // Method java/math/BigInteger.intValue:()I\n        212: istore        7\n        214: iload         7\n        216: ifne          223\n        219: iload_3\n        220: goto          229\n        223: iload         7\n        225: iload_3\n-       226: invokestatic  #23                 // Method greatestCommonDivisor:(II)I\n+       226: invokestatic  #55                 // Method greatestCommonDivisor:(II)I\n        229: istore        8\n        231: aload         6\n        233: iload         8\n        235: i2l\n-       236: invokestatic  #68                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n-       239: invokevirtual #74                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+       236: invokestatic  #184                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+       239: invokevirtual #207                // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n        242: astore        9\n        244: aload         9\n-       246: invokevirtual #75                 // Method java/math/BigInteger.bitLength:()I\n+       246: invokevirtual #210                // Method java/math/BigInteger.bitLength:()I\n        249: bipush        31\n        251: if_icmple     264\n-       254: new           #7                  // class java/lang/ArithmeticException\n+       254: new           #26                 // class java/lang/ArithmeticException\n        257: dup\n-       258: ldc           #76                 // String overflow: numerator too large after multiply\n-       260: invokespecial #9                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+       258: ldc           #213                // String overflow: numerator too large after multiply\n+       260: invokespecial #30                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n        263: athrow\n-       264: new           #13                 // class org/apache/commons/lang3/math/Fraction\n+       264: new           #8                  // class org/apache/commons/lang3/math/Fraction\n        267: dup\n        268: aload         9\n-       270: invokevirtual #73                 // Method java/math/BigInteger.intValue:()I\n+       270: invokevirtual #203                // Method java/math/BigInteger.intValue:()I\n        273: aload_0\n-       274: getfield      #6                  // Field denominator:I\n+       274: getfield      #23                 // Field denominator:I\n        277: iload_3\n        278: idiv\n        279: aload_1\n-       280: getfield      #6                  // Field denominator:I\n+       280: getfield      #23                 // Field denominator:I\n        283: iload         8\n        285: idiv\n-       286: invokestatic  #67                 // Method mulPosAndCheck:(II)I\n-       289: invokespecial #14                 // Method \"<init>\":(II)V\n+       286: invokestatic  #181                // Method mulPosAndCheck:(II)I\n+       289: invokespecial #38                 // Method \"<init>\":(II)V\n        292: areturn\n       LineNumberTable:\n         line 733: 0\n         line 735: 18\n         line 736: 25\n         line 738: 38\n         line 739: 45\n@@ -2100,57 +2100,57 @@\n     Code:\n       stack=4, locals=4, args_size=2\n          0: aload_1\n          1: ifnull        8\n          4: iconst_1\n          5: goto          9\n          8: iconst_0\n-         9: ldc           #63                 // String The fraction must not be null\n+         9: ldc           #170                // String The fraction must not be null\n         11: iconst_0\n-        12: anewarray     #35                 // class java/lang/Object\n-        15: invokestatic  #36                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        12: anewarray     #85                 // class java/lang/Object\n+        15: invokestatic  #87                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         18: aload_0\n-        19: getfield      #5                  // Field numerator:I\n+        19: getfield      #20                 // Field numerator:I\n         22: ifeq          32\n         25: aload_1\n-        26: getfield      #5                  // Field numerator:I\n+        26: getfield      #20                 // Field numerator:I\n         29: ifne          36\n-        32: getstatic     #22                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;\n+        32: getstatic     #51                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;\n         35: areturn\n         36: aload_0\n-        37: getfield      #5                  // Field numerator:I\n+        37: getfield      #20                 // Field numerator:I\n         40: aload_1\n-        41: getfield      #6                  // Field denominator:I\n-        44: invokestatic  #23                 // Method greatestCommonDivisor:(II)I\n+        41: getfield      #23                 // Field denominator:I\n+        44: invokestatic  #55                 // Method greatestCommonDivisor:(II)I\n         47: istore_2\n         48: aload_1\n-        49: getfield      #5                  // Field numerator:I\n+        49: getfield      #20                 // Field numerator:I\n         52: aload_0\n-        53: getfield      #6                  // Field denominator:I\n-        56: invokestatic  #23                 // Method greatestCommonDivisor:(II)I\n+        53: getfield      #23                 // Field denominator:I\n+        56: invokestatic  #55                 // Method greatestCommonDivisor:(II)I\n         59: istore_3\n         60: aload_0\n-        61: getfield      #5                  // Field numerator:I\n+        61: getfield      #20                 // Field numerator:I\n         64: iload_2\n         65: idiv\n         66: aload_1\n-        67: getfield      #5                  // Field numerator:I\n+        67: getfield      #20                 // Field numerator:I\n         70: iload_3\n         71: idiv\n-        72: invokestatic  #64                 // Method mulAndCheck:(II)I\n+        72: invokestatic  #172                // Method mulAndCheck:(II)I\n         75: aload_0\n-        76: getfield      #6                  // Field denominator:I\n+        76: getfield      #23                 // Field denominator:I\n         79: iload_3\n         80: idiv\n         81: aload_1\n-        82: getfield      #6                  // Field denominator:I\n+        82: getfield      #23                 // Field denominator:I\n         85: iload_2\n         86: idiv\n-        87: invokestatic  #67                 // Method mulPosAndCheck:(II)I\n-        90: invokestatic  #33                 // Method getReducedFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n+        87: invokestatic  #181                // Method mulPosAndCheck:(II)I\n+        90: invokestatic  #79                 // Method getReducedFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n         93: areturn\n       LineNumberTable:\n         line 781: 0\n         line 782: 18\n         line 783: 32\n         line 787: 36\n         line 788: 48\n@@ -2176,30 +2176,30 @@\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n          1: ifnull        8\n          4: iconst_1\n          5: goto          9\n          8: iconst_0\n-         9: ldc           #63                 // String The fraction must not be null\n+         9: ldc           #170                // String The fraction must not be null\n         11: iconst_0\n-        12: anewarray     #35                 // class java/lang/Object\n-        15: invokestatic  #36                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        12: anewarray     #85                 // class java/lang/Object\n+        15: invokestatic  #87                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         18: aload_1\n-        19: getfield      #5                  // Field numerator:I\n+        19: getfield      #20                 // Field numerator:I\n         22: ifne          35\n-        25: new           #7                  // class java/lang/ArithmeticException\n+        25: new           #26                 // class java/lang/ArithmeticException\n         28: dup\n-        29: ldc           #77                 // String The fraction to divide by must not be zero\n-        31: invokespecial #9                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        29: ldc           #215                // String The fraction to divide by must not be zero\n+        31: invokespecial #30                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         34: athrow\n         35: aload_0\n         36: aload_1\n-        37: invokevirtual #55                 // Method invert:()Lorg/apache/commons/lang3/math/Fraction;\n-        40: invokevirtual #57                 // Method multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n+        37: invokevirtual #147                // Method invert:()Lorg/apache/commons/lang3/math/Fraction;\n+        40: invokevirtual #154                // Method multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n         43: areturn\n       LineNumberTable:\n         line 804: 0\n         line 805: 18\n         line 806: 25\n         line 808: 35\n       LocalVariableTable:\n@@ -2219,30 +2219,30 @@\n       stack=2, locals=3, args_size=2\n          0: aload_1\n          1: aload_0\n          2: if_acmpne     7\n          5: iconst_1\n          6: ireturn\n          7: aload_1\n-         8: instanceof    #13                 // class org/apache/commons/lang3/math/Fraction\n+         8: instanceof    #8                  // class org/apache/commons/lang3/math/Fraction\n         11: ifne          16\n         14: iconst_0\n         15: ireturn\n         16: aload_1\n-        17: checkcast     #13                 // class org/apache/commons/lang3/math/Fraction\n+        17: checkcast     #8                  // class org/apache/commons/lang3/math/Fraction\n         20: astore_2\n         21: aload_0\n-        22: invokevirtual #78                 // Method getNumerator:()I\n+        22: invokevirtual #217                // Method getNumerator:()I\n         25: aload_2\n-        26: invokevirtual #78                 // Method getNumerator:()I\n+        26: invokevirtual #217                // Method getNumerator:()I\n         29: if_icmpne     47\n         32: aload_0\n-        33: invokevirtual #79                 // Method getDenominator:()I\n+        33: invokevirtual #220                // Method getDenominator:()I\n         36: aload_2\n-        37: invokevirtual #79                 // Method getDenominator:()I\n+        37: invokevirtual #220                // Method getDenominator:()I\n         40: if_icmpne     47\n         43: iconst_1\n         44: goto          48\n         47: iconst_0\n         48: ireturn\n       LineNumberTable:\n         line 824: 0\n@@ -2267,29 +2267,29 @@\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field hashCode:I\n+         1: getfield      #7                  // Field hashCode:I\n          4: ifne          27\n          7: aload_0\n          8: bipush        37\n         10: sipush        629\n         13: aload_0\n-        14: invokevirtual #78                 // Method getNumerator:()I\n+        14: invokevirtual #217                // Method getNumerator:()I\n         17: iadd\n         18: imul\n         19: aload_0\n-        20: invokevirtual #79                 // Method getDenominator:()I\n+        20: invokevirtual #220                // Method getDenominator:()I\n         23: iadd\n-        24: putfield      #2                  // Field hashCode:I\n+        24: putfield      #7                  // Field hashCode:I\n         27: aload_0\n-        28: getfield      #2                  // Field hashCode:I\n+        28: getfield      #7                  // Field hashCode:I\n         31: ireturn\n       LineNumberTable:\n         line 841: 0\n         line 843: 7\n         line 845: 27\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2304,38 +2304,38 @@\n       stack=4, locals=6, args_size=2\n          0: aload_0\n          1: aload_1\n          2: if_acmpne     7\n          5: iconst_0\n          6: ireturn\n          7: aload_0\n-         8: getfield      #5                  // Field numerator:I\n+         8: getfield      #20                 // Field numerator:I\n         11: aload_1\n-        12: getfield      #5                  // Field numerator:I\n+        12: getfield      #20                 // Field numerator:I\n         15: if_icmpne     31\n         18: aload_0\n-        19: getfield      #6                  // Field denominator:I\n+        19: getfield      #23                 // Field denominator:I\n         22: aload_1\n-        23: getfield      #6                  // Field denominator:I\n+        23: getfield      #23                 // Field denominator:I\n         26: if_icmpne     31\n         29: iconst_0\n         30: ireturn\n         31: aload_0\n-        32: getfield      #5                  // Field numerator:I\n+        32: getfield      #20                 // Field numerator:I\n         35: i2l\n         36: aload_1\n-        37: getfield      #6                  // Field denominator:I\n+        37: getfield      #23                 // Field denominator:I\n         40: i2l\n         41: lmul\n         42: lstore_2\n         43: aload_1\n-        44: getfield      #5                  // Field numerator:I\n+        44: getfield      #20                 // Field numerator:I\n         47: i2l\n         48: aload_0\n-        49: getfield      #6                  // Field denominator:I\n+        49: getfield      #23                 // Field denominator:I\n         52: i2l\n         53: lmul\n         54: lstore        4\n         56: lload_2\n         57: lload         4\n         59: lcmp\n         60: ifne          65\n@@ -2377,32 +2377,32 @@\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field toString:Ljava/lang/String;\n+         1: getfield      #13                 // Field toString:Ljava/lang/String;\n          4: ifnonnull     40\n          7: aload_0\n-         8: new           #80                 // class java/lang/StringBuilder\n+         8: new           #223                // class java/lang/StringBuilder\n         11: dup\n-        12: invokespecial #81                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        12: invokespecial #225                // Method java/lang/StringBuilder.\"<init>\":()V\n         15: aload_0\n-        16: invokevirtual #78                 // Method getNumerator:()I\n-        19: invokevirtual #82                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        22: ldc           #83                 // String /\n-        24: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        16: invokevirtual #217                // Method getNumerator:()I\n+        19: invokevirtual #226                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        22: ldc           #230                // String /\n+        24: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         27: aload_0\n-        28: invokevirtual #79                 // Method getDenominator:()I\n-        31: invokevirtual #82                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        34: invokevirtual #85                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        37: putfield      #3                  // Field toString:Ljava/lang/String;\n+        28: invokevirtual #220                // Method getDenominator:()I\n+        31: invokevirtual #226                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        34: invokevirtual #235                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        37: putfield      #13                 // Field toString:Ljava/lang/String;\n         40: aload_0\n-        41: getfield      #3                  // Field toString:Ljava/lang/String;\n+        41: getfield      #13                 // Field toString:Ljava/lang/String;\n         44: areturn\n       LineNumberTable:\n         line 890: 0\n         line 891: 7\n         line 893: 40\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2412,102 +2412,102 @@\n \n   public java.lang.String toProperString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field toProperString:Ljava/lang/String;\n+         1: getfield      #17                 // Field toProperString:Ljava/lang/String;\n          4: ifnonnull     193\n          7: aload_0\n-         8: getfield      #5                  // Field numerator:I\n+         8: getfield      #20                 // Field numerator:I\n         11: ifne          23\n         14: aload_0\n-        15: ldc           #86                 // String 0\n-        17: putfield      #4                  // Field toProperString:Ljava/lang/String;\n+        15: ldc           #238                // String 0\n+        17: putfield      #17                 // Field toProperString:Ljava/lang/String;\n         20: goto          193\n         23: aload_0\n-        24: getfield      #5                  // Field numerator:I\n+        24: getfield      #20                 // Field numerator:I\n         27: aload_0\n-        28: getfield      #6                  // Field denominator:I\n+        28: getfield      #23                 // Field denominator:I\n         31: if_icmpne     43\n         34: aload_0\n-        35: ldc           #87                 // String 1\n-        37: putfield      #4                  // Field toProperString:Ljava/lang/String;\n+        35: ldc           #240                // String 1\n+        37: putfield      #17                 // Field toProperString:Ljava/lang/String;\n         40: goto          193\n         43: aload_0\n-        44: getfield      #5                  // Field numerator:I\n+        44: getfield      #20                 // Field numerator:I\n         47: iconst_m1\n         48: aload_0\n-        49: getfield      #6                  // Field denominator:I\n+        49: getfield      #23                 // Field denominator:I\n         52: imul\n         53: if_icmpne     65\n         56: aload_0\n-        57: ldc           #88                 // String -1\n-        59: putfield      #4                  // Field toProperString:Ljava/lang/String;\n+        57: ldc           #242                // String -1\n+        59: putfield      #17                 // Field toProperString:Ljava/lang/String;\n         62: goto          193\n         65: aload_0\n-        66: getfield      #5                  // Field numerator:I\n+        66: getfield      #20                 // Field numerator:I\n         69: ifle          80\n         72: aload_0\n-        73: getfield      #5                  // Field numerator:I\n+        73: getfield      #20                 // Field numerator:I\n         76: ineg\n         77: goto          84\n         80: aload_0\n-        81: getfield      #5                  // Field numerator:I\n+        81: getfield      #20                 // Field numerator:I\n         84: aload_0\n-        85: getfield      #6                  // Field denominator:I\n+        85: getfield      #23                 // Field denominator:I\n         88: ineg\n         89: if_icmpge     160\n         92: aload_0\n-        93: invokevirtual #89                 // Method getProperNumerator:()I\n+        93: invokevirtual #244                // Method getProperNumerator:()I\n         96: istore_1\n         97: iload_1\n         98: ifne          115\n        101: aload_0\n        102: aload_0\n-       103: invokevirtual #90                 // Method getProperWhole:()I\n-       106: invokestatic  #91                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;\n-       109: putfield      #4                  // Field toProperString:Ljava/lang/String;\n+       103: invokevirtual #247                // Method getProperWhole:()I\n+       106: invokestatic  #250                // Method java/lang/Integer.toString:(I)Ljava/lang/String;\n+       109: putfield      #17                 // Field toProperString:Ljava/lang/String;\n        112: goto          157\n        115: aload_0\n-       116: new           #80                 // class java/lang/StringBuilder\n+       116: new           #223                // class java/lang/StringBuilder\n        119: dup\n-       120: invokespecial #81                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       120: invokespecial #225                // Method java/lang/StringBuilder.\"<init>\":()V\n        123: aload_0\n-       124: invokevirtual #90                 // Method getProperWhole:()I\n-       127: invokevirtual #82                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       130: ldc           #92                 // String\n-       132: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       124: invokevirtual #247                // Method getProperWhole:()I\n+       127: invokevirtual #226                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       130: ldc           #252                // String\n+       132: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        135: iload_1\n-       136: invokevirtual #82                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       139: ldc           #83                 // String /\n-       141: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       136: invokevirtual #226                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       139: ldc           #230                // String /\n+       141: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        144: aload_0\n-       145: invokevirtual #79                 // Method getDenominator:()I\n-       148: invokevirtual #82                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       151: invokevirtual #85                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       154: putfield      #4                  // Field toProperString:Ljava/lang/String;\n+       145: invokevirtual #220                // Method getDenominator:()I\n+       148: invokevirtual #226                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       151: invokevirtual #235                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       154: putfield      #17                 // Field toProperString:Ljava/lang/String;\n        157: goto          193\n        160: aload_0\n-       161: new           #80                 // class java/lang/StringBuilder\n+       161: new           #223                // class java/lang/StringBuilder\n        164: dup\n-       165: invokespecial #81                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       165: invokespecial #225                // Method java/lang/StringBuilder.\"<init>\":()V\n        168: aload_0\n-       169: invokevirtual #78                 // Method getNumerator:()I\n-       172: invokevirtual #82                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       175: ldc           #83                 // String /\n-       177: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       169: invokevirtual #217                // Method getNumerator:()I\n+       172: invokevirtual #226                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       175: ldc           #230                // String /\n+       177: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        180: aload_0\n-       181: invokevirtual #79                 // Method getDenominator:()I\n-       184: invokevirtual #82                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       187: invokevirtual #85                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       190: putfield      #4                  // Field toProperString:Ljava/lang/String;\n+       181: invokevirtual #220                // Method getDenominator:()I\n+       184: invokevirtual #226                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       187: invokevirtual #235                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       190: putfield      #17                 // Field toProperString:Ljava/lang/String;\n        193: aload_0\n-       194: getfield      #4                  // Field toProperString:Ljava/lang/String;\n+       194: getfield      #17                 // Field toProperString:Ljava/lang/String;\n        197: areturn\n       LineNumberTable:\n         line 906: 0\n         line 907: 7\n         line 908: 14\n         line 909: 23\n         line 910: 34\n@@ -2543,100 +2543,100 @@\n   public int compareTo(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)I\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #13                 // class org/apache/commons/lang3/math/Fraction\n-         5: invokevirtual #93                 // Method compareTo:(Lorg/apache/commons/lang3/math/Fraction;)I\n+         2: checkcast     #8                  // class org/apache/commons/lang3/math/Fraction\n+         5: invokevirtual #254                // Method compareTo:(Lorg/apache/commons/lang3/math/Fraction;)I\n          8: ireturn\n       LineNumberTable:\n         line 36: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/lang3/math/Fraction;\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=4, locals=0, args_size=0\n-         0: new           #13                 // class org/apache/commons/lang3/math/Fraction\n+         0: new           #8                  // class org/apache/commons/lang3/math/Fraction\n          3: dup\n          4: iconst_0\n          5: iconst_1\n-         6: invokespecial #14                 // Method \"<init>\":(II)V\n-         9: putstatic     #22                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;\n-        12: new           #13                 // class org/apache/commons/lang3/math/Fraction\n+         6: invokespecial #38                 // Method \"<init>\":(II)V\n+         9: putstatic     #51                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;\n+        12: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         15: dup\n         16: iconst_1\n         17: iconst_1\n-        18: invokespecial #14                 // Method \"<init>\":(II)V\n-        21: putstatic     #54                 // Field ONE:Lorg/apache/commons/lang3/math/Fraction;\n-        24: new           #13                 // class org/apache/commons/lang3/math/Fraction\n+        18: invokespecial #38                 // Method \"<init>\":(II)V\n+        21: putstatic     #144                // Field ONE:Lorg/apache/commons/lang3/math/Fraction;\n+        24: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         27: dup\n         28: iconst_1\n         29: iconst_2\n-        30: invokespecial #14                 // Method \"<init>\":(II)V\n-        33: putstatic     #94                 // Field ONE_HALF:Lorg/apache/commons/lang3/math/Fraction;\n-        36: new           #13                 // class org/apache/commons/lang3/math/Fraction\n+        30: invokespecial #38                 // Method \"<init>\":(II)V\n+        33: putstatic     #258                // Field ONE_HALF:Lorg/apache/commons/lang3/math/Fraction;\n+        36: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         39: dup\n         40: iconst_1\n         41: iconst_3\n-        42: invokespecial #14                 // Method \"<init>\":(II)V\n-        45: putstatic     #95                 // Field ONE_THIRD:Lorg/apache/commons/lang3/math/Fraction;\n-        48: new           #13                 // class org/apache/commons/lang3/math/Fraction\n+        42: invokespecial #38                 // Method \"<init>\":(II)V\n+        45: putstatic     #261                // Field ONE_THIRD:Lorg/apache/commons/lang3/math/Fraction;\n+        48: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         51: dup\n         52: iconst_2\n         53: iconst_3\n-        54: invokespecial #14                 // Method \"<init>\":(II)V\n-        57: putstatic     #96                 // Field TWO_THIRDS:Lorg/apache/commons/lang3/math/Fraction;\n-        60: new           #13                 // class org/apache/commons/lang3/math/Fraction\n+        54: invokespecial #38                 // Method \"<init>\":(II)V\n+        57: putstatic     #264                // Field TWO_THIRDS:Lorg/apache/commons/lang3/math/Fraction;\n+        60: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         63: dup\n         64: iconst_1\n         65: iconst_4\n-        66: invokespecial #14                 // Method \"<init>\":(II)V\n-        69: putstatic     #97                 // Field ONE_QUARTER:Lorg/apache/commons/lang3/math/Fraction;\n-        72: new           #13                 // class org/apache/commons/lang3/math/Fraction\n+        66: invokespecial #38                 // Method \"<init>\":(II)V\n+        69: putstatic     #267                // Field ONE_QUARTER:Lorg/apache/commons/lang3/math/Fraction;\n+        72: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         75: dup\n         76: iconst_2\n         77: iconst_4\n-        78: invokespecial #14                 // Method \"<init>\":(II)V\n-        81: putstatic     #98                 // Field TWO_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n-        84: new           #13                 // class org/apache/commons/lang3/math/Fraction\n+        78: invokespecial #38                 // Method \"<init>\":(II)V\n+        81: putstatic     #270                // Field TWO_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n+        84: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         87: dup\n         88: iconst_3\n         89: iconst_4\n-        90: invokespecial #14                 // Method \"<init>\":(II)V\n-        93: putstatic     #99                 // Field THREE_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n-        96: new           #13                 // class org/apache/commons/lang3/math/Fraction\n+        90: invokespecial #38                 // Method \"<init>\":(II)V\n+        93: putstatic     #273                // Field THREE_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n+        96: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         99: dup\n        100: iconst_1\n        101: iconst_5\n-       102: invokespecial #14                 // Method \"<init>\":(II)V\n-       105: putstatic     #100                // Field ONE_FIFTH:Lorg/apache/commons/lang3/math/Fraction;\n-       108: new           #13                 // class org/apache/commons/lang3/math/Fraction\n+       102: invokespecial #38                 // Method \"<init>\":(II)V\n+       105: putstatic     #276                // Field ONE_FIFTH:Lorg/apache/commons/lang3/math/Fraction;\n+       108: new           #8                  // class org/apache/commons/lang3/math/Fraction\n        111: dup\n        112: iconst_2\n        113: iconst_5\n-       114: invokespecial #14                 // Method \"<init>\":(II)V\n-       117: putstatic     #101                // Field TWO_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n-       120: new           #13                 // class org/apache/commons/lang3/math/Fraction\n+       114: invokespecial #38                 // Method \"<init>\":(II)V\n+       117: putstatic     #279                // Field TWO_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n+       120: new           #8                  // class org/apache/commons/lang3/math/Fraction\n        123: dup\n        124: iconst_3\n        125: iconst_5\n-       126: invokespecial #14                 // Method \"<init>\":(II)V\n-       129: putstatic     #102                // Field THREE_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n-       132: new           #13                 // class org/apache/commons/lang3/math/Fraction\n+       126: invokespecial #38                 // Method \"<init>\":(II)V\n+       129: putstatic     #282                // Field THREE_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n+       132: new           #8                  // class org/apache/commons/lang3/math/Fraction\n        135: dup\n        136: iconst_4\n        137: iconst_5\n-       138: invokespecial #14                 // Method \"<init>\":(II)V\n-       141: putstatic     #103                // Field FOUR_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n+       138: invokespecial #38                 // Method \"<init>\":(II)V\n+       141: putstatic     #285                // Field FOUR_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n        144: return\n       LineNumberTable:\n         line 48: 0\n         line 52: 12\n         line 56: 24\n         line 60: 36\n         line 64: 48\n@@ -2644,9 +2644,9 @@\n         line 72: 72\n         line 76: 84\n         line 80: 96\n         line 84: 108\n         line 88: 120\n         line 92: 132\n }\n-Signature: #238                         // Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/math/Fraction;>;\n+Signature: #364                         // Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/math/Fraction;>;\n SourceFile: \"Fraction.java\"\n"}]}
