{"diffoscope-json-version": 1, "source1": "first/FileExistsException.class", "source2": "second/FileExistsException.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,62 +1,62 @@\n-  SHA-256 checksum 7387c39e99d02b3ccd74ee8149dfdb0cd55e42f35db67f3bafd59fe2dba1cef6\n+  SHA-256 checksum 552509583981124079ef985dcb60c1220736d9ba9264bca98b1f27730ec16c9c\n   Compiled from \"FileExistsException.java\"\n public class org.apache.commons.io.FileExistsException extends java.io.IOException\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #10                         // org/apache/commons/io/FileExistsException\n-  super_class: #11                        // java/io/IOException\n+  this_class: #28                         // org/apache/commons/io/FileExistsException\n+  super_class: #2                         // java/io/IOException\n   interfaces: 0, fields: 1, methods: 3, attributes: 1\n Constant pool:\n-   #1 = Methodref          #11.#32        // java/io/IOException.\"<init>\":()V\n-   #2 = Methodref          #11.#33        // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #3 = Class              #34            // java/lang/StringBuilder\n-   #4 = Methodref          #3.#32         // java/lang/StringBuilder.\"<init>\":()V\n-   #5 = String             #35            // File\n-   #6 = Methodref          #3.#36         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #7 = Methodref          #3.#37         // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #8 = String             #38            //  exists\n-   #9 = Methodref          #3.#39         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #10 = Class              #40            // org/apache/commons/io/FileExistsException\n-  #11 = Class              #41            // java/io/IOException\n-  #12 = Utf8               serialVersionUID\n-  #13 = Utf8               J\n-  #14 = Utf8               ConstantValue\n-  #15 = Long               1l\n-  #17 = Utf8               <init>\n-  #18 = Utf8               ()V\n-  #19 = Utf8               Code\n-  #20 = Utf8               LineNumberTable\n-  #21 = Utf8               LocalVariableTable\n-  #22 = Utf8               this\n-  #23 = Utf8               Lorg/apache/commons/io/FileExistsException;\n-  #24 = Utf8               (Ljava/lang/String;)V\n-  #25 = Utf8               message\n-  #26 = Utf8               Ljava/lang/String;\n-  #27 = Utf8               (Ljava/io/File;)V\n-  #28 = Utf8               file\n-  #29 = Utf8               Ljava/io/File;\n-  #30 = Utf8               SourceFile\n-  #31 = Utf8               FileExistsException.java\n-  #32 = NameAndType        #17:#18        // \"<init>\":()V\n-  #33 = NameAndType        #17:#24        // \"<init>\":(Ljava/lang/String;)V\n-  #34 = Utf8               java/lang/StringBuilder\n-  #35 = Utf8               File\n-  #36 = NameAndType        #42:#43        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #37 = NameAndType        #42:#44        // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #38 = Utf8                exists\n-  #39 = NameAndType        #45:#46        // toString:()Ljava/lang/String;\n-  #40 = Utf8               org/apache/commons/io/FileExistsException\n-  #41 = Utf8               java/io/IOException\n-  #42 = Utf8               append\n-  #43 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #44 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #45 = Utf8               toString\n-  #46 = Utf8               ()Ljava/lang/String;\n+   #1 = Methodref          #2.#3          // java/io/IOException.\"<init>\":()V\n+   #2 = Class              #4             // java/io/IOException\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/io/IOException\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Methodref          #2.#8          // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #8 = NameAndType        #5:#9          // \"<init>\":(Ljava/lang/String;)V\n+   #9 = Utf8               (Ljava/lang/String;)V\n+  #10 = Class              #11            // java/lang/StringBuilder\n+  #11 = Utf8               java/lang/StringBuilder\n+  #12 = Methodref          #10.#3         // java/lang/StringBuilder.\"<init>\":()V\n+  #13 = String             #14            // File\n+  #14 = Utf8               File\n+  #15 = Methodref          #10.#16        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #16 = NameAndType        #17:#18        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #17 = Utf8               append\n+  #18 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #19 = Methodref          #10.#20        // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #20 = NameAndType        #17:#21        // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #21 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #22 = String             #23            //  exists\n+  #23 = Utf8                exists\n+  #24 = Methodref          #10.#25        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #25 = NameAndType        #26:#27        // toString:()Ljava/lang/String;\n+  #26 = Utf8               toString\n+  #27 = Utf8               ()Ljava/lang/String;\n+  #28 = Class              #29            // org/apache/commons/io/FileExistsException\n+  #29 = Utf8               org/apache/commons/io/FileExistsException\n+  #30 = Utf8               serialVersionUID\n+  #31 = Utf8               J\n+  #32 = Utf8               ConstantValue\n+  #33 = Long               1l\n+  #35 = Utf8               Code\n+  #36 = Utf8               LineNumberTable\n+  #37 = Utf8               LocalVariableTable\n+  #38 = Utf8               this\n+  #39 = Utf8               Lorg/apache/commons/io/FileExistsException;\n+  #40 = Utf8               message\n+  #41 = Utf8               Ljava/lang/String;\n+  #42 = Utf8               (Ljava/io/File;)V\n+  #43 = Utf8               file\n+  #44 = Utf8               Ljava/io/File;\n+  #45 = Utf8               SourceFile\n+  #46 = Utf8               FileExistsException.java\n {\n   private static final long serialVersionUID = 1l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 1l\n \n   public org.apache.commons.io.FileExistsException();\n@@ -77,15 +77,15 @@\n   public org.apache.commons.io.FileExistsException(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #2                  // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+         2: invokespecial #7                  // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n          5: return\n       LineNumberTable:\n         line 46: 0\n         line 47: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/FileExistsException;\n@@ -93,25 +93,25 @@\n \n   public org.apache.commons.io.FileExistsException(java.io.File);\n     descriptor: (Ljava/io/File;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: new           #3                  // class java/lang/StringBuilder\n+         1: new           #10                 // class java/lang/StringBuilder\n          4: dup\n-         5: invokespecial #4                  // Method java/lang/StringBuilder.\"<init>\":()V\n-         8: ldc           #5                  // String File\n-        10: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+         5: invokespecial #12                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         8: ldc           #13                 // String File\n+        10: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         13: aload_1\n-        14: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        17: ldc           #8                  // String  exists\n-        19: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        22: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        25: invokespecial #2                  // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        14: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        17: ldc           #22                 // String  exists\n+        19: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        22: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        25: invokespecial #7                  // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         28: return\n       LineNumberTable:\n         line 55: 0\n         line 56: 28\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      29     0  this   Lorg/apache/commons/io/FileExistsException;\n"}]}
