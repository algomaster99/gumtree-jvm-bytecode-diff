{"diffoscope-json-version": 1, "source1": "first/UTF8DataInputJsonParser.class", "source2": "second/UTF8DataInputJsonParser.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,306 +1,306 @@\n-  SHA-256 checksum b9665b8728d04249b704b097a19d02d4691b5d4002fe8903f8ecf572979a4ba8\n+  SHA-256 checksum 6158938c628eb169a9ebc251db119853e7675a559b89799d70e5c962d5ba8160\n   Compiled from \"UTF8DataInputJsonParser.java\"\n public class com.fasterxml.jackson.core.json.UTF8DataInputJsonParser extends com.fasterxml.jackson.core.base.ParserBase\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #292                        // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser\n   super_class: #293                       // com/fasterxml/jackson/core/base/ParserBase\n   interfaces: 0, fields: 17, methods: 93, attributes: 2\n Constant pool:\n-     #1 = Class              #566         // com/fasterxml/jackson/core/JsonTokenId\n-     #2 = Methodref          #293.#567    // com/fasterxml/jackson/core/base/ParserBase.\"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;I)V\n-     #3 = Fieldref           #292.#568    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._quadBuffer:[I\n-     #4 = Fieldref           #292.#569    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._nextByte:I\n-     #5 = Fieldref           #292.#570    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._objectCodec:Lcom/fasterxml/jackson/core/ObjectCodec;\n-     #6 = Fieldref           #292.#571    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._symbols:Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n-     #7 = Fieldref           #292.#572    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._inputData:Ljava/io/DataInput;\n-     #8 = Fieldref           #292.#573    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.JSON_READ_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-     #9 = Methodref          #293.#574    // com/fasterxml/jackson/core/base/ParserBase._releaseBuffers:()V\n-    #10 = Methodref          #575.#576    // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.release:()V\n-    #11 = Fieldref           #292.#577    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._currToken:Lcom/fasterxml/jackson/core/JsonToken;\n-    #12 = Fieldref           #578.#579    // com/fasterxml/jackson/core/JsonToken.VALUE_STRING:Lcom/fasterxml/jackson/core/JsonToken;\n-    #13 = Fieldref           #292.#580    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._tokenIncomplete:Z\n-    #14 = Methodref          #292.#581    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._finishAndReturnString:()Ljava/lang/String;\n-    #15 = Fieldref           #292.#582    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._textBuffer:Lcom/fasterxml/jackson/core/util/TextBuffer;\n-    #16 = Methodref          #583.#584    // com/fasterxml/jackson/core/util/TextBuffer.contentsAsString:()Ljava/lang/String;\n-    #17 = Methodref          #292.#585    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._getText2:(Lcom/fasterxml/jackson/core/JsonToken;)Ljava/lang/String;\n-    #18 = Methodref          #292.#586    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._finishString:()V\n-    #19 = Methodref          #583.#587    // com/fasterxml/jackson/core/util/TextBuffer.contentsToWriter:(Ljava/io/Writer;)I\n-    #20 = Fieldref           #578.#588    // com/fasterxml/jackson/core/JsonToken.FIELD_NAME:Lcom/fasterxml/jackson/core/JsonToken;\n-    #21 = Fieldref           #292.#589    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._parsingContext:Lcom/fasterxml/jackson/core/json/JsonReadContext;\n-    #22 = Methodref          #590.#591    // com/fasterxml/jackson/core/json/JsonReadContext.getCurrentName:()Ljava/lang/String;\n-    #23 = Methodref          #592.#593    // java/io/Writer.write:(Ljava/lang/String;)V\n-    #24 = Methodref          #194.#594    // java/lang/String.length:()I\n-    #25 = Methodref          #578.#595    // com/fasterxml/jackson/core/JsonToken.isNumeric:()Z\n-    #26 = Methodref          #578.#596    // com/fasterxml/jackson/core/JsonToken.asCharArray:()[C\n-    #27 = Methodref          #592.#597    // java/io/Writer.write:([C)V\n-    #28 = Methodref          #292.#591    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.getCurrentName:()Ljava/lang/String;\n-    #29 = Methodref          #293.#598    // com/fasterxml/jackson/core/base/ParserBase.getValueAsString:(Ljava/lang/String;)Ljava/lang/String;\n-    #30 = Fieldref           #578.#599    // com/fasterxml/jackson/core/JsonToken.VALUE_NUMBER_INT:Lcom/fasterxml/jackson/core/JsonToken;\n-    #31 = Fieldref           #578.#600    // com/fasterxml/jackson/core/JsonToken.VALUE_NUMBER_FLOAT:Lcom/fasterxml/jackson/core/JsonToken;\n-    #32 = Fieldref           #292.#601    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._numTypesValid:I\n-    #33 = Class              #602         // com/fasterxml/jackson/core/base/ParserMinimalBase\n-    #34 = Methodref          #292.#603    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._parseIntValue:()I\n-    #35 = Methodref          #292.#604    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.convertNumberToInt:()V\n-    #36 = Fieldref           #292.#605    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._numberInt:I\n-    #37 = Methodref          #293.#606    // com/fasterxml/jackson/core/base/ParserBase.getValueAsInt:(I)I\n-    #38 = Methodref          #578.#607    // com/fasterxml/jackson/core/JsonToken.id:()I\n-    #39 = Methodref          #578.#608    // com/fasterxml/jackson/core/JsonToken.asString:()Ljava/lang/String;\n-    #40 = Fieldref           #292.#609    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._nameCopied:Z\n-    #41 = Fieldref           #292.#610    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._nameCopyBuffer:[C\n-    #42 = Fieldref           #292.#611    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._ioContext:Lcom/fasterxml/jackson/core/io/IOContext;\n-    #43 = Methodref          #612.#613    // com/fasterxml/jackson/core/io/IOContext.allocNameCopyBuffer:(I)[C\n-    #44 = Methodref          #194.#614    // java/lang/String.getChars:(II[CI)V\n-    #45 = Methodref          #583.#615    // com/fasterxml/jackson/core/util/TextBuffer.getTextBuffer:()[C\n-    #46 = Methodref          #583.#616    // com/fasterxml/jackson/core/util/TextBuffer.size:()I\n-    #47 = Methodref          #583.#617    // com/fasterxml/jackson/core/util/TextBuffer.getTextOffset:()I\n-    #48 = Fieldref           #578.#618    // com/fasterxml/jackson/core/JsonToken.VALUE_EMBEDDED_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n-    #49 = Fieldref           #292.#619    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._binaryValue:[B\n-    #50 = Class              #620         // java/lang/StringBuilder\n-    #51 = Methodref          #50.#621     // java/lang/StringBuilder.\"<init>\":()V\n-    #52 = String             #622         // Current token (\n-    #53 = Methodref          #50.#623     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-    #54 = Methodref          #50.#624     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-    #55 = String             #625         // ) not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary\n-    #56 = Methodref          #50.#626     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-    #57 = Methodref          #292.#627    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._reportError:(Ljava/lang/String;)V\n-    #58 = Methodref          #292.#628    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._decodeBase64:(Lcom/fasterxml/jackson/core/Base64Variant;)[B\n-    #59 = Class              #629         // java/lang/IllegalArgumentException\n-    #60 = String             #630         // Failed to decode VALUE_STRING as base64 (\n-    #61 = String             #631         // ):\n-    #62 = Methodref          #59.#632     // java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;\n-    #63 = Methodref          #292.#633    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._constructError:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParseException;\n-    #64 = Methodref          #292.#634    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._getByteArrayBuilder:()Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n-    #65 = Methodref          #292.#635    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.getText:()Ljava/lang/String;\n-    #66 = Methodref          #292.#636    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._decodeBase64:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;Lcom/fasterxml/jackson/core/Base64Variant;)V\n-    #67 = Methodref          #637.#638    // com/fasterxml/jackson/core/util/ByteArrayBuilder.toByteArray:()[B\n-    #68 = Methodref          #292.#639    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.getBinaryValue:(Lcom/fasterxml/jackson/core/Base64Variant;)[B\n-    #69 = Methodref          #640.#641    // java/io/OutputStream.write:([B)V\n-    #70 = Methodref          #612.#642    // com/fasterxml/jackson/core/io/IOContext.allocBase64Buffer:()[B\n-    #71 = Methodref          #292.#643    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._readBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/OutputStream;[B)I\n-    #72 = Methodref          #612.#644    // com/fasterxml/jackson/core/io/IOContext.releaseBase64Buffer:([B)V\n-    #73 = InterfaceMethodref #645.#646    // java/io/DataInput.readUnsignedByte:()I\n-    #74 = Methodref          #77.#647     // com/fasterxml/jackson/core/Base64Variant.decodeBase64Char:(I)I\n-    #75 = Methodref          #292.#648    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._decodeBase64Escape:(Lcom/fasterxml/jackson/core/Base64Variant;II)I\n-    #76 = Methodref          #640.#649    // java/io/OutputStream.write:([BII)V\n-    #77 = Class              #650         // com/fasterxml/jackson/core/Base64Variant\n-    #78 = Methodref          #77.#651     // com/fasterxml/jackson/core/Base64Variant.requiresPaddingOnRead:()Z\n-    #79 = Methodref          #292.#652    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._handleBase64MissingPadding:(Lcom/fasterxml/jackson/core/Base64Variant;)V\n-    #80 = Methodref          #77.#653     // com/fasterxml/jackson/core/Base64Variant.usesPaddingChar:(I)Z\n-    #81 = String             #654         // expected padding character \\'\n-    #82 = Methodref          #77.#655     // com/fasterxml/jackson/core/Base64Variant.getPaddingChar:()C\n-    #83 = Methodref          #50.#656     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-    #84 = String             #657         // \\'\n-    #85 = Methodref          #292.#658    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.reportInvalidBase64Char:(Lcom/fasterxml/jackson/core/Base64Variant;IILjava/lang/String;)Ljava/lang/IllegalArgumentException;\n-    #86 = Fieldref           #292.#659    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._closed:Z\n-    #87 = Methodref          #292.#660    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._nextAfterName:()Lcom/fasterxml/jackson/core/JsonToken;\n-    #88 = Methodref          #292.#661    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._skipString:()V\n-    #89 = Methodref          #292.#662    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._skipWSOrEnd:()I\n-    #90 = Methodref          #292.#663    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.close:()V\n-    #91 = Fieldref           #292.#664    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._currInputRow:I\n-    #92 = Fieldref           #292.#665    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._tokenInputRow:I\n-    #93 = Methodref          #292.#666    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._closeScope:(I)V\n-    #94 = Methodref          #590.#667    // com/fasterxml/jackson/core/json/JsonReadContext.expectComma:()Z\n-    #95 = String             #668         // was expecting comma to separate\n-    #96 = Methodref          #590.#669    // com/fasterxml/jackson/core/json/JsonReadContext.typeDesc:()Ljava/lang/String;\n-    #97 = String             #670         //  entries\n-    #98 = Methodref          #292.#671    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._reportUnexpectedChar:(ILjava/lang/String;)V\n-    #99 = Methodref          #292.#672    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._skipWS:()I\n-   #100 = Fieldref           #292.#673    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._features:I\n-   #101 = Fieldref           #292.#674    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.FEAT_MASK_TRAILING_COMMA:I\n-   #102 = Methodref          #590.#675    // com/fasterxml/jackson/core/json/JsonReadContext.inObject:()Z\n-   #103 = Methodref          #292.#676    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._nextTokenNotInObject:(I)Lcom/fasterxml/jackson/core/JsonToken;\n-   #104 = Methodref          #292.#677    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._parseName:(I)Ljava/lang/String;\n-   #105 = Methodref          #590.#678    // com/fasterxml/jackson/core/json/JsonReadContext.setCurrentName:(Ljava/lang/String;)V\n-   #106 = Methodref          #292.#679    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._skipColon:()I\n-   #107 = Fieldref           #292.#680    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._nextToken:Lcom/fasterxml/jackson/core/JsonToken;\n-   #108 = Methodref          #292.#681    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._parseNegNumber:()Lcom/fasterxml/jackson/core/JsonToken;\n-   #109 = Fieldref           #682.#683    // com/fasterxml/jackson/core/json/JsonReadFeature.ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS:Lcom/fasterxml/jackson/core/json/JsonReadFeature;\n-   #110 = Methodref          #682.#684    // com/fasterxml/jackson/core/json/JsonReadFeature.mappedFeature:()Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #111 = Methodref          #292.#685    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.isEnabled:(Lcom/fasterxml/jackson/core/JsonParser$Feature;)Z\n-   #112 = Methodref          #292.#686    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._parsePosNumber:()Lcom/fasterxml/jackson/core/JsonToken;\n-   #113 = Methodref          #292.#687    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._handleUnexpectedValue:(I)Lcom/fasterxml/jackson/core/JsonToken;\n-   #114 = Methodref          #292.#688    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._parseFloatThatStartsWithPeriod:(ZZ)Lcom/fasterxml/jackson/core/JsonToken;\n-   #115 = Methodref          #292.#689    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._parseUnsignedNumber:(I)Lcom/fasterxml/jackson/core/JsonToken;\n-   #116 = String             #690         // false\n-   #117 = Methodref          #292.#691    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._matchToken:(Ljava/lang/String;I)V\n-   #118 = Fieldref           #578.#692    // com/fasterxml/jackson/core/JsonToken.VALUE_FALSE:Lcom/fasterxml/jackson/core/JsonToken;\n-   #119 = String             #693         // null\n-   #120 = Fieldref           #578.#694    // com/fasterxml/jackson/core/JsonToken.VALUE_NULL:Lcom/fasterxml/jackson/core/JsonToken;\n-   #121 = String             #695         // true\n-   #122 = Fieldref           #578.#696    // com/fasterxml/jackson/core/JsonToken.VALUE_TRUE:Lcom/fasterxml/jackson/core/JsonToken;\n-   #123 = Fieldref           #578.#697    // com/fasterxml/jackson/core/JsonToken.START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n-   #124 = Fieldref           #578.#698    // com/fasterxml/jackson/core/JsonToken.START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n-   #125 = Fieldref           #292.#699    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._tokenInputCol:I\n-   #126 = Methodref          #292.#700    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.createChildArrayContext:(II)V\n-   #127 = Methodref          #292.#701    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.createChildObjectContext:(II)V\n-   #128 = Methodref          #292.#702    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n-   #129 = Methodref          #292.#703    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.getIntValue:()I\n-   #130 = Methodref          #292.#704    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.getLongValue:()J\n-   #131 = Fieldref           #705.#706    // java/lang/Boolean.TRUE:Ljava/lang/Boolean;\n-   #132 = Fieldref           #705.#707    // java/lang/Boolean.FALSE:Ljava/lang/Boolean;\n-   #133 = Fieldref           #682.#708    // com/fasterxml/jackson/core/json/JsonReadFeature.ALLOW_LEADING_DECIMAL_POINT_FOR_NUMBERS:Lcom/fasterxml/jackson/core/json/JsonReadFeature;\n-   #134 = Methodref          #583.#709    // com/fasterxml/jackson/core/util/TextBuffer.emptyAndGetCurrentSegment:()[C\n-   #135 = Methodref          #292.#710    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._parseFloat:([CIIZI)Lcom/fasterxml/jackson/core/JsonToken;\n-   #136 = Methodref          #292.#711    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._handleLeadingZeroes:()I\n-   #137 = Methodref          #292.#712    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._handleInvalidNumberStart:(IZ)Lcom/fasterxml/jackson/core/JsonToken;\n-   #138 = Methodref          #583.#713    // com/fasterxml/jackson/core/util/TextBuffer.finishCurrentSegment:()[C\n-   #139 = Methodref          #583.#714    // com/fasterxml/jackson/core/util/TextBuffer.setCurrentLength:(I)V\n-   #140 = Methodref          #590.#715    // com/fasterxml/jackson/core/json/JsonReadContext.inRoot:()Z\n-   #141 = Methodref          #292.#716    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._verifyRootSpace:()V\n-   #142 = Methodref          #292.#717    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.resetInt:(ZI)Lcom/fasterxml/jackson/core/JsonToken;\n-   #143 = Methodref          #292.#718    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._parseSignedNumber:(Z)Lcom/fasterxml/jackson/core/JsonToken;\n-   #144 = Methodref          #292.#719    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._handleInvalidNumberStart:(IZZ)Lcom/fasterxml/jackson/core/JsonToken;\n-   #145 = Fieldref           #292.#720    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.FEAT_MASK_LEADING_ZEROS:I\n-   #146 = String             #721         // Leading zeroes not allowed\n-   #147 = Methodref          #292.#722    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.reportInvalidNumber:(Ljava/lang/String;)V\n-   #148 = Fieldref           #682.#723    // com/fasterxml/jackson/core/json/JsonReadFeature.ALLOW_TRAILING_DECIMAL_POINT_FOR_NUMBERS:Lcom/fasterxml/jackson/core/json/JsonReadFeature;\n-   #149 = String             #724         // Decimal point not followed by a digit\n-   #150 = Methodref          #292.#725    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._reportUnexpectedNumberChar:(ILjava/lang/String;)Ljava/lang/Object;\n-   #151 = String             #726         // Exponent indicator not followed by a digit\n-   #152 = Methodref          #292.#727    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.resetFloat:(ZIII)Lcom/fasterxml/jackson/core/JsonToken;\n-   #153 = Methodref          #292.#728    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._reportMissingRootWS:(I)V\n-   #154 = Methodref          #292.#729    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._handleOddName:(I)Ljava/lang/String;\n-   #155 = Fieldref           #292.#730    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._icLatin1:[I\n-   #156 = Fieldref           #292.#731    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._quad1:I\n-   #157 = Methodref          #292.#732    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._parseMediumName:(I)Ljava/lang/String;\n-   #158 = Methodref          #292.#733    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.findName:(II)Ljava/lang/String;\n-   #159 = Methodref          #292.#734    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.parseName:(III)Ljava/lang/String;\n-   #160 = String             #735         //\n-   #161 = Methodref          #292.#736    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.findName:(III)Ljava/lang/String;\n-   #162 = Methodref          #292.#737    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.parseName:(IIII)Ljava/lang/String;\n-   #163 = Methodref          #292.#738    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._parseMediumName2:(II)Ljava/lang/String;\n-   #164 = Methodref          #292.#739    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.findName:(IIII)Ljava/lang/String;\n-   #165 = Methodref          #292.#740    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.parseName:(IIIII)Ljava/lang/String;\n-   #166 = Methodref          #292.#741    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._parseLongName:(III)Ljava/lang/String;\n-   #167 = Methodref          #292.#742    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.findName:([IIII)Ljava/lang/String;\n-   #168 = Methodref          #292.#743    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.parseEscapedName:([IIIII)Ljava/lang/String;\n-   #169 = Methodref          #292.#744    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._growArrayBy:([II)[I\n+     #1 = Class              #560         // com/fasterxml/jackson/core/JsonTokenId\n+     #2 = Methodref          #293.#561    // com/fasterxml/jackson/core/base/ParserBase.\"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;I)V\n+     #3 = Fieldref           #292.#562    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._quadBuffer:[I\n+     #4 = Fieldref           #292.#563    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._nextByte:I\n+     #5 = Fieldref           #292.#564    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._objectCodec:Lcom/fasterxml/jackson/core/ObjectCodec;\n+     #6 = Fieldref           #292.#565    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._symbols:Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n+     #7 = Fieldref           #292.#566    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._inputData:Ljava/io/DataInput;\n+     #8 = Fieldref           #292.#567    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.JSON_READ_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+     #9 = Methodref          #293.#568    // com/fasterxml/jackson/core/base/ParserBase._releaseBuffers:()V\n+    #10 = Methodref          #569.#570    // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.release:()V\n+    #11 = Fieldref           #292.#571    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._currToken:Lcom/fasterxml/jackson/core/JsonToken;\n+    #12 = Fieldref           #363.#572    // com/fasterxml/jackson/core/JsonToken.VALUE_STRING:Lcom/fasterxml/jackson/core/JsonToken;\n+    #13 = Fieldref           #292.#573    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._tokenIncomplete:Z\n+    #14 = Methodref          #292.#574    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._finishAndReturnString:()Ljava/lang/String;\n+    #15 = Fieldref           #292.#575    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._textBuffer:Lcom/fasterxml/jackson/core/util/TextBuffer;\n+    #16 = Methodref          #576.#577    // com/fasterxml/jackson/core/util/TextBuffer.contentsAsString:()Ljava/lang/String;\n+    #17 = Methodref          #292.#578    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._getText2:(Lcom/fasterxml/jackson/core/JsonToken;)Ljava/lang/String;\n+    #18 = Methodref          #292.#579    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._finishString:()V\n+    #19 = Methodref          #576.#580    // com/fasterxml/jackson/core/util/TextBuffer.contentsToWriter:(Ljava/io/Writer;)I\n+    #20 = Fieldref           #363.#581    // com/fasterxml/jackson/core/JsonToken.FIELD_NAME:Lcom/fasterxml/jackson/core/JsonToken;\n+    #21 = Fieldref           #292.#582    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._parsingContext:Lcom/fasterxml/jackson/core/json/JsonReadContext;\n+    #22 = Methodref          #583.#584    // com/fasterxml/jackson/core/json/JsonReadContext.getCurrentName:()Ljava/lang/String;\n+    #23 = Methodref          #585.#586    // java/io/Writer.write:(Ljava/lang/String;)V\n+    #24 = Methodref          #194.#587    // java/lang/String.length:()I\n+    #25 = Methodref          #363.#588    // com/fasterxml/jackson/core/JsonToken.isNumeric:()Z\n+    #26 = Methodref          #363.#589    // com/fasterxml/jackson/core/JsonToken.asCharArray:()[C\n+    #27 = Methodref          #585.#590    // java/io/Writer.write:([C)V\n+    #28 = Methodref          #292.#584    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.getCurrentName:()Ljava/lang/String;\n+    #29 = Methodref          #293.#591    // com/fasterxml/jackson/core/base/ParserBase.getValueAsString:(Ljava/lang/String;)Ljava/lang/String;\n+    #30 = Fieldref           #363.#592    // com/fasterxml/jackson/core/JsonToken.VALUE_NUMBER_INT:Lcom/fasterxml/jackson/core/JsonToken;\n+    #31 = Fieldref           #363.#593    // com/fasterxml/jackson/core/JsonToken.VALUE_NUMBER_FLOAT:Lcom/fasterxml/jackson/core/JsonToken;\n+    #32 = Fieldref           #292.#594    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._numTypesValid:I\n+    #33 = Class              #595         // com/fasterxml/jackson/core/base/ParserMinimalBase\n+    #34 = Methodref          #292.#596    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._parseIntValue:()I\n+    #35 = Methodref          #292.#597    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.convertNumberToInt:()V\n+    #36 = Fieldref           #292.#598    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._numberInt:I\n+    #37 = Methodref          #293.#599    // com/fasterxml/jackson/core/base/ParserBase.getValueAsInt:(I)I\n+    #38 = Methodref          #363.#600    // com/fasterxml/jackson/core/JsonToken.id:()I\n+    #39 = Methodref          #363.#601    // com/fasterxml/jackson/core/JsonToken.asString:()Ljava/lang/String;\n+    #40 = Fieldref           #292.#602    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._nameCopied:Z\n+    #41 = Fieldref           #292.#603    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._nameCopyBuffer:[C\n+    #42 = Fieldref           #292.#604    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._ioContext:Lcom/fasterxml/jackson/core/io/IOContext;\n+    #43 = Methodref          #605.#606    // com/fasterxml/jackson/core/io/IOContext.allocNameCopyBuffer:(I)[C\n+    #44 = Methodref          #194.#607    // java/lang/String.getChars:(II[CI)V\n+    #45 = Methodref          #576.#608    // com/fasterxml/jackson/core/util/TextBuffer.getTextBuffer:()[C\n+    #46 = Methodref          #576.#609    // com/fasterxml/jackson/core/util/TextBuffer.size:()I\n+    #47 = Methodref          #576.#610    // com/fasterxml/jackson/core/util/TextBuffer.getTextOffset:()I\n+    #48 = Fieldref           #363.#611    // com/fasterxml/jackson/core/JsonToken.VALUE_EMBEDDED_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+    #49 = Fieldref           #292.#612    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._binaryValue:[B\n+    #50 = Class              #613         // java/lang/StringBuilder\n+    #51 = Methodref          #50.#614     // java/lang/StringBuilder.\"<init>\":()V\n+    #52 = String             #615         // Current token (\n+    #53 = Methodref          #50.#616     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+    #54 = Methodref          #50.#617     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+    #55 = String             #618         // ) not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary\n+    #56 = Methodref          #50.#619     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+    #57 = Methodref          #292.#620    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._reportError:(Ljava/lang/String;)V\n+    #58 = Methodref          #292.#621    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._decodeBase64:(Lcom/fasterxml/jackson/core/Base64Variant;)[B\n+    #59 = Class              #622         // java/lang/IllegalArgumentException\n+    #60 = String             #623         // Failed to decode VALUE_STRING as base64 (\n+    #61 = String             #624         // ):\n+    #62 = Methodref          #59.#625     // java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;\n+    #63 = Methodref          #292.#626    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._constructError:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParseException;\n+    #64 = Methodref          #292.#627    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._getByteArrayBuilder:()Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n+    #65 = Methodref          #292.#628    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.getText:()Ljava/lang/String;\n+    #66 = Methodref          #292.#629    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._decodeBase64:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;Lcom/fasterxml/jackson/core/Base64Variant;)V\n+    #67 = Methodref          #548.#630    // com/fasterxml/jackson/core/util/ByteArrayBuilder.toByteArray:()[B\n+    #68 = Methodref          #292.#631    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.getBinaryValue:(Lcom/fasterxml/jackson/core/Base64Variant;)[B\n+    #69 = Methodref          #391.#632    // java/io/OutputStream.write:([B)V\n+    #70 = Methodref          #605.#633    // com/fasterxml/jackson/core/io/IOContext.allocBase64Buffer:()[B\n+    #71 = Methodref          #292.#634    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._readBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/OutputStream;[B)I\n+    #72 = Methodref          #605.#635    // com/fasterxml/jackson/core/io/IOContext.releaseBase64Buffer:([B)V\n+    #73 = InterfaceMethodref #636.#637    // java/io/DataInput.readUnsignedByte:()I\n+    #74 = Methodref          #77.#638     // com/fasterxml/jackson/core/Base64Variant.decodeBase64Char:(I)I\n+    #75 = Methodref          #292.#639    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._decodeBase64Escape:(Lcom/fasterxml/jackson/core/Base64Variant;II)I\n+    #76 = Methodref          #391.#640    // java/io/OutputStream.write:([BII)V\n+    #77 = Class              #641         // com/fasterxml/jackson/core/Base64Variant\n+    #78 = Methodref          #77.#642     // com/fasterxml/jackson/core/Base64Variant.requiresPaddingOnRead:()Z\n+    #79 = Methodref          #292.#643    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._handleBase64MissingPadding:(Lcom/fasterxml/jackson/core/Base64Variant;)V\n+    #80 = Methodref          #77.#644     // com/fasterxml/jackson/core/Base64Variant.usesPaddingChar:(I)Z\n+    #81 = String             #645         // expected padding character \\'\n+    #82 = Methodref          #77.#646     // com/fasterxml/jackson/core/Base64Variant.getPaddingChar:()C\n+    #83 = Methodref          #50.#647     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+    #84 = String             #648         // \\'\n+    #85 = Methodref          #292.#649    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.reportInvalidBase64Char:(Lcom/fasterxml/jackson/core/Base64Variant;IILjava/lang/String;)Ljava/lang/IllegalArgumentException;\n+    #86 = Fieldref           #292.#650    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._closed:Z\n+    #87 = Methodref          #292.#651    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._nextAfterName:()Lcom/fasterxml/jackson/core/JsonToken;\n+    #88 = Methodref          #292.#652    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._skipString:()V\n+    #89 = Methodref          #292.#653    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._skipWSOrEnd:()I\n+    #90 = Methodref          #292.#654    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.close:()V\n+    #91 = Fieldref           #292.#655    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._currInputRow:I\n+    #92 = Fieldref           #292.#656    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._tokenInputRow:I\n+    #93 = Methodref          #292.#657    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._closeScope:(I)V\n+    #94 = Methodref          #583.#658    // com/fasterxml/jackson/core/json/JsonReadContext.expectComma:()Z\n+    #95 = String             #659         // was expecting comma to separate\n+    #96 = Methodref          #583.#660    // com/fasterxml/jackson/core/json/JsonReadContext.typeDesc:()Ljava/lang/String;\n+    #97 = String             #661         //  entries\n+    #98 = Methodref          #292.#662    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._reportUnexpectedChar:(ILjava/lang/String;)V\n+    #99 = Methodref          #292.#663    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._skipWS:()I\n+   #100 = Fieldref           #292.#664    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._features:I\n+   #101 = Fieldref           #292.#665    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.FEAT_MASK_TRAILING_COMMA:I\n+   #102 = Methodref          #583.#666    // com/fasterxml/jackson/core/json/JsonReadContext.inObject:()Z\n+   #103 = Methodref          #292.#667    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._nextTokenNotInObject:(I)Lcom/fasterxml/jackson/core/JsonToken;\n+   #104 = Methodref          #292.#668    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._parseName:(I)Ljava/lang/String;\n+   #105 = Methodref          #583.#669    // com/fasterxml/jackson/core/json/JsonReadContext.setCurrentName:(Ljava/lang/String;)V\n+   #106 = Methodref          #292.#670    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._skipColon:()I\n+   #107 = Fieldref           #292.#671    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._nextToken:Lcom/fasterxml/jackson/core/JsonToken;\n+   #108 = Methodref          #292.#672    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._parseNegNumber:()Lcom/fasterxml/jackson/core/JsonToken;\n+   #109 = Fieldref           #673.#674    // com/fasterxml/jackson/core/json/JsonReadFeature.ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS:Lcom/fasterxml/jackson/core/json/JsonReadFeature;\n+   #110 = Methodref          #673.#675    // com/fasterxml/jackson/core/json/JsonReadFeature.mappedFeature:()Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #111 = Methodref          #292.#676    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.isEnabled:(Lcom/fasterxml/jackson/core/JsonParser$Feature;)Z\n+   #112 = Methodref          #292.#677    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._parsePosNumber:()Lcom/fasterxml/jackson/core/JsonToken;\n+   #113 = Methodref          #292.#678    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._handleUnexpectedValue:(I)Lcom/fasterxml/jackson/core/JsonToken;\n+   #114 = Methodref          #292.#679    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._parseFloatThatStartsWithPeriod:(ZZ)Lcom/fasterxml/jackson/core/JsonToken;\n+   #115 = Methodref          #292.#680    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._parseUnsignedNumber:(I)Lcom/fasterxml/jackson/core/JsonToken;\n+   #116 = String             #681         // false\n+   #117 = Methodref          #292.#682    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._matchToken:(Ljava/lang/String;I)V\n+   #118 = Fieldref           #363.#683    // com/fasterxml/jackson/core/JsonToken.VALUE_FALSE:Lcom/fasterxml/jackson/core/JsonToken;\n+   #119 = String             #684         // null\n+   #120 = Fieldref           #363.#685    // com/fasterxml/jackson/core/JsonToken.VALUE_NULL:Lcom/fasterxml/jackson/core/JsonToken;\n+   #121 = String             #686         // true\n+   #122 = Fieldref           #363.#687    // com/fasterxml/jackson/core/JsonToken.VALUE_TRUE:Lcom/fasterxml/jackson/core/JsonToken;\n+   #123 = Fieldref           #363.#688    // com/fasterxml/jackson/core/JsonToken.START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n+   #124 = Fieldref           #363.#689    // com/fasterxml/jackson/core/JsonToken.START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+   #125 = Fieldref           #292.#690    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._tokenInputCol:I\n+   #126 = Methodref          #292.#691    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.createChildArrayContext:(II)V\n+   #127 = Methodref          #292.#692    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.createChildObjectContext:(II)V\n+   #128 = Methodref          #292.#693    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+   #129 = Methodref          #292.#694    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.getIntValue:()I\n+   #130 = Methodref          #292.#695    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.getLongValue:()J\n+   #131 = Fieldref           #696.#697    // java/lang/Boolean.TRUE:Ljava/lang/Boolean;\n+   #132 = Fieldref           #696.#698    // java/lang/Boolean.FALSE:Ljava/lang/Boolean;\n+   #133 = Fieldref           #673.#699    // com/fasterxml/jackson/core/json/JsonReadFeature.ALLOW_LEADING_DECIMAL_POINT_FOR_NUMBERS:Lcom/fasterxml/jackson/core/json/JsonReadFeature;\n+   #134 = Methodref          #576.#700    // com/fasterxml/jackson/core/util/TextBuffer.emptyAndGetCurrentSegment:()[C\n+   #135 = Methodref          #292.#701    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._parseFloat:([CIIZI)Lcom/fasterxml/jackson/core/JsonToken;\n+   #136 = Methodref          #292.#702    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._handleLeadingZeroes:()I\n+   #137 = Methodref          #292.#703    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._handleInvalidNumberStart:(IZ)Lcom/fasterxml/jackson/core/JsonToken;\n+   #138 = Methodref          #576.#704    // com/fasterxml/jackson/core/util/TextBuffer.finishCurrentSegment:()[C\n+   #139 = Methodref          #576.#705    // com/fasterxml/jackson/core/util/TextBuffer.setCurrentLength:(I)V\n+   #140 = Methodref          #583.#706    // com/fasterxml/jackson/core/json/JsonReadContext.inRoot:()Z\n+   #141 = Methodref          #292.#707    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._verifyRootSpace:()V\n+   #142 = Methodref          #292.#708    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.resetInt:(ZI)Lcom/fasterxml/jackson/core/JsonToken;\n+   #143 = Methodref          #292.#709    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._parseSignedNumber:(Z)Lcom/fasterxml/jackson/core/JsonToken;\n+   #144 = Methodref          #292.#710    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._handleInvalidNumberStart:(IZZ)Lcom/fasterxml/jackson/core/JsonToken;\n+   #145 = Fieldref           #292.#711    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.FEAT_MASK_LEADING_ZEROS:I\n+   #146 = String             #712         // Leading zeroes not allowed\n+   #147 = Methodref          #292.#713    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.reportInvalidNumber:(Ljava/lang/String;)V\n+   #148 = Fieldref           #673.#714    // com/fasterxml/jackson/core/json/JsonReadFeature.ALLOW_TRAILING_DECIMAL_POINT_FOR_NUMBERS:Lcom/fasterxml/jackson/core/json/JsonReadFeature;\n+   #149 = String             #715         // Decimal point not followed by a digit\n+   #150 = Methodref          #292.#716    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._reportUnexpectedNumberChar:(ILjava/lang/String;)Ljava/lang/Object;\n+   #151 = String             #717         // Exponent indicator not followed by a digit\n+   #152 = Methodref          #292.#718    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.resetFloat:(ZIII)Lcom/fasterxml/jackson/core/JsonToken;\n+   #153 = Methodref          #292.#719    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._reportMissingRootWS:(I)V\n+   #154 = Methodref          #292.#720    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._handleOddName:(I)Ljava/lang/String;\n+   #155 = Fieldref           #292.#721    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._icLatin1:[I\n+   #156 = Fieldref           #292.#722    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._quad1:I\n+   #157 = Methodref          #292.#723    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._parseMediumName:(I)Ljava/lang/String;\n+   #158 = Methodref          #292.#724    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.findName:(II)Ljava/lang/String;\n+   #159 = Methodref          #292.#725    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.parseName:(III)Ljava/lang/String;\n+   #160 = String             #726         //\n+   #161 = Methodref          #292.#727    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.findName:(III)Ljava/lang/String;\n+   #162 = Methodref          #292.#728    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.parseName:(IIII)Ljava/lang/String;\n+   #163 = Methodref          #292.#729    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._parseMediumName2:(II)Ljava/lang/String;\n+   #164 = Methodref          #292.#730    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.findName:(IIII)Ljava/lang/String;\n+   #165 = Methodref          #292.#731    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.parseName:(IIIII)Ljava/lang/String;\n+   #166 = Methodref          #292.#732    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._parseLongName:(III)Ljava/lang/String;\n+   #167 = Methodref          #292.#733    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.findName:([IIII)Ljava/lang/String;\n+   #168 = Methodref          #292.#734    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.parseEscapedName:([IIIII)Ljava/lang/String;\n+   #169 = Methodref          #292.#735    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._growArrayBy:([II)[I\n    #170 = String             #374         // name\n-   #171 = Methodref          #292.#745    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._throwUnquotedSpace:(ILjava/lang/String;)V\n-   #172 = Methodref          #292.#746    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._decodeEscaped:()C\n-   #173 = Methodref          #292.#747    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.pad:(II)I\n-   #174 = Methodref          #575.#748    // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:([II)Ljava/lang/String;\n-   #175 = Methodref          #292.#749    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.addName:([III)Ljava/lang/String;\n-   #176 = Fieldref           #292.#750    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.FEAT_MASK_ALLOW_SINGLE_QUOTES:I\n-   #177 = Methodref          #292.#751    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._parseAposName:()Ljava/lang/String;\n-   #178 = Fieldref           #292.#752    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.FEAT_MASK_ALLOW_UNQUOTED_NAMES:I\n-   #179 = Methodref          #292.#753    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._decodeCharForError:(I)I\n-   #180 = String             #754         // was expecting double-quote to start field name\n-   #181 = Methodref          #755.#756    // com/fasterxml/jackson/core/io/CharTypes.getInputCodeUtf8JsNames:()[I\n-   #182 = String             #757         // was expecting either valid name character (for unquoted name) or double-quote (for quoted) to start field name\n-   #183 = Methodref          #575.#758    // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(I)Ljava/lang/String;\n-   #184 = Methodref          #575.#733    // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(II)Ljava/lang/String;\n-   #185 = Methodref          #575.#736    // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(III)Ljava/lang/String;\n-   #186 = Methodref          #292.#759    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._reportInvalidInitial:(I)V\n-   #187 = String             #760         //  in field name\n-   #188 = Methodref          #292.#761    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._reportInvalidEOF:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n-   #189 = Methodref          #292.#762    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._reportInvalidOther:(I)V\n+   #171 = Methodref          #292.#736    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._throwUnquotedSpace:(ILjava/lang/String;)V\n+   #172 = Methodref          #292.#737    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._decodeEscaped:()C\n+   #173 = Methodref          #292.#738    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.pad:(II)I\n+   #174 = Methodref          #569.#739    // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:([II)Ljava/lang/String;\n+   #175 = Methodref          #292.#740    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.addName:([III)Ljava/lang/String;\n+   #176 = Fieldref           #292.#741    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.FEAT_MASK_ALLOW_SINGLE_QUOTES:I\n+   #177 = Methodref          #292.#742    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._parseAposName:()Ljava/lang/String;\n+   #178 = Fieldref           #292.#743    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.FEAT_MASK_ALLOW_UNQUOTED_NAMES:I\n+   #179 = Methodref          #292.#744    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._decodeCharForError:(I)I\n+   #180 = String             #745         // was expecting double-quote to start field name\n+   #181 = Methodref          #746.#747    // com/fasterxml/jackson/core/io/CharTypes.getInputCodeUtf8JsNames:()[I\n+   #182 = String             #748         // was expecting either valid name character (for unquoted name) or double-quote (for quoted) to start field name\n+   #183 = Methodref          #569.#749    // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(I)Ljava/lang/String;\n+   #184 = Methodref          #569.#724    // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(II)Ljava/lang/String;\n+   #185 = Methodref          #569.#727    // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(III)Ljava/lang/String;\n+   #186 = Methodref          #292.#750    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._reportInvalidInitial:(I)V\n+   #187 = String             #751         //  in field name\n+   #188 = Methodref          #292.#752    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._reportInvalidEOF:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n+   #189 = Methodref          #292.#753    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._reportInvalidOther:(I)V\n    #190 = Integer            65536\n-   #191 = Methodref          #583.#763    // com/fasterxml/jackson/core/util/TextBuffer.expandCurrentSegment:()[C\n+   #191 = Methodref          #576.#754    // com/fasterxml/jackson/core/util/TextBuffer.expandCurrentSegment:()[C\n    #192 = Integer            55296\n    #193 = Integer            56320\n-   #194 = Class              #764         // java/lang/String\n-   #195 = Methodref          #194.#765    // java/lang/String.\"<init>\":([CII)V\n-   #196 = Methodref          #575.#766    // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.addName:(Ljava/lang/String;[II)Ljava/lang/String;\n-   #197 = Fieldref           #292.#767    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._icUTF8:[I\n-   #198 = Methodref          #292.#768    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._finishString2:([CII)V\n-   #199 = Methodref          #583.#769    // com/fasterxml/jackson/core/util/TextBuffer.setCurrentAndReturn:(I)Ljava/lang/String;\n-   #200 = Methodref          #292.#770    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._decodeUtf8_2:(I)I\n-   #201 = Methodref          #292.#771    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._decodeUtf8_3:(I)I\n-   #202 = Methodref          #292.#772    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._decodeUtf8_4:(I)I\n-   #203 = String             #773         // string value\n-   #204 = Methodref          #292.#774    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._reportInvalidChar:(I)V\n-   #205 = Methodref          #292.#775    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._skipUtf8_2:()V\n-   #206 = Methodref          #292.#776    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._skipUtf8_3:()V\n-   #207 = Methodref          #292.#777    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._skipUtf8_4:()V\n-   #208 = Methodref          #590.#778    // com/fasterxml/jackson/core/json/JsonReadContext.inArray:()Z\n-   #209 = Fieldref           #292.#779    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.FEAT_MASK_ALLOW_MISSING:I\n-   #210 = String             #780         // expected a value\n-   #211 = Methodref          #292.#781    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._handleApos:()Lcom/fasterxml/jackson/core/JsonToken;\n-   #212 = String             #782         // NaN\n-   #213 = Fieldref           #292.#783    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.FEAT_MASK_NON_NUM_NUMBERS:I\n-   #214 = Class              #784         // java/lang/Double\n+   #194 = Class              #755         // java/lang/String\n+   #195 = Methodref          #194.#756    // java/lang/String.\"<init>\":([CII)V\n+   #196 = Methodref          #569.#757    // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.addName:(Ljava/lang/String;[II)Ljava/lang/String;\n+   #197 = Fieldref           #292.#758    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._icUTF8:[I\n+   #198 = Methodref          #292.#759    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._finishString2:([CII)V\n+   #199 = Methodref          #576.#760    // com/fasterxml/jackson/core/util/TextBuffer.setCurrentAndReturn:(I)Ljava/lang/String;\n+   #200 = Methodref          #292.#761    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._decodeUtf8_2:(I)I\n+   #201 = Methodref          #292.#762    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._decodeUtf8_3:(I)I\n+   #202 = Methodref          #292.#763    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._decodeUtf8_4:(I)I\n+   #203 = String             #764         // string value\n+   #204 = Methodref          #292.#765    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._reportInvalidChar:(I)V\n+   #205 = Methodref          #292.#766    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._skipUtf8_2:()V\n+   #206 = Methodref          #292.#767    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._skipUtf8_3:()V\n+   #207 = Methodref          #292.#768    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._skipUtf8_4:()V\n+   #208 = Methodref          #583.#769    // com/fasterxml/jackson/core/json/JsonReadContext.inArray:()Z\n+   #209 = Fieldref           #292.#770    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.FEAT_MASK_ALLOW_MISSING:I\n+   #210 = String             #771         // expected a value\n+   #211 = Methodref          #292.#772    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._handleApos:()Lcom/fasterxml/jackson/core/JsonToken;\n+   #212 = String             #773         // NaN\n+   #213 = Fieldref           #292.#774    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.FEAT_MASK_NON_NUM_NUMBERS:I\n+   #214 = Class              #775         // java/lang/Double\n    #215 = Double             NaNd\n-   #217 = Methodref          #292.#785    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.resetAsNaN:(Ljava/lang/String;D)Lcom/fasterxml/jackson/core/JsonToken;\n-   #218 = String             #786         // Non-standard token \\'NaN\\': enable `JsonReadFeature.ALLOW_NON_NUMERIC_NUMBERS` to allow\n-   #219 = String             #787         // Infinity\n+   #217 = Methodref          #292.#776    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.resetAsNaN:(Ljava/lang/String;D)Lcom/fasterxml/jackson/core/JsonToken;\n+   #218 = String             #777         // Non-standard token \\'NaN\\': enable `JsonReadFeature.ALLOW_NON_NUMERIC_NUMBERS` to allow\n+   #219 = String             #778         // Infinity\n    #220 = Double             Infinityd\n-   #222 = String             #788         // Non-standard token \\'Infinity\\': enable `JsonReadFeature.ALLOW_NON_NUMERIC_NUMBERS` to allow\n-   #223 = Methodref          #789.#790    // java/lang/Character.isJavaIdentifierStart:(I)Z\n-   #224 = Methodref          #292.#791    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._validJsonTokenList:()Ljava/lang/String;\n-   #225 = Methodref          #292.#792    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._reportInvalidToken:(ILjava/lang/String;Ljava/lang/String;)V\n-   #226 = String             #793         // expected a valid value\n-   #227 = Methodref          #292.#794    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._validJsonValueList:()Ljava/lang/String;\n-   #228 = String             #795         // -INF\n-   #229 = String             #796         // +INF\n-   #230 = String             #797         // -Infinity\n-   #231 = String             #798         // +Infinity\n+   #222 = String             #779         // Non-standard token \\'Infinity\\': enable `JsonReadFeature.ALLOW_NON_NUMERIC_NUMBERS` to allow\n+   #223 = Methodref          #780.#781    // java/lang/Character.isJavaIdentifierStart:(I)Z\n+   #224 = Methodref          #292.#782    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._validJsonTokenList:()Ljava/lang/String;\n+   #225 = Methodref          #292.#783    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._reportInvalidToken:(ILjava/lang/String;Ljava/lang/String;)V\n+   #226 = String             #784         // expected a valid value\n+   #227 = Methodref          #292.#785    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._validJsonValueList:()Ljava/lang/String;\n+   #228 = String             #786         // -INF\n+   #229 = String             #787         // +INF\n+   #230 = String             #788         // -Infinity\n+   #231 = String             #789         // +Infinity\n    #232 = Double             -Infinityd\n-   #234 = String             #799         // Non-standard token \\'\n-   #235 = String             #800         // \\': enable `JsonReadFeature.ALLOW_NON_NUMERIC_NUMBERS` to allow\n-   #236 = String             #801         // JSON spec does not allow numbers to have plus signs: enable `JsonReadFeature.ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS` to allow\n-   #237 = String             #802         // expected digit (0-9) to follow minus sign, for valid numeric value\n-   #238 = String             #803         // expected digit (0-9) for valid numeric value\n-   #239 = Methodref          #194.#804    // java/lang/String.charAt:(I)C\n-   #240 = Methodref          #194.#805    // java/lang/String.substring:(II)Ljava/lang/String;\n-   #241 = Methodref          #292.#806    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._reportInvalidToken:(ILjava/lang/String;)V\n-   #242 = Methodref          #292.#807    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._checkMatchEnd:(Ljava/lang/String;II)V\n-   #243 = Methodref          #789.#808    // java/lang/Character.isJavaIdentifierPart:(C)Z\n-   #244 = Methodref          #292.#809    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._skipWSComment:(I)I\n-   #245 = Class              #810         // java/io/EOFException\n-   #246 = Methodref          #292.#811    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._eofAsNextChar:()I\n-   #247 = Methodref          #292.#812    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._skipComment:()V\n-   #248 = Methodref          #292.#813    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._skipYAMLComment:()Z\n-   #249 = Methodref          #292.#814    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._skipColon2:(IZ)I\n-   #250 = String             #815         // was expecting a colon to separate field name and value\n-   #251 = Fieldref           #292.#816    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.FEAT_MASK_ALLOW_JAVA_COMMENTS:I\n-   #252 = String             #817         // maybe a (non-standard) comment? (not recognized as one since Feature \\'ALLOW_COMMENTS\\' not enabled for parser)\n-   #253 = Methodref          #292.#818    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._skipLine:()V\n-   #254 = Methodref          #292.#819    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._skipCComment:()V\n-   #255 = String             #820         // was expecting either \\'*\\' or \\'/\\' for a comment\n-   #256 = Methodref          #755.#821    // com/fasterxml/jackson/core/io/CharTypes.getInputCodeComment:()[I\n-   #257 = Fieldref           #292.#822    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.FEAT_MASK_ALLOW_YAML_COMMENTS:I\n-   #258 = Methodref          #292.#823    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._handleUnrecognizedCharacterEscape:(C)C\n-   #259 = Methodref          #755.#824    // com/fasterxml/jackson/core/io/CharTypes.charToHex:(I)I\n-   #260 = String             #825         // expected a hex-digit for character escape sequence\n-   #261 = Methodref          #50.#826     // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n-   #262 = String             #827         // Unrecognized token \\'\n-   #263 = String             #828         // \\': was expecting\n-   #264 = Methodref          #292.#829    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._throwInvalidSpace:(I)V\n-   #265 = String             #830         // Invalid UTF-8 start byte 0x\n-   #266 = Methodref          #831.#832    // java/lang/Integer.toHexString:(I)Ljava/lang/String;\n-   #267 = String             #833         // Invalid UTF-8 middle byte 0x\n-   #268 = Methodref          #834.#835    // java/util/Arrays.copyOf:([II)[I\n-   #269 = Methodref          #637.#836    // com/fasterxml/jackson/core/util/ByteArrayBuilder.append:(I)V\n-   #270 = Methodref          #637.#837    // com/fasterxml/jackson/core/util/ByteArrayBuilder.appendTwoBytes:(I)V\n-   #271 = Methodref          #637.#838    // com/fasterxml/jackson/core/util/ByteArrayBuilder.appendThreeBytes:(I)V\n-   #272 = Class              #839         // com/fasterxml/jackson/core/JsonLocation\n-   #273 = Methodref          #292.#840    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._contentReference:()Lcom/fasterxml/jackson/core/io/ContentReference;\n+   #234 = String             #790         // Non-standard token \\'\n+   #235 = String             #791         // \\': enable `JsonReadFeature.ALLOW_NON_NUMERIC_NUMBERS` to allow\n+   #236 = String             #792         // JSON spec does not allow numbers to have plus signs: enable `JsonReadFeature.ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS` to allow\n+   #237 = String             #793         // expected digit (0-9) to follow minus sign, for valid numeric value\n+   #238 = String             #794         // expected digit (0-9) for valid numeric value\n+   #239 = Methodref          #194.#795    // java/lang/String.charAt:(I)C\n+   #240 = Methodref          #194.#796    // java/lang/String.substring:(II)Ljava/lang/String;\n+   #241 = Methodref          #292.#797    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._reportInvalidToken:(ILjava/lang/String;)V\n+   #242 = Methodref          #292.#798    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._checkMatchEnd:(Ljava/lang/String;II)V\n+   #243 = Methodref          #780.#799    // java/lang/Character.isJavaIdentifierPart:(C)Z\n+   #244 = Methodref          #292.#800    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._skipWSComment:(I)I\n+   #245 = Class              #801         // java/io/EOFException\n+   #246 = Methodref          #292.#802    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._eofAsNextChar:()I\n+   #247 = Methodref          #292.#803    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._skipComment:()V\n+   #248 = Methodref          #292.#804    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._skipYAMLComment:()Z\n+   #249 = Methodref          #292.#805    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._skipColon2:(IZ)I\n+   #250 = String             #806         // was expecting a colon to separate field name and value\n+   #251 = Fieldref           #292.#807    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.FEAT_MASK_ALLOW_JAVA_COMMENTS:I\n+   #252 = String             #808         // maybe a (non-standard) comment? (not recognized as one since Feature \\'ALLOW_COMMENTS\\' not enabled for parser)\n+   #253 = Methodref          #292.#809    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._skipLine:()V\n+   #254 = Methodref          #292.#810    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._skipCComment:()V\n+   #255 = String             #811         // was expecting either \\'*\\' or \\'/\\' for a comment\n+   #256 = Methodref          #746.#812    // com/fasterxml/jackson/core/io/CharTypes.getInputCodeComment:()[I\n+   #257 = Fieldref           #292.#813    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser.FEAT_MASK_ALLOW_YAML_COMMENTS:I\n+   #258 = Methodref          #292.#814    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._handleUnrecognizedCharacterEscape:(C)C\n+   #259 = Methodref          #746.#815    // com/fasterxml/jackson/core/io/CharTypes.charToHex:(I)I\n+   #260 = String             #816         // expected a hex-digit for character escape sequence\n+   #261 = Methodref          #50.#817     // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+   #262 = String             #818         // Unrecognized token \\'\n+   #263 = String             #819         // \\': was expecting\n+   #264 = Methodref          #292.#820    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._throwInvalidSpace:(I)V\n+   #265 = String             #821         // Invalid UTF-8 start byte 0x\n+   #266 = Methodref          #822.#823    // java/lang/Integer.toHexString:(I)Ljava/lang/String;\n+   #267 = String             #824         // Invalid UTF-8 middle byte 0x\n+   #268 = Methodref          #825.#826    // java/util/Arrays.copyOf:([II)[I\n+   #269 = Methodref          #548.#827    // com/fasterxml/jackson/core/util/ByteArrayBuilder.append:(I)V\n+   #270 = Methodref          #548.#828    // com/fasterxml/jackson/core/util/ByteArrayBuilder.appendTwoBytes:(I)V\n+   #271 = Methodref          #548.#829    // com/fasterxml/jackson/core/util/ByteArrayBuilder.appendThreeBytes:(I)V\n+   #272 = Class              #830         // com/fasterxml/jackson/core/JsonLocation\n+   #273 = Methodref          #292.#831    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._contentReference:()Lcom/fasterxml/jackson/core/io/ContentReference;\n    #274 = Long               -1l\n-   #276 = Methodref          #272.#841    // com/fasterxml/jackson/core/JsonLocation.\"<init>\":(Lcom/fasterxml/jackson/core/io/ContentReference;JJII)V\n-   #277 = Methodref          #292.#842    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._reportMismatchedEndMarker:(IC)V\n-   #278 = Methodref          #590.#843    // com/fasterxml/jackson/core/json/JsonReadContext.clearAndGetParent:()Lcom/fasterxml/jackson/core/json/JsonReadContext;\n-   #279 = Fieldref           #578.#844    // com/fasterxml/jackson/core/JsonToken.END_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n-   #280 = Fieldref           #578.#845    // com/fasterxml/jackson/core/JsonToken.END_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n-   #281 = Fieldref           #846.#847    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_TRAILING_COMMA:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #282 = Methodref          #846.#848    // com/fasterxml/jackson/core/JsonParser$Feature.getMask:()I\n-   #283 = Fieldref           #846.#849    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_NUMERIC_LEADING_ZEROS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #284 = Fieldref           #846.#850    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_NON_NUMERIC_NUMBERS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #285 = Fieldref           #846.#851    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_MISSING_VALUES:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #286 = Fieldref           #846.#852    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_SINGLE_QUOTES:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #287 = Fieldref           #846.#853    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_UNQUOTED_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #288 = Fieldref           #846.#854    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_COMMENTS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #289 = Fieldref           #846.#855    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_YAML_COMMENTS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #290 = Methodref          #755.#856    // com/fasterxml/jackson/core/io/CharTypes.getInputCodeUtf8:()[I\n-   #291 = Methodref          #755.#857    // com/fasterxml/jackson/core/io/CharTypes.getInputCodeLatin1:()[I\n-   #292 = Class              #858         // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser\n-   #293 = Class              #859         // com/fasterxml/jackson/core/base/ParserBase\n+   #276 = Methodref          #272.#832    // com/fasterxml/jackson/core/JsonLocation.\"<init>\":(Lcom/fasterxml/jackson/core/io/ContentReference;JJII)V\n+   #277 = Methodref          #292.#833    // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser._reportMismatchedEndMarker:(IC)V\n+   #278 = Methodref          #583.#834    // com/fasterxml/jackson/core/json/JsonReadContext.clearAndGetParent:()Lcom/fasterxml/jackson/core/json/JsonReadContext;\n+   #279 = Fieldref           #363.#835    // com/fasterxml/jackson/core/JsonToken.END_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n+   #280 = Fieldref           #363.#836    // com/fasterxml/jackson/core/JsonToken.END_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+   #281 = Fieldref           #837.#838    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_TRAILING_COMMA:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #282 = Methodref          #837.#839    // com/fasterxml/jackson/core/JsonParser$Feature.getMask:()I\n+   #283 = Fieldref           #837.#840    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_NUMERIC_LEADING_ZEROS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #284 = Fieldref           #837.#841    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_NON_NUMERIC_NUMBERS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #285 = Fieldref           #837.#842    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_MISSING_VALUES:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #286 = Fieldref           #837.#843    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_SINGLE_QUOTES:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #287 = Fieldref           #837.#844    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_UNQUOTED_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #288 = Fieldref           #837.#845    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_COMMENTS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #289 = Fieldref           #837.#846    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_YAML_COMMENTS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #290 = Methodref          #746.#847    // com/fasterxml/jackson/core/io/CharTypes.getInputCodeUtf8:()[I\n+   #291 = Methodref          #746.#848    // com/fasterxml/jackson/core/io/CharTypes.getInputCodeLatin1:()[I\n+   #292 = Class              #849         // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser\n+   #293 = Class              #850         // com/fasterxml/jackson/core/base/ParserBase\n    #294 = Utf8               FEAT_MASK_TRAILING_COMMA\n    #295 = Utf8               I\n    #296 = Utf8               FEAT_MASK_LEADING_ZEROS\n    #297 = Utf8               FEAT_MASK_NON_NUM_NUMBERS\n    #298 = Utf8               FEAT_MASK_ALLOW_MISSING\n    #299 = Utf8               FEAT_MASK_ALLOW_SINGLE_QUOTES\n    #300 = Utf8               FEAT_MASK_ALLOW_UNQUOTED_NAMES\n@@ -344,15 +344,15 @@\n    #338 = Utf8               Signature\n    #339 = Utf8               ()Lcom/fasterxml/jackson/core/util/JacksonFeatureSet<Lcom/fasterxml/jackson/core/StreamReadCapability;>;\n    #340 = Utf8               releaseBuffered\n    #341 = Utf8               (Ljava/io/OutputStream;)I\n    #342 = Utf8               out\n    #343 = Utf8               Ljava/io/OutputStream;\n    #344 = Utf8               Exceptions\n-   #345 = Class              #860         // java/io/IOException\n+   #345 = Class              #851         // java/io/IOException\n    #346 = Utf8               getInputSource\n    #347 = Utf8               ()Ljava/lang/Object;\n    #348 = Utf8               _closeInput\n    #349 = Utf8               ()V\n    #350 = Utf8               _releaseBuffers\n    #351 = Utf8               getText\n    #352 = Utf8               ()Ljava/lang/String;\n@@ -362,701 +362,692 @@\n    #356 = Utf8               Ljava/lang/String;\n    #357 = Utf8               ch\n    #358 = Utf8               [C\n    #359 = Utf8               writer\n    #360 = Utf8               Ljava/io/Writer;\n    #361 = Utf8               t\n    #362 = Utf8               Lcom/fasterxml/jackson/core/JsonToken;\n-   #363 = Class              #861         // com/fasterxml/jackson/core/JsonToken\n+   #363 = Class              #852         // com/fasterxml/jackson/core/JsonToken\n    #364 = Utf8               getValueAsString\n    #365 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n    #366 = Utf8               defValue\n    #367 = Utf8               getValueAsInt\n    #368 = Utf8               ()I\n    #369 = Utf8               (I)I\n    #370 = Utf8               _getText2\n    #371 = Utf8               (Lcom/fasterxml/jackson/core/JsonToken;)Ljava/lang/String;\n    #372 = Utf8               getTextCharacters\n    #373 = Utf8               ()[C\n    #374 = Utf8               name\n    #375 = Utf8               nameLen\n-   #376 = Class              #764         // java/lang/String\n-   #377 = Utf8               getTextLength\n-   #378 = Utf8               getTextOffset\n-   #379 = Utf8               getBinaryValue\n-   #380 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;)[B\n-   #381 = Utf8               iae\n-   #382 = Utf8               Ljava/lang/IllegalArgumentException;\n-   #383 = Utf8               builder\n-   #384 = Utf8               Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n-   #385 = Utf8               b64variant\n-   #386 = Utf8               Lcom/fasterxml/jackson/core/Base64Variant;\n-   #387 = Class              #629         // java/lang/IllegalArgumentException\n-   #388 = Utf8               readBinaryValue\n-   #389 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/OutputStream;)I\n-   #390 = Utf8               b\n-   #391 = Utf8               [B\n-   #392 = Utf8               buf\n-   #393 = Class              #858         // com/fasterxml/jackson/core/json/UTF8DataInputJsonParser\n-   #394 = Class              #650         // com/fasterxml/jackson/core/Base64Variant\n-   #395 = Class              #862         // java/io/OutputStream\n-   #396 = Class              #391         // \"[B\"\n-   #397 = Class              #863         // java/lang/Throwable\n-   #398 = Utf8               _readBinary\n-   #399 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/OutputStream;[B)I\n-   #400 = Utf8               bits\n-   #401 = Utf8               decodedData\n-   #402 = Utf8               buffer\n-   #403 = Utf8               outputPtr\n-   #404 = Utf8               outputEnd\n-   #405 = Utf8               outputCount\n-   #406 = Utf8               nextToken\n-   #407 = Utf8               ()Lcom/fasterxml/jackson/core/JsonToken;\n-   #408 = Utf8               i\n-   #409 = Utf8               _nextTokenNotInObject\n-   #410 = Utf8               (I)Lcom/fasterxml/jackson/core/JsonToken;\n-   #411 = Utf8               _nextAfterName\n-   #412 = Utf8               finishToken\n-   #413 = Utf8               nextFieldName\n-   #414 = Utf8               nameStr\n-   #415 = Utf8               nextTextValue\n-   #416 = Utf8               nextIntValue\n-   #417 = Utf8               defaultValue\n-   #418 = Utf8               nextLongValue\n-   #419 = Utf8               (J)J\n-   #420 = Utf8               J\n-   #421 = Utf8               nextBooleanValue\n-   #422 = Utf8               ()Ljava/lang/Boolean;\n-   #423 = Utf8               _parseFloatThatStartsWithPeriod\n-   #424 = Utf8               Deprecated\n-   #425 = Utf8               RuntimeVisibleAnnotations\n-   #426 = Utf8               Ljava/lang/Deprecated;\n-   #427 = Utf8               (ZZ)Lcom/fasterxml/jackson/core/JsonToken;\n-   #428 = Utf8               neg\n-   #429 = Utf8               hasSign\n-   #430 = Utf8               outBuf\n-   #431 = Utf8               outPtr\n-   #432 = Class              #358         // \"[C\"\n-   #433 = Utf8               _parseUnsignedNumber\n-   #434 = Utf8               intLen\n-   #435 = Utf8               _parsePosNumber\n-   #436 = Utf8               _parseNegNumber\n-   #437 = Utf8               _parseSignedNumber\n-   #438 = Utf8               (Z)Lcom/fasterxml/jackson/core/JsonToken;\n-   #439 = Utf8               negative\n-   #440 = Utf8               _handleLeadingZeroes\n-   #441 = Utf8               _parseFloat\n-   #442 = Utf8               ([CIIZI)Lcom/fasterxml/jackson/core/JsonToken;\n-   #443 = Utf8               integerPartLength\n-   #444 = Utf8               fractLen\n-   #445 = Utf8               expLen\n-   #446 = Utf8               _verifyRootSpace\n-   #447 = Utf8               _parseName\n-   #448 = Utf8               (I)Ljava/lang/String;\n-   #449 = Utf8               codes\n-   #450 = Utf8               q\n-   #451 = Class              #304         // \"[I\"\n-   #452 = Utf8               _parseMediumName\n-   #453 = Utf8               q2\n-   #454 = Utf8               _parseMediumName2\n-   #455 = Utf8               (II)Ljava/lang/String;\n-   #456 = Utf8               q3\n-   #457 = Utf8               _parseLongName\n-   #458 = Utf8               (III)Ljava/lang/String;\n-   #459 = Utf8               qlen\n-   #460 = Utf8               parseName\n-   #461 = Utf8               q1\n-   #462 = Utf8               lastQuadBytes\n-   #463 = Utf8               (IIII)Ljava/lang/String;\n-   #464 = Utf8               (IIIII)Ljava/lang/String;\n-   #465 = Utf8               parseEscapedName\n-   #466 = Utf8               ([IIIII)Ljava/lang/String;\n-   #467 = Utf8               quads\n-   #468 = Utf8               currQuad\n-   #469 = Utf8               currQuadBytes\n-   #470 = Utf8               _handleOddName\n-   #471 = Utf8               C\n-   #472 = Utf8               _parseAposName\n-   #473 = Utf8               findName\n-   #474 = Class              #864         // com/fasterxml/jackson/core/JsonParseException\n-   #475 = Class              #865         // com/fasterxml/jackson/core/exc/StreamConstraintsException\n-   #476 = Utf8               ([IIII)Ljava/lang/String;\n-   #477 = Utf8               lastQuad\n-   #478 = Utf8               addName\n-   #479 = Utf8               ([III)Ljava/lang/String;\n-   #480 = Utf8               needed\n-   #481 = Utf8               ch2\n-   #482 = Utf8               byteIx\n-   #483 = Utf8               ix\n-   #484 = Utf8               byteLen\n-   #485 = Utf8               cbuf\n-   #486 = Utf8               cix\n-   #487 = Utf8               baseName\n-   #488 = Utf8               _finishString\n-   #489 = Utf8               outEnd\n-   #490 = Utf8               _finishAndReturnString\n-   #491 = Utf8               _finishString2\n-   #492 = Utf8               ([CII)V\n-   #493 = Utf8               _skipString\n-   #494 = Utf8               _handleUnexpectedValue\n-   #495 = Utf8               _handleApos\n-   #496 = Utf8               _handleInvalidNumberStart\n-   #497 = Utf8               (IZ)Lcom/fasterxml/jackson/core/JsonToken;\n-   #498 = Utf8               (IZZ)Lcom/fasterxml/jackson/core/JsonToken;\n-   #499 = Utf8               match\n-   #500 = Utf8               message\n-   #501 = Utf8               _matchToken\n-   #502 = Utf8               (Ljava/lang/String;I)V\n-   #503 = Utf8               matchStr\n-   #504 = Utf8               len\n-   #505 = Utf8               _checkMatchEnd\n-   #506 = Utf8               (Ljava/lang/String;II)V\n-   #507 = Utf8               _skipWS\n-   #508 = Utf8               _skipWSOrEnd\n-   #509 = Utf8               e\n-   #510 = Utf8               Ljava/io/EOFException;\n-   #511 = Class              #810         // java/io/EOFException\n-   #512 = Utf8               _skipWSComment\n-   #513 = Utf8               _skipColon\n-   #514 = Utf8               _skipColon2\n-   #515 = Utf8               (IZ)I\n-   #516 = Utf8               gotColon\n-   #517 = Utf8               _skipComment\n-   #518 = Utf8               _skipCComment\n-   #519 = Utf8               code\n-   #520 = Utf8               _skipYAMLComment\n-   #521 = Utf8               ()Z\n-   #522 = Utf8               _skipLine\n-   #523 = Utf8               _decodeEscaped\n-   #524 = Utf8               ()C\n-   #525 = Utf8               digit\n-   #526 = Utf8               value\n-   #527 = Utf8               _decodeCharForError\n-   #528 = Utf8               d\n-   #529 = Utf8               _decodeUtf8_2\n-   #530 = Utf8               _decodeUtf8_3\n-   #531 = Utf8               c1\n-   #532 = Utf8               _decodeUtf8_4\n-   #533 = Utf8               _skipUtf8_2\n-   #534 = Utf8               _skipUtf8_3\n-   #535 = Utf8               _skipUtf8_4\n-   #536 = Utf8               _reportInvalidToken\n-   #537 = Utf8               (ILjava/lang/String;)V\n-   #538 = Utf8               matchedPart\n-   #539 = Utf8               (ILjava/lang/String;Ljava/lang/String;)V\n-   #540 = Utf8               msg\n-   #541 = Utf8               sb\n-   #542 = Utf8               Ljava/lang/StringBuilder;\n-   #543 = Class              #620         // java/lang/StringBuilder\n-   #544 = Utf8               _reportInvalidChar\n-   #545 = Utf8               (I)V\n-   #546 = Utf8               _reportInvalidInitial\n-   #547 = Utf8               mask\n-   #548 = Utf8               _reportInvalidOther\n-   #549 = Utf8               _growArrayBy\n-   #550 = Utf8               ([II)[I\n-   #551 = Utf8               arr\n-   #552 = Utf8               more\n-   #553 = Utf8               _decodeBase64\n-   #554 = Class              #866         // com/fasterxml/jackson/core/util/ByteArrayBuilder\n-   #555 = Utf8               getTokenLocation\n-   #556 = Utf8               ()Lcom/fasterxml/jackson/core/JsonLocation;\n-   #557 = Utf8               getCurrentLocation\n-   #558 = Utf8               col\n-   #559 = Utf8               _closeScope\n-   #560 = Utf8               pad\n-   #561 = Utf8               (II)I\n-   #562 = Utf8               bytes\n-   #563 = Utf8               <clinit>\n-   #564 = Utf8               SourceFile\n-   #565 = Utf8               UTF8DataInputJsonParser.java\n-   #566 = Utf8               com/fasterxml/jackson/core/JsonTokenId\n-   #567 = NameAndType        #317:#867    // \"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;I)V\n-   #568 = NameAndType        #310:#304    // _quadBuffer:[I\n-   #569 = NameAndType        #316:#295    // _nextByte:I\n-   #570 = NameAndType        #306:#307    // _objectCodec:Lcom/fasterxml/jackson/core/ObjectCodec;\n-   #571 = NameAndType        #308:#309    // _symbols:Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n-   #572 = NameAndType        #314:#315    // _inputData:Ljava/io/DataInput;\n-   #573 = NameAndType        #868:#869    // JSON_READ_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-   #574 = NameAndType        #350:#349    // _releaseBuffers:()V\n-   #575 = Class              #870         // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer\n-   #576 = NameAndType        #871:#349    // release:()V\n-   #577 = NameAndType        #872:#362    // _currToken:Lcom/fasterxml/jackson/core/JsonToken;\n-   #578 = Class              #861         // com/fasterxml/jackson/core/JsonToken\n-   #579 = NameAndType        #873:#362    // VALUE_STRING:Lcom/fasterxml/jackson/core/JsonToken;\n-   #580 = NameAndType        #311:#312    // _tokenIncomplete:Z\n-   #581 = NameAndType        #490:#352    // _finishAndReturnString:()Ljava/lang/String;\n-   #582 = NameAndType        #874:#875    // _textBuffer:Lcom/fasterxml/jackson/core/util/TextBuffer;\n-   #583 = Class              #876         // com/fasterxml/jackson/core/util/TextBuffer\n-   #584 = NameAndType        #877:#352    // contentsAsString:()Ljava/lang/String;\n-   #585 = NameAndType        #370:#371    // _getText2:(Lcom/fasterxml/jackson/core/JsonToken;)Ljava/lang/String;\n-   #586 = NameAndType        #488:#349    // _finishString:()V\n-   #587 = NameAndType        #878:#354    // contentsToWriter:(Ljava/io/Writer;)I\n-   #588 = NameAndType        #879:#362    // FIELD_NAME:Lcom/fasterxml/jackson/core/JsonToken;\n-   #589 = NameAndType        #880:#881    // _parsingContext:Lcom/fasterxml/jackson/core/json/JsonReadContext;\n-   #590 = Class              #882         // com/fasterxml/jackson/core/json/JsonReadContext\n-   #591 = NameAndType        #883:#352    // getCurrentName:()Ljava/lang/String;\n-   #592 = Class              #884         // java/io/Writer\n-   #593 = NameAndType        #885:#886    // write:(Ljava/lang/String;)V\n-   #594 = NameAndType        #887:#368    // length:()I\n-   #595 = NameAndType        #888:#521    // isNumeric:()Z\n-   #596 = NameAndType        #889:#373    // asCharArray:()[C\n-   #597 = NameAndType        #885:#890    // write:([C)V\n-   #598 = NameAndType        #364:#365    // getValueAsString:(Ljava/lang/String;)Ljava/lang/String;\n-   #599 = NameAndType        #891:#362    // VALUE_NUMBER_INT:Lcom/fasterxml/jackson/core/JsonToken;\n-   #600 = NameAndType        #892:#362    // VALUE_NUMBER_FLOAT:Lcom/fasterxml/jackson/core/JsonToken;\n-   #601 = NameAndType        #893:#295    // _numTypesValid:I\n-   #602 = Utf8               com/fasterxml/jackson/core/base/ParserMinimalBase\n-   #603 = NameAndType        #894:#368    // _parseIntValue:()I\n-   #604 = NameAndType        #895:#349    // convertNumberToInt:()V\n-   #605 = NameAndType        #896:#295    // _numberInt:I\n-   #606 = NameAndType        #367:#369    // getValueAsInt:(I)I\n-   #607 = NameAndType        #897:#368    // id:()I\n-   #608 = NameAndType        #898:#352    // asString:()Ljava/lang/String;\n-   #609 = NameAndType        #899:#312    // _nameCopied:Z\n-   #610 = NameAndType        #900:#358    // _nameCopyBuffer:[C\n-   #611 = NameAndType        #901:#325    // _ioContext:Lcom/fasterxml/jackson/core/io/IOContext;\n-   #612 = Class              #902         // com/fasterxml/jackson/core/io/IOContext\n-   #613 = NameAndType        #903:#904    // allocNameCopyBuffer:(I)[C\n-   #614 = NameAndType        #905:#906    // getChars:(II[CI)V\n-   #615 = NameAndType        #907:#373    // getTextBuffer:()[C\n-   #616 = NameAndType        #908:#368    // size:()I\n-   #617 = NameAndType        #378:#368    // getTextOffset:()I\n-   #618 = NameAndType        #909:#362    // VALUE_EMBEDDED_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n-   #619 = NameAndType        #910:#391    // _binaryValue:[B\n-   #620 = Utf8               java/lang/StringBuilder\n-   #621 = NameAndType        #317:#349    // \"<init>\":()V\n-   #622 = Utf8               Current token (\n-   #623 = NameAndType        #911:#912    // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #624 = NameAndType        #911:#913    // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #625 = Utf8               ) not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary\n-   #626 = NameAndType        #914:#352    // toString:()Ljava/lang/String;\n-   #627 = NameAndType        #915:#886    // _reportError:(Ljava/lang/String;)V\n-   #628 = NameAndType        #553:#380    // _decodeBase64:(Lcom/fasterxml/jackson/core/Base64Variant;)[B\n-   #629 = Utf8               java/lang/IllegalArgumentException\n-   #630 = Utf8               Failed to decode VALUE_STRING as base64 (\n-   #631 = Utf8               ):\n-   #632 = NameAndType        #916:#352    // getMessage:()Ljava/lang/String;\n-   #633 = NameAndType        #917:#918    // _constructError:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParseException;\n-   #634 = NameAndType        #919:#920    // _getByteArrayBuilder:()Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n-   #635 = NameAndType        #351:#352    // getText:()Ljava/lang/String;\n-   #636 = NameAndType        #553:#921    // _decodeBase64:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;Lcom/fasterxml/jackson/core/Base64Variant;)V\n-   #637 = Class              #866         // com/fasterxml/jackson/core/util/ByteArrayBuilder\n-   #638 = NameAndType        #922:#923    // toByteArray:()[B\n-   #639 = NameAndType        #379:#380    // getBinaryValue:(Lcom/fasterxml/jackson/core/Base64Variant;)[B\n-   #640 = Class              #862         // java/io/OutputStream\n-   #641 = NameAndType        #885:#924    // write:([B)V\n-   #642 = NameAndType        #925:#923    // allocBase64Buffer:()[B\n-   #643 = NameAndType        #398:#399    // _readBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/OutputStream;[B)I\n-   #644 = NameAndType        #926:#924    // releaseBase64Buffer:([B)V\n-   #645 = Class              #927         // java/io/DataInput\n-   #646 = NameAndType        #928:#368    // readUnsignedByte:()I\n-   #647 = NameAndType        #929:#369    // decodeBase64Char:(I)I\n-   #648 = NameAndType        #930:#931    // _decodeBase64Escape:(Lcom/fasterxml/jackson/core/Base64Variant;II)I\n-   #649 = NameAndType        #885:#932    // write:([BII)V\n-   #650 = Utf8               com/fasterxml/jackson/core/Base64Variant\n-   #651 = NameAndType        #933:#521    // requiresPaddingOnRead:()Z\n-   #652 = NameAndType        #934:#935    // _handleBase64MissingPadding:(Lcom/fasterxml/jackson/core/Base64Variant;)V\n-   #653 = NameAndType        #936:#937    // usesPaddingChar:(I)Z\n-   #654 = Utf8               expected padding character \\'\n-   #655 = NameAndType        #938:#524    // getPaddingChar:()C\n-   #656 = NameAndType        #911:#939    // append:(C)Ljava/lang/StringBuilder;\n-   #657 = Utf8               \\'\n-   #658 = NameAndType        #940:#941    // reportInvalidBase64Char:(Lcom/fasterxml/jackson/core/Base64Variant;IILjava/lang/String;)Ljava/lang/IllegalArgumentException;\n-   #659 = NameAndType        #942:#312    // _closed:Z\n-   #660 = NameAndType        #411:#407    // _nextAfterName:()Lcom/fasterxml/jackson/core/JsonToken;\n-   #661 = NameAndType        #493:#349    // _skipString:()V\n-   #662 = NameAndType        #508:#368    // _skipWSOrEnd:()I\n-   #663 = NameAndType        #943:#349    // close:()V\n-   #664 = NameAndType        #944:#295    // _currInputRow:I\n-   #665 = NameAndType        #945:#295    // _tokenInputRow:I\n-   #666 = NameAndType        #559:#545    // _closeScope:(I)V\n-   #667 = NameAndType        #946:#521    // expectComma:()Z\n-   #668 = Utf8               was expecting comma to separate\n-   #669 = NameAndType        #947:#352    // typeDesc:()Ljava/lang/String;\n-   #670 = Utf8                entries\n-   #671 = NameAndType        #948:#537    // _reportUnexpectedChar:(ILjava/lang/String;)V\n-   #672 = NameAndType        #507:#368    // _skipWS:()I\n-   #673 = NameAndType        #949:#295    // _features:I\n-   #674 = NameAndType        #294:#295    // FEAT_MASK_TRAILING_COMMA:I\n-   #675 = NameAndType        #950:#521    // inObject:()Z\n-   #676 = NameAndType        #409:#410    // _nextTokenNotInObject:(I)Lcom/fasterxml/jackson/core/JsonToken;\n-   #677 = NameAndType        #447:#448    // _parseName:(I)Ljava/lang/String;\n-   #678 = NameAndType        #951:#886    // setCurrentName:(Ljava/lang/String;)V\n-   #679 = NameAndType        #513:#368    // _skipColon:()I\n-   #680 = NameAndType        #952:#362    // _nextToken:Lcom/fasterxml/jackson/core/JsonToken;\n-   #681 = NameAndType        #436:#407    // _parseNegNumber:()Lcom/fasterxml/jackson/core/JsonToken;\n-   #682 = Class              #953         // com/fasterxml/jackson/core/json/JsonReadFeature\n-   #683 = NameAndType        #954:#955    // ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS:Lcom/fasterxml/jackson/core/json/JsonReadFeature;\n-   #684 = NameAndType        #956:#959    // mappedFeature:()Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #685 = NameAndType        #960:#961    // isEnabled:(Lcom/fasterxml/jackson/core/JsonParser$Feature;)Z\n-   #686 = NameAndType        #435:#407    // _parsePosNumber:()Lcom/fasterxml/jackson/core/JsonToken;\n-   #687 = NameAndType        #494:#410    // _handleUnexpectedValue:(I)Lcom/fasterxml/jackson/core/JsonToken;\n-   #688 = NameAndType        #423:#427    // _parseFloatThatStartsWithPeriod:(ZZ)Lcom/fasterxml/jackson/core/JsonToken;\n-   #689 = NameAndType        #433:#410    // _parseUnsignedNumber:(I)Lcom/fasterxml/jackson/core/JsonToken;\n-   #690 = Utf8               false\n-   #691 = NameAndType        #501:#502    // _matchToken:(Ljava/lang/String;I)V\n-   #692 = NameAndType        #962:#362    // VALUE_FALSE:Lcom/fasterxml/jackson/core/JsonToken;\n-   #693 = Utf8               null\n-   #694 = NameAndType        #963:#362    // VALUE_NULL:Lcom/fasterxml/jackson/core/JsonToken;\n-   #695 = Utf8               true\n-   #696 = NameAndType        #964:#362    // VALUE_TRUE:Lcom/fasterxml/jackson/core/JsonToken;\n-   #697 = NameAndType        #965:#362    // START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n-   #698 = NameAndType        #966:#362    // START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n-   #699 = NameAndType        #967:#295    // _tokenInputCol:I\n-   #700 = NameAndType        #968:#969    // createChildArrayContext:(II)V\n-   #701 = NameAndType        #970:#969    // createChildObjectContext:(II)V\n-   #702 = NameAndType        #406:#407    // nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n-   #703 = NameAndType        #971:#368    // getIntValue:()I\n-   #704 = NameAndType        #972:#973    // getLongValue:()J\n-   #705 = Class              #974         // java/lang/Boolean\n-   #706 = NameAndType        #975:#976    // TRUE:Ljava/lang/Boolean;\n-   #707 = NameAndType        #977:#976    // FALSE:Ljava/lang/Boolean;\n-   #708 = NameAndType        #978:#955    // ALLOW_LEADING_DECIMAL_POINT_FOR_NUMBERS:Lcom/fasterxml/jackson/core/json/JsonReadFeature;\n-   #709 = NameAndType        #979:#373    // emptyAndGetCurrentSegment:()[C\n-   #710 = NameAndType        #441:#442    // _parseFloat:([CIIZI)Lcom/fasterxml/jackson/core/JsonToken;\n-   #711 = NameAndType        #440:#368    // _handleLeadingZeroes:()I\n-   #712 = NameAndType        #496:#497    // _handleInvalidNumberStart:(IZ)Lcom/fasterxml/jackson/core/JsonToken;\n-   #713 = NameAndType        #980:#373    // finishCurrentSegment:()[C\n-   #714 = NameAndType        #981:#545    // setCurrentLength:(I)V\n-   #715 = NameAndType        #982:#521    // inRoot:()Z\n-   #716 = NameAndType        #446:#349    // _verifyRootSpace:()V\n-   #717 = NameAndType        #983:#984    // resetInt:(ZI)Lcom/fasterxml/jackson/core/JsonToken;\n-   #718 = NameAndType        #437:#438    // _parseSignedNumber:(Z)Lcom/fasterxml/jackson/core/JsonToken;\n-   #719 = NameAndType        #496:#498    // _handleInvalidNumberStart:(IZZ)Lcom/fasterxml/jackson/core/JsonToken;\n-   #720 = NameAndType        #296:#295    // FEAT_MASK_LEADING_ZEROS:I\n-   #721 = Utf8               Leading zeroes not allowed\n-   #722 = NameAndType        #985:#886    // reportInvalidNumber:(Ljava/lang/String;)V\n-   #723 = NameAndType        #986:#955    // ALLOW_TRAILING_DECIMAL_POINT_FOR_NUMBERS:Lcom/fasterxml/jackson/core/json/JsonReadFeature;\n-   #724 = Utf8               Decimal point not followed by a digit\n-   #725 = NameAndType        #987:#988    // _reportUnexpectedNumberChar:(ILjava/lang/String;)Ljava/lang/Object;\n-   #726 = Utf8               Exponent indicator not followed by a digit\n-   #727 = NameAndType        #989:#990    // resetFloat:(ZIII)Lcom/fasterxml/jackson/core/JsonToken;\n-   #728 = NameAndType        #991:#545    // _reportMissingRootWS:(I)V\n-   #729 = NameAndType        #470:#448    // _handleOddName:(I)Ljava/lang/String;\n-   #730 = NameAndType        #305:#304    // _icLatin1:[I\n-   #731 = NameAndType        #313:#295    // _quad1:I\n-   #732 = NameAndType        #452:#448    // _parseMediumName:(I)Ljava/lang/String;\n-   #733 = NameAndType        #473:#455    // findName:(II)Ljava/lang/String;\n-   #734 = NameAndType        #460:#458    // parseName:(III)Ljava/lang/String;\n-   #735 = Utf8\n-   #736 = NameAndType        #473:#458    // findName:(III)Ljava/lang/String;\n-   #737 = NameAndType        #460:#463    // parseName:(IIII)Ljava/lang/String;\n-   #738 = NameAndType        #454:#455    // _parseMediumName2:(II)Ljava/lang/String;\n-   #739 = NameAndType        #473:#463    // findName:(IIII)Ljava/lang/String;\n-   #740 = NameAndType        #460:#464    // parseName:(IIIII)Ljava/lang/String;\n-   #741 = NameAndType        #457:#458    // _parseLongName:(III)Ljava/lang/String;\n-   #742 = NameAndType        #473:#476    // findName:([IIII)Ljava/lang/String;\n-   #743 = NameAndType        #465:#466    // parseEscapedName:([IIIII)Ljava/lang/String;\n-   #744 = NameAndType        #549:#550    // _growArrayBy:([II)[I\n-   #745 = NameAndType        #992:#537    // _throwUnquotedSpace:(ILjava/lang/String;)V\n-   #746 = NameAndType        #523:#524    // _decodeEscaped:()C\n-   #747 = NameAndType        #560:#561    // pad:(II)I\n-   #748 = NameAndType        #473:#993    // findName:([II)Ljava/lang/String;\n-   #749 = NameAndType        #478:#479    // addName:([III)Ljava/lang/String;\n-   #750 = NameAndType        #299:#295    // FEAT_MASK_ALLOW_SINGLE_QUOTES:I\n-   #751 = NameAndType        #472:#352    // _parseAposName:()Ljava/lang/String;\n-   #752 = NameAndType        #300:#295    // FEAT_MASK_ALLOW_UNQUOTED_NAMES:I\n-   #753 = NameAndType        #527:#369    // _decodeCharForError:(I)I\n-   #754 = Utf8               was expecting double-quote to start field name\n-   #755 = Class              #994         // com/fasterxml/jackson/core/io/CharTypes\n-   #756 = NameAndType        #995:#996    // getInputCodeUtf8JsNames:()[I\n-   #757 = Utf8               was expecting either valid name character (for unquoted name) or double-quote (for quoted) to start field name\n-   #758 = NameAndType        #473:#448    // findName:(I)Ljava/lang/String;\n-   #759 = NameAndType        #546:#545    // _reportInvalidInitial:(I)V\n-   #760 = Utf8                in field name\n-   #761 = NameAndType        #997:#998    // _reportInvalidEOF:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n-   #762 = NameAndType        #548:#545    // _reportInvalidOther:(I)V\n-   #763 = NameAndType        #999:#373    // expandCurrentSegment:()[C\n-   #764 = Utf8               java/lang/String\n-   #765 = NameAndType        #317:#492    // \"<init>\":([CII)V\n-   #766 = NameAndType        #478:#1000   // addName:(Ljava/lang/String;[II)Ljava/lang/String;\n-   #767 = NameAndType        #303:#304    // _icUTF8:[I\n-   #768 = NameAndType        #491:#492    // _finishString2:([CII)V\n-   #769 = NameAndType        #1001:#448   // setCurrentAndReturn:(I)Ljava/lang/String;\n-   #770 = NameAndType        #529:#369    // _decodeUtf8_2:(I)I\n-   #771 = NameAndType        #530:#369    // _decodeUtf8_3:(I)I\n-   #772 = NameAndType        #532:#369    // _decodeUtf8_4:(I)I\n-   #773 = Utf8               string value\n-   #774 = NameAndType        #544:#545    // _reportInvalidChar:(I)V\n-   #775 = NameAndType        #533:#349    // _skipUtf8_2:()V\n-   #776 = NameAndType        #534:#349    // _skipUtf8_3:()V\n-   #777 = NameAndType        #535:#349    // _skipUtf8_4:()V\n-   #778 = NameAndType        #1002:#521   // inArray:()Z\n-   #779 = NameAndType        #298:#295    // FEAT_MASK_ALLOW_MISSING:I\n-   #780 = Utf8               expected a value\n-   #781 = NameAndType        #495:#407    // _handleApos:()Lcom/fasterxml/jackson/core/JsonToken;\n-   #782 = Utf8               NaN\n-   #783 = NameAndType        #297:#295    // FEAT_MASK_NON_NUM_NUMBERS:I\n-   #784 = Utf8               java/lang/Double\n-   #785 = NameAndType        #1003:#1004  // resetAsNaN:(Ljava/lang/String;D)Lcom/fasterxml/jackson/core/JsonToken;\n-   #786 = Utf8               Non-standard token \\'NaN\\': enable `JsonReadFeature.ALLOW_NON_NUMERIC_NUMBERS` to allow\n-   #787 = Utf8               Infinity\n-   #788 = Utf8               Non-standard token \\'Infinity\\': enable `JsonReadFeature.ALLOW_NON_NUMERIC_NUMBERS` to allow\n-   #789 = Class              #1005        // java/lang/Character\n-   #790 = NameAndType        #1006:#937   // isJavaIdentifierStart:(I)Z\n-   #791 = NameAndType        #1007:#352   // _validJsonTokenList:()Ljava/lang/String;\n-   #792 = NameAndType        #536:#539    // _reportInvalidToken:(ILjava/lang/String;Ljava/lang/String;)V\n-   #793 = Utf8               expected a valid value\n-   #794 = NameAndType        #1008:#352   // _validJsonValueList:()Ljava/lang/String;\n-   #795 = Utf8               -INF\n-   #796 = Utf8               +INF\n-   #797 = Utf8               -Infinity\n-   #798 = Utf8               +Infinity\n-   #799 = Utf8               Non-standard token \\'\n-   #800 = Utf8               \\': enable `JsonReadFeature.ALLOW_NON_NUMERIC_NUMBERS` to allow\n-   #801 = Utf8               JSON spec does not allow numbers to have plus signs: enable `JsonReadFeature.ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS` to allow\n-   #802 = Utf8               expected digit (0-9) to follow minus sign, for valid numeric value\n-   #803 = Utf8               expected digit (0-9) for valid numeric value\n-   #804 = NameAndType        #1009:#1010  // charAt:(I)C\n-   #805 = NameAndType        #1011:#455   // substring:(II)Ljava/lang/String;\n-   #806 = NameAndType        #536:#537    // _reportInvalidToken:(ILjava/lang/String;)V\n-   #807 = NameAndType        #505:#506    // _checkMatchEnd:(Ljava/lang/String;II)V\n-   #808 = NameAndType        #1012:#1013  // isJavaIdentifierPart:(C)Z\n-   #809 = NameAndType        #512:#369    // _skipWSComment:(I)I\n-   #810 = Utf8               java/io/EOFException\n-   #811 = NameAndType        #1014:#368   // _eofAsNextChar:()I\n-   #812 = NameAndType        #517:#349    // _skipComment:()V\n-   #813 = NameAndType        #520:#521    // _skipYAMLComment:()Z\n-   #814 = NameAndType        #514:#515    // _skipColon2:(IZ)I\n-   #815 = Utf8               was expecting a colon to separate field name and value\n-   #816 = NameAndType        #301:#295    // FEAT_MASK_ALLOW_JAVA_COMMENTS:I\n-   #817 = Utf8               maybe a (non-standard) comment? (not recognized as one since Feature \\'ALLOW_COMMENTS\\' not enabled for parser)\n-   #818 = NameAndType        #522:#349    // _skipLine:()V\n-   #819 = NameAndType        #518:#349    // _skipCComment:()V\n-   #820 = Utf8               was expecting either \\'*\\' or \\'/\\' for a comment\n-   #821 = NameAndType        #1015:#996   // getInputCodeComment:()[I\n-   #822 = NameAndType        #302:#295    // FEAT_MASK_ALLOW_YAML_COMMENTS:I\n-   #823 = NameAndType        #1016:#1017  // _handleUnrecognizedCharacterEscape:(C)C\n-   #824 = NameAndType        #1018:#369   // charToHex:(I)I\n-   #825 = Utf8               expected a hex-digit for character escape sequence\n-   #826 = NameAndType        #317:#886    // \"<init>\":(Ljava/lang/String;)V\n-   #827 = Utf8               Unrecognized token \\'\n-   #828 = Utf8               \\': was expecting\n-   #829 = NameAndType        #1019:#545   // _throwInvalidSpace:(I)V\n-   #830 = Utf8               Invalid UTF-8 start byte 0x\n-   #831 = Class              #1020        // java/lang/Integer\n-   #832 = NameAndType        #1021:#448   // toHexString:(I)Ljava/lang/String;\n-   #833 = Utf8               Invalid UTF-8 middle byte 0x\n-   #834 = Class              #1022        // java/util/Arrays\n-   #835 = NameAndType        #1023:#550   // copyOf:([II)[I\n-   #836 = NameAndType        #911:#545    // append:(I)V\n-   #837 = NameAndType        #1024:#545   // appendTwoBytes:(I)V\n-   #838 = NameAndType        #1025:#545   // appendThreeBytes:(I)V\n-   #839 = Utf8               com/fasterxml/jackson/core/JsonLocation\n-   #840 = NameAndType        #1026:#1027  // _contentReference:()Lcom/fasterxml/jackson/core/io/ContentReference;\n-   #841 = NameAndType        #317:#1028   // \"<init>\":(Lcom/fasterxml/jackson/core/io/ContentReference;JJII)V\n-   #842 = NameAndType        #1029:#1030  // _reportMismatchedEndMarker:(IC)V\n-   #843 = NameAndType        #1031:#1032  // clearAndGetParent:()Lcom/fasterxml/jackson/core/json/JsonReadContext;\n-   #844 = NameAndType        #1033:#362   // END_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n-   #845 = NameAndType        #1034:#362   // END_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n-   #846 = Class              #1036        // com/fasterxml/jackson/core/JsonParser$Feature\n-   #847 = NameAndType        #1037:#1038  // ALLOW_TRAILING_COMMA:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #848 = NameAndType        #1039:#368   // getMask:()I\n-   #849 = NameAndType        #1040:#1038  // ALLOW_NUMERIC_LEADING_ZEROS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #850 = NameAndType        #1041:#1038  // ALLOW_NON_NUMERIC_NUMBERS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #851 = NameAndType        #1042:#1038  // ALLOW_MISSING_VALUES:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #852 = NameAndType        #1043:#1038  // ALLOW_SINGLE_QUOTES:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #853 = NameAndType        #1044:#1038  // ALLOW_UNQUOTED_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #854 = NameAndType        #1045:#1038  // ALLOW_COMMENTS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #855 = NameAndType        #1046:#1038  // ALLOW_YAML_COMMENTS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #856 = NameAndType        #1047:#996   // getInputCodeUtf8:()[I\n-   #857 = NameAndType        #1048:#996   // getInputCodeLatin1:()[I\n-   #858 = Utf8               com/fasterxml/jackson/core/json/UTF8DataInputJsonParser\n-   #859 = Utf8               com/fasterxml/jackson/core/base/ParserBase\n-   #860 = Utf8               java/io/IOException\n-   #861 = Utf8               com/fasterxml/jackson/core/JsonToken\n-   #862 = Utf8               java/io/OutputStream\n-   #863 = Utf8               java/lang/Throwable\n-   #864 = Utf8               com/fasterxml/jackson/core/JsonParseException\n-   #865 = Utf8               com/fasterxml/jackson/core/exc/StreamConstraintsException\n-   #866 = Utf8               com/fasterxml/jackson/core/util/ByteArrayBuilder\n-   #867 = Utf8               (Lcom/fasterxml/jackson/core/io/IOContext;I)V\n-   #868 = Utf8               JSON_READ_CAPABILITIES\n-   #869 = Utf8               Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-   #870 = Utf8               com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer\n-   #871 = Utf8               release\n-   #872 = Utf8               _currToken\n-   #873 = Utf8               VALUE_STRING\n-   #874 = Utf8               _textBuffer\n-   #875 = Utf8               Lcom/fasterxml/jackson/core/util/TextBuffer;\n-   #876 = Utf8               com/fasterxml/jackson/core/util/TextBuffer\n-   #877 = Utf8               contentsAsString\n-   #878 = Utf8               contentsToWriter\n-   #879 = Utf8               FIELD_NAME\n-   #880 = Utf8               _parsingContext\n-   #881 = Utf8               Lcom/fasterxml/jackson/core/json/JsonReadContext;\n-   #882 = Utf8               com/fasterxml/jackson/core/json/JsonReadContext\n-   #883 = Utf8               getCurrentName\n-   #884 = Utf8               java/io/Writer\n-   #885 = Utf8               write\n-   #886 = Utf8               (Ljava/lang/String;)V\n-   #887 = Utf8               length\n-   #888 = Utf8               isNumeric\n-   #889 = Utf8               asCharArray\n-   #890 = Utf8               ([C)V\n-   #891 = Utf8               VALUE_NUMBER_INT\n-   #892 = Utf8               VALUE_NUMBER_FLOAT\n-   #893 = Utf8               _numTypesValid\n-   #894 = Utf8               _parseIntValue\n-   #895 = Utf8               convertNumberToInt\n-   #896 = Utf8               _numberInt\n-   #897 = Utf8               id\n-   #898 = Utf8               asString\n-   #899 = Utf8               _nameCopied\n-   #900 = Utf8               _nameCopyBuffer\n-   #901 = Utf8               _ioContext\n-   #902 = Utf8               com/fasterxml/jackson/core/io/IOContext\n-   #903 = Utf8               allocNameCopyBuffer\n-   #904 = Utf8               (I)[C\n-   #905 = Utf8               getChars\n-   #906 = Utf8               (II[CI)V\n-   #907 = Utf8               getTextBuffer\n-   #908 = Utf8               size\n-   #909 = Utf8               VALUE_EMBEDDED_OBJECT\n-   #910 = Utf8               _binaryValue\n-   #911 = Utf8               append\n-   #912 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #913 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #914 = Utf8               toString\n-   #915 = Utf8               _reportError\n-   #916 = Utf8               getMessage\n-   #917 = Utf8               _constructError\n-   #918 = Utf8               (Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParseException;\n-   #919 = Utf8               _getByteArrayBuilder\n-   #920 = Utf8               ()Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n-   #921 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;Lcom/fasterxml/jackson/core/Base64Variant;)V\n-   #922 = Utf8               toByteArray\n-   #923 = Utf8               ()[B\n-   #924 = Utf8               ([B)V\n-   #925 = Utf8               allocBase64Buffer\n-   #926 = Utf8               releaseBase64Buffer\n-   #927 = Utf8               java/io/DataInput\n-   #928 = Utf8               readUnsignedByte\n-   #929 = Utf8               decodeBase64Char\n-   #930 = Utf8               _decodeBase64Escape\n-   #931 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;II)I\n-   #932 = Utf8               ([BII)V\n-   #933 = Utf8               requiresPaddingOnRead\n-   #934 = Utf8               _handleBase64MissingPadding\n-   #935 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;)V\n-   #936 = Utf8               usesPaddingChar\n-   #937 = Utf8               (I)Z\n-   #938 = Utf8               getPaddingChar\n-   #939 = Utf8               (C)Ljava/lang/StringBuilder;\n-   #940 = Utf8               reportInvalidBase64Char\n-   #941 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;IILjava/lang/String;)Ljava/lang/IllegalArgumentException;\n-   #942 = Utf8               _closed\n-   #943 = Utf8               close\n-   #944 = Utf8               _currInputRow\n-   #945 = Utf8               _tokenInputRow\n-   #946 = Utf8               expectComma\n-   #947 = Utf8               typeDesc\n-   #948 = Utf8               _reportUnexpectedChar\n-   #949 = Utf8               _features\n-   #950 = Utf8               inObject\n-   #951 = Utf8               setCurrentName\n-   #952 = Utf8               _nextToken\n-   #953 = Utf8               com/fasterxml/jackson/core/json/JsonReadFeature\n-   #954 = Utf8               ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS\n-   #955 = Utf8               Lcom/fasterxml/jackson/core/json/JsonReadFeature;\n-   #956 = Utf8               mappedFeature\n-   #957 = Utf8               Feature\n-   #958 = Utf8               InnerClasses\n-   #959 = Utf8               ()Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #960 = Utf8               isEnabled\n-   #961 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser$Feature;)Z\n-   #962 = Utf8               VALUE_FALSE\n-   #963 = Utf8               VALUE_NULL\n-   #964 = Utf8               VALUE_TRUE\n-   #965 = Utf8               START_ARRAY\n-   #966 = Utf8               START_OBJECT\n-   #967 = Utf8               _tokenInputCol\n-   #968 = Utf8               createChildArrayContext\n-   #969 = Utf8               (II)V\n-   #970 = Utf8               createChildObjectContext\n-   #971 = Utf8               getIntValue\n-   #972 = Utf8               getLongValue\n-   #973 = Utf8               ()J\n-   #974 = Utf8               java/lang/Boolean\n-   #975 = Utf8               TRUE\n-   #976 = Utf8               Ljava/lang/Boolean;\n-   #977 = Utf8               FALSE\n-   #978 = Utf8               ALLOW_LEADING_DECIMAL_POINT_FOR_NUMBERS\n-   #979 = Utf8               emptyAndGetCurrentSegment\n-   #980 = Utf8               finishCurrentSegment\n-   #981 = Utf8               setCurrentLength\n-   #982 = Utf8               inRoot\n-   #983 = Utf8               resetInt\n-   #984 = Utf8               (ZI)Lcom/fasterxml/jackson/core/JsonToken;\n-   #985 = Utf8               reportInvalidNumber\n-   #986 = Utf8               ALLOW_TRAILING_DECIMAL_POINT_FOR_NUMBERS\n-   #987 = Utf8               _reportUnexpectedNumberChar\n-   #988 = Utf8               (ILjava/lang/String;)Ljava/lang/Object;\n-   #989 = Utf8               resetFloat\n-   #990 = Utf8               (ZIII)Lcom/fasterxml/jackson/core/JsonToken;\n-   #991 = Utf8               _reportMissingRootWS\n-   #992 = Utf8               _throwUnquotedSpace\n-   #993 = Utf8               ([II)Ljava/lang/String;\n-   #994 = Utf8               com/fasterxml/jackson/core/io/CharTypes\n-   #995 = Utf8               getInputCodeUtf8JsNames\n-   #996 = Utf8               ()[I\n-   #997 = Utf8               _reportInvalidEOF\n-   #998 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n-   #999 = Utf8               expandCurrentSegment\n-  #1000 = Utf8               (Ljava/lang/String;[II)Ljava/lang/String;\n-  #1001 = Utf8               setCurrentAndReturn\n-  #1002 = Utf8               inArray\n-  #1003 = Utf8               resetAsNaN\n-  #1004 = Utf8               (Ljava/lang/String;D)Lcom/fasterxml/jackson/core/JsonToken;\n-  #1005 = Utf8               java/lang/Character\n-  #1006 = Utf8               isJavaIdentifierStart\n-  #1007 = Utf8               _validJsonTokenList\n-  #1008 = Utf8               _validJsonValueList\n-  #1009 = Utf8               charAt\n-  #1010 = Utf8               (I)C\n-  #1011 = Utf8               substring\n-  #1012 = Utf8               isJavaIdentifierPart\n-  #1013 = Utf8               (C)Z\n-  #1014 = Utf8               _eofAsNextChar\n-  #1015 = Utf8               getInputCodeComment\n-  #1016 = Utf8               _handleUnrecognizedCharacterEscape\n-  #1017 = Utf8               (C)C\n-  #1018 = Utf8               charToHex\n-  #1019 = Utf8               _throwInvalidSpace\n-  #1020 = Utf8               java/lang/Integer\n-  #1021 = Utf8               toHexString\n-  #1022 = Utf8               java/util/Arrays\n-  #1023 = Utf8               copyOf\n-  #1024 = Utf8               appendTwoBytes\n-  #1025 = Utf8               appendThreeBytes\n-  #1026 = Utf8               _contentReference\n-  #1027 = Utf8               ()Lcom/fasterxml/jackson/core/io/ContentReference;\n-  #1028 = Utf8               (Lcom/fasterxml/jackson/core/io/ContentReference;JJII)V\n-  #1029 = Utf8               _reportMismatchedEndMarker\n-  #1030 = Utf8               (IC)V\n-  #1031 = Utf8               clearAndGetParent\n-  #1032 = Utf8               ()Lcom/fasterxml/jackson/core/json/JsonReadContext;\n-  #1033 = Utf8               END_ARRAY\n-  #1034 = Utf8               END_OBJECT\n-  #1035 = Class              #1049        // com/fasterxml/jackson/core/JsonParser\n-  #1036 = Utf8               com/fasterxml/jackson/core/JsonParser$Feature\n-  #1037 = Utf8               ALLOW_TRAILING_COMMA\n-  #1038 = Utf8               Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-  #1039 = Utf8               getMask\n-  #1040 = Utf8               ALLOW_NUMERIC_LEADING_ZEROS\n-  #1041 = Utf8               ALLOW_NON_NUMERIC_NUMBERS\n-  #1042 = Utf8               ALLOW_MISSING_VALUES\n-  #1043 = Utf8               ALLOW_SINGLE_QUOTES\n-  #1044 = Utf8               ALLOW_UNQUOTED_FIELD_NAMES\n-  #1045 = Utf8               ALLOW_COMMENTS\n-  #1046 = Utf8               ALLOW_YAML_COMMENTS\n-  #1047 = Utf8               getInputCodeUtf8\n-  #1048 = Utf8               getInputCodeLatin1\n-  #1049 = Utf8               com/fasterxml/jackson/core/JsonParser\n+   #376 = Utf8               getTextLength\n+   #377 = Utf8               getTextOffset\n+   #378 = Utf8               getBinaryValue\n+   #379 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;)[B\n+   #380 = Utf8               iae\n+   #381 = Utf8               Ljava/lang/IllegalArgumentException;\n+   #382 = Utf8               builder\n+   #383 = Utf8               Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n+   #384 = Utf8               b64variant\n+   #385 = Utf8               Lcom/fasterxml/jackson/core/Base64Variant;\n+   #386 = Utf8               readBinaryValue\n+   #387 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/OutputStream;)I\n+   #388 = Utf8               b\n+   #389 = Utf8               [B\n+   #390 = Utf8               buf\n+   #391 = Class              #853         // java/io/OutputStream\n+   #392 = Class              #389         // \"[B\"\n+   #393 = Class              #854         // java/lang/Throwable\n+   #394 = Utf8               _readBinary\n+   #395 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/OutputStream;[B)I\n+   #396 = Utf8               bits\n+   #397 = Utf8               decodedData\n+   #398 = Utf8               buffer\n+   #399 = Utf8               outputPtr\n+   #400 = Utf8               outputEnd\n+   #401 = Utf8               outputCount\n+   #402 = Utf8               nextToken\n+   #403 = Utf8               ()Lcom/fasterxml/jackson/core/JsonToken;\n+   #404 = Utf8               i\n+   #405 = Utf8               _nextTokenNotInObject\n+   #406 = Utf8               (I)Lcom/fasterxml/jackson/core/JsonToken;\n+   #407 = Utf8               _nextAfterName\n+   #408 = Utf8               finishToken\n+   #409 = Utf8               nextFieldName\n+   #410 = Utf8               nameStr\n+   #411 = Utf8               nextTextValue\n+   #412 = Utf8               nextIntValue\n+   #413 = Utf8               defaultValue\n+   #414 = Utf8               nextLongValue\n+   #415 = Utf8               (J)J\n+   #416 = Utf8               J\n+   #417 = Utf8               nextBooleanValue\n+   #418 = Utf8               ()Ljava/lang/Boolean;\n+   #419 = Utf8               _parseFloatThatStartsWithPeriod\n+   #420 = Utf8               Deprecated\n+   #421 = Utf8               RuntimeVisibleAnnotations\n+   #422 = Utf8               Ljava/lang/Deprecated;\n+   #423 = Utf8               (ZZ)Lcom/fasterxml/jackson/core/JsonToken;\n+   #424 = Utf8               neg\n+   #425 = Utf8               hasSign\n+   #426 = Utf8               outBuf\n+   #427 = Utf8               outPtr\n+   #428 = Class              #358         // \"[C\"\n+   #429 = Utf8               _parseUnsignedNumber\n+   #430 = Utf8               intLen\n+   #431 = Utf8               _parsePosNumber\n+   #432 = Utf8               _parseNegNumber\n+   #433 = Utf8               _parseSignedNumber\n+   #434 = Utf8               (Z)Lcom/fasterxml/jackson/core/JsonToken;\n+   #435 = Utf8               negative\n+   #436 = Utf8               _handleLeadingZeroes\n+   #437 = Utf8               _parseFloat\n+   #438 = Utf8               ([CIIZI)Lcom/fasterxml/jackson/core/JsonToken;\n+   #439 = Utf8               integerPartLength\n+   #440 = Utf8               fractLen\n+   #441 = Utf8               expLen\n+   #442 = Utf8               _verifyRootSpace\n+   #443 = Utf8               _parseName\n+   #444 = Utf8               (I)Ljava/lang/String;\n+   #445 = Utf8               codes\n+   #446 = Utf8               q\n+   #447 = Class              #304         // \"[I\"\n+   #448 = Utf8               _parseMediumName\n+   #449 = Utf8               q2\n+   #450 = Utf8               _parseMediumName2\n+   #451 = Utf8               (II)Ljava/lang/String;\n+   #452 = Utf8               q3\n+   #453 = Utf8               _parseLongName\n+   #454 = Utf8               (III)Ljava/lang/String;\n+   #455 = Utf8               qlen\n+   #456 = Utf8               parseName\n+   #457 = Utf8               q1\n+   #458 = Utf8               lastQuadBytes\n+   #459 = Utf8               (IIII)Ljava/lang/String;\n+   #460 = Utf8               (IIIII)Ljava/lang/String;\n+   #461 = Utf8               parseEscapedName\n+   #462 = Utf8               ([IIIII)Ljava/lang/String;\n+   #463 = Utf8               quads\n+   #464 = Utf8               currQuad\n+   #465 = Utf8               currQuadBytes\n+   #466 = Utf8               _handleOddName\n+   #467 = Utf8               C\n+   #468 = Utf8               _parseAposName\n+   #469 = Utf8               findName\n+   #470 = Class              #855         // com/fasterxml/jackson/core/JsonParseException\n+   #471 = Class              #856         // com/fasterxml/jackson/core/exc/StreamConstraintsException\n+   #472 = Utf8               ([IIII)Ljava/lang/String;\n+   #473 = Utf8               lastQuad\n+   #474 = Utf8               addName\n+   #475 = Utf8               ([III)Ljava/lang/String;\n+   #476 = Utf8               needed\n+   #477 = Utf8               ch2\n+   #478 = Utf8               byteIx\n+   #479 = Utf8               ix\n+   #480 = Utf8               byteLen\n+   #481 = Utf8               cbuf\n+   #482 = Utf8               cix\n+   #483 = Utf8               baseName\n+   #484 = Utf8               _finishString\n+   #485 = Utf8               outEnd\n+   #486 = Utf8               _finishAndReturnString\n+   #487 = Utf8               _finishString2\n+   #488 = Utf8               ([CII)V\n+   #489 = Utf8               _skipString\n+   #490 = Utf8               _handleUnexpectedValue\n+   #491 = Utf8               _handleApos\n+   #492 = Utf8               _handleInvalidNumberStart\n+   #493 = Utf8               (IZ)Lcom/fasterxml/jackson/core/JsonToken;\n+   #494 = Utf8               (IZZ)Lcom/fasterxml/jackson/core/JsonToken;\n+   #495 = Utf8               match\n+   #496 = Utf8               message\n+   #497 = Utf8               _matchToken\n+   #498 = Utf8               (Ljava/lang/String;I)V\n+   #499 = Utf8               matchStr\n+   #500 = Utf8               len\n+   #501 = Utf8               _checkMatchEnd\n+   #502 = Utf8               (Ljava/lang/String;II)V\n+   #503 = Utf8               _skipWS\n+   #504 = Utf8               _skipWSOrEnd\n+   #505 = Utf8               e\n+   #506 = Utf8               Ljava/io/EOFException;\n+   #507 = Utf8               _skipWSComment\n+   #508 = Utf8               _skipColon\n+   #509 = Utf8               _skipColon2\n+   #510 = Utf8               (IZ)I\n+   #511 = Utf8               gotColon\n+   #512 = Utf8               _skipComment\n+   #513 = Utf8               _skipCComment\n+   #514 = Utf8               code\n+   #515 = Utf8               _skipYAMLComment\n+   #516 = Utf8               ()Z\n+   #517 = Utf8               _skipLine\n+   #518 = Utf8               _decodeEscaped\n+   #519 = Utf8               ()C\n+   #520 = Utf8               digit\n+   #521 = Utf8               value\n+   #522 = Utf8               _decodeCharForError\n+   #523 = Utf8               d\n+   #524 = Utf8               _decodeUtf8_2\n+   #525 = Utf8               _decodeUtf8_3\n+   #526 = Utf8               c1\n+   #527 = Utf8               _decodeUtf8_4\n+   #528 = Utf8               _skipUtf8_2\n+   #529 = Utf8               _skipUtf8_3\n+   #530 = Utf8               _skipUtf8_4\n+   #531 = Utf8               _reportInvalidToken\n+   #532 = Utf8               (ILjava/lang/String;)V\n+   #533 = Utf8               matchedPart\n+   #534 = Utf8               (ILjava/lang/String;Ljava/lang/String;)V\n+   #535 = Utf8               msg\n+   #536 = Utf8               sb\n+   #537 = Utf8               Ljava/lang/StringBuilder;\n+   #538 = Utf8               _reportInvalidChar\n+   #539 = Utf8               (I)V\n+   #540 = Utf8               _reportInvalidInitial\n+   #541 = Utf8               mask\n+   #542 = Utf8               _reportInvalidOther\n+   #543 = Utf8               _growArrayBy\n+   #544 = Utf8               ([II)[I\n+   #545 = Utf8               arr\n+   #546 = Utf8               more\n+   #547 = Utf8               _decodeBase64\n+   #548 = Class              #857         // com/fasterxml/jackson/core/util/ByteArrayBuilder\n+   #549 = Utf8               getTokenLocation\n+   #550 = Utf8               ()Lcom/fasterxml/jackson/core/JsonLocation;\n+   #551 = Utf8               getCurrentLocation\n+   #552 = Utf8               col\n+   #553 = Utf8               _closeScope\n+   #554 = Utf8               pad\n+   #555 = Utf8               (II)I\n+   #556 = Utf8               bytes\n+   #557 = Utf8               <clinit>\n+   #558 = Utf8               SourceFile\n+   #559 = Utf8               UTF8DataInputJsonParser.java\n+   #560 = Utf8               com/fasterxml/jackson/core/JsonTokenId\n+   #561 = NameAndType        #317:#858    // \"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;I)V\n+   #562 = NameAndType        #310:#304    // _quadBuffer:[I\n+   #563 = NameAndType        #316:#295    // _nextByte:I\n+   #564 = NameAndType        #306:#307    // _objectCodec:Lcom/fasterxml/jackson/core/ObjectCodec;\n+   #565 = NameAndType        #308:#309    // _symbols:Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n+   #566 = NameAndType        #314:#315    // _inputData:Ljava/io/DataInput;\n+   #567 = NameAndType        #859:#860    // JSON_READ_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+   #568 = NameAndType        #350:#349    // _releaseBuffers:()V\n+   #569 = Class              #861         // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer\n+   #570 = NameAndType        #862:#349    // release:()V\n+   #571 = NameAndType        #863:#362    // _currToken:Lcom/fasterxml/jackson/core/JsonToken;\n+   #572 = NameAndType        #864:#362    // VALUE_STRING:Lcom/fasterxml/jackson/core/JsonToken;\n+   #573 = NameAndType        #311:#312    // _tokenIncomplete:Z\n+   #574 = NameAndType        #486:#352    // _finishAndReturnString:()Ljava/lang/String;\n+   #575 = NameAndType        #865:#866    // _textBuffer:Lcom/fasterxml/jackson/core/util/TextBuffer;\n+   #576 = Class              #867         // com/fasterxml/jackson/core/util/TextBuffer\n+   #577 = NameAndType        #868:#352    // contentsAsString:()Ljava/lang/String;\n+   #578 = NameAndType        #370:#371    // _getText2:(Lcom/fasterxml/jackson/core/JsonToken;)Ljava/lang/String;\n+   #579 = NameAndType        #484:#349    // _finishString:()V\n+   #580 = NameAndType        #869:#354    // contentsToWriter:(Ljava/io/Writer;)I\n+   #581 = NameAndType        #870:#362    // FIELD_NAME:Lcom/fasterxml/jackson/core/JsonToken;\n+   #582 = NameAndType        #871:#872    // _parsingContext:Lcom/fasterxml/jackson/core/json/JsonReadContext;\n+   #583 = Class              #873         // com/fasterxml/jackson/core/json/JsonReadContext\n+   #584 = NameAndType        #874:#352    // getCurrentName:()Ljava/lang/String;\n+   #585 = Class              #875         // java/io/Writer\n+   #586 = NameAndType        #876:#877    // write:(Ljava/lang/String;)V\n+   #587 = NameAndType        #878:#368    // length:()I\n+   #588 = NameAndType        #879:#516    // isNumeric:()Z\n+   #589 = NameAndType        #880:#373    // asCharArray:()[C\n+   #590 = NameAndType        #876:#881    // write:([C)V\n+   #591 = NameAndType        #364:#365    // getValueAsString:(Ljava/lang/String;)Ljava/lang/String;\n+   #592 = NameAndType        #882:#362    // VALUE_NUMBER_INT:Lcom/fasterxml/jackson/core/JsonToken;\n+   #593 = NameAndType        #883:#362    // VALUE_NUMBER_FLOAT:Lcom/fasterxml/jackson/core/JsonToken;\n+   #594 = NameAndType        #884:#295    // _numTypesValid:I\n+   #595 = Utf8               com/fasterxml/jackson/core/base/ParserMinimalBase\n+   #596 = NameAndType        #885:#368    // _parseIntValue:()I\n+   #597 = NameAndType        #886:#349    // convertNumberToInt:()V\n+   #598 = NameAndType        #887:#295    // _numberInt:I\n+   #599 = NameAndType        #367:#369    // getValueAsInt:(I)I\n+   #600 = NameAndType        #888:#368    // id:()I\n+   #601 = NameAndType        #889:#352    // asString:()Ljava/lang/String;\n+   #602 = NameAndType        #890:#312    // _nameCopied:Z\n+   #603 = NameAndType        #891:#358    // _nameCopyBuffer:[C\n+   #604 = NameAndType        #892:#325    // _ioContext:Lcom/fasterxml/jackson/core/io/IOContext;\n+   #605 = Class              #893         // com/fasterxml/jackson/core/io/IOContext\n+   #606 = NameAndType        #894:#895    // allocNameCopyBuffer:(I)[C\n+   #607 = NameAndType        #896:#897    // getChars:(II[CI)V\n+   #608 = NameAndType        #898:#373    // getTextBuffer:()[C\n+   #609 = NameAndType        #899:#368    // size:()I\n+   #610 = NameAndType        #377:#368    // getTextOffset:()I\n+   #611 = NameAndType        #900:#362    // VALUE_EMBEDDED_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+   #612 = NameAndType        #901:#389    // _binaryValue:[B\n+   #613 = Utf8               java/lang/StringBuilder\n+   #614 = NameAndType        #317:#349    // \"<init>\":()V\n+   #615 = Utf8               Current token (\n+   #616 = NameAndType        #902:#903    // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #617 = NameAndType        #902:#904    // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #618 = Utf8               ) not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary\n+   #619 = NameAndType        #905:#352    // toString:()Ljava/lang/String;\n+   #620 = NameAndType        #906:#877    // _reportError:(Ljava/lang/String;)V\n+   #621 = NameAndType        #547:#379    // _decodeBase64:(Lcom/fasterxml/jackson/core/Base64Variant;)[B\n+   #622 = Utf8               java/lang/IllegalArgumentException\n+   #623 = Utf8               Failed to decode VALUE_STRING as base64 (\n+   #624 = Utf8               ):\n+   #625 = NameAndType        #907:#352    // getMessage:()Ljava/lang/String;\n+   #626 = NameAndType        #908:#909    // _constructError:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParseException;\n+   #627 = NameAndType        #910:#911    // _getByteArrayBuilder:()Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n+   #628 = NameAndType        #351:#352    // getText:()Ljava/lang/String;\n+   #629 = NameAndType        #547:#912    // _decodeBase64:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;Lcom/fasterxml/jackson/core/Base64Variant;)V\n+   #630 = NameAndType        #913:#914    // toByteArray:()[B\n+   #631 = NameAndType        #378:#379    // getBinaryValue:(Lcom/fasterxml/jackson/core/Base64Variant;)[B\n+   #632 = NameAndType        #876:#915    // write:([B)V\n+   #633 = NameAndType        #916:#914    // allocBase64Buffer:()[B\n+   #634 = NameAndType        #394:#395    // _readBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/OutputStream;[B)I\n+   #635 = NameAndType        #917:#915    // releaseBase64Buffer:([B)V\n+   #636 = Class              #918         // java/io/DataInput\n+   #637 = NameAndType        #919:#368    // readUnsignedByte:()I\n+   #638 = NameAndType        #920:#369    // decodeBase64Char:(I)I\n+   #639 = NameAndType        #921:#922    // _decodeBase64Escape:(Lcom/fasterxml/jackson/core/Base64Variant;II)I\n+   #640 = NameAndType        #876:#923    // write:([BII)V\n+   #641 = Utf8               com/fasterxml/jackson/core/Base64Variant\n+   #642 = NameAndType        #924:#516    // requiresPaddingOnRead:()Z\n+   #643 = NameAndType        #925:#926    // _handleBase64MissingPadding:(Lcom/fasterxml/jackson/core/Base64Variant;)V\n+   #644 = NameAndType        #927:#928    // usesPaddingChar:(I)Z\n+   #645 = Utf8               expected padding character \\'\n+   #646 = NameAndType        #929:#519    // getPaddingChar:()C\n+   #647 = NameAndType        #902:#930    // append:(C)Ljava/lang/StringBuilder;\n+   #648 = Utf8               \\'\n+   #649 = NameAndType        #931:#932    // reportInvalidBase64Char:(Lcom/fasterxml/jackson/core/Base64Variant;IILjava/lang/String;)Ljava/lang/IllegalArgumentException;\n+   #650 = NameAndType        #933:#312    // _closed:Z\n+   #651 = NameAndType        #407:#403    // _nextAfterName:()Lcom/fasterxml/jackson/core/JsonToken;\n+   #652 = NameAndType        #489:#349    // _skipString:()V\n+   #653 = NameAndType        #504:#368    // _skipWSOrEnd:()I\n+   #654 = NameAndType        #934:#349    // close:()V\n+   #655 = NameAndType        #935:#295    // _currInputRow:I\n+   #656 = NameAndType        #936:#295    // _tokenInputRow:I\n+   #657 = NameAndType        #553:#539    // _closeScope:(I)V\n+   #658 = NameAndType        #937:#516    // expectComma:()Z\n+   #659 = Utf8               was expecting comma to separate\n+   #660 = NameAndType        #938:#352    // typeDesc:()Ljava/lang/String;\n+   #661 = Utf8                entries\n+   #662 = NameAndType        #939:#532    // _reportUnexpectedChar:(ILjava/lang/String;)V\n+   #663 = NameAndType        #503:#368    // _skipWS:()I\n+   #664 = NameAndType        #940:#295    // _features:I\n+   #665 = NameAndType        #294:#295    // FEAT_MASK_TRAILING_COMMA:I\n+   #666 = NameAndType        #941:#516    // inObject:()Z\n+   #667 = NameAndType        #405:#406    // _nextTokenNotInObject:(I)Lcom/fasterxml/jackson/core/JsonToken;\n+   #668 = NameAndType        #443:#444    // _parseName:(I)Ljava/lang/String;\n+   #669 = NameAndType        #942:#877    // setCurrentName:(Ljava/lang/String;)V\n+   #670 = NameAndType        #508:#368    // _skipColon:()I\n+   #671 = NameAndType        #943:#362    // _nextToken:Lcom/fasterxml/jackson/core/JsonToken;\n+   #672 = NameAndType        #432:#403    // _parseNegNumber:()Lcom/fasterxml/jackson/core/JsonToken;\n+   #673 = Class              #944         // com/fasterxml/jackson/core/json/JsonReadFeature\n+   #674 = NameAndType        #945:#946    // ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS:Lcom/fasterxml/jackson/core/json/JsonReadFeature;\n+   #675 = NameAndType        #947:#950    // mappedFeature:()Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #676 = NameAndType        #951:#952    // isEnabled:(Lcom/fasterxml/jackson/core/JsonParser$Feature;)Z\n+   #677 = NameAndType        #431:#403    // _parsePosNumber:()Lcom/fasterxml/jackson/core/JsonToken;\n+   #678 = NameAndType        #490:#406    // _handleUnexpectedValue:(I)Lcom/fasterxml/jackson/core/JsonToken;\n+   #679 = NameAndType        #419:#423    // _parseFloatThatStartsWithPeriod:(ZZ)Lcom/fasterxml/jackson/core/JsonToken;\n+   #680 = NameAndType        #429:#406    // _parseUnsignedNumber:(I)Lcom/fasterxml/jackson/core/JsonToken;\n+   #681 = Utf8               false\n+   #682 = NameAndType        #497:#498    // _matchToken:(Ljava/lang/String;I)V\n+   #683 = NameAndType        #953:#362    // VALUE_FALSE:Lcom/fasterxml/jackson/core/JsonToken;\n+   #684 = Utf8               null\n+   #685 = NameAndType        #954:#362    // VALUE_NULL:Lcom/fasterxml/jackson/core/JsonToken;\n+   #686 = Utf8               true\n+   #687 = NameAndType        #955:#362    // VALUE_TRUE:Lcom/fasterxml/jackson/core/JsonToken;\n+   #688 = NameAndType        #956:#362    // START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n+   #689 = NameAndType        #957:#362    // START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+   #690 = NameAndType        #958:#295    // _tokenInputCol:I\n+   #691 = NameAndType        #959:#960    // createChildArrayContext:(II)V\n+   #692 = NameAndType        #961:#960    // createChildObjectContext:(II)V\n+   #693 = NameAndType        #402:#403    // nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+   #694 = NameAndType        #962:#368    // getIntValue:()I\n+   #695 = NameAndType        #963:#964    // getLongValue:()J\n+   #696 = Class              #965         // java/lang/Boolean\n+   #697 = NameAndType        #966:#967    // TRUE:Ljava/lang/Boolean;\n+   #698 = NameAndType        #968:#967    // FALSE:Ljava/lang/Boolean;\n+   #699 = NameAndType        #969:#946    // ALLOW_LEADING_DECIMAL_POINT_FOR_NUMBERS:Lcom/fasterxml/jackson/core/json/JsonReadFeature;\n+   #700 = NameAndType        #970:#373    // emptyAndGetCurrentSegment:()[C\n+   #701 = NameAndType        #437:#438    // _parseFloat:([CIIZI)Lcom/fasterxml/jackson/core/JsonToken;\n+   #702 = NameAndType        #436:#368    // _handleLeadingZeroes:()I\n+   #703 = NameAndType        #492:#493    // _handleInvalidNumberStart:(IZ)Lcom/fasterxml/jackson/core/JsonToken;\n+   #704 = NameAndType        #971:#373    // finishCurrentSegment:()[C\n+   #705 = NameAndType        #972:#539    // setCurrentLength:(I)V\n+   #706 = NameAndType        #973:#516    // inRoot:()Z\n+   #707 = NameAndType        #442:#349    // _verifyRootSpace:()V\n+   #708 = NameAndType        #974:#975    // resetInt:(ZI)Lcom/fasterxml/jackson/core/JsonToken;\n+   #709 = NameAndType        #433:#434    // _parseSignedNumber:(Z)Lcom/fasterxml/jackson/core/JsonToken;\n+   #710 = NameAndType        #492:#494    // _handleInvalidNumberStart:(IZZ)Lcom/fasterxml/jackson/core/JsonToken;\n+   #711 = NameAndType        #296:#295    // FEAT_MASK_LEADING_ZEROS:I\n+   #712 = Utf8               Leading zeroes not allowed\n+   #713 = NameAndType        #976:#877    // reportInvalidNumber:(Ljava/lang/String;)V\n+   #714 = NameAndType        #977:#946    // ALLOW_TRAILING_DECIMAL_POINT_FOR_NUMBERS:Lcom/fasterxml/jackson/core/json/JsonReadFeature;\n+   #715 = Utf8               Decimal point not followed by a digit\n+   #716 = NameAndType        #978:#979    // _reportUnexpectedNumberChar:(ILjava/lang/String;)Ljava/lang/Object;\n+   #717 = Utf8               Exponent indicator not followed by a digit\n+   #718 = NameAndType        #980:#981    // resetFloat:(ZIII)Lcom/fasterxml/jackson/core/JsonToken;\n+   #719 = NameAndType        #982:#539    // _reportMissingRootWS:(I)V\n+   #720 = NameAndType        #466:#444    // _handleOddName:(I)Ljava/lang/String;\n+   #721 = NameAndType        #305:#304    // _icLatin1:[I\n+   #722 = NameAndType        #313:#295    // _quad1:I\n+   #723 = NameAndType        #448:#444    // _parseMediumName:(I)Ljava/lang/String;\n+   #724 = NameAndType        #469:#451    // findName:(II)Ljava/lang/String;\n+   #725 = NameAndType        #456:#454    // parseName:(III)Ljava/lang/String;\n+   #726 = Utf8\n+   #727 = NameAndType        #469:#454    // findName:(III)Ljava/lang/String;\n+   #728 = NameAndType        #456:#459    // parseName:(IIII)Ljava/lang/String;\n+   #729 = NameAndType        #450:#451    // _parseMediumName2:(II)Ljava/lang/String;\n+   #730 = NameAndType        #469:#459    // findName:(IIII)Ljava/lang/String;\n+   #731 = NameAndType        #456:#460    // parseName:(IIIII)Ljava/lang/String;\n+   #732 = NameAndType        #453:#454    // _parseLongName:(III)Ljava/lang/String;\n+   #733 = NameAndType        #469:#472    // findName:([IIII)Ljava/lang/String;\n+   #734 = NameAndType        #461:#462    // parseEscapedName:([IIIII)Ljava/lang/String;\n+   #735 = NameAndType        #543:#544    // _growArrayBy:([II)[I\n+   #736 = NameAndType        #983:#532    // _throwUnquotedSpace:(ILjava/lang/String;)V\n+   #737 = NameAndType        #518:#519    // _decodeEscaped:()C\n+   #738 = NameAndType        #554:#555    // pad:(II)I\n+   #739 = NameAndType        #469:#984    // findName:([II)Ljava/lang/String;\n+   #740 = NameAndType        #474:#475    // addName:([III)Ljava/lang/String;\n+   #741 = NameAndType        #299:#295    // FEAT_MASK_ALLOW_SINGLE_QUOTES:I\n+   #742 = NameAndType        #468:#352    // _parseAposName:()Ljava/lang/String;\n+   #743 = NameAndType        #300:#295    // FEAT_MASK_ALLOW_UNQUOTED_NAMES:I\n+   #744 = NameAndType        #522:#369    // _decodeCharForError:(I)I\n+   #745 = Utf8               was expecting double-quote to start field name\n+   #746 = Class              #985         // com/fasterxml/jackson/core/io/CharTypes\n+   #747 = NameAndType        #986:#987    // getInputCodeUtf8JsNames:()[I\n+   #748 = Utf8               was expecting either valid name character (for unquoted name) or double-quote (for quoted) to start field name\n+   #749 = NameAndType        #469:#444    // findName:(I)Ljava/lang/String;\n+   #750 = NameAndType        #540:#539    // _reportInvalidInitial:(I)V\n+   #751 = Utf8                in field name\n+   #752 = NameAndType        #988:#989    // _reportInvalidEOF:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n+   #753 = NameAndType        #542:#539    // _reportInvalidOther:(I)V\n+   #754 = NameAndType        #990:#373    // expandCurrentSegment:()[C\n+   #755 = Utf8               java/lang/String\n+   #756 = NameAndType        #317:#488    // \"<init>\":([CII)V\n+   #757 = NameAndType        #474:#991    // addName:(Ljava/lang/String;[II)Ljava/lang/String;\n+   #758 = NameAndType        #303:#304    // _icUTF8:[I\n+   #759 = NameAndType        #487:#488    // _finishString2:([CII)V\n+   #760 = NameAndType        #992:#444    // setCurrentAndReturn:(I)Ljava/lang/String;\n+   #761 = NameAndType        #524:#369    // _decodeUtf8_2:(I)I\n+   #762 = NameAndType        #525:#369    // _decodeUtf8_3:(I)I\n+   #763 = NameAndType        #527:#369    // _decodeUtf8_4:(I)I\n+   #764 = Utf8               string value\n+   #765 = NameAndType        #538:#539    // _reportInvalidChar:(I)V\n+   #766 = NameAndType        #528:#349    // _skipUtf8_2:()V\n+   #767 = NameAndType        #529:#349    // _skipUtf8_3:()V\n+   #768 = NameAndType        #530:#349    // _skipUtf8_4:()V\n+   #769 = NameAndType        #993:#516    // inArray:()Z\n+   #770 = NameAndType        #298:#295    // FEAT_MASK_ALLOW_MISSING:I\n+   #771 = Utf8               expected a value\n+   #772 = NameAndType        #491:#403    // _handleApos:()Lcom/fasterxml/jackson/core/JsonToken;\n+   #773 = Utf8               NaN\n+   #774 = NameAndType        #297:#295    // FEAT_MASK_NON_NUM_NUMBERS:I\n+   #775 = Utf8               java/lang/Double\n+   #776 = NameAndType        #994:#995    // resetAsNaN:(Ljava/lang/String;D)Lcom/fasterxml/jackson/core/JsonToken;\n+   #777 = Utf8               Non-standard token \\'NaN\\': enable `JsonReadFeature.ALLOW_NON_NUMERIC_NUMBERS` to allow\n+   #778 = Utf8               Infinity\n+   #779 = Utf8               Non-standard token \\'Infinity\\': enable `JsonReadFeature.ALLOW_NON_NUMERIC_NUMBERS` to allow\n+   #780 = Class              #996         // java/lang/Character\n+   #781 = NameAndType        #997:#928    // isJavaIdentifierStart:(I)Z\n+   #782 = NameAndType        #998:#352    // _validJsonTokenList:()Ljava/lang/String;\n+   #783 = NameAndType        #531:#534    // _reportInvalidToken:(ILjava/lang/String;Ljava/lang/String;)V\n+   #784 = Utf8               expected a valid value\n+   #785 = NameAndType        #999:#352    // _validJsonValueList:()Ljava/lang/String;\n+   #786 = Utf8               -INF\n+   #787 = Utf8               +INF\n+   #788 = Utf8               -Infinity\n+   #789 = Utf8               +Infinity\n+   #790 = Utf8               Non-standard token \\'\n+   #791 = Utf8               \\': enable `JsonReadFeature.ALLOW_NON_NUMERIC_NUMBERS` to allow\n+   #792 = Utf8               JSON spec does not allow numbers to have plus signs: enable `JsonReadFeature.ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS` to allow\n+   #793 = Utf8               expected digit (0-9) to follow minus sign, for valid numeric value\n+   #794 = Utf8               expected digit (0-9) for valid numeric value\n+   #795 = NameAndType        #1000:#1001  // charAt:(I)C\n+   #796 = NameAndType        #1002:#451   // substring:(II)Ljava/lang/String;\n+   #797 = NameAndType        #531:#532    // _reportInvalidToken:(ILjava/lang/String;)V\n+   #798 = NameAndType        #501:#502    // _checkMatchEnd:(Ljava/lang/String;II)V\n+   #799 = NameAndType        #1003:#1004  // isJavaIdentifierPart:(C)Z\n+   #800 = NameAndType        #507:#369    // _skipWSComment:(I)I\n+   #801 = Utf8               java/io/EOFException\n+   #802 = NameAndType        #1005:#368   // _eofAsNextChar:()I\n+   #803 = NameAndType        #512:#349    // _skipComment:()V\n+   #804 = NameAndType        #515:#516    // _skipYAMLComment:()Z\n+   #805 = NameAndType        #509:#510    // _skipColon2:(IZ)I\n+   #806 = Utf8               was expecting a colon to separate field name and value\n+   #807 = NameAndType        #301:#295    // FEAT_MASK_ALLOW_JAVA_COMMENTS:I\n+   #808 = Utf8               maybe a (non-standard) comment? (not recognized as one since Feature \\'ALLOW_COMMENTS\\' not enabled for parser)\n+   #809 = NameAndType        #517:#349    // _skipLine:()V\n+   #810 = NameAndType        #513:#349    // _skipCComment:()V\n+   #811 = Utf8               was expecting either \\'*\\' or \\'/\\' for a comment\n+   #812 = NameAndType        #1006:#987   // getInputCodeComment:()[I\n+   #813 = NameAndType        #302:#295    // FEAT_MASK_ALLOW_YAML_COMMENTS:I\n+   #814 = NameAndType        #1007:#1008  // _handleUnrecognizedCharacterEscape:(C)C\n+   #815 = NameAndType        #1009:#369   // charToHex:(I)I\n+   #816 = Utf8               expected a hex-digit for character escape sequence\n+   #817 = NameAndType        #317:#877    // \"<init>\":(Ljava/lang/String;)V\n+   #818 = Utf8               Unrecognized token \\'\n+   #819 = Utf8               \\': was expecting\n+   #820 = NameAndType        #1010:#539   // _throwInvalidSpace:(I)V\n+   #821 = Utf8               Invalid UTF-8 start byte 0x\n+   #822 = Class              #1011        // java/lang/Integer\n+   #823 = NameAndType        #1012:#444   // toHexString:(I)Ljava/lang/String;\n+   #824 = Utf8               Invalid UTF-8 middle byte 0x\n+   #825 = Class              #1013        // java/util/Arrays\n+   #826 = NameAndType        #1014:#544   // copyOf:([II)[I\n+   #827 = NameAndType        #902:#539    // append:(I)V\n+   #828 = NameAndType        #1015:#539   // appendTwoBytes:(I)V\n+   #829 = NameAndType        #1016:#539   // appendThreeBytes:(I)V\n+   #830 = Utf8               com/fasterxml/jackson/core/JsonLocation\n+   #831 = NameAndType        #1017:#1018  // _contentReference:()Lcom/fasterxml/jackson/core/io/ContentReference;\n+   #832 = NameAndType        #317:#1019   // \"<init>\":(Lcom/fasterxml/jackson/core/io/ContentReference;JJII)V\n+   #833 = NameAndType        #1020:#1021  // _reportMismatchedEndMarker:(IC)V\n+   #834 = NameAndType        #1022:#1023  // clearAndGetParent:()Lcom/fasterxml/jackson/core/json/JsonReadContext;\n+   #835 = NameAndType        #1024:#362   // END_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n+   #836 = NameAndType        #1025:#362   // END_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+   #837 = Class              #1027        // com/fasterxml/jackson/core/JsonParser$Feature\n+   #838 = NameAndType        #1028:#1029  // ALLOW_TRAILING_COMMA:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #839 = NameAndType        #1030:#368   // getMask:()I\n+   #840 = NameAndType        #1031:#1029  // ALLOW_NUMERIC_LEADING_ZEROS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #841 = NameAndType        #1032:#1029  // ALLOW_NON_NUMERIC_NUMBERS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #842 = NameAndType        #1033:#1029  // ALLOW_MISSING_VALUES:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #843 = NameAndType        #1034:#1029  // ALLOW_SINGLE_QUOTES:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #844 = NameAndType        #1035:#1029  // ALLOW_UNQUOTED_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #845 = NameAndType        #1036:#1029  // ALLOW_COMMENTS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #846 = NameAndType        #1037:#1029  // ALLOW_YAML_COMMENTS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #847 = NameAndType        #1038:#987   // getInputCodeUtf8:()[I\n+   #848 = NameAndType        #1039:#987   // getInputCodeLatin1:()[I\n+   #849 = Utf8               com/fasterxml/jackson/core/json/UTF8DataInputJsonParser\n+   #850 = Utf8               com/fasterxml/jackson/core/base/ParserBase\n+   #851 = Utf8               java/io/IOException\n+   #852 = Utf8               com/fasterxml/jackson/core/JsonToken\n+   #853 = Utf8               java/io/OutputStream\n+   #854 = Utf8               java/lang/Throwable\n+   #855 = Utf8               com/fasterxml/jackson/core/JsonParseException\n+   #856 = Utf8               com/fasterxml/jackson/core/exc/StreamConstraintsException\n+   #857 = Utf8               com/fasterxml/jackson/core/util/ByteArrayBuilder\n+   #858 = Utf8               (Lcom/fasterxml/jackson/core/io/IOContext;I)V\n+   #859 = Utf8               JSON_READ_CAPABILITIES\n+   #860 = Utf8               Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+   #861 = Utf8               com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer\n+   #862 = Utf8               release\n+   #863 = Utf8               _currToken\n+   #864 = Utf8               VALUE_STRING\n+   #865 = Utf8               _textBuffer\n+   #866 = Utf8               Lcom/fasterxml/jackson/core/util/TextBuffer;\n+   #867 = Utf8               com/fasterxml/jackson/core/util/TextBuffer\n+   #868 = Utf8               contentsAsString\n+   #869 = Utf8               contentsToWriter\n+   #870 = Utf8               FIELD_NAME\n+   #871 = Utf8               _parsingContext\n+   #872 = Utf8               Lcom/fasterxml/jackson/core/json/JsonReadContext;\n+   #873 = Utf8               com/fasterxml/jackson/core/json/JsonReadContext\n+   #874 = Utf8               getCurrentName\n+   #875 = Utf8               java/io/Writer\n+   #876 = Utf8               write\n+   #877 = Utf8               (Ljava/lang/String;)V\n+   #878 = Utf8               length\n+   #879 = Utf8               isNumeric\n+   #880 = Utf8               asCharArray\n+   #881 = Utf8               ([C)V\n+   #882 = Utf8               VALUE_NUMBER_INT\n+   #883 = Utf8               VALUE_NUMBER_FLOAT\n+   #884 = Utf8               _numTypesValid\n+   #885 = Utf8               _parseIntValue\n+   #886 = Utf8               convertNumberToInt\n+   #887 = Utf8               _numberInt\n+   #888 = Utf8               id\n+   #889 = Utf8               asString\n+   #890 = Utf8               _nameCopied\n+   #891 = Utf8               _nameCopyBuffer\n+   #892 = Utf8               _ioContext\n+   #893 = Utf8               com/fasterxml/jackson/core/io/IOContext\n+   #894 = Utf8               allocNameCopyBuffer\n+   #895 = Utf8               (I)[C\n+   #896 = Utf8               getChars\n+   #897 = Utf8               (II[CI)V\n+   #898 = Utf8               getTextBuffer\n+   #899 = Utf8               size\n+   #900 = Utf8               VALUE_EMBEDDED_OBJECT\n+   #901 = Utf8               _binaryValue\n+   #902 = Utf8               append\n+   #903 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #904 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #905 = Utf8               toString\n+   #906 = Utf8               _reportError\n+   #907 = Utf8               getMessage\n+   #908 = Utf8               _constructError\n+   #909 = Utf8               (Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParseException;\n+   #910 = Utf8               _getByteArrayBuilder\n+   #911 = Utf8               ()Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n+   #912 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;Lcom/fasterxml/jackson/core/Base64Variant;)V\n+   #913 = Utf8               toByteArray\n+   #914 = Utf8               ()[B\n+   #915 = Utf8               ([B)V\n+   #916 = Utf8               allocBase64Buffer\n+   #917 = Utf8               releaseBase64Buffer\n+   #918 = Utf8               java/io/DataInput\n+   #919 = Utf8               readUnsignedByte\n+   #920 = Utf8               decodeBase64Char\n+   #921 = Utf8               _decodeBase64Escape\n+   #922 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;II)I\n+   #923 = Utf8               ([BII)V\n+   #924 = Utf8               requiresPaddingOnRead\n+   #925 = Utf8               _handleBase64MissingPadding\n+   #926 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;)V\n+   #927 = Utf8               usesPaddingChar\n+   #928 = Utf8               (I)Z\n+   #929 = Utf8               getPaddingChar\n+   #930 = Utf8               (C)Ljava/lang/StringBuilder;\n+   #931 = Utf8               reportInvalidBase64Char\n+   #932 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;IILjava/lang/String;)Ljava/lang/IllegalArgumentException;\n+   #933 = Utf8               _closed\n+   #934 = Utf8               close\n+   #935 = Utf8               _currInputRow\n+   #936 = Utf8               _tokenInputRow\n+   #937 = Utf8               expectComma\n+   #938 = Utf8               typeDesc\n+   #939 = Utf8               _reportUnexpectedChar\n+   #940 = Utf8               _features\n+   #941 = Utf8               inObject\n+   #942 = Utf8               setCurrentName\n+   #943 = Utf8               _nextToken\n+   #944 = Utf8               com/fasterxml/jackson/core/json/JsonReadFeature\n+   #945 = Utf8               ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS\n+   #946 = Utf8               Lcom/fasterxml/jackson/core/json/JsonReadFeature;\n+   #947 = Utf8               mappedFeature\n+   #948 = Utf8               Feature\n+   #949 = Utf8               InnerClasses\n+   #950 = Utf8               ()Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #951 = Utf8               isEnabled\n+   #952 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser$Feature;)Z\n+   #953 = Utf8               VALUE_FALSE\n+   #954 = Utf8               VALUE_NULL\n+   #955 = Utf8               VALUE_TRUE\n+   #956 = Utf8               START_ARRAY\n+   #957 = Utf8               START_OBJECT\n+   #958 = Utf8               _tokenInputCol\n+   #959 = Utf8               createChildArrayContext\n+   #960 = Utf8               (II)V\n+   #961 = Utf8               createChildObjectContext\n+   #962 = Utf8               getIntValue\n+   #963 = Utf8               getLongValue\n+   #964 = Utf8               ()J\n+   #965 = Utf8               java/lang/Boolean\n+   #966 = Utf8               TRUE\n+   #967 = Utf8               Ljava/lang/Boolean;\n+   #968 = Utf8               FALSE\n+   #969 = Utf8               ALLOW_LEADING_DECIMAL_POINT_FOR_NUMBERS\n+   #970 = Utf8               emptyAndGetCurrentSegment\n+   #971 = Utf8               finishCurrentSegment\n+   #972 = Utf8               setCurrentLength\n+   #973 = Utf8               inRoot\n+   #974 = Utf8               resetInt\n+   #975 = Utf8               (ZI)Lcom/fasterxml/jackson/core/JsonToken;\n+   #976 = Utf8               reportInvalidNumber\n+   #977 = Utf8               ALLOW_TRAILING_DECIMAL_POINT_FOR_NUMBERS\n+   #978 = Utf8               _reportUnexpectedNumberChar\n+   #979 = Utf8               (ILjava/lang/String;)Ljava/lang/Object;\n+   #980 = Utf8               resetFloat\n+   #981 = Utf8               (ZIII)Lcom/fasterxml/jackson/core/JsonToken;\n+   #982 = Utf8               _reportMissingRootWS\n+   #983 = Utf8               _throwUnquotedSpace\n+   #984 = Utf8               ([II)Ljava/lang/String;\n+   #985 = Utf8               com/fasterxml/jackson/core/io/CharTypes\n+   #986 = Utf8               getInputCodeUtf8JsNames\n+   #987 = Utf8               ()[I\n+   #988 = Utf8               _reportInvalidEOF\n+   #989 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n+   #990 = Utf8               expandCurrentSegment\n+   #991 = Utf8               (Ljava/lang/String;[II)Ljava/lang/String;\n+   #992 = Utf8               setCurrentAndReturn\n+   #993 = Utf8               inArray\n+   #994 = Utf8               resetAsNaN\n+   #995 = Utf8               (Ljava/lang/String;D)Lcom/fasterxml/jackson/core/JsonToken;\n+   #996 = Utf8               java/lang/Character\n+   #997 = Utf8               isJavaIdentifierStart\n+   #998 = Utf8               _validJsonTokenList\n+   #999 = Utf8               _validJsonValueList\n+  #1000 = Utf8               charAt\n+  #1001 = Utf8               (I)C\n+  #1002 = Utf8               substring\n+  #1003 = Utf8               isJavaIdentifierPart\n+  #1004 = Utf8               (C)Z\n+  #1005 = Utf8               _eofAsNextChar\n+  #1006 = Utf8               getInputCodeComment\n+  #1007 = Utf8               _handleUnrecognizedCharacterEscape\n+  #1008 = Utf8               (C)C\n+  #1009 = Utf8               charToHex\n+  #1010 = Utf8               _throwInvalidSpace\n+  #1011 = Utf8               java/lang/Integer\n+  #1012 = Utf8               toHexString\n+  #1013 = Utf8               java/util/Arrays\n+  #1014 = Utf8               copyOf\n+  #1015 = Utf8               appendTwoBytes\n+  #1016 = Utf8               appendThreeBytes\n+  #1017 = Utf8               _contentReference\n+  #1018 = Utf8               ()Lcom/fasterxml/jackson/core/io/ContentReference;\n+  #1019 = Utf8               (Lcom/fasterxml/jackson/core/io/ContentReference;JJII)V\n+  #1020 = Utf8               _reportMismatchedEndMarker\n+  #1021 = Utf8               (IC)V\n+  #1022 = Utf8               clearAndGetParent\n+  #1023 = Utf8               ()Lcom/fasterxml/jackson/core/json/JsonReadContext;\n+  #1024 = Utf8               END_ARRAY\n+  #1025 = Utf8               END_OBJECT\n+  #1026 = Class              #1040        // com/fasterxml/jackson/core/JsonParser\n+  #1027 = Utf8               com/fasterxml/jackson/core/JsonParser$Feature\n+  #1028 = Utf8               ALLOW_TRAILING_COMMA\n+  #1029 = Utf8               Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+  #1030 = Utf8               getMask\n+  #1031 = Utf8               ALLOW_NUMERIC_LEADING_ZEROS\n+  #1032 = Utf8               ALLOW_NON_NUMERIC_NUMBERS\n+  #1033 = Utf8               ALLOW_MISSING_VALUES\n+  #1034 = Utf8               ALLOW_SINGLE_QUOTES\n+  #1035 = Utf8               ALLOW_UNQUOTED_FIELD_NAMES\n+  #1036 = Utf8               ALLOW_COMMENTS\n+  #1037 = Utf8               ALLOW_YAML_COMMENTS\n+  #1038 = Utf8               getInputCodeUtf8\n+  #1039 = Utf8               getInputCodeLatin1\n+  #1040 = Utf8               com/fasterxml/jackson/core/JsonParser\n {\n   private static final int FEAT_MASK_TRAILING_COMMA;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final int FEAT_MASK_LEADING_ZEROS;\n     descriptor: I\n@@ -3836,15 +3827,15 @@\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lcom/fasterxml/jackson/core/json/UTF8DataInputJsonParser;\n     Exceptions:\n       throws java.io.IOException\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #426()\n+      0: #422()\n         java.lang.Deprecated\n \n   protected final com.fasterxml.jackson.core.JsonToken _parseFloatThatStartsWithPeriod(boolean, boolean) throws java.io.IOException;\n     descriptor: (ZZ)Lcom/fasterxml/jackson/core/JsonToken;\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n     Code:\n       stack=6, locals=5, args_size=3\n@@ -8032,14 +8023,16 @@\n         line 2281: 64\n         line 2282: 75\n         line 2284: 95\n         line 2285: 124\n         line 2286: 127\n         line 2287: 148\n         line 2289: 157\n+        line 2290: 161\n+        line 2291: 166\n         line 2292: 170\n         line 2293: 178\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n            35       3     4 match   Ljava/lang/String;\n            57      67     4 match   Ljava/lang/String;\n             0     180     0  this   Lcom/fasterxml/jackson/core/json/UTF8DataInputJsonParser;\n@@ -10415,8 +10408,8 @@\n         line 52: 54\n         line 53: 63\n         line 56: 72\n         line 60: 78\n }\n SourceFile: \"UTF8DataInputJsonParser.java\"\n InnerClasses:\n-  public static final #957= #846 of #1035; // Feature=class com/fasterxml/jackson/core/JsonParser$Feature of class com/fasterxml/jackson/core/JsonParser\n+  public static final #948= #837 of #1026; // Feature=class com/fasterxml/jackson/core/JsonParser$Feature of class com/fasterxml/jackson/core/JsonParser\n"}]}
