{"diffoscope-json-version": 1, "source1": "first/ZipArchiveEntry.class", "source2": "second/ZipArchiveEntry.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,160 +1,160 @@\n-  SHA-256 checksum 55c41f0b4c99b786c907f9f18d9f282fb669be1164c4089f59a5dbdf87dfd43f\n+  SHA-256 checksum 11903e426f30893c435f551ffe85003630423c2b941889d037d039a1da8fa4b3\n   Compiled from \"ZipArchiveEntry.java\"\n public class org.apache.commons.compress.archivers.zip.ZipArchiveEntry extends java.util.zip.ZipEntry implements org.apache.commons.compress.archivers.ArchiveEntry,org.apache.commons.compress.archivers.EntryStreamOffsets\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #9                          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n   super_class: #141                       // java/util/zip/ZipEntry\n   interfaces: 2, fields: 26, methods: 71, attributes: 2\n Constant pool:\n-    #1 = Methodref          #141.#300     // java/util/zip/ZipEntry.\"<init>\":(Ljava/lang/String;)V\n-    #2 = Class              #301          // org/apache/commons/compress/archivers/zip/ZipMethod\n-    #3 = Fieldref           #9.#302       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.method:I\n-    #4 = Class              #303          // org/apache/commons/compress/archivers/ArchiveEntry\n+    #1 = Methodref          #141.#295     // java/util/zip/ZipEntry.\"<init>\":(Ljava/lang/String;)V\n+    #2 = Class              #296          // org/apache/commons/compress/archivers/zip/ZipMethod\n+    #3 = Fieldref           #9.#297       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.method:I\n+    #4 = Class              #298          // org/apache/commons/compress/archivers/ArchiveEntry\n     #5 = Long               -1l\n-    #7 = Fieldref           #9.#304       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.size:J\n-    #8 = Fieldref           #9.#305       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.internalAttributes:I\n-    #9 = Class              #306          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-   #10 = Fieldref           #9.#307       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.platform:I\n-   #11 = Fieldref           #9.#308       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.externalAttributes:J\n-   #12 = Fieldref           #9.#309       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.alignment:I\n-   #13 = Fieldref           #9.#310       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n-   #14 = Fieldref           #9.#311       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.name:Ljava/lang/String;\n-   #15 = Fieldref           #9.#312       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.rawName:[B\n-   #16 = Class              #313          // org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n-   #17 = Methodref          #16.#314      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.\"<init>\":()V\n-   #18 = Fieldref           #9.#315       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-   #19 = Class              #316          // org/apache/commons/compress/archivers/EntryStreamOffsets\n-   #20 = Fieldref           #9.#317       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.localHeaderOffset:J\n-   #21 = Fieldref           #9.#318       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.dataOffset:J\n-   #22 = Fieldref           #9.#319       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.isStreamContiguous:Z\n-   #23 = Fieldref           #145.#320     // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource.NAME:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n-   #24 = Fieldref           #9.#321       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n-   #25 = Fieldref           #142.#322     // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource.COMMENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n-   #26 = Fieldref           #9.#323       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n-   #27 = Methodref          #9.#324       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setName:(Ljava/lang/String;)V\n-   #28 = Methodref          #141.#325     // java/util/zip/ZipEntry.\"<init>\":(Ljava/util/zip/ZipEntry;)V\n-   #29 = Methodref          #141.#326     // java/util/zip/ZipEntry.getName:()Ljava/lang/String;\n-   #30 = Methodref          #141.#327     // java/util/zip/ZipEntry.getExtra:()[B\n-   #31 = Fieldref           #328.#329     // org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField.READ:Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;\n-   #32 = Methodref          #330.#331     // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #33 = Methodref          #9.#332       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n-   #34 = Methodref          #9.#333       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExtra:()V\n-   #35 = Methodref          #141.#334     // java/util/zip/ZipEntry.getMethod:()I\n-   #36 = Methodref          #9.#335       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setMethod:(I)V\n-   #37 = Methodref          #141.#336     // java/util/zip/ZipEntry.getSize:()J\n-   #38 = Methodref          #9.#325       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":(Ljava/util/zip/ZipEntry;)V\n-   #39 = Methodref          #9.#337       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getInternalAttributes:()I\n-   #40 = Methodref          #9.#338       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setInternalAttributes:(I)V\n-   #41 = Methodref          #9.#339       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExternalAttributes:()J\n-   #42 = Methodref          #9.#340       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExternalAttributes:(J)V\n-   #43 = Methodref          #9.#341       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #44 = Methodref          #9.#342       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getPlatform:()I\n-   #45 = Methodref          #9.#343       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setPlatform:(I)V\n-   #46 = Methodref          #9.#344       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getGeneralPurposeBit:()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-   #47 = Methodref          #16.#345      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.clone:()Ljava/lang/Object;\n-   #48 = Methodref          #9.#346       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setGeneralPurposeBit:(Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n-   #49 = String             #347          //\n-   #50 = Methodref          #9.#300       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":(Ljava/lang/String;)V\n-   #51 = Methodref          #348.#349     // java/io/File.isDirectory:()Z\n-   #52 = String             #350          // /\n-   #53 = Methodref          #351.#352     // java/lang/String.endsWith:(Ljava/lang/String;)Z\n-   #54 = Class              #353          // java/lang/StringBuilder\n-   #55 = Methodref          #54.#314      // java/lang/StringBuilder.\"<init>\":()V\n-   #56 = Methodref          #54.#354      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #57 = Methodref          #54.#355      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #58 = Methodref          #348.#356     // java/io/File.isFile:()Z\n-   #59 = Methodref          #348.#357     // java/io/File.length:()J\n-   #60 = Methodref          #9.#358       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setSize:(J)V\n-   #61 = Methodref          #348.#359     // java/io/File.lastModified:()J\n-   #62 = Methodref          #9.#360       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setTime:(J)V\n-   #63 = Methodref          #141.#345     // java/util/zip/ZipEntry.clone:()Ljava/lang/Object;\n-   #64 = Class              #361          // java/lang/IllegalArgumentException\n-   #65 = String             #362          // ZIP compression method can not be negative:\n-   #66 = Methodref          #54.#363      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #67 = Methodref          #64.#300      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #68 = Methodref          #9.#349       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.isDirectory:()Z\n+    #7 = Fieldref           #9.#299       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.size:J\n+    #8 = Fieldref           #9.#300       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.internalAttributes:I\n+    #9 = Class              #301          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+   #10 = Fieldref           #9.#302       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.platform:I\n+   #11 = Fieldref           #9.#303       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.externalAttributes:J\n+   #12 = Fieldref           #9.#304       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.alignment:I\n+   #13 = Fieldref           #9.#305       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+   #14 = Fieldref           #9.#306       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.name:Ljava/lang/String;\n+   #15 = Fieldref           #9.#307       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.rawName:[B\n+   #16 = Class              #308          // org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+   #17 = Methodref          #16.#309      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.\"<init>\":()V\n+   #18 = Fieldref           #9.#310       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+   #19 = Class              #311          // org/apache/commons/compress/archivers/EntryStreamOffsets\n+   #20 = Fieldref           #9.#312       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.localHeaderOffset:J\n+   #21 = Fieldref           #9.#313       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.dataOffset:J\n+   #22 = Fieldref           #9.#314       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.isStreamContiguous:Z\n+   #23 = Fieldref           #145.#315     // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource.NAME:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+   #24 = Fieldref           #9.#316       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+   #25 = Fieldref           #142.#317     // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource.COMMENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+   #26 = Fieldref           #9.#318       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+   #27 = Methodref          #9.#319       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setName:(Ljava/lang/String;)V\n+   #28 = Methodref          #141.#320     // java/util/zip/ZipEntry.\"<init>\":(Ljava/util/zip/ZipEntry;)V\n+   #29 = Methodref          #141.#321     // java/util/zip/ZipEntry.getName:()Ljava/lang/String;\n+   #30 = Methodref          #141.#322     // java/util/zip/ZipEntry.getExtra:()[B\n+   #31 = Fieldref           #323.#324     // org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField.READ:Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;\n+   #32 = Methodref          #325.#326     // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #33 = Methodref          #9.#327       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+   #34 = Methodref          #9.#328       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExtra:()V\n+   #35 = Methodref          #141.#329     // java/util/zip/ZipEntry.getMethod:()I\n+   #36 = Methodref          #9.#330       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setMethod:(I)V\n+   #37 = Methodref          #141.#331     // java/util/zip/ZipEntry.getSize:()J\n+   #38 = Methodref          #9.#320       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":(Ljava/util/zip/ZipEntry;)V\n+   #39 = Methodref          #9.#332       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getInternalAttributes:()I\n+   #40 = Methodref          #9.#333       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setInternalAttributes:(I)V\n+   #41 = Methodref          #9.#334       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExternalAttributes:()J\n+   #42 = Methodref          #9.#335       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExternalAttributes:(J)V\n+   #43 = Methodref          #9.#336       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #44 = Methodref          #9.#337       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getPlatform:()I\n+   #45 = Methodref          #9.#338       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setPlatform:(I)V\n+   #46 = Methodref          #9.#339       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getGeneralPurposeBit:()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+   #47 = Methodref          #16.#340      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.clone:()Ljava/lang/Object;\n+   #48 = Methodref          #9.#341       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setGeneralPurposeBit:(Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n+   #49 = String             #342          //\n+   #50 = Methodref          #9.#295       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":(Ljava/lang/String;)V\n+   #51 = Methodref          #199.#343     // java/io/File.isDirectory:()Z\n+   #52 = String             #344          // /\n+   #53 = Methodref          #200.#345     // java/lang/String.endsWith:(Ljava/lang/String;)Z\n+   #54 = Class              #346          // java/lang/StringBuilder\n+   #55 = Methodref          #54.#309      // java/lang/StringBuilder.\"<init>\":()V\n+   #56 = Methodref          #54.#347      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #57 = Methodref          #54.#348      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #58 = Methodref          #199.#349     // java/io/File.isFile:()Z\n+   #59 = Methodref          #199.#350     // java/io/File.length:()J\n+   #60 = Methodref          #9.#351       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setSize:(J)V\n+   #61 = Methodref          #199.#352     // java/io/File.lastModified:()J\n+   #62 = Methodref          #9.#353       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setTime:(J)V\n+   #63 = Methodref          #141.#340     // java/util/zip/ZipEntry.clone:()Ljava/lang/Object;\n+   #64 = Class              #354          // java/lang/IllegalArgumentException\n+   #65 = String             #355          // ZIP compression method can not be negative:\n+   #66 = Methodref          #54.#356      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #67 = Methodref          #64.#295      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #68 = Methodref          #9.#343       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.isDirectory:()Z\n    #69 = Long               65535l\n-   #71 = Methodref          #9.#364       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getUnixMode:()I\n-   #72 = Class              #365          // org/apache/commons/compress/archivers/zip/UnixStat\n+   #71 = Methodref          #9.#357       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getUnixMode:()I\n+   #72 = Class              #358          // org/apache/commons/compress/archivers/zip/UnixStat\n    #73 = Integer            61440\n    #74 = Integer            40960\n    #75 = Integer            65535\n-   #76 = String             #366          // Invalid value for alignment, must be power of two and no bigger than 65535 but is\n-   #77 = Class              #367          // java/util/ArrayList\n-   #78 = Methodref          #77.#314      // java/util/ArrayList.\"<init>\":()V\n-   #79 = Class              #368          // org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n-   #80 = InterfaceMethodref #369.#370     // java/util/List.add:(Ljava/lang/Object;)Z\n-   #81 = InterfaceMethodref #369.#371     // java/util/List.size:()I\n-   #82 = Class              #372          // org/apache/commons/compress/archivers/zip/ZipExtraField\n-   #83 = InterfaceMethodref #369.#373     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+   #76 = String             #359          // Invalid value for alignment, must be power of two and no bigger than 65535 but is\n+   #77 = Class              #360          // java/util/ArrayList\n+   #78 = Methodref          #77.#309      // java/util/ArrayList.\"<init>\":()V\n+   #79 = Class              #361          // org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n+   #80 = InterfaceMethodref #223.#362     // java/util/List.add:(Ljava/lang/Object;)Z\n+   #81 = InterfaceMethodref #223.#363     // java/util/List.size:()I\n+   #82 = Class              #364          // org/apache/commons/compress/archivers/zip/ZipExtraField\n+   #83 = InterfaceMethodref #223.#365     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n    #84 = Class              #171          // \"[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\"\n-   #85 = Fieldref           #9.#374       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #86 = Methodref          #9.#375       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getParseableExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #87 = Methodref          #9.#376       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getAllExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #88 = Fieldref           #9.#377       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.noExtraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #89 = Methodref          #9.#378       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getParseableExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #90 = Methodref          #9.#379       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #91 = Methodref          #9.#380       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getUnparseableOnly:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #92 = Methodref          #9.#381       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMergedFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #93 = Methodref          #9.#382       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #94 = Methodref          #383.#384     // java/lang/Math.min:(II)I\n-   #95 = Methodref          #385.#386     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #96 = InterfaceMethodref #82.#387      // org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #97 = Methodref          #9.#388       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #98 = Methodref          #9.#389       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-   #99 = Class              #390          // java/util/NoSuchElementException\n-  #100 = Methodref          #99.#314      // java/util/NoSuchElementException.\"<init>\":()V\n-  #101 = Methodref          #391.#392     // org/apache/commons/compress/archivers/zip/ZipShort.equals:(Ljava/lang/Object;)Z\n-  #102 = Methodref          #9.#393       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.mergeExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n-  #103 = Class              #394          // java/util/zip/ZipException\n-  #104 = Class              #395          // java/lang/RuntimeException\n-  #105 = String             #396          // Error parsing extra fields for entry:\n-  #106 = Methodref          #9.#326       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;\n-  #107 = String             #397          //  -\n-  #108 = Methodref          #103.#398     // java/util/zip/ZipException.getMessage:()Ljava/lang/String;\n-  #109 = Methodref          #104.#399     // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #110 = Methodref          #330.#400     // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.mergeLocalFileDataData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n-  #111 = Methodref          #141.#401     // java/util/zip/ZipEntry.setExtra:([B)V\n-  #112 = Methodref          #9.#327       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExtra:()[B\n-  #113 = Fieldref           #9.#402       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.EMPTY:[B\n-  #114 = Methodref          #330.#403     // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.mergeCentralDirectoryData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n-  #115 = Methodref          #351.#404     // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n-  #116 = Methodref          #351.#405     // java/lang/String.replace:(CC)Ljava/lang/String;\n-  #117 = String             #406          // invalid entry size\n-  #118 = Methodref          #351.#407     // java/lang/String.hashCode:()I\n-  #119 = Methodref          #9.#408       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n-  #120 = InterfaceMethodref #82.#409      // org/apache/commons/compress/archivers/zip/ZipExtraField.getLocalFileDataData:()[B\n-  #121 = InterfaceMethodref #82.#410      // org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromLocalFileData:([BII)V\n-  #122 = InterfaceMethodref #82.#411      // org/apache/commons/compress/archivers/zip/ZipExtraField.getCentralDirectoryData:()[B\n-  #123 = InterfaceMethodref #82.#412      // org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromCentralDirectoryData:([BII)V\n-  #124 = Class              #413          // java/util/Date\n-  #125 = Methodref          #9.#414       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getTime:()J\n-  #126 = Methodref          #124.#415     // java/util/Date.\"<init>\":(J)V\n-  #127 = Methodref          #416.#417     // java/lang/Object.getClass:()Ljava/lang/Class;\n-  #128 = Methodref          #351.#392     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-  #129 = Methodref          #9.#418       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getComment:()Ljava/lang/String;\n-  #130 = Methodref          #9.#334       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n-  #131 = Methodref          #9.#336       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J\n-  #132 = Methodref          #9.#419       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCrc:()J\n-  #133 = Methodref          #9.#420       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J\n-  #134 = Methodref          #9.#421       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCentralDirectoryExtra:()[B\n-  #135 = Methodref          #422.#423     // java/util/Arrays.equals:([B[B)Z\n-  #136 = Methodref          #9.#424       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getLocalFileDataExtra:()[B\n-  #137 = Methodref          #16.#392      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.equals:(Ljava/lang/Object;)Z\n-  #138 = Fieldref           #9.#425       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.versionMadeBy:I\n-  #139 = Fieldref           #9.#426       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.versionRequired:I\n-  #140 = Fieldref           #9.#427       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.rawFlag:I\n-  #141 = Class              #428          // java/util/zip/ZipEntry\n-  #142 = Class              #429          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource\n+   #85 = Fieldref           #9.#366       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #86 = Methodref          #9.#367       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getParseableExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #87 = Methodref          #9.#368       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getAllExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #88 = Fieldref           #9.#369       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.noExtraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #89 = Methodref          #9.#370       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getParseableExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #90 = Methodref          #9.#371       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #91 = Methodref          #9.#372       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getUnparseableOnly:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #92 = Methodref          #9.#373       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMergedFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #93 = Methodref          #9.#374       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #94 = Methodref          #375.#376     // java/lang/Math.min:(II)I\n+   #95 = Methodref          #377.#378     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #96 = InterfaceMethodref #82.#379      // org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #97 = Methodref          #9.#380       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #98 = Methodref          #9.#381       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+   #99 = Class              #382          // java/util/NoSuchElementException\n+  #100 = Methodref          #99.#309      // java/util/NoSuchElementException.\"<init>\":()V\n+  #101 = Methodref          #241.#383     // org/apache/commons/compress/archivers/zip/ZipShort.equals:(Ljava/lang/Object;)Z\n+  #102 = Methodref          #9.#384       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.mergeExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n+  #103 = Class              #385          // java/util/zip/ZipException\n+  #104 = Class              #386          // java/lang/RuntimeException\n+  #105 = String             #387          // Error parsing extra fields for entry:\n+  #106 = Methodref          #9.#321       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;\n+  #107 = String             #388          //  -\n+  #108 = Methodref          #103.#389     // java/util/zip/ZipException.getMessage:()Ljava/lang/String;\n+  #109 = Methodref          #104.#390     // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #110 = Methodref          #325.#391     // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.mergeLocalFileDataData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n+  #111 = Methodref          #141.#392     // java/util/zip/ZipEntry.setExtra:([B)V\n+  #112 = Methodref          #9.#322       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExtra:()[B\n+  #113 = Fieldref           #9.#393       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.EMPTY:[B\n+  #114 = Methodref          #325.#394     // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.mergeCentralDirectoryData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n+  #115 = Methodref          #200.#395     // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+  #116 = Methodref          #200.#396     // java/lang/String.replace:(CC)Ljava/lang/String;\n+  #117 = String             #397          // invalid entry size\n+  #118 = Methodref          #200.#398     // java/lang/String.hashCode:()I\n+  #119 = Methodref          #9.#399       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+  #120 = InterfaceMethodref #82.#400      // org/apache/commons/compress/archivers/zip/ZipExtraField.getLocalFileDataData:()[B\n+  #121 = InterfaceMethodref #82.#401      // org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromLocalFileData:([BII)V\n+  #122 = InterfaceMethodref #82.#402      // org/apache/commons/compress/archivers/zip/ZipExtraField.getCentralDirectoryData:()[B\n+  #123 = InterfaceMethodref #82.#403      // org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromCentralDirectoryData:([BII)V\n+  #124 = Class              #404          // java/util/Date\n+  #125 = Methodref          #9.#405       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getTime:()J\n+  #126 = Methodref          #124.#406     // java/util/Date.\"<init>\":(J)V\n+  #127 = Methodref          #407.#408     // java/lang/Object.getClass:()Ljava/lang/Class;\n+  #128 = Methodref          #200.#383     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+  #129 = Methodref          #9.#409       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getComment:()Ljava/lang/String;\n+  #130 = Methodref          #9.#329       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n+  #131 = Methodref          #9.#331       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J\n+  #132 = Methodref          #9.#410       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCrc:()J\n+  #133 = Methodref          #9.#411       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J\n+  #134 = Methodref          #9.#412       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCentralDirectoryExtra:()[B\n+  #135 = Methodref          #413.#414     // java/util/Arrays.equals:([B[B)Z\n+  #136 = Methodref          #9.#415       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getLocalFileDataExtra:()[B\n+  #137 = Methodref          #16.#383      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.equals:(Ljava/lang/Object;)Z\n+  #138 = Fieldref           #9.#416       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.versionMadeBy:I\n+  #139 = Fieldref           #9.#417       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.versionRequired:I\n+  #140 = Fieldref           #9.#418       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.rawFlag:I\n+  #141 = Class              #419          // java/util/zip/ZipEntry\n+  #142 = Class              #420          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource\n   #143 = Utf8               CommentSource\n   #144 = Utf8               InnerClasses\n-  #145 = Class              #430          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource\n+  #145 = Class              #421          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource\n   #146 = Utf8               NameSource\n   #147 = Utf8               PLATFORM_UNIX\n   #148 = Utf8               I\n   #149 = Utf8               ConstantValue\n   #150 = Integer            3\n   #151 = Utf8               PLATFORM_FAT\n   #152 = Integer            0\n@@ -195,309 +195,300 @@\n   #187 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n   #188 = Utf8               <init>\n   #189 = Utf8               (Ljava/lang/String;)V\n   #190 = Utf8               Code\n   #191 = Utf8               LineNumberTable\n   #192 = Utf8               (Ljava/util/zip/ZipEntry;)V\n   #193 = Utf8               StackMapTable\n-  #194 = Class              #306          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #195 = Class              #428          // java/util/zip/ZipEntry\n-  #196 = Class              #159          // \"[B\"\n-  #197 = Utf8               Exceptions\n-  #198 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n-  #199 = Class              #313          // org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n-  #200 = Utf8               ()V\n-  #201 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n-  #202 = Class              #431          // java/io/File\n-  #203 = Class              #432          // java/lang/String\n-  #204 = Utf8               clone\n-  #205 = Utf8               ()Ljava/lang/Object;\n-  #206 = Utf8               getMethod\n-  #207 = Utf8               ()I\n-  #208 = Utf8               setMethod\n-  #209 = Utf8               (I)V\n-  #210 = Utf8               getInternalAttributes\n-  #211 = Utf8               setInternalAttributes\n-  #212 = Utf8               getExternalAttributes\n-  #213 = Utf8               ()J\n-  #214 = Utf8               setExternalAttributes\n-  #215 = Utf8               (J)V\n-  #216 = Utf8               setUnixMode\n-  #217 = Utf8               getUnixMode\n-  #218 = Utf8               isUnixSymlink\n-  #219 = Utf8               ()Z\n-  #220 = Utf8               getPlatform\n-  #221 = Utf8               setPlatform\n-  #222 = Utf8               getAlignment\n-  #223 = Utf8               setAlignment\n-  #224 = Utf8               setExtraFields\n-  #225 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n-  #226 = Class              #433          // java/util/List\n-  #227 = Class              #372          // org/apache/commons/compress/archivers/zip/ZipExtraField\n-  #228 = Utf8               getExtraFields\n-  #229 = Utf8               ()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #230 = Utf8               (Z)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #231 = Utf8               getParseableExtraFieldsNoCopy\n-  #232 = Utf8               getParseableExtraFields\n-  #233 = Utf8               getAllExtraFieldsNoCopy\n-  #234 = Utf8               copyOf\n-  #235 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #236 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #237 = Utf8               getMergedFields\n-  #238 = Utf8               getUnparseableOnly\n-  #239 = Utf8               getAllExtraFields\n-  #240 = Utf8               addExtraField\n-  #241 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n-  #242 = Utf8               addAsFirstExtraField\n-  #243 = Utf8               removeExtraField\n-  #244 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-  #245 = Class              #434          // org/apache/commons/compress/archivers/zip/ZipShort\n-  #246 = Utf8               removeUnparseableExtraFieldData\n-  #247 = Utf8               getExtraField\n-  #248 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #249 = Utf8               getUnparseableExtraFieldData\n-  #250 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n-  #251 = Utf8               setExtra\n-  #252 = Utf8               ([B)V\n-  #253 = Class              #394          // java/util/zip/ZipException\n-  #254 = Utf8               setCentralDirectoryExtra\n-  #255 = Utf8               getLocalFileDataExtra\n-  #256 = Utf8               ()[B\n-  #257 = Utf8               getCentralDirectoryExtra\n-  #258 = Utf8               getName\n-  #259 = Utf8               ()Ljava/lang/String;\n-  #260 = Utf8               isDirectory\n-  #261 = Utf8               setName\n-  #262 = Utf8               getSize\n-  #263 = Utf8               setSize\n-  #264 = Utf8               (Ljava/lang/String;[B)V\n-  #265 = Utf8               getRawName\n-  #266 = Utf8               getLocalHeaderOffset\n-  #267 = Utf8               setLocalHeaderOffset\n-  #268 = Utf8               getDataOffset\n-  #269 = Utf8               setDataOffset\n-  #270 = Utf8               setStreamContiguous\n-  #271 = Utf8               (Z)V\n-  #272 = Utf8               hashCode\n-  #273 = Utf8               getGeneralPurposeBit\n-  #274 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-  #275 = Utf8               setGeneralPurposeBit\n-  #276 = Utf8               (Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n-  #277 = Utf8               mergeExtraFields\n-  #278 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n-  #279 = Utf8               getLastModifiedDate\n-  #280 = Utf8               ()Ljava/util/Date;\n-  #281 = Utf8               equals\n-  #282 = Utf8               (Ljava/lang/Object;)Z\n-  #283 = Utf8               setVersionMadeBy\n-  #284 = Utf8               setVersionRequired\n-  #285 = Utf8               getVersionRequired\n-  #286 = Utf8               getVersionMadeBy\n-  #287 = Utf8               getRawFlag\n-  #288 = Utf8               setRawFlag\n-  #289 = Utf8               getNameSource\n-  #290 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n-  #291 = Utf8               setNameSource\n-  #292 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;)V\n-  #293 = Utf8               getCommentSource\n-  #294 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n-  #295 = Utf8               setCommentSource\n-  #296 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;)V\n-  #297 = Utf8               <clinit>\n-  #298 = Utf8               SourceFile\n-  #299 = Utf8               ZipArchiveEntry.java\n-  #300 = NameAndType        #188:#189     // \"<init>\":(Ljava/lang/String;)V\n-  #301 = Utf8               org/apache/commons/compress/archivers/zip/ZipMethod\n-  #302 = NameAndType        #160:#148     // method:I\n-  #303 = Utf8               org/apache/commons/compress/archivers/ArchiveEntry\n-  #304 = NameAndType        #161:#162     // size:J\n-  #305 = NameAndType        #163:#148     // internalAttributes:I\n-  #306 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #307 = NameAndType        #166:#148     // platform:I\n-  #308 = NameAndType        #168:#162     // externalAttributes:J\n-  #309 = NameAndType        #169:#148     // alignment:I\n-  #310 = NameAndType        #172:#173     // unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n-  #311 = NameAndType        #174:#175     // name:Ljava/lang/String;\n-  #312 = NameAndType        #176:#159     // rawName:[B\n-  #313 = Utf8               org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n-  #314 = NameAndType        #188:#200     // \"<init>\":()V\n-  #315 = NameAndType        #177:#178     // gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-  #316 = Utf8               org/apache/commons/compress/archivers/EntryStreamOffsets\n-  #317 = NameAndType        #180:#162     // localHeaderOffset:J\n-  #318 = NameAndType        #181:#162     // dataOffset:J\n-  #319 = NameAndType        #182:#183     // isStreamContiguous:Z\n-  #320 = NameAndType        #435:#185     // NAME:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n-  #321 = NameAndType        #184:#185     // nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n-  #322 = NameAndType        #436:#187     // COMMENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n-  #323 = NameAndType        #186:#187     // commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n-  #324 = NameAndType        #261:#189     // setName:(Ljava/lang/String;)V\n-  #325 = NameAndType        #188:#192     // \"<init>\":(Ljava/util/zip/ZipEntry;)V\n-  #326 = NameAndType        #258:#259     // getName:()Ljava/lang/String;\n-  #327 = NameAndType        #437:#256     // getExtra:()[B\n-  #328 = Class              #438          // org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField\n-  #329 = NameAndType        #440:#441     // READ:Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;\n-  #330 = Class              #442          // org/apache/commons/compress/archivers/zip/ExtraFieldUtils\n-  #331 = NameAndType        #443:#444     // parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #332 = NameAndType        #224:#225     // setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n-  #333 = NameAndType        #251:#200     // setExtra:()V\n-  #334 = NameAndType        #206:#207     // getMethod:()I\n-  #335 = NameAndType        #208:#209     // setMethod:(I)V\n-  #336 = NameAndType        #262:#213     // getSize:()J\n-  #337 = NameAndType        #210:#207     // getInternalAttributes:()I\n-  #338 = NameAndType        #211:#209     // setInternalAttributes:(I)V\n-  #339 = NameAndType        #212:#213     // getExternalAttributes:()J\n-  #340 = NameAndType        #214:#215     // setExternalAttributes:(J)V\n-  #341 = NameAndType        #233:#229     // getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #342 = NameAndType        #220:#207     // getPlatform:()I\n-  #343 = NameAndType        #221:#209     // setPlatform:(I)V\n-  #344 = NameAndType        #273:#274     // getGeneralPurposeBit:()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-  #345 = NameAndType        #204:#205     // clone:()Ljava/lang/Object;\n-  #346 = NameAndType        #275:#276     // setGeneralPurposeBit:(Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n-  #347 = Utf8\n-  #348 = Class              #431          // java/io/File\n-  #349 = NameAndType        #260:#219     // isDirectory:()Z\n-  #350 = Utf8               /\n-  #351 = Class              #432          // java/lang/String\n-  #352 = NameAndType        #445:#446     // endsWith:(Ljava/lang/String;)Z\n-  #353 = Utf8               java/lang/StringBuilder\n-  #354 = NameAndType        #447:#448     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #355 = NameAndType        #449:#259     // toString:()Ljava/lang/String;\n-  #356 = NameAndType        #450:#219     // isFile:()Z\n-  #357 = NameAndType        #451:#213     // length:()J\n-  #358 = NameAndType        #263:#215     // setSize:(J)V\n-  #359 = NameAndType        #452:#213     // lastModified:()J\n-  #360 = NameAndType        #453:#215     // setTime:(J)V\n-  #361 = Utf8               java/lang/IllegalArgumentException\n-  #362 = Utf8               ZIP compression method can not be negative:\n-  #363 = NameAndType        #447:#454     // append:(I)Ljava/lang/StringBuilder;\n-  #364 = NameAndType        #217:#207     // getUnixMode:()I\n-  #365 = Utf8               org/apache/commons/compress/archivers/zip/UnixStat\n-  #366 = Utf8               Invalid value for alignment, must be power of two and no bigger than 65535 but is\n-  #367 = Utf8               java/util/ArrayList\n-  #368 = Utf8               org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n-  #369 = Class              #433          // java/util/List\n-  #370 = NameAndType        #455:#282     // add:(Ljava/lang/Object;)Z\n-  #371 = NameAndType        #161:#207     // size:()I\n-  #372 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n-  #373 = NameAndType        #456:#457     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #374 = NameAndType        #170:#171     // extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #375 = NameAndType        #232:#229     // getParseableExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #376 = NameAndType        #239:#229     // getAllExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #377 = NameAndType        #179:#171     // noExtraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #378 = NameAndType        #231:#229     // getParseableExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #379 = NameAndType        #234:#235     // copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #380 = NameAndType        #238:#229     // getUnparseableOnly:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #381 = NameAndType        #237:#229     // getMergedFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #382 = NameAndType        #234:#236     // copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #383 = Class              #458          // java/lang/Math\n-  #384 = NameAndType        #459:#460     // min:(II)I\n-  #385 = Class              #461          // java/lang/System\n-  #386 = NameAndType        #462:#463     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #387 = NameAndType        #464:#465     // getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #388 = NameAndType        #247:#248     // getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #389 = NameAndType        #243:#244     // removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-  #390 = Utf8               java/util/NoSuchElementException\n-  #391 = Class              #434          // org/apache/commons/compress/archivers/zip/ZipShort\n-  #392 = NameAndType        #281:#282     // equals:(Ljava/lang/Object;)Z\n-  #393 = NameAndType        #277:#278     // mergeExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n-  #394 = Utf8               java/util/zip/ZipException\n-  #395 = Utf8               java/lang/RuntimeException\n-  #396 = Utf8               Error parsing extra fields for entry:\n-  #397 = Utf8                -\n-  #398 = NameAndType        #466:#259     // getMessage:()Ljava/lang/String;\n-  #399 = NameAndType        #188:#467     // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #400 = NameAndType        #468:#469     // mergeLocalFileDataData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n-  #401 = NameAndType        #251:#252     // setExtra:([B)V\n-  #402 = NameAndType        #158:#159     // EMPTY:[B\n-  #403 = NameAndType        #470:#469     // mergeCentralDirectoryData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n-  #404 = NameAndType        #471:#472     // contains:(Ljava/lang/CharSequence;)Z\n-  #405 = NameAndType        #473:#474     // replace:(CC)Ljava/lang/String;\n-  #406 = Utf8               invalid entry size\n-  #407 = NameAndType        #272:#207     // hashCode:()I\n-  #408 = NameAndType        #240:#241     // addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n-  #409 = NameAndType        #475:#256     // getLocalFileDataData:()[B\n-  #410 = NameAndType        #476:#477     // parseFromLocalFileData:([BII)V\n-  #411 = NameAndType        #478:#256     // getCentralDirectoryData:()[B\n-  #412 = NameAndType        #479:#477     // parseFromCentralDirectoryData:([BII)V\n-  #413 = Utf8               java/util/Date\n-  #414 = NameAndType        #480:#213     // getTime:()J\n-  #415 = NameAndType        #188:#215     // \"<init>\":(J)V\n-  #416 = Class              #481          // java/lang/Object\n-  #417 = NameAndType        #482:#483     // getClass:()Ljava/lang/Class;\n-  #418 = NameAndType        #484:#259     // getComment:()Ljava/lang/String;\n-  #419 = NameAndType        #485:#213     // getCrc:()J\n-  #420 = NameAndType        #486:#213     // getCompressedSize:()J\n-  #421 = NameAndType        #257:#256     // getCentralDirectoryExtra:()[B\n-  #422 = Class              #487          // java/util/Arrays\n-  #423 = NameAndType        #281:#488     // equals:([B[B)Z\n-  #424 = NameAndType        #255:#256     // getLocalFileDataExtra:()[B\n-  #425 = NameAndType        #165:#148     // versionMadeBy:I\n-  #426 = NameAndType        #164:#148     // versionRequired:I\n-  #427 = NameAndType        #167:#148     // rawFlag:I\n-  #428 = Utf8               java/util/zip/ZipEntry\n-  #429 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource\n-  #430 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource\n-  #431 = Utf8               java/io/File\n-  #432 = Utf8               java/lang/String\n-  #433 = Utf8               java/util/List\n-  #434 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-  #435 = Utf8               NAME\n-  #436 = Utf8               COMMENT\n-  #437 = Utf8               getExtra\n-  #438 = Utf8               org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField\n-  #439 = Utf8               UnparseableExtraField\n-  #440 = Utf8               READ\n-  #441 = Utf8               Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;\n-  #442 = Utf8               org/apache/commons/compress/archivers/zip/ExtraFieldUtils\n-  #443 = Utf8               parse\n-  #444 = Utf8               ([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #445 = Utf8               endsWith\n-  #446 = Utf8               (Ljava/lang/String;)Z\n-  #447 = Utf8               append\n-  #448 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #449 = Utf8               toString\n-  #450 = Utf8               isFile\n-  #451 = Utf8               length\n-  #452 = Utf8               lastModified\n-  #453 = Utf8               setTime\n-  #454 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #455 = Utf8               add\n-  #456 = Utf8               toArray\n-  #457 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #458 = Utf8               java/lang/Math\n-  #459 = Utf8               min\n-  #460 = Utf8               (II)I\n-  #461 = Utf8               java/lang/System\n-  #462 = Utf8               arraycopy\n-  #463 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #464 = Utf8               getHeaderId\n-  #465 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #466 = Utf8               getMessage\n-  #467 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #468 = Utf8               mergeLocalFileDataData\n-  #469 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n-  #470 = Utf8               mergeCentralDirectoryData\n-  #471 = Utf8               contains\n-  #472 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #473 = Utf8               replace\n-  #474 = Utf8               (CC)Ljava/lang/String;\n-  #475 = Utf8               getLocalFileDataData\n-  #476 = Utf8               parseFromLocalFileData\n-  #477 = Utf8               ([BII)V\n-  #478 = Utf8               getCentralDirectoryData\n-  #479 = Utf8               parseFromCentralDirectoryData\n-  #480 = Utf8               getTime\n-  #481 = Utf8               java/lang/Object\n-  #482 = Utf8               getClass\n-  #483 = Utf8               ()Ljava/lang/Class;\n-  #484 = Utf8               getComment\n-  #485 = Utf8               getCrc\n-  #486 = Utf8               getCompressedSize\n-  #487 = Utf8               java/util/Arrays\n-  #488 = Utf8               ([B[B)Z\n+  #194 = Class              #159          // \"[B\"\n+  #195 = Utf8               Exceptions\n+  #196 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n+  #197 = Utf8               ()V\n+  #198 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n+  #199 = Class              #422          // java/io/File\n+  #200 = Class              #423          // java/lang/String\n+  #201 = Utf8               clone\n+  #202 = Utf8               ()Ljava/lang/Object;\n+  #203 = Utf8               getMethod\n+  #204 = Utf8               ()I\n+  #205 = Utf8               setMethod\n+  #206 = Utf8               (I)V\n+  #207 = Utf8               getInternalAttributes\n+  #208 = Utf8               setInternalAttributes\n+  #209 = Utf8               getExternalAttributes\n+  #210 = Utf8               ()J\n+  #211 = Utf8               setExternalAttributes\n+  #212 = Utf8               (J)V\n+  #213 = Utf8               setUnixMode\n+  #214 = Utf8               getUnixMode\n+  #215 = Utf8               isUnixSymlink\n+  #216 = Utf8               ()Z\n+  #217 = Utf8               getPlatform\n+  #218 = Utf8               setPlatform\n+  #219 = Utf8               getAlignment\n+  #220 = Utf8               setAlignment\n+  #221 = Utf8               setExtraFields\n+  #222 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+  #223 = Class              #424          // java/util/List\n+  #224 = Utf8               getExtraFields\n+  #225 = Utf8               ()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #226 = Utf8               (Z)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #227 = Utf8               getParseableExtraFieldsNoCopy\n+  #228 = Utf8               getParseableExtraFields\n+  #229 = Utf8               getAllExtraFieldsNoCopy\n+  #230 = Utf8               copyOf\n+  #231 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #232 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #233 = Utf8               getMergedFields\n+  #234 = Utf8               getUnparseableOnly\n+  #235 = Utf8               getAllExtraFields\n+  #236 = Utf8               addExtraField\n+  #237 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+  #238 = Utf8               addAsFirstExtraField\n+  #239 = Utf8               removeExtraField\n+  #240 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+  #241 = Class              #425          // org/apache/commons/compress/archivers/zip/ZipShort\n+  #242 = Utf8               removeUnparseableExtraFieldData\n+  #243 = Utf8               getExtraField\n+  #244 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #245 = Utf8               getUnparseableExtraFieldData\n+  #246 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+  #247 = Utf8               setExtra\n+  #248 = Utf8               ([B)V\n+  #249 = Utf8               setCentralDirectoryExtra\n+  #250 = Utf8               getLocalFileDataExtra\n+  #251 = Utf8               ()[B\n+  #252 = Utf8               getCentralDirectoryExtra\n+  #253 = Utf8               getName\n+  #254 = Utf8               ()Ljava/lang/String;\n+  #255 = Utf8               isDirectory\n+  #256 = Utf8               setName\n+  #257 = Utf8               getSize\n+  #258 = Utf8               setSize\n+  #259 = Utf8               (Ljava/lang/String;[B)V\n+  #260 = Utf8               getRawName\n+  #261 = Utf8               getLocalHeaderOffset\n+  #262 = Utf8               setLocalHeaderOffset\n+  #263 = Utf8               getDataOffset\n+  #264 = Utf8               setDataOffset\n+  #265 = Utf8               setStreamContiguous\n+  #266 = Utf8               (Z)V\n+  #267 = Utf8               hashCode\n+  #268 = Utf8               getGeneralPurposeBit\n+  #269 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+  #270 = Utf8               setGeneralPurposeBit\n+  #271 = Utf8               (Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n+  #272 = Utf8               mergeExtraFields\n+  #273 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n+  #274 = Utf8               getLastModifiedDate\n+  #275 = Utf8               ()Ljava/util/Date;\n+  #276 = Utf8               equals\n+  #277 = Utf8               (Ljava/lang/Object;)Z\n+  #278 = Utf8               setVersionMadeBy\n+  #279 = Utf8               setVersionRequired\n+  #280 = Utf8               getVersionRequired\n+  #281 = Utf8               getVersionMadeBy\n+  #282 = Utf8               getRawFlag\n+  #283 = Utf8               setRawFlag\n+  #284 = Utf8               getNameSource\n+  #285 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+  #286 = Utf8               setNameSource\n+  #287 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;)V\n+  #288 = Utf8               getCommentSource\n+  #289 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+  #290 = Utf8               setCommentSource\n+  #291 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;)V\n+  #292 = Utf8               <clinit>\n+  #293 = Utf8               SourceFile\n+  #294 = Utf8               ZipArchiveEntry.java\n+  #295 = NameAndType        #188:#189     // \"<init>\":(Ljava/lang/String;)V\n+  #296 = Utf8               org/apache/commons/compress/archivers/zip/ZipMethod\n+  #297 = NameAndType        #160:#148     // method:I\n+  #298 = Utf8               org/apache/commons/compress/archivers/ArchiveEntry\n+  #299 = NameAndType        #161:#162     // size:J\n+  #300 = NameAndType        #163:#148     // internalAttributes:I\n+  #301 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #302 = NameAndType        #166:#148     // platform:I\n+  #303 = NameAndType        #168:#162     // externalAttributes:J\n+  #304 = NameAndType        #169:#148     // alignment:I\n+  #305 = NameAndType        #172:#173     // unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+  #306 = NameAndType        #174:#175     // name:Ljava/lang/String;\n+  #307 = NameAndType        #176:#159     // rawName:[B\n+  #308 = Utf8               org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+  #309 = NameAndType        #188:#197     // \"<init>\":()V\n+  #310 = NameAndType        #177:#178     // gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+  #311 = Utf8               org/apache/commons/compress/archivers/EntryStreamOffsets\n+  #312 = NameAndType        #180:#162     // localHeaderOffset:J\n+  #313 = NameAndType        #181:#162     // dataOffset:J\n+  #314 = NameAndType        #182:#183     // isStreamContiguous:Z\n+  #315 = NameAndType        #426:#185     // NAME:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+  #316 = NameAndType        #184:#185     // nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+  #317 = NameAndType        #427:#187     // COMMENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+  #318 = NameAndType        #186:#187     // commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+  #319 = NameAndType        #256:#189     // setName:(Ljava/lang/String;)V\n+  #320 = NameAndType        #188:#192     // \"<init>\":(Ljava/util/zip/ZipEntry;)V\n+  #321 = NameAndType        #253:#254     // getName:()Ljava/lang/String;\n+  #322 = NameAndType        #428:#251     // getExtra:()[B\n+  #323 = Class              #429          // org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField\n+  #324 = NameAndType        #431:#432     // READ:Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;\n+  #325 = Class              #433          // org/apache/commons/compress/archivers/zip/ExtraFieldUtils\n+  #326 = NameAndType        #434:#435     // parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #327 = NameAndType        #221:#222     // setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+  #328 = NameAndType        #247:#197     // setExtra:()V\n+  #329 = NameAndType        #203:#204     // getMethod:()I\n+  #330 = NameAndType        #205:#206     // setMethod:(I)V\n+  #331 = NameAndType        #257:#210     // getSize:()J\n+  #332 = NameAndType        #207:#204     // getInternalAttributes:()I\n+  #333 = NameAndType        #208:#206     // setInternalAttributes:(I)V\n+  #334 = NameAndType        #209:#210     // getExternalAttributes:()J\n+  #335 = NameAndType        #211:#212     // setExternalAttributes:(J)V\n+  #336 = NameAndType        #229:#225     // getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #337 = NameAndType        #217:#204     // getPlatform:()I\n+  #338 = NameAndType        #218:#206     // setPlatform:(I)V\n+  #339 = NameAndType        #268:#269     // getGeneralPurposeBit:()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+  #340 = NameAndType        #201:#202     // clone:()Ljava/lang/Object;\n+  #341 = NameAndType        #270:#271     // setGeneralPurposeBit:(Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n+  #342 = Utf8\n+  #343 = NameAndType        #255:#216     // isDirectory:()Z\n+  #344 = Utf8               /\n+  #345 = NameAndType        #436:#437     // endsWith:(Ljava/lang/String;)Z\n+  #346 = Utf8               java/lang/StringBuilder\n+  #347 = NameAndType        #438:#439     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #348 = NameAndType        #440:#254     // toString:()Ljava/lang/String;\n+  #349 = NameAndType        #441:#216     // isFile:()Z\n+  #350 = NameAndType        #442:#210     // length:()J\n+  #351 = NameAndType        #258:#212     // setSize:(J)V\n+  #352 = NameAndType        #443:#210     // lastModified:()J\n+  #353 = NameAndType        #444:#212     // setTime:(J)V\n+  #354 = Utf8               java/lang/IllegalArgumentException\n+  #355 = Utf8               ZIP compression method can not be negative:\n+  #356 = NameAndType        #438:#445     // append:(I)Ljava/lang/StringBuilder;\n+  #357 = NameAndType        #214:#204     // getUnixMode:()I\n+  #358 = Utf8               org/apache/commons/compress/archivers/zip/UnixStat\n+  #359 = Utf8               Invalid value for alignment, must be power of two and no bigger than 65535 but is\n+  #360 = Utf8               java/util/ArrayList\n+  #361 = Utf8               org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n+  #362 = NameAndType        #446:#277     // add:(Ljava/lang/Object;)Z\n+  #363 = NameAndType        #161:#204     // size:()I\n+  #364 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n+  #365 = NameAndType        #447:#448     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #366 = NameAndType        #170:#171     // extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #367 = NameAndType        #228:#225     // getParseableExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #368 = NameAndType        #235:#225     // getAllExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #369 = NameAndType        #179:#171     // noExtraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #370 = NameAndType        #227:#225     // getParseableExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #371 = NameAndType        #230:#231     // copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #372 = NameAndType        #234:#225     // getUnparseableOnly:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #373 = NameAndType        #233:#225     // getMergedFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #374 = NameAndType        #230:#232     // copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #375 = Class              #449          // java/lang/Math\n+  #376 = NameAndType        #450:#451     // min:(II)I\n+  #377 = Class              #452          // java/lang/System\n+  #378 = NameAndType        #453:#454     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #379 = NameAndType        #455:#456     // getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #380 = NameAndType        #243:#244     // getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #381 = NameAndType        #239:#240     // removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+  #382 = Utf8               java/util/NoSuchElementException\n+  #383 = NameAndType        #276:#277     // equals:(Ljava/lang/Object;)Z\n+  #384 = NameAndType        #272:#273     // mergeExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n+  #385 = Utf8               java/util/zip/ZipException\n+  #386 = Utf8               java/lang/RuntimeException\n+  #387 = Utf8               Error parsing extra fields for entry:\n+  #388 = Utf8                -\n+  #389 = NameAndType        #457:#254     // getMessage:()Ljava/lang/String;\n+  #390 = NameAndType        #188:#458     // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #391 = NameAndType        #459:#460     // mergeLocalFileDataData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n+  #392 = NameAndType        #247:#248     // setExtra:([B)V\n+  #393 = NameAndType        #158:#159     // EMPTY:[B\n+  #394 = NameAndType        #461:#460     // mergeCentralDirectoryData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n+  #395 = NameAndType        #462:#463     // contains:(Ljava/lang/CharSequence;)Z\n+  #396 = NameAndType        #464:#465     // replace:(CC)Ljava/lang/String;\n+  #397 = Utf8               invalid entry size\n+  #398 = NameAndType        #267:#204     // hashCode:()I\n+  #399 = NameAndType        #236:#237     // addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+  #400 = NameAndType        #466:#251     // getLocalFileDataData:()[B\n+  #401 = NameAndType        #467:#468     // parseFromLocalFileData:([BII)V\n+  #402 = NameAndType        #469:#251     // getCentralDirectoryData:()[B\n+  #403 = NameAndType        #470:#468     // parseFromCentralDirectoryData:([BII)V\n+  #404 = Utf8               java/util/Date\n+  #405 = NameAndType        #471:#210     // getTime:()J\n+  #406 = NameAndType        #188:#212     // \"<init>\":(J)V\n+  #407 = Class              #472          // java/lang/Object\n+  #408 = NameAndType        #473:#474     // getClass:()Ljava/lang/Class;\n+  #409 = NameAndType        #475:#254     // getComment:()Ljava/lang/String;\n+  #410 = NameAndType        #476:#210     // getCrc:()J\n+  #411 = NameAndType        #477:#210     // getCompressedSize:()J\n+  #412 = NameAndType        #252:#251     // getCentralDirectoryExtra:()[B\n+  #413 = Class              #478          // java/util/Arrays\n+  #414 = NameAndType        #276:#479     // equals:([B[B)Z\n+  #415 = NameAndType        #250:#251     // getLocalFileDataExtra:()[B\n+  #416 = NameAndType        #165:#148     // versionMadeBy:I\n+  #417 = NameAndType        #164:#148     // versionRequired:I\n+  #418 = NameAndType        #167:#148     // rawFlag:I\n+  #419 = Utf8               java/util/zip/ZipEntry\n+  #420 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource\n+  #421 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource\n+  #422 = Utf8               java/io/File\n+  #423 = Utf8               java/lang/String\n+  #424 = Utf8               java/util/List\n+  #425 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+  #426 = Utf8               NAME\n+  #427 = Utf8               COMMENT\n+  #428 = Utf8               getExtra\n+  #429 = Utf8               org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField\n+  #430 = Utf8               UnparseableExtraField\n+  #431 = Utf8               READ\n+  #432 = Utf8               Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;\n+  #433 = Utf8               org/apache/commons/compress/archivers/zip/ExtraFieldUtils\n+  #434 = Utf8               parse\n+  #435 = Utf8               ([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #436 = Utf8               endsWith\n+  #437 = Utf8               (Ljava/lang/String;)Z\n+  #438 = Utf8               append\n+  #439 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #440 = Utf8               toString\n+  #441 = Utf8               isFile\n+  #442 = Utf8               length\n+  #443 = Utf8               lastModified\n+  #444 = Utf8               setTime\n+  #445 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #446 = Utf8               add\n+  #447 = Utf8               toArray\n+  #448 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #449 = Utf8               java/lang/Math\n+  #450 = Utf8               min\n+  #451 = Utf8               (II)I\n+  #452 = Utf8               java/lang/System\n+  #453 = Utf8               arraycopy\n+  #454 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #455 = Utf8               getHeaderId\n+  #456 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #457 = Utf8               getMessage\n+  #458 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #459 = Utf8               mergeLocalFileDataData\n+  #460 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n+  #461 = Utf8               mergeCentralDirectoryData\n+  #462 = Utf8               contains\n+  #463 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #464 = Utf8               replace\n+  #465 = Utf8               (CC)Ljava/lang/String;\n+  #466 = Utf8               getLocalFileDataData\n+  #467 = Utf8               parseFromLocalFileData\n+  #468 = Utf8               ([BII)V\n+  #469 = Utf8               getCentralDirectoryData\n+  #470 = Utf8               parseFromCentralDirectoryData\n+  #471 = Utf8               getTime\n+  #472 = Utf8               java/lang/Object\n+  #473 = Utf8               getClass\n+  #474 = Utf8               ()Ljava/lang/Class;\n+  #475 = Utf8               getComment\n+  #476 = Utf8               getCrc\n+  #477 = Utf8               getCompressedSize\n+  #478 = Utf8               java/util/Arrays\n+  #479 = Utf8               ([B[B)Z\n {\n   public static final int PLATFORM_UNIX = 3;\n     descriptor: I\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 3\n \n   public static final int PLATFORM_FAT = 0;\n@@ -840,15 +831,15 @@\n         line 197: 0\n         line 198: 5\n         line 199: 13\n         line 200: 21\n         line 201: 29\n         line 202: 37\n         line 203: 42\n-        line 204: 52\n+        line 204: 51\n         line 203: 58\n         line 205: 61\n       StackMapTable: number_of_entries = 2\n         frame_type = 255 /* full_frame */\n           offset_delta = 51\n           locals = [ class org/apache/commons/compress/archivers/zip/ZipArchiveEntry, class org/apache/commons/compress/archivers/zip/ZipArchiveEntry, class org/apache/commons/compress/archivers/zip/GeneralPurposeBit ]\n           stack = [ class org/apache/commons/compress/archivers/zip/ZipArchiveEntry ]\n@@ -906,14 +897,16 @@\n         58: aload_0\n         59: aload_1\n         60: invokevirtual #61                 // Method java/io/File.lastModified:()J\n         63: invokevirtual #62                 // Method setTime:(J)V\n         66: return\n       LineNumberTable:\n         line 225: 0\n+        line 226: 17\n+        line 225: 40\n         line 227: 43\n         line 228: 50\n         line 230: 58\n         line 232: 66\n       StackMapTable: number_of_entries = 3\n         frame_type = 103 /* same_locals_1_stack_item */\n           stack = [ this ]\n@@ -1074,15 +1067,16 @@\n         34: invokevirtual #42                 // Method setExternalAttributes:(J)V\n         37: aload_0\n         38: iconst_3\n         39: putfield      #10                 // Field platform:I\n         42: return\n       LineNumberTable:\n         line 326: 0\n-        line 330: 20\n+        line 328: 5\n+        line 330: 19\n         line 326: 34\n         line 332: 37\n         line 333: 42\n       StackMapTable: number_of_entries = 4\n         frame_type = 255 /* full_frame */\n           offset_delta = 17\n           locals = [ class org/apache/commons/compress/archivers/zip/ZipArchiveEntry, int ]\n@@ -1117,15 +1111,15 @@\n         18: lshr\n         19: ldc2_w        #69                 // long 65535l\n         22: land\n         23: l2i\n         24: ireturn\n       LineNumberTable:\n         line 340: 0\n-        line 341: 13\n+        line 341: 12\n         line 340: 24\n       StackMapTable: number_of_entries = 2\n         frame_type = 12 /* same */\n         frame_type = 75 /* same_locals_1_stack_item */\n           stack = [ int ]\n \n   public boolean isUnixSymlink();\n@@ -1317,16 +1311,16 @@\n          5: invokespecial #87                 // Method getAllExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          8: goto          15\n         11: aload_0\n         12: invokespecial #86                 // Method getParseableExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         15: areturn\n       LineNumberTable:\n         line 442: 0\n-        line 443: 5\n-        line 444: 12\n+        line 443: 4\n+        line 444: 11\n         line 442: 15\n       StackMapTable: number_of_entries = 2\n         frame_type = 11 /* same */\n         frame_type = 67 /* same_locals_1_stack_item */\n           stack = [ class \"[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\" ]\n \n   private org.apache.commons.compress.archivers.zip.ZipExtraField[] getParseableExtraFieldsNoCopy();\n@@ -2719,8 +2713,8 @@\n         line 60: 0\n         line 141: 6\n }\n SourceFile: \"ZipArchiveEntry.java\"\n InnerClasses:\n   public static final #143= #142 of #9;   // CommentSource=class org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource of class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n   public static final #146= #145 of #9;   // NameSource=class org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource of class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  public static final #439= #328 of #330; // UnparseableExtraField=class org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField of class org/apache/commons/compress/archivers/zip/ExtraFieldUtils\n+  public static final #430= #323 of #325; // UnparseableExtraField=class org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField of class org/apache/commons/compress/archivers/zip/ExtraFieldUtils\n"}]}
