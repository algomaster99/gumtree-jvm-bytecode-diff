{"diffoscope-json-version": 1, "source1": "first/Base64OutputStream.class", "source2": "second/Base64OutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,47 +1,47 @@\n-  SHA-256 checksum ebec4969f6a4e1f296c748f678aa5d2a584922ce76376ef15497a6536eb102b7\n+  SHA-256 checksum 29e5609d126628318a2b2bf371f2aba5b463205b975e2b66292d145c2b8ef11d\n   Compiled from \"Base64OutputStream.java\"\n public class org.apache.commons.codec.binary.Base64OutputStream extends org.apache.commons.codec.binary.BaseNCodecOutputStream\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #2                          // org/apache/commons/codec/binary/Base64OutputStream\n-  super_class: #13                        // org/apache/commons/codec/binary/BaseNCodecOutputStream\n+  this_class: #1                          // org/apache/commons/codec/binary/Base64OutputStream\n+  super_class: #3                         // org/apache/commons/codec/binary/BaseNCodecOutputStream\n   interfaces: 0, fields: 0, methods: 3, attributes: 1\n Constant pool:\n-   #1 = Methodref          #2.#3          // org/apache/commons/codec/binary/Base64OutputStream.\"<init>\":(Ljava/io/OutputStream;Z)V\n-   #2 = Class              #4             // org/apache/commons/codec/binary/Base64OutputStream\n-   #3 = NameAndType        #5:#6          // \"<init>\":(Ljava/io/OutputStream;Z)V\n-   #4 = Utf8               org/apache/commons/codec/binary/Base64OutputStream\n+   #1 = Class              #2             // org/apache/commons/codec/binary/Base64OutputStream\n+   #2 = Utf8               org/apache/commons/codec/binary/Base64OutputStream\n+   #3 = Class              #4             // org/apache/commons/codec/binary/BaseNCodecOutputStream\n+   #4 = Utf8               org/apache/commons/codec/binary/BaseNCodecOutputStream\n    #5 = Utf8               <init>\n-   #6 = Utf8               (Ljava/io/OutputStream;Z)V\n-   #7 = Class              #8             // org/apache/commons/codec/binary/Base64\n-   #8 = Utf8               org/apache/commons/codec/binary/Base64\n-   #9 = Methodref          #7.#10         // org/apache/commons/codec/binary/Base64.\"<init>\":(Z)V\n-  #10 = NameAndType        #5:#11         // \"<init>\":(Z)V\n-  #11 = Utf8               (Z)V\n-  #12 = Methodref          #13.#14        // org/apache/commons/codec/binary/BaseNCodecOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n-  #13 = Class              #15            // org/apache/commons/codec/binary/BaseNCodecOutputStream\n-  #14 = NameAndType        #5:#16         // \"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n-  #15 = Utf8               org/apache/commons/codec/binary/BaseNCodecOutputStream\n-  #16 = Utf8               (Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n-  #17 = Methodref          #7.#18         // org/apache/commons/codec/binary/Base64.\"<init>\":(I[B)V\n-  #18 = NameAndType        #5:#19         // \"<init>\":(I[B)V\n-  #19 = Utf8               (I[B)V\n-  #20 = Utf8               (Ljava/io/OutputStream;)V\n-  #21 = Utf8               Code\n-  #22 = Utf8               LineNumberTable\n-  #23 = Utf8               LocalVariableTable\n-  #24 = Utf8               this\n-  #25 = Utf8               Lorg/apache/commons/codec/binary/Base64OutputStream;\n-  #26 = Utf8               out\n-  #27 = Utf8               Ljava/io/OutputStream;\n-  #28 = Utf8               doEncode\n-  #29 = Utf8               Z\n-  #30 = Utf8               (Ljava/io/OutputStream;ZI[B)V\n+   #6 = Utf8               (Ljava/io/OutputStream;)V\n+   #7 = Utf8               Code\n+   #8 = Methodref          #1.#9          // org/apache/commons/codec/binary/Base64OutputStream.\"<init>\":(Ljava/io/OutputStream;Z)V\n+   #9 = NameAndType        #5:#10         // \"<init>\":(Ljava/io/OutputStream;Z)V\n+  #10 = Utf8               (Ljava/io/OutputStream;Z)V\n+  #11 = Utf8               LineNumberTable\n+  #12 = Utf8               LocalVariableTable\n+  #13 = Utf8               this\n+  #14 = Utf8               Lorg/apache/commons/codec/binary/Base64OutputStream;\n+  #15 = Utf8               out\n+  #16 = Utf8               Ljava/io/OutputStream;\n+  #17 = Class              #18            // org/apache/commons/codec/binary/Base64\n+  #18 = Utf8               org/apache/commons/codec/binary/Base64\n+  #19 = Methodref          #17.#20        // org/apache/commons/codec/binary/Base64.\"<init>\":(Z)V\n+  #20 = NameAndType        #5:#21         // \"<init>\":(Z)V\n+  #21 = Utf8               (Z)V\n+  #22 = Methodref          #3.#23         // org/apache/commons/codec/binary/BaseNCodecOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n+  #23 = NameAndType        #5:#24         // \"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n+  #24 = Utf8               (Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n+  #25 = Utf8               doEncode\n+  #26 = Utf8               Z\n+  #27 = Utf8               (Ljava/io/OutputStream;ZI[B)V\n+  #28 = Methodref          #17.#29        // org/apache/commons/codec/binary/Base64.\"<init>\":(I[B)V\n+  #29 = NameAndType        #5:#30         // \"<init>\":(I[B)V\n+  #30 = Utf8               (I[B)V\n   #31 = Utf8               lineLength\n   #32 = Utf8               I\n   #33 = Utf8               lineSeparator\n   #34 = Utf8               [B\n   #35 = Utf8               SourceFile\n   #36 = Utf8               Base64OutputStream.java\n {\n@@ -49,15 +49,15 @@\n     descriptor: (Ljava/io/OutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_1\n-         3: invokespecial #1                  // Method \"<init>\":(Ljava/io/OutputStream;Z)V\n+         3: invokespecial #8                  // Method \"<init>\":(Ljava/io/OutputStream;Z)V\n          6: return\n       LineNumberTable:\n         line 56: 0\n         line 57: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/codec/binary/Base64OutputStream;\n@@ -66,20 +66,20 @@\n   public org.apache.commons.codec.binary.Base64OutputStream(java.io.OutputStream, boolean);\n     descriptor: (Ljava/io/OutputStream;Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: new           #7                  // class org/apache/commons/codec/binary/Base64\n+         2: new           #17                 // class org/apache/commons/codec/binary/Base64\n          5: dup\n          6: iconst_0\n-         7: invokespecial #9                  // Method org/apache/commons/codec/binary/Base64.\"<init>\":(Z)V\n+         7: invokespecial #19                 // Method org/apache/commons/codec/binary/Base64.\"<init>\":(Z)V\n         10: iload_2\n-        11: invokespecial #12                 // Method org/apache/commons/codec/binary/BaseNCodecOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n+        11: invokespecial #22                 // Method org/apache/commons/codec/binary/BaseNCodecOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n         14: return\n       LineNumberTable:\n         line 69: 0\n         line 70: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/codec/binary/Base64OutputStream;\n@@ -89,21 +89,21 @@\n   public org.apache.commons.codec.binary.Base64OutputStream(java.io.OutputStream, boolean, int, byte[]);\n     descriptor: (Ljava/io/OutputStream;ZI[B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=5, args_size=5\n          0: aload_0\n          1: aload_1\n-         2: new           #7                  // class org/apache/commons/codec/binary/Base64\n+         2: new           #17                 // class org/apache/commons/codec/binary/Base64\n          5: dup\n          6: iload_3\n          7: aload         4\n-         9: invokespecial #17                 // Method org/apache/commons/codec/binary/Base64.\"<init>\":(I[B)V\n+         9: invokespecial #28                 // Method org/apache/commons/codec/binary/Base64.\"<init>\":(I[B)V\n         12: iload_2\n-        13: invokespecial #12                 // Method org/apache/commons/codec/binary/BaseNCodecOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n+        13: invokespecial #22                 // Method org/apache/commons/codec/binary/BaseNCodecOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n         16: return\n       LineNumberTable:\n         line 90: 0\n         line 91: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lorg/apache/commons/codec/binary/Base64OutputStream;\n"}]}
