{"diffoscope-json-version": 1, "source1": "first/BaseNCodecInputStream.class", "source2": "second/BaseNCodecInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,158 +1,155 @@\n-  SHA-256 checksum a0e2aaac34272417fa5c7de4bff3d3400bf17e8c499c53b4835fbf40c418ade1\n+  SHA-256 checksum 4a304c8803765cb781ea4a1409e394f1b20e8e7af5be88e928c156390056e993\n   Compiled from \"BaseNCodecInputStream.java\"\n public class org.apache.commons.codec.binary.BaseNCodecInputStream extends java.io.FilterInputStream\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #33                         // org/apache/commons/codec/binary/BaseNCodecInputStream\n-  super_class: #34                        // java/io/FilterInputStream\n+  this_class: #1                          // org/apache/commons/codec/binary/BaseNCodecInputStream\n+  super_class: #3                         // java/io/FilterInputStream\n   interfaces: 0, fields: 4, methods: 8, attributes: 2\n Constant pool:\n-    #1 = Class              #85           // org/apache/commons/codec/binary/BaseNCodec\n-    #2 = Methodref          #34.#86       // java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-    #3 = Fieldref           #33.#87       // org/apache/commons/codec/binary/BaseNCodecInputStream.singleByte:[B\n-    #4 = Class              #88           // org/apache/commons/codec/binary/BaseNCodec$Context\n-    #5 = Methodref          #4.#89        // org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n-    #6 = Fieldref           #33.#90       // org/apache/commons/codec/binary/BaseNCodecInputStream.context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-    #7 = Fieldref           #33.#91       // org/apache/commons/codec/binary/BaseNCodecInputStream.doEncode:Z\n-    #8 = Fieldref           #33.#92       // org/apache/commons/codec/binary/BaseNCodecInputStream.baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n-    #9 = Fieldref           #4.#93        // org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n-   #10 = Methodref          #33.#94       // org/apache/commons/codec/binary/BaseNCodecInputStream.read:([BII)I\n-   #11 = String             #72           // array\n-   #12 = Methodref          #95.#96       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #13 = Class              #97           // java/lang/IndexOutOfBoundsException\n-   #14 = Methodref          #13.#89       // java/lang/IndexOutOfBoundsException.\"<init>\":()V\n-   #15 = Methodref          #1.#98        // org/apache/commons/codec/binary/BaseNCodec.hasData:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n-   #16 = Fieldref           #33.#99       // org/apache/commons/codec/binary/BaseNCodecInputStream.in:Ljava/io/InputStream;\n-   #17 = Methodref          #100.#101     // java/io/InputStream.read:([B)I\n-   #18 = Methodref          #1.#102       // org/apache/commons/codec/binary/BaseNCodec.encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-   #19 = Methodref          #1.#103       // org/apache/commons/codec/binary/BaseNCodec.decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-   #20 = Methodref          #1.#104       // org/apache/commons/codec/binary/BaseNCodec.readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-   #21 = Class              #105          // java/io/IOException\n-   #22 = String             #106          // mark/reset not supported\n-   #23 = Methodref          #21.#107      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #24 = Class              #108          // java/lang/IllegalArgumentException\n-   #25 = Class              #109          // java/lang/StringBuilder\n-   #26 = Methodref          #25.#89       // java/lang/StringBuilder.\"<init>\":()V\n-   #27 = String             #110          // Negative skip length:\n-   #28 = Methodref          #25.#111      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #29 = Methodref          #25.#112      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-   #30 = Methodref          #25.#113      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #31 = Methodref          #24.#107      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #32 = Methodref          #114.#115     // java/lang/Math.min:(JJ)J\n-   #33 = Class              #116          // org/apache/commons/codec/binary/BaseNCodecInputStream\n-   #34 = Class              #117          // java/io/FilterInputStream\n-   #35 = Utf8               baseNCodec\n-   #36 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec;\n-   #37 = Utf8               doEncode\n-   #38 = Utf8               Z\n-   #39 = Utf8               singleByte\n-   #40 = Utf8               [B\n-   #41 = Utf8               context\n-   #42 = Utf8               Context\n-   #43 = Utf8               InnerClasses\n-   #44 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-   #45 = Utf8               <init>\n-   #46 = Utf8               (Ljava/io/InputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n-   #47 = Utf8               Code\n-   #48 = Utf8               LineNumberTable\n-   #49 = Utf8               LocalVariableTable\n-   #50 = Utf8               this\n-   #51 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodecInputStream;\n-   #52 = Utf8               input\n-   #53 = Utf8               Ljava/io/InputStream;\n-   #54 = Utf8               available\n-   #55 = Utf8               ()I\n-   #56 = Utf8               StackMapTable\n-   #57 = Utf8               Exceptions\n-   #58 = Utf8               mark\n-   #59 = Utf8               (I)V\n-   #60 = Utf8               readLimit\n-   #61 = Utf8               I\n-   #62 = Utf8               markSupported\n-   #63 = Utf8               ()Z\n-   #64 = Utf8               read\n-   #65 = Utf8               b\n-   #66 = Utf8               B\n-   #67 = Utf8               r\n-   #68 = Utf8               ([BII)I\n-   #69 = Utf8               buf\n-   #70 = Utf8               c\n-   #71 = Utf8               readLen\n-   #72 = Utf8               array\n-   #73 = Utf8               offset\n-   #74 = Utf8               len\n-   #75 = Class              #40           // \"[B\"\n-   #76 = Utf8               reset\n-   #77 = Utf8               ()V\n-   #78 = Utf8               skip\n-   #79 = Utf8               (J)J\n-   #80 = Utf8               n\n-   #81 = Utf8               J\n-   #82 = Utf8               todo\n-   #83 = Utf8               SourceFile\n-   #84 = Utf8               BaseNCodecInputStream.java\n-   #85 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n-   #86 = NameAndType        #45:#118      // \"<init>\":(Ljava/io/InputStream;)V\n-   #87 = NameAndType        #39:#40       // singleByte:[B\n-   #88 = Utf8               org/apache/commons/codec/binary/BaseNCodec$Context\n-   #89 = NameAndType        #45:#77       // \"<init>\":()V\n-   #90 = NameAndType        #41:#44       // context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-   #91 = NameAndType        #37:#38       // doEncode:Z\n-   #92 = NameAndType        #35:#36       // baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n-   #93 = NameAndType        #119:#38      // eof:Z\n-   #94 = NameAndType        #64:#68       // read:([BII)I\n-   #95 = Class              #120          // java/util/Objects\n-   #96 = NameAndType        #121:#122     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #97 = Utf8               java/lang/IndexOutOfBoundsException\n-   #98 = NameAndType        #123:#124     // hasData:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n-   #99 = NameAndType        #125:#53      // in:Ljava/io/InputStream;\n-  #100 = Class              #126          // java/io/InputStream\n-  #101 = NameAndType        #64:#127      // read:([B)I\n-  #102 = NameAndType        #128:#129     // encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #103 = NameAndType        #130:#129     // decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #104 = NameAndType        #131:#132     // readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-  #105 = Utf8               java/io/IOException\n-  #106 = Utf8               mark/reset not supported\n-  #107 = NameAndType        #45:#133      // \"<init>\":(Ljava/lang/String;)V\n-  #108 = Utf8               java/lang/IllegalArgumentException\n-  #109 = Utf8               java/lang/StringBuilder\n-  #110 = Utf8               Negative skip length:\n-  #111 = NameAndType        #134:#135     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #112 = NameAndType        #134:#136     // append:(J)Ljava/lang/StringBuilder;\n-  #113 = NameAndType        #137:#138     // toString:()Ljava/lang/String;\n-  #114 = Class              #139          // java/lang/Math\n-  #115 = NameAndType        #140:#141     // min:(JJ)J\n-  #116 = Utf8               org/apache/commons/codec/binary/BaseNCodecInputStream\n-  #117 = Utf8               java/io/FilterInputStream\n-  #118 = Utf8               (Ljava/io/InputStream;)V\n-  #119 = Utf8               eof\n-  #120 = Utf8               java/util/Objects\n-  #121 = Utf8               requireNonNull\n-  #122 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #123 = Utf8               hasData\n-  #124 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n-  #125 = Utf8               in\n-  #126 = Utf8               java/io/InputStream\n-  #127 = Utf8               ([B)I\n-  #128 = Utf8               encode\n-  #129 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #130 = Utf8               decode\n-  #131 = Utf8               readResults\n-  #132 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-  #133 = Utf8               (Ljava/lang/String;)V\n-  #134 = Utf8               append\n-  #135 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #136 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #137 = Utf8               toString\n-  #138 = Utf8               ()Ljava/lang/String;\n-  #139 = Utf8               java/lang/Math\n-  #140 = Utf8               min\n-  #141 = Utf8               (JJ)J\n+    #1 = Class              #2            // org/apache/commons/codec/binary/BaseNCodecInputStream\n+    #2 = Utf8               org/apache/commons/codec/binary/BaseNCodecInputStream\n+    #3 = Class              #4            // java/io/FilterInputStream\n+    #4 = Utf8               java/io/FilterInputStream\n+    #5 = Utf8               baseNCodec\n+    #6 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec;\n+    #7 = Utf8               doEncode\n+    #8 = Utf8               Z\n+    #9 = Utf8               singleByte\n+   #10 = Utf8               [B\n+   #11 = Utf8               context\n+   #12 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+   #13 = Utf8               <init>\n+   #14 = Utf8               (Ljava/io/InputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n+   #15 = Utf8               Code\n+   #16 = Methodref          #3.#17        // java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #17 = NameAndType        #13:#18       // \"<init>\":(Ljava/io/InputStream;)V\n+   #18 = Utf8               (Ljava/io/InputStream;)V\n+   #19 = Fieldref           #1.#20        // org/apache/commons/codec/binary/BaseNCodecInputStream.singleByte:[B\n+   #20 = NameAndType        #9:#10        // singleByte:[B\n+   #21 = Class              #22           // org/apache/commons/codec/binary/BaseNCodec$Context\n+   #22 = Utf8               org/apache/commons/codec/binary/BaseNCodec$Context\n+   #23 = Methodref          #21.#24       // org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n+   #24 = NameAndType        #13:#25       // \"<init>\":()V\n+   #25 = Utf8               ()V\n+   #26 = Fieldref           #1.#27        // org/apache/commons/codec/binary/BaseNCodecInputStream.context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+   #27 = NameAndType        #11:#12       // context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+   #28 = Fieldref           #1.#29        // org/apache/commons/codec/binary/BaseNCodecInputStream.doEncode:Z\n+   #29 = NameAndType        #7:#8         // doEncode:Z\n+   #30 = Fieldref           #1.#31        // org/apache/commons/codec/binary/BaseNCodecInputStream.baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+   #31 = NameAndType        #5:#6         // baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+   #32 = Utf8               LineNumberTable\n+   #33 = Utf8               LocalVariableTable\n+   #34 = Utf8               this\n+   #35 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodecInputStream;\n+   #36 = Utf8               input\n+   #37 = Utf8               Ljava/io/InputStream;\n+   #38 = Utf8               available\n+   #39 = Utf8               ()I\n+   #40 = Utf8               Exceptions\n+   #41 = Class              #42           // java/io/IOException\n+   #42 = Utf8               java/io/IOException\n+   #43 = Fieldref           #21.#44       // org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n+   #44 = NameAndType        #45:#8        // eof:Z\n+   #45 = Utf8               eof\n+   #46 = Utf8               StackMapTable\n+   #47 = Utf8               mark\n+   #48 = Utf8               (I)V\n+   #49 = Utf8               readLimit\n+   #50 = Utf8               I\n+   #51 = Utf8               markSupported\n+   #52 = Utf8               ()Z\n+   #53 = Utf8               read\n+   #54 = Methodref          #1.#55        // org/apache/commons/codec/binary/BaseNCodecInputStream.read:([BII)I\n+   #55 = NameAndType        #53:#56       // read:([BII)I\n+   #56 = Utf8               ([BII)I\n+   #57 = Utf8               r\n+   #58 = Utf8               b\n+   #59 = Utf8               B\n+   #60 = String             #61           // array\n+   #61 = Utf8               array\n+   #62 = Methodref          #63.#65       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #63 = Class              #64           // java/util/Objects\n+   #64 = Utf8               java/util/Objects\n+   #65 = NameAndType        #66:#67       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #66 = Utf8               requireNonNull\n+   #67 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #68 = Class              #69           // java/lang/IndexOutOfBoundsException\n+   #69 = Utf8               java/lang/IndexOutOfBoundsException\n+   #70 = Methodref          #68.#24       // java/lang/IndexOutOfBoundsException.\"<init>\":()V\n+   #71 = Methodref          #72.#74       // org/apache/commons/codec/binary/BaseNCodec.hasData:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n+   #72 = Class              #73           // org/apache/commons/codec/binary/BaseNCodec\n+   #73 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n+   #74 = NameAndType        #75:#76       // hasData:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n+   #75 = Utf8               hasData\n+   #76 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n+   #77 = Fieldref           #1.#78        // org/apache/commons/codec/binary/BaseNCodecInputStream.in:Ljava/io/InputStream;\n+   #78 = NameAndType        #79:#37       // in:Ljava/io/InputStream;\n+   #79 = Utf8               in\n+   #80 = Methodref          #81.#83       // java/io/InputStream.read:([B)I\n+   #81 = Class              #82           // java/io/InputStream\n+   #82 = Utf8               java/io/InputStream\n+   #83 = NameAndType        #53:#84       // read:([B)I\n+   #84 = Utf8               ([B)I\n+   #85 = Methodref          #72.#86       // org/apache/commons/codec/binary/BaseNCodec.encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+   #86 = NameAndType        #87:#88       // encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+   #87 = Utf8               encode\n+   #88 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+   #89 = Methodref          #72.#90       // org/apache/commons/codec/binary/BaseNCodec.decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+   #90 = NameAndType        #91:#88       // decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+   #91 = Utf8               decode\n+   #92 = Methodref          #72.#93       // org/apache/commons/codec/binary/BaseNCodec.readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+   #93 = NameAndType        #94:#95       // readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+   #94 = Utf8               readResults\n+   #95 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+   #96 = Utf8               offset\n+   #97 = Utf8               len\n+   #98 = Utf8               readLen\n+   #99 = Utf8               buf\n+  #100 = Utf8               c\n+  #101 = Class              #10           // \"[B\"\n+  #102 = Utf8               reset\n+  #103 = String             #104          // mark/reset not supported\n+  #104 = Utf8               mark/reset not supported\n+  #105 = Methodref          #41.#106      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+  #106 = NameAndType        #13:#107      // \"<init>\":(Ljava/lang/String;)V\n+  #107 = Utf8               (Ljava/lang/String;)V\n+  #108 = Utf8               skip\n+  #109 = Utf8               (J)J\n+  #110 = Class              #111          // java/lang/IllegalArgumentException\n+  #111 = Utf8               java/lang/IllegalArgumentException\n+  #112 = Class              #113          // java/lang/StringBuilder\n+  #113 = Utf8               java/lang/StringBuilder\n+  #114 = String             #115          // Negative skip length:\n+  #115 = Utf8               Negative skip length:\n+  #116 = Methodref          #112.#106     // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #117 = Methodref          #112.#118     // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+  #118 = NameAndType        #119:#120     // append:(J)Ljava/lang/StringBuilder;\n+  #119 = Utf8               append\n+  #120 = Utf8               (J)Ljava/lang/StringBuilder;\n+  #121 = Methodref          #112.#122     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #122 = NameAndType        #123:#124     // toString:()Ljava/lang/String;\n+  #123 = Utf8               toString\n+  #124 = Utf8               ()Ljava/lang/String;\n+  #125 = Methodref          #110.#106     // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #126 = Methodref          #127.#129     // java/lang/Math.min:(JJ)J\n+  #127 = Class              #128          // java/lang/Math\n+  #128 = Utf8               java/lang/Math\n+  #129 = NameAndType        #130:#131     // min:(JJ)J\n+  #130 = Utf8               min\n+  #131 = Utf8               (JJ)J\n+  #132 = Utf8               n\n+  #133 = Utf8               J\n+  #134 = Utf8               todo\n+  #135 = Utf8               SourceFile\n+  #136 = Utf8               BaseNCodecInputStream.java\n+  #137 = Utf8               InnerClasses\n+  #138 = Utf8               Context\n {\n   private final org.apache.commons.codec.binary.BaseNCodec baseNCodec;\n     descriptor: Lorg/apache/commons/codec/binary/BaseNCodec;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final boolean doEncode;\n     descriptor: Z\n@@ -169,30 +166,30 @@\n   protected org.apache.commons.codec.binary.BaseNCodecInputStream(java.io.InputStream, org.apache.commons.codec.binary.BaseNCodec, boolean);\n     descriptor: (Ljava/io/InputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #2                  // Method java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+         2: invokespecial #16                 // Method java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n          5: aload_0\n          6: iconst_1\n          7: newarray       byte\n-         9: putfield      #3                  // Field singleByte:[B\n+         9: putfield      #19                 // Field singleByte:[B\n         12: aload_0\n-        13: new           #4                  // class org/apache/commons/codec/binary/BaseNCodec$Context\n+        13: new           #21                 // class org/apache/commons/codec/binary/BaseNCodec$Context\n         16: dup\n-        17: invokespecial #5                  // Method org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n-        20: putfield      #6                  // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+        17: invokespecial #23                 // Method org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n+        20: putfield      #26                 // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n         23: aload_0\n         24: iload_3\n-        25: putfield      #7                  // Field doEncode:Z\n+        25: putfield      #28                 // Field doEncode:Z\n         28: aload_0\n         29: aload_2\n-        30: putfield      #8                  // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+        30: putfield      #30                 // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n         33: return\n       LineNumberTable:\n         line 45: 0\n         line 40: 5\n         line 42: 12\n         line 46: 23\n         line 47: 28\n@@ -203,35 +200,35 @@\n             0      34     1 input   Ljava/io/InputStream;\n             0      34     2 baseNCodec   Lorg/apache/commons/codec/binary/BaseNCodec;\n             0      34     3 doEncode   Z\n \n   public int available() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-         4: getfield      #9                  // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n+         1: getfield      #26                 // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+         4: getfield      #43                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n          7: ifeq          14\n         10: iconst_0\n         11: goto          15\n         14: iconst_1\n         15: ireturn\n       LineNumberTable:\n         line 64: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0  this   Lorg/apache/commons/codec/binary/BaseNCodecInputStream;\n       StackMapTable: number_of_entries = 2\n         frame_type = 14 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public synchronized void mark(int);\n     descriptor: (I)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=0, locals=2, args_size=2\n          0: return\n@@ -254,37 +251,39 @@\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       2     0  this   Lorg/apache/commons/codec/binary/BaseNCodecInputStream;\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=3, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: getfield      #3                  // Field singleByte:[B\n+         2: getfield      #19                 // Field singleByte:[B\n          5: iconst_0\n          6: iconst_1\n-         7: invokevirtual #10                 // Method read:([BII)I\n+         7: invokevirtual #54                 // Method read:([BII)I\n         10: istore_1\n-        11: iload_1\n-        12: ifne          29\n+        11: goto          25\n+        14: aload_0\n         15: aload_0\n-        16: aload_0\n-        17: getfield      #3                  // Field singleByte:[B\n-        20: iconst_0\n-        21: iconst_1\n-        22: invokevirtual #10                 // Method read:([BII)I\n-        25: istore_1\n-        26: goto          11\n+        16: getfield      #19                 // Field singleByte:[B\n+        19: iconst_0\n+        20: iconst_1\n+        21: invokevirtual #54                 // Method read:([BII)I\n+        24: istore_1\n+        25: iload_1\n+        26: ifeq          14\n         29: iload_1\n         30: ifle          54\n         33: aload_0\n-        34: getfield      #3                  // Field singleByte:[B\n+        34: getfield      #19                 // Field singleByte:[B\n         37: iconst_0\n         38: baload\n         39: istore_2\n         40: iload_2\n         41: ifge          52\n         44: sipush        256\n         47: iload_2\n@@ -293,281 +292,282 @@\n         52: iload_2\n         53: ireturn\n         54: iconst_m1\n         55: ireturn\n       LineNumberTable:\n         line 99: 0\n         line 100: 11\n-        line 101: 15\n+        line 101: 14\n+        line 100: 25\n         line 103: 29\n         line 104: 33\n         line 105: 40\n         line 107: 54\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           40      14     2     b   B\n             0      56     0  this   Lorg/apache/commons/codec/binary/BaseNCodecInputStream;\n            11      45     1     r   I\n+           40      14     2     b   B\n       StackMapTable: number_of_entries = 5\n         frame_type = 252 /* append */\n-          offset_delta = 11\n+          offset_delta = 14\n           locals = [ int ]\n-        frame_type = 17 /* same */\n+        frame_type = 10 /* same */\n         frame_type = 252 /* append */\n-          offset_delta = 22\n+          offset_delta = 26\n           locals = [ int ]\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n         frame_type = 250 /* chop */\n           offset_delta = 0\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=7, args_size=4\n          0: aload_1\n-         1: ldc           #11                 // String array\n-         3: invokestatic  #12                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #60                 // String array\n+         3: invokestatic  #62                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: iload_2\n          8: iflt          15\n         11: iload_3\n         12: ifge          23\n-        15: new           #13                 // class java/lang/IndexOutOfBoundsException\n+        15: new           #68                 // class java/lang/IndexOutOfBoundsException\n         18: dup\n-        19: invokespecial #14                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":()V\n+        19: invokespecial #70                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":()V\n         22: athrow\n         23: iload_2\n         24: aload_1\n         25: arraylength\n         26: if_icmpgt     37\n         29: iload_2\n         30: iload_3\n         31: iadd\n         32: aload_1\n         33: arraylength\n         34: if_icmple     45\n-        37: new           #13                 // class java/lang/IndexOutOfBoundsException\n+        37: new           #68                 // class java/lang/IndexOutOfBoundsException\n         40: dup\n-        41: invokespecial #14                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":()V\n+        41: invokespecial #70                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":()V\n         44: athrow\n         45: iload_3\n         46: ifne          51\n         49: iconst_0\n         50: ireturn\n         51: iconst_0\n         52: istore        4\n-        54: iload         4\n-        56: ifne          165\n-        59: aload_0\n-        60: getfield      #8                  // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n-        63: aload_0\n-        64: getfield      #6                  // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-        67: invokevirtual #15                 // Method org/apache/commons/codec/binary/BaseNCodec.hasData:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n-        70: ifne          146\n-        73: aload_0\n-        74: getfield      #7                  // Field doEncode:Z\n-        77: ifeq          86\n-        80: sipush        4096\n-        83: goto          89\n-        86: sipush        8192\n-        89: newarray       byte\n-        91: astore        5\n-        93: aload_0\n-        94: getfield      #16                 // Field in:Ljava/io/InputStream;\n-        97: aload         5\n-        99: invokevirtual #17                 // Method java/io/InputStream.read:([B)I\n-       102: istore        6\n-       104: aload_0\n-       105: getfield      #7                  // Field doEncode:Z\n-       108: ifeq          130\n-       111: aload_0\n-       112: getfield      #8                  // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n-       115: aload         5\n-       117: iconst_0\n-       118: iload         6\n-       120: aload_0\n-       121: getfield      #6                  // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-       124: invokevirtual #18                 // Method org/apache/commons/codec/binary/BaseNCodec.encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-       127: goto          146\n-       130: aload_0\n-       131: getfield      #8                  // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n-       134: aload         5\n-       136: iconst_0\n-       137: iload         6\n-       139: aload_0\n-       140: getfield      #6                  // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-       143: invokevirtual #19                 // Method org/apache/commons/codec/binary/BaseNCodec.decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-       146: aload_0\n-       147: getfield      #8                  // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n-       150: aload_1\n-       151: iload_2\n-       152: iload_3\n-       153: aload_0\n-       154: getfield      #6                  // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-       157: invokevirtual #20                 // Method org/apache/commons/codec/binary/BaseNCodec.readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-       160: istore        4\n-       162: goto          54\n+        54: goto          160\n+        57: aload_0\n+        58: getfield      #30                 // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+        61: aload_0\n+        62: getfield      #26                 // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+        65: invokevirtual #71                 // Method org/apache/commons/codec/binary/BaseNCodec.hasData:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n+        68: ifne          144\n+        71: aload_0\n+        72: getfield      #28                 // Field doEncode:Z\n+        75: ifeq          84\n+        78: sipush        4096\n+        81: goto          87\n+        84: sipush        8192\n+        87: newarray       byte\n+        89: astore        5\n+        91: aload_0\n+        92: getfield      #77                 // Field in:Ljava/io/InputStream;\n+        95: aload         5\n+        97: invokevirtual #80                 // Method java/io/InputStream.read:([B)I\n+       100: istore        6\n+       102: aload_0\n+       103: getfield      #28                 // Field doEncode:Z\n+       106: ifeq          128\n+       109: aload_0\n+       110: getfield      #30                 // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+       113: aload         5\n+       115: iconst_0\n+       116: iload         6\n+       118: aload_0\n+       119: getfield      #26                 // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+       122: invokevirtual #85                 // Method org/apache/commons/codec/binary/BaseNCodec.encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+       125: goto          144\n+       128: aload_0\n+       129: getfield      #30                 // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+       132: aload         5\n+       134: iconst_0\n+       135: iload         6\n+       137: aload_0\n+       138: getfield      #26                 // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+       141: invokevirtual #89                 // Method org/apache/commons/codec/binary/BaseNCodec.decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+       144: aload_0\n+       145: getfield      #30                 // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+       148: aload_1\n+       149: iload_2\n+       150: iload_3\n+       151: aload_0\n+       152: getfield      #26                 // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+       155: invokevirtual #92                 // Method org/apache/commons/codec/binary/BaseNCodec.readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+       158: istore        4\n+       160: iload         4\n+       162: ifeq          57\n        165: iload         4\n        167: ireturn\n       LineNumberTable:\n         line 131: 0\n         line 132: 7\n         line 133: 15\n         line 134: 23\n         line 135: 37\n         line 136: 45\n         line 137: 49\n         line 139: 51\n         line 156: 54\n-        line 157: 59\n-        line 158: 73\n-        line 159: 93\n-        line 160: 104\n-        line 161: 111\n-        line 163: 130\n-        line 166: 146\n+        line 157: 57\n+        line 158: 71\n+        line 159: 91\n+        line 160: 102\n+        line 161: 109\n+        line 162: 125\n+        line 163: 128\n+        line 166: 144\n+        line 156: 160\n         line 168: 165\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           93      53     5   buf   [B\n-          104      42     6     c   I\n-           54     114     4 readLen   I\n             0     168     0  this   Lorg/apache/commons/codec/binary/BaseNCodecInputStream;\n             0     168     1 array   [B\n             0     168     2 offset   I\n             0     168     3   len   I\n+           54     114     4 readLen   I\n+           91      53     5   buf   [B\n+          102      42     6     c   I\n       StackMapTable: number_of_entries = 11\n         frame_type = 15 /* same */\n         frame_type = 7 /* same */\n         frame_type = 13 /* same */\n         frame_type = 7 /* same */\n         frame_type = 5 /* same */\n         frame_type = 252 /* append */\n-          offset_delta = 2\n+          offset_delta = 5\n           locals = [ int ]\n-        frame_type = 31 /* same */\n+        frame_type = 26 /* same */\n         frame_type = 66 /* same_locals_1_stack_item */\n           stack = [ int ]\n         frame_type = 253 /* append */\n           offset_delta = 40\n           locals = [ class \"[B\", int ]\n         frame_type = 249 /* chop */\n           offset_delta = 15\n-        frame_type = 18 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n+        frame_type = 15 /* same */\n \n   public synchronized void reset() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: new           #21                 // class java/io/IOException\n+         0: new           #41                 // class java/io/IOException\n          3: dup\n-         4: ldc           #22                 // String mark/reset not supported\n-         6: invokespecial #23                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+         4: ldc           #103                // String mark/reset not supported\n+         6: invokespecial #105                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n          9: athrow\n       LineNumberTable:\n         line 182: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/codec/binary/BaseNCodecInputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public long skip(long) throws java.io.IOException;\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=7, args_size=2\n          0: lload_1\n          1: lconst_0\n          2: lcmp\n-         3: ifge          33\n-         6: new           #24                 // class java/lang/IllegalArgumentException\n+         3: ifge          30\n+         6: new           #110                // class java/lang/IllegalArgumentException\n          9: dup\n-        10: new           #25                 // class java/lang/StringBuilder\n+        10: new           #112                // class java/lang/StringBuilder\n         13: dup\n-        14: invokespecial #26                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        17: ldc           #27                 // String Negative skip length:\n-        19: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        22: lload_1\n-        23: invokevirtual #29                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-        26: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        29: invokespecial #31                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        32: athrow\n-        33: sipush        512\n-        36: newarray       byte\n-        38: astore_3\n-        39: lload_1\n-        40: lstore        4\n-        42: lload         4\n-        44: lconst_0\n-        45: lcmp\n-        46: ifle          90\n-        49: aload_3\n-        50: arraylength\n-        51: i2l\n-        52: lload         4\n-        54: invokestatic  #32                 // Method java/lang/Math.min:(JJ)J\n-        57: l2i\n-        58: istore        6\n-        60: aload_0\n-        61: aload_3\n-        62: iconst_0\n+        14: ldc           #114                // String Negative skip length:\n+        16: invokespecial #116                // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        19: lload_1\n+        20: invokevirtual #117                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        23: invokevirtual #121                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        26: invokespecial #125                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        29: athrow\n+        30: sipush        512\n+        33: newarray       byte\n+        35: astore_3\n+        36: lload_1\n+        37: lstore        4\n+        39: goto          80\n+        42: aload_3\n+        43: arraylength\n+        44: i2l\n+        45: lload         4\n+        47: invokestatic  #126                // Method java/lang/Math.min:(JJ)J\n+        50: l2i\n+        51: istore        6\n+        53: aload_0\n+        54: aload_3\n+        55: iconst_0\n+        56: iload         6\n+        58: invokevirtual #54                 // Method read:([BII)I\n+        61: istore        6\n         63: iload         6\n-        65: invokevirtual #10                 // Method read:([BII)I\n-        68: istore        6\n-        70: iload         6\n-        72: iconst_m1\n-        73: if_icmpne     79\n-        76: goto          90\n-        79: lload         4\n-        81: iload         6\n-        83: i2l\n-        84: lsub\n-        85: lstore        4\n-        87: goto          42\n-        90: lload_1\n-        91: lload         4\n-        93: lsub\n-        94: lreturn\n+        65: iconst_m1\n+        66: if_icmpne     72\n+        69: goto          87\n+        72: lload         4\n+        74: iload         6\n+        76: i2l\n+        77: lsub\n+        78: lstore        4\n+        80: lload         4\n+        82: lconst_0\n+        83: lcmp\n+        84: ifgt          42\n+        87: lload_1\n+        88: lload         4\n+        90: lsub\n+        91: lreturn\n       LineNumberTable:\n         line 193: 0\n         line 194: 6\n-        line 198: 33\n-        line 199: 39\n-        line 201: 42\n-        line 202: 49\n-        line 203: 60\n-        line 204: 70\n-        line 205: 76\n-        line 207: 79\n-        line 208: 87\n-        line 210: 90\n+        line 198: 30\n+        line 199: 36\n+        line 201: 39\n+        line 202: 42\n+        line 203: 53\n+        line 204: 63\n+        line 205: 69\n+        line 207: 72\n+        line 201: 80\n+        line 210: 87\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           60      27     6   len   I\n-            0      95     0  this   Lorg/apache/commons/codec/binary/BaseNCodecInputStream;\n-            0      95     1     n   J\n-           39      56     3     b   [B\n-           42      53     4  todo   J\n-      StackMapTable: number_of_entries = 4\n-        frame_type = 33 /* same */\n+            0      92     0  this   Lorg/apache/commons/codec/binary/BaseNCodecInputStream;\n+            0      92     1     n   J\n+           36      56     3     b   [B\n+           39      53     4  todo   J\n+           53      27     6   len   I\n+      StackMapTable: number_of_entries = 5\n+        frame_type = 30 /* same */\n         frame_type = 253 /* append */\n-          offset_delta = 8\n+          offset_delta = 11\n           locals = [ class \"[B\", long ]\n         frame_type = 252 /* append */\n-          offset_delta = 36\n+          offset_delta = 29\n           locals = [ int ]\n         frame_type = 250 /* chop */\n-          offset_delta = 10\n-    Exceptions:\n-      throws java.io.IOException\n+          offset_delta = 7\n+        frame_type = 6 /* same */\n }\n SourceFile: \"BaseNCodecInputStream.java\"\n InnerClasses:\n-  static #42= #4 of #1;                   // Context=class org/apache/commons/codec/binary/BaseNCodec$Context of class org/apache/commons/codec/binary/BaseNCodec\n+  static #138= #21 of #72;                // Context=class org/apache/commons/codec/binary/BaseNCodec$Context of class org/apache/commons/codec/binary/BaseNCodec\n"}]}
