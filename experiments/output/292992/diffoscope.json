{"diffoscope-json-version": 1, "source1": "first/NonBlockingJsonParserBase.class", "source2": "second/NonBlockingJsonParserBase.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,147 +1,147 @@\n-  SHA-256 checksum e6b8145779d4459951d2bcebd578f92ffe33d9038406c9d414af420bbf62414e\n+  SHA-256 checksum 0563b104e519d99e8e05829db45e66f378e2ca4f0c99d49c604a176931faa7db\n   Compiled from \"NonBlockingJsonParserBase.java\"\n public abstract class com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase extends com.fasterxml.jackson.core.base.ParserBase\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #9                          // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase\n   super_class: #134                       // com/fasterxml/jackson/core/base/ParserBase\n   interfaces: 0, fields: 67, methods: 45, attributes: 2\n Constant pool:\n-    #1 = Class              #388          // com/fasterxml/jackson/core/JsonTokenId\n-    #2 = Methodref          #134.#389     // com/fasterxml/jackson/core/base/ParserBase.\"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;I)V\n-    #3 = Fieldref           #9.#390       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._quadBuffer:[I\n-    #4 = Fieldref           #9.#391       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._endOfInput:Z\n-    #5 = Fieldref           #9.#392       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._currBufferStart:I\n-    #6 = Fieldref           #9.#393       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._currInputRowAlt:I\n-    #7 = Fieldref           #9.#394       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._symbols:Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n-    #8 = Fieldref           #9.#395       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._currToken:Lcom/fasterxml/jackson/core/JsonToken;\n-    #9 = Class              #396          // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase\n-   #10 = Fieldref           #9.#397       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._majorState:I\n-   #11 = Fieldref           #9.#398       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._majorStateAfterValue:I\n-   #12 = Class              #399          // java/lang/UnsupportedOperationException\n-   #13 = String             #400          // Can not use ObjectMapper with non-blocking parser\n-   #14 = Methodref          #12.#401      // java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n-   #15 = Fieldref           #9.#402       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase.JSON_READ_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-   #16 = Methodref          #134.#403     // com/fasterxml/jackson/core/base/ParserBase._releaseBuffers:()V\n-   #17 = Methodref          #404.#405     // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.release:()V\n-   #18 = Fieldref           #9.#406       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._inputEnd:I\n-   #19 = Fieldref           #407.#408     // com/fasterxml/jackson/core/JsonToken.VALUE_STRING:Lcom/fasterxml/jackson/core/JsonToken;\n-   #20 = Fieldref           #9.#409       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._textBuffer:Lcom/fasterxml/jackson/core/util/TextBuffer;\n-   #21 = Methodref          #410.#411     // com/fasterxml/jackson/core/util/TextBuffer.hasTextAsCharacters:()Z\n-   #22 = Fieldref           #407.#412     // com/fasterxml/jackson/core/JsonToken.FIELD_NAME:Lcom/fasterxml/jackson/core/JsonToken;\n-   #23 = Fieldref           #9.#413       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._nameCopied:Z\n-   #24 = Fieldref           #9.#414       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._inputPtr:I\n-   #25 = Fieldref           #9.#415       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._currInputRowStart:I\n-   #26 = Fieldref           #9.#416       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._currInputRow:I\n-   #27 = Methodref          #417.#418     // java/lang/Math.max:(II)I\n-   #28 = Class              #419          // com/fasterxml/jackson/core/JsonLocation\n-   #29 = Methodref          #9.#420       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._contentReference:()Lcom/fasterxml/jackson/core/io/ContentReference;\n-   #30 = Fieldref           #9.#421       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._currInputProcessed:J\n+    #1 = Class              #387          // com/fasterxml/jackson/core/JsonTokenId\n+    #2 = Methodref          #134.#388     // com/fasterxml/jackson/core/base/ParserBase.\"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;I)V\n+    #3 = Fieldref           #9.#389       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._quadBuffer:[I\n+    #4 = Fieldref           #9.#390       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._endOfInput:Z\n+    #5 = Fieldref           #9.#391       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._currBufferStart:I\n+    #6 = Fieldref           #9.#392       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._currInputRowAlt:I\n+    #7 = Fieldref           #9.#393       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._symbols:Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n+    #8 = Fieldref           #9.#394       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._currToken:Lcom/fasterxml/jackson/core/JsonToken;\n+    #9 = Class              #395          // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase\n+   #10 = Fieldref           #9.#396       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._majorState:I\n+   #11 = Fieldref           #9.#397       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._majorStateAfterValue:I\n+   #12 = Class              #398          // java/lang/UnsupportedOperationException\n+   #13 = String             #399          // Can not use ObjectMapper with non-blocking parser\n+   #14 = Methodref          #12.#400      // java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n+   #15 = Fieldref           #9.#401       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase.JSON_READ_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+   #16 = Methodref          #134.#402     // com/fasterxml/jackson/core/base/ParserBase._releaseBuffers:()V\n+   #17 = Methodref          #403.#404     // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.release:()V\n+   #18 = Fieldref           #9.#405       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._inputEnd:I\n+   #19 = Fieldref           #302.#406     // com/fasterxml/jackson/core/JsonToken.VALUE_STRING:Lcom/fasterxml/jackson/core/JsonToken;\n+   #20 = Fieldref           #9.#407       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._textBuffer:Lcom/fasterxml/jackson/core/util/TextBuffer;\n+   #21 = Methodref          #408.#409     // com/fasterxml/jackson/core/util/TextBuffer.hasTextAsCharacters:()Z\n+   #22 = Fieldref           #302.#410     // com/fasterxml/jackson/core/JsonToken.FIELD_NAME:Lcom/fasterxml/jackson/core/JsonToken;\n+   #23 = Fieldref           #9.#411       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._nameCopied:Z\n+   #24 = Fieldref           #9.#412       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._inputPtr:I\n+   #25 = Fieldref           #9.#413       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._currInputRowStart:I\n+   #26 = Fieldref           #9.#414       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._currInputRow:I\n+   #27 = Methodref          #415.#416     // java/lang/Math.max:(II)I\n+   #28 = Class              #417          // com/fasterxml/jackson/core/JsonLocation\n+   #29 = Methodref          #9.#418       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._contentReference:()Lcom/fasterxml/jackson/core/io/ContentReference;\n+   #30 = Fieldref           #9.#419       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._currInputProcessed:J\n    #31 = Long               -1l\n-   #33 = Methodref          #28.#422      // com/fasterxml/jackson/core/JsonLocation.\"<init>\":(Lcom/fasterxml/jackson/core/io/ContentReference;JJII)V\n-   #34 = Fieldref           #9.#423       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._tokenInputTotal:J\n-   #35 = Fieldref           #9.#424       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._tokenInputRow:I\n-   #36 = Fieldref           #9.#425       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._tokenInputCol:I\n-   #37 = Methodref          #410.#426     // com/fasterxml/jackson/core/util/TextBuffer.contentsAsString:()Ljava/lang/String;\n-   #38 = Methodref          #9.#427       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._getText2:(Lcom/fasterxml/jackson/core/JsonToken;)Ljava/lang/String;\n-   #39 = Methodref          #407.#428     // com/fasterxml/jackson/core/JsonToken.id:()I\n-   #40 = Fieldref           #9.#429       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._parsingContext:Lcom/fasterxml/jackson/core/json/JsonReadContext;\n-   #41 = Methodref          #430.#431     // com/fasterxml/jackson/core/json/JsonReadContext.getCurrentName:()Ljava/lang/String;\n-   #42 = Methodref          #407.#432     // com/fasterxml/jackson/core/JsonToken.asString:()Ljava/lang/String;\n-   #43 = Methodref          #410.#433     // com/fasterxml/jackson/core/util/TextBuffer.contentsToWriter:(Ljava/io/Writer;)I\n-   #44 = Methodref          #434.#435     // java/io/Writer.write:(Ljava/lang/String;)V\n-   #45 = Methodref          #95.#436      // java/lang/String.length:()I\n-   #46 = Methodref          #407.#437     // com/fasterxml/jackson/core/JsonToken.isNumeric:()Z\n-   #47 = Fieldref           #407.#438     // com/fasterxml/jackson/core/JsonToken.NOT_AVAILABLE:Lcom/fasterxml/jackson/core/JsonToken;\n-   #48 = String             #439          // Current token not available: can not call this method\n-   #49 = Methodref          #9.#440       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._reportError:(Ljava/lang/String;)V\n-   #50 = Methodref          #407.#441     // com/fasterxml/jackson/core/JsonToken.asCharArray:()[C\n-   #51 = Methodref          #434.#442     // java/io/Writer.write:([C)V\n-   #52 = Methodref          #9.#431       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase.getCurrentName:()Ljava/lang/String;\n-   #53 = Methodref          #134.#443     // com/fasterxml/jackson/core/base/ParserBase.getValueAsString:(Ljava/lang/String;)Ljava/lang/String;\n-   #54 = Fieldref           #9.#444       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._nameCopyBuffer:[C\n-   #55 = Fieldref           #9.#445       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._ioContext:Lcom/fasterxml/jackson/core/io/IOContext;\n-   #56 = Methodref          #446.#447     // com/fasterxml/jackson/core/io/IOContext.allocNameCopyBuffer:(I)[C\n-   #57 = Methodref          #95.#448      // java/lang/String.getChars:(II[CI)V\n-   #58 = Methodref          #410.#449     // com/fasterxml/jackson/core/util/TextBuffer.getTextBuffer:()[C\n-   #59 = Methodref          #410.#450     // com/fasterxml/jackson/core/util/TextBuffer.size:()I\n-   #60 = Methodref          #410.#451     // com/fasterxml/jackson/core/util/TextBuffer.getTextOffset:()I\n-   #61 = String             #452          // Current token (%s) not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary\n-   #62 = Methodref          #9.#453       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._reportError:(Ljava/lang/String;Ljava/lang/Object;)V\n-   #63 = Fieldref           #9.#454       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._binaryValue:[B\n-   #64 = Methodref          #9.#455       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._getByteArrayBuilder:()Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n-   #65 = Methodref          #9.#456       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase.getText:()Ljava/lang/String;\n-   #66 = Methodref          #9.#457       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._decodeBase64:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;Lcom/fasterxml/jackson/core/Base64Variant;)V\n-   #67 = Methodref          #458.#459     // com/fasterxml/jackson/core/util/ByteArrayBuilder.toByteArray:()[B\n-   #68 = Methodref          #9.#460       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase.getBinaryValue:(Lcom/fasterxml/jackson/core/Base64Variant;)[B\n-   #69 = Methodref          #461.#462     // java/io/OutputStream.write:([B)V\n-   #70 = Fieldref           #407.#463     // com/fasterxml/jackson/core/JsonToken.VALUE_EMBEDDED_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n-   #71 = Methodref          #430.#464     // com/fasterxml/jackson/core/json/JsonReadContext.createChildArrayContext:(II)Lcom/fasterxml/jackson/core/json/JsonReadContext;\n-   #72 = Fieldref           #407.#465     // com/fasterxml/jackson/core/JsonToken.START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n-   #73 = Methodref          #430.#466     // com/fasterxml/jackson/core/json/JsonReadContext.createChildObjectContext:(II)Lcom/fasterxml/jackson/core/json/JsonReadContext;\n-   #74 = Fieldref           #407.#467     // com/fasterxml/jackson/core/JsonToken.START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n-   #75 = Methodref          #430.#468     // com/fasterxml/jackson/core/json/JsonReadContext.inArray:()Z\n-   #76 = Methodref          #9.#469       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._reportMismatchedEndMarker:(IC)V\n-   #77 = Methodref          #430.#470     // com/fasterxml/jackson/core/json/JsonReadContext.getParent:()Lcom/fasterxml/jackson/core/json/JsonReadContext;\n-   #78 = Methodref          #430.#471     // com/fasterxml/jackson/core/json/JsonReadContext.inObject:()Z\n-   #79 = Fieldref           #407.#472     // com/fasterxml/jackson/core/JsonToken.END_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n-   #80 = Fieldref           #407.#473     // com/fasterxml/jackson/core/JsonToken.END_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n-   #81 = Methodref          #9.#474       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._padLastQuad:(II)I\n-   #82 = Methodref          #404.#475     // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(I)Ljava/lang/String;\n-   #83 = Methodref          #9.#476       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._addName:([III)Ljava/lang/String;\n-   #84 = Methodref          #404.#477     // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(II)Ljava/lang/String;\n-   #85 = Methodref          #404.#478     // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(III)Ljava/lang/String;\n-   #86 = Methodref          #410.#479     // com/fasterxml/jackson/core/util/TextBuffer.emptyAndGetCurrentSegment:()[C\n-   #87 = Methodref          #9.#480       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._reportInvalidInitial:(I)V\n-   #88 = String             #481          //  in field name\n-   #89 = Methodref          #9.#482       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._reportInvalidEOF:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n-   #90 = Methodref          #9.#483       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._reportInvalidOther:(I)V\n+   #33 = Methodref          #28.#420      // com/fasterxml/jackson/core/JsonLocation.\"<init>\":(Lcom/fasterxml/jackson/core/io/ContentReference;JJII)V\n+   #34 = Fieldref           #9.#421       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._tokenInputTotal:J\n+   #35 = Fieldref           #9.#422       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._tokenInputRow:I\n+   #36 = Fieldref           #9.#423       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._tokenInputCol:I\n+   #37 = Methodref          #408.#424     // com/fasterxml/jackson/core/util/TextBuffer.contentsAsString:()Ljava/lang/String;\n+   #38 = Methodref          #9.#425       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._getText2:(Lcom/fasterxml/jackson/core/JsonToken;)Ljava/lang/String;\n+   #39 = Methodref          #302.#426     // com/fasterxml/jackson/core/JsonToken.id:()I\n+   #40 = Fieldref           #9.#427       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._parsingContext:Lcom/fasterxml/jackson/core/json/JsonReadContext;\n+   #41 = Methodref          #332.#428     // com/fasterxml/jackson/core/json/JsonReadContext.getCurrentName:()Ljava/lang/String;\n+   #42 = Methodref          #302.#429     // com/fasterxml/jackson/core/JsonToken.asString:()Ljava/lang/String;\n+   #43 = Methodref          #408.#430     // com/fasterxml/jackson/core/util/TextBuffer.contentsToWriter:(Ljava/io/Writer;)I\n+   #44 = Methodref          #431.#432     // java/io/Writer.write:(Ljava/lang/String;)V\n+   #45 = Methodref          #95.#433      // java/lang/String.length:()I\n+   #46 = Methodref          #302.#434     // com/fasterxml/jackson/core/JsonToken.isNumeric:()Z\n+   #47 = Fieldref           #302.#435     // com/fasterxml/jackson/core/JsonToken.NOT_AVAILABLE:Lcom/fasterxml/jackson/core/JsonToken;\n+   #48 = String             #436          // Current token not available: can not call this method\n+   #49 = Methodref          #9.#437       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._reportError:(Ljava/lang/String;)V\n+   #50 = Methodref          #302.#438     // com/fasterxml/jackson/core/JsonToken.asCharArray:()[C\n+   #51 = Methodref          #431.#439     // java/io/Writer.write:([C)V\n+   #52 = Methodref          #9.#428       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase.getCurrentName:()Ljava/lang/String;\n+   #53 = Methodref          #134.#440     // com/fasterxml/jackson/core/base/ParserBase.getValueAsString:(Ljava/lang/String;)Ljava/lang/String;\n+   #54 = Fieldref           #9.#441       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._nameCopyBuffer:[C\n+   #55 = Fieldref           #9.#442       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._ioContext:Lcom/fasterxml/jackson/core/io/IOContext;\n+   #56 = Methodref          #443.#444     // com/fasterxml/jackson/core/io/IOContext.allocNameCopyBuffer:(I)[C\n+   #57 = Methodref          #95.#445      // java/lang/String.getChars:(II[CI)V\n+   #58 = Methodref          #408.#446     // com/fasterxml/jackson/core/util/TextBuffer.getTextBuffer:()[C\n+   #59 = Methodref          #408.#447     // com/fasterxml/jackson/core/util/TextBuffer.size:()I\n+   #60 = Methodref          #408.#448     // com/fasterxml/jackson/core/util/TextBuffer.getTextOffset:()I\n+   #61 = String             #449          // Current token (%s) not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary\n+   #62 = Methodref          #9.#450       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._reportError:(Ljava/lang/String;Ljava/lang/Object;)V\n+   #63 = Fieldref           #9.#451       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._binaryValue:[B\n+   #64 = Methodref          #9.#452       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._getByteArrayBuilder:()Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n+   #65 = Methodref          #9.#453       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase.getText:()Ljava/lang/String;\n+   #66 = Methodref          #9.#454       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._decodeBase64:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;Lcom/fasterxml/jackson/core/Base64Variant;)V\n+   #67 = Methodref          #455.#456     // com/fasterxml/jackson/core/util/ByteArrayBuilder.toByteArray:()[B\n+   #68 = Methodref          #9.#457       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase.getBinaryValue:(Lcom/fasterxml/jackson/core/Base64Variant;)[B\n+   #69 = Methodref          #458.#459     // java/io/OutputStream.write:([B)V\n+   #70 = Fieldref           #302.#460     // com/fasterxml/jackson/core/JsonToken.VALUE_EMBEDDED_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+   #71 = Methodref          #332.#461     // com/fasterxml/jackson/core/json/JsonReadContext.createChildArrayContext:(II)Lcom/fasterxml/jackson/core/json/JsonReadContext;\n+   #72 = Fieldref           #302.#462     // com/fasterxml/jackson/core/JsonToken.START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n+   #73 = Methodref          #332.#463     // com/fasterxml/jackson/core/json/JsonReadContext.createChildObjectContext:(II)Lcom/fasterxml/jackson/core/json/JsonReadContext;\n+   #74 = Fieldref           #302.#464     // com/fasterxml/jackson/core/JsonToken.START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+   #75 = Methodref          #332.#465     // com/fasterxml/jackson/core/json/JsonReadContext.inArray:()Z\n+   #76 = Methodref          #9.#466       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._reportMismatchedEndMarker:(IC)V\n+   #77 = Methodref          #332.#467     // com/fasterxml/jackson/core/json/JsonReadContext.getParent:()Lcom/fasterxml/jackson/core/json/JsonReadContext;\n+   #78 = Methodref          #332.#468     // com/fasterxml/jackson/core/json/JsonReadContext.inObject:()Z\n+   #79 = Fieldref           #302.#469     // com/fasterxml/jackson/core/JsonToken.END_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n+   #80 = Fieldref           #302.#470     // com/fasterxml/jackson/core/JsonToken.END_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+   #81 = Methodref          #9.#471       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._padLastQuad:(II)I\n+   #82 = Methodref          #403.#472     // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(I)Ljava/lang/String;\n+   #83 = Methodref          #9.#473       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._addName:([III)Ljava/lang/String;\n+   #84 = Methodref          #403.#474     // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(II)Ljava/lang/String;\n+   #85 = Methodref          #403.#475     // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(III)Ljava/lang/String;\n+   #86 = Methodref          #408.#476     // com/fasterxml/jackson/core/util/TextBuffer.emptyAndGetCurrentSegment:()[C\n+   #87 = Methodref          #9.#477       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._reportInvalidInitial:(I)V\n+   #88 = String             #478          //  in field name\n+   #89 = Methodref          #9.#479       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._reportInvalidEOF:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n+   #90 = Methodref          #9.#480       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._reportInvalidOther:(I)V\n    #91 = Integer            65536\n-   #92 = Methodref          #410.#484     // com/fasterxml/jackson/core/util/TextBuffer.expandCurrentSegment:()[C\n+   #92 = Methodref          #408.#481     // com/fasterxml/jackson/core/util/TextBuffer.expandCurrentSegment:()[C\n    #93 = Integer            55296\n    #94 = Integer            56320\n-   #95 = Class              #485          // java/lang/String\n-   #96 = Methodref          #95.#486      // java/lang/String.\"<init>\":([CII)V\n-   #97 = Methodref          #404.#487     // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.addName:(Ljava/lang/String;[II)Ljava/lang/String;\n-   #98 = Methodref          #430.#488     // com/fasterxml/jackson/core/json/JsonReadContext.inRoot:()Z\n-   #99 = Methodref          #9.#489       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._handleEOF:()V\n-  #100 = Methodref          #9.#490       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase.close:()V\n-  #101 = Methodref          #430.#491     // com/fasterxml/jackson/core/json/JsonReadContext.setCurrentName:(Ljava/lang/String;)V\n-  #102 = Methodref          #410.#492     // com/fasterxml/jackson/core/util/TextBuffer.resetWithString:(Ljava/lang/String;)V\n-  #103 = Fieldref           #9.#493       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._intLength:I\n-  #104 = Class              #494          // com/fasterxml/jackson/core/base/ParserMinimalBase\n-  #105 = Fieldref           #9.#495       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._numTypesValid:I\n-  #106 = Fieldref           #9.#496       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._numberInt:I\n-  #107 = Fieldref           #407.#497     // com/fasterxml/jackson/core/JsonToken.VALUE_NUMBER_INT:Lcom/fasterxml/jackson/core/JsonToken;\n-  #108 = Fieldref           #9.#498       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase.NON_STD_TOKENS:[Ljava/lang/String;\n-  #109 = Fieldref           #499.#500     // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_NON_NUMERIC_NUMBERS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-  #110 = Methodref          #9.#501       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase.isEnabled:(Lcom/fasterxml/jackson/core/JsonParser$Feature;)Z\n-  #111 = String             #502          // Non-standard token \\'%s\\': enable `JsonReadFeature.ALLOW_NON_NUMERIC_NUMBERS` to allow\n-  #112 = Fieldref           #9.#503       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase.NON_STD_TOKEN_VALUES:[D\n-  #113 = Fieldref           #9.#504       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._numberDouble:D\n-  #114 = Fieldref           #407.#505     // com/fasterxml/jackson/core/JsonToken.VALUE_NUMBER_FLOAT:Lcom/fasterxml/jackson/core/JsonToken;\n-  #115 = Methodref          #9.#506       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._throwInvalidSpace:(I)V\n-  #116 = Class              #507          // java/lang/StringBuilder\n-  #117 = Methodref          #116.#508     // java/lang/StringBuilder.\"<init>\":()V\n-  #118 = String             #509          // Invalid UTF-8 start byte 0x\n-  #119 = Methodref          #116.#510     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #120 = Methodref          #511.#512     // java/lang/Integer.toHexString:(I)Ljava/lang/String;\n-  #121 = Methodref          #116.#513     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #122 = String             #514          // Invalid UTF-8 middle byte 0x\n-  #123 = String             #515          // NaN\n-  #124 = String             #516          // Infinity\n-  #125 = String             #517          // +Infinity\n-  #126 = String             #518          // -Infinity\n-  #127 = Class              #519          // java/lang/Double\n+   #95 = Class              #482          // java/lang/String\n+   #96 = Methodref          #95.#483      // java/lang/String.\"<init>\":([CII)V\n+   #97 = Methodref          #403.#484     // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.addName:(Ljava/lang/String;[II)Ljava/lang/String;\n+   #98 = Methodref          #332.#485     // com/fasterxml/jackson/core/json/JsonReadContext.inRoot:()Z\n+   #99 = Methodref          #9.#486       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._handleEOF:()V\n+  #100 = Methodref          #9.#487       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase.close:()V\n+  #101 = Methodref          #332.#488     // com/fasterxml/jackson/core/json/JsonReadContext.setCurrentName:(Ljava/lang/String;)V\n+  #102 = Methodref          #408.#489     // com/fasterxml/jackson/core/util/TextBuffer.resetWithString:(Ljava/lang/String;)V\n+  #103 = Fieldref           #9.#490       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._intLength:I\n+  #104 = Class              #491          // com/fasterxml/jackson/core/base/ParserMinimalBase\n+  #105 = Fieldref           #9.#492       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._numTypesValid:I\n+  #106 = Fieldref           #9.#493       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._numberInt:I\n+  #107 = Fieldref           #302.#494     // com/fasterxml/jackson/core/JsonToken.VALUE_NUMBER_INT:Lcom/fasterxml/jackson/core/JsonToken;\n+  #108 = Fieldref           #9.#495       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase.NON_STD_TOKENS:[Ljava/lang/String;\n+  #109 = Fieldref           #496.#497     // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_NON_NUMERIC_NUMBERS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+  #110 = Methodref          #9.#498       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase.isEnabled:(Lcom/fasterxml/jackson/core/JsonParser$Feature;)Z\n+  #111 = String             #499          // Non-standard token \\'%s\\': enable `JsonReadFeature.ALLOW_NON_NUMERIC_NUMBERS` to allow\n+  #112 = Fieldref           #9.#500       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase.NON_STD_TOKEN_VALUES:[D\n+  #113 = Fieldref           #9.#501       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._numberDouble:D\n+  #114 = Fieldref           #302.#502     // com/fasterxml/jackson/core/JsonToken.VALUE_NUMBER_FLOAT:Lcom/fasterxml/jackson/core/JsonToken;\n+  #115 = Methodref          #9.#503       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase._throwInvalidSpace:(I)V\n+  #116 = Class              #504          // java/lang/StringBuilder\n+  #117 = Methodref          #116.#505     // java/lang/StringBuilder.\"<init>\":()V\n+  #118 = String             #506          // Invalid UTF-8 start byte 0x\n+  #119 = Methodref          #116.#507     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #120 = Methodref          #508.#509     // java/lang/Integer.toHexString:(I)Ljava/lang/String;\n+  #121 = Methodref          #116.#510     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #122 = String             #511          // Invalid UTF-8 middle byte 0x\n+  #123 = String             #512          // NaN\n+  #124 = String             #513          // Infinity\n+  #125 = String             #514          // +Infinity\n+  #126 = String             #515          // -Infinity\n+  #127 = Class              #516          // java/lang/Double\n   #128 = Double             NaNd\n   #130 = Double             Infinityd\n   #132 = Double             -Infinityd\n-  #134 = Class              #520          // com/fasterxml/jackson/core/base/ParserBase\n+  #134 = Class              #517          // com/fasterxml/jackson/core/base/ParserBase\n   #135 = Utf8               MAJOR_INITIAL\n   #136 = Utf8               I\n   #137 = Utf8               ConstantValue\n   #138 = Integer            0\n   #139 = Utf8               MAJOR_ROOT\n   #140 = Integer            1\n   #141 = Utf8               MAJOR_OBJECT_FIELD_FIRST\n@@ -275,15 +275,15 @@\n   #269 = Utf8               Signature\n   #270 = Utf8               ()Lcom/fasterxml/jackson/core/util/JacksonFeatureSet<Lcom/fasterxml/jackson/core/StreamReadCapability;>;\n   #271 = Utf8               symbolTableForTests\n   #272 = Utf8               ()Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n   #273 = Utf8               releaseBuffered\n   #274 = Utf8               (Ljava/io/OutputStream;)I\n   #275 = Utf8               Exceptions\n-  #276 = Class              #521          // java/io/IOException\n+  #276 = Class              #518          // java/io/IOException\n   #277 = Utf8               _releaseBuffers\n   #278 = Utf8               ()V\n   #279 = Utf8               getInputSource\n   #280 = Utf8               ()Ljava/lang/Object;\n   #281 = Utf8               _closeInput\n   #282 = Utf8               hasTextCharacters\n   #283 = Utf8               StackMapTable\n@@ -301,348 +301,345 @@\n   #295 = Utf8               (Ljava/io/Writer;)I\n   #296 = Utf8               n\n   #297 = Utf8               Ljava/lang/String;\n   #298 = Utf8               ch\n   #299 = Utf8               [C\n   #300 = Utf8               writer\n   #301 = Utf8               Ljava/io/Writer;\n-  #302 = Class              #522          // com/fasterxml/jackson/core/JsonToken\n+  #302 = Class              #519          // com/fasterxml/jackson/core/JsonToken\n   #303 = Utf8               getValueAsString\n   #304 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n   #305 = Utf8               defValue\n   #306 = Utf8               getTextCharacters\n   #307 = Utf8               ()[C\n   #308 = Utf8               name\n   #309 = Utf8               nameLen\n-  #310 = Class              #485          // java/lang/String\n-  #311 = Utf8               getTextLength\n-  #312 = Utf8               ()I\n-  #313 = Utf8               getTextOffset\n-  #314 = Utf8               getBinaryValue\n-  #315 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;)[B\n-  #316 = Utf8               builder\n-  #317 = Utf8               Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n-  #318 = Utf8               b64variant\n-  #319 = Utf8               Lcom/fasterxml/jackson/core/Base64Variant;\n-  #320 = Utf8               readBinaryValue\n-  #321 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/OutputStream;)I\n-  #322 = Utf8               out\n-  #323 = Utf8               Ljava/io/OutputStream;\n-  #324 = Utf8               b\n-  #325 = Utf8               [B\n-  #326 = Utf8               getEmbeddedObject\n-  #327 = Utf8               _startArrayScope\n-  #328 = Utf8               ()Lcom/fasterxml/jackson/core/JsonToken;\n-  #329 = Utf8               _startObjectScope\n-  #330 = Utf8               _closeArrayScope\n-  #331 = Utf8               st\n-  #332 = Utf8               Lcom/fasterxml/jackson/core/json/JsonReadContext;\n-  #333 = Class              #523          // com/fasterxml/jackson/core/json/JsonReadContext\n-  #334 = Utf8               _closeObjectScope\n-  #335 = Utf8               _findName\n-  #336 = Utf8               (II)Ljava/lang/String;\n-  #337 = Utf8               q1\n-  #338 = Utf8               lastQuadBytes\n-  #339 = Class              #524          // com/fasterxml/jackson/core/JsonParseException\n-  #340 = Utf8               (III)Ljava/lang/String;\n-  #341 = Utf8               q2\n-  #342 = Utf8               (IIII)Ljava/lang/String;\n-  #343 = Utf8               q3\n-  #344 = Utf8               quads\n-  #345 = Utf8               _addName\n-  #346 = Utf8               ([III)Ljava/lang/String;\n-  #347 = Utf8               lastQuad\n-  #348 = Utf8               needed\n-  #349 = Utf8               ch2\n-  #350 = Utf8               byteIx\n-  #351 = Utf8               ix\n-  #352 = Utf8               qlen\n-  #353 = Utf8               byteLen\n-  #354 = Utf8               cbuf\n-  #355 = Utf8               cix\n-  #356 = Utf8               baseName\n-  #357 = Class              #299          // \"[C\"\n-  #358 = Utf8               _padLastQuad\n-  #359 = Utf8               (II)I\n-  #360 = Utf8               q\n-  #361 = Utf8               bytes\n-  #362 = Utf8               _eofAsNextToken\n-  #363 = Utf8               _fieldComplete\n-  #364 = Utf8               (Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonToken;\n-  #365 = Utf8               _valueComplete\n-  #366 = Utf8               (Lcom/fasterxml/jackson/core/JsonToken;)Lcom/fasterxml/jackson/core/JsonToken;\n-  #367 = Utf8               _valueCompleteInt\n-  #368 = Utf8               (ILjava/lang/String;)Lcom/fasterxml/jackson/core/JsonToken;\n-  #369 = Utf8               value\n-  #370 = Utf8               asText\n-  #371 = Utf8               _valueNonStdNumberComplete\n-  #372 = Utf8               (I)Lcom/fasterxml/jackson/core/JsonToken;\n-  #373 = Utf8               type\n-  #374 = Utf8               tokenStr\n-  #375 = Utf8               _nonStdToken\n-  #376 = Utf8               (I)Ljava/lang/String;\n-  #377 = Utf8               _updateTokenLocation\n-  #378 = Utf8               ptr\n-  #379 = Utf8               _reportInvalidChar\n-  #380 = Utf8               (I)V\n-  #381 = Utf8               _reportInvalidInitial\n-  #382 = Utf8               mask\n-  #383 = Utf8               _reportInvalidOther\n-  #384 = Utf8               (II)V\n-  #385 = Utf8               <clinit>\n-  #386 = Utf8               SourceFile\n-  #387 = Utf8               NonBlockingJsonParserBase.java\n-  #388 = Utf8               com/fasterxml/jackson/core/JsonTokenId\n-  #389 = NameAndType        #248:#525     // \"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;I)V\n-  #390 = NameAndType        #223:#224     // _quadBuffer:[I\n-  #391 = NameAndType        #235:#236     // _endOfInput:Z\n-  #392 = NameAndType        #246:#136     // _currBufferStart:I\n-  #393 = NameAndType        #247:#136     // _currInputRowAlt:I\n-  #394 = NameAndType        #221:#222     // _symbols:Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n-  #395 = NameAndType        #526:#294     // _currToken:Lcom/fasterxml/jackson/core/JsonToken;\n-  #396 = Utf8               com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase\n-  #397 = NameAndType        #231:#136     // _majorState:I\n-  #398 = NameAndType        #232:#136     // _majorStateAfterValue:I\n-  #399 = Utf8               java/lang/UnsupportedOperationException\n-  #400 = Utf8               Can not use ObjectMapper with non-blocking parser\n-  #401 = NameAndType        #248:#527     // \"<init>\":(Ljava/lang/String;)V\n-  #402 = NameAndType        #528:#529     // JSON_READ_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #403 = NameAndType        #277:#278     // _releaseBuffers:()V\n-  #404 = Class              #530          // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer\n-  #405 = NameAndType        #531:#278     // release:()V\n-  #406 = NameAndType        #532:#136     // _inputEnd:I\n-  #407 = Class              #522          // com/fasterxml/jackson/core/JsonToken\n-  #408 = NameAndType        #533:#294     // VALUE_STRING:Lcom/fasterxml/jackson/core/JsonToken;\n-  #409 = NameAndType        #534:#535     // _textBuffer:Lcom/fasterxml/jackson/core/util/TextBuffer;\n-  #410 = Class              #536          // com/fasterxml/jackson/core/util/TextBuffer\n-  #411 = NameAndType        #537:#266     // hasTextAsCharacters:()Z\n-  #412 = NameAndType        #538:#294     // FIELD_NAME:Lcom/fasterxml/jackson/core/JsonToken;\n-  #413 = NameAndType        #539:#236     // _nameCopied:Z\n-  #414 = NameAndType        #540:#136     // _inputPtr:I\n-  #415 = NameAndType        #541:#136     // _currInputRowStart:I\n-  #416 = NameAndType        #542:#136     // _currInputRow:I\n-  #417 = Class              #543          // java/lang/Math\n-  #418 = NameAndType        #544:#359     // max:(II)I\n-  #419 = Utf8               com/fasterxml/jackson/core/JsonLocation\n-  #420 = NameAndType        #545:#546     // _contentReference:()Lcom/fasterxml/jackson/core/io/ContentReference;\n-  #421 = NameAndType        #547:#548     // _currInputProcessed:J\n-  #422 = NameAndType        #248:#549     // \"<init>\":(Lcom/fasterxml/jackson/core/io/ContentReference;JJII)V\n-  #423 = NameAndType        #550:#548     // _tokenInputTotal:J\n-  #424 = NameAndType        #551:#136     // _tokenInputRow:I\n-  #425 = NameAndType        #552:#136     // _tokenInputCol:I\n-  #426 = NameAndType        #553:#290     // contentsAsString:()Ljava/lang/String;\n-  #427 = NameAndType        #291:#292     // _getText2:(Lcom/fasterxml/jackson/core/JsonToken;)Ljava/lang/String;\n-  #428 = NameAndType        #554:#312     // id:()I\n-  #429 = NameAndType        #555:#332     // _parsingContext:Lcom/fasterxml/jackson/core/json/JsonReadContext;\n-  #430 = Class              #523          // com/fasterxml/jackson/core/json/JsonReadContext\n-  #431 = NameAndType        #556:#290     // getCurrentName:()Ljava/lang/String;\n-  #432 = NameAndType        #557:#290     // asString:()Ljava/lang/String;\n-  #433 = NameAndType        #558:#295     // contentsToWriter:(Ljava/io/Writer;)I\n-  #434 = Class              #559          // java/io/Writer\n-  #435 = NameAndType        #560:#527     // write:(Ljava/lang/String;)V\n-  #436 = NameAndType        #561:#312     // length:()I\n-  #437 = NameAndType        #562:#266     // isNumeric:()Z\n-  #438 = NameAndType        #563:#294     // NOT_AVAILABLE:Lcom/fasterxml/jackson/core/JsonToken;\n-  #439 = Utf8               Current token not available: can not call this method\n-  #440 = NameAndType        #564:#527     // _reportError:(Ljava/lang/String;)V\n-  #441 = NameAndType        #565:#307     // asCharArray:()[C\n-  #442 = NameAndType        #560:#566     // write:([C)V\n-  #443 = NameAndType        #303:#304     // getValueAsString:(Ljava/lang/String;)Ljava/lang/String;\n-  #444 = NameAndType        #567:#299     // _nameCopyBuffer:[C\n-  #445 = NameAndType        #568:#256     // _ioContext:Lcom/fasterxml/jackson/core/io/IOContext;\n-  #446 = Class              #569          // com/fasterxml/jackson/core/io/IOContext\n-  #447 = NameAndType        #570:#571     // allocNameCopyBuffer:(I)[C\n-  #448 = NameAndType        #572:#573     // getChars:(II[CI)V\n-  #449 = NameAndType        #574:#307     // getTextBuffer:()[C\n-  #450 = NameAndType        #575:#312     // size:()I\n-  #451 = NameAndType        #313:#312     // getTextOffset:()I\n-  #452 = Utf8               Current token (%s) not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary\n-  #453 = NameAndType        #564:#576     // _reportError:(Ljava/lang/String;Ljava/lang/Object;)V\n-  #454 = NameAndType        #577:#325     // _binaryValue:[B\n-  #455 = NameAndType        #578:#579     // _getByteArrayBuilder:()Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n-  #456 = NameAndType        #289:#290     // getText:()Ljava/lang/String;\n-  #457 = NameAndType        #580:#581     // _decodeBase64:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;Lcom/fasterxml/jackson/core/Base64Variant;)V\n-  #458 = Class              #582          // com/fasterxml/jackson/core/util/ByteArrayBuilder\n-  #459 = NameAndType        #583:#584     // toByteArray:()[B\n-  #460 = NameAndType        #314:#315     // getBinaryValue:(Lcom/fasterxml/jackson/core/Base64Variant;)[B\n-  #461 = Class              #585          // java/io/OutputStream\n-  #462 = NameAndType        #560:#586     // write:([B)V\n-  #463 = NameAndType        #587:#294     // VALUE_EMBEDDED_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n-  #464 = NameAndType        #588:#589     // createChildArrayContext:(II)Lcom/fasterxml/jackson/core/json/JsonReadContext;\n-  #465 = NameAndType        #590:#294     // START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n-  #466 = NameAndType        #591:#589     // createChildObjectContext:(II)Lcom/fasterxml/jackson/core/json/JsonReadContext;\n-  #467 = NameAndType        #592:#294     // START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n-  #468 = NameAndType        #593:#266     // inArray:()Z\n-  #469 = NameAndType        #594:#595     // _reportMismatchedEndMarker:(IC)V\n-  #470 = NameAndType        #596:#597     // getParent:()Lcom/fasterxml/jackson/core/json/JsonReadContext;\n-  #471 = NameAndType        #598:#266     // inObject:()Z\n-  #472 = NameAndType        #599:#294     // END_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n-  #473 = NameAndType        #600:#294     // END_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n-  #474 = NameAndType        #358:#359     // _padLastQuad:(II)I\n-  #475 = NameAndType        #601:#376     // findName:(I)Ljava/lang/String;\n-  #476 = NameAndType        #345:#346     // _addName:([III)Ljava/lang/String;\n-  #477 = NameAndType        #601:#336     // findName:(II)Ljava/lang/String;\n-  #478 = NameAndType        #601:#340     // findName:(III)Ljava/lang/String;\n-  #479 = NameAndType        #602:#307     // emptyAndGetCurrentSegment:()[C\n-  #480 = NameAndType        #381:#380     // _reportInvalidInitial:(I)V\n-  #481 = Utf8                in field name\n-  #482 = NameAndType        #603:#604     // _reportInvalidEOF:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n-  #483 = NameAndType        #383:#380     // _reportInvalidOther:(I)V\n-  #484 = NameAndType        #605:#307     // expandCurrentSegment:()[C\n-  #485 = Utf8               java/lang/String\n-  #486 = NameAndType        #248:#606     // \"<init>\":([CII)V\n-  #487 = NameAndType        #607:#608     // addName:(Ljava/lang/String;[II)Ljava/lang/String;\n-  #488 = NameAndType        #609:#266     // inRoot:()Z\n-  #489 = NameAndType        #610:#278     // _handleEOF:()V\n-  #490 = NameAndType        #611:#278     // close:()V\n-  #491 = NameAndType        #612:#527     // setCurrentName:(Ljava/lang/String;)V\n-  #492 = NameAndType        #613:#527     // resetWithString:(Ljava/lang/String;)V\n-  #493 = NameAndType        #614:#136     // _intLength:I\n-  #494 = Utf8               com/fasterxml/jackson/core/base/ParserMinimalBase\n-  #495 = NameAndType        #615:#136     // _numTypesValid:I\n-  #496 = NameAndType        #616:#136     // _numberInt:I\n-  #497 = NameAndType        #617:#294     // VALUE_NUMBER_INT:Lcom/fasterxml/jackson/core/JsonToken;\n-  #498 = NameAndType        #241:#242     // NON_STD_TOKENS:[Ljava/lang/String;\n-  #499 = Class              #619          // com/fasterxml/jackson/core/JsonParser$Feature\n-  #500 = NameAndType        #622:#623     // ALLOW_NON_NUMERIC_NUMBERS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-  #501 = NameAndType        #624:#625     // isEnabled:(Lcom/fasterxml/jackson/core/JsonParser$Feature;)Z\n-  #502 = Utf8               Non-standard token \\'%s\\': enable `JsonReadFeature.ALLOW_NON_NUMERIC_NUMBERS` to allow\n-  #503 = NameAndType        #243:#244     // NON_STD_TOKEN_VALUES:[D\n-  #504 = NameAndType        #626:#627     // _numberDouble:D\n-  #505 = NameAndType        #628:#294     // VALUE_NUMBER_FLOAT:Lcom/fasterxml/jackson/core/JsonToken;\n-  #506 = NameAndType        #629:#380     // _throwInvalidSpace:(I)V\n-  #507 = Utf8               java/lang/StringBuilder\n-  #508 = NameAndType        #248:#278     // \"<init>\":()V\n-  #509 = Utf8               Invalid UTF-8 start byte 0x\n-  #510 = NameAndType        #630:#631     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #511 = Class              #632          // java/lang/Integer\n-  #512 = NameAndType        #633:#376     // toHexString:(I)Ljava/lang/String;\n-  #513 = NameAndType        #634:#290     // toString:()Ljava/lang/String;\n-  #514 = Utf8               Invalid UTF-8 middle byte 0x\n-  #515 = Utf8               NaN\n-  #516 = Utf8               Infinity\n-  #517 = Utf8               +Infinity\n-  #518 = Utf8               -Infinity\n-  #519 = Utf8               java/lang/Double\n-  #520 = Utf8               com/fasterxml/jackson/core/base/ParserBase\n-  #521 = Utf8               java/io/IOException\n-  #522 = Utf8               com/fasterxml/jackson/core/JsonToken\n-  #523 = Utf8               com/fasterxml/jackson/core/json/JsonReadContext\n-  #524 = Utf8               com/fasterxml/jackson/core/JsonParseException\n-  #525 = Utf8               (Lcom/fasterxml/jackson/core/io/IOContext;I)V\n-  #526 = Utf8               _currToken\n-  #527 = Utf8               (Ljava/lang/String;)V\n-  #528 = Utf8               JSON_READ_CAPABILITIES\n-  #529 = Utf8               Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #530 = Utf8               com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer\n-  #531 = Utf8               release\n-  #532 = Utf8               _inputEnd\n-  #533 = Utf8               VALUE_STRING\n-  #534 = Utf8               _textBuffer\n-  #535 = Utf8               Lcom/fasterxml/jackson/core/util/TextBuffer;\n-  #536 = Utf8               com/fasterxml/jackson/core/util/TextBuffer\n-  #537 = Utf8               hasTextAsCharacters\n-  #538 = Utf8               FIELD_NAME\n-  #539 = Utf8               _nameCopied\n-  #540 = Utf8               _inputPtr\n-  #541 = Utf8               _currInputRowStart\n-  #542 = Utf8               _currInputRow\n-  #543 = Utf8               java/lang/Math\n-  #544 = Utf8               max\n-  #545 = Utf8               _contentReference\n-  #546 = Utf8               ()Lcom/fasterxml/jackson/core/io/ContentReference;\n-  #547 = Utf8               _currInputProcessed\n-  #548 = Utf8               J\n-  #549 = Utf8               (Lcom/fasterxml/jackson/core/io/ContentReference;JJII)V\n-  #550 = Utf8               _tokenInputTotal\n-  #551 = Utf8               _tokenInputRow\n-  #552 = Utf8               _tokenInputCol\n-  #553 = Utf8               contentsAsString\n-  #554 = Utf8               id\n-  #555 = Utf8               _parsingContext\n-  #556 = Utf8               getCurrentName\n-  #557 = Utf8               asString\n-  #558 = Utf8               contentsToWriter\n-  #559 = Utf8               java/io/Writer\n-  #560 = Utf8               write\n-  #561 = Utf8               length\n-  #562 = Utf8               isNumeric\n-  #563 = Utf8               NOT_AVAILABLE\n-  #564 = Utf8               _reportError\n-  #565 = Utf8               asCharArray\n-  #566 = Utf8               ([C)V\n-  #567 = Utf8               _nameCopyBuffer\n-  #568 = Utf8               _ioContext\n-  #569 = Utf8               com/fasterxml/jackson/core/io/IOContext\n-  #570 = Utf8               allocNameCopyBuffer\n-  #571 = Utf8               (I)[C\n-  #572 = Utf8               getChars\n-  #573 = Utf8               (II[CI)V\n-  #574 = Utf8               getTextBuffer\n-  #575 = Utf8               size\n-  #576 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)V\n-  #577 = Utf8               _binaryValue\n-  #578 = Utf8               _getByteArrayBuilder\n-  #579 = Utf8               ()Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n-  #580 = Utf8               _decodeBase64\n-  #581 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;Lcom/fasterxml/jackson/core/Base64Variant;)V\n-  #582 = Utf8               com/fasterxml/jackson/core/util/ByteArrayBuilder\n-  #583 = Utf8               toByteArray\n-  #584 = Utf8               ()[B\n-  #585 = Utf8               java/io/OutputStream\n-  #586 = Utf8               ([B)V\n-  #587 = Utf8               VALUE_EMBEDDED_OBJECT\n-  #588 = Utf8               createChildArrayContext\n-  #589 = Utf8               (II)Lcom/fasterxml/jackson/core/json/JsonReadContext;\n-  #590 = Utf8               START_ARRAY\n-  #591 = Utf8               createChildObjectContext\n-  #592 = Utf8               START_OBJECT\n-  #593 = Utf8               inArray\n-  #594 = Utf8               _reportMismatchedEndMarker\n-  #595 = Utf8               (IC)V\n-  #596 = Utf8               getParent\n-  #597 = Utf8               ()Lcom/fasterxml/jackson/core/json/JsonReadContext;\n-  #598 = Utf8               inObject\n-  #599 = Utf8               END_ARRAY\n-  #600 = Utf8               END_OBJECT\n-  #601 = Utf8               findName\n-  #602 = Utf8               emptyAndGetCurrentSegment\n-  #603 = Utf8               _reportInvalidEOF\n-  #604 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n-  #605 = Utf8               expandCurrentSegment\n-  #606 = Utf8               ([CII)V\n-  #607 = Utf8               addName\n-  #608 = Utf8               (Ljava/lang/String;[II)Ljava/lang/String;\n-  #609 = Utf8               inRoot\n-  #610 = Utf8               _handleEOF\n-  #611 = Utf8               close\n-  #612 = Utf8               setCurrentName\n-  #613 = Utf8               resetWithString\n-  #614 = Utf8               _intLength\n-  #615 = Utf8               _numTypesValid\n-  #616 = Utf8               _numberInt\n-  #617 = Utf8               VALUE_NUMBER_INT\n-  #618 = Class              #635          // com/fasterxml/jackson/core/JsonParser\n-  #619 = Utf8               com/fasterxml/jackson/core/JsonParser$Feature\n-  #620 = Utf8               Feature\n-  #621 = Utf8               InnerClasses\n-  #622 = Utf8               ALLOW_NON_NUMERIC_NUMBERS\n-  #623 = Utf8               Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-  #624 = Utf8               isEnabled\n-  #625 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser$Feature;)Z\n-  #626 = Utf8               _numberDouble\n-  #627 = Utf8               D\n-  #628 = Utf8               VALUE_NUMBER_FLOAT\n-  #629 = Utf8               _throwInvalidSpace\n-  #630 = Utf8               append\n-  #631 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #632 = Utf8               java/lang/Integer\n-  #633 = Utf8               toHexString\n-  #634 = Utf8               toString\n-  #635 = Utf8               com/fasterxml/jackson/core/JsonParser\n+  #310 = Utf8               getTextLength\n+  #311 = Utf8               ()I\n+  #312 = Utf8               getTextOffset\n+  #313 = Utf8               getBinaryValue\n+  #314 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;)[B\n+  #315 = Utf8               builder\n+  #316 = Utf8               Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n+  #317 = Utf8               b64variant\n+  #318 = Utf8               Lcom/fasterxml/jackson/core/Base64Variant;\n+  #319 = Utf8               readBinaryValue\n+  #320 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/OutputStream;)I\n+  #321 = Utf8               out\n+  #322 = Utf8               Ljava/io/OutputStream;\n+  #323 = Utf8               b\n+  #324 = Utf8               [B\n+  #325 = Utf8               getEmbeddedObject\n+  #326 = Utf8               _startArrayScope\n+  #327 = Utf8               ()Lcom/fasterxml/jackson/core/JsonToken;\n+  #328 = Utf8               _startObjectScope\n+  #329 = Utf8               _closeArrayScope\n+  #330 = Utf8               st\n+  #331 = Utf8               Lcom/fasterxml/jackson/core/json/JsonReadContext;\n+  #332 = Class              #520          // com/fasterxml/jackson/core/json/JsonReadContext\n+  #333 = Utf8               _closeObjectScope\n+  #334 = Utf8               _findName\n+  #335 = Utf8               (II)Ljava/lang/String;\n+  #336 = Utf8               q1\n+  #337 = Utf8               lastQuadBytes\n+  #338 = Class              #521          // com/fasterxml/jackson/core/JsonParseException\n+  #339 = Utf8               (III)Ljava/lang/String;\n+  #340 = Utf8               q2\n+  #341 = Utf8               (IIII)Ljava/lang/String;\n+  #342 = Utf8               q3\n+  #343 = Utf8               quads\n+  #344 = Utf8               _addName\n+  #345 = Utf8               ([III)Ljava/lang/String;\n+  #346 = Utf8               lastQuad\n+  #347 = Utf8               needed\n+  #348 = Utf8               ch2\n+  #349 = Utf8               byteIx\n+  #350 = Utf8               ix\n+  #351 = Utf8               qlen\n+  #352 = Utf8               byteLen\n+  #353 = Utf8               cbuf\n+  #354 = Utf8               cix\n+  #355 = Utf8               baseName\n+  #356 = Class              #299          // \"[C\"\n+  #357 = Utf8               _padLastQuad\n+  #358 = Utf8               (II)I\n+  #359 = Utf8               q\n+  #360 = Utf8               bytes\n+  #361 = Utf8               _eofAsNextToken\n+  #362 = Utf8               _fieldComplete\n+  #363 = Utf8               (Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonToken;\n+  #364 = Utf8               _valueComplete\n+  #365 = Utf8               (Lcom/fasterxml/jackson/core/JsonToken;)Lcom/fasterxml/jackson/core/JsonToken;\n+  #366 = Utf8               _valueCompleteInt\n+  #367 = Utf8               (ILjava/lang/String;)Lcom/fasterxml/jackson/core/JsonToken;\n+  #368 = Utf8               value\n+  #369 = Utf8               asText\n+  #370 = Utf8               _valueNonStdNumberComplete\n+  #371 = Utf8               (I)Lcom/fasterxml/jackson/core/JsonToken;\n+  #372 = Utf8               type\n+  #373 = Utf8               tokenStr\n+  #374 = Utf8               _nonStdToken\n+  #375 = Utf8               (I)Ljava/lang/String;\n+  #376 = Utf8               _updateTokenLocation\n+  #377 = Utf8               ptr\n+  #378 = Utf8               _reportInvalidChar\n+  #379 = Utf8               (I)V\n+  #380 = Utf8               _reportInvalidInitial\n+  #381 = Utf8               mask\n+  #382 = Utf8               _reportInvalidOther\n+  #383 = Utf8               (II)V\n+  #384 = Utf8               <clinit>\n+  #385 = Utf8               SourceFile\n+  #386 = Utf8               NonBlockingJsonParserBase.java\n+  #387 = Utf8               com/fasterxml/jackson/core/JsonTokenId\n+  #388 = NameAndType        #248:#522     // \"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;I)V\n+  #389 = NameAndType        #223:#224     // _quadBuffer:[I\n+  #390 = NameAndType        #235:#236     // _endOfInput:Z\n+  #391 = NameAndType        #246:#136     // _currBufferStart:I\n+  #392 = NameAndType        #247:#136     // _currInputRowAlt:I\n+  #393 = NameAndType        #221:#222     // _symbols:Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n+  #394 = NameAndType        #523:#294     // _currToken:Lcom/fasterxml/jackson/core/JsonToken;\n+  #395 = Utf8               com/fasterxml/jackson/core/json/async/NonBlockingJsonParserBase\n+  #396 = NameAndType        #231:#136     // _majorState:I\n+  #397 = NameAndType        #232:#136     // _majorStateAfterValue:I\n+  #398 = Utf8               java/lang/UnsupportedOperationException\n+  #399 = Utf8               Can not use ObjectMapper with non-blocking parser\n+  #400 = NameAndType        #248:#524     // \"<init>\":(Ljava/lang/String;)V\n+  #401 = NameAndType        #525:#526     // JSON_READ_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #402 = NameAndType        #277:#278     // _releaseBuffers:()V\n+  #403 = Class              #527          // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer\n+  #404 = NameAndType        #528:#278     // release:()V\n+  #405 = NameAndType        #529:#136     // _inputEnd:I\n+  #406 = NameAndType        #530:#294     // VALUE_STRING:Lcom/fasterxml/jackson/core/JsonToken;\n+  #407 = NameAndType        #531:#532     // _textBuffer:Lcom/fasterxml/jackson/core/util/TextBuffer;\n+  #408 = Class              #533          // com/fasterxml/jackson/core/util/TextBuffer\n+  #409 = NameAndType        #534:#266     // hasTextAsCharacters:()Z\n+  #410 = NameAndType        #535:#294     // FIELD_NAME:Lcom/fasterxml/jackson/core/JsonToken;\n+  #411 = NameAndType        #536:#236     // _nameCopied:Z\n+  #412 = NameAndType        #537:#136     // _inputPtr:I\n+  #413 = NameAndType        #538:#136     // _currInputRowStart:I\n+  #414 = NameAndType        #539:#136     // _currInputRow:I\n+  #415 = Class              #540          // java/lang/Math\n+  #416 = NameAndType        #541:#358     // max:(II)I\n+  #417 = Utf8               com/fasterxml/jackson/core/JsonLocation\n+  #418 = NameAndType        #542:#543     // _contentReference:()Lcom/fasterxml/jackson/core/io/ContentReference;\n+  #419 = NameAndType        #544:#545     // _currInputProcessed:J\n+  #420 = NameAndType        #248:#546     // \"<init>\":(Lcom/fasterxml/jackson/core/io/ContentReference;JJII)V\n+  #421 = NameAndType        #547:#545     // _tokenInputTotal:J\n+  #422 = NameAndType        #548:#136     // _tokenInputRow:I\n+  #423 = NameAndType        #549:#136     // _tokenInputCol:I\n+  #424 = NameAndType        #550:#290     // contentsAsString:()Ljava/lang/String;\n+  #425 = NameAndType        #291:#292     // _getText2:(Lcom/fasterxml/jackson/core/JsonToken;)Ljava/lang/String;\n+  #426 = NameAndType        #551:#311     // id:()I\n+  #427 = NameAndType        #552:#331     // _parsingContext:Lcom/fasterxml/jackson/core/json/JsonReadContext;\n+  #428 = NameAndType        #553:#290     // getCurrentName:()Ljava/lang/String;\n+  #429 = NameAndType        #554:#290     // asString:()Ljava/lang/String;\n+  #430 = NameAndType        #555:#295     // contentsToWriter:(Ljava/io/Writer;)I\n+  #431 = Class              #556          // java/io/Writer\n+  #432 = NameAndType        #557:#524     // write:(Ljava/lang/String;)V\n+  #433 = NameAndType        #558:#311     // length:()I\n+  #434 = NameAndType        #559:#266     // isNumeric:()Z\n+  #435 = NameAndType        #560:#294     // NOT_AVAILABLE:Lcom/fasterxml/jackson/core/JsonToken;\n+  #436 = Utf8               Current token not available: can not call this method\n+  #437 = NameAndType        #561:#524     // _reportError:(Ljava/lang/String;)V\n+  #438 = NameAndType        #562:#307     // asCharArray:()[C\n+  #439 = NameAndType        #557:#563     // write:([C)V\n+  #440 = NameAndType        #303:#304     // getValueAsString:(Ljava/lang/String;)Ljava/lang/String;\n+  #441 = NameAndType        #564:#299     // _nameCopyBuffer:[C\n+  #442 = NameAndType        #565:#256     // _ioContext:Lcom/fasterxml/jackson/core/io/IOContext;\n+  #443 = Class              #566          // com/fasterxml/jackson/core/io/IOContext\n+  #444 = NameAndType        #567:#568     // allocNameCopyBuffer:(I)[C\n+  #445 = NameAndType        #569:#570     // getChars:(II[CI)V\n+  #446 = NameAndType        #571:#307     // getTextBuffer:()[C\n+  #447 = NameAndType        #572:#311     // size:()I\n+  #448 = NameAndType        #312:#311     // getTextOffset:()I\n+  #449 = Utf8               Current token (%s) not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary\n+  #450 = NameAndType        #561:#573     // _reportError:(Ljava/lang/String;Ljava/lang/Object;)V\n+  #451 = NameAndType        #574:#324     // _binaryValue:[B\n+  #452 = NameAndType        #575:#576     // _getByteArrayBuilder:()Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n+  #453 = NameAndType        #289:#290     // getText:()Ljava/lang/String;\n+  #454 = NameAndType        #577:#578     // _decodeBase64:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;Lcom/fasterxml/jackson/core/Base64Variant;)V\n+  #455 = Class              #579          // com/fasterxml/jackson/core/util/ByteArrayBuilder\n+  #456 = NameAndType        #580:#581     // toByteArray:()[B\n+  #457 = NameAndType        #313:#314     // getBinaryValue:(Lcom/fasterxml/jackson/core/Base64Variant;)[B\n+  #458 = Class              #582          // java/io/OutputStream\n+  #459 = NameAndType        #557:#583     // write:([B)V\n+  #460 = NameAndType        #584:#294     // VALUE_EMBEDDED_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+  #461 = NameAndType        #585:#586     // createChildArrayContext:(II)Lcom/fasterxml/jackson/core/json/JsonReadContext;\n+  #462 = NameAndType        #587:#294     // START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n+  #463 = NameAndType        #588:#586     // createChildObjectContext:(II)Lcom/fasterxml/jackson/core/json/JsonReadContext;\n+  #464 = NameAndType        #589:#294     // START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+  #465 = NameAndType        #590:#266     // inArray:()Z\n+  #466 = NameAndType        #591:#592     // _reportMismatchedEndMarker:(IC)V\n+  #467 = NameAndType        #593:#594     // getParent:()Lcom/fasterxml/jackson/core/json/JsonReadContext;\n+  #468 = NameAndType        #595:#266     // inObject:()Z\n+  #469 = NameAndType        #596:#294     // END_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n+  #470 = NameAndType        #597:#294     // END_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+  #471 = NameAndType        #357:#358     // _padLastQuad:(II)I\n+  #472 = NameAndType        #598:#375     // findName:(I)Ljava/lang/String;\n+  #473 = NameAndType        #344:#345     // _addName:([III)Ljava/lang/String;\n+  #474 = NameAndType        #598:#335     // findName:(II)Ljava/lang/String;\n+  #475 = NameAndType        #598:#339     // findName:(III)Ljava/lang/String;\n+  #476 = NameAndType        #599:#307     // emptyAndGetCurrentSegment:()[C\n+  #477 = NameAndType        #380:#379     // _reportInvalidInitial:(I)V\n+  #478 = Utf8                in field name\n+  #479 = NameAndType        #600:#601     // _reportInvalidEOF:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n+  #480 = NameAndType        #382:#379     // _reportInvalidOther:(I)V\n+  #481 = NameAndType        #602:#307     // expandCurrentSegment:()[C\n+  #482 = Utf8               java/lang/String\n+  #483 = NameAndType        #248:#603     // \"<init>\":([CII)V\n+  #484 = NameAndType        #604:#605     // addName:(Ljava/lang/String;[II)Ljava/lang/String;\n+  #485 = NameAndType        #606:#266     // inRoot:()Z\n+  #486 = NameAndType        #607:#278     // _handleEOF:()V\n+  #487 = NameAndType        #608:#278     // close:()V\n+  #488 = NameAndType        #609:#524     // setCurrentName:(Ljava/lang/String;)V\n+  #489 = NameAndType        #610:#524     // resetWithString:(Ljava/lang/String;)V\n+  #490 = NameAndType        #611:#136     // _intLength:I\n+  #491 = Utf8               com/fasterxml/jackson/core/base/ParserMinimalBase\n+  #492 = NameAndType        #612:#136     // _numTypesValid:I\n+  #493 = NameAndType        #613:#136     // _numberInt:I\n+  #494 = NameAndType        #614:#294     // VALUE_NUMBER_INT:Lcom/fasterxml/jackson/core/JsonToken;\n+  #495 = NameAndType        #241:#242     // NON_STD_TOKENS:[Ljava/lang/String;\n+  #496 = Class              #616          // com/fasterxml/jackson/core/JsonParser$Feature\n+  #497 = NameAndType        #619:#620     // ALLOW_NON_NUMERIC_NUMBERS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+  #498 = NameAndType        #621:#622     // isEnabled:(Lcom/fasterxml/jackson/core/JsonParser$Feature;)Z\n+  #499 = Utf8               Non-standard token \\'%s\\': enable `JsonReadFeature.ALLOW_NON_NUMERIC_NUMBERS` to allow\n+  #500 = NameAndType        #243:#244     // NON_STD_TOKEN_VALUES:[D\n+  #501 = NameAndType        #623:#624     // _numberDouble:D\n+  #502 = NameAndType        #625:#294     // VALUE_NUMBER_FLOAT:Lcom/fasterxml/jackson/core/JsonToken;\n+  #503 = NameAndType        #626:#379     // _throwInvalidSpace:(I)V\n+  #504 = Utf8               java/lang/StringBuilder\n+  #505 = NameAndType        #248:#278     // \"<init>\":()V\n+  #506 = Utf8               Invalid UTF-8 start byte 0x\n+  #507 = NameAndType        #627:#628     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #508 = Class              #629          // java/lang/Integer\n+  #509 = NameAndType        #630:#375     // toHexString:(I)Ljava/lang/String;\n+  #510 = NameAndType        #631:#290     // toString:()Ljava/lang/String;\n+  #511 = Utf8               Invalid UTF-8 middle byte 0x\n+  #512 = Utf8               NaN\n+  #513 = Utf8               Infinity\n+  #514 = Utf8               +Infinity\n+  #515 = Utf8               -Infinity\n+  #516 = Utf8               java/lang/Double\n+  #517 = Utf8               com/fasterxml/jackson/core/base/ParserBase\n+  #518 = Utf8               java/io/IOException\n+  #519 = Utf8               com/fasterxml/jackson/core/JsonToken\n+  #520 = Utf8               com/fasterxml/jackson/core/json/JsonReadContext\n+  #521 = Utf8               com/fasterxml/jackson/core/JsonParseException\n+  #522 = Utf8               (Lcom/fasterxml/jackson/core/io/IOContext;I)V\n+  #523 = Utf8               _currToken\n+  #524 = Utf8               (Ljava/lang/String;)V\n+  #525 = Utf8               JSON_READ_CAPABILITIES\n+  #526 = Utf8               Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #527 = Utf8               com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer\n+  #528 = Utf8               release\n+  #529 = Utf8               _inputEnd\n+  #530 = Utf8               VALUE_STRING\n+  #531 = Utf8               _textBuffer\n+  #532 = Utf8               Lcom/fasterxml/jackson/core/util/TextBuffer;\n+  #533 = Utf8               com/fasterxml/jackson/core/util/TextBuffer\n+  #534 = Utf8               hasTextAsCharacters\n+  #535 = Utf8               FIELD_NAME\n+  #536 = Utf8               _nameCopied\n+  #537 = Utf8               _inputPtr\n+  #538 = Utf8               _currInputRowStart\n+  #539 = Utf8               _currInputRow\n+  #540 = Utf8               java/lang/Math\n+  #541 = Utf8               max\n+  #542 = Utf8               _contentReference\n+  #543 = Utf8               ()Lcom/fasterxml/jackson/core/io/ContentReference;\n+  #544 = Utf8               _currInputProcessed\n+  #545 = Utf8               J\n+  #546 = Utf8               (Lcom/fasterxml/jackson/core/io/ContentReference;JJII)V\n+  #547 = Utf8               _tokenInputTotal\n+  #548 = Utf8               _tokenInputRow\n+  #549 = Utf8               _tokenInputCol\n+  #550 = Utf8               contentsAsString\n+  #551 = Utf8               id\n+  #552 = Utf8               _parsingContext\n+  #553 = Utf8               getCurrentName\n+  #554 = Utf8               asString\n+  #555 = Utf8               contentsToWriter\n+  #556 = Utf8               java/io/Writer\n+  #557 = Utf8               write\n+  #558 = Utf8               length\n+  #559 = Utf8               isNumeric\n+  #560 = Utf8               NOT_AVAILABLE\n+  #561 = Utf8               _reportError\n+  #562 = Utf8               asCharArray\n+  #563 = Utf8               ([C)V\n+  #564 = Utf8               _nameCopyBuffer\n+  #565 = Utf8               _ioContext\n+  #566 = Utf8               com/fasterxml/jackson/core/io/IOContext\n+  #567 = Utf8               allocNameCopyBuffer\n+  #568 = Utf8               (I)[C\n+  #569 = Utf8               getChars\n+  #570 = Utf8               (II[CI)V\n+  #571 = Utf8               getTextBuffer\n+  #572 = Utf8               size\n+  #573 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)V\n+  #574 = Utf8               _binaryValue\n+  #575 = Utf8               _getByteArrayBuilder\n+  #576 = Utf8               ()Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n+  #577 = Utf8               _decodeBase64\n+  #578 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;Lcom/fasterxml/jackson/core/Base64Variant;)V\n+  #579 = Utf8               com/fasterxml/jackson/core/util/ByteArrayBuilder\n+  #580 = Utf8               toByteArray\n+  #581 = Utf8               ()[B\n+  #582 = Utf8               java/io/OutputStream\n+  #583 = Utf8               ([B)V\n+  #584 = Utf8               VALUE_EMBEDDED_OBJECT\n+  #585 = Utf8               createChildArrayContext\n+  #586 = Utf8               (II)Lcom/fasterxml/jackson/core/json/JsonReadContext;\n+  #587 = Utf8               START_ARRAY\n+  #588 = Utf8               createChildObjectContext\n+  #589 = Utf8               START_OBJECT\n+  #590 = Utf8               inArray\n+  #591 = Utf8               _reportMismatchedEndMarker\n+  #592 = Utf8               (IC)V\n+  #593 = Utf8               getParent\n+  #594 = Utf8               ()Lcom/fasterxml/jackson/core/json/JsonReadContext;\n+  #595 = Utf8               inObject\n+  #596 = Utf8               END_ARRAY\n+  #597 = Utf8               END_OBJECT\n+  #598 = Utf8               findName\n+  #599 = Utf8               emptyAndGetCurrentSegment\n+  #600 = Utf8               _reportInvalidEOF\n+  #601 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n+  #602 = Utf8               expandCurrentSegment\n+  #603 = Utf8               ([CII)V\n+  #604 = Utf8               addName\n+  #605 = Utf8               (Ljava/lang/String;[II)Ljava/lang/String;\n+  #606 = Utf8               inRoot\n+  #607 = Utf8               _handleEOF\n+  #608 = Utf8               close\n+  #609 = Utf8               setCurrentName\n+  #610 = Utf8               resetWithString\n+  #611 = Utf8               _intLength\n+  #612 = Utf8               _numTypesValid\n+  #613 = Utf8               _numberInt\n+  #614 = Utf8               VALUE_NUMBER_INT\n+  #615 = Class              #632          // com/fasterxml/jackson/core/JsonParser\n+  #616 = Utf8               com/fasterxml/jackson/core/JsonParser$Feature\n+  #617 = Utf8               Feature\n+  #618 = Utf8               InnerClasses\n+  #619 = Utf8               ALLOW_NON_NUMERIC_NUMBERS\n+  #620 = Utf8               Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+  #621 = Utf8               isEnabled\n+  #622 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser$Feature;)Z\n+  #623 = Utf8               _numberDouble\n+  #624 = Utf8               D\n+  #625 = Utf8               VALUE_NUMBER_FLOAT\n+  #626 = Utf8               _throwInvalidSpace\n+  #627 = Utf8               append\n+  #628 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #629 = Utf8               java/lang/Integer\n+  #630 = Utf8               toHexString\n+  #631 = Utf8               toString\n+  #632 = Utf8               com/fasterxml/jackson/core/JsonParser\n {\n   protected static final int MAJOR_INITIAL = 0;\n     descriptor: I\n     flags: (0x001c) ACC_PROTECTED, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 0\n \n   protected static final int MAJOR_ROOT = 1;\n@@ -3078,8 +3075,8 @@\n         57: return\n       LineNumberTable:\n         line 210: 0\n         line 215: 27\n }\n SourceFile: \"NonBlockingJsonParserBase.java\"\n InnerClasses:\n-  public static final #620= #499 of #618; // Feature=class com/fasterxml/jackson/core/JsonParser$Feature of class com/fasterxml/jackson/core/JsonParser\n+  public static final #617= #496 of #615; // Feature=class com/fasterxml/jackson/core/JsonParser$Feature of class com/fasterxml/jackson/core/JsonParser\n"}]}
