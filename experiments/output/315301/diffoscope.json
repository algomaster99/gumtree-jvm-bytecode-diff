{"diffoscope-json-version": 1, "source1": "first/AbstractFileFilter.class", "source2": "second/AbstractFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,61 +1,61 @@\n-  SHA-256 checksum 80291f0c8f91582ca32cd72c8da1ac688e2616201aceb0e3953d302193ce3c80\n+  SHA-256 checksum b1a52e89afdd1708490c5072b09be1b3240a22921ff975451aca7fa59e69d3ef\n   Compiled from \"AbstractFileFilter.java\"\n public abstract class org.apache.commons.io.filefilter.AbstractFileFilter implements org.apache.commons.io.filefilter.IOFileFilter\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #10                         // org/apache/commons/io/filefilter/AbstractFileFilter\n-  super_class: #11                        // java/lang/Object\n+  this_class: #18                         // org/apache/commons/io/filefilter/AbstractFileFilter\n+  super_class: #2                         // java/lang/Object\n   interfaces: 1, fields: 0, methods: 4, attributes: 1\n Constant pool:\n-   #1 = Methodref          #11.#24        // java/lang/Object.\"<init>\":()V\n-   #2 = Methodref          #5.#25         // java/io/File.getParentFile:()Ljava/io/File;\n-   #3 = Methodref          #5.#26         // java/io/File.getName:()Ljava/lang/String;\n-   #4 = Methodref          #10.#27        // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n-   #5 = Class              #28            // java/io/File\n-   #6 = Methodref          #5.#29         // java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-   #7 = Methodref          #10.#30        // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/io/File;)Z\n-   #8 = Methodref          #11.#31        // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #9 = Methodref          #32.#33        // java/lang/Class.getSimpleName:()Ljava/lang/String;\n-  #10 = Class              #34            // org/apache/commons/io/filefilter/AbstractFileFilter\n-  #11 = Class              #35            // java/lang/Object\n-  #12 = Class              #36            // org/apache/commons/io/filefilter/IOFileFilter\n-  #13 = Utf8               <init>\n-  #14 = Utf8               ()V\n-  #15 = Utf8               Code\n-  #16 = Utf8               LineNumberTable\n-  #17 = Utf8               accept\n-  #18 = Utf8               (Ljava/io/File;)Z\n-  #19 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n-  #20 = Utf8               toString\n-  #21 = Utf8               ()Ljava/lang/String;\n-  #22 = Utf8               SourceFile\n-  #23 = Utf8               AbstractFileFilter.java\n-  #24 = NameAndType        #13:#14        // \"<init>\":()V\n-  #25 = NameAndType        #37:#38        // getParentFile:()Ljava/io/File;\n-  #26 = NameAndType        #39:#21        // getName:()Ljava/lang/String;\n-  #27 = NameAndType        #17:#19        // accept:(Ljava/io/File;Ljava/lang/String;)Z\n-  #28 = Utf8               java/io/File\n-  #29 = NameAndType        #13:#40        // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-  #30 = NameAndType        #17:#18        // accept:(Ljava/io/File;)Z\n-  #31 = NameAndType        #41:#42        // getClass:()Ljava/lang/Class;\n-  #32 = Class              #43            // java/lang/Class\n-  #33 = NameAndType        #44:#21        // getSimpleName:()Ljava/lang/String;\n-  #34 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-  #35 = Utf8               java/lang/Object\n-  #36 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n-  #37 = Utf8               getParentFile\n-  #38 = Utf8               ()Ljava/io/File;\n-  #39 = Utf8               getName\n-  #40 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n-  #41 = Utf8               getClass\n-  #42 = Utf8               ()Ljava/lang/Class;\n-  #43 = Utf8               java/lang/Class\n-  #44 = Utf8               getSimpleName\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Methodref          #8.#9          // java/io/File.getParentFile:()Ljava/io/File;\n+   #8 = Class              #10            // java/io/File\n+   #9 = NameAndType        #11:#12        // getParentFile:()Ljava/io/File;\n+  #10 = Utf8               java/io/File\n+  #11 = Utf8               getParentFile\n+  #12 = Utf8               ()Ljava/io/File;\n+  #13 = Methodref          #8.#14         // java/io/File.getName:()Ljava/lang/String;\n+  #14 = NameAndType        #15:#16        // getName:()Ljava/lang/String;\n+  #15 = Utf8               getName\n+  #16 = Utf8               ()Ljava/lang/String;\n+  #17 = Methodref          #18.#19        // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n+  #18 = Class              #20            // org/apache/commons/io/filefilter/AbstractFileFilter\n+  #19 = NameAndType        #21:#22        // accept:(Ljava/io/File;Ljava/lang/String;)Z\n+  #20 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+  #21 = Utf8               accept\n+  #22 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+  #23 = Methodref          #8.#24         // java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+  #24 = NameAndType        #5:#25         // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+  #25 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n+  #26 = Methodref          #18.#27        // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/io/File;)Z\n+  #27 = NameAndType        #21:#28        // accept:(Ljava/io/File;)Z\n+  #28 = Utf8               (Ljava/io/File;)Z\n+  #29 = Methodref          #2.#30         // java/lang/Object.getClass:()Ljava/lang/Class;\n+  #30 = NameAndType        #31:#32        // getClass:()Ljava/lang/Class;\n+  #31 = Utf8               getClass\n+  #32 = Utf8               ()Ljava/lang/Class;\n+  #33 = Methodref          #34.#35        // java/lang/Class.getSimpleName:()Ljava/lang/String;\n+  #34 = Class              #36            // java/lang/Class\n+  #35 = NameAndType        #37:#16        // getSimpleName:()Ljava/lang/String;\n+  #36 = Utf8               java/lang/Class\n+  #37 = Utf8               getSimpleName\n+  #38 = Class              #39            // org/apache/commons/io/filefilter/IOFileFilter\n+  #39 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n+  #40 = Utf8               Code\n+  #41 = Utf8               LineNumberTable\n+  #42 = Utf8               toString\n+  #43 = Utf8               SourceFile\n+  #44 = Utf8               AbstractFileFilter.java\n {\n   public org.apache.commons.io.filefilter.AbstractFileFilter();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -67,44 +67,44 @@\n   public boolean accept(java.io.File);\n     descriptor: (Ljava/io/File;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #2                  // Method java/io/File.getParentFile:()Ljava/io/File;\n+         2: invokevirtual #7                  // Method java/io/File.getParentFile:()Ljava/io/File;\n          5: aload_1\n-         6: invokevirtual #3                  // Method java/io/File.getName:()Ljava/lang/String;\n-         9: invokevirtual #4                  // Method accept:(Ljava/io/File;Ljava/lang/String;)Z\n+         6: invokevirtual #13                 // Method java/io/File.getName:()Ljava/lang/String;\n+         9: invokevirtual #17                 // Method accept:(Ljava/io/File;Ljava/lang/String;)Z\n         12: ireturn\n       LineNumberTable:\n         line 41: 0\n \n   public boolean accept(java.io.File, java.lang.String);\n     descriptor: (Ljava/io/File;Ljava/lang/String;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n-         1: new           #5                  // class java/io/File\n+         1: new           #8                  // class java/io/File\n          4: dup\n          5: aload_1\n          6: aload_2\n-         7: invokespecial #6                  // Method java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-        10: invokevirtual #7                  // Method accept:(Ljava/io/File;)Z\n+         7: invokespecial #23                 // Method java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+        10: invokevirtual #26                 // Method accept:(Ljava/io/File;)Z\n         13: ireturn\n       LineNumberTable:\n         line 53: 0\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-         4: invokevirtual #9                  // Method java/lang/Class.getSimpleName:()Ljava/lang/String;\n+         1: invokevirtual #29                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+         4: invokevirtual #33                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 63: 0\n }\n SourceFile: \"AbstractFileFilter.java\"\n"}]}
