{"diffoscope-json-version": 1, "source1": "first/UnsupportedZipFeatureException.class", "source2": "second/UnsupportedZipFeatureException.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,99 +1,96 @@\n-  SHA-256 checksum 4b0f73e1de93961d6a0f1e5a0872a7721aacf1d1d95ff3a32be72cad4e1d9a63\n+  SHA-256 checksum f8130d2f5f647ae9b3162fc912f9e76f30d7b04e021f9977478d385cbd0d87f4\n   Compiled from \"UnsupportedZipFeatureException.java\"\n public class org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException extends java.util.zip.ZipException\n   minor version: 0\n-  major version: 53\n+  major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #10                         // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException\n-  super_class: #11                        // java/util/zip/ZipException\n-  interfaces: 0, fields: 3, methods: 5, attributes: 3\n+  this_class: #17                         // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException\n+  super_class: #18                        // java/util/zip/ZipException\n+  interfaces: 0, fields: 3, methods: 5, attributes: 2\n Constant pool:\n-   #1 = Methodref          #41.#42        // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;\n-   #2 = InvokeDynamic      #0:#46         // #0:makeConcatWithConstants:(Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;Ljava/lang/String;)Ljava/lang/String;\n-   #3 = Methodref          #11.#47        // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-   #4 = Fieldref           #10.#48        // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-   #5 = Fieldref           #10.#49        // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-   #6 = Methodref          #50.#51        // org/apache/commons/compress/archivers/zip/ZipMethod.name:()Ljava/lang/String;\n-   #7 = InvokeDynamic      #1:#53         // #1:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-   #8 = Fieldref           #12.#54        // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature.METHOD:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-   #9 = InvokeDynamic      #2:#56         // #2:makeConcatWithConstants:(Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;)Ljava/lang/String;\n-  #10 = Class              #57            // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException\n-  #11 = Class              #58            // java/util/zip/ZipException\n-  #12 = Class              #59            // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature\n-  #13 = Utf8               Feature\n-  #14 = Utf8               InnerClasses\n-  #15 = Utf8               reason\n-  #16 = Utf8               Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-  #17 = Utf8               entry\n-  #18 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #19 = Utf8               serialVersionUID\n-  #20 = Utf8               J\n-  #21 = Utf8               ConstantValue\n-  #22 = Long               20161219l\n-  #24 = Utf8               <init>\n-  #25 = Utf8               (Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n-  #26 = Utf8               Code\n-  #27 = Utf8               LineNumberTable\n-  #28 = Utf8               LocalVariableTable\n-  #29 = Utf8               this\n-  #30 = Utf8               Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException;\n-  #31 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipMethod;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n-  #32 = Utf8               method\n-  #33 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipMethod;\n-  #34 = Utf8               (Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;)V\n-  #35 = Utf8               getFeature\n-  #36 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-  #37 = Utf8               getEntry\n-  #38 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #39 = Utf8               SourceFile\n-  #40 = Utf8               UnsupportedZipFeatureException.java\n-  #41 = Class              #60            // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #42 = NameAndType        #61:#62        // getName:()Ljava/lang/String;\n-  #43 = Utf8               BootstrapMethods\n-  #44 = MethodHandle       6:#63          // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #45 = String             #64            // unsupported feature \\u0001 used in entry \\u0001\n-  #46 = NameAndType        #65:#66        // makeConcatWithConstants:(Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;Ljava/lang/String;)Ljava/lang/String;\n-  #47 = NameAndType        #24:#67        // \"<init>\":(Ljava/lang/String;)V\n-  #48 = NameAndType        #15:#16        // reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-  #49 = NameAndType        #17:#18        // entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #50 = Class              #68            // org/apache/commons/compress/archivers/zip/ZipMethod\n-  #51 = NameAndType        #69:#62        // name:()Ljava/lang/String;\n-  #52 = String             #70            // unsupported feature method \\'\\u0001\\' used in entry \\u0001\n-  #53 = NameAndType        #65:#71        // makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #54 = NameAndType        #72:#16        // METHOD:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-  #55 = String             #73            // unsupported feature \\u0001 used in archive.\n-  #56 = NameAndType        #65:#74        // makeConcatWithConstants:(Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;)Ljava/lang/String;\n-  #57 = Utf8               org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException\n-  #58 = Utf8               java/util/zip/ZipException\n-  #59 = Utf8               org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature\n-  #60 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #61 = Utf8               getName\n-  #62 = Utf8               ()Ljava/lang/String;\n-  #63 = Methodref          #75.#76        // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #64 = Utf8               unsupported feature \\u0001 used in entry \\u0001\n-  #65 = Utf8               makeConcatWithConstants\n-  #66 = Utf8               (Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;Ljava/lang/String;)Ljava/lang/String;\n-  #67 = Utf8               (Ljava/lang/String;)V\n-  #68 = Utf8               org/apache/commons/compress/archivers/zip/ZipMethod\n-  #69 = Utf8               name\n-  #70 = Utf8               unsupported feature method \\'\\u0001\\' used in entry \\u0001\n-  #71 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #72 = Utf8               METHOD\n-  #73 = Utf8               unsupported feature \\u0001 used in archive.\n-  #74 = Utf8               (Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;)Ljava/lang/String;\n-  #75 = Class              #77            // java/lang/invoke/StringConcatFactory\n-  #76 = NameAndType        #65:#80        // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #77 = Utf8               java/lang/invoke/StringConcatFactory\n-  #78 = Class              #82            // java/lang/invoke/MethodHandles$Lookup\n-  #79 = Utf8               Lookup\n-  #80 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #81 = Class              #83            // java/lang/invoke/MethodHandles\n-  #82 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #83 = Utf8               java/lang/invoke/MethodHandles\n+   #1 = Class              #48            // java/lang/StringBuilder\n+   #2 = Methodref          #1.#49         // java/lang/StringBuilder.\"<init>\":()V\n+   #3 = String             #50            // unsupported feature\n+   #4 = Methodref          #1.#51         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #5 = Methodref          #1.#52         // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #6 = String             #53            //  used in entry\n+   #7 = Methodref          #54.#55        // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;\n+   #8 = Methodref          #1.#56         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #9 = Methodref          #18.#57        // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+  #10 = Fieldref           #17.#58        // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+  #11 = Fieldref           #17.#59        // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #12 = String             #60            // unsupported feature method \\'\n+  #13 = Methodref          #61.#62        // org/apache/commons/compress/archivers/zip/ZipMethod.name:()Ljava/lang/String;\n+  #14 = String             #63            // \\' used in entry\n+  #15 = Fieldref           #19.#64        // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature.METHOD:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+  #16 = String             #65            //  used in archive.\n+  #17 = Class              #66            // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException\n+  #18 = Class              #67            // java/util/zip/ZipException\n+  #19 = Class              #68            // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature\n+  #20 = Utf8               Feature\n+  #21 = Utf8               InnerClasses\n+  #22 = Utf8               reason\n+  #23 = Utf8               Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+  #24 = Utf8               entry\n+  #25 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #26 = Utf8               serialVersionUID\n+  #27 = Utf8               J\n+  #28 = Utf8               ConstantValue\n+  #29 = Long               20161219l\n+  #31 = Utf8               <init>\n+  #32 = Utf8               (Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n+  #33 = Utf8               Code\n+  #34 = Utf8               LineNumberTable\n+  #35 = Utf8               LocalVariableTable\n+  #36 = Utf8               this\n+  #37 = Utf8               Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException;\n+  #38 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipMethod;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n+  #39 = Utf8               method\n+  #40 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipMethod;\n+  #41 = Utf8               (Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;)V\n+  #42 = Utf8               getFeature\n+  #43 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+  #44 = Utf8               getEntry\n+  #45 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #46 = Utf8               SourceFile\n+  #47 = Utf8               UnsupportedZipFeatureException.java\n+  #48 = Utf8               java/lang/StringBuilder\n+  #49 = NameAndType        #31:#69        // \"<init>\":()V\n+  #50 = Utf8               unsupported feature\n+  #51 = NameAndType        #70:#71        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #52 = NameAndType        #70:#72        // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #53 = Utf8                used in entry\n+  #54 = Class              #73            // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #55 = NameAndType        #74:#75        // getName:()Ljava/lang/String;\n+  #56 = NameAndType        #76:#75        // toString:()Ljava/lang/String;\n+  #57 = NameAndType        #31:#77        // \"<init>\":(Ljava/lang/String;)V\n+  #58 = NameAndType        #22:#23        // reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+  #59 = NameAndType        #24:#25        // entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #60 = Utf8               unsupported feature method \\'\n+  #61 = Class              #78            // org/apache/commons/compress/archivers/zip/ZipMethod\n+  #62 = NameAndType        #79:#75        // name:()Ljava/lang/String;\n+  #63 = Utf8               \\' used in entry\n+  #64 = NameAndType        #80:#23        // METHOD:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+  #65 = Utf8                used in archive.\n+  #66 = Utf8               org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException\n+  #67 = Utf8               java/util/zip/ZipException\n+  #68 = Utf8               org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature\n+  #69 = Utf8               ()V\n+  #70 = Utf8               append\n+  #71 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #72 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #73 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #74 = Utf8               getName\n+  #75 = Utf8               ()Ljava/lang/String;\n+  #76 = Utf8               toString\n+  #77 = Utf8               (Ljava/lang/String;)V\n+  #78 = Utf8               org/apache/commons/compress/archivers/zip/ZipMethod\n+  #79 = Utf8               name\n+  #80 = Utf8               METHOD\n {\n   private final org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature reason;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final transient org.apache.commons.compress.archivers.zip.ZipArchiveEntry entry;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -106,132 +103,147 @@\n \n   public org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException(org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature, org.apache.commons.compress.archivers.zip.ZipArchiveEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: aload_1\n-         2: aload_2\n-         3: invokevirtual #1                  // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;\n-         6: invokedynamic #2,  0              // InvokeDynamic #0:makeConcatWithConstants:(Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;Ljava/lang/String;)Ljava/lang/String;\n-        11: invokespecial #3                  // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-        14: aload_0\n-        15: aload_1\n-        16: putfield      #4                  // Field reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-        19: aload_0\n-        20: aload_2\n-        21: putfield      #5                  // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-        24: return\n+         1: new           #1                  // class java/lang/StringBuilder\n+         4: dup\n+         5: invokespecial #2                  // Method java/lang/StringBuilder.\"<init>\":()V\n+         8: ldc           #3                  // String unsupported feature\n+        10: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        13: aload_1\n+        14: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        17: ldc           #6                  // String  used in entry\n+        19: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        22: aload_2\n+        23: invokevirtual #7                  // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;\n+        26: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        29: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        32: invokespecial #9                  // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+        35: aload_0\n+        36: aload_1\n+        37: putfield      #10                 // Field reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+        40: aload_0\n+        41: aload_2\n+        42: putfield      #11                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+        45: return\n       LineNumberTable:\n         line 41: 0\n-        line 42: 3\n-        line 41: 11\n-        line 43: 14\n-        line 44: 19\n-        line 45: 24\n+        line 42: 23\n+        line 41: 32\n+        line 43: 35\n+        line 44: 40\n+        line 45: 45\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      25     0  this   Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException;\n-            0      25     1 reason   Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-            0      25     2 entry   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+            0      46     0  this   Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException;\n+            0      46     1 reason   Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+            0      46     2 entry   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   public org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException(org.apache.commons.compress.archivers.zip.ZipMethod, org.apache.commons.compress.archivers.zip.ZipArchiveEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipMethod;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: aload_1\n-         2: invokevirtual #6                  // Method org/apache/commons/compress/archivers/zip/ZipMethod.name:()Ljava/lang/String;\n-         5: aload_2\n-         6: invokevirtual #1                  // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;\n-         9: invokedynamic #7,  0              // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-        14: invokespecial #3                  // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-        17: aload_0\n-        18: getstatic     #8                  // Field org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature.METHOD:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-        21: putfield      #4                  // Field reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-        24: aload_0\n+         1: new           #1                  // class java/lang/StringBuilder\n+         4: dup\n+         5: invokespecial #2                  // Method java/lang/StringBuilder.\"<init>\":()V\n+         8: ldc           #12                 // String unsupported feature method \\'\n+        10: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        13: aload_1\n+        14: invokevirtual #13                 // Method org/apache/commons/compress/archivers/zip/ZipMethod.name:()Ljava/lang/String;\n+        17: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        20: ldc           #14                 // String \\' used in entry\n+        22: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         25: aload_2\n-        26: putfield      #5                  // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-        29: return\n+        26: invokevirtual #7                  // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;\n+        29: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        32: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        35: invokespecial #9                  // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+        38: aload_0\n+        39: getstatic     #15                 // Field org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature.METHOD:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+        42: putfield      #10                 // Field reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+        45: aload_0\n+        46: aload_2\n+        47: putfield      #11                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+        50: return\n       LineNumberTable:\n         line 56: 0\n-        line 57: 6\n-        line 56: 14\n-        line 58: 17\n-        line 59: 24\n-        line 60: 29\n+        line 57: 26\n+        line 56: 35\n+        line 58: 38\n+        line 59: 45\n+        line 60: 50\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      30     0  this   Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException;\n-            0      30     1 method   Lorg/apache/commons/compress/archivers/zip/ZipMethod;\n-            0      30     2 entry   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+            0      51     0  this   Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException;\n+            0      51     1 method   Lorg/apache/commons/compress/archivers/zip/ZipMethod;\n+            0      51     2 entry   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   public org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException(org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=2, locals=2, args_size=2\n+      stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: aload_1\n-         2: invokedynamic #9,  0              // InvokeDynamic #2:makeConcatWithConstants:(Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;)Ljava/lang/String;\n-         7: invokespecial #3                  // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-        10: aload_0\n-        11: aload_1\n-        12: putfield      #4                  // Field reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-        15: aload_0\n-        16: aconst_null\n-        17: putfield      #5                  // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-        20: return\n+         1: new           #1                  // class java/lang/StringBuilder\n+         4: dup\n+         5: invokespecial #2                  // Method java/lang/StringBuilder.\"<init>\":()V\n+         8: ldc           #3                  // String unsupported feature\n+        10: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        13: aload_1\n+        14: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        17: ldc           #16                 // String  used in archive.\n+        19: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        22: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        25: invokespecial #9                  // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+        28: aload_0\n+        29: aload_1\n+        30: putfield      #10                 // Field reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+        33: aload_0\n+        34: aconst_null\n+        35: putfield      #11                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+        38: return\n       LineNumberTable:\n         line 70: 0\n-        line 71: 10\n-        line 72: 15\n-        line 73: 20\n+        line 71: 28\n+        line 72: 33\n+        line 73: 38\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      21     0  this   Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException;\n-            0      21     1 reason   Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+            0      39     0  this   Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException;\n+            0      39     1 reason   Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n \n   public org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature getFeature();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+         1: getfield      #10                 // Field reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n          4: areturn\n       LineNumberTable:\n         line 80: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException;\n \n   public org.apache.commons.compress.archivers.zip.ZipArchiveEntry getEntry();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+         1: getfield      #11                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n          4: areturn\n       LineNumberTable:\n         line 88: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException;\n }\n SourceFile: \"UnsupportedZipFeatureException.java\"\n InnerClasses:\n-  public static #13= #12 of #10;          // Feature=class org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature of class org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException\n-  public static final #79= #78 of #81;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n-BootstrapMethods:\n-  0: #44 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #45 unsupported feature \\u0001 used in entry \\u0001\n-  1: #44 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #52 unsupported feature method \\'\\u0001\\' used in entry \\u0001\n-  2: #44 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #55 unsupported feature \\u0001 used in archive.\n+  public static #20= #19 of #17;          // Feature=class org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature of class org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException\n"}]}
