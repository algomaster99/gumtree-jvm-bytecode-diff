{"diffoscope-json-version": 1, "source1": "first/FileUtils.class", "source2": "second/FileUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,141 +1,141 @@\n-  SHA-256 checksum 4f8072437467c30e65b56425d446d4421e0b265a8b4c076493aaa29fb4ef9bb6\n+  SHA-256 checksum c1d5d622bf31447ab329e1c1c8a39636c0c4b748d68bda850763dd7dab5b1ac8\n   Compiled from \"FileUtils.java\"\n class org.apache.commons.configuration2.io.FileUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n-  this_class: #30                         // org/apache/commons/configuration2/io/FileUtils\n-  super_class: #31                        // java/lang/Object\n+  this_class: #35                         // org/apache/commons/configuration2/io/FileUtils\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 1, methods: 4, attributes: 1\n Constant pool:\n-    #1 = Methodref          #31.#49       // java/lang/Object.\"<init>\":()V\n-    #2 = String             #50           // file\n-    #3 = Methodref          #51.#52       // java/net/URL.getProtocol:()Ljava/lang/String;\n-    #4 = Methodref          #43.#53       // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-    #5 = Methodref          #51.#54       // java/net/URL.getFile:()Ljava/lang/String;\n-    #6 = Fieldref           #9.#55        // java/io/File.separatorChar:C\n-    #7 = Methodref          #43.#56       // java/lang/String.replace:(CC)Ljava/lang/String;\n-    #8 = Methodref          #30.#57       // org/apache/commons/configuration2/io/FileUtils.decodeUrl:(Ljava/lang/String;)Ljava/lang/String;\n-    #9 = Class              #58           // java/io/File\n-   #10 = Methodref          #9.#59        // java/io/File.\"<init>\":(Ljava/lang/String;)V\n-   #11 = Methodref          #43.#60       // java/lang/String.indexOf:(I)I\n-   #12 = Methodref          #43.#61       // java/lang/String.length:()I\n-   #13 = Class              #62           // java/lang/StringBuilder\n-   #14 = Methodref          #13.#49       // java/lang/StringBuilder.\"<init>\":()V\n-   #15 = Methodref          #44.#63       // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n-   #16 = Methodref          #43.#64       // java/lang/String.charAt:(I)C\n-   #17 = Methodref          #43.#65       // java/lang/String.substring:(II)Ljava/lang/String;\n-   #18 = Methodref          #66.#67       // java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n-   #19 = Methodref          #44.#68       // java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n-   #20 = Methodref          #44.#69       // java/nio/ByteBuffer.position:()I\n-   #21 = Methodref          #44.#70       // java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n-   #22 = Fieldref           #30.#71       // org/apache/commons/configuration2/io/FileUtils.UTF8:Ljava/nio/charset/Charset;\n-   #23 = Methodref          #72.#73       // java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n-   #24 = Methodref          #13.#74       // java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n-   #25 = Methodref          #44.#75       // java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;\n-   #26 = Class              #76           // java/lang/RuntimeException\n-   #27 = Methodref          #13.#77       // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-   #28 = Methodref          #13.#78       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #29 = Fieldref           #79.#80       // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-   #30 = Class              #81           // org/apache/commons/configuration2/io/FileUtils\n-   #31 = Class              #82           // java/lang/Object\n-   #32 = Utf8               UTF8\n-   #33 = Utf8               Ljava/nio/charset/Charset;\n-   #34 = Utf8               <init>\n-   #35 = Utf8               ()V\n-   #36 = Utf8               Code\n-   #37 = Utf8               LineNumberTable\n-   #38 = Utf8               toFile\n-   #39 = Utf8               (Ljava/net/URL;)Ljava/io/File;\n-   #40 = Utf8               StackMapTable\n-   #41 = Utf8               decodeUrl\n-   #42 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-   #43 = Class              #83           // java/lang/String\n-   #44 = Class              #84           // java/nio/ByteBuffer\n-   #45 = Class              #85           // java/lang/Throwable\n-   #46 = Utf8               <clinit>\n-   #47 = Utf8               SourceFile\n-   #48 = Utf8               FileUtils.java\n-   #49 = NameAndType        #34:#35       // \"<init>\":()V\n-   #50 = Utf8               file\n-   #51 = Class              #86           // java/net/URL\n-   #52 = NameAndType        #87:#88       // getProtocol:()Ljava/lang/String;\n-   #53 = NameAndType        #89:#90       // equalsIgnoreCase:(Ljava/lang/String;)Z\n-   #54 = NameAndType        #91:#88       // getFile:()Ljava/lang/String;\n-   #55 = NameAndType        #92:#93       // separatorChar:C\n-   #56 = NameAndType        #94:#95       // replace:(CC)Ljava/lang/String;\n-   #57 = NameAndType        #41:#42       // decodeUrl:(Ljava/lang/String;)Ljava/lang/String;\n-   #58 = Utf8               java/io/File\n-   #59 = NameAndType        #34:#96       // \"<init>\":(Ljava/lang/String;)V\n-   #60 = NameAndType        #97:#98       // indexOf:(I)I\n-   #61 = NameAndType        #99:#100      // length:()I\n-   #62 = Utf8               java/lang/StringBuilder\n-   #63 = NameAndType        #101:#102     // allocate:(I)Ljava/nio/ByteBuffer;\n-   #64 = NameAndType        #103:#104     // charAt:(I)C\n-   #65 = NameAndType        #105:#106     // substring:(II)Ljava/lang/String;\n-   #66 = Class              #107          // java/lang/Integer\n-   #67 = NameAndType        #108:#109     // parseInt:(Ljava/lang/String;I)I\n-   #68 = NameAndType        #110:#111     // put:(B)Ljava/nio/ByteBuffer;\n-   #69 = NameAndType        #112:#100     // position:()I\n-   #70 = NameAndType        #113:#114     // flip:()Ljava/nio/ByteBuffer;\n-   #71 = NameAndType        #32:#33       // UTF8:Ljava/nio/charset/Charset;\n-   #72 = Class              #115          // java/nio/charset/Charset\n-   #73 = NameAndType        #116:#117     // decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n-   #74 = NameAndType        #118:#119     // append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n-   #75 = NameAndType        #120:#114     // clear:()Ljava/nio/ByteBuffer;\n-   #76 = Utf8               java/lang/RuntimeException\n-   #77 = NameAndType        #118:#121     // append:(C)Ljava/lang/StringBuilder;\n-   #78 = NameAndType        #122:#88      // toString:()Ljava/lang/String;\n-   #79 = Class              #123          // java/nio/charset/StandardCharsets\n-   #80 = NameAndType        #124:#33      // UTF_8:Ljava/nio/charset/Charset;\n-   #81 = Utf8               org/apache/commons/configuration2/io/FileUtils\n-   #82 = Utf8               java/lang/Object\n-   #83 = Utf8               java/lang/String\n-   #84 = Utf8               java/nio/ByteBuffer\n-   #85 = Utf8               java/lang/Throwable\n-   #86 = Utf8               java/net/URL\n-   #87 = Utf8               getProtocol\n-   #88 = Utf8               ()Ljava/lang/String;\n-   #89 = Utf8               equalsIgnoreCase\n-   #90 = Utf8               (Ljava/lang/String;)Z\n-   #91 = Utf8               getFile\n-   #92 = Utf8               separatorChar\n-   #93 = Utf8               C\n-   #94 = Utf8               replace\n-   #95 = Utf8               (CC)Ljava/lang/String;\n-   #96 = Utf8               (Ljava/lang/String;)V\n-   #97 = Utf8               indexOf\n-   #98 = Utf8               (I)I\n-   #99 = Utf8               length\n-  #100 = Utf8               ()I\n-  #101 = Utf8               allocate\n-  #102 = Utf8               (I)Ljava/nio/ByteBuffer;\n-  #103 = Utf8               charAt\n-  #104 = Utf8               (I)C\n-  #105 = Utf8               substring\n-  #106 = Utf8               (II)Ljava/lang/String;\n-  #107 = Utf8               java/lang/Integer\n-  #108 = Utf8               parseInt\n-  #109 = Utf8               (Ljava/lang/String;I)I\n-  #110 = Utf8               put\n-  #111 = Utf8               (B)Ljava/nio/ByteBuffer;\n-  #112 = Utf8               position\n-  #113 = Utf8               flip\n-  #114 = Utf8               ()Ljava/nio/ByteBuffer;\n-  #115 = Utf8               java/nio/charset/Charset\n-  #116 = Utf8               decode\n-  #117 = Utf8               (Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n-  #118 = Utf8               append\n-  #119 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n-  #120 = Utf8               clear\n-  #121 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #122 = Utf8               toString\n-  #123 = Utf8               java/nio/charset/StandardCharsets\n-  #124 = Utf8               UTF_8\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = String             #8            // file\n+    #8 = Utf8               file\n+    #9 = Methodref          #10.#11       // java/net/URL.getProtocol:()Ljava/lang/String;\n+   #10 = Class              #12           // java/net/URL\n+   #11 = NameAndType        #13:#14       // getProtocol:()Ljava/lang/String;\n+   #12 = Utf8               java/net/URL\n+   #13 = Utf8               getProtocol\n+   #14 = Utf8               ()Ljava/lang/String;\n+   #15 = Methodref          #16.#17       // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+   #16 = Class              #18           // java/lang/String\n+   #17 = NameAndType        #19:#20       // equalsIgnoreCase:(Ljava/lang/String;)Z\n+   #18 = Utf8               java/lang/String\n+   #19 = Utf8               equalsIgnoreCase\n+   #20 = Utf8               (Ljava/lang/String;)Z\n+   #21 = Methodref          #10.#22       // java/net/URL.getFile:()Ljava/lang/String;\n+   #22 = NameAndType        #23:#14       // getFile:()Ljava/lang/String;\n+   #23 = Utf8               getFile\n+   #24 = Fieldref           #25.#26       // java/io/File.separatorChar:C\n+   #25 = Class              #27           // java/io/File\n+   #26 = NameAndType        #28:#29       // separatorChar:C\n+   #27 = Utf8               java/io/File\n+   #28 = Utf8               separatorChar\n+   #29 = Utf8               C\n+   #30 = Methodref          #16.#31       // java/lang/String.replace:(CC)Ljava/lang/String;\n+   #31 = NameAndType        #32:#33       // replace:(CC)Ljava/lang/String;\n+   #32 = Utf8               replace\n+   #33 = Utf8               (CC)Ljava/lang/String;\n+   #34 = Methodref          #35.#36       // org/apache/commons/configuration2/io/FileUtils.decodeUrl:(Ljava/lang/String;)Ljava/lang/String;\n+   #35 = Class              #37           // org/apache/commons/configuration2/io/FileUtils\n+   #36 = NameAndType        #38:#39       // decodeUrl:(Ljava/lang/String;)Ljava/lang/String;\n+   #37 = Utf8               org/apache/commons/configuration2/io/FileUtils\n+   #38 = Utf8               decodeUrl\n+   #39 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+   #40 = Methodref          #25.#41       // java/io/File.\"<init>\":(Ljava/lang/String;)V\n+   #41 = NameAndType        #5:#42        // \"<init>\":(Ljava/lang/String;)V\n+   #42 = Utf8               (Ljava/lang/String;)V\n+   #43 = Methodref          #16.#44       // java/lang/String.indexOf:(I)I\n+   #44 = NameAndType        #45:#46       // indexOf:(I)I\n+   #45 = Utf8               indexOf\n+   #46 = Utf8               (I)I\n+   #47 = Methodref          #16.#48       // java/lang/String.length:()I\n+   #48 = NameAndType        #49:#50       // length:()I\n+   #49 = Utf8               length\n+   #50 = Utf8               ()I\n+   #51 = Class              #52           // java/lang/StringBuilder\n+   #52 = Utf8               java/lang/StringBuilder\n+   #53 = Methodref          #51.#3        // java/lang/StringBuilder.\"<init>\":()V\n+   #54 = Methodref          #55.#56       // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n+   #55 = Class              #57           // java/nio/ByteBuffer\n+   #56 = NameAndType        #58:#59       // allocate:(I)Ljava/nio/ByteBuffer;\n+   #57 = Utf8               java/nio/ByteBuffer\n+   #58 = Utf8               allocate\n+   #59 = Utf8               (I)Ljava/nio/ByteBuffer;\n+   #60 = Methodref          #16.#61       // java/lang/String.charAt:(I)C\n+   #61 = NameAndType        #62:#63       // charAt:(I)C\n+   #62 = Utf8               charAt\n+   #63 = Utf8               (I)C\n+   #64 = Methodref          #16.#65       // java/lang/String.substring:(II)Ljava/lang/String;\n+   #65 = NameAndType        #66:#67       // substring:(II)Ljava/lang/String;\n+   #66 = Utf8               substring\n+   #67 = Utf8               (II)Ljava/lang/String;\n+   #68 = Methodref          #69.#70       // java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n+   #69 = Class              #71           // java/lang/Integer\n+   #70 = NameAndType        #72:#73       // parseInt:(Ljava/lang/String;I)I\n+   #71 = Utf8               java/lang/Integer\n+   #72 = Utf8               parseInt\n+   #73 = Utf8               (Ljava/lang/String;I)I\n+   #74 = Methodref          #55.#75       // java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n+   #75 = NameAndType        #76:#77       // put:(B)Ljava/nio/ByteBuffer;\n+   #76 = Utf8               put\n+   #77 = Utf8               (B)Ljava/nio/ByteBuffer;\n+   #78 = Methodref          #55.#79       // java/nio/ByteBuffer.position:()I\n+   #79 = NameAndType        #80:#50       // position:()I\n+   #80 = Utf8               position\n+   #81 = Methodref          #55.#82       // java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n+   #82 = NameAndType        #83:#84       // flip:()Ljava/nio/ByteBuffer;\n+   #83 = Utf8               flip\n+   #84 = Utf8               ()Ljava/nio/ByteBuffer;\n+   #85 = Fieldref           #35.#86       // org/apache/commons/configuration2/io/FileUtils.UTF8:Ljava/nio/charset/Charset;\n+   #86 = NameAndType        #87:#88       // UTF8:Ljava/nio/charset/Charset;\n+   #87 = Utf8               UTF8\n+   #88 = Utf8               Ljava/nio/charset/Charset;\n+   #89 = Methodref          #90.#91       // java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n+   #90 = Class              #92           // java/nio/charset/Charset\n+   #91 = NameAndType        #93:#94       // decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n+   #92 = Utf8               java/nio/charset/Charset\n+   #93 = Utf8               decode\n+   #94 = Utf8               (Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n+   #95 = Methodref          #51.#96       // java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n+   #96 = NameAndType        #97:#98       // append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n+   #97 = Utf8               append\n+   #98 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n+   #99 = Methodref          #55.#100      // java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;\n+  #100 = NameAndType        #101:#84      // clear:()Ljava/nio/ByteBuffer;\n+  #101 = Utf8               clear\n+  #102 = Class              #103          // java/lang/RuntimeException\n+  #103 = Utf8               java/lang/RuntimeException\n+  #104 = Methodref          #51.#105      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+  #105 = NameAndType        #97:#106      // append:(C)Ljava/lang/StringBuilder;\n+  #106 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #107 = Methodref          #51.#108      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #108 = NameAndType        #109:#14      // toString:()Ljava/lang/String;\n+  #109 = Utf8               toString\n+  #110 = Fieldref           #111.#112     // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+  #111 = Class              #113          // java/nio/charset/StandardCharsets\n+  #112 = NameAndType        #114:#88      // UTF_8:Ljava/nio/charset/Charset;\n+  #113 = Utf8               java/nio/charset/StandardCharsets\n+  #114 = Utf8               UTF_8\n+  #115 = Utf8               Code\n+  #116 = Utf8               LineNumberTable\n+  #117 = Utf8               toFile\n+  #118 = Utf8               (Ljava/net/URL;)Ljava/io/File;\n+  #119 = Utf8               StackMapTable\n+  #120 = Class              #121          // java/lang/Throwable\n+  #121 = Utf8               java/lang/Throwable\n+  #122 = Utf8               <clinit>\n+  #123 = Utf8               SourceFile\n+  #124 = Utf8               FileUtils.java\n {\n   private static final java.nio.charset.Charset UTF8;\n     descriptor: Ljava/nio/charset/Charset;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   org.apache.commons.configuration2.io.FileUtils();\n     descriptor: ()V\n@@ -151,34 +151,34 @@\n   public static java.io.File toFile(java.net.URL);\n     descriptor: (Ljava/net/URL;)Ljava/io/File;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n          1: ifnull        16\n-         4: ldc           #2                  // String file\n+         4: ldc           #7                  // String file\n          6: aload_0\n-         7: invokevirtual #3                  // Method java/net/URL.getProtocol:()Ljava/lang/String;\n-        10: invokevirtual #4                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+         7: invokevirtual #9                  // Method java/net/URL.getProtocol:()Ljava/lang/String;\n+        10: invokevirtual #15                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n         13: ifne          18\n         16: aconst_null\n         17: areturn\n         18: aload_0\n-        19: invokevirtual #5                  // Method java/net/URL.getFile:()Ljava/lang/String;\n+        19: invokevirtual #21                 // Method java/net/URL.getFile:()Ljava/lang/String;\n         22: bipush        47\n-        24: getstatic     #6                  // Field java/io/File.separatorChar:C\n-        27: invokevirtual #7                  // Method java/lang/String.replace:(CC)Ljava/lang/String;\n+        24: getstatic     #24                 // Field java/io/File.separatorChar:C\n+        27: invokevirtual #30                 // Method java/lang/String.replace:(CC)Ljava/lang/String;\n         30: astore_1\n         31: aload_1\n-        32: invokestatic  #8                  // Method decodeUrl:(Ljava/lang/String;)Ljava/lang/String;\n+        32: invokestatic  #34                 // Method decodeUrl:(Ljava/lang/String;)Ljava/lang/String;\n         35: astore_1\n-        36: new           #9                  // class java/io/File\n+        36: new           #25                 // class java/io/File\n         39: dup\n         40: aload_1\n-        41: invokespecial #10                 // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n+        41: invokespecial #40                 // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n         44: areturn\n       LineNumberTable:\n         line 50: 0\n         line 51: 16\n         line 53: 18\n         line 54: 31\n         line 55: 36\n@@ -193,122 +193,122 @@\n       stack=4, locals=8, args_size=1\n          0: aload_0\n          1: astore_1\n          2: aload_0\n          3: ifnull        236\n          6: aload_0\n          7: bipush        37\n-         9: invokevirtual #11                 // Method java/lang/String.indexOf:(I)I\n+         9: invokevirtual #43                 // Method java/lang/String.indexOf:(I)I\n         12: iflt          236\n         15: aload_0\n-        16: invokevirtual #12                 // Method java/lang/String.length:()I\n+        16: invokevirtual #47                 // Method java/lang/String.length:()I\n         19: istore_2\n-        20: new           #13                 // class java/lang/StringBuilder\n+        20: new           #51                 // class java/lang/StringBuilder\n         23: dup\n-        24: invokespecial #14                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        24: invokespecial #53                 // Method java/lang/StringBuilder.\"<init>\":()V\n         27: astore_3\n         28: iload_2\n-        29: invokestatic  #15                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n+        29: invokestatic  #54                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n         32: astore        4\n         34: iconst_0\n         35: istore        5\n         37: iload         5\n         39: iload_2\n         40: if_icmpge     231\n         43: aload_0\n         44: iload         5\n-        46: invokevirtual #16                 // Method java/lang/String.charAt:(I)C\n+        46: invokevirtual #60                 // Method java/lang/String.charAt:(I)C\n         49: bipush        37\n         51: if_icmpne     214\n         54: aload_0\n         55: iload         5\n         57: iconst_1\n         58: iadd\n         59: iload         5\n         61: iconst_3\n         62: iadd\n-        63: invokevirtual #17                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        63: invokevirtual #64                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n         66: bipush        16\n-        68: invokestatic  #18                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n+        68: invokestatic  #68                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n         71: i2b\n         72: istore        6\n         74: aload         4\n         76: iload         6\n-        78: invokevirtual #19                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n+        78: invokevirtual #74                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n         81: pop\n         82: iinc          5, 3\n         85: iload         5\n         87: iload_2\n         88: if_icmpge     102\n         91: aload_0\n         92: iload         5\n-        94: invokevirtual #16                 // Method java/lang/String.charAt:(I)C\n+        94: invokevirtual #60                 // Method java/lang/String.charAt:(I)C\n         97: bipush        37\n         99: if_icmpeq     54\n        102: aload         4\n-       104: invokevirtual #20                 // Method java/nio/ByteBuffer.position:()I\n+       104: invokevirtual #78                 // Method java/nio/ByteBuffer.position:()I\n        107: ifle          37\n        110: aload         4\n-       112: invokevirtual #21                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n+       112: invokevirtual #81                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n        115: pop\n        116: aload_3\n-       117: getstatic     #22                 // Field UTF8:Ljava/nio/charset/Charset;\n+       117: getstatic     #85                 // Field UTF8:Ljava/nio/charset/Charset;\n        120: aload         4\n-       122: invokevirtual #23                 // Method java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n-       125: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n+       122: invokevirtual #89                 // Method java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n+       125: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n        128: pop\n        129: aload         4\n-       131: invokevirtual #25                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;\n+       131: invokevirtual #99                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;\n        134: pop\n        135: goto          37\n        138: astore        6\n        140: aload         4\n-       142: invokevirtual #20                 // Method java/nio/ByteBuffer.position:()I\n+       142: invokevirtual #78                 // Method java/nio/ByteBuffer.position:()I\n        145: ifle          214\n        148: aload         4\n-       150: invokevirtual #21                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n+       150: invokevirtual #81                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n        153: pop\n        154: aload_3\n-       155: getstatic     #22                 // Field UTF8:Ljava/nio/charset/Charset;\n+       155: getstatic     #85                 // Field UTF8:Ljava/nio/charset/Charset;\n        158: aload         4\n-       160: invokevirtual #23                 // Method java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n-       163: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n+       160: invokevirtual #89                 // Method java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n+       163: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n        166: pop\n        167: aload         4\n-       169: invokevirtual #25                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;\n+       169: invokevirtual #99                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;\n        172: pop\n        173: goto          214\n        176: astore        7\n        178: aload         4\n-       180: invokevirtual #20                 // Method java/nio/ByteBuffer.position:()I\n+       180: invokevirtual #78                 // Method java/nio/ByteBuffer.position:()I\n        183: ifle          211\n        186: aload         4\n-       188: invokevirtual #21                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n+       188: invokevirtual #81                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n        191: pop\n        192: aload_3\n-       193: getstatic     #22                 // Field UTF8:Ljava/nio/charset/Charset;\n+       193: getstatic     #85                 // Field UTF8:Ljava/nio/charset/Charset;\n        196: aload         4\n-       198: invokevirtual #23                 // Method java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n-       201: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n+       198: invokevirtual #89                 // Method java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n+       201: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n        204: pop\n        205: aload         4\n-       207: invokevirtual #25                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;\n+       207: invokevirtual #99                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;\n        210: pop\n        211: aload         7\n        213: athrow\n        214: aload_3\n        215: aload_0\n        216: iload         5\n        218: iinc          5, 1\n-       221: invokevirtual #16                 // Method java/lang/String.charAt:(I)C\n-       224: invokevirtual #27                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       221: invokevirtual #60                 // Method java/lang/String.charAt:(I)C\n+       224: invokevirtual #104                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n        227: pop\n        228: goto          37\n        231: aload_3\n-       232: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       232: invokevirtual #107                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        235: astore_1\n        236: aload_1\n        237: areturn\n       Exception table:\n          from    to  target type\n             54   102   138   Class java/lang/RuntimeException\n             54   102   176   any\n@@ -365,14 +365,14 @@\n           offset_delta = 4\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: getstatic     #29                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-         3: putstatic     #22                 // Field UTF8:Ljava/nio/charset/Charset;\n+         0: getstatic     #110                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+         3: putstatic     #85                 // Field UTF8:Ljava/nio/charset/Charset;\n          6: return\n       LineNumberTable:\n         line 36: 0\n }\n SourceFile: \"FileUtils.java\"\n"}]}
