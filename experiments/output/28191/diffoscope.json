{"diffoscope-json-version": 1, "source1": "first/BlockSort.class", "source2": "second/BlockSort.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,309 +1,309 @@\n-  SHA-256 checksum def0eeb077ed30e19c3ff02c4e31df907e21f7dd410051949275fbca3400f40b\n+  SHA-256 checksum 5d825bb450e86bce9f23161ae74af695740c26a03ebe16cd49999e67e8b134d1\n   Compiled from \"BlockSort.java\"\n class org.apache.commons.compress.compressors.bzip2.BlockSort\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n   this_class: #1                          // org/apache/commons/compress/compressors/bzip2/BlockSort\n-  super_class: #61                        // java/lang/Object\n+  super_class: #4                         // java/lang/Object\n   interfaces: 0, fields: 23, methods: 17, attributes: 2\n Constant pool:\n-    #1 = Class              #228          // org/apache/commons/compress/compressors/bzip2/BlockSort\n-    #2 = Methodref          #61.#229      // java/lang/Object.\"<init>\":()V\n-    #3 = Fieldref           #1.#230       // org/apache/commons/compress/compressors/bzip2/BlockSort.STACK_SIZE:I\n-    #4 = Fieldref           #1.#231       // org/apache/commons/compress/compressors/bzip2/BlockSort.stack_ll:[I\n-    #5 = Fieldref           #1.#232       // org/apache/commons/compress/compressors/bzip2/BlockSort.stack_hh:[I\n-    #6 = Fieldref           #1.#233       // org/apache/commons/compress/compressors/bzip2/BlockSort.stack_dd:[I\n-    #7 = Fieldref           #1.#234       // org/apache/commons/compress/compressors/bzip2/BlockSort.mainSort_runningOrder:[I\n-    #8 = Fieldref           #1.#235       // org/apache/commons/compress/compressors/bzip2/BlockSort.mainSort_copy:[I\n-    #9 = Fieldref           #1.#236       // org/apache/commons/compress/compressors/bzip2/BlockSort.mainSort_bigDone:[Z\n-   #10 = Integer            65537\n-   #11 = Fieldref           #1.#237       // org/apache/commons/compress/compressors/bzip2/BlockSort.ftab:[I\n-   #12 = Fieldref           #97.#238      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.sfmap:[C\n-   #13 = Fieldref           #1.#239       // org/apache/commons/compress/compressors/bzip2/BlockSort.quadrant:[C\n-   #14 = Fieldref           #1.#240       // org/apache/commons/compress/compressors/bzip2/BlockSort.workLimit:I\n-   #15 = Fieldref           #1.#241       // org/apache/commons/compress/compressors/bzip2/BlockSort.workDone:I\n-   #16 = Fieldref           #1.#242       // org/apache/commons/compress/compressors/bzip2/BlockSort.firstAttempt:Z\n-   #17 = Methodref          #1.#243       // org/apache/commons/compress/compressors/bzip2/BlockSort.fallbackSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n-   #18 = Methodref          #1.#244       // org/apache/commons/compress/compressors/bzip2/BlockSort.mainSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n-   #19 = Fieldref           #97.#245      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.fmap:[I\n-   #20 = Fieldref           #97.#246      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.origPtr:I\n-   #21 = Fieldref           #97.#247      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.block:[B\n-   #22 = Methodref          #1.#248       // org/apache/commons/compress/compressors/bzip2/BlockSort.fallbackSort:([I[BI)V\n-   #23 = Methodref          #1.#249       // org/apache/commons/compress/compressors/bzip2/BlockSort.fswap:([III)V\n-   #24 = Methodref          #1.#250       // org/apache/commons/compress/compressors/bzip2/BlockSort.fpush:(III)V\n-   #25 = Methodref          #1.#251       // org/apache/commons/compress/compressors/bzip2/BlockSort.fpop:(I)[I\n-   #26 = Methodref          #1.#252       // org/apache/commons/compress/compressors/bzip2/BlockSort.fallbackSimpleSort:([I[III)V\n-   #27 = Long               7621l\n-   #29 = Long               32768l\n-   #31 = Long               3l\n-   #33 = Methodref          #253.#254     // java/lang/Math.min:(II)I\n-   #34 = Methodref          #1.#255       // org/apache/commons/compress/compressors/bzip2/BlockSort.fvswap:([IIII)V\n-   #35 = Fieldref           #1.#256       // org/apache/commons/compress/compressors/bzip2/BlockSort.eclass:[I\n-   #36 = Methodref          #1.#257       // org/apache/commons/compress/compressors/bzip2/BlockSort.getEclass:()[I\n-   #37 = Class              #258          // java/util/BitSet\n-   #38 = Methodref          #37.#259      // java/util/BitSet.\"<init>\":(I)V\n-   #39 = Methodref          #37.#260      // java/util/BitSet.set:(I)V\n-   #40 = Methodref          #37.#261      // java/util/BitSet.clear:(I)V\n-   #41 = Methodref          #37.#262      // java/util/BitSet.get:(I)Z\n-   #42 = Methodref          #37.#263      // java/util/BitSet.nextClearBit:(I)I\n-   #43 = Methodref          #37.#264      // java/util/BitSet.nextSetBit:(I)I\n-   #44 = Methodref          #1.#265       // org/apache/commons/compress/compressors/bzip2/BlockSort.fallbackQSort3:([I[III)V\n-   #45 = Fieldref           #1.#266       // org/apache/commons/compress/compressors/bzip2/BlockSort.INCS:[I\n-   #46 = Methodref          #1.#267       // org/apache/commons/compress/compressors/bzip2/BlockSort.mainSimpleSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)Z\n-   #47 = Methodref          #1.#268       // org/apache/commons/compress/compressors/bzip2/BlockSort.med3:(III)I\n-   #48 = Methodref          #1.#269       // org/apache/commons/compress/compressors/bzip2/BlockSort.vswap:([IIII)V\n-   #49 = Methodref          #270.#271     // java/util/Arrays.fill:([II)V\n-   #50 = Class              #272          // org/apache/commons/compress/compressors/bzip2/BZip2Constants\n-   #51 = Integer            65536\n-   #52 = Integer            2097152\n-   #53 = Integer            -2097153\n-   #54 = Methodref          #1.#273       // org/apache/commons/compress/compressors/bzip2/BlockSort.mainQSort3:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)V\n-   #55 = Integer            65534\n-   #56 = Methodref          #253.#274     // java/lang/Math.max:(II)I\n-   #57 = Integer            88573\n-   #58 = Integer            265720\n-   #59 = Integer            797161\n-   #60 = Integer            2391484\n-   #61 = Class              #275          // java/lang/Object\n-   #62 = Utf8               FTAB_LENGTH\n-   #63 = Utf8               I\n-   #64 = Utf8               ConstantValue\n-   #65 = Utf8               QSORT_STACK_SIZE\n-   #66 = Integer            1000\n-   #67 = Utf8               FALLBACK_QSORT_STACK_SIZE\n-   #68 = Integer            100\n-   #69 = Utf8               STACK_SIZE\n-   #70 = Utf8               workDone\n-   #71 = Utf8               workLimit\n-   #72 = Utf8               firstAttempt\n-   #73 = Utf8               Z\n-   #74 = Utf8               stack_ll\n-   #75 = Utf8               [I\n-   #76 = Utf8               stack_hh\n-   #77 = Utf8               stack_dd\n-   #78 = Utf8               mainSort_runningOrder\n-   #79 = Utf8               mainSort_copy\n-   #80 = Utf8               mainSort_bigDone\n-   #81 = Utf8               [Z\n-   #82 = Utf8               ftab\n-   #83 = Utf8               quadrant\n-   #84 = Utf8               [C\n-   #85 = Utf8               FALLBACK_QSORT_SMALL_THRESH\n-   #86 = Integer            10\n-   #87 = Utf8               eclass\n-   #88 = Utf8               INCS\n-   #89 = Utf8               SMALL_THRESH\n-   #90 = Integer            20\n-   #91 = Utf8               DEPTH_THRESH\n-   #92 = Utf8               WORK_FACTOR\n-   #93 = Integer            30\n-   #94 = Utf8               SETMASK\n-   #95 = Utf8               CLEARMASK\n-   #96 = Utf8               <init>\n-   #97 = Class              #277          // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data\n-   #98 = Utf8               Data\n-   #99 = Utf8               InnerClasses\n-  #100 = Utf8               (Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;)V\n-  #101 = Utf8               Code\n-  #102 = Utf8               LineNumberTable\n-  #103 = Utf8               LocalVariableTable\n-  #104 = Utf8               this\n-  #105 = Utf8               Lorg/apache/commons/compress/compressors/bzip2/BlockSort;\n-  #106 = Utf8               data\n-  #107 = Utf8               Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;\n-  #108 = Utf8               blockSort\n-  #109 = Utf8               (Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n-  #110 = Utf8               i\n-  #111 = Utf8               last\n-  #112 = Utf8               fmap\n-  #113 = Utf8               StackMapTable\n-  #114 = Class              #75           // \"[I\"\n-  #115 = Utf8               fallbackSort\n-  #116 = Utf8               fallbackSimpleSort\n-  #117 = Utf8               ([I[III)V\n-  #118 = Utf8               tmp\n-  #119 = Utf8               ec_tmp\n-  #120 = Utf8               j\n-  #121 = Utf8               lo\n-  #122 = Utf8               hi\n-  #123 = Utf8               fswap\n-  #124 = Utf8               ([III)V\n-  #125 = Utf8               zz1\n-  #126 = Utf8               zz2\n-  #127 = Utf8               zztmp\n-  #128 = Utf8               fvswap\n-  #129 = Utf8               ([IIII)V\n-  #130 = Utf8               yyp1\n-  #131 = Utf8               yyp2\n-  #132 = Utf8               yyn\n-  #133 = Utf8               fpush\n-  #134 = Utf8               (III)V\n-  #135 = Utf8               sp\n-  #136 = Utf8               lz\n-  #137 = Utf8               hz\n-  #138 = Utf8               fpop\n-  #139 = Utf8               (I)[I\n-  #140 = Utf8               fallbackQSort3\n-  #141 = Utf8               med\n-  #142 = Utf8               J\n-  #143 = Utf8               n\n-  #144 = Utf8               s\n-  #145 = Utf8               r3\n-  #146 = Utf8               m\n-  #147 = Utf8               unLo\n-  #148 = Utf8               ltLo\n-  #149 = Utf8               unHi\n-  #150 = Utf8               gtHi\n-  #151 = Utf8               loSt\n-  #152 = Utf8               hiSt\n-  #153 = Utf8               r\n-  #154 = Utf8               getEclass\n-  #155 = Utf8               ()[I\n-  #156 = Utf8               ([I[BI)V\n-  #157 = Utf8               k\n-  #158 = Utf8               cc\n-  #159 = Utf8               cc1\n-  #160 = Utf8               block\n-  #161 = Utf8               [B\n-  #162 = Utf8               nblock\n-  #163 = Utf8               H\n-  #164 = Utf8               l\n-  #165 = Utf8               nNotDone\n-  #166 = Utf8               nBhtab\n-  #167 = Utf8               bhtab\n-  #168 = Utf8               Ljava/util/BitSet;\n-  #169 = Class              #161          // \"[B\"\n-  #170 = Utf8               mainSimpleSort\n-  #171 = Utf8               (Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)Z\n-  #172 = Utf8               x\n-  #173 = Utf8               i1\n-  #174 = Utf8               i2\n-  #175 = Utf8               v\n-  #176 = Utf8               vd\n-  #177 = Utf8               onceRunned\n-  #178 = Utf8               a\n-  #179 = Utf8               h\n-  #180 = Utf8               mj\n-  #181 = Utf8               dataShadow\n-  #182 = Utf8               d\n-  #183 = Utf8               lastShadow\n-  #184 = Utf8               bigN\n-  #185 = Utf8               hp\n-  #186 = Utf8               lastPlus1\n-  #187 = Utf8               firstAttemptShadow\n-  #188 = Utf8               workLimitShadow\n-  #189 = Utf8               workDoneShadow\n-  #190 = Class              #84           // \"[C\"\n-  #191 = Utf8               vswap\n-  #192 = Utf8               t\n-  #193 = Utf8               p1\n-  #194 = Utf8               p2\n-  #195 = Utf8               med3\n-  #196 = Utf8               (III)I\n-  #197 = Utf8               b\n-  #198 = Utf8               c\n-  #199 = Utf8               mainQSort3\n-  #200 = Utf8               (Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)V\n-  #201 = Utf8               temp\n-  #202 = Utf8               d1\n-  #203 = Utf8               dSt\n-  #204 = Utf8               mainSort\n-  #205 = Utf8               c2\n-  #206 = Utf8               ro\n-  #207 = Utf8               vv\n-  #208 = Utf8               sb\n-  #209 = Utf8               ftab_sb\n-  #210 = Utf8               fmap_j\n-  #211 = Utf8               hj\n-  #212 = Utf8               a2update\n-  #213 = Utf8               qVal\n-  #214 = Utf8               C\n-  #215 = Utf8               bbStart\n-  #216 = Utf8               bbSize\n-  #217 = Utf8               shifts\n-  #218 = Utf8               ss\n-  #219 = Utf8               runningOrder\n-  #220 = Utf8               copy\n-  #221 = Utf8               bigDone\n-  #222 = Utf8               c1\n-  #223 = Class              #81           // \"[Z\"\n-  #224 = Utf8               <clinit>\n-  #225 = Utf8               ()V\n-  #226 = Utf8               SourceFile\n-  #227 = Utf8               BlockSort.java\n-  #228 = Utf8               org/apache/commons/compress/compressors/bzip2/BlockSort\n-  #229 = NameAndType        #96:#225      // \"<init>\":()V\n-  #230 = NameAndType        #69:#63       // STACK_SIZE:I\n-  #231 = NameAndType        #74:#75       // stack_ll:[I\n-  #232 = NameAndType        #76:#75       // stack_hh:[I\n-  #233 = NameAndType        #77:#75       // stack_dd:[I\n-  #234 = NameAndType        #78:#75       // mainSort_runningOrder:[I\n-  #235 = NameAndType        #79:#75       // mainSort_copy:[I\n-  #236 = NameAndType        #80:#81       // mainSort_bigDone:[Z\n-  #237 = NameAndType        #82:#75       // ftab:[I\n-  #238 = NameAndType        #278:#84      // sfmap:[C\n-  #239 = NameAndType        #83:#84       // quadrant:[C\n-  #240 = NameAndType        #71:#63       // workLimit:I\n-  #241 = NameAndType        #70:#63       // workDone:I\n-  #242 = NameAndType        #72:#73       // firstAttempt:Z\n-  #243 = NameAndType        #115:#109     // fallbackSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n-  #244 = NameAndType        #204:#109     // mainSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n-  #245 = NameAndType        #112:#75      // fmap:[I\n-  #246 = NameAndType        #279:#63      // origPtr:I\n-  #247 = NameAndType        #160:#161     // block:[B\n-  #248 = NameAndType        #115:#156     // fallbackSort:([I[BI)V\n-  #249 = NameAndType        #123:#124     // fswap:([III)V\n-  #250 = NameAndType        #133:#134     // fpush:(III)V\n-  #251 = NameAndType        #138:#139     // fpop:(I)[I\n-  #252 = NameAndType        #116:#117     // fallbackSimpleSort:([I[III)V\n-  #253 = Class              #280          // java/lang/Math\n-  #254 = NameAndType        #281:#282     // min:(II)I\n-  #255 = NameAndType        #128:#129     // fvswap:([IIII)V\n-  #256 = NameAndType        #87:#75       // eclass:[I\n-  #257 = NameAndType        #154:#155     // getEclass:()[I\n-  #258 = Utf8               java/util/BitSet\n-  #259 = NameAndType        #96:#283      // \"<init>\":(I)V\n-  #260 = NameAndType        #284:#283     // set:(I)V\n-  #261 = NameAndType        #285:#283     // clear:(I)V\n-  #262 = NameAndType        #286:#287     // get:(I)Z\n-  #263 = NameAndType        #288:#289     // nextClearBit:(I)I\n-  #264 = NameAndType        #290:#289     // nextSetBit:(I)I\n-  #265 = NameAndType        #140:#117     // fallbackQSort3:([I[III)V\n-  #266 = NameAndType        #88:#75       // INCS:[I\n-  #267 = NameAndType        #170:#171     // mainSimpleSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)Z\n-  #268 = NameAndType        #195:#196     // med3:(III)I\n-  #269 = NameAndType        #191:#129     // vswap:([IIII)V\n-  #270 = Class              #291          // java/util/Arrays\n-  #271 = NameAndType        #292:#293     // fill:([II)V\n-  #272 = Utf8               org/apache/commons/compress/compressors/bzip2/BZip2Constants\n-  #273 = NameAndType        #199:#200     // mainQSort3:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)V\n-  #274 = NameAndType        #294:#282     // max:(II)I\n-  #275 = Utf8               java/lang/Object\n-  #276 = Class              #295          // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream\n-  #277 = Utf8               org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data\n-  #278 = Utf8               sfmap\n-  #279 = Utf8               origPtr\n-  #280 = Utf8               java/lang/Math\n-  #281 = Utf8               min\n-  #282 = Utf8               (II)I\n-  #283 = Utf8               (I)V\n-  #284 = Utf8               set\n-  #285 = Utf8               clear\n-  #286 = Utf8               get\n-  #287 = Utf8               (I)Z\n-  #288 = Utf8               nextClearBit\n-  #289 = Utf8               (I)I\n-  #290 = Utf8               nextSetBit\n-  #291 = Utf8               java/util/Arrays\n-  #292 = Utf8               fill\n-  #293 = Utf8               ([II)V\n-  #294 = Utf8               max\n-  #295 = Utf8               org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream\n+    #1 = Class              #2            // org/apache/commons/compress/compressors/bzip2/BlockSort\n+    #2 = Utf8               org/apache/commons/compress/compressors/bzip2/BlockSort\n+    #3 = Methodref          #4.#5         // java/lang/Object.\"<init>\":()V\n+    #4 = Class              #6            // java/lang/Object\n+    #5 = NameAndType        #7:#8         // \"<init>\":()V\n+    #6 = Utf8               java/lang/Object\n+    #7 = Utf8               <init>\n+    #8 = Utf8               ()V\n+    #9 = Fieldref           #1.#10        // org/apache/commons/compress/compressors/bzip2/BlockSort.STACK_SIZE:I\n+   #10 = NameAndType        #11:#12       // STACK_SIZE:I\n+   #11 = Utf8               STACK_SIZE\n+   #12 = Utf8               I\n+   #13 = Fieldref           #1.#14        // org/apache/commons/compress/compressors/bzip2/BlockSort.stack_ll:[I\n+   #14 = NameAndType        #15:#16       // stack_ll:[I\n+   #15 = Utf8               stack_ll\n+   #16 = Utf8               [I\n+   #17 = Fieldref           #1.#18        // org/apache/commons/compress/compressors/bzip2/BlockSort.stack_hh:[I\n+   #18 = NameAndType        #19:#16       // stack_hh:[I\n+   #19 = Utf8               stack_hh\n+   #20 = Fieldref           #1.#21        // org/apache/commons/compress/compressors/bzip2/BlockSort.stack_dd:[I\n+   #21 = NameAndType        #22:#16       // stack_dd:[I\n+   #22 = Utf8               stack_dd\n+   #23 = Fieldref           #1.#24        // org/apache/commons/compress/compressors/bzip2/BlockSort.mainSort_runningOrder:[I\n+   #24 = NameAndType        #25:#16       // mainSort_runningOrder:[I\n+   #25 = Utf8               mainSort_runningOrder\n+   #26 = Fieldref           #1.#27        // org/apache/commons/compress/compressors/bzip2/BlockSort.mainSort_copy:[I\n+   #27 = NameAndType        #28:#16       // mainSort_copy:[I\n+   #28 = Utf8               mainSort_copy\n+   #29 = Fieldref           #1.#30        // org/apache/commons/compress/compressors/bzip2/BlockSort.mainSort_bigDone:[Z\n+   #30 = NameAndType        #31:#32       // mainSort_bigDone:[Z\n+   #31 = Utf8               mainSort_bigDone\n+   #32 = Utf8               [Z\n+   #33 = Integer            65537\n+   #34 = Fieldref           #1.#35        // org/apache/commons/compress/compressors/bzip2/BlockSort.ftab:[I\n+   #35 = NameAndType        #36:#16       // ftab:[I\n+   #36 = Utf8               ftab\n+   #37 = Fieldref           #38.#39       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.sfmap:[C\n+   #38 = Class              #40           // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data\n+   #39 = NameAndType        #41:#42       // sfmap:[C\n+   #40 = Utf8               org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data\n+   #41 = Utf8               sfmap\n+   #42 = Utf8               [C\n+   #43 = Fieldref           #1.#44        // org/apache/commons/compress/compressors/bzip2/BlockSort.quadrant:[C\n+   #44 = NameAndType        #45:#42       // quadrant:[C\n+   #45 = Utf8               quadrant\n+   #46 = Fieldref           #1.#47        // org/apache/commons/compress/compressors/bzip2/BlockSort.workLimit:I\n+   #47 = NameAndType        #48:#12       // workLimit:I\n+   #48 = Utf8               workLimit\n+   #49 = Fieldref           #1.#50        // org/apache/commons/compress/compressors/bzip2/BlockSort.workDone:I\n+   #50 = NameAndType        #51:#12       // workDone:I\n+   #51 = Utf8               workDone\n+   #52 = Fieldref           #1.#53        // org/apache/commons/compress/compressors/bzip2/BlockSort.firstAttempt:Z\n+   #53 = NameAndType        #54:#55       // firstAttempt:Z\n+   #54 = Utf8               firstAttempt\n+   #55 = Utf8               Z\n+   #56 = Methodref          #1.#57        // org/apache/commons/compress/compressors/bzip2/BlockSort.fallbackSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n+   #57 = NameAndType        #58:#59       // fallbackSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n+   #58 = Utf8               fallbackSort\n+   #59 = Utf8               (Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n+   #60 = Methodref          #1.#61        // org/apache/commons/compress/compressors/bzip2/BlockSort.mainSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n+   #61 = NameAndType        #62:#59       // mainSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n+   #62 = Utf8               mainSort\n+   #63 = Fieldref           #38.#64       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.fmap:[I\n+   #64 = NameAndType        #65:#16       // fmap:[I\n+   #65 = Utf8               fmap\n+   #66 = Fieldref           #38.#67       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.origPtr:I\n+   #67 = NameAndType        #68:#12       // origPtr:I\n+   #68 = Utf8               origPtr\n+   #69 = Fieldref           #38.#70       // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.block:[B\n+   #70 = NameAndType        #71:#72       // block:[B\n+   #71 = Utf8               block\n+   #72 = Utf8               [B\n+   #73 = Methodref          #1.#74        // org/apache/commons/compress/compressors/bzip2/BlockSort.fallbackSort:([I[BI)V\n+   #74 = NameAndType        #58:#75       // fallbackSort:([I[BI)V\n+   #75 = Utf8               ([I[BI)V\n+   #76 = Methodref          #1.#77        // org/apache/commons/compress/compressors/bzip2/BlockSort.fswap:([III)V\n+   #77 = NameAndType        #78:#79       // fswap:([III)V\n+   #78 = Utf8               fswap\n+   #79 = Utf8               ([III)V\n+   #80 = Methodref          #1.#81        // org/apache/commons/compress/compressors/bzip2/BlockSort.fpush:(III)V\n+   #81 = NameAndType        #82:#83       // fpush:(III)V\n+   #82 = Utf8               fpush\n+   #83 = Utf8               (III)V\n+   #84 = Methodref          #1.#85        // org/apache/commons/compress/compressors/bzip2/BlockSort.fpop:(I)[I\n+   #85 = NameAndType        #86:#87       // fpop:(I)[I\n+   #86 = Utf8               fpop\n+   #87 = Utf8               (I)[I\n+   #88 = Methodref          #1.#89        // org/apache/commons/compress/compressors/bzip2/BlockSort.fallbackSimpleSort:([I[III)V\n+   #89 = NameAndType        #90:#91       // fallbackSimpleSort:([I[III)V\n+   #90 = Utf8               fallbackSimpleSort\n+   #91 = Utf8               ([I[III)V\n+   #92 = Long               7621l\n+   #94 = Long               32768l\n+   #96 = Long               3l\n+   #98 = Methodref          #99.#100      // java/lang/Math.min:(II)I\n+   #99 = Class              #101          // java/lang/Math\n+  #100 = NameAndType        #102:#103     // min:(II)I\n+  #101 = Utf8               java/lang/Math\n+  #102 = Utf8               min\n+  #103 = Utf8               (II)I\n+  #104 = Methodref          #1.#105       // org/apache/commons/compress/compressors/bzip2/BlockSort.fvswap:([IIII)V\n+  #105 = NameAndType        #106:#107     // fvswap:([IIII)V\n+  #106 = Utf8               fvswap\n+  #107 = Utf8               ([IIII)V\n+  #108 = Fieldref           #1.#109       // org/apache/commons/compress/compressors/bzip2/BlockSort.eclass:[I\n+  #109 = NameAndType        #110:#16      // eclass:[I\n+  #110 = Utf8               eclass\n+  #111 = Methodref          #1.#112       // org/apache/commons/compress/compressors/bzip2/BlockSort.getEclass:()[I\n+  #112 = NameAndType        #113:#114     // getEclass:()[I\n+  #113 = Utf8               getEclass\n+  #114 = Utf8               ()[I\n+  #115 = Class              #116          // java/util/BitSet\n+  #116 = Utf8               java/util/BitSet\n+  #117 = Methodref          #115.#118     // java/util/BitSet.\"<init>\":(I)V\n+  #118 = NameAndType        #7:#119       // \"<init>\":(I)V\n+  #119 = Utf8               (I)V\n+  #120 = Methodref          #115.#121     // java/util/BitSet.set:(I)V\n+  #121 = NameAndType        #122:#119     // set:(I)V\n+  #122 = Utf8               set\n+  #123 = Methodref          #115.#124     // java/util/BitSet.clear:(I)V\n+  #124 = NameAndType        #125:#119     // clear:(I)V\n+  #125 = Utf8               clear\n+  #126 = Methodref          #115.#127     // java/util/BitSet.get:(I)Z\n+  #127 = NameAndType        #128:#129     // get:(I)Z\n+  #128 = Utf8               get\n+  #129 = Utf8               (I)Z\n+  #130 = Methodref          #115.#131     // java/util/BitSet.nextClearBit:(I)I\n+  #131 = NameAndType        #132:#133     // nextClearBit:(I)I\n+  #132 = Utf8               nextClearBit\n+  #133 = Utf8               (I)I\n+  #134 = Methodref          #115.#135     // java/util/BitSet.nextSetBit:(I)I\n+  #135 = NameAndType        #136:#133     // nextSetBit:(I)I\n+  #136 = Utf8               nextSetBit\n+  #137 = Methodref          #1.#138       // org/apache/commons/compress/compressors/bzip2/BlockSort.fallbackQSort3:([I[III)V\n+  #138 = NameAndType        #139:#91      // fallbackQSort3:([I[III)V\n+  #139 = Utf8               fallbackQSort3\n+  #140 = Fieldref           #1.#141       // org/apache/commons/compress/compressors/bzip2/BlockSort.INCS:[I\n+  #141 = NameAndType        #142:#16      // INCS:[I\n+  #142 = Utf8               INCS\n+  #143 = Methodref          #1.#144       // org/apache/commons/compress/compressors/bzip2/BlockSort.mainSimpleSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)Z\n+  #144 = NameAndType        #145:#146     // mainSimpleSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)Z\n+  #145 = Utf8               mainSimpleSort\n+  #146 = Utf8               (Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)Z\n+  #147 = Methodref          #1.#148       // org/apache/commons/compress/compressors/bzip2/BlockSort.med3:(III)I\n+  #148 = NameAndType        #149:#150     // med3:(III)I\n+  #149 = Utf8               med3\n+  #150 = Utf8               (III)I\n+  #151 = Methodref          #1.#152       // org/apache/commons/compress/compressors/bzip2/BlockSort.vswap:([IIII)V\n+  #152 = NameAndType        #153:#107     // vswap:([IIII)V\n+  #153 = Utf8               vswap\n+  #154 = Methodref          #155.#156     // java/util/Arrays.fill:([II)V\n+  #155 = Class              #157          // java/util/Arrays\n+  #156 = NameAndType        #158:#159     // fill:([II)V\n+  #157 = Utf8               java/util/Arrays\n+  #158 = Utf8               fill\n+  #159 = Utf8               ([II)V\n+  #160 = Class              #161          // org/apache/commons/compress/compressors/bzip2/BZip2Constants\n+  #161 = Utf8               org/apache/commons/compress/compressors/bzip2/BZip2Constants\n+  #162 = Integer            65536\n+  #163 = Integer            2097152\n+  #164 = Integer            -2097153\n+  #165 = Methodref          #1.#166       // org/apache/commons/compress/compressors/bzip2/BlockSort.mainQSort3:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)V\n+  #166 = NameAndType        #167:#168     // mainQSort3:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)V\n+  #167 = Utf8               mainQSort3\n+  #168 = Utf8               (Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)V\n+  #169 = Integer            65534\n+  #170 = Methodref          #99.#171      // java/lang/Math.max:(II)I\n+  #171 = NameAndType        #172:#103     // max:(II)I\n+  #172 = Utf8               max\n+  #173 = Integer            88573\n+  #174 = Integer            265720\n+  #175 = Integer            797161\n+  #176 = Integer            2391484\n+  #177 = Utf8               FTAB_LENGTH\n+  #178 = Utf8               ConstantValue\n+  #179 = Utf8               QSORT_STACK_SIZE\n+  #180 = Integer            1000\n+  #181 = Utf8               FALLBACK_QSORT_STACK_SIZE\n+  #182 = Integer            100\n+  #183 = Utf8               FALLBACK_QSORT_SMALL_THRESH\n+  #184 = Integer            10\n+  #185 = Utf8               SMALL_THRESH\n+  #186 = Integer            20\n+  #187 = Utf8               DEPTH_THRESH\n+  #188 = Utf8               WORK_FACTOR\n+  #189 = Integer            30\n+  #190 = Utf8               SETMASK\n+  #191 = Utf8               CLEARMASK\n+  #192 = Utf8               (Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;)V\n+  #193 = Utf8               Code\n+  #194 = Utf8               LineNumberTable\n+  #195 = Utf8               LocalVariableTable\n+  #196 = Utf8               this\n+  #197 = Utf8               Lorg/apache/commons/compress/compressors/bzip2/BlockSort;\n+  #198 = Utf8               data\n+  #199 = Utf8               Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;\n+  #200 = Utf8               blockSort\n+  #201 = Utf8               i\n+  #202 = Utf8               last\n+  #203 = Utf8               StackMapTable\n+  #204 = Class              #16           // \"[I\"\n+  #205 = Utf8               tmp\n+  #206 = Utf8               ec_tmp\n+  #207 = Utf8               j\n+  #208 = Utf8               lo\n+  #209 = Utf8               hi\n+  #210 = Utf8               zz1\n+  #211 = Utf8               zz2\n+  #212 = Utf8               zztmp\n+  #213 = Utf8               yyp1\n+  #214 = Utf8               yyp2\n+  #215 = Utf8               yyn\n+  #216 = Utf8               sp\n+  #217 = Utf8               lz\n+  #218 = Utf8               hz\n+  #219 = Utf8               med\n+  #220 = Utf8               J\n+  #221 = Utf8               n\n+  #222 = Utf8               s\n+  #223 = Utf8               r3\n+  #224 = Utf8               m\n+  #225 = Utf8               unLo\n+  #226 = Utf8               ltLo\n+  #227 = Utf8               unHi\n+  #228 = Utf8               gtHi\n+  #229 = Utf8               loSt\n+  #230 = Utf8               hiSt\n+  #231 = Utf8               r\n+  #232 = Utf8               k\n+  #233 = Utf8               cc\n+  #234 = Utf8               cc1\n+  #235 = Utf8               nblock\n+  #236 = Utf8               H\n+  #237 = Utf8               l\n+  #238 = Utf8               nNotDone\n+  #239 = Utf8               nBhtab\n+  #240 = Utf8               bhtab\n+  #241 = Utf8               Ljava/util/BitSet;\n+  #242 = Class              #72           // \"[B\"\n+  #243 = Utf8               x\n+  #244 = Utf8               i1\n+  #245 = Utf8               i2\n+  #246 = Utf8               v\n+  #247 = Utf8               vd\n+  #248 = Utf8               onceRunned\n+  #249 = Utf8               a\n+  #250 = Utf8               h\n+  #251 = Utf8               mj\n+  #252 = Utf8               dataShadow\n+  #253 = Utf8               d\n+  #254 = Utf8               lastShadow\n+  #255 = Utf8               bigN\n+  #256 = Utf8               hp\n+  #257 = Utf8               lastPlus1\n+  #258 = Utf8               firstAttemptShadow\n+  #259 = Utf8               workLimitShadow\n+  #260 = Utf8               workDoneShadow\n+  #261 = Class              #42           // \"[C\"\n+  #262 = Utf8               t\n+  #263 = Utf8               p1\n+  #264 = Utf8               p2\n+  #265 = Utf8               b\n+  #266 = Utf8               c\n+  #267 = Utf8               temp\n+  #268 = Utf8               d1\n+  #269 = Utf8               dSt\n+  #270 = Utf8               c2\n+  #271 = Utf8               ro\n+  #272 = Utf8               vv\n+  #273 = Utf8               sb\n+  #274 = Utf8               ftab_sb\n+  #275 = Utf8               fmap_j\n+  #276 = Utf8               hj\n+  #277 = Utf8               a2update\n+  #278 = Utf8               qVal\n+  #279 = Utf8               C\n+  #280 = Utf8               bbStart\n+  #281 = Utf8               bbSize\n+  #282 = Utf8               shifts\n+  #283 = Utf8               ss\n+  #284 = Utf8               runningOrder\n+  #285 = Utf8               copy\n+  #286 = Utf8               bigDone\n+  #287 = Utf8               c1\n+  #288 = Class              #32           // \"[Z\"\n+  #289 = Utf8               <clinit>\n+  #290 = Utf8               SourceFile\n+  #291 = Utf8               BlockSort.java\n+  #292 = Utf8               InnerClasses\n+  #293 = Class              #294          // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream\n+  #294 = Utf8               org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream\n+  #295 = Utf8               Data\n {\n   private static final int FTAB_LENGTH = 65537;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 65537\n \n   private static final int QSORT_STACK_SIZE = 1000;\n@@ -404,47 +404,47 @@\n \n   org.apache.commons.compress.compressors.bzip2.BlockSort(org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream$Data);\n     descriptor: (Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;)V\n     flags: (0x0000)\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #2                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #3                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: getstatic     #3                  // Field STACK_SIZE:I\n+         5: getstatic     #9                  // Field STACK_SIZE:I\n          8: newarray       int\n-        10: putfield      #4                  // Field stack_ll:[I\n+        10: putfield      #13                 // Field stack_ll:[I\n         13: aload_0\n-        14: getstatic     #3                  // Field STACK_SIZE:I\n+        14: getstatic     #9                  // Field STACK_SIZE:I\n         17: newarray       int\n-        19: putfield      #5                  // Field stack_hh:[I\n+        19: putfield      #17                 // Field stack_hh:[I\n         22: aload_0\n         23: sipush        1000\n         26: newarray       int\n-        28: putfield      #6                  // Field stack_dd:[I\n+        28: putfield      #20                 // Field stack_dd:[I\n         31: aload_0\n         32: sipush        256\n         35: newarray       int\n-        37: putfield      #7                  // Field mainSort_runningOrder:[I\n+        37: putfield      #23                 // Field mainSort_runningOrder:[I\n         40: aload_0\n         41: sipush        256\n         44: newarray       int\n-        46: putfield      #8                  // Field mainSort_copy:[I\n+        46: putfield      #26                 // Field mainSort_copy:[I\n         49: aload_0\n         50: sipush        256\n         53: newarray       boolean\n-        55: putfield      #9                  // Field mainSort_bigDone:[Z\n+        55: putfield      #29                 // Field mainSort_bigDone:[Z\n         58: aload_0\n-        59: ldc           #10                 // int 65537\n+        59: ldc           #33                 // int 65537\n         61: newarray       int\n-        63: putfield      #11                 // Field ftab:[I\n+        63: putfield      #34                 // Field ftab:[I\n         66: aload_0\n         67: aload_1\n-        68: getfield      #12                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.sfmap:[C\n-        71: putfield      #13                 // Field quadrant:[C\n+        68: getfield      #37                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.sfmap:[C\n+        71: putfield      #43                 // Field quadrant:[C\n         74: return\n       LineNumberTable:\n         line 151: 0\n         line 134: 4\n         line 135: 13\n         line 136: 22\n         line 138: 31\n@@ -463,65 +463,65 @@\n     flags: (0x0000)\n     Code:\n       stack=3, locals=5, args_size=3\n          0: aload_0\n          1: bipush        30\n          3: iload_2\n          4: imul\n-         5: putfield      #14                 // Field workLimit:I\n+         5: putfield      #46                 // Field workLimit:I\n          8: aload_0\n          9: iconst_0\n-        10: putfield      #15                 // Field workDone:I\n+        10: putfield      #49                 // Field workDone:I\n         13: aload_0\n         14: iconst_1\n-        15: putfield      #16                 // Field firstAttempt:Z\n+        15: putfield      #52                 // Field firstAttempt:Z\n         18: iload_2\n         19: iconst_1\n         20: iadd\n         21: sipush        10000\n         24: if_icmpge     36\n         27: aload_0\n         28: aload_1\n         29: iload_2\n-        30: invokevirtual #17                 // Method fallbackSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n+        30: invokevirtual #56                 // Method fallbackSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n         33: goto          66\n         36: aload_0\n         37: aload_1\n         38: iload_2\n-        39: invokevirtual #18                 // Method mainSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n+        39: invokevirtual #60                 // Method mainSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n         42: aload_0\n-        43: getfield      #16                 // Field firstAttempt:Z\n+        43: getfield      #52                 // Field firstAttempt:Z\n         46: ifeq          66\n         49: aload_0\n-        50: getfield      #15                 // Field workDone:I\n+        50: getfield      #49                 // Field workDone:I\n         53: aload_0\n-        54: getfield      #14                 // Field workLimit:I\n+        54: getfield      #46                 // Field workLimit:I\n         57: if_icmple     66\n         60: aload_0\n         61: aload_1\n         62: iload_2\n-        63: invokevirtual #17                 // Method fallbackSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n+        63: invokevirtual #56                 // Method fallbackSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n         66: aload_1\n-        67: getfield      #19                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.fmap:[I\n+        67: getfield      #63                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.fmap:[I\n         70: astore_3\n         71: aload_1\n         72: iconst_m1\n-        73: putfield      #20                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.origPtr:I\n+        73: putfield      #66                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.origPtr:I\n         76: iconst_0\n         77: istore        4\n         79: iload         4\n         81: iload_2\n         82: if_icmpgt     107\n         85: aload_3\n         86: iload         4\n         88: iaload\n         89: ifne          101\n         92: aload_1\n         93: iload         4\n-        95: putfield      #20                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.origPtr:I\n+        95: putfield      #66                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.origPtr:I\n         98: goto          107\n        101: iinc          4, 1\n        104: goto          79\n        107: return\n       LineNumberTable:\n         line 156: 0\n         line 157: 8\n@@ -558,41 +558,41 @@\n \n   final void fallbackSort(org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream$Data, int);\n     descriptor: (Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n     flags: (0x0010) ACC_FINAL\n     Code:\n       stack=5, locals=4, args_size=3\n          0: aload_1\n-         1: getfield      #21                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.block:[B\n+         1: getfield      #69                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.block:[B\n          4: iconst_0\n          5: aload_1\n-         6: getfield      #21                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.block:[B\n+         6: getfield      #69                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.block:[B\n          9: iload_2\n         10: iconst_1\n         11: iadd\n         12: baload\n         13: bastore\n         14: aload_0\n         15: aload_1\n-        16: getfield      #19                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.fmap:[I\n+        16: getfield      #63                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.fmap:[I\n         19: aload_1\n-        20: getfield      #21                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.block:[B\n+        20: getfield      #69                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.block:[B\n         23: iload_2\n         24: iconst_1\n         25: iadd\n-        26: invokevirtual #22                 // Method fallbackSort:([I[BI)V\n+        26: invokevirtual #73                 // Method fallbackSort:([I[BI)V\n         29: iconst_0\n         30: istore_3\n         31: iload_3\n         32: iload_2\n         33: iconst_1\n         34: iadd\n         35: if_icmpge     54\n         38: aload_1\n-        39: getfield      #19                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.fmap:[I\n+        39: getfield      #63                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.fmap:[I\n         42: iload_3\n         43: dup2\n         44: iaload\n         45: iconst_1\n         46: isub\n         47: iastore\n         48: iinc          3, 1\n@@ -601,21 +601,21 @@\n         55: istore_3\n         56: iload_3\n         57: iload_2\n         58: iconst_1\n         59: iadd\n         60: if_icmpge     89\n         63: aload_1\n-        64: getfield      #19                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.fmap:[I\n+        64: getfield      #63                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.fmap:[I\n         67: iload_3\n         68: iaload\n         69: iconst_m1\n         70: if_icmpne     83\n         73: aload_1\n-        74: getfield      #19                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.fmap:[I\n+        74: getfield      #63                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.fmap:[I\n         77: iload_3\n         78: iload_2\n         79: iastore\n         80: goto          89\n         83: iinc          3, 1\n         86: goto          56\n         89: return\n@@ -863,15 +863,15 @@\n       stack=4, locals=5, args_size=5\n          0: iload         4\n          2: ifle          24\n          5: aload_0\n          6: aload_1\n          7: iload_2\n          8: iload_3\n-         9: invokespecial #23                 // Method fswap:([III)V\n+         9: invokespecial #76                 // Method fswap:([III)V\n         12: iinc          2, 1\n         15: iinc          3, 1\n         18: iinc          4, -1\n         21: goto          0\n         24: return\n       LineNumberTable:\n         line 315: 0\n@@ -891,20 +891,20 @@\n \n   private void fpush(int, int, int);\n     descriptor: (III)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #4                  // Field stack_ll:[I\n+         1: getfield      #13                 // Field stack_ll:[I\n          4: iload_1\n          5: iload_2\n          6: iastore\n          7: aload_0\n-         8: getfield      #5                  // Field stack_hh:[I\n+         8: getfield      #17                 // Field stack_hh:[I\n         11: iload_1\n         12: iload_3\n         13: iastore\n         14: return\n       LineNumberTable:\n         line 322: 0\n         line 323: 7\n@@ -922,22 +922,22 @@\n     Code:\n       stack=5, locals=2, args_size=2\n          0: iconst_2\n          1: newarray       int\n          3: dup\n          4: iconst_0\n          5: aload_0\n-         6: getfield      #4                  // Field stack_ll:[I\n+         6: getfield      #13                 // Field stack_ll:[I\n          9: iload_1\n         10: iaload\n         11: iastore\n         12: dup\n         13: iconst_1\n         14: aload_0\n-        15: getfield      #5                  // Field stack_hh:[I\n+        15: getfield      #17                 // Field stack_hh:[I\n         18: iload_1\n         19: iaload\n         20: iastore\n         21: areturn\n       LineNumberTable:\n         line 327: 0\n       LocalVariableTable:\n@@ -955,21 +955,21 @@\n          3: iconst_0\n          4: istore        14\n          6: aload_0\n          7: iload         14\n          9: iinc          14, 1\n         12: iload_3\n         13: iload         4\n-        15: invokespecial #24                 // Method fpush:(III)V\n+        15: invokespecial #80                 // Method fpush:(III)V\n         18: iload         14\n         20: ifle          470\n         23: aload_0\n         24: iinc          14, -1\n         27: iload         14\n-        29: invokespecial #25                 // Method fpop:(I)[I\n+        29: invokespecial #84                 // Method fpop:(I)[I\n         32: astore        15\n         34: aload         15\n         36: iconst_0\n         37: iaload\n         38: istore        5\n         40: aload         15\n         42: iconst_1\n@@ -981,26 +981,26 @@\n         51: bipush        10\n         53: if_icmpge     69\n         56: aload_0\n         57: aload_1\n         58: aload_2\n         59: iload         5\n         61: iload         8\n-        63: invokespecial #26                 // Method fallbackSimpleSort:([I[III)V\n+        63: invokespecial #88                 // Method fallbackSimpleSort:([I[III)V\n         66: goto          18\n         69: lload         12\n-        71: ldc2_w        #27                 // long 7621l\n+        71: ldc2_w        #92                 // long 7621l\n         74: lmul\n         75: lconst_1\n         76: ladd\n-        77: ldc2_w        #29                 // long 32768l\n+        77: ldc2_w        #94                 // long 32768l\n         80: lrem\n         81: lstore        12\n         83: lload         12\n-        85: ldc2_w        #31                 // long 3l\n+        85: ldc2_w        #96                 // long 3l\n         88: lrem\n         89: lstore        16\n         91: lload         16\n         93: lconst_0\n         94: lcmp\n         95: ifne          110\n         98: aload_2\n@@ -1057,15 +1057,15 @@\n        177: istore        11\n        179: iload         11\n        181: ifne          202\n        184: aload_0\n        185: aload_1\n        186: iload         6\n        188: iload         7\n-       190: invokespecial #23                 // Method fswap:([III)V\n+       190: invokespecial #76                 // Method fswap:([III)V\n        193: iinc          7, 1\n        196: iinc          6, 1\n        199: goto          157\n        202: iload         11\n        204: ifle          210\n        207: goto          216\n        210: iinc          6, 1\n@@ -1085,15 +1085,15 @@\n        236: istore        11\n        238: iload         11\n        240: ifne          261\n        243: aload_0\n        244: aload_1\n        245: iload         9\n        247: iload         10\n-       249: invokespecial #23                 // Method fswap:([III)V\n+       249: invokespecial #76                 // Method fswap:([III)V\n        252: iinc          10, -1\n        255: iinc          9, -1\n        258: goto          216\n        261: iload         11\n        263: ifge          269\n        266: goto          275\n        269: iinc          9, -1\n@@ -1102,58 +1102,58 @@\n        277: iload         9\n        279: if_icmple     285\n        282: goto          303\n        285: aload_0\n        286: aload_1\n        287: iload         6\n        289: iload         9\n-       291: invokespecial #23                 // Method fswap:([III)V\n+       291: invokespecial #76                 // Method fswap:([III)V\n        294: iinc          6, 1\n        297: iinc          9, -1\n        300: goto          157\n        303: iload         10\n        305: iload         7\n        307: if_icmpge     313\n        310: goto          18\n        313: iload         7\n        315: iload         5\n        317: isub\n        318: iload         6\n        320: iload         7\n        322: isub\n-       323: invokestatic  #33                 // Method java/lang/Math.min:(II)I\n+       323: invokestatic  #98                 // Method java/lang/Math.min:(II)I\n        326: istore        11\n        328: aload_0\n        329: aload_1\n        330: iload         5\n        332: iload         6\n        334: iload         11\n        336: isub\n        337: iload         11\n-       339: invokespecial #34                 // Method fvswap:([IIII)V\n+       339: invokespecial #104                // Method fvswap:([IIII)V\n        342: iload         8\n        344: iload         10\n        346: isub\n        347: iload         10\n        349: iload         9\n        351: isub\n-       352: invokestatic  #33                 // Method java/lang/Math.min:(II)I\n+       352: invokestatic  #98                 // Method java/lang/Math.min:(II)I\n        355: istore        20\n        357: aload_0\n        358: aload_1\n        359: iload         9\n        361: iconst_1\n        362: iadd\n        363: iload         8\n        365: iload         20\n        367: isub\n        368: iconst_1\n        369: iadd\n        370: iload         20\n-       372: invokespecial #34                 // Method fvswap:([IIII)V\n+       372: invokespecial #104                // Method fvswap:([IIII)V\n        375: iload         5\n        377: iload         6\n        379: iadd\n        380: iload         7\n        382: isub\n        383: iconst_1\n        384: isub\n@@ -1174,34 +1174,34 @@\n        408: isub\n        409: if_icmple     441\n        412: aload_0\n        413: iload         14\n        415: iinc          14, 1\n        418: iload         5\n        420: iload         11\n-       422: invokespecial #24                 // Method fpush:(III)V\n+       422: invokespecial #80                 // Method fpush:(III)V\n        425: aload_0\n        426: iload         14\n        428: iinc          14, 1\n        431: iload         20\n        433: iload         8\n-       435: invokespecial #24                 // Method fpush:(III)V\n+       435: invokespecial #80                 // Method fpush:(III)V\n        438: goto          467\n        441: aload_0\n        442: iload         14\n        444: iinc          14, 1\n        447: iload         20\n        449: iload         8\n-       451: invokespecial #24                 // Method fpush:(III)V\n+       451: invokespecial #80                 // Method fpush:(III)V\n        454: aload_0\n        455: iload         14\n        457: iinc          14, 1\n        460: iload         5\n        462: iload         11\n-       464: invokespecial #24                 // Method fpush:(III)V\n+       464: invokespecial #80                 // Method fpush:(III)V\n        467: goto          18\n        470: return\n       LineNumberTable:\n         line 346: 0\n         line 347: 3\n         line 348: 6\n         line 350: 18\n@@ -1339,26 +1339,26 @@\n \n   private int[] getEclass();\n     descriptor: ()[I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #35                 // Field eclass:[I\n+         1: getfield      #108                // Field eclass:[I\n          4: ifnonnull     20\n          7: aload_0\n          8: aload_0\n-         9: getfield      #13                 // Field quadrant:[C\n+         9: getfield      #43                 // Field quadrant:[C\n         12: arraylength\n         13: iconst_2\n         14: idiv\n         15: newarray       int\n-        17: putfield      #35                 // Field eclass:[I\n+        17: putfield      #108                // Field eclass:[I\n         20: aload_0\n-        21: getfield      #35                 // Field eclass:[I\n+        21: getfield      #108                // Field eclass:[I\n         24: areturn\n       LineNumberTable:\n         line 447: 0\n         line 448: 7\n         line 450: 20\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1371,15 +1371,15 @@\n     flags: (0x0010) ACC_FINAL\n     Code:\n       stack=6, locals=17, args_size=4\n          0: sipush        257\n          3: newarray       int\n          5: astore        4\n          7: aload_0\n-         8: invokespecial #36                 // Method getEclass:()[I\n+         8: invokespecial #111                // Method getEclass:()[I\n         11: astore        15\n         13: iconst_0\n         14: istore        6\n         16: iload         6\n         18: iload_3\n         19: if_icmpge     34\n         22: aload         15\n@@ -1451,66 +1451,66 @@\n        136: iastore\n        137: iinc          6, 1\n        140: goto          99\n        143: bipush        64\n        145: iload_3\n        146: iadd\n        147: istore        14\n-       149: new           #37                 // class java/util/BitSet\n+       149: new           #115                // class java/util/BitSet\n        152: dup\n        153: iload         14\n-       155: invokespecial #38                 // Method java/util/BitSet.\"<init>\":(I)V\n+       155: invokespecial #117                // Method java/util/BitSet.\"<init>\":(I)V\n        158: astore        16\n        160: iconst_0\n        161: istore        6\n        163: iload         6\n        165: sipush        256\n        168: if_icmpge     187\n        171: aload         16\n        173: aload         4\n        175: iload         6\n        177: iaload\n-       178: invokevirtual #39                 // Method java/util/BitSet.set:(I)V\n+       178: invokevirtual #120                // Method java/util/BitSet.set:(I)V\n        181: iinc          6, 1\n        184: goto          163\n        187: iconst_0\n        188: istore        6\n        190: iload         6\n        192: bipush        32\n        194: if_icmpge     227\n        197: aload         16\n        199: iload_3\n        200: iconst_2\n        201: iload         6\n        203: imul\n        204: iadd\n-       205: invokevirtual #39                 // Method java/util/BitSet.set:(I)V\n+       205: invokevirtual #120                // Method java/util/BitSet.set:(I)V\n        208: aload         16\n        210: iload_3\n        211: iconst_2\n        212: iload         6\n        214: imul\n        215: iadd\n        216: iconst_1\n        217: iadd\n-       218: invokevirtual #40                 // Method java/util/BitSet.clear:(I)V\n+       218: invokevirtual #123                // Method java/util/BitSet.clear:(I)V\n        221: iinc          6, 1\n        224: goto          190\n        227: iconst_1\n        228: istore        5\n        230: iconst_0\n        231: istore        7\n        233: iconst_0\n        234: istore        6\n        236: iload         6\n        238: iload_3\n        239: if_icmpge     289\n        242: aload         16\n        244: iload         6\n-       246: invokevirtual #41                 // Method java/util/BitSet.get:(I)Z\n+       246: invokevirtual #126                // Method java/util/BitSet.get:(I)Z\n        249: ifeq          256\n        252: iload         6\n        254: istore        7\n        256: aload_1\n        257: iload         6\n        259: iaload\n        260: iload         5\n@@ -1534,29 +1534,29 @@\n        293: istore        10\n        295: iload         10\n        297: iconst_1\n        298: iadd\n        299: istore        8\n        301: aload         16\n        303: iload         8\n-       305: invokevirtual #42                 // Method java/util/BitSet.nextClearBit:(I)I\n+       305: invokevirtual #130                // Method java/util/BitSet.nextClearBit:(I)I\n        308: istore        8\n        310: iload         8\n        312: iconst_1\n        313: isub\n        314: istore        9\n        316: iload         9\n        318: iload_3\n        319: if_icmplt     325\n        322: goto          428\n        325: aload         16\n        327: iload         8\n        329: iconst_1\n        330: iadd\n-       331: invokevirtual #43                 // Method java/util/BitSet.nextSetBit:(I)I\n+       331: invokevirtual #134                // Method java/util/BitSet.nextSetBit:(I)I\n        334: istore        8\n        336: iload         8\n        338: iconst_1\n        339: isub\n        340: istore        10\n        342: iload         10\n        344: iload_3\n@@ -1574,15 +1574,15 @@\n        367: iadd\n        368: istore        13\n        370: aload_0\n        371: aload_1\n        372: aload         15\n        374: iload         9\n        376: iload         10\n-       378: invokespecial #44                 // Method fallbackQSort3:([I[III)V\n+       378: invokespecial #137                // Method fallbackQSort3:([I[III)V\n        381: iconst_m1\n        382: istore        11\n        384: iload         9\n        386: istore        6\n        388: iload         6\n        390: iload         10\n        392: if_icmpgt     295\n@@ -1593,15 +1593,15 @@\n        401: iaload\n        402: istore        12\n        404: iload         11\n        406: iload         12\n        408: if_icmpeq     422\n        411: aload         16\n        413: iload         6\n-       415: invokevirtual #39                 // Method java/util/BitSet.set:(I)V\n+       415: invokevirtual #120                // Method java/util/BitSet.set:(I)V\n        418: iload         12\n        420: istore        11\n        422: iinc          6, 1\n        425: goto          388\n        428: iload         5\n        430: iconst_2\n        431: imul\n@@ -1767,60 +1767,60 @@\n          3: iconst_1\n          4: iadd\n          5: istore        6\n          7: iload         6\n          9: iconst_2\n         10: if_icmpge     37\n         13: aload_0\n-        14: getfield      #16                 // Field firstAttempt:Z\n+        14: getfield      #52                 // Field firstAttempt:Z\n         17: ifeq          35\n         20: aload_0\n-        21: getfield      #15                 // Field workDone:I\n+        21: getfield      #49                 // Field workDone:I\n         24: aload_0\n-        25: getfield      #14                 // Field workLimit:I\n+        25: getfield      #46                 // Field workLimit:I\n         28: if_icmple     35\n         31: iconst_1\n         32: goto          36\n         35: iconst_0\n         36: ireturn\n         37: iconst_0\n         38: istore        7\n-        40: getstatic     #45                 // Field INCS:[I\n+        40: getstatic     #140                // Field INCS:[I\n         43: iload         7\n         45: iaload\n         46: iload         6\n         48: if_icmpge     57\n         51: iinc          7, 1\n         54: goto          40\n         57: aload_1\n-        58: getfield      #19                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.fmap:[I\n+        58: getfield      #63                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.fmap:[I\n         61: astore        8\n         63: aload_0\n-        64: getfield      #13                 // Field quadrant:[C\n+        64: getfield      #43                 // Field quadrant:[C\n         67: astore        9\n         69: aload_1\n-        70: getfield      #21                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.block:[B\n+        70: getfield      #69                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.block:[B\n         73: astore        10\n         75: iload         5\n         77: iconst_1\n         78: iadd\n         79: istore        11\n         81: aload_0\n-        82: getfield      #16                 // Field firstAttempt:Z\n+        82: getfield      #52                 // Field firstAttempt:Z\n         85: istore        12\n         87: aload_0\n-        88: getfield      #14                 // Field workLimit:I\n+        88: getfield      #46                 // Field workLimit:I\n         91: istore        13\n         93: aload_0\n-        94: getfield      #15                 // Field workDone:I\n+        94: getfield      #49                 // Field workDone:I\n         97: istore        14\n         99: iinc          7, -1\n        102: iload         7\n        104: iflt          905\n-       107: getstatic     #45                 // Field INCS:[I\n+       107: getstatic     #140                // Field INCS:[I\n        110: iload         7\n        112: iaload\n        113: istore        15\n        115: iload_2\n        116: iload         15\n        118: iadd\n        119: iconst_1\n@@ -2268,15 +2268,15 @@\n        892: iload         14\n        894: iload         13\n        896: if_icmple     129\n        899: goto          905\n        902: goto          99\n        905: aload_0\n        906: iload         14\n-       908: putfield      #15                 // Field workDone:I\n+       908: putfield      #49                 // Field workDone:I\n        911: iload         12\n        913: ifeq          927\n        916: iload         14\n        918: iload         13\n        920: if_icmple     927\n        923: iconst_1\n        924: goto          928\n@@ -2563,27 +2563,27 @@\n \n   private void mainQSort3(org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream$Data, int, int, int, int);\n     descriptor: (Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=6, locals=23, args_size=6\n          0: aload_0\n-         1: getfield      #4                  // Field stack_ll:[I\n+         1: getfield      #13                 // Field stack_ll:[I\n          4: astore        6\n          6: aload_0\n-         7: getfield      #5                  // Field stack_hh:[I\n+         7: getfield      #17                 // Field stack_hh:[I\n         10: astore        7\n         12: aload_0\n-        13: getfield      #6                  // Field stack_dd:[I\n+        13: getfield      #20                 // Field stack_dd:[I\n         16: astore        8\n         18: aload_1\n-        19: getfield      #19                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.fmap:[I\n+        19: getfield      #63                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.fmap:[I\n         22: astore        9\n         24: aload_1\n-        25: getfield      #21                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.block:[B\n+        25: getfield      #69                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.block:[B\n         28: astore        10\n         30: aload         6\n         32: iconst_0\n         33: iload_2\n         34: iastore\n         35: aload         7\n         37: iconst_0\n@@ -2620,15 +2620,15 @@\n         92: if_icmple     112\n         95: aload_0\n         96: aload_1\n         97: iload         12\n         99: iload         13\n        101: iload         14\n        103: iload         5\n-       105: invokespecial #46                 // Method mainSimpleSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)Z\n+       105: invokespecial #143                // Method mainSimpleSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)Z\n        108: ifeq          578\n        111: return\n        112: iload         14\n        114: iconst_1\n        115: iadd\n        116: istore        15\n        118: aload         10\n@@ -2658,15 +2658,15 @@\n        158: iushr\n        159: iaload\n        160: iload         15\n        162: iadd\n        163: baload\n        164: sipush        255\n        167: iand\n-       168: invokestatic  #47                 // Method med3:(III)I\n+       168: invokestatic  #147                // Method med3:(III)I\n        171: istore        16\n        173: iload         12\n        175: istore        17\n        177: iload         13\n        179: istore        18\n        181: iload         12\n        183: istore        19\n@@ -2788,40 +2788,40 @@\n        415: goto          578\n        418: iload         19\n        420: iload         12\n        422: isub\n        423: iload         17\n        425: iload         19\n        427: isub\n-       428: invokestatic  #33                 // Method java/lang/Math.min:(II)I\n+       428: invokestatic  #98                 // Method java/lang/Math.min:(II)I\n        431: istore        21\n        433: aload         9\n        435: iload         12\n        437: iload         17\n        439: iload         21\n        441: isub\n        442: iload         21\n-       444: invokestatic  #48                 // Method vswap:([IIII)V\n+       444: invokestatic  #151                // Method vswap:([IIII)V\n        447: iload         13\n        449: iload         20\n        451: isub\n        452: iload         20\n        454: iload         18\n        456: isub\n-       457: invokestatic  #33                 // Method java/lang/Math.min:(II)I\n+       457: invokestatic  #98                 // Method java/lang/Math.min:(II)I\n        460: istore        22\n        462: aload         9\n        464: iload         17\n        466: iload         13\n        468: iload         22\n        470: isub\n        471: iconst_1\n        472: iadd\n        473: iload         22\n-       475: invokestatic  #48                 // Method vswap:([IIII)V\n+       475: invokestatic  #151                // Method vswap:([IIII)V\n        478: iload         12\n        480: iload         17\n        482: iadd\n        483: iload         19\n        485: isub\n        486: iconst_1\n        487: isub\n@@ -3017,43 +3017,43 @@\n \n   final void mainSort(org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream$Data, int);\n     descriptor: (Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n     flags: (0x0010) ACC_FINAL\n     Code:\n       stack=6, locals=21, args_size=3\n          0: aload_0\n-         1: getfield      #7                  // Field mainSort_runningOrder:[I\n+         1: getfield      #23                 // Field mainSort_runningOrder:[I\n          4: astore_3\n          5: aload_0\n-         6: getfield      #8                  // Field mainSort_copy:[I\n+         6: getfield      #26                 // Field mainSort_copy:[I\n          9: astore        4\n         11: aload_0\n-        12: getfield      #9                  // Field mainSort_bigDone:[Z\n+        12: getfield      #29                 // Field mainSort_bigDone:[Z\n         15: astore        5\n         17: aload_0\n-        18: getfield      #11                 // Field ftab:[I\n+        18: getfield      #34                 // Field ftab:[I\n         21: astore        6\n         23: aload_1\n-        24: getfield      #21                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.block:[B\n+        24: getfield      #69                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.block:[B\n         27: astore        7\n         29: aload_1\n-        30: getfield      #19                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.fmap:[I\n+        30: getfield      #63                 // Field org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.fmap:[I\n         33: astore        8\n         35: aload_0\n-        36: getfield      #13                 // Field quadrant:[C\n+        36: getfield      #43                 // Field quadrant:[C\n         39: astore        9\n         41: aload_0\n-        42: getfield      #14                 // Field workLimit:I\n+        42: getfield      #46                 // Field workLimit:I\n         45: istore        10\n         47: aload_0\n-        48: getfield      #16                 // Field firstAttempt:Z\n+        48: getfield      #52                 // Field firstAttempt:Z\n         51: istore        11\n         53: aload         6\n         55: iconst_0\n-        56: invokestatic  #49                 // Method java/util/Arrays.fill:([II)V\n+        56: invokestatic  #154                // Method java/util/Arrays.fill:([II)V\n         59: iconst_0\n         60: istore        12\n         62: iload         12\n         64: bipush        20\n         66: if_icmpge     95\n         69: aload         7\n         71: iload_2\n@@ -3128,15 +3128,15 @@\n        177: iload         14\n        179: istore        12\n        181: iinc          13, 1\n        184: goto          143\n        187: iconst_1\n        188: istore        13\n        190: iload         13\n-       192: ldc           #51                 // int 65536\n+       192: ldc           #162                // int 65536\n        194: if_icmpgt     218\n        197: aload         6\n        199: iload         13\n        201: dup2\n        202: iaload\n        203: aload         6\n        205: iload         13\n@@ -3330,53 +3330,53 @@\n        527: iadd\n        528: istore        16\n        530: aload         6\n        532: iload         16\n        534: iaload\n        535: istore        17\n        537: iload         17\n-       539: ldc           #52                 // int 2097152\n+       539: ldc           #163                // int 2097152\n        541: iand\n-       542: ldc           #52                 // int 2097152\n+       542: ldc           #163                // int 2097152\n        544: if_icmpeq     611\n        547: iload         17\n-       549: ldc           #53                 // int -2097153\n+       549: ldc           #164                // int -2097153\n        551: iand\n        552: istore        18\n        554: aload         6\n        556: iload         16\n        558: iconst_1\n        559: iadd\n        560: iaload\n-       561: ldc           #53                 // int -2097153\n+       561: ldc           #164                // int -2097153\n        563: iand\n        564: iconst_1\n        565: isub\n        566: istore        19\n        568: iload         19\n        570: iload         18\n        572: if_icmple     601\n        575: aload_0\n        576: aload_1\n        577: iload         18\n        579: iload         19\n        581: iconst_2\n        582: iload_2\n-       583: invokespecial #54                 // Method mainQSort3:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)V\n+       583: invokespecial #165                // Method mainQSort3:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)V\n        586: iload         11\n        588: ifeq          601\n        591: aload_0\n-       592: getfield      #15                 // Field workDone:I\n+       592: getfield      #49                 // Field workDone:I\n        595: iload         10\n        597: if_icmple     601\n        600: return\n        601: aload         6\n        603: iload         16\n        605: iload         17\n-       607: ldc           #52                 // int 2097152\n+       607: ldc           #163                // int 2097152\n        609: ior\n        610: iastore\n        611: iinc          15, 1\n        614: goto          512\n        617: iconst_0\n        618: istore        15\n        620: iload         15\n@@ -3387,35 +3387,35 @@\n        632: aload         6\n        634: iload         15\n        636: bipush        8\n        638: ishl\n        639: iload         14\n        641: iadd\n        642: iaload\n-       643: ldc           #53                 // int -2097153\n+       643: ldc           #164                // int -2097153\n        645: iand\n        646: iastore\n        647: iinc          15, 1\n        650: goto          620\n        653: aload         6\n        655: iload         14\n        657: bipush        8\n        659: ishl\n        660: iaload\n-       661: ldc           #53                 // int -2097153\n+       661: ldc           #164                // int -2097153\n        663: iand\n        664: istore        15\n        666: aload         6\n        668: iload         14\n        670: iconst_1\n        671: iadd\n        672: bipush        8\n        674: ishl\n        675: iaload\n-       676: ldc           #53                 // int -2097153\n+       676: ldc           #164                // int -2097153\n        678: iand\n        679: istore        16\n        681: iload         15\n        683: iload         16\n        685: if_icmpge     750\n        688: aload         8\n        690: iload         15\n@@ -3461,15 +3461,15 @@\n        765: iload         15\n        767: bipush        8\n        769: ishl\n        770: iload         14\n        772: iadd\n        773: dup2\n        774: iaload\n-       775: ldc           #52                 // int 2097152\n+       775: ldc           #163                // int 2097152\n        777: ior\n        778: iastore\n        779: goto          755\n        782: aload         5\n        784: iload         14\n        786: iconst_1\n        787: bastore\n@@ -3477,35 +3477,35 @@\n        790: sipush        255\n        793: if_icmpge     905\n        796: aload         6\n        798: iload         14\n        800: bipush        8\n        802: ishl\n        803: iaload\n-       804: ldc           #53                 // int -2097153\n+       804: ldc           #164                // int -2097153\n        806: iand\n        807: istore        15\n        809: aload         6\n        811: iload         14\n        813: iconst_1\n        814: iadd\n        815: bipush        8\n        817: ishl\n        818: iaload\n-       819: ldc           #53                 // int -2097153\n+       819: ldc           #164                // int -2097153\n        821: iand\n        822: iload         15\n        824: isub\n        825: istore        16\n        827: iconst_0\n        828: istore        17\n        830: iload         16\n        832: iload         17\n        834: ishr\n-       835: ldc           #55                 // int 65534\n+       835: ldc           #169                // int 65534\n        837: if_icmple     846\n        840: iinc          17, 1\n        843: goto          830\n        846: iconst_0\n        847: istore        18\n        849: iload         18\n        851: iload         16\n@@ -3792,16 +3792,16 @@\n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=4, locals=0, args_size=0\n          0: sipush        1000\n          3: bipush        100\n-         5: invokestatic  #56                 // Method java/lang/Math.max:(II)I\n-         8: putstatic     #3                  // Field STACK_SIZE:I\n+         5: invokestatic  #170                // Method java/lang/Math.max:(II)I\n+         8: putstatic     #9                  // Field STACK_SIZE:I\n         11: bipush        14\n         13: newarray       int\n         15: dup\n         16: iconst_0\n         17: iconst_1\n         18: iastore\n         19: dup\n@@ -3838,31 +3838,31 @@\n         64: iastore\n         65: dup\n         66: bipush        9\n         68: sipush        29524\n         71: iastore\n         72: dup\n         73: bipush        10\n-        75: ldc           #57                 // int 88573\n+        75: ldc           #173                // int 88573\n         77: iastore\n         78: dup\n         79: bipush        11\n-        81: ldc           #58                 // int 265720\n+        81: ldc           #174                // int 265720\n         83: iastore\n         84: dup\n         85: bipush        12\n-        87: ldc           #59                 // int 797161\n+        87: ldc           #175                // int 797161\n         89: iastore\n         90: dup\n         91: bipush        13\n-        93: ldc           #60                 // int 2391484\n+        93: ldc           #176                // int 2391484\n         95: iastore\n-        96: putstatic     #45                 // Field INCS:[I\n+        96: putstatic     #140                // Field INCS:[I\n         99: return\n       LineNumberTable:\n         line 123: 0\n         line 124: 5\n         line 580: 11\n }\n SourceFile: \"BlockSort.java\"\n InnerClasses:\n-  static final #98= #97 of #276;          // Data=class org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data of class org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream\n+  static final #295= #38 of #293;         // Data=class org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data of class org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream\n"}]}
