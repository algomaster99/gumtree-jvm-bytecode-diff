{"diffoscope-json-version": 1, "source1": "first/DumpArchiveInputStream.class", "source2": "second/DumpArchiveInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,425 +1,425 @@\n-  SHA-256 checksum fba2ac08f27cd79b2fca4b40cb35f0ee91e0c38099055b25ec8b337dc445dd46\n+  SHA-256 checksum c84b3cca0e85524aa223f7fa0ae0c54c0fc400b318424c87561e9a7ff99c2a6f\n   Compiled from \"DumpArchiveInputStream.java\"\n public class org.apache.commons.compress.archivers.dump.DumpArchiveInputStream extends org.apache.commons.compress.archivers.ArchiveInputStream\n   minor version: 0\n   major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #126                        // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n-  super_class: #127                       // org/apache/commons/compress/archivers/ArchiveInputStream\n+  this_class: #2                          // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n+  super_class: #8                         // org/apache/commons/compress/archivers/ArchiveInputStream\n   interfaces: 0, fields: 17, methods: 15, attributes: 2\n Constant pool:\n-    #1 = Methodref          #126.#198     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-    #2 = Methodref          #127.#199     // org/apache/commons/compress/archivers/ArchiveInputStream.\"<init>\":()V\n-    #3 = Class              #200          // org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n-    #4 = Fieldref           #126.#201     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBuf:[B\n-    #5 = Class              #202          // java/util/HashMap\n-    #6 = Methodref          #5.#199       // java/util/HashMap.\"<init>\":()V\n-    #7 = Fieldref           #126.#203     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.names:Ljava/util/Map;\n-    #8 = Fieldref           #126.#204     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.pending:Ljava/util/Map;\n-    #9 = Class              #205          // org/apache/commons/compress/archivers/dump/TapeInputStream\n-   #10 = Methodref          #9.#206       // org/apache/commons/compress/archivers/dump/TapeInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #11 = Fieldref           #126.#207     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-   #12 = Fieldref           #126.#208     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.hasHitEOF:Z\n-   #13 = Fieldref           #126.#209     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.encoding:Ljava/lang/String;\n-   #14 = Methodref          #210.#211     // org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-   #15 = Fieldref           #126.#212     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-   #16 = Methodref          #9.#213       // org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n-   #17 = Methodref          #214.#215     // org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n-   #18 = Class              #216          // org/apache/commons/compress/archivers/dump/UnrecognizedFormatException\n-   #19 = Methodref          #18.#199      // org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.\"<init>\":()V\n-   #20 = Class              #217          // org/apache/commons/compress/archivers/dump/DumpArchiveSummary\n-   #21 = Methodref          #20.#218      // org/apache/commons/compress/archivers/dump/DumpArchiveSummary.\"<init>\":([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n-   #22 = Fieldref           #126.#219     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.summary:Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n-   #23 = Methodref          #20.#220      // org/apache/commons/compress/archivers/dump/DumpArchiveSummary.getNTRec:()I\n-   #24 = Methodref          #20.#221      // org/apache/commons/compress/archivers/dump/DumpArchiveSummary.isCompressed:()Z\n-   #25 = Methodref          #9.#222       // org/apache/commons/compress/archivers/dump/TapeInputStream.resetBlockSize:(IZ)V\n-   #26 = Fieldref           #126.#223     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.blockBuffer:[B\n-   #27 = Methodref          #126.#224     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readCLRI:()V\n-   #28 = Methodref          #126.#225     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBITS:()V\n-   #29 = Class              #226          // java/io/IOException\n-   #30 = Class              #227          // org/apache/commons/compress/archivers/ArchiveException\n-   #31 = Methodref          #29.#228      // java/io/IOException.getMessage:()Ljava/lang/String;\n-   #32 = Methodref          #30.#229      // org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n-   #33 = Class              #230          // org/apache/commons/compress/archivers/dump/Dirent\n-   #34 = String             #231          // .\n-   #35 = Methodref          #33.#232      // org/apache/commons/compress/archivers/dump/Dirent.\"<init>\":(IIILjava/lang/String;)V\n-   #36 = Methodref          #233.#234     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #37 = InterfaceMethodref #235.#236     // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #38 = Class              #237          // java/util/PriorityQueue\n-   #39 = Class              #238          // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream$1\n-   #40 = Methodref          #39.#239      // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream$1.\"<init>\":(Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;)V\n-   #41 = Methodref          #38.#240      // java/util/PriorityQueue.\"<init>\":(ILjava/util/Comparator;)V\n-   #42 = Fieldref           #126.#241     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.queue:Ljava/util/Queue;\n-   #43 = Methodref          #126.#242     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getBytesRead:()J\n-   #44 = Methodref          #9.#242       // org/apache/commons/compress/archivers/dump/TapeInputStream.getBytesRead:()J\n-   #45 = Class              #243          // org/apache/commons/compress/archivers/dump/InvalidFormatException\n-   #46 = Methodref          #45.#199      // org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n-   #47 = Methodref          #64.#244      // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-   #48 = Fieldref           #126.#245     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-   #49 = Fieldref           #246.#247     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.CLRI:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-   #50 = Methodref          #64.#248      // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-   #51 = Long               1024l\n-   #53 = Methodref          #64.#249      // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n-   #54 = Methodref          #9.#250       // org/apache/commons/compress/archivers/dump/TapeInputStream.skip:(J)J\n-   #55 = Long               -1l\n-   #57 = Class              #251          // java/io/EOFException\n-   #58 = Methodref          #57.#199      // java/io/EOFException.\"<init>\":()V\n-   #59 = Fieldref           #126.#252     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readIdx:I\n-   #60 = Fieldref           #246.#253     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.BITS:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-   #61 = Methodref          #126.#254     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextEntry:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-   #62 = InterfaceMethodref #255.#256     // java/util/Queue.isEmpty:()Z\n-   #63 = InterfaceMethodref #255.#257     // java/util/Queue.remove:()Ljava/lang/Object;\n-   #64 = Class              #258          // org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n-   #65 = Methodref          #64.#259      // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.isSparseRecord:(I)Z\n-   #66 = Fieldref           #126.#260     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.filepos:J\n-   #67 = Fieldref           #246.#261     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.ADDR:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-   #68 = Methodref          #64.#262      // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderHoles:()I\n-   #69 = Fieldref           #246.#263     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.END:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-   #70 = Methodref          #64.#264      // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.isDirectory:()Z\n-   #71 = Methodref          #126.#265     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry:(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V\n-   #72 = Fieldref           #126.#266     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.entryOffset:J\n-   #73 = Fieldref           #126.#267     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.entrySize:J\n-   #74 = Methodref          #64.#268      // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getEntrySize:()J\n-   #75 = Fieldref           #126.#269     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.recordOffset:I\n-   #76 = Methodref          #126.#270     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getPath:(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;\n-   #77 = Methodref          #64.#271      // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setName:(Ljava/lang/String;)V\n-   #78 = Methodref          #64.#272      // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n-   #79 = InterfaceMethodref #235.#273     // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #80 = Methodref          #33.#274      // org/apache/commons/compress/archivers/dump/Dirent.getName:()Ljava/lang/String;\n-   #81 = Methodref          #64.#275      // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setSimpleName:(Ljava/lang/String;)V\n-   #82 = Methodref          #64.#276      // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setOffset:(J)V\n-   #83 = InterfaceMethodref #235.#277     // java/util/Map.containsKey:(Ljava/lang/Object;)Z\n-   #84 = Fieldref           #246.#278     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.INODE:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-   #85 = Methodref          #9.#279       // org/apache/commons/compress/archivers/dump/TapeInputStream.read:([BII)I\n-   #86 = Long               8l\n-   #88 = Methodref          #214.#280     // org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32:([BI)I\n-   #89 = Methodref          #214.#281     // org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert16:([BI)I\n-   #90 = Methodref          #214.#282     // org/apache/commons/compress/archivers/dump/DumpArchiveUtil.decode:(Lorg/apache/commons/compress/archivers/zip/ZipEncoding;[BII)Ljava/lang/String;\n-   #91 = Methodref          #113.#283     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #92 = String             #284          // ..\n-   #93 = InterfaceMethodref #235.#285     // java/util/Map.entrySet:()Ljava/util/Set;\n-   #94 = InterfaceMethodref #286.#287     // java/util/Set.iterator:()Ljava/util/Iterator;\n-   #95 = InterfaceMethodref #187.#288     // java/util/Iterator.hasNext:()Z\n-   #96 = InterfaceMethodref #187.#289     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #97 = Class              #290          // java/util/Map$Entry\n-   #98 = InterfaceMethodref #97.#292      // java/util/Map$Entry.getValue:()Ljava/lang/Object;\n-   #99 = InterfaceMethodref #97.#293      // java/util/Map$Entry.getKey:()Ljava/lang/Object;\n-  #100 = InterfaceMethodref #255.#294     // java/util/Queue.add:(Ljava/lang/Object;)Z\n-  #101 = InterfaceMethodref #255.#287     // java/util/Queue.iterator:()Ljava/util/Iterator;\n-  #102 = InterfaceMethodref #235.#295     // java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #103 = Methodref          #9.#296       // org/apache/commons/compress/archivers/dump/TapeInputStream.peek:()[B\n-  #104 = Class              #297          // java/util/Stack\n-  #105 = Methodref          #104.#199     // java/util/Stack.\"<init>\":()V\n-  #106 = Methodref          #104.#298     // java/util/Stack.clear:()V\n-  #107 = Methodref          #104.#299     // java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #108 = Methodref          #33.#272      // org/apache/commons/compress/archivers/dump/Dirent.getIno:()I\n-  #109 = Methodref          #33.#300      // org/apache/commons/compress/archivers/dump/Dirent.getParentIno:()I\n-  #110 = Methodref          #104.#256     // java/util/Stack.isEmpty:()Z\n-  #111 = Class              #301          // java/lang/StringBuilder\n-  #112 = Methodref          #104.#302     // java/util/Stack.pop:()Ljava/lang/Object;\n-  #113 = Class              #303          // java/lang/String\n-  #114 = Methodref          #111.#304     // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n-  #115 = Methodref          #111.#305     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-  #116 = Methodref          #111.#306     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #117 = Methodref          #111.#307     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #118 = Fieldref           #126.#308     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.isClosed:Z\n-  #119 = Class              #309          // java/lang/IllegalStateException\n-  #120 = String             #310          // No current dump entry\n-  #121 = Methodref          #119.#304     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-  #122 = Methodref          #311.#312     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #123 = Methodref          #313.#314     // java/util/Arrays.fill:([BB)V\n-  #124 = Methodref          #9.#315       // org/apache/commons/compress/archivers/dump/TapeInputStream.close:()V\n-  #125 = Integer            60012\n-  #126 = Class              #316          // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n-  #127 = Class              #317          // org/apache/commons/compress/archivers/ArchiveInputStream\n-  #128 = Utf8               InnerClasses\n-  #129 = Utf8               summary\n-  #130 = Utf8               Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n-  #131 = Utf8               active\n-  #132 = Utf8               Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-  #133 = Utf8               isClosed\n-  #134 = Utf8               Z\n-  #135 = Utf8               hasHitEOF\n-  #136 = Utf8               entrySize\n-  #137 = Utf8               J\n-  #138 = Utf8               entryOffset\n-  #139 = Utf8               readIdx\n-  #140 = Utf8               I\n-  #141 = Utf8               readBuf\n-  #142 = Utf8               [B\n-  #143 = Utf8               blockBuffer\n-  #144 = Utf8               recordOffset\n-  #145 = Utf8               filepos\n-  #146 = Utf8               raw\n-  #147 = Utf8               Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-  #148 = Utf8               names\n-  #149 = Utf8               Ljava/util/Map;\n-  #150 = Utf8               Signature\n-  #151 = Utf8               Ljava/util/Map<Ljava/lang/Integer;Lorg/apache/commons/compress/archivers/dump/Dirent;>;\n-  #152 = Utf8               pending\n-  #153 = Utf8               Ljava/util/Map<Ljava/lang/Integer;Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;>;\n-  #154 = Utf8               queue\n-  #155 = Utf8               Ljava/util/Queue;\n-  #156 = Utf8               Ljava/util/Queue<Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;>;\n-  #157 = Utf8               zipEncoding\n-  #158 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #159 = Utf8               encoding\n-  #160 = Utf8               Ljava/lang/String;\n-  #161 = Utf8               <init>\n-  #162 = Utf8               (Ljava/io/InputStream;)V\n-  #163 = Utf8               Code\n-  #164 = Utf8               LineNumberTable\n-  #165 = Utf8               Exceptions\n-  #166 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n-  #167 = Utf8               StackMapTable\n-  #168 = Class              #318          // java/io/InputStream\n-  #169 = Class              #142          // \"[B\"\n-  #170 = Utf8               getCount\n-  #171 = Utf8               ()I\n-  #172 = Utf8               Deprecated\n-  #173 = Utf8               RuntimeVisibleAnnotations\n-  #174 = Utf8               Ljava/lang/Deprecated;\n-  #175 = Utf8               getBytesRead\n-  #176 = Utf8               ()J\n-  #177 = Utf8               getSummary\n-  #178 = Utf8               ()Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n-  #179 = Utf8               readCLRI\n-  #180 = Utf8               ()V\n-  #181 = Utf8               readBITS\n-  #182 = Utf8               getNextDumpEntry\n-  #183 = Utf8               ()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-  #184 = Utf8               getNextEntry\n-  #185 = Utf8               readDirectoryEntry\n-  #186 = Utf8               (Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V\n-  #187 = Class              #319          // java/util/Iterator\n-  #188 = Utf8               getPath\n-  #189 = Utf8               (Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;\n-  #190 = Utf8               read\n-  #191 = Utf8               ([BII)I\n-  #192 = Utf8               close\n-  #193 = Utf8               matches\n-  #194 = Utf8               ([BI)Z\n-  #195 = Utf8               ()Lorg/apache/commons/compress/archivers/ArchiveEntry;\n-  #196 = Utf8               SourceFile\n-  #197 = Utf8               DumpArchiveInputStream.java\n-  #198 = NameAndType        #161:#166     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-  #199 = NameAndType        #161:#180     // \"<init>\":()V\n-  #200 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n-  #201 = NameAndType        #141:#142     // readBuf:[B\n-  #202 = Utf8               java/util/HashMap\n-  #203 = NameAndType        #148:#149     // names:Ljava/util/Map;\n-  #204 = NameAndType        #152:#149     // pending:Ljava/util/Map;\n-  #205 = Utf8               org/apache/commons/compress/archivers/dump/TapeInputStream\n-  #206 = NameAndType        #161:#162     // \"<init>\":(Ljava/io/InputStream;)V\n-  #207 = NameAndType        #146:#147     // raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-  #208 = NameAndType        #135:#134     // hasHitEOF:Z\n-  #209 = NameAndType        #159:#160     // encoding:Ljava/lang/String;\n-  #210 = Class              #320          // org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n-  #211 = NameAndType        #321:#322     // getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #212 = NameAndType        #157:#158     // zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #213 = NameAndType        #323:#324     // readRecord:()[B\n-  #214 = Class              #325          // org/apache/commons/compress/archivers/dump/DumpArchiveUtil\n-  #215 = NameAndType        #326:#327     // verify:([B)Z\n-  #216 = Utf8               org/apache/commons/compress/archivers/dump/UnrecognizedFormatException\n-  #217 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveSummary\n-  #218 = NameAndType        #161:#328     // \"<init>\":([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n-  #219 = NameAndType        #129:#130     // summary:Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n-  #220 = NameAndType        #329:#171     // getNTRec:()I\n-  #221 = NameAndType        #330:#331     // isCompressed:()Z\n-  #222 = NameAndType        #332:#333     // resetBlockSize:(IZ)V\n-  #223 = NameAndType        #143:#142     // blockBuffer:[B\n-  #224 = NameAndType        #179:#180     // readCLRI:()V\n-  #225 = NameAndType        #181:#180     // readBITS:()V\n-  #226 = Utf8               java/io/IOException\n-  #227 = Utf8               org/apache/commons/compress/archivers/ArchiveException\n-  #228 = NameAndType        #334:#335     // getMessage:()Ljava/lang/String;\n-  #229 = NameAndType        #161:#336     // \"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n-  #230 = Utf8               org/apache/commons/compress/archivers/dump/Dirent\n-  #231 = Utf8               .\n-  #232 = NameAndType        #161:#337     // \"<init>\":(IIILjava/lang/String;)V\n-  #233 = Class              #338          // java/lang/Integer\n-  #234 = NameAndType        #339:#340     // valueOf:(I)Ljava/lang/Integer;\n-  #235 = Class              #341          // java/util/Map\n-  #236 = NameAndType        #342:#343     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #237 = Utf8               java/util/PriorityQueue\n-  #238 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveInputStream$1\n-  #239 = NameAndType        #161:#344     // \"<init>\":(Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;)V\n-  #240 = NameAndType        #161:#345     // \"<init>\":(ILjava/util/Comparator;)V\n-  #241 = NameAndType        #154:#155     // queue:Ljava/util/Queue;\n-  #242 = NameAndType        #175:#176     // getBytesRead:()J\n-  #243 = Utf8               org/apache/commons/compress/archivers/dump/InvalidFormatException\n-  #244 = NameAndType        #346:#347     // parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-  #245 = NameAndType        #131:#132     // active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-  #246 = Class              #348          // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE\n-  #247 = NameAndType        #350:#351     // CLRI:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-  #248 = NameAndType        #352:#353     // getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-  #249 = NameAndType        #354:#171     // getHeaderCount:()I\n-  #250 = NameAndType        #355:#356     // skip:(J)J\n-  #251 = Utf8               java/io/EOFException\n-  #252 = NameAndType        #139:#140     // readIdx:I\n-  #253 = NameAndType        #357:#351     // BITS:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-  #254 = NameAndType        #184:#183     // getNextEntry:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-  #255 = Class              #358          // java/util/Queue\n-  #256 = NameAndType        #359:#331     // isEmpty:()Z\n-  #257 = NameAndType        #360:#361     // remove:()Ljava/lang/Object;\n-  #258 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n-  #259 = NameAndType        #362:#363     // isSparseRecord:(I)Z\n-  #260 = NameAndType        #145:#137     // filepos:J\n-  #261 = NameAndType        #364:#351     // ADDR:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-  #262 = NameAndType        #365:#171     // getHeaderHoles:()I\n-  #263 = NameAndType        #366:#351     // END:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-  #264 = NameAndType        #367:#331     // isDirectory:()Z\n-  #265 = NameAndType        #185:#186     // readDirectoryEntry:(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V\n-  #266 = NameAndType        #138:#137     // entryOffset:J\n-  #267 = NameAndType        #136:#137     // entrySize:J\n-  #268 = NameAndType        #368:#176     // getEntrySize:()J\n-  #269 = NameAndType        #144:#140     // recordOffset:I\n-  #270 = NameAndType        #188:#189     // getPath:(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;\n-  #271 = NameAndType        #369:#370     // setName:(Ljava/lang/String;)V\n-  #272 = NameAndType        #371:#171     // getIno:()I\n-  #273 = NameAndType        #372:#373     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #274 = NameAndType        #374:#335     // getName:()Ljava/lang/String;\n-  #275 = NameAndType        #375:#370     // setSimpleName:(Ljava/lang/String;)V\n-  #276 = NameAndType        #376:#377     // setOffset:(J)V\n-  #277 = NameAndType        #378:#379     // containsKey:(Ljava/lang/Object;)Z\n-  #278 = NameAndType        #380:#351     // INODE:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-  #279 = NameAndType        #190:#191     // read:([BII)I\n-  #280 = NameAndType        #381:#382     // convert32:([BI)I\n-  #281 = NameAndType        #383:#382     // convert16:([BI)I\n-  #282 = NameAndType        #384:#385     // decode:(Lorg/apache/commons/compress/archivers/zip/ZipEncoding;[BII)Ljava/lang/String;\n-  #283 = NameAndType        #386:#379     // equals:(Ljava/lang/Object;)Z\n-  #284 = Utf8               ..\n-  #285 = NameAndType        #387:#388     // entrySet:()Ljava/util/Set;\n-  #286 = Class              #389          // java/util/Set\n-  #287 = NameAndType        #390:#391     // iterator:()Ljava/util/Iterator;\n-  #288 = NameAndType        #392:#331     // hasNext:()Z\n-  #289 = NameAndType        #393:#361     // next:()Ljava/lang/Object;\n-  #290 = Utf8               java/util/Map$Entry\n-  #291 = Utf8               Entry\n-  #292 = NameAndType        #394:#361     // getValue:()Ljava/lang/Object;\n-  #293 = NameAndType        #395:#361     // getKey:()Ljava/lang/Object;\n-  #294 = NameAndType        #396:#379     // add:(Ljava/lang/Object;)Z\n-  #295 = NameAndType        #360:#373     // remove:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #296 = NameAndType        #397:#324     // peek:()[B\n-  #297 = Utf8               java/util/Stack\n-  #298 = NameAndType        #398:#180     // clear:()V\n-  #299 = NameAndType        #399:#373     // push:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #300 = NameAndType        #400:#171     // getParentIno:()I\n-  #301 = Utf8               java/lang/StringBuilder\n-  #302 = NameAndType        #401:#361     // pop:()Ljava/lang/Object;\n-  #303 = Utf8               java/lang/String\n-  #304 = NameAndType        #161:#370     // \"<init>\":(Ljava/lang/String;)V\n-  #305 = NameAndType        #402:#403     // append:(C)Ljava/lang/StringBuilder;\n-  #306 = NameAndType        #402:#404     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #307 = NameAndType        #405:#335     // toString:()Ljava/lang/String;\n-  #308 = NameAndType        #133:#134     // isClosed:Z\n-  #309 = Utf8               java/lang/IllegalStateException\n-  #310 = Utf8               No current dump entry\n-  #311 = Class              #406          // java/lang/System\n-  #312 = NameAndType        #407:#408     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #313 = Class              #409          // java/util/Arrays\n-  #314 = NameAndType        #410:#411     // fill:([BB)V\n-  #315 = NameAndType        #192:#180     // close:()V\n-  #316 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n-  #317 = Utf8               org/apache/commons/compress/archivers/ArchiveInputStream\n-  #318 = Utf8               java/io/InputStream\n-  #319 = Utf8               java/util/Iterator\n-  #320 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n-  #321 = Utf8               getZipEncoding\n-  #322 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #323 = Utf8               readRecord\n-  #324 = Utf8               ()[B\n-  #325 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveUtil\n-  #326 = Utf8               verify\n-  #327 = Utf8               ([B)Z\n-  #328 = Utf8               ([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n-  #329 = Utf8               getNTRec\n-  #330 = Utf8               isCompressed\n-  #331 = Utf8               ()Z\n-  #332 = Utf8               resetBlockSize\n-  #333 = Utf8               (IZ)V\n-  #334 = Utf8               getMessage\n-  #335 = Utf8               ()Ljava/lang/String;\n-  #336 = Utf8               (Ljava/lang/String;Ljava/lang/Exception;)V\n-  #337 = Utf8               (IIILjava/lang/String;)V\n-  #338 = Utf8               java/lang/Integer\n-  #339 = Utf8               valueOf\n-  #340 = Utf8               (I)Ljava/lang/Integer;\n-  #341 = Utf8               java/util/Map\n-  #342 = Utf8               put\n-  #343 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #344 = Utf8               (Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;)V\n-  #345 = Utf8               (ILjava/util/Comparator;)V\n-  #346 = Utf8               parse\n-  #347 = Utf8               ([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-  #348 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE\n-  #349 = Utf8               SEGMENT_TYPE\n-  #350 = Utf8               CLRI\n-  #351 = Utf8               Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-  #352 = Utf8               getHeaderType\n-  #353 = Utf8               ()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-  #354 = Utf8               getHeaderCount\n-  #355 = Utf8               skip\n-  #356 = Utf8               (J)J\n-  #357 = Utf8               BITS\n-  #358 = Utf8               java/util/Queue\n-  #359 = Utf8               isEmpty\n-  #360 = Utf8               remove\n-  #361 = Utf8               ()Ljava/lang/Object;\n-  #362 = Utf8               isSparseRecord\n-  #363 = Utf8               (I)Z\n-  #364 = Utf8               ADDR\n-  #365 = Utf8               getHeaderHoles\n-  #366 = Utf8               END\n-  #367 = Utf8               isDirectory\n-  #368 = Utf8               getEntrySize\n-  #369 = Utf8               setName\n-  #370 = Utf8               (Ljava/lang/String;)V\n-  #371 = Utf8               getIno\n-  #372 = Utf8               get\n-  #373 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #374 = Utf8               getName\n-  #375 = Utf8               setSimpleName\n-  #376 = Utf8               setOffset\n-  #377 = Utf8               (J)V\n-  #378 = Utf8               containsKey\n-  #379 = Utf8               (Ljava/lang/Object;)Z\n-  #380 = Utf8               INODE\n-  #381 = Utf8               convert32\n-  #382 = Utf8               ([BI)I\n-  #383 = Utf8               convert16\n-  #384 = Utf8               decode\n-  #385 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipEncoding;[BII)Ljava/lang/String;\n-  #386 = Utf8               equals\n-  #387 = Utf8               entrySet\n-  #388 = Utf8               ()Ljava/util/Set;\n-  #389 = Utf8               java/util/Set\n-  #390 = Utf8               iterator\n-  #391 = Utf8               ()Ljava/util/Iterator;\n-  #392 = Utf8               hasNext\n-  #393 = Utf8               next\n-  #394 = Utf8               getValue\n-  #395 = Utf8               getKey\n-  #396 = Utf8               add\n-  #397 = Utf8               peek\n-  #398 = Utf8               clear\n-  #399 = Utf8               push\n-  #400 = Utf8               getParentIno\n-  #401 = Utf8               pop\n-  #402 = Utf8               append\n-  #403 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #404 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #405 = Utf8               toString\n-  #406 = Utf8               java/lang/System\n-  #407 = Utf8               arraycopy\n-  #408 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #409 = Utf8               java/util/Arrays\n-  #410 = Utf8               fill\n-  #411 = Utf8               ([BB)V\n+    #1 = Methodref          #2.#3         // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+    #2 = Class              #4            // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n+    #3 = NameAndType        #5:#6         // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+    #4 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n+    #7 = Methodref          #8.#9         // org/apache/commons/compress/archivers/ArchiveInputStream.\"<init>\":()V\n+    #8 = Class              #10           // org/apache/commons/compress/archivers/ArchiveInputStream\n+    #9 = NameAndType        #5:#11        // \"<init>\":()V\n+   #10 = Utf8               org/apache/commons/compress/archivers/ArchiveInputStream\n+   #11 = Utf8               ()V\n+   #12 = Class              #13           // org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n+   #13 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n+   #14 = Fieldref           #2.#15        // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBuf:[B\n+   #15 = NameAndType        #16:#17       // readBuf:[B\n+   #16 = Utf8               readBuf\n+   #17 = Utf8               [B\n+   #18 = Class              #19           // java/util/HashMap\n+   #19 = Utf8               java/util/HashMap\n+   #20 = Methodref          #18.#9        // java/util/HashMap.\"<init>\":()V\n+   #21 = Fieldref           #2.#22        // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.names:Ljava/util/Map;\n+   #22 = NameAndType        #23:#24       // names:Ljava/util/Map;\n+   #23 = Utf8               names\n+   #24 = Utf8               Ljava/util/Map;\n+   #25 = Fieldref           #2.#26        // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.pending:Ljava/util/Map;\n+   #26 = NameAndType        #27:#24       // pending:Ljava/util/Map;\n+   #27 = Utf8               pending\n+   #28 = Class              #29           // org/apache/commons/compress/archivers/dump/TapeInputStream\n+   #29 = Utf8               org/apache/commons/compress/archivers/dump/TapeInputStream\n+   #30 = Methodref          #28.#31       // org/apache/commons/compress/archivers/dump/TapeInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #31 = NameAndType        #5:#32        // \"<init>\":(Ljava/io/InputStream;)V\n+   #32 = Utf8               (Ljava/io/InputStream;)V\n+   #33 = Fieldref           #2.#34        // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+   #34 = NameAndType        #35:#36       // raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+   #35 = Utf8               raw\n+   #36 = Utf8               Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+   #37 = Fieldref           #2.#38        // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.hasHitEOF:Z\n+   #38 = NameAndType        #39:#40       // hasHitEOF:Z\n+   #39 = Utf8               hasHitEOF\n+   #40 = Utf8               Z\n+   #41 = Fieldref           #2.#42        // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.encoding:Ljava/lang/String;\n+   #42 = NameAndType        #43:#44       // encoding:Ljava/lang/String;\n+   #43 = Utf8               encoding\n+   #44 = Utf8               Ljava/lang/String;\n+   #45 = Methodref          #46.#47       // org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #46 = Class              #48           // org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n+   #47 = NameAndType        #49:#50       // getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #48 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n+   #49 = Utf8               getZipEncoding\n+   #50 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #51 = Fieldref           #2.#52        // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #52 = NameAndType        #53:#54       // zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #53 = Utf8               zipEncoding\n+   #54 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #55 = Methodref          #28.#56       // org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n+   #56 = NameAndType        #57:#58       // readRecord:()[B\n+   #57 = Utf8               readRecord\n+   #58 = Utf8               ()[B\n+   #59 = Methodref          #60.#61       // org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n+   #60 = Class              #62           // org/apache/commons/compress/archivers/dump/DumpArchiveUtil\n+   #61 = NameAndType        #63:#64       // verify:([B)Z\n+   #62 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveUtil\n+   #63 = Utf8               verify\n+   #64 = Utf8               ([B)Z\n+   #65 = Class              #66           // org/apache/commons/compress/archivers/dump/UnrecognizedFormatException\n+   #66 = Utf8               org/apache/commons/compress/archivers/dump/UnrecognizedFormatException\n+   #67 = Methodref          #65.#9        // org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.\"<init>\":()V\n+   #68 = Class              #69           // org/apache/commons/compress/archivers/dump/DumpArchiveSummary\n+   #69 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveSummary\n+   #70 = Methodref          #68.#71       // org/apache/commons/compress/archivers/dump/DumpArchiveSummary.\"<init>\":([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n+   #71 = NameAndType        #5:#72        // \"<init>\":([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n+   #72 = Utf8               ([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n+   #73 = Fieldref           #2.#74        // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.summary:Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n+   #74 = NameAndType        #75:#76       // summary:Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n+   #75 = Utf8               summary\n+   #76 = Utf8               Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n+   #77 = Methodref          #68.#78       // org/apache/commons/compress/archivers/dump/DumpArchiveSummary.getNTRec:()I\n+   #78 = NameAndType        #79:#80       // getNTRec:()I\n+   #79 = Utf8               getNTRec\n+   #80 = Utf8               ()I\n+   #81 = Methodref          #68.#82       // org/apache/commons/compress/archivers/dump/DumpArchiveSummary.isCompressed:()Z\n+   #82 = NameAndType        #83:#84       // isCompressed:()Z\n+   #83 = Utf8               isCompressed\n+   #84 = Utf8               ()Z\n+   #85 = Methodref          #28.#86       // org/apache/commons/compress/archivers/dump/TapeInputStream.resetBlockSize:(IZ)V\n+   #86 = NameAndType        #87:#88       // resetBlockSize:(IZ)V\n+   #87 = Utf8               resetBlockSize\n+   #88 = Utf8               (IZ)V\n+   #89 = Fieldref           #2.#90        // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.blockBuffer:[B\n+   #90 = NameAndType        #91:#17       // blockBuffer:[B\n+   #91 = Utf8               blockBuffer\n+   #92 = Methodref          #2.#93        // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readCLRI:()V\n+   #93 = NameAndType        #94:#11       // readCLRI:()V\n+   #94 = Utf8               readCLRI\n+   #95 = Methodref          #2.#96        // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBITS:()V\n+   #96 = NameAndType        #97:#11       // readBITS:()V\n+   #97 = Utf8               readBITS\n+   #98 = Class              #99           // java/io/IOException\n+   #99 = Utf8               java/io/IOException\n+  #100 = Class              #101          // org/apache/commons/compress/archivers/ArchiveException\n+  #101 = Utf8               org/apache/commons/compress/archivers/ArchiveException\n+  #102 = Methodref          #98.#103      // java/io/IOException.getMessage:()Ljava/lang/String;\n+  #103 = NameAndType        #104:#105     // getMessage:()Ljava/lang/String;\n+  #104 = Utf8               getMessage\n+  #105 = Utf8               ()Ljava/lang/String;\n+  #106 = Methodref          #100.#107     // org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n+  #107 = NameAndType        #5:#108       // \"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n+  #108 = Utf8               (Ljava/lang/String;Ljava/lang/Exception;)V\n+  #109 = Class              #110          // org/apache/commons/compress/archivers/dump/Dirent\n+  #110 = Utf8               org/apache/commons/compress/archivers/dump/Dirent\n+  #111 = String             #112          // .\n+  #112 = Utf8               .\n+  #113 = Methodref          #109.#114     // org/apache/commons/compress/archivers/dump/Dirent.\"<init>\":(IIILjava/lang/String;)V\n+  #114 = NameAndType        #5:#115       // \"<init>\":(IIILjava/lang/String;)V\n+  #115 = Utf8               (IIILjava/lang/String;)V\n+  #116 = Methodref          #117.#118     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+  #117 = Class              #119          // java/lang/Integer\n+  #118 = NameAndType        #120:#121     // valueOf:(I)Ljava/lang/Integer;\n+  #119 = Utf8               java/lang/Integer\n+  #120 = Utf8               valueOf\n+  #121 = Utf8               (I)Ljava/lang/Integer;\n+  #122 = InterfaceMethodref #123.#124     // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #123 = Class              #125          // java/util/Map\n+  #124 = NameAndType        #126:#127     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #125 = Utf8               java/util/Map\n+  #126 = Utf8               put\n+  #127 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #128 = Class              #129          // java/util/PriorityQueue\n+  #129 = Utf8               java/util/PriorityQueue\n+  #130 = Class              #131          // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream$1\n+  #131 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveInputStream$1\n+  #132 = Methodref          #130.#133     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream$1.\"<init>\":(Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;)V\n+  #133 = NameAndType        #5:#134       // \"<init>\":(Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;)V\n+  #134 = Utf8               (Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;)V\n+  #135 = Methodref          #128.#136     // java/util/PriorityQueue.\"<init>\":(ILjava/util/Comparator;)V\n+  #136 = NameAndType        #5:#137       // \"<init>\":(ILjava/util/Comparator;)V\n+  #137 = Utf8               (ILjava/util/Comparator;)V\n+  #138 = Fieldref           #2.#139       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.queue:Ljava/util/Queue;\n+  #139 = NameAndType        #140:#141     // queue:Ljava/util/Queue;\n+  #140 = Utf8               queue\n+  #141 = Utf8               Ljava/util/Queue;\n+  #142 = Methodref          #2.#143       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getBytesRead:()J\n+  #143 = NameAndType        #144:#145     // getBytesRead:()J\n+  #144 = Utf8               getBytesRead\n+  #145 = Utf8               ()J\n+  #146 = Methodref          #28.#143      // org/apache/commons/compress/archivers/dump/TapeInputStream.getBytesRead:()J\n+  #147 = Class              #148          // org/apache/commons/compress/archivers/dump/InvalidFormatException\n+  #148 = Utf8               org/apache/commons/compress/archivers/dump/InvalidFormatException\n+  #149 = Methodref          #147.#9       // org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n+  #150 = Methodref          #151.#152     // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+  #151 = Class              #153          // org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n+  #152 = NameAndType        #154:#155     // parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+  #153 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n+  #154 = Utf8               parse\n+  #155 = Utf8               ([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+  #156 = Fieldref           #2.#157       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+  #157 = NameAndType        #158:#159     // active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+  #158 = Utf8               active\n+  #159 = Utf8               Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+  #160 = Fieldref           #161.#162     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.CLRI:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+  #161 = Class              #163          // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE\n+  #162 = NameAndType        #164:#165     // CLRI:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+  #163 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE\n+  #164 = Utf8               CLRI\n+  #165 = Utf8               Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+  #166 = Methodref          #151.#167     // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+  #167 = NameAndType        #168:#169     // getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+  #168 = Utf8               getHeaderType\n+  #169 = Utf8               ()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+  #170 = Long               1024l\n+  #172 = Methodref          #151.#173     // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n+  #173 = NameAndType        #174:#80      // getHeaderCount:()I\n+  #174 = Utf8               getHeaderCount\n+  #175 = Methodref          #28.#176      // org/apache/commons/compress/archivers/dump/TapeInputStream.skip:(J)J\n+  #176 = NameAndType        #177:#178     // skip:(J)J\n+  #177 = Utf8               skip\n+  #178 = Utf8               (J)J\n+  #179 = Long               -1l\n+  #181 = Class              #182          // java/io/EOFException\n+  #182 = Utf8               java/io/EOFException\n+  #183 = Methodref          #181.#9       // java/io/EOFException.\"<init>\":()V\n+  #184 = Fieldref           #2.#185       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readIdx:I\n+  #185 = NameAndType        #186:#187     // readIdx:I\n+  #186 = Utf8               readIdx\n+  #187 = Utf8               I\n+  #188 = Fieldref           #161.#189     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.BITS:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+  #189 = NameAndType        #190:#165     // BITS:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+  #190 = Utf8               BITS\n+  #191 = Methodref          #2.#192       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextEntry:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+  #192 = NameAndType        #193:#194     // getNextEntry:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+  #193 = Utf8               getNextEntry\n+  #194 = Utf8               ()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+  #195 = InterfaceMethodref #196.#197     // java/util/Queue.isEmpty:()Z\n+  #196 = Class              #198          // java/util/Queue\n+  #197 = NameAndType        #199:#84      // isEmpty:()Z\n+  #198 = Utf8               java/util/Queue\n+  #199 = Utf8               isEmpty\n+  #200 = InterfaceMethodref #196.#201     // java/util/Queue.remove:()Ljava/lang/Object;\n+  #201 = NameAndType        #202:#203     // remove:()Ljava/lang/Object;\n+  #202 = Utf8               remove\n+  #203 = Utf8               ()Ljava/lang/Object;\n+  #204 = Methodref          #151.#205     // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.isSparseRecord:(I)Z\n+  #205 = NameAndType        #206:#207     // isSparseRecord:(I)Z\n+  #206 = Utf8               isSparseRecord\n+  #207 = Utf8               (I)Z\n+  #208 = Fieldref           #2.#209       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.filepos:J\n+  #209 = NameAndType        #210:#211     // filepos:J\n+  #210 = Utf8               filepos\n+  #211 = Utf8               J\n+  #212 = Fieldref           #161.#213     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.ADDR:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+  #213 = NameAndType        #214:#165     // ADDR:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+  #214 = Utf8               ADDR\n+  #215 = Methodref          #151.#216     // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderHoles:()I\n+  #216 = NameAndType        #217:#80      // getHeaderHoles:()I\n+  #217 = Utf8               getHeaderHoles\n+  #218 = Fieldref           #161.#219     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.END:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+  #219 = NameAndType        #220:#165     // END:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+  #220 = Utf8               END\n+  #221 = Methodref          #151.#222     // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.isDirectory:()Z\n+  #222 = NameAndType        #223:#84      // isDirectory:()Z\n+  #223 = Utf8               isDirectory\n+  #224 = Methodref          #2.#225       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry:(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V\n+  #225 = NameAndType        #226:#227     // readDirectoryEntry:(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V\n+  #226 = Utf8               readDirectoryEntry\n+  #227 = Utf8               (Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V\n+  #228 = Fieldref           #2.#229       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.entryOffset:J\n+  #229 = NameAndType        #230:#211     // entryOffset:J\n+  #230 = Utf8               entryOffset\n+  #231 = Fieldref           #2.#232       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.entrySize:J\n+  #232 = NameAndType        #233:#211     // entrySize:J\n+  #233 = Utf8               entrySize\n+  #234 = Methodref          #151.#235     // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getEntrySize:()J\n+  #235 = NameAndType        #236:#145     // getEntrySize:()J\n+  #236 = Utf8               getEntrySize\n+  #237 = Fieldref           #2.#238       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.recordOffset:I\n+  #238 = NameAndType        #239:#187     // recordOffset:I\n+  #239 = Utf8               recordOffset\n+  #240 = Methodref          #2.#241       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getPath:(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;\n+  #241 = NameAndType        #242:#243     // getPath:(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;\n+  #242 = Utf8               getPath\n+  #243 = Utf8               (Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;\n+  #244 = Methodref          #151.#245     // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setName:(Ljava/lang/String;)V\n+  #245 = NameAndType        #246:#247     // setName:(Ljava/lang/String;)V\n+  #246 = Utf8               setName\n+  #247 = Utf8               (Ljava/lang/String;)V\n+  #248 = Methodref          #151.#249     // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n+  #249 = NameAndType        #250:#80      // getIno:()I\n+  #250 = Utf8               getIno\n+  #251 = InterfaceMethodref #123.#252     // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #252 = NameAndType        #253:#254     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #253 = Utf8               get\n+  #254 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #255 = Methodref          #109.#256     // org/apache/commons/compress/archivers/dump/Dirent.getName:()Ljava/lang/String;\n+  #256 = NameAndType        #257:#105     // getName:()Ljava/lang/String;\n+  #257 = Utf8               getName\n+  #258 = Methodref          #151.#259     // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setSimpleName:(Ljava/lang/String;)V\n+  #259 = NameAndType        #260:#247     // setSimpleName:(Ljava/lang/String;)V\n+  #260 = Utf8               setSimpleName\n+  #261 = Methodref          #151.#262     // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setOffset:(J)V\n+  #262 = NameAndType        #263:#264     // setOffset:(J)V\n+  #263 = Utf8               setOffset\n+  #264 = Utf8               (J)V\n+  #265 = InterfaceMethodref #123.#266     // java/util/Map.containsKey:(Ljava/lang/Object;)Z\n+  #266 = NameAndType        #267:#268     // containsKey:(Ljava/lang/Object;)Z\n+  #267 = Utf8               containsKey\n+  #268 = Utf8               (Ljava/lang/Object;)Z\n+  #269 = Fieldref           #161.#270     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.INODE:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+  #270 = NameAndType        #271:#165     // INODE:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+  #271 = Utf8               INODE\n+  #272 = Methodref          #28.#273      // org/apache/commons/compress/archivers/dump/TapeInputStream.read:([BII)I\n+  #273 = NameAndType        #274:#275     // read:([BII)I\n+  #274 = Utf8               read\n+  #275 = Utf8               ([BII)I\n+  #276 = Long               8l\n+  #278 = Methodref          #60.#279      // org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32:([BI)I\n+  #279 = NameAndType        #280:#281     // convert32:([BI)I\n+  #280 = Utf8               convert32\n+  #281 = Utf8               ([BI)I\n+  #282 = Methodref          #60.#283      // org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert16:([BI)I\n+  #283 = NameAndType        #284:#281     // convert16:([BI)I\n+  #284 = Utf8               convert16\n+  #285 = Methodref          #60.#286      // org/apache/commons/compress/archivers/dump/DumpArchiveUtil.decode:(Lorg/apache/commons/compress/archivers/zip/ZipEncoding;[BII)Ljava/lang/String;\n+  #286 = NameAndType        #287:#288     // decode:(Lorg/apache/commons/compress/archivers/zip/ZipEncoding;[BII)Ljava/lang/String;\n+  #287 = Utf8               decode\n+  #288 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipEncoding;[BII)Ljava/lang/String;\n+  #289 = Methodref          #290.#291     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+  #290 = Class              #292          // java/lang/String\n+  #291 = NameAndType        #293:#268     // equals:(Ljava/lang/Object;)Z\n+  #292 = Utf8               java/lang/String\n+  #293 = Utf8               equals\n+  #294 = String             #295          // ..\n+  #295 = Utf8               ..\n+  #296 = InterfaceMethodref #123.#297     // java/util/Map.entrySet:()Ljava/util/Set;\n+  #297 = NameAndType        #298:#299     // entrySet:()Ljava/util/Set;\n+  #298 = Utf8               entrySet\n+  #299 = Utf8               ()Ljava/util/Set;\n+  #300 = InterfaceMethodref #301.#302     // java/util/Set.iterator:()Ljava/util/Iterator;\n+  #301 = Class              #303          // java/util/Set\n+  #302 = NameAndType        #304:#305     // iterator:()Ljava/util/Iterator;\n+  #303 = Utf8               java/util/Set\n+  #304 = Utf8               iterator\n+  #305 = Utf8               ()Ljava/util/Iterator;\n+  #306 = InterfaceMethodref #307.#308     // java/util/Iterator.hasNext:()Z\n+  #307 = Class              #309          // java/util/Iterator\n+  #308 = NameAndType        #310:#84      // hasNext:()Z\n+  #309 = Utf8               java/util/Iterator\n+  #310 = Utf8               hasNext\n+  #311 = InterfaceMethodref #307.#312     // java/util/Iterator.next:()Ljava/lang/Object;\n+  #312 = NameAndType        #313:#203     // next:()Ljava/lang/Object;\n+  #313 = Utf8               next\n+  #314 = Class              #315          // java/util/Map$Entry\n+  #315 = Utf8               java/util/Map$Entry\n+  #316 = InterfaceMethodref #314.#317     // java/util/Map$Entry.getValue:()Ljava/lang/Object;\n+  #317 = NameAndType        #318:#203     // getValue:()Ljava/lang/Object;\n+  #318 = Utf8               getValue\n+  #319 = InterfaceMethodref #314.#320     // java/util/Map$Entry.getKey:()Ljava/lang/Object;\n+  #320 = NameAndType        #321:#203     // getKey:()Ljava/lang/Object;\n+  #321 = Utf8               getKey\n+  #322 = InterfaceMethodref #196.#323     // java/util/Queue.add:(Ljava/lang/Object;)Z\n+  #323 = NameAndType        #324:#268     // add:(Ljava/lang/Object;)Z\n+  #324 = Utf8               add\n+  #325 = InterfaceMethodref #196.#302     // java/util/Queue.iterator:()Ljava/util/Iterator;\n+  #326 = InterfaceMethodref #123.#327     // java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #327 = NameAndType        #202:#254     // remove:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #328 = Methodref          #28.#329      // org/apache/commons/compress/archivers/dump/TapeInputStream.peek:()[B\n+  #329 = NameAndType        #330:#58      // peek:()[B\n+  #330 = Utf8               peek\n+  #331 = Class              #332          // java/util/Stack\n+  #332 = Utf8               java/util/Stack\n+  #333 = Methodref          #331.#9       // java/util/Stack.\"<init>\":()V\n+  #334 = Methodref          #331.#335     // java/util/Stack.clear:()V\n+  #335 = NameAndType        #336:#11      // clear:()V\n+  #336 = Utf8               clear\n+  #337 = Methodref          #331.#338     // java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #338 = NameAndType        #339:#254     // push:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #339 = Utf8               push\n+  #340 = Methodref          #109.#249     // org/apache/commons/compress/archivers/dump/Dirent.getIno:()I\n+  #341 = Methodref          #109.#342     // org/apache/commons/compress/archivers/dump/Dirent.getParentIno:()I\n+  #342 = NameAndType        #343:#80      // getParentIno:()I\n+  #343 = Utf8               getParentIno\n+  #344 = Methodref          #331.#197     // java/util/Stack.isEmpty:()Z\n+  #345 = Class              #346          // java/lang/StringBuilder\n+  #346 = Utf8               java/lang/StringBuilder\n+  #347 = Methodref          #331.#348     // java/util/Stack.pop:()Ljava/lang/Object;\n+  #348 = NameAndType        #349:#203     // pop:()Ljava/lang/Object;\n+  #349 = Utf8               pop\n+  #350 = Methodref          #345.#351     // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #351 = NameAndType        #5:#247       // \"<init>\":(Ljava/lang/String;)V\n+  #352 = Methodref          #345.#353     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+  #353 = NameAndType        #354:#355     // append:(C)Ljava/lang/StringBuilder;\n+  #354 = Utf8               append\n+  #355 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #356 = Methodref          #345.#357     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #357 = NameAndType        #354:#358     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #358 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #359 = Methodref          #345.#360     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #360 = NameAndType        #361:#105     // toString:()Ljava/lang/String;\n+  #361 = Utf8               toString\n+  #362 = Fieldref           #2.#363       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.isClosed:Z\n+  #363 = NameAndType        #364:#40      // isClosed:Z\n+  #364 = Utf8               isClosed\n+  #365 = Class              #366          // java/lang/IllegalStateException\n+  #366 = Utf8               java/lang/IllegalStateException\n+  #367 = String             #368          // No current dump entry\n+  #368 = Utf8               No current dump entry\n+  #369 = Methodref          #365.#351     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+  #370 = Methodref          #371.#372     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #371 = Class              #373          // java/lang/System\n+  #372 = NameAndType        #374:#375     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #373 = Utf8               java/lang/System\n+  #374 = Utf8               arraycopy\n+  #375 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #376 = Methodref          #377.#378     // java/util/Arrays.fill:([BB)V\n+  #377 = Class              #379          // java/util/Arrays\n+  #378 = NameAndType        #380:#381     // fill:([BB)V\n+  #379 = Utf8               java/util/Arrays\n+  #380 = Utf8               fill\n+  #381 = Utf8               ([BB)V\n+  #382 = Methodref          #28.#383      // org/apache/commons/compress/archivers/dump/TapeInputStream.close:()V\n+  #383 = NameAndType        #384:#11      // close:()V\n+  #384 = Utf8               close\n+  #385 = Integer            60012\n+  #386 = Utf8               Signature\n+  #387 = Utf8               Ljava/util/Map<Ljava/lang/Integer;Lorg/apache/commons/compress/archivers/dump/Dirent;>;\n+  #388 = Utf8               Ljava/util/Map<Ljava/lang/Integer;Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;>;\n+  #389 = Utf8               Ljava/util/Queue<Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;>;\n+  #390 = Utf8               Code\n+  #391 = Utf8               LineNumberTable\n+  #392 = Utf8               Exceptions\n+  #393 = Utf8               StackMapTable\n+  #394 = Class              #395          // java/io/InputStream\n+  #395 = Utf8               java/io/InputStream\n+  #396 = Class              #17           // \"[B\"\n+  #397 = Utf8               getCount\n+  #398 = Utf8               Deprecated\n+  #399 = Utf8               RuntimeVisibleAnnotations\n+  #400 = Utf8               Ljava/lang/Deprecated;\n+  #401 = Utf8               getSummary\n+  #402 = Utf8               ()Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n+  #403 = Utf8               getNextDumpEntry\n+  #404 = Utf8               matches\n+  #405 = Utf8               ([BI)Z\n+  #406 = Utf8               ()Lorg/apache/commons/compress/archivers/ArchiveEntry;\n+  #407 = Utf8               SourceFile\n+  #408 = Utf8               DumpArchiveInputStream.java\n+  #409 = Utf8               InnerClasses\n+  #410 = Utf8               SEGMENT_TYPE\n+  #411 = Utf8               Entry\n {\n   private org.apache.commons.compress.archivers.dump.DumpArchiveSummary summary;\n     descriptor: Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n     flags: (0x0002) ACC_PRIVATE\n \n   private org.apache.commons.compress.archivers.dump.DumpArchiveEntry active;\n     descriptor: Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n@@ -464,25 +464,25 @@\n   protected org.apache.commons.compress.archivers.dump.TapeInputStream raw;\n     descriptor: Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n     flags: (0x0004) ACC_PROTECTED\n \n   private final java.util.Map<java.lang.Integer, org.apache.commons.compress.archivers.dump.Dirent> names;\n     descriptor: Ljava/util/Map;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #151                         // Ljava/util/Map<Ljava/lang/Integer;Lorg/apache/commons/compress/archivers/dump/Dirent;>;\n+    Signature: #387                         // Ljava/util/Map<Ljava/lang/Integer;Lorg/apache/commons/compress/archivers/dump/Dirent;>;\n \n   private final java.util.Map<java.lang.Integer, org.apache.commons.compress.archivers.dump.DumpArchiveEntry> pending;\n     descriptor: Ljava/util/Map;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #153                         // Ljava/util/Map<Ljava/lang/Integer;Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;>;\n+    Signature: #388                         // Ljava/util/Map<Ljava/lang/Integer;Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;>;\n \n   private java.util.Queue<org.apache.commons.compress.archivers.dump.DumpArchiveEntry> queue;\n     descriptor: Ljava/util/Queue;\n     flags: (0x0002) ACC_PRIVATE\n-    Signature: #156                         // Ljava/util/Queue<Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;>;\n+    Signature: #389                         // Ljava/util/Queue<Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;>;\n \n   private final org.apache.commons.compress.archivers.zip.ZipEncoding zipEncoding;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   final java.lang.String encoding;\n     descriptor: Ljava/lang/String;\n@@ -506,115 +506,115 @@\n \n   public org.apache.commons.compress.archivers.dump.DumpArchiveInputStream(java.io.InputStream, java.lang.String) throws org.apache.commons.compress.archivers.ArchiveException;\n     descriptor: (Ljava/io/InputStream;Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=4, args_size=3\n          0: aload_0\n-         1: invokespecial #2                  // Method org/apache/commons/compress/archivers/ArchiveInputStream.\"<init>\":()V\n+         1: invokespecial #7                  // Method org/apache/commons/compress/archivers/ArchiveInputStream.\"<init>\":()V\n          4: aload_0\n          5: sipush        1024\n          8: newarray       byte\n-        10: putfield      #4                  // Field readBuf:[B\n+        10: putfield      #14                 // Field readBuf:[B\n         13: aload_0\n-        14: new           #5                  // class java/util/HashMap\n+        14: new           #18                 // class java/util/HashMap\n         17: dup\n-        18: invokespecial #6                  // Method java/util/HashMap.\"<init>\":()V\n-        21: putfield      #7                  // Field names:Ljava/util/Map;\n+        18: invokespecial #20                 // Method java/util/HashMap.\"<init>\":()V\n+        21: putfield      #21                 // Field names:Ljava/util/Map;\n         24: aload_0\n-        25: new           #5                  // class java/util/HashMap\n+        25: new           #18                 // class java/util/HashMap\n         28: dup\n-        29: invokespecial #6                  // Method java/util/HashMap.\"<init>\":()V\n-        32: putfield      #8                  // Field pending:Ljava/util/Map;\n+        29: invokespecial #20                 // Method java/util/HashMap.\"<init>\":()V\n+        32: putfield      #25                 // Field pending:Ljava/util/Map;\n         35: aload_0\n-        36: new           #9                  // class org/apache/commons/compress/archivers/dump/TapeInputStream\n+        36: new           #28                 // class org/apache/commons/compress/archivers/dump/TapeInputStream\n         39: dup\n         40: aload_1\n-        41: invokespecial #10                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-        44: putfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+        41: invokespecial #30                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+        44: putfield      #33                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n         47: aload_0\n         48: iconst_0\n-        49: putfield      #12                 // Field hasHitEOF:Z\n+        49: putfield      #37                 // Field hasHitEOF:Z\n         52: aload_0\n         53: aload_2\n-        54: putfield      #13                 // Field encoding:Ljava/lang/String;\n+        54: putfield      #41                 // Field encoding:Ljava/lang/String;\n         57: aload_0\n         58: aload_2\n-        59: invokestatic  #14                 // Method org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-        62: putfield      #15                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+        59: invokestatic  #45                 // Method org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+        62: putfield      #51                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n         65: aload_0\n-        66: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-        69: invokevirtual #16                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n+        66: getfield      #33                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+        69: invokevirtual #55                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n         72: astore_3\n         73: aload_3\n-        74: invokestatic  #17                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n+        74: invokestatic  #59                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n         77: ifne          88\n-        80: new           #18                 // class org/apache/commons/compress/archivers/dump/UnrecognizedFormatException\n+        80: new           #65                 // class org/apache/commons/compress/archivers/dump/UnrecognizedFormatException\n         83: dup\n-        84: invokespecial #19                 // Method org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.\"<init>\":()V\n+        84: invokespecial #67                 // Method org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.\"<init>\":()V\n         87: athrow\n         88: aload_0\n-        89: new           #20                 // class org/apache/commons/compress/archivers/dump/DumpArchiveSummary\n+        89: new           #68                 // class org/apache/commons/compress/archivers/dump/DumpArchiveSummary\n         92: dup\n         93: aload_3\n         94: aload_0\n-        95: getfield      #15                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-        98: invokespecial #21                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveSummary.\"<init>\":([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n-       101: putfield      #22                 // Field summary:Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n+        95: getfield      #51                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+        98: invokespecial #70                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveSummary.\"<init>\":([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n+       101: putfield      #73                 // Field summary:Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n        104: aload_0\n-       105: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+       105: getfield      #33                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n        108: aload_0\n-       109: getfield      #22                 // Field summary:Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n-       112: invokevirtual #23                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveSummary.getNTRec:()I\n+       109: getfield      #73                 // Field summary:Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n+       112: invokevirtual #77                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveSummary.getNTRec:()I\n        115: aload_0\n-       116: getfield      #22                 // Field summary:Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n-       119: invokevirtual #24                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveSummary.isCompressed:()Z\n-       122: invokevirtual #25                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.resetBlockSize:(IZ)V\n+       116: getfield      #73                 // Field summary:Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n+       119: invokevirtual #81                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveSummary.isCompressed:()Z\n+       122: invokevirtual #85                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.resetBlockSize:(IZ)V\n        125: aload_0\n        126: sipush        4096\n        129: newarray       byte\n-       131: putfield      #26                 // Field blockBuffer:[B\n+       131: putfield      #89                 // Field blockBuffer:[B\n        134: aload_0\n-       135: invokespecial #27                 // Method readCLRI:()V\n+       135: invokespecial #92                 // Method readCLRI:()V\n        138: aload_0\n-       139: invokespecial #28                 // Method readBITS:()V\n+       139: invokespecial #95                 // Method readBITS:()V\n        142: goto          159\n        145: astore_3\n-       146: new           #30                 // class org/apache/commons/compress/archivers/ArchiveException\n+       146: new           #100                // class org/apache/commons/compress/archivers/ArchiveException\n        149: dup\n        150: aload_3\n-       151: invokevirtual #31                 // Method java/io/IOException.getMessage:()Ljava/lang/String;\n+       151: invokevirtual #102                // Method java/io/IOException.getMessage:()Ljava/lang/String;\n        154: aload_3\n-       155: invokespecial #32                 // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n+       155: invokespecial #106                // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n        158: athrow\n-       159: new           #33                 // class org/apache/commons/compress/archivers/dump/Dirent\n+       159: new           #109                // class org/apache/commons/compress/archivers/dump/Dirent\n        162: dup\n        163: iconst_2\n        164: iconst_2\n        165: iconst_4\n-       166: ldc           #34                 // String .\n-       168: invokespecial #35                 // Method org/apache/commons/compress/archivers/dump/Dirent.\"<init>\":(IIILjava/lang/String;)V\n+       166: ldc           #111                // String .\n+       168: invokespecial #113                // Method org/apache/commons/compress/archivers/dump/Dirent.\"<init>\":(IIILjava/lang/String;)V\n        171: astore_3\n        172: aload_0\n-       173: getfield      #7                  // Field names:Ljava/util/Map;\n+       173: getfield      #21                 // Field names:Ljava/util/Map;\n        176: iconst_2\n-       177: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+       177: invokestatic  #116                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n        180: aload_3\n-       181: invokeinterface #37,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+       181: invokeinterface #122,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n        186: pop\n        187: aload_0\n-       188: new           #38                 // class java/util/PriorityQueue\n+       188: new           #128                // class java/util/PriorityQueue\n        191: dup\n        192: bipush        10\n-       194: new           #39                 // class org/apache/commons/compress/archivers/dump/DumpArchiveInputStream$1\n+       194: new           #130                // class org/apache/commons/compress/archivers/dump/DumpArchiveInputStream$1\n        197: dup\n        198: aload_0\n-       199: invokespecial #40                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveInputStream$1.\"<init>\":(Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;)V\n-       202: invokespecial #41                 // Method java/util/PriorityQueue.\"<init>\":(ILjava/util/Comparator;)V\n-       205: putfield      #42                 // Field queue:Ljava/util/Queue;\n+       199: invokespecial #132                // Method org/apache/commons/compress/archivers/dump/DumpArchiveInputStream$1.\"<init>\":(Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;)V\n+       202: invokespecial #135                // Method java/util/PriorityQueue.\"<init>\":(ILjava/util/Comparator;)V\n+       205: putfield      #138                // Field queue:Ljava/util/Queue;\n        208: return\n       Exception table:\n          from    to  target type\n             65   142   145   Class java/io/IOException\n       LineNumberTable:\n         line 103: 0\n         line 59: 4\n@@ -654,97 +654,97 @@\n \n   public int getCount();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #43                 // Method getBytesRead:()J\n+         1: invokevirtual #142                // Method getBytesRead:()J\n          4: l2i\n          5: ireturn\n       LineNumberTable:\n         line 155: 0\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #174()\n+      0: #400()\n         java.lang.Deprecated\n \n   public long getBytesRead();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-         4: invokevirtual #44                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.getBytesRead:()J\n+         1: getfield      #33                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+         4: invokevirtual #146                // Method org/apache/commons/compress/archivers/dump/TapeInputStream.getBytesRead:()J\n          7: lreturn\n       LineNumberTable:\n         line 160: 0\n \n   public org.apache.commons.compress.archivers.dump.DumpArchiveSummary getSummary();\n     descriptor: ()Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #22                 // Field summary:Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n+         1: getfield      #73                 // Field summary:Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n          4: areturn\n       LineNumberTable:\n         line 168: 0\n \n   private void readCLRI() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-         4: invokevirtual #16                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n+         1: getfield      #33                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+         4: invokevirtual #55                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n          7: astore_1\n          8: aload_1\n-         9: invokestatic  #17                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n+         9: invokestatic  #59                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n         12: ifne          23\n-        15: new           #45                 // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n+        15: new           #147                // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n         18: dup\n-        19: invokespecial #46                 // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n+        19: invokespecial #149                // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n         22: athrow\n         23: aload_0\n         24: aload_1\n-        25: invokestatic  #47                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-        28: putfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-        31: getstatic     #49                 // Field org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.CLRI:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+        25: invokestatic  #150                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+        28: putfield      #156                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+        31: getstatic     #160                // Field org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.CLRI:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n         34: aload_0\n-        35: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-        38: invokevirtual #50                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+        35: getfield      #156                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+        38: invokevirtual #166                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n         41: if_acmpeq     52\n-        44: new           #45                 // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n+        44: new           #147                // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n         47: dup\n-        48: invokespecial #46                 // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n+        48: invokespecial #149                // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n         51: athrow\n         52: aload_0\n-        53: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-        56: ldc2_w        #51                 // long 1024l\n+        53: getfield      #33                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+        56: ldc2_w        #170                // long 1024l\n         59: aload_0\n-        60: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-        63: invokevirtual #53                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n+        60: getfield      #156                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+        63: invokevirtual #172                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n         66: i2l\n         67: lmul\n-        68: invokevirtual #54                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.skip:(J)J\n-        71: ldc2_w        #55                 // long -1l\n+        68: invokevirtual #175                // Method org/apache/commons/compress/archivers/dump/TapeInputStream.skip:(J)J\n+        71: ldc2_w        #179                // long -1l\n         74: lcmp\n         75: ifne          86\n-        78: new           #57                 // class java/io/EOFException\n+        78: new           #181                // class java/io/EOFException\n         81: dup\n-        82: invokespecial #58                 // Method java/io/EOFException.\"<init>\":()V\n+        82: invokespecial #183                // Method java/io/EOFException.\"<init>\":()V\n         85: athrow\n         86: aload_0\n         87: aload_0\n-        88: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-        91: invokevirtual #53                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n-        94: putfield      #59                 // Field readIdx:I\n+        88: getfield      #156                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+        91: invokevirtual #172                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n+        94: putfield      #184                // Field readIdx:I\n         97: return\n       LineNumberTable:\n         line 175: 0\n         line 177: 8\n         line 178: 15\n         line 181: 23\n         line 183: 31\n@@ -764,58 +764,58 @@\n \n   private void readBITS() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-         4: invokevirtual #16                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n+         1: getfield      #33                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+         4: invokevirtual #55                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n          7: astore_1\n          8: aload_1\n-         9: invokestatic  #17                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n+         9: invokestatic  #59                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n         12: ifne          23\n-        15: new           #45                 // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n+        15: new           #147                // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n         18: dup\n-        19: invokespecial #46                 // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n+        19: invokespecial #149                // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n         22: athrow\n         23: aload_0\n         24: aload_1\n-        25: invokestatic  #47                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-        28: putfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-        31: getstatic     #60                 // Field org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.BITS:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+        25: invokestatic  #150                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+        28: putfield      #156                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+        31: getstatic     #188                // Field org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.BITS:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n         34: aload_0\n-        35: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-        38: invokevirtual #50                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+        35: getfield      #156                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+        38: invokevirtual #166                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n         41: if_acmpeq     52\n-        44: new           #45                 // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n+        44: new           #147                // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n         47: dup\n-        48: invokespecial #46                 // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n+        48: invokespecial #149                // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n         51: athrow\n         52: aload_0\n-        53: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-        56: ldc2_w        #51                 // long 1024l\n+        53: getfield      #33                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+        56: ldc2_w        #170                // long 1024l\n         59: aload_0\n-        60: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-        63: invokevirtual #53                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n+        60: getfield      #156                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+        63: invokevirtual #172                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n         66: i2l\n         67: lmul\n-        68: invokevirtual #54                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.skip:(J)J\n-        71: ldc2_w        #55                 // long -1l\n+        68: invokevirtual #175                // Method org/apache/commons/compress/archivers/dump/TapeInputStream.skip:(J)J\n+        71: ldc2_w        #179                // long -1l\n         74: lcmp\n         75: ifne          86\n-        78: new           #57                 // class java/io/EOFException\n+        78: new           #181                // class java/io/EOFException\n         81: dup\n-        82: invokespecial #58                 // Method java/io/EOFException.\"<init>\":()V\n+        82: invokespecial #183                // Method java/io/EOFException.\"<init>\":()V\n         85: athrow\n         86: aload_0\n         87: aload_0\n-        88: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-        91: invokevirtual #53                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n-        94: putfield      #59                 // Field readIdx:I\n+        88: getfield      #156                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+        91: invokevirtual #172                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n+        94: putfield      #184                // Field readIdx:I\n         97: return\n       LineNumberTable:\n         line 199: 0\n         line 201: 8\n         line 202: 15\n         line 205: 23\n         line 207: 31\n@@ -835,15 +835,15 @@\n \n   public org.apache.commons.compress.archivers.dump.DumpArchiveEntry getNextDumpEntry() throws java.io.IOException;\n     descriptor: ()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #61                 // Method getNextEntry:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+         1: invokevirtual #191                // Method getNextEntry:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n          4: areturn\n       LineNumberTable:\n         line 225: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public org.apache.commons.compress.archivers.dump.DumpArchiveEntry getNextEntry() throws java.io.IOException;\n@@ -852,200 +852,200 @@\n     Code:\n       stack=5, locals=4, args_size=1\n          0: aconst_null\n          1: astore_1\n          2: aconst_null\n          3: astore_2\n          4: aload_0\n-         5: getfield      #42                 // Field queue:Ljava/util/Queue;\n-         8: invokeinterface #62,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z\n+         5: getfield      #138                // Field queue:Ljava/util/Queue;\n+         8: invokeinterface #195,  1          // InterfaceMethod java/util/Queue.isEmpty:()Z\n         13: ifne          29\n         16: aload_0\n-        17: getfield      #42                 // Field queue:Ljava/util/Queue;\n-        20: invokeinterface #63,  1           // InterfaceMethod java/util/Queue.remove:()Ljava/lang/Object;\n-        25: checkcast     #64                 // class org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n+        17: getfield      #138                // Field queue:Ljava/util/Queue;\n+        20: invokeinterface #200,  1          // InterfaceMethod java/util/Queue.remove:()Ljava/lang/Object;\n+        25: checkcast     #151                // class org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n         28: areturn\n         29: aload_1\n         30: ifnonnull     358\n         33: aload_0\n-        34: getfield      #12                 // Field hasHitEOF:Z\n+        34: getfield      #37                 // Field hasHitEOF:Z\n         37: ifeq          42\n         40: aconst_null\n         41: areturn\n         42: aload_0\n-        43: getfield      #59                 // Field readIdx:I\n+        43: getfield      #184                // Field readIdx:I\n         46: aload_0\n-        47: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-        50: invokevirtual #53                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n+        47: getfield      #156                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+        50: invokevirtual #172                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n         53: if_icmpge     102\n         56: aload_0\n-        57: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+        57: getfield      #156                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n         60: aload_0\n         61: dup\n-        62: getfield      #59                 // Field readIdx:I\n+        62: getfield      #184                // Field readIdx:I\n         65: dup_x1\n         66: iconst_1\n         67: iadd\n-        68: putfield      #59                 // Field readIdx:I\n-        71: invokevirtual #65                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.isSparseRecord:(I)Z\n+        68: putfield      #184                // Field readIdx:I\n+        71: invokevirtual #204                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.isSparseRecord:(I)Z\n         74: ifne          42\n         77: aload_0\n-        78: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-        81: ldc2_w        #51                 // long 1024l\n-        84: invokevirtual #54                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.skip:(J)J\n-        87: ldc2_w        #55                 // long -1l\n+        78: getfield      #33                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+        81: ldc2_w        #170                // long 1024l\n+        84: invokevirtual #175                // Method org/apache/commons/compress/archivers/dump/TapeInputStream.skip:(J)J\n+        87: ldc2_w        #179                // long -1l\n         90: lcmp\n         91: ifne          42\n-        94: new           #57                 // class java/io/EOFException\n+        94: new           #181                // class java/io/EOFException\n         97: dup\n-        98: invokespecial #58                 // Method java/io/EOFException.\"<init>\":()V\n+        98: invokespecial #183                // Method java/io/EOFException.\"<init>\":()V\n        101: athrow\n        102: aload_0\n        103: iconst_0\n-       104: putfield      #59                 // Field readIdx:I\n+       104: putfield      #184                // Field readIdx:I\n        107: aload_0\n        108: aload_0\n-       109: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-       112: invokevirtual #44                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.getBytesRead:()J\n-       115: putfield      #66                 // Field filepos:J\n+       109: getfield      #33                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+       112: invokevirtual #146                // Method org/apache/commons/compress/archivers/dump/TapeInputStream.getBytesRead:()J\n+       115: putfield      #208                // Field filepos:J\n        118: aload_0\n-       119: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-       122: invokevirtual #16                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n+       119: getfield      #33                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+       122: invokevirtual #55                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n        125: astore_3\n        126: aload_3\n-       127: invokestatic  #17                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n+       127: invokestatic  #59                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n        130: ifne          141\n-       133: new           #45                 // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n+       133: new           #147                // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n        136: dup\n-       137: invokespecial #46                 // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n+       137: invokespecial #149                // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n        140: athrow\n        141: aload_0\n        142: aload_3\n-       143: invokestatic  #47                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-       146: putfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-       149: getstatic     #67                 // Field org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.ADDR:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+       143: invokestatic  #150                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       146: putfield      #156                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       149: getstatic     #212                // Field org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.ADDR:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n        152: aload_0\n-       153: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-       156: invokevirtual #50                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+       153: getfield      #156                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       156: invokevirtual #166                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n        159: if_acmpne     249\n        162: aload_0\n-       163: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-       166: ldc2_w        #51                 // long 1024l\n+       163: getfield      #33                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+       166: ldc2_w        #170                // long 1024l\n        169: aload_0\n-       170: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-       173: invokevirtual #53                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n+       170: getfield      #156                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       173: invokevirtual #172                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n        176: aload_0\n-       177: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-       180: invokevirtual #68                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderHoles:()I\n+       177: getfield      #156                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       180: invokevirtual #215                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderHoles:()I\n        183: isub\n        184: i2l\n        185: lmul\n-       186: invokevirtual #54                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.skip:(J)J\n-       189: ldc2_w        #55                 // long -1l\n+       186: invokevirtual #175                // Method org/apache/commons/compress/archivers/dump/TapeInputStream.skip:(J)J\n+       189: ldc2_w        #179                // long -1l\n        192: lcmp\n        193: ifne          204\n-       196: new           #57                 // class java/io/EOFException\n+       196: new           #181                // class java/io/EOFException\n        199: dup\n-       200: invokespecial #58                 // Method java/io/EOFException.\"<init>\":()V\n+       200: invokespecial #183                // Method java/io/EOFException.\"<init>\":()V\n        203: athrow\n        204: aload_0\n        205: aload_0\n-       206: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-       209: invokevirtual #44                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.getBytesRead:()J\n-       212: putfield      #66                 // Field filepos:J\n+       206: getfield      #33                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+       209: invokevirtual #146                // Method org/apache/commons/compress/archivers/dump/TapeInputStream.getBytesRead:()J\n+       212: putfield      #208                // Field filepos:J\n        215: aload_0\n-       216: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-       219: invokevirtual #16                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n+       216: getfield      #33                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+       219: invokevirtual #55                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n        222: astore_3\n        223: aload_3\n-       224: invokestatic  #17                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n+       224: invokestatic  #59                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n        227: ifne          238\n-       230: new           #45                 // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n+       230: new           #147                // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n        233: dup\n-       234: invokespecial #46                 // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n+       234: invokespecial #149                // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n        237: athrow\n        238: aload_0\n        239: aload_3\n-       240: invokestatic  #47                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-       243: putfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       240: invokestatic  #150                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       243: putfield      #156                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n        246: goto          149\n-       249: getstatic     #69                 // Field org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.END:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+       249: getstatic     #218                // Field org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.END:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n        252: aload_0\n-       253: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-       256: invokevirtual #50                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+       253: getfield      #156                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       256: invokevirtual #166                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n        259: if_acmpne     269\n        262: aload_0\n        263: iconst_1\n-       264: putfield      #12                 // Field hasHitEOF:Z\n+       264: putfield      #37                 // Field hasHitEOF:Z\n        267: aconst_null\n        268: areturn\n        269: aload_0\n-       270: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       270: getfield      #156                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n        273: astore_1\n        274: aload_1\n-       275: invokevirtual #70                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.isDirectory:()Z\n+       275: invokevirtual #221                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.isDirectory:()Z\n        278: ifeq          313\n        281: aload_0\n        282: aload_0\n-       283: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-       286: invokespecial #71                 // Method readDirectoryEntry:(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V\n+       283: getfield      #156                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       286: invokespecial #224                // Method readDirectoryEntry:(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V\n        289: aload_0\n        290: lconst_0\n-       291: putfield      #72                 // Field entryOffset:J\n+       291: putfield      #228                // Field entryOffset:J\n        294: aload_0\n        295: lconst_0\n-       296: putfield      #73                 // Field entrySize:J\n+       296: putfield      #231                // Field entrySize:J\n        299: aload_0\n        300: aload_0\n-       301: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-       304: invokevirtual #53                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n-       307: putfield      #59                 // Field readIdx:I\n+       301: getfield      #156                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       304: invokevirtual #172                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n+       307: putfield      #184                // Field readIdx:I\n        310: goto          334\n        313: aload_0\n        314: lconst_0\n-       315: putfield      #72                 // Field entryOffset:J\n+       315: putfield      #228                // Field entryOffset:J\n        318: aload_0\n        319: aload_0\n-       320: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-       323: invokevirtual #74                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getEntrySize:()J\n-       326: putfield      #73                 // Field entrySize:J\n+       320: getfield      #156                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       323: invokevirtual #234                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getEntrySize:()J\n+       326: putfield      #231                // Field entrySize:J\n        329: aload_0\n        330: iconst_0\n-       331: putfield      #59                 // Field readIdx:I\n+       331: putfield      #184                // Field readIdx:I\n        334: aload_0\n        335: aload_0\n-       336: getfield      #4                  // Field readBuf:[B\n+       336: getfield      #14                 // Field readBuf:[B\n        339: arraylength\n-       340: putfield      #75                 // Field recordOffset:I\n+       340: putfield      #237                // Field recordOffset:I\n        343: aload_0\n        344: aload_1\n-       345: invokespecial #76                 // Method getPath:(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;\n+       345: invokespecial #240                // Method getPath:(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;\n        348: astore_2\n        349: aload_2\n        350: ifnonnull     355\n        353: aconst_null\n        354: astore_1\n        355: goto          29\n        358: aload_1\n        359: aload_2\n-       360: invokevirtual #77                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setName:(Ljava/lang/String;)V\n+       360: invokevirtual #244                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setName:(Ljava/lang/String;)V\n        363: aload_1\n        364: aload_0\n-       365: getfield      #7                  // Field names:Ljava/util/Map;\n+       365: getfield      #21                 // Field names:Ljava/util/Map;\n        368: aload_1\n-       369: invokevirtual #78                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n-       372: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-       375: invokeinterface #79,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-       380: checkcast     #33                 // class org/apache/commons/compress/archivers/dump/Dirent\n-       383: invokevirtual #80                 // Method org/apache/commons/compress/archivers/dump/Dirent.getName:()Ljava/lang/String;\n-       386: invokevirtual #81                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setSimpleName:(Ljava/lang/String;)V\n+       369: invokevirtual #248                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n+       372: invokestatic  #116                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+       375: invokeinterface #251,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+       380: checkcast     #109                // class org/apache/commons/compress/archivers/dump/Dirent\n+       383: invokevirtual #255                // Method org/apache/commons/compress/archivers/dump/Dirent.getName:()Ljava/lang/String;\n+       386: invokevirtual #258                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setSimpleName:(Ljava/lang/String;)V\n        389: aload_1\n        390: aload_0\n-       391: getfield      #66                 // Field filepos:J\n-       394: invokevirtual #82                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setOffset:(J)V\n+       391: getfield      #208                // Field filepos:J\n+       394: invokevirtual #261                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setOffset:(J)V\n        397: aload_1\n        398: areturn\n       LineNumberTable:\n         line 230: 0\n         line 231: 2\n         line 234: 4\n         line 235: 16\n@@ -1118,241 +1118,241 @@\n \n   private void readDirectoryEntry(org.apache.commons.compress.archivers.dump.DumpArchiveEntry) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=6, locals=15, args_size=2\n          0: aload_1\n-         1: invokevirtual #74                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getEntrySize:()J\n+         1: invokevirtual #234                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getEntrySize:()J\n          4: lstore_2\n          5: iconst_1\n          6: istore        4\n          8: iload         4\n         10: ifne          23\n-        13: getstatic     #67                 // Field org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.ADDR:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+        13: getstatic     #212                // Field org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.ADDR:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n         16: aload_1\n-        17: invokevirtual #50                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-        20: if_acmpne     528\n+        17: invokevirtual #166                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+        20: if_acmpne     529\n         23: iload         4\n         25: ifne          36\n         28: aload_0\n-        29: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-        32: invokevirtual #16                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n+        29: getfield      #33                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+        32: invokevirtual #55                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n         35: pop\n         36: aload_0\n-        37: getfield      #7                  // Field names:Ljava/util/Map;\n+        37: getfield      #21                 // Field names:Ljava/util/Map;\n         40: aload_1\n-        41: invokevirtual #78                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n-        44: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        47: invokeinterface #83,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z\n+        41: invokevirtual #248                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n+        44: invokestatic  #116                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        47: invokeinterface #265,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z\n         52: ifne          83\n-        55: getstatic     #84                 // Field org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.INODE:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+        55: getstatic     #269                // Field org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.INODE:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n         58: aload_1\n-        59: invokevirtual #50                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+        59: invokevirtual #166                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n         62: if_acmpne     83\n         65: aload_0\n-        66: getfield      #8                  // Field pending:Ljava/util/Map;\n+        66: getfield      #25                 // Field pending:Ljava/util/Map;\n         69: aload_1\n-        70: invokevirtual #78                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n-        73: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        70: invokevirtual #248                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n+        73: invokestatic  #116                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         76: aload_1\n-        77: invokeinterface #37,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+        77: invokeinterface #122,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n         82: pop\n         83: sipush        1024\n         86: aload_1\n-        87: invokevirtual #53                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n+        87: invokevirtual #172                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n         90: imul\n         91: istore        5\n         93: aload_0\n-        94: getfield      #26                 // Field blockBuffer:[B\n+        94: getfield      #89                 // Field blockBuffer:[B\n         97: arraylength\n         98: iload         5\n        100: if_icmpge     111\n        103: aload_0\n        104: iload         5\n        106: newarray       byte\n-       108: putfield      #26                 // Field blockBuffer:[B\n+       108: putfield      #89                 // Field blockBuffer:[B\n        111: aload_0\n-       112: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+       112: getfield      #33                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n        115: aload_0\n-       116: getfield      #26                 // Field blockBuffer:[B\n+       116: getfield      #89                 // Field blockBuffer:[B\n        119: iconst_0\n        120: iload         5\n-       122: invokevirtual #85                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.read:([BII)I\n+       122: invokevirtual #272                // Method org/apache/commons/compress/archivers/dump/TapeInputStream.read:([BII)I\n        125: iload         5\n        127: if_icmpeq     138\n-       130: new           #57                 // class java/io/EOFException\n+       130: new           #181                // class java/io/EOFException\n        133: dup\n-       134: invokespecial #58                 // Method java/io/EOFException.\"<init>\":()V\n+       134: invokespecial #183                // Method java/io/EOFException.\"<init>\":()V\n        137: athrow\n        138: iconst_0\n        139: istore        6\n        141: iconst_0\n        142: istore        7\n        144: iload         7\n        146: iload         5\n        148: bipush        8\n        150: isub\n-       151: if_icmpge     485\n+       151: if_icmpge     486\n        154: iload         7\n        156: i2l\n        157: lload_2\n-       158: ldc2_w        #86                 // long 8l\n+       158: ldc2_w        #276                // long 8l\n        161: lsub\n        162: lcmp\n-       163: ifge          485\n+       163: ifge          486\n        166: aload_0\n-       167: getfield      #26                 // Field blockBuffer:[B\n+       167: getfield      #89                 // Field blockBuffer:[B\n        170: iload         7\n-       172: invokestatic  #88                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32:([BI)I\n+       172: invokestatic  #278                // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32:([BI)I\n        175: istore        8\n        177: aload_0\n-       178: getfield      #26                 // Field blockBuffer:[B\n+       178: getfield      #89                 // Field blockBuffer:[B\n        181: iload         7\n        183: iconst_4\n        184: iadd\n-       185: invokestatic  #89                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert16:([BI)I\n+       185: invokestatic  #282                // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert16:([BI)I\n        188: istore        6\n        190: aload_0\n-       191: getfield      #26                 // Field blockBuffer:[B\n+       191: getfield      #89                 // Field blockBuffer:[B\n        194: iload         7\n        196: bipush        6\n        198: iadd\n        199: baload\n        200: istore        9\n        202: aload_0\n-       203: getfield      #15                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+       203: getfield      #51                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n        206: aload_0\n-       207: getfield      #26                 // Field blockBuffer:[B\n+       207: getfield      #89                 // Field blockBuffer:[B\n        210: iload         7\n        212: bipush        8\n        214: iadd\n        215: aload_0\n-       216: getfield      #26                 // Field blockBuffer:[B\n+       216: getfield      #89                 // Field blockBuffer:[B\n        219: iload         7\n        221: bipush        7\n        223: iadd\n        224: baload\n-       225: invokestatic  #90                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.decode:(Lorg/apache/commons/compress/archivers/zip/ZipEncoding;[BII)Ljava/lang/String;\n+       225: invokestatic  #285                // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.decode:(Lorg/apache/commons/compress/archivers/zip/ZipEncoding;[BII)Ljava/lang/String;\n        228: astore        10\n-       230: ldc           #34                 // String .\n+       230: ldc           #111                // String .\n        232: aload         10\n-       234: invokevirtual #91                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n-       237: ifne          475\n-       240: ldc           #92                 // String ..\n-       242: aload         10\n-       244: invokevirtual #91                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n-       247: ifeq          253\n-       250: goto          475\n-       253: new           #33                 // class org/apache/commons/compress/archivers/dump/Dirent\n-       256: dup\n-       257: iload         8\n-       259: aload_1\n-       260: invokevirtual #78                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n-       263: iload         9\n-       265: aload         10\n-       267: invokespecial #35                 // Method org/apache/commons/compress/archivers/dump/Dirent.\"<init>\":(IIILjava/lang/String;)V\n-       270: astore        11\n-       272: aload_0\n-       273: getfield      #7                  // Field names:Ljava/util/Map;\n-       276: iload         8\n-       278: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-       281: aload         11\n-       283: invokeinterface #37,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-       288: pop\n-       289: aload_0\n-       290: getfield      #8                  // Field pending:Ljava/util/Map;\n-       293: invokeinterface #93,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;\n-       298: invokeinterface #94,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;\n-       303: astore        12\n-       305: aload         12\n-       307: invokeinterface #95,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n-       312: ifeq          421\n-       315: aload         12\n-       317: invokeinterface #96,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-       322: checkcast     #97                 // class java/util/Map$Entry\n-       325: astore        13\n-       327: aload_0\n-       328: aload         13\n-       330: invokeinterface #98,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;\n-       335: checkcast     #64                 // class org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n-       338: invokespecial #76                 // Method getPath:(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;\n-       341: astore        14\n-       343: aload         14\n-       345: ifnull        418\n-       348: aload         13\n-       350: invokeinterface #98,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;\n-       355: checkcast     #64                 // class org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n-       358: aload         14\n-       360: invokevirtual #77                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setName:(Ljava/lang/String;)V\n-       363: aload         13\n-       365: invokeinterface #98,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;\n-       370: checkcast     #64                 // class org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n-       373: aload_0\n-       374: getfield      #7                  // Field names:Ljava/util/Map;\n-       377: aload         13\n-       379: invokeinterface #99,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;\n-       384: invokeinterface #79,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-       389: checkcast     #33                 // class org/apache/commons/compress/archivers/dump/Dirent\n-       392: invokevirtual #80                 // Method org/apache/commons/compress/archivers/dump/Dirent.getName:()Ljava/lang/String;\n-       395: invokevirtual #81                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setSimpleName:(Ljava/lang/String;)V\n-       398: aload_0\n-       399: getfield      #42                 // Field queue:Ljava/util/Queue;\n-       402: aload         13\n-       404: invokeinterface #98,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;\n-       409: checkcast     #64                 // class org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n-       412: invokeinterface #100,  2          // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z\n-       417: pop\n-       418: goto          305\n-       421: aload_0\n-       422: getfield      #42                 // Field queue:Ljava/util/Queue;\n-       425: invokeinterface #101,  1          // InterfaceMethod java/util/Queue.iterator:()Ljava/util/Iterator;\n-       430: astore        12\n-       432: aload         12\n-       434: invokeinterface #95,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n-       439: ifeq          475\n-       442: aload         12\n-       444: invokeinterface #96,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-       449: checkcast     #64                 // class org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n-       452: astore        13\n-       454: aload_0\n-       455: getfield      #8                  // Field pending:Ljava/util/Map;\n-       458: aload         13\n-       460: invokevirtual #78                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n-       463: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-       466: invokeinterface #102,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;\n-       471: pop\n-       472: goto          432\n-       475: iload         7\n-       477: iload         6\n-       479: iadd\n-       480: istore        7\n-       482: goto          144\n-       485: aload_0\n-       486: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-       489: invokevirtual #103                // Method org/apache/commons/compress/archivers/dump/TapeInputStream.peek:()[B\n-       492: astore        7\n-       494: aload         7\n-       496: invokestatic  #17                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n-       499: ifne          510\n-       502: new           #45                 // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n-       505: dup\n-       506: invokespecial #46                 // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n-       509: athrow\n-       510: aload         7\n-       512: invokestatic  #47                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-       515: astore_1\n-       516: iconst_0\n-       517: istore        4\n-       519: lload_2\n-       520: ldc2_w        #51                 // long 1024l\n-       523: lsub\n-       524: lstore_2\n-       525: goto          8\n-       528: return\n+       234: invokevirtual #289                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+       237: ifne          476\n+       240: ldc_w         #294                // String ..\n+       243: aload         10\n+       245: invokevirtual #289                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+       248: ifeq          254\n+       251: goto          476\n+       254: new           #109                // class org/apache/commons/compress/archivers/dump/Dirent\n+       257: dup\n+       258: iload         8\n+       260: aload_1\n+       261: invokevirtual #248                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n+       264: iload         9\n+       266: aload         10\n+       268: invokespecial #113                // Method org/apache/commons/compress/archivers/dump/Dirent.\"<init>\":(IIILjava/lang/String;)V\n+       271: astore        11\n+       273: aload_0\n+       274: getfield      #21                 // Field names:Ljava/util/Map;\n+       277: iload         8\n+       279: invokestatic  #116                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+       282: aload         11\n+       284: invokeinterface #122,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+       289: pop\n+       290: aload_0\n+       291: getfield      #25                 // Field pending:Ljava/util/Map;\n+       294: invokeinterface #296,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;\n+       299: invokeinterface #300,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;\n+       304: astore        12\n+       306: aload         12\n+       308: invokeinterface #306,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n+       313: ifeq          422\n+       316: aload         12\n+       318: invokeinterface #311,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+       323: checkcast     #314                // class java/util/Map$Entry\n+       326: astore        13\n+       328: aload_0\n+       329: aload         13\n+       331: invokeinterface #316,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;\n+       336: checkcast     #151                // class org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n+       339: invokespecial #240                // Method getPath:(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;\n+       342: astore        14\n+       344: aload         14\n+       346: ifnull        419\n+       349: aload         13\n+       351: invokeinterface #316,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;\n+       356: checkcast     #151                // class org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n+       359: aload         14\n+       361: invokevirtual #244                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setName:(Ljava/lang/String;)V\n+       364: aload         13\n+       366: invokeinterface #316,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;\n+       371: checkcast     #151                // class org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n+       374: aload_0\n+       375: getfield      #21                 // Field names:Ljava/util/Map;\n+       378: aload         13\n+       380: invokeinterface #319,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;\n+       385: invokeinterface #251,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+       390: checkcast     #109                // class org/apache/commons/compress/archivers/dump/Dirent\n+       393: invokevirtual #255                // Method org/apache/commons/compress/archivers/dump/Dirent.getName:()Ljava/lang/String;\n+       396: invokevirtual #258                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setSimpleName:(Ljava/lang/String;)V\n+       399: aload_0\n+       400: getfield      #138                // Field queue:Ljava/util/Queue;\n+       403: aload         13\n+       405: invokeinterface #316,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;\n+       410: checkcast     #151                // class org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n+       413: invokeinterface #322,  2          // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z\n+       418: pop\n+       419: goto          306\n+       422: aload_0\n+       423: getfield      #138                // Field queue:Ljava/util/Queue;\n+       426: invokeinterface #325,  1          // InterfaceMethod java/util/Queue.iterator:()Ljava/util/Iterator;\n+       431: astore        12\n+       433: aload         12\n+       435: invokeinterface #306,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n+       440: ifeq          476\n+       443: aload         12\n+       445: invokeinterface #311,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+       450: checkcast     #151                // class org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n+       453: astore        13\n+       455: aload_0\n+       456: getfield      #25                 // Field pending:Ljava/util/Map;\n+       459: aload         13\n+       461: invokevirtual #248                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n+       464: invokestatic  #116                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+       467: invokeinterface #326,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;\n+       472: pop\n+       473: goto          433\n+       476: iload         7\n+       478: iload         6\n+       480: iadd\n+       481: istore        7\n+       483: goto          144\n+       486: aload_0\n+       487: getfield      #33                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+       490: invokevirtual #328                // Method org/apache/commons/compress/archivers/dump/TapeInputStream.peek:()[B\n+       493: astore        7\n+       495: aload         7\n+       497: invokestatic  #59                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n+       500: ifne          511\n+       503: new           #147                // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n+       506: dup\n+       507: invokespecial #149                // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n+       510: athrow\n+       511: aload         7\n+       513: invokestatic  #150                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       516: astore_1\n+       517: iconst_0\n+       518: istore        4\n+       520: lload_2\n+       521: ldc2_w        #170                // long 1024l\n+       524: lsub\n+       525: lstore_2\n+       526: goto          8\n+       529: return\n       LineNumberTable:\n         line 326: 0\n         line 327: 5\n         line 329: 8\n         line 330: 17\n         line 332: 23\n         line 333: 28\n@@ -1367,37 +1367,37 @@\n         line 351: 138\n         line 353: 141\n         line 355: 166\n         line 356: 177\n         line 358: 190\n         line 360: 202\n         line 362: 230\n-        line 364: 250\n-        line 367: 253\n-        line 376: 272\n-        line 379: 289\n-        line 380: 327\n-        line 382: 343\n-        line 383: 348\n-        line 384: 363\n-        line 385: 379\n-        line 386: 398\n-        line 388: 418\n-        line 392: 421\n-        line 393: 454\n-        line 394: 472\n-        line 354: 475\n-        line 397: 485\n-        line 399: 494\n-        line 400: 502\n-        line 403: 510\n-        line 404: 516\n-        line 405: 519\n-        line 406: 525\n-        line 407: 528\n+        line 364: 251\n+        line 367: 254\n+        line 376: 273\n+        line 379: 290\n+        line 380: 328\n+        line 382: 344\n+        line 383: 349\n+        line 384: 364\n+        line 385: 380\n+        line 386: 399\n+        line 388: 419\n+        line 392: 422\n+        line 393: 455\n+        line 394: 473\n+        line 354: 476\n+        line 397: 486\n+        line 399: 495\n+        line 400: 503\n+        line 403: 511\n+        line 404: 517\n+        line 405: 520\n+        line 406: 526\n+        line 407: 529\n       StackMapTable: number_of_entries = 16\n         frame_type = 253 /* append */\n           offset_delta = 8\n           locals = [ long, int ]\n         frame_type = 14 /* same */\n         frame_type = 12 /* same */\n         frame_type = 46 /* same */\n@@ -1405,15 +1405,15 @@\n           offset_delta = 27\n           locals = [ int ]\n         frame_type = 26 /* same */\n         frame_type = 253 /* append */\n           offset_delta = 5\n           locals = [ int, int ]\n         frame_type = 254 /* append */\n-          offset_delta = 108\n+          offset_delta = 109\n           locals = [ int, int, class java/lang/String ]\n         frame_type = 253 /* append */\n           offset_delta = 51\n           locals = [ class org/apache/commons/compress/archivers/dump/Dirent, class java/util/Iterator ]\n         frame_type = 251 /* same_frame_extended */\n           offset_delta = 112\n         frame_type = 250 /* chop */\n@@ -1436,90 +1436,90 @@\n       throws java.io.IOException\n \n   private java.lang.String getPath(org.apache.commons.compress.archivers.dump.DumpArchiveEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=5, args_size=2\n-         0: new           #104                // class java/util/Stack\n+         0: new           #331                // class java/util/Stack\n          3: dup\n-         4: invokespecial #105                // Method java/util/Stack.\"<init>\":()V\n+         4: invokespecial #333                // Method java/util/Stack.\"<init>\":()V\n          7: astore_2\n          8: aconst_null\n          9: astore_3\n         10: aload_1\n-        11: invokevirtual #78                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n+        11: invokevirtual #248                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n         14: istore        4\n         16: aload_0\n-        17: getfield      #7                  // Field names:Ljava/util/Map;\n+        17: getfield      #21                 // Field names:Ljava/util/Map;\n         20: iload         4\n-        22: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        25: invokeinterface #83,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z\n+        22: invokestatic  #116                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        25: invokeinterface #265,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z\n         30: ifne          40\n         33: aload_2\n-        34: invokevirtual #106                // Method java/util/Stack.clear:()V\n+        34: invokevirtual #334                // Method java/util/Stack.clear:()V\n         37: goto          90\n         40: aload_0\n-        41: getfield      #7                  // Field names:Ljava/util/Map;\n+        41: getfield      #21                 // Field names:Ljava/util/Map;\n         44: iload         4\n-        46: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        49: invokeinterface #79,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-        54: checkcast     #33                 // class org/apache/commons/compress/archivers/dump/Dirent\n+        46: invokestatic  #116                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        49: invokeinterface #251,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+        54: checkcast     #109                // class org/apache/commons/compress/archivers/dump/Dirent\n         57: astore_3\n         58: aload_2\n         59: aload_3\n-        60: invokevirtual #80                 // Method org/apache/commons/compress/archivers/dump/Dirent.getName:()Ljava/lang/String;\n-        63: invokevirtual #107                // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;\n+        60: invokevirtual #255                // Method org/apache/commons/compress/archivers/dump/Dirent.getName:()Ljava/lang/String;\n+        63: invokevirtual #337                // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;\n         66: pop\n         67: aload_3\n-        68: invokevirtual #108                // Method org/apache/commons/compress/archivers/dump/Dirent.getIno:()I\n+        68: invokevirtual #340                // Method org/apache/commons/compress/archivers/dump/Dirent.getIno:()I\n         71: aload_3\n-        72: invokevirtual #109                // Method org/apache/commons/compress/archivers/dump/Dirent.getParentIno:()I\n+        72: invokevirtual #341                // Method org/apache/commons/compress/archivers/dump/Dirent.getParentIno:()I\n         75: if_icmpne     81\n         78: goto          90\n         81: aload_3\n-        82: invokevirtual #109                // Method org/apache/commons/compress/archivers/dump/Dirent.getParentIno:()I\n+        82: invokevirtual #341                // Method org/apache/commons/compress/archivers/dump/Dirent.getParentIno:()I\n         85: istore        4\n         87: goto          16\n         90: aload_2\n-        91: invokevirtual #110                // Method java/util/Stack.isEmpty:()Z\n+        91: invokevirtual #344                // Method java/util/Stack.isEmpty:()Z\n         94: ifeq          117\n         97: aload_0\n-        98: getfield      #8                  // Field pending:Ljava/util/Map;\n+        98: getfield      #25                 // Field pending:Ljava/util/Map;\n        101: aload_1\n-       102: invokevirtual #78                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n-       105: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+       102: invokevirtual #248                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n+       105: invokestatic  #116                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n        108: aload_1\n-       109: invokeinterface #37,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+       109: invokeinterface #122,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n        114: pop\n        115: aconst_null\n        116: areturn\n-       117: new           #111                // class java/lang/StringBuilder\n+       117: new           #345                // class java/lang/StringBuilder\n        120: dup\n        121: aload_2\n-       122: invokevirtual #112                // Method java/util/Stack.pop:()Ljava/lang/Object;\n-       125: checkcast     #113                // class java/lang/String\n-       128: invokespecial #114                // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+       122: invokevirtual #347                // Method java/util/Stack.pop:()Ljava/lang/Object;\n+       125: checkcast     #290                // class java/lang/String\n+       128: invokespecial #350                // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n        131: astore        4\n        133: aload_2\n-       134: invokevirtual #110                // Method java/util/Stack.isEmpty:()Z\n+       134: invokevirtual #344                // Method java/util/Stack.isEmpty:()Z\n        137: ifne          164\n        140: aload         4\n        142: bipush        47\n-       144: invokevirtual #115                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       144: invokevirtual #352                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n        147: pop\n        148: aload         4\n        150: aload_2\n-       151: invokevirtual #112                // Method java/util/Stack.pop:()Ljava/lang/Object;\n-       154: checkcast     #113                // class java/lang/String\n-       157: invokevirtual #116                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       151: invokevirtual #347                // Method java/util/Stack.pop:()Ljava/lang/Object;\n+       154: checkcast     #290                // class java/lang/String\n+       157: invokevirtual #356                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        160: pop\n        161: goto          133\n        164: aload         4\n-       166: invokevirtual #117                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       166: invokevirtual #359                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        169: areturn\n       LineNumberTable:\n         line 418: 0\n         line 419: 8\n         line 421: 10\n         line 422: 16\n         line 423: 33\n@@ -1559,219 +1559,219 @@\n          0: iload_3\n          1: ifne          6\n          4: iconst_0\n          5: ireturn\n          6: iconst_0\n          7: istore        4\n          9: aload_0\n-        10: getfield      #12                 // Field hasHitEOF:Z\n+        10: getfield      #37                 // Field hasHitEOF:Z\n         13: ifne          35\n         16: aload_0\n-        17: getfield      #118                // Field isClosed:Z\n+        17: getfield      #362                // Field isClosed:Z\n         20: ifne          35\n         23: aload_0\n-        24: getfield      #72                 // Field entryOffset:J\n+        24: getfield      #228                // Field entryOffset:J\n         27: aload_0\n-        28: getfield      #73                 // Field entrySize:J\n+        28: getfield      #231                // Field entrySize:J\n         31: lcmp\n         32: iflt          37\n         35: iconst_m1\n         36: ireturn\n         37: aload_0\n-        38: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-        41: ifnonnull     54\n-        44: new           #119                // class java/lang/IllegalStateException\n+        38: getfield      #156                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+        41: ifnonnull     55\n+        44: new           #365                // class java/lang/IllegalStateException\n         47: dup\n-        48: ldc           #120                // String No current dump entry\n-        50: invokespecial #121                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-        53: athrow\n-        54: iload_3\n-        55: i2l\n-        56: aload_0\n-        57: getfield      #72                 // Field entryOffset:J\n-        60: ladd\n-        61: aload_0\n-        62: getfield      #73                 // Field entrySize:J\n-        65: lcmp\n-        66: ifle          80\n-        69: aload_0\n-        70: getfield      #73                 // Field entrySize:J\n-        73: aload_0\n-        74: getfield      #72                 // Field entryOffset:J\n-        77: lsub\n-        78: l2i\n-        79: istore_3\n-        80: iload_3\n-        81: ifle          302\n-        84: iload_3\n-        85: aload_0\n-        86: getfield      #4                  // Field readBuf:[B\n-        89: arraylength\n-        90: aload_0\n-        91: getfield      #75                 // Field recordOffset:I\n-        94: isub\n-        95: if_icmple     111\n-        98: aload_0\n-        99: getfield      #4                  // Field readBuf:[B\n-       102: arraylength\n-       103: aload_0\n-       104: getfield      #75                 // Field recordOffset:I\n-       107: isub\n-       108: goto          112\n-       111: iload_3\n-       112: istore        5\n-       114: aload_0\n-       115: getfield      #75                 // Field recordOffset:I\n-       118: iload         5\n-       120: iadd\n-       121: aload_0\n-       122: getfield      #4                  // Field readBuf:[B\n-       125: arraylength\n-       126: if_icmpgt     172\n-       129: aload_0\n-       130: getfield      #4                  // Field readBuf:[B\n-       133: aload_0\n-       134: getfield      #75                 // Field recordOffset:I\n-       137: aload_1\n-       138: iload_2\n-       139: iload         5\n-       141: invokestatic  #122                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-       144: iload         4\n-       146: iload         5\n-       148: iadd\n-       149: istore        4\n-       151: aload_0\n-       152: dup\n-       153: getfield      #75                 // Field recordOffset:I\n-       156: iload         5\n-       158: iadd\n-       159: putfield      #75                 // Field recordOffset:I\n-       162: iload_3\n-       163: iload         5\n-       165: isub\n-       166: istore_3\n-       167: iload_2\n-       168: iload         5\n-       170: iadd\n-       171: istore_2\n-       172: iload_3\n-       173: ifle          299\n-       176: aload_0\n-       177: getfield      #59                 // Field readIdx:I\n-       180: sipush        512\n-       183: if_icmplt     225\n-       186: aload_0\n-       187: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-       190: invokevirtual #16                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n-       193: astore        6\n-       195: aload         6\n-       197: invokestatic  #17                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n-       200: ifne          211\n-       203: new           #45                 // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n-       206: dup\n-       207: invokespecial #46                 // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n-       210: athrow\n-       211: aload_0\n-       212: aload         6\n-       214: invokestatic  #47                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-       217: putfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-       220: aload_0\n-       221: iconst_0\n-       222: putfield      #59                 // Field readIdx:I\n-       225: aload_0\n-       226: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-       229: aload_0\n-       230: dup\n-       231: getfield      #59                 // Field readIdx:I\n-       234: dup_x1\n-       235: iconst_1\n-       236: iadd\n-       237: putfield      #59                 // Field readIdx:I\n-       240: invokevirtual #65                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.isSparseRecord:(I)Z\n-       243: ifne          286\n-       246: aload_0\n-       247: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-       250: aload_0\n-       251: getfield      #4                  // Field readBuf:[B\n-       254: iconst_0\n-       255: aload_0\n-       256: getfield      #4                  // Field readBuf:[B\n-       259: arraylength\n-       260: invokevirtual #85                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.read:([BII)I\n-       263: istore        6\n-       265: iload         6\n-       267: aload_0\n-       268: getfield      #4                  // Field readBuf:[B\n-       271: arraylength\n-       272: if_icmpeq     283\n-       275: new           #57                 // class java/io/EOFException\n-       278: dup\n-       279: invokespecial #58                 // Method java/io/EOFException.\"<init>\":()V\n-       282: athrow\n-       283: goto          294\n-       286: aload_0\n-       287: getfield      #4                  // Field readBuf:[B\n-       290: iconst_0\n-       291: invokestatic  #123                // Method java/util/Arrays.fill:([BB)V\n-       294: aload_0\n-       295: iconst_0\n-       296: putfield      #75                 // Field recordOffset:I\n-       299: goto          80\n-       302: aload_0\n-       303: dup\n-       304: getfield      #72                 // Field entryOffset:J\n-       307: iload         4\n-       309: i2l\n-       310: ladd\n-       311: putfield      #72                 // Field entryOffset:J\n-       314: iload         4\n-       316: ireturn\n+        48: ldc_w         #367                // String No current dump entry\n+        51: invokespecial #369                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        54: athrow\n+        55: iload_3\n+        56: i2l\n+        57: aload_0\n+        58: getfield      #228                // Field entryOffset:J\n+        61: ladd\n+        62: aload_0\n+        63: getfield      #231                // Field entrySize:J\n+        66: lcmp\n+        67: ifle          81\n+        70: aload_0\n+        71: getfield      #231                // Field entrySize:J\n+        74: aload_0\n+        75: getfield      #228                // Field entryOffset:J\n+        78: lsub\n+        79: l2i\n+        80: istore_3\n+        81: iload_3\n+        82: ifle          303\n+        85: iload_3\n+        86: aload_0\n+        87: getfield      #14                 // Field readBuf:[B\n+        90: arraylength\n+        91: aload_0\n+        92: getfield      #237                // Field recordOffset:I\n+        95: isub\n+        96: if_icmple     112\n+        99: aload_0\n+       100: getfield      #14                 // Field readBuf:[B\n+       103: arraylength\n+       104: aload_0\n+       105: getfield      #237                // Field recordOffset:I\n+       108: isub\n+       109: goto          113\n+       112: iload_3\n+       113: istore        5\n+       115: aload_0\n+       116: getfield      #237                // Field recordOffset:I\n+       119: iload         5\n+       121: iadd\n+       122: aload_0\n+       123: getfield      #14                 // Field readBuf:[B\n+       126: arraylength\n+       127: if_icmpgt     173\n+       130: aload_0\n+       131: getfield      #14                 // Field readBuf:[B\n+       134: aload_0\n+       135: getfield      #237                // Field recordOffset:I\n+       138: aload_1\n+       139: iload_2\n+       140: iload         5\n+       142: invokestatic  #370                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       145: iload         4\n+       147: iload         5\n+       149: iadd\n+       150: istore        4\n+       152: aload_0\n+       153: dup\n+       154: getfield      #237                // Field recordOffset:I\n+       157: iload         5\n+       159: iadd\n+       160: putfield      #237                // Field recordOffset:I\n+       163: iload_3\n+       164: iload         5\n+       166: isub\n+       167: istore_3\n+       168: iload_2\n+       169: iload         5\n+       171: iadd\n+       172: istore_2\n+       173: iload_3\n+       174: ifle          300\n+       177: aload_0\n+       178: getfield      #184                // Field readIdx:I\n+       181: sipush        512\n+       184: if_icmplt     226\n+       187: aload_0\n+       188: getfield      #33                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+       191: invokevirtual #55                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n+       194: astore        6\n+       196: aload         6\n+       198: invokestatic  #59                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n+       201: ifne          212\n+       204: new           #147                // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n+       207: dup\n+       208: invokespecial #149                // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n+       211: athrow\n+       212: aload_0\n+       213: aload         6\n+       215: invokestatic  #150                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       218: putfield      #156                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       221: aload_0\n+       222: iconst_0\n+       223: putfield      #184                // Field readIdx:I\n+       226: aload_0\n+       227: getfield      #156                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       230: aload_0\n+       231: dup\n+       232: getfield      #184                // Field readIdx:I\n+       235: dup_x1\n+       236: iconst_1\n+       237: iadd\n+       238: putfield      #184                // Field readIdx:I\n+       241: invokevirtual #204                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.isSparseRecord:(I)Z\n+       244: ifne          287\n+       247: aload_0\n+       248: getfield      #33                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+       251: aload_0\n+       252: getfield      #14                 // Field readBuf:[B\n+       255: iconst_0\n+       256: aload_0\n+       257: getfield      #14                 // Field readBuf:[B\n+       260: arraylength\n+       261: invokevirtual #272                // Method org/apache/commons/compress/archivers/dump/TapeInputStream.read:([BII)I\n+       264: istore        6\n+       266: iload         6\n+       268: aload_0\n+       269: getfield      #14                 // Field readBuf:[B\n+       272: arraylength\n+       273: if_icmpeq     284\n+       276: new           #181                // class java/io/EOFException\n+       279: dup\n+       280: invokespecial #183                // Method java/io/EOFException.\"<init>\":()V\n+       283: athrow\n+       284: goto          295\n+       287: aload_0\n+       288: getfield      #14                 // Field readBuf:[B\n+       291: iconst_0\n+       292: invokestatic  #376                // Method java/util/Arrays.fill:([BB)V\n+       295: aload_0\n+       296: iconst_0\n+       297: putfield      #237                // Field recordOffset:I\n+       300: goto          81\n+       303: aload_0\n+       304: dup\n+       305: getfield      #228                // Field entryOffset:J\n+       308: iload         4\n+       310: i2l\n+       311: ladd\n+       312: putfield      #228                // Field entryOffset:J\n+       315: iload         4\n+       317: ireturn\n       LineNumberTable:\n         line 468: 0\n         line 469: 4\n         line 471: 6\n         line 473: 9\n         line 474: 35\n         line 477: 37\n         line 478: 44\n-        line 481: 54\n-        line 482: 69\n-        line 485: 80\n-        line 486: 84\n-        line 487: 98\n-        line 490: 114\n-        line 491: 129\n-        line 492: 144\n-        line 493: 151\n-        line 494: 162\n-        line 495: 167\n-        line 499: 172\n-        line 500: 176\n-        line 501: 186\n-        line 503: 195\n-        line 504: 203\n-        line 507: 211\n-        line 508: 220\n-        line 511: 225\n-        line 512: 246\n-        line 513: 265\n-        line 514: 275\n-        line 516: 283\n-        line 517: 286\n-        line 520: 294\n-        line 522: 299\n-        line 524: 302\n-        line 526: 314\n+        line 481: 55\n+        line 482: 70\n+        line 485: 81\n+        line 486: 85\n+        line 487: 99\n+        line 490: 115\n+        line 491: 130\n+        line 492: 145\n+        line 493: 152\n+        line 494: 163\n+        line 495: 168\n+        line 499: 173\n+        line 500: 177\n+        line 501: 187\n+        line 503: 196\n+        line 504: 204\n+        line 507: 212\n+        line 508: 221\n+        line 511: 226\n+        line 512: 247\n+        line 513: 266\n+        line 514: 276\n+        line 516: 284\n+        line 517: 287\n+        line 520: 295\n+        line 522: 300\n+        line 524: 303\n+        line 526: 315\n       StackMapTable: number_of_entries = 15\n         frame_type = 6 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 28\n           locals = [ int ]\n         frame_type = 1 /* same */\n-        frame_type = 16 /* same */\n+        frame_type = 17 /* same */\n         frame_type = 25 /* same */\n         frame_type = 30 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n         frame_type = 252 /* append */\n           offset_delta = 59\n           locals = [ int ]\n@@ -1791,22 +1791,22 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #118                // Field isClosed:Z\n+         1: getfield      #362                // Field isClosed:Z\n          4: ifne          19\n          7: aload_0\n          8: iconst_1\n-         9: putfield      #118                // Field isClosed:Z\n+         9: putfield      #362                // Field isClosed:Z\n         12: aload_0\n-        13: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-        16: invokevirtual #124                // Method org/apache/commons/compress/archivers/dump/TapeInputStream.close:()V\n+        13: getfield      #33                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+        16: invokevirtual #382                // Method org/apache/commons/compress/archivers/dump/TapeInputStream.close:()V\n         19: return\n       LineNumberTable:\n         line 534: 0\n         line 535: 7\n         line 536: 12\n         line 538: 19\n       StackMapTable: number_of_entries = 1\n@@ -1824,49 +1824,49 @@\n          3: if_icmpge     8\n          6: iconst_0\n          7: ireturn\n          8: iload_1\n          9: sipush        1024\n         12: if_icmplt     20\n         15: aload_0\n-        16: invokestatic  #17                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n+        16: invokestatic  #59                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n         19: ireturn\n-        20: ldc           #125                // int 60012\n-        22: aload_0\n-        23: bipush        24\n-        25: invokestatic  #88                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32:([BI)I\n-        28: if_icmpne     35\n-        31: iconst_1\n-        32: goto          36\n-        35: iconst_0\n-        36: ireturn\n+        20: ldc_w         #385                // int 60012\n+        23: aload_0\n+        24: bipush        24\n+        26: invokestatic  #278                // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32:([BI)I\n+        29: if_icmpne     36\n+        32: iconst_1\n+        33: goto          37\n+        36: iconst_0\n+        37: ireturn\n       LineNumberTable:\n         line 550: 0\n         line 551: 6\n         line 555: 8\n         line 556: 15\n         line 560: 20\n       StackMapTable: number_of_entries = 4\n         frame_type = 8 /* same */\n         frame_type = 11 /* same */\n-        frame_type = 14 /* same */\n+        frame_type = 15 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n \n   public org.apache.commons.compress.archivers.ArchiveEntry getNextEntry() throws java.io.IOException;\n     descriptor: ()Lorg/apache/commons/compress/archivers/ArchiveEntry;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #61                 // Method getNextEntry:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+         1: invokevirtual #191                // Method getNextEntry:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n          4: areturn\n       LineNumberTable:\n         line 51: 0\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"DumpArchiveInputStream.java\"\n InnerClasses:\n-  #39;                                    // class org/apache/commons/compress/archivers/dump/DumpArchiveInputStream$1\n-  public static #291= #97 of #235;        // Entry=class java/util/Map$Entry of class java/util/Map\n-  public static final #349= #246 of #3;   // SEGMENT_TYPE=class org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE of class org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n+  #130;                                   // class org/apache/commons/compress/archivers/dump/DumpArchiveInputStream$1\n+  public static final #410= #161 of #12;  // SEGMENT_TYPE=class org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE of class org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n+  public static #411= #314 of #123;       // Entry=class java/util/Map$Entry of class java/util/Map\n"}]}
