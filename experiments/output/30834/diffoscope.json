{"diffoscope-json-version": 1, "source1": "first/EmptyFileFilter.class", "source2": "second/EmptyFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,141 +1,141 @@\n-  SHA-256 checksum a43e18e6930c007fb3dbcd86b483e5fed55eabdfeb5d7075b1a0073ee47aed39\n+  SHA-256 checksum 02870b4d5f4ee9b45a750e6678c606bcf82b0c78fce9f3c99a17573c5e9cb78b\n   Compiled from \"EmptyFileFilter.java\"\n public class org.apache.commons.io.filefilter.EmptyFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #18                         // org/apache/commons/io/filefilter/EmptyFileFilter\n-  super_class: #23                        // org/apache/commons/io/filefilter/AbstractFileFilter\n+  this_class: #49                         // org/apache/commons/io/filefilter/EmptyFileFilter\n+  super_class: #2                         // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 1, fields: 3, methods: 4, attributes: 1\n Constant pool:\n-    #1 = Methodref          #23.#65       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-    #2 = Methodref          #66.#67       // java/io/File.isDirectory:()Z\n-    #3 = Methodref          #66.#68       // java/io/File.listFiles:()[Ljava/io/File;\n-    #4 = Methodref          #69.#70       // org/apache/commons/io/IOUtils.length:([Ljava/lang/Object;)I\n-    #5 = Methodref          #66.#71       // java/io/File.length:()J\n-    #6 = Class              #72           // java/nio/file/LinkOption\n-    #7 = Methodref          #73.#74       // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-    #8 = Methodref          #73.#75       // java/nio/file/Files.list:(Ljava/nio/file/Path;)Ljava/util/stream/Stream;\n-    #9 = InterfaceMethodref #58.#76       // java/util/stream/Stream.findFirst:()Ljava/util/Optional;\n-   #10 = Methodref          #77.#78       // java/util/Optional.isPresent:()Z\n-   #11 = Methodref          #18.#79       // org/apache/commons/io/filefilter/EmptyFileFilter.toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-   #12 = InterfaceMethodref #58.#80       // java/util/stream/Stream.close:()V\n-   #13 = Class              #81           // java/lang/Throwable\n-   #14 = Methodref          #13.#82       // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-   #15 = Methodref          #73.#83       // java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n-   #16 = Class              #84           // java/io/IOException\n-   #17 = Methodref          #18.#85       // org/apache/commons/io/filefilter/EmptyFileFilter.handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-   #18 = Class              #86           // org/apache/commons/io/filefilter/EmptyFileFilter\n-   #19 = Methodref          #18.#65       // org/apache/commons/io/filefilter/EmptyFileFilter.\"<init>\":()V\n-   #20 = Fieldref           #18.#87       // org/apache/commons/io/filefilter/EmptyFileFilter.EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #21 = InterfaceMethodref #88.#89       // org/apache/commons/io/filefilter/IOFileFilter.negate:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #22 = Fieldref           #18.#90       // org/apache/commons/io/filefilter/EmptyFileFilter.NOT_EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #23 = Class              #91           // org/apache/commons/io/filefilter/AbstractFileFilter\n-   #24 = Class              #92           // java/io/Serializable\n-   #25 = Utf8               EMPTY\n-   #26 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #27 = Utf8               NOT_EMPTY\n-   #28 = Utf8               serialVersionUID\n-   #29 = Utf8               J\n-   #30 = Utf8               ConstantValue\n-   #31 = Long               3631422087512832211l\n-   #33 = Utf8               <init>\n-   #34 = Utf8               ()V\n-   #35 = Utf8               Code\n-   #36 = Utf8               LineNumberTable\n-   #37 = Utf8               LocalVariableTable\n-   #38 = Utf8               this\n-   #39 = Utf8               Lorg/apache/commons/io/filefilter/EmptyFileFilter;\n-   #40 = Utf8               accept\n-   #41 = Utf8               (Ljava/io/File;)Z\n-   #42 = Utf8               files\n-   #43 = Utf8               [Ljava/io/File;\n-   #44 = Utf8               file\n-   #45 = Utf8               Ljava/io/File;\n-   #46 = Utf8               StackMapTable\n-   #47 = Class              #43           // \"[Ljava/io/File;\"\n-   #48 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #49 = Utf8               stream\n-   #50 = Utf8               Ljava/util/stream/Stream;\n-   #51 = Utf8               e\n-   #52 = Utf8               Ljava/io/IOException;\n-   #53 = Utf8               Ljava/nio/file/Path;\n-   #54 = Utf8               attributes\n-   #55 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n-   #56 = Utf8               LocalVariableTypeTable\n-   #57 = Utf8               Ljava/util/stream/Stream<Ljava/nio/file/Path;>;\n-   #58 = Class              #93           // java/util/stream/Stream\n-   #59 = Class              #94           // java/nio/file/FileVisitResult\n-   #60 = Class              #95           // java/nio/file/Path\n-   #61 = Class              #96           // java/nio/file/attribute/BasicFileAttributes\n-   #62 = Utf8               <clinit>\n-   #63 = Utf8               SourceFile\n-   #64 = Utf8               EmptyFileFilter.java\n-   #65 = NameAndType        #33:#34       // \"<init>\":()V\n-   #66 = Class              #97           // java/io/File\n-   #67 = NameAndType        #98:#99       // isDirectory:()Z\n-   #68 = NameAndType        #100:#101     // listFiles:()[Ljava/io/File;\n-   #69 = Class              #102          // org/apache/commons/io/IOUtils\n-   #70 = NameAndType        #103:#104     // length:([Ljava/lang/Object;)I\n-   #71 = NameAndType        #103:#105     // length:()J\n-   #72 = Utf8               java/nio/file/LinkOption\n-   #73 = Class              #106          // java/nio/file/Files\n-   #74 = NameAndType        #98:#107      // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #75 = NameAndType        #108:#109     // list:(Ljava/nio/file/Path;)Ljava/util/stream/Stream;\n-   #76 = NameAndType        #110:#111     // findFirst:()Ljava/util/Optional;\n-   #77 = Class              #112          // java/util/Optional\n-   #78 = NameAndType        #113:#99      // isPresent:()Z\n-   #79 = NameAndType        #114:#115     // toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-   #80 = NameAndType        #116:#34      // close:()V\n-   #81 = Utf8               java/lang/Throwable\n-   #82 = NameAndType        #117:#118     // addSuppressed:(Ljava/lang/Throwable;)V\n-   #83 = NameAndType        #119:#120     // size:(Ljava/nio/file/Path;)J\n-   #84 = Utf8               java/io/IOException\n-   #85 = NameAndType        #121:#122     // handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-   #86 = Utf8               org/apache/commons/io/filefilter/EmptyFileFilter\n-   #87 = NameAndType        #25:#26       // EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #88 = Class              #123          // org/apache/commons/io/filefilter/IOFileFilter\n-   #89 = NameAndType        #124:#125     // negate:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #90 = NameAndType        #27:#26       // NOT_EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #91 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-   #92 = Utf8               java/io/Serializable\n-   #93 = Utf8               java/util/stream/Stream\n-   #94 = Utf8               java/nio/file/FileVisitResult\n-   #95 = Utf8               java/nio/file/Path\n-   #96 = Utf8               java/nio/file/attribute/BasicFileAttributes\n-   #97 = Utf8               java/io/File\n-   #98 = Utf8               isDirectory\n-   #99 = Utf8               ()Z\n-  #100 = Utf8               listFiles\n-  #101 = Utf8               ()[Ljava/io/File;\n-  #102 = Utf8               org/apache/commons/io/IOUtils\n-  #103 = Utf8               length\n-  #104 = Utf8               ([Ljava/lang/Object;)I\n-  #105 = Utf8               ()J\n-  #106 = Utf8               java/nio/file/Files\n-  #107 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #108 = Utf8               list\n-  #109 = Utf8               (Ljava/nio/file/Path;)Ljava/util/stream/Stream;\n-  #110 = Utf8               findFirst\n-  #111 = Utf8               ()Ljava/util/Optional;\n-  #112 = Utf8               java/util/Optional\n-  #113 = Utf8               isPresent\n-  #114 = Utf8               toFileVisitResult\n-  #115 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-  #116 = Utf8               close\n-  #117 = Utf8               addSuppressed\n-  #118 = Utf8               (Ljava/lang/Throwable;)V\n-  #119 = Utf8               size\n-  #120 = Utf8               (Ljava/nio/file/Path;)J\n-  #121 = Utf8               handle\n-  #122 = Utf8               (Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-  #123 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n-  #124 = Utf8               negate\n-  #125 = Utf8               ()Lorg/apache/commons/io/filefilter/IOFileFilter;\n+    #1 = Methodref          #2.#3         // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+    #2 = Class              #4            // org/apache/commons/io/filefilter/AbstractFileFilter\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Methodref          #8.#9         // java/io/File.isDirectory:()Z\n+    #8 = Class              #10           // java/io/File\n+    #9 = NameAndType        #11:#12       // isDirectory:()Z\n+   #10 = Utf8               java/io/File\n+   #11 = Utf8               isDirectory\n+   #12 = Utf8               ()Z\n+   #13 = Methodref          #8.#14        // java/io/File.listFiles:()[Ljava/io/File;\n+   #14 = NameAndType        #15:#16       // listFiles:()[Ljava/io/File;\n+   #15 = Utf8               listFiles\n+   #16 = Utf8               ()[Ljava/io/File;\n+   #17 = Methodref          #18.#19       // org/apache/commons/io/IOUtils.length:([Ljava/lang/Object;)I\n+   #18 = Class              #20           // org/apache/commons/io/IOUtils\n+   #19 = NameAndType        #21:#22       // length:([Ljava/lang/Object;)I\n+   #20 = Utf8               org/apache/commons/io/IOUtils\n+   #21 = Utf8               length\n+   #22 = Utf8               ([Ljava/lang/Object;)I\n+   #23 = Methodref          #8.#24        // java/io/File.length:()J\n+   #24 = NameAndType        #21:#25       // length:()J\n+   #25 = Utf8               ()J\n+   #26 = Class              #27           // java/nio/file/LinkOption\n+   #27 = Utf8               java/nio/file/LinkOption\n+   #28 = Methodref          #29.#30       // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #29 = Class              #31           // java/nio/file/Files\n+   #30 = NameAndType        #11:#32       // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #31 = Utf8               java/nio/file/Files\n+   #32 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #33 = Methodref          #29.#34       // java/nio/file/Files.list:(Ljava/nio/file/Path;)Ljava/util/stream/Stream;\n+   #34 = NameAndType        #35:#36       // list:(Ljava/nio/file/Path;)Ljava/util/stream/Stream;\n+   #35 = Utf8               list\n+   #36 = Utf8               (Ljava/nio/file/Path;)Ljava/util/stream/Stream;\n+   #37 = InterfaceMethodref #38.#39       // java/util/stream/Stream.findFirst:()Ljava/util/Optional;\n+   #38 = Class              #40           // java/util/stream/Stream\n+   #39 = NameAndType        #41:#42       // findFirst:()Ljava/util/Optional;\n+   #40 = Utf8               java/util/stream/Stream\n+   #41 = Utf8               findFirst\n+   #42 = Utf8               ()Ljava/util/Optional;\n+   #43 = Methodref          #44.#45       // java/util/Optional.isPresent:()Z\n+   #44 = Class              #46           // java/util/Optional\n+   #45 = NameAndType        #47:#12       // isPresent:()Z\n+   #46 = Utf8               java/util/Optional\n+   #47 = Utf8               isPresent\n+   #48 = Methodref          #49.#50       // org/apache/commons/io/filefilter/EmptyFileFilter.toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+   #49 = Class              #51           // org/apache/commons/io/filefilter/EmptyFileFilter\n+   #50 = NameAndType        #52:#53       // toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+   #51 = Utf8               org/apache/commons/io/filefilter/EmptyFileFilter\n+   #52 = Utf8               toFileVisitResult\n+   #53 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+   #54 = InterfaceMethodref #38.#55       // java/util/stream/Stream.close:()V\n+   #55 = NameAndType        #56:#6        // close:()V\n+   #56 = Utf8               close\n+   #57 = Class              #58           // java/lang/Throwable\n+   #58 = Utf8               java/lang/Throwable\n+   #59 = Methodref          #57.#60       // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+   #60 = NameAndType        #61:#62       // addSuppressed:(Ljava/lang/Throwable;)V\n+   #61 = Utf8               addSuppressed\n+   #62 = Utf8               (Ljava/lang/Throwable;)V\n+   #63 = Methodref          #29.#64       // java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+   #64 = NameAndType        #65:#66       // size:(Ljava/nio/file/Path;)J\n+   #65 = Utf8               size\n+   #66 = Utf8               (Ljava/nio/file/Path;)J\n+   #67 = Class              #68           // java/io/IOException\n+   #68 = Utf8               java/io/IOException\n+   #69 = Methodref          #49.#70       // org/apache/commons/io/filefilter/EmptyFileFilter.handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+   #70 = NameAndType        #71:#72       // handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+   #71 = Utf8               handle\n+   #72 = Utf8               (Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+   #73 = Methodref          #49.#3        // org/apache/commons/io/filefilter/EmptyFileFilter.\"<init>\":()V\n+   #74 = Fieldref           #49.#75       // org/apache/commons/io/filefilter/EmptyFileFilter.EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #75 = NameAndType        #76:#77       // EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #76 = Utf8               EMPTY\n+   #77 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #78 = InterfaceMethodref #79.#80       // org/apache/commons/io/filefilter/IOFileFilter.negate:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #79 = Class              #81           // org/apache/commons/io/filefilter/IOFileFilter\n+   #80 = NameAndType        #82:#83       // negate:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #81 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n+   #82 = Utf8               negate\n+   #83 = Utf8               ()Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #84 = Fieldref           #49.#85       // org/apache/commons/io/filefilter/EmptyFileFilter.NOT_EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #85 = NameAndType        #86:#77       // NOT_EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #86 = Utf8               NOT_EMPTY\n+   #87 = Class              #88           // java/io/Serializable\n+   #88 = Utf8               java/io/Serializable\n+   #89 = Utf8               serialVersionUID\n+   #90 = Utf8               J\n+   #91 = Utf8               ConstantValue\n+   #92 = Long               3631422087512832211l\n+   #94 = Utf8               Code\n+   #95 = Utf8               LineNumberTable\n+   #96 = Utf8               LocalVariableTable\n+   #97 = Utf8               this\n+   #98 = Utf8               Lorg/apache/commons/io/filefilter/EmptyFileFilter;\n+   #99 = Utf8               accept\n+  #100 = Utf8               (Ljava/io/File;)Z\n+  #101 = Utf8               files\n+  #102 = Utf8               [Ljava/io/File;\n+  #103 = Utf8               file\n+  #104 = Utf8               Ljava/io/File;\n+  #105 = Utf8               StackMapTable\n+  #106 = Class              #102          // \"[Ljava/io/File;\"\n+  #107 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #108 = Utf8               stream\n+  #109 = Utf8               Ljava/util/stream/Stream;\n+  #110 = Utf8               e\n+  #111 = Utf8               Ljava/io/IOException;\n+  #112 = Utf8               Ljava/nio/file/Path;\n+  #113 = Utf8               attributes\n+  #114 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n+  #115 = Utf8               LocalVariableTypeTable\n+  #116 = Utf8               Ljava/util/stream/Stream<Ljava/nio/file/Path;>;\n+  #117 = Class              #118          // java/nio/file/FileVisitResult\n+  #118 = Utf8               java/nio/file/FileVisitResult\n+  #119 = Class              #120          // java/nio/file/Path\n+  #120 = Utf8               java/nio/file/Path\n+  #121 = Class              #122          // java/nio/file/attribute/BasicFileAttributes\n+  #122 = Utf8               java/nio/file/attribute/BasicFileAttributes\n+  #123 = Utf8               <clinit>\n+  #124 = Utf8               SourceFile\n+  #125 = Utf8               EmptyFileFilter.java\n {\n   public static final org.apache.commons.io.filefilter.IOFileFilter EMPTY;\n     descriptor: Lorg/apache/commons/io/filefilter/IOFileFilter;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public static final org.apache.commons.io.filefilter.IOFileFilter NOT_EMPTY;\n     descriptor: Lorg/apache/commons/io/filefilter/IOFileFilter;\n@@ -163,28 +163,28 @@\n \n   public boolean accept(java.io.File);\n     descriptor: (Ljava/io/File;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_1\n-         1: invokevirtual #2                  // Method java/io/File.isDirectory:()Z\n+         1: invokevirtual #7                  // Method java/io/File.isDirectory:()Z\n          4: ifeq          25\n          7: aload_1\n-         8: invokevirtual #3                  // Method java/io/File.listFiles:()[Ljava/io/File;\n+         8: invokevirtual #13                 // Method java/io/File.listFiles:()[Ljava/io/File;\n         11: astore_2\n         12: aload_2\n-        13: invokestatic  #4                  // Method org/apache/commons/io/IOUtils.length:([Ljava/lang/Object;)I\n+        13: invokestatic  #17                 // Method org/apache/commons/io/IOUtils.length:([Ljava/lang/Object;)I\n         16: ifne          23\n         19: iconst_1\n         20: goto          24\n         23: iconst_0\n         24: ireturn\n         25: aload_1\n-        26: invokevirtual #5                  // Method java/io/File.length:()J\n+        26: invokevirtual #23                 // Method java/io/File.length:()J\n         29: lconst_0\n         30: lcmp\n         31: ifne          38\n         34: iconst_1\n         35: goto          39\n         38: iconst_0\n         39: ireturn\n@@ -213,63 +213,63 @@\n   public java.nio.file.FileVisitResult accept(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes);\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=6, args_size=3\n          0: aload_1\n          1: iconst_0\n-         2: anewarray     #6                  // class java/nio/file/LinkOption\n-         5: invokestatic  #7                  // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+         2: anewarray     #26                 // class java/nio/file/LinkOption\n+         5: invokestatic  #28                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n          8: ifeq          79\n         11: aload_1\n-        12: invokestatic  #8                  // Method java/nio/file/Files.list:(Ljava/nio/file/Path;)Ljava/util/stream/Stream;\n+        12: invokestatic  #33                 // Method java/nio/file/Files.list:(Ljava/nio/file/Path;)Ljava/util/stream/Stream;\n         15: astore_3\n         16: aload_3\n-        17: invokeinterface #9,  1            // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;\n-        22: invokevirtual #10                 // Method java/util/Optional.isPresent:()Z\n+        17: invokeinterface #37,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;\n+        22: invokevirtual #43                 // Method java/util/Optional.isPresent:()Z\n         25: ifne          32\n         28: iconst_1\n         29: goto          33\n         32: iconst_0\n         33: aload_1\n-        34: invokestatic  #11                 // Method toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+        34: invokestatic  #48                 // Method toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n         37: astore        4\n         39: aload_3\n         40: ifnull        49\n         43: aload_3\n-        44: invokeinterface #12,  1           // InterfaceMethod java/util/stream/Stream.close:()V\n+        44: invokeinterface #54,  1           // InterfaceMethod java/util/stream/Stream.close:()V\n         49: aload         4\n         51: areturn\n         52: astore        4\n         54: aload_3\n         55: ifnull        76\n         58: aload_3\n-        59: invokeinterface #12,  1           // InterfaceMethod java/util/stream/Stream.close:()V\n+        59: invokeinterface #54,  1           // InterfaceMethod java/util/stream/Stream.close:()V\n         64: goto          76\n         67: astore        5\n         69: aload         4\n         71: aload         5\n-        73: invokevirtual #14                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        73: invokevirtual #59                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n         76: aload         4\n         78: athrow\n         79: aload_1\n-        80: invokestatic  #15                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+        80: invokestatic  #63                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n         83: lconst_0\n         84: lcmp\n         85: ifne          92\n         88: iconst_1\n         89: goto          93\n         92: iconst_0\n         93: aload_1\n-        94: invokestatic  #11                 // Method toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+        94: invokestatic  #48                 // Method toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n         97: areturn\n         98: astore_3\n         99: aload_0\n        100: aload_3\n-       101: invokevirtual #17                 // Method handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+       101: invokevirtual #69                 // Method handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n        104: areturn\n       Exception table:\n          from    to  target type\n             16    39    52   Class java/lang/Throwable\n             58    64    67   Class java/lang/Throwable\n              0    49    98   Class java/io/IOException\n             52    97    98   Class java/io/IOException\n@@ -320,20 +320,20 @@\n           stack = [ class java/io/IOException ]\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: new           #18                 // class org/apache/commons/io/filefilter/EmptyFileFilter\n+         0: new           #49                 // class org/apache/commons/io/filefilter/EmptyFileFilter\n          3: dup\n-         4: invokespecial #19                 // Method \"<init>\":()V\n-         7: putstatic     #20                 // Field EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-        10: getstatic     #20                 // Field EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-        13: invokeinterface #21,  1           // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.negate:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n-        18: putstatic     #22                 // Field NOT_EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+         4: invokespecial #73                 // Method \"<init>\":()V\n+         7: putstatic     #74                 // Field EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        10: getstatic     #74                 // Field EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        13: invokeinterface #78,  1           // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.negate:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        18: putstatic     #84                 // Field NOT_EMPTY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n         21: return\n       LineNumberTable:\n         line 83: 0\n         line 86: 10\n }\n SourceFile: \"EmptyFileFilter.java\"\n"}]}
