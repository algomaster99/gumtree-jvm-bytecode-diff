{"diffoscope-json-version": 1, "source1": "first/FileAlterationMonitor.class", "source2": "second/FileAlterationMonitor.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,209 +1,209 @@\n-  SHA-256 checksum 571af7d694020f15d117e12ca7b5185da62fc7006aeb58152be5e0dd824bad39\n+  SHA-256 checksum 7914fb20a3797328566b2336d555ae7cf30fb600db5501dc834ad6889dd99ab0\n   Compiled from \"FileAlterationMonitor.java\"\n public final class org.apache.commons.io.monitor.FileAlterationMonitor implements java.lang.Runnable\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #44                         // org/apache/commons/io/monitor/FileAlterationMonitor\n-  super_class: #45                        // java/lang/Object\n+  this_class: #4                          // org/apache/commons/io/monitor/FileAlterationMonitor\n+  super_class: #10                        // java/lang/Object\n   interfaces: 1, fields: 6, methods: 14, attributes: 1\n Constant pool:\n     #1 = Long               10000l\n-    #3 = Methodref          #44.#100      // org/apache/commons/io/monitor/FileAlterationMonitor.\"<init>\":(J)V\n-    #4 = Methodref          #45.#101      // java/lang/Object.\"<init>\":()V\n-    #5 = Class              #102          // java/util/concurrent/CopyOnWriteArrayList\n-    #6 = Methodref          #5.#101       // java/util/concurrent/CopyOnWriteArrayList.\"<init>\":()V\n-    #7 = Fieldref           #44.#103      // org/apache/commons/io/monitor/FileAlterationMonitor.observers:Ljava/util/List;\n-    #8 = Fieldref           #44.#104      // org/apache/commons/io/monitor/FileAlterationMonitor.interval:J\n-    #9 = Methodref          #105.#106     // java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;\n-   #10 = Methodref          #107.#108     // java/util/Collections.emptyList:()Ljava/util/List;\n-   #11 = Methodref          #105.#109     // java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #12 = Class              #110          // java/util/Collection\n-   #13 = Fieldref           #44.#111      // org/apache/commons/io/monitor/FileAlterationMonitor.EMPTY_ARRAY:[Lorg/apache/commons/io/monitor/FileAlterationObserver;\n-   #14 = InterfaceMethodref #12.#112      // java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-   #15 = Class              #48           // \"[Lorg/apache/commons/io/monitor/FileAlterationObserver;\"\n-   #16 = Methodref          #44.#113      // org/apache/commons/io/monitor/FileAlterationMonitor.\"<init>\":(J[Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n-   #17 = Methodref          #44.#114      // org/apache/commons/io/monitor/FileAlterationMonitor.addObserver:(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n-   #18 = Fieldref           #44.#115      // org/apache/commons/io/monitor/FileAlterationMonitor.threadFactory:Ljava/util/concurrent/ThreadFactory;\n-   #19 = InterfaceMethodref #116.#117     // java/util/List.add:(Ljava/lang/Object;)Z\n-   #20 = InterfaceMethodref #116.#118     // java/util/List.remove:(Ljava/lang/Object;)Z\n-   #21 = Fieldref           #44.#119      // org/apache/commons/io/monitor/FileAlterationMonitor.running:Z\n-   #22 = Class              #120          // java/lang/IllegalStateException\n-   #23 = String             #121          // Monitor is already running\n-   #24 = Methodref          #22.#122      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #25 = InterfaceMethodref #116.#123     // java/util/List.iterator:()Ljava/util/Iterator;\n-   #26 = InterfaceMethodref #89.#124      // java/util/Iterator.hasNext:()Z\n-   #27 = InterfaceMethodref #89.#125      // java/util/Iterator.next:()Ljava/lang/Object;\n-   #28 = Class              #126          // org/apache/commons/io/monitor/FileAlterationObserver\n-   #29 = Methodref          #28.#127      // org/apache/commons/io/monitor/FileAlterationObserver.initialize:()V\n-   #30 = InterfaceMethodref #128.#129     // java/util/concurrent/ThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;\n-   #31 = Fieldref           #44.#130      // org/apache/commons/io/monitor/FileAlterationMonitor.thread:Ljava/lang/Thread;\n-   #32 = Class              #131          // java/lang/Thread\n-   #33 = Methodref          #32.#132      // java/lang/Thread.\"<init>\":(Ljava/lang/Runnable;)V\n-   #34 = Methodref          #32.#133      // java/lang/Thread.start:()V\n-   #35 = Methodref          #44.#134      // org/apache/commons/io/monitor/FileAlterationMonitor.stop:(J)V\n-   #36 = String             #135          // Monitor is not running\n-   #37 = Methodref          #32.#136      // java/lang/Thread.interrupt:()V\n-   #38 = Methodref          #32.#137      // java/lang/Thread.join:(J)V\n-   #39 = Class              #138          // java/lang/InterruptedException\n-   #40 = Methodref          #32.#139      // java/lang/Thread.currentThread:()Ljava/lang/Thread;\n-   #41 = Methodref          #28.#140      // org/apache/commons/io/monitor/FileAlterationObserver.destroy:()V\n-   #42 = Methodref          #28.#141      // org/apache/commons/io/monitor/FileAlterationObserver.checkAndNotify:()V\n-   #43 = Methodref          #32.#142      // java/lang/Thread.sleep:(J)V\n-   #44 = Class              #143          // org/apache/commons/io/monitor/FileAlterationMonitor\n-   #45 = Class              #144          // java/lang/Object\n-   #46 = Class              #145          // java/lang/Runnable\n-   #47 = Utf8               EMPTY_ARRAY\n-   #48 = Utf8               [Lorg/apache/commons/io/monitor/FileAlterationObserver;\n-   #49 = Utf8               interval\n-   #50 = Utf8               J\n-   #51 = Utf8               observers\n-   #52 = Utf8               Ljava/util/List;\n-   #53 = Utf8               Signature\n-   #54 = Utf8               Ljava/util/List<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;\n-   #55 = Utf8               thread\n-   #56 = Utf8               Ljava/lang/Thread;\n-   #57 = Utf8               threadFactory\n-   #58 = Utf8               Ljava/util/concurrent/ThreadFactory;\n-   #59 = Utf8               running\n-   #60 = Utf8               Z\n-   #61 = Utf8               <init>\n-   #62 = Utf8               ()V\n-   #63 = Utf8               Code\n-   #64 = Utf8               LineNumberTable\n-   #65 = Utf8               LocalVariableTable\n-   #66 = Utf8               this\n-   #67 = Utf8               Lorg/apache/commons/io/monitor/FileAlterationMonitor;\n-   #68 = Utf8               (J)V\n-   #69 = Utf8               (JLjava/util/Collection;)V\n-   #70 = Utf8               Ljava/util/Collection;\n-   #71 = Utf8               LocalVariableTypeTable\n-   #72 = Utf8               Ljava/util/Collection<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;\n-   #73 = Utf8               (JLjava/util/Collection<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;)V\n-   #74 = Utf8               (J[Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n-   #75 = Utf8               observer\n-   #76 = Utf8               Lorg/apache/commons/io/monitor/FileAlterationObserver;\n-   #77 = Utf8               StackMapTable\n-   #78 = Utf8               getInterval\n-   #79 = Utf8               ()J\n-   #80 = Utf8               setThreadFactory\n-   #81 = Utf8               (Ljava/util/concurrent/ThreadFactory;)V\n-   #82 = Utf8               addObserver\n-   #83 = Utf8               (Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n-   #84 = Utf8               removeObserver\n-   #85 = Utf8               getObservers\n-   #86 = Utf8               ()Ljava/lang/Iterable;\n-   #87 = Utf8               ()Ljava/lang/Iterable<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;\n-   #88 = Utf8               start\n-   #89 = Class              #146          // java/util/Iterator\n-   #90 = Utf8               Exceptions\n-   #91 = Class              #147          // java/lang/Exception\n-   #92 = Utf8               stop\n-   #93 = Utf8               e\n-   #94 = Utf8               Ljava/lang/InterruptedException;\n-   #95 = Utf8               stopInterval\n-   #96 = Utf8               run\n-   #97 = Utf8               <clinit>\n-   #98 = Utf8               SourceFile\n-   #99 = Utf8               FileAlterationMonitor.java\n-  #100 = NameAndType        #61:#68       // \"<init>\":(J)V\n-  #101 = NameAndType        #61:#62       // \"<init>\":()V\n-  #102 = Utf8               java/util/concurrent/CopyOnWriteArrayList\n-  #103 = NameAndType        #51:#52       // observers:Ljava/util/List;\n-  #104 = NameAndType        #49:#50       // interval:J\n-  #105 = Class              #148          // java/util/Optional\n-  #106 = NameAndType        #149:#150     // ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;\n-  #107 = Class              #151          // java/util/Collections\n-  #108 = NameAndType        #152:#153     // emptyList:()Ljava/util/List;\n-  #109 = NameAndType        #154:#155     // orElse:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #110 = Utf8               java/util/Collection\n-  #111 = NameAndType        #47:#48       // EMPTY_ARRAY:[Lorg/apache/commons/io/monitor/FileAlterationObserver;\n-  #112 = NameAndType        #156:#157     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #113 = NameAndType        #61:#74       // \"<init>\":(J[Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n-  #114 = NameAndType        #82:#83       // addObserver:(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n-  #115 = NameAndType        #57:#58       // threadFactory:Ljava/util/concurrent/ThreadFactory;\n-  #116 = Class              #158          // java/util/List\n-  #117 = NameAndType        #159:#160     // add:(Ljava/lang/Object;)Z\n-  #118 = NameAndType        #161:#160     // remove:(Ljava/lang/Object;)Z\n-  #119 = NameAndType        #59:#60       // running:Z\n-  #120 = Utf8               java/lang/IllegalStateException\n-  #121 = Utf8               Monitor is already running\n-  #122 = NameAndType        #61:#162      // \"<init>\":(Ljava/lang/String;)V\n-  #123 = NameAndType        #163:#164     // iterator:()Ljava/util/Iterator;\n-  #124 = NameAndType        #165:#166     // hasNext:()Z\n-  #125 = NameAndType        #167:#168     // next:()Ljava/lang/Object;\n-  #126 = Utf8               org/apache/commons/io/monitor/FileAlterationObserver\n-  #127 = NameAndType        #169:#62      // initialize:()V\n-  #128 = Class              #170          // java/util/concurrent/ThreadFactory\n-  #129 = NameAndType        #171:#172     // newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;\n-  #130 = NameAndType        #55:#56       // thread:Ljava/lang/Thread;\n-  #131 = Utf8               java/lang/Thread\n-  #132 = NameAndType        #61:#173      // \"<init>\":(Ljava/lang/Runnable;)V\n-  #133 = NameAndType        #88:#62       // start:()V\n-  #134 = NameAndType        #92:#68       // stop:(J)V\n-  #135 = Utf8               Monitor is not running\n-  #136 = NameAndType        #174:#62      // interrupt:()V\n-  #137 = NameAndType        #175:#68      // join:(J)V\n-  #138 = Utf8               java/lang/InterruptedException\n-  #139 = NameAndType        #176:#177     // currentThread:()Ljava/lang/Thread;\n-  #140 = NameAndType        #178:#62      // destroy:()V\n-  #141 = NameAndType        #179:#62      // checkAndNotify:()V\n-  #142 = NameAndType        #180:#68      // sleep:(J)V\n-  #143 = Utf8               org/apache/commons/io/monitor/FileAlterationMonitor\n-  #144 = Utf8               java/lang/Object\n-  #145 = Utf8               java/lang/Runnable\n-  #146 = Utf8               java/util/Iterator\n-  #147 = Utf8               java/lang/Exception\n-  #148 = Utf8               java/util/Optional\n-  #149 = Utf8               ofNullable\n-  #150 = Utf8               (Ljava/lang/Object;)Ljava/util/Optional;\n-  #151 = Utf8               java/util/Collections\n-  #152 = Utf8               emptyList\n-  #153 = Utf8               ()Ljava/util/List;\n-  #154 = Utf8               orElse\n-  #155 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #156 = Utf8               toArray\n-  #157 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #158 = Utf8               java/util/List\n-  #159 = Utf8               add\n-  #160 = Utf8               (Ljava/lang/Object;)Z\n-  #161 = Utf8               remove\n-  #162 = Utf8               (Ljava/lang/String;)V\n-  #163 = Utf8               iterator\n-  #164 = Utf8               ()Ljava/util/Iterator;\n-  #165 = Utf8               hasNext\n-  #166 = Utf8               ()Z\n-  #167 = Utf8               next\n-  #168 = Utf8               ()Ljava/lang/Object;\n-  #169 = Utf8               initialize\n-  #170 = Utf8               java/util/concurrent/ThreadFactory\n-  #171 = Utf8               newThread\n-  #172 = Utf8               (Ljava/lang/Runnable;)Ljava/lang/Thread;\n-  #173 = Utf8               (Ljava/lang/Runnable;)V\n-  #174 = Utf8               interrupt\n-  #175 = Utf8               join\n-  #176 = Utf8               currentThread\n-  #177 = Utf8               ()Ljava/lang/Thread;\n-  #178 = Utf8               destroy\n-  #179 = Utf8               checkAndNotify\n-  #180 = Utf8               sleep\n+    #3 = Methodref          #4.#5         // org/apache/commons/io/monitor/FileAlterationMonitor.\"<init>\":(J)V\n+    #4 = Class              #6            // org/apache/commons/io/monitor/FileAlterationMonitor\n+    #5 = NameAndType        #7:#8         // \"<init>\":(J)V\n+    #6 = Utf8               org/apache/commons/io/monitor/FileAlterationMonitor\n+    #7 = Utf8               <init>\n+    #8 = Utf8               (J)V\n+    #9 = Methodref          #10.#11       // java/lang/Object.\"<init>\":()V\n+   #10 = Class              #12           // java/lang/Object\n+   #11 = NameAndType        #7:#13        // \"<init>\":()V\n+   #12 = Utf8               java/lang/Object\n+   #13 = Utf8               ()V\n+   #14 = Class              #15           // java/util/concurrent/CopyOnWriteArrayList\n+   #15 = Utf8               java/util/concurrent/CopyOnWriteArrayList\n+   #16 = Methodref          #14.#11       // java/util/concurrent/CopyOnWriteArrayList.\"<init>\":()V\n+   #17 = Fieldref           #4.#18        // org/apache/commons/io/monitor/FileAlterationMonitor.observers:Ljava/util/List;\n+   #18 = NameAndType        #19:#20       // observers:Ljava/util/List;\n+   #19 = Utf8               observers\n+   #20 = Utf8               Ljava/util/List;\n+   #21 = Fieldref           #4.#22        // org/apache/commons/io/monitor/FileAlterationMonitor.interval:J\n+   #22 = NameAndType        #23:#24       // interval:J\n+   #23 = Utf8               interval\n+   #24 = Utf8               J\n+   #25 = Methodref          #26.#27       // java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;\n+   #26 = Class              #28           // java/util/Optional\n+   #27 = NameAndType        #29:#30       // ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;\n+   #28 = Utf8               java/util/Optional\n+   #29 = Utf8               ofNullable\n+   #30 = Utf8               (Ljava/lang/Object;)Ljava/util/Optional;\n+   #31 = Methodref          #32.#33       // java/util/Collections.emptyList:()Ljava/util/List;\n+   #32 = Class              #34           // java/util/Collections\n+   #33 = NameAndType        #35:#36       // emptyList:()Ljava/util/List;\n+   #34 = Utf8               java/util/Collections\n+   #35 = Utf8               emptyList\n+   #36 = Utf8               ()Ljava/util/List;\n+   #37 = Methodref          #26.#38       // java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #38 = NameAndType        #39:#40       // orElse:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #39 = Utf8               orElse\n+   #40 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #41 = Class              #42           // java/util/Collection\n+   #42 = Utf8               java/util/Collection\n+   #43 = Fieldref           #4.#44        // org/apache/commons/io/monitor/FileAlterationMonitor.EMPTY_ARRAY:[Lorg/apache/commons/io/monitor/FileAlterationObserver;\n+   #44 = NameAndType        #45:#46       // EMPTY_ARRAY:[Lorg/apache/commons/io/monitor/FileAlterationObserver;\n+   #45 = Utf8               EMPTY_ARRAY\n+   #46 = Utf8               [Lorg/apache/commons/io/monitor/FileAlterationObserver;\n+   #47 = InterfaceMethodref #41.#48       // java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+   #48 = NameAndType        #49:#50       // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+   #49 = Utf8               toArray\n+   #50 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+   #51 = Class              #46           // \"[Lorg/apache/commons/io/monitor/FileAlterationObserver;\"\n+   #52 = Methodref          #4.#53        // org/apache/commons/io/monitor/FileAlterationMonitor.\"<init>\":(J[Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n+   #53 = NameAndType        #7:#54        // \"<init>\":(J[Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n+   #54 = Utf8               (J[Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n+   #55 = Methodref          #4.#56        // org/apache/commons/io/monitor/FileAlterationMonitor.addObserver:(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n+   #56 = NameAndType        #57:#58       // addObserver:(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n+   #57 = Utf8               addObserver\n+   #58 = Utf8               (Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n+   #59 = Fieldref           #4.#60        // org/apache/commons/io/monitor/FileAlterationMonitor.threadFactory:Ljava/util/concurrent/ThreadFactory;\n+   #60 = NameAndType        #61:#62       // threadFactory:Ljava/util/concurrent/ThreadFactory;\n+   #61 = Utf8               threadFactory\n+   #62 = Utf8               Ljava/util/concurrent/ThreadFactory;\n+   #63 = InterfaceMethodref #64.#65       // java/util/List.add:(Ljava/lang/Object;)Z\n+   #64 = Class              #66           // java/util/List\n+   #65 = NameAndType        #67:#68       // add:(Ljava/lang/Object;)Z\n+   #66 = Utf8               java/util/List\n+   #67 = Utf8               add\n+   #68 = Utf8               (Ljava/lang/Object;)Z\n+   #69 = InterfaceMethodref #64.#70       // java/util/List.remove:(Ljava/lang/Object;)Z\n+   #70 = NameAndType        #71:#68       // remove:(Ljava/lang/Object;)Z\n+   #71 = Utf8               remove\n+   #72 = Fieldref           #4.#73        // org/apache/commons/io/monitor/FileAlterationMonitor.running:Z\n+   #73 = NameAndType        #74:#75       // running:Z\n+   #74 = Utf8               running\n+   #75 = Utf8               Z\n+   #76 = Class              #77           // java/lang/IllegalStateException\n+   #77 = Utf8               java/lang/IllegalStateException\n+   #78 = String             #79           // Monitor is already running\n+   #79 = Utf8               Monitor is already running\n+   #80 = Methodref          #76.#81       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #81 = NameAndType        #7:#82        // \"<init>\":(Ljava/lang/String;)V\n+   #82 = Utf8               (Ljava/lang/String;)V\n+   #83 = InterfaceMethodref #64.#84       // java/util/List.iterator:()Ljava/util/Iterator;\n+   #84 = NameAndType        #85:#86       // iterator:()Ljava/util/Iterator;\n+   #85 = Utf8               iterator\n+   #86 = Utf8               ()Ljava/util/Iterator;\n+   #87 = InterfaceMethodref #88.#89       // java/util/Iterator.hasNext:()Z\n+   #88 = Class              #90           // java/util/Iterator\n+   #89 = NameAndType        #91:#92       // hasNext:()Z\n+   #90 = Utf8               java/util/Iterator\n+   #91 = Utf8               hasNext\n+   #92 = Utf8               ()Z\n+   #93 = InterfaceMethodref #88.#94       // java/util/Iterator.next:()Ljava/lang/Object;\n+   #94 = NameAndType        #95:#96       // next:()Ljava/lang/Object;\n+   #95 = Utf8               next\n+   #96 = Utf8               ()Ljava/lang/Object;\n+   #97 = Class              #98           // org/apache/commons/io/monitor/FileAlterationObserver\n+   #98 = Utf8               org/apache/commons/io/monitor/FileAlterationObserver\n+   #99 = Methodref          #97.#100      // org/apache/commons/io/monitor/FileAlterationObserver.initialize:()V\n+  #100 = NameAndType        #101:#13      // initialize:()V\n+  #101 = Utf8               initialize\n+  #102 = InterfaceMethodref #103.#104     // java/util/concurrent/ThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;\n+  #103 = Class              #105          // java/util/concurrent/ThreadFactory\n+  #104 = NameAndType        #106:#107     // newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;\n+  #105 = Utf8               java/util/concurrent/ThreadFactory\n+  #106 = Utf8               newThread\n+  #107 = Utf8               (Ljava/lang/Runnable;)Ljava/lang/Thread;\n+  #108 = Fieldref           #4.#109       // org/apache/commons/io/monitor/FileAlterationMonitor.thread:Ljava/lang/Thread;\n+  #109 = NameAndType        #110:#111     // thread:Ljava/lang/Thread;\n+  #110 = Utf8               thread\n+  #111 = Utf8               Ljava/lang/Thread;\n+  #112 = Class              #113          // java/lang/Thread\n+  #113 = Utf8               java/lang/Thread\n+  #114 = Methodref          #112.#115     // java/lang/Thread.\"<init>\":(Ljava/lang/Runnable;)V\n+  #115 = NameAndType        #7:#116       // \"<init>\":(Ljava/lang/Runnable;)V\n+  #116 = Utf8               (Ljava/lang/Runnable;)V\n+  #117 = Methodref          #112.#118     // java/lang/Thread.start:()V\n+  #118 = NameAndType        #119:#13      // start:()V\n+  #119 = Utf8               start\n+  #120 = Methodref          #4.#121       // org/apache/commons/io/monitor/FileAlterationMonitor.stop:(J)V\n+  #121 = NameAndType        #122:#8       // stop:(J)V\n+  #122 = Utf8               stop\n+  #123 = String             #124          // Monitor is not running\n+  #124 = Utf8               Monitor is not running\n+  #125 = Methodref          #112.#126     // java/lang/Thread.interrupt:()V\n+  #126 = NameAndType        #127:#13      // interrupt:()V\n+  #127 = Utf8               interrupt\n+  #128 = Methodref          #112.#129     // java/lang/Thread.join:(J)V\n+  #129 = NameAndType        #130:#8       // join:(J)V\n+  #130 = Utf8               join\n+  #131 = Class              #132          // java/lang/InterruptedException\n+  #132 = Utf8               java/lang/InterruptedException\n+  #133 = Methodref          #112.#134     // java/lang/Thread.currentThread:()Ljava/lang/Thread;\n+  #134 = NameAndType        #135:#136     // currentThread:()Ljava/lang/Thread;\n+  #135 = Utf8               currentThread\n+  #136 = Utf8               ()Ljava/lang/Thread;\n+  #137 = Methodref          #97.#138      // org/apache/commons/io/monitor/FileAlterationObserver.destroy:()V\n+  #138 = NameAndType        #139:#13      // destroy:()V\n+  #139 = Utf8               destroy\n+  #140 = Methodref          #97.#141      // org/apache/commons/io/monitor/FileAlterationObserver.checkAndNotify:()V\n+  #141 = NameAndType        #142:#13      // checkAndNotify:()V\n+  #142 = Utf8               checkAndNotify\n+  #143 = Methodref          #112.#144     // java/lang/Thread.sleep:(J)V\n+  #144 = NameAndType        #145:#8       // sleep:(J)V\n+  #145 = Utf8               sleep\n+  #146 = Class              #147          // java/lang/Runnable\n+  #147 = Utf8               java/lang/Runnable\n+  #148 = Utf8               Signature\n+  #149 = Utf8               Ljava/util/List<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;\n+  #150 = Utf8               Code\n+  #151 = Utf8               LineNumberTable\n+  #152 = Utf8               LocalVariableTable\n+  #153 = Utf8               this\n+  #154 = Utf8               Lorg/apache/commons/io/monitor/FileAlterationMonitor;\n+  #155 = Utf8               (JLjava/util/Collection;)V\n+  #156 = Utf8               Ljava/util/Collection;\n+  #157 = Utf8               LocalVariableTypeTable\n+  #158 = Utf8               Ljava/util/Collection<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;\n+  #159 = Utf8               (JLjava/util/Collection<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;)V\n+  #160 = Utf8               observer\n+  #161 = Utf8               Lorg/apache/commons/io/monitor/FileAlterationObserver;\n+  #162 = Utf8               StackMapTable\n+  #163 = Utf8               getInterval\n+  #164 = Utf8               ()J\n+  #165 = Utf8               setThreadFactory\n+  #166 = Utf8               (Ljava/util/concurrent/ThreadFactory;)V\n+  #167 = Utf8               removeObserver\n+  #168 = Utf8               getObservers\n+  #169 = Utf8               ()Ljava/lang/Iterable;\n+  #170 = Utf8               ()Ljava/lang/Iterable<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;\n+  #171 = Utf8               Exceptions\n+  #172 = Class              #173          // java/lang/Exception\n+  #173 = Utf8               java/lang/Exception\n+  #174 = Utf8               e\n+  #175 = Utf8               Ljava/lang/InterruptedException;\n+  #176 = Utf8               stopInterval\n+  #177 = Utf8               run\n+  #178 = Utf8               <clinit>\n+  #179 = Utf8               SourceFile\n+  #180 = Utf8               FileAlterationMonitor.java\n {\n   private static final org.apache.commons.io.monitor.FileAlterationObserver[] EMPTY_ARRAY;\n     descriptor: [Lorg/apache/commons/io/monitor/FileAlterationObserver;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private final long interval;\n     descriptor: J\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final java.util.List<org.apache.commons.io.monitor.FileAlterationObserver> observers;\n     descriptor: Ljava/util/List;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #54                          // Ljava/util/List<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;\n+    Signature: #149                         // Ljava/util/List<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;\n \n   private java.lang.Thread thread;\n     descriptor: Ljava/lang/Thread;\n     flags: (0x0002) ACC_PRIVATE\n \n   private java.util.concurrent.ThreadFactory threadFactory;\n     descriptor: Ljava/util/concurrent/ThreadFactory;\n@@ -231,23 +231,23 @@\n \n   public org.apache.commons.io.monitor.FileAlterationMonitor(long);\n     descriptor: (J)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: invokespecial #4                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #9                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: new           #5                  // class java/util/concurrent/CopyOnWriteArrayList\n+         5: new           #14                 // class java/util/concurrent/CopyOnWriteArrayList\n          8: dup\n-         9: invokespecial #6                  // Method java/util/concurrent/CopyOnWriteArrayList.\"<init>\":()V\n-        12: putfield      #7                  // Field observers:Ljava/util/List;\n+         9: invokespecial #16                 // Method java/util/concurrent/CopyOnWriteArrayList.\"<init>\":()V\n+        12: putfield      #17                 // Field observers:Ljava/util/List;\n         15: aload_0\n         16: lload_1\n-        17: putfield      #8                  // Field interval:J\n+        17: putfield      #21                 // Field interval:J\n         20: return\n       LineNumberTable:\n         line 56: 0\n         line 38: 4\n         line 57: 15\n         line 58: 20\n       LocalVariableTable:\n@@ -259,22 +259,22 @@\n     descriptor: (JLjava/util/Collection;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=4, args_size=3\n          0: aload_0\n          1: lload_1\n          2: aload_3\n-         3: invokestatic  #9                  // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;\n-         6: invokestatic  #10                 // Method java/util/Collections.emptyList:()Ljava/util/List;\n-         9: invokevirtual #11                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;\n-        12: checkcast     #12                 // class java/util/Collection\n-        15: getstatic     #13                 // Field EMPTY_ARRAY:[Lorg/apache/commons/io/monitor/FileAlterationObserver;\n-        18: invokeinterface #14,  2           // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-        23: checkcast     #15                 // class \"[Lorg/apache/commons/io/monitor/FileAlterationObserver;\"\n-        26: invokespecial #16                 // Method \"<init>\":(J[Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n+         3: invokestatic  #25                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;\n+         6: invokestatic  #31                 // Method java/util/Collections.emptyList:()Ljava/util/List;\n+         9: invokevirtual #37                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;\n+        12: checkcast     #41                 // class java/util/Collection\n+        15: getstatic     #43                 // Field EMPTY_ARRAY:[Lorg/apache/commons/io/monitor/FileAlterationObserver;\n+        18: invokeinterface #47,  2           // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+        23: checkcast     #51                 // class \"[Lorg/apache/commons/io/monitor/FileAlterationObserver;\"\n+        26: invokespecial #52                 // Method \"<init>\":(J[Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n         29: return\n       LineNumberTable:\n         line 70: 0\n         line 72: 3\n         line 73: 6\n         line 74: 18\n         line 70: 26\n@@ -283,15 +283,15 @@\n         Start  Length  Slot  Name   Signature\n             0      30     0  this   Lorg/apache/commons/io/monitor/FileAlterationMonitor;\n             0      30     1 interval   J\n             0      30     3 observers   Ljava/util/Collection;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      30     3 observers   Ljava/util/Collection<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;\n-    Signature: #73                          // (JLjava/util/Collection<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;)V\n+    Signature: #159                         // (JLjava/util/Collection<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;)V\n \n   public org.apache.commons.io.monitor.FileAlterationMonitor(long, org.apache.commons.io.monitor.FileAlterationObserver...);\n     descriptor: (J[Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=3, locals=8, args_size=3\n          0: aload_0\n@@ -311,15 +311,15 @@\n         24: if_icmpge     46\n         27: aload         4\n         29: iload         6\n         31: aaload\n         32: astore        7\n         34: aload_0\n         35: aload         7\n-        37: invokevirtual #17                 // Method addObserver:(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n+        37: invokevirtual #55                 // Method addObserver:(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n         40: iinc          6, 1\n         43: goto          20\n         46: return\n       LineNumberTable:\n         line 87: 0\n         line 88: 5\n         line 89: 9\n@@ -342,30 +342,30 @@\n \n   public long getInterval();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field interval:J\n+         1: getfield      #21                 // Field interval:J\n          4: lreturn\n       LineNumberTable:\n         line 101: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/monitor/FileAlterationMonitor;\n \n   public synchronized void setThreadFactory(java.util.concurrent.ThreadFactory);\n     descriptor: (Ljava/util/concurrent/ThreadFactory;)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #18                 // Field threadFactory:Ljava/util/concurrent/ThreadFactory;\n+         2: putfield      #59                 // Field threadFactory:Ljava/util/concurrent/ThreadFactory;\n          5: return\n       LineNumberTable:\n         line 110: 0\n         line 111: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/monitor/FileAlterationMonitor;\n@@ -375,17 +375,17 @@\n     descriptor: (Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: ifnull        15\n          4: aload_0\n-         5: getfield      #7                  // Field observers:Ljava/util/List;\n+         5: getfield      #17                 // Field observers:Ljava/util/List;\n          8: aload_1\n-         9: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+         9: invokeinterface #63,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         14: pop\n         15: return\n       LineNumberTable:\n         line 119: 0\n         line 120: 4\n         line 122: 15\n       LocalVariableTable:\n@@ -399,17 +399,17 @@\n     descriptor: (Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: ifnull        20\n          4: aload_0\n-         5: getfield      #7                  // Field observers:Ljava/util/List;\n+         5: getfield      #17                 // Field observers:Ljava/util/List;\n          8: aload_1\n-         9: invokeinterface #20,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z\n+         9: invokeinterface #69,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z\n         14: ifeq          20\n         17: goto          4\n         20: return\n       LineNumberTable:\n         line 130: 0\n         line 131: 4\n         line 135: 20\n@@ -423,72 +423,72 @@\n \n   public java.lang.Iterable<org.apache.commons.io.monitor.FileAlterationObserver> getObservers();\n     descriptor: ()Ljava/lang/Iterable;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field observers:Ljava/util/List;\n+         1: getfield      #17                 // Field observers:Ljava/util/List;\n          4: areturn\n       LineNumberTable:\n         line 144: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/monitor/FileAlterationMonitor;\n-    Signature: #87                          // ()Ljava/lang/Iterable<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;\n+    Signature: #170                         // ()Ljava/lang/Iterable<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;\n \n   public synchronized void start() throws java.lang.Exception;\n     descriptor: ()V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=4, locals=3, args_size=1\n          0: aload_0\n-         1: getfield      #21                 // Field running:Z\n+         1: getfield      #72                 // Field running:Z\n          4: ifeq          17\n-         7: new           #22                 // class java/lang/IllegalStateException\n+         7: new           #76                 // class java/lang/IllegalStateException\n         10: dup\n-        11: ldc           #23                 // String Monitor is already running\n-        13: invokespecial #24                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #78                 // String Monitor is already running\n+        13: invokespecial #80                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: getfield      #7                  // Field observers:Ljava/util/List;\n-        21: invokeinterface #25,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+        18: getfield      #17                 // Field observers:Ljava/util/List;\n+        21: invokeinterface #83,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n         26: astore_1\n         27: aload_1\n-        28: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        28: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         33: ifeq          53\n         36: aload_1\n-        37: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        42: checkcast     #28                 // class org/apache/commons/io/monitor/FileAlterationObserver\n+        37: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        42: checkcast     #97                 // class org/apache/commons/io/monitor/FileAlterationObserver\n         45: astore_2\n         46: aload_2\n-        47: invokevirtual #29                 // Method org/apache/commons/io/monitor/FileAlterationObserver.initialize:()V\n+        47: invokevirtual #99                 // Method org/apache/commons/io/monitor/FileAlterationObserver.initialize:()V\n         50: goto          27\n         53: aload_0\n         54: iconst_1\n-        55: putfield      #21                 // Field running:Z\n+        55: putfield      #72                 // Field running:Z\n         58: aload_0\n-        59: getfield      #18                 // Field threadFactory:Ljava/util/concurrent/ThreadFactory;\n+        59: getfield      #59                 // Field threadFactory:Ljava/util/concurrent/ThreadFactory;\n         62: ifnull        82\n         65: aload_0\n         66: aload_0\n-        67: getfield      #18                 // Field threadFactory:Ljava/util/concurrent/ThreadFactory;\n+        67: getfield      #59                 // Field threadFactory:Ljava/util/concurrent/ThreadFactory;\n         70: aload_0\n-        71: invokeinterface #30,  2           // InterfaceMethod java/util/concurrent/ThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;\n-        76: putfield      #31                 // Field thread:Ljava/lang/Thread;\n+        71: invokeinterface #102,  2          // InterfaceMethod java/util/concurrent/ThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;\n+        76: putfield      #108                // Field thread:Ljava/lang/Thread;\n         79: goto          94\n         82: aload_0\n-        83: new           #32                 // class java/lang/Thread\n+        83: new           #112                // class java/lang/Thread\n         86: dup\n         87: aload_0\n-        88: invokespecial #33                 // Method java/lang/Thread.\"<init>\":(Ljava/lang/Runnable;)V\n-        91: putfield      #31                 // Field thread:Ljava/lang/Thread;\n+        88: invokespecial #114                // Method java/lang/Thread.\"<init>\":(Ljava/lang/Runnable;)V\n+        91: putfield      #108                // Field thread:Ljava/lang/Thread;\n         94: aload_0\n-        95: getfield      #31                 // Field thread:Ljava/lang/Thread;\n-        98: invokevirtual #34                 // Method java/lang/Thread.start:()V\n+        95: getfield      #108                // Field thread:Ljava/lang/Thread;\n+        98: invokevirtual #117                // Method java/lang/Thread.start:()V\n        101: return\n       LineNumberTable:\n         line 153: 0\n         line 154: 7\n         line 156: 17\n         line 157: 46\n         line 158: 50\n@@ -517,16 +517,16 @@\n   public synchronized void stop() throws java.lang.Exception;\n     descriptor: ()V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: getfield      #8                  // Field interval:J\n-         5: invokevirtual #35                 // Method stop:(J)V\n+         2: getfield      #21                 // Field interval:J\n+         5: invokevirtual #120                // Method stop:(J)V\n          8: return\n       LineNumberTable:\n         line 174: 0\n         line 175: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/monitor/FileAlterationMonitor;\n@@ -535,48 +535,48 @@\n \n   public synchronized void stop(long) throws java.lang.Exception;\n     descriptor: (J)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=3, locals=5, args_size=2\n          0: aload_0\n-         1: getfield      #21                 // Field running:Z\n+         1: getfield      #72                 // Field running:Z\n          4: ifne          17\n-         7: new           #22                 // class java/lang/IllegalStateException\n+         7: new           #76                 // class java/lang/IllegalStateException\n         10: dup\n-        11: ldc           #36                 // String Monitor is not running\n-        13: invokespecial #24                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #123                // String Monitor is not running\n+        13: invokespecial #80                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n         18: iconst_0\n-        19: putfield      #21                 // Field running:Z\n+        19: putfield      #72                 // Field running:Z\n         22: aload_0\n-        23: getfield      #31                 // Field thread:Ljava/lang/Thread;\n-        26: invokevirtual #37                 // Method java/lang/Thread.interrupt:()V\n+        23: getfield      #108                // Field thread:Ljava/lang/Thread;\n+        26: invokevirtual #125                // Method java/lang/Thread.interrupt:()V\n         29: aload_0\n-        30: getfield      #31                 // Field thread:Ljava/lang/Thread;\n+        30: getfield      #108                // Field thread:Ljava/lang/Thread;\n         33: lload_1\n-        34: invokevirtual #38                 // Method java/lang/Thread.join:(J)V\n+        34: invokevirtual #128                // Method java/lang/Thread.join:(J)V\n         37: goto          47\n         40: astore_3\n-        41: invokestatic  #40                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;\n-        44: invokevirtual #37                 // Method java/lang/Thread.interrupt:()V\n+        41: invokestatic  #133                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;\n+        44: invokevirtual #125                // Method java/lang/Thread.interrupt:()V\n         47: aload_0\n-        48: getfield      #7                  // Field observers:Ljava/util/List;\n-        51: invokeinterface #25,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+        48: getfield      #17                 // Field observers:Ljava/util/List;\n+        51: invokeinterface #83,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n         56: astore_3\n         57: aload_3\n-        58: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        58: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         63: ifeq          85\n         66: aload_3\n-        67: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        72: checkcast     #28                 // class org/apache/commons/io/monitor/FileAlterationObserver\n+        67: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        72: checkcast     #97                 // class org/apache/commons/io/monitor/FileAlterationObserver\n         75: astore        4\n         77: aload         4\n-        79: invokevirtual #41                 // Method org/apache/commons/io/monitor/FileAlterationObserver.destroy:()V\n+        79: invokevirtual #137                // Method org/apache/commons/io/monitor/FileAlterationObserver.destroy:()V\n         82: goto          57\n         85: return\n       Exception table:\n          from    to  target type\n             22    37    40   Class java/lang/InterruptedException\n       LineNumberTable:\n         line 186: 0\n@@ -612,37 +612,37 @@\n \n   public void run();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n-         1: getfield      #21                 // Field running:Z\n+         1: getfield      #72                 // Field running:Z\n          4: ifeq          67\n          7: aload_0\n-         8: getfield      #7                  // Field observers:Ljava/util/List;\n-        11: invokeinterface #25,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+         8: getfield      #17                 // Field observers:Ljava/util/List;\n+        11: invokeinterface #83,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n         16: astore_1\n         17: aload_1\n-        18: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        18: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         23: ifeq          43\n         26: aload_1\n-        27: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        32: checkcast     #28                 // class org/apache/commons/io/monitor/FileAlterationObserver\n+        27: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        32: checkcast     #97                 // class org/apache/commons/io/monitor/FileAlterationObserver\n         35: astore_2\n         36: aload_2\n-        37: invokevirtual #42                 // Method org/apache/commons/io/monitor/FileAlterationObserver.checkAndNotify:()V\n+        37: invokevirtual #140                // Method org/apache/commons/io/monitor/FileAlterationObserver.checkAndNotify:()V\n         40: goto          17\n         43: aload_0\n-        44: getfield      #21                 // Field running:Z\n+        44: getfield      #72                 // Field running:Z\n         47: ifne          53\n         50: goto          67\n         53: aload_0\n-        54: getfield      #8                  // Field interval:J\n-        57: invokestatic  #43                 // Method java/lang/Thread.sleep:(J)V\n+        54: getfield      #21                 // Field interval:J\n+        57: invokestatic  #143                // Method java/lang/Thread.sleep:(J)V\n         60: goto          0\n         63: astore_1\n         64: goto          0\n         67: return\n       Exception table:\n          from    to  target type\n             53    60    63   Class java/lang/InterruptedException\n@@ -676,14 +676,14 @@\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: iconst_0\n-         1: anewarray     #28                 // class org/apache/commons/io/monitor/FileAlterationObserver\n-         4: putstatic     #13                 // Field EMPTY_ARRAY:[Lorg/apache/commons/io/monitor/FileAlterationObserver;\n+         1: anewarray     #97                 // class org/apache/commons/io/monitor/FileAlterationObserver\n+         4: putstatic     #43                 // Field EMPTY_ARRAY:[Lorg/apache/commons/io/monitor/FileAlterationObserver;\n          7: return\n       LineNumberTable:\n         line 35: 0\n }\n SourceFile: \"FileAlterationMonitor.java\"\n"}]}
