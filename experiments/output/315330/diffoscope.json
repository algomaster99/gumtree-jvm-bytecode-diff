{"diffoscope-json-version": 1, "source1": "first/AbstractCharacterFilterReader.class", "source2": "second/AbstractCharacterFilterReader.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,50 +1,50 @@\n-  SHA-256 checksum c58b17e4e528bb46cb07a4f1fc24bd300bf044a0d269d7ce855a72487a64ff24\n+  SHA-256 checksum 73573e7414b2d370cd39337d82b2d60e7aba382ea93f51790f891b769dbb22ec\n   Compiled from \"AbstractCharacterFilterReader.java\"\n public abstract class org.apache.commons.io.input.AbstractCharacterFilterReader extends java.io.FilterReader\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #6                          // org/apache/commons/io/input/AbstractCharacterFilterReader\n-  super_class: #7                         // java/io/FilterReader\n+  this_class: #8                          // org/apache/commons/io/input/AbstractCharacterFilterReader\n+  super_class: #2                         // java/io/FilterReader\n   interfaces: 0, fields: 0, methods: 4, attributes: 1\n Constant pool:\n-   #1 = Methodref          #7.#22         // java/io/FilterReader.\"<init>\":(Ljava/io/Reader;)V\n-   #2 = Fieldref           #6.#23         // org/apache/commons/io/input/AbstractCharacterFilterReader.in:Ljava/io/Reader;\n-   #3 = Methodref          #24.#25        // java/io/Reader.read:()I\n-   #4 = Methodref          #6.#26         // org/apache/commons/io/input/AbstractCharacterFilterReader.filter:(I)Z\n-   #5 = Methodref          #7.#27         // java/io/FilterReader.read:([CII)I\n-   #6 = Class              #28            // org/apache/commons/io/input/AbstractCharacterFilterReader\n-   #7 = Class              #29            // java/io/FilterReader\n-   #8 = Utf8               <init>\n-   #9 = Utf8               (Ljava/io/Reader;)V\n-  #10 = Utf8               Code\n-  #11 = Utf8               LineNumberTable\n-  #12 = Utf8               read\n-  #13 = Utf8               ()I\n-  #14 = Utf8               StackMapTable\n-  #15 = Utf8               Exceptions\n-  #16 = Class              #30            // java/io/IOException\n-  #17 = Utf8               filter\n-  #18 = Utf8               (I)Z\n-  #19 = Utf8               ([CII)I\n-  #20 = Utf8               SourceFile\n-  #21 = Utf8               AbstractCharacterFilterReader.java\n-  #22 = NameAndType        #8:#9          // \"<init>\":(Ljava/io/Reader;)V\n-  #23 = NameAndType        #31:#32        // in:Ljava/io/Reader;\n-  #24 = Class              #33            // java/io/Reader\n-  #25 = NameAndType        #12:#13        // read:()I\n-  #26 = NameAndType        #17:#18        // filter:(I)Z\n-  #27 = NameAndType        #12:#19        // read:([CII)I\n-  #28 = Utf8               org/apache/commons/io/input/AbstractCharacterFilterReader\n-  #29 = Utf8               java/io/FilterReader\n-  #30 = Utf8               java/io/IOException\n-  #31 = Utf8               in\n-  #32 = Utf8               Ljava/io/Reader;\n-  #33 = Utf8               java/io/Reader\n+   #1 = Methodref          #2.#3          // java/io/FilterReader.\"<init>\":(Ljava/io/Reader;)V\n+   #2 = Class              #4             // java/io/FilterReader\n+   #3 = NameAndType        #5:#6          // \"<init>\":(Ljava/io/Reader;)V\n+   #4 = Utf8               java/io/FilterReader\n+   #5 = Utf8               <init>\n+   #6 = Utf8               (Ljava/io/Reader;)V\n+   #7 = Fieldref           #8.#9          // org/apache/commons/io/input/AbstractCharacterFilterReader.in:Ljava/io/Reader;\n+   #8 = Class              #10            // org/apache/commons/io/input/AbstractCharacterFilterReader\n+   #9 = NameAndType        #11:#12        // in:Ljava/io/Reader;\n+  #10 = Utf8               org/apache/commons/io/input/AbstractCharacterFilterReader\n+  #11 = Utf8               in\n+  #12 = Utf8               Ljava/io/Reader;\n+  #13 = Methodref          #14.#15        // java/io/Reader.read:()I\n+  #14 = Class              #16            // java/io/Reader\n+  #15 = NameAndType        #17:#18        // read:()I\n+  #16 = Utf8               java/io/Reader\n+  #17 = Utf8               read\n+  #18 = Utf8               ()I\n+  #19 = Methodref          #8.#20         // org/apache/commons/io/input/AbstractCharacterFilterReader.filter:(I)Z\n+  #20 = NameAndType        #21:#22        // filter:(I)Z\n+  #21 = Utf8               filter\n+  #22 = Utf8               (I)Z\n+  #23 = Methodref          #2.#24         // java/io/FilterReader.read:([CII)I\n+  #24 = NameAndType        #17:#25        // read:([CII)I\n+  #25 = Utf8               ([CII)I\n+  #26 = Utf8               Code\n+  #27 = Utf8               LineNumberTable\n+  #28 = Utf8               StackMapTable\n+  #29 = Utf8               Exceptions\n+  #30 = Class              #31            // java/io/IOException\n+  #31 = Utf8               java/io/IOException\n+  #32 = Utf8               SourceFile\n+  #33 = Utf8               AbstractCharacterFilterReader.java\n {\n   protected org.apache.commons.io.input.AbstractCharacterFilterReader(java.io.Reader);\n     descriptor: (Ljava/io/Reader;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n@@ -57,20 +57,20 @@\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field in:Ljava/io/Reader;\n-         4: invokevirtual #3                  // Method java/io/Reader.read:()I\n+         1: getfield      #7                  // Field in:Ljava/io/Reader;\n+         4: invokevirtual #13                 // Method java/io/Reader.read:()I\n          7: istore_1\n          8: aload_0\n          9: iload_1\n-        10: invokevirtual #4                  // Method filter:(I)Z\n+        10: invokevirtual #19                 // Method filter:(I)Z\n         13: ifne          0\n         16: iload_1\n         17: ireturn\n       LineNumberTable:\n         line 42: 0\n         line 43: 8\n         line 44: 16\n@@ -88,15 +88,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=7, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokespecial #5                  // Method java/io/FilterReader.read:([CII)I\n+         4: invokespecial #23                 // Method java/io/FilterReader.read:([CII)I\n          7: istore        4\n          9: iload         4\n         11: iconst_m1\n         12: if_icmpne     17\n         15: iconst_m1\n         16: ireturn\n         17: iload_2\n@@ -110,15 +110,15 @@\n         28: iload         4\n         30: iadd\n         31: if_icmpge     72\n         34: aload_0\n         35: aload_1\n         36: iload         6\n         38: caload\n-        39: invokevirtual #4                  // Method filter:(I)Z\n+        39: invokevirtual #19                 // Method filter:(I)Z\n         42: ifeq          48\n         45: goto          66\n         48: iinc          5, 1\n         51: iload         5\n         53: iload         6\n         55: if_icmpge     66\n         58: aload_1\n"}]}
