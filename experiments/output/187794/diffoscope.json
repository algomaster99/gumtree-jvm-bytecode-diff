{"diffoscope-json-version": 1, "source1": "first/UnsupportedZipFeatureException.class", "source2": "second/UnsupportedZipFeatureException.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,103 +1,103 @@\n-  SHA-256 checksum 9413baef55dfe3d890e8043e6f266317357cdd6d9510b5d365253460e176fda1\n+  SHA-256 checksum a17820e25f4800382d5689135d358e9df566fb43b4e7e611c592c901187fe90e\n   Compiled from \"UnsupportedZipFeatureException.java\"\n public class org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException extends java.util.zip.ZipException\n   minor version: 0\n   major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #11                         // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException\n+  this_class: #18                         // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException\n   super_class: #12                        // java/util/zip/ZipException\n   interfaces: 0, fields: 3, methods: 5, attributes: 3\n Constant pool:\n-   #1 = Methodref          #42.#43        // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;\n-   #2 = InvokeDynamic      #0:#47         // #0:makeConcatWithConstants:(Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;Ljava/lang/String;)Ljava/lang/String;\n-   #3 = Methodref          #12.#48        // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-   #4 = Fieldref           #11.#49        // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-   #5 = Fieldref           #11.#50        // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-   #6 = Methodref          #42.#51        // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n-   #7 = Methodref          #52.#53        // org/apache/commons/compress/archivers/zip/ZipMethod.name:()Ljava/lang/String;\n-   #8 = InvokeDynamic      #1:#55         // #1:makeConcatWithConstants:(ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-   #9 = Fieldref           #13.#56        // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature.METHOD:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-  #10 = InvokeDynamic      #2:#58         // #2:makeConcatWithConstants:(Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;)Ljava/lang/String;\n-  #11 = Class              #59            // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException\n-  #12 = Class              #60            // java/util/zip/ZipException\n-  #13 = Class              #61            // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature\n-  #14 = Utf8               Feature\n-  #15 = Utf8               InnerClasses\n-  #16 = Utf8               reason\n-  #17 = Utf8               Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-  #18 = Utf8               entry\n-  #19 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #20 = Utf8               serialVersionUID\n-  #21 = Utf8               J\n-  #22 = Utf8               ConstantValue\n-  #23 = Long               20161219l\n-  #25 = Utf8               <init>\n-  #26 = Utf8               (Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n-  #27 = Utf8               Code\n-  #28 = Utf8               LineNumberTable\n-  #29 = Utf8               LocalVariableTable\n-  #30 = Utf8               this\n-  #31 = Utf8               Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException;\n-  #32 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipMethod;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n-  #33 = Utf8               method\n-  #34 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipMethod;\n-  #35 = Utf8               (Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;)V\n-  #36 = Utf8               getFeature\n-  #37 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-  #38 = Utf8               getEntry\n-  #39 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #40 = Utf8               SourceFile\n-  #41 = Utf8               UnsupportedZipFeatureException.java\n-  #42 = Class              #62            // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #43 = NameAndType        #63:#64        // getName:()Ljava/lang/String;\n-  #44 = Utf8               BootstrapMethods\n-  #45 = MethodHandle       6:#65          // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #46 = String             #66            // Unsupported feature \\u0001 used in entry \\u0001\n-  #47 = NameAndType        #67:#68        // makeConcatWithConstants:(Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;Ljava/lang/String;)Ljava/lang/String;\n-  #48 = NameAndType        #25:#69        // \"<init>\":(Ljava/lang/String;)V\n-  #49 = NameAndType        #16:#17        // reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-  #50 = NameAndType        #18:#19        // entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #51 = NameAndType        #70:#71        // getMethod:()I\n-  #52 = Class              #72            // org/apache/commons/compress/archivers/zip/ZipMethod\n-  #53 = NameAndType        #73:#64        // name:()Ljava/lang/String;\n-  #54 = String             #74            // Unsupported compression method \\u0001 (\\u0001) used in entry \\u0001\n-  #55 = NameAndType        #67:#75        // makeConcatWithConstants:(ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #56 = NameAndType        #76:#17        // METHOD:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-  #57 = String             #77            // Unsupported feature \\u0001 used in archive.\n-  #58 = NameAndType        #67:#78        // makeConcatWithConstants:(Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;)Ljava/lang/String;\n-  #59 = Utf8               org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException\n-  #60 = Utf8               java/util/zip/ZipException\n-  #61 = Utf8               org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature\n-  #62 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #63 = Utf8               getName\n-  #64 = Utf8               ()Ljava/lang/String;\n-  #65 = Methodref          #79.#80        // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #66 = Utf8               Unsupported feature \\u0001 used in entry \\u0001\n-  #67 = Utf8               makeConcatWithConstants\n-  #68 = Utf8               (Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;Ljava/lang/String;)Ljava/lang/String;\n-  #69 = Utf8               (Ljava/lang/String;)V\n-  #70 = Utf8               getMethod\n-  #71 = Utf8               ()I\n-  #72 = Utf8               org/apache/commons/compress/archivers/zip/ZipMethod\n-  #73 = Utf8               name\n-  #74 = Utf8               Unsupported compression method \\u0001 (\\u0001) used in entry \\u0001\n-  #75 = Utf8               (ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #76 = Utf8               METHOD\n-  #77 = Utf8               Unsupported feature \\u0001 used in archive.\n-  #78 = Utf8               (Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;)Ljava/lang/String;\n-  #79 = Class              #81            // java/lang/invoke/StringConcatFactory\n-  #80 = NameAndType        #67:#84        // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #81 = Utf8               java/lang/invoke/StringConcatFactory\n-  #82 = Class              #86            // java/lang/invoke/MethodHandles$Lookup\n-  #83 = Utf8               Lookup\n-  #84 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #85 = Class              #87            // java/lang/invoke/MethodHandles\n-  #86 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #87 = Utf8               java/lang/invoke/MethodHandles\n+   #1 = Methodref          #2.#3          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;\n+   #2 = Class              #4             // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+   #3 = NameAndType        #5:#6          // getName:()Ljava/lang/String;\n+   #4 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+   #5 = Utf8               getName\n+   #6 = Utf8               ()Ljava/lang/String;\n+   #7 = InvokeDynamic      #0:#8          // #0:makeConcatWithConstants:(Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;Ljava/lang/String;)Ljava/lang/String;\n+   #8 = NameAndType        #9:#10         // makeConcatWithConstants:(Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;Ljava/lang/String;)Ljava/lang/String;\n+   #9 = Utf8               makeConcatWithConstants\n+  #10 = Utf8               (Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;Ljava/lang/String;)Ljava/lang/String;\n+  #11 = Methodref          #12.#13        // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+  #12 = Class              #14            // java/util/zip/ZipException\n+  #13 = NameAndType        #15:#16        // \"<init>\":(Ljava/lang/String;)V\n+  #14 = Utf8               java/util/zip/ZipException\n+  #15 = Utf8               <init>\n+  #16 = Utf8               (Ljava/lang/String;)V\n+  #17 = Fieldref           #18.#19        // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+  #18 = Class              #20            // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException\n+  #19 = NameAndType        #21:#22        // reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+  #20 = Utf8               org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException\n+  #21 = Utf8               reason\n+  #22 = Utf8               Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+  #23 = Fieldref           #18.#24        // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #24 = NameAndType        #25:#26        // entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #25 = Utf8               entry\n+  #26 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #27 = Methodref          #2.#28         // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n+  #28 = NameAndType        #29:#30        // getMethod:()I\n+  #29 = Utf8               getMethod\n+  #30 = Utf8               ()I\n+  #31 = Methodref          #32.#33        // org/apache/commons/compress/archivers/zip/ZipMethod.name:()Ljava/lang/String;\n+  #32 = Class              #34            // org/apache/commons/compress/archivers/zip/ZipMethod\n+  #33 = NameAndType        #35:#6         // name:()Ljava/lang/String;\n+  #34 = Utf8               org/apache/commons/compress/archivers/zip/ZipMethod\n+  #35 = Utf8               name\n+  #36 = InvokeDynamic      #1:#37         // #1:makeConcatWithConstants:(ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #37 = NameAndType        #9:#38         // makeConcatWithConstants:(ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #38 = Utf8               (ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #39 = Fieldref           #40.#41        // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature.METHOD:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+  #40 = Class              #42            // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature\n+  #41 = NameAndType        #43:#22        // METHOD:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+  #42 = Utf8               org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature\n+  #43 = Utf8               METHOD\n+  #44 = InvokeDynamic      #2:#45         // #2:makeConcatWithConstants:(Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;)Ljava/lang/String;\n+  #45 = NameAndType        #9:#46         // makeConcatWithConstants:(Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;)Ljava/lang/String;\n+  #46 = Utf8               (Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;)Ljava/lang/String;\n+  #47 = Utf8               serialVersionUID\n+  #48 = Utf8               J\n+  #49 = Utf8               ConstantValue\n+  #50 = Long               20161219l\n+  #52 = Utf8               (Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n+  #53 = Utf8               Code\n+  #54 = Utf8               LineNumberTable\n+  #55 = Utf8               LocalVariableTable\n+  #56 = Utf8               this\n+  #57 = Utf8               Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException;\n+  #58 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipMethod;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n+  #59 = Utf8               method\n+  #60 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipMethod;\n+  #61 = Utf8               (Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;)V\n+  #62 = Utf8               getFeature\n+  #63 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+  #64 = Utf8               getEntry\n+  #65 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #66 = Utf8               SourceFile\n+  #67 = Utf8               UnsupportedZipFeatureException.java\n+  #68 = Utf8               BootstrapMethods\n+  #69 = MethodHandle       6:#70          // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #70 = Methodref          #71.#72        // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #71 = Class              #73            // java/lang/invoke/StringConcatFactory\n+  #72 = NameAndType        #9:#74         // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #73 = Utf8               java/lang/invoke/StringConcatFactory\n+  #74 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #75 = String             #76            // Unsupported feature \\u0001 used in entry \\u0001\n+  #76 = Utf8               Unsupported feature \\u0001 used in entry \\u0001\n+  #77 = String             #78            // Unsupported compression method \\u0001 (\\u0001) used in entry \\u0001\n+  #78 = Utf8               Unsupported compression method \\u0001 (\\u0001) used in entry \\u0001\n+  #79 = String             #80            // Unsupported feature \\u0001 used in archive.\n+  #80 = Utf8               Unsupported feature \\u0001 used in archive.\n+  #81 = Utf8               InnerClasses\n+  #82 = Utf8               Feature\n+  #83 = Class              #84            // java/lang/invoke/MethodHandles$Lookup\n+  #84 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #85 = Class              #86            // java/lang/invoke/MethodHandles\n+  #86 = Utf8               java/lang/invoke/MethodHandles\n+  #87 = Utf8               Lookup\n {\n   private final org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature reason;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final transient org.apache.commons.compress.archivers.zip.ZipArchiveEntry entry;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -113,22 +113,22 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: invokevirtual #1                  // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;\n-         6: invokedynamic #2,  0              // InvokeDynamic #0:makeConcatWithConstants:(Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;Ljava/lang/String;)Ljava/lang/String;\n-        11: invokespecial #3                  // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+         6: invokedynamic #7,  0              // InvokeDynamic #0:makeConcatWithConstants:(Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;Ljava/lang/String;)Ljava/lang/String;\n+        11: invokespecial #11                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n         14: aload_0\n         15: aload_1\n-        16: putfield      #4                  // Field reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+        16: putfield      #17                 // Field reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n         19: aload_0\n         20: aload_2\n-        21: putfield      #5                  // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+        21: putfield      #23                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n         24: return\n       LineNumberTable:\n         line 41: 0\n         line 42: 3\n         line 41: 11\n         line 43: 14\n         line 44: 19\n@@ -142,27 +142,27 @@\n   public org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException(org.apache.commons.compress.archivers.zip.ZipMethod, org.apache.commons.compress.archivers.zip.ZipArchiveEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipMethod;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_2\n-         2: invokevirtual #6                  // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n+         2: invokevirtual #27                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n          5: aload_1\n-         6: invokevirtual #7                  // Method org/apache/commons/compress/archivers/zip/ZipMethod.name:()Ljava/lang/String;\n+         6: invokevirtual #31                 // Method org/apache/commons/compress/archivers/zip/ZipMethod.name:()Ljava/lang/String;\n          9: aload_2\n         10: invokevirtual #1                  // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;\n-        13: invokedynamic #8,  0              // InvokeDynamic #1:makeConcatWithConstants:(ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-        18: invokespecial #3                  // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+        13: invokedynamic #36,  0             // InvokeDynamic #1:makeConcatWithConstants:(ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+        18: invokespecial #11                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n         21: aload_0\n-        22: getstatic     #9                  // Field org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature.METHOD:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-        25: putfield      #4                  // Field reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+        22: getstatic     #39                 // Field org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature.METHOD:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+        25: putfield      #17                 // Field reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n         28: aload_0\n         29: aload_2\n-        30: putfield      #5                  // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+        30: putfield      #23                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n         33: return\n       LineNumberTable:\n         line 56: 0\n         line 57: 6\n         line 56: 18\n         line 58: 21\n         line 59: 28\n@@ -176,22 +176,22 @@\n   public org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException(org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokedynamic #10,  0             // InvokeDynamic #2:makeConcatWithConstants:(Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;)Ljava/lang/String;\n-         7: invokespecial #3                  // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+         2: invokedynamic #44,  0             // InvokeDynamic #2:makeConcatWithConstants:(Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;)Ljava/lang/String;\n+         7: invokespecial #11                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n         10: aload_0\n         11: aload_1\n-        12: putfield      #4                  // Field reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+        12: putfield      #17                 // Field reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n         15: aload_0\n         16: aconst_null\n-        17: putfield      #5                  // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+        17: putfield      #23                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n         20: return\n       LineNumberTable:\n         line 70: 0\n         line 71: 10\n         line 72: 15\n         line 73: 20\n       LocalVariableTable:\n@@ -201,43 +201,43 @@\n \n   public org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature getFeature();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+         1: getfield      #17                 // Field reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n          4: areturn\n       LineNumberTable:\n         line 80: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException;\n \n   public org.apache.commons.compress.archivers.zip.ZipArchiveEntry getEntry();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+         1: getfield      #23                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n          4: areturn\n       LineNumberTable:\n         line 88: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException;\n }\n SourceFile: \"UnsupportedZipFeatureException.java\"\n-InnerClasses:\n-  public static #14= #13 of #11;          // Feature=class org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature of class org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException\n-  public static final #83= #82 of #85;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #45 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  0: #69 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #46 Unsupported feature \\u0001 used in entry \\u0001\n-  1: #45 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+      #75 Unsupported feature \\u0001 used in entry \\u0001\n+  1: #69 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #54 Unsupported compression method \\u0001 (\\u0001) used in entry \\u0001\n-  2: #45 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+      #77 Unsupported compression method \\u0001 (\\u0001) used in entry \\u0001\n+  2: #69 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #57 Unsupported feature \\u0001 used in archive.\n+      #79 Unsupported feature \\u0001 used in archive.\n+InnerClasses:\n+  public static #82= #40 of #18;          // Feature=class org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature of class org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException\n+  public static final #87= #83 of #85;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
