{"diffoscope-json-version": 1, "source1": "first/AbstractCircuitBreaker.class", "source2": "second/AbstractCircuitBreaker.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,41 +1,41 @@\n-  SHA-256 checksum 31b928da0eddf93e2f735ed38ce97b690f937308c66ffc0c97a08e672f7b0070\n+  SHA-256 checksum 0e2ab9450d7160ff38097051dbff7dfe67b61bb874971060eb9aa9e526f9d9b8\n   Compiled from \"AbstractCircuitBreaker.java\"\n public abstract class org.apache.commons.lang3.concurrent.AbstractCircuitBreaker<T extends java.lang.Object> extends java.lang.Object implements org.apache.commons.lang3.concurrent.CircuitBreaker<T>\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #17                         // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker\n   super_class: #22                        // java/lang/Object\n   interfaces: 1, fields: 3, methods: 11, attributes: 3\n Constant pool:\n-    #1 = Methodref          #22.#72       // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #73           // java/util/concurrent/atomic/AtomicReference\n-    #3 = Fieldref           #10.#74       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.CLOSED:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n-    #4 = Methodref          #2.#75        // java/util/concurrent/atomic/AtomicReference.\"<init>\":(Ljava/lang/Object;)V\n-    #5 = Fieldref           #17.#76       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.state:Ljava/util/concurrent/atomic/AtomicReference;\n-    #6 = Class              #77           // java/beans/PropertyChangeSupport\n-    #7 = Methodref          #6.#75        // java/beans/PropertyChangeSupport.\"<init>\":(Ljava/lang/Object;)V\n-    #8 = Fieldref           #17.#78       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.changeSupport:Ljava/beans/PropertyChangeSupport;\n-    #9 = Methodref          #2.#79        // java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;\n-   #10 = Class              #80           // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State\n-   #11 = Methodref          #17.#81       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.isOpen:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)Z\n-   #12 = Methodref          #17.#82       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.isOpen:()Z\n-   #13 = Methodref          #17.#83       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.changeState:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)V\n-   #14 = Fieldref           #10.#84       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.OPEN:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n-   #15 = Methodref          #10.#85       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.oppositeState:()Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n-   #16 = Methodref          #2.#86        // java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #17 = Class              #87           // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker\n+    #1 = Methodref          #22.#69       // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #70           // java/util/concurrent/atomic/AtomicReference\n+    #3 = Fieldref           #10.#71       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.CLOSED:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n+    #4 = Methodref          #2.#72        // java/util/concurrent/atomic/AtomicReference.\"<init>\":(Ljava/lang/Object;)V\n+    #5 = Fieldref           #17.#73       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.state:Ljava/util/concurrent/atomic/AtomicReference;\n+    #6 = Class              #74           // java/beans/PropertyChangeSupport\n+    #7 = Methodref          #6.#72        // java/beans/PropertyChangeSupport.\"<init>\":(Ljava/lang/Object;)V\n+    #8 = Fieldref           #17.#75       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.changeSupport:Ljava/beans/PropertyChangeSupport;\n+    #9 = Methodref          #2.#76        // java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;\n+   #10 = Class              #77           // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State\n+   #11 = Methodref          #17.#78       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.isOpen:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)Z\n+   #12 = Methodref          #17.#79       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.isOpen:()Z\n+   #13 = Methodref          #17.#80       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.changeState:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)V\n+   #14 = Fieldref           #10.#81       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.OPEN:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n+   #15 = Methodref          #10.#82       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.oppositeState:()Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n+   #16 = Methodref          #2.#83        // java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #17 = Class              #84           // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker\n    #18 = String             #54           // open\n-   #19 = Methodref          #6.#88        // java/beans/PropertyChangeSupport.firePropertyChange:(Ljava/lang/String;ZZ)V\n-   #20 = Methodref          #6.#89        // java/beans/PropertyChangeSupport.addPropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V\n-   #21 = Methodref          #6.#90        // java/beans/PropertyChangeSupport.removePropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V\n-   #22 = Class              #91           // java/lang/Object\n-   #23 = Class              #92           // org/apache/commons/lang3/concurrent/CircuitBreaker\n-   #24 = Class              #93           // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$1\n+   #19 = Methodref          #6.#85        // java/beans/PropertyChangeSupport.firePropertyChange:(Ljava/lang/String;ZZ)V\n+   #20 = Methodref          #6.#86        // java/beans/PropertyChangeSupport.addPropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V\n+   #21 = Methodref          #6.#87        // java/beans/PropertyChangeSupport.removePropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V\n+   #22 = Class              #88           // java/lang/Object\n+   #23 = Class              #89           // org/apache/commons/lang3/concurrent/CircuitBreaker\n+   #24 = Class              #90           // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$1\n    #25 = Utf8               InnerClasses\n    #26 = Utf8               State\n    #27 = Utf8               PROPERTY_NAME\n    #28 = Utf8               Ljava/lang/String;\n    #29 = Utf8               ConstantValue\n    #30 = Utf8               state\n    #31 = Utf8               Ljava/util/concurrent/atomic/AtomicReference;\n@@ -63,62 +63,59 @@\n    #53 = Utf8               close\n    #54 = Utf8               open\n    #55 = Utf8               (Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)Z\n    #56 = Utf8               Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n    #57 = Utf8               changeState\n    #58 = Utf8               (Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)V\n    #59 = Utf8               newState\n-   #60 = Class              #87           // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker\n-   #61 = Class              #80           // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State\n-   #62 = Class              #77           // java/beans/PropertyChangeSupport\n-   #63 = Class              #94           // java/lang/String\n-   #64 = Utf8               addChangeListener\n-   #65 = Utf8               (Ljava/beans/PropertyChangeListener;)V\n-   #66 = Utf8               listener\n-   #67 = Utf8               Ljava/beans/PropertyChangeListener;\n-   #68 = Utf8               removeChangeListener\n-   #69 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/CircuitBreaker<TT;>;\n-   #70 = Utf8               SourceFile\n-   #71 = Utf8               AbstractCircuitBreaker.java\n-   #72 = NameAndType        #36:#37       // \"<init>\":()V\n-   #73 = Utf8               java/util/concurrent/atomic/AtomicReference\n-   #74 = NameAndType        #95:#56       // CLOSED:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n-   #75 = NameAndType        #36:#96       // \"<init>\":(Ljava/lang/Object;)V\n-   #76 = NameAndType        #30:#31       // state:Ljava/util/concurrent/atomic/AtomicReference;\n-   #77 = Utf8               java/beans/PropertyChangeSupport\n-   #78 = NameAndType        #34:#35       // changeSupport:Ljava/beans/PropertyChangeSupport;\n-   #79 = NameAndType        #97:#98       // get:()Ljava/lang/Object;\n-   #80 = Utf8               org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State\n-   #81 = NameAndType        #45:#55       // isOpen:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)Z\n-   #82 = NameAndType        #45:#46       // isOpen:()Z\n-   #83 = NameAndType        #57:#58       // changeState:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)V\n-   #84 = NameAndType        #99:#56       // OPEN:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n-   #85 = NameAndType        #100:#101     // oppositeState:()Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n-   #86 = NameAndType        #102:#103     // compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #87 = Utf8               org/apache/commons/lang3/concurrent/AbstractCircuitBreaker\n-   #88 = NameAndType        #104:#105     // firePropertyChange:(Ljava/lang/String;ZZ)V\n-   #89 = NameAndType        #106:#65      // addPropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V\n-   #90 = NameAndType        #107:#65      // removePropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V\n-   #91 = Utf8               java/lang/Object\n-   #92 = Utf8               org/apache/commons/lang3/concurrent/CircuitBreaker\n-   #93 = Utf8               org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$1\n-   #94 = Utf8               java/lang/String\n-   #95 = Utf8               CLOSED\n-   #96 = Utf8               (Ljava/lang/Object;)V\n-   #97 = Utf8               get\n-   #98 = Utf8               ()Ljava/lang/Object;\n-   #99 = Utf8               OPEN\n-  #100 = Utf8               oppositeState\n-  #101 = Utf8               ()Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n-  #102 = Utf8               compareAndSet\n-  #103 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #104 = Utf8               firePropertyChange\n-  #105 = Utf8               (Ljava/lang/String;ZZ)V\n-  #106 = Utf8               addPropertyChangeListener\n-  #107 = Utf8               removePropertyChangeListener\n+   #60 = Class              #91           // java/lang/String\n+   #61 = Utf8               addChangeListener\n+   #62 = Utf8               (Ljava/beans/PropertyChangeListener;)V\n+   #63 = Utf8               listener\n+   #64 = Utf8               Ljava/beans/PropertyChangeListener;\n+   #65 = Utf8               removeChangeListener\n+   #66 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/CircuitBreaker<TT;>;\n+   #67 = Utf8               SourceFile\n+   #68 = Utf8               AbstractCircuitBreaker.java\n+   #69 = NameAndType        #36:#37       // \"<init>\":()V\n+   #70 = Utf8               java/util/concurrent/atomic/AtomicReference\n+   #71 = NameAndType        #92:#56       // CLOSED:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n+   #72 = NameAndType        #36:#93       // \"<init>\":(Ljava/lang/Object;)V\n+   #73 = NameAndType        #30:#31       // state:Ljava/util/concurrent/atomic/AtomicReference;\n+   #74 = Utf8               java/beans/PropertyChangeSupport\n+   #75 = NameAndType        #34:#35       // changeSupport:Ljava/beans/PropertyChangeSupport;\n+   #76 = NameAndType        #94:#95       // get:()Ljava/lang/Object;\n+   #77 = Utf8               org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State\n+   #78 = NameAndType        #45:#55       // isOpen:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)Z\n+   #79 = NameAndType        #45:#46       // isOpen:()Z\n+   #80 = NameAndType        #57:#58       // changeState:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)V\n+   #81 = NameAndType        #96:#56       // OPEN:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n+   #82 = NameAndType        #97:#98       // oppositeState:()Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n+   #83 = NameAndType        #99:#100      // compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #84 = Utf8               org/apache/commons/lang3/concurrent/AbstractCircuitBreaker\n+   #85 = NameAndType        #101:#102     // firePropertyChange:(Ljava/lang/String;ZZ)V\n+   #86 = NameAndType        #103:#62      // addPropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V\n+   #87 = NameAndType        #104:#62      // removePropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V\n+   #88 = Utf8               java/lang/Object\n+   #89 = Utf8               org/apache/commons/lang3/concurrent/CircuitBreaker\n+   #90 = Utf8               org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$1\n+   #91 = Utf8               java/lang/String\n+   #92 = Utf8               CLOSED\n+   #93 = Utf8               (Ljava/lang/Object;)V\n+   #94 = Utf8               get\n+   #95 = Utf8               ()Ljava/lang/Object;\n+   #96 = Utf8               OPEN\n+   #97 = Utf8               oppositeState\n+   #98 = Utf8               ()Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n+   #99 = Utf8               compareAndSet\n+  #100 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #101 = Utf8               firePropertyChange\n+  #102 = Utf8               (Ljava/lang/String;ZZ)V\n+  #103 = Utf8               addPropertyChangeListener\n+  #104 = Utf8               removePropertyChangeListener\n {\n   public static final java.lang.String PROPERTY_NAME = \"open\";\n     descriptor: Ljava/lang/String;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: String open\n \n   protected final java.util.concurrent.atomic.AtomicReference<org.apache.commons.lang3.concurrent.AbstractCircuitBreaker$State> state;\n@@ -361,12 +358,12 @@\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker;\n             0       9     1 listener   Ljava/beans/PropertyChangeListener;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker<TT;>;\n }\n-Signature: #69                          // <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/CircuitBreaker<TT;>;\n+Signature: #66                          // <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/CircuitBreaker<TT;>;\n SourceFile: \"AbstractCircuitBreaker.java\"\n InnerClasses:\n   static #24;                             // class org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$1\n   protected static abstract #26= #10 of #17; // State=class org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State of class org/apache/commons/lang3/concurrent/AbstractCircuitBreaker\n"}]}
