{"diffoscope-json-version": 1, "source1": "first/Field.class", "source2": "second/Field.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -58,30 +58,30 @@\n     }\n     \n     public int hashCode() {\n         return Field.bcelComparator.hashCode((Object)this);\n     }\n     \n     public String toString() {\n-        String access = Utility.accessToString(super.getAccessFlags());\n-        access = (access.isEmpty() ? \"\" : (access + \" \"));\n-        final String signature = Utility.signatureToString(this.getSignature());\n+        final String accessToString = Utility.accessToString(super.getAccessFlags());\n+        final String str = accessToString.isEmpty() ? \"\" : (accessToString + \" \");\n+        final String signatureToString = Utility.signatureToString(this.getSignature());\n         final String name = this.getName();\n-        final StringBuilder buf = new StringBuilder(64);\n-        buf.append(access).append(signature).append(\" \").append(name);\n-        final ConstantValue cv = this.getConstantValue();\n-        if (cv != null) {\n-            buf.append(\" = \").append(cv);\n+        final StringBuilder sb = new StringBuilder(64);\n+        sb.append(str).append(signatureToString).append(\" \").append(name);\n+        final ConstantValue constantValue = this.getConstantValue();\n+        if (constantValue != null) {\n+            sb.append(\" = \").append(constantValue);\n         }\n-        for (final Attribute attribute : super.getAttributes()) {\n-            if (!(attribute instanceof ConstantValue)) {\n-                buf.append(\" [\").append(attribute).append(\"]\");\n+        for (final Attribute obj : super.getAttributes()) {\n+            if (!(obj instanceof ConstantValue)) {\n+                sb.append(\" [\").append(obj).append(\"]\");\n             }\n         }\n-        return buf.toString();\n+        return sb.toString();\n     }\n     \n     static {\n         EMPTY_ARRAY = new Field[0];\n         Field.bcelComparator = (BCELComparator)new Field.Field$1();\n         EMPTY_FIELD_ARRAY = new Field[0];\n     }\n"}]}
