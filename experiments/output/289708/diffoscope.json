{"diffoscope-json-version": 1, "source1": "first/CleaningPathVisitor.class", "source2": "second/CleaningPathVisitor.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,185 +1,182 @@\n-  SHA-256 checksum efcc7a70559f4b3f8bcf09b0e8f26319d650aa79420dc4c02f41b559f720147e\n+  SHA-256 checksum 738f46c1f8dda3113d711f9894e4007ee35dff46fc72521862f7743575295fbf\n   Compiled from \"CleaningPathVisitor.java\"\n public class org.apache.commons.io.file.CleaningPathVisitor extends org.apache.commons.io.file.CountingPathVisitor\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/io/file/CleaningPathVisitor\n   super_class: #40                        // org/apache/commons/io/file/CountingPathVisitor\n   interfaces: 0, fields: 2, methods: 11, attributes: 2\n Constant pool:\n-    #1 = Class              #75           // org/apache/commons/io/file/CleaningPathVisitor\n-    #2 = Methodref          #76.#77       // org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #3 = Class              #78           // java/lang/String\n-    #4 = Methodref          #1.#79        // org/apache/commons/io/file/CleaningPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n-    #5 = Methodref          #76.#80       // org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #6 = Methodref          #40.#81       // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-    #7 = Methodref          #82.#83       // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n+    #1 = Class              #73           // org/apache/commons/io/file/CleaningPathVisitor\n+    #2 = Methodref          #74.#75       // org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #3 = Class              #76           // java/lang/String\n+    #4 = Methodref          #1.#77        // org/apache/commons/io/file/CleaningPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n+    #5 = Methodref          #74.#78       // org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #6 = Methodref          #40.#79       // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+    #7 = Methodref          #80.#81       // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n     #8 = Class              #42           // \"[Ljava/lang/String;\"\n-    #9 = Fieldref           #1.#84        // org/apache/commons/io/file/CleaningPathVisitor.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-   #10 = Methodref          #85.#86       // java/util/Arrays.sort:([Ljava/lang/Object;)V\n-   #11 = Fieldref           #1.#87        // org/apache/commons/io/file/CleaningPathVisitor.skip:[Ljava/lang/String;\n-   #12 = Methodref          #88.#89       // org/apache/commons/io/file/StandardDeleteOption.overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z\n-   #13 = Fieldref           #1.#90        // org/apache/commons/io/file/CleaningPathVisitor.overrideReadOnly:Z\n-   #14 = Fieldref           #91.#92       // org/apache/commons/io/file/PathUtils.EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n-   #15 = Methodref          #1.#93        // org/apache/commons/io/file/CleaningPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n-   #16 = InterfaceMethodref #37.#94       // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n-   #17 = Methodref          #95.#96       // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-   #18 = Methodref          #85.#97       // java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n-   #19 = Methodref          #40.#98       // org/apache/commons/io/file/CountingPathVisitor.equals:(Ljava/lang/Object;)Z\n-   #20 = Methodref          #24.#99       // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #21 = Methodref          #85.#100      // java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n-   #22 = Methodref          #40.#101      // org/apache/commons/io/file/CountingPathVisitor.hashCode:()I\n-   #23 = Methodref          #85.#102      // java/util/Arrays.hashCode:([Ljava/lang/Object;)I\n-   #24 = Class              #103          // java/lang/Object\n-   #25 = Methodref          #104.#105     // java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n-   #26 = Methodref          #95.#106      // java/util/Objects.hash:([Ljava/lang/Object;)I\n-   #27 = Methodref          #40.#107      // org/apache/commons/io/file/CountingPathVisitor.preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #28 = Methodref          #1.#108       // org/apache/commons/io/file/CleaningPathVisitor.accept:(Ljava/nio/file/Path;)Z\n-   #29 = Fieldref           #109.#110     // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-   #30 = Fieldref           #109.#111     // java/nio/file/FileVisitResult.SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n-   #31 = Class              #112          // java/nio/file/LinkOption\n-   #32 = Fieldref           #31.#113      // java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n-   #33 = Methodref          #114.#115     // java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #34 = Methodref          #91.#116      // org/apache/commons/io/file/PathUtils.setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n-   #35 = Methodref          #114.#117     // java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n-   #36 = Methodref          #1.#118       // org/apache/commons/io/file/CleaningPathVisitor.updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n-   #37 = Class              #119          // java/nio/file/Path\n-   #38 = Methodref          #1.#120       // org/apache/commons/io/file/CleaningPathVisitor.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #39 = Methodref          #1.#107       // org/apache/commons/io/file/CleaningPathVisitor.preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #40 = Class              #121          // org/apache/commons/io/file/CountingPathVisitor\n+    #9 = Fieldref           #1.#82        // org/apache/commons/io/file/CleaningPathVisitor.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+   #10 = Methodref          #83.#84       // java/util/Arrays.sort:([Ljava/lang/Object;)V\n+   #11 = Fieldref           #1.#85        // org/apache/commons/io/file/CleaningPathVisitor.skip:[Ljava/lang/String;\n+   #12 = Methodref          #86.#87       // org/apache/commons/io/file/StandardDeleteOption.overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z\n+   #13 = Fieldref           #1.#88        // org/apache/commons/io/file/CleaningPathVisitor.overrideReadOnly:Z\n+   #14 = Fieldref           #89.#90       // org/apache/commons/io/file/PathUtils.EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n+   #15 = Methodref          #1.#91        // org/apache/commons/io/file/CleaningPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n+   #16 = InterfaceMethodref #37.#92       // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n+   #17 = Methodref          #93.#94       // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #18 = Methodref          #83.#95       // java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n+   #19 = Methodref          #40.#96       // org/apache/commons/io/file/CountingPathVisitor.equals:(Ljava/lang/Object;)Z\n+   #20 = Methodref          #24.#97       // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #21 = Methodref          #83.#98       // java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+   #22 = Methodref          #40.#99       // org/apache/commons/io/file/CountingPathVisitor.hashCode:()I\n+   #23 = Methodref          #83.#100      // java/util/Arrays.hashCode:([Ljava/lang/Object;)I\n+   #24 = Class              #101          // java/lang/Object\n+   #25 = Methodref          #102.#103     // java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+   #26 = Methodref          #93.#104      // java/util/Objects.hash:([Ljava/lang/Object;)I\n+   #27 = Methodref          #40.#105      // org/apache/commons/io/file/CountingPathVisitor.preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #28 = Methodref          #1.#106       // org/apache/commons/io/file/CleaningPathVisitor.accept:(Ljava/nio/file/Path;)Z\n+   #29 = Fieldref           #66.#107      // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+   #30 = Fieldref           #66.#108      // java/nio/file/FileVisitResult.SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n+   #31 = Class              #109          // java/nio/file/LinkOption\n+   #32 = Fieldref           #31.#110      // java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n+   #33 = Methodref          #111.#112     // java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #34 = Methodref          #89.#113      // org/apache/commons/io/file/PathUtils.setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n+   #35 = Methodref          #111.#114     // java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n+   #36 = Methodref          #1.#115       // org/apache/commons/io/file/CleaningPathVisitor.updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+   #37 = Class              #116          // java/nio/file/Path\n+   #38 = Methodref          #1.#117       // org/apache/commons/io/file/CleaningPathVisitor.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #39 = Methodref          #1.#105       // org/apache/commons/io/file/CleaningPathVisitor.preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #40 = Class              #118          // org/apache/commons/io/file/CountingPathVisitor\n    #41 = Utf8               skip\n    #42 = Utf8               [Ljava/lang/String;\n    #43 = Utf8               overrideReadOnly\n    #44 = Utf8               Z\n    #45 = Utf8               withBigIntegerCounters\n    #46 = Utf8               ()Lorg/apache/commons/io/file/CountingPathVisitor;\n    #47 = Utf8               Code\n    #48 = Utf8               LineNumberTable\n    #49 = Utf8               withLongCounters\n    #50 = Utf8               <init>\n-   #51 = Class              #122          // org/apache/commons/io/file/Counters$PathCounters\n+   #51 = Class              #119          // org/apache/commons/io/file/Counters$PathCounters\n    #52 = Utf8               PathCounters\n    #53 = Utf8               InnerClasses\n    #54 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n    #55 = Utf8               StackMapTable\n-   #56 = Class              #75           // org/apache/commons/io/file/CleaningPathVisitor\n-   #57 = Class              #122          // org/apache/commons/io/file/Counters$PathCounters\n-   #58 = Class              #123          // \"[Lorg/apache/commons/io/file/DeleteOption;\"\n-   #59 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n-   #60 = Utf8               accept\n-   #61 = Utf8               (Ljava/nio/file/Path;)Z\n-   #62 = Utf8               equals\n-   #63 = Utf8               (Ljava/lang/Object;)Z\n-   #64 = Utf8               hashCode\n-   #65 = Utf8               ()I\n-   #66 = Utf8               preVisitDirectory\n-   #67 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #68 = Class              #124          // java/nio/file/FileVisitResult\n-   #69 = Utf8               Exceptions\n-   #70 = Class              #125          // java/io/IOException\n-   #71 = Utf8               visitFile\n-   #72 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #73 = Utf8               SourceFile\n-   #74 = Utf8               CleaningPathVisitor.java\n-   #75 = Utf8               org/apache/commons/io/file/CleaningPathVisitor\n-   #76 = Class              #126          // org/apache/commons/io/file/Counters\n-   #77 = NameAndType        #127:#128     // bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #78 = Utf8               java/lang/String\n-   #79 = NameAndType        #50:#59       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n-   #80 = NameAndType        #129:#128     // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #81 = NameAndType        #50:#130      // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-   #82 = Class              #42           // \"[Ljava/lang/String;\"\n-   #83 = NameAndType        #131:#132     // clone:()Ljava/lang/Object;\n-   #84 = NameAndType        #133:#42      // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-   #85 = Class              #134          // java/util/Arrays\n-   #86 = NameAndType        #135:#136     // sort:([Ljava/lang/Object;)V\n-   #87 = NameAndType        #41:#42       // skip:[Ljava/lang/String;\n-   #88 = Class              #137          // org/apache/commons/io/file/StandardDeleteOption\n-   #89 = NameAndType        #43:#138      // overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z\n-   #90 = NameAndType        #43:#44       // overrideReadOnly:Z\n-   #91 = Class              #139          // org/apache/commons/io/file/PathUtils\n-   #92 = NameAndType        #140:#123     // EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n-   #93 = NameAndType        #50:#54       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n-   #94 = NameAndType        #141:#142     // getFileName:()Ljava/nio/file/Path;\n-   #95 = Class              #143          // java/util/Objects\n-   #96 = NameAndType        #144:#145     // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-   #97 = NameAndType        #146:#147     // binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n-   #98 = NameAndType        #62:#63       // equals:(Ljava/lang/Object;)Z\n-   #99 = NameAndType        #148:#149     // getClass:()Ljava/lang/Class;\n-  #100 = NameAndType        #62:#150      // equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n-  #101 = NameAndType        #64:#65       // hashCode:()I\n-  #102 = NameAndType        #64:#151      // hashCode:([Ljava/lang/Object;)I\n-  #103 = Utf8               java/lang/Object\n-  #104 = Class              #152          // java/lang/Boolean\n-  #105 = NameAndType        #153:#154     // valueOf:(Z)Ljava/lang/Boolean;\n-  #106 = NameAndType        #155:#151     // hash:([Ljava/lang/Object;)I\n-  #107 = NameAndType        #66:#67       // preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #108 = NameAndType        #60:#61       // accept:(Ljava/nio/file/Path;)Z\n-  #109 = Class              #124          // java/nio/file/FileVisitResult\n-  #110 = NameAndType        #156:#157     // CONTINUE:Ljava/nio/file/FileVisitResult;\n-  #111 = NameAndType        #158:#157     // SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n-  #112 = Utf8               java/nio/file/LinkOption\n-  #113 = NameAndType        #159:#160     // NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n-  #114 = Class              #161          // java/nio/file/Files\n-  #115 = NameAndType        #162:#163     // exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #116 = NameAndType        #164:#165     // setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n-  #117 = NameAndType        #166:#61      // deleteIfExists:(Ljava/nio/file/Path;)Z\n-  #118 = NameAndType        #167:#168     // updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n-  #119 = Utf8               java/nio/file/Path\n-  #120 = NameAndType        #71:#67       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #121 = Utf8               org/apache/commons/io/file/CountingPathVisitor\n-  #122 = Utf8               org/apache/commons/io/file/Counters$PathCounters\n-  #123 = Utf8               [Lorg/apache/commons/io/file/DeleteOption;\n-  #124 = Utf8               java/nio/file/FileVisitResult\n-  #125 = Utf8               java/io/IOException\n-  #126 = Utf8               org/apache/commons/io/file/Counters\n-  #127 = Utf8               bigIntegerPathCounters\n-  #128 = Utf8               ()Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #129 = Utf8               longPathCounters\n-  #130 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-  #131 = Utf8               clone\n-  #132 = Utf8               ()Ljava/lang/Object;\n-  #133 = Utf8               EMPTY_STRING_ARRAY\n-  #134 = Utf8               java/util/Arrays\n-  #135 = Utf8               sort\n-  #136 = Utf8               ([Ljava/lang/Object;)V\n-  #137 = Utf8               org/apache/commons/io/file/StandardDeleteOption\n-  #138 = Utf8               ([Lorg/apache/commons/io/file/DeleteOption;)Z\n-  #139 = Utf8               org/apache/commons/io/file/PathUtils\n-  #140 = Utf8               EMPTY_DELETE_OPTION_ARRAY\n-  #141 = Utf8               getFileName\n-  #142 = Utf8               ()Ljava/nio/file/Path;\n-  #143 = Utf8               java/util/Objects\n-  #144 = Utf8               toString\n-  #145 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-  #146 = Utf8               binarySearch\n-  #147 = Utf8               ([Ljava/lang/Object;Ljava/lang/Object;)I\n-  #148 = Utf8               getClass\n-  #149 = Utf8               ()Ljava/lang/Class;\n-  #150 = Utf8               ([Ljava/lang/Object;[Ljava/lang/Object;)Z\n-  #151 = Utf8               ([Ljava/lang/Object;)I\n-  #152 = Utf8               java/lang/Boolean\n-  #153 = Utf8               valueOf\n-  #154 = Utf8               (Z)Ljava/lang/Boolean;\n-  #155 = Utf8               hash\n-  #156 = Utf8               CONTINUE\n-  #157 = Utf8               Ljava/nio/file/FileVisitResult;\n-  #158 = Utf8               SKIP_SUBTREE\n-  #159 = Utf8               NOFOLLOW_LINKS\n-  #160 = Utf8               Ljava/nio/file/LinkOption;\n-  #161 = Utf8               java/nio/file/Files\n-  #162 = Utf8               exists\n-  #163 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #164 = Utf8               setReadOnly\n-  #165 = Utf8               (Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n-  #166 = Utf8               deleteIfExists\n-  #167 = Utf8               updateFileCounters\n-  #168 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+   #56 = Class              #120          // \"[Lorg/apache/commons/io/file/DeleteOption;\"\n+   #57 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n+   #58 = Utf8               accept\n+   #59 = Utf8               (Ljava/nio/file/Path;)Z\n+   #60 = Utf8               equals\n+   #61 = Utf8               (Ljava/lang/Object;)Z\n+   #62 = Utf8               hashCode\n+   #63 = Utf8               ()I\n+   #64 = Utf8               preVisitDirectory\n+   #65 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #66 = Class              #121          // java/nio/file/FileVisitResult\n+   #67 = Utf8               Exceptions\n+   #68 = Class              #122          // java/io/IOException\n+   #69 = Utf8               visitFile\n+   #70 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #71 = Utf8               SourceFile\n+   #72 = Utf8               CleaningPathVisitor.java\n+   #73 = Utf8               org/apache/commons/io/file/CleaningPathVisitor\n+   #74 = Class              #123          // org/apache/commons/io/file/Counters\n+   #75 = NameAndType        #124:#125     // bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #76 = Utf8               java/lang/String\n+   #77 = NameAndType        #50:#57       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n+   #78 = NameAndType        #126:#125     // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #79 = NameAndType        #50:#127      // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+   #80 = Class              #42           // \"[Ljava/lang/String;\"\n+   #81 = NameAndType        #128:#129     // clone:()Ljava/lang/Object;\n+   #82 = NameAndType        #130:#42      // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+   #83 = Class              #131          // java/util/Arrays\n+   #84 = NameAndType        #132:#133     // sort:([Ljava/lang/Object;)V\n+   #85 = NameAndType        #41:#42       // skip:[Ljava/lang/String;\n+   #86 = Class              #134          // org/apache/commons/io/file/StandardDeleteOption\n+   #87 = NameAndType        #43:#135      // overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z\n+   #88 = NameAndType        #43:#44       // overrideReadOnly:Z\n+   #89 = Class              #136          // org/apache/commons/io/file/PathUtils\n+   #90 = NameAndType        #137:#120     // EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n+   #91 = NameAndType        #50:#54       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n+   #92 = NameAndType        #138:#139     // getFileName:()Ljava/nio/file/Path;\n+   #93 = Class              #140          // java/util/Objects\n+   #94 = NameAndType        #141:#142     // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #95 = NameAndType        #143:#144     // binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n+   #96 = NameAndType        #60:#61       // equals:(Ljava/lang/Object;)Z\n+   #97 = NameAndType        #145:#146     // getClass:()Ljava/lang/Class;\n+   #98 = NameAndType        #60:#147      // equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+   #99 = NameAndType        #62:#63       // hashCode:()I\n+  #100 = NameAndType        #62:#148      // hashCode:([Ljava/lang/Object;)I\n+  #101 = Utf8               java/lang/Object\n+  #102 = Class              #149          // java/lang/Boolean\n+  #103 = NameAndType        #150:#151     // valueOf:(Z)Ljava/lang/Boolean;\n+  #104 = NameAndType        #152:#148     // hash:([Ljava/lang/Object;)I\n+  #105 = NameAndType        #64:#65       // preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #106 = NameAndType        #58:#59       // accept:(Ljava/nio/file/Path;)Z\n+  #107 = NameAndType        #153:#154     // CONTINUE:Ljava/nio/file/FileVisitResult;\n+  #108 = NameAndType        #155:#154     // SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n+  #109 = Utf8               java/nio/file/LinkOption\n+  #110 = NameAndType        #156:#157     // NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n+  #111 = Class              #158          // java/nio/file/Files\n+  #112 = NameAndType        #159:#160     // exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #113 = NameAndType        #161:#162     // setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n+  #114 = NameAndType        #163:#59      // deleteIfExists:(Ljava/nio/file/Path;)Z\n+  #115 = NameAndType        #164:#165     // updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+  #116 = Utf8               java/nio/file/Path\n+  #117 = NameAndType        #69:#65       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #118 = Utf8               org/apache/commons/io/file/CountingPathVisitor\n+  #119 = Utf8               org/apache/commons/io/file/Counters$PathCounters\n+  #120 = Utf8               [Lorg/apache/commons/io/file/DeleteOption;\n+  #121 = Utf8               java/nio/file/FileVisitResult\n+  #122 = Utf8               java/io/IOException\n+  #123 = Utf8               org/apache/commons/io/file/Counters\n+  #124 = Utf8               bigIntegerPathCounters\n+  #125 = Utf8               ()Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #126 = Utf8               longPathCounters\n+  #127 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+  #128 = Utf8               clone\n+  #129 = Utf8               ()Ljava/lang/Object;\n+  #130 = Utf8               EMPTY_STRING_ARRAY\n+  #131 = Utf8               java/util/Arrays\n+  #132 = Utf8               sort\n+  #133 = Utf8               ([Ljava/lang/Object;)V\n+  #134 = Utf8               org/apache/commons/io/file/StandardDeleteOption\n+  #135 = Utf8               ([Lorg/apache/commons/io/file/DeleteOption;)Z\n+  #136 = Utf8               org/apache/commons/io/file/PathUtils\n+  #137 = Utf8               EMPTY_DELETE_OPTION_ARRAY\n+  #138 = Utf8               getFileName\n+  #139 = Utf8               ()Ljava/nio/file/Path;\n+  #140 = Utf8               java/util/Objects\n+  #141 = Utf8               toString\n+  #142 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+  #143 = Utf8               binarySearch\n+  #144 = Utf8               ([Ljava/lang/Object;Ljava/lang/Object;)I\n+  #145 = Utf8               getClass\n+  #146 = Utf8               ()Ljava/lang/Class;\n+  #147 = Utf8               ([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+  #148 = Utf8               ([Ljava/lang/Object;)I\n+  #149 = Utf8               java/lang/Boolean\n+  #150 = Utf8               valueOf\n+  #151 = Utf8               (Z)Ljava/lang/Boolean;\n+  #152 = Utf8               hash\n+  #153 = Utf8               CONTINUE\n+  #154 = Utf8               Ljava/nio/file/FileVisitResult;\n+  #155 = Utf8               SKIP_SUBTREE\n+  #156 = Utf8               NOFOLLOW_LINKS\n+  #157 = Utf8               Ljava/nio/file/LinkOption;\n+  #158 = Utf8               java/nio/file/Files\n+  #159 = Utf8               exists\n+  #160 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #161 = Utf8               setReadOnly\n+  #162 = Utf8               (Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n+  #163 = Utf8               deleteIfExists\n+  #164 = Utf8               updateFileCounters\n+  #165 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n {\n   private final java.lang.String[] skip;\n     descriptor: [Ljava/lang/String;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final boolean overrideReadOnly;\n     descriptor: Z\n@@ -504,8 +501,8 @@\n       LineNumberTable:\n         line 36: 0\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"CleaningPathVisitor.java\"\n InnerClasses:\n-  public static #52= #51 of #76;          // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n+  public static #52= #51 of #74;          // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n"}]}
