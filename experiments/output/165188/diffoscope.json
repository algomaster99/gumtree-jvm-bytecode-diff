{"diffoscope-json-version": 1, "source1": "first/Segment.class", "source2": "second/Segment.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -14,14 +14,15 @@\n import java.io.OutputStream;\n import java.io.DataOutputStream;\n import java.io.ByteArrayOutputStream;\n import org.apache.commons.compress.harmony.pack200.Pack200Exception;\n import java.io.IOException;\n import java.util.Set;\n import java.util.function.Consumer;\n+import java.util.Objects;\n import java.util.HashSet;\n import org.apache.commons.compress.harmony.unpack200.bytecode.CPClass;\n import org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8;\n import java.util.Iterator;\n import org.apache.commons.compress.harmony.unpack200.bytecode.ClassConstantPool;\n import org.apache.commons.compress.harmony.unpack200.bytecode.InnerClassesAttribute;\n import org.apache.commons.compress.harmony.unpack200.bytecode.CPMethod;\n@@ -224,15 +225,18 @@\n             if (isInResult.add(element)) {\n                 result.add(element);\n             }\n             else {\n                 duplicates.add(element);\n             }\n         }\n-        duplicates.forEach(result::remove);\n+        final List<IcTuple> list = duplicates;\n+        final List<IcTuple> obj = result;\n+        Objects.requireNonNull((ArrayList)obj);\n+        list.forEach(obj::remove);\n         return result;\n     }\n     \n     private void readSegment(final InputStream in) throws IOException, Pack200Exception {\n         this.log(2, \"-------\");\n         (this.cpBands = new CpBands(this)).read(in);\n         (this.attrDefinitionBands = new AttrDefinitionBands(this)).read(in);\n"}]}
