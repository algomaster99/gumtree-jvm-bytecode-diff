{"diffoscope-json-version": 1, "source1": "first/CPConstant.class", "source2": "second/CPConstant.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -3,45 +3,42 @@\n \n import java.util.Objects;\n \n public abstract class CPConstant extends ConstantPoolEntry\n {\n     private final Object value;\n     \n-    public CPConstant(final byte tag, final Object value, final int globalIndex) {\n-        super(tag, globalIndex);\n-        this.value = Objects.requireNonNull(value, \"value\");\n+    public CPConstant(final byte b, final Object obj, final int n) {\n+        super(b, n);\n+        this.value = Objects.requireNonNull(obj, \"value\");\n     }\n     \n-    public boolean equals(final Object obj) {\n-        if (this == obj) {\n+    public boolean equals(final Object o) {\n+        if (this == o) {\n             return true;\n         }\n-        if (obj == null) {\n+        if (o == null) {\n             return false;\n         }\n-        if (this.getClass() != obj.getClass()) {\n+        if (this.getClass() != o.getClass()) {\n             return false;\n         }\n-        final CPConstant other = (CPConstant)obj;\n+        final CPConstant cpConstant = (CPConstant)o;\n         if (this.value == null) {\n-            if (other.value != null) {\n+            if (cpConstant.value != null) {\n                 return false;\n             }\n         }\n-        else if (!this.value.equals(other.value)) {\n+        else if (!this.value.equals(cpConstant.value)) {\n             return false;\n         }\n         return true;\n     }\n     \n     public int hashCode() {\n-        final int PRIME = 31;\n-        int result = 1;\n-        result = 31 * result + ((this.value == null) ? 0 : this.value.hashCode());\n-        return result;\n+        return 31 * 1 + ((this.value == null) ? 0 : this.value.hashCode());\n     }\n     \n     protected Object getValue() {\n         return this.value;\n     }\n }\n"}]}
