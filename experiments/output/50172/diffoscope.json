{"diffoscope-json-version": 1, "source1": "first/JsonFactory$Feature.class", "source2": "second/JsonFactory$Feature.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -8,29 +8,36 @@\n     public static final enum Feature INTERN_FIELD_NAMES;\n     public static final enum Feature CANONICALIZE_FIELD_NAMES;\n     public static final enum Feature FAIL_ON_SYMBOL_HASH_OVERFLOW;\n     public static final enum Feature USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING;\n     public static final enum Feature CHARSET_DETECTION;\n     private final boolean _defaultState;\n     \n-    public static Feature valueOf(final String name) {\n-        return Enum.valueOf(Feature.class, name);\n+    static {\n+        Feature.INTERN_FIELD_NAMES = new Feature(\"INTERN_FIELD_NAMES\", 0, true);\n+        Feature.CANONICALIZE_FIELD_NAMES = new Feature(\"CANONICALIZE_FIELD_NAMES\", 1, true);\n+        Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW = new Feature(\"FAIL_ON_SYMBOL_HASH_OVERFLOW\", 2, true);\n+        Feature.USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING = new Feature(\"USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING\", 3, true);\n+        Feature.CHARSET_DETECTION = new Feature(\"CHARSET_DETECTION\", 4, true);\n+        Feature.ENUM$VALUES = new Feature[] { Feature.INTERN_FIELD_NAMES, Feature.CANONICALIZE_FIELD_NAMES, Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW, Feature.USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING, Feature.CHARSET_DETECTION };\n     }\n     \n     public static int collectDefaults() {\n         int flags = 0;\n-        for (final Feature f : values()) {\n+        Feature[] values;\n+        for (int length = (values = values()).length, i = 0; i < length; ++i) {\n+            final Feature f = values[i];\n             if (f.enabledByDefault()) {\n                 flags |= f.getMask();\n             }\n         }\n         return flags;\n     }\n     \n-    private Feature(final boolean defaultState) {\n+    private Feature(final String name, final int ordinal, final boolean defaultState) {\n         this._defaultState = defaultState;\n     }\n     \n     public boolean enabledByDefault() {\n         return this._defaultState;\n     }\n     \n@@ -38,16 +45,11 @@\n         return (flags & this.getMask()) != 0x0;\n     }\n     \n     public int getMask() {\n         return 1 << this.ordinal();\n     }\n     \n-    static {\n-        Feature.INTERN_FIELD_NAMES = new Feature(\"INTERN_FIELD_NAMES\", 0, true);\n-        Feature.CANONICALIZE_FIELD_NAMES = new Feature(\"CANONICALIZE_FIELD_NAMES\", 1, true);\n-        Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW = new Feature(\"FAIL_ON_SYMBOL_HASH_OVERFLOW\", 2, true);\n-        Feature.USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING = new Feature(\"USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING\", 3, true);\n-        Feature.CHARSET_DETECTION = new Feature(\"CHARSET_DETECTION\", 4, true);\n-        Feature.$VALUES = new Feature[] { Feature.INTERN_FIELD_NAMES, Feature.CANONICALIZE_FIELD_NAMES, Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW, Feature.USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING, Feature.CHARSET_DETECTION };\n+    public static Feature valueOf(final String name) {\n+        return Enum.valueOf(Feature.class, name);\n     }\n }\n"}]}
